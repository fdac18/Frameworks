[{"body": "holds ready event nt happened already fiddle code runs ready event already passed", "d": "10/2018"}, {"body": "thank dave right nt notice jsfiddle works try standalone html works expected", "d": "10/2018"}, {"body": "thanks report caused cc result setter reading style requires browser recompute styles nt done browser would simply ignore first calls reset properties since set different values shortly note problem already exists jquery although limited way check always done usually amp similar apis see example jquery issue larger impact affects bare setter though think may hide check check got another usage see mentioned commit could first check currently named way commit query even issue imo performance reasons stands calling setter repeatedly cause layout thrashing", "d": "10/2018"}, {"body": "hmm queried needed though either support test fails need adjust etc layout thrashing verified commit causing issue though investigating", "d": "10/2018"}, {"body": "ok issue comparison layout thrashing end seems", "d": "10/2018"}, {"body": "pr setting milestone", "d": "10/2018"}, {"body": "using without cash error appears time time see console", "d": "9/2018"}, {"body": "issue tracked", "d": "9/2018"}, {"body": "support forum", "d": "9/2018"}, {"body": "able recreate similar problem using toggle instead fadetoggle link test case", "d": "9/2018"}, {"body": "yes seems toggle functions slidetoggle", "d": "9/2018"}, {"body": "looked meeting noticed indeed working expected appearance script text confusing fact sibling script element fiddle next divs script elements visible default obviously animated like elements use cases demos documentation something want disable particular case fixed adding selector siblings", "d": "10/2018"}, {"body": "proper place ask programming help", "d": "9/2018"}, {"body": "thanks opening issue please provide working test case help us assess issue", "d": "9/2018"}, {"body": "syntax error dreamweaver wrong using catch method unquoted perfectly fine supported browsers support syntax perhaps using older version said eslint config currently specifies due ie wonder nt require us quote method", "d": "9/2018"}, {"body": "hi timmy demo change jquery versions check background color second li tested toshiba windows firefox", "d": "9/2018"}, {"body": "correct", "d": "9/2018"}, {"body": "seems nt work code nt run overlooked line reading height lines problems event shortcut deprecated removed jquery method used completely different purposes one better remove ambiguity kept purpose loading html content ajax inserting dom documented able use instead fiddle seems work fine making change background color second li looks using jquery edge issues like better fleshed stackoverflowcom jquery gitter reporting", "d": "9/2018"}, {"body": "great stackoverflow question bug report", "d": "9/2018"}, {"body": "jquery forbid names passed ajax sure misconfigured something server side file broken also hard us anything without working test case therefore going close issue provide working test case reopen", "d": "9/2018"}, {"body": "jquery forbid names passed ajax sure misconfigured something server side file broken tested two different servers file broken renaming file something else magically solves issue also hard us anything without working test case therefore going close issue provide working test case reopen nt know make test case ajax request file server prevent coors restrictions nt think bug stupid configure server wo nt bother report bug thanks appreciation efforts", "d": "9/2018"}, {"body": "nt know make test case ajax request file server prevent coors restrictions something easy jsfiddle etc even zip file files packed run via static file server would enough nt think bug stupid configure server would never claim thing volunteers working jquery mostly free time time debug issues limited therefore need test cases quickly evaluate might issue side also happened misconfigure web server times think made anyone else situation stupid", "d": "9/2018"}, {"body": "thanks clarification tested two apache servers jsfiddle jsbin even requested file missing bug observed developer tools", "d": "9/2018"}, {"body": "testcasezip", "d": "9/2018"}, {"body": "works least description", "d": "9/2018"}, {"body": "checked nt load indeed jquery though ad blocker ublock origin also see blocked status column confirm experience well aloso", "d": "9/2018"}, {"body": "confirm experience well aloso yes reason ublock jquery", "d": "9/2018"}, {"body": "cool glad know going", "d": "9/2018"}, {"body": "think expected since pipe sync async need use hundreds promises per second probably nt right tool job", "d": "9/2018"}, {"body": "exemple taken extreme better illustrate issue made new fiddle iterations slowdown still clearly visible case drawing canvas within callback causing lags", "d": "9/2018"}, {"body": "async method going slower try native promise may faster stay pipe works", "d": "9/2018"}, {"body": "use jquery deferreds worry browser support moment keep using pipe workaround changing deprecated since deprecation notice jquery deferredpipe method deprecated deferredthen method replaces used instead eventually get removed hit issue", "d": "9/2018"}, {"body": "dave pointed async callback intentionally delayed next event loop frame browser control happens think usually around rest code seems fast profiling fiddle prefer code run synchronously always using promises start resolved probably nt need promises", "d": "9/2018"}, {"body": "thanks opening issue however better suited jquery datepicker plugin repo stackoverflowcom", "d": "9/2018"}, {"body": "seems valid however easy workaround wrap value quotes", "d": "9/2018"}, {"body": "know seen reports lazy look closed issues css spec says attribute values must identifiers strings identifiers nt quoted strings", "d": "9/2018"}, {"body": "identifiers escaped characters case escaping work", "d": "9/2018"}, {"body": "actually fixed sizzle master need update sizzle jquery", "d": "9/2018"}, {"body": "provide test case", "d": "9/2018"}, {"body": "trying download javascript resource ifmodified caching mode using following code block however nt work chrome chrome never send ifnonemodifiedifmodifiedsince header server server always send back ok status jquerycachedscript function url options options extend options datatype script cache false ifmodified true async false url url return jqueryajax options cachedscript url done function script textstatus consolelog textstatus", "d": "9/2018"}, {"body": "hi guys update issue", "d": "9/2018"}, {"body": "could link commit changed behavior version afaict test passing code using surl url without cache buster also created fiddle requested css file twice headers present request fiddle sends etags note jquery saves lastmodified etag noncached url closing worksforme adequate test case proves issue", "d": "9/2018"}, {"body": "jquery nt provide localization features also nt display messages user issues must lie different code", "d": "9/2018"}, {"body": "related jquery plain javascript behave way browsers batch style updates effect classattribute changes performance reasons want force browser recompute styles middle changes need query something require browser recalculate styles case might better define complex animation please look help stack overflow though thanks", "d": "8/2018"}, {"body": "removed comment purpose see many problems including comment one different cdns use different file names comment would different different cdns kills security features like subresource integrity still attach map manually via devtools least chrome supports", "d": "8/2018"}, {"body": "thanks nt know chrome good day", "d": "8/2018"}, {"body": "whoa reminded never published note incorrect map file", "d": "8/2018"}, {"body": "thanks report amp one complex jquery cssrelated features lot scenarios handle especially connection elements visible hidden due default values inline styles conditions like attribute changes jquery tried make methods way simpler jquery basically relying inline styles alas nt work people expected called element hidden via stylesheets actually show element still nt think want complicate implementation modifying element attributes working elements hidden priority also scope unfortunately closing issue feel free elaborate thread", "d": "8/2018"}, {"body": "hm see calling inside switching hidden shown status would complicate implementation saying put back element called setting would sufficient saying removed element shown", "d": "8/2018"}, {"body": "definition hidden meant address css property always way try incorporate attribute sometimes making things complex causing inconsistent edge cases example start clearing showing would nt next logical step pay attention deciding whether something hidden nt work needs easy create plugin lines implement behavior way get want existing users code broken", "d": "9/2018"}, {"body": "one jquery design decisions validate input would otherwise get way larger amp slower want parameter validation consider using typescript contains jquery type definitions package users nt pay cost type information disappears compile time raised repeatedly past find duplicates request", "d": "8/2018"}, {"body": "nt think good design decision error obscure fix nt want add validation better error messages loop input expected say loop character like loop would", "d": "8/2018"}, {"body": "problem lots apis may behave unexpectedly blow provide incorrect input making fail helpful error messages would increase library size significantly especially jquery signatures really dynamic accept various parameter tuples said typescript flow friends want catch type errors earlier maybe community linters would catch sure whatever happens nt want send code endusers contained developers machines nt think able work anything like foreseeable future", "d": "8/2018"}, {"body": "keep nonminified version development version anyway still nt responded original alternate loop character", "d": "8/2018"}, {"body": "keep nonminified version development version anyway lots people import jquery npm bundle amp minify fan making production version different development one reason still nt responded original alternate loop character think likely mask errors someone mistakenly provide string instead array one string also iterating string letters common use case nt found useful much", "d": "8/2018"}, {"body": "thany please read docs description generic iterator function used seamlessly iterate objects arrays arrays arraylike objects length property function arguments object iterated numeric index objects iterated via named properties primitives strings objects", "d": "8/2018"}, {"body": "also iterating string letters common use case nt found useful much primitives strings objects fact matter strings iterable simple loop prove", "d": "8/2018"}, {"body": "talking javascript loops jquery method generally iterate string using method overkill think", "d": "8/2018"}, {"body": "talking vanilla forloops demonstrate strings iterable like arrays top docs clearly states arrays arraylike objects length property function arguments object iterated numeric index includes strings strings arraylike length property characters accessed index nt going iterate strings say docs arrays arraylike objects length property function arguments object except strings iterated numeric index ps previous comment meant say iterate strings whereas wo nt way meant oops", "d": "9/2018"}, {"body": "understand talking altering jquery handles different types might offer gap current functionality proposed functionality nt large enough warrant overhead proposed functionality could easily afforded overhead negligible developer significant library due error catching type checking etc previously noted see", "d": "9/2018"}, {"body": "cost changing testing supporting documenting something something makes sense might agreeable nt think makes sense iterate string cases someone tries jquery made mistake sure make something define always split chars get iterable array really want", "d": "9/2018"}, {"body": "think starting repeat point nt make iterate strings per se make break horrificlooking way string passed clarifying documentation types accepted exactly would perfectly reasonable compromise", "d": "9/2018"}, {"body": "thany documentation define types accepted see states objects arraylikeobjects accepted", "d": "9/2018"}, {"body": "string arraylike object", "d": "9/2018"}, {"body": "javascript bug feature", "d": "9/2018"}, {"body": "thany defined either true javascript array javascript object contains nonnegative integer h property index properties link type definition definition", "d": "9/2018"}, {"body": "string javascript object contains nonnegative integer property index properties documentation extended say something like well except strings addition dmethvin nt matter bug feature dark energy pure magic part language", "d": "10/2018"}, {"body": "string object primitive", "d": "10/2018"}, {"body": "depends ask definitely object might call class static instance properties amp functions string literal properties amp functions definitely stuff like typically possible primitive values however respond one could reason behaves weirdly nt inherit nt make less object least mind yes depends look people might say everything object javascript full oo language people might say javascript primitive values programming languages always worked", "d": "10/2018"}, {"body": "reason works autoboxing method really invoked primitive autoboxed equivalent object instance nt change fact object nt heard primitives described objects javascript literature sure take definition incorrect", "d": "10/2018"}, {"body": "let amend say strings considered arraylike objects thany welcome file pr clarify", "d": "10/2018"}, {"body": "dmethvin need similar note amp btw says everything javascript object interesting twist discussion", "d": "10/2018"}, {"body": "nt heard primitives described objects javascript literature sure take definition incorrect useful describe objects even instantiating true objects thing eg widely discouraged string literal already object far observe javascript magic going makes string number boolean literals behave way iyam nt take away fact everything object strings behave like objects properties functions iterable extensible also syntax sugar compiler magic also immutable different true classical oo languages like java c fact javascript weird string wrapper class safely ignored care useless confusing also provides ambiguous input discussion", "d": "10/2018"}, {"body": "using decompress file browser error message copypastaed seem like browser error provide link copy exact bits get cause error", "d": "8/2018"}, {"body": "hi dave error azure availability ping test web browser seems loading jquery without issues atleast computer east us looks like compressed version expected returned back cdn whereas uncompressed file returned issue seem started est nt exact bits got microsoft support cdn serving returning incorrect data precisely error indicates magic number gzip header correct make sure passing gzip stream first time seen odd errors cdns unfortunately issue request gzip file successfully returns response header states content gzipped actually look hex return however file compressed file compressed first two bytes return value supposed contain magic number gzip returned instead cdn uncompressed instead report error testing get file back header says gzip detect report error web browsers forgiving regard often ignore error occurs retry read text field therefore failed test affect web browser clients hope helps fri aug pm dave methvin notifications githubcom wrote using decompress file browser error message copypastaed seem like browser error provide link copy exact bits get cause error receiving authored thread reply email directly view github mute thread chandra venkataraman lead net developer us jellyfishnet global boutique agency", "d": "8/2018"}, {"body": "exactly issue chance solving issue", "d": "8/2018"}, {"body": "yes solve jquery update server return correct data gzip iisue codejquerycom cdn minutes ago awaiting moderation underlying issue cdn returning incorrect response header source server cdn queries quite easy see tool like fiddler query library pass gzip header upper case perfectly legal per rfc see response indicates zipped content compressed underlying problem example get host codejquerycom connection keepalive upgradeinsecurerequests useragent windows nt khtml like gecko accept texthtml applicationxhtmlxml applicationxml imagewebp imageapng acceptencoding gzip acceptlanguage enus en returns ok date tue aug gmt connection keepalive acceptranges bytes contentencoding gzip contentlength contenttype applicationjavascript lastmodified fri oct gmt server nginx etag w cachecontrol accesscontrolalloworigin vary acceptencoding xhw noticed content returned plain text compressed gzip contentencoding specifies causes error mentioned original question return zipped promised source server fairly recent changeproblem past return data compressed fix ensure source cdn jquery server returning compressed data says cdn adding header content compressed gzip", "d": "8/2018"}, {"body": "query library pass gzip header upper case jsandersrocks could provide source claim header values case insensitive something work forwarding issue cdn provider", "d": "8/2018"}, {"body": "vchandrasn confirm test described also sends value uppercase know talking two different issues", "d": "8/2018"}, {"body": "hi michal could see ping test send acceptencoding header sends contentencoding header value gzip thanks chandra wed aug micha\u0142 go\u0142\u0119biowskiowczarek lt notifications githubcom wrote vchandrasn confirm test described also sends acceptencoding value gzip uppercase know talking two different issues receiving mentioned reply email directly view github mute thread chandra venkataraman lead net developer us jellyfishnet global boutique agency", "d": "8/2018"}, {"body": "vchandrasn server send together response asking sending request server specifying", "d": "8/2018"}, {"body": "right sent response header information indeed sending acceptencoding header gzip deflate br value wed aug micha\u0142 go\u0142\u0119biowskiowczarek lt notifications githubcom wrote vchandrasn contentencoding server send together response asking youre sending request server specifying acceptencoding contentencoding receiving mentioned reply email directly view github mute thread chandra venkataraman lead net developer us jellyfishnet global boutique agency", "d": "8/2018"}, {"body": "mgol absolutely open postman fiddler composer fiddler example send request following headers get host codejquerycom connection keepalive upgradeinsecurerequests useragent windows nt khtml like gecko accept texthtml applicationxhtmlxml applicationxml imagewebp imageapng acceptencoding gzip acceptlanguage enus en inspect return see even though contentencoding indicates gzip reality returned plain text compressed ok compress return value however server must set contentencoding gzip header feel free email jsanders microsoft dot com need ps recent issue things worked fine also change request lower case gzip get correct value", "d": "8/2018"}, {"body": "mgol also working jsandersrocks looking section last paragraph states explicitly edit also found section referenced first paragraph section acceptencoding acceptencoding acceptencoding header field used user agents indicate response contentcodings section acceptable response identity token used synonym encoding order communicate encoding preferred content codings contentcoding values caseinsensitive ought registered within http content coding registry defined section used acceptencoding section contentencoding section header fields", "d": "8/2018"}, {"body": "debugthings thank follow request cdn provider", "d": "8/2018"}, {"body": "issue confirmed content coding values contents caseinsensitive per rfc codejquerycom sends response encoding response variants lowercase lack encoding also including transcripts comments added sh curl sv head c xxd trying connected codejquerycom port get host codejquerycom useragent accept lt ok lt date fri aug gmt lt connection keepalive lt acceptranges bytes lt contentlength unencoded size lt contenttype applicationjavascript lt lastmodified fri may gmt lt server nginx lt etag w lt cachecontrol lt cachecontrol public lt accesscontrolalloworigin lt vary acceptencoding lt xhw lt bytes data jquery unencoded response failed writing body closing connection sh curl sv h acceptencoding gzip head c xxd trying connected codejquerycom port get host codejquerycom useragent accept acceptencoding gzip request gzipped response lt ok lt date fri aug gmt lt connection keepalive lt acceptranges bytes lt contentencoding gzip response claimed gzipped lt contentlength compressed size lt contenttype applicationjavascript lt lastmodified fri may gmt lt server nginx lt etag w lt cachecontrol lt accesscontrolalloworigin lt vary acceptencoding lt xhw lt bytes data response appears gzipped cf failed writing body closing connection sh curl sv h acceptencoding gzip head c xxd trying connected codejquerycom port get host codejquerycom useragent accept acceptencoding gzip unusual request gzipped response lt ok lt date fri aug gmt lt connection keepalive lt acceptranges bytes lt contentencoding gzip response claimed gzipped lt contentlength size big unencoded response lt contenttype applicationjavascript lt lastmodified fri may gmt lt server nginx lt etag w lt cachecontrol lt accesscontrolalloworigin lt vary acceptencoding lt xhw lt bytes data jquery nongzipped gt failed writing body closing connection", "d": "8/2018"}, {"body": "moved issue cdn repo addressed", "d": "9/2018"}, {"body": "right supported chromeish browsers behavior would different across platforms one problem see fires resize event assume case addition using viewport user would need us use well order charade effective", "d": "8/2018"}, {"body": "thanks suggestion keep mind refrain using propagates browsers", "d": "8/2018"}, {"body": "thank opening issue use uglify minify jquery way uglify mangles variable names make file short possible top head sure could get completely idempotent minification process point right direction telling look uglify documentation disable certain optimizations", "d": "8/2018"}, {"body": "thanks quick response notice run multiple times row output always even run different computers pointing branch commit output files identical expecting point tag get output checkedin point available download jquery seems differences output file checkedin file improvement minification process like using less variables example pasted improvements coming dist files produces different npm packages improvements disabled command line option thank", "d": "8/2018"}, {"body": "files may match dependencies subdependencies used build minified files changed since release still within version range specified recent versions generate file retrieves exact versions used build increases odds get result however jquery old file committed time release provide", "d": "8/2018"}, {"body": "got thanks clarification", "d": "8/2018"}, {"body": "dmethvin latest jquery versions nt committed either various issues around crossplatform mismatches modified leaving repo dirty state etc", "d": "8/2018"}, {"body": "perhaps would nt bad idea add tags way people would able recreate build may matter peopleorgs wanting verify nothing bad sneaked compiled file", "d": "8/2018"}, {"body": "oh yeah forgotten whole mess seem like would handy tagged versions along note distribution repo explaining upsidesdownsides", "d": "8/2018"}, {"body": "still ca nt guarantee builds idempotent even even packagelock committed uglify", "d": "8/2018"}, {"body": "timmywil true understand randomness uglify build tag currently use different version due lack lockfile", "d": "8/2018"}, {"body": "fair enough would easy add lock file dist release", "d": "8/2018"}, {"body": "blog post highlights major changes constitutes major change matter opinion important part changes like removal methods deferred returned clearly documented jquery documentation change highlighted yellow think enough", "d": "8/2018"}, {"body": "also tested chrome version official build macos high sierra chrome version official build windows issue", "d": "8/2018"}, {"body": "thanks opening issue however due native browser behavior something fix recommend avoiding input names may conflict selectors input names become properties form element replacing native property generally bad practice", "d": "8/2018"}, {"body": "hi thanks recommendation please note name property value id form serialized key send backend replacing native property", "d": "8/2018"}, {"body": "tale old time sucom jquery see page see also", "d": "8/2018"}, {"body": "thanks got", "d": "8/2018"}, {"body": "decided fix test since occurs one old ios version purpose test", "d": "8/2018"}, {"body": "selector officially supported jquery work qsa path taken first example check team see aware bugs selector currently supported browsers might able add support tell testing hover tricky", "d": "8/2018"}, {"body": "discussed meeting agreed implementation selector pretty said plan rewrite sizzle way relies much heavily would provide support close covered sizzle roadmap", "d": "8/2018"}, {"body": "would nt support sizzle selectors like would nt work end story however selector entirely supported trivial make work multiple elements actually currently using customized version jquery solves problem completely bypass sizzle selector works", "d": "8/2018"}, {"body": "selectors like hover div would nt work end story actually rewrite would", "d": "8/2018"}, {"body": "thanks opening issue however actually references particular elements may may get cloned depending way element gets appended example valid usage fact shows byproduct implementation words nt try append element multiple places new element must created appendprepend accomplish want", "d": "8/2018"}, {"body": "timmywil thank reply look know references particular elements remove methods one element inserted method yet though pressed button many times", "d": "8/2018"}, {"body": "multiple one docs append say important one target element however cloned copies inserted element created target except last one code moving span around body never creates clone", "d": "8/2018"}, {"body": "thanks opening issue however works", "d": "8/2018"}, {"body": "thank issue however jquery automatically processes data query strings sent get requests likely still common use case besides changing defaults options would break lot code", "d": "8/2018"}, {"body": "sorry fail see something like could break nt even work first place nt mean change default settings processdata amp contenttype false meant check whatever data correct thing", "d": "8/2018"}, {"body": "default would changed nt want set since default however rather removing contenttype header completely could set appropriate default behavior try convert data string like long time could start adding exceptions probably would nt stop formdata breaking existing code comes plugins custom methods handle correct options types requests would simpler added magic needed ajax prettier eg besides seems going use may well use", "d": "8/2018"}, {"body": "could set contenttype appropriate multipartformdata nt set request header since boundary added something xhr fetch automatically setting content would break backend code know read boundary think set request content type data formdata let xhr handle default behavior try convert data string like long time well world changing think laking behind grate try convert everything string everything casted string becomes along blobfiledataview typed arrays could start adding exceptions think please nt add something like good enough ppl could stop write long version go back simpler sort version holding back please nt add something else blob file typedarrays also cuz would much handle put mind besides seems going use formdata may well use fetch talking nt use jquery longer get people want help fetch api always option since even fetch api microsoft still going support something follows rule even still today breaking existing code comes still nt see breaking changes would added functionality formdata instance avoid setting contenttype nt try process string simple would ever good default thing trying cast formdata blob typed arrays string never default thing type data might missing something nt used jquery couple years might give code example next major release see similar question like pop time send formdata objects ajaxrequests jquery sending multipartformdata jqueryajax use formdata ajax file upload", "d": "8/2018"}, {"body": "nt suggesting core method suggested said would plugin function user code answers questions indicate easily addressed without additions jquery core nevertheless since feel strongly feel free submit pr happy review otherwise likely stay wontfix probably ajaxprefilter rick suggested old ticket", "d": "8/2018"}, {"body": "go ahead answer still nt see breaking changes would added functionality would added functionality ca nt always predict change like affect millions lines code wild would actually result breakages nt know seen behavior changes affected users ways never expected extra careful definitely change behavior synonymous breaking change library lot users said sometimes deem necessary introduce change major version nt seem critical enough warrant change best way persuade core team code", "d": "8/2018"}, {"body": "nt suggesting core method suggested sendformdata said would plugin function user code ah misstake answers questions indicate easily addressed without additions jquery core imo like ask quest nt make easy played around prefilter easy cast error first thing happens guess need make core changes let slide js ajaxprefilter function args write potential fix never logs anything consolelog args ajax url method post data new formdata", "d": "8/2018"}, {"body": "right prefilters seem applied data converted following blocks could perhaps swapped ajaxjs line ca nt think reason would problem wonder jaubourg dmethvin mgol markelog might js convert data already string sdata amp amp sprocessdata amp amp typeof sdata string sdata jqueryparam sdata straditional", "d": "8/2018"}, {"body": "reopening investigate possibility prefilter least investigate possibility swapping blocks code enable user prefilters get data goes", "d": "8/2018"}, {"body": "thanks", "d": "8/2018"}, {"body": "discussed meeting open exploring first step swap blocks mentioned see tests break", "d": "8/2018"}, {"body": "ok able reproduce div testing inside table top value returned remove table returned top page switch jquery returned top page cases may cases produce issue tables", "d": "8/2018"}, {"body": "looks like issue still open", "d": "8/2018"}, {"body": "agreed addressed", "d": "8/2018"}, {"body": "please ask questions forum stackoverflow agree bug make issue", "d": "8/2018"}, {"body": "never asked question asked coding den near like forum", "d": "8/2018"}, {"body": "place report bugs jquery library look like bug library visit forum help understand happening", "d": "8/2018"}, {"body": "okay", "d": "8/2018"}, {"body": "handler requires use passive listeners appears slickjs jquery issue background passive listeners see please add comments", "d": "8/2018"}, {"body": "problem point get", "d": "8/2018"}, {"body": "value reported guaranteed accurate element parent hidden get accurate value ensure element visible using", "d": "8/2018"}, {"body": "oh ha missed display none says", "d": "8/2018"}, {"body": "guaranteed accurate imho difference reported height pixel case completely physical impossible", "d": "8/2018"}, {"body": "string parameter incorrect input params need objects first one also", "d": "8/2018"}, {"body": "yes string parameter incorrect instead throwing error returning first parameter unpredictable result example case extend name john true method return first argument object name john think fixed", "d": "8/2018"}, {"body": "jquery nt validate input public api get much bigger amp slower started care validation consider using typescript type definitions jquery throw error try use incorrectly", "d": "8/2018"}, {"body": "disregard notice may repost provide example", "d": "8/2018"}, {"body": "look like jquery bug report mean qunit", "d": "8/2018"}, {"body": "totally meant qunit", "d": "8/2018"}, {"body": "thanks report time nt work radios well required us revert fix pr ideal otherwise breaking change old pr fixes quite large holding accepting since plan big event refactor jquery likely make use native event system need see feasible passing data new model nt add revert shortly thereafter right description situation dmethvin leave issue open figure story jquery getting rereported lot compared issues people really running frequently", "d": "7/2018"}, {"body": "document nt work even deprecate remove eventually suspect people using discovered code snippet elsewhere internet uses minj wherehow learn feature would able use something simple like closure pass data one features think prevent us leaning heavily native event plumbing get second argument shim native handler jquery one", "d": "7/2018"}, {"body": "dmethvin docs course would think people always turn first looking information wink one may want use click listener completely different js file closure always valid solution", "d": "7/2018"}, {"body": "thanks issue however repo support questions find help stackoverflowcom gitter", "d": "7/2018"}, {"body": "thanks opening issue however rather leave issues open action items reopen valid reduced test case", "d": "7/2018"}, {"body": "thanks report lot possible csslike syntaxes could want like ca nt support semicolon part value allowing end might confusing nt think want make syntax ambiguous already", "d": "7/2018"}, {"body": "mgol thanks answer warning console appreciated saving user time maybe", "d": "7/2018"}, {"body": "thanks issue however warning like would warranted happened lot maybe even would require parsing value could slow things significantly semicolon obviously part value think best document honestly border examples sufficient", "d": "7/2018"}, {"body": "think point deprecating encourage people use promisea alternatives point nt seem logical ever actually drop since still support old syncnoncatching methods like maybe remembers discussions old tickets", "d": "7/2018"}, {"body": "dmethvin right deprecated made promisesa compliant however left deprecated want encourage usage suitable replacement cases cases easy replacement removing time soon words choice undeprecate leave deprecated continue encouraging usage discussed meeting chose latter however assure deprecation always mean removal one cases", "d": "7/2018"}, {"body": "thanks info gentlemen", "d": "7/2018"}, {"body": "thanks opening issue jqueryslim npm official package managed jquery jqueryslimjs file looking found dist official jquery package downloading need reference slim file instead", "d": "7/2018"}, {"body": "html parser agrees us open devtools look wo nt look parser rules give result far jquery concerned reflecting browser parsed feel free drop spec reference", "d": "7/2018"}, {"body": "sounds like want support building something best place stackoverflowcom", "d": "7/2018"}, {"body": "guess browser tries find file computer guess trying look folder called within current working directory exist tom\u00e1s", "d": "7/2018"}, {"body": "works correctly please look programming help stack overflow", "d": "7/2018"}, {"body": "nt see firefox windows updated case bit log target elements still seeing problem targets", "d": "7/2018"}, {"body": "thanks adding etargetnodename actually reproduce input type number witness blur event fired", "d": "7/2018"}, {"body": "likely reason blur nt bubble jquery historically tried hide fact using ca nt anything using right event focusout event sent element element inside loses focus distinct blur event supports detecting loss focus descendant elements words supports event bubbling", "d": "7/2018"}, {"body": "thanks opening issue however find support stackoverflowcom jquery forums", "d": "7/2018"}, {"body": "report closed using jquery api jquery pushing knowingly http code garbage htmlscriptelement text content", "d": "7/2018"}, {"body": "ca nt confirm issue works expected js bin something else must going code", "d": "7/2018"}, {"body": "mgol changed code cross domain request changes callstack therefor prevents error could mentioned sorry changing back results jsbin valid hoster bug hosted personal webspace nt know long link valid", "d": "7/2018"}, {"body": "holgerjeromin thank confirm locally sameorigin request future please try prepare small example possible without event handlers especially without supported jquery timmywil think valid issue nt try eval valid error response let reopen discussion", "d": "7/2018"}, {"body": "see thank mgol taking time make test case however sure necessarily wrong jquery appending script tag content actually html whether eval jquery executed directly browser get error right", "d": "7/2018"}, {"body": "whether eval jquery executed directly browser get error right pretty sure sane browser try interprete response script element javascript wrote php code error alert content script referenced direct via scriptelement loaded jquery alert fired twice alert fired loaded via jquery updated testcase", "d": "7/2018"}, {"body": "timmywil browser holgerjeromin mentioned browser hits error page downloading script display error message console try evaluate error page script meanwhile invoke converter even error responses converter calls globaleval response think bug fix moreover page returns something parseable javascript may influence page behavior randomly granted response unlikely possible edge cases bug may important consequences", "d": "7/2018"}, {"body": "yup makes sense guess way browser would try execute response code match response content", "d": "7/2018"}, {"body": "html standard requires ok status defined fetch range inclusive", "d": "7/2018"}, {"body": "case trying emulate script tags makes sense would match browser behavior execute responses matched http ideally people would nt try inject strings script tags agonized problems cause years including synchronous execution issue", "d": "7/2018"}, {"body": "discussed meeting likely limit eval responses", "d": "7/2018"}, {"body": "nt sure changes necessary exploring extensions ajax converter datafilter arguments end came much simpler conclusion rather relying upon update jqueryevalurl evaluate responses manually js return jqueryajax url url", "d": "7/2018"}, {"body": "simple clever love", "d": "7/2018"}, {"body": "since found fix issue plan prepare pr", "d": "9/2018"}, {"body": "generally bad idea supply input wellformed ie missing end tags elements however case really bug element detection logic fix coming shortly", "d": "7/2018"}, {"body": "find support stackoverflowcom jquery forums", "d": "7/2018"}, {"body": "okay version quesion used lasted use ok", "d": "7/2018"}, {"body": "support found stackoverflowcom jquery forums", "d": "7/2018"}, {"body": "timmywil thks", "d": "7/2018"}, {"body": "agree analysis letting header override setting guess honor would like file pull request", "d": "7/2018"}, {"body": "yes may take time read community guides however hope fix urgent", "d": "7/2018"}, {"body": "provide test case jsfiddle js bin issue template requested also safari version thanks", "d": "7/2018"}, {"body": "older version safari test windows machine test mac last version safari ok thanks", "d": "7/2018"}, {"body": "thanks opening issue confirmed issue believe something", "d": "7/2018"}, {"body": "template requested test case jquery supported questions please ask stackoverflow", "d": "6/2018"}, {"body": "nt think supports see", "d": "6/2018"}, {"body": "indeed sizzle nt support selector however planning rewrite native selector engine jquery upcoming major version either would rely sizzle selectors like would supported meantime use function uses native directly", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "thanks opening issue however copied test case jsfiddle reproduce", "d": "7/2018"}, {"body": "without reproducing much finicky sometimes even reproducible test case may anything fix", "d": "7/2018"}, {"body": "thanks opening issue however copied test case jsfiddle reproduce fwiw fiddle reproduces reported behavior edge page refreshed logs", "d": "7/2018"}, {"body": "fastfasterfastest see result well however possible edge still asyncfocus behavior old ies focus nt occur next event loop turn change get result think expect", "d": "7/2018"}, {"body": "nt really studied issue reported commenting timmywil statement could nt reproduce reported behavior could even timmywil fiddle change input first focus get result think expect result get result expect change difference logging change logging attempt avoid asyncfocus issue may come play nt really know much asyncfocus behavior issue old ie may misunderstanding referring see difference logging still logs see appears refresh page edge actually cause focus set input element", "d": "7/2018"}, {"body": "first used original fiddle got results used updated fiddle got get etc results even original fiddle something fishy edge best information might try creating example using jquery report edge", "d": "7/2018"}, {"body": "get true etc results even original fiddle realized using chrome maybe using edge get consistent results must refresh page per komarovalexander report see reported behavior using updated fiddle edge initially get prior refresh page refreshed get", "d": "7/2018"}, {"body": "might try creating example using jquery report edge note original reporter nevertheless fiddle without jquery seems behave correctly added except refresh input element nt actually focus caret input element dom calls seem indicate element focus perhaps meant reporting edge fiddle w jquery calls attempt simulate jquery calls look input focused focus count lines show differences jquery vs nonjquery values nt know got translation nonjquery correct though also strange focus actually input element refresh caret input element", "d": "7/2018"}, {"body": "even url puts code inside iframe seen iframerelated focus problems ie past maybe edge inherited said opened edge pasted url hit enter result got", "d": "7/2018"}, {"body": "said opened edge pasted url hit enter result got need refresh page andto see issue refresh page", "d": "7/2018"}, {"body": "seems like issue op reporting may due edge fully set focus input element page reloaded using browser refresh button page reloaded using browser refresh button appears document given focus seen probing resulting weirdness eg input caret input element even though input element reports focus nevertheless curious looked little bit noticed something interestingweird perhaps bug jquery particular situation necessarily causing issue op reports may contribute confusion noticed value depends calls sample initially returns call made returns see call returns due two different code paths taken jquery depending whether contains one elements contains one element one code path taken determine value using dom method contains one element different code path taken sizzle different way determining value used unfortunately two code paths return different values element circumstances particular returns furthermore different code path sizzle taken element future calls also take path even contains one element result return one value one time another value later without changes focus taking place two different methods calculating value exist used strange logic point view returns exists input element focus evidenced returning sample demonstrates provide fiddle avoid iframe issues coming play code save file load edge jquery test", "d": "7/2018"}, {"body": "think issue jquerysizzle regardless whether edge fully sets focus reload jquery uses two different ways determine value one way uses edge notion way uses sizzle notion means sizzle notion correspond edge notion think issue restate hopefully little clearer sample code demonstrating issue see preceding comment condition using edge page must reloaded using browser refresh button note page must reloaded using browser refresh button demonstrate issue assume element returns means one would expect return first issue value depends many elements matches matches one element returns expected matches one element returns unexpectedly returning unexpected element would returned second issue matches one element merely calling affects value return initially call return expected call return unexpectedly call return doubly unexpectedly returning doubly unexpectedly returned prior calling returns returns nt know opened issue instead", "d": "7/2018"}, {"body": "thanks analysis think fine file figure whether fixed", "d": "7/2018"}, {"body": "think issue resolved", "d": "7/2018"}, {"body": "thank thorough analysis almost positive tho issue migrated sizzle go", "d": "7/2018"}, {"body": "thanks opening issue effects module already imported using amd plans roadmap switch module format transpile formats", "d": "6/2018"}, {"body": "fixed firefox", "d": "7/2018"}, {"body": "thanks opening issue however something fix native behavior dictates property becomes input recommend avoiding name possible otherwise prophook custom behavior absolutely need see", "d": "6/2018"}, {"body": "thanks opening issue however scope library like jquery", "d": "6/2018"}, {"body": "tested iexplorer windows confirmed behavior", "d": "7/2018"}, {"body": "updated testcase include cases", "d": "9/2018"}, {"body": "able make fail radius smaller enough rename like adserver longer characters longer request send live would nice scenario would work see reason nt", "d": "6/2018"}, {"body": "able debug whole sites jquery users need simple test case looks like stack overflow material turns real issue able prepare smaller test case reopen guess say ad blocker might blocking requests try fresh firefox profile addons installed", "d": "6/2018"}, {"body": "guess say ad blocker might blocking requests try fresh firefox profile addons installed right thanks", "d": "6/2018"}, {"body": "calling assume nt written valid disconnected nodes input return would still invalid mask errors removed see code computes offsets disconnected nodes high chance already bug app", "d": "6/2018"}, {"body": "nothing jquery jquery code must something differently also nt recommend using exceptions nt norm particular flag never used default user profile profile logged service webpage always specify user profile via option tandem flag", "d": "6/2018"}, {"body": "thank opening issue however intended behavior setting offset requires nonstatic position documented", "d": "6/2018"}, {"body": "timmywil sure reads inline styles styles resulting css styles set css ignored meaning order set positional offset anything position defined css css require override behavior developer perspective given immediately apparent setting inline style relative therefore overriding css still think reasonable reset inline style initial value", "d": "6/2018"}, {"body": "nt want make developers search long source style setting however nt seem would hard guess set top andor left style attribute well even best document behavior nt see use case setting offset nt work point easy workaround", "d": "6/2018"}, {"body": "thank reporting issue however works", "d": "6/2018"}, {"body": "thanks feed back sorry reply late used full version solve problem could repeat issue pure jquery environment either maybe conflict environment anyway would update repeat error thanks time", "d": "6/2018"}, {"body": "looks like added years ago support jquery ui extended features would nt use directly since documented", "d": "6/2018"}, {"body": "ah thanks clarification", "d": "6/2018"}, {"body": "please ask help stackoverflow", "d": "5/2018"}, {"body": "jquery project generate vulnerability reports report provides details vulnerability talking vulnerabilities fixed involved breaking changes backported semvermajor versions need additional help security issues contact security consultant help fixing application aware naive vulnerability scanner recognize patched version jquery", "d": "5/2018"}, {"body": "nt sound like bug jquery report nt provide information requested issue template see get assistance stackoverflow", "d": "5/2018"}, {"body": "issue moved", "d": "5/2018"}, {"body": "probably applied generators also return", "d": "5/2018"}, {"body": "fixed solution", "d": "5/2018"}, {"body": "already changed master returns true however could changed map mapping", "d": "5/2018"}, {"body": "definitely want consistency think", "d": "5/2018"}, {"body": "jcubic would like submit pull request", "d": "5/2018"}, {"body": "actually discussed weekly meeting deprecated better ways determine information using plain old javascript would either need create new return value async functions map async functions plain functions neither good ideas", "d": "5/2018"}, {"body": "also encounter similar issue", "d": "5/2018"}, {"body": "despite confusion caused naming workaround use maps source includes scrollbar widthheight use apparently adjust address bar collapses bit extra weirdness comes mobile since workaround simple inclined close", "d": "5/2018"}, {"body": "korean nt understand mean want leaning jquery code teaching korean student think introduce jquery site example site", "d": "5/2018"}, {"body": "thank interest repo jquery core bugs new jquery learn documentation available", "d": "5/2018"}, {"body": "jquery slim include effects module needed animations still works hide show elements happens immediately", "d": "5/2018"}, {"body": "documented expected behavior unfortunately jquery intended create whole documents document bodies passing complex html browsers may generate dom exactly replicates html source provided mentioned jquery uses browser innerhtml property parse passed html insert current document process browsers filter certain elements elements result elements inserted may representative original string passed notice nothing jquery plain dom example", "d": "5/2018"}, {"body": "document duplicate ids invalid document", "d": "5/2018"}, {"body": "dmethvin correct selector engine depend document valid sense nt see look id example performance perhaps", "d": "5/2018"}, {"body": "since html specs say behavior dom apis duplicate ids undefined ca nt guarantee anything behave either fix document figure workaround", "d": "5/2018"}, {"body": "already fixed project still thought worthy reporting", "d": "5/2018"}, {"body": "yes old versions may contain security vulnerabilities bugs fixed latest version need specifics whether particular issue actually affects code base analyzed security professional jquery core team provide services", "d": "5/2018"}, {"body": "thanks opening issue however think good candidate plugin", "d": "5/2018"}, {"body": "mdn docs show seconds optional page explains happens omitted purpose wait next turn event loop action occurs explaining code debugging people code really purpose issue tracker could post subset calendar code stackoverflow larger group people help debug", "d": "5/2018"}, {"body": "supported version jquery development ask help stackoverflow", "d": "5/2018"}, {"body": "done got jquery code wwwbaiducom biggest chinese search net perfected", "d": "5/2018"}, {"body": "installed jquery windows yesterday triaging worked fine seek help stackoverflow examine npm debug log", "d": "5/2018"}, {"body": "run see dist directory version npm node installed", "d": "5/2018"}, {"body": "npm node also using nvm tried node got issue", "d": "5/2018"}, {"body": "get windows msysgit nothing wrong npm version jquery npm far tell must sort local config issue antivirus bash ls npm v node v npm install jquery npm warn saveerror enoent file directory open c wampwwwxjunkpackagejson npm notice created lockfile packagelockjson commit file npm warn enoent enoent file directory open c wampwwwxjunkpackagejson npm warn xjunk description npm warn xjunk repository field npm warn xjunk readme data npm warn xjunk license field jquery added package ls nodemodulesjquery authorstxt licensetxt readmemd bowerjson dist external packagejson src ls nodemodulesjquerydist corejs jqueryjs jqueryminjs jqueryminmap jqueryslimjs jqueryslimminjs jqueryslimminmap", "d": "5/2018"}, {"body": "dmethvin coworkers confirm works expected well wondering like said local config issue causing problem", "d": "5/2018"}, {"body": "leak stems code defining new global functions observe reduction fiddle scripts still evaluated affect global state", "d": "5/2018"}, {"body": "pr", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "looking", "d": "4/2018"}, {"body": "", "d": "4/2018"}, {"body": "seems resolved", "d": "4/2018"}, {"body": "yes work assuming attach event fires followups stackoverflow please since bug report", "d": "4/2018"}, {"body": "internal jquery code actual bug experiencing could provide test case js bin jsfiddle", "d": "4/2018"}, {"body": "actually may bug return correct value execute buildfragmentjs return return maybe tag one letter also needs warp future ca nt get", "d": "4/2018"}, {"body": "since internal code bug exposed think safe close", "d": "5/2018"}, {"body": "think issue related jquery demo switching jquery amp jquery show position calculation longer includes table position", "d": "4/2018"}, {"body": "yes jquery", "d": "4/2018"}, {"body": "closing per feedback", "d": "5/2018"}, {"body": "please explain issue closed", "d": "5/2018"}, {"body": "oops misunderstanding part thought comment implied fixed master confirmed case", "d": "5/2018"}, {"body": "", "d": "6/2018"}, {"body": "news", "d": "6/2018"}, {"body": "plugin works perfect jquery nt work jquery seemd outerheight work properly jquery least table rows thanks fixing", "d": "7/2018"}, {"body": "consolidating issue expect fix make sure ticket", "d": "9/2018"}, {"body": "news", "d": "6/2018"}, {"body": "consolidating issue expect fix make sure ticket", "d": "9/2018"}, {"body": "see description api description translate items array object new array items description pass element current matched set function producing new jquery object containing return values", "d": "4/2018"}, {"body": "yep unfortunate documented inconsistency two apis way long change", "d": "4/2018"}, {"body": "thank ur explanation sry inconvenience caused", "d": "4/2018"}, {"body": "would agree behavior native js var rejected promisereject rejected resolved promiseresolve rejected promiseresolve function return resolved function consolelog bdone arguments catch function consoleerror bfail arguments", "d": "4/2018"}, {"body": "well seems strange behavior least unified cases b failed javascript var rejected promisereject rejected resolved promiseresolve rejected resolved case resolved function consolelog adone typeof arguments catch function consoleerror afail typeof arguments failhandler called case b promiseresolve function return resolved function consolelog bdone typeof arguments catch function consoleerror bfail typeof arguments failhandler called hand jquery jquery git used behave differently case case b done b failed javascript var rejected deferred reject rejected promise resolved deferred resolve rejected resolved promise case resolved done function consolelog adone typeof arguments fail function consoleerror afail typeof arguments case b deferred resolve function return resolved done function consolelog bdone typeof arguments fail function consoleerror bfail typeof arguments behavior unified jquery addition jquery jquery used behavior unified b done", "d": "4/2018"}, {"body": "note equivalent promisea spec run synchronously nt swallow errors expect behave differently jquery behave like promisea spec", "d": "4/2018"}, {"body": "misunderstood specification native promise jquery deferredresolve take multiple arguments one argument promiseresolve therefore equivalent processing native promise think necessary follows b done javascript var rejected promisereject rejected resolved promiseresolve rejected resolved case resolved arguments gt consolelog adone typeof arguments catch arguments gt consoleerror afail typeof arguments case b promiseresolve function return resolved arguments gt consolelog bdone typeof arguments catch arguments gt consoleerror bfail typeof arguments", "d": "4/2018"}, {"body": "argument native promiseresolve special specification resolve x thenable attempts make promise adopt state x promisesa value thenable ie method returned promise follow thenable adopting eventual state promiseresolve javascript mdn think arguments jquery deferredresolve specification", "d": "4/2018"}, {"body": "supplement behavior occurs rejected promise passed first argument deferredresolve cases b done b failed occur first argument second argument exchanged cases b done javascript var rejected deferred reject rejected promise resolved deferred resolve rejected resolved promise resolvedprime deferred resolve resolved rejected promise case resolved done function consolelog adone argumentslength fail function consoleerror afail argumentslength case b deferred resolve function return resolved done function consolelog bdone argumentslength fail function consoleerror bfail argumentslength case resolvedprime done function consolelog adone argumentslength fail function consoleerror afail argumentslength case b deferred resolve function return resolvedprime done function consolelog bdone argumentslength fail function consoleerror bfail argumentslength", "d": "4/2018"}, {"body": "sorry examples get longer complex getting harder understand problem reported part confusion results giving name deferrred rejected seems comes behavior consistent standard resolving using rejected also rejects", "d": "4/2018"}, {"body": "yes consistent standard resolve argument thenable follow thenable jquery supposed promisea spec fail sorry expected actually ok", "d": "4/2018"}, {"body": "also want pass one argument write like following code jquery however native promise got one argument following code wrong therefore make similar jquery seems following code appropriate", "d": "4/2018"}, {"body": "format following code ok jquery javascript native promise promiseresolve promisereject sorry arguments gt consolelog ok arguments ok promise catch e gt consolelog fail e jquery deferred resolve deferred reject sorry done function consolelog ok arguments ok arguments deferredpromise fail e gt consolelog fail e", "d": "4/2018"}, {"body": "however time try use chain difference native promise jquery ok native promise fail sorry jquery javascript native promise promiseresolve gt return promiseresolve promisereject sorry arguments gt consolelog ok arguments ok promise catch e gt consolelog fail e jquery deferred resolve gt return deferred resolve deferred reject sorry done function consolelog ok arguments fail e gt consolelog fail e fail sorry", "d": "4/2018"}, {"body": "finally set first argument resolve something deferredpromise ok returned time probably seems special interpretation done first argument", "d": "4/2018"}, {"body": "standard promisea uses one argument since jquerydeferred allowed still provide ability reporting bug close ticket feel documentation needs improved make suggestions request docs changes need specific especially given relatively obscure behaviors", "d": "4/2018"}, {"body": "yes reporting bug beginning think work follows insist compatibility native promise like think extend specification deferredresolvewith uses one argument args like promisea currently follows deferredresolvewith context args args type array optional array arguments passed donecallbacks deferredresolvewith extending specification follows args type array thenable ie deferredpromise", "d": "4/2018"}, {"body": "question simple javascript deferred resolve deferred reject sorry test function consolelog ok arguments ok arguments deferredpromise test catch e gt consolelog fail e deferred resolve gt deferred resolve deferred reject sorry test function consolelog ok arguments ok arguments deferredpromise test catch e gt consolelog fail e fact fail sorry bug isnt", "d": "4/2018"}, {"body": "ok good small case agree seems inconsistent promise thoughts surprised would nt promisea test intended behavior", "d": "4/2018"}, {"body": "examples highlight differences method including shorthand whose behavior specified promisesa ecmascript promise objects fundamental model jquery deferred objects predate terms ecmascript vocabulary jquery deferred objects fulfilled thenable objects ie objects method whereas promise objects resolution required enqueue invocation method inbound value observable effect standard promise resolution never supply thenable onfulfilled callback however jquery deferred behavior intended backwards compatibility surprising mixing models callbacks receive settlement values case means done onfulfilled callback gets rejected deferred object string multiple settlement values possible via callback explicit return deferred returned fulfilled therefore invoke callback first invokes onfulfilled callback returns deferred resolved result case deferred thenable unwrapped part handling reveal rejected thenable results return value also rejected state therefore ignoring onfulfilled callbacks introducing compatibility could instead done unwrapping input side would made implementation messier less backwards compatible ie unable receive multiple settlement values benefit nonstandard cases path opted avoid favor force output interpreted context standard behavior", "d": "4/2018"}, {"body": "thanks report license repository seems github nt like extension guess could remove extension repos seen nt use one use", "d": "4/2018"}, {"body": "packagejson also specifies fine removing changing", "d": "4/2018"}, {"body": "hi get answer github support team basically github uses automatic license detector installed locally get following results sections surrounded additions tool detected github confidence requirement changes github meeting threshold detect license project removes additions license detected properly course author community choice version license project use", "d": "4/2018"}, {"body": "fine making changes although bring kborchers specific changes licensetxt file sure legal issues see done eslint repo note packagejson file also clear license mit right", "d": "4/2018"}, {"body": "dmethvin much larger change one done eslint removed one minor eslint line beginning said opinion remove lines without issue team would like sure get us close enough github satisfied though last lines removed define things may fall mit license section referenced cla", "d": "4/2018"}, {"body": "thinking bit since jquery project defining content licensed differently nodemodules external directories may able remove need check legal get back asap", "d": "4/2018"}, {"body": "fixed", "d": "5/2018"}, {"body": "documentation says get combined text contents element set matched elements including descendants window object element situation code calling expecting result result expect", "d": "4/2018"}, {"body": "explain company develop third party tool communication reasons ass iframe website include snippet client created generic event handling function analytics purpse assume get text text execution context event aslong iframe different domain page window text dose throw exception wise throw undexpected point view essentially added iframe different origin page entire application failed", "d": "4/2018"}, {"body": "mean call valid application", "d": "4/2018"}, {"body": "application client following line every event executed jquery text application works fine integrate company code snippet adds iframe origin function break", "d": "4/2018"}, {"body": "think wierd something like adding iframe page change result unrelated function great add codition nodetype array return undefinedempty string always throw exception unhandled types", "d": "4/2018"}, {"body": "jquery nt validate user input expected supported method signatures used according returns behavior inputs undefined jquery would get much larger add input validation also slow library want input validated consider using typescript includes jquery type definitions package need tell client change invalid code", "d": "4/2018"}, {"body": "completely normal selection return nothing use advantage example chain operations selection may actually nicer noelements case since nt need extra logic handle need sure selection matched something check property people would definitely annoyed console message condition error could plugin like js jqueryfnwarnifempty function msg thislength consolewarn msg jquery selection empty nosuchthing warnifempty addclass notthere", "d": "4/2018"}, {"body": "dmethvin small correction js jqueryfnwarnifempty function msg thislength consolewarn msg jquery selection empty return nosuchthing warnifempty addclass notthere", "d": "4/2018"}, {"body": "haha yes", "d": "4/2018"}, {"body": "people develop spas jquery time large spa usually needs structure jquery alone provide google search information", "d": "4/2018"}, {"body": "possible run screenshot debugger however screenshot looks like references coming code nt jquery core test case uses jquery core", "d": "4/2018"}, {"body": "reopened test case uses jquery core", "d": "4/2018"}, {"body": "jquery generally nt validate user input make library way bigger need use parameter types match api docs want parameter validation consider using typescript together typesjquery package", "d": "4/2018"}, {"body": "like idea moved issue roadmap", "d": "9/2018"}, {"body": "confirmed similarly zoom apparently mess offsetwidth even though supposed", "d": "3/2018"}, {"body": "thanks report however deprecated see nt plan fix edge cases behavior open api ticket document deprecation", "d": "3/2018"}, {"body": "async function callback run", "d": "3/2018"}, {"body": "callbacks invoked since version", "d": "3/2018"}, {"body": "thanks wrong allways use version", "d": "3/2018"}, {"body": "thanks report amp reproduction nt know anything happens without jquery could wrap us calling native method trycatch could catching real errors well", "d": "3/2018"}, {"body": "discussed meeting reason error thrown trycatch however still nt work words never selected text nt think anything ca nt force browser select hidden text want avoid catching errors much possible", "d": "4/2018"}, {"body": "nt work bare dom either", "d": "3/2018"}, {"body": "ca nt change aggregate fields", "d": "3/2018"}, {"body": "comment line indicates extension point allows external code change things altering ca nt removed would incorporated new logic somehow want serialize form elements etc elements attribute specifically want serialize form elements belong enclosing form possible element attribute makes belong another form assumption form fields form subtree fair game hold property takes account currently get free test case experiment remove input named change attribute watch difference doubt ways work around think require pretty expensive searching get right", "d": "3/2018"}, {"body": "thank opening issue however selector officially supported jquery works natively sizzle nt trust native qsa due certain qsa bug chrome couple workarounds add form validation jquery plugin also adds support selector extensions like jqueryvalidate use instead rely native bypass sizzle altogether", "d": "3/2018"}, {"body": "thanks", "d": "3/2018"}, {"body": "input filter invalid length nt work error message error syntax error unrecognized expression unsupported pseudo invalid", "d": "7/2018"}, {"body": "hi package maintained jquery jquery ui teams separate person sure anything afaik team maintains jqueryui package case jquery bug tracker jquery ui separate repository amp team jquery uirelated issues reported thanks", "d": "3/2018"}, {"body": "reminder still deterministically failing current master aug", "d": "8/2018"}, {"body": "swarm failures issues rather opening issue every failure track meeting agenda link swarm job give us history swarm failures meeting notes advantage little less tedious also swarm failures often indication something wrong test rather something wrong jquery core swarm failures urgent simply must addressed release please assured danger releasing without greens maybe one two reds absolutely certain necessitate core change opposed test change", "d": "9/2018"}, {"body": "caniusecom entry shows full ie support mdn entry also claims ie supports seems support identical nt", "d": "3/2018"}, {"body": "go console debugger see must going older spec", "d": "3/2018"}, {"body": "right seems mdn amp use date", "d": "3/2018"}, {"body": "problem seems page visibility first draft march previous page visibility use references nt seem distinguish two mdn page mentions nt call browser support matrix", "d": "3/2018"}, {"body": "yeah think might considered remember considering lot things nt remember details go console debugger see documenthidden false documentpagevisibility undefined perhaps meant see returning meaningful values consider really careful like extensive testing would suggest ie see test suite pass enough think since remember experience nt wan na see haha", "d": "3/2018"}, {"body": "ha see ie amp come", "d": "3/2018"}, {"body": "oh duh got property wrong nevermind", "d": "3/2018"}, {"body": "simplified ticket made privatizing use potential switch separate issue think kind whatif ideas best tracked roadmap", "d": "9/2018"}, {"body": "good bug report needs include test case use supported recent version jquery random error may encounter nt qualify valid bug report especially without description tried please look help stack overflow though assume might duplicate", "d": "3/2018"}, {"body": "set string using api returns string even string happens look like json jquery nt try parse string passed api json know json parse json advance pass api documentation seems unclear submit pull request clarify example seems clear applies attributes inside html", "d": "3/2018"}, {"body": "regardless documentation think jquery api bit inconsistent get data dom node data api ca nt know wether set ele data foo val noted dom like return value cases using eledata method call either returns string parsed version string developer need guess might receive get object data attribute wanted string need jsonstringify get string set via data key value wanted object need parse many else data key output depends data set guess discussion wanted", "d": "3/2018"}, {"body": "documented changes make something else break lot code actually think parsing data wrong idea always return string ca nt change api make parse data reason", "d": "3/2018"}, {"body": "setting string value attribute event handler invalid please look help stack overflow", "d": "3/2018"}, {"body": "probably related specifically", "d": "3/2018"}, {"body": "yep seems issue thanks help", "d": "3/2018"}, {"body": "migrate ticket ready closed nothing core deprecation codewise", "d": "4/2018"}, {"body": "jquery supports last versions safari see safari windows versions behind latest version currently longer supported", "d": "3/2018"}, {"body": "thanks report test case unfortunately jquery adds suffix default number values browser discards value invalid plan change breaking change wait see keep blacklist css properties nt getting treatment need add grid properties number values would like submit pr add value perhaps gridrelated ones fixed jquery version arrives workaround locally see fixed jsfiddle", "d": "3/2018"}, {"body": "btw also obvious workaround pass string instead number works", "d": "3/2018"}, {"body": "ah suspected something along lines thank detailed explanation multiple workarounds supposed close issue someone else", "d": "3/2018"}, {"body": "submit pull request sometime week think think mean pr", "d": "3/2018"}, {"body": "yes meant pull request often shorten pr hurry next week totally fine let us know find time questions submit pr issue happily guide contribution process thanks micha\u0142 go\u0142\u0119biowskiowczarek", "d": "3/2018"}, {"body": "let keep issue open fixed micha\u0142 go\u0142\u0119biowskiowczarek", "d": "3/2018"}, {"body": "finally got around compiling css grid properties need added sure need update unit test current unit test nt seem specific cases current list specialcase css properties", "d": "3/2018"}, {"body": "enbo could submit pr changes discuss list looks good first sight tests assertions see could add grid ones test need check grid support first similarly treated think may check set properly put assertions inside block", "d": "3/2018"}, {"body": "accidentally closed pr fork reopening", "d": "3/2018"}, {"body": "please provide test case jsfiddle js bin issue template requested takes time follow code see working live", "d": "3/2018"}, {"body": "hello mgol test issue might able see dom changed let know either something inappropriate need information thank advance tdrs", "d": "3/2018"}, {"body": "hi incorrectly binding click handler incorrectly first time event binded new question loaded newer options event binded hence click handler wo nt work solution would use power event delegation bind event question container delegate options following correct way binding event case questionmoduleon click option function work perfectly", "d": "3/2018"}, {"body": "closing", "d": "3/2018"}, {"body": "thank opening issue think best left plugin least", "d": "3/2018"}, {"body": "need provide us test case nothing witch vague report", "d": "3/2018"}, {"body": "nevermind actually forgot selector", "d": "3/2018"}, {"body": "please provide example jsbincom jsfiddlenet requested issue template enough information", "d": "3/2018"}, {"body": "reopened test case", "d": "3/2018"}, {"body": "thank opening issue need specific create test case demonstrating issue jquery", "d": "3/2018"}, {"body": "test case sites possible include xml file inside iframe kind tests could done specific test following way download browser extension sources open file remove part open firefox add extension manually via choose go see xml file converted text file", "d": "3/2018"}, {"body": "understand saying excluding jquery fixes issue could less specific jquery cause problem volunteers even time help debug issue may still lead discovery jquery working intended", "d": "3/2018"}, {"body": "understand easy process volunteers could help maybe give points start looking issue could try find exact point", "d": "3/2018"}, {"body": "jquery manipulate xml document run xhtml document meant included xml document directly familiar firefox plugins page seems indicate script injected plain xml page scenario expect work", "d": "3/2018"}, {"body": "yes script injected content new thing include jquery jqueryui content script maybe need look alternative methods modal dialogs", "d": "3/2018"}, {"body": "thank opening issue jquery lowerlevel api dom manipulation user responsibility sanitize input avoid dynamically setting urls possible", "d": "3/2018"}, {"body": "jquery bug tracker jquery ui one want", "d": "3/2018"}, {"body": "jquery returns support notification passthrough seem recall nt reliable previously anyway change mentioned upgrade guide", "d": "3/2018"}, {"body": "please post questions like stackoverflow bug tracker", "d": "3/2018"}, {"body": "thanks opening issue however issue template used noted test case required evaluate issues see", "d": "3/2018"}, {"body": "may related something like filed jquery days nt really support manipulating text nodes collection elements nt behavior flat nt make sense ca nt put html text node", "d": "3/2018"}, {"body": "dave makes good point reopened test case", "d": "3/2018"}, {"body": "please provide test case jsfiddle js bin issue template requested", "d": "3/2018"}, {"body": "link provided stellarjs github issues page hope helps", "d": "3/2018"}, {"body": "bug jquery stellar plugin invoking supported see however plugin nt seem maintained anymore need fork change something else", "d": "3/2018"}, {"body": "thanks opening issue checked weekly meeting people check ff edge ff checked mac windows worked us check browser extensions global keyboard shortcuts nt interfering nt think anything", "d": "2/2018"}, {"body": "apparently shortcuts use see adblock plus installed remove browser issue persist try press keep way press release release message combitation stop fiddle doe nt show", "d": "2/2018"}, {"body": "problem occur jquery page led conclude jquery cause", "d": "2/2018"}, {"body": "mcanepa followed directions message shows even nt jquery might able anything browser send events", "d": "2/2018"}, {"body": "dmethvin right issue persist even jquery involved timmywil nt know see message nt coworker exact behaviour maybe report ff sorry bad issue report", "d": "2/2018"}, {"body": "even edge dev tools report even though highlights correct area quote sure standards require case like report edge bug might get fixed soon wo nt help ie", "d": "2/2018"}, {"body": "hate say nt know anything old code used getboundingclientrect wrong cf microsoft user agents giving us information go best bet probably sub use gbcr using jquerycsshooks really need", "d": "2/2018"}, {"body": "closing based analysis anyone time probably worth opening ticket edge", "d": "2/2018"}, {"body": "stackoverflow thing bug report", "d": "2/2018"}, {"body": "fixing messier like unit test making pretty crazy assertions certain aliasing one standard css property another intended use case thought even need mapping vendorspecific properties point", "d": "2/2018"}, {"body": "dmethvin unit test checking mapping would nt expect anyone real life aliasing need mapping cache vendor prefixed values still used browsers although really new apis lots prefixed properties ie think useful handle users could introduce another internal object would consulted match write vendorprop resolved values separate object would influence size slightly negatively hopefully much another solution iirc migrate used differentiate user calls amp jquery internal ones setting certain flag beginning method uses deprecated thing resetting end nt remember would nt something like work", "d": "2/2018"}, {"body": "thanks opening issue prefer see reduced test cases rather whole applications worries seen bug fix match native behavior spec defines offsetparent closest element nonstatic position table td th element case table native offsetparent issue track update docs else fails get offset ancestor desire offset td element subtract eg", "d": "2/2018"}, {"body": "thanks report id element nt matter issue caused namespace working well special chars see test case problem lies line constructs regexp namespaces without escaping special characters nt sure support nonalphanumeric namespaces docs nt mention restrictions unfortunately generic regexp escape function", "d": "2/2018"}, {"body": "discussions rejected proposal", "d": "2/2018"}, {"body": "see would still prefer keep namespaces alphanumeric rather allowing anything period space already meanings", "d": "2/2018"}, {"body": "per meeting keep namespaces strictly alphanumeric document strip colon character selector constructing namespaces well", "d": "2/2018"}, {"body": "problem seems nt affected negative margins able account", "d": "2/2018"}, {"body": "best way would use mutation observers modeling events nt really work mutation notifications batched asynchronous actual insertremove operation used nonstandard mutation events browsers describing horrible performance drag specifically synchronous peraction", "d": "2/2018"}, {"body": "ahh okay thanks use could achieve described without events mutation observer", "d": "2/2018"}, {"body": "probably exactly described code unrelated caller wants catch something inserted document mess opposed modifying soon inserted would need synchronous interface think design needs good design welcome experiment", "d": "2/2018"}, {"body": "attribute chars example seems work identically bare dom one reason jquery changes html sees nested new tag tries change per documentation disable modify changing method seems easier correct change string", "d": "2/2018"}, {"body": "using plugin code snippets shown please provide complete test case asked issue template", "d": "2/2018"}, {"body": "dmethvin minimal complete isolated test case reproduce issue sample jquery plugin try execute nodejs umd wrapper tries require jquery jquery initialization fails due absence object nodejs js function global factory umd wrapper around plugin typeof define function amp amp defineamd define jquery factory else typeof exports undefined factory require jquery else var mod exports factory globaljquery function jquery use strict var interoprequiredefault jquery interop assume function interoprequiredefault obj return obj amp amp objesmodule obj default obj var typeof typeof symbol function amp amp typeof symboliterator symbol function obj return typeof obj function obj return obj amp amp typeof symbol function amp amp objconstructor symbol amp amp obj symbolprototype symbol typeof obj function classcallcheck instance constructor instance instanceof constructor throw new typeerror call class function var testjqueryplugin function code plugin consolelog require jquery tostring try importing jquery printing results run naturally get function w wdocument throw new error jquery requires window document return factory w fn testjqueryplugin testjqueryplugin typeerror set property testjqueryplugin undefined object modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerunmain", "d": "2/2018"}, {"body": "sure got code also seems like sure based assume comment problem begins looks like assuming babel compilation run able step code see fails command print url explains attach debugger", "d": "2/2018"}, {"body": "dmethvin hi dave thank link node debugger code babel umd preset generates debugger get error jquery fails initialize lack window object node inspectbrk testjqueryjs debugger listening ws help see debugger attached function w wdocument throw new error jquery requires window document return factory w fn testjqueryplugin testjqueryplugin typeerror set property testjqueryplugin undefined slightly modified running handle variable instead browser environments js function global factory typeof define function amp amp defineamd define jquery factory else typeof exports undefined factory require jquery else var mod exports factory globaljquery globalmetismenu modexports function jquery use strict var interoprequiredefault jquery function interoprequiredefault obj return obj amp amp objesmodule obj default obj var typeof typeof symbol function amp amp typeof symboliterator symbol function obj return typeof obj function obj return obj amp amp typeof symbol function amp amp objconstructor symbol amp amp obj symbolprototype symbol typeof obj function classcallcheck instance constructor instance instanceof constructor throw new typeerror call class function var testjqueryplugin function consolelog require jquery tostring", "d": "2/2018"}, {"body": "think safe say point debugging something issue jquery would agree plumbing around javascript pain get right many cases commonjs native es modules babel webpack loading amd script tags sympathy time help remotely debug stackoverflow probably good place ask provide complete example including build steps required", "d": "2/2018"}, {"body": "dmethvin dave solved practical issues nt need jquery nodejs please take note jquery fails initialize nodejs take note people run problem stackoverflow jquery ca nt used nodejs side dependency explicitly initialize pass upon initialization thank time efforts maintain jquery sympathy", "d": "2/2018"}, {"body": "yep definitely need mentioned original issue part missed executed plugin code ca nt modify would probably true using babel turn es module declarations cjs requires would need require", "d": "2/2018"}, {"body": "agreed thinking typo char key nt even see listed anywhere specs jbedard know around since jquery recent know specs changed several times years keycodecharcode keychar problem trying normalize names especially bloating put comprehensive mapping like jquery every person ever used jquery needed might make sense people need one two keys also mention get property raw properties", "d": "2/2018"}, {"body": "nt think jquery ever supported default standard property add list", "d": "2/2018"}, {"body": "appreciate feedback understand bloat argument use regex make arrow bit optional use multiple case statements satisfy implementations slightly odd abstraction library abstract away differences hopefully prioritize standards compliance lost bet step getting code back event object cheers feb dave methvin notifications githubcom wrote agreed thinking typo char key code nt even see char listed anywhere specs jbedard know around since jquery recent know specs changed several times years keycodecharcode keychar problem trying normalize names especially bloating put comprehensive mapping like jquery every person ever used jquery needed might make sense people need one two keys receiving authored thread reply email directly view github mute thread", "d": "2/2018"}, {"body": "behavior expected included fix failed mention upgrade guide probably fix first included immediately reverted accidental breaking change disrupting milestone tracking", "d": "2/2018"}, {"body": "see problem adds tbody", "d": "2/2018"}, {"body": "jakecigar browser behavior jquery adding", "d": "2/2018"}, {"body": "know browser think jquery lots people use tbody css", "d": "2/2018"}, {"body": "might expected append children either tbody node special ways", "d": "2/2018"}, {"body": "fix failed mention upgrade guide thoughts else might affected breaking change howwhere refile issue upgrade guide gets updated breaking change", "d": "2/2018"}, {"body": "rmacfadyen upgrade guide file ticket pr repo would great jakecigar could propose description would new item manipulation near generally want succinctly describe change propose alternate solution behavior tbody tables always strange browsers multiple tbody elements table makes even stranger already tbody select one insert rows create new one jquery bunch fiddly logic wanted remove person inserting markup knows best go", "d": "2/2018"}, {"body": "want document jquery broken regard tbody tag even native code like gives table jquery code one child table think get rid manipulationtarget match rest behavior jquery", "d": "2/2018"}, {"body": "maybe say sometimes jquery running browsers give tbody times care getting tbody make sure code followed ways make sure get tbody", "d": "2/2018"}, {"body": "dmethvin added issue thanks pointing right spot nt done pr pretty uncertain understand scope breaking change really sure document say either", "d": "2/2018"}, {"body": "jakecigar example invalid specifically valid insert elements siblings elements per spec fortunately jquery prevents creating invalid table adds element sure seeking errors counting elements css adding explicitly much better way go readable prevents confusion sometimes jquery running browsers give tbody times care getting tbody make sure code jquery longer involved autoinsertion agree useful users know browsers automatically insert tbody something useful docs upgrade guide", "d": "2/2018"}, {"body": "timmywil jquery involved manipulationtarget appends tbody user specifically asks append table tbody present could happy completely one way like idea less kind", "d": "2/2018"}, {"body": "jakecigar meant longer insert tbody browser natively help prevent creation invalid tables example actually demonstrates argument rather", "d": "2/2018"}, {"body": "far tell reason nt come across difference code write inject html expect see seems like long problems appending tr table nt done completely agree behavior change mentioned upgrade guide", "d": "2/2018"}, {"body": "problem even run jquery modified source stored server somehow wo nt actually execute javascripts properly way errors clues provided debugger left ability switch page page via ajax jqueryevalurl function url debugger return jqueryajax url url", "d": "4/2018"}, {"body": "working always since created warning coming browser jquery api guaranteeing attempted use loaded html line javascript would available request changed async request jquery longer guarantee loaded html available worse mechanism available via indicate html loaded want receive warning browser need rewrite call async call injects html document change minor version since breaking change even clear whether makes sense try fix api may simpler deprecateremove give people instructions rewrite calls injected html embedded tags stack trace probably case remove html inject scripts directly code scripts act injected html html loaded example html fragmenthtml html jquery main html file change something note cases synchronously injected html used far away point injected rewrite may obvious case seem really complicated andor working code nt understand plugin nt write code got stackoverflow ignore console warning keep existing code need help could check stackoverflow", "d": "4/2018"}, {"body": "dmethvin would potentially require lot rewriting app code jquery users entrypoint mess jqueryparsehtml use follows content loaded using simple ajax get php output data php output able solve problem site like share solution solution different approach require much rewriting app code jquery users turns already eval script content could add callback function parameter jqueryparsehtml add jqueryajax use case statement eval script content unlocks waiting variable defined jqueryparsehtml instead sascsettingscontentloaded calls new callback parameter jqueryparsehtml add callback functionality use cases pop jquery bugreports useful addition jquery donating jquery developers community jqueryevalurl function url debugger return jqueryajax url url samwaitforcondition usage example delete sascsettingscontentloaded sasc seductiveappssitecode load content asynchronously content accompanying js loaded eval ed sets sascsettingscontentloaded true samwaitforcondition content loaded function return sascsettingscontentloaded function point content accompanying js fully loaded whatever needed content samwaitforcondition definition waitforcondition function label condition callback frequency context used instance let page wait vividdialogs fully initialized showing site components see source demo var fncn samwaitforcondition typeof label string samlog error fncninvalid label return false typeof condition function samlog error fncninvalid condition return false typeof callback function samlog error fncninvalid callback return false typeof frequencyundefined frequency lt frequency prevents excess stress js engine labelstacktrace undefined try var adebug adebug else throw new error myerror catch ex var stacktrace samglobalslogdostacktracesforallcode samglobalslogdostacktracesforcodepath codepath samuserdeviceisfirefox exstacksplit n exstack stacktrace provided labelstacktrace stacktrace var r condition context var dbgmsg fncn label n condition condition r true false n callback callback var dbgdata startstacktrace labelstacktrace label label condition condition callback callback frequency frequency conditionastext condition callbackastext callback samlog dbgdata", "d": "4/2018"}, {"body": "hard read solution looks like changes minified file nt variable names mean anything fact names change time jquery rebuilt original source code repo would much clearer describe changes regards users call directly pretty much jquery api accepts html potentially tag reference external script must evaluated sync order work way compatible existing jquery code major version bump jquery could change without describing internal changes jquery show user would put code example gave order make synchronous code work asynchronously", "d": "4/2018"}, {"body": "agree dmethvin assessment unlikely make significant changes avoid warning", "d": "9/2018"}, {"body": "request says describes value must returned request empty body valid json", "d": "2/2018"}, {"body": "disagree scenario one two things happen hitting api endpoint post request generates resource server side responds containing proper location header identifying url resource body none necessary post generates error case json object containing error information returned required send back empty object get jquery post process successful request handling error case manually using datatype text doable requires much work handle endpoints potentially return multiple data formats ie xml json", "d": "2/2018"}, {"body": "asked json nt get request failed http status may constraint put request met endpoint consistently return json client expects nt control endpoint sometimes returns json sometimes nt getting data text sniffing type probably best bet", "d": "2/2018"}, {"body": "jhorvathmaxetatech server well behaving always returns data correct may omit option jquery listen server claims returns may eg responses data responses empty bodies server returns empty body json broken rely manual parsing", "d": "2/2018"}, {"body": "behavior previously marked enhancement added see related tickets behavior previously documented suddenly disappears sounds like bug anyone else thinks rather normal api method may may return json body workaround quite simple application rather common occurrence wcf service calls nt normally return data return json object event fault", "d": "4/2018"}, {"body": "edge passes browserstack looks like test flakey", "d": "2/2018"}, {"body": "yeah restarting manually testswarm succeeds well sounds like flake still make less flakey", "d": "2/2018"}, {"body": "oops still happening every run", "d": "3/2018"}, {"body": "swarm failures issues rather opening issue every failure track meeting agenda link swarm job give us history swarm failures meeting notes advantage little less tedious also swarm failures often indication something wrong test rather something wrong jquery core swarm failures urgent simply must addressed release please assured danger releasing without greens maybe one two reds absolutely certain necessitate core change opposed test change", "d": "9/2018"}, {"body": "thank opening issue however default browser behavior unrelated jquery note bind radio inputs one checked gets change event please refer stackoverflowcom support", "d": "2/2018"}, {"body": "thanks report looks like duplicate closing", "d": "2/2018"}, {"body": "sure linked pr resolves problem similar problem sure opened issue", "d": "2/2018"}, {"body": "yeah nt think avoid problem adding nonce hash discuss whether always inject script tag external files", "d": "2/2018"}, {"body": "would great workaround could add global flag jquery setting enabled jquery would use method every request could disabled default course afais could workaround disabled usage csp", "d": "2/2018"}, {"body": "ideally suggested feature detect support use approach supported possible feature detect though maybe introduce flag enables csp support avoid stuff violates even makes old browsers unusable feature detection ideas welcome", "d": "2/2018"}, {"body": "add milestone sounds like something resolve", "d": "2/2018"}, {"body": "hmm instead detecting support could detect csp enabled similar eg angularjs think", "d": "2/2018"}, {"body": "agreed landing would nice order deal csp issues one release think would better consistent always use script tag regardless csp make exception android work geteval koczkatamas general sworn global flags make difficult large page full plugins written different times different people depend consistent behavior documentation already pretty difficult understand options way interact changing rules retroactively makes worse subtle behavior changes like also difficult jquery migrate detect warn keep mind wo nt help original case linked since using jquery maintained would need update get fix", "d": "2/2018"}, {"body": "dmethvin autodetect support consider superior solution feel free forget global flag idea issue linked opened somebody else using jquery prepared switch latest jquery time especially csp fix lands mgol please note technically tests afaik send warning endpoint configured csp cause unnecessary traffic sure think angular least latest versions solves otherwise use angular nt get errors", "d": "2/2018"}, {"body": "think would better consistent always use script tag regardless csp make exception android work geteval dmethvin android lt would make exception android browsers without uasniffing", "d": "2/2018"}, {"body": "mgol yeah looks like although android sets property function create attribute nt run function maybe script error nt try", "d": "2/2018"}, {"body": "document discussed meeting today support restrictive csp configuration must break currentlyworking strict ordering script evaluation property proper fix probably adopt script elements even samesite content also implement manual serialization similar suggestion leveraging something like relpreload performance issue", "d": "2/2018"}, {"body": "per last meeting workaround set options force script tag may get changed behavior change switching sync async", "d": "2/2018"}, {"body": "timmywil possible set", "d": "3/2018"}, {"body": "graingert instead use pass options nt documented way affect loads scripts good idea way", "d": "3/2018"}, {"body": "noting lands possible use option call force use script transport allows use attributes like tag perhaps little intuitive setting note things like meant simpler apis fewer options assumptions wanted new functionality wo nt exposed apis could use since accepts full options object personally stick", "d": "4/2018"}, {"body": "question dmethvin use defined nonce shall use instead thanks", "d": "4/2018"}, {"body": "lands would use add options options nonce expect ship", "d": "4/2018"}, {"body": "dmethvin perfect see commit already merged main branch wait next version thank", "d": "4/2018"}, {"body": "dmethvin lets say use thing", "d": "4/2018"}, {"body": "hey graingert since relevant ticket ask stackoverflow otherwise tickets become support forums random issues hard follow note html file include script tags else comes play example", "d": "4/2018"}, {"body": "dmethvin replying", "d": "4/2018"}, {"body": "trying follow progress done resolve jquery returning inline script whatever fix done permit secure csp", "d": "9/2018"}, {"body": "strings supported parameters objects arrays may pass parameters documented eg", "d": "2/2018"}, {"body": "thanks quick response know supporting array array objects accident instead using proper parameter array case used string guess nothing instead firing error message thanks", "d": "2/2018"}, {"body": "jquery general nt validate inputs relies correct adding consistent validation would increase library size lot want validation consider using typescript contains jquery type definitions typesjquery package", "d": "2/2018"}, {"body": "case convoluted way call jquery methods plainobject methods set attributes documentation explains actually prefer deprecate makes think would faster speed causing issues code", "d": "2/2018"}, {"body": "thank opening issue however looks like microperformance optimization existing api fast enough yes always make things faster going native lose convenience without actually making difference speed noticeable humans", "d": "2/2018"}, {"body": "hmm interesting svg elements nt gets nan trying calculate scroll gutters fixed adding final adjustment covering svg dimension getters unit tests would like contribute pr alexedgcomb", "d": "2/2018"}, {"body": "appreciate offer pass round thanks", "d": "2/2018"}, {"body": "like give shot could assigned", "d": "2/2018"}, {"body": "github nt allow assign issues people without commit access repo ca nt set feel free take shot pr", "d": "2/2018"}, {"body": "submitted pr fix", "d": "3/2018"}, {"body": "thank opening issue bad idea moving away event aliases promoting closely match native possibly take advantage new event apis think best implemented plugin", "d": "2/2018"}, {"body": "selects closest div paragraphs document incoming set length certainly something", "d": "2/2018"}, {"body": "understood thanks", "d": "2/2018"}, {"body": "extra space makes value invalid use instead", "d": "2/2018"}, {"body": "thanks correction instead ignoring second command ignores first div shrinks instead increasing would make sense dealing absolute values would overwrite previous one would expect adding subtracting would end net increase", "d": "2/2018"}, {"body": "thanks updated reproduction reopening", "d": "2/2018"}, {"body": "behavior caused css transition would say expected target value relative adjustment determined right away set css stretch height adjustments time set height immediately adjust first animation completes makes adjustment relative intermediate value", "d": "2/2018"}, {"body": "ok think get transition property property wo nt change instantly aiming target solve could wait transition finishes set second value although think would make sense operators read target instead current value", "d": "2/2018"}, {"body": "although think would make sense operators read target instead current value api read final value nt really choice", "d": "2/2018"}, {"body": "think bug follow issue template post test case showing broken want help jquery works probably best ask stackoverflow", "d": "1/2018"}, {"body": "async attribute also might running page locally without dev server wo nt work current browsers might want ask stack overflow resolve problems", "d": "1/2018"}, {"body": "thanks helpfull reply syntax used async someone stackoverflow recommended way work without well dev server elaborate use local copy jquery lib", "d": "1/2018"}, {"body": "use local copy still need run local dev server serve filesystem please look help stack overflow though", "d": "1/2018"}, {"body": "please provide link reduced test case demonstrating issue", "d": "1/2018"}, {"body": "basically failing unit tests", "d": "1/2018"}, {"body": "link unit tests test case need something reduced demonstrate clear issue isfunction lot going tests one failures follows codepath never touches jquery undefined supposed script tag led entirely unclear", "d": "1/2018"}, {"body": "btw good places start", "d": "1/2018"}, {"body": "well showed exact commit change already wrote always compiled jquery iteration try create reduced testcase find time week", "d": "1/2018"}, {"body": "showed exact commit change already wrote mean nt help us require test case forced sift everyone applications ai nt nobody got time", "d": "1/2018"}, {"body": "try create reduced testcase find time week", "d": "1/2018"}, {"body": "supposed answer getattribute undefined supposed script tag led isfunction entirely unclear", "d": "1/2018"}, {"body": "supposed answer see mean git bisect led fair enough still unclear two related thank get test case happy take closer look", "d": "1/2018"}, {"body": "generally also miss changes big breaking change currently revisitng issue trying fix parts foundationsites still confusing one mentioned code part affects", "d": "2/2018"}, {"body": "also imo deprecation still directly change code part warning console deprecated feature used one step much think never saw solutions introducing deprecations broke production code threw warnings especially comes node modules see different", "d": "2/2018"}, {"body": "time also change code move deprecated apis module excluded custom build deprecation unrelated issue though still need test case", "d": "2/2018"}, {"body": "reproducible testcase try ok test results issue starts method short test yields use contains javascript var length obj amp amp length obj amp amp objlength type totype obj isfunction obj iswindow obj return false results reverting javascript var length obj amp amp length obj amp amp objlength type totype obj type function iswindow obj return false fixes move deprecated apis deprecated module excluded custom build deprecation unrelated issue though still need test case see change module also nt jquerymigrate meant misinterpret mission upgrading libraries jquery lot work breaking changes introduced jquery migrate makes easier restoring apis removed additionally shows warnings browser console development version jquery migrate removed andor deprecated apis used", "d": "2/2018"}, {"body": "cc ncoden guess issue sure another testrunner testframework headless browser testing framework would solution many still use mochajs phantomjs", "d": "2/2018"}, {"body": "thank much finally providing test case issue mochaphantomjs dependency depends upon ancient version phantomjs instead latest version suffers bug nodelist objects functions thus causing iterate objects rather arrays catastrophic results observe proof run following invocations free equivalents root directory mochajquerytest repository nt support ancient versions phantomjs correct fix get dependency updated mochaphantomjs", "d": "2/2018"}, {"body": "understandable see big reason change internal check thing changed commit case documented support phantomjs anymore sure caught like parts jquery fixes phantomjs specific browsers", "d": "2/2018"}, {"body": "point longer sure asking behavior change necessary fix already could know function really nodelist environments fully support listed although could add note describing besteffort support others prs welcome", "d": "2/2018"}, {"body": "issue seems related plugin jquery also nt provided test case issue template asked create need please look help stack overflow", "d": "1/2018"}, {"body": "file specifically nt load", "d": "1/2018"}, {"body": "mgol whole domain unreachable however seems working", "d": "1/2018"}, {"body": "thanks update close issue still happens reopen", "d": "1/2018"}, {"body": "provide proof concept jsbincom jsfiddlenet would preferred", "d": "1/2018"}, {"body": "sorry got kinda busy time put one together tomorrow nite", "d": "1/2018"}, {"body": "reopened test case sure manages execute malicious code", "d": "3/2018"}, {"body": "issue template asked test case nt see nt provided information besides method name amp browser enough might better look help stack overflow first", "d": "1/2018"}, {"body": "sorry new take care later solved thank", "d": "1/2018"}, {"body": "decided last stable ios android go away", "d": "1/2018"}, {"body": "issue timmy said complete rewrite using next generation javascript want use modules would make sense remove support browsers nt implement latest web features let continue using jquery way huge amount cruft removed old dated browsers", "d": "2/2018"}, {"body": "thecodingdude still support ie foreseeable future least ie currently ie nt change much ca nt unfortunately", "d": "2/2018"}, {"body": "mean already president removing browsers blog post mentions need support older browsers like internet explorer opera safari use jquery would different right want ie use jquery ie literally supports modern web platform features plan using next generation js like modules supporting mystery starting modern foundation ie would much easier attract pull requests rather working old codebase conceivable reason think support ie capacity version require people use want support idea let go browsers time ie certainly day thoughts", "d": "2/2018"}, {"body": "plan using next generation js like modules supporting mystery use modules development transpile using something like rollup final bundle one js script nt use modules conceivable reason think support ie capacity version require people use want support work latest version jquery releasing version nt support ie would mean users would nt upgrade version would nt get new features amp bug fixes worth basically every library world supports ie way many users browser", "d": "2/2018"}, {"body": "makes sense thanks clarification imagine case would able make builds config want removing code designed could satisfy best worlds", "d": "2/2018"}, {"body": "ie still popular edge desktop marketshare safari ref available microsoft browser windows still supported microsoft really early think dropping support imho back topic think makes sense support last versions ios ios combined less market share ios according", "d": "2/2018"}, {"body": "turns browserstack process removing emulators mobile devices favor real ones seem work really well able add android main run instead periodic one unfortunately planned removal emulators means android browser instances disappear android lt available via emulators happen next months even need figure handle still support browsers sauce labs already removed android browser time ago light think definitely drop android lt jquery marking discussion", "d": "3/2018"}, {"body": "fwiw androids older currently market share android devices according", "d": "3/2018"}, {"body": "today meeting agreed drop android browser completely jquery meaning support recent chrome android old android browser android lt browserstack removes android browser emulator list release jquery plan run manual tests prerelease locally browsers long develop jquery", "d": "3/2018"}, {"body": "possible support external polyfill angular use similar solution", "d": "9/2018"}, {"body": "thank opening issue security vulnerability refers ways jquery abused open possibility xss attack usually attaching unsanitized user input dom best guard vulnerabilities ultimately impossible guard overly critical bit ridiculous list vulnerabilities lowerlevel api like jquery wraps native apis always open abuse rather see warning update jquery suggests sanitizing user input nt anything worry", "d": "1/2018"}, {"body": "likely related message says update jquery problem go away also affect request data crossorigin untrusted domains without specifying", "d": "1/2018"}, {"body": "things issue template asked ticket provide test case", "d": "1/2018"}, {"body": "test case", "d": "1/2018"}, {"body": "test case simplest possible set code shows problem meager information sounds like new bootstrap nt compatible jquery however huge app lots code could due anything goal test case help identify problem without one ca nt much", "d": "1/2018"}, {"body": "give exact place jquery crashes think would shorter faster way give wrong else give repro minimum requested", "d": "1/2018"}, {"body": "probably nt going help need know got might want see effect changing jquery versions bootstrap versions trying browsers", "d": "1/2018"}, {"body": "ok get back assume attach repro issue", "d": "1/2018"}, {"body": "template said like case site like jsfiddlenet jsbincom easily try share", "d": "1/2018"}, {"body": "ok", "d": "1/2018"}, {"body": "fyi bootstrap documentation use jquery slim version everything fine codepen use latest bs jquery full version fine", "d": "1/2018"}, {"body": "bootstrap switches bootstrap datetimepicker many things sure bootstrap jquery fine project absolutely nothing however case world repro soon", "d": "1/2018"}, {"body": "getting error updated bootstrap looks like issue lies bootstrap jquery least default position said could look test case", "d": "1/2018"}, {"body": "reopened test case", "d": "1/2018"}, {"body": "mgol since commented packagelock pr maybe something look getting fixed", "d": "1/2018"}, {"body": "oops thanks report wonder happened cc timmywil", "d": "1/2018"}, {"body": "problem version deps object empty", "d": "1/2018"}, {"body": "tag main jquery repo also extra deps fine object empty", "d": "1/2018"}, {"body": "thanks banged head hour wondering kept getting npm errors", "d": "1/2018"}, {"body": "banging head hour", "d": "1/2018"}, {"body": "ca nt help notice dependencies exactly match mention perhaps something went haywire release process would account appearing", "d": "1/2018"}, {"body": "updates thread", "d": "1/2018"}, {"body": "yea weird nt know happened release dependencies jquery dependencies", "d": "1/2018"}, {"body": "know happened release using npm adds dependencies installed dependencies used needed add option prevent immediate release fix", "d": "1/2018"}, {"body": "timmywil used current master project npm stuff fixed", "d": "1/2018"}, {"body": "frankdspeed generated tag", "d": "1/2018"}, {"body": "timmywil probally anyway need wait upgrade applications broken many packages requiring jquery latest doomed need wait ca nt hotfix much packages hope get done learnd also backup nodemodules folder dev", "d": "1/2018"}, {"body": "frankdspeed fine need get new release", "d": "1/2018"}, {"body": "released checked packagejson dependencies empty expected fine apologize inconvenience", "d": "1/2018"}, {"body": "pulled issue indeed fixed side thanks", "d": "1/2018"}, {"body": "also confirm fixed installed materializecss latest timmywil thank jquery team fast reaction happens developers know", "d": "1/2018"}, {"body": "elements document thus nt measurable width height example consider document css rule actual width height document would match natural dimensions image want value browser provides properties use", "d": "1/2018"}, {"body": "jquery chrome macos", "d": "1/2018"}, {"body": "might actually chrome bug since also call wrong url method post", "d": "1/2018"}, {"body": "filed bug chrome issue tracker ca nt reproduce using xml example using chrome linux mint", "d": "1/2018"}, {"body": "ajax requests asynchronous everything correct please look programming help stack overflow", "d": "1/2018"}, {"body": "nt look like jquery issue please look help stack overflow", "d": "1/2018"}, {"body": "found fault thank u", "d": "1/2018"}, {"body": "problem nt passing trying", "d": "1/2018"}, {"body": "trying remove event handler", "d": "1/2018"}, {"body": "expecting looks like delegated event handler attached delegated", "d": "1/2018"}, {"body": "turn possibility select text page turn possibility select text page", "d": "1/2018"}, {"body": "yes delegated handler js document selectstart dragstart function e epreventdefault document selectstart dragstart", "d": "1/2018"}, {"body": "actually nt know source taken think work work also currently work", "d": "1/2018"}, {"body": "nt work way probably get help stackoverflow since nt bug", "d": "1/2018"}, {"body": "may remove support", "d": "1/2018"}, {"body": "jquery migrate help find problems", "d": "1/2018"}, {"body": "asking faster sure bug issue", "d": "1/2018"}, {"body": "problem contains problem jquery nt parse idxyz part idxyz contains xyz valid selector queryselectorall takes slow path", "d": "1/2018"}, {"body": "oh related ticket sure impact real code timings likely based tight loop high iterations", "d": "1/2018"}, {"body": "correct still nt see reason make code pessimization greatly improved simple regex change", "d": "1/2018"}, {"body": "sure give try want keep mind additional regex complexity nt reduce performance common case", "d": "1/2018"}, {"body": "course btw option store parsed selector structure current jquery implementation parses selector string time runs", "d": "1/2018"}, {"body": "plumbing already sizzle case complex selectors nt want reimplement inside jquery optimize rare cases long term proposed merging sizzle jquery anything think would eliminate need many optimizations", "d": "1/2018"}, {"body": "btw expected time release", "d": "1/2018"}, {"body": "thank opening issue trying pull valid bits running separately idea gets extremely complicated besides one selectors potential check lot stuff slow doubt running attribute part separately would make much difference performance slow part invalid part much except recommend giving big block text", "d": "1/2018"}, {"body": "jquery idx find contains works much faster one selector due optimization queryselectorall first part easily split optimized jquery going hard", "d": "1/2018"}, {"body": "much faster would definitely run qsa would less text working learning site recommends things like sizzle extensions reason however sizzle already certain simple selectors like id class already take care common cases nt think worth adding attribute also nt think realize implications behind suggestion going run every valid part selector qsa matches selectors like complete rewrite sizzle honest exactly may happen future roadmap thing simple enhancement", "d": "1/2018"}, {"body": "well yes always thought jquery working way holds parse tree cache parse selectors time surprise see na\u00efve implementation btw performance issues reality due bad design going make drastically less queries", "d": "1/2018"}, {"body": "intentionally leave complex cases alone nt want reimplement escaping logic situations real code lack optimization makes difference typically examples given show sort tight loop selecting things times similar nt realistic", "d": "1/2018"}, {"body": "yes real word scenario need use selector id containing colon case simple getelementbyid times faster jquery btw queryselectorall nt think logic complex also many css selectors parsers used inspiration", "d": "1/2018"}, {"body": "know want something literal characters would need escaped css use", "d": "1/2018"}, {"body": "solution means need parse selector make optimization path exactly jquery", "d": "1/2018"}, {"body": "thanks opening issue idea behind catch common cases meant get overly complicated one common cases fast enough", "d": "1/2018"}, {"body": "actually sizzle already right regexp reason jquery nt use sizzle implementation miss thanks", "d": "1/2018"}, {"body": "meant catch every selector quick pass make common selectors like id class bit faster sizzle handles rest much complicated regex patterns meant match selector spec", "d": "1/2018"}, {"body": "timmywil small addition handling escaping small enough", "d": "1/2018"}, {"body": "instead w w w w w w", "d": "1/2018"}, {"body": "please review new pr smaller change", "d": "1/2018"}, {"body": "description sorts array dom elements place duplicates removed note works arrays dom elements strings numbers api doc", "d": "1/2018"}, {"body": "thanks opening issue microperformance improvement real use case performance good enough almost cases nt actually see suggestion improve jquery", "d": "1/2018"}, {"body": "difference also uniquesort ensuring elements unique sorting dom order obviously takes time elements rare anyway solution exactly would recommend learning site ca nt remove", "d": "1/2018"}, {"body": "thanks report jquery doc imo davide messaggio originale oggetto jqueryjquery add tooo sloooooow da timmy willison jqueryjquery cc sdav author difference add also uniquesort ensuring elements unique sorting dom order obviously takes time elements solution exactly would recommend learning site ca nt remove uniquesort add receiving authored threadreply email directly view github mute thread apiversion publisher apikey name github entity externalkey githubjqueryjquery title jqueryjquery subtitle github repository mainimageurl github url difference also uniquesort ensuring elements unique sorting dom order obviously takes time elements solution exactly would recommend learning site ca nt remove action name view issue url", "d": "1/2018"}, {"body": "thanks opening issue however repo bug tickets feature requests find support stackoverflowcom jquery gitter", "d": "1/2018"}, {"body": "timmywil thank guiding redirecting", "d": "1/2018"}, {"body": "thanks opening issue jquery lowerlevel library convenience wrappers around native apis jquery vulnerable things jquery would compromise security site like things vanilla js known vulnerabilities many ways ridiculous ultimately users responsible security sites jquery still best keep users making silly mistakes jquery misused abused many ways would impossible impenetrable safeguards point may actually nothing wrong site tell warning nt help", "d": "1/2018"}, {"body": "thanks timmywil response please nt show jquery vulnerablity example maven project found suppress code node js project", "d": "1/2018"}, {"body": "scan tool may option prevent specific vulnerabilities shown know unaffected beyond scope jquery bug tracker though would need look docs", "d": "1/2018"}, {"body": "seems like jquery ui bug jquery one subpixel values becoming important highresolution displays seems like would nt want fix ui bug truncating values", "d": "1/2018"}, {"body": "jqueryui bug reverting previous jquery library fix yes agree truncation would nt solution", "d": "1/2018"}, {"body": "reason major version bump make changes added things could potentially break code semver intends signal fractional dimensions documented migration guide", "d": "1/2018"}, {"body": "thank posted jqueryui forum", "d": "1/2018"}, {"body": "ca nt say sure without test case looks like rebinding handler navigation single page full page reload previous handler would still case expected behavior remove element jquery somehow jquery know get rid handler", "d": "1/2018"}, {"body": "thanks report please provide test case jsfiddle js bin show issue", "d": "1/2018"}, {"body": "reopened test case", "d": "1/2018"}, {"body": "thank opening issue however please follow bug report template provided clicking new issue unearthed old issue without test case specific problem likely need investigate issue stackoverflowcom", "d": "1/2018"}, {"body": "side note wonder java still required order execute tests considering chrome amp firefox nt supported java time tests work java required succeed also removed tests element causing problems outdated java alerts ie", "d": "1/2018"}, {"body": "markelog mgol work fine note however important difference others uses chromeheadless starts ends automatically singlerun whereas others bring karma dashboard browser choice click debug start tests pressed debug press debug documented gruntfile idea want run specific browser want able debug eg set breakpoint rerun tests extra step pressing debug probably nice karma could use improvement consider alternative without debug mode browser visually open see tests run anything qunit devtools like breakpoints rerunning individual tests karma close browser soon tests finish unfortunately enabling debug mode meaning browser stays open starting automatically mutually exclusive step start debug manually nt see good way change perhaps compromise rename task hint desired also add subtask starts chrome firefox without debug mode think next bug report karma closes browser something answer use karma chromedebug instead", "d": "1/2018"}, {"body": "scripts use seem working properly gruntfile serve docs nt think need put readme lists starter", "d": "5/2018"}, {"body": "think merge ticket need inventory grunt npm commands want userfacing ensure work", "d": "1/2018"}, {"body": "wish command updated description ticket", "d": "1/2018"}, {"body": "error message says trying execute jquery using windows script host meant run way include downloaded file html page open html page browser", "d": "12/2017"}, {"body": "save downloaded file html file kevin", "d": "1/2018"}, {"body": "thanks proposal api close core would nt want end lots similar apis thing slightly different way method written small jquery plugin nt see happening core", "d": "12/2017"}, {"body": "thank prompt reply micha\u0142 go\u0142\u0119biowskiowczarek lt notifications githubcom thanks proposal api close core would nt want end lots similar apis thing slightly different way method written small jquery plugin nt see happening core receiving authored thread reply email directly view github mute thread", "d": "12/2017"}, {"body": "problem binding onetime events registration happens fire listener never invoked looking jquery callback invokes callbacks even document already loaded", "d": "12/2017"}, {"body": "would give way fire event whole page load let know exactly use", "d": "12/2017"}, {"body": "stackoverflow thing certainly jquery bug report apis working always take look followup stackoverflow needs", "d": "12/2017"}, {"body": "please provide test case jsfiddle jsbin guess issue looking screenshots also wrote issue description html comment invisible please edit move description outside comment", "d": "12/2017"}, {"body": "reopened valid test case", "d": "1/2018"}, {"body": "testcase want see clearly converting using parsefloat issue use come check width using clientwidth goes getcomputedstyle get width later convert px", "d": "1/2018"}, {"body": "bharatnishad jsfiddle js bin run clearly see expect get screenshot middle execution nt really help much nt know code getting", "d": "1/2018"}, {"body": "see weird situation use come middle execution functionality kept element display none middle event handler file execute make true try compute width browser jquery width functionality get two time goes jquery width function get correct browser width happens time time get width call many times width function rest time may get correct width even time calling width function produce jsfiddle online see issue think time elemoffsetheight populate try take width computed style width function means jquery width function val name width elemoffsetwidth elemoffsetheight styles getstyles elem val lt val null fall back computed uncomputed css necessary val curcss elem name styles try get getstyles var getstyles function elem return elemownerdocumentdefaultviewgetcomputedstyle elem null function curcss elem name computed var width minwidth maxwidth ret style elemstyle seen elemownerdocument style attribue width taking value ret computedgetpropertyvalue name computed name ret nt know setting width windowdoucment take style width attribute hope gave enough information want live demo arrange video call show", "d": "1/2018"}, {"body": "volunteer time project lack capacity debug full application code especially video call provide succinct test case demonstrating problem nt enough information even verify one", "d": "1/2018"}, {"body": "described complex project many moving parts code could know issue also seem anything jquery please look programming help stack overflow", "d": "12/2017"}, {"body": "jquery downloaded npmjs already jquery slim inside", "d": "12/2017"}, {"body": "please ask help stackoverflow", "d": "12/2017"}, {"body": "\u5f53html", "d": "12/2017"}, {"body": "could possibly determine bug little information given template followed please ask help stackoverflow", "d": "12/2017"}, {"body": "jquery bug tracker nt anything common", "d": "12/2017"}, {"body": "ys sorry posted wrong repo thanks checking", "d": "12/2017"}, {"body": "intended supposed work exactly besides deprecated use", "d": "12/2017"}, {"body": "mgol found issue recieving empty response ajax post since tried parse empty response crashed function new reporting issues github maybe nt right approach reporting issue look tomorrow pinpont scenario issue reproducable post", "d": "12/2017"}, {"body": "eywenn given description though think bug stackoverflow first stop questions", "d": "12/2017"}, {"body": "dmethvin return success message server instead nothing", "d": "12/2017"}, {"body": "stackoverflow first stop google search leads post highest ranked answer telling shortest valid json strings", "d": "12/2017"}, {"body": "removed fix js file returning empty valid json instead thanks feedback", "d": "12/2017"}, {"body": "first thank question let start pointing team decided ago release slow steady pace translated releases year coming soon noted bombard users releases especially breaking changes releases intentional otherwise added workload users recommending upgrade release potential affect users websites entire plugin ecosystem also volunteers demanding jobs nt work jquery every week regards features right note jquery framework describe elegant lowerlevel api make working dom easy across browsers jquery get used alongside robust applicationbuilding solutions like angular reactredux main usage probably still lies within websites rather web applications make distinction noted generally pay attention remove rather features add info guidelines adding new features laid said plan release jquery subsequent patch releases soon minor features added version bigger plans jquery upcoming major releases includes complete rewrite using next generation javascript turn requires update build system want use modules need way keeps final size identical smaller original rewrite speed framework keep track performance regressions common operations allnew event module design detailed get done new design allow us support new native options like passive event listeners right jquery adds one handler per event type takes care call user handlers manually way supported old ie becoming plausible add native handler every user handler let browser work keep track larger plans roadmap thanks question go ahead close since bug feature request feel free continue discussion", "d": "12/2017"}, {"body": "hi timmywil thanks much reply expecting one soon also mind closing issue since elegant response answers main points concern however looking contributors graph observe trends today years later obvious drop occurred take last year see total commits covering period additions deletions comparing likes angular react vuejs paints pretty telling picture course know numbers everything think project size commits year single blog post much community interest support maybe reveals community nt see staple web okay maybe right focus library cares essential removes left cruft ajax animations etc syntax lovely maybe place redefined jquery likes angularreactvue cheers thanks informative reply", "d": "12/2017"}, {"body": "projects mentioned much larger scope jquery core nt really worth comparing certainly drop number commits believe still strong competent team fairly active community irc gitter angular react similar projects gained wide usage us story quite worldwide words think definitely truth saying jquery nt going anywhere long", "d": "12/2017"}, {"body": "jquery still used vast majority web sites opposed web apps including top million sites traffic according builtwith many web apps part crawlable web builtwith monitors many big frameworks focusing jquery people think majority feedback get changes compatible previous versions regardless whether previous behavior documented long way saying people nt fond changes think mistake someone building angular vue etc use dom manipulation jquery common use pull domstateful plugins defeat reason using frameworks first place communities building widgets work properly framework instead", "d": "12/2017"}, {"body": "jquery people think reason made issue due lack communicationactivity roadmap going forward regards jquery modern web features agree jquery nt going anywhere hope codebase ages even adapted jquery takes advantage new web platform features think agree xhr day windowfetch native replacement think much said apart wait watch happens coming years", "d": "12/2017"}, {"body": "progress great thing thankful plethora frameworks chose building web sites apps doubt jquery going away anytime soon reason reason c sqlite going away old hype always exist current shiny new thing sometimes justified sometimes substitute confidence knowing using seasoned stable thoroughly tested well documented library huge install base knowledge base plugin ecosystem usual always question choosing right tool job point still many jobs jquery still right tool probably continue", "d": "1/2018"}, {"body": "timmywil thanks explanation future jquery appreciate efforts especially full time jobs terms jquery release thinking end year", "d": "2/2018"}, {"body": "dotnetshadow yep thinking least getting beta end year", "d": "2/2018"}, {"body": "many things jquery made much easier back nt framesworks jquery nt framework compare angular dying react vue silly angular jqlite built projects worked added jquery since react newer versions angular work dom completely different used super handy use jquery selectors rarely use selectors anymore need use easy standard javascript ajax used another popular area jquery came handy promises newer versions javascript nice clean easy way ajax calls promises built using fetch promises newer javascript versions need use jquery babel also popular typescript allow us cross browser compatible something jquery really used help seeing comparisons frameworks makes wonder informed javascript general comparing jquery react like comparing comparing bicycle sports car issue jquery dropping continue drop popularity simply javascript gotten lot easier work frameworks might also reason jquery nt used much simply frameworks lot built functionality combined newer versions javascript yet see benefit using jquery", "d": "5/2018"}, {"body": "woah hold yoar hoarses bruvas jquery rawks like nun ok enough alphabet riddles mean jquery still currently highly relevant far building customized kickass spas function like standalone software web pages jquery cloud joy last years reason able code less design dealt javascript good ol days netscape ie wars grey hair lol long time ago times would design applications flash actionscript dhtml remember web pages back becoming dynamic less boring besides orgasmic headaches crossbrowser compatibility lol code base long wayyyy tooo lengthhhhyyyy much much later surpriiiise jquery arrives goal boldly go coder gone talk success jquery among awesome things introduces less code normalization bingo javascript library removed headaches crossbrowser compatibility relevancy jquery today equals facility designing code major reason adopt jquery stay closest native code without constraints frameworks emphasize allows customize ux way imaginable absolutely necessary designing prototypes another major reason jquery usage coding interpreter legible understandable hence intuitive explaining code within code bright let minifiers assorted cleaners job prepping file production one may gather modern browsers offer pretty much latest javascript jquery becoming redundant far crossbrowser compatibility issues jquery offers much foresee future jquery align sturdy crossbrowserness priorities userfriendly library possible allows among things novel quickest element manipulation traversing many frontend designers like want delve interactive spa coding web pages may full knowledge javascript none simply want design visions code effortlessly without steep learning curves constraints short shelf life frameworks respect jquery way less overwhelming designer needs expert programmer learning using jquery jquery remains relevant us folks awesome spas prototypes take look currently wwwdanavangardcom let hope jquery withstands wrath time keeping core features offering novelty instead redundancy jquery way da", "d": "5/2018"}, {"body": "jquery \u044d\u0442\u043e \u0440\u0430\u043a \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0440\u043e\u0436\u0430\u0435\u0442 \u043c\u043e\u0437\u0433 \u0438 \u043e\u0442\u0443\u043f\u043b\u044f\u0435\u0442 \u0440\u0435\u0437\u0438\u0433\u0430 \u0436\u0434\u0443\u0442 \u0430\u0434 \u0438 \u0430\u043d\u0430\u043b\u044c\u043d\u0430\u044f \u043f\u0435\u043d\u0435\u0442\u0440\u0430\u0446\u0438\u044f \u0437\u0430 \u0442\u043e \u0447\u0442\u043e \u043e\u043d \u043f\u043e\u0440\u043e\u0434\u0438\u043b \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u044b \u0434\u0435\u0431\u0438\u043b\u043e\u0432", "d": "9/2018"}, {"body": "angular dying quite patently incorrect", "d": "9/2018"}, {"body": "babel also popular typescript allow us cross browser compatible something jquery really used help make sense using babel typescript typesjquery feeling lot misinformation floating around", "d": "9/2018"}, {"body": "related jquery tool also best look help stack overflow questions bugs report", "d": "12/2017"}, {"body": "version jquery using please provide test case jsfiddle similar", "d": "12/2017"}, {"body": "reopened test case", "d": "1/2018"}, {"body": "thanks opening issue however need reduced test case order assess issues", "d": "12/2017"}, {"body": "daflip", "d": "12/2017"}, {"body": "super helpful thanks serbanghita", "d": "12/2017"}, {"body": "actually breaking change applies window performing outerheight div element attempt create reproducible version problem also got something machine using machine happens wo nt able reproduce", "d": "12/2017"}, {"body": "case share piece code tests suites manually want check", "d": "12/2017"}, {"body": "reopened test case", "d": "1/2018"}, {"body": "extending prototypes nt particularly builtin ones bad practice must use set", "d": "12/2017"}, {"body": "actually nt fairly common especially libraries fill feature gaps older browsers nt point thread point pass object function jqueryparam function throws error input values passed function param function fail wrapping valueorfunction trycatch would handle situation make param function bullet proof", "d": "12/2017"}, {"body": "want throw exceptions ca nt serialize input signals developers something wrong case two things builtin prototypes passing string documentation indicates need array plain object jquery object", "d": "12/2017"}, {"body": "thanks opening issue however expected behavior use keep second handler executing", "d": "12/2017"}, {"body": "dup btw even though someone looking behavior might consider bug fix change suspect would nt dare next major point likely redone jquery event plumbing one dom event per jquery event would fixed due course bunch assumptions people based current implementation broken well", "d": "12/2017"}, {"body": "thanks clarification", "d": "12/2017"}, {"body": "thanks opening issue stackoverflowcom good place questions", "d": "12/2017"}, {"body": "mean recognized work edge microsoft edge windows example logs target", "d": "12/2017"}, {"body": "dmethvin recognized mean script checks event gone p element work case work mean jquery event created clicking use element unfortunately nt access computer experienced issue right ca nt give exact revs happens edge machine happens edge ie", "d": "12/2017"}, {"body": "see edge", "d": "12/2017"}, {"body": "thought related explicitly decided jump instance shadow tree host tree event processing upon investigation looks like browser bug tested browserstack browser jquery event handler invoked ie svgelementinstance edge edgehtml svgelementinstance edge edgehtml svguseelement yes edge edgehtml svgrectelement ancestor chromium svguseelement yes firefox svguseelement yes edge almost certainly wrong probably switch chromefirefox model targeting host node could live instead reverting older behavior targeting instance node", "d": "12/2017"}, {"body": "previous versions status design understand edge behavior hard deal probably stay long anyway one handled quite easily think doubt ms going patch browser unfortunately still used corporations care much since particular case could workaround disabling pointerevents elements cases could real problem", "d": "12/2017"}, {"body": "concept shadow tree nt established time nt sure event propagation inside svgelementinstance nodes also protective performance hot code path seeing standard behavior comfortable jumping straight outermost host tree remember nest", "d": "12/2017"}, {"body": "shoot tree delegate might outermost might require jumping confused", "d": "12/2017"}, {"body": "possibly related", "d": "1/2018"}, {"body": "one workaround seems per maybe simple enough workaround nt need change anything jquery", "d": "5/2018"}, {"body": "dmethvin expected target still understand big deal warrants tons ugly patches", "d": "5/2018"}, {"body": "general jquery supports events bubbling svg events attached svg elements workaround seem fix issue shown fiddle", "d": "5/2018"}, {"body": "delegating works firefox chrome also pointerevents trick might said comment time cases wo nt ok wontfix issue known registered edge case jquery indeed main lib used people deals complex svg", "d": "5/2018"}, {"body": "worth jquery user would expect jquery match behavior behind scenes nonms browsers aka kaiido suggested svg sprites gaining momentum days important event delegation works mouse events fired inside svg elements ieedge", "d": "10/2018"}, {"body": "appears html serialization issue ie still see attribute set expected", "d": "12/2017"}, {"body": "thank opening issue agree issue worth addressing need test case actually pass address", "d": "12/2017"}, {"body": "excuse nt expirience plunker service forgot freeze test case", "d": "12/2017"}, {"body": "", "d": "12/2017"}, {"body": "progress update set edge locally seeing failures investigate", "d": "1/2018"}, {"body": "hmm mail claims ticket refered safari well also still fails tests core ones precise moved separate issue though", "d": "11/2017"}, {"body": "mgol yeah edited ticket creation ticket previously mentioned support test failing safari started testing already fixed", "d": "11/2017"}, {"body": "need use instead course", "d": "11/2017"}, {"body": "appears case code changes affecting likely outcome race condition jquery animations resolve synchronously millisecond duration short enough almost always elapsed time check completion first tick computer ms seems always avoid synchronous completion ms pretty much coin flip however convinced problem jquery require asynchrony recommend using example inside completion callback also reconsider short animation first would probably cleaner set properties immediately without animation construct promise asynchronous handling", "d": "11/2017"}, {"body": "decided meeting leave open hopefully abandon synchronous resolution updating jqueryfxstart schedule first tick zeroduration timeout also fix stutter animating collection first element gets head start", "d": "11/2017"}, {"body": "jquery repository jquery multiselect repository report issues plugin plugin authors also jquery longer supports ie version longer provide support older versions", "d": "11/2017"}, {"body": "could possibly debug test case copypaste information firefox console close please create new issue following instructions issue template", "d": "11/2017"}, {"body": "ps firefox quantum ubuntu firefox windows say nothing", "d": "11/2017"}, {"body": "maybe browser bug option thanks answer", "d": "11/2017"}, {"body": "would mistake assume direct connection window load event asynchronous jquery ready callback happen either order latter particular affected native events also jquery loaded ca nt even guarantee follows native domcontentloaded rely standards compliance browser given extremely unlikely add guarantees around behavior open issue pull request feel like documentation poor job expressing", "d": "11/2017"}, {"body": "determines object treated array determines across browsers tricky confusing sometimes however purpose aligns name also internalprivate function long understand passed think good", "d": "11/2017"}, {"body": "please look programming help stack overflow", "d": "11/2017"}, {"body": "jquery nt support querying namespaced tagsattributes", "d": "11/2017"}, {"body": "also note selector supposedly looking attribute none exists seems depending propertyattribute confusion older jquery come ancient stackoverflow thread maybe need look property try using instead", "d": "11/2017"}, {"body": "duplicate think though maybe make obvious upgrade guide api page", "d": "11/2017"}, {"body": "calling method way jqueryui influence reading manual help case change method like following elem return elements outside body body offset thisparents body length return top left return zeros disconnected hidden display none elements support ie lt running getboundingclientrect disconnected node ie throws error elemgetclientrects amp amp elemgetclientrects length return top left avoid unnecessary errors", "d": "11/2017"}, {"body": "version jquery ui older jquery ui version wo nt work newest jquery silencing errors often bad idea masks errors hit another way", "d": "11/2017"}, {"body": "yep right jqueryui maybe update though window document body would expect result change would produce best course call method objects since result rather na perspective avoid silencing errors exception like call method offset kind object may helpful explicitly point went wrong", "d": "11/2017"}, {"body": "upgrade guide jquery migrate already cover case neither used reason come older version ui tried valid used nothing long using recent version ui jquery migrate old version problem goes away error handling hard yes everyone would love specific error messages every case case could could something right inside jquery says noticed code tried call valid using jquery ui please make sure using recent version jquery ui fixed problem library would times larger error messages like sprinkled around code nt put minified version save space people still run mysterious problems upgrade plus already something similar migrate nt used", "d": "11/2017"}, {"body": "dmethvin nt thinking error messages embedded jquery rather mentioning upgrade guide entry offset far obvious makes invalid orand api page", "d": "11/2017"}, {"body": "use import jquery electron see amp details", "d": "11/2017"}, {"body": "nt maintain typescript definition file done report issues repo vs code depending bug", "d": "11/2017"}, {"body": "please look help stack overflow place report bugs support requests", "d": "11/2017"}, {"body": "thanks opening issue however create test cases need local files would make easier us assess issue", "d": "11/2017"}, {"body": "confirmed seems like edge bug possibly intentional one since appears limited opposed iframe windows going method parent window functionprototype rejecting child window function constructor plain objects child realm function object contrary ecmascript specification builtin function object one inherits functionprototype parent realm unfortunately nt think anything without introducing false positives", "d": "11/2017"}, {"body": "andrewew ever figure workaround issue anyone know bug ever submitted microsoft", "d": "3/2018"}, {"body": "awbuboltz workaround see substitute isplainobject function implementation jquery working fine described case", "d": "3/2018"}, {"body": "create jsfiddle shows bare xhr", "d": "11/2017"}, {"body": "mean say bare xhr", "d": "11/2017"}, {"body": "example using jquery thing", "d": "11/2017"}, {"body": "seeing behavior guess issue actually jquery library underlying xhr tried looking error event also nt provide error either seems problem unsolvable alas", "d": "11/2017"}, {"body": "duplicate", "d": "11/2017"}, {"body": "jquery github bootstrap github please open issue", "d": "11/2017"}, {"body": "jquery issue closing", "d": "11/2017"}, {"body": "thanks opening issue lot code test case please try reduce future inlining code eg getting rid flexorder method removing nonrelevant logic amp test cases etc case able see going though returning returns see firefox amp safari nt change representation number could report issue chrome bug tracker please link thanks", "d": "11/2017"}, {"body": "really nt see use case big number value might want handle problem way regardless nt think anything", "d": "11/2017"}, {"body": "please create test case jsfiddle jsbin show issue", "d": "11/2017"}, {"body": "hi use lasted version jquery happened", "d": "11/2017"}, {"body": "thanks opening issue however please create test case much convenient debugging", "d": "11/2017"}, {"body": "test case", "d": "11/2017"}, {"body": "might need fixed edge like dig make sure taking different code path browsers", "d": "11/2017"}, {"body": "confirmed jquery ignores svg script content type evaluates everything ecmascript breaking mechanism use suppress early evaluation edge bug report", "d": "11/2017"}, {"body": "thank investigating", "d": "11/2017"}, {"body": "entry already repo via publish npm amp bower one", "d": "11/2017"}, {"body": "unrelated jquery packages causing errors package nt dependencies peerdependencies", "d": "10/2017"}, {"body": "last part modified data underscore appears current timestamp suggesting actually part anticaching mechanism appending timestamps course one favoured techniques gone wrong", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "closing per dave comment", "d": "10/2017"}, {"body": "somehow key thing nt nt enough information determine problem jquery try mask nt even make sense somehow resolved nobody else reported problem need provide information", "d": "10/2017"}, {"body": "maybe error caused line precisely faulty implementation code htmlunit end", "d": "10/2017"}, {"body": "need test case order assess possible issue preferably jsfiddlenet jsbincom", "d": "11/2017"}, {"body": "use bare xhr problem persist moment seems like reporting edge bug jquery one nt enough information standalone test case determine actual issue", "d": "10/2017"}, {"body": "looks like could really edge bug created little test code browsers post status correct edge however get back status", "d": "10/2017"}, {"body": "created ticket microsoft bug tracker", "d": "10/2017"}, {"body": "far tell ca nt really work around obfuscate problem let edge fix", "d": "11/2017"}, {"body": "benefit using fetch feature done code work better", "d": "10/2017"}, {"body": "advantages promise based streaming responses response promise provides methods text json blob arraybuffer newer means better idk sorry think random weird issue advantages sooo huge think implementation much cleaner one xml maybe fetch replace sometimes", "d": "10/2017"}, {"body": "nt know could used compatibly within implementation already return promises via improvement expose somehow already performs functionality similar fetch data type methods think best way would via new api rather stacking new functionality top even clear whether would dependency jquery implementation could done plugin explore feature locking version mind nt think something core team manage build", "d": "10/2017"}, {"body": "enough detail act report likely issue setup please look help stack overflow", "d": "10/2017"}, {"body": "strongly disinclined work around native behavior would willing submit documentation pull request", "d": "10/2017"}, {"body": "thanks opening issue may need fixed browsers leave open time case anyone finds workaround", "d": "10/2017"}, {"body": "workaround offset diff documentelement getboundingclientrect element getboundingclientrect recall correctly", "d": "11/2017"}, {"body": "right offset element e calculated maybe bit esoteric edgecase page adds offset transform documentelement result relative transformed documentelement rather scroll origin differs current semantics maybe ok", "d": "11/2017"}, {"body": "fixing fix might able incorporate", "d": "1/2018"}, {"body": "smfr bokand would either like submit pr far css offsettransform problem already document dimensions accurate cases", "d": "5/2018"}, {"body": "wo nt time next weeks", "d": "5/2018"}, {"body": "since large performance difference native selectors processed via native method jquery selector extensions require sizzle code longer consider selector extensions however sizzle engine provides extension api lets add features like", "d": "10/2017"}, {"body": "good luck library", "d": "10/2017"}, {"body": "idea sudenly original turns good", "d": "10/2017"}, {"body": "dom returns attribute values strings must represent integers nt think want get business trying determine whether specific attributes proper numbers converting done similar things past example regretted", "d": "10/2017"}, {"body": "might understanding correctly concern elements move element height reduced completely normal layout works however could reduce test case bit large smaller test case would help us understand issue thanks", "d": "10/2017"}, {"body": "forgot mention bug mostly seen chrome problem occurs scroll page point green column stops moving page scrolls back try reduce even already really slim version actual page see issue thanks looking", "d": "10/2017"}, {"body": "repro steps use chrome visit link arrive page see green items cycling properly intended behavior scroll page bring item f g near top notice green column stopped instead whole page scrolling back problem", "d": "10/2017"}, {"body": "behavior complaining coming chrome jquery seems related scroll anchoring probably simplify single operation submit issue bugschromiumorg nt seem anything us", "d": "10/2017"}, {"body": "thanks time inputs continue investigating see pinpoint exact problem", "d": "10/2017"}, {"body": "conclusion problem indeed caused scroll anchoring css style overflowanchor none applied first column example solves issue", "d": "10/2017"}, {"body": "says nt care server returns header data type jquery interpret way server returns different types case nt trust server content type call manually inspect decode request complete", "d": "10/2017"}, {"body": "would expect attribute nonempty value set way see jquery issue", "d": "10/2017"}, {"body": "nt expect attribute text expect button text caption", "d": "10/2017"}, {"body": "ah see misread sorry", "d": "10/2017"}, {"body": "api page linked important second argument passed html string first argument must represent simple element attributes seems documented sure reason restriction though ideas team arturbaybulatov note docs explicitly discourage using pattern second argument convenient flexibility lead unintended consequences eg calling method instead setting size attribute better using method explicitly always works", "d": "10/2017"}, {"body": "way logic worked feature put long ago code fell simple path tag nothing else looked second argument list attributes otherwise second argument element creation context documentation tries warn people away method signature entirely noticed nt use", "d": "10/2017"}, {"body": "ah right clash signature", "d": "10/2017"}, {"body": "check console see edge generate exceptions versions jquery ca nt expected resolve", "d": "10/2017"}, {"body": "ugh confirmed git build think need something like unitpreserving round comparison fortunately reproducible able verify fix unit testing", "d": "10/2017"}, {"body": "news fixed downgrading version", "d": "10/2017"}, {"body": "pr would welcome nobody expresses interest probably put fix next release", "d": "10/2017"}, {"body": "would like work issue", "d": "11/2017"}, {"body": "saptaks feel free", "d": "11/2017"}, {"body": "saptaks see", "d": "11/2017"}, {"body": "add reported similar issue back may essentially told browser zoom supported essentially expect things break around versions policy changed end rip code using jquery rewrite also able rely jquery heightwidth parts may break intention fixing see originally described issue", "d": "12/2017"}, {"body": "nt anything wrong particular issue phrased way came sufficient detail merited attention even though probably stemmed similar underlying causes one highlighted fundamental problem support tests failing nondefault zoom levels severe given response wrong dmethvin noted landing changed things still ca nt guarantee behavior nondefault zoom confidence browser behavior observations correct likely resolve issues like official policy remains dimensions may incorrect page zoomed user try make things work even outside normal operating parameters fix achieved without incurring undue cost factoring size performance code complexity testability maintenance burden followup reports etc feel bad remove jquery dimensions calls application hope consider restoring released month please report issues encounter future notices caveats absolutes", "d": "12/2017"}, {"body": "way verify fix tried file seem include fix yet", "d": "12/2017"}, {"body": "yes correct looks like file stuck jquerycore someone need kick jenkins", "d": "12/2017"}, {"body": "jenkins looks like time content jobs broken amp never end killing manually time time vacation past days done jobs go", "d": "12/2017"}, {"body": "thanks able successfully verify fix updated jquerygitjs version", "d": "12/2017"}, {"body": "right rfc governing encoding javascript object query string people doubt depend current behavior since way decade need welldefined spec would advise using json could try setting see works case", "d": "10/2017"}, {"body": "add empty arrays additional option jquery ajax would change current behavior would add possibility send accurate data good naming things something like default", "d": "10/2017"}, {"body": "posted answer thread way could throw error every browser would fully parse every selector javascript nt going happen performance reasons", "d": "10/2017"}, {"body": "jquery nt support passive event listeners yet planned tracked closing duplicate", "d": "10/2017"}, {"body": "backwards compatibility older versions jquery deferred resolve fulfills values exactly provided supplied registered callbacks unmodified however deferred fully promisesa compatible deferreds returned always unwrap fulfillment values providing callbacks short may receive thenable never", "d": "9/2017"}, {"body": "arrow functions nt binding inherit one outer closure nothing jquery change", "d": "9/2017"}, {"body": "js element parentsuntil untilelement body addback el gt let el", "d": "9/2017"}, {"body": "help forum please try stackoverflow", "d": "9/2017"}, {"body": "current dom apis provide way correctly rooted query arbitrary element nt always return expected results vs example ancestor root element expression always returns elements root jquery returns elements root work around problem jquery temporarily adds attribute root triggers mutation observer already root element jquery use either add select avoid using", "d": "9/2017"}, {"body": "yep ok would explain thanks worked around temporarily disconnecting observer calling find calling observe using id would nt really appropriate think probably best solution case short manually enumerating children select looking one checked status", "d": "9/2017"}, {"body": "passing data string default formurlencoded encoding appear string method like would changed need either encode string change content type plenty examples stackoverflow elsewhere example", "d": "9/2017"}, {"body": "open tickets jquery repos ask help stackoverflow", "d": "9/2017"}, {"body": "jquery bug report", "d": "9/2017"}, {"body": "oh solve bug idea", "d": "9/2017"}, {"body": "support forum please ask stackoverflow somewhere else", "d": "9/2017"}, {"body": "url submitted contain fields urlencoded via similar encoding url still seeing please submit test case requested issue template", "d": "9/2017"}, {"body": "jquery internet explorer see browser support", "d": "9/2017"}, {"body": "nebrot way support dependency", "d": "9/2017"}, {"body": "need support old browsers like ie use jquery", "d": "9/2017"}, {"body": "way make jquery amp newer work ie says need support older browsers like internet explorer opera safari use jquery", "d": "9/2017"}, {"body": "hmm nt regenerate lockfile otherwise point lockfile reported npm", "d": "9/2017"}, {"body": "seems open since august feedback npm team far", "d": "9/2017"}, {"body": "interesting install everything opposite problem", "d": "9/2017"}, {"body": "related jquery core perhaps could ask help stackoverflow", "d": "9/2017"}, {"body": "provide test case", "d": "9/2017"}, {"body": "test code pc resize browser", "d": "9/2017"}, {"body": "lot going example reduced test case seems work fine", "d": "9/2017"}, {"body": "ca nt anything nt test case millions reasons problem may occur many would cause code external jquery provide test case", "d": "9/2017"}, {"body": "right issue comes another component datatablenet still looking fix thanks", "d": "9/2017"}, {"body": "live tried poland works correctly", "d": "9/2017"}, {"body": "china mainland try clear browser cache", "d": "9/2017"}, {"body": "aulvi gnarf know done response reports like think dealt past", "d": "9/2017"}, {"body": "works fine regardless browser cache problem must isolated location config try another browser", "d": "9/2017"}, {"body": "cced maxcdn support one sure follow uptest", "d": "9/2017"}, {"body": "tested found issues multiple locationisp china exempt hangzhoutelecom got dns failure affect one tho get additional info like cityisp make requests linuxmac run dusan maxcdn", "d": "9/2017"}, {"body": "really common think would gotten lot reports isp country must blocking either intentionally misconfiguration workaround host jquery server", "d": "9/2017"}, {"body": "jquery works fine windows error message think trying run javascript file windows command line script using wscript via file association try asking help stackoverflow", "d": "9/2017"}, {"body": "ajax request jsonp json padding least think padding since ca nt reach localhost check server would need send json padding flask mailing list help forum could ask questions rather bug tracker", "d": "9/2017"}, {"body": "bug jquery closing", "d": "9/2017"}, {"body": "sounds like request programming help bug report much code logic multiple methods used etc clear exactly reported please look help stack overflow", "d": "9/2017"}, {"body": "read issue template links sounds like issue", "d": "9/2017"}, {"body": "addition elements bound events jquery data associated elements removed remove elements without removing data events use instead", "d": "9/2017"}, {"body": "appears duplicate", "d": "9/2017"}, {"body": "thanx understand height element scroll bar different older version sad", "d": "9/2017"}, {"body": "already fixed next release restore correct behavior", "d": "9/2017"}, {"body": "tried build master sample code follows appendto body height result chrome jquery current version height exclude scrollbar height clientheight jquery height equals clientheight jquery height sum padding content height", "d": "9/2017"}, {"body": "note always return content height regardless value css property content height height css content box scrollbars subtracted use include padding additionally include borders need anything please post live example jsfiddlejs binetc investigate", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "thanks git build looks correct", "d": "9/2017"}, {"body": "thanks lot result follows windows chrome correct spec good bug fix different", "d": "9/2017"}, {"body": "starting jquery always asynchronous changed purpose see", "d": "8/2017"}, {"body": "mgol way execute code scripts added html executed like", "d": "8/2017"}, {"body": "since wrapping code script tag also wrap lines try rely order much though code get quite brittle think technically nt guarantee order preserved case right often better solution put scripts end body wrapping functions necessary", "d": "8/2017"}, {"body": "mgol since ca nt rely order possible something like", "d": "8/2017"}, {"body": "proper usage since issue fix jquery please look help stack overflow", "d": "8/2017"}, {"body": "yes know pseudo code meant something kinda like", "d": "8/2017"}, {"body": "see particularly past discussion potential workaround", "d": "8/2017"}, {"body": "docs passing array plain object wrap jquery object array", "d": "8/2017"}, {"body": "send btc aug vsync notifications githubcom wrote demo page window foo function e elm consolelog elm elm instanceof jquery window trigger foo printed result instance jquery dom element case ca nt jquery collection passed argument tested version receiving subscribed thread reply email directly view github mute thread", "d": "8/2017"}, {"body": "please create test case info issue template requested report current state nt enough details us proceed", "d": "8/2017"}, {"body": "part angularjs application using webpack sure exactly create jsfiddle issue hoping console output would suffice", "d": "8/2017"}, {"body": "console output suffice nt allow reproduce issue get correct output methods mentioned sites basic methods returned objects instead correct value sites using apis would totally break may something like webpack configuration bug buggy patching jquery etc see console following input also please note longer support jquery nt plan releases lines test jquery", "d": "8/2017"}, {"body": "get following edit switched jquery receive error wondering somehow jqlite still used despite jquery added bundle angular replace jqlite jquery detected", "d": "8/2017"}, {"body": "return jquery version used jquery object instead jqlite one one way check code pasted definitely jquery definition nt even match jquery code style nt look like angularjs jqlite definition either though angularjs version using either case nt look like jquery issue closing issue", "d": "8/2017"}, {"body": "stackoverflow answers well container pixels content visually overflowing page jquery returning correct value", "d": "8/2017"}, {"body": "send btc aug notifications githubcom wrote want get overflowed element width overflowedelement width return incorrect value information read question please fix receiving subscribed thread reply email directly view github mute thread", "d": "8/2017"}, {"body": "thanks opening issue proper fix users host test files ajax tests get revamp anyway nt think practical expect tests hostable recommended installation method way installation methods found jquerydist repo readme turn also jquery docs npm advanced method involves building jquery grunt require cloning repo would expect advanced users ones hosting tests", "d": "9/2017"}, {"body": "tomnomnom also note development repo lot things nt cloned production environment also contains release files timmywil says someone custom build ever need clone repo reason expose server want provide info found send security jquerycom take look", "d": "9/2017"}, {"body": "dmethvin sent email suggested thank aware users nt meant clone repo deployment imo would better fix issue rely users always right thing demonstrably", "d": "9/2017"}, {"body": "tomnomnom removing file would fix issue mask ca nt think possible xss every file commit repo whole repository designed secure publicly exposed rather pretend make secure especially changes repo like introduce xss issues people deploying whole repo anyway one way fix issue sites end stopping deployment whole repository", "d": "9/2017"}, {"body": "record think open addressing server vulnerabilities given run publicly ways well annoying someone could attack jenkins build server however client vulnerabilities nt apply build server issue detailed report vulnerability allows one echo plain text javascript file dynamically served build server intentional nt attack surface given web browsers nt grant crossorigin rights foreign script loading javascript domain page domain b runs way would run domain b think cdns nt provide crossorigin access domain unlike eg crossorigin html iframe someone host production server nt static uses secure cookies domain would pose threat would first require html page server actual xss vector eg something allows arbitrary html injection page turn enables attacker insert script tag jsonpphp somehow change url existing script tag", "d": "9/2017"}, {"body": "krinkle afraid true set header interpreted browsers xss vector required hosted example try going link firefox chrome xss auditor kicks despite lack header firefox", "d": "9/2017"}, {"body": "tomnomnom aye yeah fact php even outputs contenttype explicitly default think still test confirms able support jsonp response tag contenttype wrong quite common web unfortunately however make particular test case hardcoded callback nam supports whitelisted pattern callback name lands make pr sets proper contenttype also validate callback name reject invalid values mgol could reopen assign", "d": "9/2017"}, {"body": "krinkle ca nt assign reason keep mind nt want get bottomless pit possible vulnerabilities caused people using repo unusual ways another point even add guard guard would necessarily propagate everyone may hosting whole repo would pull changes folder hosted ca nt even guess crazy stuff could exposed", "d": "9/2017"}, {"body": "krinkle still like tackle welcome closing patchwelcome tho", "d": "10/2017"}, {"body": "nodejs shipped npm get npm expect lot things fail npm make sure environment correct modern npm remove nodemodules amp githooks try npm install micha\u0142 go\u0142\u0119biowskiowczarek", "d": "8/2017"}, {"body": "reopen info", "d": "9/2017"}, {"body": "thanks opening issue however moving away messing properties event objects unless absolutely necessary think best get way properties like words think remain consistent drop", "d": "9/2017"}, {"body": "looking help installing jquery via yarn better asking question stackoverflow related jquery bug repo", "d": "8/2017"}, {"body": "dmethvin bug far see yarn vehicle installed jquery wanted mention", "d": "8/2017"}, {"body": "requiring jquery node could look many moving pieces eg webpack bundling using jquery webpack apps works fine whatever happens app importing jquery prerequisite stack overflow amp similar venues better places help debugging really issue jquery debugging would point exactly broken could fix likely cause issue something different jquery way us resolve help debugging app jquery bug tracker correct place action", "d": "8/2017"}, {"body": "getting problem npm inside urlindexof function edit indexof deprecated function part gets called use window load function nt kind error would expected load calling fnload nt", "d": "11/2017"}, {"body": "package named package names using capitalized letters deprecated package deprecated seen deprecation message install process nt", "d": "8/2017"}, {"body": "typescript issue rather jquery jquery team nt maintain typescript typings please look help stack overflow", "d": "8/2017"}, {"body": "thanks report sure prs welcome micha\u0142 go\u0142\u0119biowskiowczarek", "d": "8/2017"}, {"body": "jquery internal tests sometimes throw errors later caught nothing gets whatever problem nt think error please look programming help stack overflow anything wrong jquery need test case shows working issue template removed asked provide test case", "d": "8/2017"}, {"body": "thanks opening issue first environments mentioned nt require global globals casesensitive nt want pollute global namespace", "d": "8/2017"}, {"body": "lack support means also lack support parsing include jquery separate file affect files combine various files one want support older browsers need transpile", "d": "8/2017"}, {"body": "possible people want call tracks adding support passive event listeners jquery unfortunately requires significant refactor event subsystem ca nt happen", "d": "8/2017"}, {"body": "another part cluster", "d": "8/2017"}, {"body": "live test case stems sizzle use getelementsbytagname behavior apparently changed chrome honest nt think worth fixing proper treatment xml namespaces world browsers theirselves inconsistent worms nt feel like opening going reference wo nt fix list regretfully close issue", "d": "8/2017"}, {"body": "thank answer", "d": "8/2017"}, {"body": "well quite test case nt know exactly features code may use likely needed jquery remove see code still works touch device", "d": "8/2017"}, {"body": "code still needs support old new jquery run code jqueryeventfixhooks exists", "d": "8/2017"}, {"body": "thanks dmethvin seems work fine touch device without hack mentioned try find originally added determine still needed", "d": "8/2017"}, {"body": "good hear jquery could use code like jquery treated pointer touch events like mouse events normalized event objects changes supported browsers different approach normalizing event objects jquery nt needed want support versions could add around code", "d": "8/2017"}, {"body": "thanks dmethvin makes sense actually figured code superfluous case original problem fixed another way another point time needed get x touch screen without hack still works jquery lt", "d": "8/2017"}, {"body": "sometimes breakages caused changes browserstack side rerun tests commit mentioned one results identical broke something indeed marking blocker", "d": "8/2017"}, {"body": "thanks krinkle", "d": "8/2017"}, {"body": "created pr fixing butt significant cost may good basis look real problem", "d": "8/2017"}, {"body": "looks like dupe single ajax failures tests timeout", "d": "7/2017"}, {"body": "mgol report assertion failure test failure ajax test suite happening android android presumably well see screenshot difference beforeafter time outs tests android preexisting issue since one week earlier filed separately", "d": "7/2017"}, {"body": "ah misread", "d": "7/2017"}, {"body": "seems android call ontimeout handler test added added ontimeout responder test ensures actually respond native calls browser never calls nt necessarily something wrong see options add workaround use settimeout call ontimeout manually sounds errorprone hacky nt run test android lean towards", "d": "1/2018"}, {"body": "well run tests holds excludes android", "d": "1/2018"}, {"body": "read issue template asked test case short report nothing", "d": "7/2017"}, {"body": "result", "d": "7/2017"}, {"body": "ajax call asynchronous example invocation handler attached via always asynchronous see information particular another behavior change required promisesa compliance deferred callbacks always called asynchronously previously callback added deferred already resolved rejected callback would run immediately synchronously", "d": "7/2017"}, {"body": "would help improvement code", "d": "7/2017"}, {"body": "synchronous ajax generally bad idea quick fix would switch", "d": "7/2017"}, {"body": "thanks works", "d": "7/2017"}, {"body": "invoking global context overwriting always casted string avoid writing code global context avoid", "d": "7/2017"}, {"body": "see thank much", "d": "7/2017"}, {"body": "going opposite direction recently guard undefined input let fail may mask errors sometimes better error avoid bug case simple fix wrap declaration statement", "d": "7/2017"}, {"body": "reasonable design choice error expected behavior made explicit detecting case throwing error mentions invalid arguments", "d": "7/2017"}, {"body": "wasabifan practical infinite number invalid arguments api documentation makes clear valid nt please make pr clarify jquery size would extremely large code inside check every possible bad argument interested catching earlier development process look using typescript definitelytyped definitions jquery api", "d": "7/2017"}, {"body": "practical infinite number invalid arguments api documentation makes clear valid nt please make pr clarify docs explain behavior easily fixable however explain check already implemented pass function returns properties map note nothing returned setter function ie function index style undefined returned current value changed useful selectively setting values certain criteria met adding check noop undefined parameter would make behavior consistent existing logic would nt grow size interested catching earlier development process look using typescript definitelytyped definitions jquery api currently working typescript unfortunately typescript nt help cases one discussed pass", "d": "7/2017"}, {"body": "unfortunately typescript nt help cases one discussed pass work strict null checks mode good setting enable nt checked definitelytyped jquery definitions compatible though", "d": "7/2017"}, {"body": "haha although agree strict null checks good way go cause problems pretty large codebase unfortunate amount legacy code laughing", "d": "7/2017"}, {"body": "function signature tbh fan imo mostly complicate api case even cause layout thrashing design removing would big breaking change someone uses api migrating away special handling would harder nonfunction argument comes changing use direct equivalent", "d": "7/2017"}, {"body": "thanks report", "d": "7/2017"}, {"body": "jquery nt use getter properties places consistent rest jquery api people using jquery knows changing would create unnecessary churn also insteaf instead etc sorry something going", "d": "7/2017"}, {"body": "sscholle even sure asking ask test case even pseudocode explaining expect work links stackoverflow issues would make sense something like would setting property jquery collection assume asking nt like easily get attribute via would", "d": "7/2017"}, {"body": "would even used running suite weird", "d": "7/2017"}, {"body": "likely unrelated remember correctly noticed tests failing changed chrome testswarm job started restarted one older job chrome amp ensure fine one passed one failed seems memory nt fail chrome changed something test breaks used work even chrome time likely something changed browserstack side", "d": "7/2017"}, {"body": "sorry noise cisensitive issues always hardest fix however finally back passing anyone would like perform posthoc review comprehensive view changes also one ignoring whitespace", "d": "7/2017"}, {"body": "noted fixed crossedfingers", "d": "7/2017"}, {"body": "fixed", "d": "7/2017"}, {"body": "calling good failures chrome focus issues", "d": "7/2017"}, {"body": "expected read information", "d": "7/2017"}, {"body": "never officially supported phantomjs version think fine start testing helps", "d": "7/2017"}, {"body": "yeah nt really want support phantomjs jquery core nt want redo whole unit test code coverage setup migrate either would patch around keep things going nt exposed anymore called within also well protected let see take get migrate working phantomjs maybe bad", "d": "7/2017"}, {"body": "upgrading phantomjs simple famous last words know", "d": "7/2017"}, {"body": "upgraded jquery migrate phantomjs ca nt get work windows travis seems dig one failure looking", "d": "7/2017"}, {"body": "think good would good release notesblog remind people nt support phantomjs next release since break ca nt easily fixed outside", "d": "7/2017"}, {"body": "", "d": "7/2017"}, {"body": "template issue requested would like see test case also clearer description work although might totally clear test case", "d": "7/2017"}, {"body": "tried repeating fiddle reproduce occurring code closing issue", "d": "7/2017"}, {"body": "directory amd modules published", "d": "7/2017"}, {"body": "thanks opening issue things want directory included prefer include individual modules publish npm repo build scripts push relevant files jquerydist repo publish npm", "d": "7/2017"}, {"body": "comment file points", "d": "7/2017"}, {"body": "thanks opening issue question better suited stackoverflow able find need requirejsorg", "d": "7/2017"}, {"body": "dmethvin timmywil thanks fault nt pay attention comments search google stackoverflow", "d": "7/2017"}, {"body": "godtail need map option", "d": "7/2017"}, {"body": "please look programming help stack overflow jquery forums gitter", "d": "7/2017"}, {"body": "please nt submit fake issues", "d": "7/2017"}, {"body": "nt parser provided jquery sending full string browser docs already say note css ignores important declarations statement p css color red important turn color paragraphs page red strongly advised use classes instead otherwise use jquery plugin", "d": "7/2017"}, {"body": "rtfm thanks plans using setproperty setting styles fairly trivial add priority case looks like used custom props anything else", "d": "7/2017"}, {"body": "hello found question stackoverfow setproperty may add parsing important word executing setproperty made changes forked version working issues finalpropname call rewrites name variable example name backgroundcolor calling method makes name variable equals backgroundcolor setproperty method executed value thats save value name var oldname var finalpropname executed beautiful setproperty working lowercamelcased property names also found hooksset call works properties like width height nt exactly understand purpose code maybe anyone knows fork calls ignored important word exists parse execute setproperty fix tests yet refork rewrite commit commit message nt match guidelines commit atomic see", "d": "8/2017"}, {"body": "question better answered stackoverflow see property post followup questions", "d": "7/2017"}, {"body": "think mean datatype text obvious since json always text json text written javascript object notation", "d": "7/2017"}, {"body": "seems jquery ui bug tracker imo post issue bugtracker", "d": "7/2017"}, {"body": "thanks johanns pointing right forum created one", "d": "7/2017"}, {"body": "happen every clone attempt remove directory", "d": "7/2017"}, {"body": "thanks report compared results call node node returns different values important uses find configure install commitplease let think bit", "d": "7/2017"}, {"body": "ok taken look reliable way know find path project trying install rely fact inject path ending one could find path suffix chop use prefix get anyone know less hacky approach", "d": "7/2017"}, {"body": "nt work", "d": "7/2017"}, {"body": "gives need need project installing case contains settings like install hook projectspecific", "d": "7/2017"}, {"body": "bad", "d": "7/2017"}, {"body": "reason specifying download github version code look inside old one test however test inside directory worked", "d": "7/2017"}, {"body": "correction installation works actual message linting looking", "d": "7/2017"}, {"body": "nice sarcasm changed empty contain path commit message important commitplease used distinguish run hook go fetch run global script use js lib checks sorry new way distinguish global hook needed ideas right cc jzaefferer update triggered hook contains path message file sentences mistake", "d": "7/2017"}, {"body": "nt think anything jquery let know case", "d": "7/2017"}, {"body": "problem fixed merged yet jzaefferer please let know think pr merge release", "d": "7/2017"}, {"body": "timmywil im unable create new wiki page maybe stated pointers could go creating wiki page", "d": "6/2017"}, {"body": "created opened wiki editing might temporary depending whether get spam", "d": "6/2017"}, {"body": "documentqueryselectorall works expected however dies way chrome edge takes minutes seconds give answer return firefox runs almost instantaneously seems like issue independent jquery", "d": "6/2017"}, {"body": "jquery fail stack exceeded least function rewritten use recursion", "d": "6/2017"}, {"body": "look repro case gave fails chrome well jquery type console", "d": "6/2017"}, {"body": "however seems work let talk meeting", "d": "6/2017"}, {"body": "going try dropping use loop already sizzle ie lt fallback perf nt issue code end shorter", "d": "6/2017"}, {"body": "moved sizzle issue", "d": "7/2017"}, {"body": "using apply creates new arguments eventually exceed size stack loop place results argument list thus keeps stack smaller", "d": "5/2018"}, {"body": "thanks opening issue however need issues test cases demonstrate reproduce problem work please provide test case reopen", "d": "6/2017"}, {"body": "working documented lowlevel method retrieve data attributes unless convenient data method already retrieved", "d": "6/2017"}, {"body": "look video looks different get confused step come back cant yet", "d": "6/2017"}, {"body": "fixed ie fix subsequently broke ie", "d": "7/2017"}, {"body": "thanks opening issue result correct border outer div inner div really", "d": "6/2017"}, {"body": "reopen issue test case bad issue slightly wrong bug provided better test case fixed title description bit", "d": "6/2017"}, {"body": "please work test case minimum removing css html elementsattributes nt affect result", "d": "6/2017"}, {"body": "done new test case needed reproduce issue", "d": "6/2017"}, {"body": "thanks updated test case confirm behavior ie changed jquery", "d": "6/2017"}, {"body": "see inspector notice assume coming default stylesheet add goes away guarantee browsers default stylesheet even possible measurements might different due things like font substitution", "d": "6/2017"}, {"body": "dmethvin biggest issue behavior ie changed jquery looks like unintended breaking change", "d": "6/2017"}, {"body": "problem seems hinge phantom borders ie investigate reason", "d": "7/2017"}, {"body": "please look programming help stack overflow", "d": "6/2017"}, {"body": "fix die", "d": "6/2017"}, {"body": "jquery never able guarantee full interoperability nativevsjquery event handlers best think jquery event subsystem layer top native events happening triggering fake jquery click associated native use track jquery whether propagation stopped default prevented although stopped end truncated bubbling call native dom event calls native handler", "d": "6/2017"}, {"body": "switched using native events triggering could handle scenario expense several serious breaking changes jquery event subsystem also simple lookup know events magically understood specially processed dom click versus custom mycustomevent constructor use etc since would breaking api anyway easiest thing would make caller construct event would nt need lookup", "d": "6/2017"}, {"body": "agree dmethvin bit surprising working designed see trigger documentation plain objects dom objects triggered event name matches name property object jquery attempt invoke property method event handler calls behavior desired use instead correctly prevents jquery running handlers ancestors prevent browser creating bubbling event invoke execute default action like would invoke submit form even propagation stopped since seems like nt want default action use instead invoke addition return listener calls behalf", "d": "6/2017"}, {"body": "yes says nt need stop propagation beyond event target want run jquery handlers without preventing default action use lot tracking systems google analytics facebook etc seem attach events document", "d": "6/2017"}, {"body": "dmethvin naive assumption tells something could done look following lines srceventtriggerjs could nt something like prevent retriggering event since already bubbled jqueryeventtriggered type eventispropagationstopped add native event handler stopspropagation elem type eventispropagationstopped remove event listener added jqueryeventtriggered undefined think makes sense could try work yes running tests find tests relating function", "d": "6/2017"}, {"body": "caillou something like might work determine stopspropagation would need remember element stopped", "d": "6/2017"}, {"body": "dmethvin loot ends line srceventtriggerjs need keep track last node executed upon something like use counter access last node iterated", "d": "6/2017"}, {"body": "dmethvin one problem nt seem find tests relating code additional test cases outside repository test code update figured run integration tests addition unit tests", "d": "6/2017"}, {"body": "tests try locally see work", "d": "6/2017"}, {"body": "dmethvin created branch test reproduce bug proposal bugfix would proceed create pr", "d": "6/2017"}, {"body": "stevenbenner pinged twitter webcompat account via see properly undefined focus event reason seeing jquery transparentlylazily return properties original event test case shows value firefox", "d": "6/2017"}, {"body": "thanks interested hear peoples thoughts based mdn docs suspect properties included firefox focusevent inherits uievent implementation includes uieventpagex note doc page warning nonstandard properties probably trustworthy coming mouseevent eg mouseeventpagex certainly looks like firefox spec one type thing jquery normalize fix fairly trivial implement hacky since value properties trusted workaround compare event type list events would expected include cursor position data ignore coordinate properties included events matched", "d": "6/2017"}, {"body": "browsers fast update cycle nowadays compat issue fixed firefox relatively quickly seems like obscure enough issue code sensitive able check since events occur high frequency jquery tries keep extra code path", "d": "6/2017"}, {"body": "denschub wisniewskit might idea stevenbenner start specific version firefox", "d": "6/2017"}, {"body": "recent change event remove pagexpagey fill event object ah also safari version safari tech preview release safari webkit return results firefox", "d": "6/2017"}, {"body": "nt want keep list appropriate event types even blacklist futureproof seems clear right thing even returning property value lazily meaning longer copy property ahead time step right direction possibly best course take since value nt reliable useful user high priority issue unlikely change anything", "d": "6/2017"}, {"body": "notice problem indicates something caused jquery see several years similar tickets years ago something jquery fix across browsers something easy document jquery level applies jquery apis see web developers need understand problem whether use jquery", "d": "6/2017"}, {"body": "nevermind javascript numbers bits floating point numbers means ca nt represent javascript java longs size mantissa bits means number ca nt exactly represented javascript number js crazyness", "d": "6/2017"}, {"body": "js crazyness", "d": "6/2017"}, {"body": "crazyness use floats default everything", "d": "6/2017"}, {"body": "ca nt reproduce running incognito ensure plugins interfering also added focus event", "d": "6/2017"}, {"body": "incognito mode browser nt autofill form screenshots chrome page see chrome jquery triggers focusin event reason focus event triggert without jquery cant reproduce issue", "d": "6/2017"}, {"body": "strange still ca nt reproduce extra event chrome windows anyone else", "d": "6/2017"}, {"body": "followed steps also reproduce chrome mac os closing worksforme", "d": "6/2017"}, {"body": "reopen bug timmywil dmethvin chrome autofill form step password nt stored correctly", "d": "6/2017"}, {"body": "tested bug completly new installation chrome reproduce issue external plugins installed", "d": "6/2017"}, {"body": "trust look like bug scripts rather jquery issue making noises b nobody able help unless provide enough context suggestion closing one switch portals eg stackoverflowcom", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "please look help stack overflow rhyw suggested also afaik none jquery maintainers speaks chinese reports incomprehensible us", "d": "6/2017"}, {"body": "\u8fd9\u91cc\u662f jquery issue \u90fd\u662f\u4e0e\u6539\u8fdb issue \u5c31\u662f\u672c\u9879\u76ee\u63d0\u4ea4 issue", "d": "6/2017"}, {"body": "btw thank rhyw techquery helping communicate chinese bug reporters appreciated", "d": "6/2017"}, {"body": "", "d": "6/2017"}, {"body": "\u53ef\u4ee5\u52a0\u5165\u4ee5\u4e0b qq freecodecamp \u4e2d\u6587\u793e\u533a \u5b66\u5458 freecodecamp \u6210\u90fd\u793e\u533a", "d": "6/2017"}, {"body": "\u597d\u7684", "d": "6/2017"}, {"body": "\u8c22\u8c22", "d": "6/2017"}, {"body": "rhyw mgol lots jquery users web frontend coders china less confidence english fortunately many chinese programmers working improve capable international communication", "d": "6/2017"}, {"body": "warning generated browser jquery best avoid synchronous xhr", "d": "6/2017"}, {"body": "going find plugin literally reason still want support old browsers use nt want index first", "d": "6/2017"}, {"body": "ok main idea merge element variables one action example would class myclass", "d": "6/2017"}, {"body": "matter end result exactly also example existing method", "d": "6/2017"}, {"body": "scottgonzalez many thanks exactly meant", "d": "6/2017"}, {"body": "intended see", "d": "6/2017"}, {"body": "transforms taken account purpose see", "d": "6/2017"}, {"body": "sorry extra pull requests struggeling bit morning looking forward feedback", "d": "12/2017"}, {"body": "docs height say dimensions may incorrect page zoomed user browsers expose api detect condition consistent experience", "d": "6/2017"}, {"body": "jquery never support browser inbuilt zoom think standard caveat one thing point use case showed working failing stop users switching zoom levels breakage appears specifically chrome assuming something changed height calculated respect break occur zoom supported jquery assume best approach move away jquery another library pure js requirement specific cases case issue fixed subtracting calculate padding top bottom calculated height based specific css", "d": "6/2017"}, {"body": "jquery never support browser inbuilt zoom think standard caveat standard caveat phrase quoted every dimensionrelated api page zoom supported jquery assume best approach move away jquery another library pure js requirement specific cases solve particular case writing code often possible narrow scope problem using things know invariants layout another library pure js solves general problem let us know", "d": "6/2017"}, {"body": "fact used work broke matter concerned may inadvertently affect aspects dimensions zoom involved get outlook ios dave methvin notifications githubcom sent wednesday may pm jqueryjquery cc cuzzins author subject jqueryjquery differing results height zoom set non value padding boxsizing set borderbox jquery never support browser inbuilt zoom think standard caveat standard caveat phrase quoted every dimensionrelated api page zoom supported jquery assume best approach move away jquery another library pure js requirement specific cases solve particular case writing code often possible narrow scope problem using things know invariants layout another library pure js solves general problem let us know receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "uncommon cases document unsupported change behavior across versions ca nt test yes may change browsers nt give consistent results zoomed dimensions mentioned tested chrome far imagine trying test browsers support programmatic way zoom page way user simple solution missing", "d": "6/2017"}, {"body": "maybe need delve code try work code changed breaking way change breaks code way need find solution way seems avoid jquery dimension related code fear much code may broken kinda happy jquery sure change happened way broke things users case use chrome start testing zoomin browsers sure matters unsupported get outlook ios dave methvin notifications githubcom sent wednesday may pm jqueryjquery cc cuzzins author subject jqueryjquery differing results height zoom set non value padding boxsizing set borderbox uncommon cases document unsupported change behavior across versions ca nt test yes may change browsers nt give consistent results zoomed dimensions mentioned tested chrome far imagine trying test browsers support programmatic way zoom page way user simple solution missing receiving authored thread reply email directly view github mute thread", "d": "6/2017"}, {"body": "doubt change math calculating dimensions possible change ifwhen fix land things like", "d": "6/2017"}, {"body": "successfully deal problem unfortunately bootstrap uses css values display style property set none instead using bootstrap class create custom class without", "d": "5/2017"}, {"body": "ca nt pass arbitrary content jquery expect safe made rules easier follow past lt potentially preceded whitespaces interpreted html content need make sure happen expect code nonmalicious hash use case", "d": "5/2017"}, {"body": "raminfp responsible source content parse", "d": "6/2017"}, {"body": "infinite number script injection exploits use jquery jquery designed help inject scripts developer must aware filter input example js tell function tellme click function documentbody append name name val", "d": "6/2017"}, {"body": "longstanding problem margins html body elements comments already offset position documentation issue cause css resets explicitly set margin padding html body would solve issue something", "d": "5/2017"}, {"body": "use margintop cms add menu top viewport pushing rest theme setting margintop respectively would cause lot issues work around issue though anyhow testing obviously bug ie since eventclienty reports expected value see", "d": "5/2017"}, {"body": "thank opening issue likely make changes", "d": "6/2017"}, {"body": "thanks opening issue first releases repo anymore isolated separate repo see however releases nt returned github api repo either draft release notes github jquery blog regardless simply use instead", "d": "6/2017"}, {"body": "gave look code fact bug inside dataprivset elem display display set call hide set show bug example display flex javascript call divshow set node block flex call hide set internally prev value block flex call show set diplayblockprev", "d": "5/2017"}, {"body": "works please create jsfiddlenet example browser version jquery", "d": "5/2017"}, {"body": "jquery javascript library sorry work explained bug", "d": "5/2017"}, {"body": "nt support jquery amp anymore try jquery sorry work explained bug explanation clear enough always ask minimal test case since reported jquery test case going close issue still see jquery test case demonstrating problem reopen", "d": "5/2017"}, {"body": "unfortunately behavior long history changing would big breaking change right document issue note deferredalways method receives arguments used resolve reject deferred object often different reason best use actions require inspecting arguments cases use explicit done fail handlers since arguments wellknown orders", "d": "5/2017"}, {"body": "thank opening issue like avoid copying many properties unless need normalizing perf reasons see issues discussions go deprecating jquery", "d": "5/2017"}, {"body": "thanks links issue informative", "d": "5/2017"}, {"body": "per method applicable window document objects use height instead per method applicable window document objects use width instead", "d": "5/2017"}, {"body": "jquery bug tracker support forum fact one answered places excuse look help", "d": "5/2017"}, {"body": "looked year ago browsers still nt consistent propagating clicks disabled buttonslinks see ticket references reason setting property elements defined meaning elements happen pick name short meaningful custom need", "d": "5/2017"}, {"body": "set property links habit since works buttons afterwards realize nt disable click handler since property supported links certainly critical issue make habit report potential bugs open source projects use", "d": "5/2017"}, {"body": "talked many things break invalid html deemed possible solutions worth", "d": "5/2017"}, {"body": "fine thanks considering thought might well get situation documented case anyone else runs", "d": "5/2017"}, {"body": "since test case close test case include jquery latest version angular might try asking debugging help stackoverflow", "d": "5/2017"}, {"body": "inline event handlers supported", "d": "5/2017"}, {"body": "mgol behaviour exists addeventlistener", "d": "5/2017"}, {"body": "yeah even happens without jquery", "d": "5/2017"}, {"body": "dmethvin nt click canvas see issue made canvas white obvious", "d": "5/2017"}, {"body": "znewsham test case broken nt include jquery fixed amp added invocation alerts appears", "d": "5/2017"}, {"body": "mgol hate beat dead horse slightly different doesnt work addeventlistener used though work additionally", "d": "5/2017"}, {"body": "jquery nt fire event listeners attached jquery event system layer top dom events way jquery know elements dom events attached even whether event fired event known browser like vs userdefined event like list varies browser reason event like works like want cases jquery runs dom method element present discrepancies inline handlers event listeners impact jquery behavior see", "d": "5/2017"}, {"body": "dmethvin thanks info ended dealing specific situation overriding first call eventually rewrite library use jquery events natively reason make testing big rewrite easier ca nt start rewrite tests place", "d": "5/2017"}, {"body": "might guess name cleans data elements added calls jquery method including event handlers attached uses jquery data functionality internally remove large dom subtree jquery go free data may stored elements subtree call custom event teardown handlers may set element take quite bit time given random point dom tree jquery nt way know whether elements subtree contain custom event handlers data must explicitly removed know sure none descendants contain jquery data could something like avoid searching subtree data events careful though incorrect knowledge result memory leakage andor event handlers may incorrectly fire cause unpredictable behavior pictures nt indicate version jquery involved things work differently jquery require inspecting subtree extent", "d": "5/2017"}, {"body": "please read upgrade guide particular another behavior change required promisesa compliance deferred callbacks always called asynchronously previously callback added deferred already resolved rejected callback would run immediately synchronously questions please direct stack overflow find bug please create test case jsfiddle jsbin would clearly show expect get bug report pretty convoluted one read carefully see exactly mean", "d": "5/2017"}, {"body": "thanks response ask first got answer thought asking", "d": "5/2017"}, {"body": "pr mgol noted accessing object directly rather potential break case replaced rather amended also could nt find mention property documentation inclined leave asis since ca nt move deprecated js nothing done migrateapi nothing", "d": "1/2018"}, {"body": "intended expose next major well create issue remove jquerycssprops", "d": "1/2018"}, {"body": "looks nt one documented undocumented features nt see sign discussed stackoverflow example unfortunately searching names somewhat common variable names possible missed fine either way far removal seems safe created issue migrate", "d": "1/2018"}, {"body": "ca nt confirm test case works chrome firefox edge amp could make sure correct andor provide info", "d": "5/2017"}, {"body": "works well microsoft edge", "d": "5/2017"}, {"body": "noticed beta tester reported problems edge confirmed end pages login required able edit running edge latest via browserstack worked around switching accesskey selector", "d": "5/2017"}, {"body": "since reproducible test case going close find something consistently breaks stable edge version please post amp reopne", "d": "5/2017"}, {"body": "nt see forward slash examples could please create test case", "d": "4/2017"}, {"body": "looking afraid misinterpreting backslash behaves javascript strings nt ivoke log string console see backslashes please look help stack overflow", "d": "4/2017"}, {"body": "duplicate opted leave edge cases unresolved standard distribution amount code fix rather large custom html prefilter", "d": "4/2017"}, {"body": "thenableuwrapping required promisesa spec specifically promise resolution algorithm relevant point describes thenable unwrapping particular point mandatest full algorithm applied thenable resolution value thenable resolves another thenable another unwrapping operation happen seems purely documentation issue edited clarity", "d": "4/2017"}, {"body": "little confused message though jquerydeferred exception openedthen function object nt method thenable needs treated regular value fulfill promise get handler sure get error unless bug deferreds", "d": "4/2017"}, {"body": "mgol consider following simplified example using trigger bug although please note original test case also triggered bug without involving js enable warnings jquerydeferredexceptionhook function error stack consolewarn jquerydeferred exception errormessage errorstack stack function system var shutdown deferred thisstart function return deferred function settimeout function dresolve shutdown thisstop function reason stuff shutdownresolve reason works gt hello world gt bye reason meh var x new system xstart function shutdown consolelog hello world return shutdownthen function reason consolelog bye reason reason settimeout function xstop meh work gt hello world gt jquerydeferred exception shutdownthen function var x new system xstart function shutdown consolelog hello world return shutdownthen function reason consolelog bye reason reason settimeout function xstop meh", "d": "4/2017"}, {"body": "right thinking resolved promise method nt unwrapped", "d": "4/2017"}, {"body": "yeah seems odd happens returning nested inside another returning toplevel passing first example seems like bug", "d": "4/2017"}, {"body": "krinkle smack middle interface behavior odd crux promise actually resolved another promise counterintuitive interpretation dealing standard resolved distinct settled thenables never fulfillment values thus never provided onfulfilled callbacks resolution intercepts enqueues promiseresolvethenablejob instead fulfilling promise however jquery deferreds restriction ie allow fulfillment thenables therefore nt need concept fulfillment separate resolution backwards compatibility motivated us continue supporting even standards compliance requires brings us analogous unwraps values necessary short dangerous use andor thenablefulfilled deferreds either wrap thenables eg arrays nonthenable objects update callbacks handle nonthenable arguments eg instead team discussion also raised need improved documentation seems cover part thinking insufficient place text could appeared would clarified behavior", "d": "6/2017"}, {"body": "suppose nice andor clearly state result providing thenable resolve return value afaik returning passing thenable cases supported standardscompliant question tested using latest chrome js promiseresolve promise promisestatus resolved promisevalue b promiseresolve promise promisestatus resolved promisevalue c new promise function resolve resolve promise promisestatus resolved promisevalue promiseresolve gt return b promise promisestatus resolved promisevalue jquery behave b behaving differently kind makes sense backcompat also case knowingly promise one well use directly perhaps problem case happened c imho fair situation eg manually promisifying async process given back thenable value one internal async steps may even happen part upstream change eg something used sync becomes async via promise understand jquery internally b c say lot likely b happens wants backcompat nounwrapping situation c c feels likely happen calling code may return promise expected unwrapped js deferred resolve adone val gt consolelog val b deferred resolve bdone val gt consolelog val resolve \u0192 resolvewith \u0192 reject \u0192 rejectwith \u0192 notify \u0192 c deferred function df dfresolve cdone val gt consolelog val resolve \u0192 resolvewith \u0192 reject \u0192 rejectwith \u0192 notify \u0192 deferred resolve gt return ddone val gt consolelog val feel calling lot like returning inside chain callbacks provide next value may may also promise waited suppose could worked around using either way aside explicit documentation new comers jquery unwrapping would good also point jquery specifically nt unwrap promises perhaps deprecate fix breaking change jquery", "d": "6/2017"}, {"body": "thanks moved documentation needs guess keep issue open either always unwrap thenables decide make change", "d": "6/2017"}, {"body": "think agree unwrapping match standard promise behavior wait since breaking change", "d": "8/2017"}, {"body": "part jquery core plugin error markup made page invalid anyway", "d": "4/2017"}, {"body": "correction part core since markup nt valid behavior undefined", "d": "4/2017"}, {"body": "firefox chrome browser", "d": "4/2017"}, {"body": "ie", "d": "4/2017"}, {"body": "thanks report confirmed problem exists ie amp ie issue ie sizzle uses nt happen maybe prefer exists least ie think", "d": "4/2017"}, {"body": "seems like issue might fixable separate selector issue hope fix selector issue abandoning", "d": "5/2017"}, {"body": "hope fix selector issue abandoning getelementsbytagname try approach would mind providing perf tests", "d": "5/2017"}, {"body": "ca nt reproduce locally even node npm anyone else want try", "d": "4/2017"}, {"body": "yep neither tried following travis also passed triggered job third time jenkins upgrading internal jenkins plugins seems pass never mind guess manshrugging", "d": "4/2017"}, {"body": "thank opening issue recommend using methods rather event aliases events nt aliases nt think worth maintain list possible events list would require deprecating removing aliases events may lost support supported browsers time goes makes maintaining list even less feasible", "d": "4/2017"}, {"body": "nt see jquery code samples jquery function regular javascript one", "d": "4/2017"}, {"body": "browserspecific behavior seen occur jquery manipulates page happen standard dom calls well", "d": "4/2017"}, {"body": "thank dave able test tried look source code jquery went head guess sure level expect jquery abstract browser behavior", "d": "4/2017"}, {"body": "something like plain dom", "d": "4/2017"}, {"body": "thanks guidance behaves exactly way plain js", "d": "4/2017"}, {"body": "ok need file bug browsers nt behave way want perhaps could work around problem forcing video start paying inserted something jquery behind scenes", "d": "4/2017"}, {"body": "thanks clarification yes add workaround works decently enough", "d": "4/2017"}, {"body": "bug tracker jquery reporting bug since new web development strongly suggest get know stackoverflowcom ask questions get programming help", "d": "4/2017"}, {"body": "native browser behavior surprising given historical problems internet explorer changing input types attempting change property attribute element created via html already html document result error thrown internet explorer", "d": "4/2017"}, {"body": "see everything ok ie workaround remember value change type apply value possible include jquery", "d": "4/2017"}, {"body": "nt possible us detect code changes property going add specialcase code precisely kind thing proves problematic long run changing input elements never behaved reliably", "d": "4/2017"}, {"body": "already pr", "d": "4/2017"}, {"body": "okay", "d": "4/2017"}, {"body": "closing duplicate", "d": "4/2017"}, {"body": "markelog pr accepted", "d": "5/2017"}, {"body": "please ask help stackoverflow executing immediately", "d": "4/2017"}, {"body": "okay added verify theory using works expected seamonkey firefox chrome internet default webkit based browser android ie linux android mswindows cases would get error expected words function gets called automatically problem still one case still reproduce customers get error without kind text feedback", "d": "4/2017"}, {"body": "reproduce demonstrate jquery open ticket specific description keep mind browser plugins cause sorts problems", "d": "4/2017"}, {"body": "server needs support cors particular options request", "d": "4/2017"}, {"body": "hi method options allowed anything else created page visual studio find webconfig file attached webconfigtxt also attached screenshot request response firefox use microsoft iis server activated basic authentication", "d": "4/2017"}, {"body": "ca nt compare browser curl latter nt care cors need compare bare xhr please look programming help stack overflow", "d": "4/2017"}, {"body": "deactivate authentication works well get error message deactivated authentication guess problem cors", "d": "4/2017"}, {"body": "authentication headers trigger preflight requests read mdn micha\u0142 go\u0142\u0119biowski", "d": "4/2017"}, {"body": "ok thanks information", "d": "4/2017"}, {"body": "hello together reading cors spending much time issue still solved maybe hints would exclude line xhrsetrequestheader prompt appears entering user password everything works", "d": "4/2017"}, {"body": "create new issue cause one already closed probably find", "d": "4/2017"}, {"body": "see", "d": "4/2017"}, {"body": "kborchers scottgonzalez dmethvin could one comment", "d": "4/2017"}, {"body": "love let paid legal counsel give answer", "d": "4/2017"}, {"body": "bartoszkp many thanks feedback would appear transition jquery foundation js foundation one primary foundation website unintended consequences link redirects need cleaned ip policy linked foundation overall ip policy point nt particularly helpful determining particular project licensed event jquery licensed mit described licensetxt file extent additions standard mit language license file make clear external libraries always subject licenses mit license allows commercial noncommercial use terms required attribution reproduction permission notice license distributions thank feedback happy answer questions may", "d": "4/2017"}, {"body": "stevenayr thank much explanation create focused issue ask fixing link project nuget page andor redirect perhaps better place report mild inconsistency also thank prompt reaction", "d": "4/2017"}, {"body": "stevenayr say redirects need cleaned need specifically restored linking mit", "d": "4/2017"}, {"body": "problem nt link mit license linked page info good reason explained policies around different licenses used different situations recommendation would projects currently linking jqueryorglicense license headers change links either license file project repo cla page particular project org cla system requires orgrepo link probably best use main repo project multiple jquery would look like", "d": "4/2017"}, {"body": "kborchers btw noticed markdown link page nt translated html still think makes sense link license file repo jqueryjs would like legal confirm", "d": "4/2017"}, {"body": "thanks timmywil issue pointed weekend tracked issue jsfoundation repo stevenayr confirm link license file jquery distribution file header adequate replace links old jqueryorglicense page", "d": "4/2017"}, {"body": "one problem linking repo fixes new releases every version every one libraries used link still link improperly redirects seems like new versions change link still content indicating mit", "d": "4/2017"}, {"body": "arschmitz good point someone could update content specific projects link page rather foundationwide statement would happy review changes could remove redirect old releases accurate link", "d": "4/2017"}, {"body": "kborchers probably need make pr", "d": "4/2017"}, {"body": "timmywil let know works merge remove redirect", "d": "4/2017"}, {"body": "kborchers like thanks", "d": "4/2017"}, {"body": "kborchers fix concern also jqueryorglicense link guessing contents link still points ippolicypdf meant saying remove redirect sorry stupid question", "d": "4/2017"}, {"body": "bartoszkp definitely stupid question fix concern soon fix redirect happen week", "d": "4/2017"}, {"body": "works great thanks", "d": "5/2017"}, {"body": "please nt report issue amp especially planning provide test case additional details added comments original issue ie", "d": "4/2017"}, {"body": "read instructions issue template asked things nt provided like test case browsers see error perhaps better looked help stack overflow amp places first close provide test case detailed description reopen", "d": "4/2017"}, {"body": "tested internet explorer running application start showing error javascript runtime error object nt support property method indexof jquery", "d": "4/2017"}, {"body": "error coming browser also chrome firefox", "d": "4/2017"}, {"body": "arrow functions nt binding technically impossible use binding jquery provides arrow function", "d": "4/2017"}, {"body": "use based code instead though", "d": "4/2017"}, {"body": "please help us soon possible", "d": "4/2017"}, {"body": "please ask help stackoverflow sounds like use jquery migrate look upgrade issues read jquery upgrade guide", "d": "4/2017"}, {"body": "able find upgrade guide version blog guide avaliable", "d": "4/2017"}, {"body": "attach data directly elements data somehow getting garbage collected nt think anything jquery", "d": "4/2017"}, {"body": "timmywil difference jquery getting problem", "d": "4/2017"}, {"body": "vascofernandes jquery version using got problem", "d": "4/2017"}, {"body": "omuleanu regards", "d": "4/2017"}, {"body": "vascofernandes try", "d": "4/2017"}, {"body": "omuleanu think main difference started attaching data directly elements attached key element stored data memory internal object string also getting garbage collected string stick around object", "d": "4/2017"}, {"body": "sounds like chrome garbage collector little aggressive cases", "d": "4/2017"}, {"body": "timmywil would question chrome devs noticed system memory objects attached using nt references get removed", "d": "4/2017"}, {"body": "data attributes pulled first time data property accessed longer accessed mutated data values stored internally jquery", "d": "4/2017"}, {"body": "said behavior change recently", "d": "4/2017"}, {"body": "dmethvin using noticed nt know version introduced", "d": "4/2017"}, {"body": "behavior looks right", "d": "4/2017"}, {"body": "documented boolean values allowed", "d": "4/2017"}, {"body": "timmywil understand boolean currently documented proposing change future release falsey values commonplace javascript reason consider", "d": "4/2017"}, {"body": "want use making signature complicated risky especially years documentation internet", "d": "4/2017"}, {"body": "nonboolean values unacceptable error thrown rather treating values swallowing invalid arguments never existed seems counterintuitive", "d": "4/2017"}, {"body": "treat swallowing invalid args separate issue allow remain closed", "d": "4/2017"}, {"body": "accepting nonboolean values via casting bools would get us closer api something consider course cost breaking existing code also exists", "d": "4/2017"}, {"body": "yeah good point agreed cost consideration breaking change said change may also fix existing broken code well", "d": "4/2017"}, {"body": "good number breaking changes recently lean towards leaving one alone", "d": "4/2017"}, {"body": "jquery would lot bigger checked args explicitly threw error nt defined api ca nt imagine fix existing broken code changing api changes almost always break behavior code someone thought working okay even way accident requirement second arg true boolean way since feature implemented time convention using flag missing args past years tended towards instead would prefer leaving alone though way forever outlined simple thing caller get behavior want", "d": "4/2017"}, {"body": "yeah looked use throwing errors realized used rarely library problem skipping suggestion although casting boolean would move closer towards api noted mgol sounds like potential breakage outweighs benefits thanks feedback cool leaving closed", "d": "4/2017"}, {"body": "time convention using flag missing args past years tended towards instead spec treats missing value ie behaves like like seems align previous behavior case fine leaving asis well", "d": "4/2017"}, {"body": "spec treats undefined missing value ie toggle foo undefined behaves like toggle foo toggle foo null like toggle foo false mgol behave like reason reported issue initially", "d": "4/2017"}, {"body": "mgol behave like wrote classlist api jquery", "d": "4/2017"}, {"body": "wrote classlist api jquery oops sorry misunderstood nt catch lack", "d": "4/2017"}, {"body": "problem indeed regression widthheight broken inline elements reported issue since resolved master released jquery see although notable exception still broken android see issue", "d": "4/2017"}, {"body": "krinkle thanks pointing updated issuecomment reflect also spent time morning trying figure root cause tabs issue see notes bottom issue text latest jquery narrowed quite bit added links jsbins well screenshots showing discrepancies observed hopes someone jquery team able identify change caused", "d": "4/2017"}, {"body": "jacobq thank thorough analysis", "d": "4/2017"}, {"body": "problem outerheight returns wrong value ie windows works fine chrome", "d": "4/2017"}, {"body": "problem like", "d": "5/2017"}, {"body": "jacobq thanks problem confirm problem windows ff amp chrome jquery versions", "d": "7/2017"}, {"body": "even weirder version problem chrome seems dependant url structure datatables plugin clone npm install make sure jquery noted packagejson open chrome make copy open chrome works wo nt make even weirder move sub folder render correctly", "d": "7/2017"}, {"body": "smasala fun tried exercise shared saw differences perhaps platform differences running linux node chrome official build maybe nt sure look nevertheless would strongly encourage simplify portion code analyzing lots parts work becomes easy become mislead eg accidental caching race conditions dependence inputs user behavior etc make one believe problem caused something root cause number nuances one deal regarding browser behave differently urls based description suspect problem seeing different ones described issue may even related using older version solves problem application would recommend release ready since likely best use time", "d": "7/2017"}, {"body": "jacobq would seen error nt worked looking solution plugin thought post random findings however found narrowed problem one line jquery set updating jquery latest version gt unable replicate issue jsfiddle similar good links examples going crazy tried another machine windows instead chrome works fine odd perhaps something wrong ssd machine try win setup curiosity sanity check", "d": "7/2017"}, {"body": "jacobq fyi works win chrome systems fine however reproduced machine every time without fail works produces exact problem described problem also case chrome give", "d": "7/2017"}, {"body": "everything fixed except problem", "d": "7/2017"}, {"body": "thanks looks lot better though still discrepancy idea jsbin example gets zeros latest jquery chrome windows see differences order", "d": "8/2017"}, {"body": "yes using latest actually calculating css boxes even though latter approximate former wrong affected transforms scale rotate etc", "d": "8/2017"}, {"body": "ok makes sense plan sticking project since currently using transforms tue aug pm richard gibson notifications githubcom wrote yes using getboundingclientrect latest actually calculating css boxes even though latter approximate former wrong affected transforms scale rotate etc receiving mentioned reply email directly view github mute thread", "d": "8/2017"}, {"body": "recommend instead plan upgrade use directly use case needs", "d": "8/2017"}, {"body": "suppose would also possible us use fractional component gbcr would separate issue", "d": "8/2017"}, {"body": "would vulnerable transforms well would nt", "d": "8/2017"}, {"body": "yes maximum error half pixel ie change current recovering perfect accuracy absence transforms", "d": "8/2017"}, {"body": "looks like fixed ie jsbin ow gbcr lt anyone else confirm update nevermind see thanks core team contributors", "d": "1/2018"}, {"body": "opinion removing fine preference operator testing whether dom element done individual functions rather generic", "d": "4/2017"}, {"body": "quick look usage internal cases putting elements variables tested results error silently ignored however variables could elements used behaviors specific elements users would expect elements treated accordingly even functions require additional checks elements usage used similar cases nt need additional checks already tested whether variable element different patterns passes given value function function tests value function function would called returned value would stored difference functions using function type value limited takes anything behavior jquerydata tests given value jqueryisfunction documented considering think necessary even internal use also think needs modified remove feature call given function may know dom elements possibly functions treated values rather functions know cases dependent libraries etc moreover objects may appear future need updates want store functions need wrap another function returning value troublesome", "d": "4/2017"}, {"body": "may troublesome nature polymorphic library objects nonnegative numeric get special treatment arrays applicable objects treated dom nodes circumstances invoked functions remember crossbrowser imagine chaos trying debug elappend documentcreateelement object", "d": "4/2017"}, {"body": "important requires additional checks even situation realistic another example variables documented enforce really plain think completely fine variables could types usual use cases agree case problematic without checks type checks strictly enforced variable could functions nonprimitive types semantics could differ two cases opinion summary really matters test whether nonprimitive types dom node nt really matter test", "d": "4/2017"}, {"body": "happy look pr actually see effects changes tests unlikely decide make changes frankly nt want spend much time general philosophy utility functions like obviously ca nt guard everything guard common cases case nt common anymore never common remove simplify best way convince code given inclined close issue reopen pr comes along probably worth noting many times utility function simplifications like get codebase fixing larger issue uses function", "d": "6/2017"}, {"body": "could internal implementation jquery concerning example deprecating", "d": "4/2017"}, {"body": "akihikodaki move internal amd module still use would longer public api deprecation period ends", "d": "4/2017"}, {"body": "mgol solve could recognize functions think intended solve also problem deprecation", "d": "4/2017"}, {"body": "expected fix issue underlying deferred problem needs adjustment separate issue intended put jqueryisfunction path towards becoming purely internal api", "d": "4/2017"}, {"body": "separate issue intended put jqueryisfunction path towards becoming purely internal api opened problem causing deferred flaw", "d": "4/2017"}, {"body": "wrong plugins found", "d": "4/2017"}, {"body": "mean nt want plugin jquery nothing sets plugins combined chained together form function library extending library plugin correct way take look maybe customize meet needs", "d": "4/2017"}, {"body": "thanks opening issue still think best done plugins personally nt use plugin construct json object want form post setting like control object constructed different ways could done none may suit preferences", "d": "4/2017"}, {"body": "wrong plugins found first problem much information image versions ajax function know decent plugin please inform take look maybe customize meet needs plugin even parse numbers said much attempts belive jquery set standard including proper json folloewd html post form method manually shure problem even use plain old javascript whole process however dont think majority would like parse html forms days mean image people would like manually hand craft normal form mean would normal form post translated modern json nothing nothing less however hope consider long term think boost jquery lot thank", "d": "4/2017"}, {"body": "seems like bikeshedding never need property object unless mocking something tests said change small nt mind", "d": "4/2017"}, {"body": "check nodetype number allow types nodes right attribute node nodetype cause issue thoughts", "d": "12/2017"}, {"body": "talking element tests always node tests standard practice use booleancast almost exclusively main exception", "d": "12/2017"}, {"body": "version nonminified jquery", "d": "5/2017"}, {"body": "prs accepted like contribute", "d": "6/2017"}, {"body": "shashankanataraj absolutely", "d": "6/2017"}, {"body": "fwiw small nonjquery example leaks like crazy chrome stable key line removing gets rid leak jquery path information also added related chromium bug", "d": "4/2017"}, {"body": "looks like getting fixed chrome side", "d": "4/2017"}, {"body": "specific chrome issue solved guess makes sense close issue right", "d": "4/2017"}, {"body": "pmgmendes agreed nt see workaround end anyway", "d": "4/2017"}, {"body": "right failure sure commit linked related unless android opposite issue firefox making ca nt access inline style computed odd reason", "d": "4/2017"}, {"body": "fix next release tagging", "d": "4/2017"}, {"body": "sure commit linked related aye yeah filtered git log bit much css range meant remove keep dimensions instead way around added", "d": "4/2017"}, {"body": "confirmed fixed dimensions tests android exception android consistently failing timing jquery test suites including dimensions likely unrelated likely something setup code either jquery testrunner throwing file separate issue", "d": "7/2017"}, {"body": "quick check seems like patching align otherwise harmless already going direction anyways already cases use values returns remove reducing use trick although may need find another way support android regexp values case js type function obj obj null return obj isfunction function obj return jquerytype obj function", "d": "4/2017"}, {"body": "nt support android anymore minimum micha\u0142 go\u0142\u0119biowski", "d": "4/2017"}, {"body": "breaks cases iswas actually function callable object expected false javascript obj documentcreateelement object assertok jqueryisfunction obj object element hand documentation says determine internal javascript class object though longer exist since ecmascript similar people may consider derives change regarding breaks expectation need make clear expect rather considering prevent confusions", "d": "4/2017"}, {"body": "rather deprecate jquerytype try keep external changes nt need rely nt longer imo", "d": "4/2017"}, {"body": "going checking deprecate well", "d": "4/2017"}, {"body": "fine deprecating unfortunately little firefox", "d": "4/2017"}, {"body": "typeof documentcreateelement object function firefox firefox chrome changed beta version could nt find browser among support soon stop issue unless want extrasafe nothing dombased returns funny chrome used versions lt", "d": "4/2017"}, {"body": "dom specific problem check element functions deals dom reasonable", "d": "4/2017"}, {"body": "discourage use utility functions set expectation updated bizarre usage someone passes generator function jquery something mighty strange taunt happy fun jquery", "d": "4/2017"}, {"body": "plan deprecate methods means people eventually need migrate use native checks case propose keep unchanged deprecate current form little point improving allow new usage patterns require migration later certainly less risky terms backcompat predictable easier document", "d": "4/2017"}, {"body": "little point improving allow new usage patterns require migration later closing issue", "d": "4/2017"}, {"body": "thanks report intended breaking change jquery make deferreds compatible promisesa spec upgrade guide found bug api docs indicate behavior changed could open issue repo jquery library api documentatation page thanks", "d": "3/2017"}, {"body": "confirmed would classify bug rather deferreds consider improper detection async functions even bigger flaw love switch doubt actually especially minor release even lodash still goes tostringtag", "d": "3/2017"}, {"body": "lodash says checks classified object however standard requires callbacks functions objects implementing inappropriate purpose", "d": "4/2017"}, {"body": "rather difficult perfectly determine object call internal method tough edge cases none properly detect still support xml host objects callable properties like typeof returns unknown modern browsers callable typeof undefined intent serve reasonable approximation ecmascript iscallable going way catch every possible trick one want recognize generators async functions maybe point makes sense jquerycore would anyone else like weigh", "d": "4/2017"}, {"body": "rather difficult perfectly determine object call internal method tough edge cases none properly detect aware cases way tested second case callable firefox callable chromium returned false still investigating cases intent jqueryisfunction serve reasonable approximation ecmascript iscallable test suggests different ecmascript iscallable javascript obj documentcreateelement object callable may need clarify expected behavior opened issue", "d": "4/2017"}, {"body": "maybe point makes sense jquerycore would anyone else like weigh opened", "d": "4/2017"}, {"body": "pursue fix like requirement resolve issue new unit tests", "d": "4/2017"}, {"body": "css selectors need look css spec element id class b information searchask stackoverflow", "d": "3/2017"}, {"body": "yes course nt realized limits choice characters html ids quite restricted already", "d": "3/2017"}, {"body": "stevenganz reason characters required preferable reasons eg readable url hashes still selected means example using attribute selector escaping characters avoiding selector problem passing raw string directly none ambiguities", "d": "3/2017"}, {"body": "pretty much", "d": "3/2017"}, {"body": "thanks guys case wanted something could use delimiter segments might include characters", "d": "3/2017"}, {"body": "yup used native call added note run tests custom builds release checklist thought added", "d": "3/2017"}, {"body": "fixed", "d": "1/2018"}, {"body": "idea method capture event different code thank u", "d": "3/2017"}, {"body": "thanks report jquery nt support attaching event handlers capture phase bubble phase ca nt write event handler jquery api planning event subsystem refactor major version maybe support passive event listeners might able add support capture phase ca nt promise anything point close issue nothing shortterm mind designing new event subsystem", "d": "3/2017"}, {"body": "guess would displaying alert defocuses input clicking ok focuses triggering event handler displays alert like behavior changed report chrome nt think anything especially example nt really happen real world cases alerts create poor user experience especially ones display try focus input want workaround set flag check alert already displayed nt display otherwise", "d": "3/2017"}, {"body": "mgol ok ty", "d": "3/2017"}, {"body": "made well", "d": "3/2017"}, {"body": "sure best course browsers differ spec ambiguous including scrollbars computed css", "d": "3/2017"}, {"body": "browsers correctly render scrollbars border padding breaking na\u00efve assumptions margins wrap borders wrap padding wraps content seen developer tools inspector disagree edge account reducing computed content area hence also firefox essentially carving part content box moving past padding without reducing dimensions use firefox model however seems like firefox model always incorrect respect css basic box model draft containing block content edge parent principal space taken scrollbars excluded subtracted dimensions containing block really feels like spec fairly easy get space consumed nonfloating scrollbars since nt include scrollbars adding difference element offsetwidth sum computed width plus padding plus border width eg likewise", "d": "3/2017"}, {"body": "clarity consider scrollbar gutters part padding lines", "d": "4/2017"}, {"body": "checks iterate keyvalue pairs defined following code works properly however need find solution works properly", "d": "3/2017"}, {"body": "thanks report long worked arraylikes meaning object property iterates like array see note note function internally retrieves uses property passed collection collection property called eg function might work expected think could improved opened need iterate keys objects property correct solution", "d": "3/2017"}, {"body": "gather never fixed might break existing implementations arraylike objects conclusion never use objects aka associative arrays someday object mine may happen member named length value exactly zero would treat like empty array hardtoexplain consequences", "d": "4/2018"}, {"body": "bobstein yes nt want object arraylikes treated arrays would need use different mechanism possible alternatives include drawbacks far properties enumerated browser support", "d": "4/2018"}, {"body": "years working jquery ran problem today working json data feed contains length field looper function linked bobstein works well maybe jquery think fixing fashion least documenting issue page", "d": "4/2018"}, {"body": "ryonlabaw documented mentioned ca nt fix without breaking documented behavior since plenty alternatives today nt make sense change since want arraylike iteration object example nodelist current behavior desired", "d": "4/2018"}, {"body": "default versions jquery timeout set timeout feeling complete example might show cause", "d": "3/2017"}, {"body": "oh timeout coming safari would definitely useful see running example understand happening safari", "d": "3/2017"}, {"body": "yes timeout coming safari guess sane default xhr request timeout works would expect chrome shown screenshot firefox trying code jquery safari browser timeout failed load resource caught triggers callbacks makes think jquery related jquery could catch well", "d": "3/2017"}, {"body": "still nt complete code example ca nt debug", "d": "3/2017"}, {"body": "test case takes seconds minute timeout triggered safari nt work function ping get host causing timeout fail function jqxhr textstatus errorthrown consolelog fail always function consolelog always settimeout ping function ping works", "d": "3/2017"}, {"body": "patch seems solve issue", "d": "3/2017"}, {"body": "interesting seems assumption might underlying xhr never timeout wonder specific safari", "d": "3/2017"}, {"body": "interesting would mean safari extracted timeout handling eriklax would like prepare pr wonder test native abort test triggered via timeout wo nt api available", "d": "3/2017"}, {"body": "mgol settings timeout use wait url xhrtimeout", "d": "3/2017"}, {"body": "seems safari violating xhr spec default timeout timeout attribute must return value initially value must zero set nonzero value cause fetching terminate given time passed time passed request yet completed synchronous flag unset timeout event dispatched timeouterror exception thrown otherwise send method", "d": "3/2017"}, {"body": "eriklax good idea ca nt test native timeout happening long wait would take long correctly hook handler gets resolved automatically", "d": "3/2017"}, {"body": "starting wonder firefox bug document domcontentloaded event triggering jquery load browsers restore page state executing domcontentloaded domcontentloaded event fired initial html document completely loaded parsed", "d": "3/2017"}, {"body": "body onload definitely happen jquery ready possible exception situations page extremely simple load fires quickly whole point jquery ready load event waits resources load jquery ready document structure operation order seems ok first get document structure jquery ready called change event handlers triggered end load event happens even case order change load events firing different insert image document load would last one change event firing something anything firefox decision perhaps allow javascript code react default checkbox state changing document ready otherwise lot pages would left broken state especially sites using single page application frameworks like angular ember", "d": "3/2017"}, {"body": "firefox decision perhaps allow javascript code react default checkbox state changing document ready opened mozillafirefox report behavior fairly confident bug", "d": "3/2017"}, {"body": "thanks report think failure expected addressed migrate", "d": "3/2017"}, {"body": "related widthheight first value reported easing function something relevant rather zeros", "d": "3/2017"}, {"body": "point tests migrate ensure easing still works given different signature seems fine", "d": "3/2017"}, {"body": "take back related widthheight change also related progress tick change effects said failure still expected handled migrate", "d": "3/2017"}, {"body": "docs width say value reported width guaranteed accurate element parent hidden get accurate value ensure element visible using width jquery attempt temporarily show rehide element order measure dimensions unreliable even accurate significantly impact page performance showandrehide measurement feature may removed future version jquery", "d": "3/2017"}, {"body": "could create test case without external libraries", "d": "3/2017"}, {"body": "actually seems like also relevant closing one duplicate assume issue isolated jquery also happens older versions", "d": "3/2017"}, {"body": "switch version code work fine", "d": "3/2017"}, {"body": "ok please provide test case look", "d": "3/2017"}, {"body": "finally done test case trigger function passing extraparameters work radio element button element strange tested case use jquery jquery work use jquery", "d": "3/2017"}, {"body": "confirm behavior simplified test case regression thank", "d": "3/2017"}, {"body": "regression introduced", "d": "3/2017"}, {"body": "regression introduced actually fix consistentlybroken state", "d": "3/2017"}, {"body": "going back change take closer look", "d": "3/2017"}, {"body": "seems like ticket referenced nt get lot interest nobody created plugin would seem indicate nt common need relatively easy way via logic existing applications note frequently adding removing elements container usually better use delegation rather directly binding events case would problem", "d": "3/2017"}, {"body": "yup thanks reply still think via logic existing applications crate many boilerplate code cry", "d": "3/2017"}, {"body": "different one static method jquery prototype information please consult jquery docs ask help stackoverflow jquery forums jquery gitter channel", "d": "3/2017"}, {"body": "yes mixed one step works thanks", "d": "3/2017"}, {"body": "great idea ashleygwilliams think link latest changelog readme makes sense", "d": "3/2017"}, {"body": "next release include blog post link jquerydist repo npmjsorg readme", "d": "3/2017"}, {"body": "yay thanks", "d": "3/2017"}, {"body": "moved erroneously marking blocker thanks report", "d": "3/2017"}, {"body": "shows explicit tests api deprecate even nt due legacy reasons", "d": "3/2017"}, {"body": "oof catch way temporary workaround", "d": "3/2017"}, {"body": "think making necessary adjustments pr landing give us test coverage want issue", "d": "3/2017"}, {"body": "failing several weeks jenkinstestswarm core commit february core move holdready deprecated", "d": "3/2017"}, {"body": "well jquery migrate jquery core surprised one said anything", "d": "3/2017"}, {"body": "perhaps looking migrate test results added release instructions wiki currently regular core amp periodic test results mentioned micha\u0142 go\u0142\u0119biowski", "d": "3/2017"}, {"body": "seems like rare case fixed land pr mentioned would like ensure reviewing core tests sufficient releasing core reviewing migrate tests sufficient migrate", "d": "3/2017"}, {"body": "thanks updated", "d": "3/2017"}, {"body": "ugh hard believe nt single unit test created milestone seems serious enough want quick patch release", "d": "3/2017"}, {"body": "caused", "d": "3/2017"}, {"body": "style specified via stylesheet inline enough trigger issue element computed value underlying issue inline elements returns", "d": "3/2017"}, {"body": "spec returns object resolved values various css properties definition resolved value resolved value defined following way property applies element pseudoelement resolved value display property none resolved value used value otherwise resolved value computed value property nt apply inline elements computed value returned instead used one nt computed value always property nt apply inline elements whether set inline stylesheet particular element nt matter issue broken inline elements", "d": "3/2017"}, {"body": "sure fix issue still keep ie take transforms account computing widthheight amp support subpixel values widthheight fixed issue proves enough nt support fractional values takes transforms account choose poison", "d": "3/2017"}, {"body": "mgol yeah problem semantic purpose behind split two different concepts one side use case computed style rough expectation setting value css would essentially noop ignoring borderbox nt apply inline elements since setting width nothing effective width unless inlineblock block applied span true inline elements nt width auto side use case visual size semantically maps often used decide position element decide whether text fit element first test failure found attempting upgrade jquery test failure old plugin called jqueryautoellipsis problem transforms came along nt really way visual size could different size behind scenes missing concept internally drawn size transforms convinced obvious nt taken account imagine plenty use cases users may used expect get effectively drawn size screen inclusion transforms may well considered improvement bug fix anyhow considering nt included jquery see want keep way perhaps option change behaviour jquery", "d": "3/2017"}, {"body": "krinkle right many responsibilities discussion already partially happened problem real solution would require decoupling responsibilities creates breaking change anything fix issue break something previous version promised fix point think revert timmy pr break thing fixed recently people relying point real solution wait", "d": "3/2017"}, {"body": "transforms convinced obvious nt taken account agree wonder callerspecified parameter ie shouldincludetransforms would easier flexible path", "d": "3/2017"}, {"body": "agree wonder callerspecified parameter whole api designed read width write width newvalue adding parameter easy possible think really need new api proper support whole mess width css width", "d": "3/2017"}, {"body": "craigkovatch holgerjeromin right even added another method signature whatever support adding transforms still issue support getting width transforms correctly wonder falling back best option still lean towards ignoring transforms erring side whole numbers rather fractional values value get", "d": "3/2017"}, {"body": "timmywil agree better missing fraction pixel unexpectedly transformed scaling factor perhaps would good reach ask proper api jquery nt library want correct answer question", "d": "3/2017"}, {"body": "app relies width height inlineelements updating broke app patch going release", "d": "3/2017"}, {"body": "mohithg fixed version available", "d": "3/2017"}, {"body": "mgol thanks", "d": "3/2017"}, {"body": "fix nt work android could reopen filed instead", "d": "4/2017"}, {"body": "mgol surprisingly ran problem today replacing table flex items rows flex value showing width height innerheight also outerheight got jquery project flex accounted", "d": "12/2017"}, {"body": "camzilla seems unrelated issue could open new one test case", "d": "12/2017"}, {"body": "thanks try track along intermittent might difficult address make sure tests pass releasing", "d": "3/2017"}, {"body": "files main directory started publish npmbower since older versions may different directory structure strongly advise upgrade jquery copy use though version use years old ages web development", "d": "3/2017"}, {"body": "nonempty arrays send attach property array wo nt used please look programming help stack overflow", "d": "3/2017"}, {"body": "agree array prototype object array property string vseravno file instanceof array true instanceof object true example life var apush one apush two apush three selected one consolelog alength least one associative property array function buildparams must define object associative property must appear data transfer data request server enumeration array one two three selected one data request server data object one two three selected one case enumerable properties array one two three", "d": "3/2017"}, {"body": "least one associative property array function buildparams must define object associative property must appear data transfer must calls shots basis", "d": "3/2017"}, {"body": "writing try achieve writing attaching property array pushing element array want push element array use method", "d": "3/2017"}, {"body": "\u043e\u043a data response php server echo jsonencode gt b gt one gt good two gt bad c js client responsejsonparse response consolelog responsea array consolelog responseb object one good two bad consolelog responsec array empty array responsecblablablabla responsec array new request ajax url testphp type post data response request server b one good b two bad responsec", "d": "3/2017"}, {"body": "problem client know whether associative array returned converted object returned empty array converted array imagine programmer analyze code server client identify problem", "d": "3/2017"}, {"body": "try achieve parampush hello need hello key associative key", "d": "3/2017"}, {"body": "finally need correct mistake server scripts distinguish array types associated array enumeration array combined sending receiving data client transferring data create hard differences separated data objects enumerated arrays exclude combined array get request address bar testphp param amp param amp param asd amp param request parameters param param param asd param response server array param gt array gt string gt string asd gt string gt string mgol see reason leave problem close issues", "d": "3/2017"}, {"body": "getting error solve", "d": "8/2017"}, {"body": "sure asking php backend side jquery works frontend site could precise request", "d": "3/2017"}, {"body": "bawasaab probably jquery provided functionality already check", "d": "3/2017"}, {"body": "hi thanx ur quick reply updated request plz hav look thanx", "d": "3/2017"}, {"body": "bawasaab please provide simplest example html jquery code using eg", "d": "3/2017"}, {"body": "use instead name repeated inputs unlikely modify current method may cause compatibility issues creating new one would best done plugin", "d": "3/2017"}, {"body": "created js fiddle plz hav look", "d": "3/2017"}, {"body": "need look external jquery plugins need maybe would work", "d": "3/2017"}, {"body": "better jquery provide default", "d": "3/2017"}, {"body": "updated js fiddle plz hav look", "d": "3/2017"}, {"body": "would entirely new method quite big one every jquery user would download even nt need therefore nt see included jquery please read particular following point need already served plugin jquery plugin already job well little reason us add duplicate functionality inside library simply use plugin", "d": "3/2017"}, {"body": "dear mgol plz look updated fiddle", "d": "3/2017"}, {"body": "bawasaab making lot demands agree mgol use plugin use stackoverflow ask help building want", "d": "3/2017"}, {"body": "sorry said need method get submitted form data easily without third party plugin possible self", "d": "3/2017"}, {"body": "tested branches answer tell branches nt test", "d": "3/2017"}, {"body": "yes verified issue", "d": "3/2017"}, {"body": "tested windows also bug", "d": "3/2017"}, {"body": "windows see problem code says indicating leaving enclosing div would normally mean leaving browser window likely due ie implementation browser control although jquery uses mouseout simulate mouseleave appears native mouseleave suffers problem fires move opened select could nt reproduce issue windows firefox perhaps ios firefox problem nt see workaround inclined close cantfix", "d": "3/2017"}, {"body": "dmethvin way worked around issue adding code correct set tried first set select box verifying current target part element event registered seems work ie windows firefox osx", "d": "3/2017"}, {"body": "looked sure fix jquery side anyone comes solution please feel free post reopen", "d": "3/2017"}, {"body": "methods already documented return current set chaining note api page says ca nt change chain operation", "d": "3/2017"}, {"body": "sorry waste time fortunately dumbest thing day", "d": "3/2017"}, {"body": "usually uglify us prefer clarity nonminified source seeing transform minified file version", "d": "3/2017"}, {"body": "uglify afaik detecting values used leaves clarity nt clear either hack due", "d": "3/2017"}, {"body": "note shorter results bytes savings minified version well cleaner code nonminified version", "d": "3/2017"}, {"body": "sounds fine see point", "d": "3/2017"}, {"body": "note shorter results bytes savings minified version well cleaner code nonminified version yup point running amp change show minified amp gzipped version minified mostly care size gzip difference", "d": "3/2017"}, {"body": "sounds good also pr welcome", "d": "3/2017"}, {"body": "although like sizzle issue different repo see though could improve things css module external documented property pretty much story module could done though", "d": "3/2017"}, {"body": "good findings markelog careful touch objects public apis like changing others fine", "d": "3/2017"}, {"body": "would like submit pr", "d": "3/2017"}, {"body": "fixes done sizzle", "d": "3/2017"}, {"body": "pr jquerysizzle", "d": "3/2017"}, {"body": "see", "d": "3/2017"}, {"body": "ca nt confirm note", "d": "2/2017"}, {"body": "mogl testing wrong thing note trigger remove remove bug jquery trigger jqueryui implementation cleandata called upon remove please take look cleandata ie jsfiddle must test remove trigger remove able reproduce way", "d": "2/2017"}, {"body": "jquery ui bug tracker already fixed removing trycatch since old versions jquery longer support see", "d": "2/2017"}, {"body": "could provide example first time hear tried simple babel repl works fine", "d": "2/2017"}, {"body": "definitely work getting example together tracking exact part babel causing problem things crazy since submitted issue originally", "d": "2/2017"}, {"body": "sorry additional delay finally able digging appears issue specifically using plugin instead", "d": "3/2017"}, {"body": "danahartweg could provide simple example project fails", "d": "3/2017"}, {"body": "mgol unable reproduce failure clean project exact dependencies project initially noticed issue given size main project obviously condition causing pollute array prototypes sorry taking time going close issue ever nail exact condition babel hitting", "d": "4/2017"}, {"body": "thanks update let us know ever manage reproduce minimal project", "d": "4/2017"}, {"body": "note find detailed description problem mainly need old prototypejs break things however fixed regards balazs", "d": "4/2017"}, {"body": "emulate mousentermouseleave via mouseovermouseout see details", "d": "2/2017"}, {"body": "duplicate see also", "d": "2/2017"}, {"body": "closed closed without solution", "d": "2/2017"}, {"body": "read tickets exceptions thrown caught jquery expected", "d": "2/2017"}, {"body": "ok", "d": "2/2017"}, {"body": "hi delmarwichnieski solve try try catch could fix", "d": "1/2018"}, {"body": "dom inspector nt see screwy closing input tag see empty attribute appears due another workaround set time right next step would look blame see remove workaround remove certain types inputs", "d": "3/2017"}, {"body": "let audit function dmethvin linked setting may still necessary great", "d": "3/2017"}, {"body": "behavior nt defined documentation undocumented might anything something specific documented docs say boolean truthyfalsy value determine whether class added removed values boolean", "d": "2/2017"}, {"body": "agreed multiple signatures nt think assume always", "d": "2/2017"}, {"body": "please look programming help stack overflow turns issue please follow issue template deleted read provide test case asked", "d": "2/2017"}, {"body": "well issue belong jquery many post stack overflow say", "d": "2/2017"}, {"body": "issue please describe detail including link test case", "d": "2/2017"}, {"body": "must bug code lot reports basic thing nt work please look help stack overflow", "d": "2/2017"}, {"body": "could share test case show clearly input expect different output different", "d": "2/2017"}, {"body": "give shot", "d": "2/2017"}, {"body": "fixed code", "d": "3/2017"}, {"body": "test case provided almost two weeks closing issue test case added reopen", "d": "3/2017"}, {"body": "mgol play realised made mistake isplainobject thought returning true arrays tests must something else wrong sorry", "d": "3/2017"}, {"body": "please look programming help stack overflow find issue indeed caused jquery simple test case share report issue", "d": "2/2017"}, {"body": "already posted crap answer strange issues must directed one site", "d": "2/2017"}, {"body": "see issues jquery closest perfection seems happy closing questions", "d": "2/2017"}, {"body": "erickbr bug tracker place general support development team limited time provide even time free support everyone needs basic information jquery works large community jquery users able help pay someone knows jquery well help write code", "d": "2/2017"}, {"body": "copy comment commit fine ie nt allow properties named reserved words would parse error jquery would nt even load extensive test suite see failed spectacular way works make sure using quirks mode older document mode stack overflow material though", "d": "2/2017"}, {"body": "ok moving conversation thread seems like instance jquery core catch used instead setting callback second parameter method", "d": "2/2017"}, {"body": "many things jquery may fail quirks mode parsing library one problem many others quirks mode ie basically ie nt supported browser ages nt test ie quirks mode nt plan even easy way testing infrastructure breakages may happen time therefore nt see gain changing need support quirks mode accept deal bugs result decision may maintain copy jquery workarounds need", "d": "2/2017"}, {"body": "requirement support quirks mode noticed error morning due fact instance appears used core figured worth reporting also wanted let know commenting commit mentioned error would picked automated tests seeing effectively alias figured straight forward change", "d": "2/2017"}, {"body": "breaks android left anyway always clear better jquery crash completely rest library buggy particular browser case ie quirks mode old event model jquery nt support completely broken case even better sometimes completely crash leave site default nonjs mode rather try kindof run leave site totally unpredictable state someone supports ie quirks mode nt use jquery first place", "d": "2/2017"}, {"body": "issue template asked need test case jsfiddlenet jsbincom screenshot enough us tackle problem", "d": "2/2017"}, {"body": "least post code want help nt necessarily need post jsfiddle see code", "d": "2/2017"}, {"body": "guess bootstrap needs update support", "d": "2/2017"}, {"body": "guess nt updated bootstrap latest version case valid bug report nt provided test case detailed description screenshot ca nt expected debug full sites include jquery team times current size would nt time advise take stack overflow ca nt debug report issue details", "d": "2/2017"}, {"body": "looks like attributes get stripped call line new script tag gets created without attributes result nonce longer present causes csp violation following used demonstratereplicate issue", "d": "2/2017"}, {"body": "seems like would easy fix probably add nonce attribute script tag exists", "d": "2/2017"}, {"body": "implemented fix adding optional argument domeval takes object attributes passing nonce one present script tag currently passes tests added relevant test test nonce attribute remain let know like submit pr make changes", "d": "2/2017"}, {"body": "hi brian solution works flawlessly hopefully promoted main branch soon enough meantime going remove jquery completly use plain javascript enable csp quite surprise powerful widely use library jquery csp friendly took two days finally decided post question thanks help", "d": "2/2017"}, {"body": "maybe posting wrong issue fix pls jquery fails handle common csprelated case correctly case called html including snippet html jquery takes script tag downloads js file ajax tries put js code inline new tag via triggers csp disabled csp basically musthave configuration repro case jquerycspbugzip running http server hosted endpoint expected behavior console shows actual behavior console shows following error refused execute inline script violates following content security policy directive defaultsrc either unsafeinline keyword hash nonce nonce required enable inline execution workaround open new issue handled part issue", "d": "8/2017"}, {"body": "changes briana wrote look good need pr unit tests ensure work nt broken subsequent changes", "d": "8/2017"}, {"body": "dmethvin submitted pr koczkatamas include nonce policy amp snippet patch trick see example alternatively able guessing unlikely difficult given details provided following work without violating csp hopefully helpful", "d": "8/2017"}, {"body": "accompanying pr definition change request good application csp important application forecast added core", "d": "11/2017"}, {"body": "updated pr requested changes although see may gotten missedlost due thread marked outdated", "d": "11/2017"}, {"body": "issue resolved versions jquery", "d": "1/2018"}, {"body": "yet make next release", "d": "1/2018"}, {"body": "timmywil case milestone get updated points", "d": "1/2018"}, {"body": "wondering error caused us manually evaling downloaded script cross domain already differently via script tag src attribute set see reason restricted crossdomain", "d": "2/2018"}, {"body": "loooong time think onerror event scripts relatively recent supported everywhere avoid silent failures script errors grabbed source evaled", "d": "2/2018"}, {"body": "dmethvin tested test case nt work ie works ie also works ios support unfortunately also nt work android browser fortunately android browser nt seem support csp perhaps work extend crossdomain way loading scripts modern browsers sure check though android browser satisfies even though unknown attributes value", "d": "2/2018"}, {"body": "hi using jquery version trying implement content security policy webpage getting following error refused execute inline script violates following content security policy directive scriptsrc self error produced line jqueryminjs script file content line function e n var ttr createelement script way around problem without use unsafeinline looking internet desperate solution tried brian suggested avail", "d": "2/2018"}, {"body": "hi aimeekatherine following comments assume dynamically generating script tags issue related could try adding hash script csp although nt something tested dynamically generated script tags tested attributes tag stripped alternatively patched work dynamically generated tags work fine tag generated using jquery nonce possibly hash applied comments nt help example creating script tags test case would help immensely", "d": "2/2018"}, {"body": "mgol technical note finally fully discontinued microsoft midjanuary might make sense still aim compat browsers anymore", "d": "3/2018"}, {"body": "pomax applies ie said jquery would nt gain lot size cutting ie amp support even cutting ie support brought size decrease eliminated whole alternative event model amp lot quirks apart size good motivation dropping support would issue hard fix maintaining ie lt support might drop ie lt one day since js frameworks amp nonui libraries still support ie nt think ones cut support first ui libraries like jquery ui dropping ie lt lot since want rely flexbox concern jquery core", "d": "3/2018"}, {"body": "amazingly weird graceperiod still thanks windows server crazy bit trivia functional data changes anything planned browser version support", "d": "3/2018"}, {"body": "still supported atms", "d": "3/2018"}, {"body": "graingert source information official microsoft ie support policy document claims ie lt nt supported anywhere anymore edit longer relevant comment used say ie", "d": "3/2018"}, {"body": "woops thinking", "d": "3/2018"}, {"body": "hi issue jquery last version load jquery documentation suggests csp policy obviously add nonetheless nt want use due security issues could exception jquery file considering hash nonetheless csp documentation refers hash external files applies csp", "d": "4/2018"}, {"body": "somewhere code eg calling loadscript trying load base js file", "d": "4/2018"}, {"body": "hi thanks replying really base file load end html seems jquery code builtin violates csp rule mon apr mike kamermans notifications githubcom wrote somewhere code eg calling loadscript trying load base js file receiving commented reply email directly view github mute thread", "d": "4/2018"}, {"body": "jfoclpf page works correctly large file probably inline script hiding error message get provide error line set breakpoint see stack leads please nt continue debugging session ticket though related except involve csp message", "d": "4/2018"}, {"body": "long csp headers indicate includes able load plain tag without integrity crossorigin attributes", "d": "4/2018"}, {"body": "thank dmethvin pomax one question use lot jquery function getscript load external scripts hosted domain jquery function trigger perhaps csp violation", "d": "4/2018"}, {"body": "jfoclpf yes would cause see", "d": "4/2018"}, {"body": "progress stops integrating contentsecuritypolicy primefaces jsf library see", "d": "7/2018"}, {"body": "long csp headers include scriptsrc able load plain tag without need integrity crossorigin attributes", "d": "7/2018"}, {"body": "pomax please read rest issue discussion thu jul pomax notifications githubcom wrote long csp headers include scriptsrc able load plain tag without need integrity crossorigin attributes receiving mentioned reply email directly view github mute thread", "d": "7/2018"}, {"body": "pomax problem problem jquery function adds script dom without taking previously existing attributes account btw workaround one might use", "d": "7/2018"}, {"body": "losing nonce attribute probably problem associated might usecases nonjavascript default attribute omitted elements replaced eg webgl", "d": "7/2018"}, {"body": "landed another pr make solving pretty much oneliner pr originally addressed needs updating see", "d": "7/2018"}, {"body": "timmywil nice understand correctly pr handle nonce attribute attributes mentioned", "d": "7/2018"}, {"body": "cnsgithub sorry specific attributes mean must glazing comment", "d": "7/2018"}, {"body": "timmywil said attributes like eg webgl", "d": "7/2018"}, {"body": "okay saw mention nt see mentions attributes scope issue csp addressed note already covered nt think necessary using script transport already control behavior page already parsed", "d": "7/2018"}, {"body": "btw workaround one might use documentgetelementbyid outerhtml newhtml newhtml work expected since script executed think best solution adding suggested timmywil", "d": "7/2018"}, {"body": "implemented timmywil solution adding works great chrome still failed edgefirefox problem browsers seem picky readwrite nonce attribute script element addition modify code follows", "d": "9/2018"}, {"body": "current workaround wait pr issue open years feel might waiting longer fix land", "d": "9/2018"}, {"body": "boompig issue pr make next release trying close coming weeks issues open longer years purposefully avoid frequent releases need add script tag noonce attribute pretty easy vanilla js", "d": "9/2018"}, {"body": "unable reproduce jquery problem able confirm tried private mode without extensions", "d": "2/2017"}, {"body": "thank quick reply still able reproduce firefox safe mode private mode also occurs two insert methods provided therefore agree jquery problem thank providing improved test case allows try reproduce computers", "d": "2/2017"}, {"body": "thanks report however behavior expected nt want deep extend swap values subobjects also libraries implement deep extend aka merge eg lodash nt think want change case nt want subobjects modified add empty object first argument think documentation unclear please post proposal improve", "d": "2/2017"}, {"body": "btw bug report done good way lots details thanks", "d": "2/2017"}, {"body": "imagine position trying understand reporting information would need order help fix problem report provide enough information issue template provided delete describe string contained jquery source file looked source see string appears", "d": "2/2017"}, {"body": "appears running jquery experiencing problem supported version please provide live test case eg jsfiddle js bin", "d": "2/2017"}, {"body": "part looking add signatures new features jquery nt hate parity libraries like react angular", "d": "2/2017"}, {"body": "note already done nt burdensome take bytes inside jquery", "d": "2/2017"}, {"body": "dmethvin note already done nt burdensome take bytes inside jquery true also uglier like proposal nt currently accept arrays parameter class methods confusion nt also add much code jquery accepting classes align us classlist standard aligning standards good thing allow pass unprocessed class arrays jquery librariesframeworks use array syntax one bit stretch ever drop ie start using classlist instead classnames everywhere would natural signature spaceseparated values would ones requires preprocessing", "d": "2/2017"}, {"body": "like contribute get one smiley think timmywil", "d": "3/2017"}, {"body": "hi timmywil already assigned someone want take", "d": "5/2017"}, {"body": "hi timmywil want take", "d": "5/2017"}, {"body": "add support arrays multiple arguments multiple arguments one like classlist methods would vote", "d": "6/2017"}, {"body": "multiple arguments might conflict second boolean argument", "d": "6/2017"}, {"body": "seems like nt support multiple classes addremove support still vote nt support", "d": "6/2017"}, {"body": "jbedard discussed already present accepting positional parameters would require way code would align worse standard funkiness like discussion seen", "d": "6/2017"}, {"body": "long time ago info put ticket wanting pick", "d": "6/2017"}, {"body": "one worked take stab", "d": "7/2017"}, {"body": "anyone would like submit pr please feel free contributing guidelines answer questions might contributing jquery specifically suggest look commits pr guidelines js style guide", "d": "7/2017"}, {"body": "working", "d": "7/2017"}, {"body": "script allowed things user interface user note also legal bare dom api fire event disabled button avoid code click disabled button check whether disabled running code", "d": "2/2017"}, {"body": "probably related", "d": "2/2017"}, {"body": "hit error similar scenario workaround molipet may ask solve issue thanks", "d": "4/2018"}, {"body": "hi wowcut workaround avoid setting depending use case use hiding iframe", "d": "4/2018"}, {"body": "another workaround explicitly set display block complete selector fadein function css display block", "d": "5/2018"}, {"body": "thank opening issue ca nt think anything jquery simply binding native scroll listener reporting value keep mind consolelog often logs asynchronously log shows dependent several factors jquery control", "d": "2/2017"}, {"body": "see", "d": "2/2017"}, {"body": "clone repo", "d": "2/2017"}, {"body": "jquery ui bug tracker issues ui reported however suspect question different date locale set countries sunday considered first day others monday", "d": "2/2017"}, {"body": "works fine latest jquery support latest version however misuse api use changing dynamic state works fine versions amp well please read jquery migrate guide particular", "d": "2/2017"}, {"body": "stop spamming repository", "d": "2/2017"}, {"body": "nt sound like jquery problem case none information template provided please ask help stackoverflow", "d": "1/2017"}, {"body": "sounds like broken jquery ui build project know method case provide reduced test case showing problem file bug", "d": "1/2017"}, {"body": "firefox go config set javascriptoptionsstrict true go site actually development take look firebug console see mean", "d": "1/2017"}, {"body": "look live sites either provide reduced test case bug report look help stack overflow irc forums etc", "d": "1/2017"}, {"body": "syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen syntaxerror test equality mistyped assignment weitere informationen referenceerror reference undefined property reventtriggered weitere informationen referenceerror reference undefined property anodetype weitere informationen referenceerror reference undefined property thispositionx weitere informationen referenceerror reference undefined property reventtriggered weitere informationen referenceerror reference undefined property bresult weitere informationen", "d": "1/2017"}, {"body": "nothing original bug report posted also nt run strict mode third party code actual bugs report please create issue specific issue posting comments unlikely get responses", "d": "1/2017"}, {"body": "support latest jquery version currently works nothing us", "d": "1/2017"}, {"body": "hack place place ie lt browsers since gc could nt handle circular references longer support environments case provided question would nt removed memory since still present outer scope function yes also serves singleton guard whereas could nullify would add gzip size practically would decrease memory consumption bit mention logic variable picked modern gc form optimization possible second execution method speculation course reasons nt think need", "d": "1/2017"}, {"body": "please provide test case", "d": "1/2017"}, {"body": "test running following game xbox edge", "d": "1/2017"}, {"body": "realised using older requirejquery version looking function try updated jquery thanks", "d": "1/2017"}, {"body": "working outdated jquery version thanks close", "d": "1/2017"}, {"body": "ca nt reproduce problem bower install jquery bower jquery cached bower jquery validate bower jquery install jquery jquery bowercomponentsjquery repositories even depend jquery try clearing bower cache", "d": "1/2017"}, {"body": "bad cache issues", "d": "1/2017"}, {"body": "thanks suggestion however planning utilize native event scheduling instead using event queuing ca nt add support things like nt exist native apis", "d": "1/2017"}, {"body": "pass suggestion", "d": "1/2017"}, {"body": "notification born code debug etarget closest thattip length wrong", "d": "1/2017"}, {"body": "changing thatisvisible amp amp etarget parents html length amp amp etarget closest thattip works dont understant event come element attached", "d": "1/2017"}, {"body": "made another test checking cloned old events seams old node attached another question node children removed events might removed", "d": "1/2017"}, {"body": "found problem priority executing events different jquery component first click div refreshing second body second executed cause complex situation would usefull tell executed event example body click function priority", "d": "1/2017"}, {"body": "please look programming help stack overflow", "d": "1/2017"}, {"body": "problem found stackoverflow problem related impossibilty give order events example body click function priority example body click function permit order execute events specific target specific problem related design", "d": "1/2017"}, {"body": "read issue template states note fix bugs latest version jquery therefore problem exists jquery latest nothing us update jquery problem disappear", "d": "1/2017"}, {"body": "ok thought still maintaining bug gave us headache production days since nt easy reproduce", "d": "1/2017"}, {"body": "ok thought still maintaining note unclear stand enough trying figure whether message clear enough improve somehow note even maintaining issues like precisely reason simplified logic jquery required breaking change could nt backported change line follow semver would fix issue might break others sites thanks report anyway", "d": "1/2017"}, {"body": "saw comment thought latest version means latest latest", "d": "1/2017"}, {"body": "see trying put message nt updated time release new major version maybe current one clear enough thank input", "d": "1/2017"}, {"body": "prevent exception css methods wo nt actually work without gcs called ondemand loading jquery nt constitute demand happening triggers computation hidden iframe much fix would change prevents exception yields incorrect behavior", "d": "1/2017"}, {"body": "happening triggers computation hidden iframe getting errors via error reporting service nt appear problem pages actually iframe nt yet enough info much fix would change prevents exception yields incorrect behavior environment returns null getcomputedstyle may indeed issues throwing exception stops javascript block execution think fixing limiting issue something specific like jquery css methods fail perhaps always better generally preferable", "d": "1/2017"}, {"body": "getting errors via error reporting service nt appear problem pages actually iframe nt yet enough info case definitely something sweeping rug keep error log clean determine particular error harmless case always filter error reporting", "d": "1/2017"}, {"body": "sounds like gecko people gon na fix moreover css specification might change", "d": "1/2017"}, {"body": "ff insistence fix issue", "d": "2/2017"}, {"body": "like ff address dave comment ff ticket", "d": "2/2017"}, {"body": "sounds like gecko people gon na fix fix getcomputedstyle throws exceptions returns null display none iframe thing aiming fix tracks noted working albeit limited success far unfortunately big architectural change run huge number test failures attempted fixes ca nt give timeframe fixed moment csswgdrafts discussion linked would affect getcomputedstyle except small set properties listed returning used styles used value would become equal computed value box construction subframe suppressed said computestyletests fact check properties may affected", "d": "2/2017"}, {"body": "bits confusing like would affect getcomputedstyle vs may affected sounds like affected fix getcomputedstyle throws exceptions returns null display none iframe thing aiming fix iframe situation ff always interesting experience remembering stuff like say unfortunately failures sorts different parts code case failure happening lots test suites presumed situation similar degree doubt though hence sounds like original comment especially considering ff ticket filled seven years ago think understand saying though right seems need clarify nt side wait ff resolution clarify exactly css spec changes could affect us right", "d": "2/2017"}, {"body": "sounds like affected yes actually rely layout display none iframes really unrelated gecko bug cited breaks attempts get style inside display none iframes", "d": "2/2017"}, {"body": "actually rely layout display none iframes would happen jquery loaded iframe right", "d": "2/2017"}, {"body": "yes indeed", "d": "2/2017"}, {"body": "think going count fix ff support tests pointless otherwise thank bzbarsky keep", "d": "2/2017"}, {"body": "could assume exception means supported better completely failing", "d": "2/2017"}, {"body": "yes rewrite test defer successful completely failing breaks script block", "d": "2/2017"}, {"body": "fan assuming support value nt even exist however fine deferring", "d": "2/2017"}, {"body": "docs say returns array takes two arguments first argument either array object neither second argument callback function calling method invalid inputs undefined results case note callback provided callback returned would removed resulting array", "d": "1/2017"}, {"body": "special needs like roll xhr use jquery helper methods like heavy lifting", "d": "1/2017"}, {"body": "please provide test case jsfiddlenet jsbincom ca nt anything based short description", "d": "1/2017"}, {"body": "", "d": "1/2017"}, {"body": "mgol made assignee since given discussion meeting better understanding", "d": "1/2017"}, {"body": "gabrielschulhof nt easy way get ahold uc browser gandharthakar still issue latest jquery amp latest uc browser version", "d": "4/2018"}, {"body": "mgol checked fiddle latest android uc browser latest version jquery works fine thank much", "d": "4/2018"}, {"body": "gandharthakar thanks confirming", "d": "5/2018"}, {"body": "sure file upload script mean case support forum jquery bug tracker please look help stack overflow", "d": "1/2017"}, {"body": "duplicate", "d": "1/2017"}, {"body": "take general stance undocumented inputs result unpredictable output particular prioritize adding code handle invalid input moving improving documentation though", "d": "1/2017"}, {"body": "yeah kinda sorta design cc dmethvin scottgonzalez", "d": "1/2017"}, {"body": "let move discussion", "d": "1/2017"}, {"body": "allow third parties modify js code already lost attacker insert whatever code want original issue loaded url expecting harmless json third party code suddenly started sending scripts jquery evaluating fixed", "d": "1/2017"}, {"body": "ok respect criteria nt see difference cases attacker must control de content url parameter passed jqueryajax redirect website control answers scripts malicious code", "d": "1/2017"}, {"body": "attacker nt control code particular control contents property pass url attacker page via property attacker changes sent contents harmless json script jquery user may suspect jquery listen new mime type execute script fixed issue case attacker control foreign domain load stuff control pass code control insert code want change basically ban dataurls completely valid use cases", "d": "1/2017"}, {"body": "yes going forward investigating may scrap later depending involved gets", "d": "2/2017"}, {"body": "noted meeting probably benefit internal even nt handle shadow dom better communicates intent", "d": "2/2017"}, {"body": "animation c test case skipped commit think even fixed work assuming correct", "d": "2/2017"}, {"body": "good catch", "d": "2/2017"}, {"body": "really nt understand difference issues could please clear", "d": "2/2017"}, {"body": "general covering callback skips also doublecallbacks new animations intent fix former immediately code lost somewhere along development pr", "d": "2/2017"}, {"body": "nt fix fix reason separate", "d": "2/2017"}, {"body": "likely fixed together", "d": "2/2017"}, {"body": "pushing", "d": "3/2017"}, {"body": "ipad probably using example nt even use values declared nt related jquery please ask help stackoverflow", "d": "1/2017"}, {"body": "see dilemma sure generally worked hard avoid trycatch eliminate possible codebase often catches things nt although made implementation compatible promisea method still throw errors nt catchable chain like ideally ajax errors thrown inside method reject could know sure lot existing code nt use twoarg dunno maybe trycatch least painful pains", "d": "1/2017"}, {"body": "practice nt even know point catching things nt thought weekend like update proposed solution following catches error concerned issues since pretty sure would catch errors donefail callbacks well thought probably given appropriate place put trycatch ensure appropriate callbacks called start given callback evaluated top stack middle chain sure make strong argument need trycatch particularly revolving around fact user ca nt code imo also breaks contract promises used ajax nt call fail callback result error request literally disappears system need reliably track requests actually finished particular reason eg metricsonunload handlers ca nt creates obscure bug workaround manually handle ajax requests instead using jquery javascript callback callback function type return function callback callback errorcallback xhronload xhronerror xhronabort xhronreadystatechange null", "d": "1/2017"}, {"body": "yeah problematic somehow detail worm way could acted upon least logged caller", "d": "1/2017"}, {"body": "agree ideal would problematic could probably pull request drop passing exception hoping somebody familiar internals jquery would willing pick awesome", "d": "1/2017"}, {"body": "may get open pr", "d": "2/2017"}, {"body": "happen actually throw exception", "d": "9/2017"}, {"body": "throw yes jquery nt catch right time currently see sample code original post trycatch would resolve issue nt time work pr personally", "d": "9/2017"}, {"body": "html codec lt div id class box lt div lt div class box downbox lt li id log lt div css codec add downbox width auto height auto position inherit add animate try code must open one subcontent think like thats", "d": "2/2017"}, {"body": "duplicate already fixed master included", "d": "1/2017"}, {"body": "per single argument passed jquerywhen deferred promise treated resolved deferred donecallbacks attached executed immediately example exactly passes single argument array containing object happens deferred thus donecallback executed immediately sounds like may want use whenapply", "d": "1/2017"}, {"body": "oh apologize misread signature thank help", "d": "1/2017"}, {"body": "fastfasterfastest wondering might opportunity document clarification ran problem cervengoc reason calling think helpful see mention like single argument passed jquerywhen deferred promise treated resolved deferred donecallbacks attached executed immediately includes arrays deferredpromise objects call jquerywhenapply array", "d": "1/2017"}, {"body": "documented way mozilla documents things would think probably would clearer applies jquery api calls well may trivial update make documentation change case think proper venue discuss may", "d": "1/2017"}, {"body": "example asking style property element document value would expect ca nt know rules may apply element inserted document since may different cascading rules depending inserted", "d": "1/2017"}, {"body": "see also think sufficiently ambiguous solved browser people make assumptions detached elements", "d": "1/2017"}, {"body": "hi dmethvin got point support option people make assumptions detached elements also great favor nt think bug jquery coding like thanks help", "d": "1/2017"}, {"body": "using jquery need upgrade problem nt jquery example", "d": "1/2017"}, {"body": "jquery behavior changed area seen hidden firefox chrome still issue", "d": "1/2017"}, {"body": "reopening based updated test case still needs decided whether something canshould fixworkaround", "d": "1/2017"}, {"body": "firefox reports boxes elements nt think problem fix", "d": "2/2017"}, {"body": "issue ff tracker cc bzbarsky", "d": "2/2017"}, {"body": "ok let walk specs says element invoked associated layout box return empty sequence stop algorithm layout box links says layout box either css layout box svg box says term css specs use going html spec nt seem say anything useful surprising rendering described elsewhere html describes association elements layered shapes image css layout boxes least actually boxlike way pretty arbitrary shapes svg involved course ok html describes rendering says actual selector includes things great something work says none please note display none create invisible box creates box current cssdisplay draft likewise says far tell firefox behavior exactly following specs elements layout boxes hence returns empty list markelog missing", "d": "2/2017"}, {"body": "bzbarsky turns firefox eventually report map use asynchronicity little weird may want look changing anything one relevant specs probably lacking proper guidance rate maintain nothing jquery sure nt want one describing edge cases multiplyreferenced maps anyone", "d": "2/2017"}, {"body": "firefox thing returning rects image ask whose imagemap used image bug plain simple see longstanding issue tracking problem anything one relevant specs probably lacking proper guidance far tell specs pretty clear firefox bug sometimes returns rects elements jquery bug ever expects rects returned elements specs say happen practice happen firefox cases stop happening firefox cases fix abovelinked issue jquery consumers implicitly depending elements boxes problem sort note behavior nonspec pseudoclass defined solely jquery whatever definition implement consistently explicitly says element considered hidden anyway chrome ignores html spec nt make display none see differnt behavior filed whether care normalizing across browsers course definition whatever jquery means think specs change please file spec issues suggestions say course multiplyreferenced maps anyone yes one reason concept rects nonsense", "d": "2/2017"}, {"body": "hi personally used workaround overcome issue code discard maps areas selector opened ticket valid issue thought guys might want aware still one affected might postpone ignore issue fine hopefully get fixed ff chrome future release", "d": "2/2017"}, {"body": "okay getting exchange firefox behaviour correct except case images actually used chrome behaviour nt hence difference reported values remaining questions need check supported browsers compare results consistent check add tests elements default example fix document none create separate ticket async case ff nevertheless bzbarsky thank detailed responses", "d": "2/2017"}, {"body": "whoa nice one order support delegated events mouse pointer enterleave jquery uses corresponding overout event looks determine whether pointer actually entering leaving parent element seems bug chrome event reporting shadow dom element inside shadow dom called reporting jquery ca nt find element current thinks pointer must left building fires event see problem action turn settings show user agent shadow dom inspect screen shot attached", "d": "1/2017"}, {"body": "rbyers look like bug", "d": "1/2017"}, {"body": "whoa yes chrome bug thanks sorry trouble get fixed asap likely chrome guessing wo nt hard", "d": "1/2017"}, {"body": "chrome patch sounds like good", "d": "1/2017"}, {"body": "hello take tell proceed", "d": "1/2017"}, {"body": "incorrectusername sure find details contribute info commits prs", "d": "1/2017"}, {"body": "kind scenarios added testing thoughts", "d": "12/2017"}, {"body": "ones altered andor deleted ie lt", "d": "12/2017"}, {"body": "longer supporting releases problem still exists line please provide live test case eg jsfiddle js bin help us diagnose issue", "d": "1/2017"}, {"body": "please look programming help stack overflow ca nt debug app", "d": "1/2017"}, {"body": "thanks report however migrate guides lie issues reported could rereport one would like prepare pull request relevant file", "d": "1/2017"}, {"body": "thanks", "d": "1/2017"}, {"body": "thanks report observed behavior expected jquery object create represents outer nt contain another invoke parts selector need lie inside element different works think documentation clear enough please open issue andor pull request", "d": "1/2017"}, {"body": "submitted correct behavior browsers implementing although still add new tests issue nt want override host environment offsetparent logic instead think deprecate already eliminates internal use", "d": "1/2017"}, {"body": "thanks hopping looks like solution reliant getboundingclientrect accounted way chrome return value api changes pinchtozoomed see also also compute correct value translation scaling transformations present nt see anything tests around property", "d": "1/2017"}, {"body": "also suggestion methods nt rely offsetparent whether dom jquery results differ depending recent browser clear whether meant want eliminate internal use offsetparent use jquery dom methods understanding always jquery tries hide details covers author nt browsersniffing still case", "d": "1/2017"}, {"body": "looks like solution reliant getboundingclientrect accounted way chrome return value api changes pinchtozoomed see also also compute correct value translation scaling transformations present nt see anything tests around property explicitly fact soon documenting reliable elements transformed ancestors cf although may change future step towards also suggestion methods nt rely offsetparent whether dom jquery results differ depending recent browser clear whether meant want eliminate internal use offsetparent use jquery dom methods understanding always jquery tries hide details covers author nt browsersniffing still case depends situation case far better live host environment definition upon box model properties depend impose cssom view algorithm start diverging dom css properties variety painful incompatible ways words report relative actual offset parent relative offset parent", "d": "1/2017"}, {"body": "whoops wrong button certainly appreciate suggesting technically right thing concerned consumers jquery start writing checks implementation offsetparent current browser supports code around use position offset nt seem like positive step fundamental library web situation worth exactly found bug sent email several hundred browser developers company warning hey nt rely method anymore check existing uses", "d": "1/2017"}, {"body": "hmm exploring live examples see mean guess like pr land update match spec add back", "d": "1/2017"}, {"body": "fine thank", "d": "1/2017"}, {"body": "extremelyhighfrequency intended use case nt foresee us memoizing calls however noargument gives data object directly upon get set whatever properties like without worrying string manipulation", "d": "12/2016"}, {"body": "remember modify object directly still want able access via official api less performanceintensive parts code need use camelcased key names direct manipulation", "d": "12/2016"}, {"body": "break element see id added actually dont need id", "d": "12/2016"}, {"body": "experiencing chrome dev tools behavior jquery adds transient id make sure selection works properly", "d": "12/2016"}, {"body": "want remove deprecate", "d": "12/2016"}, {"body": "ca nt deprecate something documented deprecated", "d": "12/2016"}, {"body": "mgol still like give notice undocumented functions plan removing required might call courteous", "d": "12/2016"}, {"body": "hello think fix issue jquerynodename function removed srccorejs added srcdeprecatedjs correct wrong missing somethingcan take issue work approach", "d": "1/2017"}, {"body": "would great find information contribute info commits prs far required work issue work needed jquery core also want add warning jquery migrate plugin", "d": "1/2017"}, {"body": "clarify done know got pr eliminate internal calls order warn jquery migrate create internal put srcvarnodenamejs change internal calls new function expose internal deprecatedjs sound right everyone", "d": "1/2017"}, {"body": "dmethvin yes exactly said days ago", "d": "1/2017"}, {"body": "although seems nt varmodule case exported function", "d": "1/2017"}, {"body": "mgol oh sorry missed", "d": "1/2017"}, {"body": "concrete issue reported want us look please point examples pieces jquery code consider incorrect succint explanations wrong case", "d": "12/2016"}, {"body": "looking distributed version jquery contains sizzle contains every single instance feature detection uses example linked rehash history feature detection first paragraphs address issue type conversion short history shows bad idea history enlighten us issues regardless fact sizzle originates another repository addressed makes lion share jquery know talk eliminating future nt help present jquery users feel free address wherever makes sense really know referring could saved time moving issue wherever sizzle maintained sorry confusion", "d": "1/2017"}, {"body": "feature detection drawbacks sometimes browser detection hat best strategy", "d": "1/2017"}, {"body": "hard cut amp paste htmljs example htmlentitied example clearer using fixed width font still count pipes result amp test nested table td border solid bbb tr height minheight td width minwidth trnested height minheight document ready function function rows var var lt x n return var n var lt n rows n n main append nt happen dynamically add table body first body append n n div main html n n row gets appended nested main xx n main append", "d": "12/2016"}, {"body": "appears incorrect reference triggered plain tags inserted dom filling table one rows inserting dom reference still pointing previous table gets correctly updated static html tag template data gets provided insertion dom either adding inside triggers reference update used workaround", "d": "12/2016"}, {"body": "github uses markdown wrap code triple backticks even specify language", "d": "12/2016"}, {"body": "leonardjo instead create live example js binjsfiddleetc post link live examples better easily explore issue investigation", "d": "12/2016"}, {"body": "splitting example html css js parts works like charm jsbin cut paste whole thing cut css paste box cut js paste box paste remainder html box remove ref jquery add one drop please cut paste html file open browser hard wish create account jsbin required save bin get work jsfiddle immediately include jquery probably need account need jsbin please add testing jsbin appears bug also exists triggers adding plain tags either via static html append appending content always available adding tags seem cause table pointer correctly updated", "d": "12/2016"}, {"body": "used local includes nt think copy url jsbin provided example works jsfiddle", "d": "12/2016"}, {"body": "thank cleaned determined issue duplicate next release include fix", "d": "12/2016"}, {"body": "since svg nt focus jquery html library generally nt support nt think bug however want use jquery set svg property add cssnumber note nt maintaining branches anymore even add would go future branch writing code plugin needs work older versions would need add anyway", "d": "12/2016"}, {"body": "thanks patch jquery fillopacity svg specific believe cssnumber sure would nt strokeopacity well", "d": "12/2016"}, {"body": "large list svg css properties definitely others like strokemiterlimitfillopacity mistake imo unless going go add ticket added unit test nt use svg also clear list used pass real number rather string strings always unmolested always convert string discussion want avoid whole mess", "d": "12/2016"}, {"body": "thanks report future please post test cases jsfiddlenet jsbincom immediately see work however ca nt reproduce problem methods give identical results going close issue tweak test case show bug reopen", "d": "12/2016"}, {"body": "see browser automatically follows redirect jquery kind anything except seems new api wonder heck docs say request successful status code functions take parameters success callback results error including redirect take parameters error callback ever possibly happen", "d": "12/2016"}, {"body": "according xml follow redirects transparently cases jquery see instead see response status code redirect destination however spec also says redirect following limited origin url conveyed location header origin xml origin redirect violate infinite loop precautions transparently follow redirect observing sameorigin request event rules perhaps origin differs might infinite loop redirect status code would exposed", "d": "12/2016"}, {"body": "closed favor docs issue", "d": "2/2017"}, {"body": "jquery properties objects retrieved via via ad bare dom read info", "d": "12/2016"}, {"body": "thanks report test cases modified log console instead alerting include performance metrics also swapped jquery really old jquery jquery native promise concerning jquery performance really suffers code simple yet first done callback invoked milliseconds chrome lot edit nt see performance issues locally maybe jsfiddle intervening somehow", "d": "12/2016"}, {"body": "impression sideeffect think edit right still leave issue open add proper test one", "d": "12/2016"}, {"body": "main issue mixing single multipleargument calls cf yet although great idea use legacy method callback registration care promisesa short answer nt guarantee callback execution order across deferreds case recovered dropping unnecessary jquerywhen introducing dummy argument", "d": "12/2016"}, {"body": "must something else switched back second also working", "d": "12/2016"}, {"body": "longer maintaining versions believe nonissue current codebase xml transport onload handler maps sending ajax callback please report back mistaken", "d": "12/2016"}, {"body": "namespace used event documented event originated browser never namespace namespace given event handler attached looking information part application probably deep jquery implementation details namespaces useful way selectively detach events without interfering handlers element rarely useful inspect discriminate namespace native events handled", "d": "12/2016"}, {"body": "without reproducible testcase nothing unfortunately note though node hidden might return incorrect result see additional notes value reported width guaranteed accurate element parent hidden get accurate value ensure element visible using width jquery attempt temporarily show rehide element order measure dimensions unreliable even accurate significantly impact page performance showandrehide measurement feature may removed future version jquery", "d": "12/2016"}, {"body": "seems like ca nt fix side fuweichin idea could fixed", "d": "12/2016"}, {"body": "suggested solution resetting type works considering ca nt reset form element using jquery api usually done natively nt think cover jquery solution thinking adding reset hook big side effect setting value think solution plugin best jquery plugins deal forms aware bug address nt think something address core", "d": "12/2016"}, {"body": "please look programming help stack overflow turns really bug jquery please create test case jsfiddlenet jsbincom link reporting issue", "d": "12/2016"}, {"body": "tldr support array input method work selectors dom element references jquery objects alike tests show array input works dom element references", "d": "12/2016"}, {"body": "added test cases show works", "d": "12/2016"}, {"body": "maybe best portability work level nested arrays see test case", "d": "12/2016"}, {"body": "behavior documented believe signature quite complex enough probably nt even mentioned since redundant want test array might include nonelements recommend converting jquery collection", "d": "12/2016"}, {"body": "agree confuses signature start accepting different things array case doubt works property wanted accept jquery collections", "d": "12/2016"}, {"body": "agreed cleaner explicit user convert array nt want make api even magical allowing mixed type arrays", "d": "12/2016"}, {"body": "please provide either test case demonstrating bug concise description requested change free side notes historical references note try return subpixel values applicable etc insufficient", "d": "12/2016"}, {"body": "please provide either test case demonstrating bug concise description requested change nt bug though clearly issues years including still exist mentioned documentation one performance clarity potential improving clear concise description requested change prolonged bits code big part described problem free side notes historical references benefit recurring theme issues opened last two weeks nutshell trying deal bugs taking time would better used analyzing causes perpetual presence bugs one code clarity main point making one example way tries handle html xml elements clearly need restructuring get shortly fork furthermore related comments obviously date note try return subpixel values applicable clientwidthoffsetwidthetc insufficient argue trying return values would make already muddled interface even worse leave wrapper example point method returns value redundant confusing particularly developers familiar would likely appreciate easy access properties like without tack array subscript something think future issues handled present even want add yet another wrinkle involving possible subpixel dimensions bulk arguments still valid really read including notes historical context wait update fork related changes", "d": "12/2016"}, {"body": "recurring theme issues opened last two weeks yes disincentivizing us consider offering remedy example point method returns value nt always return value ignores", "d": "12/2016"}, {"body": "yes disincentivizing us consider offering remedy completely backwards think really care whether actually use stuff trunk fork going diverge wildly point anyway idea carefully considering saying implementing recommended changes project benefit long run remain bug fix treadmill crystal clear ten years stuff making one last attempt get thing smoother path tired bad example behavior nt always return value css width ignores borderbox short unlike computed width computed width regardless box model cases others still others neither perfectly okay characterization ignoring particular box model wrong mentioned quoted comment either wires crossed something profoundly wrong andor methods look shortly certainly appears contradicting documentation difference css width width latter returns unitless pixel value example former returns value units intact example width method recommended element width needs used mathematical calculation edit see note width always return content width regardless value css boxsizing property side note documentation full little caveats like okay see getting though characterization issue backwards problem event cares used really need know dimensions simply get computed borders padding math suggested next line documentation jquery may require retrieving css width plus boxsizing property subtracting potential border padding element element boxsizing borderbox avoid penalty use css width rather width", "d": "12/2016"}, {"body": "idea considering saying implementing recommended changes benefit long run remain bug fix treadmill bugs matter ones users library reported appreciate help", "d": "12/2016"}, {"body": "bugs matter ones users library reported appreciate help sure would different agendas moment nt stand reason clean code fix things potential create bugs make fixing bugs precarious timeconsuming see gradual decrease number bugs reported less cases bug fixes lead new issues granted user library reports indeed contain bugs trouble getting closed bugs even discussed let alone understood lesser bugs nonuser reported anyway never set aside time deal bigger issues smaller issues become plentiful eventually overwhelm us seem know quandary trying help understand fix big picture long time", "d": "12/2016"}, {"body": "lesser bugs nonuser reported actually yes soon actually impact someone using library look pain causing determine priority impact compatibility", "d": "12/2016"}, {"body": "anyway never set aside time deal bigger issues smaller issues become plentiful eventually overwhelm us seem quite fair assessment one person overwhelming bug tracker moment manufactured situation fewer open bugs project installed base jquery pretty darned good", "d": "12/2016"}, {"body": "actually yes soon actually impact someone using library look pain causing determine priority impact compatibility bug bug regardless reports nt better squash bites others assuming nt already realize many bugs go unreported users simply go around getting try replies stackoverflow random experimentation discussing far present bugs talking profound easily correctable mistakes inhibit fixing present bugs well cause future bugs furthermore actually presenting solutions cases code", "d": "12/2016"}, {"body": "quite fair assessment one person overwhelming bug tracker moment manufactured situation got wrong end stick certainly referring reports rather rest asserted taking much time time left discuss anything else", "d": "12/2016"}, {"body": "see straighten mess remove odd caveat regarding methods documentation methods like simple enough require asides starts making simply parse number string returned function corresponding styles innerouter varieties way even involve fractions pixels mentioned left function also realize fractions pixels matter odd cases calculations may lead rounding errors ceiling single pixel worth making every dimensionrelated function slow complicated issueprone sake fractions pixels instead requiring user perform additional calculations results using border box model currently documented either use box models intended math results going grain eg trying find width element uses content box model clearly user nt know box model using implications results functions wo nt much meaning anyway demonstrate fork deprecate existing methods add others usual way preserve compatibility correcting longstanding design issues may break compatibility know changes nt going get merged anyway certainly calling parsing converting subtracting computed border widths nonstarter similar scenarios exist rest numbers wo nt add demonstrate trying simulate box model without padding results always differ weird fractional values chrome might expected trying calculate subpixels subtracting parsed styles simply useful", "d": "12/2016"}, {"body": "innerouter varieties way even involve fractions pixels mentioned left css function personal opinion people need subpixel values slightly slower integer ones going give already decided", "d": "12/2016"}, {"body": "regular professional user library mention would rather eleminnerwidth work firefox return subpixel values use elem clientwidth ignore scrollbars firefox maybe complaint take mozilla wanted put two cents", "d": "12/2017"}, {"body": "agree proposed changes eliminate pull request welcome", "d": "12/2016"}, {"body": "sure fork current state would create another fork expect change came eliminating bigger issue dozen changes fork point might easier somebody else fix based suggestions case one closed due prematurely reason", "d": "12/2016"}, {"body": "calls method instead attempts figure offset element document origin would equivalent computed styles small subset cases see emphasis mine get current coordinates first element set matched elements relative offset parent test case needed logic clearly incorrect position tolerated claiming existence bug onus upon demonstrate", "d": "12/2016"}, {"body": "see emphasis mine get current coordinates first element set matched elements relative offset parent granted must method mind regardless invalidates portion issues raised ticket nt believe second method sufficient look add concerns related method side note method names confusing always vs clearly lead wasted time excuse certainly related lesson position tolerated claiming existence bug onus upon demonstrate something clearly wrong code logic eg function appropriate substitute rtl documents evidence gathering strictly secondary concern often close tickets prematurely without sufficient discussion points raised issues always bugs reproducible presently supported browsers may indicate potential future issues ca nt see wasting time test cases page agree address contained issues either understand code nt made one mistake one points still clearly valid ticket closed glad nt bother getting far example issue missing styles test case needed simply omission code nt quite sure nt miss writing test case prove code missing", "d": "12/2016"}, {"body": "quite sure nt miss writing test case prove code missing making noise recommend nt report bugs willing provide test cases", "d": "12/2016"}, {"body": "making noise figure simply hooks would take search jqueryjs right bottom one line know nothing issue hand test case needed prematurely closed ticket certainly going write one repeating comment hook emphasis mine side note wonder happens percentages would nt surprise leave speculation moment furthermore address previous objection see emphasis mine get current coordinates first element set matched elements relative offset parent nt even need look code realize inference fixes central issue raised false example elements style would finding offset relative offset parent help handle edge cases work coincidence obvious strategy fail far often works really need test prove regardless definitely writing test cases closed tickets ca nt see point closing tickets discussed point everyone understands issues raised well proposed solutions accounting thing recommend nt report bugs willing provide test cases told best place discuss proposed changes seeing seeing lot confused kneejerk reactions complaints taking time easy solution", "d": "12/2016"}, {"body": "told best place discuss proposed changes seeing unlike code reorganizations proposed ticket purports describe bug calls behavior change nothing sort would accepted without unit tests pointless even start changing code without demonstration problem willing provide test cases bug reports almost certainly closed makes sense file provide one reopen issue", "d": "12/2016"}, {"body": "unlike code reorganizations proposed ticket purports describe bug calls behavior change well adding code clearly nt exist look code jqueryjs see hooks styles code comment quoted indicates bug trying fix found exclusively styles nt take comment realize would case elements positioned percentage styles would also dig browser actually displays quirks alleged fixes try deal rest really need test determine finding offset positioned parent equivalent position style makes sense fallback much simpler agree logic cases wrong obviously wrong tests could ever disprove matter many browsers documents try test common theme browser scripting bugs inconsistencies come go time rtl issues clear styles reversed documents parts documents going account closing ticket indicates none issues valid amount testing prove problems result solutions never developed point try make issue tracker score look better like saying ca nt see bugs bugs ca nt see us hand ticket left open perhaps somebody undertake prove obvious stated repeatedly developing tests tickets prematurely closed nothing sort would accepted without unit tests unit tests added agree exactly trying fix agree code corrects problems logic done several tickets prematurely closed unit tests added insure regressions fixes result future changes", "d": "12/2016"}, {"body": "unit tests added agree exactly trying fix yeah trying fix user reported bug", "d": "12/2016"}, {"body": "yeah trying fix user reported bug see much explanation necessary summarize glaring omission style hooks way position elements obvious mistake using method fallback failed computing styles one example wo nt work another method going include margins whereas obviously separate styles another obvious mistake thinking appropriate figure styles rtl documents parts documents questions issues ask explanation discussing issues learn helps avoid repeated mistakes future fixing issues prevents compounded future closing tickets without much question productive previous comments conclude watching bug tracker scoreboard trying make score look respectable anyway best try fix bugs get users sort backwards quality control strategy waits customers already affected upgrade huge complicated monolithic dom library fix problem never mind may well pick new bugs process code constant state flux waiting around user complain pointless first look answer stackoverflow get dozen try responses involve jquery methods others bypass jquery entirely tacking subscript object calling dom methods event remain blissfully ignorant problem besides appears perpetual backlog count two people working issues currently open would nt try avoid queue go guess stackoverflow", "d": "12/2016"}, {"body": "see little evidence teamwork person reports issue nt work ticket simply closed without discussion nobody else bother pick ca nt see point sweeping bugs rug matter many open given time able prioritize allocate resources accordingly", "d": "12/2016"}, {"body": "see little evidence teamwork person reports issue nt work ticket simply closed without discussion nobody else bother pick agree work needs done matter many open given time able prioritize allocate resources accordingly encouraging focus bugs users library reporting theoretical bugs performance issues nobody encountered worth time triage fix", "d": "12/2016"}, {"body": "agree work needs done still nt agreement issues encouraging focus bugs users library reporting closing tickets instead prioritizing discourages others working bugs fall cracks likely big part code ended present state theoretical bugs performance issues nobody encountered worth time triage fix theoretical bugs nt understand nt make less real way know nobody encountered explained repeatedly well nt take time triage nt close somebody takes time understand", "d": "12/2016"}, {"body": "user reported bug fixing bug determined moment user report bug somebody find bug reported user means problem never occurred user trying understand process workflow experience see users including developers never report bugs instead fix locally need quite fast nt want wait specific ownersgroup people fix", "d": "12/2016"}, {"body": "user reported bug fixing bug determined moment user report bug biggest problem issue amp many others conflates many issues one clear effects requested changes really hard follow issues promote digressions discussion someone reports separate issue clearly requests one api change clear succint description preferably short code snippets showing change consider experience see users including developers never report bugs instead fix locally need quite fast nt want wait specific ownersgroup people fix true issue affects many people someone usually report end ca nt secondguessing users library", "d": "12/2016"}, {"body": "biggest problem issue amp many others conflates many issues one clear effects requested changes one hook related styles really hard follow issues promote digressions discussion jquery code tangled mess many places digressions occur feel free open additional issues see fit opposed closing door someone reports separate issue clearly requests one api change clear succint description preferably short code snippets showing change consider closing ticket precludes sort teamwork issue bother read closed users could expected provide code snippets potential solutions linked old primer demonstrates quite clearly figure styles without using problem hook question trying solve true issue affects many people someone usually report end end ca nt secondguessing users library mean coders therefore must able spot invalid logic makes way users least must proactive fixing bugs already made public nothing secondguessing sort guessing jquery users likely assume something wrong generally unlikely recognize bugs interfaces vague names often confusing results eg easily used misunderstood method furthermore even recognize odd result idea come straight report ridiculous users particularly jquery users often guessing rearranging patterns seem work fewer still able describe issues beyond nt work provide clear test cases ca nt abdicate responsibility finding reporting bugs users particularly silly case already found mistakes", "d": "12/2016"}, {"body": "ctomczyk davidmark anyone else provides test case demonstrating bug reopen issue", "d": "12/2016"}, {"body": "\uc624\ud6c4 richard gibson notifications githubcom\ub2d8\uc774 \uc791\uc131 closed receiving subscribed thread reply email directly view github mute thread", "d": "12/2016"}, {"body": "davidmark anyone else provides test case demonstrating bug reopen issue still nt understand issues described one reopen issue perhaps somebody continue work tired nonsense leave closed assure nobody work", "d": "12/2016"}, {"body": "bug report finishes test case needed logic clearly incorrect already starting wrong foot start test case clearly fails talk whetherwhy code wrong fix test case end unit tests happy", "d": "12/2016"}, {"body": "bug report finishes test case needed logic clearly incorrect already starting wrong foot really able agree logic wrong without seeing fail test case recurring theme never mind starting long past starting ticket closed solution reopen maybe somebody work long stays closed nobody going work particularly closing ticket tells everyone may interested helping move nothing see start test case clearly fails talk whetherwhy code wrong fix particular case makes think supported browsers even run bs hook code already know test fails outside recent versions handful browsers rejected irrelevant result hook never even runs today remain code nt fail tests current browsers follow ca nt rely test results everything actually understand code analyze test results solution propose remove whole mess run current unit tests whatever narrow range browsers consider supported see happens nobody going anything closed ticket", "d": "12/2016"}, {"body": "nt bothered going back ready related discussions please explicit design decision good starting point", "d": "12/2016"}, {"body": "please explicit design decision know illadvised decision sure really justifying something like glance linked issue", "d": "12/2016"}, {"body": "looked expected still thoroughly disagree ready callback throws exception bets callbacks period point idea state application document developer debugger looking stopped code traversing stack trace looking variable values etc determine went wrong callbacks muddy waters", "d": "12/2016"}, {"body": "seems bundling together many opinionated changes interested reviewing core please submit pull request without reference changes comparison changes", "d": "12/2016"}, {"body": "seems bundling together many opinionated changes interested reviewing core please submit pull request without isarrayisplainobject reference changes comparison changes noted one directly related prematurely closed issue part rewrite involves embedding slimmed version last barrier deprecating method main point neither mentioned changed extant calls method surprise already using method expect jqueryisarray deprecated", "d": "12/2016"}, {"body": "part rewrite involves embedding slimmed version last barrier deprecating method main point may motivation embedding vs referencing extant independent change may well choose accept changes without anything regarding neither mentioned changed extant calls method surprise already using method expect jqueryisarray deprecated indeed mistake action required", "d": "12/2016"}, {"body": "may motivation embedding vs referencing extant independent change may well choose accept jqueryextend changes without anything regarding jqueryisplainobject agree could separated fork would backtracking also see changes made better deprecated", "d": "12/2016"}, {"body": "closing per davidmark comments", "d": "12/2016"}, {"body": "closing per davidmark comments simply said nt backtracking fork clearly free want trunk", "d": "12/2016"}, {"body": "optimizations always considered see need keep issue open external demand necessitating change", "d": "12/2016"}, {"body": "optimizations always considered see need keep issue open external demand necessitating change nt need wait user complaints make improvements one getting rid inappropriate overly complicated obviously troubleprone function motivation needs come within understand time limited due neverending stream bugs stopping moment consider deal root causes pay dividends helping prevent future issues might learn experience well", "d": "12/2016"}, {"body": "nice catch thanks", "d": "12/2016"}, {"body": "lines around long time remember least trying remove finding current safari webkit still needed review blame file determine history probably related tickets several years old may take time find person advocating nonessential change show safe", "d": "12/2016"}, {"body": "lines around long time remember least trying remove finding current safari webkit still needed aware around long time please nt shout spend time later trying see offending lines could removed problem nt fixed properly time identified iirc yet another case wanting add line two due file size concerns however related feature test would removed result net would push worst mentioned posted solution several years ago usenet relayed resig decided use famously went attack character repeatedly another sad story history project though result add extra line try support different area code javascript var parent elemparentnode get function elem look carefully bug getter setter agreement implement noop hack established old mystical incantations needing incorrect review blame file determine history probably related tickets several years old may take time find need provided enough information post fix code without going back searching original proposed answer provide fix nobody comes hint solution simply delete noop lines though certainly vanish along indirect feature test pulling back bit posted snippet see context provides another clue javascript selected function elem accessing property makes selectedbydefault options safari work properly elemparentnode elemparentnodeselectedindex terse ambiguous comment bit oddly stated well exactly mean makes selectedbydefault options safari work properly rhetorical question hopefully know exactly hack trying accomplish discussed forum several years ago person advocating nonessential change show safe answer posted clear assurances needed basic logic problem usually case browser scripting gathering empirical evidence evidence proves nothing certainly talking unevenly applied mystical incantation testing comes logic clearly fixed figure existing unit tests added bet house wo nt needed thoroughly disagree nonessential change identified inconsistency use feature test result well indirect nature test words existing hack nt even applied consistently indicates unit tests either incomplete never run environment featuring quirk trying spackle additionally would difficult determine anyone ever bitten bug actually took time complain stackoverflow usenet etc would likely taken form nt work perhaps try suggestion helped get around recurring themes", "d": "12/2016"}, {"body": "anyone anyone know effects", "d": "12/2016"}, {"body": "sorry let repeat asking want make changes code bugs currently open please homework go back look browser bugs caused seemingly meaningless lines put source longer needed browsers occurred longer supported remove otherwise check list bugs reported users library see help", "d": "12/2016"}, {"body": "sorry let repeat asking want make changes code bugs currently open nt listening analysis trumps evidence gathering ie nt release code seems work coincidence customers nt want guinea pigs ca nt relied upon report every odd quirk encounter please homework go back look browser bugs caused seemingly meaningless lines put source already said responded solution remove lines replace logic makes sense need homework posted solution discussed forums several years ago longer needed browsers occurred longer supported remove wrong end stick browser scripting done proactively anticipate issues tend come go browsers create fix inconsistencies otherwise check list bugs reported users library see help treadmill project decade big reason code state", "d": "12/2016"}, {"body": "current code base bit clear explanation thanks analysis though would help would nt verbose next time though", "d": "12/2016"}, {"body": "current code base bit clear explanation cited code certainly still appears exactly cited lacking check flag well consideration includes old comment unspecified safari version code looking please nt bother splitting hairs saying code technically part sizzle jquery included jquery build repo fact may need updated elsewhere irrelevant waste time bring stage guessing meant current codebase remark event code linked nonsense discussed resig others several years back cited nothing changed although look carefully hack even applied evenly also mentioned furthermore ridiculous think hack anything like required setting selection short bunch voodoo nt even consistent application correct logical solution discussed forum years ago gave enough hints somebody come beyond belief nobody made slightest effort understand issue let alone suggest look correct solution thanks analysis though would help would nt verbose next time though verbosity issue comes repeatedly explaining thing responses repeatedly miss point one cycle code complete nonsense regardless attempts rationalize correct solution posted several years ago dismissed might added line two responses far nobody addressed point ticket prematurely closed nt expect anybody else consider issue also correct code eliminate need flag associated code entire solution actually reduce code size seems major focus almost exclusion concerns", "d": "12/2016"}, {"body": "guess spell answer q trying fix example q missing none elements attribute first implicitly selected q issue browsers known delay setting property implicitly selected old problem typically nt issue unless trying reference property document ready q first lose indirect feature test using disembodied second get rid hack set property clearly longer issue third get rid hack well simply discards answer finally andor method change way check whether selected hinted hack references throws away property property answer problem determining whether selected javascript var isoptionselected elselect elemparentnode elselecttagnametolowercase optgroup elselect elselectparentnode isoptionselected elem elselectoptions elselectselectedindex see makes logical sense deducing value using property opposed throwing away correct solution long attribute solution required multiselect implicitly selected options controls leave check exercise could also add check elements parent would nt bother getting setting property element makes sense ps worried performance browsers display quirk add direct feature test use result andor duplicate sizzle", "d": "12/2016"}, {"body": "guessing meant current codebase remark meant still sizzle repo sizzle jquery different projects differences important case important planning remove sizzle dep entirely browsers known delay setting selected property implicitly selected option old problem typically nt issue unless trying reference property document ready start testcase jsbinjsfiddle others trying tell first lose indirect feature test using disembodied select second get rid set hack set property clearly longer issue third get rid get hack well simply discards answer pull requests new tests without falling old tests code linked nonsense discussed resig others several years back cited nothing changed although look carefully hack even applied evenly also mentioned avoided since important information tend get lost supply philosophy irrelevant stories etc see", "d": "12/2016"}, {"body": "meant still sizzle repo sizzle jquery different projects differences important case important planning remove sizzle dep entirely ticket definitely planned create dump sizzle eliminate obvious problem raised sync bit late course good finally dumping thing meant nt say last thing need riddles also importance jquery builds web incorrect code rather brush obvious bug technicality would suggest discussing fixed across three major versions regardless repo code originally comes worry removing sizzle doubt going happen time soon obviously never versions start testcase jsbinjsfiddle others trying tell others saying saying really nt think good idea remove hack closed ticket understanding nt suggesting tenth time new audience implying logic needed replaced something made sense need understand lack failing test nt imply code makes sense wo nt fail future browser scripting involves analysis anticipation reviewing test results current browsers pull requests new tests without falling old tests need new test cases behavior change suggested original unit tests confirm used browsers actually quirk end story ticket closed nobody seemed understand issue thought saying remove hack closed nobody going work including pull requests nothing get avoided avoided appear quoted wrong bit response avoided discussing issue resig several years back definitely important many arguments mention go back review history issue confusedly thought suggesting removing hack without replacement mentioned repeatedly see answers right pointed instead telling go back would better follow lead review original issue proposed solution already knew posted perhaps mean avoided posting answer everyone else else refused go back look history mentioned nt really matter ticket closed want learn something history thread starts turns issue post matt kruse note matt states quite clearly start thread relaying suggestions kept telling wasting time telling go back read history words course know wrote book find rationale even bug discussed anyone point curious resig answers posts later hmm nt remember bug offhand reproduction failing passing later matt resig discussed halfbaked fix issue hack discussing seven years later mentioned repeatedly new test cases needed even dmethvin mentioned tried remove replace hack got unit test errors mention new test cases needed tickets referenced well filed fixed filed fixed note resig took half suggestions rejecting one mentioned start ticket replace hack logic makes sense code right first post almost exactly suggested comes paragraph matt starts discussion colleagues better approach identified would whoever else related clj discussion yes clj group resig refused read refused hear times insisting nobody could mention suggested solutions originated usenet group one reason obvious junk code remains jquery day addition resig else present first thread none dmethvin yes dmethvin guy singlehandedly stalled ticket closed insisting go back find history would confused code back would roughly another three years main subject thread ahem fixed well attempted reverted never know even getting junk point learn opening exchange kruse resig matt opens recounting numerous issues one code reviews know ones resig never read warned others avoid matt provided links review old attributes primer resig responded much way others responded ticket three first four sentences specific examples see", "d": "12/2016"}, {"body": "jquery historically exposed guts allowed spiesmocksetc undocumented methods already made actually private explicit design decision point would valuable little", "d": "12/2016"}, {"body": "jquery historically exposed guts allowed spiesmocksetc undocumented methods already made actually private late jumping hoops work modular frameworks exposing way renders modularity moot developers may think creating apps safe meddling fact basement door wide open nt personally care one way nt rely frameworks personally nt see way make browser scripts immune meddling outside particularly rely dom ironic see jquery paired things angularjs", "d": "12/2016"}, {"body": "public function nt see need privatize call privatized version nt experienced many problems design decision", "d": "12/2016"}, {"body": "resolved", "d": "12/2016"}, {"body": "jquerymerge public function nt see need privatize call privatized version nt experienced many problems design decision completely missed point closed issue prematurely suggest read issue everything export object public nt mean reference functions way defeats purpose using modules similar situation exporting calls commonjs nodejs module break module example count ten calls clearly good idea allow outside code change behavior function delete use modules first place going reference global shared variables within module idea link documentation supposed prove certainly adds support assertion public function method somehow immune modularity rules unclear suggest ask questions rather simply closing issue recurring theme", "d": "12/2016"}, {"body": "resolved think", "d": "12/2016"}, {"body": "seems like thing would happen without jquery ca nt stop building invalid html however test case pretty large would possible reduce even lot going", "d": "12/2016"}, {"body": "ok one kind cool appended table contains inner table one try find contain incoming row mistakenly use one inner table straightforward fix", "d": "12/2016"}, {"body": "thanks digging", "d": "12/2016"}, {"body": "invalid tbody required tr comes right table", "d": "12/2016"}, {"body": "shyliontjmn first glance looked like unclosed tag something dug jquery bug", "d": "12/2016"}, {"body": "ok thanks", "d": "12/2016"}, {"body": "seems indeed duplicate issue commit fixes issue see thank", "d": "12/2016"}, {"body": "real question purpose setting option request data used final url option set string already serialized object class provides method serializes object properly conflating nt use seems wrong", "d": "9/2017"}, {"body": "documented prevent automatic processing converting query string get requests appending url argument made affect serialization url manipulation strikes confusing nt actually prevent manipulation matter useless dave points would someone want appended url hard time imagining plausible purpose ignoring exposing seems accord user intentions matter though clear needs update", "d": "9/2017"}, {"body": "hear simply ca nt agree change make following code work anymore many situations far simpler serialize url parameters beforehand rather construct data structure sole purpose accomodating jquery internal serialization hence example object custom pretty much covers scenario think clearly problem documentation implies supposed prevent addition data processed ie transformed still used nt want data added url nt put options first place data problem need additional option ignore btw predates ajax rewrite always behaved way aside called makes using antipattern pretty much situation hence introduction prefilters safe mess options someone wants handle data manually like suggest need create option together prefilter checks modifies url accordingly wo nt break ajax caching mechanism unlike", "d": "9/2017"}, {"body": "hi jaubourg always glad data processed ie transformed still used want data used one use cases precipitated ticket someone wanted serialize data json rather formencode someone wants handle data manually like suggest need create option together prefilter checks modifies url accordingly ok prefilter might take convert stringified object alternatively object prefilter decide whether convert based method specific endpoint url custom options whatever caller treating url endpoint black box nt want worry data format seems like prefilter good solution implemented scattered callers nt need worry caller implementing endpoint interface call wrapper nt use convert data string make call making code changes definitely think need make docs changes sure see lot utility applies requests entity bodies specific transports almost say nt use", "d": "9/2017"}, {"body": "hi dmethvin always glad argue tickets please note already potentially processed prefilters called custom option available route nt use recommandation spot time need provide properly serialized query object custom handles serialization indeed cases rare beside using option change way another option handled quite antipattern option would better ahem backward compatibility nt provide automagical serialization within ajax architecture following would definitely make obsolete", "d": "9/2017"}, {"body": "know return something different depending collection approach trademark jquery early design fan continuing tradition especially case get information via works way back jquery strong argument gettersetter api might make sense nt think applies case", "d": "12/2016"}, {"body": "dmethvin comment sensible hard argue kinda want argue anyway might worth like see examples return values", "d": "12/2016"}, {"body": "timmywil one example html name suggests running produces nodes", "d": "12/2016"}, {"body": "put together js templatenodechildnodes gt nodelist templatenodecontentchildnodes gt nodelist text elements templatenodecontentchildren gt htmlcollection", "d": "12/2016"}, {"body": "discussed one given solution short currently return empty list fix something like", "d": "12/2016"}, {"body": "techquery would like pr", "d": "12/2016"}, {"body": "note careful make contents stop inert running need test ensures happen example could create tag containing script onload handler making sure none fires", "d": "12/2016"}, {"body": "timmywil like make new pr issue one question branch commit", "d": "12/2016"}, {"body": "techquery master nt maintain versions amp anymore", "d": "12/2016"}, {"body": "yeah kinda sorta design cc dmethvin scottgonzalez", "d": "1/2017"}, {"body": "one option try use page visibility api swap raf settimeout", "d": "2/2017"}, {"body": "thanks report safari first part comment applies browsers create mouseenterleave events using mouseoverout eventtime checks event delegation works jquery pointerenterpointerleave pointeroverpointerout see also", "d": "12/2016"}, {"body": "somewhat related question browser scrolls initialization sequence consistent standard across browsers test chrome firefox edge safari", "d": "12/2016"}, {"body": "also since expecting code run page load might well scroll element code work browsers", "d": "12/2016"}, {"body": "issue happen jquery firefox jquery chrome jquery firefox issue happen jquery chrome sample code demonstration creating dynamic element directly using angularjs create dynamic elements indirectly", "d": "12/2016"}, {"body": "might jquery ready callbacks fire little later changed deferreds implementation lot think dmethvin right even though worked fine jquery might coincidence maybe people nt work even think need wait element appear use angular anchorscroll service scroll proper element", "d": "12/2016"}, {"body": "interesting definition browser suppose scroll element represented fragment identifier document loaded however decide tell document loaded well defined cross browsers least nt see seems happens domcontentloaded events however seems things changed jquery yes agree even jquery safely say document ready saw jquery might chances ready function could triggered timer solution allow application handle fragment identifier instead rely browser behavior inconsistent wo nt call regression anymore", "d": "12/2016"}, {"body": "want programmatically scroll specific element use popular jqueryscrollto nt think need core would much code case since using angular anchorscroll service would better solution going close issue please see decide whether include something core thank time", "d": "12/2016"}, {"body": "sure right place post sorry stumbled upon issue jquery reloading top linking anchor tag id mentioned understand closed thought could maybe help solution using core sorry could nt find thread hoping quickly help anyone issue", "d": "9/2017"}, {"body": "nt know answer offhand based code snippet could create new ticket jsfiddle jsbin per issue template would great", "d": "9/2017"}, {"body": "works try tweaking fiddle recreate failure", "d": "12/2016"}, {"body": "since response owner ticket quite time closing", "d": "12/2016"}, {"body": "hello sorry toolong look fiddle sorry bad link", "d": "12/2016"}, {"body": "abridged summary happens construct nodes html text identify temporarily disable contained script elements insert nodes dom script order reenable indocument already evaluated evaluate case first script invokes jquery ui ancestor later scripts evaluated applies dom manipulation process assumes indocument script elements already evaluated case static content marks accordingly time outer call gets around looking later script inner call already marked evaluated skipped weight code required fix issue probably great us justify adding especially since script evaluation undesirable legacy behavior easily worked around moving scripts outside manipulated ancestor", "d": "12/2016"}, {"body": "ignoring second part logically separate issue fine switching type check object string provided nt increase gzipped size jqueryminjs", "d": "12/2016"}, {"body": "ignoring second part logically separate issue fine switching type check object string provided nt increase gzipped size jqueryminjs thanks yet done thing brain sample required changes deprecated eventually deleted easily make additions incurred idea checking every commit see whether added bytes file size wrong premature something call premature counting bytes like checking gas level ounce every time hit stop light leave trend develops likely downward one fork plenty fat trim project time increased factors weigh size increases eg code clarity performance anyway round two", "d": "12/2016"}, {"body": "second one easy well method javascript var prefix add function key valueorfunction clearly three possibilities though comments mention one infer two array object object object constructed jquery object object constructed jquery objects prototype chain objects bad variable name leave moment line checks either array something object constructed base object object constructor call fancy object truthy property fairly poor duck typing inference clearly require next line arraylike object apparently assumed contain references form controls direct inference get future issue fair enough still make assumption contents arraylike object simply documented passing variation jquery object eg containing document reference lead undefined behavior know come head frames short answer frameset unlikely document another jquery would required jquery deals single window time would simply use frame would nt make sense pass jquery object constructed one frame another frame event could documented though would nt bother function would still work provided frame object illadvisedly augmented words would take perfect storm incompetence part caller break hand trivially easy break original indirect inference finally let dump reference straightforward eliminate javascript var prefix add function key valueorfunction leaves three go one require little inspection thought first two due overloading involving host objects two appears variation old function expect two fixed first leave single function calling matter insidious function appears truly nightmarish code appropriate bits simply folded deprecate eventually drop yes may increase code size temporarily sometimes cost progress important get design right first time ultimately net decrease removed mention creeping towards extinction along though far slowly dozens references look next one time confirmation page changes", "d": "12/2016"}, {"body": "appropriate bits isplainobject simply folded nt boilerplate seems odds claim net size reduction willing proven wrong", "d": "12/2016"}, {"body": "also compatible separate instances jquery unacceptable canonical method detecting jquery collections", "d": "12/2016"}, {"body": "isplainobject nt boilerplate seems odds claim net size reduction willing proven wrong feel quite sure wo nt require every line function eliminate call hand wrong still leaves performance clarity benefits latter makes code easier debug maintain seriously doubt increase size due proposed changes overshadow benefits see let know round", "d": "12/2016"}, {"body": "also instanceof jquery compatible separate instances jquery unacceptable jquery canonical method detecting jquery collections read dueling scenarios existing one trivial break however canonical consider test would require bizarre turn events including using separate instances even worth considering clear makes sense furthermore allowed pass nonarraylike fancy objects truthy property seems complicated document name allowing one instance jquery call another method makes head hurt thinking regardless make direct inference determine arraylike object containing form control elements simply arraylike object clearly assuming contents perhaps validate jquery object something like note calling way cover odd chance lacks prototype case object would actually make sense think check tomorrow best luck ps one hint augmented jquery break many places due unsafe forin loops", "d": "12/2016"}, {"body": "canonical could check object property definitely require makes check explicit allow", "d": "12/2016"}, {"body": "jqueryparam makes isplainobject check explicit allow jqueryparam jquery value see edited response sorry nt notice new reply interim", "d": "12/2016"}, {"body": "found line interesting light previous discussions canon context context instanceof jquery context context clearly canon consistent throughout", "d": "12/2016"}, {"body": "three go snippet mistakenly said earlier two calls one remaining two javascript handle html array match context context instanceof jquery context context handle id else line play case html string representing single tag element fact object properties representing ahem attributes whatever names values days believe mostly dom properties html attributes xml another long complicated story irrelevant problem hand attempting discern clue line apparently document element something else allowed case appears possibilities beyond host object include object anything else would lead undefined behavior well throw jquery lumps two together type checking arguments let say something falsey eg values element document host object object representing properties attributes set single element idea sort test need example function indicates seems easy solution eliminate simply asserting truthy also know appropriate property attribute set element would seem like simplest straightforward solution also consistent previous duck typing function furthermore allows fancy objects ie constructed something house namevalue pairs passed nt seem like common use case ca nt imagine reason objects disallowed never like see boolean type conversion host object properties known throw exceptions past history guide host object reactions appropriate let knock unneeded call javascript handle html array match context context instanceof jquery context context handle id else updated comment well correct wrong know set properties attributes depending dom type nt right somewhere around realized alone impossible make work added companion leaves calling simply identify bits still required add deprecate wait make sure objections suggestions diving one certainly get biggest performance boost particularly extending deep", "d": "12/2016"}, {"body": "let take step back exactly changes intended accomplish generally revisit code users report bugs performance issues refactoring code nt problems introduce compatibility problems requires time attention multiple people team members best time type refactoring region code reported issues refactoring helps resolve issue process makes code better dozen issues would great starting point changing code would also fix real problems users reported", "d": "12/2016"}, {"body": "let take step back afaik yet take step forward proposing several steps forward see takes us exactly changes intended accomplish explained clarity performance eliminating crutch isplainobject soon followed functions encourage poor design seen untangling code best hemmed design decisions date back decade likely never changed regardless making good progress long term expect reduce amount code well code size seems major focus generally revisit code users report bugs performance issues say led state code exactly define performance issue looking code seeing sorts unneeded function calls expensive furthermore untangling process identified inconsistencies eg use instanceof one place duck typing another try sniff jquery object inefficiencies redundancies code harder follow less clear makes harder document refactoring code nt problems introduce compatibility problems requires time attention multiple people team members sure define problems goes without saying refactoring code break compatibility requires time attention providing consider obscure inconsistent code problem document harder maintain clear consistent code every time go patch bug chance creating bugs tied clarity consistency code also know experience well reading code jquery relatively slow virtually everything remember jsperf comparisons posted comparing library coincidence know improve performance dojo several years back balked urge follow footsteps certainly nt lead forward dozen issues would great starting point changing code would also fix real problems users reported good luck bug fixes moment feel free use use whatever want explaining everything detail go really feel pat hand nobody complaining advise reevaluate position recall users reported real problems ua sniffing hand never shortage issues related specific causes never pinpointed complaints nt work variety code clearly hard follow underdocumented supposed myriad unit tests testers nt helping identify problems either code simply made sense sure seemed work per prescribed tests five years became clear tests simply insufficient diagnose problems design much code meet vaguely documented expectations coincidence hard follow expectations murky deviations simply written edge cases another coincidence related select elements pointed years ago still code today sure unit tests users yet complain code either though may well caused issues also dismissed edge cases sun spots problems phase moon etc get one perhaps somebody else go deal issue hand problem solution discussed public numerous times years ironically solution dismissed may added extra line two sound familiar resig could nt see evidence extant code nt work ie complaints problems philosophy design ca nt patched fit neatly tickets piling patches without longterm vision exactly code ends convoluted inconsistent much harder patch without creating new issues nt expect users evaluate clarity code performance either though may compare latter get similar libraries way stay ahead curve proactive digress moment dealing mostly crutch unable deal design issues created happily appears one go away entirely without changing api similar methods may go quietly see idea future methods crutches available require designs appropriate ecmascript browser scripting stay tuned", "d": "12/2016"}, {"body": "inspecting clear logic convoluted iterative mixin mashed recursive clonedeep two classic js functions spin recursive bit make simpler follow yes sure break issue least two well nt care mess method present state much simpler see splitting wrap isplainobject abatement split issue one likely renamed something like reduce dependency isplainobject second final nail also restructures really need third replace calls fine seems like able go commits perhaps change issue name reflect", "d": "12/2016"}, {"body": "see point old nature inherent problems nt necessarily show issues tests still bug reports led us refactoring code way john wanted long time however doubt removing documented method without obvious native equivalent point nt want go ripping guts method without bug reports motivate us besides may right needs discussed given limited time work volunteers decided like focus important issues based practical use cases may perfect wo nt considering changes moment thank contributions love like pick existing issue help", "d": "12/2016"}, {"body": "see point old nature attr inherent problems nt necessarily show issues tests still bug reports led us refactoring code way john wanted long time nt write blog post five years first mentioned design problem usenet review think quote along lines always suspected something wrong design problem required adding companion method lumping attributes properties one odd method never going work suppose point listened back also users best source information odd failures tend provide enough details code nt work history repeating may well reports failures related issues kicked could fallen cracks stackoverflow usenet years past wait get coherent bug report users see bugs right john wanted fix long time deprecate method replace two new ones suggested repeatedly usenet nt solution arrived five years later result project sorts new issues deal rightly criticized result quarters personally dealt projects frozen time supporting ie best simply using old version jquery old would nt work ie whatever aspired upgrade also seen projects could nt upgrade jquery new broke old code nobody involved knew black box even cause problems nobody reported anything fix advice always remove jquery equation nobody ever needed get set properties first place digress however doubt removing jqueryisplainobject documented method without obvious native equivalent point point deprecated removed time soon reason us users rely crutch nt increase code size much address concern well several related concerns uncovered dealing think nothing api would one unneeded function simpler removed future simply extraneous function nobody ever want need granted using internally main issue surely users well detriment nt want go ripping guts method without bug reports motivate us never suggested ripping guts simply deprecating methods require ripping due inconsistencies redundancies inefficiencies uncovered investigation issue though impossible unlikely get motivation fix issues due bug reports simply rare cases cause performance issues motivation fix things needs come within best motivation keep issues multiplying easier code follow easier debug misunderstandings lead creation new bugs dealing reported issues particularly concerned bugs flying radar unit tests also realize bugs unclear code silent failures call implies passed value could anything one function two cases could used used one however good reason use either case value question handful allowed possibilities hard follow inconsistent therefore difficult document users complicated test also find redundancy example cases test truthy value moving rest test certainly one first checks falsey values besides may right needs discussed given limited time work volunteers decided like focus important issues based practical use cases nt understand need close issue allocate focus contend reopened least finish time chime isplainobject may perfect wo nt considering changes moment never suggested changing one line suggest changes eliminate use internally elsewhere thank contributions love like pick existing issue help thanks could happen also volunteer work motivated given time right motivated wrap issue paste code fork whether ever gets merged irrelevant may also add additional issues springing one eg breaking strongly suggest everybody reread discussions carefully several mistakes uncovered see sense waiting around users report matter obscure cases may obscure less likely users report yet virtually everything jquery relies lowlevel functions eg furthermore suggested fixes brief simple review provided understand exactly code differs documented best luck", "d": "12/2016"}, {"body": "redid without splitting two turns would nt made much difference expected nt need near amount code needed bits slightly rewritten clarity speed private method deprecated javascript isplainobject function obj function used soon follow methods javascript eslintdisable nounusedvars conditionally created function used inside functions exists var deprecated null typeof windowconsole undefined amp amp typeof windowconsolewarn undefined deprecated jquerydeprecated function feature alternative alternative alternative please find another way windowconsolewarn feature deprecated alternative though used similar function could find code like exception handling likely restructure code share common function mentioned new rehab issue lessons learned investigation adjustment affected code indicative sort work required throughout project get treadmill nagging bug fixes see way regain maintain semblance relevancy problems unrelated theme eg multibrowser builds would pointless get basic issues addressed strongly advise reopening ticket even buy none clear mistakes inconsistencies uncovered previous comments read carefully top apparent", "d": "12/2016"}, {"body": "since jquery always execute callback asynchronously previously sometimes synchronously sometimes makes confusing api decided make uniformly async nt plan change behavior back hard finding issue get less stack trace jquery still see line threw error debugging nt harder example running dom ready jquery see jquery jquery version nt hide important information imo", "d": "12/2016"}, {"body": "hard finding issue get less stack trace jquery still see line threw error debugging nt harder debugging code stop immediately event one ready callback goes time halt possible reason continue code gone expected path goes callbacks debugging far better catch bug act inspect variables consider exceptions may occur sporadically case luck nt recur immediately comes experience debugging complex applications practical break caught exceptions debuggers allow option sucks caught exception allows rest code proceed possibly obscure cause ultimately comes catch ca nt think good reasons know experience plenty reasons catch", "d": "12/2016"}, {"body": "debugging code stop immediately event lot javascript happens asynchronously rule uncaught error async code nt stop code execution outside current async context nt lot jquery language ultimately comes catch already answered question want callback always invoked asynchronously instead sometimes synchronously sometimes nt plan change back thanks suggestion since seems issue making ready back sometimes synchronous nt plan going close", "d": "12/2016"}, {"body": "lot javascript happens asynchronously rule uncaught error async code nt stop code execution outside current async context doesnt lot jquery language completely false debugging ecmascript singlethreaded production still silly wrap callbacks trycatch ca nt imagine calling ready callbacks asynchronously either another story call synchronously asynchronously sure managing call synchronously perhaps referring happens inside callbacks digress already answered question want callback always invoked asynchronously instead sometimes synchronously sometimes nt plan change back none anything catching exceptions fact even important catch asynchronous operations cause likely harder track later ones sporadic well thanks suggestion since seems issue making ready back gt sometimes synchronous nt plan going close afraid completely missed point", "d": "12/2016"}, {"body": "one ready callback goes time halt gack nt want ready handler single point failure entire page previous versions caused lot trouble note also native domcontentloaded events behave way continue run additional handlers even previous ones throw errors aligning behavior possible reason continue code gone expected path reason modern web page code often nt written one person combination plugins code fragments work independently different parts page different ready handlers face hostile code ad blockers browser addons good chance something break combination browser platform addons want charitable donation form break rare failure tooltip plugin essential functionality page", "d": "12/2016"}, {"body": "tested nodejs see yet referring comment obviously depends order calls works expected global object time called chance augment either global object flag always set sure intended way always global object time called one created calling exported factory function two possibilities pass object augmented pass global object reference augmented makes lot sense global referenced like global variables calling module finally object global passed exported factory function global object window passed results correspond two difference two arguments must passed get second outcome seems cover every previous possibility adds particular interest ability augment global object calling module allows script reference browser code makes lot sense global object kept separate reflects fact object every environment clearly thoroughly documented", "d": "12/2016"}, {"body": "thank providing full thought process agree wrapperjs parameter poorly would accurate separate parameters might even better happily accept behaviorpreserving pr clean regarding behavior see code leads astray line javascript moduleexports globaldocument checks global document object browsers implies global reference global object however seen global may reference one three types objects window object browsers sort module object nodejs surely document property global object unspecified environments comments little help imply global references window object primary use case window object poorly named right line intended detect property global object ie parameter split suggested would quite confusing inconsistency end javascript else factory global know point moduleexports object nt know whether global object document object jquery fail soon references windowdocument argument name window core adds additional confusion actually primary use case mentioned like see made explicit wrapperjs refactor regardless lack means definitely engaged commonjsnodejs initialization therefore must window object succeed bigger issues require changes really allow passing global object reference window object factory function global object passed window object found property object made possible wrapperjs additional argument also added core script example likely used javascript expose jquery identifiers even amd commonjs browser emulators noglobal windowjquery window jquery strongly disagree refer example wrapperjs call add properties provided window object affect context environment anyone wanting free make call like context object initially windowlike bottom line despite naming flaws wrapperjs initialization working intended noncommonjs browser environment attaches function alias global commonjs exports function associated global attach nodejs exports factory function returns function resulting executing noncommonjs browser initialization provided window developed somewhat organically people wanted jquery new environments sometimes form multiple coexisting instances even multiple versions changes question proposals would clear consider backwards compatibility said proposal changing initialization behavior", "d": "12/2016"}, {"body": "thank providing full thought process agree wrapperjs parameter poorly would accurate separate window global parameters might even better happily accept behaviorpreserving pr clean look three files changed changes add extra argument initial function call add one factory function initial call always gets global object argument called moment even would inaccurate eg nodejs regarding behavior see code leads astray primary use case global window object poorly named right yes obviously browsers virtually identical global object may even object browsers get reference global object nt led astray code massively confusing written commented particularly variable naming regardless lack moduleexports means definitely engaged commonjsnodejs initialization therefore global must window object succeed global object well virtually identical object browsers look code covered everything point missing event something else passed least document property strongly disagree refer var jquery require jquery window example wrapperjs call add jquery properties provided window object affect context environment covered case code tested nodejs well also created option pass global object nodejs makes ultimately work exactly like browsers extra exported factory function course currently asymmetry behavior nodejs browsers extra exported factory function bottom line despite naming flaws wrapperjs initialization working intended noncommonjs browser environment attaches jquery function alias global window augments global object odd indirect way using host object conflation addressing commonjs exports jquery function associated global window attach written case environment global object truthy property case think makes far sense augment global object understand even though currently augmenting browsers effect augmenting global object end result correct odd way get nodejs exports factory function returns jquery function resulting executing noncommonjs browser initialization provided window issue provided global object scenario third case different odd behavior however change behavior one bit added support passing global object nodejs makes three cases behave without caller anything special simply pass global object instead addition object global object case pass fake nothing changes big winwin simplest way understand problem realize though first two cases augmenting object called effect augmenting global object similar declaring global variables third case fake object nothing global object three objects called window third one imposter nt near power first two developed somewhat organically people wanted jquery new environments sometimes form multiple coexisting instances even multiple versions understand things grow organically like sometimes grow asymmetrically case anyone wanting free make call like thisjquery require jquery window assume mean better proposed preclude original use case simply added option make nodejs behave browsers passing object instead addition object read code notes various use cases see enabled scenario propose without requiring additional work developer nodejs code changes question proposals would clear consider backwards compatibility highly recommend everyone stake review linked code changes think clear definitely designed backwardly compatible expect know sure unit tests run made things much easier follow added new wrinkles nodejs nt possible fairly sure new wrinkles catch developers realize missing good options added agreement code changes make sense make sense create another pull request", "d": "12/2016"}, {"body": "seem convinced jquery attach global object goal attaches window happens correlate global browsers need even care object except getting window", "d": "12/2016"}, {"body": "problem easy way write code works browsers nodejs example create global object mimic browsers javascript typeof global undefined globalwindow window add window nodejsdom whatever require jquery like require jquery global flag set nothing gets augmented currently must something like javascript var jqueryfactory require jqueryjs globalwindow window jqueryfactory window augments object augment global object javascript var jqueryfactory require jqueryjs globalwindow window jqueryfactory global latter case differ browsers calling module reference jquery well properties global object nt see problem case first backward compatible example passed instead global object side note would much better nodejsdom left window object simply used global object properties make sense nodejs eg already settimeout cleartimeout etc virtually identical actually global object browsers windows nodejs simply use global object add global property nodejs scripts nt windows abstraction would make sense well", "d": "12/2016"}, {"body": "seem convinced jquery attach global object goal goal nt goal make jquery flexible possible ideally make work nonbrowsers eg nodejs closely browsers least provide option without breaking past use cases done attaches window happens correlate global browsers understand augments global object specific ramifications nt make one bit difference happen slightly offkilter browsers using object result become part global scope clearly goal related lines core add properties object need even care object except getting window let try explain way adding add global object therefore left global scope lines core add properties would make sense would way reference except properties would break virtually every jquery script existence clearly jquery trying augment happenstance behaves global object browsers absolutely mandatory case jquery work expected browsers nt appropriately augment global object instead clearly conflation global object common mistake found many libraries applications even popular ones recall saying since first pull request case impetus changes remains case confusion straightened fork among benefits let confusion persist affect us moving forward perhaps must case offering tips suggestions would like hear least one developer giving", "d": "12/2016"}, {"body": "virtually identical actually global object browsers windows nodejs simply use global object add global property nodejs scripts nt windows abstraction would make sense well jsdom nt automatically create globals good use jsdom create fake instance put variable pass jquery factory globals involved property also use etc would nodejs philosophy jsdom put global object good also use etc global object since environments global versions disallowed see refactoring wrapper code take account preserve behavior described also add nt require people pass object factory nt need jquery sympathize concern confusingly named variable sure actually using passed value defined changes must take mentioned restrictions account looked code nt pass tests invoke see hard see works nt version wrapper", "d": "12/2016"}, {"body": "jsdom nt automatically create globals good use jsdom create fake window instance put variable pass jquery factory globals involved aware nothing break use case document property also use getcomputedstyle location requestanimationframe domparser xml etc yes properties object fake though illadvised shortcut would nodejs philosophy jsdom put global object good beside point think would good option least also use settimeout setinterval etc window global object since environments global versions disallowed see problem nothing affect furthermore issue mozilla extension bug unrelated anything talking perhaps meant different issue refactoring wrapper code take account preserve behavior described comment nt break existing behavior added additional flexibility might want also add nt require people pass global object factory nt need jquery require passing global object exported factory function simply gave option thus make nodejs environment line browsers eg reference sympathize concern confusingly named global variable sure actually using passed value window defined changes must take mentioned restrictions account took everything account looked code nt pass tests invoke npm test see hard see works nt version wrapper would prefer discussing code concerns arise logic subjecting integration unit tests ran assume received sort integration error surprised probably left something lint directives create pull request see integration results please nt close monitoring results", "d": "12/2016"}, {"body": "bunch trailing whitespace tabs inserted github editor fixed one issue left related newly introduced globalobject argument passed core claims never used checking", "d": "12/2016"}, {"body": "installing dependencies locally play around would prefer guess issue unused variable obvious anyone experienced building thing edit duplicated integration errors locally see see built edit suspected build munged possibly due indentation issues mentioned pull requests edit yep pretty fragile indentation breaks build", "d": "12/2016"}, {"body": "set test away ps ca nt believe using tabs instead spaces indentation must ask", "d": "12/2016"}, {"body": "would nodejs philosophy jsdom put global object good looked philosophical part seems node changed philosophy back around made accessible modules saying think good thing prior variable per module makes sense regardless version node app using changes pr allow calling module closely mimic browserjquery environment chooses unit tests passed assuming comprehensive set unit tests change one error message match test expected nodedocumentmissing would much prefer split test two one check missing also cause jquery fail error message confusing selfreferencing missing passed object good luck", "d": "12/2016"}, {"body": "thank thinking wo nt considering changes code time like focus pressing issues conversation quite time sink please feel free tackle existing issue", "d": "12/2016"}, {"body": "thank thinking quite welcome guess agree disagree one nearly concerned issues whether reported considered yet like focus pressing issues conversation quite time sink please nt use time issues pressing concerns wait hopefully lessons learned process primarily augmenting object browsers done strictly side effect augmenting global object hence adding global scope words nobody references properties object seen side effect available nonbrowser environments eg nodejs creating asymmetry across platforms ie augment fake dom requires referencing properties object closing larger related issue consider jquery references object exports performance penalty allows outside scripts affect module create new issue future see last comment pull request details", "d": "12/2016"}, {"body": "started making adjustments fork obviously nt going like virtually every module changed global exported constructornamespace reference shared core modules bet extra argument passed wrapper core looking pretty good right thing changed anyway opening new issue related calling methods exported objects defeats whole purpose using modules see", "d": "12/2016"}, {"body": "yes appear problem using instead", "d": "12/2016"}, {"body": "hi think understand mean would mind providing testcase similar resource would clear behaviour expect", "d": "12/2016"}, {"body": "test case also necessary pr would like work mbest", "d": "12/2016"}, {"body": "jsbin linked knockout issue", "d": "12/2016"}, {"body": "backed due regression seen reland fix regression", "d": "3/2017"}, {"body": "also see", "d": "3/2017"}, {"body": "seems issue would apply checkboxes code existed since", "d": "3/2017"}, {"body": "right regression since plan address well", "d": "3/2017"}, {"body": "working make release", "d": "1/2018"}, {"body": "thanks report api propose nt save lot code nt think worth adding afaik also native equivalent api one asked want always define plugin", "d": "12/2016"}, {"body": "mgol afaik also native equivalent classlist api fyi replace method domtokenlist api looks like added november", "d": "5/2018"}, {"body": "hi specific details example think forgot quotes height", "d": "12/2016"}, {"body": "notified bug css designers use multiple assignment property example class height fitcontent trick sure feature works also old browsers", "d": "12/2016"}, {"body": "already work browsers", "d": "12/2016"}, {"body": "tried else", "d": "12/2016"}, {"body": "explain problem detail since markelog posted works scenario described far", "d": "12/2016"}, {"body": "would expensive implement know want track specific animations add complete handler use get promise", "d": "12/2016"}, {"body": "going revisited", "d": "6/2017"}, {"body": "sounds like issue woocommerce code jquery code mentioned simple better looked solution stack overflow reported issue really something wrong providing concrete test case mentioning problematic line code wo nt help us much doubt would jquery blame", "d": "11/2016"}, {"body": "oh sorry post thank compatibility problem last version woocommerce jquery version wordpress thank comment mgol", "d": "11/2016"}, {"body": "really short already reason another method get one property along code documentation method jquery around time frame removed keep api simple", "d": "11/2016"}, {"body": "actually looks like one browser issue allowing contain one interactive element another", "d": "11/2016"}, {"body": "would useful internally ca nt depend existing adds cases cover note also need pass jquery methods already way", "d": "11/2016"}, {"body": "since response owner closing please ping us want continue discussion", "d": "12/2016"}, {"body": "closing favor", "d": "12/2016"}, {"body": "seems consistent far method jquery event handling concerned browser fires events docs say event handlers trigger per element per event type example one element two event types", "d": "11/2016"}, {"body": "problem seems misimplementation getallresponseheaders rely least otherwise agree assessment pspvz would willing submit pr updating getresponseheader something like", "d": "11/2016"}, {"body": "hello tried create test seen contribute issue", "d": "11/2016"}, {"body": "contribute issue yes", "d": "11/2016"}, {"body": "problem seems misimplementation getallresponseheaders rely least otherwise agree assessment pspvz would willing submit pr updating getresponseheader something like done", "d": "9/2018"}, {"body": "explore potential simpler replacement called decided nt make sense duplicate fetch api use jquery slim instead full jquery ajax amp effects modules everything else polyfill making specific change would big breaking change would basically break code used ajax amp attached success handlers promise nt think", "d": "11/2016"}, {"body": "need workaround change", "d": "11/2016"}, {"body": "please nt submit issues notified people", "d": "11/2016"}, {"body": "provide complete test case", "d": "11/2016"}, {"body": "rather test case usecase prestashop backoffice product page loads tabs loaded cachefalse avoid outdated data tabs relies upon static assets currently assets forcefully loaded cachebuster querystring", "d": "11/2016"}, {"body": "like see test case using jquery showing described", "d": "11/2016"}, {"body": "since response owner closing please ping us want continue discussion", "d": "12/2016"}, {"body": "get requests adding parameter type request appending url nt lot value providing coding documenting redundant way", "d": "11/2016"}, {"body": "solution errorprone forget add token goes production like would hard fix would nice clean save way control caching", "d": "11/2016"}, {"body": "thenks report however jquery ui bug tracker located one jquery", "d": "11/2016"}, {"body": "correct per update documentation", "d": "11/2016"}, {"body": "please link test case jsbincom jsfiddlenet", "d": "11/2016"}, {"body": "sorry nt think could give test case happening sliders case insert image button inserts image div also panel configuration div change background color etc image inserted div shows option configuration panel execution time enables slider slider introduced execution time failing question noticed something related know could find error probably error code slider code slider spinner codes slider spinner linked configpanel find imageopacityslider slider range min value thiselimageopacity min max step slide function event ui configpanel find input nameopacityspinner spinner value uivalue change function event ui configpanel find input nameopacity val uivalue change configpanel find imageopacityspinner spinner min max page false step stop function event ui configpanel find imageopacityslider slider value spinner value val thisimageopacity unbind keydown bind keydown function e epreventdefault using chrome version need information explain something please let know thanks advance edit firefox giving something related much recursion", "d": "11/2016"}, {"body": "pretty hard debug without test case fix reported bugs ca nt fix unless know bug region code bug occurs indicates delegated event", "d": "11/2016"}, {"body": "basically dup discussion short answer easy exposing flag requires several breaking changes maybe jquery", "d": "11/2016"}, {"body": "could provide test case showing think breaks focused internals need know use jquery seeing error also referrence", "d": "11/2016"}, {"body": "test case di slidedown delay slideup di display div back jquery core api jqueryfndelay line jqueryfndelay function time type time jqueryfx jqueryfxspeeds time time time type type fx know thisqueue push function queue relateted jqueryfn object item pushed second argument theory hooksstop called jquerydequeue delete hooksstop question jquerydequeue function code fn add progress sentinel prevent fx queue automatically dequeued type fx queueunshift inprogress clear last queue stop function delete hooksstop fncall elem next hooks delete hooksstop called hooksstop never called", "d": "11/2016"}, {"body": "purpose using hookstop cleartimeout timeid current item executed finsihed next item start execute think code delete hooksstop called right", "d": "11/2016"}, {"body": "please put test case everyone easily see problem", "d": "11/2016"}, {"body": "saberyjs cleartimeout method hooksstop clears timer set settimeout whereas delete hooksstop clears last queue stop function deletion clear method followed hook given stop gotoend", "d": "11/2016"}, {"body": "since testcase presented quite time closing please ping us want continue discussion", "d": "12/2016"}, {"body": "bug javascript works please look programming help stack overflow", "d": "11/2016"}, {"body": "arrow functions work nt binding ca nt point current element always use first arrow function parameter code instead case jquery issue please direct queries topics stack overflow jquery forums thanks", "d": "11/2016"}, {"body": "thanks report however code jquery validation plugin maintained please submit issue", "d": "11/2016"}, {"body": "mgol oops sorry wrong place thanks link right repo", "d": "11/2016"}, {"body": "looks like missed boolean signature already deprecated assume means undocumented also included oh target timeframe removal gladly submit pr removal time right", "d": "11/2016"}, {"body": "silverwind yes removal would", "d": "11/2016"}, {"body": "thanks offering", "d": "11/2016"}, {"body": "ok close sure planned want keep reminder removal feel free reopen", "d": "11/2016"}, {"body": "think good reminder already issues created one missing", "d": "11/2016"}, {"body": "thanks report", "d": "11/2016"}, {"body": "still returns object", "d": "11/2016"}, {"body": "returns promise jqxhr abort method missing jquery", "d": "11/2016"}, {"body": "please add link test case", "d": "11/2016"}, {"body": "interesting log ajax see jqxhr ca nt use chain", "d": "11/2016"}, {"body": "saved result returns", "d": "11/2016"}, {"body": "logic offset nothing nothing zero easily add expression want old behavior", "d": "11/2016"}, {"body": "starting contribute like help one smile think good choice move function module import wherever needed mgol", "d": "3/2017"}, {"body": "pr progress", "d": "11/2017"}, {"body": "looks consistent docs warn using shortcut properties useful since may wrong", "d": "11/2016"}, {"body": "please provide test case code anything random see different behavior something must different sites test", "d": "10/2016"}, {"body": "example seen", "d": "11/2016"}, {"body": "thank opening issue seeing downgrade behavior responds faster http redirecting order logs might confusing", "d": "12/2016"}, {"body": "alternate fix due async nature settimeout function leaves function calledinto call stack moves ahead since values stop function set true means takes end animations present stack hence come call functions values pair hope helps", "d": "10/2016"}, {"body": "sure practical use case either use trying interrupt seems like could cause issues nt think guarding", "d": "2/2017"}, {"body": "xclam think github right place kind question stackoverflow right place help", "d": "10/2016"}, {"body": "eduardostuart mentioned please look programming help stack overflow", "d": "10/2016"}, {"body": "nb library used test override settimeout ie since already implements setimmediate ie show speedup", "d": "10/2016"}, {"body": "unavailable latest chrome firefox safari releases well emulating would almost certainly increase file size unpalatable amount need fast performance chaining deferreds would recommend specialized library like bluebird said could definitely see abstracting use way takes advantage available", "d": "10/2016"}, {"body": "exposing something like defaults easily able bower install something like order speed jquery promises without bloating core library", "d": "10/2016"}, {"body": "deferred implementation nt meant competitor native promise common internal use ajax animations chain short time takes ajax animation dominate far easy convert deferred promise nt need crossplatform compatibility concern global hook like introduce crossplatform differences difficult debug especially nt know opted change code page", "d": "10/2016"}, {"body": "doesnt need actually implement setimmediate use available ie windowsetimmediate windowsettimeout process something like", "d": "10/2016"}, {"body": "updated example native promise support", "d": "10/2016"}, {"body": "like said could definitely see abstracting use way takes advantage available pr would fairly considered", "d": "10/2016"}, {"body": "like said could definitely see abstracting use way takes advantage available pr would fairly considered iirc original plan idea introduce use internally public api would allowed override envs better alternative implementations like node hell remember went another way", "d": "10/2016"}, {"body": "process updating deferredheavy set components stumbled upon issue well things slowed crawl included gave immediate improvement solution would recommend", "d": "3/2017"}, {"body": "run upgrading noticing performance degradation think good resolution would queue resolutions way could keep asynchronous spec defines run pending resolutions single timeout", "d": "4/2017"}, {"body": "actually noticed looks leverage technique", "d": "4/2017"}, {"body": "seen promotion behaviour describe following explicit pattern popularised encouraged within wikimedia continue use corsjson modern browsers using jsonp fallback without requiring additional options passed really like avoid also set", "d": "11/2016"}, {"body": "nt think setting required default", "d": "11/2016"}, {"body": "ruture numbers wrong yx z ruture nerver zx time", "d": "10/2016"}, {"body": "thanks opening issue find support forums", "d": "10/2016"}, {"body": "rangakore viewing webpage locally viewing file rather using server probably cors issue trying making server append http header javascript file trying request", "d": "10/2016"}, {"body": "thanks opening issue however find support stackoverflow jquery forums jquery gitter", "d": "10/2016"}, {"body": "thanks report duplicate fixed point nt plan releases unless something really critical happens upgrade fixed", "d": "10/2016"}, {"body": "please look programming help stack overflow", "d": "10/2016"}, {"body": "actually problem duplicate jquery used issue solved thank suggestion", "d": "10/2016"}, {"body": "code running knows specific button used trigger code calls add button serialized string method however nt reasonable way know form serializing serialized specific button pressed", "d": "10/2016"}, {"body": "every time see one tickets wonder add specialcase submitter elements context collection eg returns form data set would submitted activating", "d": "10/2016"}, {"body": "caller explicitly specify submitting control work although nt really like idea using collection specify could always add arg specifies submit button easy write code anyway bigger problem determining button pressed submit form try determine submit handler", "d": "10/2016"}, {"body": "definitely favor guessing submitter making possible serialize explicitly specified would expect calls made handlers bound submit buttons", "d": "10/2016"}, {"body": "want tackle", "d": "10/2016"}, {"body": "saying works differently used native interface simply nt expect behavior saw", "d": "10/2016"}, {"body": "dmethvin turns jquery issue issue still behavior expecting bring issue related native functionality", "d": "10/2016"}, {"body": "stackoverflow question", "d": "10/2016"}, {"body": "think lol maybe bad english hindered understanding meant rhetorical question know answer", "d": "10/2016"}, {"body": "issue template asked lot information close ticket start using jquery sure use migrate", "d": "10/2016"}, {"body": "thanks opening issue plan removing jsonp promotion see", "d": "10/2016"}, {"body": "thank reporting issue test case however appears working expected event handler registered throws servicesvars defined referenceerror invoked since fact defined topic recommended pattern executing code upon dom ready jquery callback nt appear issue jquery even longer supporting lines think find better help stackoverflow", "d": "10/2016"}, {"body": "yes aware although sure whether problem something fix side leave ticket open since people seem creating new ones regularly", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "dmethvin clearing cache client side enough follow apply fix server side", "d": "10/2016"}, {"body": "fixed", "d": "10/2016"}, {"body": "really strange data structure note standard governing complex data structure serialized querystring since kind thing never happens html form essentially dup advice workaround would either serialize information using restructure data regular", "d": "10/2016"}, {"body": "", "d": "10/2016"}, {"body": "dmethvin btw seeing note missing docs updates", "d": "10/2016"}, {"body": "hover pseudoevent hover shorthand nt think ever formally documented mentioned blog post", "d": "10/2016"}, {"body": "btw hover method deprecated docs covered though", "d": "10/2016"}, {"body": "ah collapsed two things mind bad", "d": "10/2016"}, {"body": "please look help stack overflow include pieces code github surround single backticks inline triple backticks new line instead encoding html entities hand like example code new line", "d": "10/2016"}, {"body": "core method requires changes others places nt really need labels issue would argue would confusing unconventional", "d": "10/2016"}, {"body": "also create corresponding issues docs migrate repos", "d": "10/2016"}, {"body": "markelog issue hiding jquerycamelcase also fixes camelcase handling data module imo makes sense doublelabel maybe effects label needed", "d": "10/2016"}, {"body": "nt reported issues yet later", "d": "10/2016"}, {"body": "sounds like two issues one hiding another fix aaaam something like sure want fix", "d": "10/2016"}, {"body": "another argument dividing issue would easier external contributors since already helped kind issues could handle hiding thing hence reminder creating issues whereas fixing something nt really clear sequence actions least might harder tackle", "d": "10/2016"}, {"body": "sure separate right", "d": "10/2016"}, {"body": "cool thanks", "d": "10/2016"}, {"body": "markelog done", "d": "11/2016"}, {"body": "selector currently supported sizzle therefore jquery work selections many clients though call relies upon", "d": "10/2016"}, {"body": "doubt exact bug since ie bug although might exhibit similar behavior saying test case ticket exhibits behavior modern chrome", "d": "10/2016"}, {"body": "sure nt think test case showing behaviour chrome going move javascript included snippet probably best practice anyway", "d": "10/2016"}, {"body": "thanks opening issue without test case investigate would hard pin issue inside jquery reopen test case produced", "d": "10/2016"}, {"body": "yes jquery nt trigger native events ones tracks native events nt provide way determine attached", "d": "10/2016"}, {"body": "discussion see", "d": "10/2016"}, {"body": "thanks clarification", "d": "10/2016"}, {"body": "post example shows problem might guess difficult us diagnose problem description provided even sure reported error message null jquery object nt literal error", "d": "10/2016"}, {"body": "get error", "d": "11/2016"}, {"body": "sessionliang using ajax load event removed precisely people confusing two please read upgrade guide contains info one described", "d": "11/2016"}, {"body": "since nt got specific example breaks going close issue tangrl construct minimal example post amp reopen", "d": "11/2016"}, {"body": "sure trying run single file uglify use jquery build script", "d": "10/2016"}, {"body": "well running polymer build trying help cheers", "d": "10/2016"}, {"body": "sure trying run single file uglify use jquery build script", "d": "10/2016"}, {"body": "read carefully issue title cheers", "d": "10/2016"}, {"body": "polymer setup blindly uglifying js files dependencies regardless actually used either setup polymer bug jquery also note receiving bug reports like time changed jquery nt amp files correct javascript wrapperjs file upgrading jquery resolve issue still recommend fix build touch unrelated files", "d": "10/2016"}, {"body": "hi mgol thank replying see could find entry polymerjson exclude js dependencies indeed search upgrade jquery thank cheers", "d": "10/2016"}, {"body": "provide information issue template lot questions would useful answer", "d": "9/2016"}, {"body": "div overflowy auto using something like touchswipe allow touch scrolling div longer able adjust scroll position using scrolltop estimate mobile safari changed api affect scrolling objects allow new things like touch maybe would dig", "d": "9/2016"}, {"body": "previously position relative scroll container working fine mandatory position fixed order allow overflowscrolling work", "d": "9/2016"}, {"body": "thanks opening issue works guess function getting called twice somehow please refer stackoverflow jquery forums jquery irc channel support", "d": "9/2016"}, {"body": "thanks opening issue form data posted several ways ajax option html form post even created js creating one outside purview jquery could plugin many options creating form probably best write", "d": "9/2016"}, {"body": "thanks opening issue however considering finicky selector always ca nt say critical bug branch receiving critical patches workaround either stick edit visible selector user code use filter insteadrecommended think code technically correct determining visibility way line browser thinks visible use finally browser support branches would recommend upgrading jquery upgrade guide migrate plugin help lot encounter issues", "d": "9/2016"}, {"body": "finally browser support branches little stretch dropped opera safari older current amp ios jquery browsers limited market share currently though important ie version support people blocked us dropping browsers", "d": "9/2016"}, {"body": "thanks info planning upgrading jquery knew would make changes point anyway wanted bring attention agree seems like correct way check visibility directly checking element size time curiosity rationale considering element bounding box visible distinction bounding box bounding box size nt seem significant relevant issuesdocsresources handy interested skimming", "d": "9/2016"}, {"body": "use browser dev tools determine spending time ask help stackoverflow", "d": "9/2016"}, {"body": "documentation says string need check", "d": "9/2016"}, {"body": "thanks opening issue however find support forums jquery irc channel jquery gitter channel", "d": "9/2016"}, {"body": "thanks opening issue however sure issue jquery please provide reduced test case determine issue jquery reopen", "d": "9/2016"}, {"body": "ye something related css jsfiddle works perfectly nt know project giving going crazy breakpoints shows execution shows css properties exactly nt know going anyway sorry posting wrong issue", "d": "9/2016"}, {"body": "thank opening issue however test case requires lot work end get point debugging issue think needs fleshed continue odd undefined available even dom parsed words find issue confirm something change jquery fix reopen ticket", "d": "9/2016"}, {"body": "timmywil sure right requires clicking jsfiddle link probably used wantexpect nt already supplied honest find quite rude close ticket giving chance reply comment andor concluding nothing new brought table could perhaps check files repository checking copypasting two snippets files almost equally easy anyone else putting files directory loading directory chrome extension done minutes knowledge jquery internals quite limited could come quite things would idea consequences would assume must reason elaborate testing done function reason internal variable nt initialised equal since seems desired side effect calling without argument line circumstances would say least deserves proper error response instead returning undefined variable throws exception execution stack assumes everything went fine line fact seems variable never able undefined however even one somehow changed code erroneously return early case trying initialise default document far see undefined saved local variable used guess proper solution would somehow wait come existence guess bound get around point even empty page always seems get minimal html empty head empty body case one would wait populated browser would hurt anyone theory nothing else existence", "d": "9/2016"}, {"body": "reenberg intention rude maybe really nothing provide closing ticket mean ca nt reopened tool triaging narrow tickets focus get fixed sizzle used nt see anything obviously wrong variable would normally say nt support environments nt window document sizzle first place would throw error document many changes would required work way describing ca nt make changes without pinpointing exact problem hope better explanation thank contributing even nt pinpoint problem immediately issue posterity worthwhile", "d": "9/2016"}, {"body": "differentiate variable play inside sizzel right term use defined local variable line understand code updated function sizzle may work different contexts global variable defined even saved line issue hand global sometimes present script run makes sense chrome injects content scripts dom initialized sure using right terms believe case see drop debugger stage browser windowtab empty would argue already pinpointed exact issue called undefined resulting initialising local variable returns early resulting uncaught typeerror later code tries inside function undefined local variable argued whether reasoning happening correct cause whether bug chrome jquery nt know guarantees script may expect regards execution environment one always expect global script executed clearly chrome bug defined anywhere would say jquery handle matter would still say jquery fail gracefully internal undefined would help future anyone ending kind state found old bugtracker believe actually experiencing exact problem internal variable undefined likely reason im experiencing though nt know anything chromeembeddedframework note nt agree solution fact wrong far see reasoning linked underline likely one ended issue thus jquery ought least fail gracefully telling undefined perhaps would make sense test call line point jquerysizzle fall apart execution continued undefined local variable initialisation run thus performance hit anyone", "d": "9/2016"}, {"body": "due fact content script currently jquery injected page dom fully initialised something like nt firm information use asking change environments formally support anecdotally know others using jquery chrome extensions never used perhaps research find uses succeed one fails", "d": "9/2016"}, {"body": "perhaps research find uses succeed one fails also know many people using jquery chrome extensions quite sure using inject content script old way injecting either specifying manifestjson file programmatic injection backend scriptevent handler quite new documentation marked available stable release chrome though tests showed actually available stable branch starting year somewhere around far get internal bug tracker nt removed remarks api documentation since api nt officially vetted something may decide change future actually gets looked ever going happen bug reports matter dates years back technically undefined yet set guess fair enough say formally support environments undefined moment jquery loaded however still missing hard evidence says must exists javascripts executed go report bug chrome else would feature request assume since option injection content scripts various stages page loading done manifestjson file via runat specifyer case documentstart files injected files css dom constructed script run case documentend files injected immediately dom complete subresources like images frames loaded case dmethvin nt address point whether jquery fail gracefully case run non formally supported environment", "d": "9/2016"}, {"body": "case dmethvin nt address point whether jquery fail gracefully case run non formally supported environment address saying difficult anticipate things might go wrong code used untested environments dark thought experiment nt going work well said elsewhere solve trying get past lack likely run problem somewhere else sizzle jquery", "d": "9/2016"}, {"body": "suggesting try solve issue missing document failing gracefully mean throwing exception proper error message describing lack instead letting keep executing bad state throw exception elsewhere makes sense original problem", "d": "9/2016"}, {"body": "sorts assumptions code makes state environment running within assumptions met supported environments waste code put bunch checks error messages never supposed happen reason exception makes sense state environment makes sense code clear error message wo nt help still wo nt make code run", "d": "9/2016"}, {"body": "document set places even defined top windowdocument working electron neither", "d": "4/2017"}, {"body": "issue similar usecase reenberg solve issue specific workaround", "d": "6/2017"}, {"body": "yep never modify objectprototype way", "d": "9/2016"}, {"body": "thank", "d": "9/2016"}, {"body": "update still working try html native tag instead semanticui", "d": "9/2016"}, {"body": "please ask help stackoverflow", "d": "9/2016"}, {"body": "thanks opening issue however accept pr need test case demonstrates problem", "d": "9/2016"}, {"body": "timmywil info need provided", "d": "9/2016"}, {"body": "pslean need way reproduce problem live code little code possible usually done jsbincom jsfiddlenet prefer write test jquery ajax tests would also work", "d": "9/2016"}, {"body": "reopen test case thanks", "d": "10/2016"}, {"body": "timmywil sorry busy recently example need problem see error consol chrome request promoted jsonp link js bin add contenttype applicationjson ajax option remove annotation js bin get response data post api api need use contenttype encoding nt want define contenttype option add contenttype headers please help reopen issue verify", "d": "10/2016"}, {"body": "pslean url using private network ca nt see result fiddle use mock backend requests test purposes", "d": "10/2016"}, {"body": "mgol changed js bin link newest please check", "d": "10/2016"}, {"body": "timmywil mgol", "d": "10/2016"}, {"body": "mgol timmywil help", "d": "10/2016"}, {"body": "documented order forever documentation contains example shows happening current order nt good reason make breaking change", "d": "9/2016"}, {"body": "part definition method", "d": "9/2016"}, {"body": "nt want standard behavior use covered upgrade guide", "d": "9/2016"}, {"body": "thanks fault completely missed change", "d": "9/2016"}, {"body": "intentional however definitely welldocumented open ticket", "d": "9/2016"}, {"body": "sure right place ask question file getting published along jquery coming nt publish file package", "d": "9/2016"}, {"body": "included jquery nuget package", "d": "9/2016"}, {"body": "maintain npm bower packages report issues nuget package maintainers", "d": "9/2016"}, {"body": "please ask help jquery forum stackoverflow", "d": "9/2016"}, {"body": "toggle visibility need determine whether element currently visible change opposite determine whether element currently visible need consider stylesheets document element contained elements document result want achieve", "d": "9/2016"}, {"body": "element fragment still inherent visibility wherein appended body nothing existing bodyetc otherwise changing visibility element element either would would visible words case seems already decided question work errors problem hide show three toggle work dealing array jquery objects hide show work array passed elements toggle throws error", "d": "9/2016"}, {"body": "oh missed array jquery objects supported documented api signature array contain dom elements checking done contents array ensure element valid convert type", "d": "9/2016"}, {"body": "get varied content type sometimes json sometimes nothing set datatype parse response based whatever criteria like including http response code appearance text nt bug report would better ask questions stackoverflow jquery forum", "d": "9/2016"}, {"body": "thing equivalent runs via nontrivial part passing single string comma need tokenize first nontrivial work always slower want equivalent running twice write", "d": "9/2016"}, {"body": "always expected slower surprised see two thousand times slower guess problem browser implementation jquery quite surprised nt optimise knocked together oversimplified parser splitting commas checking ids came bit slower add probably stick array notation though quite ids deal seems fair bit faster creating jquery object one", "d": "9/2016"}, {"body": "big difference performance nt always mean slower solution worse one matters fast enough admit opss seems slow hand really divs page seems like lot even gmail", "d": "9/2016"}, {"body": "edge cases currently possible uncaught rangeerror maximum call stack size exceeded documentqueryselectorall jqueryfninit reducing potential size dom certainly high todo list also nontrivial already optimisations bring number millions coming many angles possible", "d": "9/2016"}, {"body": "sounds like page super edgy territory hundreds thousands elements creates jquery set guarantees elements document order comes document appear order collection sort operation might expensive creates jquery set whatever give little verification sorting might even dom elements cheap provides guarantees set edit example set id twice normally would deduped provide array like", "d": "9/2016"}, {"body": "general usage like looking well replicate within page without using iframes numbers get pretty extreme iframes nt ruled list avoid possible thanks extra info good know sorting nt issue case generally speaking know id know position node type etc certainly intention monkey patching jquery default behaviour anything would said cheap dangerous dealing external code elements aim mindful areas select multiple ided elements may insignificant benefit using alternative method", "d": "9/2016"}, {"body": "thanks opening issue pull comments linked rwaldron adding private really methods jquery still difference synchronous ajax request adding script tag dom bug developer tools using way add breakpoint", "d": "9/2016"}, {"body": "timmywil set breakpoints kinds browsers fnload implement", "d": "9/2016"}, {"body": "techquery seems like developer tools prefer script tag comment still stands", "d": "9/2016"}, {"body": "without knowing specifics think solution found right one custom convertor gives finegrained control data parsed", "d": "9/2016"}, {"body": "jquery core repository issues jquery ui reported", "d": "9/2016"}, {"body": "inherit aspect legacy javascript function invocation observe happens strict mode", "d": "9/2016"}, {"body": "need details particular test case jsfiddle jsbin likely bug code impossible tell error message", "d": "8/2016"}, {"body": "appears defined probalble causes think name variable defined try error thrown", "d": "9/2016"}, {"body": "still facing issue yes please reproduce bug jsfiddle jsbin proceedings regarding issue", "d": "9/2016"}, {"body": "ktajpuri yes already tested problem name undefined yes still experiencing unfortunately unable reproduce though code causing quite sure caused third party library since large project angularjs angular material dozen minor libs idea trace causing problem idea could reproduce jsfiddle", "d": "9/2016"}, {"body": "reproducing minor bug large issue might difficult give try include major libraries external resources panel jsfiddle include code revolves invoking err possible result err reported related things bug fiddle sample data", "d": "9/2016"}, {"body": "since nt jquery bug close welcome continue debug stackoverflow jquery forum", "d": "9/2016"}, {"body": "sounds like fixed version soon check git builds see fixed specific case", "d": "8/2016"}, {"body": "thanks already checked open issues nt see one", "d": "8/2016"}, {"body": "check change value different set means rule invalid want something job plugin way specific included jquery core", "d": "8/2016"}, {"body": "thanks could confirm use validate user inputted css way validation mistakes possible prevention xss would work cases mgol", "d": "8/2016"}, {"body": "user validation another issue checking value correct", "d": "8/2016"}, {"body": "thanks could point jquery checks value correct source much ask", "d": "8/2016"}, {"body": "checks sets value browser rest please look help stack overflow though", "d": "8/2016"}, {"body": "thank could achieved without jquery case basic function helps anyone function validatecss rules validatecss background blue true validatecss background bluea false", "d": "8/2016"}, {"body": "focusing jquery fix critical issues jquery issues scope versions generally would nt expect new releases jquery unless really troublesome bug appears please consult upgrade guide jquery migrate make upgrading jquery easier", "d": "8/2016"}, {"body": "hi notes thanks aug micha\u0142 go\u0142\u0119biowski notifications githubcom wrote closed receiving authored thread reply email directly view github mute thread", "d": "8/2016"}, {"body": "user error container receive html", "d": "8/2016"}, {"body": "setter nt work well dynamic input properties warning since jquery similar issues eg fixing issues like consistently would hard misuse api anyway direct people", "d": "8/2016"}, {"body": "developers need understand difference attributes properties way need understand difference html dom yes confusing jquery early attempts hide difference made things worse", "d": "8/2016"}, {"body": "fixed spurious nt bother anything", "d": "8/2016"}, {"body": "since fixed closing issue", "d": "8/2016"}, {"body": "allowed breaking changes major version updates problem main issue long ago defined play role long term goal split apart call one arg similar otherwise get consistent behavior across versions change maybe suggestions references note mentions single multiple", "d": "8/2016"}, {"body": "dmethvin right see details", "d": "8/2016"}, {"body": "nt think use need handle delegated events mouseentermouseleave nt bubble find approach reduce code overhead accept pr though", "d": "8/2016"}, {"body": "yup reason also clearly stated comment implementation", "d": "8/2016"}, {"body": "reason shim", "d": "8/2016"}, {"body": "old version jquery issue template says note fix bugs latest versions jquery display", "d": "8/2016"}, {"body": "sorry missed note thank", "d": "8/2016"}, {"body": "enough detail us work unfortunately could construct minimal project example exhibits problem share micha\u0142 go\u0142\u0119biowski", "d": "8/2016"}, {"body": "yes may later", "d": "8/2016"}, {"body": "thanks opening issue closing info", "d": "8/2016"}, {"body": "minimal project example jquerytestzip please see read detail thank", "d": "8/2016"}, {"body": "could someone reopen issue exactly problem mgol", "d": "10/2016"}, {"body": "seems like debuggingwebpack thing jquery bug someone stake outcome diagnose let us know anything need change way build jquery may help", "d": "10/2016"}, {"body": "duplicate already fixed fix released upcoming", "d": "8/2016"}, {"body": "passing number jquery supported supported signatures please consult docs", "d": "8/2016"}, {"body": "update jquery must using version least years old future reporting issue please check exists latest version library", "d": "8/2016"}, {"body": "added api list well", "d": "8/2016"}, {"body": "want work issue please inform amp checklist goes like x move x remove x open migrate issue", "d": "8/2016"}, {"body": "left alone test files", "d": "8/2016"}, {"body": "pretty clear advanced feature proper use consisting followed decided deprecate entirely suggested closing anyone considers mistake please post consider reopening regardless recommend replacing uses functionality suggested", "d": "8/2016"}, {"body": "sounds good thanks", "d": "8/2016"}, {"body": "bonus round note nt problem nested keys original serialization javascript decodeuricomponent param root b b gt root amp root b b decodeuricomponent param root gt root amp root amp root", "d": "8/2016"}, {"body": "agree looks wrong entire premise serializing complex data structures way wrong probably beyond trying take anything back either add mess name repair say wo nt fixed point people json seems like would compat issues doubleencoding including possible impacts interpretation server side change would wait past experience shown good predicting people using strange things", "d": "8/2016"}, {"body": "thanks sounds like wontfix would consider patches", "d": "9/2016"}, {"body": "blog post correct behavior complete yesterday colleagues reviewing today absurdly long words unfortunately complicated link back published short version solution problem required writing entire spec test suite reverseengineering libraries identifying intersecting successful behavior future home spec nt yet extracted blog post guarantee interop many things possible meanwhile setting us good direction future yes seen xkcd", "d": "9/2016"}, {"body": "cant var dom documentcreateelement script var str var testfunc dominnerhtml str text domouterhtml text var testfunc lt script", "d": "9/2016"}, {"body": "thanks opening issue however jquery documentation set content element contain html use text method html", "d": "9/2016"}, {"body": "thanks report however jquery bug tracker jquery ui issues latter reported", "d": "8/2016"}, {"body": "fixed master", "d": "8/2016"}, {"body": "jquery dom library seems outside core competency benefit including jquery file publicizing sure project would like anyone wants use always include", "d": "8/2016"}, {"body": "need test case without external libraries jsbin jsfiddle error message nt tell us much also using migrate please update well micha\u0142 go\u0142\u0119biowski", "d": "8/2016"}, {"body": "today found issue code worked jquery", "d": "8/2016"}, {"body": "still need test case jsbin jsfiddle also happen every browser", "d": "8/2016"}, {"body": "error firefox chromium", "d": "8/2016"}, {"body": "reports like super frustrating us majorversion releases breaking changes definition semver write extensive documentation even provide plugin help people process mention endlessly time release new versions yet seems people drop new version existing code puzzled nt work please read documentation use jquery migrate", "d": "8/2016"}, {"body": "thanks including link explains load method removed jquery case nt upgrading previous version starting new project looked jquery documentation found load event handler nt see notes removed also control error message displays example firefox debugger jquery newbies error nt helpful totally control", "d": "8/2016"}, {"body": "naturefreak right side page linked black header saying note maybe note easy skip issue api repo make clearer", "d": "8/2016"}, {"body": "naturefreak also control error message displays example firefox debugger jquery newbies error nt helpful totally control nt handle scenario main problem used two methods named identical different things one would dispatched depending arguments passed removed one use always get second one dispatched pass parameters nt expect anything happen including error random line jquery code", "d": "8/2016"}, {"body": "see also", "d": "8/2016"}, {"body": "thanks explanation error describing look removed bit method lookout future agree would good make stand removed items since error messages might much use jack sun aug micha\u0142 go\u0142\u0119biowski lt notifications githubcom wrote naturefreak also control error message displays example firefox debugger jquery newbies error nt helpful totally control nt handle scenario main problem used two methods named identical different things one would dispatched depending arguments passed removed one use load always get second one dispatched pass parameters nt expect anything happen including error random line jquery code receiving mentioned reply email directly view github mute thread", "d": "8/2016"}, {"body": "template asked test case construct one note crossorigin document access supported browsers unless cors enabled errors may happen nt try access data allowed access", "d": "8/2016"}, {"body": "closing lacking information provide test case reopen", "d": "8/2016"}, {"body": "nt attach load event ready handler attach outside ready handler", "d": "8/2016"}, {"body": "yes works code works ff chrome", "d": "8/2016"}, {"body": "create example jsbincom jsfiddlenet template asked one missing", "d": "8/2016"}, {"body": "tried testing webs impossible error work normal", "d": "8/2016"}, {"body": "okay well say code incorrect may work unreliably depending browser size page instead work assuming code loaded event fires dynamically", "d": "8/2016"}, {"body": "need information figure time reaches line mentioned already used sure error could occur anything special page example xmlxsl page provide test case", "d": "8/2016"}, {"body": "normal page problem code break browser error appears inside mentioned jquery function without reference specific js div might fail cases computestyletests normally applied maybe could help figure js div refers following msdn library console refers following problem object expected attempted invoke method property object type object passed argument type object object required", "d": "8/2016"}, {"body": "cases computestyletests normally applied maybe could help figure js div refers css feature detection code set breakpoint line changes see", "d": "8/2016"}, {"body": "setting breakpoint line fails clicking continue execute script without error reference specific div", "d": "8/2016"}, {"body": "unless test case ca nt really much", "d": "8/2016"}, {"body": "tried manually uncomment js block block identify underlying problem without much success far assume qunit would way go test case", "d": "8/2016"}, {"body": "ideally test case html file includes jquery ca nt get work jsbin jsfiddle create standalone one work", "d": "8/2016"}, {"body": "coworker mine experiencing issue reproduce computer loaded uncompressed version jquery receives following console error unable get property style undefined null reference file line column revert nt issues side note also using jqueryui sure strip project workable test case", "d": "8/2016"}, {"body": "tested jquery migrate right", "d": "8/2016"}, {"body": "added migrate gets following console output get console output however gets unable get property style undefined null reference error page executes normally refreshes page loads normally without error version sure every setting navigation occurred file filenamehtml jqmigrate migrate installed logging active version jqmigrate jqueryexpr jqueryexprpseudos consoletrace migratewarn http uniqueget http anonymous function http anonymous function http global code http jqmigrate jqueryexprfilters jqueryexprpseudos consoletrace migratewarn http uniqueget http anonymous function http anonymous function http anonymous function http global code http jqmigrate jqueryunique deprecated use jqueryuniquesort consoletrace migratewarn http uniqueget http http twidgetprototypeclasses http twidgetprototypetoggleclass http twidgetprototypeaddclass http createwrapper http anonymous function http serverjquery unable get property style undefined null reference file line column", "d": "8/2016"}, {"body": "another test downgraded jquery ui tested jquery get error seems something jquery ui causing issue", "d": "8/2016"}, {"body": "original ticket template created ticket instructions request test case appear would helpful sort test case sounds like may sort regression condition related jquery ui nt considered without test case would difficult diagnose", "d": "8/2016"}, {"body": "nt open ticket issue started searching possible solution came across ticket sure avexmedia person opened ticket also using jquery ui try strip framework working test case", "d": "8/2016"}, {"body": "problem appeared website almost productionready currently difficulties strip testable case see nevertheless use jquery ui adding jquery migrate gives following warning message every time directly mentioned", "d": "8/2016"}, {"body": "issue gotten stale without test case closing", "d": "9/2016"}, {"body": "suspect might compatibility view issue compatibility view checked uncheck issue gone", "d": "8/2017"}, {"body": "got similar error trying get value passed querystring url var parameterpage urlsearchparamsget page please help", "d": "4/2018"}, {"body": "poor man jsperf benchmark typical run yaml method selector complexity implementation findsimplemaster opssec findsimpledirect opssec findsimpleintersect opssec notsimplemaster opssec notsimpledirect opssec notsimpleintersect opssec findcomplexmaster opssec findcomplexdirect opssec findcomplexintersect opssec notcomplexmaster opssec notcomplexdirect opssec notcomplexintersect opssec current code taking huge performance hit vs always using noticeably faster albeit smaller margin still favor completely dropping setintersection branch case could made restricting latter cases thoughts jquerycore", "d": "8/2016"}, {"body": "nice benchmark still like idea simplifying code well", "d": "8/2016"}, {"body": "simplifying", "d": "8/2016"}, {"body": "refreshing change recent complaints firing late one firing soon smile long history us trying use interactive looks like may need revert put comment says see", "d": "8/2016"}, {"body": "think events fire makes sense especially working reduce time first meaningful interaction ca nt ready two events something soon user interact page something javascript libraries need loaded needed thing", "d": "8/2016"}, {"body": "keithhenry agree useful semantics defined either need ensure nt run scripts loadexecute say nt support loading jquery using attribute", "d": "8/2016"}, {"body": "exactly argue mean fully ready would new functionality long clear explicit event jquery firing resolve bug", "d": "8/2016"}, {"body": "problem nt seem way get event loop starts scripts loaded executed either wait ready state potentially many event loops stick seems right move cases words dropping makes ready like advantage jquery loaded attribute scripts moved end body get advantage parsing dom parsingexecuting scripts without need drop wish web api actually check domcontentloaded ideal would something behaves like html documentaddeventlistener domcontentloaded function windowdomloaded true user could check neither really cuts say perfect impossible choice pains say think drop would worse document jquery ca nt loaded attribute", "d": "9/2016"}, {"body": "think something like would work documentreadystate complete windowsettimeout jqueryready else documentreadystate interactive documentonreadystatechange function documentreadystate complete windowsettimeout jqueryready else documentaddeventlistener domcontentloaded completed idea called ready handler would fire pretty much immediately would wait fire neither event would used think preserve desired behavior except cases used case would seems like might okay", "d": "12/2016"}, {"body": "timmywil conclusion revert workaround perhaps could land instead waiting patch simple main problem testing thing iframe test guess", "d": "3/2017"}, {"body": "tldr nt load jquery defer struggled hours bug ended yes removing defer solves", "d": "5/2017"}, {"body": "gkatsanos yes believe current state things", "d": "5/2017"}, {"body": "done testing appears replacing code tests ready state following code fixes issue least chromium browser catch cases document ready called browser event already occurred documentreadystate complete else documentreadystate interactive documentonreadystatechange function documentreadystate complete windowsettimeout jqueryready else document interactive state code waits document complete state runs ready handler means jquery loaded defer ready handler fired page completely finished loading deferred scripts run jquery loaded defer tries use domcontentloaded immediately fires ready handler idea domcontentloaded still used except jquery loaded defer case waits whole document completely loaded ready handler fired nt ideal think better always waiting document completely loaded ready handler run hopefully helpful missing something anyone could test would great", "d": "8/2017"}, {"body": "sounds like reasonable compromise", "d": "8/2017"}, {"body": "wo nt break users expect fire early nt think issue hard fix think unknown number existing jquery components expect fire early would break behaviour changes fire page actually ready fixing would potentially reopen", "d": "8/2017"}, {"body": "keithhenry yea reread code looks like waiting load thinking could compromise would nt change behavior using", "d": "8/2017"}, {"body": "keithhenry timmywil ah think may right outlined behaviour going jquery loaded run ready handler scripts loaded run immediately run ready handler otherwise run ready handler jquery nt loaded run event handler immediately otherwise run ready handler right also timmywil mentioned could tell domcontentloaded already fired might helpful think might possible using performancetimingdomcontentloadedeventstart although might direction want go", "d": "8/2017"}, {"body": "really jquery already good firing ready called dom events nt issue problem fires soon page interactive unknown number projects depend jquery rely behaviour work set jquery needs delay never fire breaking change unknown projects may even projects use rely current broken behaviour suppose could pass kind jquery order change behaviour either adding already fairly large library splitting code deliver alternate variant adding complexity technical debt either way", "d": "8/2017"}, {"body": "jquery inserts special handlers enforce specified behavior html boolean attributes like async values must either empty strings caseinsensitively identical names handlers disrupt nonnative selector processing used calls please use data attributes associate custom data elements", "d": "8/2016"}, {"body": "think acceptable value", "d": "8/2016"}, {"body": "techquery important distinction element content attributes appear html source like element idl attributes appear dom bindings javascript properties element objects like particularly relevant case boolean attributes like reflecting idl attribute attribute getting idl attribute must return true content attribute set false absent setting content attribute must removed idl attribute set false must set empty string idl attribute set true corresponds rules boolean content attributes fact false specifically noted disallowed value boolean content attributes values true false allowed boolean attributes represent false value attribute omitted altogether", "d": "8/2016"}, {"body": "thanks detailed answer opinion boolean idl attribute write html tags customed content attribute ordinary element attribute selected literally according html code css selector", "d": "8/2016"}, {"body": "wo nt address specific code behavior serious concern way markup written use standard attributes like custom purposes creates future hazard case standard decides use code important standard uses elements code broken breaks important web sites standard must work around entire web use different name code stole html standard provides data attributes exactly purpose using use custom data", "d": "8/2016"}, {"body": "opinion boolean idl attribute write html tags customed content attribute true makes document nonconforming b addressing edge cases within jquery would add much size complexity potentially performance degradation use attributes", "d": "8/2016"}, {"body": "dmethvin thanks patience advices attribute spa engine used arguments building query string http api example want extend semanteme html standard attributes frequentlyused kinds html tags conform coding habit traditional nonspa web page naming kind headache coders prefer use existing semanteme similar purposes b hand future use web component standard develop custom html tag also define contentidl attribute name html standard implement similar function loading resource media asynchronously reading book named learning web component development thinking best practice spa developing", "d": "8/2016"}, {"body": "attribute spa engine used arguments building query string http api given generalpurpose nature attributes would bad form assume every one appearing custom element intended one particular use would instead introduce namespacing eg want extend semanteme html standard attributes frequentlyused kinds html tags conform coding habit traditional nonspa web page naming kind headache coders prefer use existing semanteme similar purposes b hand future use web component standard develop custom html tag also define contentidl attribute name html standard implement similar function loading resource media asynchronously fine aware jquery rather indiscriminate code handling attribute sharing name standardized boolean attribute", "d": "8/2016"}, {"body": "discussed length several times discussion key thing particular server accept entity body ability encode querystring rather body implement way around would harder", "d": "8/2016"}, {"body": "would nice separate property could pass data would result query string instead post body example would allow ease use experienced get requests across board understand code written follows standards might nice compromise without creating breaking changes", "d": "8/2016"}, {"body": "point made ticket though already serialize params url longer difficult code clear anyone reading later adding url adding url could certainly add something like explicit data went would require new code plus new documentation new complex rules override addition get requests plus would confuse people using jquery wo nt exist people end using code", "d": "8/2016"}, {"body": "yes certainly acceptable solution getting spoiled node requests properties form body json qs apples oranges suppose thanks feedback", "d": "8/2016"}, {"body": "hmmm offence sounds awkward follow standards delete method work says implicitly pass data via body url instead dmethvin following processdata supposed key thing particular server accept entity body ability encode data querystring rather body implement way around would harder", "d": "12/2016"}, {"body": "bsthomas please read ticket dmethvin linked following spec nt disallow sending body delete different eg head requests explicitly disallow nt send body head requests want us forbid sending body delete requests first convince standard bodies explicitly disallow spec surely follow", "d": "12/2016"}, {"body": "forgot mention example also call deferredexceptionhook made difficult find", "d": "8/2016"}, {"body": "error thrown first function important realize promise already settled resolved rejected second function applies promise settles code called later executes standard promisea behavior would best discuss explore somewhere like stackoverflow implementing defined reason called explicitly rather error implicitly thrown browser indicative programming mistake explicitly throwing generic chain jquery logged message default cases people used signaling console verbosity would annoying however override deferredexceptionhook exactly want", "d": "8/2016"}, {"body": "thanks example code course actual exception raised handlebars misspelled unknown helper eg bogus xyz nt remember actual type override exceptionhook forgot whitelisted exceptions log topic though nt clear would annoying log uncaught errors perhaps find override common pattern something case exception forgot could happen would really want know perhaps switching whitelist blacklist would help people catch errors anyway thanks reminder exceptionhook works", "d": "8/2016"}, {"body": "topic though nt clear would annoying log uncaught errors perhaps find override common pattern something problem knowing rejection truly uncaught rule saying attached promise immediately exception may cause promise reject attached possible bookkeeping required track exceptions time like also quite bit code instead burdening everyone code jquery added couple hooks native promise implementations better since nt sizeperf constraints jquery need support installed base could use etc", "d": "8/2016"}, {"body": "since forms nt attributeproperty seems like bug disabled test catching forms really wanted fieldsets", "d": "8/2016"}, {"body": "seems microsoft believes forms disabled property", "d": "8/2016"}, {"body": "standard says nt disable elements set edge since ie truly disable forms current behavior probably best thing crossbrowser consistency people setting propertyattribute forms right run jakecigar reported forums", "d": "8/2016"}, {"body": "dmethvin ie even funnier disable form way inputs look like disabled grayed checkbox clickable regular input accepts keyboard input see jsbin mess", "d": "8/2016"}, {"body": "came forum took figure actually disabling form never thought would work anywhere tests forum link top care way resolved op several enough workarounds document jquery support disabling forms patch return browsers correct string older versions returned correct string", "d": "8/2016"}, {"body": "link seems say form controls inherit disabled attribute seems could inherit form matter parent say fieldset div within form div enclosing form etc etc however bit different language permit inheritance fieldset", "d": "8/2016"}, {"body": "form control form element used form", "d": "8/2016"}, {"body": "yes know form control form first link enumerates form control explicitly following elements support disabled attribute button input optgroup option select textarea interpret next sentence attribute inherited local declarations override inherited value maybe possible inheritance select gt optgroup gt option maybe parent documentation explicit", "d": "8/2016"}, {"body": "since things inherit parent select gt optgroup gt option explains writing mention form able disabled", "d": "8/2016"}, {"body": "hey person first brought issue jakecigar used work across ie firefox chrome stated ie still supports believe chrome looks like firefox either longer inherits value ignores inherited value nt know browsers keep simple possible believe changes need listed breaking changes even though may intended hidden feature feature request could created allow multibrowser safe disabling reenabling form input objects allowing serialize work via container could possibly form browsers would support container child parent allow functionality configurable modal screen optional placed container better sort protected serialize sound", "d": "8/2016"}, {"body": "believe changes need listed breaking changes semver refers breaking changes referring breakage documented api garbage goes possible garbage come notice ie example form rather bizarre state disabled sure would want intentionally cause also yet convinced setting propertyattribute form useful effect andor documented standards see disabled form taking jquery equation effect disabling form code trying accomplish disabling form", "d": "8/2016"}, {"body": "dmethvin used work across multiple browsers described would prevent users making changes producing additional events especially click events specs obviously changed years longer works expected bottom line need reliable way disable changing field values events still able serialize values ajax calls done nt really concern time long crossbrowser safe actual serialization maybe need dataserializedefault serialize object dataserialize value fields attributes truefalsealways values default true current functionality something else serialize method leave guys eyes bigger picture", "d": "8/2016"}, {"body": "bottom line need reliable way disable changing field values events right way would enumerating fields setting since standard formwide mechanism disable suppose another way would put kind modal overlay form prevent people interacting general tricky due keyboard interactions example either solutions would plugins still able serialize values ajax calls question whether jquery pay attention property form supposed according standards coin toss given way ie behaves nobody setting property part sizzle issue opened track", "d": "8/2016"}, {"body": "dmethvin trust guys come something workable however one wrench needs considered times specific fields marked disabled state needs preserved protection period removed makes using disabled property individual fields rather tricky suppose could use data attribute fields filter fields addingremoving protection think work something related last thought appears way envisioned working serialize hand thanks", "d": "8/2016"}, {"body": "paying attention nonfieldset ancestors oversight corrected note however descendant elements still match ie truly disabled advice still avoid using property except valid eg fieldsets", "d": "8/2016"}, {"body": "also clear current map file name correct google cdn since deliver copy name jqueryjs jquery microsoft cdns include version number file name require physically different map file versionspecific file names", "d": "8/2016"}, {"body": "showing work come back get chance jquery regressed looks like code rename references map file still names versioned files nt correct jquery cdn microsoft cdn", "d": "8/2016"}, {"body": "nt supported browsers old long time since nt test unsupported browsers nt know make changes might break may actively remove workarounds longer need make supported browsers work reason need support browsers old would stay older versions jquery", "d": "8/2016"}, {"body": "yes programming webpage someone high demands browser compatibility totally fine things limited versions jquery breaking javascript completely great possibility stay would last choice make pull request add parameters would pull rejected possibility fix problems even though browser versions officially unsupported", "d": "8/2016"}, {"body": "nt test browsers nt support browsers even submitted patches would short time change broke", "d": "8/2016"}, {"body": "totally understand could could broken like minutes later said browsers supported anymore since long time got broken recently still see chance fixes would hold even time needed fix problems high mind much breaks shortly pull perspective basically comes question pull would allowed rejected thanks patience", "d": "8/2016"}, {"body": "enthusiastic prs may well break next patch release seeing another issue like reported nt test environment time rarely used seems tradeoff big note removed additional optional parameters knowing break old firefox versions us removing handling done knowledge boxsizing handling broken jquery firefox older decided ok case want support firefox even though jquery using nt always supporting last two firefox releases monkey patch apis loading jquery making sure final parameter always passed untested monkeypatch example", "d": "8/2016"}, {"body": "open supporting firefox esr releases people demanded nt seen much demand far though especially sortof supporting old chrome versions via android testing would still firefox esr currently version firefox years old imagine known security holes browser", "d": "8/2016"}, {"body": "supporting old browsers super high priority best strategy would use older version jquery stay really rare newer browsers break something old jquery definitely nt think try support browsers unsupported maker mgol says suppose could support firefox esr since pretty recent browser would nt help firefox support since seems clear wo nt support browsers listed title close ticket", "d": "8/2016"}, {"body": "okay thanks responses", "d": "8/2016"}, {"body": "also warned filled jquery migrate", "d": "8/2016"}, {"body": "source link posted using jquery post simplified test nt include much code", "d": "8/2016"}, {"body": "removed everything unnecessary regarding jquery version may thought saw file nt used since deleted well", "d": "8/2016"}, {"body": "nt understand problem reported chrome console shows second inner outer think correct network shows two requests test reporting edit chrome windows", "d": "8/2016"}, {"body": "dmethvin strange running chrome running version unfortunately nt really know else try second request reporting etags seems broken machine request browser send etag provided response first request server written way return empty body requests header mimics rails server product uses know nt help four people work gets behavior described mac windows different officesstates incognito mode beforeafter clearing cache cache enableddisabled withwithout extensions etc nobody gets behavior see product worked chrome everybody automatically upgraded affected many requests product sends set globally avoid side affects like missing page content possible browser bug least older versions jquery library claimed handle empty bodies gracefully", "d": "8/2016"}, {"body": "ran another pc windows saw described restarted system could nt repro guess something nt get updated seems like chrome returning change chrome pulled result cache returned firefox example", "d": "8/2016"}, {"body": "seeing jquery make second xhr request getting completion event kind", "d": "8/2016"}, {"body": "trying create simple nonjquery equivalent see missing events far go johntron take look seems like creating second request showing", "d": "8/2016"}, {"body": "dmethvin ah ok thought remembered reading jquery custom behavior make work like caching response initial request guess browser behavior definitely help creating native example create bug report chrome looks like link posted blocked way know specs regarding behavior client checked proposal describes server proxy behavior nothing clients trying determine chrome change reason regression seems like lot applications could break", "d": "8/2016"}, {"body": "yeah reason blocking one nt copy cryingcatface shows owned seems think something wrong example basically example made xhr request logging onload onerror onreadystatechange onabort time logging event current xhrstatus page load made one request set timeout second request looked chrome release notes briefly nt see anything obvious added xhr breakpoints came handy see making requests closest saw claims happened sync xhr", "d": "8/2016"}, {"body": "yeah think submit bug report chrome native proof thanks help dmethvin really appreciate", "d": "8/2016"}, {"body": "johntron post link back chromium ticket thanks", "d": "8/2016"}, {"body": "bug report chrome", "d": "8/2016"}, {"body": "think might somehow related serviceworker nt see reason right chrome team touch xhr code produce new bugs", "d": "8/2016"}, {"body": "hi see similar problem response also response chrome callback second xhr request url returns probable related races chrome cors functionality case break debugger seconds xhr request performed callback called", "d": "8/2016"}, {"body": "defect fixed chromium fix included later later included", "d": "9/2016"}, {"body": "thanks following seems close", "d": "9/2016"}, {"body": "also consider purposes one would nt ponyfill", "d": "8/2016"}, {"body": "thought still supported environments fails things look good", "d": "8/2016"}, {"body": "yup changes required case smaller sure phantomjs supports objectcreate", "d": "8/2016"}, {"body": "sizzle already algorithm use fast paths simple selectors done performance tests event delegation jsperfcom longer available ca nt link tests looked fine perf test back statement take long time besides nt understand algorithm like submit pr happily take look sure would work way think would", "d": "8/2016"}, {"body": "timmywil mobile phone filters class takes second every trigger computer ms filters much real project filters n example processing filters takes seconds every trigger part nt understand implementation overriddes fnon fnoff works fast nt think merge without code changing", "d": "8/2016"}, {"body": "timmywil added working implementation first comment example using course real implementation coveraging cases bigger example real implementation big distribute separated module module overrides fnon fnoff said keep order handlers calling wo nt break api", "d": "8/2016"}, {"body": "understand see added code could check rebindings handlers would break existing code relies handler getting executed binding valid due possibility side effects makes change impossible also still real use case ca nt think good reason many bindings handler would indicate problem user code jquery first step figuring problem nt done yet nt foresee us making change reasons free put optimization code suspect bulletproof way restructure code still solve whatever use case addressing", "d": "8/2016"}, {"body": "would break existing code relies handler getting executed binding nt understand mean mean order executing example handlera binded handlerb called first problem keep order want still real use case application content element content defined user something content changed many times app starting add handlers content handlers works great nt need care content content convenient handlers work slow wrote implementation optimization works faster filters even filters optimizitation never works slower also nt forget code executing every trigger", "d": "8/2016"}, {"body": "think approach easy limited cases exampe single id class selector listening becomes large difficult manage generalized features jquery supports event handling give ideas try run unit tests think easier trying describe difficulties think present think code end large would unlikely land core directly however identify simple hooks allow plugin could discuss adding", "d": "8/2016"}, {"body": "nt really understand ticket even via google translate", "d": "7/2016"}, {"body": "jerrygoodboy", "d": "7/2016"}, {"body": "far understood google translate jquery ui repository jquery one latest jquery indeed see", "d": "7/2016"}, {"body": "mgol sorry made mistake though jerry asking jquery ui cause also track jquery ui issues actually jerry asking supported features missing far know branch includes support ie jerrygoodboy \u4e00\u76f4\u7528jquery", "d": "7/2016"}, {"body": "far know branch includes support ie yes correct although fix critical issues branch focusing jquery thanks translating", "d": "7/2016"}, {"body": "works browsers including latest ie specification says could used like confirmed words", "d": "7/2016"}, {"body": "progress appears still issue version windows", "d": "11/2017"}, {"body": "pull requests welcome", "d": "11/2017"}, {"body": "documentation specifically explains assigning object multiple variables copy content help ask stackoverflow jquery forum", "d": "7/2016"}, {"body": "please read upgrade guide especially offset section expected breaking change", "d": "7/2016"}, {"body": "ok seemed odd jquery throws errors normally goes way handle errors silently thank answer", "d": "7/2016"}, {"body": "wow news fix", "d": "7/2016"}, {"body": "problem particular means precommit hook taking way longer needs", "d": "7/2016"}, {"body": "well sucks", "d": "7/2016"}, {"body": "according docs parameter must element passed also says parameter also optional following signature fact setting left undefined docs correct ps api site repo issues reported repo meant bugs jquery", "d": "7/2016"}, {"body": "thanks answer used project mainly discuss second point nt think documentimplementationcreatehtmldocument default behaviour context false", "d": "7/2016"}, {"body": "insufficient unsufficient olivier gasc wrote thanks answer used project mainly discuss second point nt think documentimplementationcreatehtmldocument default behaviour context false receiving subscribed thread reply email directly view github mute thread email checked viruses avast antivirus software", "d": "7/2016"}, {"body": "second argument boolean give argument explicitly want particular value", "d": "7/2016"}, {"body": "yes indeed point useful case think default value", "d": "7/2016"}, {"body": "creating elements another document might used situations iframe", "d": "7/2016"}, {"body": "yes case legit pass function custom context need new default context actually breaks jqueryui widgets anywhere need access may better fix issue jqueryui check thanks olivier", "d": "7/2016"}, {"body": "array string supported input result passing array undefined see supported", "d": "7/2016"}, {"body": "digging bit dupe filer noted would merit mention upgrade guide usage widely advocated sites like including accepted answers hundreds upvotes among top results googling jquery set difference see results recently edited say longer works nt help people upgrading existing code note upgrade guide would appropriate would saved us time may suggest reopened doc bug update upgrade guide", "d": "7/2016"}, {"body": "sure dive undocumented apis upgrade guide case repo jquerycom site upgrade guide located want discuss documenting change somehow correct place", "d": "7/2016"}, {"body": "note upgrade guide would found people getting answer sure note upgrade guide help fix lot mediocre stackoverflow answers using undocumented functionality giving plain bad advice used particular answer post comment thread asking edited someone reflect unsupported regardless jquery version always wrong even happened work past issues filed upgrade guide even better would make pr since sure address words upgrade guide jquery never replacement lodash underscore usage sort example way outside jquery intended use dom library", "d": "7/2016"}, {"body": "note upgrade guide would found dmethvin actually yes upgrading scanned codebase issue noted guide people getting answer sure note upgrade guide help fix upgrade guide helps case code wherever written months years ago upgrade means wo nt work anymore sure address words upgrade guide give thought come something worthwhile file issue pr suggested course big deal established code bug appreciate prompt responses", "d": "7/2016"}, {"body": "link test case includes native version see difference", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "checked attribute setting initial state checkbox per spec seems browsers ignoring still recommend using instead however difference behavior jquery edge issue current code", "d": "7/2016"}, {"body": "perhaps dirty checkedness changed checked idl changed click checkbox changed addremoveall", "d": "7/2016"}, {"body": "still setting idl along attribute backcompat makes sense works expected", "d": "7/2016"}, {"body": "bugs code might causing errors thrown inside jquery case enough look stack trace enable pause exceptions chrome devtools going stack code see error happens code please read note kind questions better suited stack overflow ca nt debugging peoples code bug reports based purely jquery code small reproducible test cases without use external libraries", "d": "7/2016"}, {"body": "also appears plugin abandoned nt updated almost years almost interest terms watchers stars quick look code using several deprecated andor removed features nt able fix find different plugin actively supported author", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "see deprecation notice jqxhrsuccess jqxhrerror jqxhrcomplete callbacks removed jquery use jqxhrdone jqxhrfail jqxhralways instead", "d": "7/2016"}, {"body": "also upgrade guide jquery migrate plugin", "d": "7/2016"}, {"body": "general nt support svg jquery may look like html uses often completely different set rules dom seeing animation happening chrome using jquery either regression browsers afaict fact works ie previous versions nt taken sign svg animation supported nt looked exactly failing leave ticket open others check maybe something general wrong", "d": "7/2016"}, {"body": "according docs animate along css properties element nt seem true code animates properties name nt match css property anyone know purpose gnarf case animates css properties regular properties element property read chromefirefox difference strict mode chrome ignores assignment firefox throw error ie apparently property works setter fixed edge though throws firefox fiddle animating attribute manually via function correct way property animation needs removed unfortunately nt seem way animate attribute based property removing kill animation create custom property though animating purposes better way animate attributes", "d": "7/2016"}, {"body": "animating noncss kindasorta tolerated animating properties plain object although documented see however yes assume property thing set step suppose could setter hook options make set property default could overridden set attribute write value latch led output whatever", "d": "7/2016"}, {"body": "let discuss next meeting", "d": "7/2016"}, {"body": "per meeting decided support animating attributes attributes settable css near future use css animate work around override step function", "d": "8/2016"}, {"body": "far making plain object support official ticket", "d": "8/2016"}, {"body": "hi checking whether issue tracker working properly see template filled created issue asked test case", "d": "7/2016"}, {"body": "hi try provide information bug product versions used jquery jquerymobile trying oficial jqm popup basic demo raises error uncaught typeerror apreventdefault function hope clarifies issue", "d": "10/2016"}, {"body": "api page says note universally agreedupon specification param strings possible encode complex data structures using method manner works ideally across languages supporting input use json format alternative encoding complex data instead never goal serialize every type javascript object custom way suggest improvements note clarify", "d": "7/2016"}, {"body": "nt improvements note sounds like talking structures comes application logic language think need serialize set object probably map also arguments next standard js object jquery already serializes another standard object array format array complex structures set serialized already like example docs", "d": "7/2016"}, {"body": "array fundamental javascript object jsoncompatible support every type basically define serialization logic would impossible deserialize complex type complex structures set serialized already like example docs really complex structure object objects arrays values object easy serialize", "d": "7/2016"}, {"body": "right really happening converted serialization rather asking api pick one serialization method etc add code seems better caller choose preferred method convert array restore back want", "d": "7/2016"}, {"body": "got point guys currently json serialization set returns always empty set defined browser level theer nothing need go bump browser developers first thanks time", "d": "7/2016"}, {"body": "confirmed given results farseeing problem uses removing actual parameter fixing bug still remove", "d": "7/2016"}, {"body": "problem thing bothers query parameters get malformed", "d": "7/2016"}, {"body": "ok good suspect nt noticed reported code appends cache buster end case works fine even request resubmitted", "d": "7/2016"}, {"body": "hi guys also problem found anti cache parameter changed first parameter url called twice row first time something like original amp anticached amp amp second request see anticache parameter first parameter original amp amp anticached amp amp also saw commit changes ranticache remptyquery variables issue tried changes code worked changed replace rantichache question mark ranticache regex removing first amp adding character replacement work replace remptyquery job anticache parameter isthe last paramter cacheurl cacheurlreplace ranticache replace remptyquery know issue fixed yet also final solution maybe could help little bit tyvm paulo costa", "d": "7/2016"}, {"body": "seems like great idea improve performance", "d": "7/2016"}, {"body": "regression update docs well particular part removing specific elements clarify nonelement nodes passed", "d": "7/2016"}, {"body": "could help fix first glance code fix seem big attempt pr", "d": "7/2016"}, {"body": "process pretty simple see make sure signed cla using name commits submit pull request including relevant test suite source code changes", "d": "7/2016"}, {"body": "nicklou need help ask", "d": "7/2016"}, {"body": "hello mr think first step judge element nodetype return elemnodetype amp amp indexofcall qualifier elem gt", "d": "7/2016"}, {"body": "already want skip initial qualifier string", "d": "7/2016"}, {"body": "confirmed looks like flatout got optgroup handling wrong", "d": "7/2016"}, {"body": "looking noticed chrome sees still enabled caused new feature test fail said think chrome right since anchor element disabled idl", "d": "7/2016"}, {"body": "btw different results safari ff chrome", "d": "7/2016"}, {"body": "chrome sees still enabled caused new feature test fail said think chrome right since anchor element disabled idl chrome actually reason content elements never match enabled", "d": "7/2016"}, {"body": "see nt match either enabled disabled", "d": "7/2016"}, {"body": "bad nt release nt running jsdom tests node lt includes promisesa compliance tests actually testing jquery even runs configuration assume building jquery using jenkins server recently switched node projects infrastructure taken care feel safer node amp dropped upstream skipped running eslint node lt assume install fine everywhere since nt native dependencies postinstall hooks depending newer node", "d": "7/2016"}, {"body": "skipped running eslint node lt yeah could although would require hacking unpleasantness grunt file", "d": "7/2016"}, {"body": "per meeting skip running eslint node lt dropping version travis moved roadmap later", "d": "7/2016"}, {"body": "take", "d": "7/2016"}, {"body": "oh man thief would mind update eslint", "d": "7/2016"}, {"body": "markelog sure pr ready", "d": "7/2016"}, {"body": "example nt seem include jquery", "d": "7/2016"}, {"body": "bad switching versions forgot leave readded tested way results", "d": "7/2016"}, {"body": "agree null also looks like null copied something getting wrong jquery however sure focusing another element case null correct search related blur target try making simple nonjquery repro also see related target correct focus another form element example edit fixed search term", "d": "7/2016"}, {"body": "focus another element blur unless click browser window case null appropriate", "d": "7/2016"}, {"body": "get element chrome ff edge look elsewhere ie safari", "d": "7/2016"}, {"body": "focus another element blur unless click browser window case null appropriate nt think true since ends click area still inside clicking still blur input regardless agree browsers providing information jquery used identify therefore fixable inside jquery pinged mozilla folks opinion", "d": "7/2016"}, {"body": "cc ing mozilla folks miketaylr digitarald bzbarsky annevk kentuckyfriedtakahe cyberdees", "d": "7/2016"}, {"body": "blur event element focus clicking somewhere nt actually take focus nothing focus click null seems appropriate tried simple testcase like chrome get null testcase linked also identical behavior firefox chrome firefox issue exactly", "d": "7/2016"}, {"body": "ff lists next major release parameter based discussion seems consensus blur need feature cases requesting many others exist use case cleaning multiselects closing list options user clicks based discussion far looks like need implement work around bc blur going support looks like bzbarsky code probably best work around", "d": "7/2016"}, {"body": "based discussion seems consensus blur need feature think consensus valid within blur event cases going receive focus per spec maybe test case nt demonstrating issue adequately going close issue nt think jquery problem solved find case works differently plain dom jquery feel free post reevaluate", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "jquery method returns computed value property nt apply transformation scope core library want something like always jquerycolor plugin", "d": "7/2016"}, {"body": "bug tracker jquery core please file bug along reduced test case videos debugged idea markup styling etc used produce bug", "d": "7/2016"}, {"body": "please huge amount code especially top million websites relies lot event shorthands reason load deprecated ambiguous remaining shorthand ambiguity actually much cleaner code fix something broken good example would change focus trigger focus focus function dosomething focus function dosomething please break important shorthands one person complained biggest reason continue use library backward compatibility keeps breaking stuff zero apparent gain many users either seriously consider moving different library stay older version guessing jquery want addition millions jquery plugins uses shorthand way every single one would updated would break entire jquery ecosystem hope guys see magnitude change users gain break lots stuff reason", "d": "7/2016"}, {"body": "deprecating ever removing default build already easy exclude custom build deprecation good signal developers aim use", "d": "7/2016"}, {"body": "fan deprecating something nt plan removing considering might deprecating prevalent remove nt see downside using like prefer disadvantages mind back harangue using alias", "d": "7/2016"}, {"body": "reason favor deprecating removing encourage plugin developers support users want exclude event alias module module besides deprecated module support excluding jquery ui also personally disliked methods many years operate reverse order expected trigger scenario primary action firing event taking action like native equivalents result close enough expected native behavior developers nt notice definitely source pain long time", "d": "7/2016"}, {"body": "bootstrap team similar thought scottgonzalez planning use slim build obviously consumers bootstrap using full build nice enddevelopers plugin nt unnecessarily force use full build fine deprecating ever removing slightly complicated deprecate come another term use api docs define apis plugins avoid already possible exclude eventalias custom build without signal plugin writers avoid nt going help much concern even removed event aliases core library always provided plenty compatibility helpers make transition easier someone moving jquery hypothetical jquery without event aliases would add jquery migrate time changed jquery would report things fix", "d": "7/2016"}, {"body": "add points deprecating shorthands mean slim build wo nt contain turn may serve incentive plugin authors stop relying time block people upgrading newer jquery since full build continue work micha\u0142 go\u0142\u0119biowski", "d": "7/2016"}, {"body": "also interesting bootstrap actively disables aliases unit tests wo nt accidentally used could used custom build course way tests generate clear error message one used accidentally", "d": "7/2016"}, {"body": "agree tradefoff worth saving lines code vs breaking lot user code lots jquery plugins maintained unmaintained actively used concern even removed event aliases core library always provided plenty compatibility helpers make transition easier someone moving jquery hypothetical jquery without event aliases would add jquery migrate time changed jquery would report things fix important point backward compatibility users keep modifying code every jquery plugins used everytime new jquery major version released note jquery migrate certainly solve newly created problem involve users add two javascript sources instead one many users may even aware jquery migrate exists dont think saving lines code worth breaking lots code may know jquery already less kb load google cdn permanently cached reducing files size kb even kb isnt going make much difference single image facebook kb filesize important criteria imho important criteria backwards compatibility adding new features continue make jquery great library", "d": "7/2016"}, {"body": "think whole core team agrees removed would like warn use though deprecation might best way however still think word deprecation give wrong signal people believe jquery intends remove line evidenced comment nt", "d": "7/2016"}, {"body": "thank timmywil forgot add using shorthand saves significant coding time also reduces end user filesize since less code using shorthand winwin developers", "d": "7/2016"}, {"body": "forgot add using shorthand saves significant coding time also reduces end user filesize since less code using shorthand winwin developers lie nt save significant coding time shorthands like time takes type characters negligible even entire year worth coding even time spend typing general coding fairly small keystrokes get significant gains development time end user file size assume referring number bytes transferred number bytes cached file user drive number bytes think saving transfer bandwidth disappears code runs gzip prior transfer", "d": "7/2016"}, {"body": "realize everyone uses gzip server addition gzipping compression increases server loads compress every single time unique visitor requests javascript files suitable situations compress codes using shorthands gzip process lot useful sure think providing quick shorthand problem shorthands called symbolic links linux os widely used feature advertised saving timemoney something hidden users", "d": "7/2016"}, {"body": "important point backward compatibility users keep modifying code every jquery plugins used everytime new jquery major version released breaking backwards compatibility precisely reason releasing new major version every user modify code guarantee least please consider strong suggestion avoid event shorthand methods new code", "d": "7/2016"}, {"body": "think confusion term deprecating let go wikipedia page definition deprecation discouragement use feature design practice typically superseded longer considered safe without least time removing system part prohibiting use without removing purpose tickets like discourage use nothing example dom method deprecated removed browser vendors sure based usage stats one longer using aka break web principle could use rule remove widely used methods one uses newer version jquery meanwhile unfavor practise show first time see misconception really sadness urge everyone see formal limitations term", "d": "7/2016"}, {"body": "move almost ready fact moved issues previously assigned", "d": "7/2016"}, {"body": "markelog formal definition little bearing popular connotations associated term dictionaries change time point change belief deprecation implies eventual removal least wish way could say recommend avoiding particular api different saying recommend avoiding may removed future version", "d": "7/2016"}, {"body": "timmywil changed name module moved stuff nt want remove due widespread usage still recommend avoid module would excluded slim build may urge library creators avoid apis real", "d": "7/2016"}, {"body": "yeah going use deprecated come another term got quite deprecate x issues open seem blocked coming agreement", "d": "7/2016"}, {"body": "timmywil point change belief deprecation implies eventual removal least imply first step removal process nt way really call way prefer something would nt change meaning discouraging people using still would first step removal process", "d": "7/2016"}, {"body": "actually nt think deprecation must mean plans remove nearby future would say though deprecating sth means discourage using love remove knows removal possible nt want remove due widespread usage think api continue exist would discourage using two things nt really go hand hand applying ticket say since want discourage deprecate even remove years", "d": "7/2016"}, {"body": "exactly trying say thank", "d": "7/2016"}, {"body": "precedent long deprecation deprecated nt remove case also got lot complaints deprecation main issue longer wait send signal nt best practice anymore using whatever word longer take people change code aware like people disagree whether something good practice may lot code using affect remove", "d": "7/2016"}, {"body": "particular reason jquery members want actively discourage using shorthands reason think reducing file size eventually removing whenever would actual calculations minifygzip saves around bytes reason", "d": "7/2016"}, {"body": "reason", "d": "7/2016"}, {"body": "seem right plugin developer worry slim build user selected user could excluded lots things slim build mean plugin developer code around software solutions dependencies want use particular version add dependency case bytes jquery loaded cached permanently browser main point plugin developer tell user needed run program way around missing something obvious", "d": "7/2016"}, {"body": "main point plugin developer tell user needed run program way around missing something obvious considerate plugin developer nt force user pull code needed", "d": "7/2016"}, {"body": "seem right plugin developer worry slim build user selected user could excluded lots things slim build could super simple plugin developers support one specific thing software solutions dependencies literally ca nt define dependency plugin developer want use particular version add dependency case bytes option plugin developer option application developer plugin could actually define dependency would different story jquery loaded cached permanently browser far true", "d": "7/2016"}, {"body": "think mixup happening considerate plugin developer nt force user pull code needed agree completely however shorthands obscure code shorthands maybe used features especially click onmouseover onmouseout etc many plugin developers may unreasonable expect presence core code point opinions maybe divided could super simple plugin developers support one specific thing looking global view users exclude anything slim build reasonably expect plugin developers today support one specific thing b tomorrow support another specific thing asking plugin developers today support users particular slim build chosen exclude shorthands tomorrow would ask plugin developer support users another slim build rabbit hole literally ca nt define dependency plugin developer literally add download page important note jquery ui already exact dependency example want draggable widget need atleast ui core core widget mouse option plugin developer option application developer plugin could actually define dependency would different story plugin actually define dependency inside code pure javascript add dependency note download page reasonable person would understand nt add dependency suggested plugin devs plugin simply work see draggable widget example far true load full build google cdn well know cdn true load fullcustom build server need setup caching server cache static content finally would like add imho jquery one best javascript library thankful hard work making happen apologize came across something opposite reason chimed think bug major impact existing user code probably jquery plugin would like people use library breaks lot existing code may adverse effect shorthand safe bugs easy learncodemaintain tiny file size kb guys decide remove shorthand sure jquery community adjust simply wont choice", "d": "7/2016"}, {"body": "users exclude anything slim build custom build slim slim build concrete meaning see also blog post section slim build since slim build nt include deprecated apis deprecated shorthands slim build would nt contain", "d": "7/2016"}, {"body": "shorthands maybe used features especially click onmouseover onmouseout etc many plugin developers may unreasonable expect presence core code point opinions maybe divided argument removal deprecation deprecation means developers encouraged stop expecting presence minifygzip saves around bytes seems high true argument favor deprecation eventual removal four times larger consider substantial reduction accounts total size reason provide unambiguous nonoverloaded means dealing events including covered shorthands latter syntactic saccharin worth extra file size saved keystrokes reservation jquery prototype properties mental overhead anyone disagrees free define whatever want code trivial", "d": "7/2016"}, {"body": "literally ca nt define dependency plugin developer literally add download page important note jquery ui already exact dependency example want draggable widget need atleast ui core core widget mouse sure text real dependency management nt happen text happens code ca nt define dependency code jquery ui dependency management within download builder nt help developers third party plugins dependencies specific widgets within jquery ui jquery ui however make possible use amd actually define dependencies individual parts actually powers download builder third party developer amazing dialog easily code define dependency jquery core jquery ui dialog jquery ui dialog turn define dependency jquery core jquery ui draggable jquery ui resizable jquery ui position plugins define dependencies works way chain resulting plugins jquery ui widget jquery ui mouse loaded modules jquery core plugin actually define dependency inside code pure javascript yes people many years please take time read requirejs custom solution javascript modules native solution load full build google cdn well know cdn true actually fairly high cache miss rates well known cdns say want something cached forever nt control end user cache reason chimed think bug major impact existing user code probably jquery plugin would like people use library breaks lot existing code may adverse effect shorthand safe bugs easy learncodemaintain tiny file size kb nothing break removal", "d": "7/2016"}, {"body": "shorthands nt likely ever removed wait major version new version jquery migrate deprecate", "d": "11/2017"}, {"body": "lpdau waiting major version would nt help reducing usage shorthands besides according semver deprecations free land minor releases", "d": "11/2017"}, {"body": "nt mean always especially widely used part library canonical example show jquery elegance native js nt documented anywhere bad style rush deprecate later removal imminent major release probably already pushed back make wait official expect usage fall anyway among developers already transitioned removed migration plugin", "d": "11/2017"}, {"body": "nothing broken deprecation nt make sense undeprecate feature get rid warning migrate either ignore warning override loading migrate get rid change code generating warning", "d": "11/2017"}, {"body": "undeprecate missing issue still open marked unreleased milestone nt documented anywhere find", "d": "11/2017"}, {"body": "think safe deprecate next version getting removed code broken", "d": "11/2017"}, {"body": "particular reason deprecations documented documented api documentation pages functions example", "d": "6/2018"}, {"body": "see someone needs work document nt gotten yet contributions welcome", "d": "6/2018"}, {"body": "implementation difficulties big difference actual apis event actual event use event system api eg actual event document ready promise safe use time late bindings wo nt ever fired missed event actually occurring mistake forced nonevent functionality event system api closest event equivalent would would latebinding problem ready event convenience developers never worry whether code running document ready fact referred event long caused lot confusion community deprecation use event system help developers understand actually also bit late even discussion deprecation since deprecation happened two half years ago", "d": "7/2016"}, {"body": "ready nt dom event therefore irrelevant shorthand methods nt provide every event eg methods joint removal net effect consistency far tell decision deprecate remove indeed motivated ambiguity came ample notice nt see us adding back shorthand favor deprecating remaining ones honest thought already although misremembering segregation eventalias module", "d": "7/2016"}, {"body": "closing favor specific", "d": "7/2016"}, {"body": "looks like expected behavior one changes made allowing invalid input error rather failing silently failing silently make difficult debug serious ones nt think need change anything jquery would consider opening issue angular nt addressed already suggest putting together test case angular show scope getting passed camelcase function", "d": "6/2016"}, {"body": "angular app uses jquery works correctly angular repo passes unit amp test suites jquery well sure problem nt lie code", "d": "6/2016"}, {"body": "nt enough information work provide reduced test case requested issue template also noting jquery version nt latest", "d": "6/2016"}, {"body": "reopen test case", "d": "6/2016"}, {"body": "sounds like plugin would nt put directly jquery core", "d": "6/2016"}, {"body": "mean add wiki", "d": "7/2016"}, {"body": "yep plan get soon", "d": "7/2016"}, {"body": "said days ago h", "d": "7/2016"}, {"body": "lazy hazy days summer", "d": "7/2016"}, {"body": "first draft see small typos formatting issues think better", "d": "7/2016"}, {"body": "still todo replace pointer wiki wait people reviewed new wiki page", "d": "7/2016"}, {"body": "wontfix page updated showing stage pushed tag nt updated yet close ticket edit wiki page needed", "d": "8/2016"}, {"body": "yey", "d": "8/2016"}, {"body": "contribute site still nt got updated", "d": "9/2016"}, {"body": "pushed new tag finally updated", "d": "9/2016"}, {"body": "using api incorrectly see", "d": "6/2016"}, {"body": "believe internal bug filed able dig mon", "d": "6/2016"}, {"body": "great thanks jdalton please keep us posted", "d": "6/2016"}, {"body": "effect jquery apis outside unit test cc fremycompany", "d": "6/2016"}, {"body": "hey want apologize comment said bug marked external look internal history bug happened duped bug internal one already tracking issue nt exposed externally sure bot person got wrong investigate make sure happen anymore might done something wrong said john asking right question bug surfaced months ago first reflex wanted fix regression impacting jquery test suite discovered like pure whitespace resulted issue decided prioritize bug fixes top one since nt hear report issue impacting live site investigations decision nt reverted since definitely want fix bug extremely unlikely make next release edge know bound happen soon first anniversary windows approaching live sites suffering issue would definitely help defend case fix window closing rapidly", "d": "6/2016"}, {"body": "nt think affects jquery apis outside unit tests said usually try supported browsers pass tests possible sometimes make exceptions browsers fast release cycles like firefox chrome fix faster could propagate version workaround edge releasing fast might resort support test mapping purewhitespace value empty one test failed mark discussion within core team", "d": "6/2016"}, {"body": "pr", "d": "8/2016"}, {"body": "problem pr treats whitespaceonly values invalid always case instance common pseudoelements jquery nt support settinggetting styles pseudoelements one may important others like liststyletype accepts custom values maybe edge nt support property maybe bug whitespaceonly property invalid case pr dangerous going skip one test edge hopefully fixed jdalton looking", "d": "9/2016"}, {"body": "edge fixed issue relevant pr restore test", "d": "6/2018"}, {"body": "even works workaround", "d": "6/2016"}, {"body": "misuse api docs state second parameter dom element document jquery object string passing string turn jquery object see happening get jquery object containing couple nodes including one div containing find invoked element collection element obviously nt contain child wo nt get anything", "d": "6/2016"}, {"body": "misuse api docs state second parameter dom element document jquery object string passing string wow funny pretty sure learnt misuse api official tutorials sure nt invent seen lot places almost every example every stackoverflow answer involving supposed done correct way scan loaded document without misusing api way turn jquery object see happening get jquery object containing couple nodes including expected behavior nt get jquery object containing one root node nt bug", "d": "6/2016"}, {"body": "wow funny pretty sure learnt misuse api official tutorials examples please report supposed done correct way scan loaded document without misusing api want search got always append custom div search using div container html processed html root element ie element contain elements contents stripped rest remains", "d": "6/2016"}, {"body": "expected behavior nt get jquery object containing one root node nt bug exactly native apis amp tags get html foo div contents span contents", "d": "6/2016"}, {"body": "duplicate tool giving false positives", "d": "6/2016"}, {"body": "information messages present using jquery", "d": "6/2016"}, {"body": "cc ing mozilla folks miketaylr digitarald bzbarsky annevk kentuckyfriedtakahe cyberdees", "d": "6/2016"}, {"body": "indeed mozilla jquery bug figured update original poster mozilla addons site weekly pushes tool flag software always uptodate added go week issue resolved thursday gmt", "d": "6/2016"}, {"body": "basically every article applies jquery versions api differences described particular page see data docs example api introduced deprecatedremoved also mentioned versions changes apply", "d": "6/2016"}, {"body": "nt want dik unclear api page jquery version applies go entry tells signature added removed clicking left menu categories jquery leads page pointing upgradeguide main reason major version breaking changes upgrade guide describes changes many subtle difficult describe context standard api docs many relate undocumented behavior think programs may depending upon would best easy ux way change api user viewing according dropdown selection version right idea api api docs available xml data ideas display different way could open issue probably worth unless would like significant amount design work", "d": "6/2016"}, {"body": "ready handler fired asynchronously assure user ready handlers called even handler throws exception see", "d": "6/2016"}, {"body": "late though nt via timeout edit via long timeout", "d": "6/2016"}, {"body": "mean pages wait ready wait long time get fired load makes ready almost worthless", "d": "6/2016"}, {"body": "test done safari version first beta could buggy code", "d": "6/2016"}, {"body": "safari technology preview gives log readystate interactive line log domcontentloaded fired line log readystate complete line log load fired line log ready fired line wrong order much later", "d": "6/2016"}, {"body": "mean pages wait ready wait long time get fired load get called soon fires always asynchronously wait images loaded amp stuff like time fire suspect case nothing loaded event fires quickly cases may fire jquery ready callbacks try putting image page fire later", "d": "6/2016"}, {"body": "super small test file think okay ready handlers happen load guarantee document ready", "d": "6/2016"}, {"body": "try putting image page load fire later one small image order still log readystate interactive line log domcontentloaded fired line log readystate complete line log load fired line log ready fired line", "d": "6/2016"}, {"body": "extremely large image another site get normal readystate interactive domcontentloaded fired ready fired readystate complete load fired guess live ready late silly test pages", "d": "6/2016"}, {"body": "good day want handlers execute synchronously async execution problem apply third part control ready handler latest version jquery normal select control shown control shown looks unpreofessional applcation", "d": "4/2018"}, {"body": "see every use cryptographically secure tool rejecting cases say restrictive case nt need result really random changing code would make much larger cost users library besides even used secure apis still need fallback browsers nt implement still code would still pass check done tool nt think anything", "d": "6/2016"}, {"body": "seeing issue windows addons installed addons remove", "d": "6/2016"}, {"body": "agree happen sure fix without making ready completely synchronous brings back demons", "d": "6/2016"}, {"body": "ready state bring ca nt execute features far know best practice wrap stuff ready function pretty sure events rarely used", "d": "6/2016"}, {"body": "definitely best practice wrap everything ready things done outside ready done initializing ajax requests nt introduce unneeded delays similarly ca nt execute features html document ready tickets open also believe could issues prefer act evidence rather incorrect assertions see also", "d": "6/2016"}, {"body": "problem late async problem executed never makes pretty useless eyes like plugin developers ca nt prevent users things ready state essential load event always work currently thinking solve even async execution maybe like tracking load event within library something bind afterwards executed immediately", "d": "6/2016"}, {"body": "adding additional information please stop reason never executes ready occurs onetime load event occurs", "d": "6/2016"}, {"body": "hi dave bug seemed unusual tests change window document nothing fires change window iframe nothing fires change window body nothing fires idea happening really weird changing back window nothing fires bug website", "d": "6/2016"}, {"body": "clear understand causing recently made ready handlers fire asynchronously advantages hard give disadvantage ready handler sometimes fire load event load event fires quickly enough side effect seeing issue binding load event handler load event already fired fix bind load outside ready js function things need happen document ready window load function things need happen full load", "d": "6/2016"}, {"body": "timmywil agreed ensures onload runs however nt ensure ready code always consistently runs onload code imagine situations might important example plugin initializes dom ready work page loaded entirely recommend solutions need document also determine whether cases become hard write existing code causing widespread breakage situation", "d": "6/2016"}, {"body": "dmethvin load event already ready loaded see mean perhaps could restore ready event give treatment give load event behavior would differ function could nt guarantee execution multiple ready event handlers one exception behavior would load event handlers", "d": "6/2016"}, {"body": "load event already ready loaded see mean yeah counting async nature defer ready loaded code next turn gives ready code chance run situation nt run yet saw", "d": "6/2016"}, {"body": "actual use case plugin must listen event timing matters", "d": "6/2016"}, {"body": "actual use case plugin must listen load event timing load ready matters additional content loading plugins often wait basic media loaded start actions wait plugins often nearly always wild initialized ready state plugin developers way break ready state plugins every event ready state developer wrote timing problem fact inside ready state never reached even kind breaking change", "d": "6/2016"}, {"body": "plugins binding initialization happen many times within single page binding immediately tracking internally nonplugin case nt see would bind inside bind fine without specific use cases require see reason change anything", "d": "6/2016"}, {"body": "change broke code website basically load html server using load function inside html exectuted script used always executed onload callback triggered ajax request page script server function foobar test log output quite lot code dependent order consistent big enough change decided rollback hope change made next jquery release fix need information let us know", "d": "6/2016"}, {"body": "ajax requests complete document ready may code page jquery certainly happen issue document ready versus window onload", "d": "6/2016"}, {"body": "would make sense backward compartibility reasons support implementations sync async sync adding api recommendation using second one documentation", "d": "7/2016"}, {"body": "two implementations different semantics makes problem worse though plugin writer nt know one going get also need document whole situation explain could either sync async point choice plugin helps users assume async code works either way", "d": "7/2016"}, {"body": "dmethvin actually nt understand helps plugin developers anyway want document bahavior okay developer means ca nt use window load plugin anymore chance user wrap ready state high developer prevent situation whenever window load needed wanted plugin telling users use ready state maybe cause problems imo ca nt tell every user use ready load split versions jquery actually dead ca nt implement use anymore behavior reverted projects back ignore plugins evaluate options first see change think remove event", "d": "7/2016"}, {"body": "eisbehr timmywil described one way described second way popular plugins ca nt fixed one authors discuss solutions us", "d": "7/2016"}, {"body": "solution plugins descripes problem plugin ca nt break behavior user wrote ready state around initialization like solution would write plugin solve problem user put ready state around right window load triggered everything js plugin fnfoo function window load function possible never reached readythen function user function bar foo", "d": "7/2016"}, {"body": "plugin ca nt break behavior user wrote ready state around initialization see", "d": "7/2016"}, {"body": "scottgonzalez thanks somehow missed plugins binding load initialization happen many times within single page binding immediately tracking internally mean track internally currently idea track provide example nonplugin case nt see would bind load inside ready bind load fine without specific use cases require see reason change anything well thats point mentioned plugin developer ca nt prevent code wrapped ready state correct window load alone would work general", "d": "7/2016"}, {"body": "js function var windowloaded false window load function windowloaded true fnmyplugin function options whatever need plugin initialization without specific use cases hard say need reason plugin developer ever listening event window inside initialization plugin incorrect implementation happens work many pages common usage pattern", "d": "7/2016"}, {"body": "particular plugin jquery code lazyloaded page domcontentloaded load events fired plugin would never see load event ready code run course since event instead state think makes behavior enough antipattern nt try encourage", "d": "7/2016"}, {"body": "document antipattern", "d": "7/2016"}, {"body": "good point guess api entry", "d": "7/2016"}, {"body": "perhaps well maybe one warnings shared pages", "d": "7/2016"}, {"body": "agree timmywil", "d": "7/2016"}, {"body": "agreed good breaking change though would nt say far documenting perhaps could add sentence existing item either create entirely new breaking change item rewording heading break existing links", "d": "6/2016"}, {"body": "width correct yes kind buggy since beginning jquery providing displaywidth instead changing meaning would less painful application imo issue worth new entry upgrade guide", "d": "6/2016"}, {"body": "current implementation one problem setting getting via css symmetric anymore", "d": "6/2016"}, {"body": "good point nt seem good sure deal though would help returned css value could return actual width would another breaking change doubt perhaps worse leaving inconsistent", "d": "6/2016"}, {"body": "applications like mine defect right people issue transform change css back half people getting back working solution without changing code half least able adapt without asking outerwidth css returning css computed value possibly manipulated parent surprising", "d": "6/2016"}, {"body": "jquery tries really hard return computed value usually value people want browsers often nt provide good way get values anyway stuck worth discussing team though see might done", "d": "6/2016"}, {"body": "change still upgrade guide imo done fast possible prevent upgraders problems", "d": "6/2016"}, {"body": "reason change made nt yet decided whether change code docs ticket closed", "d": "6/2016"}, {"body": "thanks explanation imo new code least version warning version useful case", "d": "6/2016"}, {"body": "may add opinion dimensions element bounding box element two different concepts think agree change mixing two concepts way consistently getting dimensions element rather get dimensions bounding box depending whether css transformations applied acceptable breaking change width height return bounding box rather dimensions long way getting true dimensions way also css supposed give computed css properties hence name css width css height give bounding box instead breaking change messing user base huge gotcha", "d": "7/2016"}, {"body": "add another point regarding relationship note always return content width regardless value css property avoid penalty use rather documented behavior checked still valid jquery", "d": "7/2016"}, {"body": "think valid points far resolving problem conflicting concerns mention width applies height well previous use flaky property part documented standard return fractional pixels subpixel rendering becoming common finding cases got things wrong switched historically jquery users seen shorthand although definitely cases past versions true ideally like find solution breaks least code possible since changing results existing apis would great could find way migrate identify andor fix holgerjeromin getfree would like apis return let start think existing code might break", "d": "7/2016"}, {"body": "way see essential reliable way getting dimensions position element matter element ancestor csstransformed consider example jquery jquery blue box wants exactly red box since body element transformed boundingbox coordinates good general moment apply csstransformations calculation based elements dimensions going give wrong result even seemingly harmless transformations like cause problems jquery already offset position give boundingbox coordinates iirc ok jquery introducing breaking changes long way getting true element dimensions boundingbox dimensions needed given wo nt needed often could alternate way getting width height position provide fractional pixels expense useless transformations applied", "d": "7/2016"}, {"body": "ok jquery introducing breaking changes long way getting true element dimensions boundingbox dimensions needed exactly application needs way get dimension based information correct positioning complex transformed elements minimal example non fractional value disadvantage result complete bogus transforming", "d": "7/2016"}, {"body": "hmm maybe need use cases want dimensions transforms applied", "d": "7/2016"}, {"body": "let start summary documented surface area using horizontal dimension without loss generality returns computed css width property include exclude padding borders per css boxsizing property returns computed content width may less boxsizing borderbox equal boxsizing contentbox returns computed padding box width sum computed left right padding returns computed border box width sum computed left right borders equal boxsizing borderbox returns computed margin box width sum computed left right margins capable returning fractional values closely tied css box model especially since also transforms fact non methods probably convenient means getting untransformed dimensions although starting scratch might want condense together would definitely consistent naming ticket though agree holgerjeromin use values calls", "d": "7/2016"}, {"body": "also remember make use well means give wrong results transformations applied example", "d": "7/2016"}, {"body": "getfree would nt say give wrong results return element displayed position going back basics wondering main questions asked jquery browser api matter answer see related handling computedresolved value apis supposed answer question nt take transforms account transforms influencing final dimensions element screen computed value agree current behavior buggy set new value element apis answer question makes sense jquery side method serves getter setter apis respond set particular width generally get one getter btw agree current behavior getter takes transforms account buggy element displayed dimensions screen question element displayed screen include transforms hand since single property takes things account api nt setter equivalent clear exactly would setting jquery side responsibility api although getter less behaves way ignore boxsizing browser apis evolving way satisfy conditions api get displayed size element without taking transitions account asking something like kind weird time people asking question really asking value computed width displayed width minus transforms afaik browser api would answer question well treated obsolete web compatibility reason nt take transforms account well returns decimal values hope got paragraph right love someone working browser confirmdeny though bzbarsky last point problem method would fine getter final displayed size element also serves setter us undermines purpose nt make easier also methods serve getters setters fact apis setters well actually terrible need know value style write triggers style read means apis layout thrashing builtin think bad apis like want leave getters setters seems converted fulfill first two use cases suggested nt jquery api return dimensions element screen api returning position element screen new api former", "d": "7/2016"}, {"body": "tried removing width amp height hooks css saving bytes gzipped process got test failures dimensions module css module failing tests ones checking disconnected node negative values means though switching amp doable also think ca nt switch back would break jquery contract nt cut fractional values besides really like avoid going back fractional values sure anything", "d": "7/2016"}, {"body": "going back moment using retrieve api take transforms account purpose john resig wrote ago api awesome saves code complexity amp size well gives speed boost nt see us going back previous implementation would hurt much fronts still think many people want current behavior going back previous one would hurt well problem serves setter well makes nonsymmetrical api nt really know", "d": "7/2016"}, {"body": "seems like mgol explained challenges pretty well api retrieves actual transformed dimension position single number taking several css properties account ca nt used getter setter roundtrip single number consider regressions even changes existing behavior better compatibility still may play release", "d": "7/2016"}, {"body": "love someone working browser confirmdeny browsers returning used width css terms everything except nonreplaced inlines layout width ignoring transforms think calling displayed size element without taking transitions account api already exists everything except nonreplaced inlines think browser api returning computed width css terms put another way inner div browsers return whereas css computed width auto thing window relevant things like return nontransformed values might something sane nonreplaced inlines note integeronly", "d": "7/2016"}, {"body": "browsers getcomputedstyle width returning used width css terms everything except nonreplaced inlines layout width ignoring transforms think calling displayed size element without taking transitions account api already exists everything except nonreplaced inlines think actually meant bounding box element ie size box appears screen including transforms browser api returning computed width css terms put another way getcomputedstyle width inner div browsers return whereas css computed width auto meant resolved width keep using wrong name named innerwidth thing window relevant things like offsetwidth return nontransformed values might something sane nonreplaced inlines note integeronly meant offsetwidth keep mixing stuff doh post corrected basically point may either ask resolved value specific css property ask dimensions final box appears screen ie bounding box element api get bounding box minus transforms may good approximation similar api could use either get transforms included via must compute whole thing traversing document expensive", "d": "7/2016"}, {"body": "yes correct summary state browser api", "d": "7/2016"}, {"body": "consider regressions even changes existing behavior better compatibility still may play release remove getwidthorheight accurately provides css width rename refactor surface area clarify getset css contentpaddingbordermargin box dimensions therefore ignore transforms reimplement existing methods thin wrappers separately address complete land derivative refactor avoid dependence upon css widthheight hooks allowing hooks removed document reliable elements transformed ancestors document reliable elements transformed ancestors", "d": "7/2016"}, {"body": "considering impact changes moving get smaller issues first", "d": "7/2016"}, {"body": "remove getwidthorheight accurately provides css width reverting assume still consider small breaking change maybe best solution assume people depend access fractional values changing back may break sites want nt wait long imo rename refactor surface area clarify getset css contentpaddingbordermargin box dimensions therefore ignore transforms reimplement existing methods thin wrappers reiterate consider setters bad apis due layout thrashing built tried drastically simplify performance reasons among purposes started reverted problematic change many people good replacement forceshowing cascadehidden elements case apis case could ever remove setters separately address complete land derivative refactor avoid dependence upon css widthheight hooks allowing hooks removed document reliable elements transformed ancestors document reliable elements transformed ancestors sounds good", "d": "7/2016"}, {"body": "remove getwidthorheight accurately provides css width reverting assume getcomputedstyle fine like used calls reiterate consider setters bad apis due layout thrashing built tried drastically simplify performance reasons among purposes started reverted problematic change many people good replacement forceshowing cascadehidden elements case apis case could ever remove setters possible mentioned believe methods convenient means interacting css box rid setter logic would leave vacuum note layout thrashing comes play propertyboxsizing mismatches eg equivalent", "d": "7/2016"}, {"body": "mentioned one comments think switching gcs would breaking change currently guarantee css width works even detached elements", "d": "7/2016"}, {"body": "probably deprecate b disconnected nodes already fall back inline styles nt worst sins", "d": "7/2016"}, {"body": "heroic efforts get dimensions detached hidden elements retrospect mistake imo deprecating asap seems like good idea warning migrate suspect could remove", "d": "7/2016"}, {"body": "aware breaks draggables jquery ui draggables growshrink whenever move yet test", "d": "7/2016"}, {"body": "breaking jqueryui draggable resizable", "d": "8/2016"}, {"body": "way upgrading fixed problem facing weird widthwidth line removed", "d": "8/2016"}, {"body": "sorry resizable draggable right upgrading jquery jquery resizable broken using css transform scale jquery ui", "d": "8/2016"}, {"body": "right upgrading jquery jquery resizable broken using css transform scale jquery ui never supported transforms interactions", "d": "8/2016"}, {"body": "upgraded jquery hidden bugs gettingsetting height asymmetric due scaling transform root element chiming say positive breaking change agree different method flag added optin getting bare transformed dimensions whichever route taken please make sure height height x work symmetrically", "d": "8/2016"}, {"body": "upgrade guide still mention issue breaking change", "d": "8/2016"}, {"body": "holgerjeromin nt mention consider bug like fix jquery", "d": "8/2016"}, {"body": "mgol nt still documented otherwise people discover via breaking bugs", "d": "8/2016"}, {"body": "ticket documentation bug plan fixing", "d": "8/2016"}, {"body": "btw release notes section known issues things wanted add syntax probably affected", "d": "11/2016"}, {"body": "use something like", "d": "11/2016"}, {"body": "dmethvin disappointing response places onus every developer search open issues jquery rather including eg breaking changesknown issues section release notes", "d": "11/2016"}, {"body": "craigkovatch think hoped could fixed quickly perhaps need fall back assuming wo nt fixed wait since breaking change would like submit addition document", "d": "11/2016"}, {"body": "dmethvin concerned breaking restoring going make situation even worse really hoping still end release happy document upgradeguide would candidate inclusion migration plugin", "d": "11/2016"}, {"body": "burned app offers whiteboardinglike tool dragdrop element resize scaling change definitely caught us guard lot great discussion thing add unexpected would painted size instead layout size dealing element dimensions way seems desirable layout dimensions definitely see kind quagmire nt want make breaking change would guys consider adding argument event another function optionally restore behavior", "d": "12/2016"}, {"body": "think know fix looks like matter someone volunteering time implement core contributors included pulled directions latter half year", "d": "12/2016"}, {"body": "code breaking due undocumented backwards incompatibility current best practice working around issue getting untransformed", "d": "12/2016"}, {"body": "vanderlee work around added following utility functions application javascript function jquerysize elem name typeof elem string elem jquery elem elem instanceof jquery elem elem let val jquerystyle elem name return parsefloat val export function outerwidth elem return jquerysize elem width export function outerheight elem return jquerysize elem height use javascript import outerwidth utilsjqueryjs outerwidth useritem let useritem useritem outerwidth useritem could probably even monkey patch jquery party libraries depend behavior felt bit dangerous", "d": "12/2016"}, {"body": "may find alternative implementations width height functions site seems work way used jquery", "d": "2/2017"}, {"body": "fix issue brought regression seems nt good web api satisfy needs always returns inline elements nt support fractional values takes transforms account way retrieve fractional real value width inline elements nt take transforms account bzbarsky", "d": "3/2017"}, {"body": "quote consider example jquery jquery updated example show transforms well expected unexpected positioning something near another element example using jquery behaviour toward made work expected absolutely positioned element bare dom outside transformed area time absolutely positioned element inside transformed rendered expected end way make work everything crucial knowledge context given method lot like difference", "d": "3/2017"}, {"body": "another idea partial fix keep current logic fallback offsetwidth gcs returns auto unless offsetwidth undefined fallback back auto negative effect would lose subpixel values width inline elements also inline svg elements would keep broken width never supported use case timo problem including transforms code handles css width taking transforms account definitely unexpected micha\u0142 go\u0142\u0119biowski", "d": "3/2017"}, {"body": "way retrieve fractional real value width inline elements nt take transforms account shipping browsers fact maybe even shipping thought using node relativeto value might trick probably still get posttransform sizes note asking width nonreplaced inline fairly odd question especially soon linebreak middle", "d": "3/2017"}, {"body": "please look help stack overflow turns bug please report reproducible test case ca nt know issue nt see code", "d": "6/2016"}, {"body": "thanks report known mentioned blog post updates ui amp mobile making compatible available time later", "d": "6/2016"}, {"body": "please look help stack overflow ca nt debug people sites turns real error provide steps reproduce may open separate issue", "d": "6/2016"}, {"body": "sorry mistake", "d": "6/2016"}, {"body": "could please provide test case works browsers", "d": "6/2016"}, {"body": "reopen good test case submitted", "d": "6/2016"}, {"body": "think reproduced although nt time submit test case using design involves clone form call empty cloned form append hidden field clone call submit clone get working instead calling submit step add submit button cloned form append cloned form document body call click appended submit button workaround inspired blog post", "d": "10/2016"}, {"body": "think problem covered api docs dimensions may incorrect page zoomed user browsers expose api detect condition hack mention consistent enough across supported jquery browsers could try tackle fixing around since beginning time", "d": "6/2016"}, {"body": "dmethvin thanks reply missed reading docs suspected called hack correction offset pretty sound browsers support determining scaled viewport nt really strong rather event api check anyway product supports newer browsers version jquery using get away ymmv browsers jquery supports", "d": "6/2016"}, {"body": "hack nt seem reliable since already covered docs things continue get priority foreseeable future prompting close would welcome patch though", "d": "6/2016"}, {"body": "seems exactly native api goal", "d": "6/2016"}, {"body": "interestingly safari escape entities chrome amp firefox nt spec say wrong", "d": "6/2016"}, {"body": "example setting property reflected attribute possible bypassing escaping would normally done browsers nt behaving consistently either behavior outside spec bug one browsers", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "take example put jsbincom jsfiddlenet since using jquery ui possible error known one since point described error sure", "d": "6/2016"}, {"body": "code calling replace stumble upon error fruit amp vegetable sorter fruitscontainer vegetablescontainer width float left margin fruits vegetables paddingleft minheight fruits li hover vegetables li hover cursor move fruitscontainer vegetablescontainer textdecoration underline margin sortableplaceholder border dotted black height fruits vegetables nt sorted fruits vegetables var fruits avocado banana apple cherry fig grape kiwi lemon olives orange pumpkin tomato vegetables broccoli carrot celery corn garlic green bean kale lettuce onion pea spinach turnip fruitsconcat vegetables function index item var type fruitsindexof item gt fruit vegetable mathrandom lt item appendto mathrandom gt fruits vegetables fruits vegetables sortable connectwith fruits vegetables cursor move helper function event item return text itemtext placeholder sortableplaceholder stop function isvalid append correct refreshing game dialog settimeout function windowlocation windowlocation function isvalid var valid true fruits li vegetables li function var item actual itemparent id fruits fruit vegetable correct itemattr datatype actual correct valid false return valid dave methvin mailto notifications githubcom sent saturday june pm jqueryjquery cc stanpapusa author subject jqueryjquery bug jquery take example put jsbincom jsfiddlenet since using jquery ui possible error known one since point described error sure receiving authored thread reply email directly view github mute thread", "d": "6/2016"}, {"body": "since depends local copies files nt know changed include jquery migrate local file see gives messages blog post mentions incompatibilities current jquery ui fixed migrate", "d": "6/2016"}, {"body": "sounds like support request please flesh forums jquery irc channel", "d": "6/2016"}, {"body": "probably dup would need test case sure put one together reason regression occurred nt support svg general test likely break", "d": "6/2016"}, {"body": "yes dupe sorry missed please close one comment main one", "d": "6/2016"}, {"body": "see blog post upgrade guide use jquery migrate put warning message console", "d": "6/2016"}, {"body": "yes know backwards incompatibility surely current jqueryui working current jquery problem idea migrate plugin help developers migrate however since issue caused jqueryui code solve issue plugin also fear many third party plugins depend jqueryui dialog widget likely fail jquery due issue perhaps move issue jqueryui since bug code", "d": "6/2016"}, {"body": "ui work include migrate tell plugin users use migrate problem lies outside plugin blog post specifically mentions jquery ui mobile situation compatibility jquery ui jquery mobile things work issues jquery ui jquery mobile addressing upcoming releases find issue keep mind may already addressed upstream using jquery migrate plugin fix expect releases soon", "d": "6/2016"}, {"body": "hi lukapt best place get jquery help forumjquerycom stackoverflowcom bug tracker", "d": "6/2016"}, {"body": "hope helps nt mix prop attr like", "d": "6/2016"}, {"body": "expecting bug since get different results different browsers since bug need find alternative solution want continue using plugins one uses prop attr thanks help", "d": "6/2016"}, {"body": "using attr basically wrong dynamic state form element described api docs report bug plugin getting wrong change code works use copy", "d": "6/2016"}, {"body": "still need test case preferably jsbincom jsfiddlenet demonstrates problem reporting prior ticket closed violated code conduct technical merits", "d": "6/2016"}, {"body": "test case using tracebacks sourcemaps seemed fairly obvious people time sufficiently enough explanation required apparently wrong live test case archive test case attached tracebackszip screenshot overall comparison functional examination browser built traceback functional failing jquery traceback", "d": "6/2016"}, {"body": "pretty much needed thanks adding line right jquery script tag js jquerydeferredexceptionhook function e throw e gives result course breaks promisea compatibility understand really handy debugging especially legacy coffeescript threw custom error subclass rather could narrow adding subclass regex original leave exercise", "d": "6/2016"}, {"body": "lots transcompilers make use source maps besides coffeescript dart typescript emscripten google closure compiler etc also lots tools concatuglifybeautifycompressetc js use sourcemaps tools compile jquery among besides missing sourcemap support one many failings broken traceback jquery causes", "d": "6/2016"}, {"body": "let know fixes issue situ close ticket look wording upgrade guide", "d": "6/2016"}, {"body": "pretty obvious issue fixed breaking tracebacks sourcemaps box behavior acceptable library let alone one widely used", "d": "6/2016"}, {"body": "sure saying fixed adding one line gives traceback close one shipped one line would consider fixed use case", "d": "6/2016"}, {"body": "would consider acceptable jquery shipped fix", "d": "6/2016"}, {"body": "pyalot already clearly stated making change inside jquery compatible standards fight standards pushy please refrain restating opinion helpful please acknowledge whether one line user code dmethvin provided solves problem tracing error code uses source maps", "d": "6/2016"}, {"body": "solve problem jquery breaks tracebacks sourcemaps refuse acknowledge would kind solution ca nt ship library find ways fix issue including talking standards body question talking browser vendors provide necessary abilities fix advise close ticket fixed prove point nt care getting right", "d": "6/2016"}, {"body": "think agree respecting sourcemaps traceback ideal problem solution compatible spec must compliant suitable solution close ticket nothing said dave maintains plugin helps debugging jquery deferreds used knows solution suggested works may able use plugin could use plugin debugging follow standards provide best possible workaround overwrite default throw instead code one line think solution compatible promisesa please comment reopen ticket", "d": "6/2016"}, {"body": "thing two cases provided equivalent adding event listener event inherently different adding callback fulfillment promise really want still use jquery listen event want extra sugar promise still invoke callbacks even added dom ready going get standard promise behavior", "d": "6/2016"}, {"body": "clear avenues investigation open talking standards committee specifies promises talking browser vendors apis help fix issue closed ticket nevertheless closing ticket mistake proves point lack commitment get things right detriment everybody writes js lackluster attitude persevere setting example mediocrity follow many others hurting ecosystems foundations upon jses success built subscribe condone process find abhorrent repulsive", "d": "6/2016"}, {"body": "pyalot actually fought hard issue battle lost follow spec despite fervor minority", "d": "6/2016"}, {"body": "talk browser vendors mentioned multiple times introduction necessary apis lets fix tracebacks technical issues democracy minority matter issue clear merits solving evidence clear day everybody see nobody honestly argue wrong pointing issue detrimental impacts something solved solved clearly solved", "d": "6/2016"}, {"body": "reported chrome escalate somehow paulirish", "d": "6/2016"}, {"body": "talking kenneth russell issue fundamental solution done tests around circumstances chrome sourcemap translation url shortening prepending jquery error string front traceback breaks chrome traceback parser case browsers nt implement still nice error display even satisfactory reordering execution promises semantic breaks traditional exception handling would nt fixed tracebacks would still rather useless nice structured traceback handling offered things like promises debugger could shipped box work expected builtin traceback displays rather think questions proper tooling addressed promises plastered every api library apparently nobody clue debug mess ridden everybody", "d": "6/2016"}, {"body": "prepending jquery error string front traceback breaks chrome traceback parser propose change make better could two separate statements helps", "d": "6/2016"}, {"body": "propose change make better yes nt modify string get errorstack way modification break chromes traceback parser think futile guess error parser chrome rules nt standardized case browsers nt error display nt user friendly styled like normal error ca nt collapsed", "d": "6/2016"}, {"body": "see code modifying errorstack rethrowing error gets chrome show stack formatted throwing point violates promisea ca nt normal action", "d": "6/2016"}, {"body": "bit breaks chromes traceback parser jquerydeferred exception", "d": "6/2016"}, {"body": "bit breaks chromes traceback parser adding issue got response enough error stack available properly applied source maps dmethvin try", "d": "6/2016"}, {"body": "chromes generates error string errorstack pass consoleerrorwarnlog reparses error applies appropriate sourcemap translation undocumented behavior introduced response ticket wrote parsing chickens format exactly conform chromes undocumented errorstack format inappropriate send errors consoleerrorwarnlog produces bad error display provides worse ux even works expected builtin error display see screenshots also inappropriate receive errors unstructured undocumented format varies browser browser inappropriate browsers reparse errors produced exactly reasons proper response whole thing would introduce standard stack format provide standard stack format lazily error asked like errortraceback getter whatever browser finds necessary obtain structured format provide console api accept standard stack format consoletraceback formats standard stack traceback according browser usually formats errors javascript among popular languages kind structured traceback handling introduction errorstack poorly conceived failure standardize ill advised integration promises browsers rushed ill advised face complete lack proper error tooling mistakes compounded mistake fixing", "d": "6/2016"}, {"body": "behavior difference never promised consider arguments particular order reject master deferred soon one input deferreds rejected personally disinclined start enforcing strict sequence would willing entertain arguments someone compelling use case", "d": "6/2016"}, {"body": "note asynchronous case ca nt depend particular deferred arg rejecting multiplerejection scenario example assumes things order probably nt want assume possible determine whether first deferred already rejected calling behavior change nt prevent determining need question whether common enough need add note upgrade guide think documentation already clear making guarantees", "d": "6/2016"}, {"body": "could provide details talking deferred exceptionhook sth else", "d": "6/2016"}, {"body": "talking fact consolewarn used instead bubbling exception browsers exception handler nicely format exception display appropriate source map links nt know jquery excactly output produces trough consolewarn foldable well formatted hard read breaks source maps ie link source appropriately jquery translate errors occur prevent browser displaying bad practice unproductive js development", "d": "6/2016"}, {"body": "would bubble exception browser promisesa spec following mandates exceptions occurring handlers swallowed amp turned promise rejections nt go directly browser thing log perhaps browsers could learn format stack trace logged manually would resolve source map issue otherwise open proposals improve current situation simple", "d": "6/2016"}, {"body": "comes choice able effectively develop using promises developing wins everytime promises spec unusable present state development nt used", "d": "6/2016"}, {"body": "promises spec unusable present state development nt used would good discussion years ago promises follow spec new dom standards written using promises almost every promise library follows could nt maintained previous jquery behavior interoperability purposes libraries even started blacklist jquery deferreds nt behaving interoperably ship sailed try improve current situation much possible staying within standard going switch noncompliant implementation", "d": "6/2016"}, {"body": "situation library retarded specification breaking development unacceptable absolutely everybody involved untertaking nt see coming mile away considered suspect harmful since jquery joined club apparently considered harmful break js development ever period end story eol eod end expect people continue using whatever crap breaks hope make perfectly crystal clear", "d": "6/2016"}, {"body": "please read code conduct respectful avoid words like retarded going close thread nt seem bring constructive proposals table", "d": "6/2016"}, {"body": "cool willingly maliciously breaking source maps refuse address issue duly noted duly noted indeed", "d": "6/2016"}, {"body": "true refuse address hostile rude impolite comments discussing ticket civil way far please nt ruin one", "d": "6/2016"}, {"body": "caused lot headache us reverted back please fix", "d": "6/2016"}, {"body": "document ready handler implemented via deferred change using promiseacompatible behavior reason case nt well handled likely nobody team uses style explicitly throwing constructed errors expecting get error message console note somewhere call chain handled error still work fine would also get error message console error due error implicitly thrown browser jquerydeferredexceptionhook see remedies one jquery add end chain fire internally least log something bad happened nt compatibility concerns either think stack lost point example least get message console another option users prefer noise silence add modified jquerydeferredexceptionhook logs errors including thrown ones would mean removing check error type nt think appropriate default though people use pattern simple rejection method promises would get kinds console noise", "d": "6/2016"}, {"body": "see remedies one jquery add catch end jqueryready chain fire internally least log something bad happened nt compatibility concerns either think stack lost point example least get message error number console thinking think require developers know rely promise handle errors generally happening deferreds ca nt really avoid using equivalent form think jquery handle errors internally catch amp rethrow timeout error normally logged console", "d": "6/2016"}, {"body": "also note previous behavior problematic different way attached document ready handlers first threw uncaught error like pyalot example handlers would run independent run jquery handle errors internally catch amp rethrow timeout error normally logged console would contemplate code bit stack want dump point last time looked impression would track sort perinstance error stack property making bookkeeping lot complex added quick dirty logging error types seemed like due developer mistakes", "d": "6/2016"}, {"body": "using fn equivalent form think jquery handle errors internally catch amp rethrow timeout error normally logged console could good workaround", "d": "6/2016"}, {"body": "giving ability pass optional exception callback argument instead chaining exception instance way exception chain till thrown outside instead dev could handle case inside specific callback please note new user still learning contributing jquery solution seemed logical thought share", "d": "6/2016"}, {"body": "nicklou think good idea new code nt even think possibility code already think also need add error handler internally ensure nt swallow errors one way look ready handler signature would provide default rethrows error user nt provide one implementation complicated bit alternate implementation case deferred nt build still possible", "d": "6/2016"}, {"body": "one way look ready handler signature would readyhandler errorhandler want note clear documentation equivalent ready promise signature makes look like since rethrowing error handler promise would results original throw", "d": "6/2016"}, {"body": "dmethvin seems nice solution take look needs order become implemented advice would appreciated scottgonzalez absolutely right similar ready promise specify documentation make clear invoked throwingexception conditions", "d": "6/2016"}, {"body": "let discuss monday sounds like material", "d": "6/2016"}, {"body": "dmethvin scottgonzalez mgol noticing jquery foundation members please consider contributinghelping find really interesting first class opportunity starting contributing jquery even deep waters", "d": "6/2016"}, {"body": "nicklou sure pr would welcome let us know questions", "d": "6/2016"}, {"body": "ok written code ready pull request relevant wondering though functionality needs supported also event handlers hard still needs added codebase general done small modification function passing another argument called function takes one argument exception object wrap inside call responsible call fullfilment function clause call block also modified someone pass exception function using logic followed general please express concerns would like make pull request code much efficient possible also need write test functionality implemented thank advance", "d": "6/2016"}, {"body": "pr", "d": "6/2016"}, {"body": "cc markelog", "d": "6/2016"}, {"body": "good", "d": "9/2016"}, {"body": "yes place jquery nt run dom method trigger event handlers present way forever browsers nt consistent whether method link recently consistency could nt run method making run method would probably break code cases achieve thing looks like download sure works consistently across browsers see discussion hook created", "d": "6/2016"}, {"body": "gave alternative comment trigger function use javascript documentgetelementbyid adrctdwnld click problem wanted present situation download example something similar saw thanks answer", "d": "6/2016"}, {"body": "ok great", "d": "6/2016"}, {"body": "believe report accurate offsets visible size zero elements", "d": "6/2016"}, {"body": "open pr issue fix ok nt check since get correct bounding rect", "d": "6/2016"}, {"body": "maintain npm amp bower jquery packages package managers need ask maintainers micha\u0142 go\u0142\u0119biowski", "d": "6/2016"}, {"body": "think input focus used wrap also state focus sorry english good like", "d": "6/2016"}, {"body": "problem generally applies situation remove content document manipulate sure wrap place happens test case easy one thing wrapped focus general focus could element inside wrapped structure like case need see currently focused element inside content wrapped refocus wrapping risky cases see", "d": "6/2016"}, {"body": "think workaround best way handle however willing review patch", "d": "6/2016"}, {"body": "closed without resolution", "d": "6/2016"}, {"body": "resolution patchwelcome low priority probably worth adding code jquery suitable workaround probably better solutions nt require wrapping element currently focus", "d": "6/2016"}, {"body": "closed never get fixed one know problem exists reason close pressure resolve open tickets stands description wrap method include mention element get removed dom thus trigger strange unexpected side effects like placing note bottom doc workaround going frustrate developers", "d": "6/2016"}, {"body": "well say patch welcome ticket found search whether open tend keep tickets open think could solve since issue around decade previous reports recall high priority several issues addressed patch mentioned likely problem exists elsewhere using apis example use remove focus element even elements removed later reinserted document treated either docs code cases exist api general nt treat cases consistently leads bug reports focus management extremely fidgety several browsers bad firefox disable several flakey tests ca nt synchronously focus elements obstacles time jquery tries force focus somewhere quite possible screw contrast know sure want focus straightforward application level", "d": "6/2016"}, {"body": "see point detach method think wrap method little different atomically remove reinsert dom also understand concerns focus handling fidgetyness familiar jquery code base feel apprehensive submitting patch workaround side effects concern integrating code base", "d": "6/2016"}, {"body": "think wrap method little different atomically remove reinsert dom nt thought apis might situation minimum wrap unwrap methods affected workaround side effects concern integrating code base spidey sense says side effects patch small worked supported browsers certainly consider think many times day jquery loaded trillions would hard justify adding example bytes fix problem one person reported worked around easily", "d": "6/2016"}, {"body": "thanks opening issue however issues jquerycom posted", "d": "6/2016"}, {"body": "please review comments use things like god fing sake stupid thought obvious ca nt believe library unusable helping productive discussion think team deserves addressed little less negative tone perhaps think comments insulting appeared tried respond explain things work way however want continue discussion want opinion whether reaction continuing negative tone harsh", "d": "6/2016"}, {"body": "please use jquery migrate upgrading code would told prefer read console messages instead upgrade guide", "d": "6/2016"}, {"body": "method still described valid jquery docs though repo would open ticket", "d": "11/2016"}, {"body": "hcgernhardtiii every site separate github repo look name github account example learnjquerycom", "d": "11/2016"}, {"body": "thanks", "d": "11/2016"}, {"body": "jquery released load function deprecated use jquery load function previous version jquery", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "really easy jquery already ask stackoverflow ca nt find existing question", "d": "6/2016"}, {"body": "note google pretty good job diagnosing cost zero bytes library uncaught exceptions definition bugs yes question whose bugs god fing sake check sanity input values range insane values infinite would require lot extra bytes check suggesting check", "d": "6/2016"}, {"body": "uncaught exceptions definition bugs yes question whose bugs whoever wrote line code throws case library call library function invalid argument bug code error message nt something kind invalid argument xxx function yyy thrown directly library function calling wrong argument library bug simplifying bit obviously always exactly simple think get mean note google pretty good job diagnosing cost zero bytes library note jquery pretty bad job diagnosing clear error message fairly easy figure somewhere used somewhat wrong easing easy spot close impossible figure wrong easing passed parameter vital error message contains invalid value range insane values infinite range sane values nt right also please nt pretend stupid nt need check either invalid valid values one one even ranges infinite certainly invariant rule must hold checked would require lot extra bytes check suggesting check sure nt know internals jquery knew would fix pr couple ideas difficult check whether value valid let suppose wrap code uses value inside trycatch block catch exception know easing ca nt created tha value issue sensible error message containing actual value annoying part issue get error says neasing thiseasing function valuable piece information need heck value thiseasing assume invalid string passed note even go stack trace find line code triggered exception far trivial stack trace quite convoluted goes library inspect places find necessary tell invalid value could variable yes google pretty good job side end pretty useless message neasing thiseasing function looks like something like start something like consider almost pseudocode would lot better starting point probably value stored without checking sanity lot earlier much higher level judging depth stack trace", "d": "6/2016"}, {"body": "think many different places jquery call method incorrect argument add message every one would increase size library much larger understand would nice every time anyone passed bad argument could give essay bad explain probably meant nt practical", "d": "6/2016"}, {"body": "ca nt believe even arguing something obvious writing libraries write function first thing check validity inputs nt blindly use whatever comes general rule anyway may decide omit checks sake efficiency code footprint trading much debuggability understand lot cases jquery debugging whatever error may occur trivial anyway definitely one cases get error impossible debug unacceptable one spend hours debugging trivial error library unusable", "d": "6/2016"}, {"body": "writing libraries write function first thing check validity inputs nt blindly use whatever comes nothing black white jquery loaded trillions times per day size file matter way bug reported indicates minified version jquery used probably hard debug another tradeoff sizeperformance vs debuggability get error impossible debug true get error message console provides location set breakpoint value shows incorrect name maybe would clearer nonminified file provide ca nt control people use try track bugs", "d": "6/2016"}, {"body": "nothing black white know nt think appreciate dark gray case get error impossible debug true thought obvious impossible meant way harder get error message console provides location yeah location error message relevant true nature error error nt caught level invalid value allowed propagate deep low level part library code value provided even location significant crawl like dozen levels stack trace even easy figure much minified version jquery used probably hard debug decent error reporting level would nt even issue set breakpoint value thiseasing shows incorrect name error happens systematically reproducible", "d": "6/2016"}, {"body": "nt think discussion going resolve anything lock thread given reasons nt provide detailed api violations disagree right wo nt change approach", "d": "6/2016"}, {"body": "api documentation explains works", "d": "6/2016"}, {"body": "assassinbeast think one confused around years works expected good logic behind need change way think code seems like get confused basic matters", "d": "7/2016"}, {"body": "work moment possible create test case jsfiddle firewall downloading jqueryui replace jquery script newest version open indexhtml open dialog", "d": "6/2016"}, {"body": "uimenu", "d": "6/2016"}, {"body": "blog post mentioned new compatible versions ui mobile coming soon use jquery ui jquery migrate plugin work fine", "d": "6/2016"}, {"body": "experiencing issue hope fix soon guess revert jquery rectified", "d": "6/2016"}, {"body": "jquery jqueryui happens opening dialog electronjs app jqueryjs line", "d": "6/2016"}, {"body": "included jquery migrate app", "d": "6/2016"}, {"body": "fixed nt know need electron thanks", "d": "6/2016"}, {"body": "nt add jquerymigrate many external files added rolled back get fixed", "d": "6/2016"}, {"body": "supposed actually use follow documentation fails", "d": "1/2017"}, {"body": "thanks", "d": "4/2017"}, {"body": "composerjson require add bowerassetjqueryui", "d": "11/2017"}, {"body": "duplicate", "d": "6/2016"}, {"body": "bootstrap atm support jquery", "d": "6/2016"}, {"body": "thinking submitting wip pr using raf timestamp effects", "d": "6/2016"}, {"body": "one reference jquery ui inside tooltip obviously easy update either hardcoding switching switching would mean stop working ie lt next version officially drops support ie lt trying actively break support one case nt seem worth add overhead feature detection conditionally use plan swapping use wanted see way could handle stay sync actual animation far tell actually sync right nt really matter reason nt inside actual animation call logic around showing tooltip abstracted away see call show implementation show inside base widget definitely nt affect deprecation wondering better way", "d": "6/2016"}, {"body": "wanted see way could handle stay sync actual animation definitely nt affect deprecation wondering better way right polling selector roughly every frame could forcing style recalcs possibly layouts set nt try set position flag cleared custom call call could show element set position animation continues normally", "d": "7/2016"}, {"body": "put deprecation migrate immediately deprecation warning would triggered time jquery took path supported browsers nt", "d": "7/2016"}, {"body": "supported browsers nt raf ie amp android browser", "d": "7/2016"}, {"body": "could always uasniff ie display warning easy way view android browser console", "d": "7/2016"}, {"body": "migrate guess avoid warning would mean particular one would show android bad", "d": "7/2016"}, {"body": "ah yeah obviously way better uasniffing nt know thinking", "d": "7/2016"}, {"body": "docs pr submitted close", "d": "8/2016"}, {"body": "fixed uglifyjs jquery fine nt upgrade amp branches real issue though allowed nonstrict mode none supported browsers choke code change jquery source strict mode nt released mode changing semantics released ca nt support modifications jquery rely strict mode onwards", "d": "6/2016"}, {"body": "already fix really problematic deploy would solve problems", "d": "6/2016"}, {"body": "also link uglify issue reference", "d": "6/2016"}, {"body": "issue releasing new version costs release process multistep release versions simultaneously always danger new release break something etc moreover preparing release jquery lines receive critical fixes like reiterate said though changing execution mode libraries use asking problems strict mode changes semantics means put code strict mode ca nt libraries without taking burden suffering consequences bug jquery us fix fixing issue appeared incorrect use library nt warrant releasing new versions also minify jquery lots things nt require us release new versions going close issue since nt think anything actionable part feel free continue discussion", "d": "6/2016"}, {"body": "necessarily asking release part next version branches think would sufficient purposes make temporary local change confidence nt maintain fork forever", "d": "6/2016"}, {"body": "reasonable request commited version bump amp branches ever cut new versions fixed uglifyjs used could check whether free problem tip branch nt use anywhere good verify issue indeed fixed thanks", "d": "6/2016"}, {"body": "appear still broken egrep wstyle functionsw hstyle hstylebackgroundclip contentbox hclonenode stylebackgroundclip lclearclonestyle contentbox hstylebackgroundclip gstylecsstext left position absolute gappendchild h function", "d": "6/2016"}, {"body": "sure nt fix problem version uglify using master echo concerns nt support strict mode fact specifically avoid due compat issues", "d": "6/2016"}, {"body": "short answer nt rely sequence potentially asynchronous operations also longer answer decided casting operation analogous particularly including unwrapping secondary thenables ie thenable fulfills possible native possible object returned fulfills ultimate fulfillment value sequence rather intermediate thenable order acheive need invoke forcing asynchronicity side effect logging example gets delayed", "d": "6/2016"}, {"body": "plain objects always documented limited support discussed dropping support completely present operations supported plain javascript objects wrapped jquery data prop trigger triggerhandler usage far outside purpose jquery dom library recommend including note release notes many people relying add note upgrade guide say many people examples stackoverflow answers example popular library use edit oh see used parsely others", "d": "6/2016"}, {"body": "discussed dropping support completely understand completely examples stackoverflow answers yeah ashamed say used parsley idea others accepted answer upvotes negligible comment undocumented anywhere etc oh wait answer pointed undocumented upvoted smile think lot people mistakenly think ok use difficult maybe go trouble output deprecation warning either supporting another version", "d": "6/2016"}, {"body": "nt think add code generate deprecation warning inside jquery something could jquery migrate nt yet formally deprecated use plain objects way used flat misuse api need add checks methods ones listed docs ensure passed dom elements lot checks", "d": "6/2016"}, {"body": "old ticket bugsjquerycom ca nt find moment due use attributes handler note nt execute handlers early jquery history decided try run handlers part one side effect use manually run jquery inline handlers nt try run dom method method tries run handlers block duplicate runs jquery handlers remembering jqueryeventtriggered ca nt inline handlers note call inline handlers wontfix issue due find ticket old bug tracker add wontfix page update somehow indicate occurs", "d": "6/2016"}, {"body": "dmethvin made think since generally consider inline handlers iffy wo nt stop invoking", "d": "6/2016"}, {"body": "always mostly compat experimenting splitting triggering event calling method like dom happens fire events default action even standard bit muddled things relate", "d": "6/2016"}, {"body": "little confused jquery exports via amdcommonjsglobal depending detected environment changes would like us make", "d": "6/2016"}, {"body": "created issue also jspmcli seems loaded assumes module recognize decides save window object overwriting original version window", "d": "6/2016"}, {"body": "checked happens jquery version nt happens version", "d": "6/2016"}, {"body": "discussing jspm team problem solved adding following snippet code jspmsystemjs config thanks time", "d": "6/2016"}, {"body": "adding support nt hard core issue see regular properties accessed amp written via property nt apply css custom properties need amp bigger issues wo nt decrease performance properties could apply special logic would use methods name starts love supported need careful thanks report", "d": "6/2016"}, {"body": "wo nt work gives properties set element jquery already normal properties anyways gives computed property values directly set values", "d": "6/2016"}, {"body": "yes meant placeholder sorry getter use setting use obviously", "d": "6/2016"}, {"body": "seems pretty doable well like", "d": "6/2016"}, {"body": "getfree would like try prepare pull request", "d": "6/2016"}, {"body": "honestly would nt feel comfortable nt look source code suspect wo nt simple writing wrapper around native js api understanding jquery supposed extra layer abstracts away browser differences incompatibilities nt know guys handle cases like feature missing browsers ie case also different branches target browsers others like jquery branch supports ie one nt", "d": "6/2016"}, {"body": "let try wo nt treated blocker", "d": "6/2016"}, {"body": "great analysis thanks lot surprised using gives worse results using timestamp since based timer made quick patch jquery made use raf timestamp added button test case graph looks similar velocity using timestamp one note seeing performance difference chrome nt see gain safari amp tp firefox safari mostly looks like velocity plus test case cases including one better chrome firefox looks terrible cases sure sth like chrome worth edit edge cases look worse safari way better firefox", "d": "6/2016"}, {"body": "firefox terrible graphs seeing use integrated graphics card macbook ie intel iris pro mb switch dedicated amd radeon mb gets closer safari perhaps firefox problems hardware acceleration intel gpus", "d": "6/2016"}, {"body": "always found dropping huge chunk frames upfront visually jarring fps hit real world lowstress animation scenarios fps hit nt noticeable", "d": "6/2016"}, {"body": "mgol good point created issue firefox bug tracker let see say necessary create issues edge safari julianshapiro agree dropping chunks frames really bad still happening though precise worse compared plotting values noop nt see initial framedrops", "d": "6/2016"}, {"body": "cool thanks", "d": "6/2016"}, {"body": "also updated bug reference older bug added bzbarsky take deeper look", "d": "6/2016"}, {"body": "nice test judging discussion mozilla thread still ca nt use right fixed fingers crossed still look olderother browsers support", "d": "6/2016"}, {"body": "firefox windows looks smooth chrome long nt make things much worse firefox changing raf timestamp anything stop us changing markelog point would also need ensure nt degrade much browsers like android", "d": "6/2016"}, {"body": "dmethvin quick patch made accept timestamp parameter slightly change api avoid need wrapper function might increase code size little nt see much gain using timestamp improves situation chrome maybe way preparing future prepare pr discuss details", "d": "6/2016"}, {"body": "ah said smooth chrome firefox windows mean looks like graph second one original joliss post completely smooth change situation", "d": "6/2016"}, {"body": "yeah firefox results smooth", "d": "6/2016"}, {"body": "mgol points timestamp dependant graphics card dmethvin card might good category case story could browsers also disturbing", "d": "6/2016"}, {"body": "also issue tickets open", "d": "6/2016"}, {"body": "mgol points timestamp dependant graphics card dmethvin card might good category case possible current data points thesis never worse using timestamp using sometimes better", "d": "6/2016"}, {"body": "pr please review", "d": "6/2016"}, {"body": "cc ing mozilla folks miketaylr digitarald bzbarsky annevk kentuckyfriedtakahe cyberdees", "d": "6/2016"}, {"body": "pushing least chrome apparently bug makes timestamps arrive step function always ascending order see details", "d": "3/2017"}, {"body": "requires investigation issues around outoforder scheduling chrome experienced well recent timer throttling due spectre postponing", "d": "10/2018"}, {"body": "cc arschmitz", "d": "6/2016"}, {"body": "dmethvin ah thanks yeah trouble figuring exactly error coming", "d": "6/2016"}, {"body": "thanks submitting issue continue discussion since code issue going close jquery always open source love open source migration github nobrainer due popularity easeofuse interesting graph suggests newcomers since moving github far comparisons sure internal data github graphs encourage new people contribute conferences summits inperson conversations jquery websites social media avenues could nt say successful certain suspect developers summits organic conversation person played biggest roles attracting newcomers nt see slope much lot seem like burst newcomers end could nt say contributed although first year held conferences outside us thanks", "d": "6/2016"}, {"body": "nt see slope much lot seem like burst newcomers end could nt say contributed although first year held conferences outside us end first developer summit", "d": "6/2016"}, {"body": "avoid check make ie throw detached svgs wo nt", "d": "6/2016"}, {"body": "forget change test", "d": "6/2016"}, {"body": "probably performance reasons change back change cssjs well ps please nt link links become incorrect future", "d": "6/2016"}, {"body": "thanks pointing fixed ref", "d": "6/2016"}, {"body": "experience offset never reliable svg elements used kept running cases nt enough think leave way get enough complaints revisit", "d": "6/2016"}, {"body": "complaint currently working lot svgs would make life easier oo", "d": "6/2016"}, {"body": "unit test nt present bootstrap probably oversight part nt great syncing fixes", "d": "7/2016"}, {"body": "complaint sorry entry closed company forced go back jquery version offset never reliable svg elements really weak argument closing entry would appreciate old behavior could restored", "d": "7/2016"}, {"body": "miskabalu jquery nt support operations svgs exception class manipulation clearly documented contribute wo nt fix page relying similar relying private undocumented apis may change time since nt support change code might break something improving logic performance regular html dom important us trying fix something nt really support", "d": "7/2016"}, {"body": "mgol ok many thanks reply", "d": "7/2016"}, {"body": "want behaviour really complex suppose case overload real math function something like javascript mathrandom function var arr new limit mathpow", "d": "6/2016"}, {"body": "tool trying say warning using cryptography api whether could switch crypto api nt supported browsers tool static analysis would still find file since got fallback", "d": "6/2016"}, {"body": "thanks opening issue however need use trying generate secure random numbers use generate internal unique identifiers instance generating property name use attaching data element security concern number accidentally collides another theoretically could happen nt", "d": "6/2016"}, {"body": "thank thanks opening issue however need use crypto trying generate secure random numbers use mathrandom generate internal unique identifiers instance generating property name use attaching data element security concern number accidentally collides another theoretically could happen receiving mentioned reply email directly view github mute thread", "d": "6/2016"}, {"body": "test cases would greatly appreciated unlikely performance issue since regexp string simple plus manually triggered events nt tend fired hundreds times per second check cheap though seems like worth", "d": "5/2016"}, {"body": "maybe moving condition morph condition true false instace fail check morph morph anyway thinking possible namespace morph like", "d": "5/2016"}, {"body": "tried debug code understand filled method explain seems never different events tests defined initially", "d": "5/2016"}, {"body": "years ago let see remember original ticket actually two things sortof related one calls handlers event bubbling tree appropriate stopped two calls dom method name handler called eg call method currently focused focusable calling dom method trigger events happen problem already called handlers nt want call property nonempty process calling corresponding dom method event example method called events particularly tricky potentially fire one call focus moves made complex several browsers support events use simulate currently calling dom methods final step may end causing simulated event need avoid like event also ignored looks like unit test using test case ensuring event bubbles tree bug trying fix general events notorious hard test several places given firefox nt work browserstack due window focus issues", "d": "5/2016"}, {"body": "thanks reply next weekend reread explanation try understand works try think mean simulate case define unit test try optimize process basically move morph structure great thing even help performance possible without break things avoid branch namespaced events", "d": "5/2016"}, {"body": "okay definitions case commited solve problem basically implements four changes code implements regular expression line implements condition base issue commented focusblur morphs focusinout ensure firing right line changed event bubble document match something starts else starts line removed properties line line implements one unit based original issue example file give implemented unit test item nt test matched condition item even remove branch continues validating tests normally reverse changes made item make fail another test line testeventjs fails implemented unit test failed test implemented commit nt try understand think focus case reverse changes made item finally unit test implemented fail consider fixes original issue tried run check four browsers chrome firefox edge nothing matched nt know test instance code removed jquery tried check try write unit test check found way check tried follow conditions reexecute tried run exactly condition said nt worked seems dom trigger well tip test condition works please tell tried everything nothing use condition maybe obsolete", "d": "6/2016"}, {"body": "wow thanks detailed analysis honestly nt remember details unit test added generally difficult test focus events nt fire reliably browsers especially browser tab focus b focusinfocusout supported browsers simulate test probably meant indirectly check code added think something like test reach rfocusmorph condition firefox simulate working jsbin nt even set focus likely due focus unreliability mentioned iframe probably focus time code runs", "d": "6/2016"}, {"body": "pr", "d": "5/2016"}, {"body": "discuss changing milestone breaks angular test suite", "d": "5/2016"}, {"body": "assigned track issue", "d": "1/2018"}, {"body": "anarcat cve incorrect stable jquery version suffers issue regression happened preparation jquery fixed released", "d": "1/2018"}, {"body": "mgol well based cve snyk database says versions lt gt sure parsed version numbers right read releases eg vulnerable happy clarify description cve better idea going want submit update cve", "d": "1/2018"}, {"body": "never submitted update cve feel free range database incorrect affected version earlier amp later nt exhibit issue cves assigned bugs existing prerelease versions range changed", "d": "1/2018"}, {"body": "acknowledged carry mitre sure marked vulnerability snyke therefore mitre done homework better arguably nt much information available begin without digging deep source code worth requested cve form strongly encourage security researchers upstream project systematically request cve assignments discovering andor releasing security issues makes tracking much easier across ecosystem upstream vendors downstream distributors linux distros thanks", "d": "1/2018"}, {"body": "thanks report however duplicate fixed upcoming jquery decided change code might depend shape output method wanted avoid breaking changes please test jquery issue resolved report regressions might find", "d": "5/2016"}, {"body": "see however perhaps consider right rounding either consistently round nearest integer consistently floor would nt see good reason consistently ceiling currently chrome unpredictably picks next previous integer might rounded might rounded", "d": "5/2016"}, {"body": "unpredictably picks next previous integer might rounded might rounded jquery uses get values behave describe browser bug report relevant browser vendor browsers round various direction eg chrome differently android note even jquery wo nt get fractional values everywhere browsers return fractional values includes virtually modern browsers eg ie always rounds edit fixed info", "d": "5/2016"}, {"body": "jquery uses offsetwidthoffsetheight get values behave describe browser bug report relevant browser vendor browsers round offsetwidth various direction eg chrome differently android nt half point jquery supposed eliminating differences browsers", "d": "5/2016"}, {"body": "nt half point jquery supposed eliminating differences browsers yes always tradeoffs consider eg would reject patch makes small improvement takes big performance hit sometimes also possible align browsers patch would huge trying keep size jquery relatively small case nt plan updates jquery lines exception possible critical issues development focused jquery issue wrt rounding ie android browser amp ios round values everywhere else get fractional values", "d": "5/2016"}, {"body": "nt half point jquery supposed eliminating differences browsers would eliminate difference numbers give ones browser providing us via apis supposed represent browser layout engine decided lay page note constraint pixelperfect layout browsers differences necessarily bugs issues like around ages see blog post john resig reasons jquery done switching changing could introduce breaking changes decade worth existing code already exists currently chrome unpredictably picks next previous integer might rounded might rounded chrome nt giving reasonable values file bug chrome however keep mind issues mentioned blog post table columns seems perfectly reasonable browser return column widths order total exactly", "d": "5/2016"}, {"body": "link jquery ui bug tracker mentioned jquery ui readme address jquery ui nt use sass less though css handwritten see source", "d": "5/2016"}, {"body": "test case web site need help fixing site start stackoverflow jquery forum open ticket specific test case", "d": "5/2016"}, {"body": "seems duplicate let continue unless please comment amp reopen", "d": "5/2016"}, {"body": "thanks report", "d": "5/2016"}, {"body": "vanpuyveldekevin would interested preparing pull request fix suggested simple work would adding proper test case could start code report guide process amp help get stuck", "d": "6/2016"}, {"body": "vanpuyveldekevin ok preparing pr since want get done see missing context example exactly using code snippet relate returns", "d": "6/2016"}, {"body": "pr", "d": "6/2016"}, {"body": "basically using new deferred implement progress notification ajax returns promise implement function course example simplified original implementation implementation using implement deferred recursion odata check next page new retrieve course nifty feature already able get intermediate results loading hence progress example callers retrieve pages get progress containing page basically retrieved using ajax hence ajax success sig afore mentioned results progress callback something like var retrieveallpages function var deferred ajqdeferred", "d": "6/2016"}, {"body": "vanpuyveldekevin ok thanks could check resolves issue", "d": "6/2016"}, {"body": "vanpuyveldekevin would able confirm like include fix like confirmation fixing issue", "d": "6/2016"}, {"body": "alright ran qunit test closer still seems breaking change compared earlier major version latest see example recursive example page size total ease pages internalretrieve data retrieve gets items result progress items ok progress callback gets results recursive internaldorequest retrieve page gets item result progress item nok progress callback get result results somehow details seem end debug flow internaldorequest else flow first basically concat last page full deferred resolving done ending progress callback result last page progress callback situation gets full result instead single page retrieved note previous versions exact approach fact end progress callback last page result item thoughts personally think current operation mode ideal since progress callback often used start binding data example using frameworks like knockoutjs still loading data normally course simple records last page loaded data already bound let say grid would readded adding duplicates pretty much whole list except final page", "d": "6/2016"}, {"body": "vanpuyveldekevin code posted extra details relevant issue could try reduce test case post working state clear description expect happen something like example", "d": "6/2016"}, {"body": "well tried reproducing simple case succeed realistic case last progress callback nt triggered assume means callback queueing contains breaking change since case reach deferred resolve first progress callback triggered meaning order since full deferred already resolved case progress callback ends getting result done nt quite correct however simple case without ajax nt seem occurr even less replicate logic setup example test cases seem issue notify immediately brings flow progress callback see biggest difference ajax deferred mix since fake actual data retrieval situation actual tests work fails test formatting nt seem work well though var retrievepage function var deferred deferred var pageitems settimeout function deferredresolve pageitems return deferredpromise var retrieveallpages function var deferred deferred function internalretrieveallpages items pagenumber return retrievepage function pageitems deferrednotify pageitems pagenumber pagenumber return internalretrieveallpages itemsconcat pageitems pagenumber else var finalresult itemsconcat pageitems deferredresolve finalresult return finalresult fail function jqxhr textstatus errorthrown deferredreject jqxhr textstatus errorthrown internalretrieveallpages return deferredpromise var function var deferred deferred function internalretrievefirstpage var pagenumber return retrievepage function pageitems deferrednotify pageitems pagenumber pagenumber return internalretrievenextpagesrecursive pageitems pagenumber else var finalresult itemsconcat pageitems deferredresolve finalresult return finalresult fail function jqxhr textstatus errorthrown deferredreject jqxhr textstatus errorthrown function internalretrievenextpagesrecursive items pagenumber return retrievepage function pageitems deferrednotify pageitems pagenumber pagenumber lt return internalretrievenextpagesrecursive itemsconcat pageitems pagenumber else var finalresult itemsconcat pageitems deferredresolve finalresult return finalresult fail function jqxhr textstatus errorthrown deferredreject jqxhr textstatus errorthrown internalretrievefirstpage return deferredpromise qunittest retrieveallpages function assert var done assertasync retrieveallpages progress function page pagenumber assertok pagelength progress retrieved page found right amount accounts relative page size found pagelength done function allpages assertok allpageslength done retrieved pages found right amount accounts relative page size found allpageslength always function done qunittest function assert var done assertasync progress function page pagenumber assertok pagelength progress retrieved page found right amount accounts relative page size found pagelength done function allpages assertok allpageslength done retrieved pages found right amount accounts relative page size found allpageslength always function done", "d": "6/2016"}, {"body": "expected change covered upgrade guide however selector like input valueabc used always select value attribute change made property user example typing text input jquery behaves correctly consistently earlier versions jquery would sometimes use property used attribute want find input concrete value may limit selection via also make sure nt use part code executed often performance reasons makes whole selector skip native", "d": "5/2016"}, {"body": "mgol thanks lot clear explanation sorry misunderstanding searched lot nt see note thanks clarification", "d": "5/2016"}, {"body": "delay must coming validation plugin jquery core please use forums stack overflow plugin issue tracker help", "d": "5/2016"}, {"body": "ref note idl attributes methods value input defined default one defined value see definitions spec changing changed required behavior", "d": "5/2016"}, {"body": "dmethvin thanks fast response explanation played around little bit maybe explain following behaviour fear correct spec understand atm var input test inputval something var beforetypechangevalue inputget getattribute value inputattr type hidden var aftertypechangevalue inputget getattribute value beforetypechangevalue test aftertypechangevalue something type change gives default value even though value property changed far good type change attribute nt still attribute changed attribute nt touched looks like attribute synced property type change know probably nothing jquery still interested like sorry ot", "d": "5/2016"}, {"body": "way tell jquery give example try standard dom methods see thing happens spec means table references property internal state typehidden specifically says use attribute note jquery setsgets value property gettingsetting value attribute often thing various compat rules", "d": "5/2016"}, {"body": "correct nothing jquery still understand browsers behave though firefox chrome safari seems correct var input documentgetelementbyid test inputvalue something var beforetypechangevalue inputgetattribute value inputsetattribute type hidden var aftertypechangevalue inputgetattribute value beforetypechangevalue test aftertypechangevalue something using instead values type change seems something property value indeed changes property understand correctly", "d": "5/2016"}, {"body": "spec says using attribute suspect logic behind need hidden input dynamic state since users modify directly changing type fly breaking assumption likely many people encountered case earlier nt even allow change input types people avoid code", "d": "5/2016"}, {"body": "fixed jquery dictating everything stored camelcase", "d": "5/2016"}, {"body": "yup main issue", "d": "5/2016"}, {"body": "shim everywhere voting yes", "d": "5/2016"}, {"body": "previous art links including comprehensive tests", "d": "5/2016"}, {"body": "one problem thx dmethvin amp ie fire synchronously amp asynchronously contrary spec means shimmed amp ie change sync async", "d": "5/2016"}, {"body": "rather different event order async event", "d": "5/2016"}, {"body": "light information tend agree dmethvin mess", "d": "5/2016"}, {"body": "wpt currently lacks test synchronicity", "d": "5/2016"}, {"body": "sad think even would get test right sob anything close ticket maybe firefox get everyone agree order implementation kind like edge order tbh", "d": "5/2016"}, {"body": "anything close ticket think least put comments source document sequence api pages", "d": "5/2016"}, {"body": "documented order events well defined code depend document actual order jquery uses seems like saying order supported would able change major version plus ca nt make order happen ie without turning async", "d": "5/2016"}, {"body": "dmethvin sounds good add guarantee happen contract promise", "d": "5/2016"}, {"body": "moved", "d": "5/2016"}, {"body": "dmethvin clever guy", "d": "5/2016"}, {"body": "could anyone jquery comment", "d": "10/2016"}, {"body": "smaug added agenda next meeting though nt prohibit anyone commenting sure recommend yet", "d": "10/2016"}, {"body": "comment say blink changing order would affect jquery since order also happens wrong apparently async events ie throw wrench ca nt make sync guarantee behavior across browsers even browses cooperated order still left inconsistencies words nt see changes made influencing much least ie market share sufficiently diluted", "d": "10/2016"}, {"body": "think go", "d": "5/2016"}, {"body": "added", "d": "5/2016"}, {"body": "thanks", "d": "5/2016"}, {"body": "hi dennisvm opened issue instructions able see", "d": "5/2016"}, {"body": "would check allowed though initial check always log warning console", "d": "5/2016"}, {"body": "tomjahncke provide link test case guessing html inline styles usually better guess ask test case indicated link test case issue template", "d": "5/2016"}, {"body": "thank quick replies dmethvin attempting provide test case find places html using style instead class addressed remaining times get csp warning related independent angular library using going reach angular library assistance able create simple example demonstrate issue library content closing issue nothing jquery thank quick reply patience submitting issue", "d": "5/2016"}, {"body": "definitely html sent jquery nt following csp policy set page would cause issues something jquery internally open new ticket test case", "d": "5/2016"}, {"body": "seems alreadyknown bug firefox reasons fixing jquery still valid lot work rare case would comment ticket see whether fixed meantime possible copy value right", "d": "5/2016"}, {"body": "hassle end textarea select situations nt work chosen jquery nt want deal browser issues end jquery like javascript beginning claiming browsers fix problems seems way making bugfix", "d": "5/2016"}, {"body": "thanks quick answer highly appreciated", "d": "5/2016"}, {"body": "update firefox guys say waiting fix jquery", "d": "5/2016"}, {"body": "update firefox guys say waiting fix jquery comment firefox guy nt say added firefox bug metabug collecting issues affecting jquery", "d": "5/2016"}, {"body": "ok read issue gets reported jquery interpreted jquery fix however hope gets fixed jquery firefox nt make progress since years jquery wants api developers hiding browser specifics", "d": "5/2016"}, {"body": "ps baszero take fix long reported yes please firefox fix kinds comments bug trackers nt constructive firefox large project many thousands open bugs like help contribute patch fix issue happy help get started send email miket mozillacom thanks", "d": "5/2016"}, {"body": "thanks agree comment constructive rather contribute jquery mozilla believe fix belongs", "d": "5/2016"}, {"body": "note per spec currently written clonenode textarea supposed copy modified value firefox safari following spec chrome edge see also spec issue", "d": "5/2016"}, {"body": "even reason change since ticket references appropriate external tickets nt plan implementing change counter spec close ticket spec agrees behavior makes sense revisit", "d": "5/2016"}, {"body": "hi help us understand improve process text box typed read would helped direct right place", "d": "5/2016"}, {"body": "read kind confusing mark nt sure meant comment mark seen", "d": "5/2016"}, {"body": "okay need work question asking nt anything repo sounds like need find owner age verification plugin file issue could ask question stackoverflow", "d": "5/2016"}, {"body": "yea remove site completely nt work keeping people logging every time back keyboard age verification form drops completely gone view", "d": "5/2016"}, {"body": "api site request closing duplicate issue quite old though good reminded us change needed thanks", "d": "5/2016"}, {"body": "hey using start drop function code designed read file properties keep adding tabular list target area files dropped nt seem hold files dropped unto target area html page replaced code seems store current file details file variable wondering whether stack file details filelist drop several files unto target loop file variable print table file details able retrieve last file dropped using originalevent properly adjustments need make get file variable store multiple file details page active thanks assistance", "d": "3/2017"}, {"body": "confirmed thanks report", "d": "5/2016"}, {"body": "test case using dev version jquery", "d": "5/2016"}, {"body": "first bad commit cc markelog", "d": "5/2016"}, {"body": "jquery fine perhaps need backport workaround test well", "d": "5/2016"}, {"body": "mean broken well", "d": "5/2016"}, {"body": "check sounds like blocker", "d": "5/2016"}, {"body": "yeah get imo", "d": "5/2016"}, {"body": "currently fix landed master branch ie sure constitutes new release marking", "d": "5/2016"}, {"body": "also landed master fix mainly branch since regression", "d": "5/2016"}, {"body": "landed", "d": "5/2016"}, {"body": "think confusing though", "d": "5/2016"}, {"body": "denote apply maybe better name soon wo nt need label", "d": "5/2016"}, {"body": "jquery builtin utility methods primarily meant serve needs jquery internally exposed since useful others since using feature like one describe could done plugin even independently jquery nt meet bar adding new features something like may also want look lodash got great set methods filtering data", "d": "5/2016"}, {"body": "sure installed correctly see correct results", "d": "5/2016"}, {"body": "ignore tomorrow friday hooray npm update installed jquery", "d": "5/2016"}, {"body": "think offsetparent return document null case document means base coordinates null means ancestor element found behaviour already defined spec deviate though lot issues", "d": "5/2016"}, {"body": "jquery nt behave cssom specification think fixed", "d": "5/2016"}, {"body": "sgtm", "d": "5/2016"}, {"body": "would great way make every property original event available jquery one overhead regards number properties possible without proxies unfortunately", "d": "5/2016"}, {"body": "proxy pretty slow course defineproperty slow ideally able use native prototype nt work browsers tried drawbacks approach faster smaller old code guess progress", "d": "5/2016"}, {"body": "ideally able use native prototype nt work browsers tried could share browsers problematic", "d": "5/2016"}, {"body": "strange day ca nt type either jsbin jsfiddle codepen chrome gives illegal invocation edge gives invalid calling object firefox gives typeerror get type called object implement interface event thought sure one three actually worked last time tried object really host object guess expected", "d": "5/2016"}, {"body": "saw pr noticed issue add well based title issue probably safe leave new properties", "d": "5/2016"}, {"body": "conflicted far go trying avoid setting hook api concrete could find prevent immediate pain people using plugins people using pointer events using pep adding pointerid wo nt help take advantage pep would like see need figure get event object hacking business", "d": "5/2016"}, {"body": "sorry long delay got buried inbox people using pointer events using pep adding pointerid wo nt help take advantage pep would like see definitely help people using pep would nt take advantage inside pep allow users use directly long loaded pep page small section pep readme using pep jquery show simple example cares coordinates special work however two common pointerspecific properties people check love see included seems like minimum requirement since allow users determine events pointer defer listing properties work require using jquery api docs specifically version dependent changes time direct impact pep zero code changes docs changes indirect impact developer ergonomics real want push pointer events much reduce friction much possible love see included core create plugin adds properties users weigh pros cons decide want benefit accessing properties directly expect become issue implementations longer behind flag every browser except safari properties exposed automatically users add pep get support safari certain properties wo nt exist point may want include properties plugin directly pep", "d": "5/2016"}, {"body": "important realize jquerywhen calls analogous calls analogous thanks replies like point really analogous currently returns wrapped promise nt wrap existing promises argument reliance unwrap secondary thenables seems apply least much one argument single one mean say gotten abdc example instead acdb could understand reasoning disagree decision currently justification behavior seems reversed abcd synchronous behavior secretly hoping adbc asynchronous behavior would secretly disapprove abdc inconsistent behavior single argument vs multiple single promise treated specially like would disapprove acdb inconsistent behavior single promise treated differently illogically current behavior object think clearly bug currently closing ask naively two different methods could would would coerce sole argument promise coerces via need could keep synchronous behavior intact given promises method available", "d": "5/2016"}, {"body": "state would execute asynchronously seems returns correct result adbc asynchronous behavior would secretly disapprove would spirit spec line implementations two different methods guess could consider adding new method definitely", "d": "5/2016"}, {"body": "like point really analogous currently returns wrapped promise nt wrap existing promises fixed argument reliance unwrap secondary thenables seems apply least much one argument single one focus fixing alreadybroken singleargument case certainly valid point nt implement nt want totally destroy access secondary thenables trick use analogous case nt work resolution value array closing ask naively two different methods could would intend later coerces via need could keep synchronous behavior intact given promises method available nt see happening promises resolve thenables", "d": "5/2016"}, {"body": "state would execute asynchronously seems state returns correct result sure follow would expect result mozilla doc states promiseresolve value method returns promise object resolved given value value thenable otherwise returned promise fulfilled value would expect equivalent corresponding state resolved pending adbc asynchronous behavior would secretly disapprove would spirit spec line implementations spec implementations worry handlers run asynchronously state promise methods talk synchronous behavior using jquery would still asynch line implementations even abcd case", "d": "5/2016"}, {"body": "fixed sure made clear returns exact object new promise returns different object nt even could keep synchronous behavior done intact given promises state method available nt see happening promises resolve thenables indeed would special case jquery promises method thenables might mistaken think possible maintain synchronous behavior promises etc fully promisesa compliant otherwise rewrite combines synchronous sometimes asynchronous validations elegantly see end complex combination promises comprised solely synchronous checks asynchronous one somewhere genuine use case elegant solution purely asynch promises cry", "d": "5/2016"}, {"body": "mozilla doc states promiseresolve value method returns promise object resolved given value value thenable otherwise returned promise fulfilled value would expect equivalent corresponding state resolved pending promises threestate pendingfulfilledrejected additional concepts settled pending resolved either settled locked match state another thenable either case ignoring resolvereject attempts resolved state completely independent resolved promise may pending fulfilled rejected jquery deferreds threestate pendingresolvedrejected unfortunate resolved state maps fulfilled fair first rate state pending execution context stack fully clears methods talk synchronous behavior using jquery would still asynch line implementations even abcd case right deferred deferred nt unwrap thenables requested work around deferred behavior better track sure made clear returns exact object new promise returns different object nt even still returns new object get point suitably distinguished could reconsider jquerywhen always returns new deferred decision sure functionality worth size though indeed would special case jquery promises method thenables tries guarantee promisesa compatibility ca nt blindly passes eg jquery deferred could pass deferreds would require way identifying eg changing factory inheritance model otherwise rewrite combines synchronous sometimes asynchronous validations elegantly see end complex combination promises comprised solely synchronous checks asynchronous one somewhere genuine use case elegant solution purely asynch promises cry describe exactly need us may well wrong tool job especially given deferred still sometimes synchronous", "d": "5/2016"}, {"body": "promiseresolve promisefromotherrealm still returns new object get point mmm think went far analogies confusing would propose eliminate looks analogues also state resolved next tick also wo nt would propose analogie map states looks clear seems different name thing describe exactly need us good discussion though alphas betas right think need make consistent", "d": "5/2016"}, {"body": "right think need make consistent word consistent get us nowhere many ways consistent method like disjoint things even marcandre mentions would need special case jquery deferred order get output behavior wants another way say input nt handled consistently smilingimp closing ask naively two different methods said completely agree plan two methods separate two behaviors trying accomplish already prepared code input good help us decide additional methods need would glorious ship get feedback missed describe exactly need us right question rewrite bit hyperbolic solution avoid rewrite nt even need inside jquery file could small plugin retains whatever need old behavior better worse async behavior developers going expect future going confuse people things differently even people think better", "d": "5/2016"}, {"body": "really appreciate consideration replies even though known jquery contributor smile rate promiseresolve jquerywhen state pending execution context stack fully clears believe incorrect state fulfilled meant used jquery resolved sorry confusion state pending next tick consequence browsers asynch api anyways would execute exactly moment written promise synchronous api matter wish would execution time native promises ie next tick using instead would also lead execution time executes synchronously ie immediately describe exactly need us tldnr short code like change returns promise behaves exactly like currently gladly provide pr ok quite true like execute immediately also longer think desire api compatible native looks like introduce equivalent good wish additionally jquery maintains synchronous api would fulfill jquery promises thenables soon possible combination already fulfilled jquery promises yield already fullfilled promise note exactly currently except believe special treatment jquery promises implication asynch api since fulfilled promises still executes next tick moreover special treatment jquery promises jquery api similar special treatment native promises note already special treatment outputs acb like much hope change output using consistent cab want", "d": "5/2016"}, {"body": "looks analogues also state resolved next would propose analogie definitively resolves scalar like resolve array", "d": "5/2016"}, {"body": "thanks much elaboration marcandre promise synchronous api matter wish would execution time native promises ie next tick using instead would also lead execution time executes synchronously ie immediately wish additionally jquery maintains synchronous api would fulfill jquery promises thenables soon possible combination already fulfilled jquery promises yield already fullfilled promise note exactly currently except possible would match deferred migration treatment thoughts dmethvin markelog", "d": "5/2016"}, {"body": "wrote analogie equvivalent even used different output fine possible would match deferred migration treatment thoughts dmethvin markelog would purpose make faster guy especially browser environment besides really easy make plugin really oppose though would want make close standard possible make output predictable", "d": "5/2016"}, {"body": "quick search bluebirdqwhen ca nt find anything like thought would favour deprecating make friendly also reading spec promise promise represents eventual result asynchronous operation returns promise asynchronous seems would would moving although open interpretation spec nt seems ideal", "d": "5/2016"}, {"body": "seems would would moving although open interpretation spec nt seems ideal spec states always run callback asynchronously would change agree compatible spec", "d": "5/2016"}, {"body": "markelog missing point speccompliant backwards compatible deferred pretty much maintained synchronicity likewise multiargument question noargument singleargument", "d": "5/2016"}, {"body": "agree compatible spec would compatible spec would moving away spirit practise implementations point changing behaviour deferreds opposite would treat method legacy legacy could deprecated future eventually replaced native promises would move away spec means would harder harder pretty much maintained done synchronicity could synchronous still sometimes could asynchronous case could always async since promises deferred computations least perceived way whole point making always async give users predictable behaviour async possible async operations oppose logic beginning wrong community adopted liked different behaviour seems story yeah could would compatible spec nt see point", "d": "5/2016"}, {"body": "possible would match deferred migration treatment thoughts dmethvin markelog suppose could treat like confusing api deprecate seal cellar cask amontillado case could value backcompat consistency spec compliance sets stage remove support via migrate", "d": "5/2016"}, {"body": "dmethvin seems radical solution plenty legitimated cases appropriated personally nt find confusing like nt perceive confusing since proposition ticket adhere logic every implementations right transitive state understandable since pretty big rewrite internal logic confusing resolving ticket intendented would solve consistency issue without introducing new quirks", "d": "5/2016"}, {"body": "would treat method legacy legacy could deprecated future eventually replaced native promises one possible avenue solution embrace synchronous api async one wrong community adopted liked different behaviour found original thread decided everyone agrees behavior well defined community wasis quite split synch asynch reason asynch behavior choice seems less error prone although nobody pointed actual real life error caused synch evaluation moreover nt good usecase presented synchronous api time sadly cost preventing legitimate uses underestimated imo", "d": "5/2016"}, {"body": "nt think want make break marcandre use case much right different way plus break many usages even point synchronous sometimes resolves array values sometimes like sometimes like sometimes takes multiple ticks resolve inputs sometimes question explicitly documentation already specifies lot special cases save work docs compatibility issues making continue work way special cases need expand explanations happens single thenable mix multiple thenables deferreds luckily looking multiple deferreds seems much less likely depended synchronous one possible avenue solution embrace synchronous api done pipe async one case jquery today although like resigned coexistence embrace smilecat everyone agrees behavior well defined community wasis quite split synch asynch perhaps still good place litigate point would nt say would still favor deprecating since many crazy exceptions make hard use consistently", "d": "5/2016"}, {"body": "closed", "d": "5/2016"}, {"body": "never worked never sorry naming node properties already exist never good idea", "d": "5/2016"}, {"body": "okay confused likely fault setting existing property name equal name another property node trying reuse existing property node another purpose ie action trigger browsers turn name attribute actual node property something", "d": "5/2016"}, {"body": "oh explained many times many different occasions recent although better read spec", "d": "5/2016"}, {"body": "ok thank link basic rule never use known idl property name actual content attribute name element constructing html understood sort cheers", "d": "5/2016"}, {"body": "see also explains tries detect problems", "d": "5/2016"}, {"body": "discuss want make async sync agree arguments nt affect", "d": "5/2016"}, {"body": "important realize calls analogous calls analogous unfortunate similarity led shared function name jquery distinct although remains eager generalcase necessarily reliance unwrap secondary thenables nt want introduce exception really would introduce inconsistency also disagree promisesa insufficient justification abandon compatibility demanded long", "d": "5/2016"}, {"body": "know rightly railed several times lazy dig implementation special case one argument rather plain value return argument accepting type ables arguments would make behavior even bizarre passed able need convert meet api contract right means always hidden async inside tearyourhairout behavior edit said", "d": "5/2016"}, {"body": "always async right", "d": "5/2016"}, {"body": "jquerywhen always async right answer discuss irc seems motivation make call always async regardless arguments opened different issue", "d": "5/2016"}, {"body": "hi firstly right place questions best place forums jquery irc channel second version support ie lt need custom build created latest third custom build instructions documented readme", "d": "5/2016"}, {"body": "data type specify request success data converted please answer questions issue template future", "d": "5/2016"}, {"body": "dmethvin nt specify datatype picked default value also response data rails server response looks like sending ajax request save data expecting anything response except headers", "d": "5/2016"}, {"body": "headers probably specifying response json data type needs parsed parsing fails guess triage forum stackoverflow actually determine bug open new ticket fill information issue template", "d": "5/2016"}, {"body": "yikes thanks report timmywil file nt even exist version seems like release done nonfresh clone repo files built seems weird jqueryrelease runs fresh repo clone happen marking blocker nt extra files different beta version", "d": "4/2016"}, {"body": "applies", "d": "4/2016"}, {"body": "oh know happened pushed dist ran publish dist repo slim files sitting previous commits", "d": "4/2016"}, {"body": "ah ok guess fix would kill similar issues future would adding new files", "d": "4/2016"}, {"body": "using local clone jquery build using publishing fresh clone based quick glance release script", "d": "4/2016"}, {"body": "scottgonzalez fresh clone nt overwrite slim files", "d": "4/2016"}, {"body": "another solution probably simpler would add files npmignorebowerjson ignore nonmaster branches", "d": "4/2016"}, {"body": "another solution probably simpler would add files npmignorebowerjson ignore nonmaster branches futureproof think ensure contains generated current build", "d": "4/2016"}, {"body": "ok perhaps whilelist instead blacklist files property", "d": "4/2016"}, {"body": "nt want remove whole dist copying would nt work windows rsync feature removes files nt copied", "d": "4/2016"}, {"body": "fix versions files state version", "d": "5/2016"}, {"body": "beruic source map file means uses version source map spec ie latest one fine unless talking sth else", "d": "5/2016"}, {"body": "good work guys mai timmy willison notifications githubcom wrote closed via receiving authored thread reply email directly view github", "d": "5/2016"}, {"body": "cdnjs slim files still header", "d": "5/2016"}, {"body": "beruic mean files nt remove republish files already published elsewhere think something like forcepush public repo github pretty disruptive many cases would even work cdns set long expiration dates cached files browsers proxies pull cache regardless whether file updated removed fix committed release process sure problem happen future got new release coming next couple days", "d": "5/2016"}, {"body": "problem miss type somthing", "d": "4/2016"}, {"body": "possible nt need code maybe even depending pagexy provided correct seems covered even removing would better fixing", "d": "4/2016"}, {"body": "removing would better fixing agreed", "d": "4/2016"}, {"body": "think remove fill seems full browser support let discuss monday wo nt submit pr conflict jbedard pr might well create one top", "d": "4/2016"}, {"body": "hey anseki wanted confirm problem exist values browser calculates correct remove calculation proposed problem unless browser nt support", "d": "5/2016"}, {"body": "think native event object correct updated code jsfiddle least seem correct current firefox chrome ie", "d": "5/2016"}, {"body": "awesome thanks confirmation", "d": "5/2016"}, {"body": "fixed details commit message", "d": "4/2016"}, {"body": "awesome thanks", "d": "4/2016"}, {"body": "method nt take arguments disabling notice still click submit button second time browser", "d": "4/2016"}, {"body": "thank pointing dmethvin fixed code updated jsfiddle link original comment see real bug trying report please take second look", "d": "4/2016"}, {"body": "problem cert site may complicating things switched http pressed button result via fiddler looked correct although site nt open think would best debug elsewhere stackoverflow point really clear problem involves jquery either cause solution ok server nginx date thu apr gmt contenttype applicationjson contentlength connection keepalive accesscontrolalloworigin accesscontrolallowcredentials true args data files form q xxxx headers accept texthtml applicationxhtmlxml imagejxr acceptencoding gzip deflate acceptlanguage enus en contentlength contenttype applicationxwwwformurlencoded host pragma nocache referer useragent windows nt touch like gecko json null origin url", "d": "4/2016"}, {"body": "thanks taking look", "d": "4/2016"}, {"body": "nt seem related disabling button removed jquery code still displays blank page ie see problem ie nt see ie edge", "d": "4/2016"}, {"body": "thank mgol looks like poor choice test ran jsfiddle monitored fiddler found jsfiddle successfully posts data ie means jquery contributed data getting lost way find different http receiving system ask anyone testing use fiddler wireshark", "d": "4/2016"}, {"body": "mean time take dmethvin advice posted stackoverflow", "d": "4/2016"}, {"body": "special characters must quoted see others", "d": "4/2016"}, {"body": "versions jquery jquery ui several years old bug tracker latest released versions unable upgrade probably get help stackoverflow", "d": "4/2016"}, {"body": "thanks want make sure clear later versions jquery working code earlier versions working put stackoverflow", "d": "4/2016"}, {"body": "getting position relative document calculate based borderbox ie outline includes border jquery code predates existence several years may overlooked also html usually border suspect nt reported noticed actually bug feel left top correct result useful html element border would position inside border outside nt know quick search specs nt help need people actually understand got maybe mikesherov", "d": "4/2016"}, {"body": "odd anything add margins boxsizing context filed firefox bug clientleftclienttop issue", "d": "4/2016"}, {"body": "borderpadding marginborderpadding always made things tricky defining relative document means correct behavior values match fixed positioning ie original proposal issue", "d": "4/2016"}, {"body": "see one important points said positioning css uses borderbox therefore jquery methods use css positioning incompatible method method ie setter also incompatible example css html border solid red body border solid blue margin padding position absolute width height backgroundcolor rgba translucent green left top backgroundcolor rgba translucent red gave given method method expected positioned position chrome ie firefox result firefox seems correct setter method seems subtract returned passed passed already subtracted subtracted twice therefore element positioned shifted point", "d": "4/2016"}, {"body": "also might influenced native nt calculated using element like example browser nt support correct jquery returns mouse positioned lefttopcorner browser returns correct jquery returns feel correct result nt know recent browser nt support", "d": "4/2016"}, {"body": "let keep issue focused seems getter setter use origin top left corner document element outer edge border margin might applied document element fulfilling may require feature detect style computation work correctly firefox would like try pr anseki", "d": "4/2016"}, {"body": "ok make new issue subtracting mistake code fixed easily method subtract firefox accidentally bug therefore nt need consider bug remove code subtract yes write pr already removed code subtract testing issue send issue think clear subtracted found issue staabm said returns coordinates relative document outline document document jquery think think document least person wrote code think thinking much", "d": "4/2016"}, {"body": "exploration confirmed four engines respect document element margin well independently absolute positioning revise operate relative document using outermost absolute positioning origin necessarily inside border box document element therefore probably insufficient anyway pr add tests nonzero nonpixel margin border separately together break existing tests would nt surprise second point nt hold bad assumptions", "d": "4/2016"}, {"body": "method method use values returned understand sufficient tests required hope someone write pr nt know rules styles testing jquery well", "d": "4/2016"}, {"body": "new tests limited similar existing ones test suite runs inbrowser loading testindexhtml willing help care try", "d": "4/2016"}, {"body": "thank care smiley sorry english poor send pr later way think tests contain cases element positioned affected element positioned relative ie element nt result value include anyway try write tests", "d": "5/2016"}, {"body": "thank", "d": "4/2017"}, {"body": "please search existing issues reporting new one duplicate amp", "d": "4/2016"}, {"body": "thanks links searched filing new bug true", "d": "4/2016"}, {"body": "wonder tools like", "d": "4/2016"}, {"body": "pr strips pragma nonhacky way", "d": "4/2016"}, {"body": "validate ast sounds awfully like linter think meant check build ast", "d": "4/2016"}, {"body": "markelog updated title amp description", "d": "4/2016"}, {"body": "also sounds like could proven viable implemented uglify side like self check sorts could run correct option passed since would reflect performance mishoo think", "d": "4/2016"}, {"body": "markelog sure understand question agree mgol reported valid issue uglifyjs already pr fixes nt time look yet though please test possible", "d": "4/2016"}, {"body": "sure understand question idea currently considering implement jquery build process uglify minifies source run parser try build ast ast builded could sure obvious syntax errors yes run minified version test suite various set browsers browserstack mentioned error noticed point almost reached cap service preferred proposed approach might caught errors early stage automated yes errors revealed stage seems like wondering second parser run could introduced uglify side self check overall think idea worth something option run linter minified version limited amount enabled rules running linter minified version sounds kinda", "d": "4/2016"}, {"body": "second uglify parse would caught issue use strict function window function uglify parses without error fullfledged linter different parsing code base testing phantomjs best bet", "d": "4/2016"}, {"body": "issue nt seem actionable seems requires research move roadmap", "d": "5/2016"}, {"body": "move roadmap done", "d": "5/2016"}, {"body": "case using specific list negated regexp right problem updating per discussion understand standards define whitespace differently purpose fixing class methods nt matter", "d": "4/2016"}, {"body": "use purposes beyond parsing list classes removing multiple attributes removing multiple data properties parsing callbacks flags addingremoving multiple events specifying multiple animatable properties separating elements ajax datatypes processing chains fine adopting htmlcss whitespace definitions updating accordingly", "d": "4/2016"}, {"body": "whatever chosen sure add unit tests issues nt creep later fix change rnotwhite sufficient fix issues classes however possible may result unicode errors usages unicode space characters used separating characters", "d": "4/2016"}, {"body": "zzzzbov want create pull request sounded possible might need separate patterns different definitions whitespace different specs would something worth researching part pr", "d": "4/2016"}, {"body": "dmethvin want create pull request really actually rather htmlcss specs updated appropriate selector whitespace would make sense notice literally one else using jquery ran issues behavior reported reason ran went looking jquery could use would significant data savings given many times downloaded daily", "d": "4/2016"}, {"body": "okay issue closed leave open something need jquery", "d": "4/2016"}, {"body": "dmethvin nt know right answer ca nt decide jquery team whether appropriate diverge explicitly specified behavior whether important accurate leave open something need jquery either way change needs made either used used currently usage mixed someone needs pick one run", "d": "4/2016"}, {"body": "actually rather htmlcss specs updated appropriate selector whitespace approximately zero chance happening since incorporates reference unicode separator space zs general category nonstatic opposed permanently fixed set spacetabline feedform feedcarriage return used html css since crossspec agreement whitespace separates tokens think follow suit mentioned already use similar six regular expression patterns including rclass match specs updating wo nt change gzipped size byte two actually slightly likely reduce size increase expense removing two data properties contend bug anyway since documentation specifies spaceseparated", "d": "4/2016"}, {"body": "approximately zero chance happening since incorporates reference unicode separator space zs general category nonstatic pretty certain html css specs handle since crossspec agreement whitespace separates tokens think follow suit mentioned ca nt wo nt disagree approach still maintain would convenient normalize whitespace jquery nt project sorts issues fixing browsers use generally expected behavior would help make class errors go away paving cowpath", "d": "4/2016"}, {"body": "related", "d": "4/2016"}, {"body": "sounds like good candidate", "d": "6/2016"}, {"body": "normally opposed explicitly introducing exceptions eliminating arbitrarily long delay mistake feedback seems really valuable recommend adding jqueryeventadd fsateler care submit pr", "d": "4/2016"}, {"body": "think already received similar issues dmethvin would tend agree assumption though", "d": "4/2016"}, {"body": "markelog indeed searched find see consensus seems check added claim made console erroneous selector case selector instead triggers null reference exception error jquery code selector probably separate bug needs fixing moreover event supposed catch special condition prevent navigation debugging becomes doubly hard prepare submit pr", "d": "4/2016"}, {"body": "think would easier see advantages drawbacks pr would nt mind seeing proposed solution unit tests one think offhand custom selector extensions might yet place probably rare", "d": "4/2016"}, {"body": "ok prepare pr", "d": "4/2016"}, {"body": "fsateler cool check", "d": "4/2016"}, {"body": "sorry newbie question run testsuite appear run unit tests", "d": "4/2016"}, {"body": "fsateler need working apachephp setup see one domain pointed jquery repository open browser want check", "d": "4/2016"}, {"body": "runs basic suite includes promisesa nodejs affected real proof functionality takes place loading qunit suite inbrowser since issue tightly scoped use speed things even access directly filesystem nt want set web server", "d": "4/2016"}, {"body": "labelling behavior change since potential throw unexpected errors case event delivered page lifecycle pr looks good think land objections lands add note upgrade guide", "d": "5/2016"}, {"body": "behavior change seems bit much since affects invalid input definitely favor including fix", "d": "5/2016"}, {"body": "thought cry discussion specifically pointed wanted know cases start throw nt one better safe sorry add note upgrade guide nobody complaining changed behavior nt tell", "d": "5/2016"}, {"body": "definitely", "d": "5/2016"}, {"body": "forget bug firefox see", "d": "4/2016"}, {"body": "sure clear put together example jsbin jsfiddle thanks", "d": "4/2016"}, {"body": "works", "d": "4/2016"}, {"body": "hi old version jquery years old since stopped appending sourcemappingurl pragma completely future please upgrade jquery amp see problem still exists reporting bug thanks", "d": "4/2016"}, {"body": "thank much post team update following cheers", "d": "4/2016"}, {"body": "possibly related", "d": "4/2016"}, {"body": "thanks opening issue affects ie lt perhaps could create reduced test case help assess issue", "d": "4/2016"}, {"body": "honestly really short replicating issue js developer wordpress core developer could help especially someone coded knows code could help want experience issue provided instructions replicate sorry ca nt help", "d": "4/2016"}, {"body": "affects ie lt entirely true also issue browsers indeed due css triggering falsepositive check whether use ie lt default logic test specific css jquery also run ie lt logic modern browsers issue thus visible browsers ie lt edit reading back fix issue found related global remember correctly breaks test due test course also global styling thus wo nt expected size", "d": "4/2016"}, {"body": "set reduced test case js bin confirming bug", "d": "4/2016"}, {"body": "swissspidy thank creating really seems replicates issue simple way", "d": "4/2016"}, {"body": "also encountered related creating nodes one fails creating node tested chrome traced back happening fiddle", "d": "4/2016"}, {"body": "radugroza nt check broken apply form styling tables example feature detection test jquery fails turn means legacy code path normally run ie lt gets run tests broken described two issues first one specifying styling breaks test check browser returnscalculates corrects sizes ie lt return broken sizes css table means jquery acts browsers report broken size second issue check legacy code path broken means checks element types nt page return true must false", "d": "4/2016"}, {"body": "seems two issues yikes scheduling thanks report", "d": "4/2016"}, {"body": "modified radugroza jsbin compare instead compare line clear targets fine", "d": "4/2016"}, {"body": "fixed", "d": "5/2016"}, {"body": "thank fixing", "d": "5/2016"}, {"body": "yes thankyou", "d": "6/2016"}, {"body": "potential duplicate", "d": "4/2016"}, {"body": "fixed problem code js file jquery see setting give error message chrome href href href href", "d": "4/2016"}, {"body": "noted invalid selectors identifiers allowed unquoted values need wrap quotes", "d": "4/2016"}, {"body": "got external report well far understand regression added needs review label might want", "d": "5/2016"}, {"body": "pr please review want get thanks clear description situation needed fix", "d": "6/2016"}, {"body": "reading issues filed agree explicit seems like reasonable requirement really want context", "d": "4/2016"}, {"body": "code ca nt imagine useful purpose promise available context one would always chain promise directly create new deferred involve code produces new promise one would nt call inside thencallback promise however one jqueryspecific use case applies inside callbacks nt expect advanced projects would nt surprised see simple projects js return jquerypromise function foo showspinner foo always function hidespinner thisstate resolve stuff seems awkward store promise variable", "d": "4/2016"}, {"body": "following use case rather counterintuitive migrate using text initial attempt tried previously believed kept current state nonpromise returned plain value resolved resolved plain value rejected rejected creating explicit deferred needed change type resolved rejected however case following fix needed works recording case helps someone else case documentation improved", "d": "11/2016"}, {"body": "would current docs looking maybe", "d": "4/2016"}, {"body": "say collection elements based math code would like apply style specific elements collection currently call eq many times eq accept array easily currently use", "d": "4/2016"}, {"body": "stackoverflow question let take", "d": "4/2016"}, {"body": "request make powerful able reduce elements array tedious manually", "d": "4/2016"}, {"body": "quite sure asking talking people stackoverflow help formulate clear description looking make request keeping guidelines new features mind likely implemented helpful stackoverflow answer plugin", "d": "4/2016"}, {"body": "yeah guess write plugin worth trouble bickering", "d": "4/2016"}, {"body": "think use cases nt meet new features guidelines writing plugin easy passing array would cover use cases anyway say want filter every element etc actually easy even without plugin nt think feature would bring lot value point", "d": "4/2016"}, {"body": "mgol long supported browsers long time probably nonetheless wrote simple plugin since one think feature useful thank time", "d": "4/2016"}, {"body": "yay nt problem always passes array thought case would need passed nt", "d": "4/2016"}, {"body": "afaict defines type whitespace optional safe remove filed bug safariwebkit would good know added behavior assuming intentional input padded", "d": "4/2016"}, {"body": "input nt meant padded filed bug safari webkit misinterpreting spec afaik enforcing spec strictly needed perhaps instead give user warning input nt meant padded however thought would useful jquery team note browsers accept padded input however safari may domain product", "d": "4/2016"}, {"body": "filed bug safari webkit misinterpreting spec afaik enforcing spec strictly needed interpreting rfc says ows optional whitespace ows rule used zero linear whitespace octets might appear protocol elements optional whitespace preferred improve readability sender generate optional whitespace single sp otherwise sender generate optional whitespace except needed white invalid unwanted protocol elements inplace message filtering note explicitly say sender generate optional whitespace caller jquery method sender view jquery changing header caller provided note term specific meaning rfc must still think safari violating spec spec even give one case extra whitespace may validly need added", "d": "4/2016"}, {"body": "great question stackoverflow bug tracker", "d": "4/2016"}, {"body": "use setting element state see info works fine", "d": "4/2016"}, {"body": "run tests see", "d": "4/2016"}, {"body": "timmywil ok run tests using stepbystep procedure reproduce test using reason closing issue still clear reproduce tests using", "d": "4/2016"}, {"body": "run issue got closed bug", "d": "4/2016"}, {"body": "open issues jquery code issues need addressed nt think applies also mean discussion general support assistance found forums jquery irc channel familiar grunt grunt getting started guide might good place start", "d": "4/2016"}, {"body": "mgol directory commands run downloaded repo using git cd directory tried ran npm install first installed gruntcli bintestsjquerytest nodejs promisesaplusadapterjs jsdom onward works iojs githubcomtmpvar syntaxerror unexpected token illegal modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs moduleload bintestsjquery nodejs grunt test needs adjusted commands run within commands", "d": "4/2016"}, {"body": "timmywil tried irc yesterday robertmaxrees believe correct user name helpful referred jquerydev channel though users replied query try convey jquery code broken rather independently verify jquery passes promisesa compliance tests ability reproduce results described blog post still able run tests properly missing erroneous commands tried", "d": "4/2016"}, {"body": "using old version nodejs need least node lts run tests also run said adapter file directly nodejs shell runs execute accepts javascript input valid javascript code run bash basic nodegruntnpmrelated questions though please follow stack overflow irc channel github bug jquery fixed", "d": "4/2016"}, {"body": "mgol able reproduce tests", "d": "4/2016"}, {"body": "timmywil update able reproduce tests using", "d": "4/2016"}, {"body": "normal wrapinner wrapall think cases already covered write plugin", "d": "4/2016"}, {"body": "oh yes sorry nt saw methods", "d": "4/2016"}, {"body": "jquery generally guarantee specific behavior passed invalid input passing nested arrays expect", "d": "4/2016"}, {"body": "appending nested arrays html strings code like following expected every html string arrays would appended element misunderstood spec maybe already handles one level array htmlstringjquery seems like wrapping contents array nt make difference guessed wrapping arrays array ok well found comment source code seems trying flatten least one level nested array thinks natural consistent current bahaviour amp implementation flattens depth nested arrays", "d": "4/2016"}, {"body": "reason flattens one level get free via allow infinite number levels would traverse entire set nested arrays adds complexity rare case data structure like traverse flatten trying use", "d": "4/2016"}, {"body": "ok makes sense thanks", "d": "4/2016"}, {"body": "error message sounds like dup", "d": "4/2016"}, {"body": "pseudo selectors accessible add nt ever documented specifics selectors might default reality doubt kind performance bottleneck", "d": "4/2016"}, {"body": "dmethvin ah ok nt realize accessible sorry catching sure performance bottlenecks per se feels silly rewrite code already available vanilla js context use wrapper outside jquery scope unnecessary least feels context safe write pluginhelper function using exprfilters object", "d": "4/2016"}, {"body": "use probably let others think public plugin need think things like whether people using alternate selector engine whether pseudos might deprecated future", "d": "4/2016"}, {"body": "yeah use given extensible api manageable even removed getting simple short syntactic sugar base along lines gives eventcurrenttarget sure appeals others find elegant along associated perf benefits also filter objects essentially one best use futureproof compatibility", "d": "4/2016"}, {"body": "hexalys see recommended one", "d": "4/2016"}, {"body": "slightly aside topic exposed well nt recommended andor documented method simply read element attributes similar context", "d": "4/2016"}, {"body": "getting dom element jquery object one fastest paths code couple imo reason short circuit clutter docs provide microoptimizations since exposed guess close nt think anything code side least", "d": "4/2016"}, {"body": "agreed nt see us adding api however might good candidate plugin", "d": "4/2016"}, {"body": "fixed master reluctance backport think wait", "d": "4/2016"}, {"body": "behavior present jquery versions released years ago ie latest one versions diverged rather leave tell people upgrade comes fix critical issues issue hardly critical", "d": "4/2016"}, {"body": "btw safari safari suffers well property fixed safari technology preview", "d": "4/2016"}, {"body": "agree since fixed master close", "d": "4/2016"}, {"body": "add test though", "d": "4/2016"}, {"body": "markelog bad idea include builtins test", "d": "4/2016"}, {"body": "late already committed think mean host objects couple tests mind followup", "d": "4/2016"}, {"body": "meant host objects see tests already could add maybe", "d": "4/2016"}, {"body": "regression work previous version jquery docs say seem indicate result incorrect elements document considered hidden jquery way know visible appended document since depends applicable styles think need check ensure disconnected", "d": "4/2016"}, {"body": "yes forgot mention currently using version work expected", "d": "4/2016"}, {"body": "confirmed test case", "d": "4/2016"}, {"body": "working fine therefore recent regression", "d": "4/2016"}, {"body": "also experiencing issue bisected", "d": "4/2016"}, {"body": "fixed", "d": "5/2016"}, {"body": "could create test case jsfiddlenet jsbincom also assume mean works fine edge edge mode ie thing ie edge", "d": "4/2016"}, {"body": "could create iframe page allowfullscreen attribute jsfiddlenet made sample github pages instead ie windows outputs ie edge windows outputs", "d": "4/2016"}, {"body": "ref pr feature check would pretty much impossible think blindly multiplying see fullscreen mode maybe fixed", "d": "4/2016"}, {"body": "fired test case fails click second button see ie windows means bug fixed ie nt know fixed windows amp windows variants ie least browserstack still bug definitely fixed windows jacobrossi said going fix bug purely based comment landed workaround fixed contrary declaration", "d": "4/2016"}, {"body": "added milestone nt lose microsoft fix fix going stay revert fix let people deal still like someone ieedge team give light jacobrossi jdalton could help us", "d": "4/2016"}, {"body": "yep poke around poke around mean ping jacob p", "d": "4/2016"}, {"body": "seeing windows behave incorrectly microsoft edge windows behaving correctly looks like fixed edge screen display dpi right value", "d": "4/2016"}, {"body": "jacobrossi issue ie setting values times small started multiply fullscreen mode iframes code fact see values times large ie means ie got fixed workaround broken test case uses jquery includes workaround", "d": "4/2016"}, {"body": "test case repo viewed via rawgitcom click second link ie see red background means workaround breaks ie instead fixing", "d": "4/2016"}, {"body": "got ok confirm windows works differently", "d": "4/2016"}, {"body": "nt vm current windows amp ie browserstack version still bug might date", "d": "4/2016"}, {"body": "ok spin patched vm see", "d": "4/2016"}, {"body": "giving incorrect results due patch windows would indicate bug fixed point", "d": "4/2016"}, {"body": "ok thanks linked clones parallels could get ie windows machine running pretty quickly bug existed expected ie longer exists latest version windows jacobrossi could check fixed despite earlier claims fix going stay need revert workaround would also mean asking browserstack update ie copies test ies behaving consistently", "d": "4/2016"}, {"body": "jacobrossi since seems fixed windows amp windows versions ie going assume likely fixed windows well revert hacky workaround still love hear confirmation fixed happened could share great", "d": "4/2016"}, {"body": "fix landed master amp", "d": "4/2016"}, {"body": "anyone know exactly cumulative update fixed problem", "d": "6/2016"}, {"body": "nt get answer microsoft unfortunately find please post information ticket", "d": "6/2016"}, {"body": "might issue okay leaving", "d": "4/2016"}, {"body": "work around unit test see get complaints", "d": "4/2016"}, {"body": "see pr incoming fix rather hacky way still sure implications code field", "d": "4/2016"}, {"body": "closing unit tests longer race condition see code expects field", "d": "4/2016"}, {"body": "duplicate need quote selector", "d": "4/2016"}, {"body": "got thanks", "d": "4/2016"}, {"body": "thanks opening issue tested ie works expected need assistance please ask forums jquery irc channel", "d": "4/2016"}, {"body": "made screencast show problem please reopen bug", "d": "4/2016"}, {"body": "see behavior exactly without jquery jquery bug something work around", "d": "4/2016"}, {"body": "looks like callback invocation using instead would like open pull request", "d": "4/2016"}, {"body": "markelog fix making amp milestone reflect change", "d": "4/2016"}, {"body": "whereas master branch primary one change milestone clarifying", "d": "4/2016"}, {"body": "milestones used generate changelogs end users doesnt matter got fix separately fixed stays fixed older releases get milestone far also anyone one asking changed milestone without claryfing micha\u0142 go\u0142\u0119biowski", "d": "4/2016"}, {"body": "think correct course events important issue looks like fix needed whereas would incorrect assume fixed stays fixed would incorrect offensive commit done ported mentioned already released several versions prereleases releases nonetheless bug propose omit commit thereby deprive users information nt understand propose mislead users since assumed set milestone mistake purpose changed milestone commit changelogs milestone opinion set primary branch", "d": "4/2016"}, {"body": "disagree nt anything else add", "d": "4/2016"}, {"body": "thanks fix quick release app works", "d": "4/2016"}, {"body": "thanks opening issue works", "d": "4/2016"}, {"body": "timmywil please describe nt work browser using viewed jsbin shows issue empty object ff error chrome also missed point example html local file jsbin nt local try html file locally see firefox see chrome expect error thrown regardless browser file displayed", "d": "4/2016"}, {"body": "oh issue using file protocol would mean nt issue production code regardless qsa nt select anything nt think anything", "d": "4/2016"}, {"body": "timmywil oh issue using file protocol answering quote viewed jsbin shows issue empty object ff answer second statement regardless qsa nt select anything nt think anything well currently detecting never true everything worked correctly iframe always element therefore check could done jquery error could thrown true assume browser nt able read iframe", "d": "4/2016"}, {"body": "viewed jsbin shows issue empty object ff nt see", "d": "4/2016"}, {"body": "imo error thrown even though see error ff mac making insubstantial", "d": "4/2016"}, {"body": "see nt talking iframe selected talking contents empty looking something could feasibly fix understand suggestion nt think could reliably detect error thrown throw error whenever origins different method throws error browsers done using jquery methods like attr prop exceptions make answering questions complicated instance setting location crossdomain iframe valid think best leave error throwing browsers agree behavior difference odd would open bug ticket ff fix quickly enough time figured best way add error would nt needed", "d": "4/2016"}, {"body": "opened issue bugzilla let see happens", "d": "4/2016"}, {"body": "firefox following spec returning null crossorigin case webkit chrome violating spec", "d": "4/2016"}, {"body": "thanks bzbarsky chrome bug report", "d": "4/2016"}, {"body": "relevant part spec apparently obsolete", "d": "4/2016"}, {"body": "element obsolete everything element obsolete relevant part spec", "d": "4/2016"}, {"body": "woops thanks", "d": "4/2016"}, {"body": "thanks bug report place report jquery issues jquery ui ones go", "d": "4/2016"}, {"body": "thanks correction mgol raised following jqueryui issue", "d": "4/2016"}, {"body": "seems like side coin arguing regression fixed since changed behave way asking think already itoldyouso file smilecat think would best", "d": "4/2016"}, {"body": "updated emphasis added let stop mixing cast resolve operation operation nt even know primary function though ticket implicitly assumes latter suggestion another utility would used arrays explicitly implicitly assumes former maybe ca nt even stop could certainly pave way providing distinct functions eg short think split personality makes lost cause fixing plan make two signatures distinct source", "d": "4/2016"}, {"body": "yeah starting understand mess recommendation fix regression brings back behavior ctheiss nt like however refactor could get two newly named methods consistent semantics match could go following minorversion release ctheiss important note calling single known unnecessary wasteful unfortunately lot code led bad example", "d": "4/2016"}, {"body": "sure reading right thought might try wording original ask different way writes object console whatever parsed json writes array log first element object first example string jqxhr difference number arguments passed happens ajax deferreds far know instead write examples look", "d": "4/2016"}, {"body": "ctheiss returns extra properties methods jquery lt returns exact object passed returns exact object passed returns new tied two incoming ones lacking extra properties methods incoming jqxhr case needs figure get entire list results two args passes array back element array representing resolved results jsbin gave looks first arg one showing entire arg list may clearer", "d": "4/2016"}, {"body": "dmethvin thanks response think understand called directly arguments automatically unpacked whereas called arguments unpacked get mind args packed unpacked consistently cases since seems strange change code depending whether deferred wrapped understand dilemma either case different result", "d": "4/2016"}, {"body": "mind args packed unpacked consistently cases since seems strange change done code depending whether deferred wrapped agree referring actually serving two disjoint purposes one similar converts argument promise nt one already waits multiple promises resolve returns single promise representing results singlearg case trying starts get really silly either case different result long story tried clean resolve multiple values multiinput pass along sane way allows sort pass args resolved values last promise array element third arg matter many values first two resolved new standard resolve single value problem needing pass array never occurs", "d": "4/2016"}, {"body": "since change behavior intentional inclined leave asis", "d": "6/2016"}, {"body": "recently got similar request csp nonces submitter went dark rather trying support individually needing verify work across browsers maybe could treat like headers give general way put attributes script tag", "d": "3/2016"}, {"body": "request nt clear exact scenario use get script third party cdns want check integrity script need something like relatively new js reason ca nt chip", "d": "3/2016"}, {"body": "prefer add options let set attributes tag added dom something like would inject tag like suppose could well implementation would end mapping call anyway since additional information make way script transport", "d": "4/2016"}, {"body": "attribute would useless correct", "d": "10/2016"}, {"body": "markelog yes unfortunately another transportspecific setting would ignored transports nt need xhr", "d": "10/2016"}, {"body": "based way pr implemented set cause script request use script tag even crossdomain list attrs empty", "d": "3/2018"}, {"body": "jquery issue manifests plain javascript", "d": "3/2016"}, {"body": "correct thanks filed chromium bug report", "d": "3/2016"}, {"body": "issue fixed chrome current stable", "d": "4/2016"}, {"body": "think removal context could go along removal know odd context promise think deprecation sufficient notice removal context changes", "d": "4/2016"}, {"body": "ca nt", "d": "3/2016"}, {"body": "yeah could nt remove anyway like idea deprecating soon", "d": "3/2016"}, {"body": "fair enough let make source changes deprecate right instance moving deprecatedjs like leave change", "d": "4/2016"}, {"body": "think easier understand state short form countless code samples using different forms would stop working could introduce small barrier people starting jquery", "d": "8/2016"}, {"body": "realistically speaking going able remove nondistant future stating intent forms apis confusing hence discouraging use", "d": "8/2016"}, {"body": "rewrote api description reflect several different things including deprecations mentioned", "d": "8/2016"}, {"body": "landed docs change close", "d": "8/2016"}, {"body": "dom operation nt change context collection ensures becomes detached new content inserted dom members used cf modify collection follow linked stackoverflow answer use map suggested later", "d": "3/2016"}, {"body": "using method inside seems less performant using answer provided ticket jquery library useful dom functions yet nt simple thing outofthebox reason thanks", "d": "3/2016"}, {"body": "nt checked expect proper faster since dom manipulation required note behavior seek dom operation longer manipulates collection refer", "d": "3/2016"}, {"body": "actually map would nt work well since loose jquery data events bound element replace ca nt var set var data aon click gt alert set setmap function return b want fullon replace data events whole party", "d": "3/2016"}, {"body": "nt think common need evidenced lack complaints past years use case jquery primarily selecting manipulating dom elements document collection dom elements disconnected document put plain javascript array manipulate way use convert collection", "d": "3/2016"}, {"body": "ca nt yes", "d": "3/2016"}, {"body": "dmethvin use case using simple ui framework html template describes page components example page barname tabscount tabs open javascript file controller compile page template send result rendered components async needs ajas retrieve data server done components dom structure templates replace components screen real ones whole thing done page controller placing anything dom rather pass jquery collection rendered template upwards parent controller one renders page controller knowledge real browser dom collection associated page knows might might rendered nt important page controller loads needed components replaces elements known set needs replaced real databinded eventsbinded components hope explained situation well think trivial thing jquery replace one element set another keeping integrity collection would nt say course could turn collection intro real array iterate find thing want replace would nicer automatic thing writing jquery years nt think encountered amazed nt", "d": "3/2016"}, {"body": "maybe something like might extend jquery thing use", "d": "3/2016"}, {"body": "nice catch sowcow would like submit pr", "d": "3/2016"}, {"body": "yes looking forward", "d": "3/2016"}, {"body": "probably also modify ajaxjs check tomorrow", "d": "3/2016"}, {"body": "think done comment fixes needed", "d": "4/2016"}, {"body": "everyone agrees ready land land update upgrade guide submit docs ticket change version ugh guess also need migrate ticket", "d": "4/2016"}, {"body": "dmethvin", "d": "4/2016"}, {"body": "one thing realized tests covering case uses add test two asserts setting encode parameters properly sowcow would able use test template something similar pass one ajax parameters ensure encodes correctly swipe encoding cases existing tests", "d": "4/2016"}, {"body": "tomorrow", "d": "4/2016"}, {"body": "reference pr", "d": "4/2016"}, {"body": "sorry sowcow pinged since action item", "d": "4/2016"}, {"body": "sorry bit irrational tests ca nt snowman", "d": "4/2016"}, {"body": "jquery event handler object normalized jquery event original nonnormalized data events like real domrelated content right nearly always use trying unnormalize events makes things inconsistent major benefit attaching events via jquery first place since normalizing anything nt see one", "d": "3/2016"}, {"body": "thank quick reply actually goal use jquery eventhandler attachers especially convenience end understand point view admit benefit probably limited create inconsistencies instead shall write wrapper involve jquery", "d": "3/2016"}, {"body": "hardly leak yeah could improved", "d": "3/2016"}, {"body": "duplicate", "d": "3/2016"}, {"body": "note quotes fix", "d": "3/2016"}, {"body": "thanks opening issue however duplicate webpack bootstrap nt ways download jquery adding npm", "d": "3/2016"}, {"body": "said webpack usage instructions included npm package readme usage options apply bootstrap depending organize code nt think need mention one", "d": "3/2016"}, {"body": "oh okay well thank response", "d": "3/2016"}, {"body": "provide test case without scripts ideally site like jsbincom jsfiddle net ca nt run code snippets help debug", "d": "3/2016"}, {"body": "ping us find time complete ticket", "d": "3/2016"}, {"body": "sorry dropping ball insane hours work problem turned caused es scripts removed jquery started work es scripts termi instead using repo used official amp shims everything works", "d": "4/2016"}, {"body": "reloaded great assume builtins behave exception patching incorrect behavior builtin browser implementations ca nt cover various shims way many responsible implementing standard features close spec possible thanks update glad see worked end", "d": "4/2016"}, {"body": "fixed", "d": "3/2016"}, {"body": "leaving fix despite breaking change plans rereleasing version without fix", "d": "3/2016"}, {"body": "version released ca nt change release new versions", "d": "3/2016"}, {"body": "deprecate point easings jquery ui optimized size", "d": "3/2016"}, {"body": "npm module cdn distro easings", "d": "3/2016"}, {"body": "nt split module separate releases", "d": "3/2016"}, {"body": "deprecate point easings jquery ui optimized size also loosing speed front pretty heavily gdsmith would help us bring speed goodness core proposed", "d": "3/2016"}, {"body": "gdsmith around like fix release", "d": "4/2016"}, {"body": "averted gdsmith still like get update jqueryeasing", "d": "4/2016"}, {"body": "sorry guys missed boat yes happily accept pr", "d": "5/2016"}, {"body": "", "d": "6/2016"}, {"body": "sounds like plugin needs updated see", "d": "3/2016"}, {"body": "top level could nt already", "d": "3/2016"}, {"body": "example essentially handling guess reason would nt want key strokes bytes uglier code probably relevant reason dealing ambiguous variables consider following example happens frequently world javascript function widget options thisurl optionsurl thisparams optionsparams plain object method returns object widgetprototyperemotefunction function ajax url thisurl data thisparams could object method simply invoking would result error object passed find adding abstraction might seem like much repeated dozen times projects seems break model library abstract plugin less abstract implementation defined opinion natural place ambiguous entry point would library lesser note allowing function argument would result examples currently latter would work", "d": "3/2016"}, {"body": "opposed expanding input signature way dmethvin valuing consistency ie call anything serialization methods come think wonder much deprecate release cycle", "d": "3/2016"}, {"body": "agree dave richard", "d": "6/2016"}, {"body": "raf used jquery beta amp lines nt utilize see nonminified version", "d": "3/2016"}, {"body": "makes sense would like submit pr jtrumbull", "d": "3/2016"}, {"body": "yeah wanted confirm nt reasoning behind current setup", "d": "3/2016"}, {"body": "breaking change either needs land asap wait", "d": "4/2016"}, {"body": "pr looks good land", "d": "4/2016"}, {"body": "", "d": "4/2016"}, {"body": "nt think breaking change since return value function used instead function string still holds please make issue pr disagree", "d": "4/2016"}, {"body": "hmm ok maybe still best backport", "d": "4/2016"}, {"body": "fine", "d": "4/2016"}, {"body": "see point let call featurefix", "d": "4/2016"}, {"body": "thanks opening issue already fixed master duplicate", "d": "3/2016"}, {"body": "probably know answer want expose", "d": "3/2016"}, {"body": "also nt think mean internal use", "d": "3/2016"}, {"body": "might internal uses want double check one", "d": "3/2016"}, {"body": "really mean internal uses", "d": "3/2016"}, {"body": "need trim ajax argument way compatible html spec", "d": "3/2016"}, {"body": "need trim ajax argument way compatible html spec css selectors spec case fortunately shares html definition whitespace need need stop", "d": "3/2016"}, {"body": "oops wrong example abandon document spaceseparated values making best superfluous fact looks like call removed replaced nothing since subsequent ignore leadingtrailing space anyway", "d": "3/2016"}, {"body": "agreed need trim regex", "d": "3/2016"}, {"body": "want take nt time one well", "d": "6/2016"}, {"body": "jquery bug please ask help bootstrap plugins stackoverflow", "d": "3/2016"}, {"body": "cc jaubourg intended", "d": "3/2016"}, {"body": "afaik preferred current approach rewrite proposed back handled unwrapping difficult handle needs", "d": "3/2016"}, {"body": "native promises unwrap sure even possible get native promise parameter callback problem unwrapping attaching may change final result imo really unexpected compare unfortunately noticed late cycle may late may make breaking change thoughts jquerycore jaubourg would require trivial changes", "d": "3/2016"}, {"body": "familiar new deferred code nt think would hard detect input promise", "d": "3/2016"}, {"body": "intended compatibility loomed much heavily code written fight beaten point much still despise resolvereject asymmetry note however idiomatic casting best achieved cf fulfilled value value unwrapping", "d": "3/2016"}, {"body": "benefit unwrapping", "d": "3/2016"}, {"body": "compatibility jquery callback passed args also want introduce initial resolution unwrapping specifically look methods falling back like would break decide whether unwrap ie whether legacy methods thenableresolved deferred see thenable resolution value decide deferred resolved multiple values one thenables decide invocation method throws exception might better let sleeping dog lie", "d": "3/2016"}, {"body": "seeing involved really far release process pushing milestone time think think surprising many people late sth", "d": "3/2016"}, {"body": "posterity cases consider important address js var badthens function throw new error function onfulfilled onfulfilled foo throw new error var dfd jquerydeferred callbacks see dfddone logfulfillment fail logrejection dfdthen logfulfillment logrejection dfdresolve sample badthens", "d": "3/2016"}, {"body": "sound like jquery core issue think meant file somewhere else", "d": "3/2016"}, {"body": "sorry yes posted belongs", "d": "3/2016"}, {"body": "thanks opening issue note nt final release slim build yet include explanation final blog post probably want find place somewhere jquerycom said custom build jquery excludes effects ajax deprecated code", "d": "3/2016"}, {"body": "internet explorer touchstart reported mousedown touchend triggered", "d": "3/2016"}, {"body": "firefox touchstart reported mousedown touchend reported mouseup right target", "d": "3/2016"}, {"body": "move example jsbincom jsfiddlenet", "d": "3/2016"}, {"body": "see", "d": "3/2016"}, {"body": "touch events apple invention simulated windows chrome simulates firefox explains touchmouse difference using jquery delegated events look native target event handled code requested set jquery element handled seems correct values differ ones getting ios way", "d": "3/2016"}, {"body": "touch events tricky browsers convert touch interactions mouse events touch events inconsistent mouse events nevertheless able get workarounds using except internet explorer internet explorer seems convert touch interactions mouse events lifting finger touch surface trigger mouseup event see screenshot", "d": "3/2016"}, {"body": "jquery passing events occur seeing case happen sound like describing jquery bug", "d": "3/2016"}, {"body": "understanding jquery made sure abstract browsers bring back consistency see key events ewhich example one sure thing totally inconsistent across browsers workarounds require browser testing whether jquery bug relates specs design could tell", "d": "3/2016"}, {"body": "jquery try synthesize normalize touch events standard consistent across browsers many cases existing code attempts use presence firing touch events indicator specific platform code changes behavior accordingly result synthesizing generating touch events actually break page see blog post compatibility example looking crossplatform way handle touch mouse take look pointer events pep", "d": "3/2016"}, {"body": "looks greatthx", "d": "3/2016"}, {"body": "anyone information pep wo nt solve consistency issues experiencing although might solve others actual solution whether using pep consists adding css class touchable elements example class definitively jquery defect example works consistently browsers least windows title container position relative border solid black delegate position absolute border solid red touchaction none mouse try drag left block onto right block blocks wo nt move finger touch screen try drag left block onto right block blocks wontt move eiher look console logs compare currenttarget mouseup touchend function document mousedown touchstart delegate function e consolelog etype ecurrenttarget attr id mousemove touchmove function e consolelog etype ecurrenttarget attr id mouseup touchend delegate function e var changedtouches eoriginalevent amp amp eoriginaleventchangedtouches var elem changedtouches documentelementfrompoint changedtouches clientx changedtouches clienty ecurrenttarget consolelog etype elem attr id", "d": "3/2016"}, {"body": "seems already draft refactoring concerns postponing", "d": "3/2016"}, {"body": "adding amp small items milestone amp never release think good add new things necessary always change milestone moment merging", "d": "3/2016"}, {"body": "sounds like invitation bureaucratic discussion since also opposite make move necessary code ready tests sure ca nt easy fix way suggesting add label asking concerns proposed code", "d": "3/2016"}, {"body": "sounds like invitation bureaucratic discussion since also opposite make move necessary adds burden make actual decision moving later milestone delay release release already dragged way long code ready tests pr ready yet", "d": "3/2016"}, {"body": "think making issue nt one land think create pr right discussion feels redundant highly unproductive", "d": "3/2016"}, {"body": "discussed meeting code submitted release land waiting next one", "d": "3/2016"}, {"body": "please look programming help stack overflow place report bugs jquery library", "d": "3/2016"}, {"body": "mean like rollup builders like webpack would still include full version library since treeshaking algo fully implemented would access modules exposed also sure mean version since would still use builded transpiled version would code since pretty much environments moment support every new thing canary though cool however build custom jquery see readme including modules would use also idea build web builder writing jquery syntax would probably increase size transpiler hope answers question gon na close something else would probably better check irc channels since github issues really questions thanks", "d": "3/2016"}, {"body": "modules roadmap related issue", "d": "5/2017"}, {"body": "dup fixed master already next patch release", "d": "3/2016"}, {"body": "thanks looking maybe mentioned read checked already well fixes unfortunately nt fix issue described see uses copy current isplainobject nt mind want merge please reopen regards cw", "d": "3/2016"}, {"body": "right different edge case guard funny property suppose", "d": "3/2016"}, {"body": "like idea checking type", "d": "3/2016"}, {"body": "harmless methods go away chrome warnings disappear code still work see details", "d": "3/2016"}, {"body": "ok thanks guess ok selector match filter order works differently searching singularly vs multiple selectors searches element visibility filters tag would thought would less processing power check tag name vs visibility", "d": "3/2016"}, {"body": "jquery precisely sizzle matches selectors right left similarly browsers behave maybe good exception custom filters require selector rewriting trivial task achieve general would know selectors slow best avoid use rewrite selector include filter result ie change way selector may go faster sizzle general case performancerelated things related original report leave closed ideas improve performance selectors please open new issue thanks", "d": "3/2016"}, {"body": "suppose", "d": "3/2016"}, {"body": "yeah bug fix seems responsible pr discussion pull fix seems like code trying use may work seem broken consistently everywhere", "d": "3/2016"}, {"body": "actually looks like overzealous expanding include trimming values rather text think partial revert order", "d": "3/2016"}, {"body": "really broken though see chromefirefox one exception return value selected instead empty string", "d": "3/2016"}, {"body": "think fiddle broken respect comment attributes replaced whitespace focusing see behavior chrome firefox edge three defining value idl attribute stripped collapsed whitespace version content attribute treating like text instead following spec edit browsers fine jquery fault forgot valhook getter also used valhook getter fixing consist updating valhook return directly correct otherwise performing full strip collapse whitespace operation requires upon", "d": "3/2016"}, {"body": "reproduceable recent firefox chromium tested browsers add event argument function looks chrome differs timestamp value firefox", "d": "3/2016"}, {"body": "happens also ca nt test produces errors probably old jqueryui", "d": "3/2016"}, {"body": "jquery ui released january may work recent jqueries likely first update jquery ui first try update jquery jquery ui supports many jquery versions ca nt ensure compatibility ones released jquery ui read jquery ui upgrade guide try upgrade ui anything blocking", "d": "3/2016"}, {"body": "still support way use older jquery detected use one jqueryui version browsers try test", "d": "3/2016"}, {"body": "according release longer accepting bug reports issues also removed testing infrastructure workarounds still present code remove jquery ui hight chance ui work ie since old workarounds nt removed", "d": "3/2016"}, {"body": "confirm issue exist using jqueryui case anyone wanted dig deeper simple reproduction page testhtml button click function attr name iframe appendto documentbody load function consolelog onload form attr target iframe submit dlg dialog", "d": "3/2016"}, {"body": "thanks update", "d": "3/2016"}, {"body": "thinking recently possible prefer change wrapping logic template js file containing intro amp outro would placeholder comment replaced rest build file would mean files consolidated could keep js extension", "d": "3/2016"}, {"body": "would let us lint combined introoutro file currently parts obviously excluded although linted dist files created", "d": "3/2016"}, {"body": "would let us lint combined introoutro file yup thinking", "d": "3/2016"}, {"body": "like", "d": "3/2016"}, {"body": "came conclusion go", "d": "3/2016"}, {"body": "nt want downer linters would still throw error file since like unused arguments dead code seems complicated build process sorry bad mood", "d": "3/2016"}, {"body": "markelog nt setting eslint rules running lint without modifying rules going break regardless using jshint work pragma top", "d": "3/2016"}, {"body": "confirmed api page says check see object plain object created using new object object presented ca nt created way problem present present ok well thanks report", "d": "3/2016"}, {"body": "jquery bug tracker report issues related plugins plugins case repo", "d": "3/2016"}, {"body": "check test animation module stub timers sinon fake passing time back used real ones animation suite much slower believe similar approach solve issue", "d": "3/2016"}, {"body": "also found sure still recommended way go worth throwing", "d": "3/2016"}, {"body": "would skip lot logic ca nt check state animation would nt simulation real environment units supposed run plus changing global state impure suppose could relevant cases", "d": "3/2016"}, {"body": "repeat comment proposed fix fix looks like correct way go based brief look specs default base url intention make behaviour match document fallback need set base url anyway browsers way currently done jquery technically incorrect even chromium bug fixed correctly still need match behaviour also going permanent fix probably good idea make sure element already exist input", "d": "3/2016"}, {"body": "reviewing patched thing struck behavior varies lot depending whether provided since constructor like passes method default circumvents donotrunscript benefit missing case want make safer wondering try hard pass cases like", "d": "3/2016"}, {"body": "looking nt need replace whole thing make work new format changing fixes issue", "d": "3/2016"}, {"body": "parameters easings used easings defined jquery jquery ui removed perhaps use external libraries still use parameters could provide test case", "d": "3/2016"}, {"body": "yes nt break core easing methods break custom extended ones see fiddle currently set jquery edge nt work changing alpha parameters removed still able extend easing useful way thanks", "d": "3/2016"}, {"body": "removed parameters redundant necessary information needed easing purposes possible get first parameter example written way way look cleaner use first parameter", "d": "3/2016"}, {"body": "either way definitely mention release notes maybe somewhere else said could big cc timmywil gnarf mgol seems close", "d": "3/2016"}, {"body": "thanks mgol expert easing nt know easy would update work single parameter agree documented assumed would happen anyway point look forward somebody creating new library easing methods new format nt event want attempt", "d": "3/2016"}, {"body": "look forward somebody creating new library easing methods new format nt event want attempt looks intimidating actuality relatively easy params really redundant like check jqueryui commit migrating", "d": "3/2016"}, {"body": "really interesting thanks markelog", "d": "3/2016"}, {"body": "beavykins always possible define new easings would wrap old ones snippet shows easily rewrite old one actually eg example would amount findreplace variables inside code according pattern changes close issue relatively easy migration path allowed introduce breaking changes feel free comment remarks though beavykins thanks spending time report", "d": "3/2016"}, {"body": "problem thanks detailed explanation", "d": "3/2016"}, {"body": "error comes call inside wicket point error inside event seems native without native method assume native event always method code calls several nonpublic apis including extends possible violating assumption still lot code simplify bit", "d": "3/2016"}, {"body": "thanks looking dmethvin tried simplify seems missing something fiddle works fine used make sure wicket js code always works jqueryevent native js events extension custom event used demo application think could ignored debug work idea nt fail normal nonconditional breakpoint used makes think timing issue", "d": "3/2016"}, {"body": "time messing undocumented jquery internals hard predict happen never necessary external code call especially nonnative events get error twice original case also nt get twice nt know intermittent would say jquery problem way get native chrome nt method due wicket changing passing jquery bug wicket", "d": "3/2016"}, {"body": "ok dig direction remove usage jqueryeventfix thanks", "d": "3/2016"}, {"body": "problem wicket difference comes different handling normal events like etc wicket special thingy called normal events wicket uses uses ie see firstonly argument passed handler jquery object find nt breaking fix thanks", "d": "3/2016"}, {"body": "please use similar resource articulate issue", "d": "3/2016"}, {"body": "also check report bugs guide", "d": "3/2016"}, {"body": "would work much better want get actual value input asking jquery serialize jquery object apparentely goes kaboom also stackoverflow better place kind questions", "d": "3/2016"}, {"body": "api docs say data type plainobject string array data sent server converted query string already string passing object contains dom elements include circular references probably causes loop actually surprised nt die first trying call methods jquery collection test pass right data using jaubourg said things work fine kind problem would definitely best explore site like stackoverflow filing bug", "d": "3/2016"}, {"body": "came across issue written several weeks react code forget bug jquery check circular references serialize", "d": "4/2016"}, {"body": "", "d": "2/2016"}, {"body": "agreed", "d": "3/2016"}, {"body": "guess worth moving reuse", "d": "4/2016"}, {"body": "nice find ticket would need move module", "d": "4/2016"}, {"body": "calculation following code", "d": "4/2016"}, {"body": "mean gzip size also change identical manner move moved", "d": "4/2016"}, {"body": "result file creation storing variable moving declaration", "d": "4/2016"}, {"body": "deprecation would mean move change internal uses ca nt module containing old code", "d": "4/2016"}, {"body": "right builtin methods etc could stored", "d": "4/2016"}, {"body": "propose put module understood differently", "d": "4/2016"}, {"body": "right sorry explaining", "d": "4/2016"}, {"body": "would nt want size influence file hierarchy would pretty confusing also deprecated modules stored module since would also confusing users want exclude use deprecated stuff", "d": "4/2016"}, {"body": "markelog agree extent farseeing proposes put arrayisarray varmodule soontobedeprecated jqueryisarray see last comments", "d": "4/2016"}, {"body": "oh see would nt nt really see point", "d": "4/2016"}, {"body": "guys possibility submitting pr", "d": "4/2016"}, {"body": "shashankanataraj sure know needs done", "d": "4/2016"}, {"body": "would wait would discussion seems team members feel deprecation process core methods might inappropriate", "d": "4/2016"}, {"body": "mgol markelog correct im wrong tasks issue move jqueryisarray change usages", "d": "7/2016"}, {"body": "also third item unit tests moved jqueryisarray well also nt mentioned deprecation apart jquery pr api site issue needs jquery migrate issue polyfill api warn using micha\u0142 go\u0142\u0119biowski", "d": "7/2016"}, {"body": "mgol didnt get meant unit tests moved jqueryisarray well understand unit tests need modified jqueryisarray tests need removed right actually raising issues like every deprecation issue im working raised one issue", "d": "7/2016"}, {"body": "understand unit tests need modified jqueryisarray tests need removed right removed moved actually raising issues like every deprecation issue im working seen thanks meant apart api issue also need issue need restore api people may exclude deprecated module warning using", "d": "7/2016"}, {"body": "shashankanataraj seems working please take", "d": "8/2016"}, {"body": "correct changes x move x change usages x modify unit tests x create jquerymigrate issue", "d": "8/2016"}, {"body": "update docs", "d": "12/2017"}, {"body": "api terribly intuitive expect people code sth like need", "d": "2/2016"}, {"body": "think strong position deprecating since people mean numeric seems pretty subjective useful without validation", "d": "4/2016"}, {"body": "take", "d": "7/2016"}, {"body": "sure link reference", "d": "7/2016"}, {"body": "markelog correct im wrong x isnumeric function needs moved usage within unit tests need changed function meant used unit tests beggining", "d": "7/2016"}, {"body": "shashankanataraj think tests changed later decide remove isnumeric", "d": "7/2016"}, {"body": "timmywil think changed closing issue aim slim build able pass many tests possible exception excluded modules like go opposite direction also pattern followed past eg tests contained many tests using nt hard fix", "d": "7/2016"}, {"body": "mgol yes moved talking usage tests continue testing function removed", "d": "7/2016"}, {"body": "think keep testing used different places replaced", "d": "7/2016"}, {"body": "timmywil talking well move nt change tests testing method using introduce additional test failures testing slim version", "d": "7/2016"}, {"body": "mgol proposing replace stray uses nt directly related testing move tests directly test remove slim fine testing deprecated module", "d": "7/2016"}, {"body": "mgol way place find use isnumeric nt related testing lines", "d": "7/2016"}, {"body": "mgol proposing replace stray uses isnumeric nt directly related testing isnumeric move tests directly test isnumeric testunitdeprecated remove slim fine testing deprecated module meant well seems misunderstanding", "d": "7/2016"}, {"body": "yeah", "d": "7/2016"}, {"body": "shashankanataraj updates", "d": "8/2016"}, {"body": "", "d": "2/2016"}, {"body": "need jquery", "d": "3/2016"}, {"body": "dustinpoissant mgol submit pr", "d": "7/2016"}, {"body": "shashankanataraj sure remember move change current uses note scheduled likely want release pr may immediately merged even ready", "d": "7/2016"}, {"body": "also pr doc changes githubcomjqueryapijquerycom would also appreciated", "d": "7/2016"}, {"body": "mgol markelog thanks", "d": "7/2016"}, {"body": "used extensively call prototype functions context event bindings many jquery plugins notably bootstrap plugins nt think deprecated though easy enough roll", "d": "4/2016"}, {"body": "proposal deprecation removal would removed would happen major version said easy supplement jquerymigrate would anyway", "d": "4/2016"}, {"body": "small enough getting wide usage nt see need deprecation", "d": "4/2016"}, {"body": "one thing jqueryproxy function bind nt setting guid bound function instances proxied event handlers removed without storing instance proxied function", "d": "4/2016"}, {"body": "timmywil would recommend use", "d": "4/2016"}, {"body": "markelog still use proxy bind think cleaner pass function name rather function", "d": "4/2016"}, {"body": "still recommend use version indeed closed nt think refusal deprecation came used lot place reason discourage people using deprecation nt mean would need remove could next next next", "d": "4/2016"}, {"body": "carrying discussion breaking things yesterday meeting seems like lot benefit deprecating eventually removing nt lot code inside jquery removing make someone rewrite code works perfectly well today contrast something like deferred changes although potentially disruptive driven desire align promise standards started wiki page similar adding page try outline practices", "d": "4/2016"}, {"body": "deprecating favour intention remove seems like pretty good idea pushing users towards standards worth", "d": "4/2016"}, {"body": "pushing users towards standards worth precisely", "d": "4/2016"}, {"body": "put deprecation warning migrate people feel compelled get rid warning complain us schedule removal makes sense eternal deprecation nt know", "d": "4/2016"}, {"body": "put deprecation warning migrate people feel compelled get rid warning complain us yeah would consequences deprecation also adding note deprecation documentation frankly sure would nt want promote way nt think would need recommend", "d": "4/2016"}, {"body": "nt put warning migrate", "d": "4/2016"}, {"body": "want deprecate things slated eventual removal fine promoting think documentation deprecation right tool", "d": "4/2016"}, {"body": "one would used discourage would logical eventually remove besides definition deprecation deprecation discouragement use feature design practice term prefer", "d": "4/2016"}, {"body": "want deprecate things slated eventual removal also oleg said", "d": "4/2016"}, {"body": "im guessing im understanding something obvious may really dumb question im wondering native bind used stub proxy available calling proxied functions roughly slower calling function using bind firefox slower", "d": "4/2017"}, {"body": "deprecated method nt planning implementation", "d": "4/2017"}, {"body": "dmethvin close accident nt deprecated yet reopen", "d": "4/2017"}, {"body": "since requesting suggest mean specifically tagged needs changed note repo license file", "d": "2/2016"}, {"body": "dmethvin page info make librejs understand license scripts tried edit original post clarify editing function nt seem work currently really sensible browser browser plugin try find license javascript library would ungodly amount work get working instead us humans tag javascript easy parse automatically recognize license scripts", "d": "2/2016"}, {"body": "embedding entire license distribution file header even compressed file references license suggest way want without embedding full license submit pr", "d": "2/2016"}, {"body": "dmethvin misunderstood nt embed whole license would need top license magnet xturn btih amp dnexpattxt bottom licenseend wo nt many bytes current license notice lot functionality", "d": "2/2016"}, {"body": "understand make license available via bittorrent magnet link used different way also worry introducing code handle cases officially standardized could name popular javascript libraries include license comments", "d": "2/2016"}, {"body": "mgol librejs recognizes magnet link proper expat license user wants get license download via magnet link jquery nt make new magnet urls anything include one proper expat current license use order help users use free software people done realize everyone thought like world would proprietary software effort put kind standard place even ad hoc one currently way automatically parsing licensing information javascript files", "d": "2/2016"}, {"body": "tsutsukakushi nt think opposed necessarily good way specify license seems like good thing document rather preachy dogmatic rather approaching problem one automate issue license recognition perhaps would help separate two issues make page focused technical details", "d": "2/2016"}, {"body": "dmethvin agree page technical details would ask mailing list however nt think librejs couple guys working might get top priority maybe experienced javascript developers could help wink wink", "d": "2/2016"}, {"body": "totally messed first sentence let try agree page technical details would good ask mailing list", "d": "2/2016"}, {"body": "sure would need updated seems adding libre would parse question would want anyone", "d": "3/2016"}, {"body": "tsutsukakushi examples libraries already use tags", "d": "3/2016"}, {"body": "markelog libre would parse question would want anyone want people run freesoftware net also want run fingerprinting javascript malicious stuff nt want people run fingerprinting javascript currently user either jquery malicious stuff neither examples libraries already use tags like quote earlier message answer order help users use free software people done realize everyone thought like world would proprietary software", "d": "3/2016"}, {"body": "tsutsukakushi mgol librejs recognizes magnet link proper expat license user wants get license download via magnet link jquery nt make new magnet urls anything include one proper expat current license use good worried order help users use free software people done realize everyone thought like world would proprietary software nt mean sound way sorry gave impression experience jquery amp projects taught established standards standards may become former necessarily catering much latter often leads maintaning nonneeded obsolete code later one example package managers added support npm amp bower people asking discussions decided punt every package manager additional release burden us come amp go retrospect might better publishing npm leaving rest packages community main concern asking libraries see established may always possibility spec critical faults better solutions may automated without making changes etc note cautious library nt mean nothing done someone first may eg open similar issues popular libraries bug trackers agree might something worth know wo nt ones hurry existing jquery versions web wo nt get anyway wo nt change much rather wait little hear projects say make wellthought decision rush sum nt object maintainers popular oss libraries also nt object amp nt present better solutions may want jquery library ever used", "d": "3/2016"}, {"body": "point question borrowing someone else experience create get philosophical debate like grunt task configuration could use anything else could help us", "d": "3/2016"}, {"body": "mgol experience jquery amp projects taught established standards standards may become former necessarily ad hoc standard better nothing catering much latter often leads maintaning nonneeded obsolete code later need code jquery part two comment lines per js file run user browsers one example package managers added support npm amp bower people asking discussions decided punt package managing world lot different tools license verification one every package manager additional release burden us come amp go retrospect might better publishing npm leaving rest packages community requires two comments code hurry existing jquery versions web wo nt get anyway wo nt change much yeah javascript library framework field trainwreck librejs versions jquery whitelisted many rather wait little hear projects say make wellthought decision rush reasonable sum nt object maintainers popular oss libraries also nt object amp nt present better solutions may want jquery library ever used javascript libraries neglegent issues none willing take first step markelog point question borrowing someone else experience create get philosophical debate like grunt task configuration could use anything else could help us doubt tool navigate differences structure determine needs tag nt add existing files every time add new files run user browser add tags nt even seem like task would require separate tool", "d": "3/2016"}, {"body": "tsutsukakushi sum nt object maintainers popular oss libraries also nt object amp nt present better solutions may want jquery library ever used javascript libraries neglegent issues none willing take first step would willing create issues anyway like hear voices regardless say saying necessarily follow decide wait final decisions least hearing would worthwhile imo", "d": "3/2016"}, {"body": "would willing create issues anyway sure libraries target first", "d": "3/2016"}, {"body": "doubt tool navigate differences structure determine needs tag nt add existing files every time add new files run user browser add tags nt even seem like task would require separate tool cool sounds easy could provide pr", "d": "3/2016"}, {"body": "markelog familiar structure jquery stupid script nt know files would require tags would nt clone repo see could figure seems lot scripts build scripts whatnot would trivial someone already familiar project", "d": "3/2016"}, {"body": "easy guess would better check someone else experience matter", "d": "3/2016"}, {"body": "markelog easy someone knows project easy someone nt writing patches project without knowing works hard", "d": "3/2016"}, {"body": "easy someone knows project know project nt know write seems one thread either", "d": "3/2016"}, {"body": "markelog jquery foundation member nt familiar build process", "d": "3/2016"}, {"body": "since static information added introjs file unminified file gruntfilejs minified version problem unless markelog wanted automated way generate magnet links license urlsnames would overkill imo would willing create issues anyway sure libraries target first need ideas top head lodash bootstrap backbone angular ember threejs modernizr pdfjs lessjs create issues please link bug see thanks", "d": "3/2016"}, {"body": "mgol libre asks add end comment would update unminified file already look like hack minified file would need use prepend add banner footer knowledge workaround seems would need make already two hacks make work tsutsukakushi markelog jquery foundation member nt familiar build process familiar process nt know asking us whereas nt want help us issue guess always fun debate philosophy things push comes shove people start quickly disappear", "d": "3/2016"}, {"body": "going close issue opposed seems like probably something could addressed elsewhere prove viability utility adopt carry around potential future baggage example proxy could identify versions jquery acceptable licenses eg using sha hash inject appropriate license tag would advantage working past versions jquery thus allowing many existing web sites run solution involves build system would beneficial users popular sites upgrade would take years", "d": "4/2016"}, {"body": "thanks report could create test case could reproduce", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "ca nt get jsbin run real browserstack get error see screenshot general jquery forward event browser generates browser nt fire event ca nt much keyupkeydown events pretty reliable platforms keypress also test real never various compatibility view modes", "d": "2/2016"}, {"body": "sorry noise guess confused morning browser flood confirm key events fire even thanks much efforts", "d": "2/2016"}, {"body": "try remove folder execute command", "d": "2/2016"}, {"body": "also nodejs instance really old please upgrade least stay upgrade node newer find wellmaintained repository various linux flavors including debian", "d": "2/2016"}, {"body": "okay ping us still facing issue", "d": "3/2016"}, {"body": "", "d": "2/2016"}, {"body": "yep duplicate", "d": "2/2016"}, {"body": "nt supposed fixed via cc dmethvin", "d": "6/2016"}, {"body": "yeah intentional wrappers modules included jquery builded", "d": "2/2016"}, {"body": "hi missing bracket many others getting error compiling assets rails uglifier vendorassetscomponentsjquerysrcintrojs execjs programerror unexpected token eof undefined line col pos idea avoid thanks", "d": "4/2016"}, {"body": "alexdesi rails compiling file nt touch btw already fixed master amp collapsed one file srcwrapperjs jquery setup way", "d": "4/2016"}, {"body": "mgol got compiling manually file uglifier rails gem get information precompiling way using jquery probably required boostrap using bower said use required rails assets explicitly requiring probably way go exclute introjs way asset compiling", "d": "4/2016"}, {"body": "nt know asset compiler got file definitely nt referenced build script thing get think tries compile every js file inside directory incorrect first report see problem breaking rails app surely hear immediately sure nt put something would make try compile files config know nothing rails need research little", "d": "4/2016"}, {"body": "mgol think get point rails assets trying include every js file need figure include necessary ones thanks advice", "d": "4/2016"}, {"body": "glad helped", "d": "4/2016"}, {"body": "jspm manages dependencies browser nt error means sounds like trying get executed node requires additional implementation like one provided jsdom even fail earlier situation looks weird jquery version also need full example perhaps strippeddown version project could reproduce bug hard anything looking error", "d": "2/2016"}, {"body": "code trying run basically test verifies module loaded module question used ejs page wanted test module isolation add details project also github nt pushed test recently import chai expect chai import sinon sinon import sinonchai sinonchai import system systemjs import publicconfigjs chaiuse sinonchai describe helpermodule gt let module", "d": "2/2016"}, {"body": "think jquery bug report nt even see jquery code snippet", "d": "2/2016"}, {"body": "try importing react component import react component react", "d": "8/2016"}, {"body": "happens chrome edge firefox seems related subpixel values borders", "d": "2/2016"}, {"body": "update gbcr result well includes borders result includes one since borders collapsed least interpretation", "d": "2/2016"}, {"body": "tempted say document hard say collapsed borders belong shared custody nt work used setter", "d": "4/2016"}, {"body": "dmethvin agreed sure worth feature test workaround firefox odd man perhaps could simply align behavior browsers", "d": "6/2016"}, {"body": "switched tls yet", "d": "2/2016"}, {"body": "yes already least proxy supports tls problems specific type admin told", "d": "2/2016"}, {"body": "could create ticket detail cdn repo resolve likely need network people talking cdn people much information configuration", "d": "2/2016"}, {"body": "ca nt use native due several browser bugs synthesized could fixed making new copy entire object delivered element bubbled would horrible performance penalty need properties copy used settimeout function", "d": "2/2016"}, {"body": "thanks solved saving event variable calling edit think better restore true event type like", "d": "2/2016"}, {"body": "agree dmethvin assessment nt think make change", "d": "2/2016"}, {"body": "btw problem persists jquery version well", "d": "2/2016"}, {"body": "thanks solved saving event variable calling settimeout nt deep extend extremely expensive need variables event type save variables", "d": "2/2016"}, {"body": "dmethvin yeah thought minute changed see updated comment", "d": "2/2016"}, {"body": "ca nt use native due several browser bugs precise none browsers supported jquery experience bug last one safari dropped still support ios think important reason synthesize make event delegation work see comment", "d": "2/2016"}, {"body": "yes true want delegated requires either deriving bubbling using capturing handler via special event hook could try latter via approach similar focusinout", "d": "2/2016"}, {"body": "would put wrong event order good idea", "d": "2/2016"}, {"body": "actually nt ie lt ie lt required setting property boolean like continue although browsers may treat value true like users see value set always truthy value regardless passed forcing values comply spec educating users fact even set string false still treated true another helpful sideeffect ability tell difference boolean enumerated attribute quickly already consulted spec users", "d": "2/2016"}, {"body": "wanted educate users difference boolean amp nonboolean attrs might set empty string instead attribute name nt work ie lt normally specify boolean attribute writing html hand providing value unless consider change much breaking change would break cases someone incorrectly retrieved attribute value checked truthiness doubt code would actually anything already broken though", "d": "2/2016"}, {"body": "empty string provide attribute name", "d": "2/2016"}, {"body": "visual clue developer tools well closer standards dev tools foo exactly attributes natively reflected property modifications behave eg setting results attribute set empty string represented like makes jquery behavior closer native one trying amp recently", "d": "2/2016"}, {"body": "spec says closer browser behaviour sometimes good idea since jquery tries fix exactly saying pro would cool see doc says", "d": "2/2016"}, {"body": "visual clue developer tools well closer standards get board first second standard", "d": "2/2016"}, {"body": "attribute present value must either empty string value caseinsensitive match attribute canonical name leading trailing whitespace", "d": "2/2016"}, {"body": "also possible using empty string issues xhtml", "d": "2/2016"}, {"body": "seems spec agrees behaviour even though dev tools shows absence value shows", "d": "2/2016"}, {"body": "also", "d": "2/2016"}, {"body": "ok forgot xhtml seems stay", "d": "2/2016"}, {"body": "forgot xhtml well seems xhtml dom behaves exactly html ie seems nt contradicts xhtml spec either sure want give easily", "d": "2/2016"}, {"body": "markelog violate xhtml spec tho dmethvin pointed even browser implementations nt care besides nt see much gain using empty string know works think leave", "d": "2/2016"}, {"body": "xhtml requires set value quotes could empty string native behaviour believe point initial request nope nt violate nt see much gain using empty string know works think leave like said oppose pro", "d": "2/2016"}, {"body": "xhtml requires set value quotes could empty string tried forget horror xhtml years ago seem recall code breaking expected nonfalsy attribute values empty string falsy probably would timeframe timmywil attributes refactor", "d": "2/2016"}, {"body": "years ago like five", "d": "2/2016"}, {"body": "xhtml requires set value quotes could empty string yea recall time setting empty string ended value specified html probably whole attroperties issue maybe looking devtools represents without value also unassigned value return empty string possible browser implementors differentiate means former could still issue nt think worth finding", "d": "2/2016"}, {"body": "indeed experiencing thing possible add alias config fix would indeed much better jquery loaded sizzle webpack fetch nodemodules folder wherever resolving", "d": "2/2016"}, {"body": "seems included published package could check starts working copy directory jquery repo", "d": "2/2016"}, {"body": "yup included could actually fix npm", "d": "2/2016"}, {"body": "include fix", "d": "2/2016"}, {"body": "fixed", "d": "2/2016"}, {"body": "thank", "d": "2/2016"}, {"body": "fix find version still available cdn", "d": "2/2016"}, {"body": "working", "d": "2/2016"}, {"body": "discuss monday might need fix things nt want release every days", "d": "2/2016"}, {"body": "thanks bertez worked used jquery sizzle", "d": "2/2016"}, {"body": "mmh installed still got error adding external folder etc worked", "d": "5/2016"}, {"body": "appear fixed getting error w reference directory named exists", "d": "5/2016"}, {"body": "yeah fixed correctly everything extras array copied directly final directory nt preserve directory structure making folder appear without necessary directory wrapper reopening amp marking blocker", "d": "5/2016"}, {"body": "good way testing final structure ok", "d": "5/2016"}, {"body": "thought working maybe local copy wrong tough make automated test going jqueryrelease working nt touch", "d": "5/2016"}, {"body": "problem copied content sizzledist externalzizzledist compiled ok", "d": "5/2016"}, {"body": "latest uncompressed jquery worked webpack adding last line", "d": "5/2016"}, {"body": "problem error jquerysrcselectorsizzlejs module found error resolve file directory externalsizzledistsizzle", "d": "5/2016"}, {"body": "fix next patch please use github reaction feature original post issue", "d": "5/2016"}, {"body": "please look help stack overflow place report bugs jquery", "d": "2/2016"}, {"body": "damn think lucky deal dave matter language barrier selfentitled behaviour exhibited could sign complete lack professionalism dave nice guy kept giving benefit doubt quite franckly noone else would tolerated repeated unwarranted attacks solution problem getgo nt say description bug would saved dave ten thousands people following repository onesided conversation clearly makes look like internet troll suggest tone notch operatics contributor feels obligated report abuse", "d": "2/2016"}, {"body": "right venue issue", "d": "2/2016"}, {"body": "duplicate fixed next release jquerymigrate later week", "d": "2/2016"}, {"body": "thanks wasted couple hours trying figure reporting depreciated updating legacy code", "d": "2/2016"}, {"body": "result dom case element seems correct code depends stringifying dom elements example", "d": "2/2016"}, {"body": "closing worksforme please provide test case reopen", "d": "2/2016"}, {"body": "checked code firefox ie chrome firefox ie show chrome empty string use jquery browsers show", "d": "2/2016"}, {"body": "vmagik thanks update impression report stringifying dom elements seems href property indeed set empty string chrome need investigate", "d": "2/2016"}, {"body": "ok nailed issue commit nonjquery test case also posted test case fails chrome succeeds firefox safari edge ie support opera even android see reported upstream", "d": "2/2016"}, {"body": "vmagik using code real application calling something else calling trying determine impact", "d": "2/2016"}, {"body": "call parsehtml code gets string like tries get href nt invent code first message stringfication found example somewhere", "d": "2/2016"}, {"body": "result though trying determine seriousness bug based way things used real code", "d": "2/2016"}, {"body": "open window show resulting href also use ajax call", "d": "2/2016"}, {"body": "mean show user trying get sense work flow occurring type html parsed come href shown window", "d": "2/2016"}, {"body": "show user click link page first ajax request result either one link several links one link show new window dialog several links need show user choice", "d": "2/2016"}, {"body": "guess workaround need back master", "d": "2/2016"}, {"body": "start removal going wait removing", "d": "2/2016"}, {"body": "seems fixable something simple dirty first time spackle browser behavior", "d": "2/2016"}, {"body": "nice", "d": "2/2016"}, {"body": "since caller pass document work set base empty string way href propertyattribute would equal still would suggest back nt using consistently documented", "d": "2/2016"}, {"body": "like going like experiment point changes seem risky trying stop developed soon agree dmethvin back", "d": "2/2016"}, {"body": "saw chromium bugtracker interesting affecting larger library vmagik sure getting resolved url firefox jsbin link shows firefox full chrome fix looks like correct way go based brief look specs default base url intention make behaviour match document fallback need set base url anyway even chromium bug fixed correctly still need match behaviour", "d": "3/2016"}, {"body": "backout landed amp issue resolved created separate one making work", "d": "3/2016"}, {"body": "yes firefox shows testhtml jquery jquery shows resolved url think big problem problem", "d": "3/2016"}, {"body": "links latest good practice one", "d": "2/2016"}, {"body": "links latest good practice one may good practice also good document etiquette favoritism specific version looks like jquery bug thank confirming", "d": "2/2016"}, {"body": "martii read blog post referenced see chaos caused snide comment wo nt change anything", "d": "2/2016"}, {"body": "snide comment perception skewed bug exists references usages based said please refrain snarky responses", "d": "2/2016"}, {"body": "dmethvin appease bad maintainer response cc mgol roughly documentation reading elsewhere neutral documentation sake latest version url used currently jquery core however jquery maintainers suggest latest version used meta link updated actual latest jquery core series possibly part due statistics gathering please follow link specifics additional specific isolated versions may found cdn including recent versions jquery core please let community know jquery going fix bug url rewriteroute andor remove altogether thank moment time realist industry three decades nt appreciate accused snide", "d": "2/2016"}, {"body": "martii think may language barrier apologies understand response request bug asking us please let community know jquery going fix bug url rewriteroute andor remove altogether bug", "d": "2/2016"}, {"body": "bug asking us bug latest version url used currently jquery core seems latest url nt returning actual latest either removed mod rewrite apache change redirect route node web server configuration point latest seems like latest url strongly discouraged response latest presumed link done best keep documentation neutral possible understand link referenced agree specific versions always used maximum compatibility minimal breakage documentation tricky code examples keep neutral nt maintain constantly version bumping added foot notes docs help alleviate confusion users communities time", "d": "2/2016"}, {"body": "seemed like blog post pretty clear nt use pretend file exist ignore suggestive name official word development team used part official documentation fact found file cdn made assumptions based name make supported ca nt update change file anymore break lots web sites internet misused remove without punishing users sites developers made unfortunate decisions past whose sites may longer maintained another nt break web decision make regular basis need latest version file want automate process could get npm since publish releases versions tagged", "d": "2/2016"}, {"body": "pretend file exist lol official word development team used hence transformation issue simple question bug report footnotes latest url remain communities documentation officially endoflifed removed jquerycom domain unfortunate development team nt accommodate neutrality code samples work around footnotes misused remove without punishing users sites developers made unfortunate decisions past whose sites may longer maintained deprecated end life using standard industry nomenclature jquery supporting fashion link still around bad nt see industry standard http status codes deprecation end life let servers know codes perhaps time interest get around writing rfc adoption ca nt update change file anymore break lots web sites internet misused remove without punishing users sites developers made unfortunate decisions past whose sites may longer maintained understandable minus blame pointed next jquery actively supporting exists active deprecated endoflife common terms presume assume difference english language replies blog post deprecation state servers usually wo nt know may cause unnecessary maintenance workflow made unfortunate decisions past unprofessional blame maintainers cc mgol fact found file cdn made assumptions based name make supported blame cc mgol nt find communities around predating blog post referenced fact defacto standard described blog post issues raised pertaining statistics gathering cdn usage want automate process could get npm since publish releases versions tagged thanks reiteration something know already use node projects wiki including gollum gh allura sometimes mediawiki nt automation hence external servers use mod rewrite node routing point files change http status headers adding another job task determine latest version documentation waste resources believe anyhow bug nt want get addressed nt reading least wontfix label would hope positive role javascript community would want achieved project something else latest url know discouraged initial tone dmethvin set somewhat rectified dissuade colleagues contributing", "d": "2/2016"}, {"body": "wiki including gollum gh allura sometimes mediawiki nt automation hence external servers use mod rewrite node routing point files change http status headers adding another job task determine latest version documentation waste resources believe saying want automatically update jquery sites release without testing please nt automatically update things like exactly jquerylatest deprecated every update even patch release opportunity incompatibilities creep see every release people depend undocumented functionality bugs code broken update", "d": "2/2016"}, {"body": "saying want automatically update jquery sites release without testing quite done best keep documentation neutral possible understand link referenced agree specific versions always used maximum compatibility minimal breakage documentation tricky code examples keep neutral nt maintain constantly version bumping added foot notes docs help alleviate confusion users communities time communities prefer remain neutral possible version used including pushing pointed abridged quote remove without punishing users sites developers whose sites may longer maintained wish automation process updating docs especially features nt exist newer wiki software due dumbing security reasons every update even patch release opportunity incompatibilities creep see every release people depend undocumented functionality bugs code broken update speaking choir aphorism goes actual usage production personally would discourage well latest url however favoritism specific version nt recommended communities documentation shieldsio helps great deal node projects ex quoting syntax working code snippet supposed neutral technically impossible gollum related markdown ed software example unwanted maintenance task showing html code snippet modern media type per rfc requires routine maintenance ca nt automated gh issue tracking also gollum gh wiki html", "d": "2/2016"}, {"body": "sounds like looking something beyond scope repository past tried simple solution failed horribly welcome come distribution mechanism beyond offer distribute publish npm tags available github possible automate", "d": "2/2016"}, {"body": "thanks notice look", "d": "2/2016"}, {"body": "since nt edit tickets google cached version complete", "d": "2/2016"}, {"body": "back thanks", "d": "2/2016"}, {"body": "thanks opening issue please provide test case help us assess problem", "d": "2/2016"}, {"body": "pretty sure dup close", "d": "2/2016"}, {"body": "getting issue right setting basic pop jquery mobile jquery version replace jquery version jquery version everything works fine", "d": "9/2016"}, {"body": "jquery jquerymobile give apreventdefault function works jquery", "d": "5/2017"}, {"body": "fixed changing function", "d": "2/2016"}, {"body": "copying intentional see array weirdness compare past releases regardless outcome might satisfied customizable generalpurpose library like lodash use case", "d": "2/2016"}, {"body": "sure intentional nt see clearly documentation says properties inherited object prototype copied fine copy null undefined also says deep extend object array extended stands true already array extend null would expect try extend existing array null give original array happens null property copied case even intentional behavior ca nt see intended since end product fully extended array one would expect", "d": "2/2016"}, {"body": "also bring one argument seem like intentional order objects extended changes outcome extending extending sound like extend", "d": "2/2016"}, {"body": "final argument take look would ever expect result deep extend", "d": "2/2016"}, {"body": "sure intentional nt see clearly documentation says properties inherited object prototype copied fine copy null undefined line immediately preceded undefined properties copied implication properties also says deep extend object array extended stands true already array extend null would expect try extend existing array null give original array happens null property copied deepextend behavior applies data types match scalars overwrite nonscalars nonscalars overwrite scalars objects overwrite arrays arrays overwrite objects case even intentional behavior ca nt see intended since end product fully extended array one would expect final argument take look would ever expect result deep extend yes nt fit needs recommend customizeable lodash mergewith", "d": "2/2016"}, {"body": "array weirdness compare past releases deepextend preserves array element index behavior identical way back jquery given counterintuitive leave ticket open decide tomorrow whether address", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "change makes nervous agree creating api today might worthwhile ignore rather replace target array behavior present long time", "d": "2/2016"}, {"body": "turns behavior standard", "d": "2/2016"}, {"body": "turns behavior standard could elaborate comment reference something still think strange array extend simply overwrites indexes instead building array unique values", "d": "8/2016"}, {"body": "standard matches ecmascript lodash", "d": "8/2016"}, {"body": "code function see docs passing function executes passed function document ready instead creating new jquery object see docs trick expects executed method regular function throws invoked document ready loses context object way get function get error tried following even also note discouraged mix jquery inline event handlers use method instead", "d": "2/2016"}, {"body": "dilemma defined timeout period specified request elapsed would coopt also mean components network chain reporting timeout periods independent one specified caller call although change seems almost trivial could easily compatibility impacts help code reported", "d": "2/2016"}, {"body": "used condition cause ajax failed timeout code aoscdevwebsitesiteng realized need everywhere express condition ajax timeout least implementation event upstream server timeout may caused two condition mean another thing except upstream server timeout one said gateway said may contain later condition chain opposite says deployed proxies known return dns lookups time however fuzzy unclear tell eg timeout exactly happened clear enough", "d": "2/2016"}, {"body": "since clear happened would say coopting even less necessary checking status seems like right thing way separate timeout somewhere network case timeout locally waiting network case", "d": "2/2016"}, {"body": "discussed meeting nt want make timeout ambiguous", "d": "2/2016"}, {"body": "thanks suggest add tips docs eg tip ajax timeout may cause proxies middlewares http error network chain earlier ajax", "d": "2/2016"}, {"body": "trying access collection single element also problem nt anything jquery please look help stack overflow", "d": "2/2016"}, {"body": "maybe supportjquery global lying around", "d": "2/2016"}, {"body": "seeing master used amd think happening amd mode testinitjs still runs global code synchronously jquery loads async adds back", "d": "2/2016"}, {"body": "changing back causes error locally perhaps variable available testswarm", "d": "3/2016"}, {"body": "maybe supportjquery global lying around least amd mode edit actually one available modes version use tests expected available mean also set case amd mode", "d": "3/2016"}, {"body": "think dmethvin nailed take look", "d": "6/2016"}, {"body": "examples deargithubdeargithub railsrails googlecloudplatformgcloudcommon dotnetcorefx golanggo", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "zenorocha wow nice thank", "d": "2/2016"}, {"body": "created generator issue pull request templates asks questions project creates templates customized project might helpful", "d": "3/2016"}, {"body": "talater sure gon na use cool really enjoyed reading", "d": "3/2016"}, {"body": "workaround applied", "d": "2/2016"}, {"body": "seems like support request rather bug report feature request start stackoverflow see help", "d": "2/2016"}, {"body": "dmethvin support needed already found workaround issue post primary intent reporting issue secondary intent way thoughts temporary fix issue second time around request passing ajax settings used first request header sent", "d": "2/2016"}, {"body": "investigate need repro case version jquery used etc code snippet nt enough us help help us feel needs addressed inside jquery", "d": "2/2016"}, {"body": "provide thanks", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "looks correct set default since nt specified original request mentioned api docs server wants different value set options", "d": "3/2016"}, {"body": "dmethvin fine supposed default value please consider makes virtually sense request current implementation inconsistent would default header set first request set options second time around", "d": "3/2016"}, {"body": "nt think", "d": "2/2016"}, {"body": "please give plunk", "d": "2/2016"}, {"body": "create codepen well locally ca nt get issue please give detail code snippet", "d": "2/2016"}, {"body": "tomorrow send html pages shows issue left work place monday february yashdeep hinge notifications githubcom wrote please give plunk reply email directly view github thank regards dr sharad kelkar", "d": "2/2016"}, {"body": "thanks please file issue small test case", "d": "2/2016"}, {"body": "problem related incompatibility jquery migrate plugin resolved migrate plugin changed issue jquery simply required proper version migrate plugin mon feb pm timmy willison notifications githubcom wrote closed reply email directly view github", "d": "2/2016"}, {"body": "happning due return htmlreplace rxhtmltag nt know done method htmlprefilter function html return htmlreplace rxhtmltag", "d": "2/2016"}, {"body": "duplicate resolve escaping characters attribute values using documentation yet released", "d": "2/2016"}, {"body": "thank would never find fine job", "d": "2/2016"}, {"body": "posterity test screenshot", "d": "2/2016"}, {"body": "see fixed timmywil mentioned commit messages closing issue", "d": "2/2016"}, {"body": "yes intended way method give data object attached element make one let check one already", "d": "2/2016"}, {"body": "also docs mention", "d": "2/2016"}, {"body": "well docs also say data associated element data object data object empty method returns false test case provided returns empty object", "d": "2/2016"}, {"body": "agreed legitimate", "d": "2/2016"}, {"body": "code behaving way want though correct docs wrong", "d": "2/2016"}, {"body": "getter actually create data object reason", "d": "2/2016"}, {"body": "args defined return data object one nt creates one attaches element returns new empty object ten years ago api could defined return element data would needed set new data item explicitly way defined though lots code doubt depends behavior assumption trying get full data item actually wanted use current behavior makes simpler created way see data element without creating presumably less common case", "d": "2/2016"}, {"body": "ok dmethvin right note jquery event system uses jquery data api store event handlers therefore binding event element using one shorthand event methods also associates data object element case hasdataattrs private data makes essentially useless separate issue", "d": "2/2016"}, {"body": "goal give caller way avoid accidentally creating unneeded data object still useful nt matter whether private public data whether already object agree useless user making inferences put data object okay get object enumerate hey empty never happen", "d": "2/2016"}, {"body": "think need fix docs saying return empty data objects true", "d": "2/2016"}, {"body": "agreed created", "d": "2/2016"}, {"body": "jquery code standard ui events spec apply event objects dispatched event target beginning dispatch implementations must first determine event object propagation path dom implementations applies even element propagation path moved within dom removed dom attribute part ancient behavior covered standard nt know pull rug clarify case consider problem example jsbincom jsfiddlenet", "d": "2/2016"}, {"body": "inline event handlers nt follow specification attached addeventlistener nt know assumption codes functionally equivalent light said jqueryless version functionally equivalent would like html ok documentqueryselector form addeventlistener submit function return false documentqueryselector button addeventlistener click function evt evttargetformremove indeed behave way jquery version jquery bug", "d": "2/2016"}, {"body": "getfree thanks following closing ticket", "d": "2/2016"}, {"body": "would fine really sure mobile trying adding plainobject property arschmitz clarify", "d": "2/2016"}, {"body": "bug fixed side see current code", "d": "2/2016"}, {"body": "reference see", "d": "2/2016"}, {"body": "oh yeah remembered ticket vaguely thought old tracker thanks", "d": "2/2016"}, {"body": "would nt call significant fault since change node version always good idea reinstall modules like change without reinstall nt expect everything would work correctly", "d": "2/2016"}, {"body": "really change major node versions usually needed even want safe amp reinstall necessary update newer major node version upgrade lts", "d": "2/2016"}, {"body": "upgrade lts would use nvm switch back forth patch versions node would nt always use case say pretty unconventional even want safe say yeah would really want safe switch major versions cc typicode nt use nt issue ca nt relate ticket say problem really exist repo anyway", "d": "2/2016"}, {"body": "would use nvm switch back forth patch versions node would nt always use case say pretty unconventional course always use since moment released seems nt understand let describe scenario newest node use jquery directory node comes install via nvm amp remove want says run luck remove amp make work seems like issue indeed report", "d": "2/2016"}, {"body": "let describe scenario say hard consider raaare case significant fault nevertheless frustrating us could grounds removal commithook", "d": "2/2016"}, {"body": "affect anyone uses nvm manage nodejs installs removes older nodes installing patchminor updates nvm popular nt think qualifies edge case significant fault prevents committing even locally unless bypass hooks additional barrier new contributors", "d": "2/2016"}, {"body": "proposed solution see couple possibilities remove git hook suspect would also fix issue seems common suggestion fixing issues husky browsing issues list given inclined leave asis leave git hook open issue husky repo sure fix admittedly sure mean path hardcoded assumed husky copy hook runs specific npm scripts sure different node versions would affect", "d": "2/2016"}, {"body": "admittedly sure mean path hardcoded cat githooksprecommit binsh husky path usersmgoldocumentsprojectspublicjqueryjquerycorenodemoduleshuskynodemodulesbin usersmgoldocumentsprojectspublicjqueryjquerycorenodemodulesbin usersmgolbin usersmgolcabalbin usrlocalherokubin usrlocalbin usrlocalsbin applicationscrossoverappcontentssharedsupportcrossoverbin usrbin bin usrsbin sbin librarytextexbin nodemodulesbin usrlocaloptdartlibexecbin cd f packagejson amp amp cat packagejson grep q precommit ne amp amp exit npm run precommit ne echo echo husky precommit hook failed add noverify bypass echo exit fi assume provided hardcoded path derived current shell path moment invoking note inside string", "d": "2/2016"}, {"body": "nvm popular nt think qualifies edge case nt believe said edge case said switching node lts patch versions rare case edge though rare one affect anyone think behaviour affects clear issue nt reinstall node modules run command changing major node versions seems nvm also favours reinstall approach given flag exist", "d": "2/2016"}, {"body": "said switching node lts patch versions rare case think people upgrading local node instances new major versions nt think upgrading patch minor rare issue nt reinstall node modules first npm package ever encountered forces nonmajor nodejs upgrades seems nvm also favours reinstall approach given flag affects global packages relevant case", "d": "2/2016"}, {"body": "think people upgrading local node instances new major versions nt said trying precise would nt repeat ie see husky first npm package ever encountered forces nonmajor nodejs upgrades yeah one common things maintainers package ask thoroughly reviewing issue try advice solves lot cases suspect user switches node versions lot packages needs reinstalled change node versions seems easy solve issue find happened affects global packages relevant case install packages local viseversa nt really matter installed point nvm would reinstall packages rebuild saying global packages need reinstalled local modules rebuilded", "d": "2/2016"}, {"body": "assume provided hardcoded path derived current shell path moment invoking npm install note inside string yea interesting surprised nt work without setting path", "d": "2/2016"}, {"body": "mgol seems going particulars things suggest move focus want want remove precommit", "d": "2/2016"}, {"body": "hi markelog thanks heads time hard coded mainly sublime text users problem may appear tools nt checked using sublime text git package problem modifies terminal tools nt aware committing sublime text git hook failing could nt find sublime hardcoding path makes possible run hooks terminal yeah tradeoff think check warning message code like could enhancement verify issue still present sublime maybe need setting git hooks anymore removed", "d": "2/2016"}, {"body": "typicode know hooks discouraged seems perfect case always replaced hook would nt surprise much path issue general issue os x gui apps different path terminal ones even regular nondynamic path modifications done reflected gui apps guess securityrelated measure nt able make extended reflected popular sourcetree git client os x means currently ca nt commit sourcetree cc jzaefferer nt use hack commit hook choose poison", "d": "2/2016"}, {"body": "regarding commitplease open issue still looking steps reproduce", "d": "2/2016"}, {"body": "mgol updated nt hardcoded anymore also noticed current sublime text build inherits started using cli point storing anymore new version supports installed use node version future release guess could handled well nt installed simply check skip avoid blocking gui tools users tested os x ubuntu sublime text feedbacks welcome", "d": "2/2016"}, {"body": "also noticed current sublime text build inherits path started using subl cli point storing anymore start eg launchpad gui apps os x nt inherit terminal started terminal eg currently ca nt commit via sourcetree without bypassing commit hooks find binary used new version supports installed use node version future release guess could handled well done work gui apps default", "d": "2/2016"}, {"body": "start launchpad work new hook scripts loads way loaded terminal sh githooksprecommit export nvmdir userstypicode nvmdirnvmsh amp amp nvmdirnvmsh even though gui tool nt aware terminal start modified run become available moment works sublime text started spotlight thing need set default version make available gui apps started terminal", "d": "2/2016"}, {"body": "typicode great thanks guess treat ticket reminder update husky jzaefferer think supporting way know applying workaround one app considering popularity managing node installations", "d": "2/2016"}, {"body": "glad worked big thanks typicode mgol bringing", "d": "3/2016"}, {"body": "pr", "d": "2/2016"}, {"body": "note use method remove native properties checked disabled selected remove property completely removed added element use prop set properties false instead", "d": "2/2016"}, {"body": "got test machine", "d": "2/2016"}, {"body": "looks like page using jquery two years ago bug present like submit patch could consider otherwise wo nt fixed since longer supported microsoft last month jquery patches needed consist lowrisk regression fixes", "d": "2/2016"}, {"body": "dmethvin also problem version reason testing version make sure nt something new kidsysco try jquery version", "d": "2/2016"}, {"body": "thing", "d": "2/2016"}, {"body": "sparse array detection culprit values indistinguishable holes easy fix though nt skip holes technically divergence forcing hand sparse arrays obviously broken anywhere needing support anyway plus damage confined rare scenario", "d": "2/2016"}, {"body": "technically divergence fix nt think diverge especially way long time point apply critical fixes branches", "d": "2/2016"}, {"body": "fix nt support", "d": "2/2016"}, {"body": "ah lol nt read carefully enough would nt changing breaking change though imagine people use jquery even nt test ie treating undefined differently would break code nt seem safe patch release", "d": "2/2016"}, {"body": "mmm works browsers except looks bug reaaaly edgy since array", "d": "2/2016"}, {"body": "side note sure consider edgy function used succinct way check value equal one many values sometimes one instead could", "d": "2/2016"}, {"body": "side note sure consider edgy five years since culprit added seems first reported pretty confidant", "d": "2/2016"}, {"body": "going use wonderful opportunity rant ie lt think bug happens real ie number users searching array probably counted one hand place find real ie without download gb vm one companies old production servers one ever opens web browser besides even code searches array user likely able execute code javascript page throw famous people know including test using ie emulation page laid correctly browser slow user likely give browser finishes laying rendering page even fix issue nt change fact workaround plugin fact self sure good idea introduce breaking changes markelog perhaps mention somewhere api docs something", "d": "2/2016"}, {"body": "mgol current case nt return fix cost breaking since browsers use native purely question supporting either sparse arrays search elements browser request latter fulfilling wo nt even break unit test afaict", "d": "2/2016"}, {"body": "thanks explanation get still think risky obviously wo nt requests keep current behavior change people report something expect different behavior oth think nt received lots requests change logic ie considering fact stop development lines sounds risky tamper especially patch release", "d": "2/2016"}, {"body": "yeah comes single bug report several years reporter says worked around code fix side may break opposite case nt know one exists wild appears one longer even companies running old legacy code compat view wo nt encountering problem", "d": "2/2016"}, {"body": "let get one thing straight since seems us confused would fix without touching anything else decided release would need according semver release patch version bump minor major version would violate semver policy adhere think nt invent new policies releases otherwise perspective every change could considered breaking absurd", "d": "2/2016"}, {"body": "would fix without touching anything else decided release would need according semver release patch version disagree fix one bug introducing another one would breaking change", "d": "2/2016"}, {"body": "disagree fix one bug introducing another one would breaking change question agree agree semver pretty clear bugfix patch version", "d": "2/2016"}, {"body": "even still discussed years wild one bug report reporter even says fix wo nt help affected environment nt even supported anymore suggest close issue move", "d": "2/2016"}, {"body": "question agree agree semver pretty clear bugfix patch version bug fix breaks public api bug fix bug fix breaking change semver indeed clear means major version x xyz x gt must incremented backwards incompatible changes introduced public api may include minor patch level changes patch minor version must reset major version incremented agree scottgonzalez close issue wontfix", "d": "2/2016"}, {"body": "scottgonzalez agreed let leave one alone", "d": "2/2016"}, {"body": "major version x xyz x gt must incremented backwards incompatible said interpretation suggest every bugfix could interpreted backincompat since could code depends bug agree scottgonzalez close issue wontfix", "d": "2/2016"}, {"body": "works browser could create fiddle", "d": "2/2016"}, {"body": "note forms nested main form sorry forgot paste detail example", "d": "2/2016"}, {"body": "dom expect fiddle nested forms strange things second form first removed parsing browser end two toplevel forms two nested forms given actual dom structure jquery behaving correctly", "d": "2/2016"}, {"body": "sorry nt notice domok thanks", "d": "2/2016"}, {"body": "thanks report afaik always case since made conforming spec see detailed description comment spec explicitly requires lowercasing attribute name description applies html right thing algorithm nt apply svgs jquery nt support svg manipulation rare exceptions though nt think change anything determining current context applying different algorithm would messy however seems might well avoid lowercasing let browsers magic mostly problem old ie would make work automatically thoughts ps agcolom keep mind though use jquery svgs find amp cases going support svg library", "d": "2/2016"}, {"body": "mgol yes thanks info checked list html attributes appear lowercase wonder whether might worth adding note docs", "d": "2/2016"}, {"body": "might add note would nt want end situation explicit warnings svg every api page still want investigate whether may drop lowercasing jquery regardless lack official svg support", "d": "2/2016"}, {"body": "see trail tears", "d": "2/2016"}, {"body": "dmethvin yeah issue lowercasing much perhaps nt need", "d": "2/2016"}, {"body": "mgol think probably right lowercased old ie could nt remove consistency ca nt recall discussion seems like try remove altogether", "d": "2/2016"}, {"body": "think probably right lowercased old ie could nt remove consistency yes think exactly case prepare patch", "d": "2/2016"}, {"body": "issue pr api issue continue dicscuss howif want document nt seem actionable actions possible ticket going close thanks investigation agcolom amp dmethvin", "d": "2/2016"}, {"body": "land branches mm nt seem worth okay", "d": "2/2016"}, {"body": "thanks", "d": "2/2016"}, {"body": "markelog tests broken browsers could fix reopen", "d": "2/2016"}, {"body": "seems caused using instead surprised works test using correct jquery version", "d": "2/2016"}, {"body": "also noticed variable assign called better align tests previous nomenclature would called different usual either way", "d": "2/2016"}, {"body": "reason work amd reason missed called done stop think fine", "d": "2/2016"}, {"body": "think fine stopping anything notifies test runner finished called old api resuming test suite calling also almost universally called test runners code switched new api place whole suite called", "d": "2/2016"}, {"body": "notifies test runner finished whole process called stopping whereas stop synonym finish think free choice name variables long names sufficiently reflects purpose", "d": "2/2016"}, {"body": "discussed length team meetings decided would add much code reduce performance show otherwise via pull request could consider perhaps hook would allow implement unhandled rejections plugin without enlarging code code andor harming performance note example implement stack trace plugin cuts performance half record stack trace every deferred however let say promiselike implementation jquery five years given jquery popularity use think widely used implementation javascript years ever remember anyone asking unhandledrejection hook think common reason people need one developing things like misspell method name try parse invalid json jquery things throw immediate error console say oh silly fix promisea compliant swallow exceptions like everyone else would cruel give developers clue mistakes code examples explicitly throwing errors different implicitly thrown errors like undefined developers rarely expect misspell things anticipate json returned server may malformed thrown error part api contract lot easier developer understand need handle example rejects cases like nt received complaints", "d": "2/2016"}, {"body": "years ever remember anyone asking unhandledrejection hook promisea compliant swallow exceptions like everyone else yea nt need hook either exactly promisea compliant added began think given chance errors explicitly without yelling every time wtbs must agree common use case misspellings etc developer choose error would still guard eg determining callback error one expects something truly unexpected else would still swallowed still promise sees wider adoption used conjuction deferreds gets implemented browsers experienced devs might start want behavior even jquery meaning able disable explicitly errors needed event handle rest though said creating plugin might best way go least still able need access pool bound handlers nt look get jquery inside", "d": "2/2016"}, {"body": "yea nt need hook either exactly promisea compliant added catch began think given chance catch errors explicitly without jquerydeferredexceptionhook yelling every time remove hook entirely add filters differently meant minimal default way report errors prevent people tearing hair still promise sees wider adoption used conjuction deferreds unhandledrejection gets implemented browsers experienced devs might start want behavior even jquery meaning able disable jquerydeferredexceptionhook explicitly catch errors needed unhandledrejection event handle rest goal jquery basic promisea compatibility without bloating library loaded millions times day need different behavior example know platforms support native promise willing load minified bluebird library though said creating plugin might best way go least still able need access pool bound catchthen handlers nt look get jquery inside exceptionhook yes requires bunch extra bookkeeping nt perhaps done strategically placed hooks nt know definitely seemed like wanted incorporate jquery close ticket ways facilitate better implementation without big code performance impact let us know", "d": "2/2016"}, {"body": "clear without live test case demonstrating expected observed guess invalid html rather jquery fault elements allowed nest attempts result closest valid ancestor node adopting note elements allowed contain elements either although consequences violating content model less severe going close feel free follow jsfiddle live case believe mistake upon reconsider possibly reopen issue", "d": "2/2016"}, {"body": "found total windowsettimeout srcqueuedelayjs line srccorereadyjs line probably one causing code executed srcajaxxhrjs line thx", "d": "2/2016"}, {"body": "node release code posted npm runs supported environments exactly environment running using something like jsdom see discussion release search settimeout", "d": "2/2016"}, {"body": "thanks report see use domino module provide implementation nodejs side module nt define etc breaks jquery work outside browser requires implementation browser apis jquery uses switched use taking almost browser globals global inconsistent meant someone run jquery environment nt globals provide complete implementation methods would still work bug reports see eg fix issues considered using fall back global one provided pr would add size amp complexity decided consistent take provided two choices switch implementation provides amp friends eg jsdom submit pr domino adding support apis", "d": "2/2016"}, {"body": "thanks time feedback request domino made try update code less dependent switched jsdom happy coding", "d": "2/2016"}, {"body": "jquery hides something remembers computed display called would set previous display elements forces value case pretty much case computed property value", "d": "2/2016"}, {"body": "excellent bug report test cases clear description note changing logic jquery still changes planned may check current development version beta tried use versions checked behavior fine experience problem great", "d": "2/2016"}, {"body": "thanks tried versions absolutely positioned span gets know correct value first time shown well guess bug opposite thought", "d": "2/2016"}, {"body": "need browser window amp tab run tests focused duration test case nt noticed tests flakey ci nt fail randomly except firefox even giving window focus nt always help disabled observations", "d": "2/2016"}, {"body": "wish way make things reliable think crazy edge case browser nt expect focus bouncing around inside page browser window background seeing failures browser foreground messing window tests may something need investigate", "d": "2/2016"}, {"body": "introduction integration tests fix issues also roadmap btw feel free explore provide alternative solutions", "d": "2/2016"}, {"body": "please nt promote website submitting issues jquery", "d": "2/2016"}, {"body": "jsdom problem jquery problem think need investigate bit", "d": "2/2016"}, {"body": "works browser sounds like jsdom issue reopen test case reproduce", "d": "2/2016"}, {"body": "figured worth miketaylr open ticket discuss wow jquery released years ago today pretty easy edit source point correct map file cdn concerned may trigger sort alerts people nt expect old files ever change bits", "d": "2/2016"}, {"body": "nt known bug sure look bug tracker find ticket", "d": "2/2016"}, {"body": "oh see different bug one thinking", "d": "2/2016"}, {"body": "another thing could delete discouraging use plainnamed jqueryjs jqueryminjs anyway", "d": "2/2016"}, {"body": "since verge recommending people use subresource integrity seems like editing file less less appealing idea always bothered two files version different cdns could different hashes time put map comments file true way different cdns paths mind deleting map file seems like best solution need apply one", "d": "2/2016"}, {"body": "agree deleting map file", "d": "2/2016"}, {"body": "opened cdn issue", "d": "2/2016"}, {"body": "thanks help everyone", "d": "2/2016"}, {"body": "suppose could hard code path sizzle given sizzle separate module treating path could changed nt keep nodemodules", "d": "2/2016"}, {"body": "would hardcoding path sizzle prevent users resetting something else", "d": "2/2016"}, {"body": "believe solution could simple would remove leave guy wants use sizzle appjs sizzle else use jquery selector appjs without sizzle totally modular optional", "d": "2/2016"}, {"body": "unfortunately solution wo nt work alternative selector engine gets swapped sizzle removed custom build also still hardcode path sizzle selectorsizzle", "d": "2/2016"}, {"body": "mgol answer question path sizzle could changed think would look like check", "d": "2/2016"}, {"body": "looks like reason ajaxjs potentially needs constructor one rare call related according docs must dom object even calling sizzle supported case might possible avoid pulling selector engine refactoring", "d": "2/2016"}, {"body": "turned easier thought originally thinking sizzle position could change used bower node modules given sizzle position static repo external folder think safe use path", "d": "2/2016"}, {"body": "timmywil still forcing sizzle possible make follows doubt option amd standard possible requirejs", "d": "2/2016"}, {"body": "lagden different issue plan fix specify path sizzle done sizzle continue default selector engine module swapped build time want users explicit swapping module considered dangers qsa bug fixes still apply modern browsers selector extensions fix qsa scope issue etc said still possible specify like use selectornative instead sizzle amd mode", "d": "2/2016"}, {"body": "timmywil wow much better tks", "d": "2/2016"}, {"body": "looks like duplicate let follow", "d": "2/2016"}, {"body": "works simple examples please always provide test case site run like going assume duplicate may check works nt put development version production though nt please provide complete test case wait jquery", "d": "2/2016"}, {"body": "found problem nt exists jq returned return window obj", "d": "2/2016"}, {"body": "yeah definitely fixed jquery", "d": "2/2016"}, {"body": "thanks info related sure support scenario svg support limited basically interoperability html amp class manip", "d": "2/2016"}, {"body": "example getting position svg element using position left position top works great apparently stop working chrome removes svgelementoffsetparent", "d": "2/2016"}, {"body": "yeah seems good replacement bad removing api without providing replacement chrome status dashboard erroneously says replacement really like remove new api ready see nt time back maybe suggest sth cssom would fill role would best pursue kborchers know considering chrome team plans seems pretty urgent paulirish could chime", "d": "2/2016"}, {"body": "crbug blinkdev thread would suggest someone chime bug ask philip boris jquery usecases gbcr used", "d": "2/2016"}, {"body": "posted blinkdev thread", "d": "2/2016"}, {"body": "note nt exist svg elements firefox never worth doubt whatever agcolom actually works great unless different definitions great", "d": "2/2016"}, {"body": "agcolom post minimal test case", "d": "2/2016"}, {"body": "true replacement may ask see code using deployed web another code path firefox", "d": "2/2016"}, {"body": "general find offsetparent usages jquery ui jquery mousewheel plugin relies well general usage svgspecific though", "d": "2/2016"}, {"body": "tried knock something quickly chrome firefox give different results need look bit may well code nt work great pure fluke getting correct results may go hide cave try afternoon got get ready go work meetings", "d": "2/2016"}, {"body": "nt exist svg elements firefox also nt exist ie btw interesting though judging previous discussion seems consider changing logic module try using offset properties since seems properties road removal htmlelement", "d": "2/2016"}, {"body": "since seems properties road removal htmlelement nt think ever happen would basically break current jqueries use extremely high number one would thing", "d": "2/2016"}, {"body": "nt change fact worth stop using apis considered deprecated amp legacy though", "d": "2/2016"}, {"body": "right roughly zero chance browser attempt removing offset htmlelement measure usage things deprecationremoval blink certainly used far widely", "d": "2/2016"}, {"body": "maybe nt articulate right nt mean hurry something asap measure usage things deprecationremoval blink certainly used far widely aside vendors measuring usage constructions also integrated tests popular libs tests process behaviour spec sure one removed tomorrow seems removed eventually since properties already take account new features new specs basically deprecated", "d": "2/2016"}, {"body": "think would good idea consider changing api behaviour next major things mentioned", "d": "2/2016"}, {"body": "seems removed eventually optimist unless eventually means years agree switch implementation anyway", "d": "2/2016"}, {"body": "one planning remove offset said switching away good idea anyway lies fact returns integer css pixels means often gives incorrect answers world highdpi screens subpixel text layout browser developer hat would love understand exact use cases expose better apis accomplishing", "d": "2/2016"}, {"body": "bzbarsky foolip use case follows developing tool students help learn programming draw flow chart svg graphical representation code writing everything scratch javascript output part flowchart composed various svg elements ellipse text rectangles polygons polylines statement example order line polyline represent arrow rectangle text inside rectangle today drawing end ifelse statement would check whether already arrow draw using polyline end position longest branch one closed another ifelse statement longer longer need detect nt one always case hopefully drawn line going horizontally meet branch halfway branch one could use elementfrompoint guarantee element position view hidden part div ie need scroll get everything crashes instead checked polyline positions compare position draw absolutely correct svg element return different value pixels chrome firefox chrome gives would expect ie draw line left top positions values firefox pixels however get position value another element page reference difference position looking seems consistent browsers use reference point changed longer require detect svg element position let know get new case require however may make think use cases ps future would nice leave sarcasm github comments terribly useful tends drive people away contributing open source", "d": "2/2016"}, {"body": "agcolom ok specific use case find position element page general relative element ignoring transforms moment ok since offset nt handle anyway sane way would covered getboundingclientrect transforms involved things get bit complicated apis added handle apologies perceived sarcasm nt intention meant acknowledgement fact people fact different definitions works great means depending exact situations", "d": "2/2016"}, {"body": "bzbarsky thank yes trying find whether specific element position draw imagine could common use case", "d": "2/2016"}, {"body": "agcolom absolutely correct svg element return different value pixels chrome firefox chrome gives would expect ie draw line left top positions values firefox pixels hmm return something useful firefox edge well chrome html elements nt looked jquery implements perhaps answer lies within", "d": "2/2016"}, {"body": "jquery maintainers issues heard deprecation based volume feedback compared changes past clue painful actual removal would users jquery", "d": "2/2016"}, {"body": "ok wonder getting confused jquery jquery alpha give results upload simple test case", "d": "2/2016"}, {"body": "jquery jquery may want launch live preview also interesting note difference getboundingclientrect ff chrome using jquery left right", "d": "2/2016"}, {"body": "changes likely jquery mean btw version one", "d": "2/2016"}, {"body": "fixed via width height fixed via worked pro though", "d": "2/2016"}, {"body": "scottgonzalez arschmitz afaik ui uses could present couple use cases get new appropriate api specced considering considered legacy api", "d": "2/2016"}, {"body": "uses draggable sortable rewritten scratch nt think uses persist rewrites", "d": "2/2016"}, {"body": "seems one really needs equivalent nonlegacy apis close issue nt support svg nodes exceptions since never implemented every popular browser webfacing code depend", "d": "2/2016"}, {"body": "plans patch jquery calling visible wont crash chrome quickly slimmed comments seems determination dont support offsetparent svgs regardless many people want dont want support jquery still nt error encounters elements", "d": "2/2016"}, {"body": "idontusenumbers crash even exception wo nt happen attributes removed happen using jquery older selector match svg element match svg elements ie svg elements always considered hidden jquery fixed nt need anything", "d": "2/2016"}, {"body": "break please provide detailed explanation", "d": "2/2016"}, {"body": "likely fixed master close assumption something else please provide test case reopen", "d": "2/2016"}, {"body": "sorry guess nt testing quite right evedently simply typed link jquery wrong turns nonissue thanks", "d": "2/2016"}, {"body": "make good point distribution repo general information say least would link jquery documentation could also include information common ways include library imports environments support none yet babel require node require webpack require browserify amd script tag", "d": "2/2016"}, {"body": "would love contribute code would increase perf reduce size also want reach us irc freenode jquerydev channel test jquery performance mainly use jsperf sometimes manual profiling talking years create reliable benchmark suite graphs every commit would show us performance changed every commit like plato perf second way integrate benchs testsuite cap like project third create lodashlike bench comparing previous jquery versions like also sizzle also requires manual execution would much cooler execute saucelabs browserstack core something similar tests much outdated removed", "d": "2/2016"}, {"body": "also note comparing size gzipped minified file care smaller compression nt necessarily smaller compression generally favor size performance except particularly hot paths difference exceptionally stark", "d": "2/2016"}, {"body": "markelog trying reduce size increase performance asking performance tests decrease however realized test suite completely different knew need first understand works even dream adding anything like graphics time reliable benchmark would really good sometimes difficult opinionated optimize example nt know size important performance take account checking gzipped see know literal repetitions take almost space gzip unique character strings like error messages take lot times result smaller bigger gzipped file mistery tips really thankful", "d": "2/2016"}, {"body": "always good new people reviewing rethinking code nt comprehensive performance tests would love lot work create far optimize guess usage apis since nt reliable way gather actual usage would guess adding classes function probably rare case would unusual performance bottleneck real code one thing keep mind benchmarks jsperf manipulating dom structures time takes execute code may really small compared potential force layout rendering engine see results areas like showhide dom reading one batch followed dom changing finally keep mind support really broad set browsers support modern apis nt want android throwing error dying although may willing let less right cases long nt blow able test browsers browserstack saucelabs", "d": "2/2016"}, {"body": "however realized test suite completely different knew need first understand works even dream adding anything like graphics time graphics stuff would ideal result relatively hard time consuming task point necessary shoot stars would tool integrated ci build process either would compare numbers ones checking cap would already awesome start project integrate perf tests testsuite case whereas already automatically run tests supported browsers paradigm might fit nicely optimize addclass test addclass function return test example like dmethvin said cause reflow browsers process expensive performance wise comparing hottest path method perf tests would important like method like newest beta improved animation cases huge win echoing statement like show example pull heavily improve perf increase size expensive method always used event module makes sense accept pull since would reflect events change would indeed improve perf hand improve rps something increasing size probably would nt enough counter example remember time improved traversing methods nt landed added bytes something like traverse methods already fast enough following experience would provide pull would worsen perf traversing methods decreasing size consider time probably would nt accept pull would decrease perf event module improving size", "d": "2/2016"}, {"body": "thank willingness help us improve jquery new contributors always welcome would appreciate fresh eyes codebase please feel free look code submit many pull requests deem appropriate evaluate criteria always used based size performance readability closing ticket nt want reduce size use roadmap track issues definite end rewriting internal speed framework however wo nt adding one roadmap reducing size central everything nt think need bullet point remind us ps think markelog meant pull", "d": "2/2016"}, {"body": "ps think markelog meant pull oh right sorry fixed comment", "d": "2/2016"}, {"body": "evaluate criteria always used based size performance readability btw think would makes sense document", "d": "2/2016"}, {"body": "think would makes sense document sure needed pretty standard judge pull requests based things besides sometimes x factor vote", "d": "2/2016"}, {"body": "mm okay every project different like nowadays emberangular people example use transpilers friendly size whereas consider size priority comments like nt know size important performance turned couple times", "d": "2/2016"}, {"body": "nt know size important performance certainly statement would want document depends right case performance cost great size becomes less important performance performance cost great percentage maybe factors like much performance cost impact real use cases also subjective subject opinions", "d": "2/2016"}, {"body": "nt general position though think generally favor size performance impression", "d": "2/2016"}, {"body": "anyway guess fruitless discussion nt feel strongly", "d": "2/2016"}, {"body": "include dev dependency track build command usage remove causes problems", "d": "2/2016"}, {"body": "thanks report nt aware plans nt officially support svg apis recently switched see land jquery test beta mostly avoid rounding integers good know advantages", "d": "2/2016"}, {"body": "thank quick reply take look", "d": "2/2016"}, {"body": "also issue branch filter applied svg element", "d": "2/2016"}, {"body": "jeremywadsack harmless properties get removed method automatically start using check", "d": "2/2016"}, {"body": "probably nt best solution worked wanted minimal change without affect code dependencies changed inside around line width svg widthbasevalvalue svgwidth height svg heightbasevalvalue svgheight", "d": "5/2016"}, {"body": "ca nt repro fail nt including compat mode via browserstack thing saucelabs mgol could check correct browser spawned think someone verify absence failure real thing would need disable test", "d": "2/2016"}, {"body": "markelog nt fail browserstack ie version might related run iframe rather exclude test investigate real reason failure easy mask real bug way edit joined swarm manually browserstack fails nt run outside testswarm", "d": "2/2016"}, {"body": "good catch mgol check", "d": "2/2016"}, {"body": "loaded tests iframe still luck nt remember joined swarm manually browserstack joined swarm nt remember next mgol seems better understanding run thing would mind", "d": "3/2016"}, {"body": "join swarm recognized ie one tested browser sets browser schedule test run testswarm get picked unless another identical browser gets picked first one advantage though already spawned go kill interfere amp restart job joining swarm go log see login details page private restart failing test see ie getting job running amp failing sure easy debug though perhaps copying htmlcss page joining swarm setting iframe url one running tests effects module would reproduce amp give better starting point debug idea good luck ping still unclear", "d": "3/2016"}, {"body": "thanks proposals nt yet know release jquery time took us get long expect releasing frequently least try get closer decide browser support strategy data way early need guess landscape observations ember angular even still support conservative dropping support older browsers less even dropped ie amp still would nt able use supported svg ie versions support svg class manipulation drop ie surely wo nt happen many years come also snippets posted little misleading switching us would nt remove much code see would result jqueryclasslist plugin eg js addclass function value var classes elem var var len thislength var proceed typeof value string amp amp value nt think able decrease library size lot dropping", "d": "1/2016"}, {"body": "one thing referring developed umbrella js jquery alternative fun learning would love contribute jquery things learned open ideas improve jquery code base ideas please report issues", "d": "1/2016"}, {"body": "nt know svg support completely true pity since problem thing many small things add however might trouble worth manypeople community jquery try compile list later today able analyze indepth see particular example part could improved best would codepattern reuse check fn x otherwise loop spread three different functions even looped two different ways could easily generalized generic function eacharg looping nodeargument pair js definition uprototypeeacharg function args callback return thiseach function node thisargs args node foreach function arg callbackcall node arg usage b c could also b c b c function return b c u b c eacharg b c function minor major b c b b b b c c c b c c consolelog minor major inside args parse arguments make array valid strings finally str make functions string reuse parts becomes much smaller", "d": "1/2016"}, {"body": "instance code js addclass function value var classes elem var var len thislength var proceed typeof value string amp amp value could reduce something like untested multiple add parameter compatible right js addclass function value var name value", "d": "1/2016"}, {"body": "think sure nt use additional function call potentially hot path good benchmarks though possible could generalize patterns amp reuse find something could submit prs correction since resolved early assert browser support yet going close issue continue discussion though thanks", "d": "1/2016"}, {"body": "see mostly tradeoff initial load smaller vs performance faster sure add performance benchmark pr however found highly relative browser", "d": "1/2016"}, {"body": "definitely interested improvements although far enough away nt think say browsers environments support remember people use jquery places like chromefirefox plugins node jsdom well ideas might go roadmap", "d": "2/2016"}, {"body": "agree could use better correspondence modules better focus test markup lot project still use big messy global document really hard change risks breaking tests elsewhere would great pr someone wanted learn jquery project structure mostly rearranging code learn lot process", "d": "1/2016"}, {"body": "like improve showhide tests approach would acceptable consider writing tests like", "d": "1/2016"}, {"body": "already concerned highly related tests span lines sure separating help things however qunit supports nested modules via callback module would assuage concerns", "d": "1/2016"}, {"body": "already concerned highly related tests span lines sure separating help things every project according many books subject well projects code also nt think matters many lines code spans think matters well could understood supported would like note ticket proposes rewrite bad parts also suggests write manner every new test", "d": "1/2016"}, {"body": "would like refer distinct counterexample fine sufficiently dry nightmare problem highly related tests without sufficient abstraction guilty recently tests question defense nt yet upgraded version qunit encourages", "d": "1/2016"}, {"body": "fine sufficiently dry nightmare one side spectre fine nightmare problem highly related tests without sufficient abstraction issue related bit different kind say problem highly related tests without sufficient abstraction guilty recently tests question defense nt yet upgraded version qunit encourages actually could long time new way convenientexplicit seems nt provide much existing functionality clear creating ticket pursuing idea blaming anyone anything tests one oldest js tests seems came time update ideals", "d": "2/2016"}, {"body": "seems general guidance ticket rather concrete task timmywil consistently moving things roadmap keep zombie tickets open long", "d": "2/2016"}, {"body": "seem like roadmap item since nonspecific", "d": "2/2016"}, {"body": "said like improve showhide tests approach would acceptable consider writing tests like would like provide example new tests could structurized discuss pull approach acceptable land new show hide tests maybe add note docs close ticket close ticket nevertheless think zombie ticket need find time ticket", "d": "2/2016"}, {"body": "waited adding roadmap like see example signing across tests", "d": "2/2016"}, {"body": "since showhide gon na change logic point change tests since one else seems interested improving current state closing", "d": "3/2016"}, {"body": "selector valid special char needs escaped like see", "d": "1/2016"}, {"body": "yes another duplicate", "d": "1/2016"}, {"body": "really helped drupal site submenus longer displayed add two backslash jquery function", "d": "9/2017"}, {"body": "duplicate", "d": "1/2016"}, {"body": "hi looks standard attribute standard attributes global attributes discussion says avoid nonstandard attributes furthermore afaik second logging property dom javascript object might wrong thing attribute difference attributes propperties general suggest reading stackoverflow", "d": "1/2016"}, {"body": "works please make sure using latest version jquery suitable environment currently either", "d": "1/2016"}, {"body": "also makes good point valid attribute", "d": "1/2016"}, {"body": "like clarify bit yeah correct almost actually basically sideeffect attribute check whenever boolean simple regexp jquery return name bottom line guarantee kind behaviour incorrect markup furthermore afaik second consolelog logging property dom javascript object might wrong thing attribute case actually property concept really hard grasp sometimes always return content property aka dom element property would return idl property aka js representation dom element would idl properties sync content properties defined spec like expandos properties aka undefined spec old ie lt whole different story though main reason division", "d": "1/2016"}, {"body": "nt want confuse even spec actually uses word attribute property either content attribute idl attribute started referring content attributes attributes idl attributes properties make easier differentiate idl ones retrieved property access", "d": "1/2016"}, {"body": "good overview spec markelog talking", "d": "1/2016"}, {"body": "sounds like wanted open issue repo", "d": "1/2016"}, {"body": "believe fixed might causing issues moment see note done sizzle", "d": "1/2016"}, {"body": "close general hygiene ticket stay open reasonably confident others", "d": "1/2016"}, {"body": "believe addressed comment mentioned ticket description aside resolved cases proof tests even exist might determined think reached reasonable criteria otherwise nt understand want determine selectors also think bad hygiene also tickets open forever without possibility closing except subjective feeling confidence however strongly feel please feel free reopen", "d": "1/2016"}, {"body": "nt understand want determine selectors looking unit tests think bad hygiene also tickets open forever without possibility closing except subjective feeling confidence agree closing indistinguishable wontfix point avoid reoccurrence looking objective characterization go someone comments issue certifying examined unit tests found selections scoped broadly could match qunit output commit lands branch claiming correct selections", "d": "1/2016"}, {"body": "someone comments issue certifying examined unit tests found selections scoped broadly could match qunit output commit lands branch claiming correct selections first discounted already found offending examples attributesjs attributesjs attributesjs corejs corejs cssjs cssjs stop get point", "d": "1/2016"}, {"body": "even though tests nt matter element taken work understand train thought commit lands master branch claiming correct selections would propose gradually since could lot work action one commit would preferable yeah hard example take module tonight agree closing indistinguishable wontfix point avoid reoccurrence looking objective characterization well always comment tests fix lot already even counting aforementioned commits think longer write fragile tests", "d": "2/2016"}, {"body": "hi decided hijack limiting test suit operations module markelog immediately hit bump mentions attributesjs one candidates explicit limiting necesserily first one look test see element used obvious element ie nt need explicitely filtered becomes obvious looking inside", "d": "2/2016"}, {"body": "ticket operation safety appropriate leave selections like problematic cases almost always start element selectors since likely inadvertently match content beyond control eg qunit", "d": "2/2016"}, {"body": "ok ignored selections use id onthefly created markup explicit wrap element like xml element context like left unlikely possible select outside inheritance used lines mentioned question want fixed inheritance context selection personally understand thingy defined", "d": "2/2016"}, {"body": "ok ignored selections use id onthefly created markup explicit wrap element like xml element context like explicit wraps necessarily good begins section code manipulates attributes rather content dynamically generated bad form purview issue selections would question want fixed inheritance context selection straightforward means would reserved exceptional cases selection broader required proper testing nt attributesjs personally understand thingy defined fixed copy would better named independent one test see testindexhtml testjqueryjs used whenever test needs rely jquery functionality tested eg manipulation tests could succeed even jquery flaws selection doubt ever get level separation honestly mostly academic issue core functionality jquery stable rarely see problems relying system test however distasteful practice", "d": "2/2016"}, {"body": "another offender child adjacent selector test running whole test suite chrome almost always fails p gt gt assertion", "d": "2/2016"}, {"body": "heh actually first identified offender", "d": "2/2016"}, {"body": "mgol see function used selector apart function used looks like always used elements inside adding following logic id part parameter add id", "d": "3/2016"}, {"body": "adding following logic id part parameter add id nt work documented arbitrary selector therefore ca nt modify without tokenizing whole thing nt belong test code would opposed making copy postselection filtering semantics though", "d": "3/2016"}, {"body": "moved roadmap", "d": "5/2016"}, {"body": "thank opening issue even wanted add support think remain plugin limited support android nt support mutation observers also event delegation reason deprecated usually unnecessary add event handlers checked elements way scope could almost always limited hence switch later could handled recommended method words features lost deprecation", "d": "1/2016"}, {"body": "understood request fire events dom manipulation done jquery apps via jquery mutationobserver support necessary might nice plugin would still hooks inside jquery make possible", "d": "1/2016"}, {"body": "see new might somewhat related depending trying", "d": "1/2016"}, {"body": "usecase hate pecking around looking javascript block binds things particular dom structure would nice use hardcoded name data attribute relate corresponding block javascript started developing code dom wrote javascript would fire callback encountered dom structures particular dataattribute var dommodule dommoduleregister function name callback pageload dommanip check see new dom dataattribute matches name parameter call callback possible link block code corresponding dom like want find javascript binds particular chunk dom look value search name javascript thus able quickly find corresponding javascript update smile trouble part able handle pageload need way asynchronously rechecking dom manipulated postpageload direction heading sort pubsub dom manip publishing via jquery dom structures change subscribing block asynchronously fire callback added", "d": "1/2016"}, {"body": "timmywil thanks link plugin help use case thought thought support mutation observers older browsers could something jquery could provide understand would rather keep plugin thanks", "d": "1/2016"}, {"body": "afreidz sounds like may trying something like custom elements want definitely recommend trying use emerging standards shims needed try polymer rather rolling implementation", "d": "1/2016"}, {"body": "dmethvin yea probably always like going thru process rolling implementation first way choices truely needdriven rather popularitydriven seems like im running need developer happiness anyway opposed business need polymer may bit heavyhanded anyway thanks suggestions", "d": "1/2016"}, {"body": "leobalter wanted update qunit latest well managed use versions amp introducing race conditions tests making fail randomly every full test run could look seeing things like", "d": "1/2016"}, {"body": "hmmm sure race conditions looks like kind thing would pop response failures ultimately stems test results html appearing document used test fixture thought never really come good approach think best way leveraging assertions rely upon document context eg selector child adjacent grandchildren something like", "d": "1/2016"}, {"body": "failures like start somewhere nt something changed qunit", "d": "1/2016"}, {"body": "pretty sure changed output format jquery broad selection picking new elements qunit html reporter", "d": "1/2016"}, {"body": "thanks report duplicate technically speaking breaking change means something allowed documentation broke new release breaking unofficial apis supported edge cases etc breaking change never asserted supporting invalid css selectors working accident allowed change behavior nonmajor release said aware might break code put minor release patch try patch releases break even undocumented stuff possible", "d": "1/2016"}, {"body": "thanks clearing sorry finding dupe feeling would case breaking undocumented working syntax would considered breaking change thought would better report unsure", "d": "1/2016"}, {"body": "sure nothing wrong reporting good idea always search existing bugs reporting always trivial find worries", "d": "1/2016"}, {"body": "expect would break easily collections go transformations eg also code block nt going anything soon detach element going return empty set run elements", "d": "1/2016"}, {"body": "oh bad wrote example without testing thanks reviewing idea nt understand problem imagined save next parent element collection entire collection", "d": "1/2016"}, {"body": "difference appending remembering parent", "d": "1/2016"}, {"body": "curently detach collection remembering element suppose write something like javascript detach jqcollection function var jqthis jqthisdata tmpnodeparent jqthisparent tmpnodenext jqthisnext detach reattach jqcollectioneach function var data data jqthis thinking maybe jquery propose shortcut faster least two advantages use something like cancelling drag possibility accelerate changes", "d": "1/2016"}, {"body": "thanks request think likely introduce unexpected behaviors comes implementing convinced usefulness outweighs cost prefer let start plugin", "d": "1/2016"}, {"body": "first jquery example passing argument triggering documented constructing setting argument resulting object general good idea avoid shortcut methods need set event data instead create data want trigger via either code snippets nt showing using triggered event clear mean trigger keyboard events keydown event happening even first case probably nt contain data expect due error mentioned", "d": "1/2016"}, {"body": "hello sorry yes mistake issue still stands example rendered react component jsdom document component registers event handler want test first attempt actually use like event trigger keydown event see nothing console however triggers see output console wondering issue using jquery register event handler however triggered click event using jquery executes handlers registered using react full test example something function setup var doc jsdomjsdom thanks", "d": "1/2016"}, {"body": "wondering issue using jquery register event handler yes general use dom use dom since api level jquery method runs handlers attached jquery jquery also listens dom events however triggered click event using jquery executes handlers registered using react nt see code ca nt say sure whether expected using attribute element would expected jquery looks", "d": "1/2016"}, {"body": "hello makes sense triggering events registered react led believe jquery something else hood however side effect react implementation closing issue thanks", "d": "1/2016"}, {"body": "kind support looking think would really hard expose either via classic api built assumption us users single multiplexed native event handler special event hooks take advantage able capture events bubbling jquery handlers see jquery dom manipulation knows jquery events clone andor teardown elements go away could create new api several hard issues solve want foundation use cases limited scroll scenarios seems like plugin might best approach way avoid solving problems nt yet exist general case also reliable way check support non implementations reliably throw exception see object instead boolean might future implementations support ignore options nt understand", "d": "1/2016"}, {"body": "kind support looking nt presume know enough event handling jquery typical usage patterns valuable opinion right design highlevel thing want maximizing scroll performance way code attaching listener disable use could even syntax event name list eg knob lets developers optin passivebydefault events currently harder due lack equivalent escape hatch necessary like maybe developers resort want optin performance benefits talked developers one popular library already want perf benefit ok thrilled changing usage order get reached scottgonzalez couple weeks ago part discussions past year problem api pointer events working group suggested worth filing issue discuss also reliable way check passive support explainer shows typical obscure pattern featuredetecting dictionary members", "d": "1/2016"}, {"body": "realize api tricky option already exists like team start discussing embrace future native apis much favor adding general requests embracing new apis quickly met lot pushback andor bikeshedding far actual usable api ideal solution would drop silly add useful native api could easily mimic since deprecating probably wo nt happen could implement yes suck parse options perhaps reach new level parameter hockey within jquery doable since required acts delimiter two optional object parameters let start limiting discussion right whether feature make jquery", "d": "1/2016"}, {"body": "could even syntax event name list eg knob lets developers optin passivebydefault touchstart touchmove events wheel currently harder due lack equivalent touchaction escape hatch necessary like touchstart withpreventdefault handler get pretty close today special events caveat events attached specific element behave like first event whether provide class works fine elements one touchstart handler per element", "d": "1/2016"}, {"body": "realize api tricky option already exists extra arg public api messy least problems nt even mention solving architectural issues legacy expectations would much harder shoehorn capture passive existing api define interacts existing plumbing worrying much break create new api start empty slate say example want events never cloned internally tracked manipulation also subject special events system jquery special triggering logic", "d": "1/2016"}, {"body": "get pretty close today special events interesting thanks anyway leave jquery experts figure anything want let know questions feedback api browser behavior ship passive support chrome currently targeting upcoming release expect see bunch evangelism hard data performance benefits seen practice believe premature worry much given early adopters ok options working around jquery", "d": "1/2016"}, {"body": "thanks opening like see numbers performance benefits implementing tho", "d": "1/2016"}, {"body": "plumbingwise seems feasible extra data pass extra code jqueryeventprototypepreventdefault degrades gracefully worse performance successful effects calls promised make porcelainwise five arguments ugly scottgonzalez suggestion works extending events selector data handler signature however nt work well events selector data signature butnot bound handlers instead look like explicitly undefined still think work", "d": "1/2016"}, {"body": "plumbingwise seems feasible extra data pass addeventlistener lot plumbing support capture let consider capture proposal extra code jqueryeventprototypepreventdefault way understood rbyers document attach ignored perhaps message goes console saying made mistake pass let browser yell user also since passive seems strictly performance optimization probably let people set flag even supported porcelainwise probably relatively rare need correct whatever api convey new data nt necessarily support signatures options could object position could check eliminate ambiguity", "d": "1/2016"}, {"body": "might want consider polyfilling visible effect passive browsers nt support reduce chance code working fine old browsers failing newer ones see example probably nt critical", "d": "1/2016"}, {"body": "lot plumbing support capture let consider capture proposal yes make absolutely explicit ticket purely limited attach ignored perhaps message goes console saying made mistake pass let browser yell user pretty sure also need skip preventdefault avoid lying also since passive seems strictly performance optimization probably let people set flag even supported yes nt work would visible people call flag explicit promise avoid probably relatively rare need correct whatever api convey new data nt necessarily support signatures options could object position could check eliminate ambiguity please let would clumsy us users introduction inheritancebased pattern decidedly unjquery", "d": "1/2016"}, {"body": "rick released comparison video showing potential passive event listeners cnncom pretty compelling deep dives cnn similar websites eg bloomberg identify candidates passive event listeners early take suggests passive event listeners supported jquery would really help lot", "d": "4/2016"}, {"body": "fasttracked several major browsers add plumbing seems like would limited use unless enough browsers support links browser tickets tracking implementation would helpful", "d": "4/2016"}, {"body": "tracking bug safari told interested contributed design knows ifwhen make implementing priority gecko tracking bug priority nt clear hearing bunch demand web developers though mostly response video tweet bit chicken egg problem think engines waiting see extent developers adopt many developers talk nt easy way use jquery nt expose yet developers talking nt using jquery get benefit right away got metrics let us report perf improvements sites aggregate probably fuel interest", "d": "4/2016"}, {"body": "clear plugin mentioned already lets take advantage passive event listeners long always want events particular type particular element either passive nonpassive nt ever attaching cancellable events page remove class check completely force noncancellable need moment able use passive event listeners jquery lack implementation nt blocker describe use cases see get going", "d": "4/2016"}, {"body": "dom spec making increasing use event listener options passive late last year invokeonce last month delegation likely soon think get board trend adding final argument deprecating opening avenue could expressed though actually implementing would require significant amount complexity registering updating runallthethings handler", "d": "5/2016"}, {"body": "though actually implementing would require significant amount complexity registering updating runallthethings handler messy part major change looking way satisfy sooner jquery later need least separate per unique combination optionscapture point becomes easier one per jquery event especially land jbedard loweroverhead code likely change privatenotprivate internal data structure well known used dev tools report jquery handlers event", "d": "5/2016"}, {"body": "clear plugin mentioned already lets take advantage passive event listeners long always want events particular type particular element either passive nonpassive thanks dave agree looks like enough ensure people nt blocked reading jquery event customization support better understand interim clarify would happen code thinking pattern probably even better supported framework agnostic way perhaps need jqueryspecific plugin eg wicgeventlisteneroptions propose creating generic library fires events named implemented passive listeners could even go far wicgeventlisteneroptions library makes touch listeners page passive default actually given jquery push pointer events maybe listeners added jquery always passive jquery users required annotate special elements page exactly pointer events even short term could perhaps global option enable new touch nt block scrolling mode stepping stone full transition pointer events scottgonzalez wdyt describe use cases see get going think really need hear end developers using jquery trying get perf benefit passive touch listeners code cc tylerbrandt optimizely works cnn", "d": "5/2016"}, {"body": "using thirdparty library image carousel using jquery manage use native javascript inconsistent implementation create event listeners think agree ideal also gets messy listener need thing would play ability create namespace events like idea adding options argument seems like would closely resemble match native implementation enough information use case", "d": "5/2016"}, {"body": "would touchstartnopreventdefault play ability create namespace events multiple namespaces event asking thirdparty library would need include plugin add someone could write shim takes extra arg essentially thing matter api approach discussion regarding mixing event types still applies first one attach jquery event specific element defines whether nopreventdefault ca nt mix element", "d": "5/2016"}, {"body": "rbyers interim clarify would happen code document touchstartnopreventdefault handler document touchstart handler done order second handler would also ignore preventdefault since two handlers would multiplexed created first one done reverse order would effect", "d": "5/2016"}, {"body": "even short term could perhaps global option enable new touch nt block scrolling mode flag globally changes behavior generally becomes nightmare plugin developers ca nt tell behavior expect arschmitz jquery mobile calls originate expect indirect uses existence would problematic global flag", "d": "5/2016"}, {"body": "feel like position misconstrued scottgonzalez proposed interface adding passive listeners would observed options parameter would valuable even without passive support since better matches addeventlistener type callback options would willing tolerate observable effects depend upon registration order could reattach passive dispatchers upon nonpassive listener registration maybe automatically go passive event type employ solution must privilege first registration", "d": "5/2016"}, {"body": "scottgonzalez jquery mobile call response older versions current ones however working adopting hammerjs replace gesture events polyfills extent calls preventdefault prevent scrolling needed hammer use jquery longer wo nt issue used would really like see support added event listener options passive events general though jquery mobile always battled issues scrolling performance android devices would directly help cases problem writing maintaining plugin need dmethvin suggested use mobile need would really prefer see core", "d": "5/2016"}, {"body": "done involves major rewrite event system breaking changes way affect internals nt see happening least jquery knows occur looking ways satisfy need access passive event listeners via jquery sooner year would willing tolerate observable effects depend upon registration order though definitely happen correct full implementation native options like suggestion turns polyfill essentially assuming spec gets far enough nt get screwed shipping something changes later points longer delay delivering flag globally changes behavior generally becomes nightmare plugin developers ca nt tell behavior expect right already global behavior makes blocking default takes lines code like plugin make nonblocking always used people want caveat quick solution mentioned ca nt mix options eventelement combination think way complex specialeventhook code essentially defining new event needed ca nt tell discussion far whether needed current use cases", "d": "5/2016"}, {"body": "introduce new syntax events elem clicknamespace passive function hello", "d": "5/2016"}, {"body": "much opposed introduce new jqueryspecific syntax standardized behavior", "d": "5/2016"}, {"body": "agree try align spec much possible cutting corners browser apis clumsy", "d": "5/2016"}, {"body": "see point one alternative ground breaking changes", "d": "5/2016"}, {"body": "also future proof nonboolean options", "d": "5/2016"}, {"body": "support tracked let consider capture proposal guess one seen mentioned quite issues meant provide kind support option nt get related one thing certainly need parameter related methods like parameter nt care new completely different apis feature already tracked somewhere seen comments difficult would implement nt see possible argument fact simply done", "d": "6/2016"}, {"body": "supporting capture passive properly needs breaking changes ca nt happen mentioned case adding parameter api event plumbing api assumes single multiplexed handler supports bubbling willing pretty serious breaking changes get support directly case would say bother", "d": "6/2016"}, {"body": "supporting capture passive properly needs breaking changes ca nt happen understand question remains main feature request issue tracks one talking capture passive events nt even know mentioned case adding parameter api event plumbing understand implementation point view matter adding parameter requires lot work apparently breaking changes far api concerned would matter adding parameter would nt willing pretty serious breaking changes get support directly sensible option way breaking changes mean changes would break currently working applications use jquery could make example explains would unavoidable understand implies enormous rewrite effort nt quite understand taken account beginning think one could live without capture events really break bc", "d": "6/2016"}, {"body": "started writing reply way large put ticket take look changes made far easy ones however right place discuss nt think need create tickets clear actually work", "d": "6/2016"}, {"body": "", "d": "11/2016"}, {"body": "use throttle resize mousewheel scroll events work everywhere used reduce number events fired bigtime really isnt hard implement code good thing pubsub multiple items listen one eg scroll handler need handlers anymore", "d": "8/2017"}, {"body": "throttling certainly big improvement browser still needs call javascript function every rendering frame even small function like throttle check reduce fps rate considerably hooked blocking event", "d": "8/2017"}, {"body": "produces", "d": "10/2017"}, {"body": "childishgiant api proposal ticket still open meaning support passive event listeners moment need wait release", "d": "10/2017"}, {"body": "wish spec gave way specify default event options globally type kind silly majority events dont use nt willing change default behavior get support legacy expectations touchstart still bit funny majority handlers feature detect new support standard libs patched support low level api change compounding issue recent chrome versions standard touch detection returns true windows browsers meaning whole mess ca nt avoided feature detecting avoiding touch events anyways grievances aside looking forward solve kind chores abstracted libraries like jquery saves much headache", "d": "11/2017"}, {"body": "solve problem", "d": "1/2018"}, {"body": "code mentioned sergiorighi working direct event binding example indirect event binding like seems working idea indirect event binding", "d": "2/2018"}, {"body": "would need attach event handler delegation seeing elements path class", "d": "2/2018"}, {"body": "dmethvin thank suggestion trying create custom event delegation ca nt really close jquery made plunker demo also post question stackoverflow regarding please give light jquery event delegation thanks advance", "d": "2/2018"}, {"body": "bayucandra stackoverflow right place discussions ticket tracking feature", "d": "2/2018"}, {"body": "trying follow sergiorighi bayucandra warning violation added nonpassive event listener scrollblocking wheel event consider marking event handler passive make page responsive caused line code need put remove warning thanks", "d": "3/2018"}, {"body": "fixed seo runs google light house reverted due concerns wider effects", "d": "4/2018"}, {"body": "status", "d": "4/2018"}, {"body": "still planned pr refactor event system ready yet micha\u0142 go\u0142\u0119biowskiowczarek", "d": "4/2018"}, {"body": "issue passive added", "d": "8/2018"}, {"body": "thanks opening issue however documentation issues go perhaps change element node", "d": "1/2016"}, {"body": "pr", "d": "2/2016"}, {"body": "found problem comes function change error disappears getting css style done properly", "d": "1/2016"}, {"body": "hm seems issue relevant beta", "d": "1/2016"}, {"body": "caused right", "d": "1/2016"}, {"body": "must implying nt worth current solution default current window might even alright building appendable elements iframes", "d": "1/2016"}, {"body": "implying trying establish blast radius fix proposed seems fine", "d": "1/2016"}, {"body": "nt think case elements element parents unless inline display none eg working years complaints fast small clear suddenly need reverse logic", "d": "1/2016"}, {"body": "matter either add unit tests asserting consensus decision document disconnected elements invalid context methods concision decision removed tests", "d": "1/2016"}, {"body": "concision decision removed tests completely unrelated note complete absence", "d": "2/2016"}, {"body": "completely unrelated note complete absence toggle tests done support show hide logic toggle logic showing hiding something equivalent show hide toggle basically choosing call show hide also incapsulated logic choice ps sorry verbosity", "d": "2/2016"}, {"body": "precisely point whether call different effects ideally would coincide always equivalent always equivalent", "d": "2/2016"}, {"body": "deciding whether call yes exactly logic deciding logic one reflect obvious relation think discrepancy ideally nt think ideally correct word seems logically point", "d": "2/2016"}, {"body": "nt think ideally correct word seems logically point agree case past", "d": "2/2016"}, {"body": "agree case past would count bug", "d": "2/2016"}, {"body": "seem like arguing fix", "d": "2/2016"}, {"body": "arguing keeping old logic whereas fix bug could additional old behaviour argument replacement position comes two statements use exact condition determining element hidden think given truth previous behaviour line first condition battle tested arguments change", "d": "2/2016"}, {"body": "use exact condition determining element hidden think given truth never need determine element hidden needs guess setting nonempty inline display necessary sufficient give element layout distinction significant determining element hidden matters methods might need show already know priori previous behaviour line first condition battle tested arguments change repeating claim nt make true arguments change principally eagerness permanently unnecessarily set inline display values derived circumstantial style cascades already demonstrated inconsistency", "d": "2/2016"}, {"body": "show hide never need determine element hidden simple true nt understand trying say way determining element hidden repeating claim nt make true repeated seems confused position summarized arguments change principally eagerness permanently unnecessarily set inline display values derived circumstantial style cascades already demonstrated inconsistency still sets inline display cases still wo nt go away preferred end result improve performance asked us one asked us change logic one found unexpected confusing yes case responsive stylesheets said still words principally eagerness permanently unnecessarily set inline display values derived circumstantial style cascades sufficient argument stand position leave perf part improvement hook new logic contradict change logic back would nt need fix ticket would need consider fixing inconsistency showed", "d": "2/2016"}, {"body": "show needs guess setting nonempty inline display necessary sufficient give element layout distinction significant determining element hidden matters methods might need show already know priori call significant say needs guess say nt matter whatever way determining stands anyhow", "d": "2/2016"}, {"body": "fadeto btw", "d": "2/2016"}, {"body": "summarize position completely ignore hiddenness elements except deciding try forcing layout specific goal ie desirable empty inline display computed possible nondisconnected etc need know elements hidden affects behavior use logic determine believe assume disconnected elements hidden ticket determine", "d": "2/2016"}, {"body": "hide completely ignore hiddenness elements logic determination nothing explore show toggle fadeto animate etc need believe assume disconnected elements hidden", "d": "2/2016"}, {"body": "come agreement reason ask blocker also ca nt even grasp warn shim old behavior migrate without list behavioral changes also need docs", "d": "2/2016"}, {"body": "yeah need submit pull request details bit swamp lately one week sorry dave", "d": "2/2016"}, {"body": "yes likely yui compressor still thinks reserved word even though implementation took workaround release fixed years ago since reported back none jquery supported browsers required quoting several years", "d": "1/2016"}, {"body": "getting syntax errors even worse", "d": "1/2016"}, {"body": "fiatux syntax error file found error seems like even running jquery", "d": "1/2016"}, {"body": "thanks opening issue reason autoinserting nt thought element old ie required manipulation tables work given currently supported browsers require tbody table elements thought better users add elements actually need nevertheless mean want keep behavior jquery probably behavior", "d": "1/2016"}, {"body": "fixed", "d": "1/2016"}, {"body": "thanks report however microsoft implemented polish programmers keyboard opposed systems beyond scope jquery details interested story problem may read", "d": "1/2016"}, {"body": "thanks clarification sorry bothering", "d": "1/2016"}, {"body": "handlers called specific event occurrence share object example bubbling phase see change property creating fully independent deep copy object per handler order avoid would incredibly expensive object accessed period event handler called need values object save variables rather holding reference entire object browsers native event object ceases exist code like example tries access would throw error", "d": "1/2016"}, {"body": "actually browsers parse selectors righttoleft well best place issue actually learnjquerycom repo", "d": "1/2016"}, {"body": "context note logically first containment check added gecko reports disconnected elements computed display none whereas webkit blink report empty whereas means case expect user know want append newly created element case nt new concept detached elements considered shown counterintuitive inconsistent opinion disagree summary behavior always respects inline display else changed respect disconnected elements longer make assumptions cascaded display without inline display treated visible believe previous behaviour correct expected since never seen complaints complaints locking default display case user nt call improved performance case user call performance worse nt think fair assume ing cascadehidden elements fast think fair assume ing elements wo nt break site responsive layout like cases reversed believe behaviour performance would nt suffer would improved seem focusing microcosm showhide behavior even could easily convert work contains work firefox contains unchanged elsewhere introducing support test consensus desiring put pr", "d": "1/2016"}, {"body": "even could easily convert work contains work firefox contains unchanged elsewhere introducing support test consensus desiring put pr related would checking faster use places place checking element disconnected", "d": "1/2016"}, {"body": "answers different question essentially conflates detachment computed might able replace code performance boost could nt replace would fact require browsers instead firefox", "d": "1/2016"}, {"body": "also would characterize inline toggling preferred mode operation cascadeoverriding legacy behavior performance truly matters users utilizing former wo nt ever hit", "d": "1/2016"}, {"body": "note logically first containment check added gecko reports disconnected elements computed display none whereas webkit blink report empty nt really matter added matters disagree summary behavior always respects inline display else changed respect disconnected elements longer make assumptions cascaded display without inline display treated visible understand rational guess see would interpreted point view yes elements without display treated visible truth detached elements visible complaints locking default display tickets nothing detached elements tickets still actual nt think fair assume show ing cascadehidden elements fast users wanted faster sure fast think fair assume show ing elements wo nt break site responsive layout sure trying say seem focusing microcosm showhide behavior care logic worsen expected behaviour improving incorrect one even could easily convert work contains work firefox contains unchanged elsewhere increasing size already increased size using could nt replace contains would fact require browsers instead firefox already checking element attached getclientrects replace method tests good sure opinion", "d": "1/2016"}, {"body": "two main concerns perf compat think established code faster least important cases one goals maybe play blog post graphs going spoonful sugar helps medicine go plus makes paul irish happy compat concern best answered looking cases break proposing reasonable solutions people use get around tried earlier purist approach kept reaching points nt anything offer breaks people fix hide detached elements fails cases totally okay asking people change example need explain", "d": "1/2016"}, {"body": "understand rational guess see would interpreted point view yes elements without display treated visible truth detached elements visible except inline eg previous complaints locking default display tickets nothing detached elements tickets still actual caused lines code question nt think fair assume show ing cascadehidden elements fast users wanted faster sure fast first run repeats really want speed nt relying us detect cascaded using classes inline display even still made things faster many cases think fair assume show ing elements wo nt break site responsive layout sure trying say dude care logic worsen expected behaviour improving incorrect one say overriding css cascade guess already least border incorrect even could easily convert work contains work firefox contains unchanged elsewhere increasing size already increased size using wrong tool job breaks already checking element attached getclientrects replace method tests good sure opinion nt map attached maps layout implies attached vice versa perfect wrong", "d": "1/2016"}, {"body": "except inline display none eg previous hide yeah explicit desire user make hidden point still holds caused lines code question tickets nt resolved new logic actually code tries correct still relevant like display value cemented inline style still true even still made things faster many cases yes goodie changed logic worsen improving stuff said repeatedly whereas yet still improve perf make logic dude meant tickets still relevant say overriding css cascade guess already least border incorrect nono confusing incorrect user incorrect behaviour one might argue nt overriding css cascade guess best user hand nt call already hidden element ishidden wrong tool job breaks detachedshow saying would improve break disturbing yet still nt saw justification reversing logic disconnected nodes three years nt receive complaints getclientrects nt map attached maps layout implies attached vice versa perfect ishidden hidden wrong whatever gets job done personally nt care method called use dom methods unconventional ways broken unconventional ways discussion", "d": "1/2016"}, {"body": "dmethvin hide detached elements fails cases totally okay asking people change elem hide appendto body elem appendto body hide example need explain really hard make arguments situation clear participants ie works perfectly detached elements nt need discussing tried explain couple times guess ca nt clear", "d": "1/2016"}, {"body": "going stick see merit sides argument address complaints come markelog feel free say nanny nanny boo boo behavior locked pending usersubmitted tickets", "d": "3/2016"}, {"body": "logic broken shadow dom return false elem shown shadow dom change works notice getrootnode new feature may require polyfill awful maybe access parentnode recursively javascript var ishiddenwithintree function elem el", "d": "1/2017"}, {"body": "need escape character please ask help stackoverflow jquery forum", "d": "1/2016"}, {"body": "thanks opening issue please provide test case help assess issue", "d": "1/2016"}, {"body": "disregard moron old version jqmigrate along", "d": "1/2016"}, {"body": "oh shoot recognized reported", "d": "1/2016"}, {"body": "please take look jsfiddle jquery seems work contrary saying firefox however move function declarations call works", "d": "1/2016"}, {"body": "one line equivalent since two properties defined call jquery silently nothing jquery throws error since seems lot code expects able attach undefined event handlers added behavior back see sure coming next weeks", "d": "1/2016"}, {"body": "many seem like would reported jquery well saying change firefox tool static analysis tool easily confused code fine example complains line may string always function defined lines need animation module could build custom jquery without modules complaining", "d": "1/2016"}, {"body": "seem new us introduced jquery adding extensions using jquery never saw errors firefox tool static analysis tool easily confused code fine example complains line jqueryfxtick may string always function defined lines things like fix trivially would prefer see jquery plugin fix static code analysis issues popular library extensions include jquery extension see warnings", "d": "1/2016"}, {"body": "would like propose pr ideally test coverage otherwise regress next time someone makes changes would require adding tool scan part build possible", "d": "1/2016"}, {"body": "surprised nt see warnings code using instead regardless think safely say firefox extension generating warnings errors good reasons nt think fact extension ca nt tell jqueryfxtick always function problem wrapping closure may prevent warning programmatic reason shut warnings given nt think change anything source warnings ok long deemed", "d": "1/2016"}, {"body": "understood prequalification tool mozilla runs firefox extensions see dangerous code perhaps mozilla could whitelist unchanged copies jquery situations like agree tool misguided dangerous", "d": "1/2016"}, {"body": "cc ing mozilla folks miketaylr digitarald bzbarsky annevk kentuckyfriedtakahe cyberdees", "d": "6/2016"}, {"body": "thanks opening issue hesitant add new features jquery especially ones already covered plugins plugin popular get requests feature might consider making part core", "d": "1/2016"}, {"body": "forgot add problem occurs element page blank tag example tag name", "d": "1/2016"}, {"body": "thanks bug report confirmed crash appears caused calling document containing elements empty name attribute note document valid html particular valid attribute div elements b attribute form controls must empty nt look like anything", "d": "1/2016"}, {"body": "could definitely make good case adding another example problems big method bunch internal processing logic need case someone passes nonstring property seems like shame always pull whole module", "d": "1/2016"}, {"body": "need case someone passes nonstring data property seems like shame always pull whole module case get separate module depend instead full", "d": "1/2016"}, {"body": "terms lines half module subdividing probably nt useful someone wants functions like probably calling send data", "d": "1/2016"}, {"body": "agreed let add serialize dependency thanks", "d": "1/2016"}, {"body": "makes sense think talking small community anyway logistical reasons stuck old versions", "d": "1/2016"}, {"body": "approved mgol", "d": "1/2016"}, {"body": "thanks opening issue going change implementation suit jsdom dom standard browsers support jsdom sure jsdom comparing points spec prohibit nodes switching documents tell throw calling appending node", "d": "1/2016"}, {"body": "jeremyvignelles commented jsdom issue looked like jsdom adopting nodes browsers", "d": "1/2016"}, {"body": "fixed next jsdom release", "d": "1/2016"}, {"body": "thanks great work dmethvin waiting next jsdom release", "d": "1/2016"}, {"body": "link tinymce bug report", "d": "1/2016"}, {"body": "thanks opening issue checked url ensure jsfiddle issue worked looks like crash happens trying edit jsfiddle way see figure cause keep taking outadding back code narrow causing crash jquery alone combination jsfiddle jquerytinymce means jsfiddle something combination libraries nt like unfortunately nt think team members time figure jsfiddle turn issue jquery would welcome patch", "d": "1/2016"}, {"body": "link tinymce bug report", "d": "1/2016"}, {"body": "wrong plugin defined rare use case adding much code library loaded millions times day seems like wrong way solve", "d": "1/2016"}, {"body": "rare use case rare stack overflow question linked ranked questions number views nearly two dozen answers protected popularity despite asked half decade ago active last month rarity lack thereof correctness standard css supports overriding jquery pretty major omission", "d": "1/2016"}, {"body": "wrong plugin defined though want", "d": "1/2016"}, {"body": "true documentation misleading looks like said long time wonder finally give", "d": "1/2016"}, {"body": "still think pretty rare case law large numbers may mean thousands people gone looking millions people writing jquery small percentage seems working plugin solution omission far ability jquery concerned careful adding new functionality nt know people looking solution whether best one use case also remember law large numbers applies file size even percent jquery devs actually need loading many terabytes per day across whole internet make percent load plugin really important suggest adopt supported plugin something", "d": "1/2016"}, {"body": "fine leaving plugin nt least remove note docs", "d": "1/2016"}, {"body": "yeah looks like docs need freshening anyway setter section talks internet explorer without qualifying ie lt", "d": "1/2016"}, {"body": "ported docs issue", "d": "1/2016"}, {"body": "also", "d": "1/2016"}, {"body": "planning release really soon fix one included well", "d": "1/2016"}, {"body": "pretty sure dup caused fix ticket invalid fix incorrect", "d": "1/2016"}, {"body": "agreed looks like dup", "d": "1/2016"}, {"body": "note also affects google chrome ubuntu way ie tag ceefour", "d": "2/2016"}, {"body": "antonnz problem bug fixed jquery please try amp report new issue still broken let clutter one", "d": "2/2016"}, {"body": "would pretty big breaking change right current code would expecting see string instead get array someone wanted value checkbox element way get today", "d": "1/2016"}, {"body": "yes breaking change current behaviour makes little sense often select set radioscheckboxes call get first one value regardless whether checked would use case", "d": "1/2016"}, {"body": "thanks opening issue nt think change first way way long second value unchecked checkbox still valid value may retrieve often still value retrievable written something similar method apps included special value retrieval checkboxes radios kind thing would never perfect suitable everyone applications think best left plugin users", "d": "1/2016"}, {"body": "timmywil understand point breaking change consider second point unchecked values valid retrievable return possible values first one selected one implementing proposal would bring behaviour line could still retrieve unchecked values", "d": "1/2016"}, {"body": "opposed breaking changes still need changes think done jquery exceptions getter gets information first element set today sure point gets value would get first element set submitted", "d": "1/2016"}, {"body": "background simple plugin want see thread", "d": "1/2016"}, {"body": "nt job function call away serialize serializearray js rsvpmaybe namersvp serialize name rsvp value maybe namersvp serializearray contacttext amp contactcall namecontact serialize name contact value text name contact value call namecontact serializearray", "d": "1/2016"}, {"body": "dmethvin jquery exceptions getter gets information first element set val today may documentation says real world actually used get selected entered value field sure point select val gets value would get first element set submitted point like control selecting value set predefined values behaviour consistent return selected value understand single element parent whereas represents option think relevant think jquery job abstract away underlying html structure provide consistent way getting form control selected entered value", "d": "1/2016"}, {"body": "nt job val disagree exactly form elements radio buttons checkboxes function call away serialize serializearray sure point point form elements returns currently selected entered value radios checkboxes inconsistent", "d": "1/2016"}, {"body": "inconsistent returns value first element asking essentially serlialized value shown way follow forum link yet another solution asking make breaking change better ways want without breaking people code", "d": "1/2016"}, {"body": "inconsistent val returns value first element like said understand documentation says real world usage get current selected entered value element yeah consistent documentation opinion wrong would make much sense able get value form element without knowing type like types elements well asking essentially serialized value definitely asking current selected values nothing serialization serialization transforms form element query string array representation understand use achieve want little extra code point point makes sense able get current value form element using except radios checkboxes shown way first comment point asking solution know saying would make sense implement core jquery asking make breaking change sure understand introduce alternative method sure come better name maybe default jquery given plenty reasons would make sense", "d": "1/2016"}, {"body": "introduce alternative method someone already stackoverflow use plugin need jquery code run repository", "d": "1/2016"}, {"body": "dmethvin giving reasons think least considered core answer arguments replies generic go away answer specific points", "d": "1/2016"}, {"body": "others support let speak think already provide enough ways get including short plugin mentioned forum post", "d": "1/2016"}, {"body": "paweldecowski appear confused form element value form submission process uses value skips elements nt contribute form data make mistake value control unaffected disabledness checkedness participation form submission real world usage get current selected entered value element logic describe really right methods happens radio buttons checkboxes skipped direct user interaction instead disabled case text inputs selects textareas definitely asking current selected values nothing serialization serialization transforms form element query string array representation true also skips unchecked elements exactly behavior looking", "d": "1/2016"}, {"body": "duplicate", "d": "1/2016"}, {"body": "would suspect remove two lines see gives correct results seems work correctly edge btw", "d": "1/2016"}, {"body": "dmethvin yeah works changing fixes every ie edit reverting commit task yeah", "d": "1/2016"}, {"body": "ok thanks good know must quirk ie offsetparent accounting", "d": "1/2016"}, {"body": "see change made stable upgraded latest release time writing however still experiencing bug feel issue better explains bug simply asking hidden element getting scroll position returned would expect see jsfiddle replication using", "d": "5/2016"}, {"body": "billy fiddle using jquery switched behavior nothing changed also note according api docs explicitly state hidden elements supported input note jquery support getting offset coordinates hidden elements accounting borders margins padding set body element possible get coordinates elements set excluded rendering tree thus position undefined", "d": "5/2016"}, {"body": "yes never valid standard css selector anything special characters spaces quoted selector accepting previous versions bug attribute values must css identifiers strings", "d": "1/2016"}, {"body": "whether regard previous bug breaking change", "d": "1/2016"}, {"body": "fixing bug almost always breaks something", "d": "1/2016"}, {"body": "release notes specify nonbreaking change changing way selector syntax works worked long time lot code wild uses construct test suite previous proved accepted syntax update work new syntax yet nowhere indicate selector syntax changed issue bug release note stating change behaviour", "d": "1/2016"}, {"body": "cosmicnet every behavior change may break code relies unspecified behavior treated breaking changes could nt nonmajor releases semver applies documented ie never promised selector works hence definition changing breaking change think might break incorrect code though nt introduce change patch release minor one even though semver permits us patch release", "d": "1/2016"}, {"body": "cosmicnet specifically think need advocating revert change nt think trying parse valid css selectors per spec allowing kind exceptions even undocumented makes difficult impossible also causes selector rejected path results performance degradation saying frustrated breaking change code sorry several undocumented features mention release notes hard know ones world may depending upon always glad take feedback wip builds note committed long ago using wip build would revealed compatibility issue", "d": "1/2016"}, {"body": "dmethvin fact test suite proving unspecified behaviour indicates common usage also see documenting feature test suite definitive definition valid proving undocumented features erroneous indicates serious problem tests fail see mentioning release notes anything omission instead least note explanation given would far appropriate", "d": "1/2016"}, {"body": "cosmicnet specifically think need", "d": "1/2016"}, {"body": "dmethvin fail see mentioning release notes anything omission instead least note explanation given would far appropriate", "d": "1/2016"}, {"body": "thanks agree try track better future", "d": "1/2016"}, {"body": "dmethvin think needs serious revisit late future really relevant make decisions wordpress included broke dozens themes hundreds really popular themes means bug wild large scale problem products unrelated issues reliant users theme throwing stupid errors entire support queue full due problems ca nt anything seems like simple solution would simply make still recognize older ones throw silent error still expected originally deprecate document revist later remove entirely progress name progress anything", "d": "4/2016"}, {"body": "wordpress updates jquery version may always break themes especially major upgrade jquery nt major upgrade previously nt following semver minor upgrades breaking changes time time eg many im sure broke lot code back well unavoidable otherwise could nt make changes library completely normal new jquery version released pluginsthemes nt work adjust changes time micha\u0142 go\u0142\u0119biowski", "d": "4/2016"}, {"body": "totally agree mgol think discuss today meeting anyway", "d": "4/2016"}, {"body": "put discussion one place agree danieliser late change point original change made master last year shipped early january reason resurrected week wordpress update wordpress themes impacted appears autoupdate themes come light last year even right release could done something different let revisit change better people update themes goingforward question wordpress ever update jquery right wp includes migrate order let themes sloppy upgrade jquery themes would need able run jquery without migrate combination would allow work given uproar changing invalid undocumented thing like unquoted attributes worry something substantial fare seems like main problem wordpress themes either updated users theme update available either makes jquery update risky sure deal never updating jquery", "d": "4/2016"}, {"body": "could stop autoupdating jquery let theme builders decide version jquery use", "d": "4/2016"}, {"body": "always revert release thing major saying saying option", "d": "4/2016"}, {"body": "seems main problem jquery throws error caught makes scripts page stop working jquery historically treating wrong inputs noop returning empty list instead throwing assumed consumers implicit behavior inherent jquery philosophy therefore many people bothered surrounding anything throwcatch clause minor update expected break everything reason fix changes behavior noop throw error higher impact fix breaks behavior nt stops scripts page suggestion future prevent kind problem treat behavior change noop error major breaking change worth changelog even undocumented way unintended breakage hope makes sense", "d": "4/2016"}, {"body": "hope makes sense makes lot sense cc", "d": "4/2016"}, {"body": "suggestion future prevent kind problem treat behavior change noop error major breaking change worth changelog even undocumented way unintended breakage although agree something changelog sure would changed anything case thing know time seems several popular wordpress themes used feature due way jquery gets updated manymost sites via wp update explicit decision update jquery site owner nt gotten much feedback scale problem last week wp update always revert release thing major saying saying option major great place breaking change considered one mentioned clear wp path jquery right anyway one smaller problems could stop autoupdating jquery let theme builders decide version jquery use trickier understand wordpress default always puts relatively recent jquerymigrate updates part autoupdate cycle themes plugins outside theme use one since others paranoid load via noconflict course gets wasteful since page loading multiple copies however experience many sites latter example loads migrate allows run thickbox sob", "d": "4/2016"}, {"body": "although agree something changelog sure would changed anything case think idea consider change starts throw breaking change major great place breaking change considered one consider breaking release another proposed revert wordpress users would deal issue jquery major update patch version", "d": "4/2016"}, {"body": "treat behavior change noop error major breaking change worth changelog even undocumented explicit contradiction api design guidelines undocumented inputs result unpredictable output api may throw error inside jquery nothing unpredictable behavior may change without warning across versions even minor patches see merits proposal reluctant switch", "d": "4/2016"}, {"body": "switch yeah proposed summoned", "d": "4/2016"}, {"body": "think idea consider change starts throw breaking change ah okay understood although means hands essentially tied avoid invalid input becoming thrown error pretty restrictive need check effects inputs null undefined window document consider breaking change release another proposed revert wordpress users would deal issue jquery major update patch version nt think switch back months good idea", "d": "4/2016"}, {"body": "pretty restrictive indeed seems action could taken could protect us things nt think switch back months good idea reiterate saying nt saying option quote nt gotten much feedback scale problem last week wp update nt case think something prevent things happen future", "d": "4/2016"}, {"body": "one solution specific case add logic migrate since wordpress includes example find pattern first try see valid throws try string replace add quotes break cases think pathological question whether rare pathological case outweigh benefit fixing common case", "d": "4/2016"}, {"body": "one solution nt try failed case wordpress breakage revealed consequences change jquerymigrate might help wordpress case rest", "d": "4/2016"}, {"body": "rest cases include migrate change code like migrate idea fix wordpress nt think revert", "d": "4/2016"}, {"body": "yeah meeting minutes continue think", "d": "4/2016"}, {"body": "right migrate warns naked hashes cases like regexp would incorrectly update part actually break validbutbizarre selector running qsa first would fix particular one although would still mangled regexp", "d": "4/2016"}, {"body": "dmethvin thanks revisiting issue pretty close spot last part themes loading extra jquery fagnermartinsbrack well said timmywil partially correct ways wp uses asset queing system see wpenqueuescript allows dynamic inclusion scripts themes plugins including dependency management ie plugin uses jquery tell wp load mine theme needs older version either replacing every script needed jquery alternative would enqueing custom version jquery separately using noconflct may bit presumptuous wp core philosophies bit different course internet runs software extendable way like hands bound well breaking changes quite regularly well documented get distributed directly developers via many channels well release etc markelog dmethvin would nt start backtracking nt point initial comment well documented wp core team would made sure distribute changes info automated themeplugin scanners wordpressorg repository would also able flag themes using release wp email goes every dev telling check plugins list issues themes automatically scanned hopefully plugins soon glad see conversation moving would suggest since wp uses jquery core dependency large percentage rely may behoove wp core team work direct communication channel discuss things detail sure would happy discuss path well push authors update themes ahead time", "d": "4/2016"}, {"body": "danielliser thank responses right need better communication wp team perhaps irc channel", "d": "4/2016"}, {"body": "timmywil wp slack group nearly core communication goes may option make new channel guys slack case tell dev wp community wordcamp organizer wp community open love collaboration think would win wp amp jquery", "d": "4/2016"}, {"body": "also slack jquery team maybe could squat wp team", "d": "4/2016"}, {"body": "timmywil nothing else able use get touch right people find another communication channel wp slack make wp describes different core groups slack channel info provided well scheduled meeting times etc make wp core likely channelgroup talk scheduled meeting info member info use get touch", "d": "4/2016"}, {"body": "okay discuss length meeting decide following gon na revert try mitigate jquerymigrate since wordpress includes help changed policy guideline prevent changes happening patchminor versions casebycase bases discuss wordpress team thank thoughts everyone", "d": "4/2016"}, {"body": "markelog thanks guys think go long way going discuss fellow wp devs possibility automated compatibility checks plugins themes well possibility versioned loading jquery future allowing plugins amp themes load select version required unique namespace think could path jquery years", "d": "4/2016"}, {"body": "wordpress jquery communication one wordpress core committers happy help encourage communication way idling jquery jquerydev rooms jorbin feel free contact ever need anything wordpress yall also welcome come hang slack", "d": "4/2016"}, {"body": "aaronjorbin thanks jumping think strategic partnership wp amp jquery", "d": "4/2016"}, {"body": "fwiw wordpress slack channel since first created multiple wordpress committers ping things come related jquery projects sure helps change like though unless timmywil going inform wordpress devs every change one part solution available easy aaronjorbin wp jquery side another part making presence known easy people involved thread know aaronjorbin available ping channels needed however others know time people thread forget bigger part active aaronjorbin said idling jquery jquerydev rooms jorbin idling paying attention everything going saying bad exactly jquery wp side years going back slack without active part sure issues like avoided increasing communication even certainly people side idling various channels people know ping right times interested hear plans type problem avoided future used take much active role across several projects years since switched passive role page date used track information jquery ui wiki though never published individual names people worked", "d": "4/2016"}, {"body": "scottgonzalez interested hear plans type problem avoided future improving communication projects would definitely help personally aware connection wordpress team wordpress nt exclusively affected problem received issues scale however revealed ticket reopen added back agenda weekly meeting monday extensive discussion letting kind issues rise patch minor versions resulted guideline changes careful kind changes even though still evaluated case case basis guideline says likelihood event low wordpress themes though users maybe dmethvin timmywil info", "d": "4/2016"}, {"body": "sounds great markelog also mean changes like even though feature undocumented listed change log major releases", "d": "4/2016"}, {"body": "yeah see definition undocumented inputs result unpredictable output", "d": "4/2016"}, {"body": "perfect thanks", "d": "4/2016"}, {"body": "markelog thanks special attention guys shown think even subtle guideline change like could make difference terms keeping scale issues next step would get wp make meta team involved update automated scanners look types things notify plugin amp theme authors automatically", "d": "4/2016"}, {"body": "patch going next jquery migrate detect fix cases still situations selector complex regexp fix seems handle cases reported past months", "d": "5/2016"}, {"body": "jquery migrate released fixes problem unquoted selectors cases reported", "d": "5/2016"}, {"body": "salaamun alekum anyone tell write alternate linkelement primarymenu ul li target blank href datalightbox", "d": "12/2016"}, {"body": "please ask help stackoverflow", "d": "12/2016"}, {"body": "fixed", "d": "1/2016"}, {"body": "definitely need test case sure comparing apples apples look xhr vs ajax example ajax call request would fail response valid json", "d": "1/2016"}, {"body": "datatype text", "d": "1/2016"}, {"body": "datatype text testcase though still need one", "d": "1/2016"}, {"body": "happening object large json text length char failed deserialize model net mvc controller method argument would get null reference exception back end", "d": "1/2016"}, {"body": "even sure talking problem say happening mean like op page failing mobile safari fails randomly request retrieve large amount text server indicated server encountering error seem like situation two comments nt yet even know nature failure silently nothing throw error lock phone etc test case would help us investigate", "d": "1/2016"}, {"body": "sorry trying create test case right easy create test object big one see production came fact knockout kotojson obj producing json string deserializable controller side could entirely knockout nothing ajax call switch kotojson using jsonstringify working fine", "d": "1/2016"}, {"body": "apologies got resolved problem due something else related localstorage max certain limit jquery works", "d": "1/2016"}, {"body": "introjs combined outrojs build process complete file", "d": "1/2016"}, {"body": "thank dmethvin means better get complete jquery version dist folder let stuff aside", "d": "1/2016"}, {"body": "duplicate", "d": "1/2016"}, {"body": "provide pull request", "d": "1/2016"}, {"body": "thanks opening issue given inconsistent across browsers regardless inclined leave asis seems like asking property act featuredetect effectively using signify focusout nt native started change lot properties consistent something trivial time", "d": "1/2016"}, {"body": "said willing review pr reopen", "d": "1/2016"}, {"body": "looking jquery code found jquery nt change property well seems could change jquery nt investigate current jquery updated jsfiddle show jquery bug focusout relatedtargetset null see jquery nt modify jquery firefox sets null conclusion probably nothing use instead thanks sorry opening issue", "d": "1/2016"}, {"body": "issue jquery migrate actually fixed", "d": "1/2016"}, {"body": "", "d": "1/2016"}, {"body": "turned much involved expected code create detached head tags deep within jqueryrelease", "d": "1/2016"}, {"body": "afraid still think worthwhile try decouple", "d": "1/2016"}, {"body": "callback ca nt documented input previously silently nothing seems like makes harder find bug causing null input", "d": "1/2016"}, {"body": "weird though brought check back test event edit ah misread report throwing returns instead original element", "d": "1/2016"}, {"body": "correct callback nt necessarily null function window returned", "d": "1/2016"}, {"body": "looking source code seems like reverted commit culprit function broken different meaning", "d": "1/2016"}, {"body": "function treated specially dmethvin mentioned supported input technically want like see really happening nt immediately see leaks global object since functions appears supposed bound proper elements thanks report", "d": "1/2016"}, {"body": "looking source code seems like reverted commit culprit function broken different meaning good point note removed check using throw jquery restored amp nt throw consistent even though unsupported input fix buggy seems fix branch nt seem important enough warrant release unless find something important patch likely stay thoughts jquerycore", "d": "1/2016"}, {"body": "code refactored nonmethod function hide private arg changed meanings nt think critical enough force immediate either especially since documented unit test seems like saying want non falsy handler chainable noop really dislike kind behavior lets mistakes happen lot easier decide want make sure testing documenting right", "d": "1/2016"}, {"body": "issue encountered somewhat similar relates event refactoring think warrants featurebug report fine happened upgrading jquery hoverintent uitabs threw error epreventdefault function user defined event handler callback function even though quick test showed typeof epreventdefault returned function code using updated version important change code line changed bind unbind reverted bind unbind bug triaging made difference error unsuccessfully trying pin point problem found jqueryui example using code uitabs hoverintent hoverintent general works although made refactoring using instead bind unbind giving events namespace since issue shows using special event handlers might effect plugins hope report helps save people spending lot time fix similar issues probably needs fixing jquery altough fixed version less performant using jqueryeventdispatch directly nt work done trigger function seems special event", "d": "1/2016"}, {"body": "yeah agree probably critical enough quick release could potentially break plugins chain like one options always set though might worth fixing compatibility though plugins nt anyways", "d": "1/2016"}, {"body": "would like submit patch branch judging might need release anyway good candidate make branches consistent", "d": "1/2016"}, {"body": "added milestone", "d": "1/2016"}, {"body": "yeah", "d": "1/2016"}, {"body": "fixed", "d": "1/2016"}, {"body": "current breaks jquery mobile selectmenu datanativemenu false see", "d": "1/2016"}, {"body": "vankampenp related issue already fixed released", "d": "1/2016"}, {"body": "work fine see", "d": "2/2016"}, {"body": "thanks opening issue issue breaking documented behavior want revert change pointed former valid selector yes used work another thing broke qsa path handled manually sizzle anyway latter go qsa fine given inclined leave bug fix", "d": "1/2016"}, {"body": "fiddle", "d": "1/2016"}, {"body": "last jsdom version supporting node lt upgrade jsdom amp try", "d": "1/2016"}, {"body": "mgol using zombie bundles suppose could make custom zombie points", "d": "1/2016"}, {"body": "upgrading zombe seems work node closing", "d": "1/2016"}, {"body": "glad know working perhaps could submit pr zombie tgat update copy jsdom", "d": "1/2016"}, {"body": "sorry nt notice mentioned upgrading zombie jsdom fine thanks info", "d": "1/2016"}, {"body": "thanks opening issue works might something bower version think remember time bower would remove definitely repo", "d": "1/2016"}, {"body": "possible bower looking jquery instead jquerydist need info looking", "d": "1/2016"}, {"body": "change registered location bower maybe need", "d": "1/2016"}, {"body": "bower install different computer seems ok must cache ps c usersvmlfdesktopteste gt bower install jquery save bower jquery notcached git githubcomjqueryjquerydistgit bower jquery resolve git githubcomjqueryjquerydistgit bower jquery download bower jquery extract archivetargz bower jquery resolved git githubcomjqueryjquerydistgit bower jquery install jquery jquery bowercomponentsjquery thanks", "d": "1/2016"}, {"body": "good know thanks", "d": "1/2016"}, {"body": "thanks opening issue environment testing", "d": "1/2016"}, {"body": "node also using jsdom", "d": "1/2016"}, {"body": "see sounds like jsdom nt support however supported browsers wonder works jsdom", "d": "1/2016"}, {"body": "thanks looking quickly timmywil left comment closed ticket jsdom", "d": "1/2016"}, {"body": "also running wondering way change reverted hopefully patch quickly pinning jquery version work", "d": "1/2016"}, {"body": "xjamundx hellatan installing jquery jsdom direct npm dependencies able give specific version via file edit ok see mentioned", "d": "1/2016"}, {"body": "yeah solution stick packagejson", "d": "1/2016"}, {"body": "ya dmethvin pegging jquery works standard", "d": "1/2016"}, {"body": "one report jsdom post link bug report implement api current maintainer said willing implement things needed break jquery edit nvm see reported", "d": "1/2016"}, {"body": "also happening using envjs could please fix", "d": "6/2016"}, {"body": "cancerberosgx fixed several months ago jsdom unless referring different", "d": "6/2016"}, {"body": "nt idea suggesting issue upgrading jquery solution seems like roll back fixed", "d": "6/2016"}, {"body": "suggesting file bug include simple test case showing problem rather adding comment closed issue error message may cause could completely different", "d": "6/2016"}, {"body": "ok wish could create simple test case complex script case error caused offset withinelementoffset left top within jquery ui withinelement window object", "d": "6/2016"}, {"body": "also hit issue using jqueryui autocomplete", "d": "12/2017"}, {"body": "issue jquery ui jquery javascript library uncaught typeerror elemgetclientrects function ifninitoffset initslotbyelement initopen inittrigger inittriggerevent initopen initshowhandler htmltablecellelementproxy htmldivelementdispatch htmldivelementelemdatahandle", "d": "3/2018"}, {"body": "", "d": "3/2018"}, {"body": "jquery methods designed work dom nodes sure qualified bug gist although possible get text comment node collection via method forcing one collection methods designed anything please note although pass text nodes comment nodes jquery collection way operations nt support explicit note api documentation page contents children methods similar except former includes text nodes comment nodes well html elements resulting jquery object please note jquery operations nt support text nodes comment nodes explicit note api documentation page think better place put information people nt try manipulate text comment nodes could submit pull request notice one answers someone saw docs found answer also suggests inconsistency could solved explicitly ever returning nodetype nodes winnow function code change could consider ensure textcomment nodes consistently wiped collections", "d": "1/2016"}, {"body": "closing issue dup one pr pointing", "d": "1/2016"}, {"body": "thought fixed master though", "d": "1/2016"}, {"body": "looks like thing reporting reading looks like plan ui either push support wait official support nt find searched looks like already addressed closing", "d": "1/2016"}, {"body": "take look console jquery released years ago", "d": "1/2016"}, {"body": "dmethvin beat kand check", "d": "1/2016"}, {"body": "ah dumb mistake thanks", "d": "1/2016"}, {"body": "favor", "d": "1/2016"}, {"body": "", "d": "1/2016"}, {"body": "makes sense", "d": "1/2016"}, {"body": "yepsies", "d": "1/2016"}, {"body": "one concern would bad implementation environment like android really able fix seems pretty improbable", "d": "1/2016"}, {"body": "think makes sense nudge people towards native methods nothing add add warningshim migrate bad missing implementation environment people always shim use older version jquery", "d": "1/2016"}, {"body": "assigning", "d": "1/2016"}, {"body": "btw nt think wait like semver requires bumping minor deprecate imo follow", "d": "1/2016"}, {"body": "pr let later ca nt move stuff excluded slim build", "d": "2/2016"}, {"body": "later ca nt move stuff excluded slim build nt believe true semver dictates deprecation minor version bump case might mean slim build volatile full build arguably makes sense since explicitly excluding functionality think would perfectly acceptable eg deprecate jqueryisnumeric jquery resulting immediate removal slim build alternatively could include deprecated functionality probably makes sense adhering semver said course fine deprecating", "d": "2/2016"}, {"body": "please nt spam jquery bug tracker", "d": "1/2016"}, {"body": "setter updates property input element attribute attribute used browsers initialize property get sync changes works correctly", "d": "1/2016"}, {"body": "mgol thanks clarifying", "d": "1/2016"}, {"body": "go please provide test case hosted jsbincom jsfiddlenet thanks", "d": "1/2016"}, {"body": "firing twice see console contrast empty container nothing remove see fire", "d": "1/2016"}, {"body": "see one mutationrecord console fiddles using recent firefox", "d": "1/2016"}, {"body": "see one mutationrecord latest chrome safari see two records edge clear two records would considered wrong something jquery controls", "d": "1/2016"}, {"body": "could edge bug reported sure anything jquery work around", "d": "1/2016"}, {"body": "clear nt see browser called observer callback twice op seemed claiming edge calls observer callback like others two records nt seem spec far tell first record results second synchronous logic standpoint nt seem like two records vs one make difference processing deletes appends", "d": "1/2016"}, {"body": "confirmed edge bug sorry", "d": "1/2016"}, {"body": "hmmm property deprecated removed see looks like docs need changed respect even property still present nt take string selectors passed context would nt rooted context way could cause incorrect results place use arg positional selectors think would best document leave implementation asis", "d": "1/2016"}, {"body": "deprecation aside would nt need able pass context matchesselector work documented rather update loop condition mentioned documentation implies thiscontext used place context context passed since passing context works expected could certainly thiscontext said think people would confused actually working documented since generally nt work documented nt many releases ever would think would better remove thiscontext portion pos creation remove line documentation inconsistent using first selector use context without wo nt etc sure matters end works releases familiar current release schedule obviously thiscontext removed entirely need removed anyway", "d": "1/2016"}, {"body": "discussed meeting today since nt exist anymore need update docs remove mention bug wo nt fixed property disappeared also need make clear arg used positional selectors", "d": "1/2016"}, {"body": "currently context parameter used selectors loop condition loop ends context element reached thereby continuing dom possible issue see context parameter context ancestor element basically used non positional selectors", "d": "1/2016"}, {"body": "yeah true docs need clear used means thinking terms root tree selector strings evaluated agree currently point stop trying match different thing example start closest div div div inner returns start wrong", "d": "1/2016"}, {"body": "context parameter two effects cap upward traversal root positional selectors nonstring selectors another latent bug way first arguable value noted fails element collection descend second seems utterly pointless really nt even tested closest assertions positional selectors without context yield nothing prefer drop parameter completely minimum think positional selector interaction removed", "d": "1/2016"}, {"body": "see cap upward traversal useful context component page could embedded arbitrary markup still cases personally wanted use programming error inside whatever expected find limiting traversal ensures nothing happens nt always best thing debugging smilecat really yeah tried think reason using positional selector without context got nothing possible someone using going break code seems like would good time come agreement put together pr minimum need remove removing whole positional selector exception would nice well would leave limiting upward traversal", "d": "1/2016"}, {"body": "yeah think return empty whenever selector positional rather try get clever second argument feels like underpowered parentsuntil alias eg similar requires wrapping guess okay method also ignores nonancestor halting conditions", "d": "1/2016"}, {"body": "see point making nested div example want point context parameter dom element passing jquery object example effect nonpositional selectors suppose could consider another bug documentation define dom element really bug", "d": "1/2016"}, {"body": "agree error example kingjiv even corrected result", "d": "1/2016"}, {"body": "think already deprecated context argument docs even say removed still around perhaps need actually remove", "d": "1/2016"}, {"body": "nevermind different signature", "d": "1/2016"}, {"body": "per meeting closing favor docs clarification", "d": "1/2016"}, {"body": "well aside removing pos exception", "d": "1/2016"}, {"body": "interested see big whitelist would like idea", "d": "12/2015"}, {"body": "interested see big whitelist would like idea yeah guess key list would bigger mess adding amp stuff array always problem css expanding argument could applied whitelist", "d": "12/2015"}, {"body": "exactly mentioned sth whitelist px would autoappended trivial fix append px hand erroneously appended fix simple one first figure jquery appending px one discover blacklist modifiable jquerycssnumber one modify jquery global state appending property name array much bigger mental overhead like list properties nt accept bare numbers popular ones avoid biggest breakages basically treating feature misfeature keeping back compat little necessary hell nt break loose future might even drop whole feature completely", "d": "12/2015"}, {"body": "sounds reasonable although nt think lot issues list nt lot properties burden update think whitelist strategy would easier user fix said lot widely used items otherwise might confuse lot people future might even drop whole feature completely suppose different topic", "d": "12/2015"}, {"body": "bottom line agree whitelist sounding cool would sufficient enough would nt cause confusion would nt affect size much", "d": "12/2015"}, {"body": "suppose different topic decision want drop separate topic slightly related treat misfeature start thinking terms restrict breaking code think nice feature might want list comprehensive first approximation would take prepended anything ending dash like might want include popular ones like like try narrow list much possible sounds like little experiment though might want wait first alpha take thoughts", "d": "12/2015"}, {"body": "like list properties nt accept bare numbers popular ones avoid biggest breakages basically treating feature misfeature keeping back compat little necessary hell nt break loose future might even drop whole feature completely similar browser strategy well eg note works although things get dicey detached elements may way us eat cake could set immediately read back inbound css numbers private element property preserves number goes px blacklist might empty initially might contain since afaik property accepts values anyone nt like follow best practices providing strings units applicable instead numbers said feel like misfeature would open cutting", "d": "12/2015"}, {"body": "also like idea eliminating blacklist making people provide units sort backfill highprofile cases break nt know much breakage cause could deprecate migrate start warning try keep whitelist small big enough avoid massive breakage methods still return accept numbers without units roundtrip nt problem may avoid problems", "d": "12/2015"}, {"body": "next step see pr probably", "d": "1/2016"}, {"body": "goto see fix", "d": "12/2015"}, {"body": "reopening nt closed", "d": "12/2015"}, {"body": "single quote middle expression nt escaped", "d": "12/2015"}, {"body": "yeah know previously version working despite look online sample change jquery version", "d": "12/2015"}, {"body": "sure wrong fixed bug ca nt unescaped quote middle string", "d": "12/2015"}, {"body": "okay thank explanation assumed reason first place great day", "d": "12/2015"}, {"body": "markelog label nt similarly", "d": "1/2016"}, {"body": "added thank", "d": "1/2016"}, {"body": "updated failures looking green also verified api additions gon na rub eyes", "d": "1/2016"}, {"body": "jquery expects html strings represent document fragments entire documents particular stripped innerhtml assignment leaving form context element forms observe", "d": "12/2015"}, {"body": "thanks detail explanation context switch trickbut strip context form level", "d": "12/2015"}, {"body": "native functionality drop etc", "d": "12/2015"}, {"body": "thank opening issue current behavior correct happens little differently think tho jquery never loaded twice requirejs nt try load another jquery one already loaded still registered usable module problem nothing requirejs amd problem plugin requires global called removed globals either adjust plugin work amd adjust tracking script run mode control tracking script source add back globals called", "d": "12/2015"}, {"body": "yes never modify jquery support", "d": "12/2015"}, {"body": "first case js parser converts hex execution second expecting string converted point execution hex constants nt supported implicit stringtonumber conversion would say right behavior want convert validate hexbinaryoctal strings write validator edit suport hex", "d": "12/2015"}, {"body": "thanks dmethvin looks like needs combined", "d": "12/2015"}, {"body": "think fixed docs negative hex constants nt really common use case", "d": "12/2015"}, {"body": "note supprts hex binary octal also think nt semantically correct hack using etc think could really comparing harder understand useful comments removed", "d": "12/2015"}, {"body": "respect initial question always think ticket closed code including comments removed considered separately", "d": "12/2015"}, {"body": "fine supported nan reason one api recognize signed string hex dmethvin mentioned suport hex", "d": "12/2015"}, {"body": "purpose indicate numericcast operation value yields meaningful read finite irrelevant except possible implementation utility numeric casting meaningful therefore return cf personally would comfortable implementation like suitably guarded disappointed eg eg", "d": "12/2015"}, {"body": "looked docs seems vague even incorrect short description states simply true would imply argument number type later text states without explaining numeric value therefore see one really knows method tries determine goal function document properly fix edge cases", "d": "12/2015"}, {"body": "agree mzgol really something like determines whether argument typically string converted valid number argument already number returns true unless one exceptional values like see instead trying chase edge cases add clarifying examples docs page taken right unit tests someone needs input validation beyond implement another case waded huge amount poop seemingly trivial utility function nothing dom", "d": "12/2015"}, {"body": "keep mind already added note docs", "d": "12/2015"}, {"body": "timmywil good point remarks still stand note note kind additional info whereas think main portion page almost nt contain concrete information", "d": "12/2015"}, {"body": "since longer internal uses whatever want removed smilingimp historically purpose exactly described numericcast precheck first changed neither commit altered result input stillvalid type current state characterize function behavior checks whether value finite number castable string representing one nonprimitive objects treated encapsulated primitive values everyone agrees suppose apijquerycom pr order", "d": "12/2015"}, {"body": "think description fine would add another example showing returns", "d": "12/2015"}, {"body": "feel better remove reasons already mentioned wan na add reduce size jquery core would return different values old new browsers people easily require different implementations check numeric values needs", "d": "12/2015"}, {"body": "opened docs issue", "d": "1/2016"}, {"body": "duplicate", "d": "12/2015"}, {"body": "thanks report fixed jquery planned fix branches one jquery sure upcoming jqueries inconsistency unfortunate declare api compatibility amp thoughts jquerycore want patch", "d": "12/2015"}, {"body": "yea guess branches consistent", "d": "12/2015"}, {"body": "fixed", "d": "1/2016"}, {"body": "thank", "d": "1/2016"}, {"body": "mean getting css path", "d": "12/2015"}, {"body": "see", "d": "12/2015"}, {"body": "print textarea value use function var hello tval hi consolelog consolelog tval var copy tclone div html copy consolelog copyhtml consolelog copyval", "d": "12/2015"}, {"body": "hope help", "d": "12/2015"}, {"body": "manojroy nt get meyour jsfiddle expected print hello hi would nt copied according api documentation clone however prints hi ie chrome", "d": "12/2015"}, {"body": "docs trying say jquery nt attempt change cloned content could expensive large doms cloning something user edited either restore default copy current edited state nt think want try normalize could clarify docs firefox bug opened nt seem getting love cc miketaylr", "d": "12/2015"}, {"body": "misunderstanding docs think docs clear enough part closing change made core", "d": "1/2016"}, {"body": "see smooth animation point see style properties incrementally approaching target values developer console please try private browsing mode extensions disabled case interfering still experience problems please report back detailed explanation working includes experience expected experience either reopen issue best provide explanation", "d": "12/2015"}, {"body": "restarted firefox addons still seeing issue chrome latest working well issue related firefox firefox nt see transition like div hidden automatically click", "d": "12/2015"}, {"body": "updated firefox firefox getting issue", "d": "12/2015"}, {"body": "trying fiddle", "d": "12/2015"}, {"body": "video", "d": "12/2015"}, {"body": "yes repro windows firefox well", "d": "12/2015"}, {"body": "using windows thank dmethvin", "d": "12/2015"}, {"body": "dmethvin check inspect element click animation executes correctly firefox", "d": "12/2015"}, {"body": "rwaldron inspect", "d": "12/2015"}, {"body": "ok ca nt belive working well open native firefox inspector firebug", "d": "12/2015"}, {"body": "inspect repros video", "d": "12/2015"}, {"body": "try", "d": "12/2015"}, {"body": "manojroy case using instead", "d": "12/2015"}, {"body": "open", "d": "12/2015"}, {"body": "nt see anything opening dev console makes work almost certainly browser bug reported mozilla anyone disagree", "d": "12/2015"}, {"body": "always good provide jsbin jsfiddle show mean remember documented though object get jquery handler subset raw event object jquery event object find supported platform running", "d": "12/2015"}, {"body": "thanks provide demo demo link", "d": "12/2015"}, {"body": "sorry missed went back look nt see", "d": "12/2015"}, {"body": "documented deep extend object array extended object wrappers primitive types string boolean number deepextending cyclical data structure result error definitely quirky today standards behavior potentially depended upon millions web sites jquery changing would cause lot trouble require behavior take look use lodash", "d": "12/2015"}, {"body": "test case uses jquery construct element otherwise nt much jquery jquery nt expose pathnames urls accessing raw dom properties ie even parsing urls differently browsers fixed edge see example using pure javascript", "d": "12/2015"}, {"body": "stackoverflow answers explain pretty well seems like using jquery call method main function docs mention explain method called note plain objects dom objects triggered event name matches name property object jquery attempt invoke property method event handler calls eventpreventdefault behavior desired use triggerhandler instead", "d": "12/2015"}, {"body": "ok thanks think using native function better choice", "d": "12/2015"}, {"body": "clear reporting post code example problem encountered perhaps referring still open", "d": "12/2015"}, {"body": "closing due inactivity", "d": "1/2016"}, {"body": "updated clarity", "d": "12/2015"}, {"body": "version edge run tests edge testswarm tests passed latest commit ie ci uses edge make sure run trying test try clear browser cache well", "d": "12/2015"}, {"body": "using edge edgehtml previously mentioned passed pulling master branch", "d": "12/2015"}, {"body": "thanks opening issue works us", "d": "1/2016"}, {"body": "cc", "d": "12/2015"}, {"body": "duplicate", "d": "12/2015"}, {"body": "thanks opening issue please provide reduced test case help us assess problem", "d": "12/2015"}, {"body": "", "d": "12/2015"}, {"body": "try", "d": "12/2015"}, {"body": "thanks opening issue looks right looks like correctly subtracting negative margin effectively adding margin right", "d": "1/2016"}, {"body": "thank opening issue issue first fleshed stackoverflow forums jquery irc channel determine actually bug jquery core", "d": "12/2015"}, {"body": "duplicate deliberate change improved final release thank keeping eye though", "d": "12/2015"}, {"body": "versions android order invistigate need reduce testcase similar sites", "d": "12/2015"}, {"body": "closing due inactivity", "d": "1/2016"}, {"body": "intentional means iff duplicated", "d": "12/2015"}, {"body": "case diick", "d": "12/2015"}, {"body": "common misconception happens everyone", "d": "12/2015"}, {"body": "either way thank keeping eye", "d": "12/2015"}, {"body": "important using jqueryui downgrade jquery error", "d": "12/2015"}, {"body": "jquery side duplicate jquery ui version might work newest jqueries try upgrade jquery ui", "d": "12/2015"}, {"body": "yes tried upgrade jqueryui code generates new errors method select tabs widget instance method length tabs widget instance method add tabs widget instance found solution two first errors third one add new tab version jqueryui", "d": "12/2015"}, {"body": "please read upgrade guides questions please use stack overflow irc forums", "d": "12/2015"}, {"body": "jquery requires browserlike properly initialize environments one present globally including nodejs get library factory takes window returns see introjs implementation comments short explanation need something like want similar utilities though better utility library like lodash", "d": "12/2015"}, {"body": "used works thanks", "d": "12/2015"}, {"body": "see forms child elements use input names ids conflict properties form submit length method name conflicts cause confusing failures complete list rules check markup problems see domlint", "d": "12/2015"}, {"body": "ultimater times tried past could find solution supported browsers reason documentation exists problem since beginning jquery since basically jquery problem possible set newer browsers supported release consistent enough use trick suggested ticket using method created applying form want submit however affects essentially every important property aliased method may many situations like code base like research report back maybe could solved impossible", "d": "12/2015"}, {"body": "could write little run tests ie pass basic failure would detected pretty quickly need test case preferably", "d": "12/2015"}, {"body": "pc environment set broken recently try get info asap", "d": "12/2015"}, {"body": "nt seen code xhr activex object plain js object set small number known fields activex object supports get xhrfields copying code caller tried set custom fields example cors responsetype caller never use xhrfields internally least look whatever version jquery may using sure see elfinder uses xhrfields crossdomain access need sure code nt entered outside jquery control sure passing requests close since highly unlikely problem inside jquery", "d": "12/2015"}, {"body": "well reason opened issue jquery gives exception case maybe request could fail clear status text spent time understand fails returns status code", "d": "12/2015"}, {"body": "big plus like three years ago denied maybe time reconsider", "d": "12/2015"}, {"body": "okay cool write pr asap see link throwing", "d": "12/2015"}, {"body": "okay cool write pr asap see would suggest wait either would discussion issue meeting next monday put agenda link throwing yeah server aware issue one reason switched bug tracker", "d": "12/2015"}, {"body": "yeah understand deal know counting bytes maybe number important meeting", "d": "12/2015"}, {"body": "still meh use cases want trigger several events event object", "d": "12/2015"}, {"body": "idea wrote code like javascript function write events jqelementon eventa function eventb function first initialisation jqelement trigger eventa trigger eventb first time wrote knew works initialisation part project imagine button like click want toggle classes eg player nt want put directly html wrote something like databinding naturally set classes everywhere agree probably rare case suppose jquery api propose propose rare case good symetrie api", "d": "12/2015"}, {"body": "aside api consistency think important also find real life examples like", "d": "12/2015"}, {"body": "aside api consistency think important also find real life examples would absolutely use code even supported", "d": "12/2015"}, {"body": "triggering event different setting event handler nt really buy api consistency argument original events different event objects fired browser convinced enough use cases would served custom events situations bubbling desired used would better use also allows return value definitely nt make sense multiple events per call", "d": "12/2015"}, {"body": "discussed right meeting sorry seems go maybe revisit another three years", "d": "12/2015"}, {"body": "oh understood problem", "d": "12/2015"}, {"body": "nope still works nt would get instead", "d": "12/2015"}, {"body": "thanks opening issue please provide reduced test case", "d": "11/2015"}, {"body": "timmywil", "d": "11/2015"}, {"body": "designpixelz ah argument order swapped", "d": "11/2015"}, {"body": "blackout fadeout tri", "d": "12/2015"}, {"body": "guess built match close brace", "d": "11/2015"}, {"body": "introjs concatenated beginning built file outrojs end jquery contained syntax error unable run fine", "d": "11/2015"}, {"body": "duplicate", "d": "11/2015"}, {"body": "mmm looks like years ago issue raised discarded would time reconsider", "d": "11/2015"}, {"body": "behavior documented nearly decade jquery used internally require behavior best thing would create plugin", "d": "11/2015"}, {"body": "documentation pretty clear though first element", "d": "11/2015"}, {"body": "oh ok good know nt realize matched element created element bad", "d": "11/2015"}, {"body": "provide information versions jquery phantomjs using process statement strikes suspect results html may recorded element removed especially since function adds immediately removes div run relevant support property needed quite strange time snapshot dom exactly seem sh curl silent location useragent sed n", "d": "11/2015"}, {"body": "reason moved attaching test nodes former nt always exist reliable way wait wait document ready used problem putting jquery scripts end body enough need wait document ready well otherwise code would execute support tests computed leading bugs like mentioned since node attached amp removed synchronously seems unlikely get dom snapshot middle performing test unless one breaks phantomjs reason leaves dom unstable state", "d": "11/2015"}, {"body": "reproduced jquery phantomjs nginx rules catch requests specific user agent string proxypass express server loads page using phantomjs responding generated html may getting called result zurb foundation part application executes js load would need css support properties based comments believe test breaking phantomjs causing element hang around right trying remove element phantomjs returns generated html unable select pretty sure limitation phantomjs fork adds selector element allow select remove working update results", "d": "11/2015"}, {"body": "discussing consider edge case closing try deal phantomjs side issue thanks", "d": "11/2015"}, {"body": "duplicate", "d": "11/2015"}, {"body": "need escape special characters identifiers", "d": "11/2015"}, {"body": "please provide test case ca nt know anything problem code look preferrably", "d": "11/2015"}, {"body": "supporting web application system log report get stack trace error follows typeerror thisget queryselectorall function objectufnfind htmldocument htmldocument nfnextendhtml jquery version used", "d": "11/2015"}, {"body": "debug jquery bug report", "d": "11/2015"}, {"body": "also seen rather mysterious errors error reporting system luck debugging suspicious may browser extension shenanigans", "d": "1/2016"}, {"body": "getting error reporting system seems stem jquerys find function cc pifantastic dmethvin mgol", "d": "1/2016"}, {"body": "yes indication yet caused jquery code present latest version jquery fact reports stack trace usage inside jquery go search plugins code usages see call immediately afterwards plus reported using jquery released years ago need debug show bug inside current version jquery misuse api ca nt even help given meager amount information provided", "d": "1/2016"}, {"body": "dmethvin queryselectorall afterwards get method code could find get found searched js associated selecting elements jqueryjs", "d": "1/2016"}, {"body": "likely jquery used browser extension found use inside jquery proper could cause stack", "d": "1/2016"}, {"body": "ok suspected extension thanks help", "d": "1/2016"}, {"body": "find system fails take look extensions folder search subfolders likely based direct use afterwards", "d": "1/2016"}, {"body": "getting exact error jquery full stack last thing within code happens jquery kind like either browser b extension c piece code running something set textcontent thats bit causing see anything suggesting jquery think likely extension breaking dom seeing problem chrome windowsmac browser see", "d": "2/2016"}, {"body": "ca nt jquery see error chrome must rogue extension question one avoid nasty error", "d": "3/2016"}, {"body": "already described diagnose often error include path points extension eg one", "d": "3/2016"}, {"body": "unhandled rejections may handled later going seems wrong could expose something like andor special event people could hook see rejections went property events need remove stuff handled careful perf although one possible tradeoff would generate console warnings errors seem programming mistakes seems like good tradeoff maybe could", "d": "11/2015"}, {"body": "also worth noting nodejs make working rejections easier tl dr event could consolewarn", "d": "11/2015"}, {"body": "fan console messages production library removing default unhandled rejection handler would rethrow another handler attached", "d": "11/2015"}, {"body": "nt time address today talk next meeting opposed core library opinion still maintain plugin problem happy write documented current best practices", "d": "11/2015"}, {"body": "note blog post nt think added anything apijquerycom deferredthen page best place", "d": "11/2015"}, {"body": "also agree supporting promisesa mixed bag reason inclined leave user warn strongly allowing phantom errors", "d": "11/2015"}, {"body": "default swallows errors really bad though especially compared current behavior gives immediate feedback programming errors", "d": "11/2015"}, {"body": "bad argument made comes territory either way probably equipped make decision code review backlog clear could mock something", "d": "11/2015"}, {"body": "ref", "d": "11/2015"}, {"body": "looking closely see original html invalid closing slash edittarget opening tag forgive wasting time although rubberduck effect helpful closing", "d": "11/2015"}, {"body": "running console console api functions console api defines", "d": "11/2015"}, {"body": "yeah return", "d": "11/2015"}, {"body": "sorry read seems got introduced years ago chrome firefox decided make work almost like jquery selector really confusing naming functionality guess nothing either jquery browserify gkatsev yes browser console mzgol returns", "d": "11/2015"}, {"body": "yep explains everything thanks following", "d": "11/2015"}, {"body": "remove red herring special characters values nt change outcome simpler case last selection changing text show able select right element bare dom example without jquery exhibits problem", "d": "11/2015"}, {"body": "browser bug perhaps work around prophook sets option elements selected values", "d": "11/2015"}, {"body": "fix problem bug options exist select already would also need guard ones appended elsewhere seems work edge older ies affected event seems like might really performance killer especially selects lot options guess could limited feature detect ie changing property silently trying cure might lead real performance trap also wondering properties like misbehave way", "d": "11/2015"}, {"body": "setting select element instead setting properties", "d": "11/2015"}, {"body": "would nt big perf hit code size hit seems work", "d": "11/2015"}, {"body": "nt think would problem multiple options disabled readonly", "d": "11/2015"}, {"body": "yeah works sounds pretty good setting selected already set property youmightnotneedjquery", "d": "11/2015"}, {"body": "nonbreaking change backport amp", "d": "3/2016"}, {"body": "nt sound like bug report ask help jquery forum stackoverflow thanks", "d": "11/2015"}, {"body": "worked nt working since", "d": "11/2015"}, {"body": "test case", "d": "11/2015"}, {"body": "dmethvin discovered culprit changes works chrome firefox see spec say", "d": "11/2015"}, {"body": "spec says non values returns attribute value name getting element name parameter converted ascii lowercase converting ascii lowercase means changing values means firefox right wrong every browser wrong well chrome ie safari even old opera presto returns attribute value bzbarsky spec changed considering firefox exception", "d": "11/2015"}, {"body": "jquery dmethvin suggested could get rid tolowercase part needed old ie nt cause major problems ie could try use would transform", "d": "11/2015"}, {"body": "set milestone could get great", "d": "11/2015"}, {"body": "mzgol browsers used weird inconsistent case folding nt agree current spec text compromise everyone agreed something webcompatible faster weirdness browsers nt weirdness like getattribute casefolding check chrome terribly consistent cases casefolding spec currently compromise browsers need actually implement decided implement", "d": "11/2015"}, {"body": "supported browsers take care lowercasing may well remove call let browsers work", "d": "11/2015"}, {"body": "bzbarsky curiosity name converted stay since contains least one character range az", "d": "11/2015"}, {"body": "timmywil gets converted", "d": "11/2015"}, {"body": "jquery dmethvin suggested could get rid tolowercase part needed old ie info link ticket example", "d": "11/2015"}, {"body": "additional info talked irc every conclusion micha\u0142 go\u0142\u0119biowski", "d": "11/2015"}, {"body": "one past timmywil said always use getattributenode looks like tolowercase added fix", "d": "11/2015"}, {"body": "thank dmethvin say seems easy enough include complications could table though", "d": "11/2015"}, {"body": "may case removing code since already tests text unit tests made laugh reminded ticket", "d": "11/2015"}, {"body": "yeah easy might try fix well although might require internal toasciilowercase function would convert ascii letters micha\u0142 go\u0142\u0119biowski", "d": "11/2015"}, {"body": "might try fix well would nt worry like long time", "d": "11/2015"}, {"body": "still supporting oldie", "d": "11/2015"}, {"body": "still supporting oldie sure edge case nt come still good ascii names", "d": "11/2015"}, {"body": "meant would nt easy implement oldie since need remove one line", "d": "11/2015"}, {"body": "way put would add custom regex lowercased az instead long nt break anything okay since angular folks seeing bug may want", "d": "11/2015"}, {"body": "angular folks ie mzgol wanted", "d": "11/2015"}, {"body": "easy like good either way", "d": "11/2015"}, {"body": "yeah wanted simple monday wanted try whether easy fix simple solution lowercasing caused problems old ie would nt bother definitely want try first need get proper shape though", "d": "11/2015"}, {"body": "mzgol ca nt get backlog empty", "d": "11/2015"}, {"body": "timmywil time sunday go", "d": "11/2015"}, {"body": "bad", "d": "11/2015"}, {"body": "least bad application sometimes worse", "d": "11/2015"}, {"body": "timmywil wo nt time thursday want grab", "d": "11/2015"}, {"body": "mzgol sure", "d": "11/2015"}, {"body": "keep update browser", "d": "12/2015"}, {"body": "backported amp changed milestone used say", "d": "2/2016"}, {"body": "correct src folder included distribution building direct usage amd build jquery git repo required solution combining postinstall script git submodule nt bad", "d": "11/2015"}, {"body": "also discussion back regarding put tag tension people want one file jqueryjs jqueryminjs file want custom builds possibly even unit test result need latter best approach check tag files", "d": "11/2015"}, {"body": "wow thanks markelog know must ton work", "d": "11/2015"}, {"body": "great work", "d": "11/2015"}, {"body": "excellent job markelog clap things imo drop support opera firefox lt safari lt old blackberry imo dropping support browsers breaking change nt think firefox lt may fine supporting current current support policy change mentioning opera explicitly imo stay supported even though subject commit reads adding unit tests jqueryanimation changes logic interface effects module cc gnarf tests problematic break lot android rather add animationtween tests things imo may callbacks module change considered bug think new feature bug fix allowed introduce nonbreaking new features minor release fine hides jqueryswap undocumented fine adds jqueryhtmlprefilter allowed semver minor version might contracdict release also documented nt understand might contracdict release part change looks ok changes signature jquery init needed migrate cc dmethvin undocumented may whatever want especially minor rest looks also fine remarks might notice included new jquery htmlprefilter nt jquerydeferred catch think might good opportunity test new methods wild would require documentation updates though ones related module rewrites like catch happy nt include promisesacompatible promise libraries specialcase jquery checking reject promisesacompliant fact deferreds allows libs check allow jquery promises otherwise hard support trying sth like pr chaiaspromised", "d": "11/2015"}, {"body": "still needs verification team review week please", "d": "11/2015"}, {"body": "agree mzgol drop support reverted maintain support levels anything want regarding showhide changes", "d": "11/2015"}, {"body": "already reverted commit dropped support browsers branch micha\u0142 go\u0142\u0119biowski", "d": "11/2015"}, {"body": "yeah decided one meeting ago would need make opera pass anyone working also concerns remember preferable check much possible decided meeting deadline wednesday", "d": "11/2015"}, {"body": "try check commits ca nt promise able thursday see remaining opera bugs fixed afterwards nt seem major unless wrong", "d": "11/2015"}, {"body": "remaining opera bugs fixed afterwards could became avalanche reverts timmywil think move deadline thursday", "d": "11/2015"}, {"body": "remaining opera bugs fixed afterwards could became avalanche reverts expect revert anything else fix bugs really nt think important necessarily get fixed within next days one onerror handler called jqueryparsehtml maybe opera lacking api sth another one css lineheight working", "d": "11/2015"}, {"body": "regressions minor code changes would difficult prefer noting regressions release notes talking pretty old version opera", "d": "11/2015"}, {"body": "regressions minor code changes would difficult prefer noting regressions release notes talking pretty old version opera look definitely thursday otherwise agree want make sure easy fix issues", "d": "11/2015"}, {"body": "anyone chance look closely", "d": "11/2015"}, {"body": "okay waiting next meeting", "d": "11/2015"}, {"body": "friendly ping", "d": "12/2015"}, {"body": "things used check commits added diffed jqueryjs jqueryjs doublecheck nt missing significant code changes list generated git cherry reverted commits removed commits added top noticed reverted isnumeric behavior change checking type string number features added need documentedalso make symbol support forof jqueryuniquesort added alias jqueryunique jquerysub fix root added back argument fninit migrate svg class support ajax post get take options object edited", "d": "12/2015"}, {"body": "commits ajax remove workaround data avoid nonalphanumeric chars expando properties ajax remove event dependency ajax module css clean memory leak reliablemarginright think last one important probably want memory leak gone believe want except first avoids performance regression good hygeine edit might even make sense include add revert", "d": "12/2015"}, {"body": "commits ajax remove workaround data avoid nonalphanumeric chars expando properties ajax remove event dependency ajax module css clean memory leak reliablemarginright think last one important probably want memory leak gone actually take back nt mean present means already picked means present", "d": "12/2015"}, {"body": "edit might even make sense include add revert timmywil features added need documentedalso make also api changes timmywil gnarf dmethvin also need attention questionable commits complicated reverts lists", "d": "12/2015"}, {"body": "complicated reverts look good far questionable commits hides x commits fine one gnarf adding unit tests animationtween think keep since way supposed work minor api additions signature changes dropping support old browsers also fine think everything revert isnumeric change make sure api additions", "d": "12/2015"}, {"body": "one gnarf adding unit tests animationtween think keep since way supposed work already removed tests talked causing problems android decided even generally work problem officially start supporting use cases jquery", "d": "12/2015"}, {"body": "causing problems android ah right fine", "d": "12/2015"}, {"body": "specific api additions need also missed add comment symbol support forof jqueryuniquesort added alias jqueryunique jquerysub fix root added back argument fninit migrate svg class support ajax post get take options object", "d": "12/2015"}, {"body": "coolsies changes reverted start working tomorrow point asking interested parties certain asking addingreverting commits versions planning work next meeting release middle next week hope sounds good everyone please express concerns also would like document api changes wait", "d": "12/2015"}, {"body": "also would like document api changes wait yes api additionsupdates need documented additions specifically includes x jqueryuniquesort x jqueryhtmlprefilter x post get taking object options x svg class support short note class docs excludes symbol support sure document even need wait regardless jquerysub fix init argument addition purely migrate", "d": "12/2015"}, {"body": "cc aurelioderosa", "d": "12/2015"}, {"body": "labels second stage hard get something report closing", "d": "11/2015"}, {"body": "although way problem also exists syntax error changed title clarify standard css selectors common case jquery never parses string passes string dom method fails fall back parsing string sizzle point would detect syntax error give syntax error message point called need make call use selector discarding result since many errors may exist selector eg nonsyntax typo like convinced benefit justifies cost", "d": "11/2015"}, {"body": "okay behavior upfront cost nt worth", "d": "11/2015"}, {"body": "agree dmethvin amp timmywil", "d": "11/2015"}, {"body": "seems like enough consensus close", "d": "11/2015"}, {"body": "timmywil behavior makes debugging harder costs nothing fix test selector freshly created element nt drop result since result always empty collection anyway", "d": "11/2015"}, {"body": "timmywil behavior makes debugging harder costs nothing fix feel like debugging nt really harder created event handler changed selector likely testing functionality still works find rather quickly whether syntax error either way", "d": "11/2015"}, {"body": "scottgonzalez advocating broken behavior general early error reported easier debugging especially talk syntax errors", "d": "11/2015"}, {"body": "abozhilov broken behavior broken selector moot selector valid takes actually using selector find invalid functionally reason use element needs checked yes takes longer realize selector invalid find pretty quickly try use", "d": "11/2015"}, {"body": "soon run unit integration tests see problem pretty early tests would problem rum telemetry could catch since outright thrown error", "d": "11/2015"}, {"body": "dmethvin missing entire point broken selector entire app must work nothing stack trace image debug code someone else missed test part made typo find files cost anything fix issue prefer complicated debugging right", "d": "11/2015"}, {"body": "cost anything fix issue keep saying zero cost implies nt need change anything modified copy jquery locally fix see solution image debug code someone else missed test part made typo find files sure console erroneous selector problem caused recent change code base reduce possible cause looking diff", "d": "11/2015"}, {"body": "repro edge bare file contents jsbin although nt work jsbin note jquery use js selected selected selected windowonload function var sel documentgetelementsbytagname select selremovechild selfirstelementchildnextelementsibling caused jquery", "d": "11/2015"}, {"body": "close one patchwelcome nt think work around willing look pull request", "d": "11/2015"}, {"body": "running release fine gotten point ci tests wrong often useless", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "basic test suite disabled master added info manual android testing wiki done closing bug timmywil assigning milestones bugs like without milestone indistinguishable invalid bugs closed maybe big problem", "d": "11/2015"}, {"body": "yea kinds tickets nt quite fit milestone probably set anyway enter archive something working", "d": "11/2015"}, {"body": "overwriting anywhere sure asking include two versions jquery site default second one overwrite amp global variables restore previous state use plugins previous version available please provide specific description problem", "d": "11/2015"}, {"body": "constructor said objects overwritten workaround used cms difficult touch developers cms extension example store plugins globally reinclude constructor", "d": "11/2015"}, {"body": "setting currently defined instance line executed nt exist overwriting anything except amp restore defined amp never overwritten", "d": "11/2015"}, {"body": "mean overwriting reinclude script anything object exists overwritten instead overwriting log warning message possible reinclude already registered plugins otherwise user problem know explicit object think anybody could coincidentally end includes automatic configuration whatever result jquery working using plugins throw x function error case overwrite object saved far well reinclude plugins fine explicit workaround jquery serve automatic solution gets one time included", "d": "11/2015"}, {"body": "mean overwriting reinclude script anything object exists overwritten instead overwriting log warning message possible reinclude already registered plugins would big compatibility break idea including jquery result two pieces independent code hence ca nt reinclude plugins might break code want share think anybody could coincidentally end includes automatic configuration whatever someone better see error try use plugin amp notice using two jquery copies instead one silent errors worst cases using multiple jquery copies avoided", "d": "11/2015"}, {"body": "cms plugins using jquery use noconflict maybe overwriting example include code cdn registered plugins gone forever issue include jquery amp plugins cms includes jquery copy without using lose access plugins seems weird include jquery amp plugins cms code access jquery copy", "d": "11/2015"}, {"body": "best scenario would everybody uses uses variables thats gon na happen one faulty extension could stop site working issue example include scripts head footer also customized headdata via typoscript ordering neither perfect fail safe scripts developer thinks good idea include jquery footer maybe mine script course using since know random user understand point view bad idea reinclude plugins default could overwritten plugin includes jqueryreinclude include nt matter", "d": "11/2015"}, {"body": "bad idea reinclude plugins default multiple jqueries site usually result couple independent code parts uses jquery plugins particular plugin might compatible jquery version used another snippet might logic place checks particular plugin expects etc easier reason sure external code attach plugins issue example include scripts head footer also customized headdata via typoscript ordering neither perfect fail safe scripts fnagel familiar would able reply", "d": "11/2015"}, {"body": "understand point view bad idea reinclude plugins default fact could completely broken newly loaded version jquery scenario described really bad practice something bad happens user land nt mean something equally bad happen inside jquery current logic multiple versions jquery sound highly unlikely ever change", "d": "11/2015"}, {"body": "agreed feel free discussion unlikely make changes", "d": "11/2015"}, {"body": "good idea could something like developing jquery useful run tests amd mode distribution files need rebuilt test suite reflect recent changes viewing qunit test page click load amd", "d": "11/2015"}, {"body": "rather readme included along similar notes contributing", "d": "11/2015"}, {"body": "makes synchronous requests ensure correct sequencing scripts embedded html evaluation calls dom manipulation functions words root cause direct jquery evaluate scripts inbound html remove warnings remove scripts see also especially", "d": "11/2015"}, {"body": "since became backcompatible recently longer possible suspect close", "d": "5/2016"}, {"body": "targeting might possible strong feelings keeping issue open", "d": "5/2016"}, {"body": "provide test case also note cases cause element considered hidden see docs", "d": "11/2015"}, {"body": "yup element visible time according definition visible element could width height content", "d": "11/2015"}, {"body": "jquery exactly correspond elements layout boxes even dimensions resolved", "d": "11/2015"}, {"body": "good point", "d": "11/2015"}, {"body": "closing due inactivity", "d": "11/2015"}, {"body": "use var app attr style", "d": "12/2015"}, {"body": "plugin first nt one like already get momentum consider adding core since pretty conservative new api nevertheless thank reaching", "d": "11/2015"}, {"body": "thanks opening issue wrong repo please open issue review", "d": "11/2015"}, {"body": "hi still fixed example working checked came negative number returned calculation add px em instead subtract number misunderstood ignore", "d": "1/2016"}, {"body": "noting regression event aliases removed managed creep back may inevitable doubt want start testing module subsets regular basis", "d": "11/2015"}, {"body": "closed", "d": "11/2015"}, {"body": "imagine much code would break would benefit", "d": "11/2015"}, {"body": "one point might want deprecate helper methods native equivalents amp stop using internally years might remove would change semantics amp friends little sure feasible particular use case sounds like edge case imo nt break much code opposed switching parameter order would break everything also edge case nt feel like change", "d": "11/2015"}, {"body": "even lodash supports sparse arrays nt think start", "d": "11/2015"}, {"body": "plus differences value handling returns callback depend behavior internally want standard javascript behavior use", "d": "11/2015"}, {"body": "provide history due concluded browser emulators node need global set node commonjslike environment environment browser emulator usually unfortunately node module handling leaked emulators browserify case already covered window document present common use case requiring jquery node still use jquery within emulator emulators still allow node module variables leak think leave way", "d": "11/2015"}, {"body": "currently scenarios gt nothing exported global set amp exists gt jquery exported global set amp nt exist gt factory accepting parameter exported running set global nt like amp diverge means global set global set looks like magic note scenarios may happen used browser emulators node think behave way", "d": "11/2015"}, {"body": "quite order pass scenario would hope one node", "d": "11/2015"}, {"body": "actually think good", "d": "11/2015"}, {"body": "also given finicky changes intro past nt want make changes someone opens ticket use case", "d": "11/2015"}, {"body": "timmywil quite order pass scenario really line means variable present scope picked setup function obviously exists yes verified console", "d": "11/2015"}, {"body": "looking understand happening reported issue person would like global exported nodelike environment someone fact open ticket noticed inconsistency", "d": "11/2015"}, {"body": "yes verified console console variables created global node everything wrapped closures", "d": "11/2015"}, {"body": "console variables created global variables verify global also please read explanation needed scope", "d": "11/2015"}, {"body": "looking introjs understand happening reported issue person would like global exported nodelike environment nt think valid use case something way user using electron electron global necessary case edited", "d": "11/2015"}, {"body": "verify global also please read explanation needed window scope read explanation still nt see window would make jquery scope", "d": "11/2015"}, {"body": "would jquery uses jquery find way would possible node wonky prototypical behavior way work global", "d": "11/2015"}, {"body": "actually think suppose would work require executed scope module requiring seems like would adverse side effects", "d": "11/2015"}, {"body": "keep forgetting looking using still surprised right though see argument", "d": "11/2015"}, {"body": "confirmed work way suspect able access", "d": "11/2015"}, {"body": "makes sense think modules node able leak modules even modules require rule module encapsulation", "d": "11/2015"}, {"body": "yeah looks funky created two scripts running prints expected get weirder results directly repl though const foo bar undefined foo bar globalfoo undefined var util require util undefined util foo scope maybe repl much magic inside ps run using everything evaluated strict mode", "d": "11/2015"}, {"body": "maybe repl much magic inside yea perhaps", "d": "11/2015"}, {"body": "wrong button", "d": "11/2015"}, {"body": "case see reasoning exists right assume emulated browser environment environment leaks hit line means global set contrary wish set environments nt reach latter line sets global understand happening", "d": "11/2015"}, {"body": "ah ok always set set set browser emulators setting would mean setting question remains one related reported whether skipping setting global browserify mistake maybe increases logical complexity everything agree changing may risky scenario presented typical every choice make someone unhappy", "d": "11/2015"}, {"body": "question remains one related reported whether skipping setting global jquery browserify mistake used export global browserify case got multiple complaints inclined leave asis case equivocal best inclined trust past reports global unexpected environment", "d": "11/2015"}, {"body": "sounds good closing wontfix someone disagrees comments welcome always reopen", "d": "11/2015"}, {"body": "never used electron ca nt answer question nt seem like good question ask bug tracker maybe stack overflow", "d": "11/2015"}, {"body": "ok already questions stackoverflow regarding answered solution much use us hoping get input people know jquery internals well electron guys state hoping understand jquery perspective", "d": "11/2015"}, {"body": "ca nt use require environment nt allow use sounds broken", "d": "11/2015"}, {"body": "mzgol use require electron quirk builddeployment system caters web desktop makes requireing jquery less ideal us", "d": "11/2015"}, {"body": "noticed current logic little inconsistent reported details really issue slightly related", "d": "11/2015"}, {"body": "reference continuation forum post arvstract would able take look diff posted identify possible sources leak would help us lot", "d": "11/2015"}, {"body": "hi dave honest familiar internal code jquery works tried reporting bug observe unit test hope jquery team use reference currently reviewing url gave best understand code also share ideas help isolating code causes memory leak thank", "d": "11/2015"}, {"body": "arvstract sure love get help bug since seeing mentioned change full differences versions put line back leak go away may lost cherrypick", "d": "11/2015"}, {"body": "looking bit pretty sure lost leakplugs move make support checks lazy right nt likely need brokenout feature detects attributes manipulation css effects already event data", "d": "11/2015"}, {"body": "unrelated making support tests lazy kept checks line removed markelog claimed bug existed unpatched versions false", "d": "11/2015"}, {"body": "sure see summoned nt answer sorry bug caused memory leak event handlers fixed several fixed least one applies sure whether patterns trigger leak would nt surprise markelog recall mean give break decade smile", "d": "11/2015"}, {"body": "sure seems comment might referenced update although microsoft says memory issues solved evidence resurfacing new different leaks seems case though since assigning everything null described article would nt help arvstract describing sounds like iframe issue could nt find mentions update fix released nt matter mentioned original discussion issue present leak small amount memory unless app constantly removing adding iframes jquery inside work fine app fact would nt advice adding fix back support unusual use case", "d": "11/2015"}, {"body": "least one applies sounds case since expandos", "d": "11/2015"}, {"body": "agree nt see could apply point think waiting arvstract provide information case appears leak", "d": "11/2015"}, {"body": "hi markelog website composed frameset structure less like navigating constantly mainframe keep loading pages jquery causes memory build released existent upon refreshing page memory clears mean unless app constantly removing adding iframes jquery inside yes constantly removing adding iframes jquery hi dmethvin truly sorry still unable provider information bug encounter busy fixing bugs website past days decided downgrade jquery sorry tell still guarantee yet review pinpoint issue might possibly occur", "d": "11/2015"}, {"body": "imagine suffers memory leaks situation frameset page never unloaded leak would cleaned could also vivid imagination would good get info whether putting null assignments back solves problem nt like change code without good test case nonframeset page leak support tests minor since happen", "d": "11/2015"}, {"body": "closing provide info investigate", "d": "12/2015"}, {"body": "text fields email telephone fields respectively documentation allows us select elements", "d": "11/2015"}, {"body": "looks like text field", "d": "11/2015"}, {"body": "visual representation may mean surely would nt using new types", "d": "11/2015"}, {"body": "use pretty much mobile safari uses input type present right keyboard user aspects text fields text fields support keyboard input display entered information text field support masked input still text field regardless capability format user input problem need make live validation manually pick kinds text fields including tel email text help use trail selectors find text fields", "d": "11/2015"}, {"body": "dom nt tell us input presented keyboard input tells us matches inputs absentempty text ca nt changed would break backwards compatibility desired selection cumbersome however could define use custom selector like", "d": "11/2015"}, {"body": "wiki description process use decide whether add feature criteria mind nt think add feature like directly jquery core would easy implement via plugin way people want use people nt need pay increased file size", "d": "10/2015"}, {"body": "nt work domcontentloaded fired would nt surprise situations seem like browser bugs reported chrome firefox", "d": "10/2015"}, {"body": "looks like browser bug sizzle test bypass qsa", "d": "10/2015"}, {"body": "nt work domcontentloaded fired would nt surprise testing domcontentloaded early page load would work time inconsistent reported chrome firefox enough time post bug report running things nt yet chance sort post issue ff chrome looking jquery source recall seeing buggyqsa check could used skip nt yet time mock possible fix", "d": "10/2015"}, {"body": "seeing difference chrome firefox css former nt apply cascaded rules page load latter inconsistency makes nervous applying global changes sizzle", "d": "10/2015"}, {"body": "enshrine solution hard support future definitely worth kicking browser guys get agree standard behavior perhaps polyfill get page fixing sizzle seems risky", "d": "10/2015"}, {"body": "guess confused would ever match anything point page lifecycle get node may exist dom points node exists compelling reason would select element risk enforcing behavior", "d": "10/2015"}, {"body": "zzzzbov inconsistency browsers believe first reaction possibly causes disagreement spec interpreted happens lot confusion implementation selector neglected still revised outlying circumstances match sizzle enforce behavior may become invalid future", "d": "10/2015"}, {"body": "said safely say browsers wrong spec clear enough may able bypass qsa rely dom ready sizzle", "d": "10/2015"}, {"body": "seems like good soon domcontentloaded fires could buggyqsa test would good find browsers currently disagree wonder qsa implementation also problems hashchange events", "d": "10/2015"}, {"body": "spec found far searching bit awkward finding resources challenging see reason ca nt resolve element soon element exists within dom missing something", "d": "10/2015"}, {"body": "zzzzbov disagreeing fact expect fixed browser updates right chrome cascade styles page loaded nt want jump gun", "d": "10/2015"}, {"body": "opened bugs chromium firefox see goes", "d": "10/2015"}, {"body": "said firefox bug worth pointing explicitly practice firefox believe chrome matches element last target anchor scroll nothing element id right eg could changed element got scrolled everything intended meaning originally introduced two relevant specs defines matches something called target element nt define since document language html defines target element html document latter specified specification nt match browser behavior initial meaning prohibitively expensive implement anyway servo tried ran serious issues see spec issue tracking situation back observed behavior load problem defining element last scrolled depend browser decides scroll pageload answer depends standard gecko looks like scroll generally happens least end parse though maybe additional trip event loop somewhere people care enough dig check think also happen heuristics pageload totally subject change nt relied making work reliably starting firing nt already seems like pretty reasonable thing", "d": "11/2015"}, {"body": "actually might good reasons scroll though think gecko always scroll really happen believe layout stable avoid jumping around page still stylesheets loading time happens may want avoid scroll point", "d": "11/2015"}, {"body": "bzbarsky saying element nt match therefore nt get updated styles page actually scrolls given application styles could make substantial changes generally could nt guarantee stable layout without", "d": "11/2015"}, {"body": "precise sequence events function gecko takes value argument follows skipping various complexity around svg whatnot find target element set element url target state starts match try scroll element view trying scroll something view besteffort attempt update layout scroll besteffort layout update takes long user trying interact page interrupt part way use whatever got far", "d": "11/2015"}, {"body": "hmmm example mentioned whatwg ticket bothers duplicate id values instead change id current target first li css update next either seems na\u00efve implementation would match browsers css either bug report browsers nt consistent sizzle nt normalize sizzle nt report element browser", "d": "11/2015"}, {"body": "ca nt wrap head around styles scrolling behavior impact return value like saying could nt call css particular selector nt finished loading external stylesheet request element dom expect get element dom actually current behavior selectable browser feels like makes useless javascript unreliable point certain get element attempting select simple solution never use seems silly wasteful", "d": "12/2015"}, {"body": "current behavior selectable browser feels like makes target useless javascript unreliable may true css selectors nt useful javascript really want element selected use", "d": "12/2015"}, {"body": "really want element selected documenthash use complicates compound selectors switch something along lines good reason complication", "d": "12/2015"}, {"body": "good reason complication reason selects thing value javascript current instant match semantics implementation browsers problem need get browsers andor standard change", "d": "12/2015"}, {"body": "need get browsers andor standard change working", "d": "12/2015"}, {"body": "sounds like counting browsers update nt think going apply global fix sizzle least", "d": "1/2016"}, {"body": "see also", "d": "5/2016"}, {"body": "response headers say contenttype json way get error case response incorrect since response body contain json", "d": "10/2015"}, {"body": "thing happens content type header", "d": "10/2015"}, {"body": "tries interpret plain text json time think happening force incorrect content type provide test case", "d": "10/2015"}, {"body": "using backbone case request fetching data first call put server action queue process asynchronously processed straight awaya return status body send request interval eventually returns response body backbone method wraps method wrapper method", "d": "10/2015"}, {"body": "lkay see parameters passed later question stands params pass force get error backend returns header response nt body", "d": "10/2015"}, {"body": "lkay still extract test case want us anything ca nt debug whole backbone app put breakpoint rogue call see parameters passed see headers get reponse test case look", "d": "10/2015"}, {"body": "custom wrapper make promise compatible nt matter get result use jquery methods javascript class ajaxerror extends error constructor jqxhr textstatus errorthrown super thisname ajaxerror thismessage textstatus thisjqxhr jqxhr thiserrorthrown errorthrown function decorateasjquery promise promisedone fn gt return decorateasjquery promisethen fn promisefail fn gt return decorateasjquery promisethen null fn promisecomplete fn gt return decorateasjquery promisethen fn fn return promise let jqajax ajax ajax function ajax let jqpromise jqajaxapply arguments let promise new promise resolve reject gt jqpromisethen data gt resolve data jqxhr textstatus errorthrown gt reject new ajaxerror jqxhr textstatus errorthrown return decorateasjquery promise code basic looks like request headers response headers", "d": "10/2015"}, {"body": "code snippet still nt know passed need know", "d": "10/2015"}, {"body": "object sent method looks like backbone forcefully setting change seems work", "d": "10/2015"}, {"body": "great thanks letting us know", "d": "10/2015"}, {"body": "particular jsperf looks bogus likely symbol case completely elided would nt surprise betterfaster solution though know dog path taking though sounds like animations dom elements would idea replace plain assignment dom elements well use everything else whenever available wondering get rid cases based supported browsers whether add another one", "d": "10/2015"}, {"body": "current data code different jquery particular trycatch around defineproperties need check also dmethvin pointed test case bogus symbol assignment gets jitted away modern browsers need create patched jquery version amp compare method invocations see real difference said seems use case weakmap symbol rwaldron wrote whole code weakmaps mind jdalton experiments lodash might suggest could make data module faster need check", "d": "10/2015"}, {"body": "sweet checked master filing nt realize define property path eliminated dom nodes along trycatch essentially equivalent symbol path since point property access weakmaps optimized point usable yet recall someone perf tests back pretty slow hopefully fixed maybe jdalton knows", "d": "10/2015"}, {"body": "weak maps bit touchy repeated use like microbenchmark still cause prolonged gc pauses heuristic place short circuit use get hot use nt critical machinery performance optimization store metadata function wrappers avoid repeated wrappings anything symbols weak maps likely faster use worst switched weak maps less expensive", "d": "10/2015"}, {"body": "seems like nt really need weakmap okay data garbagecollected element goes scope attached via either plain property symbol would advantage", "d": "10/2015"}, {"body": "dmethvin ca nt use regular assignment nonnodes would observable much weakmaps fit main use case jquery data module nodes use regular assignment right maybe nt need anything currently need nonweakmap path objects anyway since primary use case might much", "d": "10/2015"}, {"body": "dmethvin yah speaking weak maps mentioned thread nt giving endorsement push used jquery advantage weak maps side effects element bolted property", "d": "10/2015"}, {"body": "okay wondering missed something could go completely one particular way would improve consistency seems like could possible solutions performance standpoint getting rid really common element case seems like biggest win got", "d": "10/2015"}, {"body": "yep everything looks sweet checked master filing bad want still use symbol since get closer truly hiding properties nodes would avoid defineproperty path normal objects would pretty much perf impact one way common case data elements", "d": "10/2015"}, {"body": "decided use symbols would additional code path would nt save performance nodes use regular property might save perf objects dominant use case", "d": "11/2015"}, {"body": "sorry interface already bloated trying restrain adding options besides pointed could easily done user land already", "d": "10/2015"}, {"body": "good point thought might ask thanks", "d": "10/2015"}, {"body": "sure harm ask", "d": "10/2015"}, {"body": "closed", "d": "10/2015"}, {"body": "see nt make longer needed milestone cleared amp issue marked", "d": "1/2016"}, {"body": "cleaner approach made failing tests guess big deal", "d": "1/2016"}, {"body": "yeah tests passing clearing milestone", "d": "1/2016"}, {"body": "console message says frame nt displayed nt say nt loaded case browser firing load event deliver nt seem problem jquery howto question might able get solution stackoverflow", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "use object parameter please look help jquery forums stack overflow though place report bugs", "d": "10/2015"}, {"body": "thanks report related nearduplicate possible address end jqueryhtmlprefilter implementation pr would good starting point still sure putting something like official build though", "d": "10/2015"}, {"body": "yes bug seems fix considered big ought possible exclude content within without much regex", "d": "10/2015"}, {"body": "read content within script", "d": "10/2015"}, {"body": "definitely unintended behavior screwing case nt necessarily bad putting executable scripts html something love remove least make much difficult security implications way easy inject attacker content scripts think need reinforce advice bad practice use example one place fails", "d": "10/2015"}, {"body": "ought possible exclude content within without much regex though would probably update first part per change maximum correctness", "d": "10/2015"}, {"body": "fwiw use case found issue obfuscation contact details using ajax javascript converts sequences apparently random characters back original human readable form nt see anything particularly bad practice injecting content dom come trusted source via ajax may design contain script generally however ca nt think good case encryption sequences string literals modified unexpectedly would anything benign eg ajaxreturned script also contains dom manipulation code equivalent plain javascript xml special characters used though nt know frameworks also aware case valid javascript outside string literal would concur adding something documentation additional notes begin design jquery constructor method accepts html string would resolve ticket perhaps also note html contains script string literals cryptographic functions unexpected results may occur eg become also design jquery intended lightweight expected issue genuine situations something like would saved several hours debugging already scanned docs scoured tinternet see might missing something way etc work nt know suggest workaround jsfiddle updated working fine case nt looked whether things like issues hackery types seeing additional note limitations may seek ways breaking probably good thing", "d": "10/2015"}, {"body": "nt see anything particularly bad practice injecting content dom come trusted source via ajax may design contain script generally content security policy standpoint common disable inline scripts policy common attack vector problem really hard web developers strongly assert content trusted source many ways mess nt looked whether things like issues characters inside attribute htmlencoded building title dynamically example many ways mess mentioned could result xss", "d": "10/2015"}, {"body": "first point rhetorically google search results page full inline script second bad example trying come possible related failures failed would like move documentation issue nt seem able", "d": "10/2015"}, {"body": "second bad example trying come possible related failures failed valid would like move documentation issue nt seem able thanks", "d": "10/2015"}, {"body": "put together example docs specifically issue see", "d": "10/2015"}, {"body": "thanks input issue closed like point js clientside security issue inline js must security breach somewhere else really looking", "d": "10/2015"}, {"body": "actually also deprecated documented need provide support used provide support already provided natively", "d": "10/2015"}, {"body": "suspect report due console messages firefox lazyeval solution would fix since would look properties tried look", "d": "10/2015"}, {"body": "nt due console messages firefox result khigakisugar realizing deprecated looking better solution dom method marked deprecated listed deprecated imho would helpful us potential future users would deprecation notice jquery web page text recommending something use instead nt really viable option us least without manually falling back something else chrome safari support finished", "d": "10/2015"}, {"body": "unfortunately made big mess mouse buttons key codes course decade lots deprecated properties different values order get consistent result across platforms jquery supported years starting firefox settled normalizing sure far along browsers supporting example keys standard always possible get raw event values turns finally implemented probably best path users take use need jquery normalization leave us timmywil mentioned lazy eval improved documentation covered created ticket api repo ideas wording could test support new standard properties would awesome", "d": "10/2015"}, {"body": "checks wo nt make sence tags exactly trying ca nt tags", "d": "10/2015"}, {"body": "check get list tags nt information provided one latest stable ok parse name hope alpha beta means stable even trust order given json may could change time would lot easier secure releases provide additional information releasedate especially releasedate one part use show buildenvironment long nt change since released hope valid reasonable usecase", "d": "10/2015"}, {"body": "check get list tags nt information provided one latest stable releases api nt actually tell either project maintainers mark release latest github make guess based purely date means patch release older version released recently current stable version marked latest rely version sorting instead ok parse name hope alpha beta means stable hope guarantee see hyphen know prerelease even trust order given json may could change time nope nt trust order apis need sort based version number semver defines clear specification would lot easier secure releases provide additional information releasedate especially releasedate one part use show buildenvironment long nt change since released information easily found today following link provided value tag hope valid reasonable usecase certainly reasonable usecase information want already available today releases jquery", "d": "10/2015"}, {"body": "thank scottgonzalez explanation", "d": "10/2015"}, {"body": "dmethvin propose allowing input returning true strings numbers whether primitive object numeric", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "added behavior change tag since one strange case custom longer handle mentioned release notes", "d": "10/2015"}, {"body": "conversion moved done method post body", "d": "10/2015"}, {"body": "note form submission converts spaces plus signs applicationxwwwformurlencoded encoding used http get post logic note also decoding algorithm explicitly replaces plus signs spaces immediately unescaping percentescapes means treats identically ca nt limit conversion specifically percentencoding would reasonable approximation", "d": "10/2015"}, {"body": "done hard work set straight details grab ticket thanks", "d": "10/2015"}, {"body": "welcome pull requests decrease size preserving functionality relevant performance", "d": "10/2015"}, {"body": "thanks opening issue please ask support forums jquery irc channel", "d": "10/2015"}, {"body": "\u0437\u0434\u0440\u0430\u0432\u0441\u0442\u0432\u0443\u0439\u0442\u0435 timmy willison \u0432\u044b \u043f\u0438\u0441\u0430\u043b\u0438 \u043e\u043a\u0442\u044f\u0431\u0440\u044f \u0433 thanks opening issue please ask support forumsor jquery irc channel realy sorry spend time nt know jq hasnt support ie lt included demo module browser mark \u0441 \u0443\u0432\u0430\u0436\u0435\u043d\u0438\u0435\u043c victor blood masm mailto dev masmelcomru", "d": "10/2015"}, {"body": "need remember reclose solved tickets wo nt fix means removing milestones", "d": "10/2015"}, {"body": "sounds like markelog wants take alright note restoring old behavior still want make couple changes cache inline display values cache display value set user ensure initially trying show elements removing display value means providing partial fix responsive issue", "d": "10/2015"}, {"body": "fine yielding make mistake monster like see following tables filled agreed upon fixed asserted pr expected inline nonanimated initially initial state default inline cascade inline default inline cascade inline cascade inline initially initial state default inline cascade inline default inline cascade inline cascade inline initially non non initial state default inline cascade inline default inline cascade inline cascade inline initially initial state default inline cascade inline default inline default inline default inline cascade inline cascade inline cascade inline cascade inline animated given following helpers js function toggle callback return jquery toggle callback function partial callback return togglecall delay simultaneous queue simultaneous function next callback callbackcall next dequeue simultaneous initially initial state default inline cascade inline default inline cascade inline cascade inline initially initial state default inline cascade inline default inline cascade inline cascade inline initially non non initial state default inline cascade inline default inline cascade inline cascade inline initially initial state default inline cascade inline default inline default inline default inline cascade inline cascade inline cascade inline cascade inline think find restoring old behavior nt really help still want markelog", "d": "10/2015"}, {"body": "sure lot surprises filling tables think comment might good start blog post sort documentation page think step step basis first revert fill tables apply new changes mentioned timmywil fill tables compare find possible improvements apply improvements create proposal participate existing one dom api improve current situation cc aurelioderosa could became documentation ticket mzgol dom api proposal", "d": "10/2015"}, {"body": "also think restoring previous behaviour essential final regardless possible mess", "d": "10/2015"}, {"body": "think comment might good start blog post sort documentation page yeah need put somewhere people see hairy smile", "d": "10/2015"}, {"body": "first revert fill tables apply new changes mentioned timmywil fill tables compare find possible improvements apply improvements exactly recommending need fill tables changing anything point implementing behavior ca nt define also tackling reverting old code tests closer mark lot messier", "d": "10/2015"}, {"body": "exactly recommending need fill tables changing anything well first step nt implement yet anything reverting behaviour already defined docs filling tables means defining sideeffects cases nt strictly necessary apis one example roughly equivalent calling css display block except display property restored whatever initially element display value inline hidden shown displayed inline users fine current behaviour two exceptions since received two complains logic slow performance cases inability change previously caches display environment adaptive styles besides exceptions recognize inconsistencies filling tables try fix otherwise instead reverting might end implementing something else bigger discussion whole different kind work think nt try tackle whole thing one effort gradually evaluating every step go along try different tactics", "d": "10/2015"}, {"body": "seems like filling table would good thing though let define want code see implement problem saying nt care supported cells either let make conscious choice accidental one", "d": "10/2015"}, {"body": "clarify think important fill document", "d": "10/2015"}, {"body": "filled table nonanimated elements rather start half scenarios tackling whole thing see", "d": "10/2015"}, {"body": "cool would propose though put somewhere test directive interactive pagetests", "d": "10/2015"}, {"body": "conclusion take btw something unexpectedincorrectinconsistent nt see anything ambiguous", "d": "10/2015"}, {"body": "sure asking table values expect line implementation existed jquery", "d": "10/2015"}, {"body": "nt think closer master recommending reverting commits commented gist one suggested revision", "d": "10/2015"}, {"body": "also agree scottgonzalez think implementation addresses nonanimated first see", "d": "10/2015"}, {"body": "bah stupid lack notification gists going put table comment figured page would get crazy long people started anyway replied comments", "d": "10/2015"}, {"body": "scottgonzalez oh thought posting results reverted previous behaviour", "d": "10/2015"}, {"body": "want google spreadsheet editing comment seems best collaborative population", "d": "10/2015"}, {"body": "editing comment also nt notify tho spreadsheet", "d": "10/2015"}, {"body": "nt edit table makes hard actually discuss changes see going spreadsheet actually comment individual fields would great", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "filled doc table", "d": "10/2015"}, {"body": "filled two new columns google doc", "d": "11/2015"}, {"body": "hi everyone followed discussion wondering think good time improve documentation table created advocate best practices showinghiding elements far note added commit might enough", "d": "4/2016"}, {"body": "form table api docs seems like good idea", "d": "4/2016"}, {"body": "also use selectornative slim build", "d": "11/2015"}, {"body": "nt think long incorrect scoping rules cutting functionality fine rather change", "d": "11/2015"}, {"body": "go sizzle well easier explain particular api left versus api behaves differently cases also easier debug", "d": "11/2015"}, {"body": "fair enough", "d": "11/2015"}, {"body": "docs say returned array flattened resulting array", "d": "10/2015"}, {"body": "dup noticed nt ticket assigned milestone timmywil listed owner go", "d": "10/2015"}, {"body": "thank opening issue please ask support forums jquery irc channel flesh issue provide small test case", "d": "10/2015"}, {"body": "agree bilaridis using ie microsoft mvc client validation checked checkbox gives error due data undefined unexpected token works chrome though adding check undefined solved us", "d": "11/2015"}, {"body": "martinbring jqueryparsejson polyfill jsonparse going change works nt pass undefined", "d": "11/2015"}, {"body": "hi mzgol thank responding quickly see comment could interpreted using script libraries external part passing undefined using jquery libraries ie part validation libraries passing undefined validating checkboxes case see different existing workaround android null proposed one ie undefined kind regards martin", "d": "11/2015"}, {"body": "please provide minimal test case reproducing issue without hard us say problem lies jquery different place micha\u0142 go\u0142\u0119biowski", "d": "11/2015"}, {"body": "martinbring yeah like behaviour changed input incorrect validation lib passing value means compatible later versions jquery might want consider updating see different existing workaround android null proposed one ie undefined value correct json like primitive value like string number valid json see whereas android follows previous iteration specification prohibited values normalize behaviour mzgol martinbring jqueryparsejson polyfill jsonparse going change works nt pass undefined polyfill though shim", "d": "11/2015"}, {"body": "tsarma please try one simply get javascript support associative array hope help", "d": "10/2015"}, {"body": "right risan says second case array array elements two extra properties added jquery sees array property since elements added array length working way javascript array example", "d": "10/2015"}, {"body": "thank risan dmethvin explainations regarding javascript supporting associative array case added two extra properties existing empty array object according docs reads added properties empty object case array nt worked", "d": "10/2015"}, {"body": "object numeric properties enumerated plain enumerable properties including prototype ones enumerated ca nt please follow general programming forum stackoverflow questions thanks", "d": "10/2015"}, {"body": "thanks report jquery compat continuation jquery line nothing changed jquery continuation jquery line code seem code still needed main branch ie still broken fortunately seems fixed edge likely fix jquery many bug fixes people would like fixed ca nt backport good fix", "d": "10/2015"}, {"body": "aschmalzhaf would like take shot pr jquery compat alpha code lies branch jquery alpha code lies need backport code branch srcattributespropjs file", "d": "10/2015"}, {"body": "mzgol ported label", "d": "12/2015"}, {"body": "label removed", "d": "12/2015"}, {"body": "test added nothing needed fixed adding label", "d": "1/2016"}, {"body": "nt know specific causesolution things try try tag changes made fix build issues also might need older nodenpm running something around time gruntcomparesize task skipped essential", "d": "10/2015"}, {"body": "happy assist issue since nt pertain current jquery closing ticket interest triage please try dave suggestion let us know worked", "d": "10/2015"}, {"body": "dmethvin thanks suggestion confirm version builds using node keeps complaining important indeed", "d": "10/2015"}, {"body": "chrome one tracked", "d": "10/2015"}, {"body": "updated thanks", "d": "10/2015"}, {"body": "resolved dropped safari testing updated original post", "d": "10/2015"}, {"body": "changed list checkboxes easier set resolved", "d": "10/2015"}, {"body": "mzgol cool", "d": "10/2015"}, {"body": "closed since landed", "d": "10/2015"}, {"body": "code always used api create instance see promisesaplusadapterjs file example edit ok see docs could check problem reproducible jquery", "d": "10/2015"}, {"body": "ah ok jquery using global object present global case robust nodejsdom testing jquery currently alpha never assume browser globals available globals always take work better released confirmed script works fine jquery alpha add one line script requiring", "d": "10/2015"}, {"body": "yes look like working add var signalr require signalr javascript file getting undefined error says jquery defined sure ajax worked though ca nt load like way working", "d": "10/2015"}, {"body": "need report issues plugin author note plugins might look others might need set", "d": "10/2015"}, {"body": "tried getting error version please help error object readystate responsetext undefined status statustext typeerror read property open undefined", "d": "2/2016"}, {"body": "jquerywrap return wrapped elements method returns original set elements chaining purposes", "d": "10/2015"}, {"body": "yup works expected see console element wrapped correctly", "d": "10/2015"}, {"body": "documents argument must integer behavior input unconstrained", "d": "10/2015"}, {"body": "kind enough change return empty set find highly helpful many cases index dynamic expected result empty set first element thanks", "d": "9/2016"}, {"body": "yaireo guaranteed return empty collection", "d": "9/2016"}, {"body": "indeed tons code already written variables set checking everywhere manually setting huge hassle ca nt jquery check internally return empty set reason makes sense nt", "d": "9/2016"}, {"body": "hold yaireo right tons code already written changing behavior could break code although actual behavior nt documented learned changing even undocumented behavior dangerous even change would nt happen jquery later time given much code already written nt see benefit changing", "d": "9/2016"}, {"body": "makes sense keep signatures simple consistent accepts numbers define function wrap checks particular need", "d": "9/2016"}, {"body": "dmethvin indeed seems messy business change makes sense ca nt make likely cause kim kardashian situation wrap hackfunction like suggested mr", "d": "9/2016"}, {"body": "need put code want invoked need wait particular event put code event handler", "d": "10/2015"}, {"body": "think dtracers looking way prevent ready happening entire page web components initialized would really bad idea since would hurt performance jquery code main page reaching state wcs page needs know wc state code rewritten however offer hope use please followup stackoverflow though since bug report already provide footgun want", "d": "10/2015"}, {"body": "dmethvin actually asking thanks library using animations set code ready custom elements set attaches handlers animations work work chrome polyfills mainly happens using html imports", "d": "10/2015"}, {"body": "untested work pretty much replace ready promise union old ready promise another promise resolved custom event triggered", "d": "10/2015"}, {"body": "thanks report polyfill included jquery pick assume write perspective user goes site relies activex disabled see fail included default mean every jquery user download kb minifying amp gzipping polyfill nt need seems lot especially nt think lot users disabling activex mostly enterprise guess leave open others comment nt think note loses upstream support jan migrate newer browser asap even means using enterprise mode", "d": "10/2015"}, {"body": "hi yea enterprise unfortunately cant tell customers upgrade eg embedded scenarios xp still used lot said something download get add deployment addition jquery work activex disabled thanks", "d": "10/2015"}, {"body": "looked project linked ie xmldom nt tested speccompliant able include jquery please let us know works problems approach", "d": "10/2015"}, {"body": "hi ive tried run xmldom jquery picks probably contains performance problems site becomes unresponsive right clicking right im looking alternative lib seems nt many choose", "d": "10/2015"}, {"body": "going close since much find working polyfill picked automatically write comment specific problems like polyfill picked etc reopen", "d": "10/2015"}, {"body": "interested helping please let know changes required stuff new", "d": "1/2016"}, {"body": "markelog mean alias seems alias since event object get fixed whether use", "d": "1/2016"}, {"body": "issue nt entirely clear nt really things eg going close markelog replies concrete info reopen", "d": "5/2016"}, {"body": "apply special fixes events looking like nt test events least tests nt anything point ticket provide tests event specifically property", "d": "5/2016"}, {"body": "probably intended behaviour useful cases know exact target element use get linkelement jsfiddle", "d": "10/2015"}, {"body": "yes actual target need know event handled use", "d": "10/2015"}, {"body": "thanks report expects object passing unsupported treat feature request leave open others voice opinions recently made amp accept input opposed treating lightly determine though many methods would get similar treatment", "d": "10/2015"}, {"body": "thanks yeah figured nice feature wanted get incase one ran", "d": "10/2015"}, {"body": "really easy fix caller side though know value may undefined use trick define empty string put bunch inside jquery good chance mask errors make api harder people use", "d": "10/2015"}, {"body": "dmethvin could say though yet accepted treat amp differently", "d": "10/2015"}, {"body": "agree nt regressions undocumented behavior nt think would changed least would nt favor smile", "d": "10/2015"}, {"body": "tend think consistency trumps history matter favor gracefully handling nulundefined case", "d": "10/2015"}, {"body": "suggestion handle creating bigger ticket review apis allow nullundefined possible update docs well apis around almost decade without someone needing concerned moving yakshaving territory much else", "d": "10/2015"}, {"body": "fine ticket handling param nullundefined wait bug reports thinking ones", "d": "10/2015"}, {"body": "treat breaking change new feature latter case could moved rather add new issues milestone point", "d": "10/2015"}, {"body": "definitely feature since talking expanding signature", "d": "10/2015"}, {"body": "ok milestone added", "d": "10/2015"}, {"body": "hopefully far topic since change considered handle would bad idea also handle function argument similar object iterator invokes attributes functions", "d": "3/2016"}, {"body": "fan adding behavior api documenting nt forget unfortunately suppose already crossed rubicon calling functions prevent used way passively serialize object way would json still fan", "d": "3/2016"}, {"body": "dmethvin moved question separate issue", "d": "3/2016"}, {"body": "ok see cache", "d": "10/2015"}, {"body": "almost certain duplicate please reopen problem also manifests git build alpha", "d": "10/2015"}, {"body": "alpha working fine", "d": "10/2015"}, {"body": "thanks report however exactly handles strings try modern browser nt want deviate standard needs stay want changed need convince ecmascript standards committee", "d": "10/2015"}, {"body": "hi mzgol however exactly objectassign handles strings thanks reference want changed need convince ecmascript standards committee sure felix", "d": "10/2015"}, {"body": "settle target sources always boxed via toobject see amp nonnegotiable review toobject see following entry table argument type result string return new string object whose stringdata internal slot set value argument see description string objects code terms", "d": "10/2015"}, {"body": "thanks explanation rwaldron regard plain jsecmascript perspective makes lot sense guys certainly aqcuainted js saying working jquery reading api docs function requires objects arguments string naturally thought object js world expected ignored jquery often understood abstractionsimplification plain js thought would responsible mention function result potential surprise api users also understand mzgol argument conform standard regards felix", "d": "10/2015"}, {"body": "expected ignored sure mean expect invalid api calls essentially noop nt documented happens call jquery api arguments behavior definition undefined", "d": "10/2015"}, {"body": "dmethvin sure mean expect invalid api calls essentially noop nt documented happens call jquery api arguments behavior definition undefined know outcome defined passing invalid arguments simply stated slicing string adding character indeces properties probably least unadvanced api users expect would imo less problematic simply ignore argument case personal opinion understood contra arguments want offend anyone feel free ignore thread", "d": "10/2015"}, {"body": "duplicate fixed jquery please always check bug exists latest development version ie reporting note though jquery nt generally support svg added class support since many people asked", "d": "10/2015"}, {"body": "functions working versions jquery try hack addclass removeclass hasclass jquery methods jquery versions usage", "d": "10/2017"}, {"body": "thank suggestion wo nt adding selector extensions jquery", "d": "10/2015"}, {"body": "updated firefox version result", "d": "9/2015"}, {"body": "failed result firefox well historically manipulating iframe instance jquery iframe dicey nt unit tests ensure works case eg sameorigin report mozilla link", "d": "9/2015"}, {"body": "thanks feedback exactly report mozilla mentioned jquery free test works differences test happened inside jquery going investigate later may clarify", "d": "9/2015"}, {"body": "okay sorry missed code multiplebrowser bugs described file maybe firefox fixed original bug caused process", "d": "9/2015"}, {"body": "works mentioned getstylesjs see parent like test though chrome works cases strange", "d": "9/2015"}, {"body": "code comment says ff meanwhile throws frame elements support mention ff possible bug fixed sometime ff might work data uri still throw content fetched remotely", "d": "10/2015"}, {"body": "nt getting proper window object like proposed better", "d": "10/2015"}, {"body": "still explanation works mentioned settimeout workaround", "d": "10/2015"}, {"body": "guess mostly likely two windows separate threads window action happens synchronously respect code otherwise", "d": "10/2015"}, {"body": "per meeting pushing", "d": "3/2016"}, {"body": "ccing mozilla folks miketaylr digitarald bzbarsky annevk kentuckyfriedtakahe cyberdees", "d": "6/2016"}, {"body": "dbaron maybe help zcorpan opera btw standards side problem seems using elements sameorigin document nested browsing context give expected results layout trigger applied window method", "d": "6/2016"}, {"body": "yeah seems invalidate wrong window specification may may bogus", "d": "6/2016"}, {"body": "dmethvin fwiw separate threads possible since otherwise would nt able cross easily javascript", "d": "6/2016"}, {"body": "annevk said style recomputed lazily flushed queried gecko flush done document whose rules used inline style works inconsistent across browsers across whether element css box spec says something nt necessarily match reality well generally brokenbydesign course upshot using one window element another window reliable way best avoided option", "d": "6/2016"}, {"body": "using getcomputedstyle one window element another window reliable way best avoided option case someone attempting use jquery api control another frame jquery nt way make consistent option admonition needs go enduser ticket would closed ca nt fix jquery side thoughts", "d": "6/2016"}, {"body": "jquery could get course null elements xhrdomparser result documents like really time someone asks computed style element one document using another document unless saying nt really care computed style unless know fact css rules anywhere matching element given current state uas spec around stuff", "d": "6/2016"}, {"body": "people constantly trying use jquery one frame remotecontrol document another frame despite problems raises wish would stop never convenient place document limits crossframe jquery usage ones imposed browsers ones created jquery implementation given many browserspecific crossoriginspecific matter seems like best thing continue say use risk", "d": "6/2016"}, {"body": "yeah right prove adding fiddle", "d": "9/2015"}, {"body": "result current dom methods like lacking true rooted selection method sizzle workaround temporarily apply root used selector new findfindall methods fix nobody seems implemented", "d": "9/2015"}, {"body": "dmethvin question applies case presented sounds like bug", "d": "9/2015"}, {"body": "think bug ff dev tools note reopening tools makes go away phantom thing really element", "d": "9/2015"}, {"body": "dmethvin ha indeed recreate jsbincom escape iframe madness open firefox see dev tools returns returns highlight div could report mozilla post link close issue since bug", "d": "9/2015"}, {"body": "go", "d": "9/2015"}, {"body": "mzgol sure problem fired event", "d": "9/2015"}, {"body": "element changed add remove", "d": "9/2015"}, {"body": "dmethvin understood sizzle conversation even removed firefox think also problem anyway sizzle nt simple thing like something else modifying explicitly", "d": "9/2015"}, {"body": "root element already sometimes used otherwise one temporarily added sizzle nt simple thing like domelementsizzle null something else modifying id explicitly modifying property rather attribute prevent firing gone sometimes mutating dom nt present always probably nt good let timmywil weigh whether using property would help opened sizzle ticket", "d": "9/2015"}, {"body": "modifying property rather attribute prevent mutationobserver firing yeah sure mutation nt detect change input element currently way detect change property sadly", "d": "9/2015"}, {"body": "sizzle nt simple thing like domelementsizzle null something else modifying id explicitly need work attribute ca nt select arbitrary properties dmethvin modifying property rather attribute prevent mutationobserver firing property every property change reflected property result mutationobserver firing unless nt understand propose", "d": "9/2015"}, {"body": "property every property change reflected property result mutationobserver firing unless nt understand propose proposed something fired mutationobserver mutationobserver dom detect attribute change dom property js think able future", "d": "9/2015"}, {"body": "dmethvin said set use would property", "d": "9/2015"}, {"body": "yep nt know fact sorry nt understand qsa needs know instead something like edit ahh get trick found right qsa nt allow strangely", "d": "9/2015"}, {"body": "matches elements ancestor even also ancestor following example matches desired undesired remedy prefix selectors ensure descendance context element eg context nt already id add one long enough execute selection note also cases clean point attribute ever exist value", "d": "9/2015"}, {"body": "qsa logic explained long time ago since support forum", "d": "9/2015"}, {"body": "sad john pointed drawbacks seven years ago dom api implementations still nt findfindall yet despite years jquery user code proving useful youmightnotneedjquery", "d": "9/2015"}, {"body": "thanks lot nt know huge fact qsa oo clear sure remove know jquery quiet possible hours ago found jquery make event fired reading dom sound clearly like bug bug feature", "d": "9/2015"}, {"body": "sounds like pretty drastic backwardsincompatible change unlikely land even new major release also seems easy enough work around using custom implementation dependency work around", "d": "9/2015"}, {"body": "dependency use solution process data object passing javascript function filterobjforjqueryparam data var obj data instanceof array ajax url type post data filterobjforjqueryparam foo true bar false flag controls output behavior passed described problem controlled similar way change still impossible continue use solution", "d": "9/2015"}, {"body": "think docs say well note universally agreedupon specification param strings possible encode complex data structures using method manner works ideally across languages supporting input use json format alternative encoding complex data instead", "d": "9/2015"}, {"body": "docs data cover works fetches attributes first time ask uses internal data want setget attributes use code depending using api incorrectly report", "d": "9/2015"}, {"body": "declare script browser waits document ready loads andor runs script point domcontentloaded event already fired jquery uses fallback event case pretty sure describing close dup", "d": "9/2015"}, {"body": "yes think checking interactive state also fix bug thanks", "d": "9/2015"}, {"body": "btw safari ua suggests safari fact safari disguise", "d": "9/2015"}, {"body": "verified safari instance browserstack provided faulty includes newer webkit version might wait fix happen accepting broken support test result redisable safari testing", "d": "10/2015"}, {"body": "decided drop safari testing problem going away still test ios", "d": "10/2015"}, {"body": "removing milestone since really fixed anything", "d": "10/2015"}, {"body": "likely invoking string supported version duplicate space causing change behavior would mean serious bug firefox parser syntax error get exactly error unminified version test case please share close see loading jquery nt cause errors firefox", "d": "9/2015"}, {"body": "approach like suggest tried abandoned fact crossbrowser inconsistencies see current model essentially defines position page seems sidestep issues performance degradations implementations free filter selected elements another benefit perspective broadest meaningful definition use case one reliance custom selectors deeply buried", "d": "9/2015"}, {"body": "much spending time dom seems case really comes anchor tags already resolution one might consider length gt least check clientrectlist widthheight hidden point academic cases tested actual behavior suggestion overhead consider request withdrawn thank hard work", "d": "9/2015"}, {"body": "confused issue", "d": "9/2015"}, {"body": "jquery already global methods ajaxstart ajaxstop ajaxcomplete ajaxerror ajaxsuccess ajaxsend suggest add one called ajaxbeforecallback global methods become ajaxstart ajaxstop ajaxcomplete ajaxerror ajaxbeforecallback ajaxsuccess ajaxsend set ajaxbeforecallback function jquery received response server call ajaxbeforecallback function exists call callback function input jquery ajax function jquerypost url data callback ajaxbeforecallback function specify global function check something login status code callback function need add checking code callback function every jquery ajax call", "d": "9/2015"}, {"body": "believe use case already handled function makes easy evaluate andor modify every ajax request sent", "d": "9/2015"}, {"body": "meaning sent mean sent received response server example handle response code", "d": "9/2015"}, {"body": "already object set globally like", "d": "9/2015"}, {"body": "put handling logic put logic every ajax callback function costs lot time copyandpaste work", "d": "9/2015"}, {"body": "mentioned set options globally drawback calls may expecting global behavior apply may override global behavior complete control pageapp understand code run want make kinds changes folks forums stackoverflow probably help implementation", "d": "9/2015"}, {"body": "ok name ajaxbeforecallback confused want entry point handling responses ajax requests use however nt usually recommend applies ajax requests cause unexpected behavior", "d": "9/2015"}, {"body": "blitz dave", "d": "9/2015"}, {"body": "smilecat", "d": "9/2015"}, {"body": "ok let put code add lines jquerydone method deal problem ajax send back specified string redirect user login page set ajaxbeforecallback method page onload method suggestion handle redirection based logic server side ajax calls whole website code callback everything done function done status nativestatustext responses headers var issuccess success error response modified statustext nativestatustext get response data responses response ajaxhandleresponses jqxhr responses convert matter way responsexxx fields always set response ajaxconvert response jqxhr issuccess customized code start call customerized function received respones var iscontinue true fireglobals iscontinue globaleventcontexttrigger ajaxbeforecallback jqxhr issuccess success error typeof iscontinue undefined iscontinue true customized code end iscontinue successerror issuccess deferredresolvewith callbackcontext success statustext jqxhr else deferredrejectwith callbackcontext jqxhr statustext error", "d": "9/2015"}, {"body": "bug tracker nt good place ask help forum stackoverflow", "d": "9/2015"}, {"body": "asking help want make request see whether suggestion accepted part jquery library wrong place place request contribution put request", "d": "9/2015"}, {"body": "vitoou request needs fleshed submitting feature requestbug fix jquery core echo dmethvin recommendation ask forums stackoverflow perfectly fitting ask suggestions handle something", "d": "9/2015"}, {"body": "see sorry", "d": "9/2015"}, {"body": "nt need done imo nt done inside create memoizing function call using definitely bad idea unless written understand every ajax call made new semantics", "d": "9/2015"}, {"body": "unless written understand every ajax call made new semantics dmethvin yep exactly case hand anyways ended although wish jquery ajax could provide better async way handle situations cheers", "d": "9/2015"}, {"body": "seems like probably dup", "d": "9/2015"}, {"body": "issue seems based edge performance regarding regular expression user ticket ms edge team states", "d": "9/2015"}, {"body": "tried making changes regex jquery unfortunately change performance demo test website", "d": "9/2015"}, {"body": "see provide fix", "d": "9/2015"}, {"body": "reference jsfiddle ie seems stall forloop append function called even exiting loop execute html function looked append culprit behind performance deficit seemed lie either dommanip function native appendchild javascript function fixing dommanip function seems unlikely might affect parts code also use fixing appendchild impossible perhaps rest would like chip workaround", "d": "10/2015"}, {"body": "seeing similar performance issue regarding appendchild adding lot ok slow takes minutes ie edge pathetically slow case compared chrome firefox", "d": "10/2015"}, {"body": "something jquery performance issue native nothing suggest building html first one call", "d": "10/2015"}, {"body": "native appendchild chiming report left possibility open appendchild ieedge appendchild slow need hacks work around kind deficiencies tue oct pm timmy willison notifications githubcom wrote something jquery performance issue native appendchild nothing suggest building html first one call innerhtml reply email directly view github", "d": "10/2015"}, {"body": "marcelammerlaan perf problem already reported ie dev team", "d": "10/2015"}, {"body": "closing issue nt seem anything jquery please report problem edge team jdalton", "d": "10/2015"}, {"body": "thanks ping yep aware performance issue patrickkettner", "d": "10/2015"}, {"body": "feedback left uservoice seem connect ms connect", "d": "10/2015"}, {"body": "fixed", "d": "9/2015"}, {"body": "please nt create new issue older one got closed see comments think something worth reopening reopen reopened one shortly submitted issue", "d": "9/2015"}, {"body": "thanks apologies users jquery familiar reporting bugs", "d": "9/2015"}, {"body": "duplicate", "d": "9/2015"}, {"body": "nt seem duplicate url gets damaged actual data content", "d": "9/2015"}, {"body": "hmm ok reopen though likely cause analogous could provide test case jsfiddle jsbin", "d": "9/2015"}, {"body": "pass string data argument need encode body contenttype using encodeuricomponent case seem wan na send json need specify contenttype actually json setting option fact jquery modified body incidental troubles backends nt specify proper contenttype special characters body regard encoding backends attempt decode body user code access", "d": "9/2015"}, {"body": "jaubourg agreed thanks explanation", "d": "9/2015"}, {"body": "jaubourg thanks explanationwe resolved issue way", "d": "9/2015"}, {"body": "dupe please always test newest development copy jquery make sure bug still exists", "d": "9/2015"}, {"body": "caused workaround jquery side use phase would cause lot issues common events nt think lot", "d": "9/2015"}, {"body": "thanks mzgol since bug firefox problem suppose close issue", "d": "9/2015"}, {"body": "thanks brunoscopelliti", "d": "9/2015"}, {"body": "cc gnarf", "d": "9/2015"}, {"body": "animation completes width height animation removes overflow hidden property curious people think right move keep overflow hidden stop case note means next toggle reset overflow back original value overflow hidden get stuck also thanks great test case chance turn jsbin jsfiddle jquery git build", "d": "9/2015"}, {"body": "width height animation width height animation phone autocorrect", "d": "9/2015"}, {"body": "also quick userland workaround css overflow hidden calling slidetoggle", "d": "9/2015"}, {"body": "curious people think right move keep overflow hidden stop case seems nt one right answer userland cases things bit clear since forces completion final steps completed perhaps makes sense leave asis anyone disagrees please chime better solution", "d": "11/2015"}, {"body": "think best solution keep inanimation overflow values way nt lock may possible might depend revisit showhide actually think possible right least showhide adding left choice restoring preanimation overflow values essentially undoing animation locking overflow values though latter probably better", "d": "11/2015"}, {"body": "agree gibson nov pm richard gibson notifications githubcom wrote think best solution keep inanimation overflow values way nt lock may possible might depend revisit showhide actually think possible right least showhide adding datashow left choice restoring preanimation overflow values essentially undoing animation locking overflow values though latter probably better reply email directly view github", "d": "11/2015"}, {"body": "yeah noticed even updating browsers seen chrome locally wanted sure machine thanks report anyway", "d": "9/2015"}, {"body": "actually seems chrome less precise older versions need investigate nt want decrease test expectation without making sure output acceptable", "d": "9/2015"}, {"body": "mzgol going take one jqsummit project", "d": "10/2015"}, {"body": "well means content whereas transport got ta", "d": "9/2015"}, {"body": "hi markelog yes means content firfox chrome excute complete tested edge jquery give behavior detect request finished trigger error event status jquery bind onerror event script tag case url response correct data need something jsonp request finished", "d": "9/2015"}, {"body": "yeah callbacks fired checked ie ca nt repro though", "d": "9/2015"}, {"body": "markelog test ie thanks", "d": "9/2015"}, {"body": "previously tested windows windows browserstack version ca nt repro reopening confirmation", "d": "9/2015"}, {"body": "mzgol timmywil could confirm", "d": "10/2015"}, {"body": "works windows", "d": "10/2015"}, {"body": "test case", "d": "10/2015"}, {"body": "okay gon na close honggook find consistent way reproducing please ping us", "d": "10/2015"}, {"body": "message printed console run test case", "d": "10/2015"}, {"body": "animation animation completed complete callback called", "d": "9/2015"}, {"body": "docs say multiple elements animated callback executed per matched element animation whole inside callback element completed animation would value elements animated need completion entire animation look", "d": "9/2015"}, {"body": "also tried function hideandshow h hanimate opacity duration easing linear always function haddclass dhide sremoveclass dhide animate opacity linear nt work either tried complete done always according documentation nt always property always run always means nt", "d": "9/2015"}, {"body": "question stackoverflow forum territory point please ask help one places", "d": "9/2015"}, {"body": "ok thanks anyway still think going give option always option whatever always always happen regardless happens prior bug imho thanks", "d": "9/2015"}, {"body": "always called element collection elements collection use mentioned", "d": "9/2015"}, {"body": "agree pretty sloppy check point concerned think happen make check strict best solution case explicit let us use infamous misnamed intelligent guess algorithm case smart whether change intelligent guess algorithm discussion need", "d": "9/2015"}, {"body": "added needs review label discuss meeting sounds like bug imo fix", "d": "10/2015"}, {"body": "cc jaubourg", "d": "10/2015"}, {"body": "top hat say replacing trick", "d": "10/2015"}, {"body": "aam types well", "d": "10/2015"}, {"body": "aam types well would nt catch stuff like anyway need make sure nt catch xml part word ensures datatype detection regexps follow pattern", "d": "10/2015"}, {"body": "difference master compat regarding data implementation always pain butt far cherry picking concerned would good could eliminate diffs one way another use still pretty common think firefox chrome grope data make breakpoints fall user code may make hard remove", "d": "9/2015"}, {"body": "dmethvin thanks taking time explain history", "d": "9/2015"}, {"body": "external tools rely interfaces need keep foreseeable future try use code public websites use somewhere nt depend breaking even patch releases give guarantees", "d": "9/2015"}, {"body": "removing deprecating", "d": "1/2017"}, {"body": "farseeing nothing changed respect external tooling relying interfaces hand plan big event refactor among things make possible support passive event listeners possible method change process maybe go away knows", "d": "1/2017"}, {"body": "true always hard manipulate bare text nodes jquery nt ever meant case control markup wrap something would easier select nt see us adding textnode manipulation tricky problem text nodes nt methods elements", "d": "9/2015"}, {"body": "ok adding methodselector prevnext node sibling addition element sibling", "d": "9/2015"}, {"body": "use perhaps one element nt think worth api surface", "d": "9/2015"}, {"body": "considering situation one author control html content js code always true example one use jquery greasemonkeycompatible scripts", "d": "9/2015"}, {"body": "nt lot info report going assume duplicate likely passing supported jquery", "d": "9/2015"}, {"body": "per meeting decided try would nt annoying linting changed files", "d": "9/2015"}, {"body": "hi wondering could help still open issue", "d": "12/2015"}, {"body": "sure thoughts", "d": "12/2015"}, {"body": "hi markelog honest idea know know git jquery js pretty well thought could lend brain try help solving issue start thinking installing githookjs take else recommend", "d": "12/2015"}, {"body": "yeah good one plus worked projects seems husky better architecture popular also note would better run linters changed files would change readme example nt try anything purpose make less annoying biggest concern", "d": "12/2015"}, {"body": "hi markelog noticed jquery already jshint configured guessing could use exact config think yeah like husky try", "d": "12/2015"}, {"body": "hey commit makes sure linters run new files commit uses husky gruntnewer smoke tests run gruntnewer seem handle task aliases please tell changes needed new stuff glad chip", "d": "1/2016"}, {"body": "jhanaman thanks help", "d": "1/2016"}, {"body": "jhanaman would mind sending us pr", "d": "1/2016"}, {"body": "please provide reproducible test case without code look nothing", "d": "9/2015"}, {"body": "closing ticket inactivity usually kind problems best triaged forum clear really bug", "d": "9/2015"}, {"body": "browsers support addeventlistener example internet explorer versions less nt support event bubbling try instead", "d": "9/2015"}, {"body": "ie version", "d": "9/2015"}, {"body": "report vague need reproducible test case able debug problem nt provide code ca nt know wrong said error seems basic nt seem like could come jquery going close report please look help jquery forums stack overflow something turns jquery bug test case reopen", "d": "9/2015"}, {"body": "vaguely remember qunit restore alias problems could remind us jzaefferer", "d": "9/2015"}, {"body": "little late narwhal nt matter closure compiler might okay recommend testing", "d": "9/2015"}, {"body": "typo unit tests would definitely catch way check truthiness time assign variable saves little space pattern like someone wrote would nt work jshint would assignment check wrapping double parens make error go away treat developer hint assignment intended", "d": "9/2015"}, {"body": "please look programming help jquery forums stack overflow bug tracker support forum", "d": "9/2015"}, {"body": "opinion bug pointed context callback function received expected", "d": "9/2015"}, {"body": "bug deep cloning object one also code contains couple syntax errors nt run please look help forums stack overflow", "d": "9/2015"}, {"body": "really much go application working properly error logs come thing give list mentioned stack trace", "d": "9/2015"}, {"body": "pretty big angular app works fine edge definitely completely broken people would notice anyway nt use angular form validation though posted looks like excerpt stack trace actual error message really hard say anything scarce info could create test case", "d": "9/2015"}, {"body": "sorry forgot include error message rootscope infdig digest iterations reached aborting might even jquery problem wondering maybe someone somehow could tell going error tracked opbeat js experimental gives limited information worst thing ca nt reproduce though try windows phone emulator using edge sorry add info get close sure jquery case", "d": "9/2015"}, {"body": "closed due inactivity", "d": "9/2015"}, {"body": "believe typo anyway works correctly key reference extends", "d": "9/2015"}, {"body": "easiest way copy object case", "d": "9/2015"}, {"body": "thanks report confirmed slow edge build would like submit pr take credit perf fix", "d": "9/2015"}, {"body": "sure done correctly also go branches well", "d": "9/2015"}, {"body": "mentioned official site jquery", "d": "8/2015"}, {"body": "read page completely missed part sorry however nt explain case nt really understand would want null rather array since would expect array cases items selected", "d": "8/2015"}, {"body": "sure exatly guess told use like nothing short circuit evaluation used set default values means null case fiddle", "d": "8/2015"}, {"body": "documented way since jquery likely breaking lot code changing behavior nt recall done way neelbhatt says easy get result want", "d": "8/2015"}, {"body": "ugh actually one test empty array another recent test null even though returning longstanding might want change consistency", "d": "8/2015"}, {"body": "agree inconsistent keep like reopen others voice opinions", "d": "8/2015"}, {"body": "careful changing case nt change successfulness control agree pretty inconsistent people may depending current values behavior see", "d": "8/2015"}, {"body": "set val called inside map callback returning effect returning ie contribution context element", "d": "8/2015"}, {"body": "done putting empty string instead null even though people currently using get affected oring empty string see demo", "d": "9/2015"}, {"body": "block code nt even need change emptyarray yield identical results returning empty string would definitely incorrect", "d": "9/2015"}, {"body": "accepted today meeting", "d": "9/2015"}, {"body": "forgot decided want change case return case return empty array", "d": "11/2015"}, {"body": "return empty array idea ask collection ie select multiple get collection although might empty", "d": "11/2015"}, {"body": "right thanks", "d": "11/2015"}, {"body": "process migrating jquery one projects ran today could nt find breaking change upgrade guide found documentation exact emphasis mine first element collection selectmultiple ie select element multiple attribute set returns array containing value selected option null options selected miss something upgrade guide missing", "d": "6/2016"}, {"body": "mentioned seems working way docs bug got missed api update", "d": "6/2016"}, {"body": "thanks seems missed looking find upgrade guide thank clearing since concerns could mentioned upgrade guide well way could help get doc update going", "d": "6/2016"}, {"body": "sure file prs one upgrade guide would greatly appreciated", "d": "6/2016"}, {"body": "okay resolved nt know delete solution", "d": "8/2015"}, {"body": "ca nt delete issue close please future impossible api breaks pass parameter via variable pure javascript jquery nothing", "d": "8/2015"}, {"body": "nt use browser sniffing unrelated inferences use featurebehavior detection example however note offending reflow happens waits dom ready even much may able switch jquery depending browser support", "d": "8/2015"}, {"body": "mistake already removed expect see jquery compat", "d": "8/2015"}, {"body": "unfortunately use jquery yet one hand understand suggestion pure however code specifically written ie unlikely another noniebased browser ever problem based assumption code also removed jquery compat therefore really understand code ignored nonie browsers runtime end removing code certain browser supported anymore checking code certain browser different", "d": "8/2015"}, {"body": "joelrich based assumption code also removed jquery compat therefore really understand code ignored nonie browsers runtime said test removed present jquery compat possible dropped support jquery compat jquery compat continuation jquery jquery continuation jquery currently maintained code contains code sure asking remark general user agent strings notoriously unreliable changed browsers changing particular sites present compatibility issues started relying introducing code may break various circumstances sometimes browsers user agents emulate browsers ones website compatibility checking user agents generally futureproof notably less true ie even microsoft trying get browsers mixed old ies still danger worth case code mentioned gone nothing regarding bug report", "d": "8/2015"}, {"body": "mzgol idea would change releases planned suggestion check ie legacy api like attachevent user agent sniffing alternatively could also use ie conditional comments described", "d": "8/2015"}, {"body": "joelrich releases planned except something critically important discovered happened welcome test jquery compat nt need support nt put production yet alpha suggestion check ie legacy api like attachevent user agent sniffing opera well checking unrelated api dangerous option case", "d": "8/2015"}, {"body": "nt think additional releases planned lines limited resources maintain support test multiple branches problem unrelated legacy apis feature inferences often go bad given age browsers may history shown risky conditional comments often eaten source code processors even mobile carriers use onthefly compression remove comments makes maintenance headache library code potentially processed published like jquery", "d": "8/2015"}, {"body": "ok thanks explanation consider jquery compat ready", "d": "8/2015"}, {"body": "backwards compatibility prevents us making change see also probably duplicate", "d": "8/2015"}, {"body": "confirmed thanks report", "d": "8/2015"}, {"body": "new way help fix issue help understand issue", "d": "8/2015"}, {"body": "jquery uses implement says bubble makes impossible use delegated events however test case mzgol seem show chrome bubbling even though nt supposed jquery also used originally standard ie implemented sure whether supported browsers whether implement properly whatever means depend follow spec bubble event although test breaks chrome firefox works fine nothing spec says browsers suppress event disabled element sure spec says form control disabled must prevent click events queued user interaction task source dispatched element bit pinch chrome firefox fix implementations suppress get spec say must suppressed could change use native get spec changed say event bubbles commitment change", "d": "8/2015"}, {"body": "however test case mzgol seem show chrome bubbling mouseenter even though nt supposed nt bubble happens since hover div time hover button native fired independently since button disabled nt fire button still div check hovering divonly part moving button native fires sure whether supported browsers mouseenter whether implement properly whatever means chrome firefox edge amp ie support safari sure support anyway safari critical bug ca nt use implementation fixed safari need delegated events work jquery mouseenter amp mouseleave though sure switch native implementation missing something ie although test breaks chrome firefox works fine works edge well nt copy chrome bit pinch chrome firefox fix implementations suppress get spec say must suppressed good point could change use native mouseenter get spec changed say event bubbles bubbles also please see wrote event delegation", "d": "8/2015"}, {"body": "right mzgol misinterpreted event bubbling definitely showing entering div think really need browsers allow disabled elements want work right use instead since bubble", "d": "8/2015"}, {"body": "use instead since bubble rely native ie browsers nt pass test checked use regular capture phase would work well real problem hover disabled button without intermediate step form hovering div ie button touches border div native fires native nt either bubble capture phase way us fix would rely capture phase available similarly treat might doable still like know first behavior standardsintended though even amp chrome amp firefox fixes behavior still patch safari also workaround attach one handler capture phase amp simulate regular one might performance implications need measure make sure regressing much", "d": "8/2015"}, {"body": "think wrong mouse events click nt fire disabled elements find whether changed nt think way us work around assume goal fix find whether mouse disabled element nt lot options fires parent button ca nt tell hovering button", "d": "8/2015"}, {"body": "today meeting mzgol pointed really two issues specific issue reported could addressed without dealing root cause disabled elements firing events pretty specific edge case though radical change example switching directly possible likely encounter bugs like one mentioned safari going ping folks find reason seeing look changing code behavior nt seem required spec prevents useful things like info tooltips disabled buttons", "d": "8/2015"}, {"body": "followup everyone ie seem wrong wrong forever might able fix edge cases ca nt fix general issue disabled elements firing mouse events convinced fixing edge cases worth risk encountering additional bugs mouseenter including known safari bugs since never used", "d": "9/2015"}, {"body": "nt think worth workaround jquery happily review patch predict attempt fix cause issues outweigh one fortunately mozilla agreed fix end push fix vendors", "d": "9/2015"}, {"body": "hm guess one might argue function could useful plugin writers seems stop exposing instead documenting", "d": "8/2015"}, {"body": "arschmitz scottgonzalez use mobileui", "d": "8/2015"}, {"body": "another option still expose use internal var instead save bytes support overriding today also copied data overriding would buggy anyway", "d": "8/2015"}, {"body": "timmywil used either ui mobile", "d": "8/2015"}, {"body": "timmywil used either ui mobile seems good stop exposing jbedard would like send us pr", "d": "8/2015"}, {"body": "another option still expose use internal var instead save bytes support overriding exposing mean putting object accessible compiled version use amd modules get lot internal stuff already nt guarantee file hierarchy nt change might even patch release", "d": "8/2015"}, {"body": "standard governing way javascript objects encoded query string behavior consistent many versions incentive us change possibly break existing code reason avoid json encoding well defined servers libraries parse", "d": "8/2015"}, {"body": "yes standard nt even consistent possibility make consistent break exising apps would introduce new flag like existing flag defaulting old inconsistent behaviour understand considered much trouble questionable benefit thought report stroke odd must overlooked big yellow boxes docs", "d": "8/2015"}, {"body": "purpose friends mimic way browsers serialize form inputs uncharted territory pass complex javascript objects since json already solves problem wellsupported nt lot reason come second way already yellowbox note suggesting people use json cases looks like trying serialize javascript data structures string would like use json", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "answer helped change code user locationhref believe jquery inconsistency trying tell", "d": "8/2015"}, {"body": "marceloodiniz literally first link dmethvin google location element dom thus jquery select", "d": "8/2015"}, {"body": "try support windows store apps using apis restricted security reasons one example setting name amp type attributes using windowsspecific nonstandard apis nogo restrictions introduced reason nt hack around could share example code breaks current jquery please test development version least latest alpha well", "d": "8/2015"}, {"body": "agree mzgol api explicitly word trying tell something nt circumvent restrictions likely open security holes use jquery directly follow restrictions listed reference jquery work properly case framework explicitly depends things like html comments semantic meaning injected document sure really good workaround could add sort trap door inside jquery allows user replace seems irresponsible point used reliable way tell good calls evil ones present nt test windows store app scenario talking microsoft integrate ci environment want jquery work course jquery functioning also knockout whether knockout used windows store apps something testing ci least directly knockout team would need commit ensuring worked", "d": "8/2015"}, {"body": "going close seems working intended", "d": "9/2015"}, {"body": "thought going crazy currently outputs console", "d": "8/2015"}, {"body": "example incorrect accepts function parameter passing promise initial async promise resolved sync promises created see printed async operation happens also jquery deferred follow promisesa spec mandates handlers always invoked asynchronously working example", "d": "8/2015"}, {"body": "improved example must still argue first function firing time initial function seems second synchronous function line functions correctly waits previous async function complete understand function invoked asynchronously invoked previous function queue completed notice shows straight away instead waiting first async function complete edit ok passing anything moving right onto solves problem confusing since returning resolved promise redundant something definitely wrong terms usability", "d": "8/2015"}, {"body": "new example still incorrect value passed example promise returned function passing function function considered resolved value results first executed without delay", "d": "8/2015"}, {"body": "scottgonzalez mzgol one instance return promise next return function obviously work like nt consistency majority use cases example edge case means example remove jquery equation see much cleaner original spec code want simple crossbrowser solution possible anything change example simplify jquery", "d": "8/2015"}, {"body": "example remove jquery equation direct equivalent jquery version allow take regular value amp wrap promise resolves thenable changed promise resolving value thenable therefore function nothing special passed functions promise regular value wrap promise resolve function course know promise get kind promise use code nt need conversion step enough attach directly promise hence nt need use example get another kind promise eg jquery promise code using promises promise code using jquery ones need convert first using hand accepts success andor error callback parameter gets invoked promise resolves equivalent way surprising accept different kind input afraid entering stack overflow area though please search help definitely bug jquery reported concepts struggle required comprehend able write promisebased code using jquery also using standard promises one resources might want read pretty comprehensive nt know js chapter promises", "d": "8/2015"}, {"body": "finish thing see currently wrong afaik nt convert another thenable jquery promise covered words print seconds immediately", "d": "8/2015"}, {"body": "mzgol great answers thank keep eye issue addressing example cover exact problem idea would mean seemed brokenmisleading hence confusion terminology hopefully solve thanks", "d": "8/2015"}, {"body": "krazyjakee ok apparently covered issue discovered bug thanks issue thanks pointers", "d": "8/2015"}, {"body": "mzgol sorry could nt direct descriptions see starting make use new features javascript thanks", "d": "8/2015"}, {"body": "valid inside browser infers tag start tag end correct behavior independent jquery", "d": "8/2015"}, {"body": "made popup layer close jquery ajax success problembut put close popup layer method jquery ajax method outside code good", "d": "8/2015"}, {"body": "please search programming help jquery forums stack overflow bug report need concrete information code sample reproduces problem ideally test case jsfiddle jsbin", "d": "8/2015"}, {"body": "thank much learn jquery time short recommend useful jquery forums appreciate much", "d": "8/2015"}, {"body": "nt think good idea lead travis succeeding fresh clone fail install newer dependencies got broken travis old working ones guess us also notice unless habit removing locally amp reinstalling deps regularly oth travis really fast wo nt speed build significantly", "d": "8/2015"}, {"body": "guess forgetting two cis", "d": "8/2015"}, {"body": "guess forgetting two cis good point considering fast travis jquery repository promisesa tests added whole build completed seconds reasons introducing cache", "d": "8/2015"}, {"body": "nt understand question upside downside", "d": "8/2015"}, {"body": "downside eg might miss broken subdependency nt commits recently someone submits pr merged notice jenkins crashes also one day might switch travis completely wo nt notice problem visible upsides saving seconds build nt real upside", "d": "8/2015"}, {"body": "merged notice jenkins crashes never happened chances never happen third party dep dep influence original dep tremendously order us fail even sure happen anywhere ever even could nt anything case wait dep dep would release another version fail would noise could nt even downgrade since original dep could use bad dep tilde caret since first version conjunction question also one day might switch travis completely wo nt notice problem seems try solve issue nt exist situation would indeed dangerous travis caching feature considered dangerous since would issue would issue node community every oss community", "d": "8/2015"}, {"body": "merged notice jenkins crashes never happened chances never happen third party dep dep influence original dep tremendously order us fail even sure happen anywhere ever happen project least twice projects usually depend lot subdependencies wrapped grunt plugin plugin usually thin wrapper around library library matters one failures eslint bug one rules nt catch one edge case fixing bug broke build specific linting bug code even could nt anything case wait dep dep would release another version fail would noise could nt even downgrade since original dep could use bad dep tilde caret since first version pin subdependency version directly fits semver range used least works way npm apply temporary shrinkwrap sometimes downgrade dependency older version temporarily temporarily disable broken functionality build broken sometimes plugin releases new version pinned older subdependency upgrade seen quite often lot things one worst know situation would indeed dangerous travis caching feature considered dangerous since would issue would issue node community every oss community generalizing way much ruby modules usually pin subdependencies file npm angularjs uses shrinkwrap travis caching builds deterministic lot deps though btw nt reply visible gains gains even small faults discredit solution", "d": "8/2015"}, {"body": "happen project bug already code proposed changes like pr already landed said never happens case would notice jenkins pin subdependency honestly options sounds awful wait trush commit history lot things one worst know talking bug dep issue would dissappear would prefer generalizing way much maybe case afraid projects would excluded danger yes loot would still vulnerable btw nt reply visible gains thought faster future might try use babel example least try use exportsimports constructions babel takes lot deps story switch full server js express karma phantom etc story use wd integration tests story would real node tests future bright lot dev deps", "d": "8/2015"}, {"body": "happen project bug already code proposed changes like pr already landed said never happens nt matter bug build worked one day broken later without changes please nt say never happens exactly described happen oo lot things one worst know talking bug dep issue would dissappear would prefer issues disappear one project described one example something never disappears fix code thought faster future might try use babel example least try use exportsimports constructions babel takes lot deps story switch full server js express karma phantom etc story use wd integration tests story would real node tests future bright lot dev deps always enable cache becomes real problem lot deps might even want use shrinkwrap hard project need future", "d": "8/2015"}, {"body": "nt matter bug build worked one day broken later without changes missing point never happens meaning dep dep never breaks significantly would break build broken case dependencies actually fixed might notice jscs preset updated quite lot past six months jquery builds never broke know use jscs dep patch versions jscs never show errors previous patch version meaning would never break code like eslint would explicitly ask putting caret front version number yes people say eslint would makes sense break code edge bug fixed maintainer responsibility fix bug show ppl since bug already code would happen us like jshint implicitly updated nt need show error contributor since might provoke contributor fix unrelated part code would commit would two unrelated things two commits one pr would different things contributor fixed pr would failed pr merge commit fix asap ask contributor rebase situations might discourage contributor submit fix continue work us pr submitted would actually better would notice failure jenkins", "d": "8/2015"}, {"body": "previous meeting decided wait would become issue could resurrect discussion", "d": "8/2015"}, {"body": "markelog never happened chances never happen fyi happened new jshint released master broken like thought grunt plugin wrapping library use cc rwaldron edit reported upstream edit jshint unpublished build green", "d": "9/2015"}, {"body": "edit jshint unpublished build green like said also would happen us like jshint implicitly updated nt need show error contributor since might provoke contributor fix unrelated part code would commit would two unrelated things two commits one pr would different things contributor fixed pr would failed pr merge commit fix asap ask contributor rebase", "d": "9/2015"}, {"body": "provide test case please", "d": "9/2015"}, {"body": "also try test jquery latest", "d": "9/2015"}, {"body": "please explain issue unable understand", "d": "9/2015"}, {"body": "well created fiddle working must something wonky w code closing issue", "d": "9/2015"}, {"body": "html new twtrwidget remote script executes asynchronously inline script executes synchronously given try always run synchronously backwards compatibility crossdomain scripts nt see options within jquery update inline script introduce grace period definition", "d": "8/2015"}, {"body": "even could run sync would bad idea anyway would perpetuate bad practice holding main thread really best way would use execute initialization suppose could define inline html script evaluation chain async deferreds make seqential problem would getting access end chain know ready many methods inject html also creates deferred dependency manipulation nt one today", "d": "8/2015"}, {"body": "see", "d": "8/2015"}, {"body": "seeing value possible get individual values", "d": "8/2015"}, {"body": "yeup right also windows expected behavior", "d": "8/2015"}, {"body": "shorthand properties little flaky general something jquery ca nt control setting via shorthand usually works fine getting shorthand properties iffy good example try get shorthand borders set uniquely different sides", "d": "8/2015"}, {"body": "see quite unfortunate still browser specific quirks even within jquery getting individually", "d": "8/2015"}, {"body": "looks like tf calculating may weight percent files highly versus contributions individual files example detail calculation new files created example result reorg done switched amd person files regardless whether wrote code also weighted way based age contributions look contributor graph see people mentioned made recent commits nt think project trouble result", "d": "8/2015"}, {"body": "alltime percentages properly right indicators limiting last year would probably give much accurate result", "d": "8/2015"}, {"body": "author files mostly moved lot code around see latest author via ignore wisdom went creation files amp evolution time", "d": "8/2015"}, {"body": "appreciate concept effort putting project suggestions made comments inclined go ahead close facilitate triage feel free continue discussion ticket closed", "d": "8/2015"}, {"body": "ajax always asynchronous option still exists", "d": "8/2015"}, {"body": "dcherman yes interface via already async callbacks thenable suppose could something created side effects synchronous manner without using callbacks believe explicitly opted use goal able write async converters able make run synchronously asynchronously necessary", "d": "8/2015"}, {"body": "quite true plumbing calls inside implicitly asyncsync point example user could callback promise could still use converter sure whether support async filters converters may break assumptions certainly would break assumptions sync ajax exceptions maybe way around", "d": "8/2015"}, {"body": "guess would nt use fetch right usecase usecases", "d": "8/2015"}, {"body": "stands still relatively immature still much api comparison suspect used parallel time achieving sort feature parity plus latent cost migration efforts suspect jquery important part migrating people adding support async converters creates bit technical bridge use case app dependence upon ember data turn delegates make requests server responses push parse times threshold want handle parsing asynchronously using goals nt want replace battletested handrolled version want intermediate step gt transition want enable every application using ember data immediately benefit technique improving entire ecosystem enable support future asynchronous apis allow converters become async well see simply early encounter numerous async dom network apis come", "d": "8/2015"}, {"body": "cc jaubourg", "d": "8/2015"}, {"body": "know alone need last month got question jquery india someone trying parse json response sob", "d": "8/2015"}, {"body": "maybe missing point necessary address ajax converter rather jqxhr", "d": "8/2015"}, {"body": "thought well one unfortunate problem coupled setting header suggesting header always couple workarounds set header manually nt depend jquery depend implementation details ajax set handler prefilter would nt work since get run headers set", "d": "8/2015"}, {"body": "override although admittedly implementation details land way slice magical tries", "d": "8/2015"}, {"body": "depend implementation details ajax set optionsdatatypes text beforesend handler prefilter would nt work since get run headers set although admittedly implementation details land way slice property part public api extendable part jquery pretty much nothing ca nt sure option somewhere make coffee look hard enough", "d": "8/2015"}, {"body": "like idea principle yes converters actually place handle support contenttype detection said prpoc solution needs support chaining converters code would much simpler request async could used great effect internally still handle sync requests", "d": "8/2015"}, {"body": "markelog jsfiddle messes header like described previous comment provided another workable alternative though blow away json converter maintain correct header still manual parsing curiosity wonder pros setting responsetype xhr using property browsers support tested still seemed freeze ui parsing nt seem beneficial piping responsetext jsonparse", "d": "8/2015"}, {"body": "jsfiddle messes accept header like described previous comment nt say nt initialy thought meant user could defer parsing method know see point tested still seemed freeze ui parsing besides last time checked issues json incorrect parsing give meaningful output browser still handle sync requests sync requests deprecated spec spec encourages browsers warn user vendors hand already partly deprecated since discussion removing timmywil dmethvin", "d": "8/2015"}, {"body": "thank comments review seems like general mood thread async converters something wish enable past first bits conversation focusing implementation alternative approaches accomplishing goal opposed value enabling implying rough consensus value provides implemented part goal right thing believe enabling async converters next day two iterate solution address known gaps use browsersafe solutions add tests tests currently pass without working converter chaining holes coverage get polished state landing misread room mood let know", "d": "8/2015"}, {"body": "generally opposed see adding complexity already cumbersome system given druthers converters theirselves would fully separate transports et al bridging two demonstrated already possible want existing api notably using way works around automatic behavior said though could convinced particularly good pr", "d": "8/2015"}, {"body": "see latest update painted us corner unsure get", "d": "8/2015"}, {"body": "test function see code nothing implementation promise libraries detect thenables hence name thenables", "d": "8/2015"}, {"body": "jaubourg yes problem valid converter ducktyped thenable unable protect user case assume intent provide error messages much prefer defensive apis duck typing especially library code ca nt figure way accomplish using disallowed values implementation detail especially nonrecoverable manner result lot nasty surprises jquery enough places seems inevitable would bite somebody", "d": "8/2015"}, {"body": "think overthinking first jquery support changing non issue library break long reach conversion logic secondly every javascript library handles thenable like even rsvpjs promise library used inside emberjs today pretty much coding error create object method promisestandard compliant got enough slack regarding know said decide go make happy sure would shame based design considerations apply jquery sense would place whole library considered", "d": "8/2015"}, {"body": "jaubourg said every method assumed honor promisesa point inside outside jquery cause block", "d": "8/2015"}, {"body": "discussed meeting decided added additional complexity inside ajax implementation little gain since already done current api added need additional documentation docs already complex api inside jquery", "d": "9/2015"}, {"body": "game write documentation well ever becomes something want address future argue add lot magic point feel like entire api async cleaning logic tremendously go hack side implement thanks consideration", "d": "9/2015"}, {"body": "think really something ajax interface approach systematic way", "d": "9/2015"}, {"body": "think trying change behavior bound break andor complicate talked creating cleaner api based around api would need shimming also currently lacks important features like stop request", "d": "9/2015"}, {"body": "dmethvin wrote already done current api probably missing something would kind give code example done current api thanks", "d": "9/2015"}, {"body": "yes copying old tags final release jquerycompat", "d": "8/2015"}, {"body": "cool thank", "d": "8/2015"}, {"body": "timmywil note enough copy tags every one needs get name jquery packagejsonbowerjson changed jquerycompat afterwards every tag older consistent main jquery package needs checked published npm via npm publish pointing little involved copying tags", "d": "8/2015"}, {"body": "good point think still worth", "d": "8/2015"}, {"body": "longer necessary one jquery time released", "d": "10/2015"}, {"body": "timmywil please remember always remove milestone amp add label closing issue getting fixed otherwise mess changelog", "d": "11/2015"}, {"body": "fixed forgot add fixes reference", "d": "9/2015"}, {"body": "unable reproduce demo provide reduced test case eg without polymer git build preferably somewhere like js bin easy us tinker", "d": "8/2015"}, {"body": "haha sorry accidentally uploaded temp workaround timeout waits till event bubbled remove element demo js bin sorry nt prepare demo without polymer knowledge templates narrow set something like posted issue polymer repository got explanation maybe provides clues going also better workaround problem conversion", "d": "8/2015"}, {"body": "simple repro", "d": "8/2015"}, {"body": "looks like needed well ie listened dcherman", "d": "8/2015"}, {"body": "thanks report need concrete test case able procede report vague hard get anything", "d": "8/2015"}, {"body": "facing issue ios chrome latest version web application completely fine mobile browser still response receive ios chrome please help", "d": "8/2015"}, {"body": "closing due inactivity", "d": "9/2015"}, {"body": "duplicate thanks report discussed length people need source files need published going split separate packages much maintenance burden", "d": "8/2015"}, {"body": "btw test folder already published", "d": "8/2015"}, {"body": "mzgol nt talk sources directory nt see repo", "d": "8/2015"}, {"body": "version think remember something removed jquery wo nt contain check see looks like", "d": "8/2015"}, {"body": "mzgol default npm loads", "d": "8/2015"}, {"body": "okay waiting stable", "d": "8/2015"}, {"body": "yeah publishing mistake ca nt reverse fine see sth wrong jquery alphabeta packages please report fix time", "d": "8/2015"}, {"body": "jquery copies commonly used event properties event nt implemented browsers support still find browsers support event full support event please use either jquerymousewheel exposes event uses hood available nt need support older browsers like may try jquerywheel", "d": "8/2015"}, {"body": "see also", "d": "8/2015"}, {"body": "see empty values present url address request providing empty values get empty parameters nt want parameter request expected would remove property object literal even declare value paramslang option completely removed url address ca nt remove parameter messing property extending objects remove property object end javascript var params str string lang null defparams lang en delete paramslang lt delete defparamslang lt getparams jqueryextend defparams params object str string delete getparamslang jquerygetjson getparams", "d": "8/2015"}, {"body": "maybe makes sense include parameters value undefined string let explain code like javascript ajaxsetup data lang en key someaccesskey function callapi method options jquerygetjson method options used obvious solution add callapi condition approach causes lot problems unnecessary steps", "d": "8/2015"}, {"body": "since nt bug report close programming help found jquery forum stackoverflow", "d": "8/2015"}, {"body": "anthomaxcool need visual studio installed windows able install compiled dependencies one install iojs instead nodejs require visual studio jquerycore lot people seem problem compiled deps windows dep requires compiling since iojs going soon merge nodejs likely nodejs first release months starting think skip jsdomrelated tests nodejsiojs older always install latest one ie put installation work nodes using fail old nodejs current jsdom nt support nodejs anyway maybe nt support versions supported upstream leave open consideration next meeting", "d": "8/2015"}, {"body": "thanks fast reply mzgol visual studio installed ultimate visual studio", "d": "8/2015"}, {"body": "error posted seems nt python installed also looking readme seems might need visual studio instead sure true though unfortunately state things compiled packages work windows currently installing python wo nt help upgrade nodejs would easier install iojs use instead", "d": "8/2015"}, {"body": "alright thanks lot time help look foward iojs", "d": "8/2015"}, {"body": "pr", "d": "8/2015"}, {"body": "thank opening issue something implement jquery guarantee work across browsers source unexpected behaviors", "d": "8/2015"}, {"body": "probably want look mutationobserver", "d": "8/2015"}, {"body": "thank opening issue without reproducible test case nothing", "d": "8/2015"}, {"body": "understand correctly suggesting code changes ensure returned objectsarrays recursively contents standard prototype chains nothing less would oppose anyone willing pay code size performance penalties duckpunch hardened function hate make decision universally even clear changes would increase security practical terms since proper json parsing allows creation actual arrays arraylike objects mention fact function pretty much equal vulnerability property global object eg modify modify properties directly way find", "d": "7/2015"}, {"body": "yes thought modifying maybe right nt understand variables way trick via modifying native prototypes case said doomed anyway way find recent android nonquoted property name bug interested browsers actually less run test suite couple knew ie ok version nt sure android turns first version fails one failed tests checking exactly nt find reallife code", "d": "7/2015"}, {"body": "right", "d": "7/2015"}, {"body": "ok since fears overblown closing issue thanks", "d": "7/2015"}, {"body": "jquerysub sth like removed implementation still exists jquery migrate sure removed perhaps difficult reliably clone jquery isolation nt guaranteed anyway dmethvin would know time team", "d": "7/2015"}, {"body": "perhaps difficult reliably clone jquery isolation nt guaranteed anyway pretty much jquerysub halfway sat largely unused complicated sounds nt plan adding functionality future think answer stack overflow question sufficiently comprehensive tricks done probably ways around loading jquery twice sandboxed jquery absolutely necessary", "d": "7/2015"}, {"body": "pr", "d": "8/2015"}, {"body": "unfortunate great building gettersetter combo methods", "d": "4/2016"}, {"body": "sorry inconvenience willing consider exposing method documenting plugins nt like public methods nt documented", "d": "4/2016"}, {"body": "pr", "d": "8/2015"}, {"body": "thanks report unfortunately versions ie even ie fire amp events asynchronously easy way work around generically enough include workaround jquery good news fixed new microsoft edge browser ie stay forever please also see amp previous related bug reports btw way make field disabled natively via attribute work even ie nt blur field looks differently style via css needed", "d": "7/2015"}, {"body": "ok weird well know things general disable fields require disabled fields send via post attribute disabled fields ignored stuff make working thx anyway", "d": "7/2015"}, {"body": "yeah wish way work around side surely pain developers related things hard fix library", "d": "7/2015"}, {"body": "nevermind figured ajaxprefilter function options originaloptions jqxhr var originalsuccess optionssuccess", "d": "7/2015"}, {"body": "please mind language nothing prevents using plugin code around pretty long trivial task animate across many possible syntaxes see looking size jquerycolorjs file including core would needlessly penalize users nt need functionality", "d": "7/2015"}, {"body": "basic vital functionality including core would needlessly penalize users nt need functionality argument applies functionality could argue favour dismembering jquery thousands plugins minimal core almost nothing determines whether sensible functionality core vital large proportion users using jquery likely need balance course cost terms extra code needlesly additional hundreds bytes minimized code penalizes users nt need include additional plugin every superbasic functionality penalizes need lot note former almost negligible penalisation latter true pain ops sorry mind language trade definitely favour core unless really vast majority users going need animating colors pretty sure case", "d": "7/2015"}, {"body": "first issue long time remember asks inclusion jquerycolor core nt seems huge demand features implemented today would likely plugins instead parts core ship sailed plugins may depend core", "d": "7/2015"}, {"body": "completely agree current code several things would better done plugins easy see needs universal often case asking users combine files use package manager heavy burden complicated use multiple script tags", "d": "7/2015"}, {"body": "matter seeing one need universal obviously nt universal need add damn new plugin every basic little trivial feature oh sh wait look plugin every five minutes particular case animating colors able animate widthheightpositionopacity able animate color ridiculous always since beginning yes perfectly understand animating color much convoluted may argue animate plugin well least would consistent provided included colors animations whole plugin makes sense core makes sense though consider poor choice animations core except colors inconsistent ugly another approach consistent insane would plugin every single animatable css property set properties based criteria grouping kind approach going take obviously animations general approach well really sad", "d": "7/2015"}, {"body": "colors animated via css future js need jquerycolor sort nonissue future", "d": "11/2015"}, {"body": "create divergence amp test files propose create separate module basic tests thoughts like idea would rather see name like basic minimal tied given suite might apply eg jsdom phantomjs", "d": "7/2015"}, {"body": "would rather see name like basic minimal tied given client works good idea jsdom amp phantomjs btw might hard add", "d": "7/2015"}, {"body": "pr progress need feedback continue", "d": "7/2015"}, {"body": "fixed reduce support title first part basic tests finished", "d": "9/2015"}, {"body": "pr", "d": "9/2015"}, {"body": "pr", "d": "7/2015"}, {"body": "landed", "d": "9/2015"}, {"body": "problematic ie lt afaik rather backport", "d": "11/2015"}, {"body": "pr", "d": "7/2015"}, {"body": "landed via", "d": "9/2015"}, {"body": "like backport", "d": "11/2015"}, {"body": "mzgol agree", "d": "11/2015"}, {"body": "since released remove label", "d": "12/2015"}, {"body": "like stay wontfix supporting nonbrowser wnvironments requires effort ie lt code problematic nt want guarantee good nonbrowser better stay unsupported wo nt live much longer anyway", "d": "12/2015"}, {"body": "probably need go back block around getting whole response sorting", "d": "7/2015"}, {"body": "seems like subverting normal processing model confusing code far concerned still request look wondering defining converter arraybuffer datatype would appropriate way provide complete example", "d": "7/2015"}, {"body": "defined using install plain datatype jqueryajaxsetup accepts plain textplain responsefields plain response converters plain function arraybuffer arraybuffer return new arraybuffer handle cache special case global jqueryajaxprefilter plain function originalsettings jqxhr sxhrfields responsetype arraybuffer sdatatypes plain return plain however nt get converter right know btw need responsetext string types want see hard bytes arraybuffer", "d": "7/2015"}, {"body": "although nt quite right approach think main issue normal path code takes generates error blob seems like fix specific problem inside jquery already fix area done issues resolved via approach took outside jquery using extensions provides", "d": "8/2015"}, {"body": "please try open console look", "d": "8/2015"}, {"body": "example failing", "d": "7/2015"}, {"body": "sorry delay code looks bit like function searchbyitemnumber tmpvalue originfield var transaction pimsdbtransaction drugs var objectstore transactionobjectstore drugs var request objectstoreget tmpvalue requestonsuccess function e etargetresult null searchbypopcode tmpvalue originfield else var event new customevent drugsearchcomplete detail etargetresult originfield trigger event inside jquery code following line trigger function event data elem onlyhandlers hasowncall event type used return true chrome since change mentioned link posted returns false error occurs typeindexof type become type customevent string expected understanding type property nt belong event object belongs event prototype hasownproperty returns false temporarily changed jquery code fix application follows type type event eventtype event application fixes problem nt cause issues ca nt certain would applications hope makes sense cheers dan", "d": "7/2015"}, {"body": "please provide minimal complete test case micha\u0142 go\u0142\u0119biowski", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "thanks test case exactly needed behavior changes chrome introduced align implementation standard browsers eg firefox behaved way long time nothing new see fiddle fails firefox well agree follow prototype chain", "d": "7/2015"}, {"body": "welcome hope helps", "d": "7/2015"}, {"body": "assign issue want start contributing jquery", "d": "7/2015"}, {"body": "mansisce submit pr github nt allow assign issues people nt commit access repository", "d": "7/2015"}, {"body": "mansisce also check lots useful info contribute jquery questions nt hesitate ask preferable irc channels thank interest", "d": "7/2015"}, {"body": "trying trigger native raw dom using jquery valid api input create pass custom event string like", "d": "7/2015"}, {"body": "clarify since raw dom event never passed important properties raw dom event object code check object", "d": "7/2015"}, {"body": "sample logs sizzle update committed dependencies update support add android support tests results add expected support results safari amp add support tests results clean comments support notation closes correct ios support test results rearrange entries document boxsizing unprefixed firefox make support matrix ios match ios well reorganize browser order add safari reduce size skip stylebased tests elementstyle undefined closes tests accommodate page changes qunit html reporter add assertion jquery val method add microsoft edge results windows build add tests sizzle attributes add test selectors commas add current version node iojs travis config closes avoid use qunitreset tests splitting closes blacklist beforeunload test ios closes blacklist one effects test chrome bring back cleanup logic clean isnumeric tests copy sizzlecontains tests copy sizzleuniquesort tests copy sizzle combinators tests correct typo regex matching safari correct logic broken assertion global clean teardown function expand css relative adjustment tolerance ie fix code style issues fix css relative adjustment test rounddown browsers fix failing ajax tests oldie fix safari useragent detection fix tests accordance new visible behavior improve jsonp tests increase qunit timeout closes make top html suite compliant style guide closes minor updates qunit compatibility improvments testrunner move sizzle tests selector remove empty line whitespace remove shiv remove obsolete speed directory closes remove one checks memory leak remove qunit start hook remove sizzle intergration tests closes remove unused variables remove uselss keys helper simplify testtimeout option simplify globals cleanup tilt style guide windmills update qunit traversing optimise add using makearray closes traversing check pairwise element combinations find els closes wrap declare dependency manipulation module closes support unwrap selector selective unwrapping closes", "d": "7/2015"}, {"body": "afraid ca nt much specific release process generates changelogs publishes website nt see much reason switch alternative solution fine", "d": "7/2015"}, {"body": "cc scottgonzalez", "d": "7/2015"}, {"body": "sure much value changing tool use conventionalchangelog looks decent also ton dependencies either way would nt change jquery part jqueryrelease", "d": "8/2015"}, {"body": "generates changelogs publishes website regards yb", "d": "9/2015"}, {"body": "documented every element array actually arraylike passed becomes handler argument since javascript engines fare poorly excessive argument counts recommend wrapping large arrays avoid expansion", "d": "7/2015"}, {"body": "test chrome html append append append problem ca nt use jsfiddle", "d": "7/2015"}, {"body": "doc served right tho said otherwise wo nt xhtml looks like ca nt xhtml", "d": "7/2015"}, {"body": "need escape dot like using see", "d": "7/2015"}, {"body": "special character must escaped use instead", "d": "7/2015"}, {"body": "jostbaron try use instead escaping something difference", "d": "7/2015"}, {"body": "right course jquery takes selector getelementbyid takes id dots selectors different dots ids thanks pointing fault sometimes use dot example id generated phps set", "d": "7/2015"}, {"body": "even current described behavior switch provided confusing amp nonintuitive", "d": "7/2015"}, {"body": "nt think much use signature wild eighter", "d": "7/2015"}, {"body": "good remove per meeting", "d": "9/2015"}, {"body": "removed milestone backed end", "d": "3/2016"}, {"body": "confirmed thanks report works safari chrome broken good news chrome stable went today bug fixed nt think anything us unless properties nt work way know sth like please let us know amp reopen", "d": "7/2015"}, {"body": "sorry mistaken still broken test case borked", "d": "7/2015"}, {"body": "tests seeing similar problems prefixed versions work unprefixed forms getting picked still chrome test", "d": "7/2015"}, {"body": "sure open chrome issue link prefixed amp nonprefixed property accept different syntaxes lot check properties checking value applied properly falling back prefixed property would error prone workaround would invoke directly aware though jquery amp bug using setter vendorprefixed property fixed amp included jquery sure use nonprefixed setter first prefixed one second avoid bug", "d": "7/2015"}, {"body": "done", "d": "7/2015"}, {"body": "thanks let see say", "d": "7/2015"}, {"body": "going close since nt see way work around jquery without introducing bugs decreasing performance setter overall hopefully lot css properties suffer behavior workaround hard", "d": "8/2015"}, {"body": "thanks reporting anyway", "d": "8/2015"}, {"body": "stems rather curious heightwidth exception ultimately dating way back jquery doubt still relevant would comfortable removing objections jquerycore", "d": "7/2015"}, {"body": "seems safe remove long ie whatever nt throw problems try set widthheight think guarding somewhere else anyway recently also lol comment line back", "d": "7/2015"}, {"body": "works fine without hack removing", "d": "7/2015"}, {"body": "great identify problematic behavior actually ie flicker nt quite precise enough", "d": "7/2015"}, {"body": "jeresig probably", "d": "7/2015"}, {"body": "lord knows probably ie something feel free nuke ca nt reproduce", "d": "7/2015"}, {"body": "could create test case hard see exactly problem description use ajax requests thanks", "d": "7/2015"}, {"body": "mzgol provide example hard load link rather soft load swapcontent mainswapphp pagehorticulture bodydiv console", "d": "7/2015"}, {"body": "mzgol see bug something forgot", "d": "7/2015"}, {"body": "phppluginmaster think debug using site like jquery forum stackoverflow turns jquery problem let us know providing simple test case point suspect problem code generally jquery team nt try debug people pages", "d": "7/2015"}, {"body": "dmethvin run site suggested test know modal works refresh test console input test scanning word ajax call started jquery post could nt solve posted jquery bug answer finally decided post bug good video capture software use show confused still bug solved quicker", "d": "7/2015"}, {"body": "sure steps asking us take debug however asking provide steps us right ticket instead see get help forum eliminated extraneous code reduced know whether bug logic problem jquery", "d": "7/2015"}, {"body": "phppluginmaster sure solves problem think forgot uncomment line", "d": "7/2015"}, {"body": "yep want run ca nt break accordion site try running function link console show broken accordion also fixed need old style load dmethvin tried jquery forum look blankly", "d": "7/2015"}, {"body": "phppluginmaster debugging whole site takes time nt remember volunteers try stack overflow jquery forum nt work test case entire site much", "d": "7/2015"}, {"body": "mzgol refuse run ajax page load closed bug report remain open run function ajax call ever run ajax function load new data close someone pointed talking runtime error function", "d": "7/2015"}, {"body": "nt close ticket code works closed valid bug report please find folks help debug page find whether bug code bug jquery", "d": "7/2015"}, {"body": "dmethvin code works whole page refresh partial page refresh bug partial refreshes whole refreshes desired method nt allow function work even attempt executing commented function page seems like nt bug still exists commenting part meant temporary fix long term fix want show bug video gladly understand talking", "d": "7/2015"}, {"body": "video capture bug", "d": "7/2015"}, {"body": "phppluginmaster need separated minimal test case means need take page offline remove much still reproducing bug report example us preferably also page uses jquery ui potential test case nt contain external dependencies jquery otherwise much going us know look", "d": "7/2015"}, {"body": "phppluginmaster may useful take look short self contained correct compilable example guide might help find root cause problem", "d": "7/2015"}, {"body": "phppluginmaster question already answered jquery forum", "d": "7/2015"}, {"body": "provide minimal test case get home vacation able build different one", "d": "7/2015"}, {"body": "hi csuwildcat thanks reaching recently added edge support infrastructure temporarily periodic run instead main one issues resolved mostly two issues sizzle pr jdalton love make browsers suffer edge fixes bug drop guard applying workaround missing critical make jquery use emulation instead native one already chrome bugs implementing events nt know edge kept good ie implementation replicated chrome bugs see one edge failure one related test already passes newer builds browserstack relatively old build still named spartan still issue imo everything else fine", "d": "7/2015"}, {"body": "quick review items listed knew focusin detectionpolyfill one seems like good idea wrong focusin bummer escalate going present hard stops people estimation", "d": "7/2015"}, {"body": "going present hard stops people estimation nt think anything hard blocker fortunately never shipped workaround version checked good", "d": "7/2015"}, {"body": "csuwildcat anything else rather move conversation mentioned two bugs ie amp", "d": "7/2015"}, {"body": "mzgol looks good two relatively minor issues logged follow separately overall compat confirmation thank", "d": "7/2015"}, {"body": "fyi still walk store buy device android still quite makes vote nt change anything try make android finally pass amp continue suffer maybe drop support master keep compat still suffer although little less reason android problems happen often master compat", "d": "7/2015"}, {"body": "fyi still walk store buy device android", "d": "7/2015"}, {"body": "relevant", "d": "7/2015"}, {"body": "markelog hah thought created issue way past guess time android flies slower", "d": "7/2015"}, {"body": "seems drop pretty quickly though february", "d": "7/2015"}, {"body": "echoing gnarf despite low usage numbers feel like hard justify officially dropping support something still buy new shelf direct best buy website largest consumer electronics retailer us", "d": "7/2015"}, {"body": "wrote initial post though never fully supported browser always lots failures life jquery nt even test android ci numerous android issues pop time time nt remember single issue reported anyone outside jquery team mostly reacting various problems pop testing waiting unresolved long time also wonder one reports android issues maybe fixing much writing workarounds issues one cares one notices", "d": "7/2015"}, {"body": "arschmitz gnarf like discuss next core meeting could options dropping support supporting fully love input discussion timmywil make sure nt plan skip meeting next week", "d": "7/2015"}, {"body": "mzgol generally always lurking make sure next one caught middle setting new laptop week", "d": "7/2015"}, {"body": "airplane trust arschmitz carry viewpoint need wait long making responsible informed choices game jul alexander schmitz notifications githubcom wrote mzgol generally always lurking make sure next one caught middle setting new laptop week reply email directly view github", "d": "7/2015"}, {"body": "mzgol yes plan meeting thing foresee changing would fact moving weekend nt plan letting interfere", "d": "7/2015"}, {"body": "thoughts think least moving support makes sense bugs appear caused fact many workarounds already due support discover usually look one recent android failures discover things failed usual often obvious android support would little easier also size difference amp larger current amp due support removal currently gzipped weighs one thing another think restrict android support slightly saying wo nt fix noncritical bugs like sth offby one strategy applied eg support note tests currently fail android look like significant breakages situations like appended checked radios losing state yet one reports things us wonder anyone noticed stopped working around unreliable margin right android due fact devices still sale sad ok keeping work android basic level least ensure library parses correctly core apis work least outside various edge cases like note android broken many levels many fix reliably developer nt test site browser jquery supporting wo nt help broken anyway easier android newer", "d": "7/2015"}, {"body": "mzgol based previous discussions nt think compat good option see", "d": "7/2015"}, {"body": "hmm right forgot use case", "d": "7/2015"}, {"body": "echoing gnarf despite low usage numbers feel like hard justify officially dropping support something still buy new shelf well could still install ie nt necessary mean somebody note stats show browser market os market meaning ppl actually buying nt mean use default browser fact looks like primary clientele opera mini looking much lower percentage plus market share dropped four months extrapolated data assume tendency another four months share go lower standart pretty big argument removal consider android add numbers ios ms browsers would tiny like really tiny add desktop browsers share would practically nonexistent mzgol ppl core spend lot lots time working supporting browser job pretty unrewarding hella annoying whereas still nowhere near green trunk meanwhile users field bugs ever giving even smoke testing seems really necessary", "d": "7/2015"}, {"body": "also concerned cases regressing android would mean worse experience others fully supporting browser could eg mean revert would pretty sad would cause issues", "d": "7/2015"}, {"body": "discussing issue dev leads meeting realized something anyone know issues jquery compat hybrid apps always recommended master master nt oldie detritus sure ever actually checked see compat works think make android compatonly recommend compat anyone supporting hybrid apps", "d": "7/2015"}, {"body": "anyone know issues jquery compat hybrid apps couple issues know windows modern apps restrictive general web content compare eg master manipulationsupportjs compat master jshint settings declare global nt declare browser environment compat nt test anything nodejs basic compliance tests possibility code tailored cause issues unfortunately nt good way test apart waiting bug reports support tests may require changes similar ones described point obviously change especially points difficult change would also fix making changes meant could drop android say android support like even basic smoke testing android", "d": "7/2015"}, {"body": "like hold android smoke testing assert degraded noted mostly works specific bugs edge cases found us", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "mean smoke testing though keeping existing tests except maybe ones currently failing small set tests checking basic api behavior would mean keeping existing tests nt think making android support officially would buy us much", "d": "7/2015"}, {"body": "something like library use handful simple operations backed required modules explicitly avoiding edge cases support would allowed degrade point core functionality fails", "d": "7/2015"}, {"body": "nt think would buy people much guess code web relies least couple edge cases api would nt oppose much though maintaining nt lot trouble except time needed choosing proper tests initially", "d": "7/2015"}, {"body": "right acting assumption websites want serve compat native perhaps especially welltested try master report issues us welcome change adding code try fixing unit tests", "d": "7/2015"}, {"body": "mobile team discussed voted today decided upcoming release passively supporting android lt meaning remove fixes version ensuring basic functionality", "d": "7/2015"}, {"body": "dropping android support wo nt help much unless also drop super unofficial secret support phantomjs since share dumb limits yet sort weakened android support suggests might work document places punted hard involved degrading support newer popular browsers", "d": "7/2015"}, {"body": "dmethvin dropping android support wo nt help much unless also drop super unofficial secret support phantomjs since share dumb limits imo phantomjs mostly need workarounds throwing need android well anyway fixed android gt needs stay apart nt see lot overlap yet ca nt drop phantomjs yet mobile still relies probably mostly makes wrapper tools still install android support please see initial post code size increase although nice rip bytes gzipped test workaround mostly maintenance cost might notice usually one fight stupid browser p fact never passed whole test suite various workarounds tests browser less behaves broken nt issues android require workarounds source able pass test suite unable make android also trying fully supporting browser could mean reverting useful changes like", "d": "7/2015"}, {"body": "decided adding support nonbrowser environments jquery compat issue pr cantfixing branches try fix maintain basic support android meaning special tests browser nt check edge cases issue removing support test amp workaround issue", "d": "7/2015"}, {"body": "btw android market share last month created issue going extreme speed half year almost nonexistent trend continues", "d": "8/2015"}, {"body": "thats said plus market share dropped four months extrapolated data assume tendency another four months share go lower standart pretty big argument removal", "d": "8/2015"}, {"body": "well could still install ie nt necessary mean somebody note stats show browser market os market meaning ppl actually buying nt mean use default browser fact looks like primary clientele opera mini looking much lower percentage plus market share dropped four months extrapolated data assume tendency another four months share go lower standart pretty big argument removal consider android add numbers ios ms browsers would tiny like really tiny add desktop browsers share would practically nonexistent btw android market share last month created issue going extreme speed half year almost nonexistent trend continues think one two thing drop support master keep compat still suffer although little less reason android problems happen often master compat drop support branches redirect people still needing support amp jquery lines prefered second one still need android remain let push web forward slim easy lib", "d": "8/2015"}, {"body": "btw average android run looks like manually restarting jobs timed hard miss critical bugs used fact half tests time default", "d": "8/2015"}, {"body": "almost done latest part pr", "d": "9/2015"}, {"body": "everything planned done", "d": "9/2015"}, {"body": "mzgol ok based numbers check rest team meeting week though", "d": "7/2015"}, {"body": "sure nothing urgent nt significant issues safari mostly reducing test burden anything else reason leave bother much", "d": "7/2015"}, {"body": "also cc scottgonzalez affect jquery ui support matrix well", "d": "7/2015"}, {"body": "good", "d": "7/2015"}, {"body": "removed browsers jquery core amp ui testswarm landed update jquerycom branch closing issue resolved", "d": "7/2015"}, {"body": "maybe turn option preferably comment android needs", "d": "7/2015"}, {"body": "probably easier left comment source code inline rule warning", "d": "7/2015"}, {"body": "concerned since android chokes may reserved words nt work property names would safer switch support comment android sure everything quoted", "d": "7/2015"}, {"body": "may reserved words nt work property names every reserved word trigger error case enable", "d": "7/2015"}, {"body": "every reserved word trigger error nt check least amp trigger error work android", "d": "7/2015"}, {"body": "pr", "d": "7/2015"}, {"body": "kudos go dwt helping debug issue", "d": "7/2015"}, {"body": "well still support branch seems dmethvin justification original ticket leaving patchwelcome still valid although send us pr code works supported browsers think consider", "d": "7/2015"}, {"body": "supported mean rest", "d": "7/2015"}, {"body": "long enough worth rediscussing github tracker still opinion jquery event system layer top dom event system exceptions end triggering native events via dom methods like special guards prevent infinite recursion constant source bugs years reaching level us pretty complicated call jquery know whether browser understands event today order ensure consistent crossbrowser dom bubbling behavior manually bubbles triggered target way executing jquery handlers along way dom native event also going bubble sometimes inside jquery well jquery nt inherently know whether particular event name bubble behavior would determined sizeortime expensive process lookup table likely impractical feature detect list may differ even modern browsers various quirks notyetsupported events jquery nt know whether native dom handlers attached element dom method means nt possible shortcut process must fire events via see happens every page jquery use today new version would expensive bunch work support native listeners none possibly exist still want support triggering event handler additional data jquery api currently documents perhaps could say nt happen native events native event caused bubbling still need data passed jquery handlers attached element normally response would make plugin given tricky sure generalized solution crafted inside outside jquery going assume anonymous person tried experiments came conclusion someone wants give another try could look", "d": "7/2015"}, {"body": "interest would nt viable switch whole event propagation mechanism use browsers native facilities make kind interoperability work ie events registered via addeventlistener trigger dispatch real event sure would nt work old browsers thats compatibility branch jquery specific functionality possible quite easily wrapping handlers registered via jquery closure extracts extra information triggered custom event hands parameter", "d": "7/2015"}, {"body": "pretty easy test theory like pretty thorough unit tests events write whatever changes think would work see well unit tests", "d": "7/2015"}, {"body": "dmethvin well mean really nt know interested change know nt work", "d": "7/2015"}, {"body": "dwt ca nt know nt work nt tried write code lot potential issues perhaps work least give try provide doublecheck suspicion possible without significant breakage current apis lack dom likely cause trouble example still need maintain bookkeeping today plus user attaches event listener outside jquery plan trigger nt think nontriggering way know clone another element edit short ideal patch would significantly bigger current code introduce breakage current api contracts", "d": "7/2015"}, {"body": "closing since suspect nt possible without breaking existing code causing performance issues someone post solution proving wrong reopen", "d": "9/2015"}, {"body": "data setting attributes pulls design data attributes pulled first time data property accessed longer accessed mutated data values stored internally jquery set attribute use attr", "d": "7/2015"}, {"body": "sorry nt know said example take functions see updated example element jquery object var element div unique element attr title hello world success element title hello world element unwrap failure parentdiv element removed element already modified setting title hello world fail well element jquery object var element div unique element unwrap success parentdiv element removed element attr title hello world failure jquery failed set title element hello world element already modified unwrapped making copy existing jquery object using variable name like modifying jquery object based variable containing jquery object jquery seems fail modify read properties element using jquery object based variable containing jquery object", "d": "7/2015"}, {"body": "see written code goes wrong windowclientsidevalidationsformbuilders actionview helpers formbuilder add function element settings message element parent fieldwitherrors capitalize message function return touppercase ssubstr message remove function element settings element parent fieldwitherrors element attr title almost sure bug jquery", "d": "7/2015"}, {"body": "however bug dissapears using jsfiddle test", "d": "7/2015"}, {"body": "put comma namespace nt match namespace", "d": "7/2015"}, {"body": "current event delegation use via jqueryfind delegates sizzle ca nt really tell jsperf going looks like first case may optimized away jit given numbers ideas speed delegation maybe could implement complete pull request see whether makes difference way check unit tests well since many tricky cases", "d": "7/2015"}, {"body": "closing pretty sure current code use possible infamous cases like positional selectors jsperf provided nt looking jquery code", "d": "9/2015"}, {"body": "confirmed caused need selectorsizzle define mlewand would like open pull request", "d": "7/2015"}, {"body": "whoops see without referencing issue move discussion", "d": "7/2015"}, {"body": "yes right already made pr believe already referenced referenced issue pr description mlewand referenced issue hour ago anyway happy read feedback", "d": "7/2015"}, {"body": "nt browserifyshim issue jquery one set config define global", "d": "7/2015"}, {"body": "thank opening issue agree browserify config issue requests leave global put", "d": "7/2015"}, {"body": "documentation every attempt made convert string javascript value includes booleans numbers objects arrays null value converted number nt change value representation example equivalent numbers numeric value converting would alter representation left strings string value converted number first precisely converted second", "d": "7/2015"}, {"body": "think dup plan fix final", "d": "7/2015"}, {"body": "closed dup", "d": "9/2015"}, {"body": "thanks opening issue please provide small complete test case help us asses issue firefox supports elements guess invalid input", "d": "7/2015"}, {"body": "helps create test case error thrown mostly likely element jquery collection either dom element eg currently connected document always invalid inputs nt throw errors past", "d": "7/2015"}, {"body": "timmywil example use plugin move mouse see works uses jquery click settings see scripts used want example uses dev version tested latest ff ie chrome luck far", "d": "7/2015"}, {"body": "chrome get", "d": "7/2015"}, {"body": "dmethvin fixed chrome try link", "d": "7/2015"}, {"body": "use rawgithubcom micha\u0142 go\u0142\u0119biowski", "d": "7/2015"}, {"body": "mzgol thanks nt know updated pen guys progress far", "d": "7/2015"}, {"body": "guess right plugin asking makes sense use element", "d": "7/2015"}, {"body": "dmethvin change code portion plugin works could provide assistance", "d": "7/2015"}, {"body": "author nt developing plugin anymore recommend finding actively developed one glad pointed problem though nice people trying bleedingedge builds code find break", "d": "7/2015"}, {"body": "also worth noting issue window jquery collection called currently breaks jqueryui code fixed master branch", "d": "10/2015"}, {"body": "many sites load multiple versions jquery see jquerynoconflict supporting api option really manage includes better avoid problem continue work around", "d": "7/2015"}, {"body": "created duplicate bug", "d": "7/2015"}, {"body": "could create complete test case", "d": "7/2015"}, {"body": "source", "d": "7/2015"}, {"body": "sorry fix html body animate", "d": "7/2015"}, {"body": "lot code hardly instructions run reproduce problem could create minimal example hard debug complete app", "d": "7/2015"}, {"body": "thank fixed", "d": "7/2015"}, {"body": "ok assume mean mistake side closing issue", "d": "7/2015"}, {"body": "nt seem regression breaks well nt looked sinon code branch uses polling timer rather events implement might factor", "d": "7/2015"}, {"body": "thanks might sinon xhr mock essentially mocks immediately provides response presumably jquery nt seeing response first poll comes back", "d": "7/2015"}, {"body": "problem indeed area jquery sets calling xhrsend means jquery nt listening fakexhr emits jquery synchronous check calling account cases cached response immediately returned however proceeds defer callback using instead calling immediately changing following line patched version made work diff settimeout callback callback try work around setting fake timer addition fake server perform tick end test", "d": "7/2015"}, {"body": "sure change would affect guarantees although request still completed execution falls anyone making assumption good test seems broken using async test", "d": "7/2015"}, {"body": "forgot new always async see makes example confusing even though jquery original code ran issue used though regardless suppose appropriate attach end chain return promise qunittest solve naturally notice large test suites minimum delays make slow test suite one things makes synchronous resolution attractive significantly speeds test suite however suppose still use mock timers take care", "d": "7/2015"}, {"body": "new jquerycompat deferred promiseacomplant well would definitely want assume async reliable operation across versions hear saying making tests slower world spoken consistency async triumphs must obey smilingimp", "d": "7/2015"}, {"body": "similar different issue described cjohansensinonjs tests using sinon fakexml work jquery break essence jquery returns sinon mocking jquery explicitly returns bypassing mocking specific reason necessary branch removed would really help testing via sinon described workaround linked issue", "d": "7/2015"}, {"body": "specific reason window necessary branch removed contrary included jquery continuation line support running jquery nonbrowser environments passing custom implementation jquery factory even tests branches use assume javascript globals browser ones surprises though problem eg use another change compared jquery run effects tests sinon mock works fine", "d": "7/2015"}, {"body": "problem nt mocked set sinon stub issue fix problem", "d": "7/2015"}, {"body": "nt think issues left resolve close reopen needed open focused issue", "d": "9/2015"}, {"body": "body span correct note selecting elements within body body need help please use forums irc stack overflow", "d": "7/2015"}, {"body": "ca nt reproduce try project root dir version even work nt help try update node version latest one although work previous ones", "d": "7/2015"}, {"body": "run results jquery build query npm install amp amp grunt running build build task warning typeerror read property null objectconvert onbuildwrite use force continue aborted due warnings npm err darwin npm err argv node usrlocalbinnpm run build npm err node npm err npm npm err code elifecycle npm err jquery build npm err exit status npm err npm err failed jquery build script npm install amp amp grunt npm err likely problem jquery package npm err npm npm err tell author fails system npm err npm install amp amp grunt npm err get info via npm err npm owner ls jquery npm err likely additional logging output npm err please include following file support request npmdebuglog", "d": "7/2015"}, {"body": "patrickording try suggestions also using latest master", "d": "7/2015"}, {"body": "markelog yes tried suggested nt work yes latest master", "d": "7/2015"}, {"body": "reproduce seems extra files folder passed task say try freshly cloned repository", "d": "7/2015"}, {"body": "also edit file add line see file causes error", "d": "7/2015"}, {"body": "varwwwgithubclonesjquery master git status branch master branch uptodate originmaster changes staged commit use git add update committed use git checkout discard changes working directory untracked files use git add include committed mzgol yes try freshly cloned repo varwwwgithubclonesjquery master sudo npm run build jquery build userspordingvarwwwgithubclonesjquery npm install amp amp grunt running build build task path userspordingvarwwwgithubclonesjquerysrcvararrjs name vararr path userspordingvarwwwgithubclonesjquerysrcvardocumentjs name vardocument path userspordingvarwwwgithubclonesjquerysrcvarslicejs name varslice path userspordingvarwwwgithubclonesjquerysrcvarconcatjs name varconcat path userspordingvarwwwgithubclonesjquerysrcvarpushjs name varpush path userspordingvarwwwgithubclonesjquerysrcvarindexofjs name varindexof path name path userspordingvarwwwgithubclonesjquerysrcvartostringjs name vartostring path userspordingvarwwwgithubclonesjquerysrcvarhasownjs name varhasown path userspordingvarwwwgithubclonesjquerysrcvarsupportjs name varsupport path userspordingvarwwwgithubclonesjquerysrccorejs name core warning typeerror read property null objectconvert onbuildwrite use force continue", "d": "7/2015"}, {"body": "hah obvious thanks patrickording build system assumes file path treated variable declaration since put entire repo inside directory everything treated way breaks seems like bug fix nt looking places main repository directory meantime move repo outside avoid problem cc timmywil", "d": "7/2015"}, {"body": "ah sure fix", "d": "7/2015"}, {"body": "pretty cool bug though", "d": "7/2015"}, {"body": "thank everyone helping keep awesome work", "d": "7/2015"}, {"body": "bumped milestone critical still work", "d": "9/2015"}, {"body": "patrickording landed fix would mind testing", "d": "10/2015"}, {"body": "would nt code readable without using unnamed arguments", "d": "7/2015"}, {"body": "fagnermartinsbrack cases think right may possible accomplish thing using array operations still see use jquery set contains multiple elements begin want get list grandparents elements set ie proposed would get grandparent first element one worse elements set prior ancestor hit top dom tree results excluded index might instead getting grandparent subsequent element original set even end array way implement currently might eg return single element matching second item nothing first also might assume case could implemented would behave correctly original set multiple elements parents element concatenated resulting array results would include parents first element correctly excluding firstimmediate parent first element think perhaps could implemented eg makes think perhaps implemented would sufficient place implementing", "d": "7/2015"}, {"body": "similar boolean trap ie parameter nt really say affects depth searching process nt think good idea name cases want limit searched nodes look first one case closest enough really sophisticated use case imo best achieve via plugin new name function would better anyway", "d": "7/2015"}, {"body": "mzgol thanks agree custom plugin would able provide community may may find useful supported feature default created repo may develop something like record would nt boolean trapesque seems jquery api tends toward method type detection terse fluent interfaces rather example passing around objects named parameters latter always possible rely type detection eg implementation would make easier extend functionality eg put numeric cap height recursion eg feel free close want", "d": "7/2015"}, {"body": "imagine conservative new apis usually ask plugin first nevertheless thank reaching", "d": "7/2015"}, {"body": "", "d": "7/2015"}, {"body": "since discussed previously gon na close thank though fagnermartinsbrack thanks comment helpful", "d": "7/2015"}, {"body": "ok think understand thanks time", "d": "7/2015"}, {"body": "would significant change behavior would nt would know whether data valid need massage response validity would seem safest use jquery bultin data conversion instead", "d": "7/2015"}, {"body": "nt think rearrange documented callback order using years recommendation would explicitly set process none vagaries automatic conversions affect", "d": "9/2015"}, {"body": "whole data module rewritten scratch jquery events rely seeing private data nt relied jquery properly hidden never guaranteed available officially sanctioned api get list handlers attached element need debugging purposes use note unsupported api may disappear one day similarly hack described disappeared jquery", "d": "7/2015"}, {"body": "also triggering nt necessary snippet returns chaining possible could written would return thing", "d": "7/2015"}, {"body": "jquery event system really optimized intended handing dom event behavior want something like pubsub reactive programming javascript libraries use", "d": "7/2015"}, {"body": "new method would definitely better way rather adding boolean trap case though plugin", "d": "7/2015"}, {"body": "agree introducing boolean trap would bad idea also dmethvin said new methods better introduce plugin first nt want increase byte size much", "d": "7/2015"}, {"body": "animating unit one returned px compute starting value animation unit happens means iterative approximation imperceptibly fast nt see anything nt case second recommendation use unitless eliminates mismatch allows us skip starting value computation", "d": "7/2015"}, {"body": "call ready module needed separated ready tests need load synchronously amd mode", "d": "6/2015"}, {"body": "call ready module", "d": "6/2015"}, {"body": "matter one entries choose still get tests executed double entry nt appear amd mode though wired", "d": "7/2015"}, {"body": "jquery function already lot signatures nt seem worth add another one especially proposed api nt sound intuitive", "d": "6/2015"}, {"body": "thank taken time undoubtedly busy schedule take look must however point understood request consider modifying existing third signature allow optional parameters adding another one away first part reason clear section page reference consult prior coming would look like next nothing jquery intuitive made merely follows design patterns also madeup learned like jquery api however assume talking jquery way light would loved received oneliner response masters showing proper way pass parameters callback function rather nt seem worth something different said especially nt understand say however take discussion leave important matters", "d": "6/2015"}, {"body": "ca nt done without change inside jquery agree signatures already pretty complicated even talking changing args passed function capture information would explicit happening change signature would tied jquery code would potentially fail older versions", "d": "6/2015"}, {"body": "nt discussion approach however lot requests extend jquery api via various helpers consider proposal useful get included since everyone pays price size addition potential bugs happen etc proposal included need get convinced useful enough would nt many drawbacks case original slightly modified proposal instead written currently could written way cleaner understandable amp nt require changes inside jquery", "d": "6/2015"}, {"body": "hi thanks attention understand making changes api done lightly merely wanted raise issue considered well documentation purposes given relatively recent availability right third snippet clean explicit actually initial attempt unfortunately work time function called alternatively jquery might provide function sometime future works contexts approach likely even bigger impact", "d": "6/2015"}, {"body": "time function called documentcurrentscript null right nt think makes little ugly deal reopen still sure want let hear opinion others", "d": "6/2015"}, {"body": "ca nt use quite clean still obvious fairly short", "d": "6/2015"}, {"body": "works indeed little cleaner iife", "d": "6/2015"}, {"body": "thank opening issue decided close defer solutions", "d": "7/2015"}, {"body": "perfectly fine thanks feedback awesome library", "d": "7/2015"}, {"body": "duplicate jquery parses output provided header option set explicitly header disallowed response", "d": "6/2015"}, {"body": "would pretty significant backcompat implications get thin wrapper around ajax intelligent guess logic problem caller use ajax explicit text data type conversion manuallyexplicitly", "d": "6/2015"}, {"body": "dmethvin generally agree developer responsibility use ajax properly options control response processing however google jquery cors request good half results nt use datatype setting anyway seems hard monkey patch cross domain requests fine", "d": "6/2015"}, {"body": "made clear really dislike intelligent guess logic reason taken caller declare data type explicitly tell us guess hole would close suspect would break ton world sites others think", "d": "6/2015"}, {"body": "suspect would break ton world sites nt see break something fix cross domain requests using datatype script expecting javascript jsonp would website load js domains via ajax really weird feel safe patch", "d": "6/2015"}, {"body": "homakov thanks opening issue would comfortable opening pr proposed changes think could evaluate change thoroughly could see code", "d": "6/2015"}, {"body": "timmywil security see write thing", "d": "6/2015"}, {"body": "also clarify case attacker web site asking data via happens script similar include third party code via tags proposed fix would like see", "d": "9/2015"}, {"body": "via always nt specify datatype", "d": "9/2015"}, {"body": "sure though cc jaubourg", "d": "9/2015"}, {"body": "everything automated script detection configurable pretty easy disable untested examples work js good disable javascript detection globally ajaxsetup contents javascript false acceptable disable text javascript promotion break intended manual conversions ajaxsetup converters test gt javascript false preferred use prefilter specific crossdomain ajaxprefilter function scrossdomain scontentsjavascript false fan changing behaviour within lib understand rationale though recommand removing javascript datatype detection default options", "d": "9/2015"}, {"body": "fan changing behaviour within lib understand rationale though recommand removing javascript datatype detection default options would disable detection requests whereas origin request still considered safe", "d": "9/2015"}, {"body": "fan changing behaviour within lib understand rationale though recommand removing javascript datatype detection default options would disable detection requests whereas origin request still considered safe exactly option use prefilter makes behaviour pretty difficult document imo hence rather go pushing solution userland", "d": "9/2015"}, {"body": "jaubourg teaching users hard remember locationhash bug took years vulnerable apps jquery fix one posted used wild yet imagine many apps use code like", "d": "9/2015"}, {"body": "change execute cross domain scripts default much less obtrusive turning script execution default think markelog solution worth trying next release", "d": "9/2015"}, {"body": "homakov lots ways execute malicious scripts dom api alone case user input unchecked used case code reaching knowingly hardcoded url big difference people around globe already using scripts domains cdns poses exact issue timmywil since handle configuration ie prefilter nt see appeal hacking deep conversion logic", "d": "9/2015"}, {"body": "jaubourg agree handled easily prefilter advantage changing default behavior users err side security rather unintentionally executing cross domain scripts", "d": "9/2015"}, {"body": "many people use cdns definitely nt expect current behavior would rank low severity fix simple think worth", "d": "9/2015"}, {"body": "homakov believe mitigate would mind testing", "d": "10/2015"}, {"body": "nt work edge markelog fixed", "d": "10/2015"}, {"body": "fix backed branch really confusing fix still though jquery safer disturbing get security fix back", "d": "3/2016"}, {"body": "reedloden hey thanks pointing would mind creating ticket need write three places", "d": "3/2016"}, {"body": "reedloden revert breaking change nt done revert well see fix arrive", "d": "3/2016"}, {"body": "markelog added milestone ticket nt one", "d": "3/2016"}, {"body": "mgol line breaking change vs page scrolls upgrade instructions version case missing semver breaking change ca nt create major update already one emotional trying bring little bit attention problem might topic think custom semver versioning digits something like majorcurrentmajorbreakinghotfixminorpatch", "d": "7/2016"}, {"body": "add lines custom code using jquery protected issue right", "d": "7/2016"}, {"body": "szarouski indicated milestone comments issue fixed jquery else need case missing semver breaking change ca nt create major update already one mean nt understand", "d": "7/2016"}, {"body": "mgol run jquery website see popup lie", "d": "7/2016"}, {"body": "homakov post example site checked nt work", "d": "7/2016"}, {"body": "mgol sorry nt clear projects total combine giant project use jquery fix cors backwards incompatible reverted released version problem fix line change would much easier fix comparison upgrading version wonder add lines custom code jquery library using jquery api order fix security issue versions point definitely upgrade moment bandwidth time really nt want vulnerability used library project mentioned semver jquery already taking count straight forward way semver incorporate incompatible yet important change version", "d": "7/2016"}, {"body": "szarouski ok understood yes adding lines fix issue note though vulnerability nonadvisable anyway", "d": "7/2016"}, {"body": "szarouski read know really jump hoops order consider real threat real anything case kinda situation right thing realistically nothing concern", "d": "7/2016"}, {"body": "mgol exactly nonadvisable like grabbing weather data external site supporting cors nt site hand let consider fixed", "d": "7/2016"}, {"body": "sum versions still affected issue one series fix merged", "d": "10/2016"}, {"body": "osuritz fix included jquery newer need upgrade included", "d": "10/2016"}, {"body": "make sure fix patch fixed", "d": "4/2017"}, {"body": "reissr yes breaking change could nt include follow semver also longer maintain jquery latest version currently", "d": "4/2017"}, {"body": "assigned track issue", "d": "1/2018"}, {"body": "patchedfixed", "d": "7/2018"}, {"body": "issue patched jquery erroneously backported change reverted breaking chang brought back fix need either update jquery apply patch manually application code loading jquery issue going circles people reasking questions amp locking issue please direct questions jquery forums stack overflow", "d": "7/2018"}, {"body": "thank opening issue could provide reduced test case help us assess issue", "d": "6/2015"}, {"body": "op nt replied sounds like correct behavior jquery nt try catch errors like", "d": "9/2015"}, {"body": "mean emulation mode mode nt support document modes latest browser", "d": "6/2015"}, {"body": "know ended trying find solution managed figure writing figured would save others bunch time searching posted closed summary scriptbundle minification break minified version jquery sometimes check first", "d": "6/2015"}, {"body": "ok closing bug might want post stack overflow selfanswered question likely people find", "d": "6/2015"}, {"body": "thanks report seems duplicate", "d": "6/2015"}, {"body": "thanks report issues like made us decide want go route ie keys always camelcased fix already present preview version available jquery see details", "d": "6/2015"}, {"body": "thank duplicates fixed jquery already checked", "d": "6/2015"}, {"body": "document value attribute value either unquoted single word quoted string think correct implementation nt", "d": "6/2015"}, {"body": "value attribute value either unquoted single word quoted string humble opinion ambiguous please clarify empty string thanks nice day", "d": "6/2015"}, {"body": "empty string word must quoted used lenient moved align css specifications value must either quoted string unquoted identifier check eg", "d": "6/2015"}, {"body": "tested css queries works correctly said thank reply", "d": "6/2015"}, {"body": "confirmed firefox amp chrome works fine", "d": "6/2015"}, {"body": "sounds analogues label timmywil right", "d": "7/2015"}, {"body": "mean nt see analogy means issue affect branch also similar label", "d": "7/2015"}, {"body": "release behaviour discrepancy two versions", "d": "7/2015"}, {"body": "ah edge cases internal modifications nt affect public api see eg affect definition eg nt think implies far issue indicates serious api incompatibility versions may implictate imo automatic", "d": "7/2015"}, {"body": "okay reasonable", "d": "7/2015"}, {"body": "would nt call blocker alpha fixed final release", "d": "7/2015"}, {"body": "timmywil since fixed nt plan compat anymore closing reopen disagree", "d": "10/2015"}, {"body": "thank opening issue find support forums jquery irc channel", "d": "6/2015"}, {"body": "looks like duplicate noisy harmless fixed fuweichin confirm problem nt exist load instead jquery", "d": "6/2015"}, {"body": "problem disappears load according guide", "d": "6/2015"}, {"body": "workaround", "d": "6/2015"}, {"body": "see also think root cause", "d": "6/2015"}, {"body": "fixed verify works zba latest version", "d": "10/2015"}, {"body": "pretty sure fixed please let us know find otherwise", "d": "10/2015"}, {"body": "timmywil dmethvin mzgol opinions", "d": "12/2015"}, {"body": "think example provided quite confusing test name says nothing parameters also harder verify nt break test code change function accepts parameters prefer stay way", "d": "12/2015"}, {"body": "first glance agree mzgol support methods formerly properties understandable environment behavior descriptors would likely confusing broader extra work detectors", "d": "12/2015"}, {"body": "seems encapsulating serve test isolation code simplification postulated oop model many times perceived analogues api lib nt employ approach examples tactic anywhere else", "d": "12/2015"}, {"body": "fyi", "d": "12/2015"}, {"body": "support object one one purpose verify specific engine supports something well bug hard get simpler really nt see gain switch approach", "d": "12/2015"}, {"body": "yeah prefer keep browser detection part pure hard see future rolling logic object seems like would mixing two things object whether browser bug rest", "d": "12/2015"}, {"body": "sorry markelog nt want stack pile keeping way", "d": "12/2015"}, {"body": "okay lets table discussion became ruler words nevertheless glad discussion hope luck persuasion skills", "d": "12/2015"}, {"body": "oth variable helps size always bad size removing helps size may use variable cases doubt removing module would help much", "d": "6/2015"}, {"body": "used words like possible identify overmodulization modulization nt help removed stay assumptions bad actually check stuff", "d": "6/2015"}, {"body": "closing favor tracking roadmap ongoing work necessarily done single pass", "d": "11/2015"}, {"body": "pr", "d": "6/2015"}, {"body": "closed via", "d": "6/2015"}, {"body": "clearing milestone releasing change wo nt applicable code support", "d": "11/2015"}, {"body": "mzgol fyi since releasing another compat label removed", "d": "12/2015"}, {"body": "compat regular added wontfix issue nt matter code soon dead included branch though removing wontfix fine", "d": "12/2015"}, {"body": "removing wontfix label please remember open issue assign proper milestone", "d": "12/2015"}, {"body": "compat regular name change thing removing wontfix label please remember open issue assign proper milestone done general", "d": "12/2015"}, {"body": "compat regular apparently team since still use label", "d": "12/2015"}, {"body": "hi markelog modulize think save bytes removing occurences code raw gz sizes distjqueryjs distjqueryminjs raw gz compared master distjqueryjs distjqueryminjs want make pr", "d": "7/2015"}, {"body": "believe reusing test div ie amp similar types test nodes created helps size separate function could created well guess wo nt save size though feel free check please nt anything though lands change testrelated things", "d": "7/2015"}, {"body": "believe reusing test div yep", "d": "7/2015"}, {"body": "closing favor tracking roadmap", "d": "11/2015"}, {"body": "currently four uses one needs stay three csscurcssjs cssvarishiddenjs amp srcmanipulationbuildfragmentjs interestingly enough srccsshiddenvisibleselectorsjs use", "d": "6/2015"}, {"body": "actually uses whereas used module think perf", "d": "6/2015"}, {"body": "would request following fulfillment ticket csscurcssjs change appropriate applicability controlled attachment visibility cssvarishiddenjs use efficient combination hopefully omits former matches srccsshiddenvisibleselectorsjs srcmanipulationbuildfragmentjs change appropriate jquery script evaluation dependent upon document attachment srccsshiddenvisibleselectorsjs use", "d": "6/2015"}, {"body": "hey could elaborate expect regarding ishidden less hiddenvisibleselectors know solution efficient like tackle issue", "d": "10/2015"}, {"body": "care performance compressed size functionality trumps propose moving logic updating hiddenvisibleselectors", "d": "10/2015"}, {"body": "alright wanted know understand care performance size nt sure use efficient combination contains offsetwidthoffsetheight getclientrects hopefully omits former matches meant figure reuse hiddenvisibleselectors", "d": "10/2015"}, {"body": "also would mind providing perf test", "d": "10/2015"}, {"body": "markelog sure could point somewhere figure jsperf", "d": "10/2015"}, {"body": "avgp yes good starting point", "d": "10/2015"}, {"body": "like take opportunity say thanks entire rest jquery community helpful friendly fast lt", "d": "10/2015"}, {"body": "unfortunately nt think possible without changing behavior effects slightly different definition hidden selector instance make sure display set none even hidden parent makes sense animations said willing review pr", "d": "1/2016"}, {"body": "timmywil already described exactly source change disagree part", "d": "1/2016"}, {"body": "tried found behavior differences", "d": "1/2016"}, {"body": "effects treating hidden little differently hiddenvisible think valid hiddenvisible technical asking element actually visible page effects really wants check really hidden asking set display none depends slightly different behavior", "d": "1/2016"}, {"body": "intentional whole point consistent visibility ie layout returns nonempty", "d": "1/2016"}, {"body": "timmywil specific customerfacing calls change ways consider detrimental", "d": "1/2016"}, {"body": "specific customerfacing calls detrimental strong animated vs nonanimated hide element hidden parent nonanimated sets regardless effects sets yet set", "d": "1/2016"}, {"body": "makes sense effects would nt care displays parents case parent simultaneously animated parent display changes midanimation think okay animations work differently selections nt really reason changing consistency prefer let animations thing", "d": "1/2016"}, {"body": "ran cases see even nonanimated look computed display ignoring inheritance ancestors whereas check layout boxes still think little bit work rename make clear ignores ancestry therefore distinct clarify disconnected elements right treated hidden csseffects methods nt think case elements element parents unless inline eg former seems part thread sure latter want open new issue specific", "d": "1/2016"}, {"body": "great knock first real quick", "d": "1/2016"}, {"body": "name suggestion maybe", "d": "1/2016"}, {"body": "best three seems describe functionality pretty well", "d": "1/2016"}, {"body": "nt basically using jquery object rather dom element question implied loop happens cost low especially number iterations construct like would typically really wanted could plugin documentation issues describing method since nonpluginwriter scenarios always dom element jquery object type inconsistency really trip people would another reason put directly jquery core never fond nothing force proper openingclosing pair need close result nt needed eg reallife cases seen written people rarely need complex chains require coming back previous stacked results", "d": "6/2015"}, {"body": "yes good point used capacity suffice reminded", "d": "6/2015"}, {"body": "response return valid json", "d": "6/2015"}, {"body": "yep response id type user", "d": "6/2015"}, {"body": "would really help test case debug debug let us know failing", "d": "6/2015"}, {"body": "know debuggin platform force redirect", "d": "6/2015"}, {"body": "unfortunately need create test run locally server sure nt conditions server causing case browser following redirect jquery wo nt even see final url browser meaning jquery nt even know redirect", "d": "6/2015"}, {"body": "know debuggin platform force redirect nt know force via handy service testing crossorigin stuff", "d": "6/2015"}, {"body": "ok seems something header field xrequestedwith xml playground server adds field redirect gets content directly within one request add crossdomain true ajax options redirect jquery output success", "d": "6/2015"}, {"body": "dmethvin close ticket underlying problem solved found quirky workaround", "d": "6/2015"}, {"body": "oh thought saying understood happened sounds like local server redirected remote resource result request crossdomain nt preflighted say crosscomain nt something jquery know request succeeds", "d": "6/2015"}, {"body": "thats magic happen status code depending request requires get post status gt amp amp status lt status", "d": "6/2015"}, {"body": "dmethvin could least reopen ticket error still present regards", "d": "7/2015"}, {"body": "reopen please create full minimal test case reproducing problem use testing response handling", "d": "7/2015"}, {"body": "mzgol hey thank took advice created test case webspace would crossdomain request otherwise figured framework use cakephp redirect location header field somehow internally therefore second request separately jquery know handle without following anyway thanks reopening closed xd", "d": "7/2015"}, {"body": "ok thanks confirming", "d": "7/2015"}, {"body": "yea make optional", "d": "6/2015"}, {"body": "nt autoclosed", "d": "6/2015"}, {"body": "yes guessed used see results seemed sane go", "d": "6/2015"}, {"body": "fixed soon", "d": "6/2015"}, {"body": "duplicate", "d": "6/2015"}, {"body": "note added ms edge support test results amp browser erroneously detected chrome", "d": "6/2015"}, {"body": "sizzle issue", "d": "6/2015"}, {"body": "jacobrossi specifically would issue ie edge nt throw permission denied accessing document unloaded iframe see", "d": "6/2015"}, {"body": "specifically would issue ie edge nt throw permission denied accessing document unloaded iframe yup especially change code many older jquery versions live wild", "d": "6/2015"}, {"body": "people following discussion", "d": "6/2015"}, {"body": "mark blocker simple revert additional check good alpha require sizzle update though leave", "d": "6/2015"}, {"body": "tracking fixing unfortunately fairly gnarly issue related iframe security features make quite issue fix working stabilizing edge first release means massive change like nt appropriate time going look fixing nonetheless get first version door", "d": "6/2015"}, {"body": "fixed sizzle added awaiting sizzle update label", "d": "8/2015"}, {"body": "oh god bad nt good way feature test behave according specification follows chrome style said need reliable way test jacobrossi could please help us", "d": "6/2015"}, {"body": "let look change made specifically reply back details", "d": "6/2015"}, {"body": "jacobrossi thanks", "d": "6/2015"}, {"body": "update already internal bug tracking since run jquery test suite automation reached bug owner details something deliberate changed bug suspect changed match chrome behavior", "d": "6/2015"}, {"body": "jacobrossi thanks looking forward love help well workaround ie sniffs breaks", "d": "6/2015"}, {"body": "jacobrossi thank replay suspect changed match chrome behavior please nt follow chrome behaviour contradicts specification case", "d": "6/2015"}, {"body": "might switch email conversation case cc reybango", "d": "6/2015"}, {"body": "still need ticket nothing else side eg milestone seems wrong", "d": "10/2015"}, {"body": "well still works correctly edge ca nt check might come different way solve leave remainder us bug edge ppl maybe jdalton could shade light like issue different solution overlooked whenever solved soon edge end", "d": "10/2015"}, {"body": "yes keeping milestone creates impression work really wer trying lower number currently like least remove milestone", "d": "10/2015"}, {"body": "done", "d": "10/2015"}, {"body": "looked nt come tiny snippet nt require inserting dom keep kicking around", "d": "10/2015"}, {"body": "trust jdalton thoroughly bugged added note roadmap keeping touch edge focusinout closing issue", "d": "1/2016"}, {"body": "cool cool", "d": "1/2016"}, {"body": "markelog please nt follow chrome behaviour contradicts specification case see anything relevant filed one hollers smaller chance adding", "d": "10/2016"}, {"body": "thank opening issue reflects zindex problem css massive potential abuse complicates signature", "d": "6/2015"}, {"body": "thank opening issue discussed weekly meeting decided would cause many breakages closing backcompat reasons also nt think complication codebase worth case encountered often handled user code", "d": "6/2015"}, {"body": "thanks suggestion already many signatures liking considering first argument behavior differs functions html strings selector strings arraylike objects objects anything handled subsequent method composition preferred though free continue extending functionality shown", "d": "6/2015"}, {"body": "thanks report jquery never supported ie compatibility modes things may break lot configurations basically every ie x ie mode cases currently could decide important like mode would still require additional work make happen thing couple breaking changes coming jquery compat continuation jquery support eg deferreds promisesa compliant likely enterprise upgrade jquery compat comes taking account might fix code breaks nonbackwards compatible changes jquery developing jquery line anymore new browser configuration support would arrive jquery compat make happen know people upgrade version use fact added support seems unlikely thoughs", "d": "6/2015"}, {"body": "thank response agree supporting various compatibility modes internet explorer ridiculous fact supporting one configuration ie ie mode drives crazy control javascript code products would support ie users using ie chrome installed jquery bug seen occurring ie compatibility mode reason nt report bugs agree jquery bugs internet explorer x mode bugs usually work around bugs difference bug regression pointed issue exact code worked jquery stopped working problem working around bug used work thought appropriate report let handle regards jquery compat excited eager try products fortunately control code running jquery products sure upgrade jquery compat soon released speak behalf companies know lot ie dependent code javascript vbscript activex etc enterprise products also use jquery believe benefit new versions jquery may choose upgrade immediately jquery compat released almost sure want road", "d": "6/2015"}, {"body": "know lot ie dependent code javascript vbscript activex etc enterprise thing mode one thing add also mode mode mode etc becomes way harder seems microsoft urging enterprises update use mode transition phase wonder many configurations wild significantly often problem working around bug used work thought appropriate report let handle sure good know problem anyway difference bug regression pointed issue exact code worked jquery stopped working technically speaking regression one version works particular supported browser new one nt unsupported configurations tested may break time btw nt see test removed conditions swapped code code sure problem experience really lies", "d": "6/2015"}, {"body": "enterprise mode offered supposed become standard way enterprises execute legacy intranet apps need functionality early next year real supported microsoft nt much reason anyone test real new development target development enterprises use enterprise mode companies able specifically turn mode old sites need crutch nt need turn mode new code using recent jquery writing today since wo nt using legacy features necessitated mode first place said clarify testing recent version mode sitecode also need run recent firefoxchromesafari supporting ancient code bases probably better using older jquery anyway", "d": "6/2015"}, {"body": "ticket inactive quite closing", "d": "10/2015"}, {"body": "hi please provide us details code causing issue example reproduce using jsfiddle js bin", "d": "6/2015"}, {"body": "attach source code zip file may email address", "d": "6/2015"}, {"body": "nt need send code please use one two services suggest previous comment", "d": "6/2015"}, {"body": "use jquery web applications many js files required downloaded source code ie save also safari webarchive please download sharings safari web archive useful contains js files including ajaxloaded js", "d": "6/2015"}, {"body": "webmailer normally provide minimal jsfiddle showing bug think bug repare two days ago write waiting futur version", "d": "6/2015"}, {"body": "thank opening issue issues need fleshed opened repo said assessment likely correct closing duplicate", "d": "6/2015"}, {"body": "sorry", "d": "6/2015"}, {"body": "thanks found jquery plugin causes error jquery think needs stable write codes like obj obj function codes right jquery plugins failed causes error means plugins written others cause error jquery updated someone fix", "d": "6/2015"}, {"body": "webmailer opportunity fix already nt know exactly choose going next version", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "may related duplicate issue", "d": "7/2015"}, {"body": "related krinkle jquery handling error callbacks crossdomain script jsonp requests inconsistency ajax api explicitly spelled docs issue feature request asking team make behavior consistent requests", "d": "7/2015"}, {"body": "discussed meeting investigate might possible picture", "d": "1/2016"}, {"body": "cc jaubourg", "d": "1/2016"}, {"body": "thank opening issue part spec quoted actually refer programmatically setting value refers cases specifically addingremoving nodes nt apply option element asks reset also nt apply multiple display size options selected makes browser responsible setting first option selected state true believe applies default state dynamic state actually right thing per another part spec selectedindex idl attribute getting must return index first option element list options tree order selectedness set true nt one must return dictates programmatically times selected option passing value present select element set selectedindex discussion", "d": "6/2015"}, {"body": "digging think may actually ie bug apparently running getelementbyid ie decides dump placeholder textarea content", "d": "6/2015"}, {"body": "still see problem describe also newer edge nt something jquery work around easily though quickest workaround app level would compare actual text placeholder text remove match", "d": "10/2015"}, {"body": "nt understand reading fontsize modify surprising may change", "d": "6/2015"}, {"body": "fontsize change however computed ratio document ready inconsistent leaves varying font sizes page loads according docs jquery ready event nt fire dom full constructed javascript provides load event executing code page rendered event get triggered assets images completely received cases script run soon dom hierarchy fully constructed question nt parent height width accurately measured document ready", "d": "6/2015"}, {"body": "fiddle executing anything document ready window load later also please try edge version look weekend micha\u0142 go\u0142\u0119biowski", "d": "6/2015"}, {"body": "unrelated document ready think algorithm fitting problem jquery", "d": "6/2015"}, {"body": "fine reducing cyclomatic complexity needs balanced performance remember john going methods one point reducing number function calls across board increased complexity performance jquery methods across board may much issue tho since longer support ie", "d": "6/2015"}, {"body": "may much issue yeah exactly function calls nt expensive especially comparing", "d": "6/2015"}, {"body": "plus function simple many current browsers inline function big complex functions usually excluded optimizations size always risky think much microoptimization rules changing possible case make code faster modern browsers easier maintain", "d": "6/2015"}, {"body": "offense taken super complex handles many corner cases", "d": "6/2015"}, {"body": "closing favor tracking roadmap principle keep mind modules", "d": "11/2015"}, {"body": "closing favor tracking roadmap", "d": "11/2015"}, {"body": "code snippet nt making sense post complete example jsbincom", "d": "6/2015"}, {"body": "closing due inactivity reopened reduced test case", "d": "6/2015"}, {"body": "sure jquery issue reporting post code example jsbincom perhaps", "d": "6/2015"}, {"body": "wrote small example", "d": "6/2015"}, {"body": "links work identically chrome firefox", "d": "6/2015"}, {"body": "links work identically chrome firefox use shift ctrl softkey written link description", "d": "6/2015"}, {"body": "yes used ctrileftclick shiftleftclick link", "d": "6/2015"}, {"body": "check example firefox chrome windows links dont work idenically link handler respond clicks softkeys though ctrileftclick work shiftleftclick", "d": "6/2015"}, {"body": "nobody op able reproduce", "d": "10/2015"}, {"body": "thanks analysis try android code mostly targetted branch needed ie maybe", "d": "6/2015"}, {"body": "android guess mean less", "d": "6/2015"}, {"body": "yes sorry", "d": "6/2015"}, {"body": "checking", "d": "6/2015"}, {"body": "mzgol thanks", "d": "6/2015"}, {"body": "nt think critical trivial change still clear whether apply close ticket get reply reopened", "d": "9/2015"}, {"body": "timmywil think need jsperf verifying performance impact committing could easily see improvement less work overwhelmed using array methods nonarrays reason change back actually slows us", "d": "6/2015"}, {"body": "fair enough perf tue jun richard gibson notifications githubcom wrote timmywil think need jsperf verifying performance impact committing could easily see improvement less work pushstack overwhelmed using array methods nonarrays reason change back actually slows us reply email directly view github", "d": "6/2015"}, {"body": "timmywil seems like sth done please revert milestone change disagree", "d": "9/2015"}, {"body": "exposed use tests ca nt find docs jqueryuijquerymobile nt use think safe change cc scottgonzalez arschmitz", "d": "6/2015"}, {"body": "markelog nop contrary mzgol said gnarf added tests recently would love make pr think remove", "d": "6/2015"}, {"body": "markelog nop contrary mzgol said gnarf added tests recently tests talking specific changes legacy behaviour would love make pr think remove say okay removal would love would send mzgol nt mind", "d": "6/2015"}, {"body": "used jquery mobile", "d": "6/2015"}, {"body": "three years since rewrote jquery ui easings use one parameter", "d": "6/2015"}, {"body": "pr welcome", "d": "6/2015"}, {"body": "think timmywil gnarf opinions could interesting would suggest wait pull yet", "d": "6/2015"}, {"body": "guess would imagine jqueryeasing plugin still gets lot usage concerned breakage however used", "d": "6/2015"}, {"body": "contacted dev already one month ago find answer mysterious arguments think change part would update plugin copypaste jqueryui right", "d": "6/2015"}, {"body": "think change part would update plugin copypaste jqueryui right opposite jquery ui used import easing plugin rewrote easings scratch years ago", "d": "6/2015"}, {"body": "yeah know said upgrading easily plugin copypaste version", "d": "6/2015"}, {"body": "could also detect arity easing function migrate effects prefilter land backport easing functions provide deprecation warning using migrate", "d": "6/2015"}, {"body": "gnarf good idea", "d": "6/2015"}, {"body": "seems good change pr welcome", "d": "6/2015"}, {"body": "yea good idea gnarf tue jun oleg gaidarenko notifications githubcom wrote seems good change pr welcome reply email directly view github", "d": "6/2015"}, {"body": "believe least chrome devtools using presence objectsplice sth list indicator object arraylike imagine would use purpose similar jquery concept isarraylike method like push sort splice actually right satisfied triggered objects", "d": "6/2015"}, {"body": "case disagree nt deprecate couple reasons part public api would need nt remove used internally long whole time pointed used qualify jquery objects arraylike good nt documented internal use given think leave", "d": "6/2015"}, {"body": "said agree methods internal use moved jquery object easily moved think better leave particular ones", "d": "6/2015"}, {"body": "part public api would need hiding lot methods exposed officially public etc think worth hiding things otherwise people start using end situation exposed untested code people rely change sth may break party code situation nt seem different ones least comes argument nt remove used internally long whole time done amp others yet hiding pointed used qualify jquery objects arraylike good doubt really chrome easily check property presence backwards amp forwardscompatible", "d": "6/2015"}, {"body": "hiding lot methods exposed officially public swap buildfragment dommanip etc like said hiding swap buildfragment dommanip deprecation applies documented apis think worth hiding things otherwise people start using end situation exposed untested code people rely change sth may break party code let make exception agree neither document remove done jqueryswap jquerybuildfragment jquerydommanip amp others yet hiding true something said fact one complained whole time easily check jquery property presence backwards amp forwardscompatible nt feel comfortable asking prefer fit broader rules determine objects arraylike let force vendors make special rules us", "d": "6/2015"}, {"body": "hiding lot methods exposed officially public swap buildfragment dommanip etc like said hiding deprecation applies documented apis right said remove document issue title updated done jqueryswap jquerybuildfragment jquerydommanip amp others yet hiding true something said fact one complained whole time also case amp friends decided hide nt issues easily check jquery property presence backwards amp forwardscompatible nt feel comfortable asking prefer fit broader rules determine objects arraylike see neither firefox edge treats jquery objects special way displays regular objects chrome amp safari sth universal others think cc jquerycore", "d": "6/2015"}, {"body": "btw talking making jquery array subclass nt done mostly due handling impossible correctly crossbrowser amp rwaldron might know already define array methods intended make available possible maybe document methods aliases proper array methods done nt like semiprivate apis problematic", "d": "6/2015"}, {"body": "confirm also never work correctly without builtin subclassing semantics classes", "d": "6/2015"}, {"body": "guess lean towards documenting choose one document think note recommending methods like add issue minor enough feels little like bikeshedding mon jun pm rick waldron notifications githubcom wrote confirm also never work correctly without builtin subclassing semantics classes reply email directly view github", "d": "6/2015"}, {"body": "nt see us ever documenting methods mutate context collection rather creating new one note one public returns properly able jquery object cursory look nt reveal actual use three although could easily oversight part real abandonment ever subclass array possible caveats better size andor performance leave public api unchanged reserve freedom later abandon implementation", "d": "6/2015"}, {"body": "nt looked two used heavily sizzle", "d": "6/2015"}, {"body": "ok think better leave wo nt push nt seem terribly important", "d": "6/2015"}, {"body": "used heavily sizzle usually always actual array instead jquery collection", "d": "6/2015"}, {"body": "yea wow looks like changed", "d": "6/2015"}, {"body": "wonder affected performance", "d": "6/2015"}, {"body": "actually could avoid double loop pushstack uniquesort pushstack beforehand", "d": "6/2015"}, {"body": "looks like commit changed experimenting quick unique check", "d": "6/2015"}, {"body": "yea inclined change back surprised nt catch given tests would fail", "d": "6/2015"}, {"body": "think methods could useful kind cool useful think document", "d": "6/2015"}, {"body": "come conclusion added needs review flag sth decided", "d": "7/2015"}, {"body": "discussion meeting decided leave asis want avoid appearance using methods encouraged nt want remove either", "d": "7/2015"}, {"body": "agree problem good repro sure reasonable way fix jquery even sure dom mutation observers help happen fact probably ca nt tell whether anything removed focus element removed nt appear focus event fires removed element blurs solution think update dom would see subtree affected fake whole focusfocusin sequence focus management ugly bugprone thing sure want go plus could serious performance issues possibilities possible work around app general seems like bad idea remove focus element user may interacting ideally firefox would fix bug pinging miketaylr bring loop", "d": "5/2015"}, {"body": "thanks ping dmethvin ideally someone find site two broken firefox due lack focusinfocusout make better case fixing", "d": "5/2015"}, {"body": "miketaylr thing known events widely supported ppl use jquery use important implement events please add properties window object since way correctly check support events important thing please follow spec chrome implementation", "d": "5/2015"}, {"body": "hey miketaylr dmethvin say ff good case usecase found ticket fiddle updated reality list lis user hits enter li gets replaced value input another li gets generated new input causes issue", "d": "6/2015"}, {"body": "ps fiddle says ff good case seems wrong still would good behave consistently work around", "d": "6/2015"}, {"body": "dmethvin yes possible work around issue implemented fix one affected control however issue affect web platform agree good idea remove element focus complex scenarios happens best solution think fix root cause issue bugmissing feature firefox web browser miketaylr firefox browser still nt support focusin focusout events nicholas czakas nzakas", "d": "6/2015"}, {"body": "one problem even focusout triggered removed element jquery runs parent focusout handlers example console output chrome", "d": "6/2015"}, {"body": "ipetropolsky problem related fact ca nt use focusinout chrome nt according spec see heard rumors microsoft edge might adopted nonspeccompliant chrome behavior would problem although firefox probably give pass nowconsistent behavior even though keeping standard messing focus way hope checked accessibility implications", "d": "7/2015"}, {"body": "think resolved nt jquery jqueryfixable issue close", "d": "10/2015"}, {"body": "maybe something like", "d": "5/2015"}, {"body": "thank", "d": "5/2015"}, {"body": "hmm seems partially took care via see also summary staying ms edge", "d": "6/2015"}, {"body": "search code apart event test place sniff chrome places sniff android ios firefox one place disable focus tests chrome amp ie therefore test place left change said test description amp message changed include edge seems", "d": "6/2015"}, {"body": "yeah seems incorrect remove could report issue documentation issue code issue", "d": "5/2015"}, {"body": "mzgol oh bad thanks done idea long words still use current projects", "d": "5/2015"}, {"body": "bramvanroy anyways better use deprecated feature deprecated reason", "d": "5/2015"}, {"body": "changed behavior although nt documented removed completely nt use find needing use nondebugging purposes generally means api plugin needs selector passed reliable way know string selector represents current set elements jquery set", "d": "5/2015"}, {"body": "thank opening issue think needs debugged forums jquery irc channel determined issue jquery core please open new issue reduced test case help us assess potential problems", "d": "5/2015"}, {"body": "known issue point around long arguably feature cf jaubourg comments related tickets could use like would require careful consideration impact alreadylong list options would consider pull request inclined direct everyone towards native promises full deferreds whose interoperable jquery method exhibit seizing behavior case handled", "d": "5/2015"}, {"body": "imho intended behavior callbacks catch exceptions like recommend using deferreds wrapping code trycatch manually", "d": "5/2015"}, {"body": "sorry sure resolve problem deferreds problem see callback function executed call effect used api register listeners called specific events need listeners called every time called first time also need registered listeners called registered one throws errors one throws error rethrows error ok impact listeners subsequent calls wrapping listener trycatch would ugly cause lot intention behavior really desired maybe documentation improved tell users error handling", "d": "5/2015"}, {"body": "sorry sure resolve problem deferreds problem see callback function executed call effect right need specifically use newly interoperable method need listeners called every time called first time also need registered listeners called registered one throws errors wrapping listener trycatch would ugly cause lot jquery deferreds offer solution seems fit case perfectly option released version need nt ugly though could put wrapper function like attempt even", "d": "5/2015"}, {"body": "feel like leave documenting exception behavior needed encourage standardsbased instead", "d": "5/2015"}, {"body": "ok thanks lot understand mean nt aware requires jquery also thought wrapping callback function like suggested makes removing callback hard since would remove correct wrapper function callback would remember wrapper callback function think live without fix justed thought might problem know yet understand reasons leave appreciate would update documentation think best use api build sth", "d": "5/2015"}, {"body": "thank opening issue suspect duplicate", "d": "5/2015"}, {"body": "jsfiddlejsbincodepen nt support create test case jsbincom remove part url load example url editing might break url viewing work", "d": "5/2015"}, {"body": "thank opening issue problem named function expressions nt work place function declaration binding works", "d": "5/2015"}, {"body": "completeness found article describes exactly wrong creates issue", "d": "5/2015"}, {"body": "also good place signature nt need know function name details way", "d": "5/2015"}, {"body": "dmethvin think meant events namespaces like document clickmynamespace", "d": "5/2015"}, {"body": "nope meant", "d": "5/2015"}, {"body": "dmethvin suggestion unsubscribes handlers case need resubscribe back technique complicates things ps explain sort logic maybe suggest elegant way javascript document click mybutton function handler e var button epreventdefault var promise getsomepromisethatrunsasync promisethen function need undo epreventdefault need native button click since submits form post action handled serverside alternative way javascript document click mybutton function handler e var button buttondata bypassclickhandler return epreventdefault var promise getsomepromisethatrunsasync promisethen function need undo epreventdefault need native button click since submits form post action handled serverside", "d": "5/2015"}, {"body": "dmethvin suggestion unsubscribes handlers case need resubscribe back technique complicates things test case remove handler event handler might mean different things code trying inject code existing page nt control reason think something like", "d": "5/2015"}, {"body": "thanks report problem many libraries shimming core apis poorly react native may turn checking enough another library shims one nt shim necessary apis sure fix properly within factory reactnative create global document lacks basic methods", "d": "5/2015"}, {"body": "thanks digging issue good reason reactnative global variable single key need remove altogether added workaround early project needed anymore", "d": "5/2015"}, {"body": "nt seem like something support jquery library built work html dom expects basic document methods exist fyi removes ajax modules ajax folder well goes would make custom command lot shorter", "d": "5/2015"}, {"body": "anything desired behavior nt fail silently", "d": "5/2015"}, {"body": "ok since vjeux confirmed sth react native amp fix side going close issue thanks everyone input", "d": "5/2015"}, {"body": "thanks replies mzgol vjeux timmywil vjeux saying longer needed set global best solution get rid global document reactnative create issue repo", "d": "5/2015"}, {"body": "yes seems", "d": "5/2015"}, {"body": "use works expected", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "thanks opening issue drop accept header since content sure need set", "d": "5/2015"}, {"body": "copied code used case must include accept header server work relevant issue", "d": "5/2015"}, {"body": "drop accept header since content sure need set response may conditional entirely reasonable request returns either data success based original payload", "d": "5/2015"}, {"body": "entirely reasonable request returns either data success based original payload fair enough however unable reproduce jquery git", "d": "5/2015"}, {"body": "make server return contenttype header return", "d": "5/2015"}, {"body": "hunsu sure sure server nt returning content", "d": "5/2015"}, {"body": "ie empty string still content message body", "d": "5/2015"}, {"body": "test perhaps test using wireshark ca nt right", "d": "5/2015"}, {"body": "response may conditional entirely reasonable request returns either data success based original payload however ca nt expect since empty string content would invalid json server responds content something wrong server responds content still something wrong content invalid json", "d": "5/2015"}, {"body": "used wireshark see response server server returned null request body nt know jquery error message says try parse empty string pumpuli yes server something wrong question jquery try parse content included content response", "d": "5/2015"}, {"body": "means content browser free stop reading response headers end assuming body nt check may happening anything gets jquery definity incorrect return body jquery optimized workflow correctly configured servers incorrectly configured ones declare datatype text parse response expect json", "d": "5/2015"}, {"body": "problem code nt ask jquery parse response anyway", "d": "5/2015"}, {"body": "parsed response server told returns json need either fix server enforce datatype text", "d": "5/2015"}, {"body": "correct status say non content response parse response", "d": "5/2015"}, {"body": "response server incorrect assuming means response body valid json may lot invalid server configurations cant workaround server bug jquery easily workaround wrote", "d": "5/2015"}, {"body": "http spec say http nt body jquery must try parse feature live jquery nt respect http spec problem", "d": "5/2015"}, {"body": "http spec nt say anything parsing body well might well return text always beyond spec imo also according spec contenttype entityheader field indicates media type entitybody sent recipient case head method media type would sent request get set response nt contain data one exception head method response nt contain data definition argue server config invalid jquery nt specify behavior invalid input anything may theoretically happen", "d": "5/2015"}, {"body": "http spec say http nt body jquery must try parse spec nt say however spec say response must include messagebody thus always terminated first empty line header fields", "d": "5/2015"}, {"body": "case think actually helpful jquery tried parse response failed uncovered server issue leave asis", "d": "5/2015"}, {"body": "think right chromefirefox case think means include html tags values need encoding opinion afraid expressions may rude hard read good english thanks", "d": "5/2015"}, {"body": "thanks report examples valid semantically identical allows quoted attribute values contain character references arbitrary unescaped lessthan greaterthan considering cost performance library size parse normalize wo nt pursuing effort try force attribute values particular quoting style", "d": "5/2015"}, {"body": "understand makes sense", "d": "5/2015"}, {"body": "thank opening issue however nt released beta yet jquery folder src folder installing jquery", "d": "5/2015"}, {"body": "timmywil ah updated file tree ignore pulled repo looking adding pull request add brocfile exporting amd version jquery part", "d": "5/2015"}, {"body": "gotcha thanks", "d": "5/2015"}, {"body": "arises combination browser bugs lies code guard problem firefox regarding delegated rightclick events bubble tbh sure firefox still problem make worse use arrow keys example firefox chrome event says left mouse button clicked lie ie says button clicked true triggers firefox bug check think fix changing perhaps guard removed completely firefox fixed bug long ago btw ca nt find standard defines happens arrow keys radio button group", "d": "5/2015"}, {"body": "thanks quick response played code using everything appears work expected create local patch purposes overrides helper method added milestone", "d": "5/2015"}, {"body": "appears firefox nt fixed bug years old take conservative approach leave guard place modifying check edit reproduced firefox", "d": "9/2015"}, {"body": "dmethvin marked issue mentioned one blocking jquery metaissue", "d": "9/2015"}, {"body": "intended known nt applied fix yet size complexity proportion magnitude resolved issues", "d": "5/2015"}, {"body": "dup see also cause", "d": "9/2015"}, {"body": "fixed jquery version", "d": "4/2017"}, {"body": "edoardocavazza provide relatively simple test case could use detect ideally include polymer since unit test use cases code trying get styles shadow root", "d": "9/2015"}, {"body": "nt heard back closing need test case use case", "d": "10/2015"}, {"body": "hmm sure necessary nt hurt copy", "d": "5/2015"}, {"body": "moved tickets apimigrate", "d": "5/2015"}, {"body": "remember keyboardevent mouseevent pretty screwy keyboard event supposed use instead long time preferred property copy normalized event present neither created another confusing set properties mouseevent also took years browsers get right supports natively time two properties screwed browsers decided normalize docs say nt copy lot people may using already nt care could deprecate migrate warn better choices problem would compat branch needs never normalized andor also note may high perf penalty see events like mousemove mouseover happen lot", "d": "5/2015"}, {"body": "copying already causes performance penalty firefox cases see fitzgen made aware nt time measure exactly slowing everything linked pr jquery patched use getters instead copying significantly speeds firefox understand", "d": "5/2015"}, {"body": "probably calculation force layout changing getter avoids long user event handler nt ask since deprecated properties nobody use supported present handy perf standpoint would best deprecate well even shim getter poison use", "d": "5/2015"}, {"body": "well deprecated may cause performance penalty could remove favor keeping deprecated perf issues bad thing especially bad parties patch code make palatable", "d": "5/2015"}, {"body": "normally copying bad forces style recalculation layout offsetposition properties see although frequent events mousemove copy loop pretty significant even without relayout", "d": "5/2015"}, {"body": "think deprecate feel comfortable removing market share low enough drop", "d": "5/2015"}, {"body": "although frequent events mousemove copy loop pretty significant even without relayout right pr changing copying multiple purelyjs stand point replacement slower seems actually reading property must causing perf penalty think deprecate feel comfortable removing market share low enough yeah causing perf issues might example change copying using getters cases supported would require actual examples test though guessing", "d": "5/2015"}, {"body": "browsers truly support seems like could define load time lazycopy lazyevaluate everything removes copy overhead event delivery complications code may define time execution expect next event delivery reflect changes would good deprecate behavior well could optimize future", "d": "5/2015"}, {"body": "like dmethvin said could prototype moves performance issues slow getter style recalc gettime also removes fix loop makes false though nt think see poc commit handled issue mentioned dmethvin", "d": "5/2015"}, {"body": "hey jbedard jbedard guy something smilecat love way handles dynamic adds fixhooks would able add perf test wondering fast enough", "d": "5/2015"}, {"body": "docsonly action see actual removal occur", "d": "1/2018"}, {"body": "thanks opening issue please provide reduced test case help us assess problem", "d": "5/2015"}, {"body": "since nt reply closing ticket", "d": "9/2015"}, {"body": "internally uses iterate object according spec order iteration object defined mechanics order enumerating properties specified must conform rules specified therefore rely order jquery nothing help", "d": "5/2015"}, {"body": "see also note microsoft stop supporting january really worth lot additional heroics point", "d": "5/2015"}, {"body": "dmethvin see point still think would nt hurt change maybe even wo nt make attribute suddenly work allow create solutions without hacking missing something", "d": "5/2015"}, {"body": "might prevent error wo nt make form elements work string property though big fan silent failure really nt support form features anyone wants support need deal", "d": "5/2015"}, {"body": "reason decide go using attribute know implement solution make work oldie nt know moment jquery throw errors instead planned polyfill dig jquery code understand error comes", "d": "5/2015"}, {"body": "replace prophook fix exactly analogous", "d": "5/2015"}, {"body": "oh true nt even think using prophook", "d": "5/2015"}, {"body": "replace prophook fix let make sure understand correctly suggest switch jquery users define proper need support need workaround issue", "d": "8/2015"}, {"body": "correct", "d": "8/2015"}, {"body": "fixed note use make work ie register one polyfills form features", "d": "9/2015"}, {"body": "timmywil changes necessary apart modifying works release script", "d": "5/2015"}, {"body": "nope sufficient copied release script", "d": "5/2015"}, {"body": "pr", "d": "5/2015"}, {"body": "see also", "d": "5/2015"}, {"body": "gon na log ticket desc need", "d": "5/2015"}, {"body": "closing favor tracking roadmap", "d": "11/2015"}, {"body": "supposed events fired browser direct user interaction elements", "d": "5/2015"}, {"body": "tried recent version code looks different performed asneeded basis", "d": "5/2015"}, {"body": "hi refer jquery version using version compatible old browsers", "d": "5/2015"}, {"body": "dave meant jquery micha\u0142 go\u0142\u0119biowski", "d": "5/2015"}, {"body": "ok tested latest version problem similar call divoffsetwidth takes seconds line supportinlineblockneedslayout val divoffsetwidth", "d": "5/2015"}, {"body": "rubenortizgonzalez thank making us aware could copy test case us", "d": "5/2015"}, {"body": "hi timmy impossible copy file jsbin shared file source testhtml file references jquery version modified print console times document ready functions", "d": "5/2015"}, {"body": "impossible copy file jsbin jquery various feature detects force layout would expensive document size version taken done lazy basis think really best solution load html needed initial view pull rest via make page load faster", "d": "9/2015"}, {"body": "ing function makes semantic sense deoptimize objects properties something keep mind", "d": "5/2015"}, {"body": "pure guessing first object already deoptimized since lot bounded properties second special host object might another type optimizations play would nt rely assumptions proved performance benchmarking", "d": "5/2015"}, {"body": "timmywil dmethvin jaubourg need opinions also would like know perception nt change", "d": "5/2015"}, {"body": "agree pretty magic global doubt optimization comes play would make sense create single object initialization put jsonp callbacks would work since ing properties regular object rather global", "d": "5/2015"}, {"body": "would mean would expose three globals soon dead could eliminate cool although seems would need one browser", "d": "5/2015"}, {"body": "like idea using means delete every browser except receives change", "d": "5/2015"}, {"body": "reduced test case also able reproduce opposite text outside iframe red text inside iframe red", "d": "5/2015"}, {"body": "also created another test case use delay nt problems delay get different results differents runs hope helps", "d": "5/2015"}, {"body": "interesting switching order affects outcome outcome become inconsistent small settimeout intervals wonder kind race condition", "d": "5/2015"}, {"body": "right think problem chrome browsers bug nt happen tried replicate problem using native methods unfortunately could nt try later using jquery internal code see exactly causes chrome fail case fact passing string directly solves problem might mean possible add something avoid bug", "d": "5/2015"}, {"body": "technically invalid trying append nodes foreign document failure arguably bug chrome especially behaves unpredictably face timeoutsbreakpointsetc definitively one jquery explicit ownerdocument corrects issue", "d": "5/2015"}, {"body": "thanks help close things think something worth reporting webkitchromium teams fine changing approach application wonder behavior still investigated", "d": "5/2015"}, {"body": "think definitely weirdness could clean", "d": "5/2015"}, {"body": "documentation says note successful controls serialized string submit button value serialized since form submitted using button dup latter discussed discoverable via google", "d": "5/2015"}, {"body": "submit button value serialized since form submitted using button ok wrong design successful control must defined within form element must control name however form contains one submit button activated submit button successful definition form one submit button succesful says activated submit button nt say anything submitted using button submit event triggered clicking given submit button ca nt see way consider activated submit button", "d": "5/2015"}, {"body": "serialize using code button pressed wrong button press triggered submit event button press triggered code need add serialized input nt", "d": "5/2015"}, {"body": "documentation says method tickets explain reasoning submit button activated call within jquery besides would unfair change behavior penalize people read documentation", "d": "5/2015"}, {"body": "documentation says method got documented sorry missing yet behavior wrong tickets explain reasoning wrong submit button activated call serialize within jquery unless call listener triggered pressing button besides would unfair change behavior backward compatibility argument indeed considered whether fix behavior break bc keep wrong inconsistent behavior sake bc seen bc broken past jquery favour improved consistency also easy incur case change would actually harm though course possible penalize people read documentation indeed could penalizing people read documentation worked around incorrect documented behavior see", "d": "5/2015"}, {"body": "unless call listener triggered pressing button would jquery know opposed called way show code", "d": "5/2015"}, {"body": "omg reason aggressive dmethvin modify methode impossible linked event include something event maybe possible new look", "d": "5/2015"}, {"body": "aggressive frankly nt think one aggressive", "d": "5/2015"}, {"body": "modify serialize methode impossible may missing something could nt documentactiveelement used inside seriazize nt example demonstrate would work", "d": "5/2015"}, {"body": "activeelement current dom element actually focus jquery serializing form suppose ca nt guaranty focus still submit button", "d": "5/2015"}, {"body": "nt example would nt work either would", "d": "5/2015"}, {"body": "hmm yep use activeelem callback depending event callback call methode want callback", "d": "5/2015"}, {"body": "course call anything else submit event ok submit button included serialization automatically succesful input element definition question whether using activeelement reliable crossbrowser worth investigating issue reopened also turns work cases pretty sure ways explored issue always dismissed non existing also according definition successful given standard one submit button always included unless caveat seems trivial", "d": "5/2015"}, {"body": "question whether using activeelement reliable mean whether three cases submit button triggering event triggering serialize may active element reason", "d": "5/2015"}, {"body": "mean whether three cases submit button triggering event triggering serialize may active element reason extremely common occurrence forms frequently submitted via form controls see", "d": "5/2015"}, {"body": "extremely common occurrence forms frequently submitted via form controls occurrence talking sending form via form controls either one submit button case according definition succesful controls given standard submit button included trivial implement serialize search submit buttons inside form check one b one sent form via another form control none buttons succesful hence ok included serialize actually seems discrepancy definition succesful standard cited browser behavior least chrome chrome sending form without javascript sends first submit input element send form hitting enter correct behavior case definition standard either unclear missing something serialize behave trivial matter finding first submit element none activeelement", "d": "5/2015"}, {"body": "occurrence talking actually said call anything else submit event ok submit button included serialization automatically succesful input element definition since impossible know inside submit event suggested use detect implicit form submission shows check viable solution", "d": "5/2015"}, {"body": "since impossible know inside submit event suggested use documentactiveelement detect implicit form submission shows check viable solution meant submit event triggered clicking submit button implicit submission see last comment", "d": "5/2015"}, {"body": "implicit submission see last comment mmm sorry alone nt enough distinguish whether inside submit event impossible know inside submit event nt bit fast declaring impossible detect submit event right nt possible jquery store variable reference form jquery intercepts submit event userdefined listeners added via jquery executed reset variable null whatever jquery finishes processing submit event serialize would able check whether called within submit event guess trivial impossible", "d": "5/2015"}, {"body": "value notoriously unreliable set consistently browsers even throws errors versions ie jquery core jquery ui incorporate workarounds plus cases like detached elements crossframe access value wo nt correct available huge amount magic apply get value cases instead simple note docs saying nt add add big list conditions fail browser issues nt see worth inconsistency especially people nt read existing docs making complicated wo nt help things looking simple workaround put hidden input form namevalue pair want send submit button nt give submit button name wo nt successful submitted user without javascript", "d": "5/2015"}, {"body": "value documentactiveelement notoriously unreliable ok solution detect submit event right nt possible jquery store variable reference form jquery intercepts submit event userdefined listeners added via jquery executed reset variable null whatever jquery finishes processing submit event serialize would able check whether called within submit event looking simple workaround nt hoping better jquery one would nt need workaround order form guaranteed serialized always exactly way would sent browser understand lack mostly javascript fault apparently nt provide method obtain obliging ie jquery write scratch code serialization mimic browser would", "d": "5/2015"}, {"body": "seems like good place", "d": "5/2015"}, {"body": "boo plain objects right", "d": "5/2015"}, {"body": "started wiki page use iterate might little easier pr maybe harder dunno start editing ideas want people nt generally read usually us linking justify changing changing reported behavior", "d": "11/2015"}, {"body": "following saying outerinner widthheight ones probably one pr scroll ones another think two tickets atomized issues helpful tracking progress helpful triaging broad issues guidelines specific actions need taken moved roadmap make sense", "d": "5/2015"}, {"body": "think runs risk incompleteness know eight methods need change might without tracking ticket could land fix scroll methods fix dimension methods erroneously consider work done really nt want look multiple places understand going", "d": "5/2015"}, {"body": "one place roadmap tracking instead ticket item roadmap need removed tickets closed leave sure done purpose another advantage longer leave tickets lying open unsure done ambiguity issues combined roadmap incompleteness", "d": "5/2015"}, {"body": "also roadmap keeping updated broader issues gives us one place see going without sifting issues know found many times looking one ticket explains ones proposing put one place", "d": "5/2015"}, {"body": "roadmap plus github issues makes two places mention former repository makes project even less accessible wouldbe contributors correctable though willing go honestly nt see advantage adding new issue tag", "d": "5/2015"}, {"body": "nt participate related ticket sorry question returned value sometimes known getters return nothing return believe done jquery first place better corresponds dom methods like common many languages although methods usually deal objects hand easy especially since return value already could correlates ecma spec jquery domcentric might make sense align case would like us documentally establish couple years would nt face opposite ticket would propose always return instead brendaneich rwaldron please help us", "d": "5/2015"}, {"body": "markelog dom arguments essentially nt apply ticket calling methods empty collections eg", "d": "5/2015"}, {"body": "see difference nothing return returned", "d": "5/2015"}, {"body": "difference context collections length valid input therefore defined output invalid context example undefined output might even throw exceptions", "d": "5/2015"}, {"body": "design documents think prefer see wiki like adding new features could imagine document described ideals jquery api calls behave including definition happen empty context set perhaps could also document apis know consistent philosophy reasons backcompat old jquery versions conformance output etc github issues nt good generating roadmap us way trac maybe missing open issues milestone report even sort milestone suppose future best obviously finegrained future milestones want back subject ticket seem like benefit consistency outweigh work potential compat breakage seems like one weighed separately given separate ticket ultimately thrown vagaries jquery code plugin ecosystem see badly break web", "d": "5/2015"}, {"body": "right really rather use issues anymore let use roadmap please atomize issues", "d": "5/2015"}, {"body": "way add note roadmap represents contributingmd gone issues updated", "d": "5/2015"}, {"body": "difference context collections length valid input function return nothing return difference context collections length valid input therefore defined output invalid context scrolltop example undefined output might even throw exceptions plain objects supported sure undefined output call nt makes sense inputs supported could imagine document described ideals jquery api calls behave including definition happen empty context set would awesome", "d": "5/2015"}, {"body": "function return nothing return nothing return calldependent eg currently returns returns recently tried change return values invalid input unspecified trying establish consistency around returning plain objects supported sure undefined output call nt makes sense inputs supported plain objects supported present operations supported plain javascript objects wrapped jquery see also", "d": "5/2015"}, {"body": "plain objects supported present operations supported plain javascript objects wrapped jquery data prop trigger triggerhandler see also jqueryapijquerycom hm missed link okay nothing return calldependent eg jquery body val currently returns prop nonexistent returns undefined recently tried change attr nonexistent undefined null asking returns asking return return values invalid input unspecified trying establish consistency around jquery getter returning undefined whatever getters would return think follow general idea explain specifically empty string etc right seems trading one value another without reason", "d": "5/2015"}, {"body": "asking returns asking return still calldependent maintain return like dom return like javascript property accessors even though backwards compatibility makes change difficult right seems trading one value another without reason methods return etc trading values bringing exceptions line", "d": "5/2015"}, {"body": "trading values okay changing return values phrasing suiting think need verbose explanation one value follow general principal recommended plugins", "d": "5/2015"}, {"body": "updated wiki page reflect api design goal everyone okay take milestone", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "dmethvin btw change tenets rules former word may barrier nonnative speakers commonly used", "d": "11/2015"}, {"body": "note second reversal still think correct return empty set case acceptable milestone allows breaking changes", "d": "11/2015"}, {"body": "thanks opening issue think mean like get selected text case think best left plugin like get text content already done using", "d": "5/2015"}, {"body": "provide test case jsbincom jsfiddlenet showing mean", "d": "5/2015"}, {"body": "sure see write timeouttester purpose ticket maybe jsbin reproduce issue yes", "d": "5/2015"}, {"body": "thanks opening issue confused looks like right behavior since done called timeout", "d": "5/2015"}, {"body": "problem gets called timeout nt exist gets removed timeout period likely solution keep callback around timeout replace", "d": "5/2015"}, {"body": "oh oh sorry", "d": "5/2015"}, {"body": "think decision remove timedout jsonp handlers made haste mistaken gives user nice warning script errors least ability keep timedout jsonp handlers around optional move reopen application throws errors way handle using forked version jquery", "d": "5/2015"}, {"body": "haste discussed two years see discussions tickets fighting death used throws errors way handle using forked version jquery argument couple times summoned browser vendors showed way inconsistent bunch things maybe another life", "d": "5/2015"}, {"body": "polling every seconds jsonp calls continue time would pretty large pile uncollected function callbacks might ever collected understand firefox correct", "d": "5/2015"}, {"body": "dmethvin like suggestion bug affects chrome well tested ie", "d": "5/2015"}, {"body": "dmethvin said three years ago chrome affected since opera dropped engine time ago option always generates error supported environments documentation outdated yeah would pretty large pile uncollected noop function callbacks might ever collected yes thing happens instead proposed value would point function point thing discuss seems proposed solution would eat less memory secrettriangle good suggestion although obvious drawbacks case jsonp request returns something js js executed callback would throw error function would never collected workaround using jsonpcallback name let jquery generate", "d": "5/2015"}, {"body": "still seeing", "d": "5/2015"}, {"body": "works fine issue latest production version versions earlier", "d": "5/2015"}, {"body": "ok wanted sure fixed next major release", "d": "5/2015"}, {"body": "forgot mention tested osx chrome version k", "d": "5/2015"}, {"body": "event nt bubble elements ca nt used delegated events mentioned documentation browsers load scroll error events eg element bubble", "d": "5/2015"}, {"body": "dupe", "d": "5/2015"}, {"body": "mzgol ok true solution click event must handled next listeners", "d": "5/2015"}, {"body": "actually dup please comment want get reopened let avoid spreading discussion accross multiple issues", "d": "5/2015"}, {"body": "thank opening issue exists", "d": "5/2015"}, {"body": "dup", "d": "5/2015"}, {"body": "see jquery love jquery wo nt leave even could guys sources utterly unreadable outsiders like p ca nt check problem remains sorry try", "d": "5/2015"}, {"body": "thanks opening issue please provide reduced test case help us assess issue issue already addresses issue please close ticket duplicate thanks", "d": "5/2015"}, {"body": "closing inactivity dupe concrete test case report little vague reopen", "d": "6/2015"}, {"body": "please vague look jquery window width height return incorrect different values depending long page open code posted works correctly time wasting time building ya fullon reduced testcase ya take decentsized jpg resize jquery window resize myresize function myresize jquery jpeg css width jquery window width height jquery window height run go apple store using jquery call anymore using code posted earlier fix part javascript framework code", "d": "6/2015"}, {"body": "wasting time building ya fullon reduced testcase ya sorry dig every single code nt work developer wants work voluntary wants something get fixed need try help us understand issue nt know exact nature problem forums amp stack overflow places pinpoint issue hope realize wasting time attitude making us likely fix issue opposite", "d": "6/2015"}, {"body": "seductiveapps removed offensive comment locked issue nt", "d": "6/2015"}, {"body": "first case think accurate retrieving offset disconnected element nt make much sense think second support failing silently returning undefined", "d": "5/2015"}, {"body": "nice thing returning naive caller expecting object die code easier debug nt document returns anything object okay since unhandled cases mentioned docs", "d": "5/2015"}, {"body": "failures stuff like element window offset use method return context collection empty part larger story though kinds things expect see failures mild api misuse easy consumers fix serious valid vs invalid input code want know end backing every change", "d": "5/2015"}, {"body": "serious valid vs invalid input code want know end backing every change case returning undefined still one way handle invalid input everything needs throw error right", "d": "5/2015"}, {"body": "yes things like agree easy fix fix regardless outcome however problem pretty buried code hard track", "d": "5/2015"}, {"body": "also return disconnected hidden nodes would throw window return undefined cases returning undefined invalid case would seem better", "d": "5/2015"}, {"body": "case returning undefined still one way handle invalid input everything needs throw error right nt want handle invalid input creating errors exposing assuming input valid check conditions tell consumers avoid creating words input invalid explicitly check", "d": "5/2015"}, {"body": "input invalid explicitly check see point", "d": "5/2015"}, {"body": "return undefined disconnected hidden nodes would throw window well looking side slightly different disconnected elements still window current behavior reflects native way", "d": "5/2015"}, {"body": "good point arschmitz guess consider element valid input output literally layout boxes", "d": "5/2015"}, {"body": "another side release yet current stable jquery work version ui sure really care though", "d": "5/2015"}, {"body": "bright side returning makes error happen caller side expecting minor plugin rare user mistake say let leave asis breaking current past ui gon na make mess", "d": "5/2015"}, {"body": "failures stuff like element window offset use element offset method return undefined context collection empty code arschmitz showed simplified reality happens determining element operate default element window later get offset element getting error already guards windows parts code adding another one fine", "d": "5/2015"}, {"body": "also nature implementation nolayout elements ignored truly invalid input output would indistinguishable valid input since returns coincides elements located origin", "d": "5/2015"}, {"body": "scottgonzalez yeah like said think fix regardless core backs change", "d": "5/2015"}, {"body": "like point disagree invalid input handled problem figuring much change right without causing much ruckus would nt interpret change policy change applied throughout codebase arschmitz breaking change noticed far regards well previous versions ui work jquery", "d": "5/2015"}, {"body": "timmywil yes think breaking change within actual code point scottgonzalez aware others think couple come got backed", "d": "5/2015"}, {"body": "sorry came across strong thinking precisely changes got reverted feedback jquery ui valuable cases see us expanding domain valid input support broader use maybe one would nt consider unreasonable ui lt ui break core without migrate purpose migrate opinion allows us flexibility move forward preserving temporary backwards compatibility nt want see us stuck particularly important still healthy downstream consumer happens currently misuse functionality", "d": "5/2015"}, {"body": "saying migrate fix least right", "d": "5/2015"}, {"body": "would nt consider unreasonable ui lt ui break core without migrate agreed handle ui regardless also push support core history going back unexpected releases get support new versions core since eases upgrade path users", "d": "5/2015"}, {"body": "arschmitz", "d": "5/2015"}, {"body": "say caused much problems ui cause lot problems userland would go safest way possible blog post explicitly mention incorrect use api document yeah sounds weird put warnings migrate next major technically speaking absolutely right practically way dangerous taste", "d": "5/2015"}, {"body": "record breaking things mobile well though nearly extent", "d": "5/2015"}, {"body": "arschmitz would mobile breakages addressed stands", "d": "5/2015"}, {"body": "behavior invalid input undefined since getting offset window defined behavior may throw error may going let migrate take one turns causes much uproar user code address beta release", "d": "5/2015"}, {"body": "think letting migrate handle seems like good way go agree calling window make sense timmywil believe addressed us gabrielschulhof would know better since debugged issue submitted patch", "d": "5/2015"}, {"body": "arschmitz timmywil test pr flatout mobile", "d": "5/2015"}, {"body": "arschmitz timmywil actually fix assertions fail", "d": "5/2015"}, {"body": "timmywil issue discussion change thought changes first part opening comment returning undefined hidden detached elements tests however wrong think potential break things userland change handled comes ui mobile quite bit turns jquery ui mobile allow widgets instantiated default element detached state via also general allow instantiating widgets detached elements improved performance among reasons also many many situations widget plugin sort may instantiated called inside hidden container major issue plugin authors cant ever reasonably know may inside hidden container think popups panels etc jquery mobile everything hidden page initialized means past could call element worry need always check return value using make lot code go knows would surprise start seeing things used lot something like worry change essentially makes plugin author never safe use first checking return value unless direct response user action essentially cant happen hidden detached elements example dragging mouse interaction type stuff case many cases ui", "d": "5/2015"}, {"body": "fact used setter also crashes bad way avoid crash calling setter find first whether element disconnectedhidden code hugely bad element disconnected querying setting coordinates close succession causes reflows", "d": "5/2015"}, {"body": "well either wo nt thrash dom dunno block", "d": "5/2015"}, {"body": "gabrielschulhof correct wrong wont really work call collection one elements either hidden disconnected terminate soon hits first hidden disconnected element continue rest collection", "d": "5/2015"}, {"body": "true need try inside callback", "d": "5/2015"}, {"body": "timmywil seems need discuss", "d": "5/2015"}, {"body": "arschmitz gabrielschulhof good point checking element disconnected setting seem expensive would comfortable continuing allow throw returning zeros disconnected elements nt necessarily make sense get offset disconnected elements behavior would actually line native gbcr", "d": "5/2015"}, {"body": "gabrielschulhof code hugely bad element disconnected querying setting coordinates close succession causes reflows already inherent part offset setter arschmitz knows would surprise start seeing things used lot something like worry explicitly providing default data later code like old behavior entirely appropriate expected libraryplugin code fact briefly setter call collection one elements either hidden disconnected terminate soon hits first hidden disconnected element continue rest collection hand strikes problem may sufficient reason back arschmitz gabrielschulhof often simultaneously set offset one element", "d": "5/2015"}, {"body": "would comfortable continuing allow window offset throw returning zeros disconnected elements yes would would recommend window change rare simple fix long handled migrate see issue issues offset hidden elements specifically seems like much bigger problem honestly make pita use often simultaneously set offset one element im aware case either library done think one case ever first thing thought looking code documentation says set current coordinates every element set matched elements relative document specifically mentioning collections supported behavior would actually line native gbcr seems like valid point", "d": "5/2015"}, {"body": "moment shipping version ui works jquery core due change need migrate shims behavior adding sure everyone okay would personally comfortable ui branch something worked long ui ready far action items core nt need make clear upgrade guide blog post people need migrate want use ui", "d": "6/2016"}, {"body": "last rc likely released next week final release probably weeks", "d": "6/2016"}, {"body": "scottgonzalez plan hotfix making ui compatible jquery would hard achieve", "d": "6/2016"}, {"body": "worth noting also work current release jquery mobile without migrate jqm ui also planning release soon planning patch support going bit lot breaking changes mobile need sort need patched", "d": "6/2016"}, {"body": "plan hotfix making ui compatible jquery would hard achieve would simple patch would probably cherrypick cleanly even fixed ui sure release timing though", "d": "6/2016"}, {"body": "scottgonzalez plan hotfix making ui compatible jquery would hard achieve looking involved release right far narrowed commits reviewed inclusion release work list test jquery git", "d": "6/2016"}, {"body": "note jquery method docs regarding text nodes also applies general comment nodes passing html jquery note text nodes treated dom elements exception methods content generally ignored removed looks like added docs", "d": "5/2015"}, {"body": "agreed pr open adjust docs text nodes making clear supported operations added note requesting comment nodes included adjustments", "d": "5/2015"}, {"body": "phistuck confirm break client site happened using jquerygitjs seeing identical behaviour", "d": "5/2015"}, {"body": "wow nt use jquerygitjs production ever", "d": "5/2015"}, {"body": "mzgol haha yep never since site happened first paid job many year ago definitely bad idea surprised survived long", "d": "5/2015"}, {"body": "intended behavior change jquery fixes longstanding issues", "d": "5/2015"}, {"body": "extremely common case presented recommended solution", "d": "5/2015"}, {"body": "somewhat related supposed go changing", "d": "5/2015"}, {"body": "jzaefferer currently mirrors mirrors ie development lines set way time ago tools like jsfiddlejsbin pull newest jquery testing still works jsfiddle amp jsbin use new urls remove amp", "d": "5/2015"}, {"body": "see well start permanent redirects deleting jquery ui use testing projects might kind official information changes would quite useful", "d": "5/2015"}, {"body": "jzaefferer amp point file effectively testing twice amp", "d": "5/2015"}, {"body": "meant test", "d": "5/2015"}, {"body": "getting back track though recommended solution extremely common use case presented", "d": "5/2015"}, {"body": "hide class remove class eg put element done beforehand html later js said behavior change trial run tickets like think solutions performance cascade issues fixed", "d": "5/2015"}, {"body": "possibly revert live certain issues", "d": "5/2015"}, {"body": "hide class remove class eg removeclass hidden eliminate unnecessarily complicate use basic animations also impossible plugin author put style display none element done beforehand html later js css display block hide inline styles using javascript set preferred initial rendering state said behavior change trial run tickets like think solutions performance cascade issues fixed say must reverted end massive uproar", "d": "5/2015"}, {"body": "eliminate unnecessarily complicate use basic animations different setting inline styles", "d": "5/2015"}, {"body": "say must reverted end massive uproar nt think simple basic usage showhide causing noticeable performance issues", "d": "5/2015"}, {"body": "still discussing reopen", "d": "5/2015"}, {"body": "reason exactly see much effect would wip nt yet done beta release blog post changes certainly valid use cases gun unfortunately common use seems shooting feet compatibility arguments definitely keeping quirky edge cases existing code change revert go back recommending people avoid showhide use classes since nuances hard developers understand nt say disrespectful methods evolved lot complex expensive developer intuition says", "d": "5/2015"}, {"body": "well matter much recommend never viable solution plugin authors", "d": "5/2015"}, {"body": "alluded animating cascadehidden elements still accomplished bring trivial many cases damn near impossible others builtin allsinging alldancing iframe implementation completely untenable reliable way us figure proper display value arbitrary hidden elements", "d": "5/2015"}, {"body": "scottgonzalez mentions new method make things difficult plugin authors new method nt override hidden attribute demo would need use nt understand iframe needed previously given display option finite number settings would nt even need supported like amp could nt crossreference display settings based element work well", "d": "5/2015"}, {"body": "content hideshow candidate unlikely add remove hidden attribute dynamically spec says hidden attribute must used hide content could legitimately shown another presentation example incorrect use hidden hide panels tabbed dialog tabbed interface merely kind overflow presentation one could equally well show form controls one big page scrollbar similarly incorrect use attribute hide content one presentation something marked hidden hidden presentations including instance screen readers", "d": "5/2015"}, {"body": "could nt crossreference display settings based element work well aside enormous necessarily incomplete custom elements possible headed towards standardization list could also rendered inaccurate css overriding default display values edge cases like first drove us look default values iframe clearing inline display failed show element drive us stop trying like keep saying know application better therefore know right way reveal element animation could leverage crossplatform way inspect full cascade getting right absent nt seem worth necessary contortions said however special case clear every show animation would willing", "d": "5/2015"}, {"body": "said however hidden special case clear every show animation would willing like dave pointed nt even seem like correct usage", "d": "5/2015"}, {"body": "like keep saying know application better therefore know right way reveal element animation playing devil advocate second totally true sometimes making best guess better nothing nervous behavior change stylesheethidden elements still get feeling going cause uproar however nt want revert everything done falling back stylesheethidden elements would nt need read display value performance issue obama website nt display data user cares different display values responsive layouts would still way make work ie hiding elements stylesheet", "d": "5/2015"}, {"body": "mentioned possibility curious intend detect stylesheethidden elements without reading display value cf replaced", "d": "5/2015"}, {"body": "going blog post asking community feedback issue", "d": "6/2015"}, {"body": "code one ideas mentioned meeting", "d": "6/2015"}, {"body": "dmethvin paragraph example bit confusing think may misinterpreted said content hideshow candidate unlikely add remove hidden attribute dynamically example spec shows situation set property dynamically form hidden element shown user logs think agree exactly folks use jquery today quote guidelines spec hidden attribute must used hide content could legitimately shown another presentation similarly incorrect use attribute hide content one presentation something marked hidden hidden presentations including instance screen readers interpret meaning intend screenreader still able access content nt use holds true use element use totally hidden everything including screen readers example incorrect use hidden hide panels tabbed dialog tabbed interface merely kind overflow presentation one could equally well show form controls one big page scrollbar makes lot assumptions tabpanel used think tripped read one way implies nt use even tabpanel true every tabpanel implementation seen uses hidden panels associated selected tab sometimes also really hammer hidden screen readers read another way think intended meaning means intention perform overflow management presenting user subset large set content wrong tool use hides rest content completely really sight yet actively hidden assistive technology keyboard navigation without debating intention tabpanel think agree user calls intend content hidden visually screenreaders exactly works sets believe toggling attribute jquery would line spec", "d": "7/2015"}, {"body": "understanding problem using iframe default display elements right use something like pr simply allowing adding edgecases advanced developers would see documenting add new elementname defaultdisplay mapping support defining new elements someone must also like approach jquerymobile standard event works need performance forcing someone use something complicated something simple might end loosing way high performance maybe introduce something like simply assume always showhide something element introduce takes default display first parameter", "d": "7/2015"}, {"body": "keeping old behavior hidefadeslide around form attempted use velocityjs version fadeslide yeah faster taking account edge cases made less useful", "d": "7/2015"}, {"body": "please nt css nt depend js lib use plugin authors ca nt dictate users use ridiculous expect css styles revised new jquery plugin want use jquery forget upgrade main point css nt care js libs please follow single responsibility principle", "d": "7/2015"}, {"body": "plugin authors ca nt dictate users use one solution problem would timmywil suggested comment ie requires know expected display value beforehand otherwise work without modifying input stylesheets", "d": "7/2015"}, {"body": "unless jquery magic delay running make browser render descendants seems like worse solution using inframe least performance wise really want go way remove alike functions seriously jquery wo nt move away complication devs maybe library maybe move ui optional jquery build", "d": "7/2015"}, {"body": "starting look like general griping going ask specific questions tried jquery alpha release excepting phistuck matthaywardwebdesign obviously given ing element generally leave element without inline property eg responsive stylesheets expected end inline css cascadehidden element keep mind could guess proper may actually differ elements name", "d": "7/2015"}, {"body": "code basically boiled shortcut amp would agree eccenux say completely remove amp jquery current code moved addon even want continue support either way change make devs think carefully hide show elements pages", "d": "7/2015"}, {"body": "mean responsive website squishy website difference responsive website render fine certain device something show stays shown squishy website something showoff boss friends resizing browser things might disappear show squish browser back forth time actual use case also try one solution see make showhide work expected running something like would break squishiness understand use case correctly", "d": "7/2015"}, {"body": "eccenux hmmm something responsive web application detecting device serverside send back something specific device something responsive one version design code website nt respond resize tab responsive web design", "d": "7/2015"}, {"body": "actually agree eccenux resizing tab necessarily use case responsive design nice side effect resizing tab mobile breakpoint may bring example geolocation features irrelevant desktop users user resized tab mean suddenly mobile", "d": "7/2015"}, {"body": "phistuck okay maybe something like responsive one version code responsive design media queries", "d": "7/2015"}, {"body": "sorry nt want spark new discussion responsiveness squishiness concept responsive show squishiness discussed brad frost presentation kind thought got estabilished responsiveness squishiness adapting screen size exactly device yes responsive websites use media queries page loaded initial view established time nt need readapt testing people nt squish websites around besides must always use rwd nt really see important showhide usually things shown containers nt change display much time change maybe loose attribute", "d": "7/2015"}, {"body": "btw made fiddle two simple examples nt work switch left workaround bad originally thought nt cause performance issues still find confusing note simple example assumes use one single class hide elements shown add", "d": "7/2015"}, {"body": "example simple showing hiding canvas menu mobile menu horizontally open desktop media query hides shows button menu showing menu mobile needs show hide mechanism button triggers", "d": "7/2015"}, {"body": "eccenux way one specific use case squishiness responsive design changing orientation", "d": "7/2015"}, {"body": "phistuck way one specific use case squishiness responsive design changing orientation yes nt see realworld use case would want change display upon orientation change dont think hide slideout menu upon oriention change show use case show easy workaround someone show workarond one without changing html css note works fine change jquery", "d": "7/2015"}, {"body": "someone show workarond one without changing html css", "d": "7/2015"}, {"body": "someone show workarond one without changing html css wo nt work dialogs eg pages", "d": "7/2015"}, {"body": "also one makes browser render dialog hidden elements brief moment probably problem desktop might problem mobile especially elements need recalculated elements shown", "d": "7/2015"}, {"body": "also one makes browser render dialog hidden elements brief moment example browser happens browsers batch style recalculations multiple changes nt trigger multiple reflows unless someone asks resolved style element meantime browser know real value return nt show element browser new nt check resolved reflow nt happen true though reflow would happen code executed jquery older check resolved", "d": "7/2015"}, {"body": "true though reflow would happen code executed jquery older hide check resolved display ahhhh happened ok indeed valid workaround cases", "d": "7/2015"}, {"body": "btw surprisingly jquery ui works dialogs dropdowns nt like", "d": "7/2015"}, {"body": "happens use", "d": "5/2015"}, {"body": "timmywil still strange behavior different", "d": "5/2015"}, {"body": "look console firefox giving nserrornotavailable try get display property element crossframe crosswindow access always dicey even two origin take look comments area particular instead child frame try manipulate parent call back function parent job", "d": "5/2015"}, {"body": "okay actually could avoid problem reordering codes interesting points crossframe access fails iframe hidden problem nt occur older jquery browsers anyway problem easily avoided eg calling function parent dmethvin mentioned nt say needs fixed would natural leave", "d": "5/2015"}, {"body": "agree got rid several earlier sure stayed around", "d": "5/2015"}, {"body": "pr", "d": "6/2015"}, {"body": "took liberty assigning markelog", "d": "5/2015"}, {"body": "timmywil sure thing since must make sure objects supposed events events", "d": "5/2015"}, {"body": "simulated focus event nt methods", "d": "5/2015"}, {"body": "mentioned may able get rid fake altogether", "d": "5/2015"}, {"body": "issue way vague us anything need construct minimal reproducible test case without external dependencies shows error act", "d": "5/2015"}, {"body": "ok thanks set something get back", "d": "5/2015"}, {"body": "please also test nt use production main development line good know issue persists", "d": "5/2015"}, {"body": "set copy site error enabling lastest jquery updater sure create minimal text case suggested set admin ftp account could send details emailpm see issue clearly reproducible enabling plugin nt occur many thanks", "d": "5/2015"}, {"body": "one thing checkout jquery repository run compile jquery try file works type go back point nt work type go back point end find commit introduced issue post commit hash amp look read go", "d": "5/2015"}, {"body": "closing due inactivity", "d": "6/2015"}, {"body": "currently use jquery ui sure switch uses though", "d": "5/2015"}, {"body": "upon time ticket make methods nt know enough save though", "d": "5/2015"}, {"body": "yea think bit different actually prefer using methods sometimes forcing users create new jquery collection getset css unnecessary", "d": "5/2015"}, {"body": "goal retroactively bless use current public apis going pretty haphazard set lowlevel apis inconsistent calling conventions guess ca nt get worse vs though smilingimp rather setter getter going one similar least would give us consistency low level api may break current users undocumented interface figure args", "d": "5/2015"}, {"body": "rather jquerycss elem name value setter jquerycss elem name getter going one similar jquerydata least would give us consistency low level api may break current users undocumented interface figure extra styles args definitely moment today staring amp immediately seeing responsibility division looks extremely confusing especially taking account fact getter amp setter private positional params public apis also seems bad", "d": "5/2015"}, {"body": "agreed case rather see us move dave suggested drop completely", "d": "5/2015"}, {"body": "agreed case rather see us move dave suggested drop completely works well edit issue title updated", "d": "5/2015"}, {"body": "relates apis currently undocumented assume deferring would ok", "d": "9/2015"}, {"body": "ok deferred please revert disagree", "d": "9/2015"}, {"body": "moving removal jquerystyle extra safe", "d": "11/2016"}, {"body": "nt return promise returns context collection queuedependent defaulting fx invoke custom queue everything works expected", "d": "5/2015"}, {"body": "indeed thanks", "d": "5/2015"}, {"body": "thank opening issue might deprecated future might recommend form instead better create docs issues appropriate repo although useful information already suggest though use static one", "d": "5/2015"}, {"body": "opened interested api perspective documenting would mean adding api surface hence issue ca nt find information getting deferredpromise readiness document works tell also promisebacked version", "d": "5/2015"}, {"body": "ready might deprecated future info come mention deprecating ready contrary would get ahold promise resolves ready otherwise", "d": "5/2015"}, {"body": "ready might deprecated future discuss point future documented status yet determined", "d": "5/2015"}, {"body": "right asking discussion since already likely wo nt removed useful might well expose", "d": "5/2015"}, {"body": "benjamingr right asking discussion ready since already likely wo nt removed useful might well expose could report issue documentation issues discussed", "d": "5/2015"}, {"body": "mzgol sure impression api issue documentation issue opened one thanks", "d": "5/2015"}, {"body": "benjamingr thanks", "d": "5/2015"}, {"body": "invalid document forms nested inside forms", "d": "5/2015"}, {"body": "comment terribly important", "d": "5/2015"}, {"body": "think need comment saying rjs strip use strict added", "d": "5/2015"}, {"body": "comment terribly important might confuse people would check build source think need comment saying rjs strip use strict added sounds awkward issue might cause real failures ticket created would aware fix appropriate fix landed", "d": "5/2015"}, {"body": "rather leave issues lying around reminders cross bridge ifwhen come mon may oleg gaidarenko notifications githubcom wrote comment terribly important might confuse people would check build source think need comment saying rjs strip use strict added sounds awkward issue might cause real failures ticket created would aware fix appropriate fix landed reply email directly view github", "d": "5/2015"}, {"body": "ok misunderstood issue thought latest requirejs would strip use strict since action item update requirejs", "d": "5/2015"}, {"body": "work jquery ui amp mobile would need create nt exist currently rely said nt breaking support module components mainly first need figure keep support tests running would likely require testing amd support module instead built file", "d": "5/2015"}, {"body": "point think using jquery ui", "d": "5/2015"}, {"body": "hm last time discussed removing jquerysupport uproar need least set empty object since uimobile attach support tests jquerysupportui assume jquerysupport exists remember wrong", "d": "5/2015"}, {"body": "sounds familiar sun may pm micha\u0142 go\u0142\u0119biowski notifications githubcom wrote hm last time discussed removing jquerysupport uproar need least set empty object since uimobile attach support tests jquerysupportui assume jquerysupport exists remember wrong reply email directly view github", "d": "5/2015"}, {"body": "never existed jquery ui nt relied existing year", "d": "5/2015"}, {"body": "ok maybe mobile see eg cc arschmitz", "d": "5/2015"}, {"body": "yeah use pretty extensively mobile however extend extend places see second switch one simple changing worry part long know advance", "d": "5/2015"}, {"body": "label issues hiding private methods nt share seems use public api changes", "d": "6/2015"}, {"body": "documented property private behaviour change ie backcompat nt find terrible complex way test values property say could document internal", "d": "6/2015"}, {"body": "right forgot micha\u0142 go\u0142\u0119biowski", "d": "6/2015"}, {"body": "one thing keep mind working around test results weird setups wo nt possible change see eg discussions around", "d": "6/2015"}, {"body": "discussed meeting nt think worth effort remove property convenience someone feels inspired open pr consider", "d": "6/2015"}, {"body": "rejected fixed removed milestone", "d": "3/2016"}, {"body": "yes please", "d": "5/2015"}, {"body": "okay todos although nt think actually remove quickly given much code still around uses small stubs anyway", "d": "5/2015"}, {"body": "dmethvin agreed nt think worth removing time soon extremely small size amp widespread adoption discouraging use seems ok said current setup migrate users amp people looking docs see warnings maybe core well", "d": "5/2015"}, {"body": "long nt actually remove time soon warning migrate fine", "d": "5/2015"}, {"body": "yeah definitely hurry", "d": "5/2015"}, {"body": "docs still mention deprecation even though issue closed specifically says update docs see jqueryapijquerycom", "d": "7/2016"}, {"body": "yeah right although nt think reopen ticket let discuss jqueryapijquerycom btw would like send us pr beat", "d": "7/2016"}, {"body": "decide also need migrate docs tickets", "d": "5/2015"}, {"body": "takes care migrate part", "d": "5/2015"}, {"body": "upgrade guide says need attach errors names use method need attach events names use method", "d": "5/2016"}, {"body": "zowers thanks report fixed find mistakes please report issue tracker jquery library upgrade guide written markdown", "d": "5/2016"}, {"body": "use function allows job", "d": "7/2016"}, {"body": "since using animation would need call deferred method rest us agree seems like animations", "d": "5/2015"}, {"body": "dmethvin okay done", "d": "5/2015"}, {"body": "method seems returning wrong value firefox", "d": "5/2015"}, {"body": "inconsistent browsers worth filing mozilla issue really wrong thought remembered special rules option elements ca nt find correct computed style option element visible virtue selectedness anyway mikesherov", "d": "5/2015"}, {"body": "agree option elements bit strange thing extent clarification nt explicit style element one style nt work either firefox put miketaylr shaped signal light one nt think critical enough jquery fix either", "d": "5/2015"}, {"body": "agreed nothing jquery", "d": "5/2015"}, {"body": "opinion would best implemented plugin least gains enough traction receive requests put core would consider adding wary adding new methods core point", "d": "5/2015"}, {"body": "opinion would best implemented plugin least feeling", "d": "5/2015"}, {"body": "never really used plugins let go ahead research would work well looks like directory self maintained code whoever created suppose think beyond point since really planning maintain dancer", "d": "5/2015"}, {"body": "closed since done plugin first", "d": "9/2015"}, {"body": "full proposal thread guess plugin would traction anyway p", "d": "9/2015"}, {"body": "thank opening issue tests seems pass opera current opera current means opera respectively versions opera jquery supports", "d": "5/2015"}, {"body": "argh fooled opera page told latest version thanks", "d": "5/2015"}, {"body": "hemming hawing size probably land going ie selector pick children disabled fieldsets modern browsers get right except selection goes sizzle engine opposed ielike behavior relying solely upon property", "d": "5/2015"}, {"body": "seem case look jsbin works correctly selector children fieldsets ie gt course", "d": "5/2015"}, {"body": "actually sorry regular css selector work ie children fieldsets work correctly", "d": "5/2015"}, {"body": "bug jsbin returns nodelist always truthy want check property", "d": "5/2015"}, {"body": "ah right sorry sure enough fail ie", "d": "5/2015"}, {"body": "yea guess time grrrr arschmitz", "d": "5/2015"}, {"body": "lands probably address extra wrong related documentation consider element disabled ie selector work however work browsers jquerysizzle address well", "d": "5/2015"}, {"body": "left note test case explicitly", "d": "5/2015"}, {"body": "fixed sizzle", "d": "1/2016"}, {"body": "fixed", "d": "1/2016"}, {"body": "relates difference attr prop confused remember checked attribute affects defaultchecked property checked property one showing checked", "d": "5/2015"}, {"body": "please read documentation boolean attributes", "d": "5/2015"}, {"body": "well opening issue good start however recommend editing issue actual feature proposal like issue open concerning clarity contributejqueryorg get involved tell open issue repo thank willingness contribute", "d": "5/2015"}, {"body": "sure like issue open clear contributejqueryorg wo nt bother opened new issue feature proposal would edit first comment one remove think fine leave thanks timmywil", "d": "5/2015"}, {"body": "ok thank cauerego", "d": "5/2015"}, {"body": "need drop suffix release process", "d": "5/2015"}, {"body": "actually wo nt", "d": "5/2015"}, {"body": "noticed tag suffix wrong buildjs updated", "d": "5/2015"}, {"body": "releasing anymore commit irrelevant removing milestone amp adding wontfix label", "d": "11/2015"}, {"body": "basically dup nt guarantee invalid inputs silently ignored", "d": "5/2015"}, {"body": "agreed", "d": "5/2015"}, {"body": "dmethvin right starting wonder would nice failed silently string case obscure would expect changing behavior much problematic", "d": "5/2015"}, {"body": "timmywil agreed also implementations like lodash silently ignore things like", "d": "5/2015"}, {"body": "use three places protected sounding like request change signatures former two despite fact reported instances passing invalid input corrected since correcting mistakes usually easy adding correctness andor performance critical nt see benefit change end quite opposite seem like good thing", "d": "5/2015"}, {"body": "exceptions jqueryeach noniterable fn seem like good thing cases numbers strings agree passing variables may times seems common enough throwing going annoying users question convenient everyone going add code may well jquery", "d": "5/2015"}, {"body": "question convenient everyone going add code may well jquery good point also document noops think behavior could prefer callerlevel change add documents subsequent readers value expected rather happening work change docs least old calls retroactively correct far jquery api usage goes smile", "d": "5/2015"}, {"body": "object length attribute passed function function behave", "d": "9/2015"}, {"body": "uptoeleven function exposed publicly need ask specific public method use since methods like jqueryeach usually documented accept array object jquery pass string", "d": "9/2015"}, {"body": "actually another solution would install different versions jsdom using npm module running tests", "d": "5/2015"}, {"body": "would quicker path success anyone suggestions alternatives jsdom quick searches nt really turned anything promising", "d": "5/2015"}, {"body": "feared would become issue jsdom works fine iojs breaks newest major release installing unfortunately means skipping packagejson nt see better option nt think anything else comes anywhere near close jsdom dom support denissokolov know something domenic anything else could except install different jsdom versions based nodejs iojs", "d": "5/2015"}, {"body": "using newest jsdom iojs advantage easier windows users nt require compilation done contextify users reported harder jquery repo", "d": "5/2015"}, {"body": "get contextify patched support iojs jsdom continue work everywhere someone work though", "d": "5/2015"}, {"body": "contextify already patched could install latest version contextify toplevel jsdom uses seems like shortterm solution", "d": "5/2015"}, {"body": "contextify already patched could install latest version contextify toplevel jsdom uses seems like shortterm solution needed jsdom depends contextify catch newer vesion nt bump minor newest contextify though even contextify patched nt released yet case seems best wait", "d": "5/2015"}, {"body": "actually think misunderstood patch issue", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "unaware anything similar think use separate versions different platforms switch programatically without much problem using version shims optional dependencies shim module see example semiblessed npm issue optional dependencies handle installation failures wrong platforms", "d": "5/2015"}, {"body": "denissokolov solution would make installation fail iojs causing confusion amongst users especially way npm currently informs failure installing optional dependency far ideal using special field hook would check proper version already installed would install", "d": "5/2015"}, {"body": "dislike way npm informs failing install optional dependencies suggest comment issue npm use case jsdom fits description optional dependencies well besides jsdom development dependency jquery thus users would see warning jquery developers expected rather informed likely run regardless find work lot manual steps fail major benefit would choose avoid hook certainly solution probably work", "d": "5/2015"}, {"body": "dislike way npm informs failing install optional dependencies one issue misleading message another trying install dependency compile amp fail know beforehand indeed fail seems wasteful amp slow especially happen every single even invoke twice row", "d": "5/2015"}, {"body": "check proper version require packagejson jsdomversions already installed would install pretty much thinking since need jsdom node smoke tests thinking check install tests run otherwise needed like copy prs", "d": "5/2015"}, {"body": "one issue misleading message another trying install dependency compile amp fail know beforehand indeed fail seems wasteful amp slow especially happen every single npm install even invoke twice row meaningful concern although think could addressed setting correct requirements package let npm know right bat incompatibilities pretty much thinking since need jsdom node smoke tests thinking check install tests run otherwise needed like copy prs sounds best achieved simply", "d": "5/2015"}, {"body": "pr", "d": "5/2015"}, {"body": "contextify released amp jsdom works fine iojs imo solution still better though also testing agains current jsdom amp easier people installing iojs compilation step needed", "d": "5/2015"}, {"body": "pr ready review", "d": "5/2015"}, {"body": "p inline element default div block element spec says block element placed inside inline element", "d": "5/2015"}, {"body": "browser jquery divide p tag two element normal behavior pls refer specs p element represents paragraph contain blocklevel elements including p", "d": "5/2015"}, {"body": "yup opening implicitly closes opened see also particular comment", "d": "5/2015"}, {"body": "thank quick reply", "d": "5/2015"}, {"body": "think support least case easy enough fix since follow promises standart events say open discussion", "d": "5/2015"}, {"body": "duplicate see also related changes", "d": "5/2015"}, {"body": "relevant agree discussion also event handlers execution", "d": "5/2015"}, {"body": "read part incidental primary content issue regarding duplicating standalone issue event handlers throwing exceptions remember aliases rather might warranted though", "d": "5/2015"}, {"body": "remember ready aliases jqueryreadypromise done rather ontrigger yeah since wrote easy enough fix since follow promises standart could also represented mentioned fix least one mind would apply think discuss exceptions event handlers", "d": "5/2015"}, {"body": "event deprecated though breaks particularly problem since multiplex events single handler right error one prevents others running would take significant redesign event subsystem avoid sure big problem", "d": "5/2015"}, {"body": "ready event deprecated though correct probably remove", "d": "5/2015"}, {"body": "probably remove yes", "d": "5/2015"}, {"body": "guess better things open", "d": "5/2015"}, {"body": "yes mention events incidental used comparison future clicks still call event chain even one callee throws exception chain break point time documentready gives stops forever ready event deprecated though breaks particularly problem event deprecated documentation nt seem suggest anything sort says one form also deprecated jquery offers using recommended", "d": "5/2015"}, {"body": "jdahobbs others nt use ready event could defined custom jquery event fired document ready event add ready handler using one methods custom jquery event involved custom jquery event deprecated", "d": "5/2015"}, {"body": "custom pseudo selectors nonportable much slower longer recognized valid native browser engines best practice use valid selectors filter resulting collection manually also make step explicit eg", "d": "5/2015"}, {"body": "thanks opening issue able produce test case involve svg jquery first foremost html dom library guarantee support svg side note proper way create svg elements use svg namespace raw js example also invalid", "d": "5/2015"}, {"body": "javascript executed element attached dom code like execute code firefox chrome browsers", "d": "5/2015"}, {"body": "also repros img tags though svg dom element like element supports onload potential injection using inmemory element common mechanism people sanitize html blobs safe text use inmemory element set html grab innertext means svg notsvg nt issue methods xss protected input string fairly certain repro tag supports onload see html tags support onload minimal repro second repro using elementappend interestingly one also repros chrome javascript equivalent using img tag repro", "d": "5/2015"}, {"body": "potential injection using inmemory element common mechanism people sanitize html blobs safe text use inmemory element set html grab innertext means svg notsvg nt issue methods xss protected input string sounds like terrible idea jsfiddle nt need jquery exploit ps last repro example broken even fix method", "d": "5/2015"}, {"body": "pretty much expected discrepancy whether onload handler executed different ways chrome firefox deal svg elements created wrong namespace undefined behavior comes inline events html leave user guard plausible expect jquery guard every possible xss attack documented security considerations", "d": "5/2015"}, {"body": "jquery developers need aware execute javascript several different ways design code things like uses untrusted input shooting foot", "d": "5/2015"}, {"body": "thank opening issue may well bug would helpful could create test case similar", "d": "5/2015"}, {"body": "closing due inactivity", "d": "11/2015"}, {"body": "way define unambiguous semantics suggestion change would break extant code relying documented behavior", "d": "5/2015"}, {"body": "current extend behavior feel right clearly extend extend arrays replace totally value extending", "d": "5/2015"}, {"body": "yes treat array object index property last property name win look like js extend null b result b", "d": "5/2015"}, {"body": "also lodash assign objectassign behavior definitely right", "d": "5/2015"}, {"body": "yep designed used cross section well known implementations", "d": "5/2015"}, {"body": "yep designed nt jumped", "d": "5/2015"}, {"body": "thought posted question mobile morning guess nt go mention maybe missed use case definitely broken intentional fine guess needs made really clear docs undoubtedly code expects able serialize deserialize data without jquery screwing", "d": "5/2015"}, {"body": "right intentionally broken case covering migrate plugin docs", "d": "5/2015"}, {"body": "said still works", "d": "5/2015"}, {"body": "require individual modules app need ignore completely webpack support amd nt magic ignore modules outside dependency tree nt work", "d": "5/2015"}, {"body": "indeed webpack supports amd commonjs umd format awesome godo know thanks reply", "d": "5/2015"}, {"body": "problem method lot logic argument options nt know could keep original options case really nt want make responsible options manipulation complete function could probably moved defaultprefilter since knows little queue wish knew less still think needs step aliases options", "d": "5/2015"}, {"body": "thinking would still bundle speedeasingcallback object object would free default values initial assignment current rest logic could applied converting duration number zero animations instant defaulting fx queue add final step dequeueing understand wanting keep external though especially one moves list adding argument options preprocessing used js tail jqueryspeed function queuewrap options var opt jqueryextend true options complete optcomplete head jqueryspeed var options speed amp amp typeof speed object jqueryextend speed complete callback callback amp amp easing jqueryisfunction speed amp amp speed duration speed easing callback amp amp easing easing amp amp jqueryisfunction easing amp amp easing animation initialization var anim animation jqueryextend prop options queuewrap might even opportunity function take", "d": "5/2015"}, {"body": "like idea almost feel like passing makes sense perhaps let exist used", "d": "5/2015"}, {"body": "put inside seperate file methode public scope maybe rename way", "d": "5/2015"}, {"body": "think tried versions back something somewhere used nt remember remember thinking horrible function smile", "d": "5/2015"}, {"body": "anything get rid", "d": "5/2015"}, {"body": "yeah probleme reuse code several files need set methode public right", "d": "5/2015"}, {"body": "use one place think something else externally used jquery ui maybe nt need method proposing", "d": "5/2015"}, {"body": "nt take long find people using", "d": "5/2015"}, {"body": "jquery ui", "d": "5/2015"}, {"body": "gnarf one good example remove works fine exactly like reading jqueryui code send", "d": "5/2015"}, {"body": "jquery ui ugh bright side basically reproduces nonqueue aspects looks like ui would need one change still think work like idea almost feel like passing makes sense perhaps let exist used possibly feels like conflation separate concerns suppose worse passing preprocessor document thereby reserve property decide nest rather clone eg would input would input", "d": "5/2015"}, {"body": "around developer convenience used anything wrote think would fine reuse passed us passed", "d": "5/2015"}, {"body": "yes agree wanted make decision explicit", "d": "5/2015"}, {"body": "last time add easingdefault would reason user read instead attribute nt find example github", "d": "5/2015"}, {"body": "exact reference user input might valuable two reasons passing data outwards animation callbacks retrieving configuration exactly specified application defaultsspeed translationsetc thing ajax calls", "d": "5/2015"}, {"body": "first two arguments consistent may thinking vs known issue", "d": "5/2015"}, {"body": "sorry confusion meant jquery selector map fn jquerymap array fn per jquery documentation", "d": "5/2015"}, {"body": "see updated description accordingly quite unfortunate still nt think anything late juncture", "d": "5/2015"}, {"body": "expected better known", "d": "5/2015"}, {"body": "thank opening issue please provide reduced test case using jsbincom help us assess issue mocking ajax responses useful resource", "d": "5/2015"}, {"body": "closing due inactivity information issue reopened", "d": "5/2015"}, {"body": "based previous experience console warnings people get really crazy get warning resolution fix coordinate work make resolution upgrade example jquery would make life better everyone sure practical would would really interesting explore", "d": "4/2015"}, {"body": "strongly valid uses warn", "d": "4/2015"}, {"body": "could see beneficial development build behind flag would upset jquery logging production build", "d": "4/2015"}, {"body": "deprecation warnings would okay feasible would request anything like present alternate build maybe chatty dev build could done active development notes", "d": "4/2015"}, {"body": "nt proposal jquery log browser detecting bad things perf perspective warning one jdalton gives regarding zepto good one", "d": "4/2015"}, {"body": "think explore nt want spam console method someone else called slow side note talk slow equal need prioritize user feels two hard parts detecting troublesome uses giving user realistic guidance action take thoughtful though serious thing drop warnings console yes basically feature request chromeffmicrosoft edgesafari devtools teams rather something jqueryjs implements", "d": "4/2015"}, {"body": "react kind expressive warnings amp errors really good learning curve upgrades love lots people spoken love think good habit really useful deprecation amp performance warnings educating users amp course occur production mode imo jquery completely failed educate developers far nonexplicit api amp missing occasions reducing api get close dom possible would time start insurance browser compat", "d": "4/2015"}, {"body": "imo jquery completely failed educate developers far sure means code nt education providing functionality via api docs provide guidance use apis jquery migrate plugin provides lot information practices apis nt recommended new code agree paulirish ca nt api bad feel bad message needs providing guidance fixing problems detected page runs", "d": "4/2015"}, {"body": "agree paulirish ca nt api bad feel bad message needs providing guidance fixing problems detected page runs yap agreed", "d": "4/2015"}, {"body": "mean polymorphic methods like instead amp makes difficult teach someone started frontend development jquery name amp code explicitly completely fuckedup value amp people introduced javascript jquery got easily confused conventions ecma standard methods amp jquery naming evolving convention like vs nt help people catchup spec instead adds confusion trying align dom spec naming amp returned values signature close possible educating people learn without jquery might dangerous hope ideally jquery longer necessary future offering people dom knowledge becomes necessity", "d": "4/2015"}, {"body": "nt want people use deprecate amp remove", "d": "4/2015"}, {"body": "kind info might also interesting devtools performance timeline tooling cc jsantell victorporof canuckistani", "d": "4/2015"}, {"body": "kind info might also interesting devtools performance timeline tooling cool thanks pinging may suitable depending complicated detection paulirish mentioned chrome may able measure time jank walk stack see jquery hidden checking", "d": "4/2015"}, {"body": "stucox general agree deprecatedremoved several apis years problem comes complex apis like behaviors edge cases cost us lot performance bytes andor confusing documentation want keep baby throw bathwater miketaylr definitely think devtools add value nt want spew console opinionated purityofcode reasons want give people better guidance something causing bad performance", "d": "4/2015"}, {"body": "bloodyowl amen yes library jquery responsibility towards community pretending nt straight blind ignorance warning yes way go helps lot react given advantage knowing environment dev prod based nodejs env variable wo nt able let honest builds jquery source offer different builds download explicit suggest one env variable rule similar future cases", "d": "5/2015"}, {"body": "think direction good nt seem like anything done within jquery core action items directed browser development tools accurate jdalton", "d": "5/2015"}, {"body": "correct opened easier cross browser vendor collaboration get input jquery core warning implemented browsers would want input direct users newer version jquery perhaps", "d": "5/2015"}, {"body": "way mention case sweeping changes prepared", "d": "5/2015"}, {"body": "way mention case showhide sweeping changes prepared yap referenced opening comment one things mentioned coordinating warning release able point devs solutionworkaround issue", "d": "5/2015"}, {"body": "thanks heads miketaylr pinged firefox devtoolers thread looking warnings provided faster optimized alternatives like proto case op", "d": "5/2015"}, {"body": "correct opened easier cross browser vendor collaboration get input jquery core well mine personally resent statement slow simple nt dom api methods consider great amount edgecases make enduser happy cut thus drastically break lot usecases necessary sacrifice make faster users though oh users face great issues updating new jquery since appssites break unexpected places yeah wonder blame punch line nt dom api would right api jquery methods could fast could thorough give couple examples thanks bzbarsky firefox introduced given us avoid crazy slow logic still used one standardize method one beside ff implemented honestly nt work right since still hacks make work insertadjacenthtml great method right simplifies speed lot usecases perfectly aligned jquery manipulation api right tricky lots edgecases considered ca nt used element traversal api ways mimics jquery traversal api got ta right api use inside jquery nope specification nt thorough nt consider nonelement nodes api obsolete awesome method make things faster wait four years reintroducing without conjunction page visibility api method nt bring needed effect one edgecase everything breaks waited received kinds storms criticism slow jquery animation api could add lot examples like like gon na surprised tryout fate examples soon great possibility claimed slow already imagine nice tweets flowing around blaming us yeah could say jquery core members could active discussions could advocate position us side thing us real jobs whereas spec threads time consuming unrewarding quite possibly without expected endresult nt think warns necessary since least currently timmywil pull mentioned already ticket description btw really weird things using various apis achieve desirable effect problems imagining codepath would need take predict slowness think right dom api could introduced would relieve us circumstance warning people anything", "d": "5/2015"}, {"body": "one things mentioned coordinating warning release able point devs solutionworkaround issue right saying barring revert reasons unknown time right release point edit understanding paul irish analysis subsequently revealed bottleneck example retrieving computed display value webkit took time proposed changes drop use instead effectively circumventing performance issue issue concerned css cascade overriding stylesheet settings required lot magic get working named likely performance culprit originally drop become basic methods longer potential performance penalties least ones encountered far mean breaking changes rather break code continue allow phantom performance issues sneak user code", "d": "5/2015"}, {"body": "ticket filed chromium request profiling focused recommendationswarnings provided problem detected", "d": "6/2015"}, {"body": "punch line nt dom api would right api jquery methods could fast could thorough case would needed jquery first place would least simple things", "d": "6/2015"}, {"body": "paulirish ticket filed chromium request awesome thank", "d": "6/2015"}, {"body": "since discussion nt continued close ticket different plans still address performance issue general cases address cases adding console warnings jquery ticket nt really suggesting browser vendors nt think warning every time someone uses hide show seem mostly agreed part browser vendors canshould provide recommendations actually problem may hard detect sometimes matter difficulty detecting actual problem task noble one", "d": "12/2015"}, {"body": "thank opening issue passing first argument docs say handler function required passing object supported", "d": "4/2015"}, {"body": "timmywil yes know guard checks values strings objects seeing random errors js profiling tool caused whoknowswhatrandomexternalcode could avoided checks", "d": "4/2015"}, {"body": "talking", "d": "4/2015"}, {"body": "imho check would nt hurt performances events done right", "d": "4/2015"}, {"body": "case actually prefer error thrown make call going anything anyway general policy cases invalid input produce unexpected results thu apr albert casademont notifications githubcom wrote imho typeof string typeof object check would nt hurt performances events done right reply email directly view github", "d": "4/2015"}, {"body": "timmywil check falsy values perhaps remove check", "d": "4/2015"}, {"body": "agree tons party rubbish scripts browsers embed extensions virusestrojansmalware cause js profiling tools using errorception filled faux errors caused sorts external hacks afraid really ca nt control code example code guard check string value instead current code check would come handy", "d": "4/2015"}, {"body": "instead ps still sure separate case", "d": "4/2015"}, {"body": "acasademont function execute event triggered value false also allowed shorthand function simply return false couple usecases", "d": "4/2015"}, {"body": "point check presence function shorter nt really care guards sideeffect really supported either", "d": "4/2015"}, {"body": "nt see terrible thing lose bytes minified version mere bytes gzipped one polish edge cases already lots guard checks code choice thanks time", "d": "4/2015"}, {"body": "nt see terrible thing lose bytes minified version mere bytes gzipped one polish edge cases keep mind would multiply number fraction size public api never bytes already lots guard checks code guards invalid code rather support public apis parameter overloading", "d": "4/2015"}, {"body": "specific check api supports value shorthand check function part past perhaps illadvised retrospect attempts silently accept invalid combination arguments making enduser debugging difficult seeing random errors js profiling tool caused whoknowswhatrandomexternalcode could avoided checks random errors avoided way calls clearly made reason change would convert noops trying nt done lack error messages nt mean page working properly error messages may way diagnosing code trying", "d": "4/2015"}, {"body": "dmethvin thing error thrown event fired event binded makes hard debug tons events ca nt really know event bind caused bad param even code party script would fine exception thrown param function would ok instead silent fail", "d": "4/2015"}, {"body": "jquery ignore problem help debug wondering sets event element set conditional breakpoint looks non", "d": "4/2015"}, {"body": "dmethvin code happening ca nt using cool reporting tool catches js errors customers see one stack traces get clue stack bound event stack provides info calls led fire event hate error really ca nt much error time eventbinding would come handy", "d": "4/2015"}, {"body": "building custom jquery great add whatever want check bad values throw error also good monitoring errors best practices jquery discarding bad inputs ca nt throw error every misuse api takes many bytes", "d": "4/2015"}, {"body": "okay since question nt answered order clutter discussion open pull answer matter", "d": "4/2015"}, {"body": "precisely trying big fan custombuilt libs suggest changes upstream understand point end discussion thank markelog change consistent opinions posted noguardsifnotabsolutelynecessary policy bytes less minified version p", "d": "4/2015"}, {"body": "yeah goes infinity recursion execution since passed argument funarg jquery constructor feeling receive ticket like ca nt find though technically speaking function acceptable argument nt makes sense add guard sure timmywil", "d": "4/2015"}, {"body": "markelog already rejected", "d": "4/2015"}, {"body": "dupe", "d": "4/2015"}, {"body": "hmm sorry nt see issue try fun report", "d": "4/2015"}, {"body": "thank opening issue multiple versions jquery page recommended allowed like see logs versions jquery currently page think best done plugin something like", "d": "4/2015"}, {"body": "dmethvin could take look interesting using mouseevent works differently", "d": "5/2015"}, {"body": "looks like difference behavior firefox straightforward repro jquery analogous calling native dom method seem work detached elements firefox custom event like myclick would delivered whether need fix particular bug depends whether firefox radar maybe miketaylr knows patch fixing issues happen trigger native events nt deliver resisted quite bit code edge cases", "d": "5/2015"}, {"body": "makes sense given analysis inclined close wontfix opened issue firefox", "d": "5/2015"}, {"body": "looks like closed nt jquery supposed fix browser incompatibilities otherwise use standard click method jquery implementation might workarounds make work firefox ie even using mouseevent click issue firefox specific behavior different three major browsers ie chrome firefox ie event fired issue fixed clicking detached checkboxes would use standard buggy apis jquery", "d": "5/2015"}, {"body": "testing issue firefoxspecific ie chrome behavior workaround set checked use firefox quick iterations fix wo nt need add fix jquery fri may anton ivanov notifications githubcom wrote looks like closed nt jquery supposed fix browser incompatibilities otherwise use standard click method might workarounds make work firefox ie even using mouseevent click issue also firefox specific behavior different three major browsers ie chrome firefox issue fixed clicking detached checkboxes would use standard buggy apis jquery reply email directly view github", "d": "5/2015"}, {"body": "thanks filing timmywil set bug blocker", "d": "5/2015"}, {"body": "thank opening issue inconvenience regrettable two issues fact included mistake files meant npm bower sorry confusion fixed agree source map url however issue fixed wishing took source map url release missed regardless regret future releases include source map url", "d": "4/2015"}, {"body": "svenackermann note happens open devtools users affected developers inconvenience nothing serious", "d": "4/2015"}, {"body": "documentation jquerymap nt say method takes string passing one case method returns change pass correct type cases", "d": "4/2015"}, {"body": "change also breaks datatables following code", "d": "4/2015"}, {"body": "fixed plugin since never supported strings", "d": "4/2015"}, {"body": "nt disagree plugin fix incorrect usage minor point release jquery introduce backwardsincompatible change seeing breaks popular plugin countless codebases rely previous", "d": "4/2015"}, {"body": "drarok technically speaking semver describes relation public api versions talking undocumented behavior therefore semver nt apply unfortunately problems unavoidable people nt remember possible method signatures nt check docs every use leads sometimes relying undocumented behavior change make even patch releases may break invalid use cases always say semver hint test projects every library upgrade even upgrade newer patch release thus question broke plugin uses undocumented apis incorrectly guess almost always break something much impact breakage may eg popular plugin etc anyone reported issue patch pr likely update patch avoid issue done released amp rereleased make newest jquery amp datatables work two options work around jquery amp release new jquery versions amp fix datatables amp release new datatables version whatever happens need update one libraries anyway make work case rather datatables fixed incorrect use jquery api report issue public bug tracker could post link say work around amp release new patch update lot popular plugins relied behavior far know one imo fix side", "d": "4/2015"}, {"body": "well said mzgol would quite uproar us another patch release support undocumented behavior", "d": "4/2015"}, {"body": "posted problem forums see mostly paid product reinforces view fix", "d": "4/2015"}, {"body": "fix committed datatables nightly version date change passing string bug nt pick worked jquery nt notice completely concur change required jquery see mostly paid product reinforces view fix datatables mit licensed", "d": "4/2015"}, {"body": "datatables mit licensed sorry quick glance site enough apparently passing string bug nt pick worked jquery nt notice fully understand issues unavoidable unfortunately thanks quick reaction", "d": "4/2015"}, {"body": "hm add behaviour migrate", "d": "4/2015"}, {"body": "hm add behaviour migrate seems like good idea", "d": "4/2015"}, {"body": "would say care changes documented behavior", "d": "4/2015"}, {"body": "lot undocumented behaviour undocumented methods example", "d": "4/2015"}, {"body": "attempting use datatables project still receiving error attached plunker change jquery version cdn link html works well leave view developer tools see following typeerror use operator search length category", "d": "9/2015"}, {"body": "first google result jquery isarraylike datatables ticket updated datatables plugin", "d": "9/2015"}, {"body": "yes even tried using nightlies cdn", "d": "9/2015"}, {"body": "report problem datatables team", "d": "9/2015"}, {"body": "sorry thought datatables issue posted wrong tab", "d": "9/2015"}, {"body": "duplicate", "d": "4/2015"}, {"body": "changing attribute property dom element use info", "d": "4/2015"}, {"body": "thanks lot answer know difference attr prop helpfull", "d": "4/2015"}, {"body": "indeed removing lines nt break including ff tests added issue exist ff longer reproducible modern browsers would like sends us pr cc rwaldron", "d": "4/2015"}, {"body": "code still acts defense form aliasing either drop support add unit test", "d": "4/2015"}, {"body": "change fixing bug removing feature smilingimp variable aliased test case could nt use form element arraylike object iterate collection", "d": "4/2015"}, {"body": "variable aliased test case could nt use form element arraylike object iterate collection nuhuh check console", "d": "4/2015"}, {"body": "must missing something extra console logs", "d": "4/2015"}, {"body": "never supported usage fact always closed issues like see recent one", "d": "4/2015"}, {"body": "agree closing happy bug aliasing problem hard solve", "d": "4/2015"}, {"body": "fine removing", "d": "4/2015"}, {"body": "working around form aliasing hard especially general case possible length also matter fine nt merits wontfix mention analogous manipulation", "d": "4/2015"}, {"body": "position include margins kind reasonable margin part element ur example victim div locates left top left margin top margin border left top since asking position border victim", "d": "4/2015"}, {"body": "alburthoffman thank explanation though still concern different behaviors method different browser view using jquery shall exempt caring browser facing behavior method shows asymmetry mentioned api documentation case obtain correct result switching method method semantics act switching shows compatibility concern suggestion method reporting value browsers either subtracting margin value chrome follow chrome way cases", "d": "4/2015"}, {"body": "report value though need ignore margin body chrome really margin body chrome rationalize ignoring value set css", "d": "4/2015"}, {"body": "depends browsers tested chrome safari firefox left value different marginleft set require lots browser version checking function return value", "d": "4/2015"}, {"body": "seems like way pages would fix css reset normalize seems consistent firefox btw", "d": "4/2015"}, {"body": "alburthoffman think webkit based guess checking phrase webkit navigatoruseragent enough dmethvin honor official reply mentioned problem chromeonly margin ignored set chrome user comes side effect auto browsers like firefox interprets directly horizontally center div chrome calculating margin left drop auto give concrete left margin div firefox chrome reports left offset possible overload method example call ignore margin totally reports left offset left border see case left offset want know definitely gap left border div left boundary page excluding margin", "d": "4/2015"}, {"body": "suggesting set margin zero browsers works fine", "d": "4/2015"}, {"body": "dmethvin still see discrepancy result pane sufficiently wide even latest fiddle bug firefox marked cantfix side least twice", "d": "4/2015"}, {"body": "fixed firefox caused windowgetcomputedstyle ff function doesnot return caculated margins margins set auto one problem find way check margins set auto ff clues right", "d": "4/2015"}, {"body": "fixable another awesome hack style swap might big right instead may get even bigger almost certainly slower multiple reflows", "d": "4/2015"}, {"body": "awesome curious swap part need check margintop margintop auto right", "d": "4/2015"}, {"body": "yes course got carried away copypasta", "d": "4/2015"}, {"body": "guess favor aligning behavior swap unfortunate limit usage one case", "d": "4/2015"}, {"body": "also supportmarginauto calculated jquery starts nt need test every time position called", "d": "4/2015"}, {"body": "look like linter errors code tested via jshint warnings pasted restrictive jquery code base rules nothing wrong jquery applying custom restrictive linting rules may always report lots warnings project", "d": "4/2015"}, {"body": "hmm maybe comment could applied code", "d": "4/2015"}, {"body": "running jquery mode never force code strict mode nt tested jquery run strict mode firefox complaining prevents issues strictnonstrict mixing", "d": "4/2015"}, {"body": "nt know compiled seamonkey sources cflags cflags ddebug dndebug cxxflags cflags configure disableoptimize please could answer original bug report suggest mozilla developers drop habit", "d": "4/2015"}, {"body": "nt jquery bug even sure would report since nt test case jquery working properly browsers support custom compiled seamonkey nt working properly need debug report appropriate place", "d": "4/2015"}, {"body": "would suspect would great performance optimization older browsers css selector given id first searches instead executing pseudo selector code fact sizzle jquery selector engine unfortunately optimization disabled ie lt browsers broken methods return elements name attributes equal desired id still current behavior probably excessive opened sizzle issue address", "d": "4/2015"}, {"body": "awaiting sizzle update label fixed sizzle btw need keep ticket open considering nt know get", "d": "2/2016"}, {"body": "awaiting sizzle update nt mean fixed sizzle means requires fix sizzle however agree might well close see solution right rely sizzle address performance issues", "d": "2/2016"}, {"body": "fwiw fixed sizzle agree keeping closed anyway", "d": "2/2016"}, {"body": "bug selector inaccurate fixed version", "d": "4/2015"}, {"body": "fixed version mine", "d": "4/2015"}, {"body": "nope child selector without every cibled descends least edit indeed nt saved fiddle revamped apologies", "d": "4/2015"}, {"body": "thank selector gt works selector inaccurate wrote better selector probably divclick title click nt suppose direct descendants thank time", "d": "4/2015"}, {"body": "dupe", "d": "4/2015"}, {"body": "agreed", "d": "4/2015"}, {"body": "removed milestone since github issues nt distinguish closed fixed closed invalidduplicateetc need remove milestone invalid tickets incorrectly included changelog", "d": "4/2015"}, {"body": "personally usage side effect sorts collection usually end make clear people nt familiar side effect name change nice", "d": "4/2015"}, {"body": "sgtm", "d": "4/2015"}, {"body": "woot", "d": "4/2015"}, {"body": "thank opening issue correct behavior may unexpected selector working documented behavior differs firefox chrome chrome reports zero width zero height technically means visible according docs visible elements width height greater zero fact hidden elements visible content seem strange way chrome importantly cost working around would far greater willing deal nt think edge case selector behaves way unexpected would prefer keep selector simple possible let edge cases covered means", "d": "4/2015"}, {"body": "seems like chrome bug safari well", "d": "4/2015"}, {"body": "seems like chrome bug safari well yes", "d": "4/2015"}, {"body": "test case jsbincom browserstackcom moment", "d": "4/2015"}, {"body": "timmywil thank quick reply first like apologize file duplicate issue seems least one earlier issue reporting problem includes solution also nt seem strange visible elements bleed visible child elements edge case degree perhaps note documentation imo people use jquery get results different browsers matter may even realize selectors sometime behave differently", "d": "4/2015"}, {"body": "funny thought remembered issue like came play could nt find looking old tracker maybe crashing sites dunno selectors nt good idea make browser lot work determine answer layout changed many cases track information ways lot faster", "d": "4/2015"}, {"body": "dmethvin old shimonenator already found case comes mind soontobemerged uses getclientrects decide offset meaningful fact work particular leaves open redefinition", "d": "4/2015"}, {"body": "visible hidden selectors nt good idea make browser lot work determine answer layout changed many cases track information ways lot faster know love say much possible really helpful developers writing general purpose code performance problems irrelevant many use cases", "d": "4/2015"}, {"body": "fact work particular leaves open redefinition simple nt cost much let", "d": "4/2015"}, {"body": "scottgonzalez think meant following current implementation functional method would thus seems performant solution would fall onto either case always executed little complicated due old opera behavior", "d": "4/2015"}, {"body": "discovered another solution pr approved seems line current discussion performance additional consideration added", "d": "4/2015"}, {"body": "upon deeper analysis would behavior change makes strongly recommend git builds include defining essentially releases forward use logic like fix issue would refine released logic revert", "d": "4/2015"}, {"body": "actually looks like proposed solution breaks case jquery considers hidden", "d": "5/2015"}, {"body": "ah slight behavior change still favor approach", "d": "5/2015"}, {"body": "case dropping", "d": "5/2015"}, {"body": "would make decision entirely performance untested supposition offset properties faster therefore worth including even though redundant", "d": "5/2015"}, {"body": "testing", "d": "5/2015"}, {"body": "ok looks like performance necessitates keeping difference hidden elements slower chrome visible elements use", "d": "5/2015"}, {"body": "pr", "d": "5/2015"}, {"body": "sorry late proposed accepted pr fix issue please refer original issue description follow comment", "d": "5/2015"}, {"body": "shimonenator wanted keep logic suggestion would right however change intentional", "d": "5/2015"}, {"body": "apologies commenting closed issue believe case warrants review using clientrectlistprototypelength anchor tag text visible mention one child elements dimension either please consider part new intended behavior apologies", "d": "9/2015"}, {"body": "less elements faster gets best perf increase big amount elements performance unnoticeable expansive call ie even without deduplication without sorting still sensitive difference worth please reopen objections", "d": "4/2015"}, {"body": "sorry late comment important canjs able add inserted event everytime new dom added page anyway could made public future releases", "d": "7/2015"}, {"body": "justinbmeyer open ticket think look problem functionalitycapability standpoint rather reexposing internal method", "d": "7/2015"}, {"body": "justinbmeyer canjs still using dommanip since undocumented method planning remove extend hear next day", "d": "1/2016"}, {"body": "yes still using months finally dropping support browsers nt support mutationeventsobservers point wo nt need exposed anymore thank much keeping around", "d": "1/2016"}, {"body": "reopening reminder", "d": "1/2016"}, {"body": "milestone little misleading planning drop ok good reminder bump milestone back later", "d": "1/2016"}, {"body": "expose tickets may need reexposed figured discuss rather reverting commits would easier simply reexpose via something like comment method deprecated removed", "d": "1/2016"}, {"body": "fixed", "d": "1/2016"}, {"body": "changed milestone back still going privatized", "d": "1/2016"}, {"body": "dmethvin noticed earlier today need overwrite get hook anytime jquery modifies dom simply exposing method nt work changing nt effect jquery calls anyway get changed called eveywhere hook far important supports inserted removed custom events", "d": "1/2016"}, {"body": "think would need discussed team temporary reprieve need feature hook dom changes well planning anything patch releases nt expecting expose", "d": "1/2016"}, {"body": "temporary reprieve canjs start using mutationobservers able support inserted removed events without hijacking jquery could work around overwriting jquery modifier methods however need able convert arguments fragment", "d": "1/2016"}, {"body": "dmethvin able work around need add back", "d": "1/2016"}, {"body": "dmethvin removed using list somewhere privatized methods", "d": "1/2016"}, {"body": "ones documented apijquerycom fair game search expose find list came earlier dir sibling dommanip buildfragment access swap", "d": "1/2016"}, {"body": "dmethvin yeah get remove semver thanks list", "d": "1/2016"}, {"body": "please post questions stack overflow jquery forums bug report", "d": "4/2015"}, {"body": "think native behaviour", "d": "4/2015"}, {"body": "elements closing tags", "d": "4/2015"}, {"body": "correct void elements therefore prohibited end tags", "d": "4/2015"}, {"body": "timmywil yeah like elements parses differently case incorrect html end result unpredictable", "d": "4/2015"}, {"body": "plaindom equivalent gives", "d": "4/2015"}, {"body": "weird caused preremoval boolean property setting rules around select elements boolean properties quite complex surprised see browser divergence maybe take special boolean treatment", "d": "4/2015"}, {"body": "yes already issue open", "d": "4/2015"}, {"body": "please ask help forums jquery irc channel", "d": "4/2015"}, {"body": "jsfiddle like way found bug ask fault plugin used realize fault jquery continue make issue google chrome directly try put nt works neither also work firefox bug occurs remove okay think", "d": "4/2015"}, {"body": "right submited issue chrome closing issue thanks", "d": "4/2015"}, {"body": "right submited issue chrome could post link issue people interested", "d": "4/2015"}, {"body": "wish could submitted browser help gt report issue menu nt give url issue tracking checked chromium bug list official build seems separate repo hear back update thread interested look stackoverflow thread infos google chrome bug tracking", "d": "4/2015"}, {"body": "wish could submitted browser help gt report issue menu nt give url issue tracking generally prefer submit bug reports manually builtin reporter mostly useful report bugs related purely official chrome build chromium webrelated issues generally concern whole chromium code base", "d": "4/2015"}, {"body": "thank problem looking hour found solved finally", "d": "10/2015"}, {"body": "must webkit bug affects chrome safari", "d": "11/2015"}, {"body": "anybody else curious issue think relevant chromium issue", "d": "1/2017"}, {"body": "btw found related question stackoverflow someone said call constructor simply expect get new object get reference one pass opinion sounds reasonable nt convince us consider constructor strict oo way object wrapper provide api entrance", "d": "4/2015"}, {"body": "set elements jquery object nt memory query produced success example would imply finally confused elem return elem directly already jquery object purpose creating cloning new object many things could done example explicitly say supported throw explicit error return original object return new set elements nt link original discussion last option chosen seems like perfectly cromulent choice really forum question since bug feature request", "d": "4/2015"}, {"body": "understanding always passing jquery instance special handling treated exactly array elements", "d": "4/2015"}, {"body": "recall discussion time whether passing jquery object valid talking api behavior choice implementation", "d": "4/2015"}, {"body": "dmethvin curious rationales behind choice especially zepto seems choose diff behavior", "d": "4/2015"}, {"body": "dmethvin thanks reply really forum question since bug feature request yes core development team answer question mentioned people jquery forum guess talking api behavior choice implementation problem current choice works fine wan na known reason choose current behavior", "d": "4/2015"}, {"body": "adding new custom selectors jquery performance better stay standard css selectors also see discussion original ticket positive votes idea however absolutely set using easily create plugin sizzle", "d": "4/2015"}, {"body": "thank opening issue think safely say get answers team best done plugin want add selector extensions sizzle part current future selector specs", "d": "4/2015"}, {"body": "dmethvin jinx", "d": "4/2015"}, {"body": "nice thought nt appear work arraylike reason merge function also avoiding implementation actually incurs twice", "d": "4/2015"}, {"body": "using quick test seems work chrome unless missing something course", "d": "4/2015"}, {"body": "may able rely vm trying using object quick untested thought", "d": "4/2015"}, {"body": "jaubourg code comment directly definition pushapply arraylike throws ancient webkit", "d": "4/2015"}, {"body": "question ancient", "d": "4/2015"}, {"body": "bad year ago still percent android", "d": "4/2015"}, {"body": "also phantomjs still trying kind support hopefully restrict jquery", "d": "4/2015"}, {"body": "sob", "d": "4/2015"}, {"body": "thanks lot see guys really appreciate answer", "d": "4/2015"}, {"body": "known issue addressable fixed meantime recommend escaping characters attribute values", "d": "4/2015"}, {"body": "landed", "d": "5/2015"}, {"body": "unwilling call issue fixed jquery still wrong thing input", "d": "5/2015"}, {"body": "good point", "d": "5/2015"}, {"body": "real usecase since docs see may html string dom element array dom elements since would array dom elements bytesize perf hit", "d": "4/2015"}, {"body": "necessary intercepted html replaced empty string", "d": "4/2015"}, {"body": "ca nt use sure stackoverflow answer creating form element first place", "d": "4/2015"}, {"body": "well meant data stored javascript variables elements work nt think applied since elements serialize case challenge much getting string ready send actually send way handled ajax call real form submission ie response likely html page need rendered browser whichever url answer generates form order make native browser rather jqueryjavascript send data", "d": "4/2015"}, {"body": "would say scores seems much like plugin", "d": "4/2015"}, {"body": "see mean could certainly work plugin although would nt cause harm core either except admit hundred bytes probably around minimized insignificant know suppose main question generally useful let go points page require access jquery internals nt suppose jquery benefit unless course future functionality would use sort related dom operations actually acts way yield formdata control jquery back dom makes sense currently served official plugin although one could made change existing api nt go best practice afaik suppose reason came felt counterintuitive functionality cumbersome achieve creating form input elements faster cleaner way within jquery suppose plugin", "d": "4/2015"}, {"body": "inside plugin nobody sees cumbersome people need use plugin people nt need wo nt pay since nt build smilingimp", "d": "4/2015"}, {"body": "pretty bogus jsperf nt loops inside tests like jsperf looping get measurable test also lot code outside actual calls could taking time example work create string like know jsperf jquery performance post question forum stackoverfow", "d": "4/2015"}, {"body": "second request", "d": "4/2015"}, {"body": "thanks report svg support long listed wo nt fix document along links relevant discussions elaborate position", "d": "4/2015"}, {"body": "little disappointing position taken svg gaining widespread interest use though nt html dom svg attributes still accessible dom via vanilla js tickets shown years ago", "d": "4/2015"}, {"body": "years later might time reconsider jeresig thanks", "d": "4/2015"}, {"body": "exactly would like see added looked libraries like raphael designed support svg keep mind svg html despite fact look similar represented strings", "d": "4/2015"}, {"body": "detecting hasclass addingremoving classes would hugely helpful ux interaction boon yes know raphael snapsvg let say using different animation library add snap look classes add performant click events particularly already loading jquery feels painful redundant realize request might large scope yes svg nt html possibility jquery could add feature worth discussion everyday usage svg web fastgrowing adding kind support potential large payoff community", "d": "4/2015"}, {"body": "title request better svg support still super vague would pretty hard make pull request say large scope sounds like asking svg dom supported jquery methods asking class operations", "d": "4/2015"}, {"body": "better svg support overall would outstanding say might large scope anticipating could heavy jquery support yes thanks clarifying specifically asking add class operations svg attributes would huge ux boon change way could handle interaction svg moving forward", "d": "4/2015"}, {"body": "get board class manipulation fact recently updated sizzle guarantee shorthand class selection others said ecosystem different svg got added wontfix list", "d": "4/2015"}, {"body": "class manipulation svg elements", "d": "4/2015"}, {"body": "want class names draw line agree fewer concerns well two ways afaik one switch property attribute patchwelcome feature ticket approach idea switch docs use approach avoid forked code paths another support api would implemented parallel existing code since several currently supported browsers android still implement pr caitp declined land specifically concern svg scope creep someone asks svg support hey fixed support svg fix guilt trip gon na back us right smilecat eg much much", "d": "4/2015"}, {"body": "think valid concern performance classlist buggy implementations attribute approach lot simpler faster", "d": "4/2015"}, {"body": "ok sounds like best way switch classname class attribute cursory look tells references attributesclassesjs file would correct try let svg support snowball huge problem guys", "d": "4/2015"}, {"body": "dmethvin classlist supported svg nodes ie way make work use attribute full svg support might bloat jquery lot times hear people sth nt work jquery svgs classes attributes already sortof work right think nice support one thing planning patch nt found time yet", "d": "4/2015"}, {"body": "topic longer decline patches svg elements perhaps remove wo nt fix list otherwise say one thing opposite topic like case shadow dom support svg decrease performance increase size complicate code user operates svg elements js sooner later would need cssclasses use special libs appropriate way imho", "d": "4/2015"}, {"body": "topic like case shadow dom support svg decrease performance increase size complicate code markelog found actually case using idl attribute methods identical work vm fact property merely reflects attribute although reflection works differently svg noted nonnormatively html spec classname classlist idl attributes defined dom specification reflect class content attribute people might ask please use createelementns depending context something could incur performancecomplexity costs class api issue pretty easy fix series line changes swap classname getsetattribute adding svg cases class api tests", "d": "4/2015"}, {"body": "topic longer decline patches svg elements perhaps remove wo nt fix list otherwise say one thing opposite appears svg limited class support topic like case shadow dom support svg decrease performance increase size complicate code user operates svg elements js sooner later would need cssclasses use special libs appropriate way imho", "d": "4/2015"}, {"body": "please see caitp comment class operations large part ux interaction people need lot yes indeed using snap gsap enhancement seems within scope easy define boundaries", "d": "4/2015"}, {"body": "change simple enough probably wo nt hurt performance size simplicity wanted past concern users want svg supported across board going happen soon leave svg wontfix list jquery remain html dom library leave hard parts working svg elements libraries focus said ability work classes svg minor utility could provide disproportional benefits users nt need anything class manipulation would imagine happens pretty often", "d": "4/2015"}, {"body": "tada sparkles heart fireworks", "d": "5/2015"}, {"body": "great news agree svg scope case specifically good one support one thing classname exists svg two values baseval animval third approach use thisclassnamebaseval", "d": "12/2015"}, {"body": "llbe thanks turns using attribute even faster property html svg use code", "d": "12/2015"}, {"body": "version jquery use seems basic example work everywhere need test case proceed", "d": "4/2015"}, {"body": "closing due inactivity", "d": "5/2015"}, {"body": "currently planned nt proper infrastructure place time first supported version npm versions thirdparty time took ownership npm package ca nt update instead nt encourage use outofdate versions migrating simple", "d": "4/2015"}, {"body": "tried ended getting stack overflows time july went using crashed worked fine", "d": "4/2015"}, {"body": "jquery supports experience issues please try create test case amp report bug us really need ca nt specify nt think want encourage using older versions library", "d": "4/2015"}, {"body": "proxy npm github links nogo try get small test case nt think able happened site lot happening keep source code vcs thanks response", "d": "4/2015"}, {"body": "guess could publish huge demand people fine upgrading great able find culprit timmywil think", "d": "4/2015"}, {"body": "agreed preferred route would fix issues", "d": "4/2015"}, {"body": "mzgol timmywil see reproduce error", "d": "4/2015"}, {"body": "duplicate jquerysizzle harmless already fixed upstream resolved next jquery release", "d": "4/2015"}, {"body": "invoked setter attempts apply argument element collection independently specifically affects checkboxes radio inputs select elements update boolean instead string based whether element value appears input workaround fact correct way pair array values elements collection created jqueryapijquerycom clarify documentation", "d": "4/2015"}, {"body": "see thanks clarifying nt quite clear docs although quite tired still reason implement behavior treat input types differently expect desired behavior would apply element array input rather inputs would cool also consistent edit sorry misunderstood reply current behavior different wanted bit convoluted docs could clearer said issue ca nt readily extended string inputs indeed tired", "d": "4/2015"}, {"body": "stackoverflow right place reporting jquery bugs clear repro case", "d": "4/2015"}, {"body": "see", "d": "10/2015"}, {"body": "understand position increase weight jquery much nt seen people complaining feature guess something many people wanted", "d": "4/2015"}, {"body": "function args every method nt really make code lot shorter easier understand use cases", "d": "4/2015"}, {"body": "dmethvin use everywhere need also think useful aurelioderosa think implement need lines code much", "d": "4/2015"}, {"body": "redexp nt think need wish nt requires code inside jquery worth also performance killer way defined example html function passed current html content may needed expensive retrieve", "d": "4/2015"}, {"body": "redexp rewrite jquery favor", "d": "4/2015"}, {"body": "know guys stuff without problems talking api consistency attr prop css", "d": "4/2015"}, {"body": "api consistency got mess something added api making operation easier api", "d": "4/2015"}, {"body": "well everybody think like close issue", "d": "4/2015"}, {"body": "defense redexp function core part nt normally function save lines everywhere many case user give function etc", "d": "4/2015"}, {"body": "yes complexity due mess support incredibly complex set input arguments runtime", "d": "4/2015"}, {"body": "bad thing concept pass function instead value one reasons love library", "d": "4/2015"}, {"body": "per meeting like see code take would anyone like take shot", "d": "5/2015"}, {"body": "timmywil would like take crack", "d": "5/2015"}, {"body": "great thanks jdphenix looking forward seeing pr", "d": "5/2015"}, {"body": "okay timmywil nt realize ref hash spammed every time otherwise would pushing changes fork apologies noobiness git aside first run implementing initial test case used tests wrote", "d": "5/2015"}, {"body": "use case working right usage would replace call finally guess dom operations however many items would function version mean one dom operation per item collection", "d": "7/2015"}, {"body": "guess dom operations however many items every class manipulation done individually node fact simple via jquery nt mean lot nt happening hood", "d": "7/2015"}, {"body": "case guess adding function switch cost either one mentioned running node makes much simpler requiring less function calls", "d": "7/2015"}, {"body": "made comments pr", "d": "7/2015"}, {"body": "nt think necessary", "d": "9/2015"}, {"body": "pull contributing trying avoid fair hold someone else may want implement time apologies", "d": "10/2015"}, {"body": "thanks letting us know happens still bunch questions pr anyway nt think add feature agree", "d": "10/2015"}, {"body": "since activity close always reopen someone knows want signature", "d": "11/2015"}, {"body": "incorrect happens even without jquery test case sounds like bug chrome", "d": "4/2015"}, {"body": "unfortunately time try without using jquery document ready features place jquery could failing otherwise would chrome bug", "d": "4/2015"}, {"body": "works test case consistently reproduce becomes available revisit", "d": "4/2015"}, {"body": "timmywil test incomplete must open link new tab using target blank", "d": "4/2015"}, {"body": "link", "d": "4/2015"}, {"body": "jsfiddle poor site tests wraps everything iframe even lite mode jsbin better", "d": "4/2015"}, {"body": "think easy enough reproduce create simple html file locally fail thu apr pm micha\u0142 go\u0142\u0119biowski wrote jsfiddle poor site tests wraps everything iframe even lite mode jsbin better reply email directly view github regards mike", "d": "4/2015"}, {"body": "oste sure create local html file contents provided works fine chrome tried multiple times", "d": "2/2016"}, {"body": "reproduce either jquery latest please make sure issue exists latest version jquery create test case jsfiddle jsbin", "d": "4/2015"}, {"body": "yes issue exists jquery sorry founding simulate ajax request list code click document ready function suggest click function alert hello ajax url apiechojson datatype json data dest hello success function data consolelog success error function data consolelog error apiechojson ajax request returns wright data even though wright json formate output error think confused jqueryajax document wrotes success type function anything data string textstatus jqxhr jqxhr function called request succeeds function gets passed three arguments data returned server formatted according datatype parameter datafilter callback function specified string describing status jqxhr jquery xml object jquery success setting accept array functions function called turn ajax event", "d": "4/2015"}, {"body": "request data must valid json request fail go error callback even http status could nt otherwise since jquery supposed deliver converted json success callback parameter example", "d": "4/2015"}, {"body": "ok tks dmethvin newer jquery read document function called request succeeds think success methord called request succeeds take http status code", "d": "4/2015"}, {"body": "nt add enumerable properties", "d": "4/2015"}, {"body": "thank", "d": "4/2015"}, {"body": "try jquery code nt exist good idea test latest version reporting bug chance might already fixed", "d": "4/2015"}, {"body": "happened backbone collection trailing url safari like issued found actual request made authorization code attached request headers removing trailing solved issue", "d": "4/2015"}, {"body": "jquery case looking normalized per docs use want original native event", "d": "4/2015"}, {"body": "thanks", "d": "4/2015"}, {"body": "excluding sizzle supported jquery said readme compat branch perhaps everyone reads main readme add note well", "d": "3/2015"}, {"body": "let morph docs issue", "d": "3/2015"}, {"body": "thanks quick help", "d": "3/2015"}, {"body": "trying fix easier add new test", "d": "3/2015"}, {"body": "seems script executing illegal return statement causing error regardless script retrieved executed", "d": "5/2015"}, {"body": "problem changing want use pieces jquery another environment nt ie nodejs wo nt work nt think way see cover scenarios would create hook users provide etc implementations default list assumed globals found amp taken factory amp amdcommonjs problem affects timers", "d": "3/2015"}, {"body": "understood naive solution fall back local timer functions global nt exist course breaks concept assumed globals guess firefox sdk pretty much unique commonjs globals available fact perhaps firefox issue", "d": "3/2015"}, {"body": "understood naive solution fall back local windowsettimeout timer functions global settimeout nt exist could work already expose globals variables see see also commit made code stop assuming browser environment could even check first fallback would make things work little better jsdom exposes patched able cancel timeouts would add bytes though could fixed firefox sdk side better jquerycore think", "d": "3/2015"}, {"body": "js environment without settimeout global weird place though find might want explode already detectstore window somewhere could reuse find", "d": "3/2015"}, {"body": "gnarf firefox sdk runtime global object sandbox kind excludes et al evil weird crazy mzgol saving bytes always good thinking firefox sdk global feature bug say unusual use case happy hack local jqueryjs imagine sandboxed runtimes future interesting implemented checking first get nice jsdom behaviour idea risky change would", "d": "3/2015"}, {"body": "implement would look something like adding parameter introjs factory defining similar definitions window methods right opposed exploring", "d": "3/2015"}, {"body": "using alreadyavailable facepalm", "d": "3/2015"}, {"body": "implement would look something like adding global parameter introjs factory defining var settimeout windowsettimeout globalsettimeout similar definitions window methods right may hard sometimes get global universally need special code path node knows else unless required people supply nonbrowser scenarios seems hostile using alreadyavailable wo nt work node module module instead could create additional wrapper closure define define module", "d": "3/2015"}, {"body": "", "d": "3/2015"}, {"body": "gnarf js environment without settimeout global weird place although part ecmascript happen though find might want explode already detectstore window somewhere could reuse find settimeout defined global like ie nt contain property explicitly passed factory consumer relevant detection code timmywil would name file build system change change semantics detection idea avoids problem perhaps checking available would need added well repetitive feeling could extracted helper", "d": "3/2015"}, {"body": "mzgol yes thinking var module return var settimeout change semantics detection catching problem nt var want variable named top built file every place needing settimeout referring var nt issue", "d": "3/2015"}, {"body": "timmywil suggestion get built file fallback global empty bytes someone passes factory nt property declaration shadowed global effectively get even though global might exist", "d": "3/2015"}, {"body": "course shadowing would shorter change name var", "d": "3/2015"}, {"body": "may hard sometimes get global universally need special code path node knows else unless required people supply nonbrowser scenarios seems hostile given strict mode work everywhere turns get free using alreadyavailable wo nt work node module instead global true outermost context introjs calls iife true iife context defines context defines returns could either add etc parameters define etc inclined towards former wo nt even break strict mode practically indistinguishable proposal anyway", "d": "3/2015"}, {"body": "could either add etc parameters define etc let see understand correctly propose roughly modulo comments amp size reduction following introjs js function global factory pass window defined yet typeof window undefined window function window settimeout cleartimeout setinterval clearinterval noglobal even make whole body strict leave first iife still going work", "d": "3/2015"}, {"body": "fine jumping lot hoops wonder much", "d": "3/2015"}, {"body": "course shadowing would shorter change name var yes going harder contribute firsttime contributors assume available nt necessarily need know magic used make available", "d": "3/2015"}, {"body": "let see understand correctly propose roughly modulo comments amp size reduction following introjs even make whole body strict leave first iife still going work pretty much actually whole thing compatible strict mode embedding avoid assumptions first iife eg instead", "d": "3/2015"}, {"body": "really want jquery domcentric meaning needs dom work correctly would jquery dom ie correct object usable things like deferreds etc want use module use build jquery without module want use helpers methods like use etc yeah build version jquery core module", "d": "3/2015"}, {"body": "really want jquery domcentric meaning needs dom work correctly would require jquery dom ie correct window object environment global require passing factory still take timer functions global mainly exist node custom compilation less node would work required lie problem changing would fix issue would make harder node people inconsistency reason considering fixing issue good idea eg environment needs say sorry need getting passed via look different place", "d": "3/2015"}, {"body": "markelog also see wrote using node used jsdom jsdom patches etc cancel timers us using global may cause leaks someone uses considered edge case rare enough care considering need global node anyway issue another edge case may", "d": "3/2015"}, {"body": "pr", "d": "6/2015"}, {"body": "alternative pr", "d": "6/2015"}, {"body": "another one", "d": "6/2015"}, {"body": "assuing makes use etc invalid appears like best", "d": "6/2015"}, {"body": "assuing makes use settimeout etc invalid appears yup matters", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "fourth pr", "d": "6/2015"}, {"body": "matched outrojs", "d": "3/2015"}, {"body": "intentional meant used start builded file build system handles also thanks reporting", "d": "3/2015"}, {"body": "ha dmethvin second quicker", "d": "3/2015"}, {"body": "given time machine agree would nt work way however nt think without breaking lot innocent code docs explain default datatype intelligent guess someone retrieving get evaluated perhaps docs could improved calling script text makes sense wo nt execute script calling jsonp script impossible tag used retrieve script browser executes directly calling padding function json argument ing anything directly case", "d": "3/2015"}, {"body": "yea sure change without breaking ton code perhaps docs issue section untrusted urls bypass autojsonp js type inference way answer first stack overflow question longer accurate options objects passed shortcut methods like also longer necessary set option false need pass options object anyway required set proper datatype", "d": "3/2015"}, {"body": "ok see hard fix without breaking backwards compatibility stand corrected still tag equivalent let explicitly document suggestion mentioned would nt work suggestion developer calls nt explicitly set could jquery internally download data via xhr use instead introducing tag think answer would break many sites crossdomain queries site nt set cors allow crossdomain request xhr could fail situations would currently succeed essentially bypassing browser security model xhr nt dropin replacement similarly approach first tries xhr fails access control error falls back current approach would nt help attacker choose url probably typically choose url trigger fallback behavior leaving vulnerability place wanted document eg help future self remember simple solutions wo nt work thanks evaluating", "d": "6/2015"}, {"body": "better put since docs also nt specific jquery inject script tag document using plain dom methods script untrusted site made big mistake still nt think problem adding short warning docs since many web devs nt aware issues", "d": "3/2015"}, {"body": "record since mentioned nt think specific jquery think specific jquery surprising simply calling side effect inserting script tag attackercontrolled url surprising enough documentation describe circumstances happen steps need taken avoid vulnerability thank allowing make case", "d": "6/2015"}, {"body": "attacker control url", "d": "6/2015"}, {"body": "see docs tickets could combined", "d": "3/2015"}, {"body": "guess nt far mark problem though lies many signatures accepts array logic identifies object numeric length element highest corresponding index arraylike length always looks like array empty force elements collection explicitly wrapping array see succeed", "d": "3/2015"}, {"body": "think documented example", "d": "3/2015"}, {"body": "function passed ready overload used value return jquery object containing single item object js function document ready function ready document ready ready return var doc function consolelog ready ready doc document", "d": "3/2015"}, {"body": "thought default behavior following script returns instance example following script returns false also think function fneach fully documented sometimes use iterate collection items necessarily jquery object sorry english", "d": "3/2015"}, {"body": "think best posed stackoverflow question want clarification", "d": "3/2015"}, {"body": "part log end interesting also please provide node amp npm versions check via", "d": "3/2015"}, {"body": "closing lack input answer question reopen", "d": "4/2015"}, {"body": "clear version jquery used code looks like makes requests description trying make crossdomain request django app hosting page port ngnix server port origin defined feeling like stackoverflow question rather bug report would better sort reopen specific problem identified", "d": "3/2015"}, {"body": "nt matter version jquery using version version behave understand defines origin trying cross domain requests multiple requests referring happen page loaded first browser downloads scripts first pic jquery sends xhr request second pic requesting resources via kind ajax call plugin jquery taking upon rerequest scripts idea happening", "d": "3/2015"}, {"body": "yep totally unrelated jquery doh level", "d": "3/2015"}, {"body": "believe stackoverflow right place kind question ask exactly trying accomplish nt see problem jsfiddle", "d": "3/2015"}, {"body": "ok let rephrase problem jquery correctly fire mouseup events multiple buttons released screen expected workflow press two mouse buttons move mouse screen release two mouse buttons get two mouseup events current workflow press two mouse buttons move mouse screen release two mouse buttons get one mouseup event", "d": "3/2015"}, {"body": "oh see mean thanks tested also happens mouse buttons pressed released mouseup event think way browsers handle events tested without jquery", "d": "3/2015"}, {"body": "browser bug", "d": "3/2015"}, {"body": "nt know happened chrome firefox opera mouseup event happens weird", "d": "3/2015"}, {"body": "ah well javascript still ca nt get basic things mouse api right use flash instead thanks help anyway", "d": "3/2015"}, {"body": "html invalid html autoclosing tags disallowed actually interpreted without closing tag example autoclosed next closing see without running jquery code actually contains replacing btw nested tags disallowed opening close previous paragraph", "d": "3/2015"}, {"body": "invalid html nt exception raised rather replacing content", "d": "3/2015"}, {"body": "practical use browser parser via give detailed error messages need reimplement html parser javascript embed jquery using internet explorer see html warnings console things like technically error spec defines pretty deep detail parse badly formed html", "d": "3/2015"}, {"body": "fair enough", "d": "3/2015"}, {"body": "practical impossible nt see source html dom browser parses case following html html html show wo nt show notice wo nt show paragraph gone serialized dom deserializes following html html html show wo nt show notice wo nt show paragraph gone see paragraph third line actually closed thing jquery sees replacing", "d": "3/2015"}, {"body": "believe published accident regardless already taken care new release script", "d": "3/2015"}, {"body": "believe published accident real issue using instead publishing person happens sidefiles directory get published handled release script possibly easiest way achieve always publish fresh copy btw likely need need make sure nt happen amp branches either wo nt use new release script", "d": "3/2015"}, {"body": "using separate repo publish longer necessary made get copied repo make sure nt distribution publishing npm manually rather updates old release stuff reopen reminder", "d": "3/2015"}, {"body": "make sure distcdn nt distribution publishing npm manually rather updates old release stuff reopen reminder add amp amp branches amp changes release script necessary amp wo nt rememeber submit pr sounds ok", "d": "3/2015"}, {"body": "submit pr sounds ok sure", "d": "3/2015"}, {"body": "pr", "d": "3/2015"}, {"body": "fixed amp", "d": "3/2015"}, {"body": "", "d": "4/2015"}, {"body": "reason ever supported api", "d": "4/2015"}, {"body": "see", "d": "3/2015"}, {"body": "scottgonzalez thanks maybe script would nt bad heard scripts discouraged although nt know", "d": "3/2015"}, {"body": "would potentially put dirty state immediately though right nt sound great", "d": "3/2015"}, {"body": "touch good gets dirty state nt forget commit everything files match noop", "d": "3/2015"}, {"body": "assuming person making change manually changing using changes made script wo nt run", "d": "3/2015"}, {"body": "postinstall would help us remember nt want users onetime contributors deal", "d": "3/2015"}, {"body": "changes made npm install savedev somepackage postinstall script wo nt run right good idea", "d": "3/2015"}, {"body": "nt see problem linked page properties update every click possible confusing property attribute rate though appear jquery issue believe otherwise please link reduced test case eg jsfiddle reevaluate", "d": "3/2015"}, {"body": "right problem debugger sorry hassle", "d": "3/2015"}, {"body": "works closing issue", "d": "3/2015"}, {"body": "pointed code line necessary length parameter automatically updated new length removed unnecessary code commit", "d": "3/2015"}, {"body": "internally use merge jquery objects arraylike need corrected see documented perhaps api ticket needed cc arthurvr", "d": "3/2015"}, {"body": "yup note documentation ca nt hurt open issue api site home", "d": "3/2015"}, {"body": "moving", "d": "9/2015"}, {"body": "mean jquery actually finally promisea implementation", "d": "10/2015"}, {"body": "yanickrochon yup already available test jquery amp jquery compat latter one need support issue testing real browsers far testing node jsdom", "d": "10/2015"}, {"body": "mgol needs done achieve see also", "d": "4/2016"}, {"body": "separate qunit module needs defined wrap promisesa test suite run automatically browsers en example run might straightforward achieve expect apply hackery get done properly wanted get release ask would like try achieve ask test purposes", "d": "4/2016"}, {"body": "mgol would like help achieve little experience qunit though able run version qunit yesterday newly released deferredjs tests passed deferredjs tests comparable promisesa test suite tests user help", "d": "4/2016"}, {"body": "mgol actually jquerygitjs ran qunit yesterday downloaded jquery zip github include within change source point local copy jquerygitjs ran tests assertions passed", "d": "4/2016"}, {"body": "deferred tests nt contain promisesa one new test would added gruntfilejs testdatatestinitjs new module created inside testunit file would need define qunit test would invoke promisesa test suite run browser require writing browser adapter test suite similar testpromisesaplusadapterjs information available readme promisesaplustests npm package mostly", "d": "4/2016"}, {"body": "mgol little experience using nodejs previously composed adapter reviewed readme found deferred exposed run", "d": "4/2016"}, {"body": "mgol probably incorrect though tried require promisesaplustests require jsdom env function errors window errors consoleerror errors return received error", "d": "4/2016"}, {"body": "nt replied want fix issue jquery run tests tonicdev runs code node browser nt seem like solves willingness run browser error got caused tonicdev default runs old version node", "d": "4/2016"}, {"body": "mgol nt replied want fix issue jquery run tests yes fix issue jquery attempted convey would like help achieve user help little experience nodejs unit tests though willing help able", "d": "4/2016"}, {"body": "ok need set locally tonicdev wo nt help need set test environment read run qunit test suite building jquery via grunt described readme navigating nt experience node amp qunit need warn though nt seem extremely easy would nt classify good first bug", "d": "4/2016"}, {"body": "mgol portion follow instructions entire page returned error run", "d": "4/2016"}, {"body": "think everything may useful maybe except section building whole jquery running amd mode particular need working apachephp setup recent nodejs", "d": "4/2016"}, {"body": "mgol run builtin web server locally procedure work builtin server reinstalled nodejs yesterday believe amd mode tests composed ordinary javascript without reliance nodejs php server", "d": "4/2016"}, {"body": "real web server needed eg ajax tests also run jshint build files amd one final file etc nodejs needed love use apachephp lots tests using php rewriting would long nontrivial task currently builtin php server fail ajax tests task nt require run ajax tests might fine", "d": "4/2016"}, {"body": "mgol found requirebin receiving error", "d": "4/2016"}, {"body": "mgol tried different browser received error", "d": "4/2016"}, {"body": "mgol could reproduce tests see jquery team ran tests", "d": "4/2016"}, {"body": "timmywil team run tests described jquery beta released jquerydeferred objects updated compatibility promisesa promises verified promisesa compliance test suite", "d": "4/2016"}, {"body": "included test suite tests run grunt task", "d": "4/2016"}, {"body": "mgol", "d": "4/2016"}, {"body": "mgol approach link return expected results", "d": "4/2016"}, {"body": "sure asking could elaborate", "d": "4/2016"}, {"body": "mgol referencing approach return expected results described op get test suite run real browsers note could probably improved ieg substitute elements single page elements ability reference file existing object full source run tests issue misunderstood", "d": "4/2016"}, {"body": "described needs done proof concept repository nt nt even use qunit", "d": "4/2016"}, {"body": "sorry interrupting wanted start using karma point maybe could first step think", "d": "4/2016"}, {"body": "perhaps tests stable enough make work least main browsers expect problems android ones though nt nice story recovering failed tests etc", "d": "4/2016"}, {"body": "yeah probably although nt lot tests promise support recall might pass", "d": "4/2016"}, {"body": "mgol experience running goal run promisesa compliance tests browser test jquery deferred however could achieved mean nt tests running correctly experience running saying run tests yes nt promisesa compliance test included files referenced composers files willing help clear guidance", "d": "4/2016"}, {"body": "nt want", "d": "3/2015"}, {"body": "writeonly looking read property better said less verbose version", "d": "3/2015"}, {"body": "idea rejected years ago lot change years quote pertinent comments seems people expect tend agree jitter potential abuse simply enormous many people nt understand concept dom element think html inject element place else add outerhtml going see ton stuff like john resig classic example nt simple theoretically yes however jquery public api new methods released specific endorsement idea along comes support support means tests tests mean bugs bugs mean edge cases edge cases mean hours debug never simple seems also criticism reasons implementing amount well idiot something idiotic going get idiotic results unfair summary reasons given plus one easy implement plugin hazy interactions tables exactly people trying use similar welltested api methods almost exact thing method handle data events associated element replaced mike sherov right mikesherov easy ignore consistency details definitely plenty tickets arriving tracker tell us outerhtml broken case simple implementation suits needs problem using dave methvin", "d": "3/2015"}, {"body": "way implementation changed years since currently supported browsers even compat support property nt know whether means plugin even shorter", "d": "3/2015"}, {"body": "discussed meeting leaning towards adding plenty short nt want add support issues firstclass outerhtml mix", "d": "3/2015"}, {"body": "thanks update", "d": "3/2015"}, {"body": "comments come sizzle selector engine used jquery sizzle opposed jquery one version line supports browsers jquery note plan reduce browsers supported jquery compat current jquery ie see happen time jquery next version still mean even jquery version nt support still see code nt make sense browsers getting rid would require sizzle two versions though always pain maintain gains would nt large enough enough workarounds sizzle warrant separete version thanks looking code filing bug thought", "d": "3/2015"}, {"body": "mzgol comments come sizzle line valhooks nt update selected form reset line line ajax module support examples jquery core", "d": "3/2015"}, {"body": "line valhooks nt update selected form reset line line ajax module support se comments needed support nt delete info older browsers code still needed anyway", "d": "3/2015"}, {"body": "comments cover browser master supports though", "d": "3/2015"}, {"body": "union siblings elements collection one element per level dom tree get expect jquery methods work way", "d": "3/2015"}, {"body": "yes fair enough still would harm mentioned docs surprising case worth short notice", "d": "3/2015"}, {"body": "works fine", "d": "3/2015"}, {"body": "thanks mate screenshot safe browsing without addon look source src attribute missing", "d": "3/2015"}, {"body": "working well getting errors console example mixed content", "d": "3/2015"}, {"body": "error warning see nothing network code since open normally via chrome console looks like", "d": "3/2015"}, {"body": "nt know say working fine whatever problem nt seem jquery", "d": "3/2015"}, {"body": "oliverhuynh please try fresh profile possible extension messing code would beyond scope fix", "d": "3/2015"}, {"body": "btw oliverhuynh say plugins clear firebug installed often cause problems", "d": "3/2015"}, {"body": "btw oliverhuynh say plugins clear firebug installed well plugins extensions maybe nt plugins installed", "d": "3/2015"}, {"body": "btw oliverhuynh say plugins clear firebug installed think default firefox dom inspector wrong", "d": "3/2015"}, {"body": "think default firefox dom inspector wrong look title window minimizemaximizeclose buttons also firebugspecific see browser bar oliverhuynh lot extensions installed need see results disabled", "d": "3/2015"}, {"body": "oh nt seen second screenshot", "d": "3/2015"}, {"body": "hi guys last screenshot run normal mode quick test pluginsextensions issue able reproduce computer place test safe mode firefox first screenshot", "d": "3/2015"}, {"body": "nothing related pluginsextensions strange things methods work well look directly implementatian code replacewith investigate issue", "d": "3/2015"}, {"body": "since nobody else reproduce problem need diagnose system", "d": "3/2015"}, {"body": "thanks report really weird due timing issue seems impossible write test report apple andor like issue able link agree work around", "d": "3/2015"}, {"body": "mzgol agree writing test case would impossible nt report issue apple think would carry weight coming jquery team point right direction happy file", "d": "3/2015"}, {"body": "description provided seems detailed enough could report bug mention affects jquery amp link issue", "d": "3/2015"}, {"body": "link webkit bug", "d": "3/2015"}, {"body": "wow guess must rare enough nt occur often plain object numeric indices etc patch says tries work around could something similar seems like situation december release worth another minorpoint release", "d": "3/2015"}, {"body": "like get response webkit bug first know dealing benjaminpoulain could look", "d": "3/2015"}, {"body": "yep looks like bug one two optimizers problem likely occurs code executed thousand times first try make test case reproduce", "d": "3/2015"}, {"body": "worth another minorpoint release might could ask people affected comment seems like bug manifests mainly large apps hard debug apple going fix amp backport fix line could punt wo nt know release judging past events imo proceed assuming wo nt backport", "d": "3/2015"}, {"body": "suggest go next point release regardless apple lot market share come bug nasty diagnose took weeks unearth core problem jquery great position spare people anguish", "d": "3/2015"}, {"body": "lot market share come yes meant apple backported fix ios amp safari nt release patch people would noticed bug would fixed fix get ios still need patch since supporting ios still want hear affected people tend agree something need patch release", "d": "3/2015"}, {"body": "btw according nt think bug reproable ios simulator sauce uses wo nt able write meaningful test since run test simulators well unless someone going run suite manually ios time time number people able drastically decrease release ios", "d": "3/2015"}, {"body": "hell time reproducing even tell bug exists webkit trunk attempt instrumenting jit makes bug disappear due changes timing anyone found reliable way reproduce bug using test case fragile", "d": "3/2015"}, {"body": "anyone found reliable way reproduce bug test case triggers bug iphone ios reliably nt see bug ios simulator posterity js var getlength function array return arraylength jit getlength arrays var lt getlength alert getlength test gt alerts", "d": "3/2015"}, {"body": "note jit perfunction per incorrectly treated object following code js var getlength function array return arraylength var function array return arraylength var test jit getlength arrays var lt getlength alert getlength alert", "d": "3/2015"}, {"body": "per meeting today hotfix patch release", "d": "3/2015"}, {"body": "perf issue", "d": "3/2015"}, {"body": "seems like good idea", "d": "3/2015"}, {"body": "timmywil let create milestone new patch releases amp changed one new one always change back discover issue possible patches", "d": "3/2015"}, {"body": "mzgol sounds good thanks", "d": "3/2015"}, {"body": "issue looking forward jquery could cover", "d": "3/2015"}, {"body": "swamped tasks moment chance take second look far tell bug still exists good release addressing", "d": "3/2015"}, {"body": "michael look fixed bug", "d": "3/2015"}, {"body": "awesome bug guess nt idea merged latest safari whether backported means new release still", "d": "3/2015"}, {"body": "lodash hit lodash managed avoid naturally without targeting issue specifically switched checks helper function islength perf hit actually spoke soon seems lodash users mistaken reporting issue resolved", "d": "4/2015"}, {"body": "digging looks like solution simple storing doable workaround seems avoid uglifyjs transformations see", "d": "4/2015"}, {"body": "discussion decided go tweak approach remove concerns minifiers equation using helper produces function like", "d": "4/2015"}, {"body": "fyi fixed ios", "d": "4/2015"}, {"body": "chrome getting following error need something avoid", "d": "4/2015"}, {"body": "bug datatables code please report issue also see previous report issue", "d": "4/2015"}, {"body": "mzgol report issue also research asking question next time thanks", "d": "4/2015"}, {"body": "fix committed datatables nightly version date change apologies error", "d": "4/2015"}, {"body": "hi came across bug writing ios app using uiwebview jquery minified hosted available fixed version jquery", "d": "5/2015"}, {"body": "nokuno bug fixed jquery maybe experience different issue", "d": "5/2015"}, {"body": "mzgol right issue one thank", "d": "5/2015"}, {"body": "fix bug causes error chrome ie firefox tested chrome ie firefox calling function using empty string argument reproduce error note function called directly script triggering custom event element using elementtrigger eventname function isarraylike obj isarraylike", "d": "7/2015"}, {"body": "open separate ticket jquery repo showing happen using public api", "d": "7/2015"}, {"body": "ignore previous comment investigation problem found cause problem caused improper public api use previous jquery versions fail silently jquery show error", "d": "7/2015"}, {"body": "worth investigating", "d": "3/2015"}, {"body": "get desired behavior animating width height rather right bottom", "d": "3/2015"}, {"body": "johnrodney would work positions", "d": "4/2015"}, {"body": "well right equals left width bottom top height maybe implement animation like firefox top bottom passed animate top given height topbottom seems annoying real issue animating css values nt initialized allows undefined behavior leads inconsistent browser interpretation far tell", "d": "4/2015"}, {"body": "hmmm imho bug timmywil something incoherent want first set element size right try put inner border side try put element large start left termine right incoherent remove border see bug zoom replace see bug outline inner oh crap nt test firefox saw tiny visual bug actually google chrome thought bug", "d": "4/2015"}, {"body": "issue difference behavior ff removing border nt alter behavior test case confirmed works reason adding right bottom values animation", "d": "4/2015"}, {"body": "pushing", "d": "9/2016"}, {"body": "thedavidfactor fix animate issue firefox detect mozilla browser write animate method mozilla almost similar animate method browsers animate method additional css properties elaborate created fiddle please check also please let know case queries concerns", "d": "11/2016"}, {"body": "stems difference getcomputedstyle firefox browsers values former reporting postadjusted used values latter returning absolutized preadjusted concept nt even named since computed value margin properties matches specified therefore remains percentage specified words firefox probably right thing per css specifications", "d": "8/2017"}, {"body": "error expected object exists duration event time runs gone console message described sounds like would coming underscore something might changed", "d": "3/2015"}, {"body": "started project upgraded underscore nt changed aware limitations preventdefault timeout behavior broken since updated test native timeout error", "d": "3/2015"}, {"body": "right confirms object accessible function returned test case shows working giving error console simpler test case shows ca nt event", "d": "3/2015"}, {"body": "issue code exactly jquery version changed see create test case fire cases", "d": "3/2015"}, {"body": "well see happens whether jquery whatever code actual app may something mask prevent problem assume since console message appeared jquery way treats event object copy properties want event time clearly nt even make sense attempt inside since default action presumably already occurred earlier point time", "d": "3/2015"}, {"body": "right close ticket", "d": "3/2015"}, {"body": "could post concrete example preferrably jsbin hard guess mind sharing code", "d": "3/2015"}, {"body": "nt account jsbin reproduce edit way line expecting return javascript string please tell go away still somewhat beginner never looked hood jquery", "d": "3/2015"}, {"body": "jquery passes exact type declared object case passes number replace method number type goes booleans example info jquery convert declared keys string values according spec keys always strings", "d": "3/2015"}, {"body": "yes please ask questions stack overflow bug", "d": "3/2015"}, {"body": "apologies guys guess thanks help", "d": "3/2015"}, {"body": "point repo latest jsdom nt work latest node latest iojs probably issue unrelated jquery tried old computer see breaks well", "d": "3/2015"}, {"body": "unfortunately repo closed source could definitely node version issue currently looking rolling back latest node release also nt old computer currently get home hours check node version try running project npm update report back whatever find thanks tip", "d": "3/2015"}, {"body": "yep jsdom supports iojs need jsdom lt work node currently testing get updated small chance able drop jsdomonly workarounds fixed", "d": "3/2015"}, {"body": "getting jsdom installing jquery npm believe running jsdom version unless missing something version listed packagejson nodemodulesjquerynodemodulesjsdompackagejson", "d": "3/2015"}, {"body": "constellates unless directly jquery repository wo nt get get even though package dependency project means installing old version npm package older one nt published us thirdparty took ownership ca nt help need upgrade", "d": "3/2015"}, {"body": "thanks help rolling back node version work around issue correct currently jquery try updating", "d": "3/2015"}, {"body": "sohanprstap issue nt seem anything jquery also problem different one reported cases please open new bugs nt resurrect old ones", "d": "11/2015"}, {"body": "would nt necessarily ditch work makes build process little complicated impossible", "d": "3/2015"}, {"body": "fine merging branches like still release nt support otherwise many jquery downgrade since supporting larger library would slow adoption new version modules differ lot converge may introduce convention naming files build process proper version chosen versions eg amp otherwise introduce comment directives would cut parts files different code needed different browsers hopefully would nt lot cases separatefiles approach seems cleaner", "d": "3/2015"}, {"body": "really sad nt saved much space master always seems platform still holding us back whether android phantomjs main trouble spots would seem event ajax data maybe naming mzgol suggests along new build process would solve maybe would better continue separate branches drop support potentially keeping supported feel needed differences accessing internal data makes cherry picking much difficult even keep new data implementation restore consistent way modules get data across", "d": "3/2015"}, {"body": "otherwise introduce comment directives would cut parts files different code needed different browsers real ifelse syntaxaware build step let treeshaking remove unreachable code two files better two branches enough taste", "d": "3/2015"}, {"body": "maybe would better continue separate branches drop support potentially keeping supported feel needed worth noting beginning january current version internet explorer available supported operating system receive technical support security updates means months officially unsupported ms except embedded scenarios xp still supported nt matter means large companies need migrate enterprise mode support keep apps working amp still security fixes might good idea wait year amp drop instead opting complicated build process spend time merging branches drop shortly afterwards time spent cherrypicking chance lower time needed set tear apart later", "d": "3/2015"}, {"body": "time spent cherrypicking chance lower time needed set tear apart later right relative effort certainly guiding principle well", "d": "3/2015"}, {"body": "good point mzgol maybe wait drop support time deprecate jquery compat altogether", "d": "3/2015"}, {"body": "per last week meeting decision wait drop support ie thus deprecating compat project effectively result return one branch", "d": "3/2015"}, {"body": "timmywil please remember remove milestone amp add wontfix label closing bug wo nt fix", "d": "10/2015"}, {"body": "first answer question yes modules made smaller already sure others find similar opportunities go dispute assertions however jquery quite heavy bloated methods would probably never used website quite npm way frontend web development nowhere near bloated npm proof look directory node development like layers onion reason nt look bloated top level seeing outer layer pungent onion every module include npm usually include many modules worse projects usually include different versions modules toponionskin project layer dutifully dependencies dependencies lower layers control code may still saddled whatever bugs thought escaping say want iterate objects would use jqueryeach lodasheach since jquery depends usable free course include utilities functionality prefer lead bloat even load different versions lodash methods one app without requireing whole lodash src files yes obviously behavior upon many node programs depend mentioned adds bloat reduce bloat allow sane debugging developer choose single version use jquery src already modulised would nt hard publish small piece npm need build tool convert nt see producing publishing modules problem challenge sharing single object support continuation passing style chaining overcome bigger issue consumption modules first frontend code nt file think thousands jquery plugins nt know dependencies second ca nt node include multiple versions everything every layer onion code moving internet resting instead tools need way flatten duplicate dependencies include one version yet ca nt happen automatically cases developer need resolve conflicts jqueryspecific issues matter node developers preach npm ideal tool clientside web developers right working npm lot others improve moment could summarize mo modules mo problems javascript development community long way solving issue solution far invent multiple incompatible workflows different package managers module loaders etc defrag mess agree smaller simpler set processes otherwise web developers rightly stay workflow simple comprehensible like including files manually via tags", "d": "3/2015"}, {"body": "note like eventually switch amd modules amp compile amd potentially commonjs whole modularization would require changes really soon also publishing lots tiny modules would complicate release process significantly much rather work switching modules implemented implementing transpiling someone needs modules etc", "d": "3/2015"}, {"body": "bloat primary concern modules way go using custom build process smaller footprint using modules directly also jquery utility library utility methods like used internally convenient users expose grand scheme nt actually many methods make sense standalone methods instance seems intuitive publish separately ajax many dependencies deferred callbacks core quickly becomes simpler include whole jquery would publish separately perhaps ajax methods together one module getting grouping ending compiled file size jquery anyway given leaving module wrappers love using modules js publishing jquery methods modules individually would lot effort surprisingly little reward", "d": "3/2015"}, {"body": "sounds interesting jquery willl converted modular future saw repo yesterday guys think future jquery", "d": "3/2015"}, {"body": "used syntax jquery transpiled suspect would add unneeded bulk resulting source also probably would nt get lot benefit features like arg destructuring default arguments given parameterhockeyhappy way api defined decade ago might fun see looks like though maybe could find subset pleasant write would nt add bulk pretty easy play babel repl see comes always free use code call jquery matter build likely transpile source next years anyway actually want use syntax modules look something like instead", "d": "3/2015"}, {"body": "thank issue roadmap foreseeable future probably take look modules may", "d": "3/2015"}, {"body": "thank guys back mind love using modules js publishing jquery methods modules individually would lot effort surprisingly little reward surprised nt know", "d": "3/2015"}, {"body": "looking issue year many projects actually start using monorepo approach treeshaking devs nt need worry size note like eventually switch amd modules definitely way go smile", "d": "6/2016"}, {"body": "think everyone development team forgotten term bloat means bloat case jquery code utilized end user several university studies based akanomi data nonprofit organizational data shows less jquery utilized enduser bin sites require library also search engines notable organizations recommending steer away thirdparty libraries designed lazy developers jquery top lists get back bonilla js fan npm majority developers leave development dependencies assets releases huge security issues however npm right track helping development flow reducing bloat dmethvin way saying node development like layers onion reason nt look bloated top level seeing outer layer pungent onion every module include npm usually include many modules true modules include dependencies module included deep onion layers dependency despite security issues npm developers impose releases development tools left easily removed problem jquery nothing library development stuck mentality honestly nt see surviving another five years conservativly speaking another issue one big module much complicated maintain release esp security patches ux cattering developers days making web apps faster secure cost effective maintainability end development importantly enduser keeping bandwidth minimum", "d": "7/2016"}, {"body": "celticparser fact publish one package nt mean compile whole jquery source broken separate small amd components load ones need future likely switch modules even easier integrate various tree shaking tools", "d": "7/2016"}, {"body": "mgol talking switching modules future nt future already came", "d": "5/2017"}, {"body": "shrpne always pull requests welcome", "d": "5/2017"}, {"body": "shrpne sort primary place jquery used browser transpilers seen widespread usage es modules defined spec still supported natively stable browser except safari surprisingly said getting understand argument made jquery get ahead browsers still wonder much actually gain jquery users use compiled version jquery seems like nt made slim build available saw notable amount jquery users including custom build code rewriting modules build system use es modules require lot effort predict users actually take advantage final issue time require lot effort volunteers anyone wants take time would welcome pr", "d": "5/2017"}, {"body": "timmywil open issue better sum everything modules new issue issues modules closed looks like unwanted feature glad see milestone badge least future always eyes may somebody would like carry", "d": "5/2017"}, {"body": "roadmap issue", "d": "5/2017"}, {"body": "tracking issue roadmap really like subscribe something inform availability modules thanks", "d": "4/2018"}, {"body": "thank opening issue error thrown browser jquery", "d": "3/2015"}, {"body": "chrome firefox json parse used native api browser", "d": "3/2015"}, {"body": "provide demonstration seems working", "d": "3/2015"}, {"body": "issue reproduced html document jquery loaded trailing slash part documentlocationhref property reproduce via ajax additional testing unable reproduce issue home computer closing", "d": "3/2015"}, {"body": "big fan parameter hockey leaving callback pretty rare case always use placeholder jquery signature accepts options arg like specify outlier cases heart delight everyone agrees seems make sense clarify docs", "d": "3/2015"}, {"body": "agreed docs issue", "d": "3/2015"}, {"body": "think already docs issue nt", "d": "3/2015"}, {"body": "yup thanks arthurvr", "d": "3/2015"}, {"body": "theory queasy feeling probably cases existing code depending undocumented failsilent quirky behavior", "d": "3/2015"}, {"body": "per today meeting agreed like try changes see goes let nail places like see change", "d": "4/2015"}, {"body": "think agree need address change casebycase basis assess impact community rather making sweeping changes across board asking everyone make lots adjustments code going incrementally stages niche use cases done first common cases introduced every major release already changes pipeline changes let specific issues opened one closing issue reached consensus broad", "d": "5/2015"}, {"body": "closed without making specific tickets going independently address unsolicited pull requests removing guards even answer affirmative think include assume function input matches documented signature repository future reference maybe contributingmd", "d": "5/2015"}, {"body": "right like move away leaving issues open could closed single pull request opening issue discussion fine discussion resolves closed track broader guidelines overarching goals roadmap", "d": "5/2015"}, {"body": "mostly nt backport required nonbrowser environments nt support compat line nothing porting makes cherrypicking easier note though different jshint config assumes browser environment one declares amp timer functions", "d": "3/2015"}, {"body": "create variable part nt seem worth mostly used supported amp support tests use", "d": "7/2015"}, {"body": "support tests use btw worth checking still applies maybe could switch support tests even", "d": "7/2015"}, {"body": "seems switch support tests work fine doc ready pr coming edit issue created", "d": "7/2015"}, {"body": "pr", "d": "7/2015"}, {"body": "landed via", "d": "9/2015"}, {"body": "rather backport way compat code may pose problems nodejs", "d": "11/2015"}, {"body": "wontfix since done connection", "d": "11/2015"}, {"body": "since released remove label", "d": "12/2015"}, {"body": "last time tried caused problems ie lt rather stayed wontfix unless verify ie nt problems", "d": "12/2015"}, {"body": "fell foul weird formatting rules guess htmlstring originally", "d": "3/2015"}, {"body": "still didnt save try using serverhtmlencode htmlstring htmlstring html cleanser string ie", "d": "3/2015"}, {"body": "server html encoded strings get unencoded put back original try remember", "d": "3/2015"}, {"body": "preserving native browser behavior expecting", "d": "3/2015"}, {"body": "hi thanks quick reply defines correct rendering html years ago valueless attributes attribute name value ie disabled deprecated html recognising old form converting new standards code page supposed write disabled disabled old code therefore indicates element set disabled html effectives opposite setting also states tags content eg input img meta etc contentless elements ie stand alone tags expects properly formatted html readable xml parser comes html see html returns native innerhtml looking jquery hide browser differences looking jquery protect native browser variations return standard syntax need standard compliant transferred server resent users predictable results machine need html rendered exactly way given ser user key depressions regardless browser also sent html email nonstandard rendering email generally gets bounced isp another real problem much code generating html strictly well behaved html issue server strictly xml compliant problem created locally eg textarea contenteditable app uses allows user trigger execcommand native htmlclient javascript edit document execcommand allow paste external applications eg ms word basically anything turn stuff problem deal junk clean supplier dross bloats copy paste client side app uses xml services totally screwed microsoft recently internet explorer recent ie changes could job browser pain deal microsoft changes time regards dr martin w baker york development research limited mailto martinwbaker yorkdevrescouk martinwbaker yorkdevrescouk tel mob skype martinwbaker skype martinwbaker call status registered england registered office north house high street tonbridge kent email attachments confidential intended addressee named recipient use disclose reproduce copy distribute contents communication received error please contact sender delete email system richard gibson mailto notifications githubcom sent march jqueryjquery cc martin subject jquery html function return correct xhtml legacy created html strings preserving native browser behavior expecting reply email directly view github", "d": "3/2015"}, {"body": "code page supposed write disabled disabled quote spec spec seems contradict", "d": "3/2015"}, {"body": "sounds like want deal xhtml guaranteed valid xml names indicate neither native property jquery method make guarantees recommend using code specific quick search part turned seems exactly want rate scope existing jquery methods", "d": "3/2015"}, {"body": "richard wow feed back quick helpful sorry land across research thanks much really appreciate help new query two weeks old even time impressed guys achieved architectural elegance solution kind regards martin dr martin w baker york development research limited mailto martinwbaker yorkdevrescouk martinwbaker yorkdevrescouk tel mob skype martinwbaker skype martinwbaker call status registered england registered office north house high street tonbridge kent email attachments confidential intended addressee named recipient use disclose reproduce copy distribute contents communication received error please contact sender delete email system richard gibson mailto notifications githubcom sent march jqueryjquery cc martin subject jquery html function return correct xhtml legacy created html strings sounds like want deal xhtml whichunlike guaranteed valid xml names indicate neither native innerhtml property jquery html method make guarantees recommend using code specific problema quick search part turned seems exactly want rate scope existing jquery methods reply email directly view github", "d": "3/2015"}, {"body": "say exactly correct code get junk document eg end user paste contenteditable textarea element javascript execcommand another application native machine user running junk comes needs cleaning want get rubbish inhertited outside application dr martin w baker york development research limited mailto martinwbaker yorkdevrescouk martinwbaker yorkdevrescouk tel mob skype martinwbaker skype martinwbaker call status registered england registered office north house high street tonbridge kent email attachments confidential intended addressee named recipient use disclose reproduce copy distribute contents communication received error please contact sender delete email system dave methvin mailto notifications githubcom sent march jqueryjquery cc martin subject jquery html function return correct xhtml legacy created html strings code page supposed write disabled disabled quote spec spec seems contradict reply email directly view github", "d": "3/2015"}, {"body": "please link live demonstration jsfiddlejs binetc showing behavior deviates expectations", "d": "3/2015"}, {"body": "thanks reply gibson link live demonstration please open link safari browser run sample program select cycle option jquery returns dom elements two times", "d": "3/2015"}, {"body": "caused use numeric values attribute duplicate fixed jquery", "d": "3/2015"}, {"body": "thanks lot taking time see ticket give response", "d": "3/2015"}, {"body": "see trac background problem suggested fix trades one bug another far tell good set unit test additions would confirm", "d": "3/2015"}, {"body": "per trac bug think leave wontfix", "d": "11/2015"}, {"body": "float case", "d": "3/2015"}, {"body": "seems like better fix almost everything except negative values octal", "d": "3/2015"}, {"body": "behavior intentional value converted number nt change value representation example equivalent numbers numeric value converting would alter representation left strings string value converted number see explanation introduced jquery infer intent opaque sequence characters feel free numericcast values know operation makes sense", "d": "3/2015"}, {"body": "make sense work number separator instance really represents integer float really unfeasible new behavior following logic also affect hexadecimal developer expect hexadecimal literally numerical conversion", "d": "3/2015"}, {"body": "also affect hexadecimal way disambiguate developer safer assume values serialized strings indeed treated strings let developer explicit html fwiw html spec properties pretty clearly states value always coerced string dataset idl attribute provides convenient accessors data attributes element getting dataset idl attribute must return domstringmap object relevant part domstringmap set value new existing named property name value value algorithm setting names certain values must run passing name name result converting value domstring value illustrate would jquery know value string legacy octal literal jquery always returns string developer whatever want", "d": "3/2015"}, {"body": "thank opening issue agree according docs work rare edge case may worth fix use case brought discovering behavior created test case", "d": "3/2015"}, {"body": "second nt valid json formfeed f nt allowed want escape double backslashes", "d": "3/2015"}, {"body": "duh thinking already escaped dave right nt think things", "d": "3/2015"}, {"body": "encounters problem processes file paths windows wonder normal behaviour understanded thank much", "d": "3/2015"}, {"body": "dmethvin leaning towards beta know use case would make catastrophic", "d": "3/2015"}, {"body": "seems like returning good idea although knows break wild way find change continue return empty jquery collections tho", "d": "3/2015"}, {"body": "continue return undefined empty jquery collections tho thanks reminded create", "d": "3/2015"}, {"body": "seems like returning null good idea although knows break wild course answer turns jquery ui working updates right", "d": "3/2015"}, {"body": "team decided revert due breakages ui mobile", "d": "3/2015"}, {"body": "backed definitely seems right also excluded want nonexistent attribute return proposed want remove milestone tag", "d": "3/2016"}, {"body": "removed milestone due revert opened issue amp added needs review label account dave question", "d": "3/2016"}, {"body": "backed definitely seems right also excluded remember discussion reverted cause might dangerous proved ui breakage literally gain except align standard whereas behaviour dom spec questionable first place since others js api get value value", "d": "3/2016"}, {"body": "thank opening issue adding additional selector extensions core", "d": "3/2015"}, {"body": "tried introducing option jqueryajax function named authbyheader set true would cause jqueryajax set authorization header basic username password working fine tested functionality well local machine would great mods could look", "d": "3/2015"}, {"body": "anshuxlr link feature code message please", "d": "3/2015"}, {"body": "madlittlemods link commit", "d": "3/2015"}, {"body": "ie seems support credentials url tested locally seems true nt work ie chrome ff currently using set headers method well mitigate problem changes method get options however yes option let jquery set headers would nice maybe even default true nt work ie otherwise madlittlemods commit seems work think however function could achieved much simpler according mdn source", "d": "4/2015"}, {"body": "mattdimu clear nt make changes commits please look names replies anshuxlr posted link code", "d": "4/2015"}, {"body": "yeah sorry meant anshuxlr ofc", "d": "4/2015"}, {"body": "thank opening issue however would quite bit code support option probably would get used much besides would much rather trust separate library tests stays date encoding rather include support directly jquery library like could used conjunction headers option team member disagrees reopen", "d": "5/2015"}, {"body": "timmywil reason options still documented", "d": "5/2015"}, {"body": "sure mean options used open xhr", "d": "5/2015"}, {"body": "timmywil kind authentication set using options xml open reference user optional user name use authentication purposes default empty string password optional password use authentication purposes default empty string", "d": "5/2015"}, {"body": "maybe misunderstanding issue issue username password options currently useless day age useful conjuction header setting header necessary sometimes options adequate certain cases", "d": "5/2015"}, {"body": "cc jaubourg", "d": "5/2015"}, {"body": "timmywil options seem absolutely nothing situation looking networking tab dev tools extra headers added etc means unauthorized way basic authentication manually setting header", "d": "5/2015"}, {"body": "madlittlemods real question xhr spec let see julian say subject reassess", "d": "5/2015"}, {"body": "wait jaubourg urls xhr passing username passwords work unless use crossorigin request ignored issue already come could read nt use crossorigin request please create testcase jsfiddle similar site", "d": "5/2015"}, {"body": "ah thanks issue markelog helps tremendously", "d": "5/2015"}, {"body": "markelog perfectly right sorry late party lot things take care work since take vacation starting end week usual situation remedied prefilter check request option set option appropriately could get bit hairy wan na account situations", "d": "5/2015"}, {"body": "check request crossdomain username password option set headers option appropriately could get bit hairy wan na account situations right exactly wanted avoid due encoding issue thank clarification jaubourg markelog", "d": "5/2015"}, {"body": "according guard browsers longer support sounds good", "d": "3/2015"}, {"body": "yes already couple places stopped guarding browsers missing one go well", "d": "4/2015"}, {"body": "checkmark already blog post", "d": "5/2015"}, {"body": "data attributes pulled first time data property accessed longer accessed mutated data values stored internally jquery need modify attributes please use", "d": "2/2015"}, {"body": "thank question jquery process adding support shadow dom casebycase basis however question better suited forums", "d": "2/2015"}, {"body": "second issue resolved lands first appears working expected please post link reopen edit reproduce first issue reopen", "d": "2/2015"}, {"body": "get dimensions hidden elements jquery must make element visible measure requires browser expensive reflows nothing say docs issue already note goes every dimensions page clear enough getting dimensions hidden elements always going unreliable slow especially applied hundreds elements", "d": "2/2015"}, {"body": "would better classed issue jquery ui library investigated nt expectation library would checking dimension inner elements making selections surprising see big performance difference due filtering looking different means hiding filtered rows table avoid problem happening", "d": "2/2015"}, {"body": "might things jquery ui make faster sure anything selectableitem data would valid hidden elements whole thing might able skipped", "d": "2/2015"}, {"body": "nt seem jquery core action items dmethvin could open api issue suggested clarification quite sure mind", "d": "3/2015"}, {"body": "kinds utilities make jquery used internally plugins utility libraries code best ways cover use case", "d": "2/2015"}, {"body": "intro outro files syntactically incorrect purposeful build half wrapper around built source standalone modules sure assets task suspect attempting concactenate files src folder looking build jquery custom build instructions readme", "d": "2/2015"}, {"body": "make confusing", "d": "2/2015"}, {"body": "agree given time machine one first things would killed hitler time someone noticed inconsistencies suggested fix back decided even back would break much code today ratio jquery native web probably hundreds one nt make sense create backcompat nightmare match semantics different method used different types objects want exact arguments method jquery create little plugin implement also means nt broken existing code continues use get ways", "d": "2/2015"}, {"body": "dont touch hitler nobody knows could without fix spend next years regreting missing opportunity untill another chance fix", "d": "2/2015"}, {"body": "fixing regrettable action equivalent way solve want", "d": "2/2015"}, {"body": "check", "d": "2/2015"}, {"body": "issue longer necessary several runs since keeping eyes swarm failures times keep reminder meeting minutes wo nt release got green thanks", "d": "3/2015"}, {"body": "careful us exposing shim browser builtins freezes makes much harder remove later want people also expect us fixes making close native possible imo would make sense mostly wanted people able provide implementations assigning sure useful would", "d": "2/2015"}, {"body": "given jquery promises wrapped promise libraries jquery deferreds consume standard thenables nt much need also concerned opening possibility replacing internal use promises promise implementation would add list things need support cost vs benefit ratio nt seem high enough", "d": "5/2015"}, {"body": "think supporting standard pattern would highly useful community allow developers consistently use promises regardless provider encourage good coding practices", "d": "10/2016"}, {"body": "see us creating alias different though latter adds new handler existing deferred", "d": "2/2015"}, {"body": "course would need done trigger reserved word treatment older browsers", "d": "2/2015"}, {"body": "giant since promises nt based prototype much easier supported internally rather something like wrap constructor decorate returned promise", "d": "3/2015"}, {"body": "updated title accuracy suggested implementation", "d": "4/2015"}, {"body": "sounds like blocker", "d": "4/2015"}, {"body": "got", "d": "2/2015"}, {"body": "recast question form bugfeature think would whether jquery support lazyloaded would run handlers fires read background seems like could use hack domready uses", "d": "2/2015"}, {"body": "seems like could use hack domready uses hack needed ie lt code looks like", "d": "2/2015"}, {"body": "reference mentioned hack last commit dropping ie lt", "d": "2/2015"}, {"body": "meant check use domready turns method went away using indirect feature check penalize least think would mean", "d": "2/2015"}, {"body": "ah library domready coreready sorry", "d": "2/2015"}, {"body": "dmethvin sum thinking could check interactive long use scroll hack determine interactive supported", "d": "10/2015"}, {"body": "even nicer exists assume allow fire versions ie nt work properly cases allow interactive", "d": "10/2015"}, {"body": "original author interactive check gotchas consider also case flushed partial content creating interactive state without full html loading whether oldie nt remember need check also case readystate interactive caused bottom page scripts accidentally relied sync operations combined ready firing synchronously consider following code var foo function alert foo foo hi always alerts current jquery implemented readystate interactive cases alerted may longer problem always fires async time jquery deferred synchronous food thought edge cases consider", "d": "10/2015"}, {"body": "thanks mikesherov fortunately know least one good unit test question whether edge still bug believe places caused problems", "d": "10/2015"}, {"body": "reference test iframe file whoa really time flies", "d": "10/2015"}, {"body": "filing issue native browser features fiddle nt even use jquery", "d": "2/2015"}, {"body": "realize thanks", "d": "2/2015"}, {"body": "dup", "d": "2/2015"}, {"body": "think may relying undefined behavior chrome firefox nt show nt try browsers find spec reference says event path change delivery jquery honors nt find discussion happen listener removed midst dispatch find one", "d": "2/2015"}, {"body": "found something like method allows removal event listeners event target eventlistener removed eventtarget processing event triggered current actions eventlisteners never invoked removed", "d": "2/2015"}, {"body": "yes seem like spec intended behavior similar language mdn note none three browsers seem call event listener added process handling event seems oddly asymmetrical nt seem special case laid way classic modifying collection enumerated dilemma jquery single dom event listener jquery handlers element takes snapshot handlers exist time event arrives tried use live collection would need guard case alreadycalled handler removed could skip handler still attached lot mess really rare edge case jquery event handler semantics nt match dom event listeners exactly fact even browsers consistently tells rarely people depend suggested resolution add sentence docs clarifying handler list element set event first delivered far wanted would something like solution", "d": "2/2015"}, {"body": "funny thing anything jquery project wanted know case work native event handlers browsers checked jquery found mismatch know understand making changes part code responsible event handlers good idea complicate much agree rare case proven think first one noticed adding notification jquery docs sufficient job", "d": "2/2015"}, {"body": "api issue opened", "d": "2/2015"}, {"body": "hi ca nt use exists third handler current must invoked vote behaviour", "d": "5/2015"}, {"body": "hello behavior", "d": "5/2015"}, {"body": "please file issue reduced test case", "d": "2/2015"}, {"body": "seems like good idea plugin would nt go jquery core", "d": "2/2015"}, {"body": "originally going write angry rant dismissed facts form lt object stars stars stack overflow question upvotes years ago google results jquery serialize quickly shows serialize object turning form data json common practice opposite nt uncommon though generally reserved parsing current search query populating search form form lt querystring jquery function however function luckilly plugins debatable serialize would even jquery core ca nt shift something back querystring lt json object turning serialized string object back done numerous libraries qs brought walmart labs simply put querystring node core jquery implements object querystring luckilly plugins querystring object jquery care jquery mix useful wrappers avoid browser differences well make life easier animate function animations one things really made jquery popular data function store objects reference jquery still using deferred system instead bluebird done makes sense many cases forms nt part dom would right however forms important peice dom arguably important brush supporting finge usecase seems quite shortsighted", "d": "3/2015"}, {"body": "dmethvin maybe jquery size bit large however functions aretoo important us frequently used jquery official side would better offer", "d": "3/2015"}, {"body": "would argue jqueries size getting large perhaps effectscss need moved seperate repository cross browser compatability css also huge issue creating effective animation suite task would nt involve alot code however huge change likely complete wrong direction want", "d": "3/2015"}, {"body": "", "d": "3/2015"}, {"body": "ajax need jquery internals wrapper believe wrapper course benefit code always benefit features nowadays jquery attempting lean mean internally likely tool developers however relates lot assorted inputs forms part dom believe served plugin however seen comment though still ranks high search results stackoverflow deserialize jquery people would generally prefer recreating possibly sloppy andor imperfect implementation use plugin many reasons however comes official vs unofficial unless giant library force reckoned usually simple scripts seen untrustworthyannoying end small files get basic functionality another example ends number jquery deserialize jquery want support developers recreating possibly worse wheel think point jquery crossbrowsertools would use everywhere change existing api nt believe fail see something like deserialized serializeobject nt make cut worth guys make excellent product rather praise criticize however nt enjoy line answers", "d": "3/2015"}, {"body": "yes", "d": "2/2015"}, {"body": "duplicate", "d": "2/2015"}, {"body": "afraid always fail case even would use host window guess best nop fyi method detached nodes always bad idea", "d": "2/2015"}, {"body": "arguable throwing error preferable even returned style declaration every value empty string nt see use case retrieving styles early useful", "d": "2/2015"}, {"body": "stems perf advice longer relevant building dom detached avoid layouts paints yeah node detached throw error", "d": "2/2015"}, {"body": "current behavior seems fine unless better use case showing commonly happen really help caller return empty strings case", "d": "2/2015"}, {"body": "ok seems team agreement thank opening issue desired behavior retrieving styles detached elements opened docs issue", "d": "2/2015"}, {"body": "would fine making lot changes promisea compliance would also move people towards standard methods", "d": "2/2015"}, {"body": "sounds good let also open ticket jquery migrate tho", "d": "2/2015"}, {"body": "opened", "d": "2/2015"}, {"body": "created docs issue", "d": "2/2015"}, {"body": "per blog post links change means longer option jquery going forward recommended way cancelling requests", "d": "6/2017"}, {"body": "jfbrennan ticket nt say anything", "d": "6/2017"}, {"body": "dmethvin per blog post links makes sound like removed along nonpromise methods sorry misunderstanding one upvotes says jquery ajax method returns promise without extra methods like abort", "d": "6/2017"}, {"body": "point url official jquery documentation says deprecated removed nt know nt assume stackoverflow answer correct", "d": "6/2017"}, {"body": "says removed specialcase deferred methods jqueryajax jqxhr object promise also extra methods like abort stop request made users increasingly embrace promise pattern asynchronous work like ajax idea special cases promise returned jqueryajax increasingly bad idea kind implies wasis chopping block votes says removed links blog post nt think one misunderstanding might good jquery team clarify although mentioned nt actually removed understand gospel truth seems somewhat widespread misunderstanding gone think blog post may cause", "d": "6/2017"}, {"body": "dmethvin updating answer reflect reality someone clarify statement means context users increasingly embrace promise pattern asynchronous work like ajax idea special cases promise returned jqueryajax increasingly bad idea statement saying although removed time seen special case returned promise may removed road", "d": "5/2018"}, {"body": "winzig thanks help yes definitely special case since way abort standard withdrawn proposal uses like require like two epic threads finally settled implementation fetch goes show hard problem", "d": "5/2018"}, {"body": "better question forum stackoverflow", "d": "2/2015"}, {"body": "browser decides fire element removed dom appears jquery removed data element actually removed focus management flakey general many browsers particularly ie blur asynchronous example nt even get final event nt lot jquery need handle removing focused element add logic code", "d": "2/2015"}, {"body": "given situation behavior depend getting focusout event element removed explicitly set focus visible element removing element focus good practice anyway", "d": "2/2015"}, {"body": "docs seem pretty clear purpose prerequest callback function used modify jqxhr jquery xml object sent use set custom headers etc time reaches point bookkeeping already completed want change data could prefilter", "d": "2/2015"}, {"body": "dmethvin thanks anwser use set custom headers etc interpreted also would something allowed modify", "d": "2/2015"}, {"body": "thatt modifying jqxhr though", "d": "2/2015"}, {"body": "somehow possible use one call possible register globally", "d": "2/2015"}, {"body": "one ajax call could nt pass data options encode url call getting forumstackoverflow territory might want start thread best way deal use case", "d": "2/2015"}, {"body": "data already provided ajax using option lib using problem nt control code hook mechanics event fired want intercept adjust data beeing transmitted without modifying lib", "d": "2/2015"}, {"body": "root cause give javascript opposed tries helpful add end value seemed right thing different change method reset css property empty string setting actual value value number would worked method maintains evergrowing list properties truly unitless transitionduration unitless properties one specific value lack units unambiguous numeric value like could mean various different time units wonder place value actually need units could simply skip adding one case", "d": "2/2015"}, {"body": "wonder place value actually need units could simply skip adding px one case", "d": "2/2015"}, {"body": "experts correct plain time value incorrect example probably valid code changes required", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "since polls would seem okay say really sure okay though seems like would need hander notified seeing notifications change version master", "d": "2/2015"}, {"body": "add onabort handler master", "d": "5/2015"}, {"body": "yes looks like need add one compat master behavior", "d": "5/2015"}, {"body": "digging issue nt blocker thought nt try hide native xhr nt encourage direct manipulation either use jquery abort method instead everything works fine dmethvin think still worth fix one minor speedbump status text op case compat error abort fixing requires changes branches sure something necessarily support", "d": "7/2015"}, {"body": "timmywil using jquery abort method option browser aborts request reason computer suspend example", "d": "7/2015"}, {"body": "refresh without reinvestigate affect current master compat initial comment said", "d": "7/2015"}, {"body": "dmethvin affects way handler fires affects way handler fired instead one", "d": "7/2015"}, {"body": "way around", "d": "7/2015"}, {"body": "ah confused", "d": "7/2015"}, {"body": "problem using plugin people nt need adding quite bytes nothing", "d": "2/2015"}, {"body": "agreed thank opening issue think best left plugin", "d": "2/2015"}, {"body": "agree w tjwudi common case included main jquery package", "d": "9/2015"}, {"body": "well param plugin deparam", "d": "8/2017"}, {"body": "looks right please reread docs ask help forum stackoverflow", "d": "2/2015"}, {"body": "ok figured wrong selector instead thanks putting time cheers", "d": "2/2015"}, {"body": "mrducnguyen odd positional selector means filters selection independent dom structure selectors nonstandard slow quite frankly atrisk future versions strongly recommend switching nthchild cases like siblings interchangeable filter generalpurpose afterthefact collection reduction instead use one following note css oneindexed opposed zeroindexed javascript", "d": "2/2015"}, {"body": "thanks suggestions actually found another interesting thing actually different use adds class row index adds class row index", "d": "2/2015"}, {"body": "stems fact nested table related document order nested tr elements follow tr elements outer table yet another reason avoid positional selectors", "d": "2/2015"}, {"body": "stop spamming repository", "d": "2/2015"}, {"body": "actually would like keep probably prevalent user code needs stay regardless long time nt used much nwmatchers name filters intuitive name regardless like continue recommending use createpseudo method creating custom selectors making choice one property somewhat moot except jquery ui already uses available", "d": "2/2015"}, {"body": "actually would like keep sense moving deprecated standardizing probably prevalent user code needs stay regardless still exceedingly rare among things lack documentation fix could nt simpler rate though propose deprecation think remove anytime soon promote consistency long time nt used much would depend measurement criteria probably used execution count jquery ui alone extent specialcase functionality used much bet updating apijquerycom would address educational gap nwmatchers name filters intuitive name appears nwmatcher moved least api perspective addressing however even nt maintaining surface area jquery core support transitioning independent selector engine seems overaccommodating regardless like continue recommending use createpseudo method creating custom selectors making choice one property somewhat moot except result still assigned object property eg", "d": "2/2015"}, {"body": "would depend measurement criteria probably used execution count jquery ui alone extent specialcase functionality used much bet updating apijquerycom would address educational gap think different wavelengths terms defining custom pseudos said jquery ui mostly used used still referring user code general remember seeing much often maybe memory result createpseudo still assigned object property eg data totally true brain fart however main point nt jquery documentation either documenting custom pseudo creation jquery fine picking property sticking still nt see value behind deprecating properties deprecation voices intention removal whether say use property documentation seems like enough", "d": "2/2015"}, {"body": "per meeting decided pseudos", "d": "2/2016"}, {"body": "thank opening issue think best left plugin maintained independently", "d": "2/2015"}, {"body": "looks correct necessary actually change dimensions element animation text wraps strangely animation changes width height opacity width reduces less length text text wraps expect happen", "d": "2/2015"}, {"body": "basically problem calling toggle twice nt leave state permanently turned inlineblock element even animation worked around explicitly resetting element back inline animation done though", "d": "3/2015"}, {"body": "cburschka issue whenever call toggle hiding aspect works fine however toggling back show hidden content inline style left causes content appear originally cburschka worked around explicitly resetting element back inline animation done", "d": "4/2015"}, {"body": "definitely related fixed supports solution arguably distinct", "d": "2/2015"}, {"body": "sure expecting code like therefore also nt know mean work expect append form body trigger submit event body whereas something like would append immediately submit form", "d": "2/2015"}, {"body": "ah expecting submit triggered newly added html apparently understanding incorrect thank", "d": "2/2015"}, {"body": "posted fiddle fiddle loads jquery default runs see result patch verb success step versions jquery using ie find works versions point see fail detail error appears jsfiddle different reported perhaps due jsfiddle overhead copy code html page run directly using without running jsfiddle see error reported", "d": "2/2015"}, {"body": "thank detailed issue try make fix", "d": "2/2015"}, {"body": "fixed amp available jquery compat", "d": "6/2015"}, {"body": "words issue duplicate", "d": "6/2015"}, {"body": "relevant fiddle confirming works changed jquery version jquery compat edge", "d": "6/2015"}, {"body": "thanks mzgol accessed fiddle saw working appreciate support", "d": "6/2015"}, {"body": "mzgol specific reason wo nt fixed jquery", "d": "10/2015"}, {"body": "flatman lot fixes people would like jquery backporting would really constitute new release anyway also always possibility fix issue breaks something someone else critical piece logic nt currently plan new jquery releases test jquery compat need support", "d": "10/2015"}, {"body": "jquery property bowerjson seems issue connected project", "d": "2/2015"}, {"body": "add reproducible changed", "d": "2/2015"}, {"body": "looks like nt issue", "d": "2/2015"}, {"body": "seems work take look fuzzy rules focus try native methods jquery breaking something works native methods please provide test case", "d": "2/2015"}, {"body": "trying accomplish modifying contents element mouseenterleave pretty dicey note clarification fiddle", "d": "2/2015"}, {"body": "try replace image video mouseenter back mouseleave event jquery event native behave differently fired fired think lack older browsers script normal browsers behave would great implementation mouseenter would work older browsers true emulated eventover", "d": "2/2015"}, {"body": "sounds like understand difference due code simulate mouseenter mouseover even chrome bugs synthesized event double fires problem mouseover event fired img handler div removes seems required event flow says dom event flow event listeners might change position event target document event object dispatched changes affect propagation path second event mouseenter synthesizer checks related element child nt removed perhaps could also check whether related element even document deal edge case nt know occurs situations far work around issue could position img element rather modify dom", "d": "2/2015"}, {"body": "take rare edge case occurs element event path manipulated may fix checking related element removed document mentioned may side effects", "d": "2/2015"}, {"body": "difference behavior nativeevent jqueryevent difficult consider true problem dom event general jquery browsers handle event difficult decide way correct sent bug report firefox example decide bug chrome everything right problem jquery", "d": "2/2015"}, {"body": "nt sound like animus make change feel free reopen necessary", "d": "5/2015"}, {"body": "understand security model since store apps elevated privileges nt take kindly iframes may unknown content provide jsfiddle smallest sample code windows store app crashes code path taking defaultdisplay suspect use show inside blockui always bad idea guess may turn eliminate process dealing breaking change unlikely land soon", "d": "2/2015"}, {"body": "provide complete test case reopen", "d": "2/2015"}, {"body": "go away lands", "d": "2/2015"}, {"body": "since nt see line items let continue working towards resolution", "d": "2/2015"}, {"body": "valid test variable contains every single element page whereas contains single one since indexed use valid comparison see equivalent", "d": "2/2015"}, {"body": "ah sorry inspected prep code closely found base test", "d": "2/2015"}, {"body": "definitely nt use ui", "d": "2/2015"}, {"body": "nt even know existed saw related discussion definitely mobile either", "d": "2/2015"}, {"body": "sounds good think originally exposed users could control retrieve useful values hidden elements use case rare best", "d": "2/2015"}, {"body": "ok assigning", "d": "2/2015"}, {"body": "turns something needs nt want internally could put jquery migrate doubt used externally never documented plus really bad practice performance standpoint", "d": "2/2015"}, {"body": "could improve case simplifying avoiding check visibility seems webkit taking getting value sure would work yet though", "d": "2/2015"}, {"body": "check visibility could optional passing argument disabled default would nt sacrifice performance really needed", "d": "2/2015"}, {"body": "according jquery always adds page pageload use much simpler code support ie browsers obey selector nt know performance characteristics though class selectors probably faster attribute selectors another benefit either classbased attributebased toggling animated css means jquery plugin decide show show happens without changing plugin code", "d": "2/2015"}, {"body": "jamesarosen showinghidding elements used think attribute good choice however spec includes description makes inappropriate number cases hidden attribute must used hide content could legitimately shown another presentation example incorrect use hidden hide panels tabbed dialog tabbed interface merely kind overflow presentation one could equally well show form controls one big page scrollbar similarly incorrect use attribute hide content one presentation something marked hidden hidden presentations including instance printers encourage use ariahidden ties directly actual state element also means element hidden accessible manner", "d": "2/2015"}, {"body": "may silly question keep simple", "d": "4/2015"}, {"body": "niutech overwriting display style kill cascade foo display inlineblock lorem ipsum worse yet preexisting inline styles blowing away well lorem ipsum use different attribute managing visibility element state stays independent styles", "d": "4/2015"}, {"body": "encourage use ariahidden ties directly actual state element also means element hidden accessible manner hidden gt ariahiddentrue hidden attribute used intention showhide fact hide completely view thus accessibility api intention keep line showhide always used correct choice hide gt display none essentially setting hidden attribute means accessibility api takes ariahiddentrue regards problem responsive perhaps nt want hide certain contexts use showhide well say designed application poorly attempting hide hidden certain scenarios toggling class name something similar control whether visible css makes sense showhide removeset hidden attribute respectively modern equivalent showhidetoggle along force correct usage scenarios used wrong combination responsive css jquery creating inline css modern browsers already support hidden attribute natively front end web developer respect already using resetnormalize css setup includes hidden style rule literally one line css anyway due compatibility zzzzbov example spec citing scenario based allowing hidden tabbed content accessible directly screen readers instead setting interactive manner hidden content relayed screen reader hiding tabbed content content accessible screen readers either use css hides without removing accessibility api hide also provide interactive ariabased controls expose content authoring choice bears direct relevance whether hidden attribute used general", "d": "1/2016"}, {"body": "nettsentrisk front end web developer respect already using resetnormalize css setup includes hidden style rule literally one line css anyway due compatibility except css used normalizecss overridden rule happens higher specificity foo display block brought issue back closed wo nt fix", "d": "1/2016"}, {"body": "yeah think emulates native browser stylesheets also according spec includes note attribute typically implemented using css also possible override using css instance rule applies display block elements cancel effects hidden attribute authors therefore take care writing style sheets make sure attribute still styled expected also suggests user agent style use attribute according inevitably leads using display none important", "d": "1/2016"}, {"body": "fixed", "d": "1/2016"}, {"body": "well released update autofix well", "d": "4/2015"}, {"body": "right", "d": "4/2015"}, {"body": "related could punt small might well come valid test cherrypick somewhat indirectly prevents issue surfacing", "d": "2/2015"}, {"body": "nodetype check", "d": "2/2015"}, {"body": "looks like already cherrypicked commit", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "looks like duplicate jquerysizzle harmless already fixed upstream resolved next jquery release", "d": "2/2015"}, {"body": "hey author velocity even nt come fruition excited explore potential improve animation jquery velocity thoughts pro faster animation within jquery particularly lowpowered mobile devices velocity optimized willingness gut velocity redo internals wrap web animation api means even performance benefits particularly situations high concurrent main thread load css currently shines considerably expanded workflow features jquery users talking frivolous niceties rather valuable basics lot people would expect jquery first place transform animation svg animation robust scrolling syntax color animation better animation chaining multicall management removal redundant bloat use jquery w velocity gsap transit svg animation library velocity inside jquery quite bit space saving although mention one remove bytes nuts con could breaking changes certain edge cases may ultimately interested addressing attempted address every edge case velocity would wind far away original intention make animation better make jquery animation better velocity uses jquery animate syntax awesome trying improve upon jquery wanted best animation library could make jquery perfect starting point getting point users velocity people care webbased motion design workflows would expect development principle going forward principle nt completely beholden jquery past yes would likely minor breaking changes nothing big though sure core stuff jquery animate velocity however jquery going semver release par course anyway people want stay comfort zone stick want catch times upgrade read lines new documentation jquery probably needs go regardless remain competitive frameworks big improvements require big changes politicking ca nt turn prolonged backandforth sufficient majority opinion within jquery core move ahead come within reasonable timeline put necessary work get velocity ready internal replacement whatever else guys gals bring attention", "d": "2/2015"}, {"body": "personally love idea gsap velocity around performance perspective reason use current jquery animation engine aside cost adding another dependency app", "d": "2/2015"}, {"body": "reiterate points made meeting nt tests lint code ciintegration uses ua detection instead feature detection clear much would performance gain would since jquery also uses raf test velocity animate tests drop replacement would fail tests first point widely considered bad way write code second recognized bad practise long time ago basically everyone else always advocated logic third point believe jquery performed slower nt case would like see performance test forth point failures api incapability internal really nt mixed feelings statement velocity animation engine api jquery animate although would nt consider replacement would interesting see could reuse tricks library course something interesting aside use see velocity popularity result qualified marketing efforts anything else would nice prove wrong", "d": "2/2015"}, {"body": "cc gnarf", "d": "2/2015"}, {"body": "nt tests lint code ciintegration nt publicize later week uses ua detection instead feature detection microconcern quickly refactored sparing use ua detection limited small subset behavior could probably rip entirely concern better suited subsequent discussion entailing velocity would refactor order replacement clear much would performance gain would since jquery also uses raf articles detail velocity performance optimizations go far beyond raf refer velocity documentation regardless primary benefit velocity one workflow enhancement reversal proper scrolling looping svg animation transform animation ui mocking people switch also continue using performance allure checking test velocity animate tests drop replacement would fail tests yep one thing spoke david interest passing tests something consider jquery semver release example would nt necessarily pass every littleused animation edge case tbd believe minor breaking changes occur better tbd see velocity popularity result qualified marketing efforts anything else would nice prove wrong articles tutorials velocity focus workflow benefits performance workflow benefits inarguably game changer anyone ui motion design fad popularity would nt enduring ps cool velocity stuff", "d": "2/2015"}, {"body": "refer velocity documentation think better perf test numbers best arguments think workflow benefits arguing wonder jquery scope since one jquery goals try small possible want something extensive task might better suited specific animation framework quieter would nt clutterderail discussion since would really interesting hear thoughts cc people", "d": "2/2015"}, {"body": "jquery animate nt ever performance imo dealing really common animation use cases web dev world use cases changing velocity covered interested knowing parts jquery animation unit tests would need compat work velocity core ca nt work velocity core much work julianshapiro thinks personal costbenefit nt think performance even topic thread microperf best performance something work together well lot us experience interested hearing arschmitz well", "d": "2/2015"}, {"body": "following velocity change jquery raf pretty closely since jquery mobile planning switching js based animation transitions decision partially part move share code ui partially seen improvements speed js based animation things like velocity lot headaches surrounding css based solutions gnarf well rest ui mobile teams talked pro cons around current approach going start jquery core see performance issue depending outcome next step going either look using velocity directly try improve directly done limited prototyping around months ago see performance looked like older mobiles tests purely visual frame rates anything time velocity give noticeable benefit though pages admittedly simplistic complex pages velocity would make difference understanding nt think performance even topic thread microperf best performance something work together well lot us experience think work together either way perf concern nt really opinion velocity vs replacing velocity beyond would really like see us work together whatever solution going make sense whole", "d": "2/2015"}, {"body": "also julianshapiro feel free reach irc gnarf google hangouts gmail want talk unit tests jquery", "d": "2/2015"}, {"body": "thanks edit reserved comment julianshapiro everyone else scroll reread comment number could breaking changes certain edge cases idea edge cases may although mention one remove bytes nuts idea difference weight effectsjs velocityjs currently like small compact things nuts could probably help politicking ca nt turn prolonged backandforth sufficient majority opinion within jquery core move ahead totally board plan little worried breaking gt much lt backwards compat significantly increasing file size basic jquery given thoughts making velocitycore could include adding bigger byte size features like color plugins also looked jquerycolor apiway thing really like idea taking core velocity replace effects cover units minimum needed easy install plugins everything else", "d": "2/2015"}, {"body": "julianshapiro thank effort obviously still details work concerning implementation think would safe say move forward couple addenda take lead adapting velocity inclusion team help however still lot would ask patience first address remaining issues want move ahead nt think say certain going included code prepared reach point reassess things need take care inclusion following semver also try make breaking changes unless passing unit tests goal shoot leeway holy grail would pass bulk work completed would great could put together numbers performance comparisons may primary concern still concern first step improving performance measuring also numbers great making release notes ambition improve jquery animations much appreciated", "d": "2/2015"}, {"body": "ambition improve jquery animations much appreciated qft hearteyes", "d": "2/2015"}, {"body": "excited idea mostly antiraf situation getting bad fixed yay feel little conflicted first markelog original concerns seem pretty valid tests published get go hooked ci sure heart broken ua sniffing definitely seems addressable kinda surprised primary benefit velocity one workflow enhancement true velocity library targets sort authoring amp workflow feature set beyond basic animate api shoots inside jquery really interested animation engine reversal proper scrolling looping svg animation transform animation ui mocking sugar available respect combo little funny velocity value proposition around workflow aspects jquery needs basic animationtweening core even snabbtjs size velocity functionality jquery needs performance easy show velocity whopping legacy test cases probably better show difference real world sites measuring avg framerate amp std dev missed frames cpu time per frame tangentially related see julian questions necessity backward compatibility particular amp methods provide ability totally tank performance developers either invalidate styles via mutations force recalc layout probably upgrading animate performance might require addressing two guys", "d": "2/2015"}, {"body": "gnarf paulirish idea edge cases may hook velocity jquery tests find shortly idea difference weight effectsjs velocityjs currently like small compact things nuts could probably help take consideration velocity internal css gettersetter engine would replace jquery process initially spoke david would net negative saving bytes without taking consideration probably around ungzipped extra check velocity goes inside jquery removing features keep necessity focused case would likely size boost even hypothetical situation tests published get go reasons hint wanted discourage pr time happy code feature requests always great tests day one publish weekend mentioned heart broken ua sniffing definitely seems addressable kinda surprised feel like let dad jquery needs basic animationtweening core core assumption nt heard echoed elsewhere fact far understand motivation jquery behalf rethink statement whole short must asking jquery basic animation functionality answer motivationperspective base level svg color transform animation support arguably unacceptable jquery continues lack features going forward animation functionality continue need widespread supplementation enriched workflow level agree advanced workflow features velocity offers probably part jquery good news even part velocity begin relegated velocity ui pack velocityjsorg uipack", "d": "2/2015"}, {"body": "going put worth long time jquery velocityjs user business web development discovered velocity long came impressed low overhead smooth animations compared jquery extent add projects need animations beyond basic use best tool job quite happy custom build jquery without animation support use css animations depending trying achieve still coming back velocity something repeated large number sites using yet never run velocity without jquery scale sites need develop words animate useful bit like hammer velocity screwdriver bits toolbox etc bringing core velocity possibly couple small changes calls fit jquery things would positive thing already extra library mean extra bandwidth part entire balancing act job almost suggest jquery slimline base velocity ie b animations basic control add rest things make velocity special jqueryui colours sequences etc unlike things already already ability build custom version needed would make major code shuffle already minor reshuffle begin far breaking things changing api goes best knowledge api changes would additions rather replacements big differences related wrappers updated tl dr version basically jquery could write improved animation code projects could continue duplicating efforts fix issues improvements browsers projects could come together extra initial work end something better", "d": "2/2015"}, {"body": "issue sitting bit julianshapiro happen hook velocity jquery tests", "d": "4/2015"}, {"body": "thank everyone gave input nt look like realistically going happen still happy review code matter issue reopened necessary", "d": "5/2015"}, {"body": "html", "d": "2/2015"}, {"body": "div contains sap element innerhtml changed javascript language", "d": "2/2015"}, {"body": "please ask programming help stackoverflow jquery forum", "d": "2/2015"}, {"body": "see note removing inline onclick event handler using removeattr nt achieve desired effect internet explorer avoid potential problems use prop instead note include ie funny like", "d": "2/2015"}, {"body": "mobile market share counted separately desktop otherwise get low values almost everything mobile devices still nontrivial amount jquery mobile also needs support cc arschmitz besides real market share likely higher android dashboard counts people visiting google play store amp people newer devices nt think", "d": "2/2015"}, {"body": "one thing could introduce grades support like mobile make sure apis work would nt care pixel differences android etc know rwaldron though", "d": "2/2015"}, {"body": "mobile market share counted separately desktop exactly otherwise get low values almost everything could define everything besides real market share likely higher android dashboard counts people visiting google play store amp people newer devices sorry speculation think statistics close get real data couple years ago android lt share rapidly dropping giant pain support might wait little branch would make sense mentioned nt real old android issue gives optimistic attitude topic", "d": "2/2015"}, {"body": "one additional thing consider hybrid apps one main uses vs always said hybrid apps similar also one main ways jquery mobile used android lt dropped main branch longer able use many hybrid apps support android often goal hybrid apps also idea single code base likely means cases especially using jquery mobile apps start switching platforms like ios well able use version jquery everywhere making apps android cross platform market huge number think would decrease usefulness main branch drive people use compat im really sure thats want", "d": "2/2015"}, {"body": "one thing could introduce grades support like mobile make sure apis work would nt care pixel differences android etc know rwaldron though would ok however would say careful little bit pain point time still trying figure right way handle mobile", "d": "2/2015"}, {"body": "markelog mobile market share counted separately desktop exactly people divide ones using firefox chrome ie etc nt divide people using android ie desktop opera etc use desktop browser mobile one smartphone use mobile one rarely desktop one use conflating desktop amp mobile browsers nt take account", "d": "2/2015"}, {"body": "android lt dropped main branch longer able use many hybrid apps support android often goal hybrid apps also idea single code base likely means cases especially using jquery mobile apps start switching platforms like ios well able use version jquery everywhere actually officially nt support hybrid apps branch dropping android would mean nt support android hybrid apps", "d": "2/2015"}, {"body": "would put mobile really hard spot force us either drop support hybrid apps recommend people never leave need support android would also make actually defining core dependency kind complicated", "d": "2/2015"}, {"body": "would put mobile really hard spot force us either drop support hybrid apps recommend people never leave need support android yup yet another reason dropping android lt would premature point long mobile supports", "d": "2/2015"}, {"body": "need support android mean need support android really need shared opinion keep open could revisit later dmethvin", "d": "2/2015"}, {"body": "seems like still reasonably big numbers android would bad idea break outright platform example issue think keeping android phantomjs point took code would blow nothing would work", "d": "2/2015"}, {"body": "markelog meant need support android whole generalization fully aware many apps written android support versions android currently supported app store actually ok ignoring numbers sooooo low think devs realistically ignoring well nt think ignore", "d": "2/2015"}, {"body": "arschmitz ago run test suite android via browserstack turns nt fail many tests android currently mostly work even nt test difference amp far greater", "d": "2/2015"}, {"body": "mzgol aware nt bring since nt think anyone advocating us supporting yes reality probably fairly safe run nt actually test would recommend anyone", "d": "2/2015"}, {"body": "given current usage stats need android support mobile nt think dropping support yet looking hopeful able drop support later version open new issue time comes", "d": "2/2015"}, {"body": "trust working mobile want drop support anyone cheer day happens cant today", "d": "2/2015"}, {"body": "really think could drop android android statistics", "d": "8/2015"}, {"body": "hidden inputs ca nt contain focus rule jquery break", "d": "2/2015"}, {"body": "dmethvin trying focus hidden input clicking visible textbox time focusin event occurs handler hides sibling input prevents click event propagated another take demo nt used hide time used empty instead", "d": "2/2015"}, {"body": "agree confused thought wrapped however also happens bare dom far tell look correct nt think anything click nt delivered", "d": "2/2015"}, {"body": "dmethvin yes looks correct tried chrome ie ff dom caption clearing nt work", "d": "2/2015"}, {"body": "removing element text box moves underneath mouse pointer keep mouse depressed move box click appears", "d": "2/2015"}, {"body": "ok guess click event considered mousedown mouseup need happen target click happens parent child target moved considered click anymore look demo guess workaround use mousedown instead click parent get mousedown mouseup anyway", "d": "2/2015"}, {"body": "way wrong broken thinking nt dealing argument selectornative turns still behavior difference due nature qsa scoping problem pretty much requires sizzle fix", "d": "11/2015"}, {"body": "still behavior difference due nature qsa scoping problem pretty much requires sizzle fix new injquery implementation borrows ideas sizzle much needed see info plan next major", "d": "11/2015"}, {"body": "point dom matches findall would help nobody seems hurry implement", "d": "11/2015"}, {"body": "drop ie happen conquer mars need parsing logic anyway", "d": "11/2015"}, {"body": "new injquery implementation borrows ideas sizzle much needed see jquerysizzle comment info plan next major possibly later something like selectornative nt even tokenize selector would required even streamlined engine rather injquery implementation prefer see new version sizzle drops polyfills native selectors pos handling manipulates selector something first go qsa matchesselector filtered regardless wo nt something discuss later time comes", "d": "11/2015"}, {"body": "third argument difference branches obviously nt go path", "d": "2/2015"}, {"body": "", "d": "1/2015"}, {"body": "reason done stable releases", "d": "1/2015"}, {"body": "still", "d": "1/2015"}, {"body": "reason latest release newer latest beta user likes bleeding edge uses get latest release discussed ago added explicitly purpose", "d": "1/2015"}, {"body": "ah see missed conversation beta release guess fine case", "d": "1/2015"}, {"body": "would confusing two methods named different things new proposed method nt saving lot typing either unlike dom clone objects ca nt support magic might occur constructor copies properties call making clear since starting plain object", "d": "1/2015"}, {"body": "nt think two different things foreach dom collection foreach basic array think intuitive understand cloning dom elements cloning basic objectsarray agree best saving typing year coherence code think better read instead user cloning something also right constructor etc think nobody expect comportement example underscorejs thing", "d": "1/2015"}, {"body": "example great one fneach implemented using would case vs would clone different types objects different semantics case easily plugin like name", "d": "1/2015"}, {"body": "nt try parse selector js run native method native method throws exception try parsing way could know avoid would parse string would penalize people use standard selectors talks strongly recommend selectors besides jquery custom selectors take sizzle path rejected native methods also force layout dirty time easily trackable classes docs warn well", "d": "1/2015"}, {"body": "talks strongly recommend visible hidden selectors great wikipedia new visual editor tremendous amount app slowness directly attributable using baaad anyway moving native method throws exception try parsing see case obviously invalid selectors better even go patch bouncing exception follow total time column end matchesselector returning exception thing everytime overhead throw extra regex test along two going submillisecond timescale since already running two regex string overall vm overhead minimal", "d": "1/2015"}, {"body": "pull timmywil maybe could quick regex look obvious offenders discussing issue irc perhaps move things like really slow custom selectors jquery migrate course brings sizzle questions well", "d": "1/2015"}, {"body": "suggestion essentially match custom pseudos would save legitimate uses force false positives eg slow words net win however identifying trick given extension mechanism property assignment object containing matchers standard pseudos removing custom pseudos standard builds see core would mourn loss although last one essentially impossible add back without knowledge undocumented effects internals may also want look jquery ui", "d": "1/2015"}, {"body": "little surprised takes long webkitmatchesselector parse selector determine whether invalid wonder improved natively", "d": "1/2015"}, {"body": "could cache fact selector failed skip subsequent ones actually entry sizzle cache nt mean must failed previously", "d": "2/2015"}, {"body": "hmm bad idea", "d": "2/2015"}, {"body": "yeah like lot panacea selectors theirselves different avoids lot pain little effort", "d": "2/2015"}, {"body": "issue opened address issue fairly well little cost gibson said close issue merge sizzle update", "d": "2/2015"}, {"body": "paulirish happy know see improvement", "d": "2/2015"}, {"body": "wow amazing", "d": "2/2015"}, {"body": "nice one awesome", "d": "2/2015"}, {"body": "wow cool", "d": "2/2015"}, {"body": "please provide test case", "d": "1/2015"}, {"body": "thanks opening issue think best place start would jquery irc channel stackoverflowcom", "d": "1/2015"}, {"body": "ok timmywil thanks", "d": "1/2015"}, {"body": "maybe embedding something like argjs good idea", "d": "1/2015"}, {"body": "pretty simple plugin look size argjs definitely would nt want increase size jquery much something already solution available need", "d": "1/2015"}, {"body": "screen shot console running fiddle", "d": "2/2015"}, {"body": "looks like returns tablebending chicanery going sure much use table instead", "d": "2/2015"}, {"body": "sufficiently obscure difficult work around think mark wontfix nt like divs styled table elements", "d": "2/2015"}, {"body": "seems little hard never know url type url parameter leagacy jquery lt", "d": "1/2015"}, {"body": "zhanhb mean url version ajax obsolete", "d": "1/2015"}, {"body": "zhanhb type amp url strings settings object", "d": "1/2015"}, {"body": "first parameter url ajax url settings source code line main method ajax function url options", "d": "1/2015"}, {"body": "deprecated", "d": "1/2015"}, {"body": "", "d": "1/2015"}, {"body": "reason add another signature nt simplify usage", "d": "1/2015"}, {"body": "provide complete example sounds like may attempting load complete document including doctype using read docs load warning related", "d": "1/2015"}, {"body": "uploaded test simple xhtml strict validated buttons load html load fragment simple html file validated load fragment works load html doctype load fragment html strict file validated load fragment fails load xhtml load fragment xhtml strict file validated load fragment fails looked docs linked nt saw warning", "d": "1/2015"}, {"body": "mentioned indirectly jquery uses browser innerhtml property parse retrieved document insert current document probably figure host xhtml document restrictive handle doctype markup afraid issue much edgecase us handle", "d": "1/2015"}, {"body": "warning state tags lost html title added document document wont loaded browser fail load fragment validated htmlxhtml documents still think fixed nt seem hard make valid htmlxhtml documents work well least", "d": "1/2015"}, {"body": "want load full xml document would nt load xml pick part document want inject trying inject whole thing", "d": "1/2015"}, {"body": "fawzibr warning state tags lost html title nt talk part meant jquery uses browser innerhtml dmethvin trying inject whole thing think expects work", "d": "1/2015"}, {"body": "oh well convinced browsers tend sloppy plain old html try make sense even clear decided choose xhtml document type expect sloppy parsing instead specific want happen test case seems want sloppy throw away anything inconvenient part thing browser unwilling throw away doctype wants jquery remove rest sloppy", "d": "1/2015"}, {"body": "definitely seems like much edge case handle normal processing document complete wellformed xml document could load way", "d": "11/2015"}, {"body": "jquery html dom library stuff happens work svg main goal harm long nt use jquery manipulate svg alone difficult two mixed single document see wo nt fix page said diagnose problem fix simple enough would consider", "d": "1/2015"}, {"body": "sure thing read wo nt fix actually easy fix code animate opacity worries thank instant reply", "d": "1/2015"}, {"body": "line items issue closed acting notification sounds good", "d": "1/2015"}, {"body": "linking tickets gh issues discussions like cleanliness notation although link markdown trac links commits lean towards full urls since unambiguous really sure write agree others see happen harder break rules whether read", "d": "1/2015"}, {"body": "seems handled close ticket", "d": "9/2015"}, {"body": "agree makes sense create new deferred rather borrow first one good well", "d": "1/2015"}, {"body": "read correctly reusing original object ensuring always resolves array currently idempotent meaning resolve string matter number calls making less complicated needs would mean would become forget using handling inputs may may deferredpromise would effectively change change mean obfuscatecomplicate resolve value process actual solution another utility would used arrays explicitly", "d": "1/2015"}, {"body": "want accept kind thenable standard promise think want handle case create new always creating new one seems like best way go consistency predictability think changing array case would lot visible breaking separate api might best way document confusion people trying call array", "d": "1/2015"}, {"body": "want accept kind thenable standard promise think want handle thenable case create new deferred always creating new one seems like best way go consistency predictability perfectly right", "d": "1/2015"}, {"body": "fact double request shame sounds like agreement always creating new deferred bit correctly identified jaubourg going halfcocked yet another inconsistency api currently idempotent single arguments multipleargument case behaves entirely differently incongruity chafing moment resolve string matter number calls making less complicated needs would mean would become forget using handling inputs may may deferredpromise would effectively change change mean obfuscatecomplicate resolve value process let stop mixing cast operation operation nt even know primary function though ticket implicitly assumes latter suggestion another utility would used arrays explicitly implicitly assumes former maybe ca nt even stop could certainly pave way providing distinct functions eg", "d": "1/2015"}, {"body": "currently idempotent single arguments multipleargument case behaves entirely differently incongruity chafing moment wikipedia idempotence property certain operations mathematics computer science applied multiple times without changing result beyond initial application case point js var output outputdone function b c amp amp b amp amp c output done function b c amp amp b amp amp c pretty consistent ask nt idempotent would following nt think desirable lot people want toy arrays deferreds confusing say let create whatever wan na call let stop mixing cast operation operation nt even know primary function arguments treated exactly like returned values handler js string done function string string string mirrors resolveddeferredthen function return string done function string string string var deferred deferred resolve string deferred done function string string string mirrors var deferred deferred resolve string resolveddeferredthen function return deferred done function string string string fact manner speaking behaves like handler would return multiple values hence give multiple resolution arguments nt really get confusion consistent", "d": "1/2015"}, {"body": "going die hill resolved keep current interfaces analogous analogous update description covers eliminating reuse single input deferred", "d": "1/2015"}, {"body": "assume issue making sure always creating new deferred also treating regular value words print seconds immediately", "d": "8/2015"}, {"body": "actually separate issue blocker fortunately easy enough fix though thanks report", "d": "8/2015"}, {"body": "looking code docs see lot undocumented behavior around progress notification drop seems like could greatly simplify things treat args thenables regardless source could still document notify master deferred would fire subordinate resolved desirable curiously nt done today notifies passed subordinates seems less useful fine dropping notifications entirely though especially since docs", "d": "9/2015"}, {"body": "nah one time exceptional nt really intention meeting think still like irc also nice docs community infrastructure irc", "d": "1/2015"}, {"body": "thanks opening issue wo nt moving away irc anytime soon thoroughly integrated every jquery project", "d": "1/2015"}, {"body": "yes trying safari via browserstack agree failing problem seems explicitly set vendorprefixed property style safari starts responding property totally bizarre someone else verify see happening well nt know something fix reason nt let us prefixes", "d": "1/2015"}, {"body": "bug caused find neither original style property prefixed one return original one saved line linked first setter checks first since safari recognizes neither saved later try set something cached maps obviously wo nt work fix", "d": "1/2015"}, {"body": "pr", "d": "5/2015"}, {"body": "expected behavior term one bound descendant selector means delegated event order stop propagation delegated event delegation point handlers descendants must run directly bound events element think delegated event bound selector point case conceptually event handled bubbling think way event order seems clear suggestions clarify documentation could open issue suggested wording docs repo", "d": "1/2015"}, {"body": "think dup let make final call would say may work near future make strictly promisea compatible need use deferredspecific methods nt decided best practice would good expect standard behavior standard names", "d": "1/2015"}, {"body": "extremely similar quite duplicate homm would like submit pr code new tests straightforward", "d": "1/2015"}, {"body": "thanks report fixed need wait jquery meantime could check make sure works fine scenario closing reopen still nt work", "d": "1/2015"}, {"body": "jquerygit nt work difference inline script used instead eval ie used", "d": "1/2015"}, {"body": "actually ticket would fix plan land big breaking change right run scripts synchronously come domain sure effect might world", "d": "1/2015"}, {"body": "wrote code probably hopelessly naive break something else makes work patch diff git asrcmanipulationevalurljs bsrcmanipulationevalurljs index asrcmanipulationevalurljs bsrcmanipulationevalurljs define function jquery jqueryevalurl function url return jqueryajax url url type get datatype script cache true async false global false throws true var documentcreateelement script ssrc url documentbodyappendchild return jqueryevalurl", "d": "1/2015"}, {"body": "ah right dmethvin guess stay closed since already", "d": "1/2015"}, {"body": "think track yeah", "d": "1/2015"}, {"body": "sounds like trying use selector get current property rather attribute lacking example guess please ask help stackoverflow", "d": "1/2015"}, {"body": "thanks dave attention scenario want select inputs value want achieve using selector way find elements version code working yes want check current value instead value attribute thing working gives inputs whose current value empty", "d": "1/2015"}, {"body": "code actually broken value property represents current value value attribute try instead", "d": "1/2015"}, {"body": "sounds like version chrome use could create jsfiddle example even try native xhr", "d": "1/2015"}, {"body": "used chrome like said fix think related fail xml", "d": "1/2015"}, {"body": "could please provide code example", "d": "1/2015"}, {"body": "thaina hey checking would able provide test case markelog asked", "d": "2/2015"}, {"body": "issue still open", "d": "6/2015"}, {"body": "green open yes comment asks test case make one", "d": "6/2015"}, {"body": "bumping revert think needs go", "d": "9/2015"}, {"body": "leonardobraga interested providing fix", "d": "1/2015"}, {"body": "marklog yes definitely work pr asap", "d": "1/2015"}, {"body": "leonardobraga still interested", "d": "9/2015"}, {"body": "mzgol sure work weekend send pr thanks", "d": "9/2015"}, {"body": "leonardobraga pinging see going send pr love contribution", "d": "10/2015"}, {"body": "dmethvin sorry delay sending pr also apply changes branches send additional prs", "d": "10/2015"}, {"body": "need easy cherry pick", "d": "10/2015"}, {"body": "please ask help forums stack overflow also seem issue firequery plugin jquery", "d": "1/2015"}, {"body": "would definitely like see done", "d": "1/2015"}, {"body": "plainhtml resize triggered conditions either case jquery detect simulate event pretty rare case perhaps workaround app desperately needs would use timer check size window manually trigger event", "d": "1/2015"}, {"body": "given reported case nt think something work around core", "d": "1/2015"}, {"body": "complication testswarm requires ability execute tests previous commit current one otherwise would done long time ago krinkle info", "d": "1/2015"}, {"body": "move away testswarm suggested infra team browserstacktunnel karma candidates replacement requires good amount time least karma preference", "d": "1/2015"}, {"body": "intern looks like option well", "d": "1/2015"}, {"body": "intern offers qunit support impression framework cc csnover", "d": "1/2015"}, {"body": "could certainly load qunit wanted heard people dumping mocha kind inception since comes quite robust unit testing builtin actually got mostlyworking branch full qunit api compatible interface small amount work address todos probably day two work able drop existing qunit tests intern wrapping work fingers crossed convince team qunit come amp help get cool new stuff intern quickly well prior recent qunit release slightly outdated easy update since could see qunit update adding features intern already easy map", "d": "1/2015"}, {"body": "brain dump assumption dynamic server would autostarted grunt uses automatic port choosing order run concurrently services computer eg projects developers run locally well concurrent builds jenkins alternatively block migrating travis ci port clash andor pick unique ports git branch git repo long testswarm used unless okay ajax tests running testswarm ca nt entry points automatically served common installations apache nginx hence php used server set grunt wo nt exist time testswarm distributes test urls browserstack test urls point notsostatic static web server serving build artefacts jenkins jobs upto days unique subdirectories htmljscss php served nginx also reran testswarm point future within days even remove rerun feature testswarm qunit would still know hostname port server url would publicly exposed browserstack though course would nt issue using ssh tunnel browserstack sure feasible current testswarmbrowserstack setup", "d": "1/2015"}, {"body": "purposes ci generally opposed local development testswarm particular imagine still use stable servers buildsjenkinsjquerycomjquery build urls defer gruntmanaged nodejs servers dynamic responses many ways skin cat one example inbound request build url php handler verifies corresponding port known spawns build checks output little discover suitable failure handling perhaps kill spawned process respond php gets responses forwarding request port suitable failuretoconnect handling perhaps decrement available tries replay original request grunt task leverages gruntcontribconnect possibly also nodeproperlockfile something like js connect alreadyrunning server listening port specified runfile tryconnecting function tryconnecting try port fsreadfilesync runfile req port port invalid function consolelog server running port port catch err trystarting err function trystarting err consolewarn errmessage lock runfile use lockfilelock runfile consider existing locks stale seconds stale", "d": "1/2015"}, {"body": "since summoned already seeing replies would also point dojo core jsgi server mock services set intern test suite need much work could take code adapt use used thing jquery php test scripts used testing dojo io code services directory", "d": "1/2015"}, {"body": "regarding incompatibility testswarm independently outside gruntjenkins run context travis ci local development use variable already exists jquery core unit tests make decisions need vary eg change url paths slightly case nt want suffix nodejs version endpoints likely though tell nt need urls could easily implement urls ways ajax tests already written expectation served http eg static server work served ajax tests already skipped tests make requests php files using relative urls configure nodejs server similarly serve files statically nonstatic router higher precedence ajax server mocks eg route javascript based handler vary according script name query parameters accordingly fixed run unit tests normally qunitkarmagrunt eg defaulting headless chrome run travis ci least headless chrome firefox preinstalled addition pass eg headless chrome go run various browsers using saucelabs browserstack various jquery projects already happen whilst tests continue work testswarm well desired", "d": "7/2017"}, {"body": "testcase", "d": "1/2015"}, {"body": "like empty array idea would behavior parsing natively nt affect", "d": "1/2015"}, {"body": "empty textnode would inconsistent browser behaviour empty array seems like nice solution", "d": "1/2015"}, {"body": "related", "d": "1/2015"}, {"body": "fixed", "d": "1/2015"}, {"body": "forgot close issue doh", "d": "2/2015"}, {"body": "one example", "d": "1/2015"}, {"body": "safari seems fail lot", "d": "1/2015"}, {"body": "ca nt seems repo could try fate propose fly blind increase timeout", "d": "1/2015"}, {"body": "ca nt reproduce locally happens time time testswarm seems require enough large sample enough us hit since test much try increasing timeout see happens nt like control test fully", "d": "1/2015"}, {"body": "nt like control test fully yeah cc dmethvin", "d": "1/2015"}, {"body": "commited moment gon na close fix verified", "d": "1/2015"}, {"body": "seems timeout increase help committing", "d": "1/2015"}, {"body": "cc jaubourg", "d": "1/2015"}, {"body": "judging conversation ticket issue hard reproduce also ca nt see problem could please post link jquerycode shows bug", "d": "1/2015"}, {"body": "definitely want repro solution rare case requires going back polling easiest solution would use jquery compat case local file access via xhr example", "d": "1/2015"}, {"body": "looks like issue websites use protection mechanism overrides xml internet explorer identifies internet explorer later sorry mess", "d": "1/2015"}, {"body": "would page valid html tag name since hyphen considered custom element custom elements part web components characters could used tag name custom elements described xml specification like also included class fully support custom elements need add tests names characters discussion could deferred let dmethvin answer apart looks like real usecase real bug two problems particular case first regexp second one one commit mentioned ticket would resolve case even fails check still works since nt feel need wrap special parent tag would like send us pr", "d": "1/2015"}, {"body": "would like send us pr preferable two commits one core one manipulation module nt forget read feeling", "d": "1/2015"}, {"body": "thanks instructions yes like submit pr clear fair issue initially reported patched gkalpak angularjs repo happened bumped time tried share load", "d": "1/2015"}, {"body": "even clear fair elaijuh first reported angularjs repo submitted pr angularjs richardaday leonardobraga glad sharing load since familiar jquery contributing conventions smiley seems like whole lot people involved onecharacter addition laughing cool", "d": "1/2015"}, {"body": "cool see thanks helping", "d": "1/2015"}, {"body": "know version going included sorry familiar jquery release process", "d": "1/2015"}, {"body": "know version going included", "d": "1/2015"}, {"body": "backported amp changed milestone", "d": "3/2016"}, {"body": "frustrating", "d": "1/2015"}, {"body": "", "d": "1/2015"}, {"body": "ah dreaded post pretty easy recognize agreement warning help people nt already made mistake times", "d": "1/2015"}, {"body": "really wish nt shortcut methods make things worse pretend nt exist also use stubs code ensure called going start checking args runtime spewing console warnings period take look code shortcut methods see much code takes make accept object much could consider", "d": "1/2015"}, {"body": "get argument existing usually wrap ajax facade really point long stuff exists people keep using incorrectly wasting many hours debugging accident take saying pr considered", "d": "1/2015"}, {"body": "", "d": "1/2015"}, {"body": "yes sure include unit tests also stop annoying guys", "d": "1/2015"}, {"body": "stop", "d": "1/2015"}, {"body": "provide timeline need pr next week able land next version also need updates docs get post adding new signature seems like several people want see happen hope pitch docs pr probably get need docs entry", "d": "1/2015"}, {"body": "yeah trying ca nt seem get async tests passing reliably always get failing tests needing constantly restart php asking around jquerydev seems like people issues well suppose guys aware testing infrastructure mess recommendation workflow type thing", "d": "1/2015"}, {"body": "gmauer either ignore errors need create full setup proper apache serwer builtin php one limitations sometimes hit edge cases setup links readme project automating elegant solution would switch server running node may require lot effort judging many php tests may happen soon", "d": "1/2015"}, {"body": "togakangaroo close random tests failing go ahead pull request wish test infra robust people get mocking tricky parts ajax particular ca nt mocked often need test workarounds obscure xhr bugs like", "d": "1/2015"}, {"body": "togakangaroo yeah builtin php web server little underpowered apache amp nginx work well official jquery docs recommend installing lmw amp development computer personally using vagrant vm nginx mzgol switching node server would awesome ticket", "d": "1/2015"}, {"body": "mzgol switching node server would awesome ticket nt believe nt really discussed seriously due effort needed", "d": "1/2015"}, {"body": "created", "d": "1/2015"}, {"body": "think difficulty getting environment running jquery development absolutely stopper people contributing saying following order complain hopefully help team see pain points could addressed also complain bit mostly js net developer working windows done php ages ago know linux basics far comfortzone installing php run tests annoying enough install figure apache setup definitely would given moment hours pr ultimately changes two lines code coincidentally catching right people irc way would known special incantation even ajax module getting frequent nondeterministic test failures ultimately comment tests able test specific feature addition found read source lot testing infrastructure clear use things like parameter next fan build tools building jquery breeze however testing testing matter starting php one terminal another terminal directing browser right page figuring options necessary get right files load use unminified example would seem like grunt least start server open right page correct configurations run tests headless browser fullon also note still nt able get documentation vm running attempt api vm get error need xmlsoft windows means installing virtually unknown piece software even chocolatey package manager maintained single developer machine run work vms something comfortable working setting vm inside try deploy vagrant vm running issues vagrant vm wo nt finish starting debug order continue realize house cards would seem order enable contributions people php space also happen know use nodegrunt significant amount effort could justified even solution package single vm tools necessary develop jquery built", "d": "1/2015"}, {"body": "togakangaroo develop windows try installing wamp", "d": "1/2015"}, {"body": "togakangaroo thank writing getting started stable setup hard part hazed hope stay around continue contribute maybe even help us solve issues definitely think process harder since need actually test bunch real browsers never easy make things worse need real server talk send back specific requests test browser fixes ajax patches inside jquery sometimes even configuration web server becomes issue issues moving tests apache nginx past work windows well wamp definitely way go along msysgit share troubles docs vm well moment nt working setup either put together untested suggestions docs pull request take rest way", "d": "1/2015"}, {"body": "simplifying test setup discussed", "d": "1/2015"}, {"body": "seems android problem ios sure happens android seems ca nt ca nt scroll code gon na blacklist", "d": "2/2015"}, {"body": "post example mean selector work expression", "d": "12/2014"}, {"body": "expression shadow dom stuff allows pierce web component afaik firefox amp ie nt support shadow dom yet even nt throw selection still valid", "d": "12/2014"}, {"body": "yeah nt registering agreed something fix shadow dom nt implemented browser need detect avoid invalid queries", "d": "12/2014"}, {"body": "spec changed see makes sure decision jump ship implement support selectors available one browser would nt like need support obsolete versions api made something like available need support", "d": "1/2015"}, {"body": "issue opened intent could close", "d": "12/2014"}, {"body": "hi dont use like", "d": "12/2014"}, {"body": "nt api technofreaky posted work use case nt want rebind event handler already registered need track imagine second use case terribly common", "d": "12/2014"}, {"body": "works invoke code swapped global exposed page chrome could create test case works completely jsfiddle jsbin without relying specific external site browser experience problem", "d": "12/2014"}, {"body": "hi mzgol thank looking realize already loaded site injecting newer version using using chrome well unfortunately unable generate standalone code tried figure little using existing jquery site able get event copied behave expected question cloned event points original element click cloned element original elements gets highlightedselected way use clone method way event copied applied cloned element guessing function definition original element used following code thank", "d": "12/2014"}, {"body": "two copies jquery independent copy nt knowledge events would need use jquery instance want interact jquery data events element", "d": "12/2014"}, {"body": "try see set elements returned calling jquery selector ignored", "d": "12/2014"}, {"body": "second parameter used context thing add first one behaves expected", "d": "12/2014"}, {"body": "got thanks much", "d": "12/2014"}, {"body": "change since adds trycatch nt cause problem skip remaining feature tests none appear used firefox seems like potential problem currently causing bugs", "d": "12/2014"}, {"body": "fortunately tests reported support tests results result changed detect unless problem exists xhtml mode cough currently nt test", "d": "12/2014"}, {"body": "fixed merge latest sizzle", "d": "1/2015"}, {"body": "interpret status milestone wo nt get fixed fixed releases nt supported version fix next person google using jqgrid noticed wellformed console upgrade jquery confused threads people using jqgrid actual malformed xml coincidentally op herbalite contributor freejqgrid also next person google issue link fiddle simply reproduces problem also verifyied fixed problem applying patch manually", "d": "12/2015"}, {"body": "pretty sure release plan later month since sizzle update confirm case update milestone", "d": "12/2015"}, {"body": "confirmed", "d": "12/2015"}, {"body": "hi arrived issue getting error chrome page uses jquery wymeditor plugin way reproduce error almost every time specific case using mutation observer contains uploaded test page see error console", "d": "5/2018"}, {"body": "thdoan reproduce using report new issue otherwise fixed past upgrade", "d": "5/2018"}, {"body": "wymeditor nt support jquery thanks managed avoid rare scenario time", "d": "6/2018"}, {"body": "sounds like great idea see references testunitsupportjs go away well since nt guarantee properties would like file pr", "d": "12/2014"}, {"body": "xml object supported modern browsers right disable ie say nt support anymore always weird understanble used activex hear pointless method never documented tested say get rid sure property never used anywhere else might useful tests either remove add tests cc jaubourg", "d": "12/2014"}, {"body": "sure property never used anywhere else might useful tests either remove add tests property appeared msdn drop check", "d": "12/2014"}, {"body": "markelog xml object supported modern browsers right disable ie say nt support anymore tend agree especially like hear dmethvin thoughts though sure property never used anywhere else might useful tests either remove add tests imo keep detection code perfect weird setups nice people workaround potential problems setting even nt officially support see eg", "d": "12/2014"}, {"body": "xml object supported modern browsers right disable ie say nt support anymore tend agree especially like hear dmethvin thoughts though hence statement prevents crashing startup sure property never used anywhere else might useful tests either remove add tests imo keep detection code perfect weird setups nice people workaround potential problems setting even nt officially support see eg definitely keep meaning need create xhr startup meaning need", "d": "12/2014"}, {"body": "definitely keep meaning need create xhr startup meaning need ie native xhr disabled still global crashes otherwise better change code noop sth like rely", "d": "12/2014"}, {"body": "side note also need think nonbrowser environments may xhr implementation may want fail miserably ie native xhr disabled still global crashes otherwise better change code noop sth like rely whether throws exception constructor invoked irrelevant since cases handled pretty solid point", "d": "12/2014"}, {"body": "side note also need think nonbrowser environments may xhr implementation may want fail miserably right land moment get covered", "d": "12/2014"}, {"body": "whether throws exception constructor invoked irrelevant since cases handled right never throwed better avoid guess nt guarantee", "d": "12/2014"}, {"body": "guess nt guarantee exactly module talking ajax tend apply better safe sorry policy", "d": "12/2014"}, {"body": "ie native xhr disabled still xml global crashes checked disable check later", "d": "12/2014"}, {"body": "checked even disable still available", "d": "12/2014"}, {"body": "imo keep detection code perfect weird setups nice people workaround potential problems setting jquerysupportcors true even nt officially support document support otherwise face problems future would nt reason see leave tests besides way documented way whereas setting like using preferable way say okay inviting user change support properties feels like jaubourg would interesting see unsupported envs would fail would would low amount users woundt could avoid case code", "d": "12/2014"}, {"body": "many undocumented edges would like reduce something trying kill external object", "d": "12/2014"}, {"body": "second thought remove client support property provides way make crossdomain requests like easyxdm library way send request force property real life example", "d": "12/2014"}, {"body": "investigate", "d": "1/2016"}, {"body": "dup trac talked adding capture new interface though see interested one fit use cases", "d": "12/2014"}, {"body": "cc gnarf", "d": "12/2014"}, {"body": "already multiple projects arschmitz jzaefferer", "d": "12/2014"}, {"body": "use coveralls really really noisy first disabled pr comments looks like qunit well means lose lot value looking notification settings coverage ranges may much issue previously every new commit pr triggered coverage comment lot noise often absolutely actual change coverage", "d": "12/2014"}, {"body": "mobile istanbul envs run", "d": "12/2014"}, {"body": "markelog yes mobile use gruntcoveralls locally via travis", "d": "12/2014"}, {"body": "yeah plugin grunt code coverage tool coveralls service representation code coverage data also code coverage tool check use istanbul phantom", "d": "12/2014"}, {"body": "getting coverage jquery core would tricky many forks require specific actual browser hit", "d": "12/2014"}, {"body": "problems apparently solved istanbulmiddleware enables mode operation aggregates results simple spinning nodejs server istanbulmiddleware making sure test swarm gets downloadinglooking coverage results tearing server run complete", "d": "12/2014"}, {"body": "", "d": "5/2015"}, {"body": "full disclosure founder codecov would love see jquery use codecov coverage provider would love share many reasons believe codecov great fit industry leading code coverage anything help transition would make available thank", "d": "7/2015"}, {"body": "anything help transition would make available help implement pr sure work together couple questions take us use nt use travis use jenkins testswarm qunit setup example reports look could run jquery link us report sure others questions", "d": "7/2015"}, {"body": "take us use nt use travis ci method works two primary uploading methods javascript native method global method look creating pull request mention create thank gnarf use jenkins testswarm qunit setup jenkins yes qunit yes testswarm used merge coverage reports automatically keep record one see example click unified dropdown example reports look could run jquery link us report reference customer repos yet ran coverage jquery yet try attempt pull request sure others questions happy help", "d": "7/2015"}, {"body": "happy help feel free ping gnarf freenode irc jquerydev questionshelp need", "d": "7/2015"}, {"body": "closing favor tracking roadmap", "d": "11/2015"}, {"body": "workaround would expensive size performance whereas issue impacting low amount users given release cycle firefox seems would easier wait fix side", "d": "12/2014"}, {"body": "seem like rare edge case best addressed code encounters problem ideally fixed firefox", "d": "12/2014"}, {"body": "thanks feedback agree edge case please note autoplay issue may also occur similar use cases example webrtc applications playing remote video streams web applications autoplaying video file something people hate done part web page", "d": "12/2014"}, {"body": "nt think submitted issue right repository", "d": "12/2014"}, {"body": "oh yeah wrong j tab sorry", "d": "12/2014"}, {"body": "could ask forum search around find places report new plugins issue tracker definitely wrong place", "d": "12/2014"}, {"body": "asked answer write new plugin", "d": "12/2014"}, {"body": "asking html inside element parsed dom element point text convinced using method makes sense seems like would want use method", "d": "12/2014"}, {"body": "text converts tags html entities ca nt yes asking html inside script element works got html inside script tag set", "d": "12/2014"}, {"body": "gets really weird tpl looks fine html tpl elements html suddenly empty yet text sees text", "d": "12/2014"}, {"body": "want", "d": "12/2014"}, {"body": "text converts tags html entities ca nt example mean", "d": "12/2014"}, {"body": "dmethvin yes working using text insteand html makes sense think still issue usng html nt behavior browsers nt remember exactly try digg issue", "d": "1/2015"}, {"body": "devantoine saying set inside script tag html seems wrong nt usually script nonhtml content inside script tag even htmllike would nt want parsed placed tag nt think need ensure works consistently across browsers document used", "d": "1/2015"}, {"body": "dmethvin right seems good", "d": "1/2015"}, {"body": "moved", "d": "1/2015"}, {"body": "clearly ca nt take comers comes tools munging code canonical example closure compiler advancedoptimizations enabled comment ticket aimed helping narrow problem could determine whether something code build process sure rely means title clarify seems like way us confidence tool even different version uglify nt break jquery would run jquery potentially multiple times different settings run unit tests", "d": "12/2014"}, {"body": "mentioned actually need pass uglify drop unused args problem us since linter preserves us writing code sure use constructs could changed uglify observable way comment general one may want write code like perfectly valid external consumers think use uglifyjs default settings default manglecompress names code broken", "d": "12/2014"}, {"body": "dmethvin way us confidence tool even different version uglify nt break jquery would run jquery potentially multiple times different settings actually guaranteed fail minifiers aggressive modes break lot valid code rely unwritten contract uglifyjs author code code adheres couple guidelines eg creating functions unused last parameter consumer uses minifier set options make sure external code minify adheres rules well actually default nt break anything compresses terribly basically removes whitespaces safe way default enables options", "d": "12/2014"}, {"body": "sum exactly sure issue minifier nt break code obviously wo nt break code minifier modes may break code may break code exactly mean us write code work one minifier", "d": "12/2014"}, {"body": "exactly mean us write code work one minifier idea earlier comment made sense seemed adamant users minifying code extremely dangerous pretty terrible view us case close issue please nt make comments like", "d": "12/2014"}, {"body": "seemed adamant users minifying code extremely dangerous already seen multiple times external code relying broke passed uglifyjs manglecompress flags turned ca nt give concrete examples currently stopped long time ago partly problems discover code uses one constructs blacklisted uglifyjs prevent linter maybe nt problem currently please nt make comments like ok wo nt btw official policy", "d": "12/2014"}, {"body": "think want code work welltested minifier bugs opened individual basis gladly make change fix", "d": "12/2014"}, {"body": "ok wo nt btw official policy would certainly hope developers absolutely concatenation minification determining right packaging sites apps", "d": "12/2014"}, {"body": "ideally reporter would narrow problem determine whether inside jquery whether want support particular minification behavior nt happened yet timmywil point think need handle come people start using lot aggressive options reporting bugs us either need change code accommodate document unsafe options", "d": "12/2014"}, {"body": "could use little info work break complete test case mention gruntcontribuglify building copy", "d": "12/2014"}, {"body": "checked packagejson file shows dependency howwhy running older version", "d": "12/2014"}, {"body": "building copy using dev version yeoman boilerplate build webapp supply info soon", "d": "12/2014"}, {"body": "sorry insistent since released want sure nt problem published files running uglify jquery retrieve minified cdn work works running older uglify causes problems problem uglify", "d": "12/2014"}, {"body": "running uglify retrieve updated gruntcontribuglify still gives error minified cdn works code minified using lot plugins looks like simple look give details free thanks", "d": "12/2014"}, {"body": "quickly tested result least know broken new version", "d": "12/2014"}, {"body": "really nt minify external files many things go wrong", "d": "12/2014"}, {"body": "really nt minify external files wholeheartedly disagree perfectly sane thing fact saying developers since day one", "d": "12/2014"}, {"body": "really nt minify external files agree scottgonzalez build system site probably minify concat vendors", "d": "12/2014"}, {"body": "scottgonzalez minifiers certain assumptions eg uglifyjs may break code relying value function nt know assumptions external code made ca nt sure minifier wo nt break actually perfect example projects switching development production mode grunt tasks swap development files minfied ones concatenate way safer obviously starts getting harder want use parts jquery use modules via amd use full files huge problem way edit changed rephrased little", "d": "12/2014"}, {"body": "stevemao thought changed template get one jquery unminified file another file rest break change second line get separate minified jquery separate file rest js", "d": "12/2014"}, {"body": "going close find issue jquery please post reply reopen", "d": "12/2014"}, {"body": "back sorry guys confusions nothing uglifier using webview ipad uses file uri scheme reading jquery docs says type data expecting back server none specified jquery try infer based mime type response mime type response file uri scheme hence problem", "d": "1/2015"}, {"body": "backported amp changed milestone used say", "d": "3/2016"}, {"body": "fnextendcss please create testcase site like", "d": "12/2014"}, {"body": "markelog names anonymous functions attached jquery using yes test case needed", "d": "12/2014"}, {"body": "looks like used inside chrome extension nt support way sure happen markelog says need stack trace go", "d": "12/2014"}, {"body": "looks calling crashes", "d": "12/2014"}, {"body": "indeed extension tested nt time right try grab pfnpassifox change chromeipasschromeipassjs see error console page tries search password fields", "d": "12/2014"}, {"body": "kasbah dmethvin said nt support jquery extensions need use", "d": "12/2014"}, {"body": "think jbedard right though nt make sense", "d": "12/2014"}, {"body": "oh good one funny go extra lengths get correct window nt use setting values happening iframe gets parent window value", "d": "12/2014"}, {"body": "yea good like", "d": "12/2014"}, {"body": "easy fix seems need iframe test", "d": "12/2014"}, {"body": "oh probably better using iframe window setting", "d": "12/2014"}, {"body": "anyone working take hilnius", "d": "12/2014"}, {"body": "araghava want go", "d": "12/2014"}, {"body": "behaves expected ie lt supposed get experience issues", "d": "12/2014"}, {"body": "closing inactivity", "d": "12/2014"}, {"body": "note also applies branch", "d": "12/2014"}, {"body": "btw nt cause problems file copied jenkins jobs disabled copying file", "d": "12/2014"}, {"body": "would like create pull request easily skipped might well", "d": "12/2014"}, {"body": "would good see jsperf well", "d": "12/2014"}, {"body": "pretty sure diff negligible even worsens codepath since would add check reflect performance cc rwaldron", "d": "12/2014"}, {"body": "certain break tests reason used inside consequent returns end regardless outcome alternate path assignment moved first condition would duplicated alternate path appreciate devs want tweak tinker case nt going benefit jquery", "d": "12/2014"}, {"body": "ok test", "d": "12/2014"}, {"body": "see retrieving data key already camelcased could made times faster chrome firefox without penalty cases cost rwaldron already said repeated twice", "d": "12/2014"}, {"body": "break testsuite", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "weeeeird rwaldron seems reopen investigation need look perf tests implementation bytesize hit", "d": "12/2014"}, {"body": "markelog break testsuite would nt long true cost rwaldron already said camelkey jquerycamelcase key repeated twice appears", "d": "12/2014"}, {"body": "victorhomyakov could send us pr", "d": "12/2014"}, {"body": "yes far understand additional tests needed", "d": "12/2014"}, {"body": "patch", "d": "12/2014"}, {"body": "patch fear nt understand mean", "d": "12/2014"}, {"body": "yes submit code changes made pull request", "d": "12/2014"}, {"body": "yes right also could please guide write commit message properly according style repository", "d": "12/2014"}, {"body": "something like core speed fndata camelcased key", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "additional description needed maybe link jsperf test", "d": "12/2014"}, {"body": "also running comparesize files comparesize task raw gz sizes distjqueryjs distjqueryminjs raw gz compared master distjqueryjs distjqueryminjs raw gz compared last run distjqueryjs distjqueryminjs", "d": "12/2014"}, {"body": "nt worry commit message adjust needed", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "better test runs create zip files skip", "d": "12/2014"}, {"body": "looking code created test runs created prereleases", "d": "12/2014"}, {"body": "oh right confusing meaning variable", "d": "12/2014"}, {"body": "final step build maybe archive creation happening async waiting exiting", "d": "12/2014"}, {"body": "nt think likes version number however sure encounter problem mastercompat since dropped bower", "d": "12/2014"}, {"body": "oh understand wo nt encounter problem mastercompat sizzle version funky", "d": "12/2014"}, {"body": "rversion nt match passing null fix wo nt matter", "d": "12/2014"}, {"body": "occurs would considered error", "d": "12/2014"}, {"body": "suppose would right might future", "d": "12/2014"}, {"body": "publish version sizzle npm exactly fit format xxxoptionalword", "d": "12/2014"}, {"body": "jzaefferer mentioned whole test nt need dropped part", "d": "12/2014"}, {"body": "looking source wondering two places confused think important part test check three things data andor data flash data nonflash nt need applet need nonflash pdf seems work least android ios modern chrome firefox", "d": "12/2014"}, {"body": "seems nt achieve intended result reopening", "d": "3/2015"}, {"body": "following code triggers dialog see", "d": "3/2015"}, {"body": "fixes landed amp really fixed time", "d": "3/2015"}, {"body": "could done plugin initially discussion stackoverflow thread see several important issues consider make crossbrowser implementation create plugin please post link turns useful many people consider including future version jquery", "d": "12/2014"}, {"body": "missing error correct chrome lenient closes selector still wrong", "d": "12/2014"}, {"body": "urgh thank", "d": "12/2014"}, {"body": "thank", "d": "12/2015"}, {"body": "thanks adding new apis deferred point method want implemented plugin", "d": "12/2014"}, {"body": "need enhanced promise functionality look library bluebird including would make jquery lot bigger", "d": "12/2014"}, {"body": "thanks suggestion bluebird settle looking tue dec pm dave methvin notifications githubcom wrote need enhanced promise functionality look library bluebird including would make jquery lot bigger reply email directly view github", "d": "12/2014"}, {"body": "provided values wanted would nt exist please read docs", "d": "12/2014"}, {"body": "seems odd jquery makes types ok", "d": "12/2014"}, {"body": "odd jquery nt making types began bug first implementation javascript stuck object type tag represented pointer incorrectly treated type tag hence erroneous result", "d": "12/2014"}, {"body": "ok kind knew rick blew mind", "d": "12/2014"}, {"body": "timmywil wink realized nt used since talking c code haha", "d": "12/2014"}, {"body": "rwaldron pretty interesting curiosity bug would thought would accidentally unused definition another condition jstypeofvalue may due gross inexperience c", "d": "12/2014"}, {"body": "think logical connection pointer sometimes bugs right", "d": "12/2014"}, {"body": "nt potential breaking change sure include patch release", "d": "12/2014"}, {"body": "oh forgot remove list", "d": "12/2014"}, {"body": "dmethvin really need think gives us work real reason", "d": "12/2014"}, {"body": "regex include drag events prevents properties pagex pagey coped modifying regex might potential fix", "d": "12/2014"}, {"body": "agree would easy fix get mouserelated properties since dragevent inherits mouseevent general support dragdrop special properties directly use see discussion trac", "d": "12/2014"}, {"body": "araghava blacksvk would like send us pr", "d": "12/2014"}, {"body": "markelog look shortly", "d": "12/2014"}, {"body": "patch fixes dragstart drag dragend dragover dragenter dragleave however fix drop event admit regexpert adjustment fixes", "d": "1/2015"}, {"body": "gtristan thanks note new issue created", "d": "1/2015"}, {"body": "else asked help already first place ask try stackoverflow", "d": "12/2014"}, {"body": "also issue jqueryui think", "d": "12/2014"}, {"body": "need test case investigate put one jsbincom jsfiddlenet link", "d": "12/2014"}, {"body": "try knock one quite difficult contents site dynamic best helps tell causing issue appeared bug somewhere site inserting unnecessary rn start html trying manipulate rn removed problem went away know problem within site figured null probably handled jquery well", "d": "12/2014"}, {"body": "created fiddle get actually run info see happening new content coming rn start appears caused issue hooks coming back null undefined", "d": "12/2014"}, {"body": "variable string jquery object nt appear used", "d": "12/2014"}, {"body": "yeah really get head around get information afraid site dynamic trying pull bits together needed maybe close probably freak incident due bugs code", "d": "12/2014"}, {"body": "close come test case demonstrates error inside jquery post reopen", "d": "12/2014"}, {"body": "already existed want migrate issues milestone remember created list", "d": "12/2014"}, {"body": "take subset list land patch release make single ticket mark milestone note one way references github changes", "d": "12/2014"}, {"body": "could use ajax script transport right potentially might use custom transport", "d": "12/2014"}, {"body": "exactly majority cases also want include ajaxxhr nonetheless optional dependency replaced custom transport excluded altogether", "d": "12/2014"}, {"body": "thing applies effectsanimatedselector", "d": "12/2014"}, {"body": "would like submit pull request dependency logic gruntfile build task", "d": "12/2014"}, {"body": "nt think changes needed gruntfile buildjs", "d": "12/2014"}, {"body": "right nt think changes necessary convention include selector dependences let selector module specify engine use gruntfile mark selector extensions removal sizzle replaced selectornative building think prefer let error messages work someone includes doubt happen", "d": "12/2014"}, {"body": "timmywil would nt better dependencies actual code marked use selector rather gruntfile mean jquery ever went away using grunt wanted use something else dependencies would clearly stated code", "d": "12/2014"}, {"body": "dependencies required way allow optional dependencies excluded main functionality still work amd module keeps track toplevel modules need cdn file noticed selector module points selectorsizzle default user would change include selector extension something overly concerned gruntfile config building ever moved away grunt build task whole would refactored work replacement rather tracing dependencies manually noting exceptions modules depending excluded module removed keep small list keyvalue pairs note remove modules depending excluded one sentence", "d": "12/2014"}, {"body": "nt fixed", "d": "1/2015"}, {"body": "yes thanks arthurvr", "d": "5/2015"}, {"body": "thanks opening issue optional dependencies serialize needed data already string error present indicating included user check presence jqueryevent need fire global ajax events", "d": "12/2014"}, {"body": "timmywil apologize tried open ticket tag ajaxjs file nt check master ajaxjs line compared line tagged versions ever get bug fixes see mean serialization custom built versions jquery ever run issue user able figure issue error undefined function thrown", "d": "12/2014"}, {"body": "tagged versions ever get bug fixes releasing patch version soon", "d": "12/2014"}, {"body": "thanks info next time find bug cross reference master branch make sure nt submitted submit", "d": "12/2014"}, {"body": "get call docs pretty clear arg either array object primitive string one", "d": "12/2014"}, {"body": "ah fault calling string primitive object closing issue", "d": "12/2014"}, {"body": "seems defensive coding synonym masking errors whatever passed jquery dom element understand frustrating become dependent blackbox plugin nt work knowing enough plugin inner workings fix asking jquery ignore errors going make harder plugin writers find bugs like bxslider well enough perhaps could fork fix help others since current author seems unresponsive", "d": "12/2014"}, {"body": "yeah see merit viewpoint im used working lot api data inconsistent need keep page crashing agree jquery vested interest forcing plugin writers right yeah already started planning fork taking since original developer dropped map thanks", "d": "12/2014"}, {"body": "works expected please seek help resources like stackoverflow", "d": "12/2014"}, {"body": "still code migrate needs restore methods dmethvin think", "d": "12/2014"}, {"body": "nt thought lately earlier could nt figure simple way expose migrate could move another property like suppose sure inadvertently used", "d": "12/2014"}, {"body": "rather migrate duckpunch etc carry around cruft mainline support", "d": "12/2014"}, {"body": "hmmm since already mess might work could poke selector property", "d": "12/2014"}, {"body": "ref", "d": "1/2015"}, {"body": "get original selector string used invoke plugin within plugin example would like return somediv called", "d": "6/2017"}, {"body": "closed ticket nt right place look support general string represents collection plugin receives eg", "d": "6/2017"}, {"body": "saying longer necessary opera presto supported may case perhaps could remove patch made see fails currently supported browsers", "d": "12/2014"}, {"body": "ref", "d": "12/2014"}, {"body": "hmmm see probably asking general question line well agree seems setting beforehand needed least unit tests cases tried work fine without docs runtimestyle currentstyle anyone would know answer suspect would markelog", "d": "12/2014"}, {"body": "liujiangfeng doubt perfectly justifiable hack indeed needless guess one ever question magic lines supported whole hack nt code anymore closing", "d": "12/2014"}, {"body": "oh fast still needs", "d": "12/2014"}, {"body": "liujiangfeng would like send us pr", "d": "12/2014"}, {"body": "guard definitely seems unneeded comments ticketcommit right nt sure assigning done advance seems every version dean edwards awesome hack found taking nt break unit tests confident unit tests era", "d": "12/2014"}, {"body": "add couple tests sure course would nt looking hack think simplify even", "d": "12/2014"}, {"body": "alrighty since original author ticket responds taking", "d": "12/2014"}, {"body": "improved via", "d": "12/2014"}, {"body": "meh memory short", "d": "12/2014"}, {"body": "caused fact set valhook reading without going get valhook", "d": "12/2014"}, {"body": "pr", "d": "12/2014"}, {"body": "hi nlowhim jquery issues github reporting problems jquery library rather support questions able get help posting question places stack overflow jquery forum good luck ps trying wo nt possible html alone might able html css might also need use javascript well", "d": "12/2014"}, {"body": "bug report mattlunn explained detail closing", "d": "12/2014"}, {"body": "hey thanks sorry mistake someone told head question try sites best nelson lowhim nelsonlowhimblogspotcom twitter nlowhim get free thu dec matt notifications githubcom wrote hi nlowhim jquery issues github reporting problems jquery library rather support questions able get help posting question places stack overflow jquery forum good luck ps trying wo nt possible html alone might able html css might also need use javascript well reply email directly view github", "d": "12/2014"}, {"body": "jquery extremely old nt support versions please test newest version currently", "d": "12/2014"}, {"body": "mention see master one sizzle sure removed without crossbrowser implications note jquery still heavily used net decade given often sites update browser going break version jquery sure would spewing messages annoy", "d": "12/2014"}, {"body": "information nodevalue deprecated foudn google yahoo apparently old site anymore checked word deprecated document say anything special nodevalue except implemented however still get debugger complaints use attributes nodevalue attribute deprecated use value instead like maybe jquery looking attribute nodevalue source file jquery using nodevalue attribute ff nt like", "d": "12/2014"}, {"body": "new jquery nodevalue used line unminifieded source element perhaps recommend jquery upgrade", "d": "12/2014"}, {"body": "know annoying get spurious console messages nt much version jquery released several years ago provide time machine reopen although new timeline ticket wo nt even exist stuckouttonguewinkingeye", "d": "12/2014"}, {"body": "please provide test case jsbincom jsfiddlenet using latest version jquery", "d": "12/2014"}, {"body": "reveal bug independently cause refer many complicated lib", "d": "12/2014"}, {"body": "okay perhaps get help debugging stackoverflow nt enough information actionable bug report", "d": "12/2014"}, {"body": "remove row jquery version catch exception else", "d": "12/2014"}, {"body": "know since know causing need debug", "d": "12/2014"}, {"body": "need programming help please ask jquery forum stackoverflow report bug please demonstrate using short test case jsfiddlenet jsbincom include thirdparty plugins test case sure use latest version jquery", "d": "12/2014"}, {"body": "cc", "d": "12/2014"}, {"body": "blocker", "d": "12/2015"}, {"body": "old behavior may expected users nt think documented users could count synchronicity would nt call blocker", "d": "12/2015"}, {"body": "answering slightly different question one upon blocker status partially dependent breaking change currently marked point nt documented synchronous execution given lengths code goes respect script execution however arguably documentation bug giving script completion certainty point manipulation method returns considered backwards incompatible inclined towards yes could talked want introduce course breaking requires major version ca nt introduced", "d": "12/2015"}, {"body": "even though never documented pretty sure code depending think go majorpoint release", "d": "12/2015"}, {"body": "still scheduled whether label blocker somewhat moot", "d": "12/2015"}, {"body": "whether breaking change fine saying yes", "d": "12/2015"}, {"body": "great make jquery amp content security policy good friends boat", "d": "12/2015"}, {"body": "per meeting pushing", "d": "3/2016"}, {"body": "matter many n combined last one never gets progress notification reference docs say deferred resolved rejected progress callbacks longer called exception progresscallbacks added deferred enters resolved rejected state executed immediately added using arguments passed notify notifywith call deferrednotify called progresscallbacks added deferredthen deferredprogress called callbacks executed order added callback passed args notify calls notify deferred resolved rejected progresscallbacks added ignored frankly would nt even expected combined deferred report progress individual ones kind situations probably many reasons standard promise punted progress others thoughts", "d": "12/2014"}, {"body": "jaubourg input", "d": "12/2014"}, {"body": "properly investigate since travelling monday look", "d": "12/2014"}, {"body": "think problem comes deferredjs progress update perhaps done first", "d": "12/2014"}, {"body": "think problem wan na make pr nice unit test boot nicolashenry", "d": "12/2014"}, {"body": "okay way", "d": "12/2014"}, {"body": "merged thank", "d": "12/2014"}, {"body": "per returns coordinates relative", "d": "12/2014"}, {"body": "many ways pass invalid arguments jquery ca nt give specific error messages people reading code would definitely want know handler undefined checking code make clear", "d": "12/2014"}, {"body": "stripping anything every property jquery puts event object copied read documentation query normalizes following properties crossbrowser consistency following properties also copied event object though values may undefined depending event help read docs ask help forums stackoverflow", "d": "11/2014"}, {"body": "see jquery event could told thought would main object", "d": "11/2014"}, {"body": "guess logical support kind stuff seems fix pretty easy say yes pr would cool nt forget read contribution guide anyone knows jquery set asyncfalse inserted scripts wonder deviate spec remember discussion nt remember specifics cc", "d": "11/2014"}, {"body": "problem long time ago used xhr synchronously people started depend creating htmlscripttag hybrids expected script run right html injected document able something change fulltime script tag extracting scripts html fragment still allows nt guarantee synchronicity fine", "d": "11/2014"}, {"body": "dmethvin seems could change conform dom behaviour want concerns perspective logic", "d": "11/2014"}, {"body": "ok historical thanks dmethvin", "d": "11/2014"}, {"body": "var documentcreateelement script var mins ssrc data consolelog documentbodyappendchild output get data consolelog net errinvalidurl", "d": "12/2015"}, {"body": "u try var documentcreateelement script ssrc documentbodyappendchild", "d": "12/2015"}, {"body": "nice", "d": "11/2014"}, {"body": "closing since documentation issue keeping milestone since present changelog blog discussion release", "d": "12/2014"}, {"body": "frowning goodbye", "d": "12/2014"}, {"body": "frowning goodbye queue sorry chime seriously going core alternatives custom queue supported anymore", "d": "12/2014"}, {"body": "ever document worked documentation plain objects see docs miss discussion present operations supported plain javascript objects wrapped jquery data prop trigger triggerhandler use data method requiring data plain object result new property object called jquery randomnumber eg undocumented functionality covered unit tests", "d": "12/2014"}, {"body": "side thought since active contributor uses would safe assume functionality implicitly supported even though explicitly documented probably mistake though sure widely used", "d": "12/2014"}, {"body": "yeah learned animating plain object demos back found uses good news deprecation time think way make perhaps queue something replace", "d": "12/2014"}, {"body": "per decided deprecate use plain objects unit tests tweening plain objects well", "d": "7/2015"}, {"body": "please nt create new issues closed identical previous one duplicate", "d": "11/2014"}, {"body": "achieved functionality looking selector tr td nthchild", "d": "11/2014"}, {"body": "looking help using jquery please check forum stackoverflow bug tracker correct place ask questions", "d": "11/2014"}, {"body": "asking question selector gt broken", "d": "11/2014"}, {"body": "okay well true based original description sure wrong ask help forum", "d": "11/2014"}, {"body": "yes looks intended please read ask forums nt understand bug", "d": "11/2014"}, {"body": "please ask help forum determine behavior bug post test case thanks", "d": "11/2014"}, {"body": "never tested zombiejs nt support nt behave like browser would nt surprising jquery use xhr transport crossdomain requests object indicates supports cors guess perhaps need set indicate zombiejs fake xhr object supports cors nt really triage zombiejs determine nt browserlike close ticket meantime reopen something needs done", "d": "11/2014"}, {"body": "well listed original issue raised zombie board also got reproduction scenario shows working normal xhr object working jquery ajax tried explicit seems fixed actually behind scenes much information setting setting cors based options actually", "d": "11/2014"}, {"body": "standard xhr object property indicating perform cors missing xhr still perform crossdomain requests setting override common situations phonegapcordova crossdomain restrictions enforced sounds like things sorted far jquery goes", "d": "11/2014"}, {"body": "please provide test case", "d": "11/2014"}, {"body": "probable duplicate also see let us know otherwise reopen", "d": "11/2014"}, {"body": "test see fixes problem switched using next release may affect improve results", "d": "11/2014"}, {"body": "problem persist latest jquery version please describe reproduce issue mobile safari", "d": "11/2014"}, {"body": "tested latest issue still persists happening mobile safari part set simple test page demonstrate issue open mobile safari load page try tapping animate button see animation safari tap share button choose add homescreen tap add popup close safari pressing home button ipad tap newly added icon home screen wait load takes bit time reason test animation tapping animate button app still open press power button ipad put sleep press power button ipad wake sleep slideenter unlock code needed app still open tap animate button nothing happens screen html page fully selfcontained includes css javascript required apart jquery naturally save source necessary code", "d": "11/2014"}, {"body": "dmethvin test see fixes problem nit please point people instead instead trying deprecate former ones remember", "d": "11/2014"}, {"body": "someone time investigate feel free pretty rare case", "d": "12/2014"}, {"body": "tested shchukax test case ipad mini ios works fine looks like something fixed point", "d": "7/2015"}, {"body": "closing seems like fixed safari probably never fixable jquery issue", "d": "9/2015"}, {"body": "accept patch uses instead available", "d": "7/2015"}, {"body": "nice see disapear", "d": "7/2015"}, {"body": "jaubourg responding question yes", "d": "7/2015"}, {"body": "phistuck sharing happiness regarding disappearance regexp using url api good idea though probably need wait supported browsers implement nt checked right general consensus avoid multiple code paths especially small noncritical parts code like one", "d": "7/2015"}, {"body": "jaubourg ajax used frequently cost creating element terms memory possible garbage collection issues engine pretty big compared url constructor looks like everyone internet explorer supports since interface identical one exposes share interface small change", "d": "7/2015"}, {"body": "well piece code executed request agree small change fail see critical seems rather logical wait support grid contain browsers implement url object simply switching nt speak team though take", "d": "7/2015"}, {"body": "review discussed take time nt critical creating link element times second nt perf memory problem", "d": "7/2015"}, {"body": "bad nt scrolled enough see used ajax code proper still agree dave perf issue", "d": "7/2015"}, {"body": "performance terms speed less issue memory usage failing free memory old internet explorer bug example concerning creating element pretty big hammer avoid exactly interface see understand reasoning well", "d": "7/2015"}, {"body": "saying memory leak would fix", "d": "7/2015"}, {"body": "saying one checked say element big hammer better used sparingly options mentioned browsers use problems element references leaks much lightweight preferred way constructing developers used create whole new document resolving url components example even bigger hammer also replaces", "d": "7/2015"}, {"body": "worked everywhere would better case changing seeing concrete problem requires change since interface identical one exposes share interface small change isfunction windowurl new url documentcreateelement may provable issue think likely change code", "d": "7/2015"}, {"body": "thanks opening issue confirmed", "d": "11/2014"}, {"body": "fixed", "d": "12/2014"}, {"body": "closed sizzle updated", "d": "12/2014"}, {"body": "", "d": "12/2014"}, {"body": "method simple subset functionality need additional options available use could either duckpunch better create new name note option applies tag used fetch content samedomain requests may used", "d": "11/2014"}, {"body": "properties applicable positioned elements", "d": "11/2014"}, {"body": "well bug chromeff return pixel values safari", "d": "11/2014"}, {"body": "guess open interpretation noted documentation use side note nt confusion note computed style element may value specified element style sheet return computed value case computed value applicable property say safari right", "d": "11/2014"}, {"body": "nt use set dynamic state checkbox use plenty documentation internet look words bold please ask help stackoverflow issues sure bug", "d": "11/2014"}, {"body": "sounds like would happen without jquery report firefox bug need test case reproduce nt provide test case shows problem occurs jquery reopen ticket", "d": "11/2014"}, {"body": "without jquery work firefox coffee onend playercontainerremoveeventlistener end onend done", "d": "11/2014"}, {"body": "test case yet please provide one jsbincom", "d": "11/2014"}, {"body": "could use cases selector jquery selector extensions suppose could try validate calling selector string seeing throws use dom method nt maybe call dom directly wrap trycatch given crappy performance usually newer methods would worth benchmarking see worth effort", "d": "11/2014"}, {"body": "could use cases selector jquery selector extensions unless accepted", "d": "11/2014"}, {"body": "yep suspect pitfalls like would like see something like resolution issue", "d": "11/2014"}, {"body": "elemclosest chrome canary amp dev coming beta wink", "d": "11/2014"}, {"body": "yep created issue", "d": "11/2014"}, {"body": "waaay ahead nyahnyah stuckouttonguewinkingeye", "d": "11/2014"}, {"body": "p tue nov pm dave methvin notifications githubcom wrote waaay ahead nyahnyah image stuckouttonguewinkingeye reply email directly view github", "d": "11/2014"}, {"body": "jsperf indicating faster", "d": "12/2014"}, {"body": "true currently slow chrome opssec today code firefox considering surprised faster plus ca nt avoid current code path add another path sure call old path cases nt work broken qsa jquery selector extensions", "d": "12/2014"}, {"body": "right way said need comprehensive research including implementation details one perf link", "d": "12/2014"}, {"body": "haha guys merely cross linking relevant stuff also worthwhile show classlist situation native slower rush chill", "d": "12/2014"}, {"body": "removed pos exception think time give another look", "d": "1/2016"}, {"body": "oh yeah awesome good call removing positional selectors", "d": "1/2016"}, {"body": "news guys performance difference noticeable personal experience replacing closest tr thisclosest tr traversing table saved whole seconds test determine selector qsa sizzle compatible surely exists somewhere code ca nt find quick safe solution check improve speed use cases", "d": "4/2016"}, {"body": "test case jsperf real code hard imagine situations would save seconds code could clarify", "d": "4/2016"}, {"body": "different nt big simple examples something like calls element exist uncommon reallife difference seconds actual code complex public access anyway tried best mimic structure real code omitting anything irrelevant uncomment line see timing using jquery closest", "d": "4/2016"}, {"body": "oriadam websites deep tree native closest much times faster jquery see gmail example try dev console", "d": "2/2018"}, {"body": "need find closest ancestor nodes short period time would definitely recommend using native method directly would good optimization case like would nt profiler shows actual bottleneck code suspect rarely case", "d": "2/2018"}, {"body": "real problem ie works significantly slower chrome nt support native optimization", "d": "2/2018"}, {"body": "thanks report could create minimal example micha\u0142 go\u0142\u0119biowski", "d": "11/2014"}, {"body": "example", "d": "11/2014"}, {"body": "seem two documented properties copied idea listed removed overhead copying properties hesitant add say available either update docs remove preferred route add note adding wo nt help anyone next release anyway docs would nt correct asis unless put note like added jquery", "d": "11/2014"}, {"body": "problem recently project initially assumed property present thought realized jquery already custom way handle using property since property standard way pass data triggered callback without using jquery makes sense available original event hand callback portable native jquerybased environments portability something considered case dealing event triggered third party nt use jquery", "d": "11/2014"}, {"body": "property normalized jquery accessed via plenty special ones used one two events copying jquery something want keep minimum since real costs timecritical section code accessing value nt cause problem", "d": "11/2014"}, {"body": "mentioned case particular problem code portability ported event handling callback another codebase initially expected would work without changes jquery environment using ui widget factory happened instead change big deal though performance issue updating docs seems reasonable", "d": "11/2014"}, {"body": "per discussion meeting today let add match current docs", "d": "12/2014"}, {"body": "chance get fix stable branches", "d": "5/2015"}, {"body": "problem using instead", "d": "5/2015"}, {"body": "really make sure always use jquery attaching events", "d": "5/2015"}, {"body": "say looks like plugin core feature jaspermdegroot gseguin input", "d": "11/2014"}, {"body": "rationale adding core code already part would involve small alias function gzip friendly near clone variables added seems low cost compared plugin somewhat heavy code duplication comparison", "d": "11/2014"}, {"body": "nt forget documentation eternal support prefer see start plugin popular enough add usually turns things nt popular enough justify adding bytes documentation policy years ago things like methods would plugins well library would smaller", "d": "11/2014"}, {"body": "mention provided example could solved pointer event polyfill", "d": "11/2014"}, {"body": "scottgonzalez example short brief one probably would nt never mix together referring context approaching multiple inputs things fastclick little differently currently seen practices short choose bind start events elements could undetermined small delay associated caveats namespaces current assessment reduces code base involve less bindings whole document leading better initial binding performance well arguably less prone bugs namespace constraints removed lower overall footprint preferred approach moment concrete example much code reduced time nt seem justify cost plugin example felt need little value plugin though agree ought vetted popularity use usefulness contexts", "d": "11/2014"}, {"body": "think good example semantics may clear people clarify things requires documentation people start wonder doubt semantics confusing multiple elements multiple events per element given time machine best solution may implemented core library semantics nt useful majority people given implemented changing semantics might break things best guard featureitis future", "d": "11/2014"}, {"body": "policy years ago things like wrap methods would plugins well library would smaller given time machine best solution may one implemented core library semantics nt useful majority people totally offtopic target version maybe time deprecateremove methods core", "d": "11/2014"}, {"body": "totally offtopic target version maybe time deprecateremove methods core developers likely impacted ones using singlefile jquery cdn removing seems unnecessarily cruel developers want smaller version without always build one plan make easier upcoming release", "d": "11/2014"}, {"body": "make sense thanks", "d": "11/2014"}, {"body": "dmethvin agree confusion even conceivable current usage devs understood suggested initial mis understanding anyway implement today semantic would probably reversed", "d": "11/2014"}, {"body": "support feature would mean adding relatively ugly big amount code pretty little gain sorry cc jaubourg", "d": "11/2014"}, {"body": "timmywil dmethvin moving wo nt breaking change nt go revert change disagree", "d": "9/2015"}, {"body": "timmywil grab want nt notice assigned", "d": "11/2015"}, {"body": "dmethvin feel free", "d": "11/2015"}, {"body": "repo steps failed machine everything worked correctly continue investigate consistently repro failure machines", "d": "11/2014"}, {"body": "seems work properly sure nt due addon works consistently older ff report bug", "d": "11/2014"}, {"body": "actually looks like may interaction jquery version firebug investigate tomorrow", "d": "11/2014"}, {"body": "okay close ticket turns jquery bug reopen based already said nt think", "d": "11/2014"}, {"body": "yeah sorry hate tool using debug actually causing problem", "d": "11/2014"}, {"body": "close actually bug firequery plugin firebug try contact author plug let know", "d": "11/2014"}, {"body": "cc jquerycore", "d": "11/2014"}, {"body": "hmmm good question guess could something similar note value also need unique could well suppose already put stuff version number custom build", "d": "11/2014"}, {"body": "guess could similar note value also need unique could well suppose people need able distinguish programatically", "d": "11/2014"}, {"body": "new name matching versions suggest time move new repo instead continuing use branch", "d": "11/2014"}, {"body": "friday november scott gonz\u00e1lez notifications githubcom wrote new name matching versions suggest time move new repo instead continuing use branch separate bug trackerspull requests repos due much code shared branches would nt desired imo micha\u0142 go\u0142\u0119biowski", "d": "11/2014"}, {"body": "separate bug trackers pull requests actually good thing share bugs denying separate bugs already need separate pull requests", "d": "11/2014"}, {"body": "share bugs first glance actually share already need separate pull requests true", "d": "11/2014"}, {"body": "lot common code generally cherry pick things across without conflicts prefer one repo two branches", "d": "11/2014"}, {"body": "git cherrypick different repos different repos different branches conflicts always possible", "d": "11/2014"}, {"body": "first glance actually share could mention issue different repository commit amp pullrequest still", "d": "11/2014"}, {"body": "already need separate pull requests actually nt true time usually cherrypick squashed commit onto rather force separate prs occasions changes big enough beg separate prs often ones making kinds changes anyway prefer one repo", "d": "11/2014"}, {"body": "timmywil understood trivial observation pr target branches time agree time cherrypick unless sth rewritten module touching lot code tagging jqueryrelease need update able tag rest simple", "d": "11/2014"}, {"body": "true pr ca nt target two branches timmywil says often pretty trivial cherry pick without pr usually get hung differences internal implementation hope fix", "d": "11/2014"}, {"body": "tagging jqueryrelease need update able tag rest simple need update tags since everything based versions keep mind semver means prerelease", "d": "11/2014"}, {"body": "use build metadata", "d": "11/2014"}, {"body": "keep mind semver means prerelease going keep branches repo seems team favors solution tags semver versions anyway want make clear semver always tag guess", "d": "11/2014"}, {"body": "hmm realised one repo amp versions wo nt likely fly bower dislike support npm amp bower", "d": "11/2014"}, {"body": "would nt two packages bower well", "d": "11/2014"}, {"body": "would nt two packages bower well two packages two repos", "d": "11/2014"}, {"body": "would nt two packages bower well yes bower tied repositories pointed takes versions tags means use impossible", "d": "11/2014"}, {"body": "ok yea bower require separate repos multiple components maybe clinches", "d": "11/2014"}, {"body": "two packages two repos seems nt really choice could still disable issues gets kept one place prs ok local branches track also make main branch reduce confusion", "d": "11/2014"}, {"body": "bower needs distribution nt need develop", "d": "11/2014"}, {"body": "bower needs distribution nt need develop true suppose option pushing compat distribution separate repo", "d": "11/2014"}, {"body": "option pushing compat distribution separate repo likely quite difficult achieve unless push branch separate repo well duplication would confusing outsiders rather one place", "d": "11/2014"}, {"body": "likely quite difficult achieve nt think would difficult enough write duplication would confusing outsiders outsiders already confused would nt ones distributiononly repos", "d": "11/2014"}, {"body": "outsiders already confused would nt ones distributiononly repos else", "d": "11/2014"}, {"body": "nt way jquery bower took", "d": "11/2014"}, {"body": "think prefer option none us want spend time migrating issues one repo creating duplicate issues cases affect means probably want disable issues compat repo problematic nt think possible autoclose issues another repo ie commits compat repo would nt autoclose issues master repo much overhead comes two development repos", "d": "11/2014"}, {"body": "nt way jquery bower took yes whole org modules managed owners though one example angular etc funnily enough repo publishing npm well", "d": "11/2014"}, {"body": "else top head think angular lodash", "d": "11/2014"}, {"body": "nt think possible autoclose issues another repo write though", "d": "11/2014"}, {"body": "actually like idea separating development repo distribution repos mixing two always seemed icky", "d": "11/2014"}, {"body": "actually like idea separating development repo distribution repos would also want separate bower distribution repo mixing two always seemed icky already process", "d": "11/2014"}, {"body": "nt way jquery bower took different reasons see point uncommon weird moreover preferable think good way go btw guess github replacement jquerymeeting channel huh", "d": "11/2014"}, {"body": "btw guess github replacement jquerymeeting channel huh ha email", "d": "11/2014"}, {"body": "topic pretty much crazy maybe use github meetings like create special repo use issues meetings", "d": "11/2014"}, {"body": "topic pretty much crazy maybe use github meetings like create special repo use issues meetings", "d": "11/2014"}, {"body": "well bit exception little chatty typically still good discussions somewhere make progress missed meetings lately beers", "d": "11/2014"}, {"body": "", "d": "11/2014"}, {"body": "tbh ideal solution would separate repos bower packages create detached tags npm handle nondetached ones easily fact nt care tags git publishing said every change would affect jqueryrelease way probably need good reason everything", "d": "11/2014"}, {"body": "mzgol agree separate repos distribution seems like best approach development repo nt position pull without build process anyway seems like want publish bower npm new repos arguments approach", "d": "11/2014"}, {"body": "dmethvin still need figure integrate jqueryrelease process", "d": "11/2014"}, {"body": "mzgol let cross bridge come unless projects want things way may need change anything jqueryrelease use take regardless think particular issue resolution opened new one implementing distribution process", "d": "11/2014"}, {"body": "regardless think particular issue resolution think still want tagging original repo regardless release bowernpm need settle tag ok everyone", "d": "11/2014"}, {"body": "", "d": "11/2014"}, {"body": "works understand oracle semverorg version compat build would something like mouthful long works good reality nt think cause confusion two different distribution repos", "d": "11/2014"}, {"body": "understand oracle semverorg version compat build would something like mouthful long works good need ensure account way easy append prefixes wrong order unless use npm semver package work us reality nt think cause confusion two different distribution repos yes mentioned still need tag branches original repo sth decided", "d": "11/2014"}, {"body": "thought think looks weird seems compat build version definitely nt match unless always plan release betaspatch releases time branches nt want rely reopening issue since still discussing", "d": "11/2014"}, {"body": "nt think real issue first nt really matter tag public consumption ones need know refers version compat branch independent master second unless someone offers better option let consider resolved", "d": "11/2014"}, {"body": "think okay distribution repo say tagged ambiguity repo regarding value may contain tokens beyond custom build", "d": "11/2014"}, {"body": "sounds good", "d": "11/2014"}, {"body": "plan development files including gruntfile amp friends repos people build versions otherwise tags wo nt us", "d": "11/2014"}, {"body": "value value jquery compat tag definitely public consumption", "d": "11/2014"}, {"body": "plan development files including gruntfile amp friends repos people build versions example headless tag guess answer yes since separate repo worried committing much stuff could commit nodemodules suppose smilingimp someone wants create different repo built files nt want amd files nt want custom build want minified monolithic file someone could job package managers really start bug value jqueryfnjquery jquery compat think would problem think tag release jquerycompatdist repo would match one master suppose means release historically case worse case release new version changes keep versions sync suggestions welcome", "d": "11/2014"}, {"body": "plan development files including gruntfile amp friends jquery compat dist repos people build versions otherwise tags jqueryjquery wo nt us discussion issue nt need include building assets distributing nt actually build folder ignored npm bower continue include src folder tag definitely public consumption ok barely sure making mountain mole hill think would problem unless better solution hope move", "d": "11/2014"}, {"body": "ok let call resolved", "d": "11/2014"}, {"body": "nt think possible autoclose issues another repo timmywil fyi absolutely possible", "d": "12/2014"}, {"body": "arschmitz already written", "d": "12/2014"}, {"body": "mzgol ah ok sorry missed really long thread lol", "d": "12/2014"}, {"body": "passing empty string remove styling applied earlier via value stylesheets latter case need explicitly overwrite desired css cascade works think docs unclear happening please open issue pointing specifically misleading text", "d": "11/2014"}, {"body": "yes css resolved renderer sense harmonization would expected jquery reset css attribute default value instead nothing explicit call repeat explicit call specific element applies nothing makes change dom hand effect really intended take proposal change behaviour applying nothing applying inlining canonical unified whatever default value cause expect trying overwrite css attribute decent call", "d": "11/2014"}, {"body": "oh implies another way removing css like removecss method hmm", "d": "11/2014"}, {"body": "rewriting contents container handlers lost bug please use forums stack overflow help", "d": "11/2014"}, {"body": "elements nt lost firefox definitely losing references via nt jquery bug something jquery fix", "d": "11/2014"}, {"body": "ok thanks taking look", "d": "11/2014"}, {"body": "syxton could report mozilla unless one already exists post link bug", "d": "11/2014"}, {"body": "", "d": "11/2014"}, {"body": "thanks", "d": "11/2014"}, {"body": "duplicate filed", "d": "11/2014"}, {"body": "see something hard fix fixable", "d": "11/2014"}, {"body": "little complex potentially returns noninteger value caused problems existing code expecting integer values returns considering version though see bad slow", "d": "11/2014"}, {"body": "well worth written replacement hidden filter defaults performant test pull results", "d": "11/2014"}, {"body": "since closed accepted seems appropriate close issue well leave open another week comment objection closed sept fwiw glad issue received attention deserved far tell use cases mine regarding setting tab order visible elements new method offsetwidthoffsetheightgetclientrects seems work extremely well modern browsers thank hard work", "d": "9/2015"}, {"body": "closing per op evaluation see info", "d": "1/2016"}, {"body": "thanks report could use npm api query latest version scrap probably better remove automatic way described record using detached tag technique bower nt support something repository npm would nt problem", "d": "11/2014"}, {"body": "think users explicitly choosing version think go away well said give recently tagged version worth noting existing command based date based versions recent tag necessarily current version get correct value time need sort version numbers definitely scope readme though simple nodesemver", "d": "11/2014"}, {"body": "seeing consensus replacement text create custom build first check version want customize brackets follow custom command description syntax", "d": "11/2014"}, {"body": "brackets follow custom command description syntax man page though sure context clear maybe create custom build first check version want customize jquery version want customize", "d": "11/2014"}, {"body": "related", "d": "11/2014"}, {"body": "sounds good", "d": "11/2014"}, {"body": "want file pull request change", "d": "11/2014"}, {"body": "cc rwaldron", "d": "11/2014"}, {"body": "looks like mistake docs tests assert jquery instance object returned allow chaining moving", "d": "11/2014"}, {"body": "query arbitrary ids provided properly escape css identifiers", "d": "11/2014"}, {"body": "fixed thank", "d": "11/2014"}, {"body": "ca nt reproduce could create example showing problem start", "d": "11/2014"}, {"body": "able reproduce ie jquery trying fetch existing script file working fine firefox ie trying fetch non existing script file firefox getting expected ie showing syntax error instead case jquery code used replicating bug", "d": "11/2014"}, {"body": "run chrome example see returning success script obviously nt know server might returning could return status put sample server retrieves server", "d": "11/2014"}, {"body": "closing due inactivity", "d": "11/2014"}, {"body": "begin pgp signed message hash weird one line making whole thing go bad ca nt figure updated jsfiddle using nightly build begin pgp signature version gnupg ivvx end pgp signature", "d": "11/2014"}, {"body": "second argument current position element modified could either fix doc notes oneliner module dmethvin", "d": "11/2014"}, {"body": "see lure modifying incoming position object seems like allow", "d": "11/2014"}, {"body": "thanks opening issue work expected due behavior render selection nothing check", "d": "11/2014"}, {"body": "duplicate think words hard problem", "d": "11/2014"}, {"body": "mottie think definitely difference firefox interprets things sure fix jquery ideas miketaylr", "d": "12/2014"}, {"body": "yeah looks like firefox bug one linked duped", "d": "12/2014"}, {"body": "way worked around issue set transform back zero demo used quickfix css definition override transform measuring offset top", "d": "12/2014"}, {"body": "going close nt think able put fix jquery level", "d": "12/2014"}, {"body": "yes cicumstances starts acting like confusion shows pass funarg shows us two paths either could try squeeze method taken advantage similarity could change logic method funarg argument execute passed function could clarify docs also already mentioned although indirectly dmethvin", "d": "11/2014"}, {"body": "case would nt mind adding couple tests methods", "d": "11/2014"}, {"body": "begin pgp signed message hash look code happening looping element pass return value function passing index element argument function individually element docs seem match behaviour syntax section top made clear examples begin pgp signature version gnupg end pgp signature", "d": "11/2014"}, {"body": "really dislike function arguments methods sure seemed like nifty little addition api time causes much pain bloat markelog aurelioderosa think seems like enough edge case could document current behavior refactoring much pain like years", "d": "11/2014"}, {"body": "think could start mentioning issue documentation people aware different behavior dmethvin said see break compatibility older code said edge case think developers using method passing function based code needed fix issue wo nt result increase size jquery source proceed", "d": "11/2014"}, {"body": "think could go either way around corner could break backcompat make methods consistent increase size although much could document decrease size exploiting similarity", "d": "11/2014"}, {"body": "good point relatively small back compat break would right time let go ahead call bug fix", "d": "11/2014"}, {"body": "okely dokely", "d": "11/2014"}, {"body": "page would equal cool", "d": "11/2014"}, {"body": "yes think new interpretation function nt called set empty suppose", "d": "11/2014"}, {"body": "function nt called set empty suppose add tests seems tests funarg argument method add", "d": "11/2014"}, {"body": "create issue docs migrate", "d": "11/2014"}, {"body": "many iframes create make real problem", "d": "11/2014"}, {"body": "pages iframe indexhtml leakhtml html cerrar function navigate var form documentcreateelement form documentbodyfirstchild formappendchild documentbodyfirstchild documentbodyappendchild form formsubmit", "d": "11/2014"}, {"body": "right one taking lot memory", "d": "11/2014"}, {"body": "onclick perform submit reload inner page see memory leaks open real click button could see ie memory process grows grows download development edge jquery sourcecode modify lines posted first post reopen test modified version see memory leak dissapears problem lines code creating one node attaching event function contains closure variable reference without detaching later wich well known even documented issue see closures section", "d": "11/2014"}, {"body": "something similar removed code also removes binding cloned div necessary simply unbinding original div happen fix issue", "d": "11/2014"}, {"body": "necessary according microsoft documentation remove attached events parentless nodes piece jquery code simple test detect browser able clone node also attached events detach transparent fully functional backwardcompatible", "d": "11/2014"}, {"body": "yes seem like elements would need event handler detached case code referred preventing memory leak since cloned element still handler bad nt good way automated tests issues", "d": "11/2014"}, {"body": "dump direct feature detect switch indirect detect reduces whole mess without resource leaks cleanup could even simpler need second part opera support comment right", "d": "12/2014"}, {"body": "could even simpler need second part opera support comment right dropping opera presto support nt matter", "d": "12/2014"}, {"body": "landed fix", "d": "12/2014"}, {"body": "note regression caused", "d": "7/2015"}, {"body": "workaround return resolved promise containing return value step replace", "d": "11/2014"}, {"body": "promisealike method returns new deferred existing one expect", "d": "11/2014"}, {"body": "expect method return new deferred nt expect objects different b returns jqueryobject remain identical returns value object", "d": "11/2014"}, {"body": "jquery object promise method looks like resolved promise value passed subsequent see example", "d": "11/2014"}, {"body": "right object containing function returned handler change context think condition function called promise insufficient reworked least behavior documented", "d": "11/2014"}, {"body": "returning nonpromise objects function called promise trying understand use case", "d": "11/2014"}, {"body": "assuming change easily fixed defining function nt like lots code example beginning comment imho easier understand better readable", "d": "11/2014"}, {"body": "cc jaubourg", "d": "11/2014"}, {"body": "harder part passing really happen something like stop caring entirely pass along without much change write code would think tricks jquery little dangerous promises reliable chains", "d": "11/2014"}, {"body": "given trying align promisea promises think documentation say users depend value inside handler promisea writeup says must called functions ie value", "d": "11/2014"}, {"body": "like idea passing context allows pass information promise subsequent handler whereas handlers dealing information example", "d": "11/2014"}, {"body": "discussed weekly meeting decided change behavior", "d": "12/2014"}, {"body": "actual issue behaviour documented", "d": "12/2014"}, {"body": "oh given filed code repo thought asking behavior change clarifications like make docs file", "d": "12/2014"}, {"body": "please provide complete reduced test case jsbin help us assess ticket start", "d": "11/2014"}, {"body": "actually mention problem function outside jquery core report issue jqprint authors", "d": "11/2014"}, {"body": "dmethvin misc label ok", "d": "12/2014"}, {"body": "mzgol yeah guess seems like waste create new label something like also add behaviorchange since something may want highlight", "d": "12/2014"}, {"body": "mzgol yeah guess seems like waste create new label something like ok wanted distinguish issues consider invalid forgot milestone already serves purpose remove label", "d": "12/2014"}, {"body": "landed nt know github nt autoclose", "d": "12/2014"}, {"body": "dmethvin would good ticket needs review label also behavior nt needed supported browsers let drop", "d": "11/2014"}, {"body": "recall markelog trying remove early days jquery resulting removed safely", "d": "11/2014"}, {"body": "think done done officially dropping cleanly cherrypick change branches", "d": "11/2014"}, {"body": "good call", "d": "11/2014"}, {"body": "markelog recall issues encountered problem maybe remembering wrong", "d": "1/2015"}, {"body": "long time ago bit busy today refresh memory tomorrow", "d": "1/2015"}, {"body": "talking breaking changes nt look like one special behavior exactly nt understand related references creation recall markelog trying remove early days jquery involve probably thinking according spec always present true implementation autoinserted table created html serialization declared html property regardless content present created dom methods used otherwise improperly render according spec could ommited autoinserted table tags modern browsers create html serialization empty table behave according specification specific content dommethods created regardless content even opera ff behave way creation nessary empty table statically created property used basically ca nt use node environments longer use directly tables even true method codepath could safely removed", "d": "1/2015"}, {"body": "tbody creation nessary empty table statically created innerhtml property used basically ca nt use innerhtml node environments bit info", "d": "1/2015"}, {"body": "record breaking change affecting layout table modern browsers", "d": "1/2016"}, {"body": "fdlk open new issue includes test case", "d": "1/2016"}, {"body": "dmethvin created jsfiddle demonstrate", "d": "1/2016"}, {"body": "reverted removing milestone", "d": "3/2016"}, {"body": "thanks opening issue however way browser parses string using related jquery bypass inserting html ampersand", "d": "11/2014"}, {"body": "thank reply", "d": "11/2014"}, {"body": "docs bit confusing point code works documented due changes applied docs note section quoting prior jquery would attempt add change nodes current jquery set first node set connected document cases return new jquery set rather original set method might might returned new result depending number connectedness arguments jquery replacewith always return original unmodified set attempting use methods node without parent neither set nodes contains changed section disconnected nodes documentation removed since functionality existed nt work reliably docs bug closing ticket", "d": "11/2014"}, {"body": "fixed docs", "d": "11/2014"}, {"body": "right also copied file nt see problem though nobody using file production good compat branch master", "d": "11/2014"}, {"body": "ok update jenkins scripts", "d": "11/2014"}, {"body": "scripts updated also moved compat jobs use branch renamings hard existing files currently point obsolete files funny points version", "d": "11/2014"}, {"body": "let leave place announce deprecated replaced new files blog post put together list big changes jquery next weeks", "d": "11/2014"}, {"body": "let leave place temporarily readd publishing jquery builds additionally jquery compat builds additionally leave currently", "d": "11/2014"}, {"body": "btw need contact jsfiddle jsbin etc change references point files perhaps good continue publishing old endpoints additionally new ones untill announced people still easily test newest builds git", "d": "11/2014"}, {"body": "agreed hurry removing old files keep date old names", "d": "11/2014"}, {"body": "alright done mirrors mirrors need check various fiddles make sure nt rely map done envision announcing filename changes", "d": "11/2014"}, {"body": "thanks opening issue please provide reduced test case ideally help us assess issue", "d": "11/2014"}, {"body": "sounds like either ca nt fix close assuming duplicate something new feel free reply reopen", "d": "11/2014"}, {"body": "sorry mistake", "d": "11/2014"}, {"body": "great idea monitor errors definitely find lot way things breaking real life see error thrown inside jquery often indicates problem way code calling jquery sometimes thirdparty plugin ad blocker creates situation nt see testing might expect many people using jquery ca nt front line debugging web site uses suggest start site like stackoverflow jquery forum get help see something clear bug jquery feel free open issue specific repro case", "d": "10/2014"}, {"body": "see note docs value reported height guaranteed accurate element parent hidden get accurate value show parent first using height", "d": "10/2014"}, {"body": "cc dmethvin", "d": "10/2014"}, {"body": "surprisingly hard problem eh think current contributingmd file long people nt reading also overlap content quick patch would say content belongs make sure jquery bug section nt fix problem much read though", "d": "10/2014"}, {"body": "nt directing people file pointing instead perhaps remove content making sure relevant site putting short notice instead would direct site well", "d": "10/2014"}, {"body": "using template sites points back contribute site see example maybe could use work discussion getting right place suspect jquery core repo one likely get misdirected requests", "d": "10/2014"}, {"body": "good idea", "d": "10/2014"}, {"body": "would want us error caught", "d": "10/2014"}, {"body": "could force ready handlers called asynchronously ie replace wo nt solve problem functions added promise directly note using standard promises would even worse handler throwing exception would fail silently nothing else would break making quite tricky know bug also previous implementation lt would go array function call sequentially behave exactly way except adding function document ready", "d": "10/2014"}, {"body": "agreed far obvious fix catch error report somehow otherwise masking problem", "d": "10/2014"}, {"body": "apologies improper test case earlierlet give exact use case example example works fine yes jquery suppress error may correct execute pending handlers queue time first handler throws error cause problem newly registered handlers example ready handler added click button works fine jquery fails jquery looks like uses finally block reset firing flag possible similar fix thank looking", "d": "10/2014"}, {"body": "yes think possible restore version remove considers syntax error jaubourg think", "d": "10/2014"}, {"body": "well know pained remove block first place argument", "d": "10/2014"}, {"body": "according finally supported", "d": "10/2014"}, {"body": "mzgol problem required could nt words catch smilecat", "d": "10/2014"}, {"body": "yeah rethrowing catch ended losing actual context original exception", "d": "10/2014"}, {"body": "ah right good dropping ie lt", "d": "10/2014"}, {"body": "nice beer changetip", "d": "11/2014"}, {"body": "posterity behavior change ready handlers executed async words code adding ready handler expected handler executed synchronously ie code break hopefully nt common", "d": "3/2016"}, {"body": "put complete test case jsfiddlecom jsbinnet", "d": "10/2014"}, {"body": "sorry emulate parsererror jsfiddle tried created test site jscode bad js help jsfiddle remove links tests site thank", "d": "10/2014"}, {"body": "test case fine proves point looks like current code returning specific error thrown rather dumbing result sure whether change documentation code change docs say may specific error get benefit finding specific parser error occurred change reflect docs lose detail scabbiaza situation saw generic message help jaubourg reason nt return", "d": "10/2014"}, {"body": "well value third argument given canonical error callback see doc doc page reason happened dumbed values aborts timeouts incidental fact actual underlying error thrown situations convenience third argument thus set value second case http errors http status text provided xhr infrastructure parser errors exception thrown converters see documentation lacking regarding latter fact nt access second argument canonical error callback context rather third one another wonderful design flaws stacking top years thankfully since easily get around using prefilter remember global ajax events evil", "d": "10/2014"}, {"body": "writing ajaxerror handler application found issue created ajaxerror tests work fine except parser error case expected get documentation says possible values thrownerror argument timeout error abort parsererror opinion generic message useful error identification need access error description well", "d": "10/2014"}, {"body": "looking docs nt see guarantee value similar comment code opinion generic message useful error identification need access error description well smile particular case error occurring server returned invalid json either something rare encountered initial development something decided want harden code example bad thirdparty servers second one could get input text parse would allow provide detailed diagnostics prefer", "d": "10/2014"}, {"body": "well dmethvin assuming control serverside things always case whole argument moot using prefilter solve problem let put solution case guys missed", "d": "10/2014"}, {"body": "jaubourg want get clarity problem reported whether requires action part based current docs nt look breaking documented guarantee contains wondered comment came know", "d": "10/2014"}, {"body": "comes bad understanding definition documentation documentation stated earlier lacking comes hence made things clearer regarding previous comment reason happened dumbed values aborts timeouts incidental fact actual underlying error thrown situations convenience third argument thus set value second case http errors http status text provided xhr infrastructure parser errors exception thrown converters see documentation lacking regarding latter action required docs real actual problem parameters canonical callback available within global handler need fix since prefilters favored global ajax logic anyway provide much consistent complete interface make sense", "d": "10/2014"}, {"body": "thank guys works fine case see message full tests user solution good", "d": "11/2014"}, {"body": "ok sounds like workable solution nt frequently encountered problem close ticket resolved", "d": "11/2014"}, {"body": "see proposition", "d": "10/2014"}, {"body": "agree totally unnecessary people try use source code reference handy folder offline available jquery team even encouraging use source code", "d": "10/2014"}, {"body": "make available jquerycom download provide duplicate bower installation source keep npm bower valid point using source example needed using jquery dependency bower using dependencies source code files download also get included whatever app site make would really care source would also include md files download page found jquery bower package contains additional files besides default distribution cases ignore files however wish download default release use bower install jquery one urls instead registered package example wish install compressed jquery install file following command would reference version wo nt able include map file uncompressed file either also include separately feel nt really way done goes use bower either use npm source provide whatever feels unnecessary", "d": "10/2014"}, {"body": "yeah good point", "d": "10/2014"}, {"body": "duplicate want files", "d": "10/2014"}, {"body": "bower using source code like said keep jquery source npm exclude bower using bower anything else frontend development misusing", "d": "10/2014"}, {"body": "amd modules frontend consumed eg requirejs anything makes less sense include directory npm bower include npm though people would like use npm package way distribute separate files", "d": "10/2014"}, {"body": "basically using jquery requirejs separate branch included concatenated version still feel separated never use files folder would still suggest supply whatever bower", "d": "10/2014"}, {"body": "sth want said drawback files necessary tree kb though nt cause major issues hand maintaining separate packages would quite effort especially integrating release scripts etc would also need mirror npm already plan maintain two packages core would double huge effort little gain see also comment original issue include unminified file needed final app excluding would save space want keep need introduce overhead anyway amd modules separate branch true source code full file built individual ones", "d": "10/2014"}, {"body": "unminified file used debugging often run problem jquery thus need find line breaks nt concern even though duplicates size required jquery amount files main issue using phonegap nodewebkit need compile app file references live without like including readme many pages images alike would also remove nt planning using since maintaining separate package problem already splitting plus jquery packages separate like ui mobile sure current releasescripts setup difference would includingexcluding source folder", "d": "10/2014"}, {"body": "maintain jquery ui amp mobile bower packages afaik right scottgonzalez maintain bower package mainly historical reasons used rely packages internal build system uses npm packages community feels need separate slimmer package fine someone maintaining package feel free create one nt bandwidth need btw need include full packages phonegap bundle rely gruntbowercopy copy files need", "d": "10/2014"}, {"body": "since maintaining separate package problem already splitting keep package moment though plan split anyway maintaining two git branches huge burden gains significant made sense team cases like happen really rarely eg could save space maintaining two sizzle versions felt gains nt big nt result even jquery contains fixes older browsers virtue including sizzle", "d": "10/2014"}, {"body": "since maintaining separate package problem separating code new package programmatically managing repo sake bower already splitting really tags repo managed separate branches model many projects use supporting multiple versions plus jquery packages separate like ui mobile completely separate projects even close situation sure current releasescripts setup difference would includingexcluding source folder nope said releasing source files important option releasing two different packages bower since bower directly tied repositories need duplicate repository bower release without source code mzgol said effort beyond anything else benefit way small", "d": "10/2014"}, {"body": "nt know grunt module thanks might setup fork ignore source files alternative would change distributiontask copy files needed suggested module gruntcopy still feels weird source files bower project bad bower also nt ability use additional parameters situation could say whether would would nt want certain things", "d": "10/2014"}, {"body": "bad bower also nt ability use additional parameters situation could say whether would would nt want certain things seems vaguely related", "d": "10/2014"}, {"body": "given bower npm currently work nothing change repo make everyone happy people want amd modules custom build use requirejs others want built file someone else free create repo contains built file could pull development repo intended use distribution repo create detached heads built files upon releases issue remove bowerjson file since nt support using dev repo way", "d": "10/2014"}, {"body": "quick found solution turns need try catch previous combination jquery jqueryui allowed attaching draggable events rendered dom assuming since everything worked upgrading libraries fixing issue try catch noticed draggable events working flipped code around initializing draggable events elements already rendered dom everything working expected", "d": "10/2014"}, {"body": "fyi version jqueryui using", "d": "10/2014"}, {"body": "please provide test case well precise information browser experience problem without unable help", "d": "10/2014"}, {"body": "examples already provided op like jsfiddle jsfiddle testcase values b values c correct tested firefox ie jquery version", "d": "10/2014"}, {"body": "confirmed simplified related never return resolved value hidden element obvious reasons although nt understand one could find use percentages instead pixels hidden element could use course nt think could remove though since issue longer exist safari oldest android whereas dropping support safari longer support mobile safari", "d": "10/2014"}, {"body": "widthsheights docs already mention results parenthidden elements may accurate nt think swaps show due potential horrific performance past fix would prefer people explicitly make think mess makes wontfix add docs thoughts", "d": "10/2014"}, {"body": "definitely nt jumping hoops get dimensions hidden elements", "d": "10/2014"}, {"body": "actually proposing fix proposing remove old hack already nt need would save us bytes remove unneeded reflow subsequently return expected value case", "d": "10/2014"}, {"body": "meant mention sorry markelog think comment may wrong perhaps mikesherov remembers better nt think fixed year chrome suppose could remove code see fails nt see lot relevant unit tests cssjs moment smilingimp", "d": "10/2014"}, {"body": "nt think fixed year chrome fixed chrome since version nt see lot relevant unit tests cssjs moment tests mikesherov crying loud see related", "d": "10/2014"}, {"body": "already run tests without portion everything fine", "d": "10/2014"}, {"body": "nt know test nt click sounds like safe remove patch", "d": "10/2014"}, {"body": "branch removing quirks browsers dropped try submit pr today", "d": "10/2014"}, {"body": "done see", "d": "10/2014"}, {"body": "turns still need hack android missed since works correctly android oo pr", "d": "11/2014"}, {"body": "patch restoring hack android landed problem reappear browsers likely need mark wontfix add note docs", "d": "2/2015"}, {"body": "landed includes support test workaround seems make clear docs android browser suffers issue", "d": "3/2015"}, {"body": "mzgol agreed", "d": "5/2015"}, {"body": "moved docs issue", "d": "1/2016"}, {"body": "intended native dom method essentially performs click click results event dispatched jquery method explicitly event dispatcher side effect native method name called end", "d": "10/2014"}, {"body": "internal function never documented ability trigger events globally nt correspond dom functionality horrible performance implications removed never documented want use jquery events pubsub mechanism trigger events create custom element use trigger", "d": "10/2014"}, {"body": "think would lines jquery fix give try think much harder problem could also look old tickets trac get idea remember newer query methods like nt designed namespaces keep open get chance look search trac might possible refine start", "d": "10/2014"}, {"body": "thanks kind information interested", "d": "10/2014"}, {"body": "close ticket keep list manageable doriantaylor want discuss things would good place", "d": "11/2014"}, {"body": "fair nt circled back around yet probably wo nt able touch couple weeks least", "d": "11/2014"}, {"body": "worth noting selectors api spec explicitly mentions support xhtml well html note script operates dom works independently syntax used create document thus script also work correctly equivalent table created wellformed xhtml instead html dynamically created inserted document using dom apis sure browser coverage though seem remember long ago using style attributes js fine strict xhtml running compatibility problems real problem elements generated jquery xhtml host document generated pretty sure change little detecting namespace switching generated elements anything going significant amount work going testing", "d": "1/2015"}, {"body": "provide test case see two issues opened question evidence", "d": "10/2014"}, {"body": "excuse poorly written theme", "d": "10/2014"}, {"body": "correct use method documented valid argument", "d": "10/2014"}, {"body": "send content type body make kind sense blowing thing way proportions nothing content type content earth going", "d": "10/2014"}, {"body": "would mainly empty form post send contenttype", "d": "10/2014"}, {"body": "prefilter beforesend reports incorrect contenttype browser implementation forms followed sends regardless like looks like regression save us bytes blowing thing way proportions nothing provide fix would something drastic", "d": "10/2014"}, {"body": "lots confusion regarding contenttype prefilter contenttype set yet options related data nt dealt yet prefilter want changeaddremove data beforesend data empty course contenttype set case form encoding always ajax requests wrongly use modify data would actually serialized need set contenttype manually anyway bug fix backendproxy would see contenttype attempt parse content fail miserably content empty ajax clientside argument provide fix would something drastic original bug nt contenttype correctly set set modify data beforesend callback empty first place original issue got twisted conversation went lost track fact talking antipattern simple clear solution case nt clear enough use prefilter fact data modified beforesend callback point request lifespan data related information already processed change data prefilter everything works expected set contenttype every requests including ones content open worms serverside reason supporting antipattern clientside classifies blowing thing way proportions", "d": "10/2014"}, {"body": "case form encoding always applicationxwwwformurlencoded ajax requests true pure new method value contenttype header used sometimes always following form logic fully wrongly use beforesend talking talking modifying properties prefilters beforesend method get wrong value even nt touch anything bug fix backendproxy would see contenttype attempt parse content fail miserably content empty neither tickets parser problems post request requests body set contenttype obviously wrong case form contenttype always sent followed logic nt trip serverside scripts case form encoding always applicationxwwwformurlencoded ajax requests nt break server side scripts form requests ajax requests seems unlikely ajax clientside well yeah browserserver communication prefilter contenttype set set request reports set change data prefilter everything works expected nt change anything report wrongly contenttype value ignore argument repeated couple times already", "d": "10/2014"}, {"body": "case form encoding always applicationxwwwformurlencoded ajax requests true pure new method value contenttype header used sometimes always following form logic fully saying good bad find increasingly confusing follow reasonning also sometimes always nt sound like proposing wrongly use beforesend talking talking modifying properties prefilters beforesend method get wrong value even nt touch anything exactly point never talking actual bug bug fix backendproxy would see contenttype attempt parse content fail miserably content empty neither tickets parser problems post request requests body set contenttype obviously wrong know issues empty body contenttype textjson past maybe specific situation happened case form contenttype always sent followed logic nt trip serverside scripts formencoded data empty string acceptable input instance case jsonencoded data case form encoding always applicationxwwwformurlencoded ajax requests nt break server side scripts form requests ajax requests seems unlikely read wrote little thoroughly please ajax clientside well yeah browserserver communication decisions take clientside consequences serverside begin imagine crazy stuff nt happen still prefilter contenttype set set request reports set report set actually report set documentation faith change data prefilter everything works expected nt change anything report wrongly contenttype value ignore argument repeated couple times already repeating fact wo nt make bug earth would want contenttype set particular moment lifespan request poster original bug sure nt inspect value years working never heard single person complain honestly point way could farther removed original bug report started hacking another module altogether keep ignoring fact original bug antipattern consists using rather easily fixed drum rolls using rather", "d": "10/2014"}, {"body": "think jaubourg point nt recurring issue regardless whether people using incorrectly spend time educating users better approaches rather adding even logic actually say instead suggesting use prefilter encourage users type use case create method wraps adds additional piece data necessary reason think approach better works etc", "d": "10/2014"}, {"body": "also sometimes always nt sound like proposing following default behaviour new standart following html forms logic fully fully case jsonencoded data exactly point never talking actual bug trying fix look one previous comment said provide fix bold want understand please patient know issues empty body contenttype textjson past maybe specific situation happened report set actually report set documentation faith repeating fact wo nt make bug course already provided example perhaps missed keep ignoring fact original bug antipattern consists using beforesend rather ajaxprefilter easily fixed drum rolls using ajaxprefilter rather beforesend talking logic please understand also talking original bug report although still nt understand argument ca nt change ca nt get correct values would use otherwise ca nt use document deprecate even remove really transform inflation discussion simple try determine bug", "d": "10/2014"}, {"body": "also sometimes always nt sound like proposing following default behaviour new standart following html forms logic fully fully actually following html forms logic explained several times handle single type content like forms case jsonencoded data ever tried empty expression valid see fiddle send contenttype textjson requests body effectively create faulty requests exactly point never talking actual bug trying fix look one previous comment said provide fix bold want understand please patient always easy get meaning nt feel like patient would nt answered every single question asked p repeating fact wo nt make bug course already provided example perhaps missed mean repeating see show still tell bug confusing settings behaviour reasoning could argue option set yet parameter final url would reply course nt nt request option ignored option ignored requests without body including post requests default behaviour xml consists setting header body yet none provided triggered something funny always found poorly implemented sense called late thankfully prefilters nt suffer limitations keep ignoring fact original bug antipattern consists using beforesend rather ajaxprefilter easily fixed drum rolls using ajaxprefilter rather beforesend talking logic please understand also talking original bug report although still nt understand argument ca nt change ca nt get correct values would use otherwise ca nt use document deprecate even remove gives snapshot options handled prefilters options object used handle options documentation actually quite clear goes suppose though never seen advanced examples callbacks seem always contain basic custom headers setting preemptive aborts important thing settings object contain options never use current request like related ones instance nt mean wrong really transform inflation discussion simple try determine bug already told several times bug keep demanding convinced level detail quite cumbersome timeconsuming us p", "d": "10/2014"}, {"body": "also realize definitely nt clear enough previous comments regarding dichotomy settings behaviour sorry", "d": "10/2014"}, {"body": "jaubourg nt think tried blow anything proportion since one editors xhr spec going information head goal get info head understand reasoning well much discussion obfuscated topic let see summarize least number words possible decide whether anything currently nt set contenttype post request body empty contrast html form post example always sets contenttype however basic nt set contenttype either perhaps nt need body edge case since encoding empty body probably nt affect processing servers fine either way compelling reason change might well leave asis avoid regressions case someone depends current behavior", "d": "10/2014"}, {"body": "fine either way compelling reason change might well leave asis avoid regressions case someone depends current behavior opinion nutshell", "d": "10/2014"}, {"body": "sounds like stay", "d": "10/2014"}, {"body": "please create working example jsfiddle jsbin test", "d": "10/2014"}, {"body": "inactive closing", "d": "10/2014"}, {"body": "workaround set contenttype beforesend provided", "d": "10/2014"}, {"body": "show incorrect contenttype sends", "d": "10/2014"}, {"body": "use change request data designed last call sending callback really useful abort requests preemptively prefilters called much earlier behave expect", "d": "10/2014"}, {"body": "designed last call sending callback really useful abort requests preemptively really usually used documentation also disagrees prerequest callback function used modify jqxhr jquery xml object sent use set custom headers etc jqxhr settings objects passed arguments", "d": "10/2014"}, {"body": "yeah modify jqxhr object settings object dates one reason prefilters introduced", "d": "10/2014"}, {"body": "hm settings object passed get value error set value also error change would cost us anything would make beforesend consistent domain suppose point might moot", "d": "10/2014"}, {"body": "settings object inspection supposed touch guess would locked using thing existed back keep mind really old stuff rewriting lot back forth regarding end needed called stage request order pass unit tests made point keeping lib backward compatible humanly possible anyway point moot making sense far prefilter proper approach one needs change something settings object handled internally callback late", "d": "10/2014"}, {"body": "guessing land end review settings changed time find need reprocessing correctly reflected case prefer add clarification docs saying something like argument considered readonly changes made may reflected request say may suspect might take effect luck", "d": "10/2014"}, {"body": "exactly dmethvin think doc addendum link would work wonders", "d": "10/2014"}, {"body": "dmethvin like far tell option like default value set circumstances different suppose need document js ajaxprefilter function options consolelog optionscontenttype applicationxwwwformurlencoded jqueryajax url method post contenttype header well", "d": "10/2014"}, {"body": "nt reviewed list ajax options see others thinking original goal nt include reprocessing probably nt change", "d": "10/2014"}, {"body": "saying want get bottom additional problem said original report incorrect value even nt change anything ca nt reliable set values object get incorrect values used", "d": "10/2014"}, {"body": "shown getter issue also applicable prefilters", "d": "10/2014"}, {"body": "case post body sure header matters since content sets header content", "d": "10/2014"}, {"body": "used html forms post method using contenttype set regardless request body", "d": "10/2014"}, {"body": "sounds like always set header even empty body looks like mistake separate issue needs fix", "d": "10/2014"}, {"body": "think yes andrewaladev solve issue well thanks", "d": "10/2014"}, {"body": "correct fix use prefilter", "d": "10/2014"}, {"body": "need nt common easy implement want benefit single method check build plugin", "d": "10/2014"}, {"body": "comment author dmethvin either document fix currentlydocumented case jsonp", "d": "10/2014"}, {"body": "jaubourg read docs replacing jsonp case reason cases", "d": "10/2014"}, {"body": "due fact able perform requests since version btw argument trigger behaviour consequence ajax infrastructure control presence callback placeholder url case request order promote request fix would test presence placeholder set accordingly would break fact promote request providing url placeholder proper think would used much scenario", "d": "10/2014"}, {"body": "encountered similar issue well exists latest version jquery want immediate fix using contenttype property set contenttype seems fix", "d": "11/2014"}, {"body": "review nt think want break ability promote requests may want document set contenttype avoid", "d": "1/2016"}, {"body": "opened docs issue", "d": "1/2016"}, {"body": "information version android simple test case also proposed workaround basically would solve problem since ticket migrated unlikely get response op close", "d": "10/2014"}, {"body": "dmethvin android version samsung ace delete request cached also cache false option created small test case", "d": "11/2014"}, {"body": "confirmed breaks android works reopening thanks getting back issue new tracker knobli", "d": "11/2014"}, {"body": "hmm actually every delte request fails android fiddle second latter ones observe different behavior knobli", "d": "11/2014"}, {"body": "knobli seeing first delete request fail", "d": "12/2014"}, {"body": "dmethvin mzgol sorry late response yesterday tested right fails time sure able reproduce problem phonegap app try weekend", "d": "12/2014"}, {"body": "dmethvin tested phonegap like said first time works times return message could find source phonegap run android click navigation test click button see result click anotherbutton see result close app task manager open app click navigation test click second button see another result", "d": "12/2014"}, {"body": "bug way obscure hard debug us invest time someone else would like track give us root cause might able fix", "d": "12/2014"}, {"body": "clarify test case attaching new progress handler promise resolves later progress handlers called result last looks wrong clearer test case", "d": "10/2014"}, {"body": "actually design note notify anymore deferred progress state kept invariant deferred progressed point say upload instance still progressed point deferred resolved rejected nt make sense fire progress handlers", "d": "10/2014"}, {"body": "scenario thought might cause trouble handler clean resources request called deferred resolves expecting activity resource actually still receive progress notifications guess nt walked implications see might happen", "d": "11/2014"}, {"body": "exact problem add new handler talking actively adding callback call already attached callbacks wo nt happen usecase pretty safe handler already attached wo nt called ever hand handlers added postresolution called lose ability know actual progress state deferred take example upload end progress handler never called upload already progressed status deferred nt change progress advancement deferred resolved upload still progression however actually dictate progress advanced since calls notify ignored upload progression forever", "d": "11/2014"}, {"body": "okay convinced think issues like promises punted progress", "d": "11/2014"}, {"body": "documentation says copy structure wrapped around elements set matched elements attaching events original elements outside document copies used wrap", "d": "10/2014"}, {"body": "comment author flexphperia direct link jsfiddle click run testing memory leaks chrome chances fix bugi next release quite important", "d": "10/2014"}, {"body": "pretty clearly leak since outer scope ca nt unit test add removal", "d": "12/2014"}, {"body": "comment author fixed upstream next jquery release", "d": "10/2014"}, {"body": "", "d": "12/2014"}, {"body": "comment author mgol also remove current tag year two going banned npm servers well perhaps nt really need tag since works fine semver range", "d": "10/2014"}, {"body": "comment author dmethvin reversion two packages wo nt issue possible unpublishremove tag nt know", "d": "10/2014"}, {"body": "comment author mgol dmethvin seems possible soon see", "d": "10/2014"}, {"body": "cc", "d": "10/2014"}, {"body": "sure enough see npmnpm amp npmnpm mediumterm roadmap may get done end year definitely feature want npm soonish use", "d": "10/2014"}, {"body": "assign clear list unassigned issues need wait npm changes anyway", "d": "1/2015"}, {"body": "done using npm", "d": "1/2015"}, {"body": "comment author brianpow assume focus text field mouse click tab key", "d": "10/2014"}, {"body": "nt see consistent results chrome either selection done outside event handler use", "d": "10/2014"}, {"body": "moving", "d": "9/2015"}, {"body": "dmethvin jaubourg close notabug one objects tomorrow", "d": "10/2015"}, {"body": "markelog objection", "d": "10/2015"}, {"body": "closing nonvalid", "d": "10/2015"}, {"body": "comment author thedistantsea also made pr github", "d": "10/2014"}, {"body": "jaubourg review", "d": "12/2014"}, {"body": "test case simpler test case timmywil take look looked like sizzle handling case attributes sure matching", "d": "12/2014"}, {"body": "real know way differentiate given ie lt two cases look identical standard tricks sizzle somewhat arbitrary treatment assume preserve reasonable behavior queries theirselves dubious benefit", "d": "12/2014"}, {"body": "comment author dmethvin since regression like fix however nt unit test support jasminenode chance need help propose fix pull request", "d": "10/2014"}, {"body": "regression patchlevel release broke headless testing see added milestone alarms could please clarify position supporting nonbrowser environments support still readme introjs", "d": "12/2014"}, {"body": "nt landed investigate", "d": "12/2014"}, {"body": "denissokolov could write exactly requiring jquery code", "d": "12/2014"}, {"body": "denissokolov assigned small number things pulled back release expect month two going long wait also need find way test prevent regressions root cause problem first place", "d": "12/2014"}, {"body": "run jquery node simple", "d": "12/2014"}, {"body": "best way sure lands create pull request want happen", "d": "12/2014"}, {"body": "mzgol stated wo nt release new patch quite quickly understand release process complex case big project like jquery make judgement decision want make sure full information however way see currently jquery completely broken nodejs everyone needs blacklist version packagejson fix build inconvenient", "d": "12/2014"}, {"body": "everyone needs blacklist version packagejson sorry assumed something broke nt fix see working correctly working little accident node jsdom check throwing trycatch around fixing makes problem serious thought denissokolov confirm changing one line fixes problem", "d": "12/2014"}, {"body": "kind thing fear would happen think start running smoke tests environments like ie jsdom phantom etc", "d": "12/2014"}, {"body": "running promisesa tests node see fix node still future", "d": "12/2014"}, {"body": "mzgol yes changed line ran copied project tests passed confirmed patch top top", "d": "12/2014"}, {"body": "yeah although original intentent cover environments", "d": "12/2014"}, {"body": "agree need smoke tests environments promisesa tests help node need enable jshint options disable possible nt accidentally use planning january address least denissokolov lot work involved pushing release including sending cdn providers would prefer process get various issues process fixed require manual steps nt think lot node users moment set dependency specifically sorry exactly using jquery node side", "d": "12/2014"}, {"body": "dmethvin run automated tests automated measurements code production run browsers provides much convenient fast environment phantomjs also preparing use environmentagnostic modules analyze html documents pure serverside application", "d": "12/2014"}, {"body": "ok pr serve basic smoketest nonbrowser environments still requires work though", "d": "12/2014"}, {"body": "reference fixed smoketesting added followup", "d": "12/2014"}, {"body": "comment author mgol end attaching data directly nodes problem may mostly go away mostly since still may leftover data special events etc", "d": "10/2014"}, {"body": "comment author mgol let see data approach fares", "d": "10/2014"}, {"body": "since data attached nodes close think angular case would longer issue", "d": "5/2015"}, {"body": "yep close", "d": "5/2015"}, {"body": "per yesterday meeting cantfixing issue branches", "d": "7/2015"}, {"body": "comment author timmywil mgol go ahead mark tickets open skip triage", "d": "10/2014"}, {"body": "comment author mgol oops", "d": "10/2014"}, {"body": "decided going fix ever hence label", "d": "7/2015"}, {"body": "since broken long time think might well wait", "d": "9/2015"}, {"body": "since going release compat line closing wo nt fix", "d": "10/2015"}, {"body": "failures still amp reopening proper milestone may decide wontfix perhaps disable tests android clean build", "d": "11/2015"}, {"body": "jquerycore added needs review label since releasing soon need decide think wontfix point least blacklist tests android make build pass thoughts", "d": "1/2016"}, {"body": "know stand", "d": "1/2016"}, {"body": "tests blacklisted amp amp closing issue", "d": "1/2016"}, {"body": "also present jquery main issue internal contains function used offset places ishidden uses either element function contains failing element function comparedocumentposition see whether element question underneath elementownerdocument elements underneath shadow root always false unfortunately builtin function accessor give shadow root given element means traversal currently guaranteed way retrieving host shadow root putting internal contains function would doubt increase running time function massively however think would acceptable limited knowledge use guardian function offset ishidden etc works principle browser shadow dom support amp amp element matches css selector host traverse find shadow host use contains would hopefully add much overhead thoughts", "d": "10/2014"}, {"body": "issue contains affects multitude jquery methods method chains end using seems fundamental issue would benefit adding tests shadow roots across board", "d": "10/2014"}, {"body": "well okay elaborate actually makes difference two arguments passed one shadow root nt example elem shadow root agree would affect lot different methods especially anything using contains check whether element currently within dom however proper fix would hopefully able something better node traversal find roothost full traversal every time contains called arguments would probably bit speed impact", "d": "10/2014"}, {"body": "seems like needs solved via changes additions dom methods ca nt imagine design shadow root would effectively destroy use dom always require climbing tree either intent indeed hide containment case seems wrong us rereveal least method", "d": "10/2014"}, {"body": "teasealancs could limit performance degradation cases shadow roots need found however dmethvin brings good point sometimes need get browsers fix problem", "d": "10/2014"}, {"body": "bit funny thing think one hand elements shadow root interpreted portion dom separate main body elem shadow root return false also note spec details element shadow root property set shadow host value shadow host element hosting shadow root sure hand though currently nt method function specified part spec acts like takes shadow roots consideration thing found thus far tell us definitively whether element shadow root host term represent shadow host nt necessarily think intention conceal containment given shadow host element easily retrieve shadow root using property however think intention separate dom area hidden main dom get feeling lacking part specification moment yes perhaps launching browser inquiry would good idea", "d": "10/2014"}, {"body": "going pull mikesherov opinion also see could recommend good place raise issue", "d": "10/2014"}, {"body": "ran issue going agree teasealancs looks like specification needs rethought updated nt seem palatable fix current dom methods", "d": "11/2014"}, {"body": "discussion last year", "d": "11/2014"}, {"body": "wrote patch makes working properly actually similar mzgol wrote first comment thing jquery uses hood works fine elements problem check whether element disconnected dom nt found better way rather recursive traversal parent would great native browser function time need deal somehow existing tools solution pretty works expected nt create significant overhead elements inside shadowdom", "d": "12/2014"}, {"body": "javascript elemcreateshadowroot var rect elemgetboundingclientrect disconnected hidden rectheight amp amp rectwidth return box box rect else make sure disconnected dom node jquerycontains docelem elem return box box elemgetboundingclientrect another way fix issue method need traversation tree detect element disconnected nothing disconnected nodes returns always zeroes also returns zeroes hidden elements element hidden disconnected return zeroes visible tree anywhere tree return real box one problem hidden elements jquery currently returns box disconnected elements returns always know artifact useful someone uses probably might break compatibility anyway leave alternative solution", "d": "1/2015"}, {"body": "also far see tests behavior think method break compatibility even drop condition execute always first part", "d": "1/2015"}, {"body": "possible could use something like solution nekr proposes docs offset specifically say nt work hidden elements", "d": "1/2015"}, {"body": "dmethvin case code simplified", "d": "1/2015"}, {"body": "think point missing ever simple nazarpc indicates case check whether disconnected dom node exist first place workaround browsers longer needed optimisation step prevent needless call potentially expensive function former sure latter think performance", "d": "1/2015"}, {"body": "thanks phpstorm integrates git found code started", "d": "1/2015"}, {"body": "question becomes bug still affect browsers supported jquery seems like fairly decent solution offset sure whether solution would work issues reported working elements shadow dom though would ostensibly function uses jquerycontains method filtering disconnected nodes think", "d": "1/2015"}, {"body": "actually ticket nazarpc references seems indicate trying support return value topleft disconnected elements change preserve", "d": "1/2015"}, {"body": "anything uses native functions work fine like without redundant check work even faster need check usages every particular case determine whether need many cases might replaced native dmethvin gives really big overhead handle disconnected nodes especially shadowdom support maybe performance consideration number elements dom tree shadowdom might much bigger drop support edge case opinion worth especially new major version also break wellwritten code something wrong getting offset disconnected node", "d": "1/2015"}, {"body": "also break wellwritten code something wrong getting offset disconnected node agree completely problem people write bad code time sometimes accident cases like quietly return values make seem like everything okay would preferred ticket closed getting offset element document update docs state valid possible though code depends zero return values concerned opinions", "d": "1/2015"}, {"body": "api perspective best behavior would throw offset meaningless eg truly disconnected elements nonelements documentation perspective best behavior would exclude elements range valid input case return value unspecified allowed crossversioncrossbranch inconsistent good anything else perfectly content nekr proposal provided nt introduce inconsistency handling shadow dom elements edit added examples meaningless input", "d": "1/2015"}, {"body": "well guys chromium native support shadowdom stuff guess outputs clientrect height width left bottom right firefox nightly guess output domrect x width height top right bottom left need check anything already gives correct zeros problem comes used returning value disconnected nodes independently whether inside shadowdom likely browser need call whatever else finally pretty straightforward sure nt way beginning think", "d": "1/2015"}, {"body": "moreover check falsy mdn states called document makes sense call cases check redundant", "d": "1/2015"}, {"body": "dmethvin wrote actually ticket nazarpc references seems indicate trying support return value topleft disconnected elements change preserve ticket removes scroll positions disconnected nodes hidden nodes use getboundingclientrect also remove scroll positions hidden nodes seems correct hidden elements always zeroes nazarpc wrote well guys chromium native support shadowdom stuff guess get comment mean attached visible nodes always returns zeroes strange chrome works correctly summarize work shadowdom expect match nodes shadowdom work expected least chrome returns zeroes top left bottom right hidden disconnected element regardless node shadow light dom nazarpc wrote problem comes var docelem elemownerdocumentdocumentelement used returning value undefined disconnected nodes independently whether inside shadowdom likely browser need call contains whatever else finally works nice way sure disconnected nodes really disconnected anyone test", "d": "1/2015"}, {"body": "get comment mean attached visible nodes always returns zeroes strange chrome works correctly example next line see returns zeros disconnected node anyone test jquery support old browser meant compat version", "d": "1/2015"}, {"body": "example next line see returns zeros disconnected node oh yes overlooked sorry exactly proposed use without traversing dom tree works jquery support old browser meant compat version really know version talk seems like versions broken shadowdom fixed wrong please correct", "d": "1/2015"}, {"body": "apiwise jquery jquery compat difference browsers support odd one course want api work consistent results latest chrome site using either branch definitely needs experimenting done calling disconnected element throws error sure whether tree climb expensive trycatch wrapper really dislike trycatch though", "d": "1/2015"}, {"body": "honestly prefer throwing error instead returning inaccurate could abandon disconnected elements excluded valid input", "d": "1/2015"}, {"body": "making small steps resolve issue branch fork github already showed download soon winxp virtual machine test things find correct solution mean time tests fails without changes screenshot errors ok errors honestly prefer throwing error instead returning inaccurate top left could abandon disconnected elements excluded valid input hmm think might broke compatibility since jquery never throwed errors", "d": "1/2015"}, {"body": "unfortunately run tests even checkout compat branch tested case property exists even disconnected nodes may see use condition uses useragent shadowdom excludes older browsers called disconnected nodes questions make pull request right need discuss merged compat branch fix compat branch merging course write tests need tests shadowdom disconnectedhidden elements make sure always return top left rect", "d": "1/2015"}, {"body": "hmm think might broke compatibility since jquery never throwed errors nt violate currentlydocumented api already includes jquery support getting offset coordinates hidden elements even case backwardsincompatible changes allowed upcoming major version bump nt like conflation unrelated behaviors make pull request right need discuss please make pull request discussion take place merged compat branch fix compat branch merging general guideline separate pr required solution looks sufficiently different two branches cherrypick impractical ticket one enough course write tests need tests shadowdom disconnectedhidden elements make sure always return top left rect depends whether want guarantee return values limit new tests shadow dom", "d": "1/2015"}, {"body": "tests shadowdom fork", "d": "1/2015"}, {"body": "nt violate currentlydocumented api already includes jquery support getting offset coordinates hidden elements even case backwardsincompatible changes allowed upcoming major version bump ok problem wondered possible problems think much problem probably ok answers pr", "d": "1/2015"}, {"body": "comment author arkadykarev another words jquery completely compatible latest version gwt one popular java frameworks web apps probably another libs", "d": "10/2014"}, {"body": "comment author dmethvin populate eventcurrenttarget also seems like regression gwt worked previously gwt nt fix regression end wo nt possible use anything recent version jquery gwt", "d": "10/2014"}, {"body": "hi guys eta", "d": "11/2014"}, {"body": "marked next release months would like take pretty simple fix would need relatively small addition far unit test goes", "d": "11/2014"}, {"body": "thanks want track glad know pipeline", "d": "11/2014"}, {"body": "makfruit take jsbin modify show nt set reproduce problem reduced test case", "d": "11/2014"}, {"body": "without test case ca nt proceed reopen test case showing bug unable create one using either simulated usergenerated events", "d": "12/2014"}, {"body": "think replicates problem u guys look", "d": "3/2015"}, {"body": "lot code modify demonstrate problem could nt find situation jquery nt already setting target", "d": "3/2015"}, {"body": "hi found details issue small example replicates problem example found issue missing eventcurrenttarget firing events jquery handling event within gwt code nt know libraries gwt expects eventcurrenttarget set jquery sends different event object depending type handler jquery handler eventcureenttarget present native handler eventcurrenttarget example jsfiddle demonstrates problem without gwt types handlers tested event data dumped browser console uncomment different handlers click run observe browser console changing combo box values correctly replicates problem jquery code check different behavior different handler types trigger function search comment fire handlers event path familiar jquery nt know design bug", "d": "3/2015"}, {"body": "note properties left days dom level events spec nt even mention suspect nt set event object nt originally defined case backcompat concerns example native functions chrome firefox property whether fired inside native javascript triggered via interaction control safari property cases property fired native javascript populated triggered via interaction control native cases nt set reason jquery set value event object passed browsers generally nt", "d": "3/2015"}, {"body": "agree findings jsfiddle however copied example results different properly populated tested chrome firefox ie triggering code interaction control populates seems little bit strange tested firing native events chrome console gwt application internally gwt uses properties setting handlers works expected seems jquery populate case native handlers nt know properties deprecated beleive covered well", "d": "3/2015"}, {"body": "nt know still relevant folks since months ago encountered issue recent project reduced test case lines htmljs mostly boiler plate html consolelog highlight issue indextxt reference dev fixes problem nixes bug report encountered context another bug report filed file attached", "d": "6/2016"}, {"body": "hunteke test uses inline handlers currenttarget nt populated mentioned inline handlers wontfix item", "d": "6/2016"}, {"body": "comment author cbroome actually thinking something like arraybuffer blob indexof xhrresponsetype lt amp amp xhrresponsetext string would safer existing functionality", "d": "10/2014"}, {"body": "thank opening issue sitting would possible create test case lot change chrome months", "d": "5/2015"}, {"body": "closing due inactivity reopened test case", "d": "5/2015"}, {"body": "confirm issue clients got bunch errors failed read responsetext property xml value accessible object responsetype text arraybuffer env windows xp jquery able reproduce fix proposed mzgol fixed issue client pc arraybuffer blob indexof xhrresponsetype lt amp amp typeof xhrresponsetext string", "d": "9/2015"}, {"body": "right jsonp method requires script transport first example could use json strip padding returned data example actually prefer change rare case good caller see username password exposed right url passing via options nt make clear", "d": "10/2014"}, {"body": "hi tried jsonp basic authentication ie browser working works chrome amp firefox please find code ajax type get url crossdomain true async false jsonpcallback jsonpcallback datatype jsonp success function data alert status ok thanks advance please help us", "d": "3/2017"}, {"body": "discussion", "d": "11/2014"}, {"body": "nt fixed removing milestone", "d": "3/2016"}, {"body": "encountered", "d": "10/2014"}, {"body": "jquery nt meant run use strict effect see comment top unminified file reason look information gaining anything attempting force jquery strict mode prevents interoperability thirdparty libraries usestrict compatible", "d": "10/2014"}, {"body": "thanks explanation guess close issue wontfix", "d": "10/2014"}, {"body": "also related", "d": "10/2014"}, {"body": "hmm nt think necessary deferred simply hard dependency coreready deferred removed custom build coreready could easily add gruntfile making custom builds usually also accustomed placing scripts end body making coreready wasted space maybe docs issue instead", "d": "1/2015"}, {"body": "pretty important api nt think go away someone nt want also thought still cases putting scripts end body nt enough think might remember case", "d": "1/2015"}, {"body": "used think conversation ago turned sufficient also deferred important api used internally areas besides coreready coreready probably least important", "d": "1/2015"}, {"body": "think limitation large document probably prefer start downloading script immediately still defer browser download parse dom parallel case doc ready still play role case script loads document ready think script loaders often covered", "d": "1/2015"}, {"body": "ah conversation thinking overlaps nt remember finding evidence putting scripts end body would nt work", "d": "1/2015"}, {"body": "know think already gone side sorry brain dump notifications could useful users question handle lack native promise certain environments", "d": "1/2015"}, {"body": "recently used divide support tests two parts one nt require attaching anything document invoked start one invoked doc ready therefore use jquery earlier aka latest run code doc ready risk stumbling upon bugs one linked timmywil thread second part support tests lazy elements attached documentdocumentelement happen anytime attached documentbody results documentbody exists fine put scripts end body bothers depend coreready consume via amd get deferred pulled automatically requirejs later builder course determined relying coreready longer necessary importance fact decreases thinking exclude defered coreready youre required provide windowpromise approach blow people using amd modules use ajax animate deferred use coreready micha\u0142 go\u0142\u0119biowski", "d": "1/2015"}, {"body": "think reasonable focus dependency reduction master compat deferred missing something simple like convert would nt need maintain queue browser maintain fifo order handlers throw exceptions nt affect subsequent ones moment undocumented stated intention document thenable specifically consistency behavior edge cases think best use deferred docs tell anyone custom build without need provide shim", "d": "1/2015"}, {"body": "would nt break usage event occurred", "d": "1/2015"}, {"body": "current ready module already plumbing handle although might complicated", "d": "1/2015"}, {"body": "like take dependencyfree promisecompatible approach etc shims gaps build restrictions js var readyfiring readycallbacks whenready function callback readycallbackspush callback jqueryfnready function callback whenready callback return could also thenable function want jqueryready fn dont jqueryready jqueryfnready suitably wired load events documentreadystate holdready function resolveready whenready function callback readycallbackspush callback readyfiring readycallbackslength callback readycallbacksshift jqueryisfunction callback perfect backcompat synchronous call context trycatch break bit want callbackcall document jquery readyfiring whenready additionally deprecate etc favor deprecate nasty global behavior modifier better covered casespecific deferredpromise patterns remove alreadydeprecated document ready event", "d": "2/2015"}, {"body": "additionally sound good", "d": "2/2015"}, {"body": "oh really simple way patch things like fact nt dependencies agree extras well never really liked nt seem widely used seems like maybe older stealjs uses case talking removal point deprecation", "d": "2/2015"}, {"body": "note better worse mediawiki currently makes use method thenable view source wikipedia page example uses fire jquery domready handlers towards end actual end script tags html windowjquery amp amp jqueryready windowmw mwloaderrequire windowmw mwdataset backendhost mediawikiincludesoutputpage bottomscripts added mediawiki fixes bug solved firefox bug regards also simplified things little needing jquery crossbrowser stuff served way effectively bring browsers bootstrapping scripts loaded run document ready run scripts loaded bottom body requestedloadedparsed thus making lot likely run initial rendering reduce flashes lesser styled content", "d": "2/2015"}, {"body": "seems good idea would like get issue reassigned", "d": "7/2015"}, {"body": "testing wp os version get tapping test tapping elsewhere full ua yeah ua strings pointless", "d": "10/2014"}, {"body": "ua info meaningful p pm aaron powell notifications githubcom wrote testing wp os version get popup tapping click test overlay tapping elsewhere full ua mobile windows phone android arm touch nokia lumia like iphone os mac os x khtml like gecko mobile yeah ua strings pointless reply email directly view github", "d": "10/2014"}, {"body": "closing lack information anyone thinks jqueryrelated jqueryfixable please post info", "d": "1/2015"}, {"body": "comment author timmywil support support everywhere words tests everywhere think already places point let add tests animate", "d": "10/2014"}, {"body": "comment author animate method allows us create animation effects numeric css property required parameter plain object css properties object similar one sent css method except range properties restrictive explicitly supporting animate plainobject properties documentation actually bug underlying jqueryanimation unit tests issue appears problematic interaction jquerycssnumber unit conversion default tweener inclination ignore units unless tweenelemnodetype nt think much case intentionally understate already dusty corner api animating nonnumeric properties plain objects thoughts", "d": "10/2014"}, {"body": "comment author timmywil since unit tests area already mark regression fixed", "d": "10/2014"}, {"body": "comment author dmethvin agreed thanks analysis", "d": "10/2014"}, {"body": "since deprecating use plain objects per perhaps close wontfix also even current docs nt say valid plain object", "d": "12/2014"}, {"body": "even though wontfix seems still need modification tests", "d": "12/2014"}, {"body": "looks like unit test plain objects one unit test introduced says fix trac nt mention plain object looked around commits time ca nt find references code depending gnarf anything know history think predates us", "d": "12/2014"}, {"body": "seen written code examples use animate plain objects said things attrhooks cssnumber behave super strangely nt documented particular test cover uses wild believe animating property plain object nt really supported", "d": "12/2014"}, {"body": "wow sorry spreading plainobject comments around multiple tickets gnarf sounds like proposing support plain objects extent want avoid bug reports like one need document okay done example someone always avoid css property names ensure consistent behavior", "d": "12/2014"}, {"body": "black hole undocumentedunsupported really think generic animation layer could support plain objects pretty easily honestly fringe area jquery animation might better supported lower level animate api instead", "d": "12/2014"}, {"body": "examples animating plain objects stuff like text length floating around internet since team member fringe supported", "d": "12/2014"}, {"body": "ca nt say issue left good state supported supported prominent posts display code worked wonderfully years yet defaults unhelpful error leading wild goose chases accept longer supported nearly patriotic issue last word needs bit closure", "d": "11/2015"}, {"body": "upvotes nt seem prominent maybe right either way going make due time constraints revisited later date", "d": "11/2015"}, {"body": "comment author dmethvin looks like around aborting happens synchronously cleans request avoid memory bloat gets back ajaxsend actually tries send request xhr object blown aborting request nt make lot sense point see xhr spec pretty much noop called send seems appropriate ajaxsend indicate nt want request proceed way concern making change would compat least know aborting nt currently work mark open discussion", "d": "10/2014"}, {"body": "comment author azriel opened pr suggested solution", "d": "10/2014"}, {"body": "hey relatively new open sourcegithub would like start contributing projects soon curiosity desire learn make effective contributions future want ask pr nt merged yet", "d": "10/2014"}, {"body": "hey jabelman took look earlier think fine jaubourg others comments quite often batch things nt get serious landing prs start push new version already signed cla good shape land soon thanks contributing", "d": "10/2014"}, {"body": "pr looks good", "d": "11/2014"}, {"body": "comment author dmethvin entirely much magic", "d": "10/2014"}, {"body": "updating jquery shows longer bug also changing current edge shows bug nt returned well might want close accordingly", "d": "12/2014"}, {"body": "ok closing ticket thanks robertmaxrees", "d": "12/2014"}, {"body": "sorry coming late bug fixed version jquery stated bug report need make inline style display none add duration see bug action fork robertmaxrees fiddle bug changes still happening bug fixed edge currently edge compat version though", "d": "7/2015"}, {"body": "comment author dmethvin low near zero byte cost could possible add someone would need implementation see cost number people using callbacks directly seems low would probably benefit many people", "d": "10/2014"}, {"body": "since nobody stepped nt needed internally closing ticket", "d": "10/2014"}, {"body": "comment author solgar realised neglected add chrome version version nt tried versions chrome looks issue suspect versions support chrome appschrome packaged apps affected", "d": "10/2014"}, {"body": "beforeunload also gives error chrome packaged apps", "d": "10/2014"}, {"body": "added could test instead good make sure fixed edge nt apply even hacky workaround soon", "d": "2/2015"}, {"body": "sure hook really needed everywhere monteslu error harmless cause issues", "d": "2/2015"}, {"body": "actually breaking anything looks awful", "d": "2/2015"}, {"body": "added could test instead still need test could use additional restriction beyond register thrilled work", "d": "2/2015"}, {"body": "waiting sizzle update right btw need get issue changelog timmywil seems mentioned anywhere fixed commit messages add commit importing latests sizzle", "d": "3/2015"}, {"body": "yea update sizzle commit include pertinent sizzle issues", "d": "3/2015"}, {"body": "fixed latest sizzle update", "d": "5/2015"}, {"body": "reverted workaround still needed edge able put back edge fixes bug see details", "d": "10/2015"}, {"body": "think fixed sizzle registering onunload handler nonpreferred windows fix come shortly", "d": "10/2015"}, {"body": "since removing label longer useful", "d": "10/2015"}, {"body": "since waiting sizzle update moving back", "d": "11/2015"}, {"body": "fixed", "d": "1/2016"}, {"body": "comment author dmethvin docs say properties object constructed via new mycustomobject args builtin javascript types date regexp reconstructed appear plain objects resulting object array expecting anything maintain constructedness deepextend good assumption however event object seem pass isplainobject test seems wrong", "d": "10/2014"}, {"body": "test cases seem working expected jquery master close please reopen interpreted wrong", "d": "12/2014"}, {"body": "fixed", "d": "12/2014"}, {"body": "comment author dmethvin running commentary", "d": "10/2014"}, {"body": "split separate issues tackle", "d": "1/2015"}, {"body": "comment author dmethvin yeah infinite loop seems like bad outcome suppose ignore trailing dot namespaces", "d": "10/2014"}, {"body": "comment author hamishdickson completeness created quick jsfiddle christian right problem firefox chrome safari handle nt loop forever look see", "d": "10/2014"}, {"body": "comment author hamishdickson digging actually looks issue remove rather could cause problems elsewhere go idea ignore trailing dot namespaces case stripping trailing dots types gets loop remove trailing dots types typesreplace replace typenamespace types type may omitted types types match rnotwhite typeslength tmp rtypenamespaceexec types run unit tests nt get errors also ca nt think reason would valid trailing dot proper test tomorrow submit pull request unless anyone comments style logic", "d": "10/2014"}, {"body": "comment author hamishdickson pull request created fix", "d": "10/2014"}, {"body": "comment author corbacho ignore jsfiddle link correct bug fixed one removing line", "d": "10/2014"}, {"body": "comment author corbacho reduced bug command building empty jquery grunt build contains lines define define jquery function", "d": "10/2014"}, {"body": "comment author dmethvin thanks reducing mark open patches testing welcome", "d": "10/2014"}, {"body": "comment author corbacho pull request fix one issues define working fixing define nt related", "d": "10/2014"}, {"body": "comment author cleanup possible current api better worse show works elements suppressed stylesheet rules may issue best solved plugin seem like taken wrong path also affected us defaultdisplay leave consideration", "d": "10/2014"}, {"body": "comment author dmethvin let address via docs nt think way read possible intents show hide general like deprecate encourage people use classes instead may code changes also made simplifications would hope leave ticket open", "d": "10/2014"}, {"body": "comment author noted meeting today ignoring stylesheets looking inline styles would resolve host showhidetoggle bugs probably eliminate defaultdisplay boot course way know bugs would filed different behavior worth looking consequences breaking change", "d": "10/2014"}, {"body": "page yellow note callout added indicating cause issues responsive layout released fixes issue wondering note updated indicate lt responsive issue unless still responsive layout issues show even least fiddle fixed switched nt testing regarding responsive layout", "d": "7/2016"}, {"body": "comment author scottgonzalez uniqueness check nt run children assume elements already order getting children always result ordered set shown scenario assumption incorrect set containing descendant another element set", "d": "10/2014"}, {"body": "comment author scottgonzalez uniqueness check removed due", "d": "10/2014"}, {"body": "comment author dmethvin still avoid uniqueness overhead singleelement sets currently seems like whole optimization added multielement sets may backed way recognize case", "d": "10/2014"}, {"body": "comment author dmethvin test case shows little clearly console", "d": "10/2014"}, {"body": "comment author reavowed bit look problem potential solutions figured share thoughts case useful anyone problem identified children contents preserve uniqueness necessarily preserve ordering sequence sequence contains nested elements checking sequence contains nested elements probably costly especially run unique children anyway however assumption source sequence ordered much efficient way checking resorting uses fact lt b descendant b lt b lt c b descendant c descendant either following algorithm calculate children sequence elements keeping results ordered single pass iteration take first element source sequence call calculate children get elements source sequence long descendants descendants found push children result sequence one descendants found push children array children run unique array push result sequence repeat next element sequence run unique sets child elements ca nt reasonably confirm kept order requiring additional contains calls particularly complicated algorithm either though nt know enough jquery nfrs say whether worth adding special case rather simpler solution applying unique naively would however definitely recommend renaming guaranteedunique something specific like preservesuniquenessandorder shame jqueryunique nt named bit sensibly well sizzle least calls function uniquesort", "d": "10/2014"}, {"body": "discussed meeting sorting guaranteedunique collection nt seem high enough value justify degrading performance without realworld use case", "d": "4/2015"}, {"body": "comment author dmethvin help us linking spec would current behavior correct older browsers nt implement newer spec", "d": "10/2014"}, {"body": "comment author jlukic css transforms establish new containing block absolute positions calculated based containing block modern browsers support transforms would believe legacy browsers support transforms calculate closest position relative support dropped jquery correct", "d": "10/2014"}, {"body": "comment author dmethvin support dropped jquery correct moment jquery supports browsers old android neither understand transforms android older currently percent android", "d": "10/2014"}, {"body": "comment author dmethvin nt bother much browsers nt support transforms long offsetparent nt blow developer set transform element older browser nt support transforms transform property ignored wo nt factor calculations still seems like additional code could tricky need look nonnone transform webkittransform property method climb tree probably special cases anticipated jlukic code currently using workaround", "d": "10/2014"}, {"body": "comment author jlukic nt written workaround perhaps try nt underestimate importance affects anything needs position based context sticky menus popups", "d": "10/2014"}, {"body": "come problem believe seen code happening menu length size menu changes depending many foldersassetsetc clients position button contains drop menu next folder recently foldersassets get extremely large started disappearing clicking chrome lead rendering bug basically chrome ca nt handle amount content force use transform translatez turn hardware acceleration converts element element code gist works fine element element button way page seems handling conversion properly using offset jquery", "d": "10/2014"}, {"body": "affects lot modules sticky sidebar visibility mess ie needs fix implementation well", "d": "11/2014"}, {"body": "jlukic set specific suggestions browser makers fix advocate agree mess code sizespeed issue worried well make always climb tree element ignore dom property", "d": "11/2014"}, {"body": "appears open issues spec chrome team response looks like nobodies decided", "d": "11/2014"}, {"body": "documentation element said positioned css position attribute relative absolute fixed least method behave means would behaviour change code sizespeed issue worried well make offsetparent always climb tree element ignore dom offsetparent property need look nonnone transform webkittransform property method climb tree probably special cases anticipated plus appears open issues spec looks like nobodies decided sounds horrible possible dirty workaround perf byte size hit since spec incomplete stuck code logic nt want whereas fix user side sounds like pretty easy thing add transform node although understand might easy least always crucial third party libraries use jquery like library semantic ui need determine correct offsetparent using contexts library use algorithm offsetparent search although given proposed logic hard call method since would deviate spec significantly", "d": "1/2015"}, {"body": "practical use know getting calculate values relative local coordinate system means anyone using expecting return element offsets calculated transformed parent element present currently returning value practical use developers jquery became quite ubiquitous good returning conforming values era browsers implemented specs way even though spec undecided certainly already implemented implementations vary browser try solve", "d": "1/2015"}, {"body": "call make discussion subject sure reiterate concerns spec nt ready might stack code nt want support spec nt account transformation properties related properties explicitly disregard transformation properties huge impact performance relatively big hit byte size less edge case easy fix user side errorprone implementation bzbarsky maybe could consult us correctly interpret spec would advise us go", "d": "1/2015"}, {"body": "talking massive changes untested pseudocode would imagine implemented javascript offsetparent function return thismap function var parentnode thisparentnode traversing properties much slower made test case uses levels deep nesting actually performs better machine granted actual implementation would property lookup step still seems negligible actually getting useful value back offsetparent", "d": "1/2015"}, {"body": "well yes course imagine dom tree elements deep root element others property set user would like know offsetparent still called deepest element tree current code one loop iteration code loop iteration every single parent would access css twice even could considered worst case scenario still pretty bad", "d": "1/2015"}, {"body": "markelog correct builtin offsetparentoffsetleftoffsetright affected transforms spec implementations problem generally pretty insane terms offsetparent eg compare interaction interaction pretty much block container break face subpixel layout problem highdpi displays subpixel things happen time weird stuff elements upshot browsers spec writers basically treating legacy properties nt changed way response transforms whatnot well really clear sort thing would even mean world transforms ideal world people would move away apis things like getboundingclientrectgetclientrects sort api get rects one element relative another element various proposals ca nt locate moment think advice would expose apis along lines tell people use ideally map directly browser builtin apis modern browsers", "d": "1/2015"}, {"body": "bzbarsky seem good company suggestion think difficult regards ui everything comes setting two values positioning set correctly context browser positioning context likely returned sometimes pity nt better way limited primitive positioning system css left us certainty context without bit digging javascript", "d": "1/2015"}, {"body": "pr might fix nt added tests confirming yet", "d": "7/2015"}, {"body": "mistake bzbarsky replace amp etc see pr replace anything", "d": "7/2015"}, {"body": "case absolutely positioned thing way get css containing block nothing aware offhand agree pretty suboptimal probably add something suggest cssom", "d": "7/2015"}, {"body": "moving", "d": "9/2015"}, {"body": "moving nt solution would suggest remove label", "d": "9/2015"}, {"body": "nt solution would suggest remove label yeah right moved future probably decide future milestone distinction clear", "d": "9/2015"}, {"body": "mzgol btw suggest cssom", "d": "9/2015"}, {"body": "future means want sure milestone means accepted development yet likely neglected set milestone status unknown", "d": "9/2015"}, {"body": "ok seems future good fit micha\u0142 go\u0142\u0119biowski", "d": "9/2015"}, {"body": "closing duplicate", "d": "2/2017"}, {"body": "comment author dmethvin add link ie bug reportedfound addressing slipstream patch reason us attempt fix also nt found reliable way correct numbers could nt tell quick read nothing able", "d": "10/2014"}, {"body": "comment author christopher ie bug reported error condition detected case offsetwidthheight lt clientwidthheight never happen correct numbers easily obtainted calling elementgetboundingclientrect multiplying results subtracting right left bottom top", "d": "10/2014"}, {"body": "comment author dmethvin post link screen shot showing problem still exists see ie", "d": "10/2014"}, {"body": "comment author anonymous click click link look values offsetwidthoffsetheight values shown getboundingclientrect post screen shot later today still need one", "d": "10/2014"}, {"body": "comment author dmethvin still puzzled maybe getting", "d": "10/2014"}, {"body": "comment author anonymous possible revision fixed nt access windows machine moment retest get back later today", "d": "10/2014"}, {"body": "comment author christopher confirm still exists ie screenshot judging dialog screen content looks like second screenshot looks like taken chrome ie ie prompt bottom screen shown screenshot", "d": "10/2014"}, {"body": "comment author dmethvin right got confused trying reproduce issue ca nt get anything like described run go page click second click link box goes full screen shows prompt screen totally white try screen recording nt make sense need install software", "d": "10/2014"}, {"body": "comment author christopher seen totally white issue specifically windows surface us window update kb released last tuesday resolved totally white issue left bad measurements unresolved", "d": "10/2014"}, {"body": "comment author dmethvin several updates reboots able finally arrive place reported ie team privately see immediate plans fix slipstream update given previous issue white screen seems instability area", "d": "10/2014"}, {"body": "comment author christopher thanks appreciate taking time look fwiw white screen issue ever windows windows current state number weeks though nt know long microsoft aware", "d": "10/2014"}, {"body": "hello workaround similar", "d": "1/2015"}, {"body": "problem seems obscure enough would nt attempt fix inside jquery microsoft much responsive recently introducing fixes slipstream updates nt reported directly microsoft via", "d": "1/2015"}, {"body": "fix bug copy jquery ui try create isolated test case using latest jquery ui create minimal patch turn pull request objections", "d": "6/2015"}, {"body": "sounds good tue jun martin n notifications githubcom wrote fix bug copy jquery ui try create isolated test case using latest jquery ui create minimal patch turn pull request objections reply email directly view github", "d": "6/2015"}, {"body": "right test case found try write unit test might need bit help let see", "d": "6/2015"}, {"body": "argh realised part manifestation bug fixing actually jquery ui using directly also open pull request jquery ui regarding droppable", "d": "6/2015"}, {"body": "right basically idiot two weeks ago test case christopher perfect test case using written small patch nt able construct reasonable unit test think", "d": "6/2015"}, {"body": "reopen frozen pr", "d": "6/2015"}, {"body": "comment author dmethvin native seems work consistently browser alerts want run jquery handlers case use triggerhandler actually want click event fire disabled element control browser", "d": "10/2014"}, {"body": "comment author anonymous dmethvin wish click event fire disabled checkbox really want enable checkbox check user interface requires moment workaround basically hammer checkbox using settimeout see edits", "d": "10/2014"}, {"body": "comment author anonymous sorry", "d": "10/2014"}, {"body": "comment author anonymous one time", "d": "10/2014"}, {"body": "comment author dmethvin really want enable checkbox check nt want click checkdisable chk prop disabled false checked true need help try forum rather bug tracker", "d": "10/2014"}, {"body": "comment author anonymous replying dmethvin nt want click checkdisable really want enable check call click event handler check revised fiddle chk prop disabled false checked true simulate user checking checkbox changes state without calling click handler need help try forum rather bug tracker please explain think nt bug nt one goals jquery smooth differences browsers reported behavior works differently explorer firefox enough concern also nt dom changes supposed synchronous triggering click ca nt performed immediately enabling checkbox something quite completing time next line code executed appreciate trying help particular case primary goal let know bug receive tech support think bug low priority choose fix fine nt understand writing notabug bug", "d": "10/2014"}, {"body": "comment author dmethvin nt make sense disable check box expect something happen click jquery goal create consistent behavior sequence actions nt make sense", "d": "10/2014"}, {"body": "comment author dmethvin oh get undisable click", "d": "10/2014"}, {"body": "comment author devuxer phew", "d": "10/2014"}, {"body": "comment author dougrchamberlain happy look issue", "d": "10/2014"}, {"body": "comment author dmethvin dougrchamberlain go thanks", "d": "10/2014"}, {"body": "comment author dougrchamberlain okay looked using firefox completely fails mark checkbox versions lt fails intermittently starting version continues fail intermittently edge fails intermittently versions chaining statements seems reduce number failures like jsfiddle nt eliminate chaining valid workaround really surprised since object passed trigger finished returning jquery object since first attempt resolving issue wondering begin looking", "d": "10/2014"}, {"body": "comment author dmethvin seems like firefox bug happens even jquery involved problem goes away dom click method called asynchronously", "d": "10/2014"}, {"body": "comment author dougrchamberlain disregard comment", "d": "10/2014"}, {"body": "miketaylr ca nt believe nt ping ca nt find existing ticket looks like firefox bug see fiddles", "d": "1/2015"}, {"body": "anything core push fix firefox nt think force clicking asynchronously internally", "d": "2/2015"}, {"body": "comment author grisendo try documentready", "d": "10/2014"}, {"body": "fixed compat", "d": "5/2015"}, {"body": "comment author scottgonzalez issue came whatwg mailing list months ago added cssom", "d": "10/2014"}, {"body": "comment author fejesjoco glad worked think would reasonable provide function jquery would call cssescape available use fixed regexp look jquery layer among others hides kinds browser differences also cssescape valid alternative long jquery syntax accordance css jquery actually extend syntax jquery lots lots functions depend selectors believe would real place utility method", "d": "10/2014"}, {"body": "comment author scottgonzalez jquery allows additional selectors additional syntax believe never case proper css escaping method would fail custom jquery selector", "d": "10/2014"}, {"body": "comment author timmywil certainly helpful use cases common case foresee concatenating attribute value attribute selector certain special characters meaning selectors unless escaped impossible predict user intentions time means inevitable nonbug reports well inclined vote feature lack utility externally need internally usually formula great plugin", "d": "10/2014"}, {"body": "comment author dmethvin since addressed standards nt know want get ahead could possibly offer wrapper seems like someone wanted functionality could easily create polyfill big fan either nt know complicates things str could also html script selector sure whether script injection attempt via css fragment could made succeed marking open discussion meeting next month", "d": "10/2014"}, {"body": "comment author fejesjoco str use case thinking use case want add variable string selector without breaking selector example broken parameters like ab function id return id write instead function id return selectorescape id could many vulnerabilities like already example fixed aspnet mvc added escape mechanism metacharacters nt know enough knows people might think escaped makes sense question hey mr interpreter characters escape best answered interpreter good example regex escaping net knows special characters escaped put usersupplied strings regexp without worrying anything", "d": "10/2014"}, {"body": "comment author dmethvin see also parts builtup str may need selectorescaped htmlescaped passed str depending purpose origin", "d": "10/2014"}, {"body": "comment author fejesjoco yes similar problem every time engine supports certain magic characters user may accidentally submit string something else intended also engine way know intentional best solution engine provides proper escaping function engine knows escape user know call string parts special interpretation intended functions way simple put plugins integral parts interpreting engines rules may change time able whatever html htmlescape whatever cssescape whateverid etc", "d": "10/2014"}, {"body": "comment author fejesjoco found similar thing uiautocompleteescaperegex could also added available globally strictly jquery related already jquery ui wrong place usecase since core javascript provides regexp course also provide escaping function nt good example may want find whole words user specifies like new regexp w usersuppliedvalue w user supplied value properly escaped nt contain characters handled specially regexp", "d": "10/2014"}, {"body": "comment author reference", "d": "10/2014"}, {"body": "nt lot traction recently new feature bumping milestone disagree please revert change", "d": "9/2015"}, {"body": "general criteria adding new features seems like nt pass muster nt need internally easily done plugin cssescape polyfill already exists close someone good reason reopen always", "d": "11/2015"}, {"body": "dmethvin please apply label closing issue", "d": "11/2015"}, {"body": "reread discussion convinced arguments escape functionality going handinhand engine interpreting special characters maintain stability time going sizzle might well documentedexposed jquery well edit also claim adherence support best practice bullet point", "d": "11/2015"}, {"body": "suggest", "d": "12/2015"}, {"body": "escaping selector though css rule set rules something like would descriptive although admit pretty long context jquery seems ambiguous although fine sizzle", "d": "12/2015"}, {"body": "escaping css selector", "d": "12/2015"}, {"body": "although see point thinking align", "d": "12/2015"}, {"body": "comment author psquared perhaps better suggestion one made adding something like end dataremove seems help jqueryisemptyobject cache thisdiscard owner", "d": "10/2014"}, {"body": "comment author dmethvin rwaldron could take look", "d": "10/2014"}, {"body": "comment author general support mixing native dom manipulation jquery close el data leaks true parentnoderemovechild el distinct enough may worth looking small fix", "d": "10/2014"}, {"body": "comment author dmethvin agree plenty ways get trouble use native methods remove elements behind jquery back branch remove events data object removes data object preemptively eg", "d": "10/2014"}, {"body": "comment author dmethvin mark valid pending investigation since events often thing data cache would helpful remove events gone", "d": "10/2014"}, {"body": "changes land would good time circle back see need change anything", "d": "1/2015"}, {"body": "data changes landed needs done", "d": "5/2015"}, {"body": "attach couple handlers elements amp without removing elements still leak way less serious removing elements makes data go away say part issue still applicable", "d": "5/2015"}, {"body": "looks like take care nomoreevents case", "d": "5/2015"}, {"body": "dmethvin indeed seems everything done would good test behavior though would nt", "d": "5/2015"}, {"body": "dmethvin mzgol quite compat also clears expando", "d": "5/2015"}, {"body": "pr submitted", "d": "5/2015"}, {"body": "comment author dmethvin agree right thing perhaps compatible thing let kick road", "d": "10/2014"}, {"body": "change landed", "d": "4/2015"}, {"body": "timmywil eta actually appear jquery release right leave unselected people keep reporting browser bug every often", "d": "1/2016"}, {"body": "bzbarsky different issue set dynamic selected state use property instead attribute selected attribute used set default state page loads", "d": "1/2016"}, {"body": "nt see difference behavior though", "d": "1/2016"}, {"body": "dmethvin set default state like element nt interacted yet", "d": "1/2016"}, {"body": "timmywil issue code quoted sets default state dynamic state sets default state option ends selected fact sets dynamic state precisly issue", "d": "1/2016"}, {"body": "bzbarsky expected behavior browsers may differ consider element longer fresh nt checked element still fresh setting default state set dynamic state well tell proper way set dynamic state property", "d": "1/2016"}, {"body": "tell already know point view proper way set state without even involving jquery problem people keep running inconsistency filing bugs browsers even sure arguing fix issue makes change think made asking planned ship", "d": "1/2016"}, {"body": "shipped release", "d": "1/2016"}, {"body": "open ticket api repo document", "d": "4/2016"}, {"body": "aurelioderosa yes think tickets label need docs changes", "d": "4/2016"}, {"body": "able take lot wording generate issues upgrade guide currently google doc", "d": "4/2016"}, {"body": "comment author anonymous clarify nonnumeric go select element left nonnumeric", "d": "10/2014"}, {"body": "comment author anonymous btw using jquery functionality works expected ie versions functionality break ie", "d": "10/2014"}, {"body": "comment author michael confirmed", "d": "10/2014"}, {"body": "comment author cjqed dug little bit found culprit combination elementblur handler see following jsfiddle similar original commenter fiddle chrome clicking input boxes neither allow enter keys blur focus console reads whenever click inputs expected take blur command type inputs consolelog keyup expected everything works way except blur added like fiddle starts still type input box input box whose event handlers handled bodyon call instead assigning directly jqueryfocus fn another note per original ticket report keyup function get called input keys box", "d": "10/2014"}, {"body": "comment author anonymous thanks looking weird used work fine jquery", "d": "10/2014"}, {"body": "comment author timmywil cjqed mind assign ticket", "d": "10/2014"}, {"body": "comment author cjqed timmywil sure dive weekend", "d": "10/2014"}, {"body": "comment author cjqed timmywil made headway diving deeper like confirmation see following jsfiddle given three options assign event handlers selector focus function dosomething selector focus dosomething parentselector focus dosomething selector three result right third option leave function attached focus event changing type delegate type focusin blur focusout intended behavior third way assigning event handlers", "d": "10/2014"}, {"body": "comment author dmethvin focusin event bubbles according use focusin event using delegation", "d": "10/2014"}, {"body": "comment author dmethvin yes intended behavior focusin must used event delegation", "d": "10/2014"}, {"body": "comment author anonymous marked resolved jsfiddle clearly demonstrates bug b used work fine jquery something broke jquery needs fixed", "d": "10/2014"}, {"body": "comment author dmethvin agreed problem original broken ie working think seem correct", "d": "10/2014"}, {"body": "comment author anonymous well jsfiddle solves problem functionality working changing code nt fix jquery bug ie functionality originally coded jsfiddle breaks jquery works older jquery versions browsers", "d": "10/2014"}, {"body": "comment author dmethvin need confirmation change seem fix things since test case lot moving parts appears consequence us using real dom blur trigger blur fix several problems related event order", "d": "10/2014"}, {"body": "comment author anonymous yes change line theboxblur theboxtriggerhandler blur makes functionality work", "d": "10/2014"}, {"body": "comment author anonymous sorry realized something else still working change line input box allow focus select element numeric", "d": "10/2014"}, {"body": "comment author dmethvin pretty sure problem dom blur essentially async ie versions least think work around leave ticket open", "d": "10/2014"}, {"body": "comment author anonymous ok thanks leaving open functionality used work stopped working nt fixable", "d": "10/2014"}, {"body": "comment author tracobot get many tickets often need return initial reporter information person reply within days ticket automatically closed happened case still interested pursuing issue feel free add comment requested information happy reopen ticket still valid thanks", "d": "10/2014"}, {"body": "comment author anonymous think bug reopened fixed", "d": "10/2014"}, {"body": "comment author dmethvin anonymous comment reason autoclosed reply nt logged person", "d": "10/2014"}, {"body": "comment author anonymous ok anonymous comment actually person filed bug", "d": "10/2014"}, {"body": "comment author dmethvin nb versions ie upward fire event asynchronously calling dom focus blur methods want see console focusing focus focusing see ie focusing focusing focus reason used work faked focus caused larger stack bugs related event order see", "d": "10/2014"}, {"body": "comment author anonymous see going hard handle", "d": "10/2014"}, {"body": "comment author anonymous might sound bit hack adding settimeout ie reorders events correctly jquery focus blur functions could wait returning might fix problem", "d": "10/2014"}, {"body": "comment author dmethvin yes code unit tests jquery internally without pushing problem another location caller could assume elem focus returns element focused whatever event handler supposed faking focus event worked although undesirable effects forced handler run right bottom line focusblur event trusted async ie occasionally unreliable firefox well nt create complicated scenarios break", "d": "10/2014"}, {"body": "comment author anonymous really unfortunate blur focus events used forms forms used important tasks user registration ecommerce processing particular case functionality jsfiddle used enter international phone numbers user nt selected country code select element blurs phone number textbox force user select prefix first changed code make work would really nice find general solution within jquery inevitably problem causing bugs people websites particular built tested released since maintained btw keyupkeydown events subject unexpected behavior", "d": "10/2014"}, {"body": "closing ticket workaround within jquery core fixes problem focus event asynchronous ie anticipated handled application widget level see also trac", "d": "1/2015"}, {"body": "comment author dmethvin affected switch script tags contemplated", "d": "10/2014"}, {"body": "updated version current second param analogouous jqueryparsehtml js globaleval function code context context context document var script contextcreateelement script scripttext code contextheadappendchild script parentnoderemovechild script", "d": "1/2015"}, {"body": "comment author dmethvin sympathetic google search usually helps sure additional words add much attempt add sizzle jquery would lead people bug tracker rather place like stackoverflow go messed selector", "d": "10/2014"}, {"body": "comment author waldechristian google search usually helps usability similar numerical error code google unless one seen message know means one little chance figure talking css selector excellent error message inform user exactly wrong current one merely informs user something wrong sure additional words add much attempt add sizzle jquery look ticket never asked terms added simply term css selector specifically error message optimal world error would also come stack tract point code came selector parser would case parsefail reparse order able provide explanation expected see aware nontrivial efforts however making error least clear enough easily seen trivial", "d": "10/2014"}, {"body": "comment author timmywil could change expression selector seems pretty clear selector included error message", "d": "10/2014"}, {"body": "comment author waldechristian seems pretty clear selector included error message please take look original description error triggered thirdparty software including selector little enlighten developer type developer might even aware classes ids used said thirdparty software", "d": "10/2014"}, {"body": "comment author timmywil something concise like error selector syntax flag", "d": "10/2014"}, {"body": "comment author waldechristian fine shortening maximum benevolence towards future users like see explicit mention css remain message", "d": "10/2014"}, {"body": "comment author timmywil thought remembered still users use xpath converters case selector originally css think clear enough without though", "d": "10/2014"}, {"body": "comment author dmethvin okay suggestion comment minor formatting changes error selector syntax flag need announce prominently people use google search find know means", "d": "10/2014"}, {"body": "comment author waldechristian merely observation concerned people understand error message means need google chance good error message rather high excellent error messages explain went wrong offer resolution suggestions", "d": "10/2014"}, {"body": "comment author timmywil waldechristian firstly developers google error messages matter clear secondly resolution suggestions would require certain psychic ability way know user trying select helpful message simply points selector invalid needs changed something wo nt throw error succinct manner dmethvin error part message automatically inserted browser", "d": "10/2014"}, {"body": "comment author waldechristian timmywil respectfully disagree points general case due experience many developers many experience levels due experience writing parsers however see scope constraint experiences jquery would make hold positions nt think arguing points necessary main point ticket said reread thought would like say see shortened proposal better original helpfulness could reasonably given context project average user helped seeing error message golfed maximal brevity mention xpath converters unfamilar assume piece code takes xpath entered user converts css selector used internally case xpath converter oncesanctioned part jquery recommend explicitly acknowledging possibly way error invalid selector syntax check original cssxpath expression flag", "d": "10/2014"}, {"body": "comment author dmethvin mark ship title ticket change something useful changelog googleability", "d": "10/2014"}, {"body": "leave note still stand last comment", "d": "10/2014"}, {"body": "going happen need update upgrade guide otherwise think close ticket put roadmap good discussion", "d": "5/2016"}, {"body": "pushed onetime code change clear end update lands sizzle ticket closed update sizzle", "d": "5/2016"}, {"body": "comment author instructions also mention mongoose alternative amp works fine without changing repository use reasons mentioned already lightweight vagrant", "d": "10/2014"}, {"body": "comment author gnarf actually like idea vagrantfile available spawn nginx runs config buildsjenkinsjquerycom couple suggestions could setup dns entry something like vagrantjquerycom rather needing anyone ever edit hosts file also posted exact ways build server jenkins sets virtualhost support post static files jquery core unit tests errorpage location proxymethod get proxypass proxysetheader host buildsjenkinsjquerycom support funky url jsonpphp jquery core unit tests rewrite datajsonpphp", "d": "10/2014"}, {"body": "comment author eric replying gnarf could setup dns entry something like vagrantjquerycom rather needing anyone ever edit hosts file would optimal much better solution ever asking anyone edit hosts file also considering packaging vagrant box phpnginx already installed configured would allow bundled configuration ship nothing vagrantfile much cleaner repository developers could continue use either amp install mongoose instead vagrant without much trouble", "d": "10/2014"}, {"body": "comment author replying gnarf actually like idea vagrantfile available spawn nginx runs config buildsjenkinsjquerycom could setup dns entry something like vagrantjquerycom rather needing anyone ever edit hosts file replying eric also considering packaging vagrant box phpnginx already installed configured would allow bundled configuration ship nothing vagrantfile much cleaner repository developers could continue use either amp install mongoose instead vagrant without much trouble okay sounds really nice sold", "d": "10/2014"}, {"body": "comment author gnarf yeah get box setup nginxetc without download post spinup saves big portion problem host source box infra dropbox also keep day", "d": "10/2014"}, {"body": "jaubourg far get node server new york would another way solving problem probably better one vagrant", "d": "11/2015"}, {"body": "nt work much intendedwanted needed express routes rewiring routes unit tests hard part actually determine unit tests actually testing simplify node server code become mess come soon ish unit tests rewired pass ball gnarf guess see integrate node web server testing infra", "d": "11/2015"}, {"body": "comment author dmethvin wo nt work oldie least length property squirrely jeresig tried around timeframe bailed rwaldron nt something still refined", "d": "10/2014"}, {"body": "comment author rwaldron replying dmethvin wo nt work oldie least length property squirrely jeresig tried around timeframe bailed rwaldron nt something still refined simple class jquery extends array constructor selector context document super legit subclass array implement jquery prototype methods issue course new subclass semantics ca nt polyfilled ported traditional function declarationexpression syntax super ca nt reserved function body jquery actually quite vocal design specification mechanism understanding jquerythecode would nt benefit real subclassing builtins time far hackish cases like zepto proto never going officially standardized sent die annex instead objectsetprototypeof compliment objectgetprototypeof", "d": "10/2014"}, {"body": "comment author petty sure already solved oldie length issues jsperf accepting immutability existing instances nt change current api promises look later mostly focal point link aggregation unless gets actual pull request", "d": "10/2014"}, {"body": "comment author rwaldron replying petty sure already solved oldie length issues jsperf accepting immutability existing instances nt change current api promises look later actually length related issues oldie trailing commas produce hole every standard modern js implementation array subclasses always broken length property compare following programs var new array consolelog alength consolelog consolelog alength alength consolelog consolelog alength vs function list arraycall thispushapply arguments listprototype objectcreate arrayprototype constructor value list var l new list consolelog l llength consolelog l consolelog llength llength consolelog l consolelog llength behaviour broken proto well function list thisproto arrayprototype thispushapply arguments var l new list consolelog l llength consolelog l consolelog llength llength consolelog l consolelog llength course latter version wo nt work browsers nt support proto apis jquery definition nt match builtin jqueryfnfilter arrayprototypefilter predicate functions written use arrayprototypefilter wo nt work jqueryfnfilter jqueryfnmap arrayprototypemap mapping functions written use arrayprototypemap wo nt work jqueryfnmap jqueryfnfind arrayprototypefind filter", "d": "10/2014"}, {"body": "comment author scottgonzalez sure problems relevant already said nt change current api promises nobody var divs div divslength nt matter methods incompatible arrayprototype methods unless incompatibility actually break things", "d": "10/2014"}, {"body": "comment author dmethvin seeing perf benefit strange", "d": "10/2014"}, {"body": "comment author rwaldron replying scottgonzalez sure problems relevant exactly relevant two statements length property squirrely dmethvin already solved oldie length issues jsperf accepting immutability existing instances nobody var divs div divslength agree sure nt say trying thoroughly illustrate length problems nt matter methods incompatible arrayprototype methods unless incompatibility actually break things saying break extant code saying behaviour could create confusion", "d": "10/2014"}, {"body": "comment author clear interested performance improvement size reduction never recommended anyone set length documented effects generally ca nt expose array methods patterns accept selectors place elements pushstack new instances instead mutating context make new promises like objectprototypetostring jquery object array exclusively seeking efficient techniques implementing extant api", "d": "10/2014"}, {"body": "comment author rwaldron replying clear interested performance improvement size reduction never recommended anyone set length documented effects yes thought made clear understood point say jquery subclassed array developers expect things work like arrays generally ca nt expose array methods patterns accept selectors place elements pushstack new instances instead mutating context make new promises like objectprototypetostring jquery object array exposed default developers use unless plan keep blacklist methods delete jquery instance objects become instanceof array well promise trying rain parade real things consider", "d": "10/2014"}, {"body": "comment author replying rwaldron point say jquery subclassed array developers expect things work like arrays exposed default developers use unless plan keep blacklist methods delete jquery instance objects become instanceof array well never crow continue chastising everyone tries take advantage undocumented implementation details like currently jquerysupport jquerydata promise trying rain parade real things consider yep actually changing prototype chain would huge deal might worthwhile", "d": "10/2014"}, {"body": "moving roadmap", "d": "1/2016"}, {"body": "rather leaving open potentially forever referenced roadmap reopen ever become feasible", "d": "1/2015"}, {"body": "dmethvin please remember remove milestone amp add wontfix label closing bug wo nt fix", "d": "10/2015"}, {"body": "comment author ameyms seems happening camelize key passing dataattr function dataattr tries reconstruct hyphenated attribute name incorrectly consider following example datafoobar foobar datafoobar correct incorrect", "d": "10/2014"}, {"body": "comment author dmethvin ref seems like nt take hyphen unless following char az however inside jquerycamelcase making change could affect many situations outside data attributes", "d": "10/2014"}, {"body": "comment author rwaldron lead filing", "d": "10/2014"}, {"body": "comment author rwaldron closed duplicate based spec name list hyphenminus character name followed lowercase ascii letter remove hyphenminus character replace character followed character converted ascii uppercase solution would remove hyphens immediately followed numbers would produce key called unfortunately compatibility breaking actually unit tests support", "d": "10/2014"}, {"body": "comment author rwaldron", "d": "10/2014"}, {"body": "comment author gnarf one weird situations cantfix probably reopening discuss ultimate fate one next meeting", "d": "10/2014"}, {"body": "comment author rwaldron fixed chrome", "d": "10/2014"}, {"body": "comment author dmethvin behavior change wo nt go think need deal", "d": "10/2014"}, {"body": "comment author malsup breaking change migrating", "d": "10/2014"}, {"body": "comment author dmethvin malsup two branches seem work op test case test case", "d": "10/2014"}, {"body": "comment author malsup replying dmethvin malsup two branches seem work op test case test case dmethvin see thread", "d": "10/2014"}, {"body": "related per want embrace option camelcase attributes data object first access set camelcase key setter camelcase added keys bulk setter look camelcase key getter ignore direct manipulation operations", "d": "12/2014"}, {"body": "cc rwaldron", "d": "1/2015"}, {"body": "markelog following nt activity lately", "d": "1/2015"}, {"body": "grab alright rick", "d": "1/2015"}, {"body": "timmywil sure nt much work tbh mostly deleting code paths associated tests tricky part making sure manipulation tests pass well since data tests exist also", "d": "1/2015"}, {"body": "comment author dmethvin another result triggering native focus event get event order right jquery extensions namespaces data cases see", "d": "10/2014"}, {"body": "comment author third time charm", "d": "10/2014"}, {"body": "related", "d": "1/2015"}, {"body": "might acceptable workaround prevent firing handler twice mentioned js var x aninput xtriggerhandler focusmyevent extra data x focus xon focusmyevent function e extra data eoriginalevent return consolelog extra data xon focusnotfired function e extra data eoriginalevent return consolelog wo nt fired", "d": "9/2018"}, {"body": "comment author mgol pull request", "d": "10/2014"}, {"body": "comment author dmethvin seems like lot risk little benefit two deprecated suspect still quite bit usage pretty hard tell", "d": "10/2014"}, {"body": "comment author mgol jqueryfnsize hard check due common name hand size code much larger andself one considering latter alias another function", "d": "10/2014"}, {"body": "comment author dmethvin api changes next release would rather batch since disruptive discourage upgrading", "d": "10/2014"}, {"body": "comment author mgol well officially public api whole jquerysupport behaves differently eg former properties functions actually thought timeframe changing much switch amd etc maybe right changes internal little effect public api", "d": "10/2014"}, {"body": "comment author timmywil officially nt made changes public api support documented changeable every api change annoying users even makes sense say keep deprecated refer recommendations nt mean removable easily removable custom builds desired take little space anyway", "d": "10/2014"}, {"body": "comment author dmethvin let hold one following major release least", "d": "10/2014"}, {"body": "comment author dmethvin neither seem important first step would get migrate asap", "d": "10/2014"}, {"body": "comment author dmethvin", "d": "10/2014"}, {"body": "comment author mgol want", "d": "10/2014"}, {"body": "comment author mgol actually nt log deprecation errors core well andself alias need wrapper size quite easy", "d": "10/2014"}, {"body": "let", "d": "10/2014"}, {"body": "comment author timmywil take stab whenever get chance", "d": "10/2014"}, {"body": "comment author jan appears dupe comments bug suggest shadow dom nt sufficiently available across different browsers rise level jquery team felt comfortable supporting exact semantics operations nt allowed shadow root nt clearly defined fwiw bug references pull request commentary", "d": "10/2014"}, {"body": "comment author timmywil thank reference actually aware bug decided open separate issue sizzle support", "d": "10/2014"}, {"body": "migrated sizzle issue jquerysizzle", "d": "11/2014"}, {"body": "close issue closed sizzle updated jquery fyi reminded sizzle master already supports need add tests", "d": "12/2014"}, {"body": "fixed", "d": "1/2016"}, {"body": "comment author dmethvin lot us team consider fact allow scripts run injecting bug ca nt remove backcompat reasons sympathetic leave ticket open discussion see way fix", "d": "10/2014"}, {"body": "comment author rwaldron preventing something like beginning iife amd whatever var html jqueryfnhtml var append jqueryfnappend jqueryfnhtml function filtering return htmlcall filteredsafe stuff jqueryfnappend function filtering return appendcall filteredsafe stuff end iife amd whatever", "d": "10/2014"}, {"body": "comment author nicholas nothing preventing however inefficient risky probably many paths inserting html jquery without tracking risk remains essentially right afraid might missed corner case course methods change versions nt want keep updating functionality would much efficient safe one place insert functionality", "d": "10/2014"}, {"body": "comment author nicholas wrote blog post everything secure jquery would love formal html filter capability seems like injection points functionality fairly straightforward see blog post", "d": "10/2014"}, {"body": "comment author mgol agree would nice", "d": "10/2014"}, {"body": "comment author related nt know want add another function input pass could definitely see exposing arguments currentlyexisting replace rxhtmltag properties jquery simple extensions like noinnerhtml contents could still use string replacement complex ones like ticket requesting could get wholesale filtering something like following apologies atrocious names var origprematch jqueryhtmlprematch origprereplace jqueryhtmlprereplace jqueryhtmlprematch ww jqueryhtmlprereplace function html return extraprocess html replace origprematch origprereplace", "d": "10/2014"}, {"body": "comment author mgol replying related nt know want add another function input pass passed escapehtml function saved one additional function invocation manip operation overhead one additional lot feel regex might enough cases really make possible secure manip methods", "d": "10/2014"}, {"body": "comment author replying mgol passed escapehtml function saved one additional function invocation manip operation overhead one additional lot well still guaranteed least two passes input custom escaping fix selfclosing tags someone sets preprocessing even trying fix mangling scripttextarea content attribute values come think brings related question whether preprocessing precede follow replace currentlyexisting replace rxhtmltag feel regex might enough cases really make possible secure manip methods str strreplace ww fn equivalent str fn str stringreturning singleparameter fn therefore guaranteed support use cases purely question api surface area", "d": "10/2014"}, {"body": "comment author dmethvin could certainly believe happens events like mousemove populate normalize xy position event object browsers may defer work something asks position case something jquery sure avoided though want information object adding paulirish insight", "d": "10/2014"}, {"body": "comment author dmethvin blocked open ticket probably better handle others casebycase basis rather metaticket", "d": "10/2014"}, {"body": "comment author jbedard recently ran across issue well lead using getters delay copyingcalculating event properties would option something similar previously discussed forum recently original post author blogged solution", "d": "10/2014"}, {"body": "comment author dmethvin problem getters still slow every browser also bugs quirks even list browsers true never get event properties perhaps get one property one time faster case mousemove event example suspect going extremely common caller event handler want information would forced layout anyway additionally layout forced enter dirty layout dom change caused previous event handler", "d": "10/2014"}, {"body": "comment author jbedard getters definitely slow still trying think might still worth nt think event handlers access event properties yet eventfix loop accesses fix loop often bottleneck without forced layout scenario seen bug occur times toggling class mouse enterleave bug forces layout event listener simply toggles class based eventtype sets dirty flag case extra layout completely unnecessary even eventfix loop copying everything unnecessary problem would getters least ffchrome calling getters times seems worth would interested pull request least see action", "d": "10/2014"}, {"body": "comment author dmethvin think could examined part wanted tackle issues decided potentially could use native event object skip fixing entirely", "d": "10/2014"}, {"body": "comment author jbedard provides new event interface skips eventfix would great especially still provides things event namespaces amp selectors anyone cares look tried turns hooks getters instead filters prop copying think setter actually slower calling getter needs testing avoids forced layout removes eventfix loop make accessing properties expensive due getter cases tried well worth assume change bigrisky stable api", "d": "10/2014"}, {"body": "trac issue referred github", "d": "1/2015"}, {"body": "updated change originally using event speed test deleted try get jsperf test going probably something simulates mouse events different handlers access different properties dmethvin specific type test like try", "d": "5/2015"}, {"body": "yeah realistic test going messy guess might possible make layout change via modifying class fire mouseevent mousemove goes plumbing", "d": "5/2015"}, {"body": "first attempt note latest master without change old new think class attribute change nt forcing relayout otherwise think offsetx test much slower button test also seeing relayout chrome timeline let know think probably want lot test cases handlers access event properties", "d": "6/2015"}, {"body": "also noticed forced layout repaints ff progress regarding issue", "d": "8/2015"}, {"body": "havenchyk yet issue future milestone currently focusing finishing still lot additional perf tests pull requests tests confirming improve performance could make possible make would nt hold hopes high otherwise", "d": "8/2015"}, {"body": "btw issue dmethvin linked fixed maybe getters huge problem anymore still prs welcome especially perf tests", "d": "8/2015"}, {"body": "think problem jquery side would fixed solution proposed jbedard least jquery event handling code original problem layout dirty coming handler attempt code event handler read properties depend layout force layout well highfrequency handler mousemove scroll defer changes requestanimationframe handler possible throttle change rate avoid kind problem", "d": "8/2015"}, {"body": "dmethvin mean problem side well disabled event handlers app timeline shows time taken triggers layout firefox chrome work smooth glad help determine really problem jquery help something", "d": "8/2015"}, {"body": "nt active event handlers jquery nt event handler attached either create test case jsbincom", "d": "8/2015"}, {"body": "dmethvin problems flexbox performance ff case sorry disturbing", "d": "8/2015"}, {"body": "comment author anonymous fiddle updated line much testing", "d": "10/2014"}, {"body": "comment author dmethvin reference nt support document fragments api inputs seems like would occur internal uses well", "d": "10/2014"}, {"body": "comment author simon always assumed supported closer look api proves wrong seems general ie bug related jquery able reproduce leaking behavior even simpler case var lt var frag documentcreatedocumentfragment var div documentcreateelement div fragappendchild div frag null leak closed explicitly call removenode fragments children iteration c fraglastchild cremovenode false", "d": "10/2014"}, {"body": "comment author timmywil duplicate ticket", "d": "10/2014"}, {"body": "since fixed yet releasing jquery compat closing wo nt fix", "d": "10/2015"}, {"body": "comment author dmethvin fan wrappish methods one reason exactly unwrap blindly unwraps elements common case would want remove specific wrapper seems like decent idea done cheaply thoughts", "d": "10/2014"}, {"body": "comment author dmethvin still interested providing patch widespread onerror support xhr", "d": "10/2014"}, {"body": "comment author rijoel dmethvin yes quite busy moment think scriptonerror together scriptonreadystatechange covers browsers sure opera found already fixed jquery reason works origin requests uses xml internally altough format jsonp", "d": "10/2014"}, {"body": "comment author rijoel pull request", "d": "10/2014"}, {"body": "since going release compat line closing wo nt fix", "d": "10/2015"}, {"body": "comment author mgol look", "d": "10/2014"}, {"body": "resolve get bug selectornative", "d": "1/2015"}, {"body": "since removing label longer useful", "d": "10/2015"}, {"body": "comment author exactly analogous starting think generalize incorporate solution", "d": "10/2014"}, {"body": "comment author dmethvin way much code though thinking user passed data use standard trigger path rather native events passes data expense nonstandard event behavior think people probably misusing event system time happens", "d": "10/2014"}, {"body": "comment author probably acceptable focus click handlers would see different checked states checkbox radio inputs event provided trigger definite nogo", "d": "10/2014"}, {"body": "comment author dmethvin op using initialize page load could use triggerhandler instead really trying focus element well", "d": "10/2014"}, {"body": "comment author mail trying distinguish clicking tabbing input field b using trigger focus function somewhere else nothing page load", "d": "10/2014"}, {"body": "comment author dmethvin duplicate ticket", "d": "10/2014"}, {"body": "comment author dmethvin duplicate ticket", "d": "10/2014"}, {"body": "comment author anonymous triggerhandler really acceptable workaround since wo nt actually focus blur etc", "d": "10/2014"}, {"body": "comment author dmethvin fine workaround indicated dom action afterwards var x aninput xtriggerhandler focus x focus", "d": "10/2014"}, {"body": "comment author anonymous people core team certainly know already arises focus fire native event possible blurfocus sequence correct trigger function safeactiveelement amp amp thisfocus thisfocus blur trigger function safeactiveelement amp amp thisblur thisblur", "d": "10/2014"}, {"body": "comment author anonymous wo nt trigger handlers twice replying dmethvin var x aninput xtriggerhandler focus x focus", "d": "10/2014"}, {"body": "comment author osmestad also issue still valid latest jsfiddle problem using triggerhandler trying avoid running code focus handler setting focus programatically trigger workarounds think would unbinding triggering focus rebinding reverting others issue browser chrome os os x", "d": "10/2014"}, {"body": "comment author dmethvin duplicate ticket", "d": "10/2014"}, {"body": "comment author dmethvin duplicate ticket", "d": "10/2014"}, {"body": "focus blur click events fires native event certain condition calling native event currently way pass trigger data event handler well best solution though use special event hook handle need modify trigger hold data add handle method invoke event handler function obviously generalized cover events think guys js focus fire native event possible blurfocus sequence correct trigger function safeactiveelement amp amp thisfocus", "d": "7/2015"}, {"body": "solution risk introducing strange behavior flips arguments arguments cases reentrant safe nt see us using approach", "d": "7/2015"}, {"body": "agreed retrospect allowing users pass data caused lot issues one focus management highly flaky browsers already nt take much cause problems", "d": "7/2015"}, {"body": "timmywil still want nt lot progress need cut corners", "d": "9/2015"}, {"body": "moving", "d": "9/2015"}, {"body": "dealing situation described comment problem using triggerhandler trying avoid running code focus handler setting focus programatically trigger proper way solve", "d": "11/2016"}, {"body": "welp ran tried handle event triggered certain parameter guess nt get passed use case least", "d": "11/2016"}, {"body": "mgol another way show additional data focus event triggered please check fiddle attaching screen shot", "d": "11/2016"}, {"body": "purvaa triggering focus event fiddle nt pass data nt seem relevant issue", "d": "11/2016"}, {"body": "still broken issue tracked one future milestones", "d": "1/2018"}, {"body": "yes ticket still open milestone scroll top ticket say like submit pr review", "d": "1/2018"}, {"body": "might acceptable workaround prevent firing handler twice mentioned js var x aninput xtriggerhandler focus extra data x focus xon focus function e extra data eoriginalevent return consolelog extra data", "d": "9/2018"}, {"body": "duplicate module list support commitplease perhaps could grab even though removes bit duplication still error prone", "d": "10/2015"}, {"body": "commitplease components may perfectly align qunit modules seems error prone currently besides seems working alright unless think specific solution better currently inclined close", "d": "1/2016"}, {"body": "yeah one things nt often enough get right first time nt add modules often", "d": "1/2016"}, {"body": "comment author mikesherov thanks contributing html height give consistent results nt really support html height currently considering browsers nt give us useful info discovered curious", "d": "10/2014"}, {"body": "comment author jon case preferred way retrieve actual content height document height works well content larger window content smaller window document height returns window height html height appears correct firefox ie better solution updated test case show height well outerheight true results console output running test case firefox window height document height html outerheight true html height body outerheight true body height window height document height html outerheight true html height body outerheight true body height", "d": "10/2014"}, {"body": "comment author mikesherov thanks contributing test case missing opening html tag update please considering ca nt edit hosting server instead submitting jsfiddle", "d": "10/2014"}, {"body": "comment author jon dufresne fixed mistake test case results uploaded newest test case location also made identical version using jsfiddle version also demostrates bug see fiddle version", "d": "10/2014"}, {"body": "comment author tracobot get many tickets often need return initial reporter information person reply within days ticket automatically closed happened case still interested pursuing issue feel free add comment requested information happy reopen ticket still valid thanks", "d": "10/2014"}, {"body": "comment author jdufresne information requested provided still reproducible information requested provided", "d": "10/2014"}, {"body": "comment author dmethvin sure autoclosed noticed op", "d": "10/2014"}, {"body": "comment author mgol test updated", "d": "10/2014"}, {"body": "test smaller window case appears correct content height cases going close ticket really stale reopen someone info", "d": "12/2014"}, {"body": "small problem render multiple html elements inside document node easiest way test literally make document html nodes load second way make standard html document javascript create second one memory remove original dom append new html node dom append old one render really comes lt recognizes element html css selector gt html nt valid", "d": "1/2015"}, {"body": "sorry festercluck following comment related get height body", "d": "1/2015"}, {"body": "document amp html reference point thing document nt height documentelement html node window amp body without doubt independent unfortunate thing actually makes two separate question becomes one code standard use code accuracy situations lt report different numbers numbers reporting accurate problem developer nt understand css sizing parent element nt exist say op test case one mean point understanding browsers insert node documentelement window behavior supported", "d": "1/2015"}, {"body": "unless regression apis returning values years change values returned cases probably trip existing code expects current values suspect right barring recent regression drop browser", "d": "1/2015"}, {"body": "rescheduling", "d": "9/2015"}, {"body": "work issue", "d": "12/2016"}, {"body": "pretty sure one else feel free", "d": "12/2016"}, {"body": "gnarf help little needs done see reported callback also results animation adding documentation creating unit tests check", "d": "12/2016"}, {"body": "documentation exist optional signature unit tested call results default duration animation something along lines calling checking nt called perhaps checking state element correct showhide animation first frame check last frame probably sufficient", "d": "12/2016"}, {"body": "gnarf ok thanks look", "d": "12/2016"}, {"body": "comment author mikesherov test earlier build", "d": "10/2014"}, {"body": "comment author timmywil sure sizzle speed tests best starting point specially manufactured work selector engines testing selector engine iframes need probably something custom manufactured test jquery modules said couple principles think adopt sizzle speed suite tests nt really need backend slickspeed operates php nt think even need node benchmarkjs project submodule sizzle update released versions whenever need nt happen often tests encapsulated appropriately guarantee one test affect loading test iframe probably going overboard core module may right ajax module finally rwaldron seemed excited revamping old resig project speed tests still open", "d": "10/2014"}, {"body": "comment author mikesherov fine either way really want blast away speed dir rick even better", "d": "10/2014"}, {"body": "comment author dmethvin salvatore iovene intel going take shot thoughts post ping siovene jquerydev", "d": "10/2014"}, {"body": "comment author mgol dmethvin info progress", "d": "10/2014"}, {"body": "closing favor tracking roadmap", "d": "1/2016"}, {"body": "comment author scottgonzalez avoid adding custom event types jquery using callbacks list would much better fwiw duck punching cleandata really easy jquery ui", "d": "10/2014"}, {"body": "comment author dmethvin able achieve cleanup today special events api event attached element teardown handler handler would called cleandata also nt bubble good imo eventspecialsanitation teardown function alert repressed span sanitation noop div html would trick use case", "d": "10/2014"}, {"body": "comment author tj crowder replying scottgonzalez avoid adding custom event types jquery using callbacks list would much better happy callback rather event provided easy hook gets fired seeing real issue destroy event though provided make sure nt bubble nonbubbling event default action sounds lot like callback fwiw duck punching cleandata really easy jquery ui yes addition overkill want notification intercept every call several api points suboptimal imv modifying library rather using", "d": "10/2014"}, {"body": "comment author scottgonzalez seeing real issue destroy event problem cause problems ever decides add destroy event", "d": "10/2014"}, {"body": "comment author tj crowder replying scottgonzalez problem cause problems ever decides add destroy event destroy example jqdestroy jqclean whatever avoid conflicts similarly ready really get renamed point see also six lines code lean toward event interested equivalent callback mechanism would look like replying dmethvin able achieve cleanup today special events api first way cool eventspecialsanitation teardown function alert repressed would trick use case would plugin create special event one handler unless implement callback list jquery ui create special event tinymce implement special event starts getting messy imv nice thing using event causes nearzero bloat uses familiar easy paradigm inherits namespacing sorts goodness offthecuff functionally complete implementation adds six lines code nt checked yet efficient way trigger event three posted earlier dataeventsdestroy jquery elem trigger destroy initializing jqueryeventspecial special nobubble true trivial implementation virtually overhead paradigm jquery programmer trivially understand", "d": "10/2014"}, {"body": "comment author jock murphy allow say voice support felt need thing wanted automatic way cleanup proposed solution message seems ideal", "d": "10/2014"}, {"body": "comment author tj crowder copy sixline patch saying implementation beall endall fiddle generates elements hook click event something dataevents one hook jqdestroy event call html container element destroy time long takes well watching see get jqdestroy event container nt compare version using unmodified version want look overheads", "d": "10/2014"}, {"body": "comment author dmethvin fwiw duck punching cleandata really easy jquery ui however public interface ca nt imagine could refactor without thought always saddled attrfn jquery elem trigger destroy could use triggerhandler nt bubble nice thing using event causes nearzero bloat uses familiar easy paradigm inherits namespacing sorts goodness nt bloat code pretty large hammer need nonbubbling callback follow codepath see mean much code involved implementing dom semantics agree web developers understand semantics really needed performance cost normal case one hooked event looks trivially small likely already horribly inefficient right one things wanted look possibility eliminating jquerycache attaching data directly property dom element removal subtree nt special event removeteardown handlers could simply throw away without walking feature obligates us walk entire subtree seems like bad idea right itt proven ca nt shortcut really cleandata bad reason domsubtreemodified event bad abandoned favor mutationobserver perhaps would better see third party could build dom cleanup functionality top shim available", "d": "10/2014"}, {"body": "comment author tj crowder replying dmethvin fwiw duck punching cleandata really easy jquery ui however public interface exactly jquery elem trigger destroy could use triggerhandler nt bubble great three lines seriously knew efficient way may even one could go although efficiency firing event less important imv efficiency firing firing unusual case performance cost normal case one hooked event looks trivially small likely already horribly inefficient right perhaps mostly trivial vast majority situations adding overhead sitaution element events hooked adding one property exist check quick one things wanted look possibility eliminating jquerycache attaching data directly property dom element removal subtree nt special event removeteardown handlers could simply throw away without walking well special events behavior nt change anything joins list hooking event rare one special events fine really cleandata bad reason domsubtreemodified event bad abandoned favor mutationobserver perhaps would better see third party could build dom cleanup functionality top shim available quick review indicates jquery form cleandata four half years since cleanup showed remove used called empty starting line prevent memory leaks jquery add function jqueryeventremove jqueryremovedata far aware uproar browsers computers getting faster untilunless actually shows real performance problem worrying removing premature optimization jquery able point away cleandata time worry deprecating functionality nt find convincing argument current reality particularly given people today get functionality", "d": "10/2014"}, {"body": "comment author dmethvin convinced anything mark ticket open", "d": "10/2014"}, {"body": "comment author oskarols using custom event seems like horribly roundabout way needed handle straightforward manner adding single trigger", "d": "10/2014"}, {"body": "comment author jock murphy sorry disagree dmethvin oskar problem code adds event like clean well defined way clean basically require cleanup happen manually onunload get missed tj proposing straightforward elegant solution frankly bit shocked learn jquery nt good solution problem", "d": "10/2014"}, {"body": "comment author dmethvin problem code adds event like clean well defined way clean yes specialevents interface standard cleanup insufficient agree tj crowder potential messiness event needing teardown handler lot custom events depends use case current teardown handler design low overhead event like majority discussion single page applications mvcs spend lot time cleandata already tj crowder timing test showing additional test cheap someone writes code depends expensively triggered destroy event makes popular plugin start getting reports like aspect agree oskar frankly bit shocked sorry shock jock", "d": "10/2014"}, {"body": "comment author dmethvin bulk change enhancement feature", "d": "10/2014"}, {"body": "comment author mikesherov whatever dmethvin thinks", "d": "10/2014"}, {"body": "comment author rwaldron", "d": "10/2014"}, {"body": "comment author anonymous", "d": "10/2014"}, {"body": "comment author gnarf found wanting something like figuring teardown actually accomplish leaning towards meh feature", "d": "10/2014"}, {"body": "comment author tj crowder replying gnarf figuring teardown actually accomplish teardown solution leaves lot desired imv least multiple autonomous handlers convoluted client code hooking event never receive course completely avoidable duplication jquery ui duck punches tinymce monkeypatches stuff adds teardown stuff adds teardown jquery nt going stop needing cleanup time soon makes sense open code using library well esp amazingly trivial cost", "d": "10/2014"}, {"body": "comment author jzaefferer dmethvin would cleandata monkeypunching jquery ui look like using special event teardown see also elaborate mutationobserver relates discussion cleandata hook synchronous triggering destroy event node still dom mutationobserver collect events therefore trigger callback node detached could become problem practice", "d": "10/2014"}, {"body": "comment author dmethvin would cleandata monkeypunching jquery ui look like mean using special events proposed cleandata punch could removed entirely would single special event handler widget factory event like uisanitation jqueryeventspecialuisanitation teardown function dom element get widget ref getwidgetfromelement destroy instead attaching remove event widget create attach empty uisanitation event trigger teardown cleandata code would take care rest thison true thiselement uisanitation jquerynoop mutationobserver collect events therefore trigger callback node detached could become problem practice destroyer expected synchronous behavior remove events generally used part public interface widgets stuff done default handler looks like would safe detached element perhaps even better way since changing attached element might cause reflows", "d": "10/2014"}, {"body": "think issue lost sufficient animus warrant leaving open", "d": "1/2015"}, {"body": "trick event special api correct method calling leads teardown calling", "d": "2/2015"}, {"body": "comment author dmethvin worth thinking leave open", "d": "10/2014"}, {"body": "comment author rwaldron dmethvin nt mind like prototype one", "d": "10/2014"}, {"body": "comment author rwaldron note self click fn support handling delegated events click fn div data object events click fn div dataobject", "d": "10/2014"}, {"body": "comment author dmethvin bulk change enhancement feature", "d": "10/2014"}, {"body": "comment author dmethvin gnarf talked austin would lowlevel public interface ideally current event features would built top essentially replace function nt go current jquery dispatcher instead use callersupplied dispatching object would provide users lowoverhead ways handle highfrequency events like scroll mousemove upcoming pointermove avoiding jqueryeventfix example", "d": "10/2014"}, {"body": "comment author good implementation would make something like significantly lightweight", "d": "10/2014"}, {"body": "comment author dmethvin additional note way capturing understand addeventlistener interface seems like events attached object would capturing", "d": "10/2014"}, {"body": "comment author petkaantonov addeventlistener optional usecapture parameter defines whether capturing use regardless use function object handler default false example events bubbling", "d": "10/2014"}, {"body": "comment author dmethvin rwaldron comment thinking interface low level enough support type enhancement includes special events delegation fixing additional data get things either need use standard interfaces additional data issue probably issue since points object get populate features cost execution time one reasons interface provide clean way get performance nt need things like event normalization across browsers", "d": "10/2014"}, {"body": "notes realizeddiscovered thinking ticket implementation write somewhere although object easily set petkaantonov describes individual event must attached via call method low level want work properly methods like cloning events new element removing listeners caller set native jquery needs maintain bookkeeping information inside object actually possible attach two handlers per event type one possible value complicates bookkeeping like use interface foundation existing event layer need define hooks called object methods like manage jquery handlers", "d": "1/2015"}, {"body": "dmethvin plan finish time since looks like nonbreaking change seems could defer please update milestone agree", "d": "9/2015"}, {"body": "dmethvin bumped feel free want", "d": "9/2015"}, {"body": "comment author rwaldron think worth investigating experimenting going grab work jdalton implementing", "d": "10/2014"}, {"body": "comment author jdalton may need confirm memory leak issue maybe really pre handled though remember correctly dean edwards solution leak ie", "d": "10/2014"}, {"body": "comment author dmethvin exit twogc environment oldie implement however still need recursive crawl least cases call special event teardown hooks probably optimize significantly though example expando flag indicates whether special events use element", "d": "10/2014"}, {"body": "comment author dmethvin rwaldron ticket", "d": "10/2014"}, {"body": "comment author rwaldron fixed data rewrite read read backwards", "d": "10/2014"}, {"body": "comment author jdalton looks like still relying data objects internally leak discarded via explicit call element longer needed using element object holds data object would avoid gist issue", "d": "10/2014"}, {"body": "comment author rwaldron current design designed support smooth transition weakmap soon available least browsers picked number arbitrarily putting data directly element would mean exposing jquery interally used data actually two sets data every object element user privateinteral ca nt long user code dom manipulation via jquery data correctly cleaned removed", "d": "10/2014"}, {"body": "comment author jdalton actually two sets data every object element user privateinteral know gist ticket suggest putting element data internaluser element way would need user manually invoke cleaning method would reduce code needed storing data avoid memory leaks without burdening dev cleanup overlooked easy cause leaks easy track", "d": "10/2014"}, {"body": "comment author rwaldron replying jdalton actually two sets data every object element user privateinteral know gist ticket suggest putting element data internaluser element way would need user manually invoke cleaning method would reduce code needed storing data avoid memory leaks without burdening dev cleanup overlooked easy cause leaks easy track user code get jqueryspecific internal data ca nt make guarantees stability reliability trust wish easy always appreciate input feedback case ca nt expose jqueryspecific internal data owner object related directly sure mean need user manually invoke cleaning method happens automatically jquery dom manip methods appropriate time wo nt happen user code uses dom apis directly scope jquery", "d": "10/2014"}, {"body": "comment author dmethvin jdalton general case still need call jquerycleandata method manipulationjs least situations like special events guarantee teardown hook also consider semantics remove say remove elements document removes events data whereas detach go loop part cleandata code regardless perhaps attaching data element would let us skip steps made significant performance difference interested seeing implementation even exposed data extent perf testing web apps sites uncommon see cleandata high list especially mv frameworks update big dom chunks", "d": "10/2014"}, {"body": "comment author rwaldron could patchwelcome ticket patch would pass existing data tests asis", "d": "10/2014"}, {"body": "comment author jdalton related directly sure mean need user manually invoke cleaning method thinking devs use remove friends instead say simply elinnerhtml correct though diligent used lib api managed user code get jqueryspecific internal data ca nt make guarantees stability reliability exposing data pre jquerycache existed sure fits guarantees stability reliability aside jquery nt big user hasownproperty checks could nt someone manipulate objectprototype populate data values fit stabilityreliability guarantees also wan na dmethvin perf concern", "d": "10/2014"}, {"body": "comment author rwaldron exposing data pre jquerycache existed sure fits guarantees stability reliability jquery jquerycache reason aside jquery nt big user hasownproperty checks could nt someone manipulate objectprototype populate data values fit stabilityreliability guarantees sure falls official wo nt fix", "d": "10/2014"}, {"body": "comment author jdalton sure falls official wo nt fix yap lots things scope makes guarantee lip service substance case think beneficial store data element instead said nt time investigate moment resources limited issue noted future reference", "d": "10/2014"}, {"body": "comment author jzaefferer discussed amsterdam jquery ui currently depends cleandata hook widget removal whenever element removed widget calls destroy method widget example unbind event handlers document whatever solution looks like needs provide alternative hook jquery ui see also", "d": "10/2014"}, {"body": "comment author mgol read comments seems still issue teardown hooks invoked element removed via raw dom methods overcome difficulty safety guarantees mostly agree jdalton unable provide complete protection anyway possible jquerycreated amp handled elements cooperate native dom methods one", "d": "10/2014"}, {"body": "comment author dmethvin worried complete protection mainly trying avoid walking elements tree nt someone mingles jquery raw dom methods manipulate document need understand consequences", "d": "10/2014"}, {"body": "related pr", "d": "1/2015"}, {"body": "comment author dmethvin worth investigating", "d": "10/2014"}, {"body": "comment author jaubourg look", "d": "10/2014"}, {"body": "comment author dmethvin bulk change enhancement feature", "d": "10/2014"}, {"body": "comment author dmethvin ref", "d": "10/2014"}, {"body": "comment author dmethvin note quick look pull request possible might open security holes adding careful sourceurl string newline also need alert ie conditional javascript bug see", "d": "10/2014"}, {"body": "comment author mgol ie conditional compilation bug fortunately behind us recent sourcemap specification changes also changed sourceurl sourceurl", "d": "10/2014"}, {"body": "comment author dmethvin switch always using tags running code get free nt think remaining use cases warrant change globaleval see tradeoffs", "d": "10/2014"}, {"body": "comment author paulirish one came believe wither globaleval script tag script real name debuggable browser devtools sourceurl strong xbrowser support would allow inject filename injected scripts would allow participate like real files", "d": "10/2014"}, {"body": "comment author dmethvin see since feature leave open separately nt think retain globaleval method could inject sourceurl comment user added one script tag method use", "d": "10/2014"}, {"body": "since using eval inline scripts landing ticket longer applies", "d": "1/2015"}, {"body": "comment author pferreir forgot add first case element seems added dom immediately removed", "d": "10/2014"}, {"body": "comment author dmethvin use getscript provide complete test case jsfiddlenet would help us evaluate problem", "d": "10/2014"}, {"body": "comment author pferreir hello small example uncommented code work show like button commented fail tried getscript success", "d": "10/2014"}, {"body": "comment author timmywil filter scripts manipulation getscript used remove hashes url sure", "d": "10/2014"}, {"body": "comment author dmethvin seems valid enough keep open figure removing hash", "d": "10/2014"}, {"body": "comment author dmethvin okay gives error facebook xxx id gives error nt hash timmywil said since script nt yet executed insertbefore making ajax request request script since hash stripped never going see correct id jaubourg know stripping hash specific reason omission", "d": "10/2014"}, {"body": "comment author trip wayback machine reveals stripping hashes since fix favor preserving kills oldie thus may unable maintaining api symmetry", "d": "10/2014"}, {"body": "hmmm attempting parse url bit sanely per might possible preserve hash", "d": "12/2014"}, {"body": "golly think lands hash conveniently could reappend adding serialized params", "d": "12/2014"}, {"body": "unlocked might want distinct ticket ajax hash preservation", "d": "12/2014"}, {"body": "agreed since potentially breaking change good candidate", "d": "12/2014"}, {"body": "looking whatwg xhr spec intentionally taken hash fragment url property jaubourg know might might ask op reported case script tag wondering reasoning excluding xhr edit additional info seems indicate stripping fragment early okay", "d": "11/2015"}, {"body": "fragments never sent servers apparently even exposed fetches appear dom visible executing scripts extremely rare case sure one script transports technically wrong long strip", "d": "11/2015"}, {"body": "interesting asked stack overflow question ago never got response add link issue pull request question comments thanks working everyone reference question", "d": "11/2015"}, {"body": "comment author dmethvin still searching good solution nt blocker", "d": "10/2014"}, {"body": "comment author dmethvin ref", "d": "10/2014"}, {"body": "comment author tomgrohl case copying tests changing doctype xhtml limited certain test might able help one", "d": "10/2014"}, {"body": "comment author dmethvin part investigation done example support firefox serve xhtml right docttype http contenttype ensure interpreted xhtml spits console warnings get wrong according automated tests would nt catch type problem hand seems firefox xul application demands correct xhtml run nt xul automated tests formal support able keep running except break xhtml accident done couple times similar reports related chrome plugins perhaps provide sort xul test testswarm since seems sensitive environment", "d": "10/2014"}, {"body": "comment author tomgrohl thanks info look see else find", "d": "10/2014"}, {"body": "comment author tomgrohl dmethvin starting point wrote code check content type doctype detects closing tags quoted attributes required based following content type applicationxhtmlxml content type texthtml doctype xhtml document xul needs testing though generally doctype andor content type omitted detaults texthtml logic good use probably fix well work creating tests xhtml based existing ones see get", "d": "10/2014"}, {"body": "comment author dmethvin bulk change enhancement feature", "d": "10/2014"}, {"body": "comment author dmethvin add list browsers generate console warnings doctyperelated errors happen early shim consolewarn see", "d": "10/2014"}, {"body": "comment author dmethvin although wonder whether shim would see delayloaded iframe anway", "d": "10/2014"}, {"body": "comment author firstly note majority regressions xhtml compatibility past years feature bug detection code included jquery two approaches take solving problem neither particularly ideal run entire test suite xhtml mode pros duplicate tests required test suite code paths properly tested cons looking qunit code history extremely regression prone xhtml compatibility could expect regular breakage updating qunit unless similarly encouraged test xhtml support test running interface uses documentwrite would need reimplemented better way unit tests may possible xhtml mode would require form indicator run xhtml mode result previous tests may marked incompatible xhtml could work fine developer laziness misunderstanding increases testrunning time requiring entire suite run mulitple times iframes tests immune xhtml mode setup way since iframe context would result tests passing fail alternatively duplicate specific tests run xhtml iframes none cons code coverage poor tests duplicated html counterparts maintaining list duplicated maintenance burden jquery", "d": "10/2014"}, {"body": "comment author dmethvin anthonyryan thanks taking another look agree none solutions ideal get harder feature detects asneeded basis thinking may still want sort basicfunctionality test xhtml least would give us hope avoiding kind recurring regressions", "d": "10/2014"}, {"body": "comment author true loading jquery iframe invoking parent callback successful load would go long way permodule tests come later need much complicated either", "d": "10/2014"}, {"body": "comment author mgol replying dmethvin anthonyryan thanks taking another look agree none solutions ideal get harder feature detects asneeded basis testsupportjs forcecompute support tests check match expected matrix problem", "d": "10/2014"}, {"body": "per discussion meeting today might occasional run xhtml mime type", "d": "12/2014"}, {"body": "ref", "d": "12/2014"}, {"body": "issue xhtml regressions coming seems like appropriate time revisit think optimal course action would fixing qunit xhtml ensuring start regularly testing xhtml mode ca nt expect keep xhtml tests green test harness keeps breaking requiring webserver serve test suite everything served appropriate headers ca nt ensure various urls served correct contenttype conditionally skip based specific criteria case would significant effort xhtml failing test would need manually checked understand failing whether used example appending unclosed tag bug jquery get tests passing skipping xhtml people might notice difference failure difference lead people ignoring failures see fewer regressions", "d": "7/2015"}, {"body": "rescheduling nontrivial still lot", "d": "9/2015"}, {"body": "moving roadmap sure get", "d": "1/2016"}, {"body": "timmywil closing issue fixing please always make sure remove milestone otherwise get picked changelog totally incorrectly", "d": "1/2016"}, {"body": "mgol good call thanks reminder", "d": "1/2016"}, {"body": "comment author timmywil marking valid", "d": "10/2014"}, {"body": "comment author malsup really fairly significant omission stated impossible track formdata file upload progress without property exposed jqxhr object documented superset browser native xml object upload property one example simply true respect xml level either properties exposed must way access native xhr", "d": "10/2014"}, {"body": "comment author jaubourg ways access native xhr overriding optionsxhr prefilter want upload jquery better implement upload method rather try ajax even bloated", "d": "10/2014"}, {"body": "comment author jzaefferer overriding optionsxhr prefilter good enough least document access nonexposed properties sane way part existing docs see also mike comment", "d": "10/2014"}, {"body": "comment author dmethvin like bettersimpler way well", "d": "10/2014"}, {"body": "comment author mikesherov", "d": "10/2014"}, {"body": "comment author timmywil", "d": "10/2014"}, {"body": "comment author rwaldron ajax extendable", "d": "10/2014"}, {"body": "comment author dmethvin bulk change enhancement feature", "d": "10/2014"}, {"body": "comment author mikesherov f timmy", "d": "10/2014"}, {"body": "comment author meleyal seems access xhr object ajaxsettingsxhr", "d": "10/2014"}, {"body": "comment author dmethvin switching far ajax concerned since addition make would crossbrowser either branch prefer deal xhr", "d": "10/2014"}, {"body": "agree seems like confusion pile top let handle via different interface", "d": "10/2014"}, {"body": "comment author antti applies earlier versions jquery well reported latest stable", "d": "10/2014"}, {"body": "comment author dmethvin concerned changing considering compatibility implications way forever window width return documentdocumentelementclientwidth include scrollbars observed say width viewport opinions people expect exclude scrollbars would break lot code changing", "d": "10/2014"}, {"body": "comment author anonymous sure articulated clearly actually meant jquery width fact excludes scroll bar width css media queries count part viewport image might emphasize point see also css defines breakpoint say width viewport nt consistent browser considers viewport width understand would might things bothers match width css media queries using ie width viewport fact none test changing jsfiddle window width window innerwidth window outerwidth possibility get even one working consistently browser viewport width", "d": "10/2014"}, {"body": "comment author dmethvin yes made clear point far tell way long time change good chance break someone code expects width include client area still looking feedback others", "d": "10/2014"}, {"body": "comment author scottgonzalez please nt change honestly strange media queries include scrollbars since developers obviously using things like maxwidth based actual usable space excludes scrollbars expect tons broken sites jquery changed almost broken sites media queries changed thought", "d": "10/2014"}, {"body": "comment author antti understand changing window width would break things nt think changing window outerwidth would break anything", "d": "10/2014"}, {"body": "comment author antti could someone also post example code would break behave strangely changed quite sure currently even see risk high guys", "d": "10/2014"}, {"body": "comment author antti adding looking closer api documentation width states following returns width browser viewport window width returns width html document document width window width currently returns documentdocumentelementclientwidth nt wrong regarding api documentation", "d": "10/2014"}, {"body": "comment author scottgonzalez could someone also post example code would break behave strangely changed anything positions elements relative window eg notifications positioning top right corner would overflow cause horizontal scrollbar anything sizes elements relative window eg overlays overlay would large would cause horizontal scrollbar anything bounds testing window eg draggable elements contained window bounds would slightly wide would cause horizontal scrollbar right edge increasing size document bounds likely several scenarios well generic cases popped head right away", "d": "10/2014"}, {"body": "comment author antti sound something would jquery think cases handled css occasions bounds part correct one yeah might break things looking actual references existing code could test eg links github projects", "d": "10/2014"}, {"body": "comment author dmethvin seems highly unlikely anyone would using window outerwidth today mark open potential change", "d": "10/2014"}, {"body": "comment author scottgonzalez replying dmethvin seems highly unlikely anyone would using window outerwidth today mark open potential change", "d": "10/2014"}, {"body": "comment author dmethvin return value wondering use case spawned", "d": "10/2014"}, {"body": "comment author scottgonzalez use case generic plugins operate elements documents windows example plugin centers x inside would something like xcss left youterwidth xouterwidth correct behavior would achieved today even window however scrollbar width included x would offcenter half size scrollbar compensate would need check windows var ywidth iswindow ywidth youterwidth xcss left ywidth xouterwidth note extended logic already required want support jquery lt since nt support outerwidth windows", "d": "10/2014"}, {"body": "comment author scottgonzalez irc discussion three years ago", "d": "10/2014"}, {"body": "comment author emartel hi sorry nt strong web development background interested topic thought one best way learn collaborate existing projects given thoughts problem wondering would nt simple solution sure elegant solution might start handle legacy code new code wants outerwidth takes scrollbars account would option add state window jquery object default state legacy noscrollbar decent name explains behavior calls made object using function call window sizeexcludesscrollbars truefalse state altered state persisted making subsequent calls width height take scollbars account believe change would give antti wants leaving existing code described scott functional guys think", "d": "10/2014"}, {"body": "per comment scottgonzalez seems highly likely jquery code assumes innerouterupperdowner widthheight value since ticket asked way change would break code common enough need create new widthheight apis corresponding documentation done pretty simply plugin needed nt previously requested although op says useful matching media queries", "d": "12/2014"}, {"body": "per comment scottgonzalez seems highly likely jquery code assumes innerouterupperdowner widthheight value since ticket asked way change would break code hand season breaking changes scrollbarwidth pretty mild docs state nt even apply windows would nice consistency media queries scrollbarbearing elements nt even checked match throw really gets fun could certainly see something anyone defensible idea", "d": "12/2014"}, {"body": "agree would nice expose functionality assuming scott knew code would break scottgonzalez point code jquery ui depends apis returning value", "d": "12/2014"}, {"body": "nt think affect jquery ui problem returned made generic logic like making two elements size dynamically aligning elements painful plugin developers accept elements documents windows input long meaningful values returned nt problems possible break existing code jquery ui two cases think use dimensions like try match outer widths generated elements like menu select autocomplete effect placeholder windows never valid inputs cases change wo nt affect accept elements documents windows events positioning logic plugin including scrollbar would undesirable already explicit checks window using support old versions jquery different project lead support jquery would likely dropped long time ago code would likely reduced check change would break positioning within window right edge latter type situation wanted account previous change note making element size window via outer width matching result horizontal scrollbars already vertical scrollbar see also example previous comment end developers always include window check first place", "d": "12/2014"}, {"body": "okay", "d": "12/2014"}, {"body": "dmethvin sum idea leave asis add scroll bar width although think scottgonzalez still makes good case", "d": "1/2015"}, {"body": "actually read comment looks like okay scottgonzalez clarify agree possible break code somewhere hand ca nt think would nice expose way get dimension", "d": "1/2015"}, {"body": "actually read comment looks like okay scottgonzalez clarify repeat summation earlier long meaningful values returned nt problems possible break existing code reason push break quotes common cases centering pixels probably noticeable cases agree possible break code somewhere hand ca nt think would nice expose way get dimension already provided examples would actually break see", "d": "2/2015"}, {"body": "scottgonzalez nt mean annoy still clear position seems presented arguments sides said breaks barely noticeable reminded dave listed multiple examples would break existing code simply neutral", "d": "2/2015"}, {"body": "neutral change enables reasonable use cases think ok allow breaking change major release userland fix breaking change pretty simple", "d": "2/2015"}, {"body": "consensus change behavior jquery", "d": "5/2015"}, {"body": "yes list", "d": "5/2015"}, {"body": "really sure want change developer asks really wants know much space available actually also true media queries even possible scrollbar customized much larger reason media queries include scrollbar media queries need calculable without knowing styles document contents nt know whether applied example necessary shortcoming mq api changing semantics existing api match another less useful api nt really great maybe add new method think important end would even always prefer use right api want exact sync time semantics css media queries", "d": "6/2015"}, {"body": "nt take comment serious case plan change semantics leave like suggested", "d": "6/2015"}, {"body": "already includemargin parameter could another option add includescrollbar", "d": "10/2015"}, {"body": "thanks patch left unfortunate situation equivalent confusing even though counterintuitive would think inner leaves scrollbar", "d": "6/2016"}, {"body": "problem get information need jquery api", "d": "6/2016"}, {"body": "problem little bit potential confusion jquery native use opposite terms outer inner respectively", "d": "6/2016"}, {"body": "imagine much confusing would jquery larger", "d": "6/2016"}, {"body": "yeah mentioned unfortunate situation native property counterintuitive begin issues people stay within jquery api get window dimensions mix native jquery see inner outer flying around meaning thing anyway commenting new issues", "d": "6/2016"}, {"body": "working wordpress site version jquery uses returns value excluding scrollbar width innerwidth outerwidth used workaround", "d": "7/2016"}, {"body": "simply makes sense never never yes changing probably breaks existing code bad design begin say sooner better chances much existing code uses work expected anyway match one would expect also easy fix want sansscrollbar width use", "d": "8/2016"}, {"body": "comment author rwaldron internal design jquerydata jqueryfndata changing forth coming release", "d": "10/2014"}, {"body": "comment author dmethvin see also", "d": "10/2014"}, {"body": "comment author dmethvin duplicate ticket", "d": "10/2014"}, {"body": "comment author jbedard sorry dupe internal design change solution proposed plans pull request still using objectdefineproperties assume data creation still slow", "d": "10/2014"}, {"body": "comment author dmethvin yes pr mainly proof concept see could attach data directly dom elements avoid cleanup reduce chances leaks suspect need abandon nice encapsulation get speed back", "d": "10/2014"}, {"body": "comment author rwaldron like see benchmarks patterns reflect real pathological use jquery data divs nt realistic using objectdefineproperty means expando property visible objects data elements nt really big deal extant code wants use var data means writable configurable enumerable property user data jquery internal data data properties appearing forin array returned objectkeys jqueryeach iterations data properties appearing json fixed falling back old tojson hack many properties every object fails tests course patched object exists value expando wo nt match returned data", "d": "10/2014"}, {"body": "comment author rwaldron data properties appearing json fixed falling back old tojson hack also means breaking jqueryhasdata agrees data exists even empty data obj exists data returns entire data object expected properties retrieve data object wrapped js object removedata clear object make sure right number properties came data appears expected data empty sanity check data nt change even though data attrs confident fixed concerned resulting code maintenance nightmare", "d": "10/2014"}, {"body": "comment author jbedard sure definepropertyies main cause thought quick test replacing plain assignment use case still significantly slower quick test defineprop big factor could simple assignment used elements still use defineprop objects use case table every cell data approx cells rows columns loads slower vs extra mainly datakey gc example rows x columns seems reproduce profiling cases looks like jsperf reproduces almost exact issue forced relayout expensive cloneappenddatagc fairly small datakey gc skyrocket making relayout looks like might really effect chrome though surprised", "d": "10/2014"}, {"body": "comment author jbedard looks like chrome acting due long data expando property name assume longer name treated differently causes element properties stored differently seems fix everything change makes run faster chrome makes go first run removes gc cpu usage made test locally basically called go heap example showing setting different sized property names elements example ffie actually improve chrome nt understand original bug seems mainly effect chrome others maybe chrome also memory issues also note using plain assignment instead definepropertyies maybe elements still makes another faster datakey get reduced enough uses less time dom manipulations like jsperf jsfiddle examples", "d": "10/2014"}, {"body": "comment author dmethvin awesome jbedard thanks drilling seems like able use uid critical thing allow multiple jqueries work element without conflict jqueryexpando ensure rwaldron think", "d": "10/2014"}, {"body": "comment author jbedard might cause meaning would mathrandom causing issue length string", "d": "10/2014"}, {"body": "comment author dmethvin interesting least fix would easy", "d": "10/2014"}, {"body": "comment author jbedard looks like sizzle also puts property onto dom elements containing dash sizzletimestamp update would great least remove avoid main chrome issue", "d": "10/2014"}, {"body": "comment author jbedard delete elem internalkey cleandata seems cause thing combined lead chrome crashing case deleting giant grid gt nodes delete line cause node increase memory", "d": "10/2014"}, {"body": "comment author markelog landing seems improved also note using plain assignment instead definepropertyies maybe elements still makes another faster sounds like using defineproperties bad idea get back using plain assignment", "d": "10/2014"}, {"body": "comment author jbedard even switching defineproperties defineproperty since one helps bit really think something would best", "d": "10/2014"}, {"body": "comment author replying jbedard even switching defineproperties defineproperty since one helps bit really think something would best agree current implementation trying bit clever", "d": "10/2014"}, {"body": "", "d": "10/2014"}, {"body": "related trac ticket moved github", "d": "1/2015"}, {"body": "migration helper script", "d": "10/2014"}, {"body": "done changelog purposes cc dmethvin table tickets status migrated ie closed switch github milestone match ticket summary owner type priority component update elements mgol feature low manipulation milestone matches ticket summary owner type priority component switch script injection instead indirect eval call markelog feature blocker core warn sizzle nt recent tag release timmywil bug blocker build hidden selector finds elements chrome safari ff ie timmywil bug high css visible inconsistent across browsers empty tags timmywil bug high css isnumeric implementation version returns wrong results opera bug high core reintroduce use requestanimationframe feature high effects remove optimization make jquery compatible google polymer project bug high css globaleval handling use strict pragma incorrect bug low core windowgetdefaultcomputedstyle elem may return null rrrosas bug low css workaround tests android unable crossdocument node manipulation mgol bug low manipulation buildfragment process script element error bug low core error using jqueryajax amd bug low ajax wrap module uses manipulation module declare dependency bug low manipulation drop bower npm timmywil bug low build milestone match ticket summary owner type priority component error jquery bug low manipulation", "d": "10/2014"}, {"body": "nice job mzgol", "d": "10/2014"}, {"body": "still close bugs old tracker pain least migrating tickets little easier script using github api", "d": "10/2014"}, {"body": "awesome thanks easier track release", "d": "10/2014"}, {"body": "mzgol lt", "d": "10/2014"}, {"body": "comment author dmethvin global events destined trash heap say think longterm goal remove trigger ajax events document breaking change course needs done lot advance notice already possible hook beforesend via ajaxsettings suffice", "d": "10/2014"}, {"body": "comment author jaubourg like dave said ajax events way deprecation actually nt need beforesend event use cases examples pull request use ajax prefilters first use case ajaxprefilter function settings settingsdatatypes xhrsetrequestheader accept settingsacceptsscript second use case ajaxprefilter function settings jqxhr settingsvalidateform amp amp validateform settingscontext jqxhrabort case add validateform option ajax calls related form needs validation put form context course", "d": "10/2014"}, {"body": "comment author joshpeek sounds like removing ajax global events deprecate global event triggers rather kill events together definitely favor triggering document living ajaxbeforesend polyfill yeah hook onto ajaxsetup issue thats one passes beforesend callback ajax override disable event major issue ajaxsetup general global ajax events nice alternative ajaxsetup nt think ever wanted global callbacks disabled local one provided really nt think want using ajaxprefilter domain specific form validation awful api wonderful thing events easily cancelable bubbling semantics ca nt use event delegation machinery prefilters prefilters also meanings global context first use case pointed kinda prefilters design could still accomplish thing either way second use case quite since requires set settingsvalidateform real equivalent would ajaxprefilter function settings settingscontext form amp amp validateform settingscontext jqxhrabort write element matchers like using fnon much nicer fnbind thats kinda generic example magnify situation try use many times domain specific contexts document ajaxbeforesend formnewcomment dataremote function return find input val also pair really great ajaxcomplete document ajaxbeforesend function addclass loading document ajaxcomplete function removeclass loading see also rails jquery adapter bubbling beforesend event form ajax beforesend everyone using rails already interacting dataremote forms dataremote ca nt set stuff like settingsvalidateform nt control ajax caller forced delegate action means ajax content settings matters much zepto already implementing prefilter api lines code add prefilters offer ca nt simple event related prefilter code like lines guys already pretty great event system", "d": "10/2014"}, {"body": "comment author dmethvin think argued case well cost implement nt high firing event document jaubourg think", "d": "10/2014"}, {"body": "comment author jaubourg think road choppy choppy network connection ca nt answer right respectfully disagree joshpeek however give proper answer next week enough time properly", "d": "10/2014"}, {"body": "comment author scottgonzalez worth bothered years ajaxsetup annoying global beforesend useful wrote amplifyrequest made sure publish message beforesend callback never understood nt onetoone correspondence callbacks events ajax requests", "d": "10/2014"}, {"body": "comment author dmethvin bulk change enhancement feature", "d": "10/2014"}, {"body": "comment author dmethvin jaubourg nt complete thought seems like completeness fired document", "d": "10/2014"}, {"body": "comment author mikesherov sentiments dave", "d": "10/2014"}, {"body": "comment author rwaldron consistency", "d": "10/2014"}, {"body": "comment author timmywil", "d": "10/2014"}, {"body": "comment author jaubourg still issue op expressed regarding prefilter needs use settingscontext explicitely far understand also case global events fire document also prefilter nt incur performance penalty order magnitude firing event prefilter also accidently removed third party code documentoff ajaxbeforesend anyone also automagically offers closure data shared across handlers prefilter done fail without need attach data context data pertains ajax request dom element short selfcontained space ideal kind problems promoted introducing global ajaxbeforesend yet another step direction know wrong need orthogonal logic run request sent much better covered prefilters reason exist first place", "d": "10/2014"}, {"body": "comment author joshpeek could reconsidered global events fire document", "d": "10/2014"}, {"body": "looked think another case significant complexity little gain one potential benefits event caller could abort request way callback returning however event calls via documented return last handler value meaning hard find bugs multiple handlers need use signal like call starting get bigger complex potential unusual interactions least single callback know one", "d": "12/2014"}, {"body": "comment author jaubourg first onreadystatechange xhr events support removed original rewrite size beginning real blocking issue used much one may think use cases represent need widespread enough justify quite substantial bump size especially already success error complete callbacks jqxhr object nt strive implement whole xhr api complete xhrcompatible wrapper makes sense relatively diversity transports hood bandwidth detection example clearly typical usecase web app putting mildly beside wanted full control xhr still use jqueryajaxsettingsxhr create native xhr end given level control require nt need ajax intervene top native xhr setting headers automagically without knowledge instance patch really nt like create specific options make sense xhr transport really want right insist using ajax lowlevel control xhr easily copy code apply patch change line jqueryajaxtransport function drop file application override default xhr transport able whatever need said know need progress notification system guess progress callbacks deferredspromises would perfect fit kind things given deferreds progress transport agnostic transport able provide progress notification protocol leave opened given love see something notify readystate changes using deferreds progress make soon since nt brought proposals new features order doubt see hand addition would pretty neutral since progress callbacks nt exist earlier code breakage since existing behaviour stays unchanged anyway yes need kind progress notification system transports adding options specific given transport acceptable approach let use deferreds progress introduced transports notify events try take conversation forward next jquery meeting", "d": "10/2014"}, {"body": "comment author jaubourg duplicate ticket", "d": "10/2014"}, {"body": "comment author jaubourg duplicate ticket", "d": "10/2014"}, {"body": "comment author dmethvin bulk change enhancement feature", "d": "10/2014"}, {"body": "comment author dmethvin progress callbacks make easy", "d": "10/2014"}, {"body": "comment author hungerandthirst nt know top need investigate get back chance look new callbacks yet", "d": "10/2014"}, {"body": "comment author mikesherov informed enough choose", "d": "10/2014"}, {"body": "comment author gnarf think least look using notify send something state change measure size decide", "d": "10/2014"}, {"body": "comment author jaubourg fyi preliminary study indicates adding minimal implementation progress callback xhr transport would call readystate native xhr instance sole parameter inspected used vicinity mingzipped attempt make secure expose native xhr directly useful call progress handlers meaningful parameters make much bigger actually desirable approach quite torn know useful would yet feel like much weight point since know xhr transport extremely simplified like postpone", "d": "10/2014"}, {"body": "comment author dmethvin fine moving later date plenty things keep us busy next couple months", "d": "10/2014"}, {"body": "comment author anonymous replying dmethvin anything adding support introduce lot people progress always thought clever part deferred", "d": "10/2014"}, {"body": "comment author dmethvin", "d": "10/2014"}, {"body": "see comments", "d": "12/2014"}, {"body": "author rwaldron normalization purposes jquery core maintain round pixel value returns however easily write csshook return widthheight value format prefer", "d": "10/2014"}, {"body": "author bzbarsky clear bug makes width completely useless layout calculations uas subpixel layout compute widths look like fit container fact nt people running time uas fact subpixel layout eg webkit", "d": "10/2014"}, {"body": "author mikesherov boris suggest stop rounding fraction returned", "d": "10/2014"}, {"body": "author dmethvin duplicate ticket", "d": "10/2014"}, {"body": "author mikesherov duplicate ticket", "d": "10/2014"}, {"body": "author mikesherov bzbarsky could get ff return floats offsetwidth offsetheight would solve fact jquery nt use getcomputedstyle height calculations uses offsetheight subtractsadds padding border margin necessary perhaps file bug", "d": "10/2014"}, {"body": "author mikesherov bzbarsky reported ff might take stab ditching offsetwidthoffsetheight jquery oldie codepaths gone would fixed automatically offsetwidthheight stopped rounding", "d": "10/2014"}, {"body": "author mikesherov boris nt use offset use getboundingclientrect", "d": "10/2014"}, {"body": "author mikesherov good news ff chrome safari opera getboundingclientrect work great reporting subpixel values appropriate containing width property however bad news reports opposed offsetwidth ie lt reports textrectangle object width property sigh truly want get subpixely either see drop offsetwidth altogether feature detect subpixely getboundingrectclient use", "d": "10/2014"}, {"body": "author mikesherov oh works right", "d": "10/2014"}, {"body": "author dmethvin duplicate ticket", "d": "10/2014"}, {"body": "author dmethvin duplicate ticket", "d": "10/2014"}, {"body": "author dmethvin ref still jquery may better position since site gets choose whether wants upgrade newer jquery question whether lot popular plugins would break fractional widths heights", "d": "10/2014"}, {"body": "going mark potential inclusion release might best place try breaking change like", "d": "10/2014"}, {"body": "mikesherov assigning want please reassign back notify plz", "d": "10/2014"}, {"body": "would like add since nt see mentioned anywhere css height css width also rounding values fiddle hope helps", "d": "2/2015"}, {"body": "would like add since nt see mentioned anywhere css height css width also rounding values yes caused code going special hook instead works disconnected nodes see quite lot code btw original issue mentioned hidden elements well code also works around number box sizing ie bugs", "d": "4/2015"}, {"body": "hi guys state issue fixed jquery", "d": "5/2015"}, {"body": "aurelioderosa well milestone least", "d": "5/2015"}, {"body": "arthurvr saw label well nt reply question", "d": "5/2015"}, {"body": "aurelioderosa planned assigned need get try soon like land tag first beta", "d": "5/2015"}, {"body": "pr feedback welcome", "d": "7/2015"}, {"body": "version pr", "d": "7/2015"}, {"body": "added note blog post", "d": "7/2015"}, {"body": "reported chrome deprecating amp svg elements nt officially support good know buy fractional data switching", "d": "2/2016"}, {"body": "author anonymous fadein fadeout also nt work", "d": "10/2014"}, {"body": "author domastrijonis fails jquery sets filter property make work correctly msfilter set", "d": "10/2014"}, {"body": "author addyosmani confirming still issue", "d": "10/2014"}, {"body": "author chee confirming still issue jquery", "d": "10/2014"}, {"body": "author dmethvin mikesherov ended assigned inclined wontfix think", "d": "10/2014"}, {"body": "author mgol dmethvin ca nt use msfilter apart filter remove filter anyway", "d": "10/2014"}, {"body": "author dmethvin mgol sure according microsoft msfilter applies synonym filter since dropping support soon perhaps problem simplified want grab ticket see come fix", "d": "10/2014"}, {"body": "author mgol dmethvin meant still msfilter better syntax conforms css rules filter certainly grab ticket amp check effect", "d": "10/2014"}, {"body": "looked code actually using css microsoft made quite confusing note quotes css stylesheet map property property dom element using property distinction nt matter issue nt anything distincion", "d": "11/2014"}, {"body": "seems opacity filter nt cover children unless children defined unfortunately beyond scope since control descendants added element applying opacity could try cater existing ones sure worth hacking much browser works think btw dmethvin probably labels wontfix etc otherwise hard say issue fixed closed", "d": "11/2014"}, {"body": "agreed nt seem like something could address involves dynamic structure document", "d": "11/2014"}, {"body": "author djgilcrease make jquerydefered promise closer conforming specification around exceptions checked full compliance tests setup test shows exception handling working expected pull request", "d": "10/2014"}, {"body": "author dmethvin nt think right way go swallowing exception silently reported poorly user foresight attach fail handler see even current proposed spec discussions handwaving needing browser support dev tools able debug properly prefer users opt standard promises compliant polyfill retroactively changing semantics deferred significant way seems like bad idea especially builtin support notify unhandled promise rejections", "d": "10/2014"}, {"body": "author markelog ticket requires clarification specification mentioned ticket description one refers domenic repository also promisesa promisesa proposals much relevance right plus upcoming draft also promise clause dom specification draft stage already implemented two browsers firefox nightly chrome canary without prefixes browsers however implementation mistakes new specification defines new api significantly differs jquery deferred aside methods like cast catch etc also behaivor differences guarantee asynchronous execution swallows errors passes propagate stack rejection handlers progress handler signature always passes one argument successfulfailed callbacks", "d": "10/2014"}, {"body": "author dmethvin definitely good emphasize promisesa proposal standard comply jquery deferred several years would guess number users promisedeferred implementation exists today let break code keep deferred way look ways let developers use emerging standard lively discussion around addition done method promises would swallow exceptions nt seem slated first iteration standard think shame built done way around without proposed browser support exposing unhandled exceptions promises going difficult debug", "d": "10/2014"}, {"body": "author rwaldron replying markelog ticket requires clarification specification mentioned ticket description one refers domenic repository promises specification", "d": "10/2014"}, {"body": "author domenic promisesa standard basis promises specification promises follow promise specification pass promisesa tests promises spec effect superset promisesa spec", "d": "10/2014"}, {"body": "author anonymous built done way around false promiseprototypedone onfulfilled onrejected thisthen onfulfilled onrejected catch e gt settimeout gt throw e", "d": "10/2014"}, {"body": "author dmethvin rethrowing error object propagated nt letting browser handle error point occurred lot important error context lost especially older browsers still supports however particular pull request listed trying turn deferred promisesa ca nt would break years worth existing code already using deferred nobody wants break web instead expect support promises like mentioned seems like good approach edit clarified subject reason ticket nt closed expect support promises changing deferred", "d": "10/2014"}, {"body": "author domenic guess unclear op meant make promises speccompliant changefix implementation match spec shipped implementation use pipe continue using jqueryspecific functionality sounds like saying something different op wherein changefix implementation match spec instead somehow support real promises unclear", "d": "10/2014"}, {"body": "author dmethvin reading agree unclear pull request referencing issue misplaced since op nt mention changing deferred becomes confusing close open new ticket specific title", "d": "10/2014"}, {"body": "author mgol amsterdam meeting discussed op says compliance spec wording clear modify title amp text issue prefer recreate one since discussion already started", "d": "10/2014"}, {"body": "author mgol discuss san diego surprisingly jaubourg seemed ok switch least stable browsers implement new spec keeping pipe current semantics like see much code would affected nt think many people relied production code promise throwing errors way flow control oth jquery even small amount lot larger question deprecate old apis eg case ajax planned xhr ever able actually remove former question similar concern", "d": "10/2014"}, {"body": "author calvinmetcalf chrome beta implements firefox beta flag stable browsers soon", "d": "10/2014"}, {"body": "author markelog replying calvinmetcalf chrome beta implements firefox beta flag stable browsers soon see ticket description wait ship unprefixed behind flag stable browsers first", "d": "10/2014"}, {"body": "author anonymous unwrapping thenables also change consider spec useful", "d": "10/2014"}, {"body": "author dmethvin edited title line actually plan converting internal uses deferred emerging promise implementations semantics two differ much promise lacks several features deferred uses progress callbacks multiple arguments however plan accepting promise input appropriate eg ensuring deferred works thenable", "d": "10/2014"}, {"body": "please consider executing handler deferred one thing every promise always defer execution handlers always log hello world promise implementation jquery hand log either hello world world hello sometimes based whether promise resolved called steady source bugs developers rely order exposed race conditions think fixing mistake next major revision jquery could really help lot developers help prevent race condition related bugs", "d": "1/2015"}, {"body": "benjamingr changes bring promisea run test suite sure landing soon", "d": "1/2015"}, {"body": "dmethvin landing jquery would awesome means also address correctly huge answer promise questions stackoverflow pretty often bringing standard would help ton people think got confused issue date migrated", "d": "1/2015"}, {"body": "means also address correctly mean turn exceptions rejections rather allowing uncaught yes although working report reasonably visible way related issue opened easy programming errors lost see problem people start working promises imagine someone drops promiseheavy piece code web page written third party problem wo nt know working visible errors", "d": "1/2015"}, {"body": "bluebird pretty good job detecting unhandled rejections simple heuristic promises nt add catch handler next turn recently made survey people use bluebird hook lets determine library thinks rejection vast majority people stick default behavior log error console developer see example note bluebird track rejections stitches stack traces wraps primitives implicitly logging much bigger api etc different important considerations jquery file size might want implement debugging stuff bluebird honestly compliance huge compliance unhandled rejection handling crossing line good news interoperability able use jquery main promise implementation frontend project", "d": "1/2015"}, {"body": "fyi good amount tooling native promises asynchronous callstacks already available dedicated promises panel coming soon think worth considering using native promise impl falling back deferred code older browsers developers would end enjoyable debugging experience", "d": "1/2015"}, {"body": "removing functionality use internally native promise nt extensions goal provide standard promisea behavior implement native promise shim someone wants native promise decent debugging supported platforms want use definitely instead platforms like android die people want crossbrowser behavior use someone better plan please let us know", "d": "1/2015"}, {"body": "paulirish nonnative promise hook tooling", "d": "1/2015"}, {"body": "dmethvin guess paulirish meant use native promises available enhanceextend methods interpreted right would create two codepaths would increase size performance might suffer judging although sure matters browser envs preserve consistency routes understand reason us consider improve debug process", "d": "1/2015"}, {"body": "markelog native promises really slow still likely much much faster jquery promises least today", "d": "1/2015"}, {"body": "markelog native promises really slow still likely much much faster jquery promises pretty sure accurate currently fastest promises since nt guarantee async execution therefore nt wait next event loop iteration", "d": "1/2015"}, {"body": "markelog think might want run benchmarks fun glory also run bluebird sync zalgo build guarantee async operation bluebird petkaantonov actually wrote sync build prove performance benefits guaranteeing async execution marginal best trick instead something native like using every time want create async behavior queue pending async executions together batch next turn gnerally pretty sure bluebird least two orders magnitude faster jquery deferreds moment native promises using microtask queue probably least one order magnitude faster jquery feel free benchmark", "d": "1/2015"}, {"body": "think might want run benchmarks since imp compatable promisea need trick instead something native like using settimeout every time want create async behavior queue pending async executions together batch next turn popular trick used many promises libs still need wait next iteration gnerally pretty sure bluebird least two orders magnitude faster jquery deferreds moment see conclusion argument lead native promises using microtask queue probably least one order magnitude faster jquery would talk microtasks vs macrotasks would relevant doenst require non code nt require async execution always faster alternative feel free benchmark besides points made nt really fair compare async vs sync execution since one inherently faster", "d": "1/2015"}, {"body": "markelog try clearer point bluebird promises run circles around jquery defererds day even jquery uses sync zalgo execution model thankfully fixed bluebird promises consume less memory jquery deferred using flags less state variables closures trivial microbenchmark async execution involved bluebird defers jquery performs nothing asynhronous typical load completely synchronous code bluebird performs times faster jquery kind benchmark sync execution supposed shine nothing actually asynchronous worth even disable async deferral bluebird marginally faster", "d": "1/2015"}, {"body": "main focus interop per topic someone perf issues wants use bluebird native promise really like native promise nt think people use monolithic jquery file would appreciate weight two implementations order use solve problem decently platforms support way back android", "d": "1/2015"}, {"body": "nothing actually asynchronous tests force benchmarkjs execute tests async manner ie putting call therefore make jquery test report later really nt want argue implementation change bluebird reputation crazy optimizations considered one fastest promisea impl nt understand trying prove", "d": "1/2015"}, {"body": "btw worth even disable async deferral bluebird marginally faster nt benchmarkjs could nt give exact ops number async tests diff fall margin error type thing", "d": "1/2015"}, {"body": "dmethvin sorry helping derail conversation oleg understood going yes would require feature detect forked codepath yay jquery would likely end adding code complexity boo think jquery position kind thing mixed past users miss debugging help tools understand trivial handle otherwise markelog benjamingr carried conversation promises performance would love feedback", "d": "1/2015"}, {"body": "woohoo expect release", "d": "3/2015"}, {"body": "already git builds compat formerly formerly betas following resolution blockers soon since biggest", "d": "3/2015"}, {"body": "awesome thanks ton", "d": "3/2015"}, {"body": "behavior change label missing ticket pay attention tickets label applied", "d": "11/2015"}, {"body": "duplicate", "d": "10/2014"}, {"body": "discovered put form div problem goes away", "d": "8/2017"}, {"body": "html parser browser parser act differently example throw exception use jquery instead use direct dom operations", "d": "10/2014"}, {"body": "familiar direct dom operations would equivalent using act differently firefox chromium safari opera see browser bug multiple browsers", "d": "10/2014"}, {"body": "yes equivalent operation two behave similarly browser attempts give error try make sense given may involve ignoring input see article", "d": "10/2014"}, {"body": "understand dropping input preventing developers seeing problem impediment debugging browsers fix bug innerhtml implementations also generate warning html", "d": "10/2014"}, {"body": "per article parsing lenient design browser give something like console warning jquery nt get involved process would need look console already many static html errors page nt give errors html injection via", "d": "10/2014"}, {"body": "console warning exactly think missing", "d": "10/2014"}, {"body": "polyergic nt think jquery job provide console warnings things browsers would easy implement today purpose otherwise devs would get flooded warnings jquery setter internally sets value browser generates warning using jquery claimed know better browser vendors warnings browser implements warnings get duplicate right thing logging anything", "d": "10/2014"}, {"body": "submitted bugs browsers", "d": "10/2014"}, {"body": "page throwing error due security problem nt call handlers error occurs xhr method request starts could trycatch call perhaps", "d": "10/2014"}, {"body": "original discussion changed months ago timmywil priority changed undecided high status changed new open component changed unfiled ajax changed months ago rwaldron applause changed months ago jaubourg owner set jaubourg status changed open assigned followup changed months ago markelog would suggest present method shorthand method like jquerygetpostgetscript therefore rename cache type options change signature beforesend jqueryajax expose localprotocols global config array instead eventually possible build jquery interface different tickets reply followup changed months ago scottgonzalez replying markelog would suggest present method shorthand method like jquerygetpostgetscript therefore rename cache type options change signature beforesend jqueryajax shorthand method complete replacement jqueryajax lots parameters bad api expose localprotocols global config array instead eventually possible build jquery interface different tickets except possible build intended without goal leave jqueryajax asis create new leaner simpler api reply followup changed months ago markelog complete replacement jqueryajax could complete replacement jqueryajax since presented functionality like could nt use jsonp script transports give alternatives nt given method name could nt use getjson shorthand method jqueryxhr since conversion list could continue lots parameters bad api arguments except possible build intended without quite localprotocols global config could implemented first jqueryajax could start using build option obviously need implement method first task purpose could make build option hence word eventually quote goal leave jqueryajax asis create new leaner simpler api could achieve jqueryxhr would presented shorthand jqueryajax would considered last resort method fear choose route could lead source confusion reply followup changed months ago scottgonzalez replying markelog could complete replacement jqueryajax since presented functionality misunderstanding wording replacement complete functionality jqueryajax complete replacement sense jqueryajax removed jqueryxhr added one main goals completely get rid jqueryajax jqueryxhr ca nt shorthand method quite localprotocols global config could implemented first jqueryajax could start using suppose nt think plans change apis around jqueryajax proposed path touch jqueryajax goal leave jqueryajax asis create new leaner simpler api could achieve jqueryxhr would presented shorthand jqueryajax would considered last resort method fear choose route could lead source confusion sure source confusion would happy talk potential confusion using jqueryxhr nt using jqueryajax docs would make clear reply changed months ago markelog completely get rid jqueryajax oh even jqueryxhr could functionality jqueryajax better api even would bold guess even deprecate jqueryajax proposed path touch jqueryajax designation localprotocols made inside ajax module public api consequance jqueryxhr introduction said ticket description make public property expose jqueryajaxsettings format question would recommend dealt jqueryxhr implementation would affect jqueryajax like convertors option could passed jqueryajax defined jqueryajaxsettings changed months ago scottgonzalez exposure localprotocols nt affect jqueryajax want would expect jqueryajaxsettings would nt used jqueryxhr changing actual default values ajax requests seems really bad changed months ago dmethvin definitely way change default settings since potential create havoc modular app like jqueryajaxsettings would also good clearly document method whether data sent url alternatively content body ambiguity whether methods like delete body recall ticket around somewhere changed months ago jzaefferer ticket description outlines options keep though consider adjusting well angualar http service seems like good reference specifically avoid confusion data separate params option params get appended query string data message body without ambiguity another aspect consider response object angular puts data status headers config properties single response object order fit promise changed months ago dmethvin yehuda mentioned code among things adapts ajax rsvpjs promise promisesa compliant changed months ago dmethvin milestone changed none changed months ago dmethvin duplicate ticket", "d": "10/2014"}, {"body": "decided create new ajax interface new release create plugin instead", "d": "10/2014"}, {"body": "original discussion changed months ago tde behavior jquery changed months ago dmethvin hi convert example inline example jsfiddlenet changed months ago mgol owner set tde status changed new pending changed months ago tde status changed pending new test case followup changed months ago timmywil status changed new closed resolution set notabug respecting borderbox outside scope width due fact specific methods account padding margin border innerwidthouterwidth truefalse width however use css width instead reply changed months ago anonymous replying timmywil respecting borderbox outside scope width due fact specific methods account padding margin border innerwidthouterwidth truefalse width however use css width instead clearly bug provided workaround want block border border border etc open mind reconsider shit documentation clearly states note width value sets content width box regardless value css boxsizing property changed months ago timmywil status changed closed reopened resolution notabug deleted valid documentation quote point making nevertheless seems edge case caused combining nonpx like em borderbox changed months ago timmywil owner changed tde timmywil priority changed undecided high status changed reopened assigned component changed unfiled css milestone changed none changed months ago timmywil afaict two routes take unit pixels skip widthheight augmentation completely historically dealt problems involving nonpx units exceptions also advantage small fix could something similar main tween convert necessary values set unit accurate could get expensive could potentially require loop width border margin padding order unify units value adjustment time width set imagine animating width thoughts changed months ago favor exploring size performance impact option may take stopgap meantime might reasonable option seems like overkill changed months ago timmywil perhaps could ensure units setpositivenumber call set value asis changed months ago joshua tausz discovered similar case expands scope bug using jquery chrome windows enterprise bug occurs types unit missmatch example provided initial report set width padding px border result width different behavior expected setting padding returns width would seem indicate translated adding width able use chrome builtin debugger trace code file function agumentwidthorheight returns reflect padding set either side unit attached specifically occurs line already part loop used add various values together type checkingconversion could handled inside existing loop coder go option value used function setpositivenumber value subtract line suggest using type conversion transmitting type value reported function agumentwidthorheight type conversion done line additional style missmatches cause issues suggest longer much edgecase changed months ago dmethvin milestone changed changed months ago timmywil milestone changed", "d": "10/2014"}, {"body": "ran bug bug expected behavior pointed setting width using works expected", "d": "10/2015"}, {"body": "accepted bug currently plan fix still lot though", "d": "10/2015"}, {"body": "original discussion changed months ago timmywil priority changed undecided blocker status changed new open component changed unfiled css milestone changed none looks valid reply description changed months ago francomalatacca replying jwagner css left problem style function called css function nt care percentage fix could adding support checking symbol end value compute percentage parent width fixed bug something type string amp amp ret rrelnumexec value fixes bug iexec value value ret ret parsefloat jquerycss elem name else value parsefloat jquerycss elem name parsefloat jquery elem parent css width ret ret thanks franco changed months ago owner set status changed open assigned changed months ago milestone changed changed months ago anonymous reproducible unit em popular units like cm etc need fix changed months ago dmethvin milestone changed", "d": "10/2014"}, {"body": "get soon", "d": "11/2014"}, {"body": "point done well compat needs done rides sunset", "d": "10/2015"}, {"body": "dmethvin please remember remove milestone amp add wontfix label closing bug wo nt fix", "d": "10/2015"}, {"body": "jogi wrong jsfiddle trying reproduce case correctly", "d": "10/2014"}, {"body": "examples seem working correctly describe trying behavior expecting behavior seeing", "d": "10/2014"}, {"body": "duplicate ticket", "d": "10/2014"}, {"body": "jogi case nt understand tblmf namenumasacmp gt undefined tblmf find namenumasacmp gt works firefox works", "d": "10/2014"}, {"body": "need something reduced kb html plus script unrelated issue", "d": "10/2014"}, {"body": "jogi ok reduced exemple", "d": "10/2014"}, {"body": "jogi see one thing remove line prop disabled false selector works correclty", "d": "10/2014"}, {"body": "jogi observation tblmf namenumasacmp gt undefined tblaa namenumasacmp gt work", "d": "10/2014"}, {"body": "removed superfluous markup script fiddle changed better insight something seems related sizzle combinator caching oldie", "d": "10/2014"}, {"body": "jogi problem input instead name nonstructassettemplate input length nonstructassettemplate find input length", "d": "10/2014"}, {"body": "actually problem clone versions well sure clone still reference sizzle cache object referent wreaks kinds havoc operation using maybe update fixclonenodeissues look remove attributes associated referenceequal clonesource properties", "d": "10/2014"}, {"body": "pr", "d": "10/2014"}, {"body": "per discussion decided good solution least bad solution clear sizzle expando correct", "d": "12/2014"}, {"body": "correct", "d": "12/2014"}, {"body": "please ping gon na update sizzle", "d": "3/2015"}, {"body": "mikesherov get review", "d": "11/2014"}, {"body": "changes provoked new issues meeting decided revert offending commit three branches tackle issue", "d": "2/2016"}, {"body": "changing sounds like breaking change might need wait added needs review label nt forget doubt mine", "d": "2/2016"}, {"body": "changing sounds like breaking change might need wait", "d": "2/2016"}, {"body": "hmm ok maybe mean surely break code may considered bug fix due description api wait fixes edge cases may break code least minor release though set milestone nt forget reschedule later", "d": "2/2016"}, {"body": "clear exactly going whether original report even bug could definitely use better unit tests somebody knew right answers smilecat", "d": "2/2016"}, {"body": "per mgol comment think making change safest option", "d": "3/2017"}, {"body": "conflicts stated official download page meant cdn distribution woundering removed npm bower releases clarify timmywil", "d": "10/2014"}, {"body": "yea fine removing bowernpm well", "d": "10/2014"}, {"body": "next version", "d": "10/2014"}, {"body": "done purpose idea people download files cdns install bower copy rarely might true though tools like fine change downside people copying files around using npmbower bundle longer see source maps", "d": "10/2014"}, {"body": "timmywil since involves jqueryrelease take one get", "d": "11/2014"}, {"body": "nt sizzle issue instead jquery think sizzle docs help", "d": "10/2014"}, {"body": "first pretty old tried latest version jquery second better way make custom selectors staabm pointed reopen bug", "d": "10/2014"}, {"body": "thank everyone help", "d": "10/2014"}, {"body": "fixed via", "d": "11/2014"}, {"body": "fixed via previous commit landed incorrect branch", "d": "11/2014"}, {"body": "wanting fix pr delete line url replace", "d": "10/2014"}, {"body": "nt delete wayback machine still content", "d": "10/2014"}, {"body": "could modify point wayback machine url", "d": "10/2014"}, {"body": "sounds like good idea broken links drive crazy timmywil intent seems simply give credit courtesy removing would fine well", "d": "10/2014"}, {"body": "arthurvr want send pr wayback link", "d": "10/2014"}, {"body": "opened", "d": "10/2014"}, {"body": "pr merged", "d": "11/2014"}, {"body": "work sizzle requires first argument string assuming implementation presumably empty includes based exclusion inclusion within could light enough would", "d": "10/2014"}, {"body": "sorry nt understand objection meant form something like first comes mind question filter elements elementarray context provided oktober mesz schrieb richard gibson notifications githubcom work sizzle requires first argument string assuming implementation presumably empty includes based exclusion inclusion within could light enough would reply email directly view github diese nachricht wurde von meinem androidmobiltelefon mit mail gesendet", "d": "10/2014"}, {"body": "fan argument since selection via expressed without extra confusing twoargument variants think latter clearer cases nt great value adding another overload way clearly possibility compat problems since eight years code would nt expect interpretation already many overloads", "d": "10/2014"}, {"body": "yeah probably right", "d": "10/2014"}, {"body": "please recheck also jquery old unsupported newest version", "d": "10/2014"}, {"body": "also please attach complete test case jsfiddlenet show expect hard guess problem gist", "d": "10/2014"}, {"body": "iirc zoom related issues used wo nt fix nt currently appear case", "d": "10/2014"}, {"body": "mzgol ca nt set body zoom jsfiddle well jsbin please check safari page loaded body zoom", "d": "10/2014"}, {"body": "mzgol safari get", "d": "10/2014"}, {"body": "tgfjt thanks test case used work safari sigh", "d": "10/2014"}, {"body": "mzgol oh yes safari case body zoom value zoom", "d": "10/2014"}, {"body": "could check styling check instead idea solves issues though cc mikesherov", "d": "10/2014"}, {"body": "chrome got safari got got", "d": "10/2014"}, {"body": "rwaldron thank comment btw let know wo nt fix list", "d": "10/2014"}, {"body": "tgfjt", "d": "10/2014"}, {"body": "mzgol thank", "d": "10/2014"}, {"body": "yes think issues zoom reliably detect zoom level impossible adjust results problem compounded using etc round integers losing data", "d": "10/2014"}, {"body": "think agree supporting zoom related issues something like bog bog nt understand wrong detection fix", "d": "10/2014"}, {"body": "problem compounded using offsetwidth etc round integers losing data might safer use higher numbers wo nt even increase size safe probably wo nt handle cases least little less vulnerable", "d": "10/2014"}, {"body": "something", "d": "10/2014"}, {"body": "mzgol suppose could play numbers bit common zoom values would fooled sure offsetposition methods work properly conditions would problem user calls forcing zoom pretty antisocial thing seem like try fix", "d": "10/2014"}, {"body": "dropping support ie lt stop adding zoom body", "d": "11/2014"}, {"body": "fixed nt know github nt autoclose", "d": "12/2014"}, {"body": "autocloses things land master compatonly bugs pulls done manually", "d": "12/2014"}, {"body": "dmethvin ah explains lot", "d": "12/2014"}, {"body": "mzgol great thank", "d": "12/2014"}, {"body": "since releasing fix depended us dropping happening jquery moving wontfix", "d": "11/2015"}, {"body": "couple points ca nt superset xhr native version nt method ca nt one since browser sends default set headers would way get facilitate debugging test automation struggling sustain current size jquery whereas feature would pretty limited use slowly deprecating method replacing new interface", "d": "10/2014"}, {"body": "microsoft bug report put fix definitely would need feature detect since browser sniff cause bad behavior bug fixed", "d": "10/2014"}, {"body": "nt able find official bug reports similar issue discussed stackoverflow deals issue whether checkbox becomes clicked state also discusses feature detect could adapted check event", "d": "10/2014"}, {"body": "leongersen nt able find official bug reports could report one", "d": "10/2014"}, {"body": "already", "d": "10/2014"}, {"body": "thanks report", "d": "10/2014"}, {"body": "leongersen oops changed", "d": "10/2014"}, {"body": "general resolution process like ie team fix end potentially even slipstream patch next months happy coordinate sort fixes browser vendors good web devs part charter look adoption rate new jquery versions likely sites would nt actually fix months even years meantime recent versions jquery would bloated dozens rare edge cases majority developers would never encounter prefer see problems addressed directly browser vendors depending feedback add workarounds impact high vendor nt planning quick fix", "d": "10/2014"}, {"body": "understandable policy seems unlikely microsoft fix older versions internet explorer got hand aware testing document modes may reflect actual browsers seem share issue inconsistencies event pseudo selector fixed jquery core would prefer see plugins provide patchworkaround", "d": "10/2014"}, {"body": "goes way back likely need look fix inside jquery original report made sound like problem made fiddle little info event order fix still work keyboard use well want sure patch actually bringing ie compliance written standard none seem helpful defining interaction checkbox mention references talk ie team see reason current behavior history aside nt look like sizzle support yet selector seems safe need add non queries work sure widely implemented browser moment tracked", "d": "10/2014"}, {"body": "written fix feature detect issues event state keyboard support issues force browsers others false force takes lines fix issues wrapped small library together helpers github tests docs yet behaviour nt properly defined spec perhaps jquery nt force", "d": "10/2014"}, {"body": "referred back internet explorer team address suspect resolution ie adopt safarichromefirefox behavior hopefully clarify standard", "d": "11/2014"}, {"body": "probably issue apijquerycom repo nt", "d": "10/2014"}, {"body": "yes also would help suggest wording easier understand proposed ideally would pull request page", "d": "10/2014"}, {"body": "ca nt use one things handler might ask server requests progress want stop exit lose work user cancel damage would still done agree dependency unfortunate undesired", "d": "10/2014"}, {"body": "could guard whole block though basically restricting fix complete builds", "d": "10/2014"}, {"body": "anything special event effects module hack relative oldie plus already guard checking presence object although code path executed newer version ie ca nt use method directly", "d": "10/2014"}, {"body": "guarding block works justifies listed dependency suppose markelog remembered falsely seems nt work perhaps check feature detect attach way problem supposed fixed nt present", "d": "10/2014"}, {"body": "perhaps check attachevent feature detect attach way think yes provide patch today", "d": "10/2014"}, {"body": "would failed unit tests", "d": "10/2014"}, {"body": "nevermind looking wrong tests entirely wrong function", "d": "10/2014"}, {"body": "docs argument always plain javascript object types object dom elements primitive stringsnumbers host objects may give consistent results across browsers", "d": "10/2014"}, {"body": "going post", "d": "10/2014"}, {"body": "nt bit early inside jquery line person using knows whether environment going nt know", "d": "10/2014"}, {"body": "yes probably early wanted get general feedback", "d": "10/2014"}, {"body": "hard argue one line code smilecat environment know maybe phonegapcordova app year two could handy nt think keep ticket open amount time though", "d": "10/2014"}, {"body": "agree", "d": "10/2014"}, {"body": "slick", "d": "10/2014"}, {"body": "going drop screenshot code becomes common syntax comparison useful", "d": "10/2014"}, {"body": "love see would make using jquery babel palatable", "d": "5/2015"}, {"body": "know actually", "d": "5/2015"}, {"body": "cool natively even simple", "d": "5/2015"}, {"body": "biggest problem size guess following increases gzipped size bytes forms seem larger", "d": "5/2015"}, {"body": "since definite decision yet let reopen", "d": "5/2015"}, {"body": "concept already described jakearchibald dec nodelist", "d": "5/2015"}, {"body": "decided going taking", "d": "6/2015"}, {"body": "pr", "d": "6/2015"}, {"body": "chrisantaki want take", "d": "10/2014"}, {"body": "sure markelog", "d": "10/2014"}, {"body": "markelog discussed irc small fix good note changes undocumented nonpublic data structures need advance notice firefox dev tools gropes find real handlers cry would nt want reorganized", "d": "10/2014"}, {"body": "thanks heads dmethvin", "d": "10/2014"}, {"body": "update might memory leak due recursion digging", "d": "10/2014"}, {"body": "good news test causing memory leak", "d": "10/2014"}, {"body": "fixed version test shows performing faster", "d": "10/2014"}, {"body": "like pay bytes speed caching regex recursion new parameter added method", "d": "10/2014"}, {"body": "get fancy speed bytes instead new parameter ask moonlight cache bearer agrees course", "d": "10/2014"}, {"body": "summary original jsperf test memory leak fixed increased performance beyond two ways increase performance found steps forward recommend going branch either since increases clarity code introducing new variable name downside branch byte cost minified amp gzipped branch costs bytes pretty clever fear less readable branches improve performance around sure sold merging either changes though working fun especially branch", "d": "10/2014"}, {"body": "chrisantaki consider removing recursion entirely", "d": "10/2014"}, {"body": "nope give try", "d": "10/2014"}, {"body": "markelog removing recursion added bytes nt seem increase performance perhaps implementation could improved", "d": "11/2014"}, {"body": "wow unsettling check closely", "d": "11/2014"}, {"body": "thank chris good result", "d": "11/2014"}, {"body": "believe misconfigured according jsperf faq referenced benchmarkjs documentation run outside test test cover many code invocations test latter link particularly illuminating point actually tested every case various signatures element matching handlers since first code invocation test would pulled underneath subsequent attempts", "d": "11/2014"}, {"body": "might mean original test misconfigured", "d": "11/2014"}, {"body": "seeing amp run times two test cases pretty sure test gets many test loops", "d": "11/2014"}, {"body": "samples test loop events perf amount much lower means one test execution measured correctly others nt words still shows problem nt give precise numbers common mistake checked thoroughly jdalton mathiasbynens right", "d": "11/2014"}, {"body": "way jsperf works setup run clocked test loop ran something like removing elements want ensure test right number elements remove setup tear access loop count via use create number events elements whatever removed drag overall responsiveness harness tests heavy setup experimentation needed see good fit test", "d": "11/2014"}, {"body": "jdalton btw possible weaken spam filter middle creating correct test blocked spam filter problem raise couple times us like", "d": "11/2014"}, {"body": "possible weaken spam filter pain real looking moving github authentication could use help pr", "d": "11/2014"}, {"body": "pain real try help get free time back business chrisantaki could redo tests", "d": "11/2014"}, {"body": "sure markelog move test cases run every loop", "d": "11/2014"}, {"body": "check link previous comment could", "d": "11/2014"}, {"body": "sounds good nice catch", "d": "11/2014"}, {"body": "branch bytes chrome firefox jsperf jquery amp amp link namespaceregex bytes amp amp link eventremovewithoutrecursion bytes amp amp link units opssec values amp perhaps jsperf checklist could benefit future discussions memory leaks prevented use method must done per test loop must use help target specific iterations", "d": "11/2014"}, {"body": "least chrome looks like removing event namespace faster removing individual event", "d": "11/2014"}, {"body": "yes surprised make tests verify", "d": "11/2014"}, {"body": "really like thorough analysis wish prs regex version end nt look big really adds much benchmarks nt making strong case change", "d": "11/2014"}, {"body": "agreed dmethvin ready move namespace based removal nt bad shape like originally suspected", "d": "11/2014"}, {"body": "best patch one nt change anything thank chris", "d": "11/2014"}, {"body": "please talk rxaviers instead building one scratch", "d": "10/2014"}, {"body": "please whoever going work get touch ideas share", "d": "10/2014"}, {"body": "issue probably closed duplicate", "d": "10/2014"}, {"body": "say way around issue older right", "d": "10/2014"}, {"body": "actually older port nt really matter comments", "d": "10/2014"}, {"body": "online builder answer think question purpose problem really solving online download builder target users", "d": "11/2014"}, {"body": "people want custom builds look githubcom example using custom build ember work small subset well pretty advanced users though hypothesis requiring user pull whole repo possibility dependencies broken since time released understanding grunt command line options custom build work users willing go could right still wo nt people looking sure determine without building", "d": "11/2014"}, {"body": "dave thanks answers completely understand agree people want custom builds although like dig little bit current hypothesis takes brazilian internet connection big ran developer currently allows one cherrypick whatever jquery piece need want improve numbers using download builder nt understand dependencies problem nt locked", "d": "11/2014"}, {"body": "goals tbd edit comment points clarified allow developers willing use cli understand grunt options use amd customize jquery provide stable freezed dependencies build environment obs goals going changed case decide distribute consumable modules instead monolithic like ui mobile globalize", "d": "11/2014"}, {"body": "nt understand dependencies problem nt locked specify concrete versions direct dependencies dependencies dependencies vague control break future way control would use many ways broken even someone may unpublish version library depend break way sure would commit dependencies would boost repo size extremely every dev perfect solution", "d": "11/2014"}, {"body": "got thanks goals updated", "d": "11/2014"}, {"body": "rxaviers dependencies dependencies mostly wrote even someone may unpublish version library depend break scenario rare possible", "d": "11/2014"}, {"body": "simplified goals thanks", "d": "11/2014"}, {"body": "separate repo used download builder could shrinkwrap commit dependencies repo would need committed every release final betas agree tried committing dependencies publishing bower npm people would come us torches pitchforks since projects would massively bloated want one thing minified file", "d": "11/2014"}, {"body": "dependencies issue want point download builder falls problem developers using cli download builder fetch dependencies deploy exposed risks pointed broken unpublished dependencies difference manage download builder environment responsible provide fix somehow still need way prevent problem really think problem", "d": "11/2014"}, {"body": "mzgol use npm shrinkwrap many ways broken could point issue", "d": "11/2014"}, {"body": "markelog use npm shrinkwrap many ways broken could point issue top head generally creating mismatches causes silent failures ignores shrinkwrap file shrinkwrap project may cause trigger excessive network requests nt idempotent ad update dependency instead commit ensure installed exactly specified remove update package regenerate shrinkwrap file commit changes ad first list wanted avoid problem insert running special cleanup scrip point last list angular team sth like pretty sure making mistakes process amp fixing shrinkwrap pipeline believe involved process nt happened yet npm earliest", "d": "11/2014"}, {"body": "none matters shrinkwrapping time release would nt existing", "d": "11/2014"}, {"body": "wow synchronicity outlines problems proposes solution", "d": "11/2014"}, {"body": "unless plan make jquery metaproject ship smaller standalone libraries like think would great idea suggested solution slightly different problem hate thatguy frequently point handcrafted perlibrary build tools antipattern h andcrafted perlibrary build tools add complexity already complex problem one things say modularity javascript nearly every library consumer agrees vehemently people nt want ship code nt use one solution custom builds via build tools especially useful solution world globals dominant module system happen small dependency graph apps get complicated dependency graph grows custom builds start add rather subtract complexity example imagine library x really composed smaller parts ship x standalone package hear projects use parts use etc build tool lets one project define smaller subset x dependency begin combine multiple projects depend different subsets x run trouble let say project depends possibly ships project depends possibly ships leave consumer know need custom build eat cost shipping bits twice dependencies depend x likely ship gt mistake best idea heard resolving problem goes like author modules transpile builds support amd cjs retain modularity also ship globals build people prefer people need ship minimal code allow treeshake preferred module syntax supports treeshaking application build time instead library build time", "d": "11/2014"}, {"body": "module first approach monolithic build exception like sounds good trek nodebased tool chain would describe box", "d": "11/2014"}, {"body": "module approach core could take look globalize modules granular source files assembled functional groups similarly could jqueryjs base jqueryajaxjs jquerydeferredjs module approach pushing handcrafted build tools onto consumers using internally assemble consumabledist modules", "d": "11/2014"}, {"body": "jaubourg tooling exists several options one recommend integrating existing build process trivial sample one using broccoli repo example authoring small project transpiling amd cjs globals npm publishing also see readme info", "d": "11/2014"}, {"body": "note wanted made folder contain files authored modules would breaking change since publish npm would require bumping major version going seems like good moment one way compatible module formats would transpile amd commonjs put output files would make package larger surely make people complain size already thing consider", "d": "11/2014"}, {"body": "happy help however ember already using modules able everything else shake part application build process hugely valuable already tried gruntbased custom build back ran problem described say confidence would nt use custom build tool angular also module based imagine boat probably subset users would use build tool suggesting making small wrapper around real modules setup", "d": "11/2014"}, {"body": "one way compatible module formats would transpile amd commonjs put output files would make package larger surely make people complain size already thing consider chime place publish modules strongly urge reconsider putting compile source version control future versions sure keenly aware many annoying problems causes really love larger projects come together help bower solve us note wanted made folder contain files authored modules would breaking change since publish npm would require bumping major version going seems like good moment worry get today without breaking public api needing version bump start authoring modules somewhere else eg add src wo nt end version control add wo nt npm compile add pre postpublish scripts source source control github npm build npm source control nt contain built assets npm nt contain authoring files precisely demonstrates building notice nt appear anywhere source gitignored relevant entry entry points distcjsindexjs authoring code nt pollute npm npm ignored", "d": "11/2014"}, {"body": "also popular converter want author modules use language features", "d": "11/2014"}, {"body": "example using", "d": "11/2014"}, {"body": "jquery amd format leverage get custom builds could optimized use requirejs calculate dependencies get functions amd naming conventions names variables filename jquery follows exceptions core jquery amp sizzle sizzle knowledge wrap callbacks iifes assign returned values variables named script name yields something like functions looking variable value add iife wrapped functions output variable requirejs load needed functions custom build allow user download custom build proof concept wrote fun expecting anything", "d": "12/2014"}, {"body": "settling amd marriage convenience us time nt standard seemed better plus previous custom build system definitely adhoc much uglier point would lean towards using modules tool like transpile amd modules something like could still use amd files custom build though check jquery ui builder anything learnborrow", "d": "12/2014"}, {"body": "nt think likely get time release strictly tied release", "d": "1/2015"}, {"body": "closing favor tracking roadmap", "d": "11/2015"}, {"body": "atleast builder jquery divided libraries example wanted use dom manipulation part jquery nt want ajax included increase file size using module like jquerylibscoredom would great reduce file size", "d": "4/2016"}, {"body": "srahulprdxn use amd modules purposes", "d": "4/2016"}, {"body": "mgol thanks lot addressing exactly needed", "d": "4/2016"}, {"body": "see great discussion current state shadow dom think implementation start plugin evaluate utility stability let close ticket watch spec evolve risk anyone letting us forget say still bit early add support shadow dom", "d": "10/2014"}, {"body": "version jquery boolean supported parameter", "d": "10/2014"}, {"body": "please nt post incomplete bugs start someplace like stack overflow create ticket minimal test case post created jsbincom jsfiddlenet", "d": "10/2014"}, {"body": "dmethvin nt post bugs github issue log nt bug code bug source suggest reading post understanding closing", "d": "10/2014"}, {"body": "post minimal test case jsbincom jsfiddlenet change mind honestly opening issue nt yet looked code reason meaning nt spent enough time post issue code snippet nt runnable asis", "d": "10/2014"}, {"body": "dmethvin agreed tried creating jsfiddlejsbin nt think work expect", "d": "10/2014"}, {"body": "must make jsfiddle modern browser use draft feature checkout", "d": "10/2014"}, {"body": "pretty sure jsfiddle also work appended url created elsewhere main concern original post describes bunch confounding code like bootstrap nt versions document positions important things like jquery shiv real minimal running test case important reopen pending test case", "d": "10/2014"}, {"body": "arthrvr ca nt even log jsfiddlenet old method using longer works perhaps could try instead speculating regardless ticket reopened also agree lot code could create quick demo would absolutely", "d": "10/2014"}, {"body": "adding toolbar even mode perhaps toolbar works nt third url see pattern", "d": "10/2014"}, {"body": "post full working page somewhere want sure complete running test case agree broken", "d": "10/2014"}, {"body": "mzgol actually forgot jshell looking thanks dmethvin jshell able provide example hopefully validate issue alright keep ticket closed originally", "d": "10/2014"}, {"body": "dmethvin perhaps add docs nt really get try hard make site destined js testing work nt make sense contact jsfiddle could ask easy way get raw url nt find url manually every change", "d": "10/2014"}, {"body": "stupid question probably jsbin support", "d": "10/2014"}, {"body": "jaubourg nope stays like", "d": "10/2014"}, {"body": "okay made test case post comment update original question testing even finding incorrect nt necessarily solve issue nt started adding pseudoselectors like element able locate newly created element still demo shows bug prefixed colon handled using jquery using pseudoselectors least consistent finding elements whether includes prefixed elements dmethvin please let know satisfactory", "d": "10/2014"}, {"body": "arthurvr jaubourg seems jsbin commited try support even occasionally break still better jsfiddle situation though preview works unlike jsfiddle unless weird things see probably stop advising create examples jsfiddle favor jsbin", "d": "11/2014"}, {"body": "mzgol agreed", "d": "11/2014"}, {"body": "jsbin preview also nicer iframes preview jsbin appends link body way less likely break way", "d": "11/2014"}, {"body": "let us know problem still exists including html shiv", "d": "11/2014"}, {"body": "close pending info", "d": "12/2014"}, {"body": "guess jsbin output clear enought", "d": "2/2016"}, {"body": "run across old nonjquery bug simple", "d": "2/2016"}, {"body": "right already using inside tag", "d": "2/2016"}, {"body": "dmethvin nt know much haste closing issue nt determined irrelevant burden proof created example still available others confirmed issue burden proof close issue longer relevant patch information given needs patch test issues remain open confirmed exist anymore fact nt leads question many issues actually still known shown nt respond git commentsemails nt contributed information addresses patch issue sorry nt realize needed info however continual preemptive closing lack confidence issue exists without testing also discouraging sends message weusers nt report bugs even maybe stop using library maybe solution stop using library nt want support people option nt able download use another browser use jquery keep mind close issue may still exist users worldwide community mention invested time reporting bug effort post format following users closed quickly without appreciation effort time disheartening want make process better next time us", "d": "6/2016"}, {"body": "problem option users still using way far know today work around giving nonstandard element id selecting id eg foo agree jquery bug problem problem", "d": "3/2018"}, {"body": "nt invalid document inline elements ca nt contain block elements", "d": "10/2014"}, {"body": "yes perfectly correct jquery bug submitted bug sorry firefoxgecko webkitblink behaves differently met nonstandard behaviour", "d": "10/2014"}, {"body": "think diagnoses cause wondering left rfc actually standard", "d": "10/2014"}, {"body": "weird supported via activex supported via native xhr oo", "d": "10/2014"}, {"body": "fiddle works fine browserstack see screenshot windows unable reproduce reported bug", "d": "11/2014"}, {"body": "guessing might issue ie vm native windows user help test", "d": "11/2014"}, {"body": "guessing might issue ie vm native windows user help test dmethvin", "d": "11/2014"}, {"body": "ie vm think nt difference ie vm real ie diff could versions different tomchentw could post ie versions mzgol could", "d": "11/2014"}, {"body": "could nt reproduce ie windows ie windows", "d": "11/2014"}, {"body": "mzgol could sure although afaik nt updated drastically lifetime works browserstack windows windows windows oh hoped browserstack updating often local machines windows image windows private windows copy installed via bootcamp run via parallels", "d": "11/2014"}, {"body": "tomchentw might mean policy restrictions browser", "d": "11/2014"}, {"body": "mzgol markelog clean installed yosemite took time reinstall modernie yes ca nt reproduce fiddle works perfectly however switch frameworks amp extensions run working issue ideas", "d": "11/2014"}, {"body": "however switch frameworks amp extensions jquery jquery run working issue ideas ahh silly basically actually points latest commit jquery version nt support ie lt recreate fiddle much responsive jsfiddle maintainers used already fixed links via pr please read context", "d": "11/2014"}, {"body": "ok click", "d": "11/2014"}, {"body": "windows via browserstack local vm getting errors logged windows via browserstack see error sorry fuss versions wasting everyone time remembered change made edit fixed responses pasted wrong ones", "d": "11/2014"}, {"body": "ok click run js thanks update updated first post thread point jsbin got result", "d": "11/2014"}, {"body": "btw jsfiddle fixed links amp names edge versions", "d": "11/2014"}, {"body": "wow great open source", "d": "11/2014"}, {"body": "could activex xhr nt cooperate cors least patch requests ideally would jquery compat xhr ie request local use activex one ie use native xhr using sth different use activex using one use native xhr right nice able without uasniffing", "d": "11/2014"}, {"body": "could always use native xhr crossdomain requests ie lt nt cors anyway people might rely crossdomain patch requests working via xdomainrequest understand correctly", "d": "11/2014"}, {"body": "shows error", "d": "11/2014"}, {"body": "sorry gone around bit want sure understand stands two comments mzgol correct summary", "d": "11/2014"}, {"body": "tomchentw summarize current state issue let us know whether still exists", "d": "11/2014"}, {"body": "let us know problem still exists reopen", "d": "12/2014"}, {"body": "dmethvin already updated first post believe clear enough repost hey guys sure proper submit issue really edge case reproduce prerequest using jquery http method crossorigin request browser setup thanks relative easy reproduce jsfiddle however since requiring cors pr merged amp amp deployed forked setup server thanks heroku reproduce please visit jsfiddle see error tested virtual box vm one confirm issue exists native windows open link chromefirefoxsafari works like charm however code setup jquery works fine across possible cause dug code found differences creating object code using method absence regex statement use old maybe nt support method", "d": "12/2014"}, {"body": "tomchentw could check works submitted pr patch", "d": "3/2015"}, {"body": "currently nt ie environment test", "d": "4/2015"}, {"body": "jsfiddle broke jquery edge urls apparently jquery compat edge amp jquery edge swapped see better use jsbin edit jsfiddle fixed", "d": "4/2015"}, {"body": "closed via laded", "d": "5/2015"}, {"body": "created know sites links make sure tracked well", "d": "10/2014"}, {"body": "created", "d": "10/2014"}, {"body": "created", "d": "10/2014"}, {"body": "guys going handle releasenotesjs", "d": "10/2014"}, {"body": "arthurvr script replaced logic jqueryrelease format bit cleaner consistent using commitplease commit messages also notice reference bugs npm page harm leaving bugsjquerycom page supposed help people selftriage issue reduce number spurious tickets handle core page unclear work fixing", "d": "10/2014"}, {"body": "dmethvin correct think references repos removed open pr according github search nt references", "d": "10/2014"}, {"body": "landed thanks modify commit message little please look", "d": "10/2014"}, {"body": "little extra thing regarding topic irc channel must changed", "d": "12/2014"}, {"body": "thanks changed", "d": "12/2014"}, {"body": "thanks dmethvin", "d": "12/2014"}, {"body": "bug triggering click child bubbles parent invoking handler ad infinitum", "d": "10/2014"}, {"body": "documentgetelementbyid qwer click inside work", "d": "10/2014"}, {"body": "sorry ca nt understand infinitum loop", "d": "10/2014"}, {"body": "test case test case browser might protecting triggering another click handler first one reopen let see others say", "d": "10/2014"}, {"body": "dom example cals dom method element jquery example fires event given element none handlers prevent default action call dom method asked afaict", "d": "10/2014"}, {"body": "yeah mainly wondering nt bubble forgot bubbling default native event apis killing corrected fiddle yeah everything works expected alexufo need remember native dom sth totally different dispatched click event see linked fiddle", "d": "10/2014"}, {"body": "yeah impossible fix without breaking lot existing code might possible majorpoint release though ticket still open", "d": "10/2014"}, {"body": "thank reply dmethvin case doc issue page reports number returned dimensionsrelated apis including width may fractional cases nt true agree", "d": "10/2014"}, {"body": "think still dimension cases fractional start math border padding widths root problem use always integer part calculation", "d": "10/2014"}, {"body": "see thank pointing case propose add note pointing issue feel free close issue duplicate", "d": "10/2014"}, {"body": "never documented use outside library please use documented interfaces", "d": "10/2014"}, {"body": "", "d": "10/2014"}, {"body": "would like take", "d": "10/2014"}, {"body": "assume specific jquery core meaning addition repo jqueryrelease right", "d": "10/2014"}, {"body": "yes yes", "d": "10/2014"}, {"body": "installing url package please seek help stack overflow bower package used many users certain contains required files", "d": "10/2014"}, {"body": "jquery version browser version google chrome", "d": "9/2014"}, {"body": "passing complex html browsers may generate dom exactly replicates html source provided mentioned jquery uses browser innerhtml property parse passed html insert current document process browsers filter certain elements elements result elements inserted may representative original string passed", "d": "9/2014"}, {"body": "seems bit strange could argue elements instead parsed wrapping something correctly transformed dom elements see guess special cases like also special strategy parsed", "d": "9/2014"}, {"body": "idea fix please share happy consider proper pr", "d": "9/2014"}, {"body": "mjesun keep mind though need create full html document starting element pretty rare cases pointed currently fix rare attempts fixing bulletproof usually sufficient really need create full document take look domimplementationcreatehtmldocument", "d": "9/2014"}, {"body": "documented accept array object arguments anything else undefined behaviour domain", "d": "9/2014"}]