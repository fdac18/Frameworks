[{"title": "scguidfor breaks calling scobjectcreate", "body": "create new instance object without passing hash duplicate guids returned object example var foo scobjectcreate var bar scobjectcreate foo bar false scguidfor foo scguidfor bar true", "num": "49", "d": "6/2011"}, {"title": "computed properties array using nt properly update", "body": "javascript windowx scobjectcreate function var sum thisget x foreach function sum sum return sum property x class windowy scobjectcreate ybinding xy class yget xget x pushobject yget javascript windowx scobjectcreate function var sum thisget x foreach function sum sum return sum property xlength class windowy scobjectcreate ybinding xy class yget xget x pushobject yget using instead length array attribute makes computed properly update expected", "num": "43", "d": "6/2011"}, {"title": "unable use inside helpers", "body": "basically render anything view content property array property written couple specs show detail bug error part happy work fix", "num": "41", "d": "6/2011"}, {"title": "integer property causes error template fetched head element", "body": "hey something messed current master branch rendering integer values templates working example template directly view almost example template fetched script head element raises error thing works fine beta looks like bug method tries call buffer string case nt method", "num": "40", "d": "6/2011"}, {"title": "templates inside views compiled incorrectly", "body": "hi example issue example uses alpha issue master branch could nt find public url newer version anywhere run raises error console looking global object case course ca nt find objects", "num": "39", "d": "6/2011"}, {"title": "make computed properties cacheable default", "body": "fighting bug hours realized expectations computed properties wrong basically creating array computed property rendering collection element click element view would modify computed property updated drove crazy wrong assumption using computed property would recreate new object every time solution course use cacheable computed property please consider using cacheable default since would probably save lot frustration", "num": "38", "d": "6/2011"}, {"title": "doc clarity handlebars registerhelper passed key string value standalone handlebars passes object", "body": "perhaps intended edit intended well documented seems like documentation actual value passed helper javascript test scapplicationcreate handlebarsregisterhelper simplehelper function myprop context logs myprop string consolelog myprop typeof myprop would expect actual object myprop actual object lt true bound something return output template html simplehelper myprop know without data bindings property complex example data", "num": "37", "d": "6/2011"}, {"title": "expected constant", "body": "sproutcore beta produces following error", "num": "36", "d": "6/2011"}, {"title": "tests nt run ie", "body": "tested ie looks like spade related issue issue also filed", "num": "30", "d": "6/2011"}, {"title": "rake task fails", "body": "setup mac ruby rake fails following error message hacked rakefile command worked sure whether right approach", "num": "27", "d": "6/2011"}, {"title": "scbutton use relative paths target proprety", "body": "entirely sure intended behavior moving forward scbutton wo nt accept paths relative target property eg thinking buttons used larger components like controls audiovideo tags adding argument changes behavior enable relative path lookup retains global lookup", "num": "22", "d": "6/2011"}, {"title": "rendering nested collections", "body": "recent changes way views get rendered ie waiting bindings synchronise first seems broken rendering nested collections written failing test case illustrate issue equivalent test case passes run code prior commit introduced view changes app using form nested collections lot ie binding content view property parent view correct way bug valid different way nested collections", "num": "20", "d": "6/2011"}, {"title": "observesbefore suspended bindings flush", "body": "property changed binding synchronizing observesbefore get called bindings finish flushing effectively means observers get called time regular observers believe due fact observer notifications suspended bindings flush", "num": "16", "d": "6/2011"}, {"title": "screnderbuffer elementcontent correctly concatenated", "body": "hey found little issue writing custom function steps replicate result expected reason uses comma default delimiter arguments passed", "num": "14", "d": "6/2011"}, {"title": "template bug", "body": "inside templateview span tag another span binded class attribute supposed change custom actions problem binded classname gets applied outer span view inner span bind attribute defined complete example illustrates behaviour based sc starterkit", "num": "12", "d": "6/2011"}, {"body": "tested jsfiddle able get work feeling need reference parentview work done wip branch call parentview implicitly", "d": "6/2011"}, {"body": "ebryn thanks ton using works like charm app well glad hear work done wip branch strange call access properties blocks expected thanks", "d": "6/2011"}, {"body": "ebryn trouble context classnamebindings snippet updated jsfiddle works expected note specify three different contexts get work properly complete jsfiddle", "d": "6/2011"}, {"body": "believe happening create views hierarchy navigate get data believe kind thing wycats working fixing wip", "d": "6/2011"}, {"body": "tried wrapping template function", "d": "6/2011"}, {"body": "tried jsfiddle looks like renders source code compiled handlebars template exactly want", "d": "6/2011"}, {"body": "bad check tests might point right direction", "d": "6/2011"}, {"body": "small update moving templates view classes script elements head seems fix issue likely bug", "d": "6/2011"}, {"body": "think cacheable default someone create another ticket saying cached default would save lot frustration make", "d": "6/2011"}, {"body": "disagree reasons oftenwhy would create computed property relies creation new objects every time dependency changed quite straight forward add another method avoid caching mechanism let people opt feature expectation new user using property keeps content function sync dependencies really true using cacheable computed property creates objects otherwise previously defined properties related non cached computed property objects point older version object still memory refence still exists gc wo nt collect object easy way know reference one might expect would say change suggested implemented warningerror raised property points old reference note second option much harder implement probably quite messy", "d": "6/2011"}, {"body": "think trying get value property use scgetpath myprop", "d": "6/2011"}, {"body": "someone confirm whether intended behaviour also got tripped handlebarsjs using sproutcore value property string gets passed helpers", "d": "6/2011"}, {"body": "would imagine intended behavior considering helpers written like get value use scgetpath", "d": "6/2011"}, {"body": "would nt return something along lines generic class necessarily specific instance example nt return anything replace code call helper likely since value", "d": "6/2011"}, {"body": "check think want", "d": "6/2011"}, {"body": "thanks think could least documentation edit since standalone handlebars opposite functionality keep ticket open modify title bit", "d": "6/2011"}, {"body": "slexaxton order sproutcore handlebars support automatic data binding helpers need know path value object passed helper handlebars makes possible implementations modify compiled javascript code modify compilation process convert foo bind foo emulate behavior default helpers looking value property current context helpers receive also setting observer current context property update html needed means custom sproutcore handlebars helpers different semantics custom standalone handlebars helpers builtin helpers behave added benefit live", "d": "6/2011"}, {"body": "quite bit helpful info sounds good suggestion would make clearer docs potentially even handlebars since getting info using sproutcore obviously docs hard tedious code still beta pressure etc trying figure stuff", "d": "6/2011"}, {"body": "agree needs documented sure documented guessing handlebars guide sc", "d": "6/2011"}, {"body": "", "d": "6/2011"}, {"body": "tite", "d": "6/2011"}, {"body": "ie support worked right works pretty much", "d": "6/2011"}, {"body": "got local branch fixes coming soon", "d": "6/2011"}, {"body": "", "d": "6/2011"}, {"body": "default instead usascii try adding bashrc run problem often", "d": "6/2011"}, {"body": "implemented pull request", "d": "6/2011"}, {"body": "pull request merged", "d": "6/2011"}, {"body": "simpler case also nt work bindings involved two collections one collection nested inside another javascript test render nested collections function templatetestsinnerlist sccollectionviewextend tagname ul content one two three templatetestsouterlist sccollectionviewextend tagname ul content foo var view scviewcreate template schandlebarscompile collection templatetestsouterlist class outer content collection templatetestsinnerlist class inner content collection collection scrun function viewappend equals view ulouter gt li length renders outer list correct number items equals view ulinner length inner list exsits equals view ulinner gt li length renders inner list correct number items", "d": "6/2011"}, {"body": "verify test nt passing master", "d": "6/2011"}, {"body": "yehuda fixed master verify crofty", "d": "6/2011"}, {"body": "superb works thanks yehuda", "d": "6/2011"}, {"body": "fixed", "d": "6/2011"}, {"body": "thanks catch fixed master", "d": "6/2011"}, {"body": "appears fixed release starter kit pushing momentarily", "d": "6/2011"}, {"body": "fixed css link thanks could nt find error code example still would mind reproducing error", "d": "6/2011"}, {"body": "fixed thanks", "d": "6/2011"}, {"body": "fixed latest readme updatespade gem release", "d": "6/2011"}, {"body": "yeah confirm", "d": "6/2011"}, {"body": "closing since also open pull request", "d": "6/2011"}]