[{"title": "iterate object array attributes passed view template", "body": "someone may help problem try present object array attributes example locationcode could successfully present model parent like modelrecordnum amp modeltitle child attributes modelrecmetadatacreationdategmt could present object array attribute locationcode biblocation property process template underscore using jade template output html indexjade express two questions possible display object array attributes passed underscore template jade please teach right syntax confusing mixing template systems recommended wrong mix templates please direct right way use model thismodeltojson passing model view template different using thismodelattributes want confirm appropriate way pass model properties iterated also appreciate fresh feedback accomplish task view var bib backboneviewextend tagname li classname bib render function var template bibtemplate html var compiled template template var html compiled thismodelattributes var html compiled model thismodeltojson elhtml html return json object passed template id recordnum title historical guide us government biblocation bibrecordid locationcode cllrf bibrecordid locationcode llrft recmetadata id creationdategmt iterating object jade file script idbibtemplate typetextxunderscore lt modelrecordnum gt lt modeltitle gt lt modelrecmetadatacreationdategmt gt lt model gt j ibiblocation jlocationcode", "num": "3519", "d": "2/2015"}, {"title": "fat arrow go back original scope", "body": "hey would like know way go back original scope single arrow inside function uses fat arrow want would chosen single arrow need change also need parent functions scope", "num": "3518", "d": "2/2015"}, {"title": "collectioncreate update model id returned server", "body": "find slightly unexpected behavior expectation using collectioncreate create new model would add model collection immediately persist model server update model properties server sync event however current behavior nothing model returned server thus collection left incomplete model instance", "num": "3517", "d": "2/2015"}, {"title": "add extra trigger would complement current request event", "body": "currently generic event triggered model nt allow easy binding specific http request types could possibly add another trigger would work similarly current change events adding change would allow explicit event binding newly available events would follows", "num": "3514", "d": "2/2015"}, {"title": "collectionset fails model present add false remove false", "body": "trying set model collection iff exists already current version fails set expects model collection call using think fair working since parameters pretty descriptive thoughts", "num": "3509", "d": "2/2015"}, {"title": "document args optional", "body": "method documentation eg model view collection argument please documented optional since actually want setup prototype chain access prototype like point params nt documented optional", "num": "3503", "d": "2/2015"}, {"title": "unexpected parameter passed", "body": "experiencing strange bug object returned http request structure like example collection run model associated collection also gets initialised value", "num": "3502", "d": "2/2015"}, {"title": "document collection push unshift args return values events", "body": "documented accepting single model hood pass arg accepts model array arg intended restricted accepting single model documented accepting array accepting values passed return value documented methods return return value edit undocumented trigger event", "num": "3496", "d": "2/2015"}, {"title": "acceptable values arg collectionremove", "body": "current documentation implies model objects acceptable hood uses take model object supposed restricted model objects documented accepting values", "num": "3494", "d": "2/2015"}, {"title": "add gettersetter support extend method", "body": "since getterssetters supported much prevalent nice backbone extend method supported js var person backbonemodelextend get fullname return thisget firstname thisget lastname var elonmusk new person firstname elon lastname musk consolelog personfullname gt gt elon musk right would result using calling getter", "num": "3483", "d": "2/2015"}, {"title": "bug memory leak unable remove object", "body": "windowwebformview new formview el form windowwebformviewremove windowwebformview new formview el form keeps events first instance amp never remove memory big memory leakage issue advice move irc instead fix let us know exact todo write code manage issue", "num": "3481", "d": "2/2015"}, {"title": "unable remove view amp related events", "body": "windowwebformview new formview el form windowwebformviewremove tried code working remove", "num": "3479", "d": "2/2015"}, {"title": "collection create nt properly pass final options success callback", "body": "wraps callback order handle wrapper take third argument calls wrapped callback instead sends options received breaks custom sync code might modifying options downstream instance breaks adds options sync server failed succeeded localstorage instead nt know type signaling via supported ca nt see would hurt wrapper callback actually take options callback called pass along instead shortcircuiting original options would pr change acceptable", "num": "3478", "d": "2/2015"}, {"title": "modelfetch docs", "body": "docs modelfetch misleading say fetch reset model attributes server request attribute x exists model sent server model retains x reset set", "num": "3477", "d": "2/2015"}, {"title": "undefined id collectionget id function", "body": "class personsroutersspecialities extends backbonerouter initialize gt collection new personscollectionsspecialities collectionfetch reset true routes new newspeciality index index idedit edit id show index index gt view new personsviewsspecialitiesindex collection collection unseen html viewrender el show id gt alert entry id newspeciality gt alert new spec view new personsviewsspecialitiesnew collection collection unseen html viewrender el edit id gt speciality collectionget id alert speciality alert undefined view new personsviewsspecialitiesedit model speciality unseen html viewrender el getting undefined speciality bug backbone", "num": "3473", "d": "2/2015"}, {"title": "modelparse called incorrectly certain cases collectionset", "body": "seems call collectionset array mixed models attributes options backbone call parse model attributes perhaps desired behavior definitely nt expect quick example var testmodel backbonemodelextend parse function r options rothervalue null rtranslatedvalue rothervalue mb delete rothervalue else rtranslatedvalue set return r var new testmodel othervalue parse true var c new backbonecollection cset othervalue parse true mget translatedvalue mb alert created jsfiddle well", "num": "3472", "d": "2/2015"}, {"title": "inconsistency attribute name model response server returns key object snake case", "body": "using backbone get data several apis noticed almost every attributes compound words comes snakecase thus attribute model created snake case well think ideal normalizing attributes something optional defaults turned something similar eg js bad thismodelattributes gt foobar whatever would ideal camel case eg js good thismodelattributes gt foobar whatever wan na know opnion everyone agrees nothing progress willing contribute pull request thanks", "num": "3471", "d": "2/2015"}, {"title": "model save parse option", "body": "reading src suggests passing saving model would prevent parse nt seem matter pass option always gets parsed missing something obvious openmouth", "num": "3470", "d": "2/2015"}, {"body": "searched nt find similar issue duplicate like read discussion around", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "saying unexpected end input error console emanates jquery", "d": "2/2015"}, {"body": "yes applicationjson request needs valid json response", "d": "2/2015"}, {"body": "nt function one jquery available within handler", "d": "2/2015"}, {"body": "thanks", "d": "2/2015"}, {"body": "huh got failing test case", "d": "2/2015"}, {"body": "yea make clear behavior applies properties id code wo nt run backbone test suite basic idea behavior expect using create model instance set properties model returned server fwiw locally patched create method like javascript create function model options options options clone options model thispreparemodel model options return false", "d": "2/2015"}, {"body": "certainly setting properties model need failing test case", "d": "2/2015"}, {"body": "jashkenas could nt figure run tests locally best attempt", "d": "2/2015"}, {"body": "ajsharp hi still cant undererstan goes wrong want use restful solution javascript var book backbonemodelextend parse function data return data case model mixed server response sync call var books backbonecollectionextend url books model book lets get books var library new books libraryfetch var added librarycreate book david sulc year wait true success function model resp options deal added model send post request response server need someting like complicated solution collection get item id jashkenas think dont need failling test case fine ajsharp maybe nt understand question think started studying backbone please read modeparse also change id attribute add model modelidattribute many options thanks upd mb need add urlroot model fast writed dont need parse function demo", "d": "2/2015"}, {"body": "kyleneedham check discussed recently believe type event added recommended implementation example", "d": "2/2015"}, {"body": "tsjoberg fair amount time ago would interested opinion feel natural backbone", "d": "2/2015"}, {"body": "clientside application nt overly concerned type http request sent server relevant information relevant clientside ed forth", "d": "2/2015"}, {"body": "takes array models single one", "d": "2/2015"}, {"body": "sorry made mistake snippet passing array code", "d": "2/2015"}, {"body": "jridgewell totally take single model aside work already correct js var collection new backbonecollection var new backbonemodel id title great gatsby new backbonemodel id title tale two cities collectionadd consolelog collectionget true consolelog collectionget false consolelog collectionget get title great gatsby collectionset add false remove false merge true consolelog collectionget true consolelog collectionget false consolelog collectionget get title tale two cities", "d": "2/2015"}, {"body": "filipmares asking", "d": "2/2015"}, {"body": "noticing backbonejs bower different github vs", "d": "2/2015"}, {"body": "sorry singular array models working perfectly noticing backbonejs bower different github linked master bunch unreleased commits able make jsfiddle error", "d": "2/2015"}, {"body": "jridgewell let put one", "d": "2/2015"}, {"body": "jridgewell open console note error line", "d": "2/2015"}, {"body": "well ca nt merge nothing something need set options", "d": "2/2015"}, {"body": "ah see already fixed master", "d": "2/2015"}, {"body": "jridgewell yea looks like idea see release thnx", "d": "2/2015"}, {"body": "soon hopefully", "d": "2/2015"}, {"body": "create small jsfiddle demonstrating problem calls add hood clear would happening", "d": "2/2015"}, {"body": "sorry isolating collection resolves issue tried opening issue something elsewhere code interfering", "d": "2/2015"}, {"body": "say implementation detail documented public behavior add single model way nt need use ugly hack like really want nt think need document however return value documented methods return return value turn returns value returns added model models sure needs documented either care return value stick method documented return value point doubt making sweeping changes collection methods fine regardless", "d": "2/2015"}, {"body": "way nt need use ugly hack like really want huh way mean calling hood exactly would accomplish nt accept model arguments either would passing actually clear difference behavior default options documented need dig around code find significant difference means need instead multiple models indeed mean something like instead turn returns value returns added model models right sure needs documented either return values methods also implementation detail care return value stick method documented return value significant difference problem document methods assume must important difference else one would listed alias point doubt making sweeping changes collection methods fine regardless told consider implementation detail willing document certainly willing rely code", "d": "2/2015"}, {"body": "document", "d": "2/2015"}, {"body": "collection etc methods meant mimic ones found array names exact api might slightly different questions try source well commented easy follow logic moving methods hook debugger head rabbit hole actually clear difference behavior push default add options main difference option end essentially tells ignore default sorting behavior say comparator push models end could document sure willing document certainly willing rely code nt use method ignore return values methods realize backbone nt going change drastically area", "d": "2/2015"}, {"body": "collection etc methods meant mimic ones found array names exact api might slightly different know say analagous necessarily identical array methods accepted single item reason backbone methods could nt accept multiple array accept one elements backbone methods would actually analagous also questions try source well commented easy follow logic moving methods hook debugger head rabbit hole already said figure differences think substitute good documentation fundamentally disagree based suggestion seem think collection methods signature array methods fact suggestion makes sense would arguably make sense ability part api could document sure thumbsup nt use add method ignore return values methods realize backbone nt going change drastically area wo nt documented say implementation detail ah hell rely anyway thanks jashkenas says documented see turns", "d": "2/2015"}, {"body": "mention undocumented methods trigger event", "d": "2/2015"}, {"body": "wan na whip docs pull take", "d": "2/2015"}, {"body": "sure essentially page accept argument return value trigger event discussed difference respect also documented nt chance wrap head around yet", "d": "2/2015"}, {"body": "yes right document accepting model references model ids", "d": "2/2015"}, {"body": "want submit pr next week plan would say elements array consist acceptable values arg", "d": "2/2015"}, {"body": "theory contain combination right", "d": "2/2015"}, {"body": "theory contain combination right mean currently practice uses hood expectation supposed theory described pull request", "d": "2/2015"}, {"body": "jmm yeah got yeah expecting wanted make sure", "d": "2/2015"}, {"body": "reason could nt better written know function call using getters setters part bad idea js go one core ideas backbone models doubt see support added anytime soon", "d": "2/2015"}, {"body": "anything would partially aligned new class syntax property initializers class syntax even spec yet interop issue go one core ideas backbone models core idea also getters partial solution existing problem backbonecollection", "d": "2/2015"}, {"body": "spent minutes trying make jsperf different solutions", "d": "2/2015"}, {"body": "core idea idea setting retrieving property object transparent logical reason always know never anything setting property value ditto retrieval use functions handle things like computed properties change events main reason wrapper methods around first place also getters partial solution existing problem backbonecollection modelidattribute reason current wrapper nt work either primitive function also fixed", "d": "2/2015"}, {"body": "sorry linked issue speaking bringing mainly backbone class syntax largely already compatible es class syntax seems reasonable compatible considering added support coffeescript", "d": "2/2015"}, {"body": "coffeescript nt support setters getters largely reasons look issues background starting nt roadblock supporting backbone objects classes sorry linked issue speaking remind straining see connection bat besides changes would done closing wontfix", "d": "2/2015"}, {"body": "coffeescript nt support setters getters largely reasons nt speaking getterssetters speaking backbone added interop coffeescript makes sense support classes manner remind straining see connection bat besides changes extend would done extend closing wontfix definitely right place change anything would new method makes much sense supported imo also issue gets closed forgotten would like address okay backbone extend interop issues es classes coffeescript classes", "d": "2/2015"}, {"body": "well seeing ie tech preview browser even remotely decent support even traceur nt yet convert ways even necessary aside backbone nt going go way break backwards compatibility support feature nt great idea begin", "d": "2/2015"}, {"body": "even traceur nt yet convert actually require support static properties widely supported also reason backwordscompatibility needs broken could even made faster selectively used available", "d": "2/2015"}, {"body": "thejameskyle want turn pr instead issue worth looking", "d": "2/2015"}, {"body": "sure", "d": "2/2015"}, {"body": "tejastank think expected behaviour method view removes view elementdom node dom stops listening events", "d": "2/2015"}, {"body": "tried things even many different way also delete old events amp memory object exists even remove methods see example formview old instance keep calling", "d": "2/2015"}, {"body": "try mailing list irc channel questions github issues maintaining framework", "d": "2/2015"}, {"body": "hi tejastank try mailing list irc channel questions like github issues maintaing framework", "d": "2/2015"}, {"body": "prefer post bugissue github instead irc prefer irc someone help fix let know complete bug unable remove create object memory keep memory leak amp wrong framework affects kindly reopen", "d": "2/2015"}, {"body": "carljm opened deal seems works basically everywhere else uses directly since delegates callback actually gets options caveat changes point new object object yet propagate pass options object callback may need thinking believe fixes issue please feel free give try let know", "d": "2/2015"}, {"body": "platinumazure thanks pr fix issue though think necessary change really addition following two lines rest pr looks like entirely cosmetic changes though experienced backbone dev probably missing something nt see reason adding new vars everywhere", "d": "2/2015"}, {"body": "carljm right one real necessary change wanted add tests around others add variables want general allow modify options object need make sure modified asynchronous call starts fires success callback otherwise could get really weird behavior example attempting model collection twice", "d": "2/2015"}, {"body": "platinumazure ah get makes sense thanks fix", "d": "2/2015"}, {"body": "totally maybe say merges instead feel free open pull", "d": "2/2015"}, {"body": "ralfthewise first fogget create collection proto model attr second backbone debug chome must develop backbone application open debuger see models collection mb normal way use modelparse jsfiddle example always get first model attr translatedvalue upd fixed example jsfiddle please read modelparse thanks", "d": "2/2015"}, {"body": "nope see previous tickets", "d": "2/2015"}, {"body": "noticed nt want call parse passed parse false expecting parse method would nt called missing something", "d": "2/2015"}, {"body": "curiosity would need prevent parsing response server", "d": "2/2015"}, {"body": "think dont need get changes server call parse simple dont make complicated", "d": "2/2015"}, {"body": "curiosity would need prevent parsing response server since refactored code nt need anymore situation pretty durn specific though think roughly three conditions happening api client represented data differently specifically api followed json api spec attributes resource returned nested attribute always created particular resource client without nesting would pass method assume nesting later saved call would break parse method due nested attribute particular instance server returned nt need used client needed ignore response parse like said specific situation anway still think important code fixed clear nt option many methods backbone source acts documentation options given method accepts prob whip pr update method nt forget", "d": "2/2015"}, {"body": "jmeas dont used durty checking like thanks", "d": "2/2015"}, {"body": "yup something like posting issue stuckouttongue surprised original idea nt work reading sauce", "d": "2/2015"}, {"body": "actually need sure ever situation want trigger using object right think reason works result using hood reason make official codified behavior", "d": "2/2015"}, {"body": "think docs cover though bit removed trigger actually trigger docs list single spaceseparated events supported think reason works result using eventsapi hood reason make official codified behavior old indeed implementation detail new reducing something hack love see behavior removed reverted", "d": "2/2015"}, {"body": "feel free remove revert reduced api", "d": "2/2015"}, {"body": "closed", "d": "2/2015"}, {"body": "maybe missing something simply specify calling model set", "d": "2/2015"}, {"body": "overrides behaviour every model get tiresome could also create base model class", "d": "2/2015"}, {"body": "saying default put extra leg work fix bug current behaviour cause invalid data present bug design fixed without rely developer fixing every time use", "d": "2/2015"}, {"body": "bug disagreement design project automatically imply bug forcing validation every time breaking change maintainers simply decided direction wanted go left open consumers choose whether validate every set using merely save allows flexibility argue validation default people pass disable model set breaking change something maintainers likely choose without cutting new release version least", "d": "2/2015"}, {"body": "minimum needs fixed previous values saved validation run correctly reset last valid value", "d": "2/2015"}, {"body": "minimum needs fixed previous values saved validation run correctly reset last valid value yes sounds like interesting idea although one might trickier figure practice theory would worth exploring pr", "d": "2/2015"}, {"body": "epitome object set models prototype merged options argument breaking lets js let backbonemodelextend options validate true let new nearly equivalent system let new backbonemodel validate true", "d": "2/2015"}, {"body": "yes sounds like interesting idea although one might trickier figure practice theory would worth exploring pr hmm maybe could beginning recordreplayreverse sort thing suppose implemented stack attributes objects level could also valid metadata property indicate set attempt valid invalid sounds little much bet one plugins could handle sort thing", "d": "2/2015"}, {"body": "thanks bug report sorry late reply saw", "d": "2/2015"}, {"body": "unfortunately nt vm try jdalton anything stand", "d": "2/2015"}, {"body": "happen vm sayhello create jsbin issue", "d": "2/2015"}, {"body": "looking issue bit truly unfortunate safari bug codebased workarounds seem add unnecessarily ugly code break basic functionality docs page", "d": "2/2015"}, {"body": "update release schedule backbone", "d": "2/2015"}, {"body": "ah yes slipped would good cut release soon possible afraid nt particular plan", "d": "2/2015"}, {"body": "encountered issue upgrading today found code like would get post collection get put collectionundefined totally abhorrent practice changing api get rid feel inconsistency modelisnew modelurl surprising odd", "d": "2/2015"}, {"body": "really sounds like bug actually happening put", "d": "2/2015"}, {"body": "pr ready sure correct way go fixed falling back idattribute url appears change introduced", "d": "2/2015"}, {"body": "sure feel simply open pr failing test case patch ping caseywebdev", "d": "2/2015"}, {"body": "yup failing test would great", "d": "2/2015"}, {"body": "cbroome let test pr want whip one", "d": "2/2015"}, {"body": "sorry pr unfamiliar acronym", "d": "2/2015"}, {"body": "pr pull request github", "d": "2/2015"}, {"body": "ahhh duh yeah give go next couple days", "d": "2/2015"}, {"body": "thanks", "d": "2/2015"}, {"body": "pull request", "d": "2/2015"}, {"body": "disagree coming wondering intentional thing like goal require things like code fine note call occurs hood would get passed along case switching would force validation every time give one choice matter agree code unclear case though would certainly like docs take stance", "d": "2/2015"}, {"body": "could nt implement function ignore undefined attributes complain nulls empty strings take care save scenario simply pass option like calling check", "d": "2/2015"}, {"body": "makes sense may dupe", "d": "2/2015"}, {"body": "right pretty dead let close look forward pull request whenever thing appears", "d": "2/2015"}, {"body": "jdalton one", "d": "2/2015"}, {"body": "oh man pain trap nt think backbone issue scan stackoverflow find lots issues around setting older ie", "d": "2/2015"}, {"body": "thanks jdalton", "d": "2/2015"}, {"body": "thinking bit luozhihua could issue iframe backbone creates try manually changing backbone document would need changed backbone loaded", "d": "2/2015"}, {"body": "anyone solved problem id undefined collectionget obj", "d": "2/2015"}, {"body": "revive dying thread opened relates problem using events might added end debounce time realtime syncing collections tabs debounce also keeping track indexes get difficult changes proposed small hopefully resolve issue many others raised topic", "d": "2/2015"}, {"body": "option wasted hour figuring bugbehavior please least update documentation", "d": "2/2015"}, {"body": "new github know ask doubts asking please help solve issue thanks advance trying control mouse help image processing using dsp processor davinci board know interrconnect opencv code board", "d": "2/2015"}]