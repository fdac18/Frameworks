[{"title": "slotcomponent communication", "body": "problem feature solve slots really useful needs way communicating component either ability directly call component methods send event simple example dropdown component one slot button content button must openclose dropdown content items must able close click currently dropdown components parse child items slots mounted attach event listeners bad handled transparently vue proposed api look like maybe something like emitlocal send event slot items component another idea insert elements slot pass component reference call methods directly although probably good design compromise user specify methods component expose sort miniapi", "num": "5793", "d": "5/2017"}, {"title": "render function datadirectives allow value expression set", "body": "problem feature solve setting directives render function provided nt automatically evaluated instead allow set would also nice allowed set provided proposed api look like javascript createelement div directives name mycustomdirective value allowed set instead automatically evaluated expression expression arg foo modifiers bar true createelement div directives name mycustomdirective value expression allowed set arg foo modifiers bar true", "num": "5792", "d": "5/2017"}, {"title": "suggestion mounting", "body": "hi always check element site vue throw errors finding dom elements mount usually start see example appjs using mount js helper const elementisfound element gt return documentbodycontains documentgetelementbyid element wondering possible extra mount function like appjs using mountif js", "num": "5791", "d": "5/2017"}, {"title": "components containing detect changes dynamic component", "body": "component project data update trigger outer component update", "num": "5790", "d": "5/2017"}, {"title": "event entering view router view rendered", "body": "", "num": "5789", "d": "5/2017"}, {"title": "disregard", "body": "nevermind", "num": "5788", "d": "5/2017"}, {"title": "partial ssr rendering", "body": "problem feature solve many component yet compatible ssr may require large changes support partial ssr rendering could allow use component meanwhile eventually ported directives could also benefit behavior components may mandatory seo could allow better clientsideserverside load balance proposed api look like vue component export default allowserversiderendering false", "num": "5787", "d": "5/2017"}, {"title": "read property component undefined", "body": "", "num": "5786", "d": "5/2017"}, {"title": "vif use vif route path judge control component tabletd element render three route use coponentin routepath switch vif control element position become wrong flash web page position become normal please tell", "body": "vif use vif route path judge control component tabletd element render three route use coponentin routepath switch vif control element position become wrong flash web page position become normal please tell templatecode scoperowdates scoperowtime \u59d3\u540d scoperowname \u9605\u8bfb\u91cf scoperowviews scoperowname scoperowpwd scoperowisadmin scoperowcategory scoperowtitle scoperowviewed \u7f16\u8f91 \u5220\u9664 route code path admin component alayout redirect home name \u540e\u53f0\u9996\u9875 children path component home path home component home path usermanage component tablelayout name \u7528\u6237\u7ba1\u7406 path categorymanage component tablelayout name \u5206\u7c7b\u7ba1\u7406 path articlemanage component tablelayout name \u6587\u7ae0\u7ba1\u7406 path datapage component datapage name \u6570\u636e\u9875", "num": "5785", "d": "5/2017"}, {"title": "read property component undefined", "body": "", "num": "5784", "d": "5/2017"}, {"title": "vuerouterjs uncaught typeerror read property component undefined", "body": "", "num": "5783", "d": "5/2017"}, {"title": "vue write page weex webwebview load", "body": "write vue compile weex browser weex webwebview load phone ca nt load example", "num": "5782", "d": "5/2017"}, {"title": "multiple events respond using shorthand", "body": "version reproduction link steps reproduce events fired reverse message switch class first event fired reverse message switch class expected events fired actually happening first event fired", "num": "5781", "d": "5/2017"}, {"title": "markdown demo bug", "body": "version reproduction link steps reproduce visit markdown demo expected result b c e f g h j expected list indented per source actually happening items levels b c e g h appear level items levels f j appear level probably goes deeper form bit insult first though understand ca nt help feel middle ground somewhere sure yet", "num": "5780", "d": "5/2017"}, {"title": "turn props validation one prop", "body": "problem feature solve would nice could turn validation one many even use shorthand validation proposed api look like", "num": "5779", "d": "5/2017"}, {"title": "unexpected triggering deep nested data", "body": "version reproduction link steps reproduce js new vue el data root key roota object watch roota function alert triggerd set b wrongly trigger watch new vue el data root roota object watch roota function alert vm set b trigger watch vue instance object watch expected adding new properties watch triggered actually happening adding new properties watch wrongly triggered", "num": "5776", "d": "5/2017"}, {"title": "able specify slot name inside render function createelement", "body": "problem feature solve specify slot name within render function like proposed api look like within render function specify slot name default temp creating child elements full code expected behavior temp child default child", "num": "5774", "d": "5/2017"}, {"title": "child components lost parent hides events lost", "body": "version reproduction link steps reproduce try listen children components event hide parent show expected events keep working actually happening events nt work app hidden init via shown time listen events child components hidden default mounted see reproduction mount displayed point populated hook lifecycle point also app displayed start events work hide show events setting nested wrapper change anything", "num": "5773", "d": "5/2017"}, {"title": "vueserverrenderer type definitions", "body": "problem feature solve using vueserverrenderer typescript seems vue vuerouter supported would nice vueserverrenderer came typings proposed api look like types directory", "num": "5772", "d": "5/2017"}, {"title": "", "body": "version reproduction link steps reproduce routes path component main children path helpdocument component helpdocument \u6211\u7684\u4efb\u52a1\u6240\u6709\u5de5\u4f5c\u6d41 path work component workmain children path task component workmytask path release component workmyrelease \u5728main\u7684vue\u4e2d\u6709\u4e00\u4e2a \u5728workmain\u4e2d \u4e5f\u5b58\u5728\u4e00\u4e2a helpdocument \u8def\u5f84\u4e0b \u7b2c\u4e00\u6b21\u8df3\u8f6c workrelease \u6e32\u67d3\u6ca1\u6709\u95ee\u9898 workrelease\u8df3\u8f6c\u5230 worktask \u6e32\u67d3\u6ca1\u6709\u95ee\u9898 worktask \u8df3\u8f6c\u5230 helpdocument \u4ee5\u4e0a\u6e32\u67d3\u90fd\u6ca1\u6709\u95ee\u9898 \u518d\u6b21\u4ece helpdocument \u8def\u5f84\u4e0b \u8df3\u8f6c workrelease expected \u5b9e\u9645\u6e32\u67d3\u7684\u5e94\u8be5\u662f workrelease \u7684\u5185\u5bb9 actually happening worktask \u4e2d\u7684\u5185\u5bb9", "num": "5771", "d": "5/2017"}, {"title": "vue \u5d4c\u5957\u4e09\u5c42 router", "body": "routes path component main children path helpdocument component helpdocument \u6211\u7684\u4efb\u52a1\u6240\u6709\u5de5\u4f5c\u6d41 path work component workmain children path task component workmytask path release component workmyrelease \u5728app\u7684vue\u4e2d\u6709\u4e00\u4e2a \u5728main\u7684vue\u4e2d\u6709\u4e00\u4e2a \u5728workmain\u4e2d \u4e5f\u5b58\u5728\u4e00\u4e2a helpdocument \u8def\u5f84\u4e0b \u7b2c\u4e00\u6b21\u8df3\u8f6c workrelease \u6e32\u67d3\u6ca1\u6709\u95ee\u9898 workrelease\u8df3\u8f6c\u5230 worktask worktask \u8df3\u8f6c\u5230 helpdocument \u4ee5\u4e0a\u6e32\u67d3\u90fd\u6ca1\u6709\u95ee\u9898 \u518d\u6b21\u4ece helpdocument \u8def\u5f84\u4e0b \u8df3\u8f6c workrelease worktask \u4e2d\u7684\u5185\u5bb9", "num": "5770", "d": "5/2017"}, {"title": "use vm destroy routercomponent keepalive cached component work anymore", "body": "version reproduction link steps reproduce detail handle steps link demo expected b destroy component b nt impact c b actually happening b destroy b c b run b lifecycle learn vm destroy recommended use manual destroy component init cached component use keepalive also check components cached keepalive", "num": "5769", "d": "5/2017"}, {"title": "empty children app", "body": "version reproduction link steps reproduce create app template render function mount element content try get property expected list child components actually happening empty array really nt know issue docs nt cover scenario logic work", "num": "5768", "d": "5/2017"}, {"title": "bug", "body": "version reproduction link steps reproduce expected print hello world twice \u672c\u6765\u5e94\u8be5\u8f93\u51fa hello world \u4e24\u6b21 actually happening nothing printed \u4f46\u662f\u6ca1\u6709\u8f93\u51fa add thishellodatadata err gt block work bug \u628a thishellodatadata \u6dfb\u52a0\u5230err gt", "num": "5767", "d": "5/2017"}, {"title": "bug", "body": "version reproduction link steps reproduce expected print hello world twice \u672c\u6765\u5e94\u8be5\u8f93\u51fa hello world \u4e24\u6b21 actually happening nothing printed \u4f46\u662f\u6ca1\u6709\u8f93\u51fa add thishellodatadata err gt block work bug \u628a thishellodatadata \u6dfb\u52a0\u5230err gt", "num": "5766", "d": "5/2017"}, {"title": "bug", "body": "version reproduction link steps reproduce expected print hello world twice \u672c\u6765\u5e94\u8be5\u8f93\u51fa hello world \u4e24\u6b21 actually happening nothing printed \u4f46\u662f\u6ca1\u6709\u8f93\u51fa add thishellodatadata err gt block work bug \u628a thishellodatadata \u6dfb\u52a0\u5230err gt", "num": "5765", "d": "5/2017"}, {"title": "bug", "body": "program like print hello worldhello world page work tried jquery instead vieresource export default name hello data return hello data b methods updatedata thishellodata var data err gt var lt thishellodata b hello world consolelog thishellodata value right thishellodatadata lt add line work mounted thisupdatedata", "num": "5764", "d": "5/2017"}, {"title": "create vue language service extension typescript", "body": "problem feature solve provides types custom components written sfc vue imported files like unit tests right suggest results every imported sfc component type rather component type extends vue makes much difficult annoying test proposed api look like would conform recently released ts version language server plugin supporty", "num": "5763", "d": "5/2017"}, {"title": "create vue language service extension typescript", "body": "support files mentioned typescript git repo essentially said spoken evan supporting vue files would something ideally language service extension would take see details would like request extension files gets written", "num": "5762", "d": "5/2017"}, {"title": "reactive data nt work array object", "body": "version reproduction link steps reproduce demo render template data equals demo use temporary variable save async data get result render template add another function named methods work template rendered link delete method work link expected actually happening", "num": "5761", "d": "5/2017"}, {"title": "outin transition issue async components", "body": "version reproduction link steps reproduce load click b button expected previous component disappear component b appears actually happening components b visible simultaneously behavior happens component b already loaded next time switch b everything fine", "num": "5760", "d": "5/2017"}, {"title": "missing named slots children components functional component", "body": "version reproduction link steps reproduce see console details expected named slots accessible children components functional component actually happening slots show default slot missing named slots", "num": "5759", "d": "5/2017"}, {"title": "enable component root element contains one logical node", "body": "problem feature solve compiling template error message ca nt use component root element even contains one node proposed api look like allow following code component root allow following code component root", "num": "5758", "d": "5/2017"}, {"title": "svg embedded images processed", "body": "version reproduction link steps reproduce use vhtml output valid svg image string handle node appear expected image node appear dom actually happening node appears dom complex cases ie issue following errors specified prefix declared line column seems point missing even added effect", "num": "5756", "d": "5/2017"}, {"title": "vue keepalive \u91cc\u9762\u5931\u6548", "body": "version reproduction link steps reproduce jsfiddle vue expected \u80fd\u591f\u5728\u63d2\u5165\u7684\u65f6\u5019\u8c03\u7528inserted hook actually happening keepalive \u65f6 \u975e\u9996\u6b21\u63d2\u5165\u4e0d\u4f1a\u6267\u884cinserted hook", "num": "5755", "d": "5/2017"}, {"title": "vue keepalive \u91cc\u9762\u5931\u6548", "body": "vue", "num": "5754", "d": "5/2017"}, {"title": "ie problem", "body": "version reproduction link steps reproduce run build expected running normally actually happening prompt promise \u672a\u5b9a\u4e49 \u5bf9\u8c61\u4e0d\u652f\u6301 n \u5c5e\u6027\u6216\u65b9\u6cd5 previous version everything normal updated latest version compiled running browser suggested promise defined vueresource replaced axios also reported mistake", "num": "5753", "d": "5/2017"}, {"title": "ie problem", "body": "previous version everything normal updated latest version compiled running ie browser suggested promise defined project vueresource replaced axios also reported mistake", "num": "5752", "d": "5/2017"}, {"title": "transitiongroup working table edge", "body": "version reproduction link steps reproduce transitions working tables application created jfiddle according issue demonstrate issue transition works great chrome edge using edge windows expected transition shufling items actually happening transitions ignored", "num": "5751", "d": "5/2017"}, {"title": "binding select option change working", "body": "version reproduction link steps reproduce select aircon brand see tag made check values datas formsubmissions nt updated expected focus focus input number bellow aircon brand area select bind populated making children selects expected change value select box binded vuejs actually happening working focus focus input text number work whenever change value select box", "num": "5750", "d": "5/2017"}, {"title": "double rendering polymer elements chrome caused vue", "body": "version reproduction link steps reproduce make polymer element separate file import polymer element main page makes new instance vue run page different browsers particularly chrome one notice number alert boxes well render order count different browsers expected end page loading every polymer element one copy template dom structure within custom element shadow dom shady dom actually happening chrome regardless version polymer dom structure used template structure rendered twice problem particular visible using shady dom polymer actually display element structure twice traced vue code identified trigger call documentcreateelement tag firefox ie edge call example goes polyfill definitely different behavior comparing native function inside chrome looks like point chrome already created template structure later vue starts attach bindings loops entire template structure within polymer element calls documentcreateelement every inner element within template may one possible causes making whole dom repeated particularly visible using polymer shady dom makes users actually see duplicated elements combinations either using shadow dom using polymer repeated structure would seem removed dom yet noticing alert box hooked example clear element got created twice time used example provided add line saying polymer dom shadow force polymer use shadow dom moment repeating dom disappear alert box still comes times instead render order definitely shows artifact reason posted behavior vue project imo looping inner template structure within polymer element calling documentcreateelement every single inner element may optimal way yet honest merely tracing describing much observation made possible ui professional happy leave issue judgment thank much attention", "num": "5749", "d": "5/2017"}, {"title": "feature request nested slots", "body": "problem feature solve creating pagesvue pass array objects create paginated list items inside component would like put container scoped slots proposed api look like pug js export default name adminchunk props items chunk data return index computed page thisindex thisindex gt thispageslength thispageslength thisindex return thispages thisindex pages return thisitemschunk thischunk use like pug adminchunk items items div style display flex slot container template scope item itemkey slot item div item itemkey maybe adding prop like slot nested name container would solve check children vnodes slot", "num": "5748", "d": "5/2017"}, {"title": "allow component indicate longer reused", "body": "problem feature solve example markup use component component instances reused returning route allowing state component maintained point need indicate particular component instance longer reused fresh instance component created example loggedin user visits route profile component reused available user navigates somewhere else logsout returns route saved instance profile component discarded fresh instance created proposed api look like perhaps hook could added component method returns false vue would create fresh instance component instead reusing previously saved instance export default name profile beforeactivated return somecondition true false", "num": "5747", "d": "5/2017"}, {"title": "input event fired element looses focus", "body": "version reproduction link steps reproduce create input field calls method user types blur field method called user typed something expected event triggered user types input element actually happening event called user blurs input field working typeahead component seeing weird behavior sure vue specific bug desired behavior happens method called trigger searches works nicely however input looses focus method also called weird", "num": "5744", "d": "5/2017"}, {"title": "vmodellazy custom component moment instance value sync component emits change", "body": "version reproduction link steps reproduce create custom component accept moment instance prop clone modify clone emit modified clone using change event data bound parent vmodellazy parent data update however bound separate value change updates correctly expected parent value updated actually happening nothing parent bound data get updated", "num": "5743", "d": "5/2017"}, {"title": "keepalive\u4e2dinclude\u548cexclude \u4e0d\u7ba1\u7528", "body": "\u9879\u76ee\u662f\u7528cli\u751f\u6210\u7684 \u7ec4\u4ef6\u4e2d\u6dfb\u52a0\u4e86name\u5c5e\u6027 include\u662f\u76f4\u63a5\u7528\u5b57\u7b26\u4e32\u5339\u914d\u7684 \u65e0\u8bba\u600e\u4e48\u8bbe\u7f6einclude\u548cexclude \u7ec4\u4ef6\u90fd\u4f1a\u88ab\u7f13\u5b58 \u4fee\u6539\u4e86packagejson\u4e2d\u7684vue\u7248\u672c \u5220\u9664nodemodules\u91cd\u65b0\u4e0b\u8f7d\u4f9d\u8d56\u5305 \u4ee5\u4e3avue\u5176\u4ed6\u5305\u6709\u7248\u672c\u4f9d\u8d56\u4f1a\u53ea\u4e0b\u8f7dvue\u4f1a\u6709\u5404\u79cd\u9519\u8bef \u6240\u4ee5\u91cd\u65b0\u4e0b\u8f7d \u4e0b\u8f7d\u5b8c\u4e4b\u540e\u91cd\u65b0\u8dd1\u9879\u76ee include\u548cexclude \u5c31\u8d77\u4f5c\u7528\u4e86", "num": "5741", "d": "5/2017"}, {"title": "watch conflicts", "body": "version reproduction link steps reproduce component declared two array one props data change one emit change push something array data push nothing works expected users props parameters never updated event catch actually happening users props parameters emit change", "num": "5740", "d": "5/2017"}, {"title": "vfor\u4e2dkey\u5728\u4e0d\u540c\u7684\u4f4d\u7f6e\u5f15\u53d1\u4e0d\u540c\u7684\u95ee\u9898", "body": "version reproduction link steps reproduce \u7b2c\u4e09\u4e2a\u94fe\u63a5\u4e2d\u4ee3\u7801\u7684\u4e0d\u540c\u4e4b\u5904 expected actually happening", "num": "5739", "d": "5/2017"}, {"title": "global registered component wrong render sequence", "body": "version reproduction link steps reproduce indexjs parentvue content export default name parent created consolelog parent created mounted consolelog parent mounted childvue export default name child created consolelog child created mounted consolelog child mounted expected parent mounted child created mounted actually happening parent created mounted child ist created mounted", "num": "5738", "d": "5/2017"}, {"title": "", "body": "version steps reproduce router\u4f7f\u7528history expected \u8fd4\u56de\u5230a\u9875\u9762 actually happening \u95ee\u9898\u539f\u56e0\u5e94\u8be5\u662f\u5237\u65b0\u540erouter\u5185\u90e8\u53c8\u518d\u4e00\u6b21\u6267\u884c\u4e86", "num": "5736", "d": "5/2017"}, {"title": "\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u4f20\u53c2\u95ee\u9898", "body": "problem feature solve bug proposed api look like parent component child component", "num": "5735", "d": "5/2017"}, {"title": "sum concatenate issue onwards", "body": "version reproduction link steps reproduce sum input type number became concatenate ok expected total sum actually happening concatenate", "num": "5733", "d": "5/2017"}, {"title": "noncomponent child showing", "body": "version reproduction link steps reproduce want create transition component div data noncomponent also want cache component code looks like code working warnings errors vuejs showing component showing problem without working without right never showing question wrong components allowed warnings errors switch component noncomponent transition caching component noncomponents allowed simply ignored showing expected caching component showing actually happening showing", "num": "5732", "d": "5/2017"}, {"title": "remove attribute vmodelnumber empty", "body": "problem feature solve solves design pattern issue course expected mvm flow including vmodelnumber producing string empty enter number delete text input turns string reactive data object certainly major usability casting issue nt see purpose keeping empty string attribute model get spliced model empty create new attributes text entry vice versa certainly design pattern issue resolved needing implemented application level time small fix add lot sure many others agree proposed api look like currently input empty vmodelnumber modelnumber model number input empty vmodelnumber modelnumber model", "num": "5731", "d": "5/2017"}, {"title": "feature request remove attribute vmodelnumber empty", "body": "using vmodelnumber api expects optional fields enter number delete text input turns string reactive data object certainly major usability issue nt see purpose keeping empty string attribute model get spliced model empty create new attributes text entry vice versa certainly design pattern issue resolved small fix add lot sure many others agree", "num": "5730", "d": "5/2017"}, {"title": "emit update show false showsync show", "body": "sync \u8fd9\u662f\u7236\u7ec4\u4ef6\u4e2d\u7684\u4e00\u6bb5pug\u4ee3\u7801 calendar showsync show export exportdate \u8fd9\u662f\u5b50\u7ec4\u4ef6\u7684\u90e8\u5206\u4ee3\u7801 emit update show false calendar show show export exportdate update show val gt show val ps \u6211\u4f7f\u7528unpkg\u7684vuejs", "num": "5729", "d": "5/2017"}, {"title": "von clickself work", "body": "\u5176\u4ed6\u7684\u4fee\u9970\u7b26\u90fd\u884c \u5c31\u662fself\u8fd9\u4e2a\u4fee\u9970\u7b26 vue", "num": "5728", "d": "5/2017"}, {"title": "child component updated event unexpected triggered", "body": "version reproduction link steps reproduce child component updated event unexpected triggered content content changed expected child component updated event triggered content changed actually happening parent component changed child component content always updated whether content changed", "num": "5727", "d": "5/2017"}, {"title": "data numbers defined", "body": "version reproduction link steps reproduce create variable named numbers happens every variable named somename bound via vmodel open console load page expected variable undefined actually happening variable ist defined", "num": "5726", "d": "5/2017"}, {"title": "prepending new dom elements vs appending", "body": "version reproduction link steps reproduce clicking add item button provided link insert new item dom element last position first expected list items listed newest oldest vuejs allow user define new items added javascript either append prepend new elements actually happening entirely sure believe appends new dom element stack tried reversing computed list effect list order rendered also tried applying js method within component reverse list example vfor item index listreverse fail vfor item index reverse list fail vfor item index computedreversedlist fail causes infinite loop error vuejs see error log may infinite update loop component render function reversing list also messes list order completely please help provide best practice handle situation", "num": "5725", "d": "5/2017"}, {"title": "url \u4e2d\u542b\u6709 html", "body": "url \u4e2d\u542b\u6709 html \u50cf\u8fd9\u6837\u7684 \u73b0\u5728\u7528\u7684\u662fvuerouter", "num": "5724", "d": "5/2017"}, {"title": "url", "body": "", "num": "5723", "d": "5/2017"}, {"title": "never used window error window defined", "body": "version reproduction link steps reproduce npm npm run server npm run client node serverjs open expected expected rendered page actually happening internal error page", "num": "5722", "d": "5/2017"}, {"title": "ssr never used window error window defined", "body": "recently learing ssr created demo router without store link generate client config server config successfully ran server access router page error occured found usersworkiapyanggithublearnvuessrsrcappvue error render referenceerror window defined moduleexportsmoduleexports objectmoduleexportsmoduleexportslocation srcappvue webpackrequire webpack webpackbootstrap vuecomponentinjectstyle vuecomponenthook callhook vuecomponentvueinit new vuecomponent never used window appvue solve error successfully access page thanks", "num": "5721", "d": "5/2017"}, {"title": "component nt support blurnative event", "body": "problem feature solve use component like works nt worked use like need feature especially using form components example proposed api look like", "num": "5719", "d": "5/2017"}, {"title": "vue verbose devtools extension despite configsilent", "body": "version steps reproduce set vueconfigsilent true open devtools electron nt support chrome extensions vue spams devtools console download vue devtools extension despite needing silent expected vueconfigsilent true ought shut vue actually happening vue ca nt silenced devtools used despite possible reasons vuedevtools patch fix issue", "num": "5718", "d": "5/2017"}, {"title": "computed watch", "body": "function viewmodel thisa koobservable thisb koobservable thisc koobservable thisd koobservable kocomputed function let aa number thisa let bb number thisb \u53ef\u80fd\u662fajax\u8c03\u7528\u670d\u52a1\u5668\u65b9\u6cd5 thisc aa bb thisd aabb koapplybindings new viewmodel b c", "num": "5717", "d": "5/2017"}, {"title": "ssr client plugin watch template change", "body": "problem feature solve vueserverrenderer create helper clientplugin used replace htmlwebpackplugin server render situation however new plugin nt watch template file change plugin add feature like htmlwebpackplugin improve development experience proposed api look like changes", "num": "5716", "d": "5/2017"}, {"title": "boolean attribute true value nt render", "body": "version reproduction link steps reproduce set attribute element expected expect render actually happening rendered value attribute removed expected rendered correctly docs", "num": "5715", "d": "5/2017"}, {"title": "vue\u751f\u547d\u5468\u671f\u6267\u884c\u95ee\u9898", "body": "\u4ece a\u9875\u9762 routerback \u56de\u5230 destroy routerback \u56de\u5230 a\u9875\u9762 \u4ece a\u9875\u9762 routerback \u56de\u5230", "num": "5714", "d": "5/2017"}, {"title": "importing static assets vue component", "body": "building vue js based image viewer following script want show default image component image url supplied input however computed function unable return default image return string image url shown code comments image displayed note return image computed displayimage function default image shown component template using vuecli webpacksimple template starter missing project directory structure", "num": "5713", "d": "5/2017"}, {"title": "getting done github zenhub", "body": "hola githubmann created zenhub account vuejs organization zenhub project management tool integrated natively github created specifically fastmoving softwaredriven teams use zenhub get set zenhub download browser extension log github account get access zenhub complete featureset immediately zenhub zenhub adds series enhancements directly inside github ui realtime customizable task boards github issues multirepository burndown charts estimates velocity tracking based github milestones personal todo lists task prioritization timesaving shortcuts like quick repo switcher move issue button much add zenhub github still curious see zenhub features read user reviews issue written friendly zenhub bot posted request githubmann", "num": "5712", "d": "5/2017"}, {"title": "function", "body": "problem feature solve possible async local component registration convenient webpack code splitting however using provideinject symbols unique hashes becomes hard share symbol across components symbol separate file asynchronously loaded via import needs passed via proposed api look like parentvue const parent key symbol parent provide return parentkey sharedstate export default parent childvue const parent gt import parentvue const child components parent inject const parent thiscomponentsparent made return parent parentkey export default child", "num": "5710", "d": "5/2017"}, {"title": "bind bool arrtibute list", "body": "vue list items arrtibute datawowdelay bind datawowdelay", "num": "5708", "d": "5/2017"}, {"title": "css applied firefox transition example documentation", "body": "version reproduction link steps reproduce visit transition effects page guide using latest firefox look demo directly phrase pretty cool click button expected pretty cool expect supposed look chrome actually happening clunky unstyled button slides jumps styled one sudden change gif demonstrate", "num": "5707", "d": "5/2017"}, {"title": "lifecycle hook ca nt get new content dom updating variables", "body": "version reproduction link steps reproduce get resultx answering last question clicking button expected see result console answering last question actually happening see console answering last question created topic forum nobody answered yet", "num": "5706", "d": "5/2017"}, {"title": "npm update working", "body": "hello upgrade vue trying npm update packagejson updated something edit manually hope something npm update save someone please help", "num": "5705", "d": "5/2017"}, {"title": "expose api directly generating render function code element asts createcompiler function", "body": "problem feature solve may sounds awkward using modified ast generate render function instead using template files input following cases might useful people want optimized operations ast like jump codegen method basecompile function predisposed component loaded via webpack loader implements exposed generate function get new render function case initially load customized vue components new added dom elements attributes events etc visually edit rendered components modifying asts instead original template considered much easier previous step even generate new template file like reverse way template ast render function sure whether alternative way things might helpful comes something like visualized vue components development ide proposed api look like maybe createcompilercreator function add function property compile method like line srccompilercreatecompilerjs", "num": "5703", "d": "5/2017"}, {"title": "get return value int emit", "body": "version reproduction link steps reproduce var eventhub new vue vuecomponent foo template data function return value methods emit var newval eventhub emit maketwice thisvalue expecting newval object vue alert newval please check console log consolelog newval new vue el app data function return mounted eventhub maketwice thismaketwice methods maketwice val return val expected trying call component method using single event hub would like get return value component method actually happening currently returning object vue component method return value missing something return may possible expecting return value emit return method return value", "num": "5702", "d": "5/2017"}, {"title": "transition group event hooks", "body": "version reproduction link steps reproduce create transitiongroup two uniquely keyed transition elements attach event listeners transition hooks log number times hook called equal number transition elements expected transition element fire respective event hooks internally group emit event hooks transition element fired hook expect group aggregate events actually happening using transitiongroup component uniquely keyed transition element fire transition event hooks discretely rather group desired functionality technical limitation", "num": "5701", "d": "5/2017"}, {"title": "android \u600e\u4e48\u8c03vue\u91cc\u9762\u7684\u65b9\u6cd5 android call vue methods", "body": "\u6211\u5728android\u4f7f\u7528 mwebviewloadurl javascript hello use mwebviewloadurl javascript hello android effect", "num": "5700", "d": "5/2017"}, {"title": "list components delete one always delete last one", "body": "version reproduction link steps reproduce click input delete expected one clicked delete actually happening last input deleted", "num": "5699", "d": "5/2017"}, {"title": "", "body": "", "num": "5698", "d": "5/2017"}, {"title": "vue component custom delimiter working", "body": "version reproduction link steps reproduce following alias running vue inside component inside tags expected output models value actually happening outputting", "num": "5697", "d": "5/2017"}, {"title": "editor spit warnings", "body": "hi new vuejs would like know tell editor like atom sublime produce warning code like currently jsfiddle wrote nt show error console", "num": "5696", "d": "5/2017"}, {"title": "input value fast vmodel handle", "body": "version reproduction link steps reproduce use fast input input value get problem happen use barcode scanner expected let handle faster input reason ca nt actually happening use watch input box input box waiting barcode scanner barcode scanner input text one one example scanner input one one two scanners one old another brand new old one find slow new one input characters fast ca nt handle input become resolve problem use refresh value replace think problem come browser chrom information know miss thanks lot", "num": "5693", "d": "5/2017"}, {"title": "nt works emit", "body": "coffeescript coffee vuecomponent levelslist template levelslisttemplate props uuid type data elementlevels otherlevels mounted getelementlevels return methods getelementlevels uuid typeof uuid undefined uuid uuid get ajaxelements uuid elementlevelsjson data thiselementlevels thisotherlevels dataelementlevels elementlevel thiselementlevelspush elementlevel return dataotherlevels otherlevel thisotherlevelspush otherlevel return return return vuecomponent articlecontent template articlecontenttemplate props uuid data questionsblocks videoscreens mounted getblocks levels updateblocks alert goooood return return methods getblocks get ajaxelements uuid loadblocksjson data thisquestionsblocks thisvideoscreens dataquestionsblocks questionsblock thisquestionsblockspush questionsblock return datavideoscreens videoscreen thisvideoscreenspush videoscreen return return return levels new vue el jslevels code displays error typeerror undefined object evaluating levels error occur also add line successfully receive blocks line return problem", "num": "5692", "d": "5/2017"}, {"title": "using vue file generate html css file input model", "body": "problem feature solve vue component mine applied certain model generates certain htmlcss cli extracting output htmlcss seperate entities currently duplicate vue file node templating generation proposed api look like cli lets pass model vue component outputs htmlcss file appropriate input model", "num": "5689", "d": "5/2017"}, {"title": "functional component contextchildren wrong safari", "body": "version reproduction link steps reproduce run fiddle safari expected alerts form twice browsers actually happening alerts input form safari slot screwing something safari", "num": "5687", "d": "5/2017"}, {"title": "multiple ajax calls component", "body": "version reproduction link steps reproduce two ajax calls one parent one child calls performed load issue always works one expected load data two ajax calls actually happening one call performed", "num": "5686", "d": "5/2017"}, {"title": "aggregate function filters", "body": "problem feature solve delivers sum min max count average filters sql select statement aggregate functions years angularjs sum average taken sql sum count min max average groupby see angular usage sum filter support aggregate functions specifically source sum duration filter shift pipe char angular filters proposed api look like users filterby searchtext count pivot countryofbirth aveage", "num": "5685", "d": "5/2017"}, {"title": "vue introduction page error", "body": "version reproduction link steps reproduce currently code website looks like missing p closing div expected add example code actually happening noticed error think everyone notice big bug yea someone started learning html confused happen someone copy paste code", "num": "5684", "d": "5/2017"}, {"title": "methods filters called many times cause performance issue", "body": "version reproduction link steps reproduce yesterday tested vue chat application found typing new message app fast found problem filters every message show date use filter momentjs filters recalculate values manymany times every keydown event cause recalculating filtered values values took values depend vmodel value input variable recalculating view see console many lines recalculating vue method values filters nt recalculated dependencies changed vue recalculating event every typing input field behaviour similar angular dirty checking nt good performance know say vue computed values use many lists nt want create separate component one computed property list item causes overhead verbose displaying simple list expected filtered values recalculated dependencies changed actually happening filtered values recalculated every changing component even changed variable nt influence values", "num": "5682", "d": "5/2017"}, {"title": "props escaped single file components", "body": "version reproduction link steps reproduce follow instructions repo expected escape characters props inside single file components actually happening single file components escaped find character escaped however using single file components immediately escaped thus visualization correct track origin issue thank", "num": "5680", "d": "5/2017"}, {"title": "buildjs", "body": "problem feature solve bootstrap vue comes dependency packages devdependency packages packagejson currently dockerizing vue want copy dependency packages container cuz everytime build container pull devdependencis well absurdly time consuming thing buildjs depend devdependency packages else abstracted another build wrapper devs set nodeenv production mode npm install ng build think vue able well clean build support proposed api look like api necessary", "num": "5679", "d": "5/2017"}, {"title": "component rendered outside parent element", "body": "version reproduction link steps reproduce create table row component called use directive iterate data generate couple table rows well expected component rendered inside element actually happening component rendered outside element currently using technique tbody instead tr table rows live project works perfectly fine however ran bug attempting help user another issue", "num": "5678", "d": "5/2017"}, {"title": "vbind class erase manually added classes", "body": "version reproduction link steps reproduce add class jquery tag class toggled vbind class expected class added jquery remain class toggle class actually happening class added jquery deleted class toggle class", "num": "5677", "d": "5/2017"}, {"title": "find list vue vesions", "body": "", "num": "5676", "d": "5/2017"}, {"title": "iterate tr element recursively", "body": "version reproduction link steps reproduce would like iterate recursively objects get nested table template javascript lt tr gt lt td gt lt von click toggle gt lt gt lt td gt lt td gt lt td gt lt tr gt lt tr rowitem vshow open gt lt tr gt recursive line hidden line user click parent line children lines appear already try wrap content within tag get inside still illegal table layout breaks javascript lt tbody gt lt tr gt lt td gt lt td gt lt td gt lt td gt lt tr gt lt tr rowitem gt lt tr gt lt tbody gt vue nt require exactly one root element without idea solve thanks expected use multiple elements template another solution actually happening error component template contain exactly one root element", "num": "5674", "d": "5/2017"}, {"title": "childmethod gt parentmethodcall child", "body": "problem feature solve try create component based pattern facade example component named would add data variables methods watchers listeners direct child wrap make component windowfunctional ca nt use work use construction carry beyond fear would expand facadecomponent file component turn unreadable monster also pay attention assign classes styles dom child think artisanal method nt find better solution proposed api look like", "num": "5673", "d": "5/2017"}, {"title": "computed value unable track value dependency dynamic object", "body": "version reproduction link steps reproduce submit value change based change object see change go back change value nothing happened computed value utilize dynamic size object expected computed property changes based change object actually happening dependency tracking nt working use object methods dynamic object supported context throw error spend hours struggling bug expect folks similar problems well throw error simply saves time also behavior kind inconsistent computed value simply returns thing would respond change computed value actual computation nt ran bug cause trying create dynamic table view data dynamic list user add data list", "num": "5672", "d": "5/2017"}, {"title": "tree component bug", "body": "write tree component refer child component required vue warn failed mount component template render function defined ca nt use component tempalte", "num": "5671", "d": "5/2017"}, {"title": "webpack vue\u591a\u6587\u4ef6\u5165\u53e3", "body": "\u4f7f\u7528webpack vue \u5f00\u53d1\u591a\u9875\u9762\u5e94\u7528 \u5165\u53e3\u5305\u542b\u4e00\u4e2a\u516c\u7528\u7684commonjs \u548c \u5bf9\u5e94\u9875\u9762\u7684js\u6587\u4ef6 javascript commonjs import vue vue import toast pluginstoast import popup componentspopup vueuse toast vueuse popup windowvue vue javascript \u5bf9\u5e94\u9875\u9762\u7684js import app appvue new windowvue template components app mount app appvuethis toast toast\u4e0d\u5b58\u5728vueuse toast \u5982\u679c\u6211\u53ea\u6709\u4e00\u4e2a\u6587\u4ef6\u5165\u53e3\u80fd\u8c03\u7528 \u6211\u60f3\u4e86\u60f3 \u53ef\u80fd\u662fvue\u8fd9\u5bf9\u8c61\u7684\u95ee\u9898 \u6211\u53c8\u6539\u4e86\u4e0b\u4ee3\u7801 javascript commonjs import toast pluginstoast import popup componentspopup windowvueinstall function vue vueuse toast vueuse popup javascript \u5bf9\u5e94\u9875\u9762\u7684js import vue vue import app appvue windowvueinstall vue new vue template components app mount app toastpopup\u8fd9\u4e2a\u7ec4\u4ef6\u4e0d\u5b58\u5728 commonjs \u548c \u5bf9\u5e94\u9875\u9762js \u6700\u540e\u9644\u4e0a\u591a\u9875\u9762\u7684webpack\u914d\u7f6e javascript const fs require fs const path require path const webpack require webpack const htmlwebpackplugin require htmlwebpackplugin const extracttextplugin require extracttextwebpackplugin const config require packagejson \u83b7\u53d6\u7edd\u5bf9\u8def\u5f84 param dir returns string function resolve dir return pathjoin processcwd dir vue css\u52a0\u8f7d\u5668 returns css scss function cssloaders const cssloader loader cssloader options minimize processenvnodeenv development sourcemap false function generateloaders loader loaderoptions const loaders cssloader loader loaderspush loader loader loader options objectassign loaderoptions sourcemap false return css generateloaders scss generateloaders sass const pages fsreaddirsync resolve srcpages moduleexports function plugins htmlpluginoptions const htmlplugins const entrys common srccommonjs const name pages const entry entrys name entry processenvnodeenv development entrys name push builddevclient htmlpluginspush new htmlwebpackplugin objectassign filename processenvnodeenv development name html resolve configid name html template inject true chunks common name hash false chunkssortmode b return aid gt bid config env processenvnodeenv htmlpluginoptions const chunks objectvalues entrys htmlpluginspush new webpackoptimizecommonschunkplugin name vendors chunks chunks minchunks chunkslength new webpackoptimizecommonschunkplugin name common chunks common return entry entrys output path resolve configid filename staticjs name js publicpath chunkfilename staticjs id hash js resolve extensions vue js alias resolve publicsrc vue vuedistvueesmjs devtool processenvnodeenv development false cheapmoduleevalsourcemap module rules test vue loader vueloader options loaders cssloaders test css use processenvnodeenv development extracttextpluginextract cssloader styleloader cssloader test js loader babelloader include resolve src test pngjpe eotttfotf loader urlloader options limit name plugins htmlpluginsconcat plugins", "num": "5669", "d": "5/2017"}, {"title": "", "body": "", "num": "5668", "d": "5/2017"}, {"title": "check android", "body": "version reproduction link steps reproduce var ua amp amp uaindexof msie gt \u67e5\u627e\u5230\u8be5\u5b57\u7b26\u4e32\u5c31\u53ef\u4ee5 var isedge ua amp amp uaindexof edge gt var isandroid ua amp amp uaindexof android gt var isandroid ua amp amp uaindexof android gt uaindexof linux gt android\u7ec8\u7aef\u6216\u8005uc\u6d4f\u89c8\u5668 expected would fixed bug vuejs actually happening check android error make work error android", "num": "5666", "d": "5/2017"}, {"title": "check android", "body": "var ua amp amp uaindexof msie gt \u67e5\u627e\u5230\u8be5\u5b57\u7b26\u4e32\u5c31\u53ef\u4ee5 var isedge ua amp amp uaindexof edge gt var isandroid ua amp amp uaindexof android gt var isandroid ua amp amp uaindexof android gt uaindexof linux gt android\u7ec8\u7aef\u6216\u8005uc\u6d4f\u89c8\u5668", "num": "5665", "d": "5/2017"}, {"title": "comparing values firing watch", "body": "version reproduction link steps reproduce hi new vue framework using week using latest vue came problem starting trying implement multiple support removed equation simplify bug see normalsimple select following works expected everything fine see following multiple select example placed counter prevent browser hitting javascript lock uncomment return change function work breaks infinite recursion alternatively another solution uncomment json stringify compares sure lot play aware vue noob suspect issue watch event firing value changes value array hello hello result false hitting endless recursion change event firing value watcher indeed case nt know enough vue know perhaps watch perhaps make use jsonstringify something compare values using watch perhaps would break things understand endless recursion fault script firing change watch picking thought perhaps watch able handle arrays maybe objects fire match mercy vue noob expected endless recursion would happen actually happening endless recursion love vue", "num": "5664", "d": "5/2017"}, {"title": "fails ios webkit browsers function isnative", "body": "version reproduction link steps reproduce run ios safari browser add vuejs via amd throwing error function run string add check add check every variable function help expected running without errors actually happening throwing error", "num": "5663", "d": "5/2017"}, {"title": "inject", "body": "problem feature solve using styles inside vuejs components porperties like automatically injected define inside vue component something like resulting injected style contain defined properties proposed api look like api change different injected tags", "num": "5662", "d": "5/2017"}, {"title": "strange variable vshow behavior within component vueresource involved", "body": "version reproduction link steps reproduce run jsfiddle several times two components source displaying content http call done asynchronously one component wrapped within expected components display visible loaded actually happening first component version within shows randomly still produces element strange happens conjunction vueresource styles cases everything works well", "num": "5661", "d": "5/2017"}, {"title": "\u600e\u4e48\u628avif\u52a0\u5728\u6807\u7b7e\u6700\u5916\u5c42", "body": "", "num": "5660", "d": "5/2017"}, {"title": "\u9891\u7e41\u5207\u6362\u4e00\u4e2a\u5b50\u7ec4\u4ef6\u7684\u6570\u636e\u6e90 \u5bfc\u81f4\u4e0d\u89e6\u53d1\u7ec4\u4ef6\u7684updated\u94a9\u5b50", "body": "\u4e0b\u9762\u662f\u4ee3\u7801 \u4ee5\u4e0b\u662f\u63a7\u5236\u53f0\u7684\u8f93\u51fa", "num": "5659", "d": "5/2017"}, {"title": "\u5728\u5904\u7406\u6570\u636e\u7684\u51fd\u6570\u4e2d\u83b7\u53d6\u5f53\u524d\u6e32\u67d3\u7684\u9875\u9762\u5143\u7d20\u5bf9\u8c61", "body": "problem feature solve judgeerr formatitems proposed api look like function target data target", "num": "5658", "d": "5/2017"}, {"title": "click event emitted pressing return", "body": "version reproduction link steps reproduce use example referenced jsfiddle press button trigger desired behaviour focus input field press return expected input field either submit form simply nothing actually happening pressing return input field emits event stated turn triggers button tried vuejs versions extended example shows one button triggered see", "num": "5657", "d": "5/2017"}, {"title": "von click adding event listener", "body": "version reproduction link steps reproduce try branch unable reproduce minimal reproduction tools loginvue login username export default name login data return username password asyncdata store consolelog storestate return storestateusername methods submit function consolelog hi expected expect submit method fire actually happening event listener even attached using von click directive", "num": "5656", "d": "5/2017"}, {"title": "history cyrillic chars", "body": "version reproduction link steps reproduce click go foo link click go bar link click go foo link click go bar link click back button press keyboard expected click back button see changing routerview one state another actually happening triggering", "num": "5655", "d": "5/2017"}, {"title": "support using result vueextend mixins", "body": "version reproduction link steps reproduce run fiddle error shown console expected child logged console via watch handler child actually happening watch fired stratswatch function unconditionally converts child array already converted array via previous merge operation convert nested array fix seems updating line", "num": "5652", "d": "5/2017"}, {"title": "import componets fault", "body": "import elslider nodemoduleselementuipackagesslidersrcmain", "num": "5651", "d": "5/2017"}, {"title": "checkbox nt check binding checked attribute", "body": "version reproduction link steps reproduce instead using native checkbox simply use manage checkbox state block uichecking mouseclick tabspaceing expected checkbox check actually happening checkbox checking despite computed property evaluating nt want use understand short something like exact logic found since making minimal checkbox component wrap native checkbox elaborate css like refrain maintain data props instead event handler comes like simply hoist event", "num": "5650", "d": "5/2017"}, {"title": "sync prop validation", "body": "problem feature solve modifier back make sense recover sync validator well proposed api look like component relies sync modifier possible state prop declaration", "num": "5649", "d": "5/2017"}, {"title": "ability strict silently fail referencing properties vm", "body": "problem feature solve first thank work put library honestly saved well year life already also able write better code also begin trying regress back angular silently failing variable missing see different use case built quite robust solution sending customized text messagesemails ability add variables based user data timestamps etc end user able write message hey userfirstname requested code code hey userfirstname thanks giving us permission text youwe send messages point using nunjucks library interpolate variables message ca nt shake idea able use ssr vue instead created solid proof concept using vue issue running fact use property userpreferencessmsenabled undefined throws exception rather silently failing agree better throw exception rather silently fail angular see first exception rule encountered utilizing vue situation data put vm varies much templating purposes rendered browser send millions text messages per month customers would prefer send message interpolates blank values complete failure interpolate average user nt think terms javascript add variable would much better template render empty string one variable rather fail render also noteworthy users fair bit variation data objects exist one user may exist another user mostly nondevelopers using utility easy instruct instead user amp amp userpreferences amp amp userpreferencessmsenabled proposed api look like propose simple way override properties vm accessed lodash property lib functions exactly see working something like let property require lodashproperty const app new vue template simple property firstname deep property nonexistingobjectfirstname data return firstname simple get path return property path get method would make possible things would make possible return empty values exist would make possible create list variables used template especially conditional rendering", "num": "5648", "d": "5/2017"}, {"title": "nested transition working", "body": "version reproduction link steps reproduce try transition elements inside element transitioned expected interior elements would use rules closest tag supposed transition actually happening interior elements transition use neither closest parent transition tag rule might similar much older version vue user provided jsfiddle example code used extra stuff", "num": "5647", "d": "5/2017"}, {"title": "nested child component props sync error", "body": "version reproduction link steps reproduce \u70b9\u51fb open dialog ext \u663e\u793a dialog ext \u5185\u5bb9 \u5173\u95ed dialog ext showext value true \u63a7\u5236\u53f0\u4f1a\u8f93\u51fa vue warn \u70b9\u51fb open dialog base \u548c \u90fd\u4f1a\u663e\u793a\u51fa\u6765 \u4f9d\u6b21\u5173\u95ed \u518d\u6b21\u663e\u793a\u6765 expected \u91cc\u7684\u7ec4\u4ef6 \u5173\u95ed\u65f6\u80fd\u540c\u6b65 showext \u7684\u503c actually happening avoid mutating prop directly since value overwritten whenever parent component rerenders instead use data computed property based prop value prop mutated visible", "num": "5646", "d": "5/2017"}, {"title": "component cache", "body": "mentiod vue component cache cache view async data api server", "num": "5644", "d": "5/2017"}, {"title": "\u5f53checked checked changed \u4e8b\u4ef6", "body": "", "num": "5643", "d": "5/2017"}, {"title": "provide way type instance method using typescript", "body": "version reproduction link steps reproduce use typescript create plugin adds instance method example install plugin try use component export default class appcomponent extends vue public data appdata public created thisdata apigetappdata lt property api exist type appdata expected expect error would like see official way allow actually happening ts build error sure best approach perhaps allowing sort generic vue class official documented suggestion working around right create subclass feels wrong use version everywhere else", "num": "5641", "d": "5/2017"}, {"title": "transition works velse", "body": "version reproduction link steps reproduce open link push button expected smooth transition actually happening elements changed without transition", "num": "5639", "d": "5/2017"}, {"title": "data object naming prefixes", "body": "version reproduction link steps reproduce open jsfiddle link click run look part code set data prop message working computed getters setters expected want feel free variables naming actually happening data props prefixes nt working axpected like vuejs want free variables naming underscore variable name javascript exception limitation vuejs", "num": "5638", "d": "5/2017"}, {"title": "vue", "body": "webpack\u7684\u8f93\u51fa\u914d\u7f6e \u5ba2\u6237\u7aef vuerouter failed resolve async component default error find module vuerouter uncaught error route navigation error find module functionmoduleresolvefilename functionmoduleload modulerequire require r e functionrequireensure e report e e arraymap native e arraymap native flatmapcomponents e e iterator e step e code modulenotfound vuerouter failed resolve async component default error find module", "num": "5637", "d": "5/2017"}, {"title": "module found error ca nt resolve scss", "body": "use add file mg webpack module packagejson", "num": "5636", "d": "5/2017"}, {"title": "even async components resolved timeout occur", "body": "version reproduction link steps reproduce reproduction link loaded wait expected async components resolved timeout occured actually happening async components resolved timeout occured following error console log", "num": "5635", "d": "5/2017"}, {"title": "templatehead function", "body": "version reproduction link steps reproduce better clone repo try run build script start app error thrown shitty stack trace see actually happening sure error setup expected expecting server server indexhtml actually happening getting thrown error", "num": "5634", "d": "5/2017"}, {"title": "vue crash", "body": "version reproduction link steps reproduce routerreplace expected \u70b9\u51fb\u8fd4\u56de\u540e\u6b63\u5e38\u8fd4\u56de\u9996\u9875 actually happening \u6d4f\u89c8\u5668\u767d\u5c4f\u6216\u5fae\u4fe1\u76f4\u63a5\u5d29\u6e83\u9000\u51fa \u7528\u7684\u662fsentry\u5f02\u5e38\u6846\u67b6", "num": "5632", "d": "5/2017"}, {"title": "prop modifier nt work vbind", "body": "version reproduction link steps reproduce bind whole object component properties attributes modifier expected properties must bounded component properties actually happening properties nt bounded", "num": "5631", "d": "5/2017"}, {"title": "build successfully pug", "body": "version steps reproduce webpack configuration copied vhn without modification introduced pug development process without problems build suggested find pugloader know introduce development environment used loader additional installation pugloader made following configuration moduleexports extractcss processenvnodeenv production preservewhitespace false postcss require autoprefixer browsers last versions loaders pug pugloader use npm run start start service visit give gray page back error switch back development environment pugloader also thrown exception addition development pugloader deleted may understand depth webpack current investigation difficult progress expected run successfully pug actually happening google translate", "num": "5630", "d": "5/2017"}, {"title": "vue page display blank phone browser", "body": "version reproduction link steps reproduce mintui project demo page open pc web browser wechat inner browser phone browser expected browser shows well actually happening phone browser show blank page create cli project run well pc web browser also display well wechat inner browser displayed qq uc sogou browser phone", "num": "5629", "d": "5/2017"}, {"title": "improve error reportingdebugging provideinject allow require flag inject", "body": "problem feature solve currently fails resolve nothing happens injected value remains untouched seems like opportunity warn developer could resolved perhaps intended behavior maybe makes sense sometimes injection would resolved case could way indicate given inject required stricter injection method current workaround throw error object undefined since injects resolved manual step must made many places proposed api look like new api needed support sure design warning hoping could resolved would warning browser console", "num": "5628", "d": "5/2017"}, {"title": "ssrclientmanifest amp ssrserverbundle ca nt emitted nonpublic dir", "body": "version reproduction link steps reproduce follow steps open url app work fine look dir like vuessrbugminimalreproductiondist mainbundlejs vuessrclientmanifestjson vuessrserverbundlejson see ssrclientmanifest amp ssrserverbundle files since use ssrclientmanifest amp ssrserverbundle server side files placed public folder tried specify different dir ssrclientmanifest amp ssrserverbundle store uncommenting buildwebpackclientconfigjs buildwebpackserverconfigjs rebuild app nt see ssrclientmanifest amp ssrserverbundle files dir deep dir case os wsl linux expected ssrclientmanifest amp ssrserverbundle files emitted dir actually happening ssrclientmanifest amp ssrserverbundle files emitted dir", "num": "5626", "d": "5/2017"}, {"title": "expose option change contentplaceholder value createbundlerenderer function", "body": "problem feature solve make flexible terms ssr allows developers decide placeholder name rather strictly dictate one use ie proposed api look like assume following object function", "num": "5624", "d": "5/2017"}, {"title": "vuejs available android phone", "body": "version reproduction link steps reproduce use new vue js go dying expected new vue object return true actually happening uncaught syntaxerror error msg attachments", "num": "5623", "d": "5/2017"}, {"title": "elementvue save use", "body": "clean way get current vue instance given dom node even future save access use case integration large famous enterprise content management system would like build content elements vue components unfortunately cms ships javascript code ca nt changed without high efforts third party scripts allow authors cms use dragndrop place new content element eg carousel teaser page dragndrop happened event fired would like bind reinitialize new placed inline template elements managed come hack maybe better solution use case js content change handler function handlecontentchange const inlinetemplates documentqueryselector inlinetemplate var inlinetemplate inlinetemplates processnewelement inlinetemplate tell vue initialize new element function processnewelement element const vue getclosestvueinstance element new vue el element data vue data returns vue instance next element dom tree function getclosestvueinstance element element return elementvue getclosestvueinstance elementparentelement", "num": "5621", "d": "5/2017"}, {"title": "\u6211\u60f3\u5b9e\u73b0\u7c7b\u4f3cgoogle nexttick", "body": "", "num": "5620", "d": "5/2017"}, {"title": "\u6587\u6863\u9519\u8bef", "body": "vue item \u548c index \u5199\u53cd\u4e86", "num": "5619", "d": "5/2017"}, {"title": "elements unnecessarily recreated vfor changes", "body": "version reproduction link steps reproduce change inputs marked change add row inputs following vfor rows get recreated lose value inputs remain seems happen inputs vfor element contained parent component slot expected inputs remain unchanged regardless happens sibling vfor element actually happening input elements following vfor recreated resetting value", "num": "5618", "d": "5/2017"}, {"title": "vfor template literals", "body": "hi posibility vfor use template literals got want make variable working vuex got state objects english spanish containing content translated want able insert english selected viceversa anyway without writing code times rendering thanks advance", "num": "5617", "d": "5/2017"}, {"title": "dynamic slot name binded vfor directive working scoped slots", "body": "version reproduction link steps reproduce create scoped slot using element necessary use dynamic props set slot property attempt utilize slot expected slot loaded display correctly actually happening dynamic properties nt seem work component slot property getting set null loaded", "num": "5616", "d": "5/2017"}, {"title": "dynamic slot name bound vfor directive working scoped slots", "body": "version reproduction link steps reproduce create scoped slot using element necessary use dynamic props set slot property attempt utilize slot expected slot loaded display correctly actually happening dynamic properties nt seem work component slot property getting set null loaded", "num": "5615", "d": "5/2017"}, {"title": "dynamic slot name working scoped slots", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "5614", "d": "5/2017"}, {"title": "ipadiphone crashing big page", "body": "version reproduction link steps reproduce iphone plus ipad crashing big pages iphone ipad air work ok see issue use following javascript div app contains dom nodes new vue data return test test mount app expected user see page actually happening crash message problem repeatedly occured url iphone ipad air work ok", "num": "5613", "d": "5/2017"}, {"title": "everything disappeared dom", "body": "version reproduction link steps reproduce provided comments jsfiddle url expected error actually happening body content disappeared", "num": "5612", "d": "5/2017"}, {"title": "use blur except buttons", "body": "hello input button save shows want hide button user click button want run method possible thanks", "num": "5611", "d": "5/2017"}, {"title": "style missing", "body": "version reproduction link steps reproduce iamges array change array item value expected old pictures modified new pictures everything else actually happening picture changed style backgroundsize gone", "num": "5609", "d": "5/2017"}, {"title": "style missing", "body": "version reproduction link steps reproduce iamges array change array item value change array value expected old pictures modified new pictures everything else actually happening picture changed style gone", "num": "5608", "d": "5/2017"}, {"title": "vbind props injects inappropriate attributes children", "body": "version reproduction link steps reproduce define components single prop one use vue instance pass props vbind props one inspect html expected props defined children used others ignored least injected html attributes turn markup invalid actually happening props defined child component injected attributes invalidates html markup", "num": "5606", "d": "5/2017"}, {"title": "warn component option object function", "body": "problem feature solve often get mixed properties component functions nt mistakenly define functions objects opposite scenario property needs function instead object already get helpful warning message define properties probably others functions instead vue either silently fails use property gives confusing error message spent embarrassing amount vue dev time simple mistake ones value function instead object simply ignored function instead object prevent children rendering log message cause runtime error message similar error errors least somewhat misleading real problem main benefit warning kind mistake would spend less time futzing around fixing boilerplate getting slightly wrong proposed api look like component initialized properties whose values functions objects emit warning similar warning eg", "num": "5605", "d": "5/2017"}, {"title": "allow vm watch signature similar watch property", "body": "problem feature solve running issue using instead usually using property within watch object tried following signature accustomed js mounted thissometest return instead reason signature supported proposed api look like", "num": "5604", "d": "5/2017"}, {"title": "optionmergestrategiesinject", "body": "version reproduction link steps reproduce make component extend another one parent child define injection parent injection lost overridden expected injections merged actually happening injections override parent ones injections initialisation looks injections keys merge prototype like done function mergeassets object hashes propsmethodscomputed instead copy object extend properties might cleaner allowed use prototype", "num": "5603", "d": "5/2017"}, {"title": "automatically create nested namespaces exists", "body": "problem feature solve automatically register namespaces would nice function register paths function check path existance registermodule could register path automatically currently possible hack access private var directly add dynamicaly loaded modules namespaces order loading could changed module must check namespace exists create eg proposed api look like extend registermodule auto namespace creation", "num": "5602", "d": "5/2017"}, {"title": "", "body": "version reproduction link steps reproduce \u7ec4\u4ef6\u4e3a\u8fd9\u4e2a title \u5728\u5916\u90e8\u5e94\u7528\u8fd9\u4e2a\u7ec4\u4ef6 expected actually happening \u5355\u56fe\u7247 \u8bbe\u8ba1\u7a3f\u5206\u7c7b", "num": "5601", "d": "5/2017"}, {"title": "requireensure", "body": "version reproduction link steps reproduce route code const userquery resolve gt requireensure modulesusercenteruserqueryvue gt resolve require modulesusercenteruserqueryvue userqueryvue code dashboarduserresetpwd margin expected support webpack requireensure vue style block actually happening e neprojecticedashboardclientmodulesusercenteruserqueryvue e neprojecticedashboardclientmodulesusercenterusercentervue e neprojecticedashboardclientmoduleshomehomevue e neprojecticedashboardclientmodulesappvue find delete using webpack require ensure working properly", "num": "5600", "d": "5/2017"}, {"title": "typeerror read property call undefined", "body": "error log e neprojecticedashboardclientmodulesusercenteruserqueryvue e neprojecticedashboardclientmodulesusercenterusercentervue e neprojecticedashboardclientmoduleshomehomevue e neprojecticedashboardclientmodulesappvue route code const userquery resolve gt requireensure modulesusercenteruserqueryvue gt resolve require modulesusercenteruserqueryvue userqueryvue code dashboarduserresetpwd margin find delete using webpack require ensure working properly", "num": "5599", "d": "5/2017"}, {"title": "\u5728", "body": "\u5728", "num": "5598", "d": "5/2017"}, {"title": "allow access subcomponents declared component", "body": "problem feature solve posted seems impossible currently lets feature request seems dom tree processed outside inside like vue process first excelent like suggest well imagine component called alternative default templated something like subcomponent called templated exclusive make senses put global scope instead declares subcomponent instance method could create codes directly html like result like html hello world problem run code receives error like justly declared globally putting content directly starts suggestion finally suggestion allow access subcomponents declared component avoid globalize specific subcomponents like case edit know pass list top component spoils readability working static code mainly using template engine convert json easily proposed api look like affects", "num": "5596", "d": "5/2017"}, {"title": "\u7f3a\u5c11 ie use webpack vue router", "body": "", "num": "5595", "d": "5/2017"}, {"title": "using scoped slots syncing select object literal", "body": "version reproduction link steps reproduce create child component scoped slot parent template add scoped template child component bound select element data object try selecting option expected expected sync component object selected data object using select data binding actually happening instead nothing happens change option values string binds correctly also noted process putting select child component works expected", "num": "5594", "d": "5/2017"}, {"title": "since specific cases two consecutive comment vnodes merged one text vnode", "body": "version reproduction link steps reproduce use following template check foo expected template childnodes compiled actually happening vue gt compiles template childnodes vue performs correctly bug lead error clientside rendered virtual dom tree matching serverrendered content", "num": "5592", "d": "5/2017"}, {"title": "template rendering vuessrserverplugin raises error whitespace used around context property", "body": "version reproduction link steps reproduce access expected error see text actually happening error rendering error caused omission whitespace whitespace requirement documented removed unnecessary consistent way templates work elsewhere", "num": "5591", "d": "5/2017"}, {"title": "ability make shallow comparison prev next stateprops rendering", "body": "problem feature solve provides way make least shallow comparison current stateprops component next stateprops able abort unnecessary unwanted component rerendering situations pretty much like reactjs perhaps ca nt find mentionexample related kind situation maybe missing something case sorry inconvenient proposed api look like", "num": "5590", "d": "5/2017"}, {"title": "allow using function call syntax create bound function directive expressions", "body": "problem feature solve similar event binding allow directive value create bound functions would functionally similar already works event bindings makes sense syntax consistent use case directive deactivates element clicked returned promise fulfilled pen better understand since functionally similar makes sense syntax work currently call right away set returned value want proposed api look like", "num": "5588", "d": "5/2017"}, {"title": "input event triggered clicking outside input field", "body": "version reproduction link steps reproduce jsfiddle type character input field input event logged console click outside input field another input event logged console happen expected input event triggered like vue actually happening input event triggered regression occur vue breaks autocomplete component relies input events trigger autocompletion", "num": "5587", "d": "5/2017"}, {"title": "random event triggered input vmodel", "body": "version reproduction link steps reproduce click text input type letter h hit enter two events triggered hit enter event expected expected enter trigger event like normally type anything behavior see actually happening adds extra event hitting enter key nt hitting enter key normally without anything typed front could nt find reason explanation within changelogs assuming intended behavior customer complained autocomplete stayed open hit enter key nt previous week fix easy move keydown keyup canceling upcoming request kinda strange bug", "num": "5586", "d": "5/2017"}, {"title": "clerical error", "body": "version reproduction link steps reproduce code locates srccompilercodegenindexjs line transforms pluckmodulefunction optionsmodules transformcode think second parameter transformcode wrong transformnode optionsmodules gendata statickeys transfromnode transfromcode expected transfromnode actually happening transfromcode", "num": "5585", "d": "5/2017"}, {"title": "unit test ca nt compile less file correctly", "body": "version reproduction link steps reproduce steps vue init webpack myproject cd myproject everything works fine cnpm less lessloader savedev edit please check code detail steps way capitalize first letter good way env may ignore case file name mkdir srcless create new file check content create new file check content create new file check content npm run dev everything works fine terminate dev server error raised unable resolve variable defined please check message content step export default name app import lessappless content ofsrclessappless step content step content step app fontsize fontsize webkitfontsmoothing antialiased mozosxfontsmoothing grayscale textalign center color margintop error message step warn reporter sourcemap position found trace undefined phantomjs mac os x error error module build failed app fontsize fontsize variable fontsize undefined userstangjinfengtmpmyprojectsrclessbaseless line column phantomjs mac os x executed error secs secs expected baseless complied resolve variables correctly actually happening error variable undefined raised", "num": "5584", "d": "5/2017"}, {"title": "using ajaxprefilter", "body": "problem feature solve using ajaxprefilter add headers requests works trying vuejs vue request must execute different scope filter nt trigger way apply ajaxprefilter vue thank would awesome nt find anything proposed api look like would like know feature exists could added docs", "num": "5583", "d": "5/2017"}, {"title": "vue template compiler namespace support", "body": "problem feature solve ability structured template sometimes end lot components even name rename inside one component feel like would nice could namespace proposed api look like html import authentication signup usercomponents import counter serverstatus statisticscomponents export default components user authentication signup statistics counter serverstatus", "num": "5582", "d": "5/2017"}, {"title": "naming components string templates different documentation", "body": "version reproduction link steps reproduce component components section named kebabcase template used kebabcase used camelcase used string template camelcase kebabcase intitlecase name specified components section named titlecase forms available string templates expected according documentation registering components props use kebabcase camelcase titlecase vue care documentation also mentions using string templates however bound html caseinsensitive restrictions means even template reference components props using camelcase titlecase kebabcase actually happening components specified using kebabcase nt show referenced using camecase titlecase components specified using camelcase nt show referenced using titlecase", "num": "5581", "d": "5/2017"}, {"title": "add selected attribute", "body": "version reproduction link steps reproduce add select dropdown update selected attribute via computed property expected selected attribute added actually happening selected attribute added need using datatables plugin option print table csv format default includes option table need filter values currently selected display csv table unfortunately datatables passes string html element included example edited since selected attribute nt added determine selected thanks", "num": "5580", "d": "5/2017"}, {"title": "multiple events single von similar vbind object", "body": "problem feature solve could make binding bunch events element clear would also make work similarly proposed api look like way create computed list returns hash many event listeners repetitive events get something close directive without modifiers nearly useful also nt remove events quick attempt", "num": "5578", "d": "5/2017"}, {"title": "vmodel directive nt set according prop value child component using single file comp", "body": "version reproduction link steps reproduce open jsfiddle vue result different value prop set html output passed prop however app render passed prop parent code two different versions discussion vue forum issue expected prop child component set parent actually happening undefined using vue noticed issue days ago tricky part reproduce fact happens using render functions generated webpackvueloader original source two components processed vueloader create render functions child component nt receive prop value javascript passed prop value moduleexports props value string parent javascript moduleexports data function return customval value parent components testcomp require testcompvue", "num": "5577", "d": "5/2017"}, {"title": "allow key attribute scoped slots one single root element", "body": "problem feature solve improving rendering performance generic lists proposed api look like listvue listaflavouravue imaginarylistaflavourbvue", "num": "5575", "d": "5/2017"}, {"title": "custom methods text interpolation", "body": "problem feature solve allow create custom methods filters text interpolation declare methods actions example vuex map appwide thus would need importing libraries proposed api look like example developer could simply add following function method inside mustache syntax following would call function return formatted number", "num": "5574", "d": "5/2017"}, {"title": "ssr uid shared requests", "body": "version reproduction link steps reproduce tests based branch nuxtjs brings compatibility nuxtjs reproduced setup set false expected incremented context reset every request actually happening shared across requests request affects next one", "num": "5573", "d": "5/2017"}, {"title": "make creating functional components easier", "body": "problem feature solve currently declaring functional components specify field supply render method would lot clearer instead framework could figure sees function instead object proposed api look like registering function functional component registering components example vue files", "num": "5572", "d": "5/2017"}, {"title": "ssr error instanceof error false", "body": "version reproduction link steps reproduce use vueserverrender found vmrunnewcontext result cause koa think add error expected actually happening", "num": "5570", "d": "5/2017"}, {"title": "filter documentation wrong", "body": "version reproduction link steps reproduce navigate vue api docs note mentions filters understanding removed api expected expected see filter docs note removal actually happening still see filter clicking link source returns broken link", "num": "5569", "d": "5/2017"}, {"body": "expected handle dynamic classes vue", "d": "5/2017"}, {"body": "think bug behaviour means ca nt use vue conjunction pieces javascript example class independent vue method adds class element happens also class added class removed seems like reasonable use case work", "d": "5/2017"}, {"body": "let put another way manage classes vue alone use pluginlib custom code manipulate classes wrap vue component bug really", "d": "5/2017"}, {"body": "one core principles vue works well frameworks existing projects taken opening paragraph vue guide unlike monolithic frameworks vue designed ground incrementally adoptable core library focused view layer easy pick integrate libraries existing projects say use vue manage everything completely contradicts core principle nt see technical reason vue ca nt preserve dynamically added classes think bug convert feature request", "d": "5/2017"}, {"body": "actually easy integrate libs vue need help always ask forum dynamic class issue facing discussed many times already looking issues may help", "d": "5/2017"}, {"body": "expose methods parent component customising component content using slot use scoped slots pass methods way pass variables html", "d": "5/2017"}, {"body": "thanks raising point setting expression jsx pure js makes sense since already pass arbitrary expression evaluated set value render functions add warning vue important part updating docs playground edit makes sense use expression directive", "d": "5/2017"}, {"body": "ah see suggestion automatically evaluating using", "d": "5/2017"}, {"body": "possible expression evaluated template compiler use directly value", "d": "5/2017"}, {"body": "see oh well thanks time", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "wrong", "d": "5/2017"}, {"body": "created called rendered call routerpush called component rendered", "d": "5/2017"}, {"body": "use nexttick inside mounted support please refer forums", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "pretty easily define wrapper component keeps components rendering ssr postpones rendering client hydration works correctly egoist like lines code could viable workaround request discussed", "d": "5/2017"}, {"body": "get \u0e1e\u0e04 franck freiburger notifications githubcom problem feature solve many component yet compatible ssr may require large changes support partial ssr rendering could allow use component meanwhile eventually ported directives could also benefit behavior components may mandatory seo could allow better clientsideserverside load balance proposed api look like vue component export default allowserversiderendering false receiving subscribed thread reply email directly view github mute thread", "d": "5/2017"}, {"body": "thanks fine", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "sorry found solution click isa isa reversemessage", "d": "5/2017"}, {"body": "markdown actually uses spaces list indent doublespace likely display expected eg seen result github markdown also regardless whether behavior correct issue markdown library marked instead vue", "d": "5/2017"}, {"body": "set", "d": "5/2017"}, {"body": "due things watcher keeps track dependencies new reactive property added watcher fire designed handle case may exist initial watch thus wo nt collected dependency watcher fires new value old value primitive strictly equal watcher wo nt trigger callback however new value old value objects arrays may mutated trigger callback safe long story short overfire cases ensure correctness entire system design constraint aware practice wo nt lead logical errors critical perf problems wontfix may check see improve rewriting reactivity system using proxies", "d": "5/2017"}, {"body": "got lead logic errors using vuex store shared cache adding new item item object cache depending upon cache items triggered leads considerable performance problem item object callbacks relating called making unwanted logic results understand hard detect object changed easy way fix try using rx instead vue reactive system guys suggestions use case", "d": "5/2017"}, {"body": "halfsolution using finergrained computedwatchers whenever possible prefer making final computed watched value primitive know might always feasible though logicwise since watcher callback definition called multiple times always able safely overwrite previous sideeffects called value could lead logical errors would even likely lead logical errors called different values", "d": "5/2017"}, {"body": "yes temporary solution like suggested stringifying object saving vuex cache however drawbacks since component uses cache item would make redundant copy string parse new object memory consumes cpu memory objectwatching worked fine would one copy object memory stringifyparse needed another possible solution order avoid unwanted firing callbacks since watcher function called super frequently might consume much cpu dig logic see possible make safe repeating redundant callbacks think rxjs help case", "d": "5/2017"}, {"body": "improved logic use events instead notify change cache works fine thanks", "d": "5/2017"}, {"body": "use", "d": "5/2017"}, {"body": "use wait updates change also bug report", "d": "5/2017"}, {"body": "ktsn would interested working api surface big relatively straightforward", "d": "5/2017"}, {"body": "done", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "manually destroyed obviously created also never manually call component mounted vue component ed suggestion using computed property prop control page keptalive", "d": "5/2017"}, {"body": "thanks ur reply maybe use wrong way think u nt get point mean manual destroy b b gt click gt b gt c gt b b runs lifecycle think gt b b cached b gt c gt b use cached componentb however b created ps b gt c trigger c gt b triggered", "d": "5/2017"}, {"body": "child components reproduction works child components provided root instance", "d": "5/2017"}, {"body": "ktsn hm generic html tags treated child components component children give paragraphs", "d": "5/2017"}, {"body": "docs functional component render context component instance see", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "support files mentioned typescript git repo essentially said spoken evan supporting vue files would something ideally language service extension would take see details would like request extension files gets written", "d": "5/2017"}, {"body": "language service implementation vscode octref currently working", "d": "5/2017"}, {"body": "currently nt plan implement standalone project want idelike experience need use vscode vetur maybe octref able extract language service standalone project future", "d": "5/2017"}, {"body": "tracked going happen soon since language service undergoing major rewrite better template intellisense previously dealing htmlcssjs regions using multiple language services separately combining together vetur provide even advanced intellisense template using info cssjs sections", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "use add new keys reactive objects", "d": "5/2017"}, {"body": "thanks looks like bug thanks concise clear repro", "d": "5/2017"}, {"body": "seems async component rendered early", "d": "5/2017"}, {"body": "solved wait minute rendering need use hidden element placeholder", "d": "5/2017"}, {"body": "actually intended behavior name slots resolution follows rule work children nodes parent component node created rendering context case created context root instance created context functional component slot names ignored one hack work around use root instance create instead rendering context nodes", "d": "5/2017"}, {"body": "caikan second case change code code may cause two div element template allowed vue first sample code results one template one div template", "d": "5/2017"}, {"body": "reason property nt exist adding nothing either ie element therefore anything sure something give deeper look", "d": "5/2017"}, {"body": "sure issue though stuff renders fine svg nodes example probably better position judge app renders different svg layers based svg strings everything works fine really element nt svg data works fine hope helps bit", "d": "5/2017"}, {"body": "maybe works things moment wo nt work elements missing idea ie thought", "d": "5/2017"}, {"body": "maybe wording g element properly support innerhtml use time hope figure though may pm eduardo san martin morote lt notifications githubcom wrote maybe works things g moment vhtml wo nt work elements missing innerhtml idea ie thought receiving authored thread reply email directly view github mute thread", "d": "5/2017"}, {"body": "lt nt work without vue involved", "d": "5/2017"}, {"body": "hmm indeed seems polyfill takes helps directive render contents open issue repo seems polyfill nt handle images properly thanks guys", "d": "5/2017"}, {"body": "expected behavior called initial insert inside kept alive wo nt trigger similar hook components", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "ca nt open repro link please provide github repo instead explanation also vague nt seem related vue way vue core nt use promise internally tests passed sure upgraded vue libs please try isolate problem", "d": "5/2017"}, {"body": "u open", "d": "5/2017"}, {"body": "could problem related latest version webpack", "d": "5/2017"}, {"body": "closing believe nothing vue would lead error please make sure provide repro shows error caused upgrading vue", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "current behavior create reactive fields exist although value set nt trigger updates design encourages declare model fields upfront instead using empty object however using dynamic path segments binding seems impractical declare fields beforehand added patch makes code work said seems better use array already works current version", "d": "5/2017"}, {"body": "expected behavior mount vue instance piece indom template vue uses merely template extracts outerhtml element parses virtual dom render fns generate new dom structure replaces original element use custom elements template initialized page load vue generates dom simple fix move app template tag makes custom elements dormant vue mounts", "d": "5/2017"}, {"body": "content inside considered fallback content means proposal implemented without breaking changes personally feel makes slot composition overly complicated", "d": "5/2017"}, {"body": "trying understand better problem would need te discard component create new one current user kind state held vuex", "d": "5/2017"}, {"body": "using vuex maybe something look user data comes promise returning service implementation look something like export default name profile created userservicegetuser user gt thisuser user know could check see fresh data using hook component reused user see old state view network request get new user data resolves would prefer new instance profile component created know user data changed due user interaction elsewhere app", "d": "5/2017"}, {"body": "already props dynamically updated extra api feels redundant also imo controlled outside rather inside component", "d": "5/2017"}, {"body": "already fixed guess via pr", "d": "5/2017"}, {"body": "sqal said", "d": "5/2017"}, {"body": "components sugar syntax nt support modifiers using event nt change anything components actually use prefer", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "changing attach name props named users everything goes rightbut nt reason", "d": "5/2017"}, {"body": "understand need first understand vue performs updates templates first compiled render functions render functions called every time component updated since using inline literal prop value new literal array created every time parent component rerenders causes prop watcher fire every time solution avoid using inline literals use constant value instead", "d": "5/2017"}, {"body": "ok thank explanations", "d": "5/2017"}, {"body": "\u662f\u9488\u5bf9\u83b7\u5f97 key", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "\u56e0\u4e3a\u5916\u9762\u7684 li todo key todo \u90fd\u88ab\u91cd\u65b0\u521b\u5efa\u4e86", "d": "5/2017"}, {"body": "please include reproduction link small repository would helpful", "d": "5/2017"}, {"body": "also desription unsure actual problem saying parent hook fires child everything else seems like expected behaviour would indeed strange shoud fired called means child nt begin exists point", "d": "5/2017"}, {"body": "parent created mounted child created mounted console log parent created parent mounted child created child mounted parent created child created child mounted parent mounted", "d": "5/2017"}, {"body": "ok could loader bundle problem code loading vue use webpack components name vue cause problem vuecomponent child component child works import child componentschildvue vuecomponent child child question causes problem wrong render sequence components themselve work bundler return promise vue use vue uses promise accept dynamic loaded components", "d": "5/2017"}, {"body": "rendering sync process hwever lazyload component webpack happens asychronously parent finish rendering sychronously child lazyloaded rendered execution order lficecycle hooks different sync render expected", "d": "5/2017"}, {"body": "thanks thats thought feature request enable use lazy loaded components", "d": "5/2017"}, {"body": "case parent lazy loaded component", "d": "5/2017"}, {"body": "feature request enable use lazy loaded components using right nt discussion done forum", "d": "5/2017"}, {"body": "\u63d0\u4ea4\u9519\u5730\u65b9\u4e86", "d": "5/2017"}, {"body": "\u8fd9\u91cc\u8ddfnative\u4e8b\u4ef6\u7684", "d": "5/2017"}, {"body": "javoski \u758f\u5ffd", "d": "5/2017"}, {"body": "\u7528 arguments \u5c31\u53ef\u4ee5\u4e86 tue may pm yuri notifications githubcom wrote javoski \u758f\u5ffd receiving subscribed thread reply email directly view github mute thread", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "\u8bf7\u7ed9\u91cd\u73b0 tue may pm yuri notifications githubcom wrote receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "arguments tue may pm yuri notifications githubcom wrote receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "commit lead think using modifier better explict way value html input elements always returns string see", "d": "5/2017"}, {"body": "expected according browser default behavior adding modifier directive meet expectation", "d": "5/2017"}, {"body": "thanks solution vmodelnumber pengchongfu javoski", "d": "5/2017"}, {"body": "yeah works components think could include warning noncomponents", "d": "5/2017"}, {"body": "posva okay way make transition noncomponent cached component nt want create new component noncomponent", "d": "5/2017"}, {"body": "actually everything component noncomponent element", "d": "5/2017"}, {"body": "closing seen must use components inside", "d": "5/2017"}, {"body": "guess current behavior expected one beause syntax sugar seem make scene event handler delete property object maybe break reactivity property", "d": "5/2017"}, {"body": "find work around thank", "d": "5/2017"}, {"body": "saw expected behavior reason allow user know value provided input otherwise could entered user also empty input", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "could expected behavior vue force update component children", "d": "5/2017"}, {"body": "jkzing force update component occasion", "d": "5/2017"}, {"body": "rlsz sure let wait core members answer", "d": "5/2017"}, {"body": "jkzing", "d": "5/2017"}, {"body": "expected behavior child component slot content slot content may changed parent rerender force update child necessary", "d": "5/2017"}, {"body": "actually child component without slot also updatedthe determinant child component look like means wo nt updated parent changes updated parent changes whether child slot besides said slot content may changed parent rerender possibility vue trigger child updated even uncertain child content changed right", "d": "5/2017"}, {"body": "rlsz yes determine whether content changed needs diffed however content part child vdom tree way diff force child update", "d": "5/2017"}, {"body": "think make sense child component nt slot content", "d": "5/2017"}, {"body": "thanks point better way think determine whether child content changed differ outerhtml child vdom tree", "d": "5/2017"}, {"body": "rlsz outerhtml updates vdom nodes", "d": "5/2017"}, {"body": "javoski try", "d": "5/2017"}, {"body": "rlsz really meant content inside tag rendered child component intend render slot content related topic updated hooks reply actually child component without slot also updatedthe determinant child component look like means wo nt updated parent changes updated parent changes whether child slot", "d": "5/2017"}, {"body": "javoski suggestion", "d": "5/2017"}, {"body": "rlsz thing ancestor component changes without regenerate child vdom tree diff old ones know whether child updated even child nt need still updated also happens vdom implementations like always rerender child component whether without", "d": "5/2017"}, {"body": "jkzing imperfection react also vue think", "d": "5/2017"}, {"body": "properties start proxied vue instance may conflict vue internal properties api methods access vm dataproperty", "d": "5/2017"}, {"body": "mutates original array nt want create shallow copy avoid also make sure use attribute rendering lists", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "default webpack isomorphic use instead", "d": "5/2017"}, {"body": "thanks lot quick check helps ps nt chance attend vue meeting beijing chance access media like videos meeting thanks", "d": "5/2017"}, {"body": "works fine may looks like blur event never bubble wo nt trigger outer div", "d": "5/2017"}, {"body": "blur event triggered element captures focus eg use attribute make element focusable", "d": "5/2017"}, {"body": "afaik electron support devtool extensions", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "spec clearly defines value truefalseundefined usecase boolean value also string", "d": "5/2017"}, {"body": "ah indeed thanks pointing thanks time", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "meet problem example print lifecycle components abc destroy component b b gt c b run b lifecycle u see b destroyed got recommended ues manual clear cached component", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "think problem way import image try import image file assetdefaultjpg", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "nt export symbol separate file import chunks", "d": "5/2017"}, {"body": "posva nt solve problem still asynchronously load file actually complicates wo nt able leverage vue async component feature block declaration component till chunk loaded file longer component", "d": "5/2017"}, {"body": "meant asynchronously loading chunk since small unnecessary nt change rest code specially async component part", "d": "5/2017"}, {"body": "posva perhaps mentioned entry points suggesting synchronously load symbol file inlined entry points create two different symbols", "d": "5/2017"}, {"body": "oh right symbol different although raised point right start trying async load two components use inject suppose creating app lib wonder need use injectprovide targeted towards libs imo relate two components way chunk app wise", "d": "5/2017"}, {"body": "posva making library", "d": "5/2017"}, {"body": "code split library even though looks like bad idea put components chunk", "d": "5/2017"}, {"body": "posva library modular many entry points accommodate specific usecase besides point feature request wo nt going details normally nt issue webpack chunking async loading inconvenience fact vue async components loader nt function evaluated async components loaded asking make take function seems like reasonable feature request could benefits thanks trying help looking solutions problem least thread would like issue regarded simply feature request", "d": "5/2017"}, {"body": "ah see get multiple entrything said earlier thanks trying help looking solutions problem least thread would like issue regarded simply feature request regarded feature may convenient need know problem exists makes necessary pretty normal ask questions", "d": "5/2017"}, {"body": "problem fr solves described first post understandable fine ask questions concerned way kept offering alternative solutions steering fr thread offtopic", "d": "5/2017"}, {"body": "nt worry sceptical fr usually worse concerned pattern could impact usage injectprovide usage injectprovide provided definitely good one part sceptical part referencing parent child basically right inject access component static limits behaviour purpose making function makes super flexible also dangerous ps feel like really bothers asking questions understand usecase may super clear bother make clearer", "d": "5/2017"}, {"body": "posva part sceptical part referencing parent child basically parentsomething accessible context component instance hence note referring instance parent component declaration example closer context child instance tripleequals declaration safer imported explicit dependency rather implicit dependency crucial parent immediate parent child poor assumption make right inject access component static limits behaviour purpose making function makes super flexible also dangerous dangerous literally every method lifecycle event handlers render nonfunctional data provide methods computed etc function access instance access retrieve components component declared global ones anyway putting declaration component apart feature request already something helps understand fr better consider symbol separate file like said reason put component declaration purely convenience organizational leverage vue async component feature ps feel like really bothers asking questions understand usecase may super clear bother make clearer probably confused overlooking wrote understandable fine ask questions concerned way kept offering alternative solutions steering fr thread offtopic reiterate fine ask questions", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "datawowdelay", "d": "5/2017"}, {"body": "know bind lines arrtibute datawowdelay nt know deal lines without atawowdelay lines list", "d": "5/2017"}, {"body": "pass anyway element wont care get attribute need true components specify prop props access even pass throw hope helped", "d": "5/2017"}, {"body": "thanks micaso", "d": "5/2017"}, {"body": "tested fresh firefox works nicely must plugin extension messing style make sure open kind issues vuejsvuejsorg repo", "d": "5/2017"}, {"body": "suspect ffox ubuntugnome sorry posting wrong queue nonbug wasting time thanks", "d": "5/2017"}, {"body": "nt understand description problem asking question qualify steps reproduce transitions part problem problem exists without well distract makes think bug", "d": "5/2017"}, {"body": "linusborg pointed due transitions original element still dom animated anyway query dom result instead logic computed property", "d": "5/2017"}, {"body": "hi bramu depends specified dependency see update manually packagejson run recommend use", "d": "5/2017"}, {"body": "thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "5/2017"}, {"body": "nt think jsx need cause syntactic sugar createelement suppose want load render component usual time scenario want load exactly component new attrs props added original binded event disabled removed importantly want keep template component pure possible instead modifying adding extra logic achieve goal think best way modify ast directly compile render function hope guys catch point", "d": "5/2017"}, {"body": "nt return anything would difficult imagine supposed return consider fact could fire several different functions none", "d": "5/2017"}, {"body": "sirlancelot alternative call component method return value without", "d": "5/2017"}, {"body": "found guid vuejs parentchild component relationship summarized props events parent passes data child via props child sends messages parent via events alternatives want return calculated value parent method want reuse want duplicate code props really trustable two way", "d": "5/2017"}, {"body": "turn poorman vuex store supplying constructor starting object use create computed property seeing original post nt strictly issue vue team definition may able get better assistance forums gitter stack overflow", "d": "5/2017"}, {"body": "ianpatel encourage ask questions forum gitter try use issue tracker bug reports feature requests question pubsub trying called rpc instead emitting event provide method called barebones implementation fills calls function name without dedicated api", "d": "5/2017"}, {"body": "intended behavior hook used manipulate dom elements called every single item respectively", "d": "5/2017"}, {"body": "thanks response best practice tips managing events aggregate good ol counter system got nt love idea manually syncing number transition elements counter logic", "d": "5/2017"}, {"body": "perhaps using namespaced keys filtering checking match although regular html elements children would checked well", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "delimiters changed using runtime compilation full build work files keep files syntax consistent also version yet", "d": "5/2017"}, {"body": "oh okay thanks haha yeah realized cli upsidedownface also thanks great work love vue", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "use", "d": "5/2017"}, {"body": "reproduction link link vuejs repository see problem page", "d": "5/2017"}, {"body": "sorry need repro somehow simulate reasonable way feel free open new issue", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "create issue vuejsvuecli", "d": "5/2017"}, {"body": "okay thanks znck", "d": "5/2017"}, {"body": "first use option able reproduce situation appear html parsing safari element wrapped template tag results normal form element removed know gt outhtml add associated class everything right nt think bug much like safari approach", "d": "5/2017"}, {"body": "lonelyclick said related safari wonder allowed include form inside custom tag mds says wo nt happen use template strings files", "d": "5/2017"}, {"body": "repro seem using plugin handle async computed may post issue ask gitter forums stackoverflow", "d": "5/2017"}, {"body": "since vue default filters shipped free create search found one", "d": "5/2017"}, {"body": "indeed look like want google beforehand found nothing googlefufailure", "d": "5/2017"}, {"body": "maybe report", "d": "5/2017"}, {"body": "looks fine may fixed meantime kind problems better directly send pr vuejsorg repo", "d": "5/2017"}, {"body": "chrome see console output change value browser using", "d": "5/2017"}, {"body": "nirazul use last version chrome osx sierra see input field variable filtered values use variable input field logically influences filtered values recalculated every time change variable strange", "d": "5/2017"}, {"body": "dom gets updated vue therefore methods get applied filter sure expected use computed property need caching", "d": "5/2017"}, {"body": "posva looked generated render function saw filter function called every time function component called behaviour vue different performance nt need create computed property every transformation value transform function called dependent values changed called every rendering list many elements slow new behaviour similar dirty checking angular sad", "d": "5/2017"}, {"body": "imo expected change lead vm call render function invoke myfilter mymethod may improved keep dependencies relation object vnode states depend", "d": "5/2017"}, {"body": "wrap elements rely vue component avoid example", "d": "5/2017"}, {"body": "xujiongbo course create child component case case list need create new component every list item sometimes verbose fact think filters become useless behaviour expected also reactive computed properties much better need application great performance creating new component every small list item one big overhead looked like choice lesser two evils performance", "d": "5/2017"}, {"body": "also problem every property need created computed properties transformed data example property type date js want display two places different formats momentjs fact good performance create two new computed properties looked bit verbose looked like view layer model layer move model layer due performance issues", "d": "5/2017"}, {"body": "deshadow well different data changed update dom element vue directives associated dom need calculate data change go recalculate expressions vue need regenerate new tree compare old one process needs recalculate expressions value change vue going modify last use fact request simple want ability cache result like", "d": "5/2017"}, {"body": "first expected behavior component entire render function called updated second perf problem really rather vue taking calculating dates good maybe try memoizing calculation filters use faster alternative third values component nt sound like good idea maybe consider splitting component smaller ones splits updates well result better perf", "d": "5/2017"}, {"body": "well boss right", "d": "5/2017"}, {"body": "gebilaoxiong ok understand position values list items chat loaded messages every message date need show fact request simple want filter ability cache result like computed property absolutely right think performance improvements logically right nt agree ok", "d": "5/2017"}, {"body": "think use instead", "d": "5/2017"}, {"body": "please provide better steps reproduction component repository affected", "d": "5/2017"}, {"body": "also please remove vuejsuibpagination lib make repro easier make sure problem within vue lib", "d": "5/2017"}, {"body": "thank lonelyclick linusborg simple really visualization previous next labels affected lsaquo rsaquo escaped posva create single tag attribute inside template value", "d": "5/2017"}, {"body": "please take look srcpagesdashboardvue reproduction link html", "d": "5/2017"}, {"body": "please take time create proper repro", "d": "5/2017"}, {"body": "thank patience posva smile expect helps see appvue symbol escaped", "d": "5/2017"}, {"body": "escaped appvue tested using works nicely", "d": "5/2017"}, {"body": "devdependencies development buildjs development script need custom set packages installed custom build vue fit specific use case find workaround explain problem dockerize vue app wo nt install devdep", "d": "5/2017"}, {"body": "require checkversions processenvnodeenv production var ora require ora var rm require rimraf var path require path var chalk require chalk var webpack require webpack var config require config var webpackconfig require webpackprodconf var spinner ora building production spinnerstart rm pathjoin configbuildassetsroot configbuildassetssubdirectory err gt err throw err webpack webpackconfig function err stats spinnerstop err throw err processstdoutwrite statstostring colors true modules false children false chunks false chunkmodules false nn create image based official node image dockerhub create directory app placed run mkdir p usrsrcapp change directory commands run inside new directory workdir usrsrcapp get code needed run app copy usrsrcapp install dependencies run npm install run npm run build set environmental variables todo pulled due npm install rather npm install production default resulting pulling dev dependencies well env nodeenv production expose port app runs expose serve app cmd npm start code dockerfile way pluck dependency container moving nodeenv see todo bottom kinda bizarre packagejson see nt want put dependency production container build script depends pull inside container anyways", "d": "5/2017"}, {"body": "explaining problem nt install vue package", "d": "5/2017"}, {"body": "posva make concise want make builds happen inside docker container building outside container copying makes reuse modules sometime clogs packages nt cleaned unexpected way build script depend devdep packages cleanly build dependency packages also fast cuz much fewer packages anyways depends still pull devdeps order build whilst packaging container viztor u mean building outside container copying", "d": "5/2017"}, {"body": "posva talking building vue talking building app docker container question nothing vue hardly anything webpack template might used changed quite bit question essentially optimize webpack build minimum packages installed repository place conversation suggestion improve webpack template please open issue wwwgithubcomvuejstemplateswebpack", "d": "5/2017"}, {"body": "linusborg acknowledge fact issue derived vue directly although whole buildjs built automatically vuecli issued made issue terms previous framework used angularjs implicit cli build tool abstracts packages dependencies build tool needs one shot made seem clean probably use webpack well included whole abstracted tool package dep devdep anyways thanks regards", "d": "5/2017"}, {"body": "bug browser moving element outside table vue get replace", "d": "5/2017"}, {"body": "already issue today according docs need use special attribute custom component hoisted invalid content thus causing errors eventual rendered output corrected fiddle", "d": "5/2017"}, {"body": "try putting function instead", "d": "5/2017"}, {"body": "expected behavour vue virtual dom nt know changes applied dom jquery similar tools always overwritten removed whenever component rerenders reapply styles want persist", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "using user defined tag xline working", "d": "5/2017"}, {"body": "wiiikiii thanks response seems work isit legal table layout", "d": "5/2017"}, {"body": "exact issue today solved using multiple tags table rows use css style element component w rows output", "d": "5/2017"}, {"body": "rebz thank response already tried case recursive use multiple tags table rows like example would like component output html parent id parent name parent description child id child name child description child id child name child description see fiddle talking get inside breaks table layout way illegal table layout wiiikiii solution seems working nt know best way legal layout", "d": "5/2017"}, {"body": "looking issue discovered another one", "d": "5/2017"}, {"body": "bug components require root node technical limitation vdom implementation try use functional components though functionality limited nt need root element please use stakc overflow forum forumvuejsorg take discussion", "d": "5/2017"}, {"body": "please nt disguise question feature request ask questions forum stackoverflow pass around functions way pass objects declaring functions suffice", "d": "5/2017"}, {"body": "function passed way pass objects return would declaring functions stumble across every dom updating resetting styles classes", "d": "5/2017"}, {"body": "please use forums gitter stack overflow next time thanks", "d": "5/2017"}, {"body": "reactivity caveat need use", "d": "5/2017"}, {"body": "posva thank much response btw think would fair throw warning error case", "d": "5/2017"}, {"body": "detectable search detection caveat docs understand", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "provide component option look", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "reproduction please try properly explain bug", "d": "5/2017"}, {"body": "please make fixed android checking var isandroid ua amp amp uaindexof android gt uaindexof linux gt check android cli uc brower", "d": "5/2017"}, {"body": "enough information uc useragent string getting versions uc browser using eventual bug check leading reporting bug saying fix need provide context", "d": "5/2017"}, {"body": "hello sorry please listen explain bug vuejs version vuejs file lines around location place judge android detection think place bug found production environment uc browser useragent juc linux u zhw cn var isandroid ua amp amp uaindexof android gt really detect user using device read code wrote vuejs suggest using following way fix bug place please use var isandroid ua amp amp uaindexof android gt ua indexuf linux gt detect thank qqcom evan date vuejsvue cc daheige author subject vuejsvue check android enough information uc useragent string getting versions uc browser using eventual bug check leading reporting bug saying fix need provide context receiving authored thread reply email directly view github mute thread", "d": "5/2017"}, {"body": "proposed fix would lead linux browsers also detected android nt think appropriate fix uc version using seem old vs latest may also device android os using", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "worth wrote workaround stackoverflow question today sure changing way watch works viable solution cases", "d": "5/2017"}, {"body": "ya agree sure worth either thought interesting watch fire watched variable set value sure straight javascript compare curious someone vue experience thought perhaps watch use loose comparison arraysobjects", "d": "5/2017"}, {"body": "vuejs bug", "d": "5/2017"}, {"body": "watcher checks whether fire using strict equal changing behavior would breaking unlikely happen imo component responsibility avoid infinite loop also think appropriate place check shallow equality inside watcher callback", "d": "5/2017"}, {"body": "already fixed commit make sure actually using latest version", "d": "5/2017"}, {"body": "please open issue vueloader repository", "d": "5/2017"}, {"body": "migrated vuejsvueloader", "d": "5/2017"}, {"body": "thanks posva", "d": "5/2017"}, {"body": "make sure use different attrs components though problem appears second child appears first one", "d": "5/2017"}, {"body": "nothing second component however updated jsfiddle convenince removed second component problem remains please reopen issue", "d": "5/2017"}, {"body": "sake clarity nt work expected one component wrapped exists page added second one illustrate difference result", "d": "5/2017"}, {"body": "using instead latter work", "d": "5/2017"}, {"body": "thanks joining nt know maybe mentioned docs however actually works except rare cases type race condition happening example works well emit child component settimeout rather http request callback real prodution code used need show loader separate div wait content child component load transition smoothly switch example however turn transition applies top wrapper div element nt apply need hide first div loader show div child component may see another fiddle also without wrapping div like get warning whatever option take hit wall", "d": "5/2017"}, {"body": "would probably better approach problem different way want show loader place component still loading data would recommend using directive component attaches loader certain condition ie another approach would use dynamic approach", "d": "5/2017"}, {"body": "thedutchcoder dynamic component approach nt work child component tells parent loaded data must mounted start loading data thus use vshow vif even complicated child component real app actually check jsfiddle try modify var rather nt get idea custom directive well could elaborate mean tell component show loaded inside parent actually trying resolve many loader trying make dry code make one global loader shows route initializes loads works ok try add smooth transitions", "d": "5/2017"}, {"body": "ok guys still nt find working answer issue closed let summarize try make dry solution use different components show spinnerloader within transition component switch initialization tried first problem transition applies top wrapper div element nt apply need hide first div loader show div child component second problem blocks get randomly time blocks ar shown third problem smooth transition like switch blocks smoothly fourth move loader inside component problem dry component switches loader switches well thus visually twitches nearest solution needed second random must shown unexpected thus reported bug achieve needed result vue guys", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "computed ref \u5e94\u8be5\u80fd\u89e3\u51b3\u4f60\u7684\u95ee\u9898", "d": "5/2017"}, {"body": "xujiongbo \u6211\u540c\u65f6\u9700\u8981\u4f20\u9012\u6570\u636e computed", "d": "5/2017"}, {"body": "need pass data use method create new component props next time please make sure follow issue reporting guidelines opening issue ask questions forum stackoverflow thanks", "d": "5/2017"}, {"body": "vue related", "d": "5/2017"}, {"body": "thank investigation tested markup variations looks like actually default behaviour anyway record anyone else runs put instead button submit add regular buttons", "d": "5/2017"}, {"body": "use submit inside form field button default type submit inside form use submitprevent submitform", "d": "5/2017"}, {"body": "see aleksejdix explanation", "d": "5/2017"}, {"body": "also nt work telling actually checkout branch something weird going directive preventing attachment event listener", "d": "5/2017"}, {"body": "may look later generally fail reproduce simple setup probably something setup case issue tracker wrong place something like forumvuejsorg would right one", "d": "5/2017"}, {"body": "tried quickly clone server nt start unhandled rejection error connect econnrefused objectexportserrnoexception exportsexceptionwithhostport tcpconnectwrapafterconnect oncomplete way check problem quickly", "d": "5/2017"}, {"body": "trying connect port server running port", "d": "5/2017"}, {"body": "database server listening", "d": "5/2017"}, {"body": "deleted username password server configurations serverappjs need postgres", "d": "5/2017"}, {"body": "works fine something must end", "d": "5/2017"}, {"body": "know also without ssr setup works using client side rendering something ssr messing directives think", "d": "5/2017"}, {"body": "copied component verbatim vue hn setup hydration working properly likely problem specific setuplogic please try isolate issue something demonstrate indeed caused vue", "d": "5/2017"}, {"body": "thanks much looking", "d": "5/2017"}, {"body": "belongs vuerouter dup vuejsvuerouter tldr nt use unicode characters route paths officially supported use hash mode", "d": "5/2017"}, {"body": "always case need array obvious variable array", "d": "5/2017"}, {"body": "said pr use plain objects instead mixins achieve something similar", "d": "5/2017"}, {"body": "posva using typescript decorators implementation decorator uses vueextend options order create components needing extendmixin functionality multiple components causing issue avoid problem ability change underlying component telling use vue typescript scenario simple change code would fix thanks", "d": "5/2017"}, {"body": "ideally mixin component otherwise extend loose ability extend multiple things time", "d": "5/2017"}, {"body": "use decorator exporting mixin", "d": "5/2017"}, {"body": "time work may bug", "d": "5/2017"}, {"body": "actually implemented mixins constructors past motivation class style declaration typescript friendly objects", "d": "5/2017"}, {"body": "possible different decorator support friendly declarations wrapping object", "d": "5/2017"}, {"body": "think wrapping needed since simply uses merging mixins afaik vue component decorators using", "d": "5/2017"}, {"body": "may factors going created example uses inside vuerouter works chrome firefox error firefox actually issue traced code pr however see would cause difference browsers different decorator would possibility however may required issue resolved", "d": "5/2017"}, {"body": "ca nt work would work chrome ff anyone else able take lookany ideas", "d": "5/2017"}, {"body": "side note give error typescript doesnt option property", "d": "5/2017"}, {"body": "yes declared declaration files due undocumented api", "d": "5/2017"}, {"body": "considered public api though would definitely helpful toolslibsplugins need reflection component instance access normalized options object best case typeinterface", "d": "5/2017"}, {"body": "seems difference behaviour firefox vs browsers caused vuerouter present page sample includes vuerouter external resources use error firefox sample vuerouter removed works update caused vuerouter presence global mixin", "d": "5/2017"}, {"body": "posva finally figured root cause issue every object firefox already watch member objectprototypewatch means reaches watch merge strat parentwatch already true merges single array pull request fixes unsure actually write unit test issue present gecko browser watch support", "d": "5/2017"}, {"body": "hey nice job thanks lot looking well simulate adding property object prototype remove afterwards sure opened pr could nt find dizzy could nt see", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "never set value checkbox wo nt update besides favor use much easier even wrapped components nt stop component implementing interface customizing model implementation works", "d": "5/2017"}, {"body": "thanks looking nirazul prop nt need declared rather passed jsfiddle input element attribute evaluated expression computed property jsfiddle update said reason would prefer avoid component nt need maintain state example using example variable bound prop nt update parent mutates value new property created per instance reflecting state component functionally need achieved using computed property bubbles event returns prop value however point making addressing seems vue bug element could investigated", "d": "5/2017"}, {"body": "never defined setting prop binding case subtle difference html attributes props skilled enough explain checked binding would nt work leave library authors \u30c4", "d": "5/2017"}, {"body": "nirazul also prop passed html slot aw nt sell self short thanks looking nonetheless", "d": "5/2017"}, {"body": "looks like behavior caused call assumption vue dom update kicks via microtask browser checks behavior browser resets checkbox state sees event default behavior prevented overwriting dom changes made vue firefox works properly think chromewebkitonly behavior sure need really need wrap calls get around", "d": "5/2017"}, {"body": "thanks looking awesome nt think see browser issue use block checkbox checking clicked also ensure single source truth checkbox reflecting within view model rather dom needed state input strictly reflect data view", "d": "5/2017"}, {"body": "imho introduce prop validation since modifier syntax suger corresponding handler child component validation would mean child control state update strategy parent", "d": "5/2017"}, {"body": "may right ok", "d": "5/2017"}, {"body": "purposely without knowing exists templates javascript never null js let users js without knowing add security checks kind like dealing user input js context rather one things wrap straightforward natural way computed property fallback content context apply transformation templates transform stuff like", "d": "5/2017"}, {"body": "think use computed property stubs possible nested fields also done envs proxies available create proxy objects allows arbitrary path access either way nt think exposing ways rewire property access vue instance would good idea", "d": "5/2017"}, {"body": "thanks responses posva transforming abc amp amp ab amp amp abc makes sense part still edge cases vif abc efg creating transforms edge cases would unfortunately quite difficult wo nt able depend customers manually fantastic idea actually given try works really well exception missing rootlevel properties believe fact everything data extracted scope render function accessed rootlevel variable example recursively made proxy object accessing returns null expected instead throwing exception huge step forward still throws exception attempting since otherdata defined vm appears due something like behind scenes unfortunately way put proxy beneath otherdata case solve problem running regex entire template matching varname varname simply adding matching properties rootlevel data properties nt exist already combining recursive proxy works really well looks good solution right however still nt give good way get list paths data referenced template post vifs logic keep looking solutions one though thanks help", "d": "5/2017"}, {"body": "need add attr tabs", "d": "5/2017"}, {"body": "error telling problem make sure look part releases notes need help please ask questions forum stackoverflow", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "use instead", "d": "5/2017"}, {"body": "augment vue types see", "d": "5/2017"}, {"body": "nt add css transition also beware vue optimization reuse dom elements may need use", "d": "5/2017"}, {"body": "properties start proxied vue instance may conflict vue internal properties api methods access see", "d": "5/2017"}, {"body": "thanks answer", "d": "5/2017"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "working sassscss caveat", "d": "5/2017"}, {"body": "error generated code fails pass fsreadfilesync method using templates", "d": "5/2017"}, {"body": "reproduction", "d": "5/2017"}, {"body": "element properties like remove good go", "d": "5/2017"}, {"body": "posva without modifier still unnecessary data html property presented component previous version vue worked fine explain please behavior changed", "d": "5/2017"}, {"body": "never worked way find info", "d": "5/2017"}, {"body": "posva thank much sorry wasted time", "d": "5/2017"}, {"body": "sorry question bug report", "d": "5/2017"}, {"body": "try find problem project get nothing clone vhn modify component use pug vueloader document said processing templates little different webpack template loaders pugloader return template function instead compiled html string instead using pugloader install original pug step step problem still case still issue google translate", "d": "5/2017"}, {"body": "necessarily vue issue please open mintui repo instead", "d": "5/2017"}, {"body": "fact tried mintui muse ui also build two problem found even mintui demo opened mobile web browser think might something wrong vue", "d": "5/2017"}, {"body": "probably lacking promise polyfill", "d": "5/2017"}, {"body": "johnhargrove could give example failing sure happen", "d": "5/2017"}, {"body": "lokson situation child component ca nt satisfied component ancestors including root vue object ran developing validation service basically class top level component represents collection form inputs inputs complicated vue components building forget validationservice parent components silently never reference injected results errors related accessing members undefined object etc theory reason feature request getting kind indication went unsatisfied seems useful development", "d": "5/2017"}, {"body": "gmailcom", "d": "5/2017"}, {"body": "use relative file path like also nt necessarily public depends serve server exclude files static serving middleware put public assets instead", "d": "5/2017"}, {"body": "works though still think would better absolute path possible", "d": "5/2017"}, {"body": "would make flexible", "d": "5/2017"}, {"body": "example build framework something like nextjs like use layout custom vue application entry name differ vuessroutlet make bit abstract implementation details", "d": "5/2017"}, {"body": "would add extra cost learn gain barely benefit", "d": "5/2017"}, {"body": "use strict", "d": "5/2017"}, {"body": "nt device test strict mode nt work android added something else docs work", "d": "5/2017"}, {"body": "meiliujun", "d": "5/2017"}, {"body": "defcc nexus", "d": "5/2017"}, {"body": "posva run sample testing run ok excepted google nexus tested device iphone gt iphone gt iphone gt gt android gt android samsung gt android vivo honor", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "extent yes official devtool relies unlikely change break", "d": "5/2017"}, {"body": "thanks see reason follow approach", "d": "5/2017"}, {"body": "jantimon ca nt really say much niche case suggest tearing existing vue instances longer needed", "d": "5/2017"}, {"body": "sure really niche case pretty much affects every wysiwygish ui representation editors content management system feature point need rely clientside rendering technique content component case becomes present cents discussion", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "entirely sure looks like bug happens slot content mean time ing element question helps", "d": "5/2017"}, {"body": "ran something similar although example nested slot causes sibling component recreated probably related", "d": "5/2017"}, {"body": "nerdcave think related reason describe pr find works well change position like", "d": "5/2017"}, {"body": "pengchongfu also works add thanks looking", "d": "5/2017"}, {"body": "nerdcave also add wrapper like wrapper would placeholder default changed", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "sure label labelling improvement bug", "d": "5/2017"}, {"body": "posva sparamasivan missing something two root elements parent compoent error reported", "d": "5/2017"}, {"body": "defcc oh sorry forgot update repro yeah wrong adding single root element still showcases problem", "d": "5/2017"}, {"body": "also updated demo seems bug scoped slots", "d": "5/2017"}, {"body": "thank folks fixing", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "worked fine tested simulator kind errors also appear simulator vue nt even seem impact speed page manage js stack trace safari may look looks like something related device big amount content may want use something like nt look like error", "d": "5/2017"}, {"body": "posva crashing simulator also tested wwwbrowserstackcom iphone safari screenshot", "d": "5/2017"}, {"body": "bug expects expression either use note single quote around value", "d": "5/2017"}, {"body": "throw error removing everything dom correct", "d": "5/2017"}, {"body": "use non minified version vue", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "property short hand background styles including words setting override original fyi using instead solve problem", "d": "5/2017"}, {"body": "xujiongbo thanks solve problem", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "expected behavior nt want need either explicitly bind parent props declare props child", "d": "5/2017"}, {"body": "linked example props declared child problem persists working vbindprop documentation says", "d": "5/2017"}, {"body": "got mean declare props child say props might receive would force declare input props button example vice versa good pattern", "d": "5/2017"}, {"body": "dotbits also say expected behaviour three things equivalent currently bind nt prop named pass case root element also nt understand mean workinng introduced", "d": "5/2017"}, {"body": "posva problem children components level different props receive whole set props declared prop child html attribute child element implementing components pattern library based atomic design system brad frost means include even small elements like buttons call actions dozens different context nested levels explicitly declare props huge overhead case granular distribution atoms molecules organisms yes right last working version prop modifier created fiddle reproduces behavior version", "d": "5/2017"}, {"body": "oh see seem misunderstood modifier info docs bind things nt need case bind props explicitly fiddle going produce wrong markup keep mind ignoring pops would also breaking change", "d": "5/2017"}, {"body": "posva got try custom directive filter owned props suggestion approach", "d": "5/2017"}, {"body": "suggest explicitly bind props need component render function easier", "d": "5/2017"}, {"body": "nothing embarrassed interests think using object instead function vice versa worked properties dev warnings cool cost maintain execution thought docs covered quite well", "d": "5/2017"}, {"body": "ping phoenixeliot", "d": "5/2017"}, {"body": "less lack understanding going boilerplate little fast later actually using options things fail ways nt clear making new component throw common options start fill later take mental overhead remembering exactly called nt using vue terribly long nt heart yet also side note use coffeescript think notation could look pretty similar throw together new component look something like done right easy notice put instead one works perfectly fine breaks try actually use say change watcher nt run super obvious reason always feels like gotcha eventually figure also note usually happens like next day adding new functionality thus nt boilerplate fresh head erroneously assuming works nt seen problems", "d": "5/2017"}, {"body": "specific design decision behind common way setting function arguments understand similar api may seem intriguing personally nt think api need one function call config object ok different api docs clearly document changing syntax would breaking change justified supporting would add bloat small nonetheless codebase still justified comfort similar api", "d": "5/2017"}, {"body": "understand would agree adding warning would appropriate", "d": "5/2017"}, {"body": "thanks reporting easy first contribution needs little knowledge vue file needs modified inject arrays object able merge prolly used case someone looking first contribution", "d": "5/2017"}, {"body": "jaj ok got note quite logical indeed almost question though easiest way fork pull request", "d": "5/2017"}, {"body": "please move issue fr nt understand would need dynamically register nested module registering containing modules really talk", "d": "5/2017"}, {"body": "sorry wrong project app loads plugins different companies marketplace company namespace eg separate loading sets plugin loader transfer plugin register themselve module must currently check exists true add know modules store add overwrite something namespace companies allowed", "d": "5/2017"}, {"body": "think add helper registers nested module create necessary modules plugins call instead register topmost module modules registered time", "d": "5/2017"}, {"body": "hi please make sure follow issue reporting guidelines opening issue provide editable repro use base thanks", "d": "5/2017"}, {"body": "reproduction", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "thanks proposal unfortunately implicit behaviour really want keep things explicit one things make easy collaborate vue project ok globalise subcomponents advice namespace makes clearer component nested inside another sometimes may even need namespace specific enough change parent name", "d": "5/2017"}, {"body": "posva seems bit strange behaviour subcomponents allowed put directly template local registration globalize seems overloading declares subdependencies vue project even make sense used outside specific contextcomponent nt make senses outside instance tables cells tabs container tabs buttons ca nt see pratical reason wanted considering context kind lifecycle limitation something work make possible future", "d": "5/2017"}, {"body": "local registration explicit want things", "d": "5/2017"}, {"body": "posva maybe think turn local registration explicit slots instance export default components option require optionvue code determine explicity slot supports subcomponent allowed parent", "d": "5/2017"}, {"body": "still explicit component using select much intuitive simple add component parent usual new syntax using methods described global components thu may david rodrigues notifications githubcom wrote posva maybe think turn local registration explicit slots instance export default components option require optionvue code determine explicity slot supports subcomponent allowed parent receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "5/2017"}, {"body": "hello solved problem problem clue moment also want point email qqcom thank much", "d": "5/2017"}, {"body": "initialised find information caveat", "d": "5/2017"}, {"body": "posva object initialized component data misread reproduction", "d": "5/2017"}, {"body": "oh sorry misread indeed happening object treated readonly modify content scope scoped slot modifications component explicitly pass", "d": "5/2017"}, {"body": "great thanks note example works successfully modifying content scope scoped slot side effect recommended use", "d": "5/2017"}, {"body": "share fiddle nt work", "d": "5/2017"}, {"body": "speak completely correct works using object attribute guess would hard avoid though since javascript pointing data object beg question compose form scoped slot built scoped component flow exactly couple different pieces page data binding object attribute saved database working seen fiddle unless data binding object never able modify scope scoped slot would imply compose inputs slot workaround passing component scoped slot binding component eg slot template would considered bad hackpoor design decision", "d": "5/2017"}, {"body": "yes point attribute object work javascript nature recommended although come handy sometimes however pass method scoped slot use event handler together binding replaces case although even better keep within component", "d": "5/2017"}, {"body": "think vue internal way tracking things loops skipped elements seem stored empty text nodes probably faster processing needed see skipped items get rendered empty text nodes vue seems smart simply processing items list nt fall condition although sure intentional someone core team might able shine light nt seem like bug internal way tracking vnodes", "d": "5/2017"}, {"body": "think could issue vue internally since also report see text nodes closest thing put svg simple component containing svg seems cause extra vnodes around svg particularly problematic ssr hydration fail fyi believe text nodes comment nodes thus handling correctly ssr unfortunately holiday moment confirming intentional change difficult hope track tomorrow bug get patch asap get biscet tomorrow find true cause however need create small repro tests track failure update soon", "d": "5/2017"}, {"body": "thedutchcoder ssr problematic server side generate two real dom nodes nt match virtual dom client side result hydration failure", "d": "5/2017"}, {"body": "blakenewman nt use svg think problem may introduced commit optimized empty comment vnode could also create text vnode tried launch pull request sure author intention hope helpful track problem", "d": "5/2017"}, {"body": "issue extra vnode last one text checked built file elementui found bug comes false words two consecutive comment vnodes merged one text vnode", "d": "5/2017"}, {"body": "every vue component similar mechanism builtin nt need implement", "d": "5/2017"}, {"body": "maybe express well example case react used deliberately abort rerendering even currentnext stateprops different meant way accomplish something like vuejs", "d": "5/2017"}, {"body": "call move something right away set returned value bindingvalue want unfortunately yes directive exception often need execute inline statement hand custom directive directives expects value would also breaking change already pass function params example bind arguments commonly used part js better know benefit", "d": "5/2017"}, {"body": "fyi use thu may pm eduardo san martin morote lt notifications githubcom wrote call move something right away set returned value bindingvalue want unfortunately yes von directive exception often need execute inline statement hand custom directive directives expects value would also breaking change already pass function params example bind arguments bind bind commonly used part js better know benefit receiving subscribed thread reply email directly view github mute thread", "d": "5/2017"}, {"body": "tested randomevent mentioned", "d": "5/2017"}, {"body": "closing dup", "d": "5/2017"}, {"body": "thanks reporting looks like problem comes moment simple workaround use check value actually changed", "d": "5/2017"}, {"body": "maybe checking composing true create pr test bit", "d": "5/2017"}, {"body": "seem like mistake also defined flow typings unit tested right testing", "d": "5/2017"}, {"body": "linusborg thanks", "d": "5/2017"}, {"body": "please make sure read contributing guide issues bug reports feature requests encourage ask questions forum stack overflow gitter happy help", "d": "5/2017"}, {"body": "work really well external component collections could put elements like", "d": "5/2017"}, {"body": "justnobody true vuetify purpose uses prefix", "d": "5/2017"}, {"body": "vue import user usercomponents import statistics statisticscomponents export default namespaces user statistics feature want achieve", "d": "5/2017"}, {"body": "nt seem like clear name namespaces seems little long though similar note sure vue could differentiate namespace definition component definition example case could invalid component definition properties", "d": "5/2017"}, {"body": "xujiongbo yes kinda like nt like clear enough justnobody thinking uppercasing maybe something like conflicts name", "d": "5/2017"}, {"body": "another option validate prop values gets string containing colon looks", "d": "5/2017"}, {"body": "sure understand missing already namespace components look better helper done outside vue", "d": "5/2017"}, {"body": "posva hmm right nice never though obvious thank", "d": "5/2017"}, {"body": "top vue inspector devtools always shows titlecase form component", "d": "5/2017"}, {"body": "doc needs clarification intended behavior kebabcase baseline always supported two convenience conversions issue belongs vuejsorg feel free submit pr", "d": "5/2017"}, {"body": "done", "d": "5/2017"}, {"body": "choose one better manual next time please ask questions forum stackoverflow first thanks", "d": "5/2017"}, {"body": "thanks posva sure understood issue try explain better forum good one", "d": "5/2017"}, {"body": "solved problem post case someone ends looking alternative way solve using jquery still seems able update attributes vuejs though guess ca nt figure thanks posva", "d": "5/2017"}, {"body": "crswll means need parse event modifiers opposite template compiler moment sure good idea", "d": "5/2017"}, {"body": "nt know enough vue internals answer well guess attempting feature would good way figure", "d": "5/2017"}, {"body": "think complicated also need consider custom events", "d": "5/2017"}, {"body": "imo separate directive like native rewritten reason exists also handle custom events mentioned lonelyclick otherwise little sense bulk directive additional innerlibrary work redundant use cases", "d": "5/2017"}, {"body": "think could good fit avoid rewrites followed wostex suggestion although would make sense mind could open door passing around event nameshandlers would shortcut sometimes repetitive template assignments", "d": "5/2017"}, {"body": "lukeed still think part vue separate directive use", "d": "5/2017"}, {"body": "opposed idea either", "d": "5/2017"}, {"body": "thanks reporting fine update package project updated recently tell still enough test locally using vuecompile works correctly", "d": "5/2017"}, {"body": "know use inside template", "d": "5/2017"}, {"body": "certain tested variant didnt notice performance difference actually works thanks", "d": "5/2017"}, {"body": "another important part could applied specific elements template even though bind initial value also could ease filtering text interpolation inside elements", "d": "5/2017"}, {"body": "difference native filter wonder", "d": "5/2017"}, {"body": "oh apologize bad missed feature thank pointing", "d": "5/2017"}, {"body": "herringtondarkholme possible define filters whole app though ie across components", "d": "5/2017"}, {"body": "please ask questions forum stackoverflow thanks", "d": "5/2017"}, {"body": "internal used part application state think fine long user follows rule", "d": "5/2017"}, {"body": "realized construct function passed parameter configuration object actually reserved async components pity live thanks unit test", "d": "5/2017"}, {"body": "fyi might interested nickmessing idea sugar via babel plugin", "d": "5/2017"}, {"body": "known behavior ssr turn correct personally recommend nontrivial project performance please refer official ssr guide wonder whether fix appropriate since patching builtin never enough copy whole context breaks original point", "d": "5/2017"}, {"body": "herringtondarkholme case real problem vmruninnewcontext output different thing like", "d": "5/2017"}, {"body": "lonelyclick fixed next version using instead current behavior evaluate bundle separate context available", "d": "5/2017"}, {"body": "significantly faster looking forward new release", "d": "5/2017"}, {"body": "still please read template syntax section", "d": "5/2017"}, {"body": "worth noting link filters outdated returns search results github", "d": "5/2017"}, {"body": "rpkilby would kind please start new issue vuejsorg website repo problem scott", "d": "5/2017"}, {"body": "posva demo revised data usually get databasebut option needs frontend developer database nt allowed revise frontend developers want know next explanation meaning due limitations modern javascript original text official documents tell limitations javascript", "d": "5/2017"}, {"body": "means js built limitation want learn check", "d": "5/2017"}, {"body": "posva thanks link learn js vue", "d": "5/2017"}, {"body": "jounqin thinking think behavior preserved bundle separate context prevent affecting server process polyfills modify proper solution either explicitly attach inside bundle code like whitelist server", "d": "5/2017"}, {"body": "thanks explanation whitelisting server works fine", "d": "5/2017"}, {"body": "jounqin code example nt really understand make work correctly using", "d": "5/2017"}, {"body": "jonaskuiler vue need still using course running vue like", "d": "5/2017"}, {"body": "posva reproduce safari ios", "d": "5/2017"}, {"body": "behaves like issue", "d": "5/2017"}, {"body": "yeah bug safari manage fix docs take look pr nt think worth time bug probably disappear future releases safari make clear completely unrelated vue though", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "notifications githubcom wrote receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "history", "d": "5/2017"}, {"body": "notifications githubcom wrote history receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "\u6bcf\u4e2a view vue \u6bcf\u4e2a\u5355\u9875\u9876\u5c42\u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f created link \u4e2d\u4f20\u5165\u7684\u5c31\u662f windowdocumentlocationhref", "d": "5/2017"}, {"body": "\u5c3c\u5965 notifications githubcom wrote \u6bcf\u4e2a view vue \u6bcf\u4e2a\u5355\u9875\u9876\u5c42\u7ec4\u4ef6\u7684\u751f\u547d\u5468\u671f created link \u4e2d\u4f20\u5165\u7684\u5c31\u662f windowdocumentlocationhref receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "wangxiao", "d": "5/2017"}, {"body": "\u53f7\u62fc\u63a5\u4e00\u4e2a \u8bd5\u8bd5 notifications githubcom wrote wangxiao receiving mentioned reply email directly view github mute thread", "d": "5/2017"}, {"body": "\u4f20\u7ed9\u670d\u52a1\u7aef\u7684\u53c2\u6570\u505a\u8fc7 encodeuricomponent", "d": "5/2017"}, {"body": "repros ios safari", "d": "5/2017"}, {"body": "yes problem reproducible safari app well vue", "d": "5/2017"}, {"body": "centaur found workaroud", "d": "5/2017"}, {"body": "cherrygeqi added following code data fetch least test team satisfied", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "thanks", "d": "5/2017"}, {"body": "option gitbook enable pdf download could please turn going flight today wanted read docs whilst offline vue vuex", "d": "5/2017"}, {"body": "docs gitbok clone repos really easiest way", "d": "5/2017"}, {"body": "\u540e\u6765\u53d1\u73b0\u5176\u4ed6\u4f20\u53c2\u7684\u6307\u4ee4\u5c31\u4e0d\u62a5\u9519 div vlazyload", "d": "5/2017"}, {"body": "think would better typescript vuejs could work together directly currently happy using babel jsx plugin vueclasscomponent packages seem like lot toolchain job appears work issues put together starter project single file components packages", "d": "5/2017"}, {"body": "got problem", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "also met problem case want create fallback property use get value input input value visible problem inconsistent browsers default behavior browsers default behavior vue version", "d": "5/2017"}, {"body": "personal suggestion register manually vue issue tracking seems different imes different application logics require conflicting strategies leaving programmers manually registering listeners might still expedient", "d": "5/2017"}, {"body": "alias cause problem use production environment", "d": "5/2017"}, {"body": "sorry respond closed issue list behavior documented anywhere see example seems snag others occasionally seen seems quick note might beneficial save headaches thanks great framework either way", "d": "5/2017"}, {"body": "posva expected behavior tag allowed transition follow tag antixrist think maybe pass transition type intention template component vshow directive inside transition props visible transtype code jsfiddle", "d": "5/2017"}, {"body": "using vmodel custom getset work fine something wrong computed getset functions", "d": "5/2017"}, {"body": "nt attribute get removed empty creates tons casting errors really", "d": "5/2017"}, {"body": "looks like nt agree vmodelnumber ever returned string still hold strongly thinking property removed object turned null", "d": "5/2017"}, {"body": "kgrosvenor yeah met problem nt think empty string reasonable see explanation also reasonable making difference complicated need number type useful need know user input use filters make easier", "d": "5/2017"}, {"body": "purepear thanks check really like vue template engine know lot template engines support simplified inheritance feature well composition maybe would nice compromise would store source template string object automatically compiling vue file along render function would easy adjustment nt already would give people lot flexibility templates fnlctrl know template source string compiled render function stored component would simple change would huge help give lot flexibility without vuejs support addition template features guess ends decision totally support inheritance might useful others hitting issue", "d": "5/2017"}, {"body": "\u548c\u697c\u4e3b\u540c\u6837\u7684\u95ee\u9898\u554a", "d": "5/2017"}, {"body": "sure right way got around issue async options using component render async operation complete", "d": "5/2017"}, {"body": "thank much", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "", "d": "5/2017"}, {"body": "fixed used filter grayscale nt enable hardware acceleration added", "d": "5/2017"}, {"body": "works know compiled template going inserted generic solution", "d": "5/2017"}, {"body": "solution", "d": "5/2017"}, {"body": "ucdit answer called scoped slots see eg child component parent component hello parent propstext result hello parent hello child", "d": "5/2017"}, {"body": "maybe good idea add section official documentation aswell found searching quite detailed information file input even though change warning available feels quite hard create responsive form file uploads spa", "d": "5/2017"}, {"body": "could bootstrap problem time bootstrap also reasons use display properties vue nt change default behaviour bootstrap ca nt remove utilities still like posva suggestion adding option like want use another option could adding new global configuration property conditionalrenderingpriority type boolean default false usage adds inline styles added", "d": "5/2017"}, {"body": "resolve", "d": "5/2017"}, {"body": "want use html standard input typedate field edit date type model wonderfully powerfull extensible framework ca nt box ca nt read date field overwrite date string data select date solution could written two lines twoway filters modifier best solution would support natively checkbox standard input field date special thing", "d": "5/2017"}, {"body": "custom modifiers seems like brainer unless good reason masking input parsing value application use common practice making syntatic sugar like vmodellazycurrency amount would amazing", "d": "5/2017"}, {"body": "range function min max var array j var min lt max array j j return array", "d": "5/2017"}, {"body": "oppianmatt could share clearer example ca nt tell api documentation best go currently trying var addhandlers function el var button elgetelementbyidname tooltipitem buttonaddeventlistener click function event consolelog clicked eventtarget new vue el app template components app mounted function addhandlers el anyone better knowhow comes across please indicate approach event handling even possible vue", "d": "5/2017"}, {"body": "use rerender view update data find reactively update use ensure data given say vue taskqueue", "d": "5/2017"}, {"body": "plasmatium", "d": "5/2017"}, {"body": "shuaibird", "d": "5/2017"}, {"body": "plasmatium event listener\u5728beforecreate\u51fd\u6570\u4e2d\u7ed1\u5b9a\u662f\u4e0d\u662f\u5408\u7406\u7684\u505a\u6cd5", "d": "5/2017"}, {"body": "shuaibird \u5728\u4ee3\u7801\u5408\u9002\u7684\u5730\u65b9", "d": "5/2017"}, {"body": "plasmatium \u6211\u5199\u7684immutableremove\u51fd\u6570", "d": "5/2017"}, {"body": "shuaibird", "d": "5/2017"}, {"body": "facing issue vuejs anybody knows fixed somehow", "d": "5/2017"}, {"body": "nt ca nt really limitation comes reactivity system vue", "d": "5/2017"}, {"body": "since nt work vue ended simply creating method traverses object deletes element marked deletion regardless depth method created granted first pass deepclean obj keys keyslength return deepclean thiswhatever whant ends happening thiswhatever gets updated accordingly regardless depth ways requires less code sure works", "d": "5/2017"}, {"body": "nt know guys already aware seems stuff happening regards vue nativescript implementation started communityled initiative port nativescript vuejs take look community slack vue channel initial steps taken igor need prs lots help please join us comment", "d": "5/2017"}, {"body": "came across interesting tweet though sure means max lynch ionic regards support vuejs frameworks", "d": "5/2017"}, {"body": "cool ionic actually native ionic emulates native app ui guidelines uses native sdks bringing ui standards device features native apps together full power flexibility open web ionic uses cordova phonegap deploy natively runs browser progressive web app still awesome ionic supports vue though edit okay neither ionic nativescript reactnative weex really native hybrid approaches seems issue least originally native rendering like reactnative", "d": "5/2017"}, {"body": "nesbocaj one draws ionic support progressive web apps interesting discussion pwa", "d": "5/2017"}, {"body": "guys getting familiar vuejs requirements arise mobile development maintain single code base much possible support ios android platform app must also support push notifications know thread almost year old choices please help", "d": "5/2017"}, {"body": "codelabstudios quasar framework", "d": "5/2017"}, {"body": "sorry little late party nt terribly expensive looks like change part song cause songwithextrastuff rerun update duration property every song maybe update duration properties maybe song properties even nt changed maybe far new vue know works would even noticeable performance impact event calculated properties nested objects update appropriately thank much example", "d": "5/2017"}, {"body": "also annoying generates html like tag list gets long wo nt linebreak sometimes developers forget writing html inside tags", "d": "5/2017"}, {"body": "getting error putting propsexample test component", "d": "5/2017"}, {"body": "evan please see regarding simular issueworkaround involve autocasting instead splicing attribute number empty", "d": "5/2017"}, {"body": "kylemccarthy", "d": "5/2017"}, {"body": "lost hours similar place array mutation case used function template mention maybe help developers used following code template produced infinite loop warning html tel lesson learned prepare mutate data adding local component state", "d": "5/2017"}, {"body": "fnlctrl templates converted render functions use selfclosing tags compiling vue single file components", "d": "5/2017"}, {"body": "except stringify index nulls destination object", "d": "5/2017"}, {"body": "bit later gon na work value computed property comes vuex store", "d": "5/2017"}, {"body": "already solution xlink href also got problem able use vattr vbind position used vuejs also component using vuejs", "d": "5/2017"}, {"body": "sure problem nt use vbind issue closed alsomst years please open thread forumvuejsorg need help", "d": "5/2017"}, {"body": "found docs", "d": "5/2017"}, {"body": "know people thread gon na love", "d": "5/2017"}, {"body": "thank much sharing octref right time needed", "d": "5/2017"}, {"body": "thanks octref played bit really like proper typescriptin inside component files anyone interested compatible template", "d": "5/2017"}, {"body": "zigomir experimental wip would nt say good idea distribute widely yet see context future bright ts definitions provided much better semantical intellisense typechecking region etc used augment shape contextual typing", "d": "5/2017"}]