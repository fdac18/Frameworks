[{"title": "uncaught typeerror read property width undefined", "body": "description jquery running samsung android stock mobile browser useragent data getting following error minified js file backbonejs application uncaught typeerror read property width undefined url line line number specified error trace directly points method tweenprototyperun jquery page error happened jquery progress bar currently app production production monitoring environment error logs get flooded error please refer line unminified version jquery request resolve asap", "num": "3209", "d": "6/2016"}, {"title": "drag event element without draggable", "body": "canvas element example wish jquery could handle drag event give us detail information position direction time element without changing position element could handle input canvas logic wish jquery would functionality would support touch multitouches device may handle element input number box could drag increasedecrease number", "num": "3207", "d": "6/2016"}, {"title": "move wontfix page contributejquerycom", "body": "makes sense repo", "num": "3206", "d": "6/2016"}, {"title": "ca nt retrieve etc document loaded ajax", "body": "corollary bug retrieve contents tag document loaded ca nt get contents either tags anything like", "num": "3205", "d": "6/2016"}, {"title": "edge preview setting style property whitespaceonly value resets default", "body": "description edge breaking jquery test suite edge preview works correctly set property nonwhitespaced invalid value like also works fine edge amp well popular web browser link test case originally reported closed external without real explanation jacobrossi jdalton could elaborate cc dmethvin", "num": "3204", "d": "6/2016"}, {"title": "selector data data loaded via ajax works starting one level nesting", "body": "suppose file called loaded page title first level div direct child body ca nt retrieved second level div ie nested within div retrieved another file expected lines output observed first outputs second outputs expected seems nodes depth least dom tree loaded data node body would direct child body retrieved even direct children body let alone body etc way able retrieve utter nonsense even documented simple test case", "num": "3203", "d": "6/2016"}, {"title": "mozilla webextension settimeout setinterval must function arg", "body": "description hi submit webextension mozilla firefox using jquery following messages mozilla validation tool settimeout setinterval must function arg ligne colonne ligne colonne ligne colonne important issue generates warnings mozilla tool", "num": "3201", "d": "6/2016"}, {"title": "api version unclear", "body": "nt want dik unclear api page jquery version applies clicking left menu categories jquery leads page pointing upgradeguide would best easy ux way change api user viewing according dropdown selection version right idea api thanks reading", "num": "3200", "d": "6/2016"}, {"title": "ready much late", "body": "like idea deprecating ready broken simple demo shows triggers much late safari log readystate interactive line log domcontentloaded fired line log readystate complete line log load fired line log ready fired line browsers show order long wait ready", "num": "3197", "d": "6/2016"}, {"title": "mathrandom function cryptographicallysecure random number generator", "body": "description using jquery project one restriction use mathrandom present code code rejected say using making build combining js libraries getting jquery library get rid", "num": "3196", "d": "6/2016"}, {"title": "hungup force close selector remove dragleave", "body": "description hungup selector remove dragleave repeat red element drag window drag window infrequently hung force close jquery ie firefox pass example code lt hoge height width zindex top left backgroundcolor blue fuga height width backgroundcolor red gt", "num": "3195", "d": "6/2016"}, {"title": "jquery window load inside ready state triggered", "body": "description jquery got issue window load callback inside ready state gets triggered anymore think async since used jquery plugins executed page content loaded often wraped ready state users example code", "num": "3194", "d": "6/2016"}, {"title": "different result width height since jquery", "body": "provide feedback impact returning noninteger values css transform scale root element div css width jquery returns width uses offsetwidth jquery returns width uses getboundingclientrect breaking change least mentioned upgrade guide", "num": "3193", "d": "6/2016"}, {"title": "bug data name nan gt false", "body": "data name nan gt false seed source code try data data true true data false false data null null convert number nt change string data data data rbracetest data jsonparse data data catch e value get nan know nan means number", "num": "3192", "d": "6/2016"}, {"title": "jquery breaks jquerymobile", "body": "getting uncaught typeerror read property concat undefined jquerymobile occurs always test case", "num": "3191", "d": "6/2016"}, {"title": "querydeferred exception read property", "body": "getting warning stops execution console log", "num": "3190", "d": "6/2016"}, {"title": "ca nt submit form submit method", "body": "bug reports ca nt submit form submit method description html code import js code function importdate var file input namefile fileclick var file input namefile fileon change function fileval null amp amp fileval want submit form cant importdocform submit else alert select file solve would grateful", "num": "3189", "d": "6/2016"}, {"title": "offset returning improper top left scaled viewports devices chromebook touchsurfaceiosandroid relatively positioned parents", "body": "description expect returning offset even viewport scaled properly give top amp left registration point relatively positioned parent element instead amount offset window pageyoffsetpagexoffset properties need subtracted give proper top amp left registration point relatively positioned parent also need subtract document element top amp left values client rect case scrolled panning around scaled viewport handling code get offset back jquery javascript var offset el offset get document element width without scrollbar var prevstyle documentbodystyleoverflow documentbodystyleoverflow hidden var docwidth documentdocumentelementclientwidth documentbodystyleoverflow prevstyle docwidth windowinnerwidth kind hack determine viewport scaled var docrect documentdocumentelementgetboundingclientrect offset top offsettop windowpageyoffset docrecttop left offsetleft windowpagexoffset docrectleft note tested webkit based browsers mobile safari amp chrome jsbin testcase steps open link touch device chromebook touchiosandroidsurface webkit browser safarichrome example spread two fingers gesture zoom page tap green box place red square within notice red square placed within parent correctly", "num": "3187", "d": "6/2016"}, {"title": "html entityencode greaterthan character attributes", "body": "description per whatwg spec attributes contain greaterthan gt character jquery html method respect changed respectively actually required standard userfriendly tested chrome ubuntu link test case", "num": "3186", "d": "6/2016"}, {"title": "filter parentselector returns empty array", "body": "expect receive jquery objects method filter returns empty return correct array previous version", "num": "3185", "d": "6/2016"}, {"title": "bug jquery", "body": "example jquery ui action tj vantoll manning press works gives error run browser description code calling replace stumble upon error fruit amp vegetable sorter fruits vegetables nt sorted fruits vegetables var fruits avocado banana apple cherry fig grape kiwi lemon olives orange pumpkin tomato vegetables broccoli carrot celery corn garlic green bean kale lettuce onion pea spinach turnip fruitsconcat vegetables function index item var type fruitsindexof item gt fruit vegetable mathrandom lt lt li datatype type gt item lt li gt appendto mathrandom gt fruits vegetables fruits vegetables sortable connectwith fruits vegetables cursor move helper function event item return lt div gt text itemtext placeholder sortableplaceholder stop function isvalid lt div gt append lt p gt correct refreshing game lt p gt dialog settimeout function windowlocation windowlocation function isvalid var valid true fruits li vegetables li function var item actual itemparent id fruits fruit vegetable correct itemattr datatype actual correct valid false return valid link test case", "num": "3184", "d": "6/2016"}, {"title": "offset always returns svg elements used work", "body": "new release whenever try get offset svg element returns rather actual values code used work fine broke update today let know get helpful information", "num": "3182", "d": "6/2016"}, {"title": "jqueryui position fails jquery", "body": "method jqueryui fails jquery jquery dumps error console uncaught typeerror elemgetclientrects function problem seems function used default property object passed provide property used jquery method works okay migrate plugin loaded rather seems incompatibility recent jquery jqueryui versions using following chrome versie windows also seems fail firefox jqueryui", "num": "3181", "d": "6/2016"}, {"title": "setting selected option using prop vs attr", "body": "hi problem selecting options reading using prop attr methods reduced problem could seen following fiddler basically setting property options false ca nt set selected property using attr method read select value val problem occurs nt tried versions may seem odd thing got since using different jquery plugins enhance selects multiselect picklist ca nt programatically clean selected options using prop method later multiselect work anymore ca nt also use attr method since multiselect uses prop sure bug simply browser limitation even intended behavior chrome firefox seem handle fine tried several different jquery versions without luck thanks advance help", "num": "3180", "d": "6/2016"}, {"title": "jquery still breaks sourcemaps", "body": "description traceback reformatting breaks sourcemaps unreadable compared browser built tracebacks folded closed like browser built tracebacks tracebacks essential development tool breaking traceback acceptable way write libraries closing tickets pointing jquery breaks tracebacks fix tracebacks", "num": "3179", "d": "6/2016"}, {"title": "fail callbacks receive wrong argument deferreds already rejected passed", "body": "suppose number deferreds passed deferreds rejected fail callback added receive argument passed first failed deferred behaviour jquery works jquery well one exception var deferred deferred set deferreds rejected works expected fail function consolelog arguments argument failed deferred argument failed deferred set deferreds rejected wrong arg passed callback jquery fail function consolelog arguments jquery argument last failing deferred passed callback receives deferreds time already rejected working example including comparison jquery see", "num": "3177", "d": "6/2016"}, {"title": "jquery breaks sourcemaps", "body": "description jquery error translation take account source maps generally malformats traceback making harder read exceptions", "num": "3175", "d": "6/2016"}, {"title": "exceptions silently swallowed fn", "body": "description exception thrown event handler ready silently swalloed many cases exceptions used indicate errors situations code errors instance exceptions like may cought user number userinput may also indicate errors usage code foo case catching counter productive since ca nt debugged anymore link test case", "num": "3174", "d": "6/2016"}, {"title": "amp lint built file", "body": "description running amp lint built file switch eslint currently moment built file linted precommit hook link test case na", "num": "3169", "d": "6/2016"}, {"title": "triggerfunctionclick link nt work", "body": "description function trigger click nt work links elements link test case", "num": "3168", "d": "6/2016"}, {"title": "offset report offset zero size elements", "body": "description document find note jquery support getting offset coordinates hidden elements accounting borders margins padding set body element code element shown width height seems belong hidden element code get wrong offset value feature issue since may chance need know element offset shown size link test case test case see element size get wrong offset", "num": "3167", "d": "6/2016"}, {"title": "version nugetorg", "body": "hi going release jquery nugetorg newest version nuget still would like upgrade jquery project need nuget thank help", "num": "3166", "d": "6/2016"}, {"title": "wrap refocus wrapped element", "body": "calling wrap textbox focus focus reassigned element wrapping complete instead element loses focus test case textbox stay green workaroundpossible solution", "num": "3165", "d": "6/2016"}, {"title": "document safari mobile support", "body": "jquery looked browser support page saw current current versions safari supported currently respectively anyway mobile section also mentions support ios mistaken first ios release came safari mobile preinstalled late mean safari mobile actively supported jquery mean ios supported safari mobile updated almost latest version sorry sounds like silly feature request really wished facts better addressed documentation reporting browsers versions os versions list", "num": "3164", "d": "6/2016"}, {"title": "locking issues comments bad practice", "body": "example last comment nt think discussion going resolve anything lock thread given reasons nt provide detailed api violations disagree right wo nt change approach locking issue comments totally unnecessary least premature administrator could made comment without locking issue could asked part exactly api guidelines linked supposed back point general locking issue comments stupid thing last resort extreme cases", "num": "3163", "d": "6/2016"}, {"title": "window load work", "body": "latest firefox chrome callstack typeerror aindexof function rfnload demo demo atest fontweight bold work correctly", "num": "3162", "d": "6/2016"}, {"title": "add test selected object exists", "body": "please add test elment selected id class really exits", "num": "3161", "d": "6/2016"}, {"title": "uncaught typeerror neasing thiseasing function", "body": "reproduce call animate invalid value easing parameter eg kjbdkjbdbd expected meaningful exception sensible error message unknown easing type xxxxx whose first second item stacktrace line code calling animate observed uncaught exception deep inside jquery code difficult debug uncaught exceptions definition bugs god fing sake check sanity input values", "num": "3160", "d": "6/2016"}, {"title": "", "body": "", "num": "3159", "d": "6/2016"}, {"title": "data function possible bug stupid intend", "body": "description using data function jquery get attribute value nt exist get data attribute value nt exist heres example fire div data foo return house makes believe data foo function linked datafoo attribute dom set like div data foo bike think datafoo attribute value bike haha thats case still house get attribute datafoo need write div attr datafoo get foo data code set need go div data foo extremely error prone could name classes div data foo div attr datafoo example could wanted check keyvalue pair undefined data defined dom object attribute undefined nt attribute figured coding expected something undefined defined dataxxx attribute name data xxx jquery function bug hell broke lose bug stupid intend think errorprone link test case", "num": "3158", "d": "6/2016"}, {"title": "jquery breaks jqueryui dialog error jfgetclientrects function", "body": "tried latest jquery jquery ui open dialog get error typeerror fgetclientrects function", "num": "3157", "d": "6/2016"}, {"title": "jquery ui position without specifying within gets error", "body": "jquery ui position utility function dies new jquery wthin option specified default within window position routine tries use offset routine jquery according new documentation use window query offset throw error excerpt blog error cases silently fail perhaps profound moment wondered offset window probably realized crazy question window even offset past jquery sometimes tried make cases like return something rather throw errors particular case asking offset window answer top left jquery cases throw errors crazy requests silently ignored please try release see code depending jquery mask problems invalid inputs fix jqueryui", "num": "3156", "d": "6/2016"}, {"title": "bootstrap javascript requires jquery version higher lower version", "body": "getting exception running grunt test phantomjs phantomjs windows error error bootstrap javascript requires jquery version higher lower version c", "num": "3155", "d": "6/2016"}, {"title": "deprecate jqueryfxinterval", "body": "since browsers use raf thing became pointless support dropped see", "num": "3154", "d": "6/2016"}, {"title": "minified version jquery include unexpect block scoped function", "body": "description minified version jquery transformed way includes block scoped functions original source roughly divstyle return function computestyletests gets transformed without renaming clarity code invalid strict mode older browsers supporting browsers function either transformed var function hoisted block primarily concern jquery bundled strict mode ran trying make block scoped functions feature closure compiler ran code pulling minified jquery build", "num": "3153", "d": "6/2016"}, {"title": "inconsistent call sequence single promise", "body": "fear thunder javascript gods still venture ask output following produce get abcd hoping jquery get acdb although nt particularly care mention using instead get dacb expecting dabc reasons imagine remember polymorphic nature feel argument passing calling order indeed native equivalent give dabc cc ducks cover", "num": "3149", "d": "6/2016"}, {"title": "sets generic objects support", "body": "appears following longer supported jquery problem assuming purpose recommend including note release notes many people relying miss particular see stackoverflow answers", "num": "3147", "d": "6/2016"}, {"title": "sel click fires multiple events", "body": "description test case implemented function utilizing broke assumptions another programmer made good corrected meanwhile researching currenttarget set test case discovered click firing one two events actual output reduced test case attached native click generated jquery link test case complete selfcontained test case lines htmljs functions indextxt apologies text file github nt appear accept html", "num": "3146", "d": "6/2016"}, {"title": "add support jspm sfx bundles", "body": "feature request require access jquery internals yes problem seems way jquery exported jquery benefit feature yes jquery used development production environments feature related dom operations need already served plugin change existing api support best practice yes description project create widget bundles using jspm jspmcli widgets want code isolated possible use jspm sfx bundles create using problem packages nt add global jquery wants export decides needs global overwriting jquery page lot issues link test case use webpack dev server nt happens", "num": "3145", "d": "6/2016"}, {"title": "request support css custom properties", "body": "css custom properties supported browsers except ie please consider adding support css method example text div css color return red div css color blue change text color blue without jquery must currently like getcomputedstyle div getpropertyvalue color div stylesetproperty color blue jsfiddle", "num": "3144", "d": "6/2016"}, {"title": "use raf timestamp smoother animations", "body": "jquery uses resulting significantly smoother animations compared however tweening logic uses instead raf timestamp argument result animation still slightly choppy switch using point velocityjs library opts use nt know actually still issue modern browsers julianshapiro originally wrote code perhaps chime details created test case demonstrate choppiness resulting using test case uses velocityjs believe jquery hope use test case debugging aid motivating example convince browser vendors get remaining issues resolved running codepen see slight choppiness jquery implementation using raf argument instead animation feels smoother graph perfectly smooth well thought perhaps using microsecondresolution function would improve smoothness nt seem help much", "num": "3143", "d": "6/2016"}, {"title": "require", "body": "construct using something code die property jquery mobile uses pattern construct object set properties like afterwards allowed need fix regression", "num": "3139", "d": "6/2016"}, {"title": "studying evolution jquery project", "body": "hi researcher studying software evolution part current research studying implications opensourcing proprietary software instance project succeed attracting newcomers jquery list analyze impacts jquery migration analyzed git log commit history project terms number contributions number newcomers number contributors per month following figure presents temporal perspective regarding three measures given numbers presented graphic would like ask jquery developers following questions motivated project open source code github evaluate benefits migration snapshot make sense find inconsistency data internal policy promoteattractretain newcomers succeed slope number newcomers joined project thanks advance collaboration gustavo pinto phd", "num": "3138", "d": "6/2016"}, {"title": "bootstrap unit test fail svg element", "body": "test bootstrap current version fails chrome safari passes ie edge firefox getclientrects call inside offset returns length zero browsers seems work fine relatively edgy case unit test nt present bootstrap given way fails nt something easily worked around via migrate example also worried code may expecting get offsets svg elements even though never officially supported would work check whether current element svg perhaps avoid check case", "num": "3137", "d": "6/2016"}, {"title": "jquerymin file use windowcrypto instead mathrandom", "body": "hello request please using hp fortify codebase fortify reports security vulnerabilities jqueryminjs file using mathrandom possible replace mathrandom method windowcyrptorandom method thank patrick", "num": "3136", "d": "6/2016"}, {"body": "looks like expected behavior one changes made allowing invalid input error rather failing silently failing silently make difficult debug serious ones nt think need change anything jquery would consider opening issue angular nt addressed already suggest putting together test case angular show scope getting passed camelcase function", "d": "6/2016"}, {"body": "angular app uses jquery works correctly angular repo passes unit amp test suites jquery well sure problem nt lie code", "d": "6/2016"}, {"body": "nt enough information work provide reduced test case requested issue template also noting jquery version nt latest", "d": "6/2016"}, {"body": "reopen test case", "d": "6/2016"}, {"body": "sounds like plugin would nt put directly jquery core", "d": "6/2016"}, {"body": "using api incorrectly see", "d": "6/2016"}, {"body": "believe internal bug filed able dig mon", "d": "6/2016"}, {"body": "great thanks jdalton please keep us posted", "d": "6/2016"}, {"body": "effect jquery apis outside unit test cc fremycompany", "d": "6/2016"}, {"body": "hey want apologize comment said bug marked external look internal history bug happened duped bug internal one already tracking issue nt exposed externally sure bot person got wrong investigate make sure happen anymore might done something wrong said john asking right question bug surfaced months ago first reflex wanted fix regression impacting jquery test suite discovered like pure whitespace resulted issue decided prioritize bug fixes top one since nt hear report issue impacting live site investigations decision nt reverted since definitely want fix bug extremely unlikely make next release edge know bound happen soon first anniversary windows approaching live sites suffering issue would definitely help defend case fix window closing rapidly", "d": "6/2016"}, {"body": "nt think affects jquery apis outside unit tests said usually try supported browsers pass tests possible sometimes make exceptions browsers fast release cycles like firefox chrome fix faster could propagate version workaround edge releasing fast might resort support test mapping purewhitespace value empty one test failed mark discussion within core team", "d": "6/2016"}, {"body": "even works workaround", "d": "6/2016"}, {"body": "misuse api docs state second parameter dom element document jquery object string passing string turn jquery object see happening get jquery object containing couple nodes including one div containing find invoked element collection element obviously nt contain child wo nt get anything", "d": "6/2016"}, {"body": "misuse api docs state second parameter dom element document jquery object string passing string wow funny pretty sure learnt misuse api official tutorials sure nt invent seen lot places almost every example every stackoverflow answer involving supposed done correct way scan loaded document without misusing api way turn jquery object see happening get jquery object containing couple nodes including expected behavior nt get jquery object containing one root node nt bug", "d": "6/2016"}, {"body": "wow funny pretty sure learnt misuse api official tutorials examples please report supposed done correct way scan loaded document without misusing api want search got always append custom div search using div container html processed html root element ie element contain elements contents stripped rest remains", "d": "6/2016"}, {"body": "expected behavior nt get jquery object containing one root node nt bug exactly native apis amp tags get html foo div contents span contents", "d": "6/2016"}, {"body": "duplicate tool giving false positives", "d": "6/2016"}, {"body": "information messages present using jquery", "d": "6/2016"}, {"body": "cc ing mozilla folks miketaylr digitarald bzbarsky annevk kentuckyfriedtakahe cyberdees", "d": "6/2016"}, {"body": "indeed mozilla jquery bug figured update original poster mozilla addons site weekly pushes tool flag software always uptodate added go week issue resolved thursday gmt", "d": "6/2016"}, {"body": "basically every article applies jquery versions api differences described particular page see data docs example api introduced deprecatedremoved also mentioned versions changes apply", "d": "6/2016"}, {"body": "nt want dik unclear api page jquery version applies go entry tells signature added removed clicking left menu categories jquery leads page pointing upgradeguide main reason major version breaking changes upgrade guide describes changes many subtle difficult describe context standard api docs many relate undocumented behavior think programs may depending upon would best easy ux way change api user viewing according dropdown selection version right idea api api docs available xml data ideas display different way could open issue probably worth unless would like significant amount design work", "d": "6/2016"}, {"body": "ready handler fired asynchronously assure user ready handlers called even handler throws exception see", "d": "6/2016"}, {"body": "late though nt via timeout edit via long timeout", "d": "6/2016"}, {"body": "mean pages wait ready wait long time get fired load makes ready almost worthless", "d": "6/2016"}, {"body": "test done safari version first beta could buggy code", "d": "6/2016"}, {"body": "safari technology preview gives log readystate interactive line log domcontentloaded fired line log readystate complete line log load fired line log ready fired line wrong order much later", "d": "6/2016"}, {"body": "mean pages wait ready wait long time get fired load get called soon fires always asynchronously wait images loaded amp stuff like time fire suspect case nothing loaded event fires quickly cases may fire jquery ready callbacks try putting image page fire later", "d": "6/2016"}, {"body": "super small test file think okay ready handlers happen load guarantee document ready", "d": "6/2016"}, {"body": "try putting image page load fire later one small image order still log readystate interactive line log domcontentloaded fired line log readystate complete line log load fired line log ready fired line", "d": "6/2016"}, {"body": "extremely large image another site get normal readystate interactive domcontentloaded fired ready fired readystate complete load fired guess live ready late silly test pages", "d": "6/2016"}, {"body": "see every use cryptographically secure tool rejecting cases say restrictive case nt need result really random changing code would make much larger cost users library besides even used secure apis still need fallback browsers nt implement still code would still pass check done tool nt think anything", "d": "6/2016"}, {"body": "seeing issue windows addons installed addons remove", "d": "6/2016"}, {"body": "agree happen sure fix without making ready completely synchronous brings back demons", "d": "6/2016"}, {"body": "ready state bring ca nt execute features far know best practice wrap stuff ready function pretty sure events rarely used", "d": "6/2016"}, {"body": "definitely best practice wrap everything ready things done outside ready done initializing ajax requests nt introduce unneeded delays similarly ca nt execute features html document ready tickets open also believe could issues prefer act evidence rather incorrect assertions see also", "d": "6/2016"}, {"body": "problem late async problem executed never makes pretty useless eyes like plugin developers ca nt prevent users things ready state essential load event always work currently thinking solve even async execution maybe like tracking load event within library something bind afterwards executed immediately", "d": "6/2016"}, {"body": "adding additional information please stop reason never executes ready occurs onetime load event occurs", "d": "6/2016"}, {"body": "hi dave bug seemed unusual tests change window document nothing fires change window iframe nothing fires change window body nothing fires idea happening really weird changing back window nothing fires bug website", "d": "6/2016"}, {"body": "clear understand causing recently made ready handlers fire asynchronously advantages hard give disadvantage ready handler sometimes fire load event load event fires quickly enough side effect seeing issue binding load event handler load event already fired fix bind load outside ready js function things need happen document ready window load function things need happen full load", "d": "6/2016"}, {"body": "timmywil agreed ensures onload runs however nt ensure ready code always consistently runs onload code imagine situations might important example plugin initializes dom ready work page loaded entirely recommend solutions need document also determine whether cases become hard write existing code causing widespread breakage situation", "d": "6/2016"}, {"body": "dmethvin load event already ready loaded see mean perhaps could restore ready event give treatment give load event behavior would differ function could nt guarantee execution multiple ready event handlers one exception behavior would load event handlers", "d": "6/2016"}, {"body": "load event already ready loaded see mean yeah counting async nature defer ready loaded code next turn gives ready code chance run situation nt run yet saw", "d": "6/2016"}, {"body": "actual use case plugin must listen event timing matters", "d": "6/2016"}, {"body": "actual use case plugin must listen load event timing load ready matters additional content loading plugins often wait basic media loaded start actions wait plugins often nearly always wild initialized ready state plugin developers way break ready state plugins every event ready state developer wrote timing problem fact inside ready state never reached even kind breaking change", "d": "6/2016"}, {"body": "plugins binding initialization happen many times within single page binding immediately tracking internally nonplugin case nt see would bind inside bind fine without specific use cases require see reason change anything", "d": "6/2016"}, {"body": "change broke code website basically load html server using load function inside html exectuted script used always executed onload callback triggered ajax request page script server function foobar test log output quite lot code dependent order consistent big enough change decided rollback hope change made next jquery release fix need information let us know", "d": "6/2016"}, {"body": "ajax requests complete document ready may code page jquery certainly happen issue document ready versus window onload", "d": "6/2016"}, {"body": "agreed good breaking change though would nt say far documenting perhaps could add sentence existing item either create entirely new breaking change item rewording heading break existing links", "d": "6/2016"}, {"body": "width correct yes kind buggy since beginning jquery providing displaywidth instead changing meaning would less painful application imo issue worth new entry upgrade guide", "d": "6/2016"}, {"body": "current implementation one problem setting getting via css symmetric anymore", "d": "6/2016"}, {"body": "good point nt seem good sure deal though would help returned css value could return actual width would another breaking change doubt perhaps worse leaving inconsistent", "d": "6/2016"}, {"body": "applications like mine defect right people issue transform change css back half people getting back working solution without changing code half least able adapt without asking outerwidth css returning css computed value possibly manipulated parent surprising", "d": "6/2016"}, {"body": "jquery tries really hard return computed value usually value people want browsers often nt provide good way get values anyway stuck worth discussing team though see might done", "d": "6/2016"}, {"body": "change still upgrade guide imo done fast possible prevent upgraders problems", "d": "6/2016"}, {"body": "reason change made nt yet decided whether change code docs ticket closed", "d": "6/2016"}, {"body": "thanks explanation imo new code least version warning version useful case", "d": "6/2016"}, {"body": "please look help stack overflow turns bug please report reproducible test case ca nt know issue nt see code", "d": "6/2016"}, {"body": "thanks report known mentioned blog post updates ui amp mobile making compatible available time later", "d": "6/2016"}, {"body": "please look help stack overflow ca nt debug people sites turns real error provide steps reproduce may open separate issue", "d": "6/2016"}, {"body": "sorry mistake", "d": "6/2016"}, {"body": "could please provide test case works browsers", "d": "6/2016"}, {"body": "reopen good test case submitted", "d": "6/2016"}, {"body": "think problem covered api docs dimensions may incorrect page zoomed user browsers expose api detect condition hack mention consistent enough across supported jquery browsers could try tackle fixing around since beginning time", "d": "6/2016"}, {"body": "dmethvin thanks reply missed reading docs suspected called hack correction offset pretty sound browsers support determining scaled viewport nt really strong rather event api check anyway product supports newer browsers version jquery using get away ymmv browsers jquery supports", "d": "6/2016"}, {"body": "hack nt seem reliable since already covered docs things continue get priority foreseeable future prompting close would welcome patch though", "d": "6/2016"}, {"body": "seems exactly native api goal", "d": "6/2016"}, {"body": "interestingly safari escape entities chrome amp firefox nt spec say wrong", "d": "6/2016"}, {"body": "example setting property reflected attribute possible bypassing escaping would normally done browsers nt behaving consistently either behavior outside spec bug one browsers", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "take example put jsbincom jsfiddlenet since using jquery ui possible error known one since point described error sure", "d": "6/2016"}, {"body": "code calling replace stumble upon error fruit amp vegetable sorter fruitscontainer vegetablescontainer width float left margin fruits vegetables paddingleft minheight fruits li hover vegetables li hover cursor move fruitscontainer vegetablescontainer textdecoration underline margin sortableplaceholder border dotted black height fruits vegetables nt sorted fruits vegetables var fruits avocado banana apple cherry fig grape kiwi lemon olives orange pumpkin tomato vegetables broccoli carrot celery corn garlic green bean kale lettuce onion pea spinach turnip fruitsconcat vegetables function index item var type fruitsindexof item gt fruit vegetable mathrandom lt item appendto mathrandom gt fruits vegetables fruits vegetables sortable connectwith fruits vegetables cursor move helper function event item return text itemtext placeholder sortableplaceholder stop function isvalid append correct refreshing game dialog settimeout function windowlocation windowlocation function isvalid var valid true fruits li vegetables li function var item actual itemparent id fruits fruit vegetable correct itemattr datatype actual correct valid false return valid dave methvin mailto notifications githubcom sent saturday june pm jqueryjquery cc stanpapusa author subject jqueryjquery bug jquery take example put jsbincom jsfiddlenet since using jquery ui possible error known one since point described error sure receiving authored thread reply email directly view github mute thread", "d": "6/2016"}, {"body": "since depends local copies files nt know changed include jquery migrate local file see gives messages blog post mentions incompatibilities current jquery ui fixed migrate", "d": "6/2016"}, {"body": "sounds like support request please flesh forums jquery irc channel", "d": "6/2016"}, {"body": "probably dup would need test case sure put one together reason regression occurred nt support svg general test likely break", "d": "6/2016"}, {"body": "yes dupe sorry missed please close one comment main one", "d": "6/2016"}, {"body": "see blog post upgrade guide use jquery migrate put warning message console", "d": "6/2016"}, {"body": "yes know backwards incompatibility surely current jqueryui working current jquery problem idea migrate plugin help developers migrate however since issue caused jqueryui code solve issue plugin also fear many third party plugins depend jqueryui dialog widget likely fail jquery due issue perhaps move issue jqueryui since bug code", "d": "6/2016"}, {"body": "ui work include migrate tell plugin users use migrate problem lies outside plugin blog post specifically mentions jquery ui mobile situation compatibility jquery ui jquery mobile things work issues jquery ui jquery mobile addressing upcoming releases find issue keep mind may already addressed upstream using jquery migrate plugin fix expect releases soon", "d": "6/2016"}, {"body": "hi lukapt best place get jquery help forumjquerycom stackoverflowcom bug tracker", "d": "6/2016"}, {"body": "hope helps nt mix prop attr like", "d": "6/2016"}, {"body": "expecting bug since get different results different browsers since bug need find alternative solution want continue using plugins one uses prop attr thanks help", "d": "6/2016"}, {"body": "using attr basically wrong dynamic state form element described api docs report bug plugin getting wrong change code works use copy", "d": "6/2016"}, {"body": "still need test case preferably jsbincom jsfiddlenet demonstrates problem reporting prior ticket closed violated code conduct technical merits", "d": "6/2016"}, {"body": "test case using tracebacks sourcemaps seemed fairly obvious people time sufficiently enough explanation required apparently wrong live test case archive test case attached tracebackszip screenshot overall comparison functional examination browser built traceback functional failing jquery traceback", "d": "6/2016"}, {"body": "pretty much needed thanks adding line right jquery script tag js jquerydeferredexceptionhook function e throw e gives result course breaks promisea compatibility understand really handy debugging especially legacy coffeescript threw custom error subclass rather could narrow adding subclass regex original leave exercise", "d": "6/2016"}, {"body": "lots transcompilers make use source maps besides coffeescript dart typescript emscripten google closure compiler etc also lots tools concatuglifybeautifycompressetc js use sourcemaps tools compile jquery among besides missing sourcemap support one many failings broken traceback jquery causes", "d": "6/2016"}, {"body": "let know fixes issue situ close ticket look wording upgrade guide", "d": "6/2016"}, {"body": "pretty obvious issue fixed breaking tracebacks sourcemaps box behavior acceptable library let alone one widely used", "d": "6/2016"}, {"body": "sure saying fixed adding one line gives traceback close one shipped one line would consider fixed use case", "d": "6/2016"}, {"body": "would consider acceptable jquery shipped fix", "d": "6/2016"}, {"body": "pyalot already clearly stated making change inside jquery compatible standards fight standards pushy please refrain restating opinion helpful please acknowledge whether one line user code dmethvin provided solves problem tracing error code uses source maps", "d": "6/2016"}, {"body": "solve problem jquery breaks tracebacks sourcemaps refuse acknowledge would kind solution ca nt ship library find ways fix issue including talking standards body question talking browser vendors provide necessary abilities fix advise close ticket fixed prove point nt care getting right", "d": "6/2016"}, {"body": "think agree respecting sourcemaps traceback ideal problem solution compatible spec must compliant suitable solution close ticket nothing said dave maintains plugin helps debugging jquery deferreds used knows solution suggested works may able use plugin could use plugin debugging follow standards provide best possible workaround overwrite default throw instead code one line think solution compatible promisesa please comment reopen ticket", "d": "6/2016"}, {"body": "thing two cases provided equivalent adding event listener event inherently different adding callback fulfillment promise really want still use jquery listen event want extra sugar promise still invoke callbacks even added dom ready going get standard promise behavior", "d": "6/2016"}, {"body": "clear avenues investigation open talking standards committee specifies promises talking browser vendors apis help fix issue closed ticket nevertheless closing ticket mistake proves point lack commitment get things right detriment everybody writes js lackluster attitude persevere setting example mediocrity follow many others hurting ecosystems foundations upon jses success built subscribe condone process find abhorrent repulsive", "d": "6/2016"}, {"body": "pyalot actually fought hard issue battle lost follow spec despite fervor minority", "d": "6/2016"}, {"body": "talk browser vendors mentioned multiple times introduction necessary apis lets fix tracebacks technical issues democracy minority matter issue clear merits solving evidence clear day everybody see nobody honestly argue wrong pointing issue detrimental impacts something solved solved clearly solved", "d": "6/2016"}, {"body": "reported chrome escalate somehow paulirish", "d": "6/2016"}, {"body": "talking kenneth russell issue fundamental solution done tests around circumstances chrome sourcemap translation url shortening prepending jquery error string front traceback breaks chrome traceback parser case browsers nt implement still nice error display even satisfactory reordering execution promises semantic breaks traditional exception handling would nt fixed tracebacks would still rather useless nice structured traceback handling offered things like promises debugger could shipped box work expected builtin traceback displays rather think questions proper tooling addressed promises plastered every api library apparently nobody clue debug mess ridden everybody", "d": "6/2016"}, {"body": "prepending jquery error string front traceback breaks chrome traceback parser propose change make better could two separate statements helps", "d": "6/2016"}, {"body": "propose change make better yes nt modify string get errorstack way modification break chromes traceback parser think futile guess error parser chrome rules nt standardized case browsers nt error display nt user friendly styled like normal error ca nt collapsed", "d": "6/2016"}, {"body": "see code modifying errorstack rethrowing error gets chrome show stack formatted throwing point violates promisea ca nt normal action", "d": "6/2016"}, {"body": "bit breaks chromes traceback parser jquerydeferred exception", "d": "6/2016"}, {"body": "bit breaks chromes traceback parser adding issue got response enough error stack available properly applied source maps dmethvin try", "d": "6/2016"}, {"body": "chromes generates error string errorstack pass consoleerrorwarnlog reparses error applies appropriate sourcemap translation undocumented behavior introduced response ticket wrote parsing chickens format exactly conform chromes undocumented errorstack format inappropriate send errors consoleerrorwarnlog produces bad error display provides worse ux even works expected builtin error display see screenshots also inappropriate receive errors unstructured undocumented format varies browser browser inappropriate browsers reparse errors produced exactly reasons proper response whole thing would introduce standard stack format provide standard stack format lazily error asked like errortraceback getter whatever browser finds necessary obtain structured format provide console api accept standard stack format consoletraceback formats standard stack traceback according browser usually formats errors javascript among popular languages kind structured traceback handling introduction errorstack poorly conceived failure standardize ill advised integration promises browsers rushed ill advised face complete lack proper error tooling mistakes compounded mistake fixing", "d": "6/2016"}, {"body": "behavior difference never promised consider arguments particular order reject master deferred soon one input deferreds rejected personally disinclined start enforcing strict sequence would willing entertain arguments someone compelling use case", "d": "6/2016"}, {"body": "note asynchronous case ca nt depend particular deferred arg rejecting multiplerejection scenario example assumes things order probably nt want assume possible determine whether first deferred already rejected calling behavior change nt prevent determining need question whether common enough need add note upgrade guide think documentation already clear making guarantees", "d": "6/2016"}, {"body": "could provide details talking deferred exceptionhook sth else", "d": "6/2016"}, {"body": "talking fact consolewarn used instead bubbling exception browsers exception handler nicely format exception display appropriate source map links nt know jquery excactly output produces trough consolewarn foldable well formatted hard read breaks source maps ie link source appropriately jquery translate errors occur prevent browser displaying bad practice unproductive js development", "d": "6/2016"}, {"body": "would bubble exception browser promisesa spec following mandates exceptions occurring handlers swallowed amp turned promise rejections nt go directly browser thing log perhaps browsers could learn format stack trace logged manually would resolve source map issue otherwise open proposals improve current situation simple", "d": "6/2016"}, {"body": "comes choice able effectively develop using promises developing wins everytime promises spec unusable present state development nt used", "d": "6/2016"}, {"body": "promises spec unusable present state development nt used would good discussion years ago promises follow spec new dom standards written using promises almost every promise library follows could nt maintained previous jquery behavior interoperability purposes libraries even started blacklist jquery deferreds nt behaving interoperably ship sailed try improve current situation much possible staying within standard going switch noncompliant implementation", "d": "6/2016"}, {"body": "situation library retarded specification breaking development unacceptable absolutely everybody involved untertaking nt see coming mile away considered suspect harmful since jquery joined club apparently considered harmful break js development ever period end story eol eod end expect people continue using whatever crap breaks hope make perfectly crystal clear", "d": "6/2016"}, {"body": "please read code conduct respectful avoid words like retarded going close thread nt seem bring constructive proposals table", "d": "6/2016"}, {"body": "cool willingly maliciously breaking source maps refuse address issue duly noted duly noted indeed", "d": "6/2016"}, {"body": "true refuse address hostile rude impolite comments discussing ticket civil way far please nt ruin one", "d": "6/2016"}, {"body": "caused lot headache us reverted back please fix", "d": "6/2016"}, {"body": "document ready handler implemented via deferred change using promiseacompatible behavior reason case nt well handled likely nobody team uses style explicitly throwing constructed errors expecting get error message console note somewhere call chain handled error still work fine would also get error message console error due error implicitly thrown browser jquerydeferredexceptionhook see remedies one jquery add end chain fire internally least log something bad happened nt compatibility concerns either think stack lost point example least get message console another option users prefer noise silence add modified jquerydeferredexceptionhook logs errors including thrown ones would mean removing check error type nt think appropriate default though people use pattern simple rejection method promises would get kinds console noise", "d": "6/2016"}, {"body": "see remedies one jquery add catch end jqueryready chain fire internally least log something bad happened nt compatibility concerns either think stack lost point example least get message error number console thinking think require developers know rely promise handle errors generally happening deferreds ca nt really avoid using equivalent form think jquery handle errors internally catch amp rethrow timeout error normally logged console", "d": "6/2016"}, {"body": "also note previous behavior problematic different way attached document ready handlers first threw uncaught error like pyalot example handlers would run independent run jquery handle errors internally catch amp rethrow timeout error normally logged console would contemplate code bit stack want dump point last time looked impression would track sort perinstance error stack property making bookkeeping lot complex added quick dirty logging error types seemed like due developer mistakes", "d": "6/2016"}, {"body": "using fn equivalent form think jquery handle errors internally catch amp rethrow timeout error normally logged console could good workaround", "d": "6/2016"}, {"body": "giving ability pass optional exception callback argument instead chaining exception instance way exception chain till thrown outside instead dev could handle case inside specific callback please note new user still learning contributing jquery solution seemed logical thought share", "d": "6/2016"}, {"body": "nicklou think good idea new code nt even think possibility code already think also need add error handler internally ensure nt swallow errors one way look ready handler signature would provide default rethrows error user nt provide one implementation complicated bit alternate implementation case deferred nt build still possible", "d": "6/2016"}, {"body": "one way look ready handler signature would readyhandler errorhandler want note clear documentation equivalent ready promise signature makes look like since rethrowing error handler promise would results original throw", "d": "6/2016"}, {"body": "dmethvin seems nice solution take look needs order become implemented advice would appreciated scottgonzalez absolutely right similar ready promise specify documentation make clear invoked throwingexception conditions", "d": "6/2016"}, {"body": "let discuss monday sounds like material", "d": "6/2016"}, {"body": "dmethvin scottgonzalez mgol noticing jquery foundation members please consider contributinghelping find really interesting first class opportunity starting contributing jquery even deep waters", "d": "6/2016"}, {"body": "nicklou sure pr would welcome let us know questions", "d": "6/2016"}, {"body": "ok written code ready pull request relevant wondering though functionality needs supported also event handlers hard still needs added codebase general done small modification function passing another argument called function takes one argument exception object wrap inside call responsible call fullfilment function clause call block also modified someone pass exception function using logic followed general please express concerns would like make pull request code much efficient possible also need write test functionality implemented thank advance", "d": "6/2016"}, {"body": "pr", "d": "6/2016"}, {"body": "cc markelog", "d": "6/2016"}, {"body": "yes place jquery nt run dom method trigger event handlers present way forever browsers nt consistent whether method link recently consistency could nt run method making run method would probably break code cases achieve thing looks like download sure works consistently across browsers see discussion hook created", "d": "6/2016"}, {"body": "gave alternative comment trigger function use javascript documentgetelementbyid adrctdwnld click problem wanted present situation download example something similar saw thanks answer", "d": "6/2016"}, {"body": "ok great", "d": "6/2016"}, {"body": "believe report accurate offsets visible size zero elements", "d": "6/2016"}, {"body": "open pr issue fix ok nt check since get correct bounding rect", "d": "6/2016"}, {"body": "maintain npm amp bower jquery packages package managers need ask maintainers micha\u0142 go\u0142\u0119biowski", "d": "6/2016"}, {"body": "think input focus used wrap also state focus sorry english good like", "d": "6/2016"}, {"body": "problem generally applies situation remove content document manipulate sure wrap place happens test case easy one thing wrapped focus general focus could element inside wrapped structure like case need see currently focused element inside content wrapped refocus wrapping risky cases see", "d": "6/2016"}, {"body": "think workaround best way handle however willing review patch", "d": "6/2016"}, {"body": "closed without resolution", "d": "6/2016"}, {"body": "resolution patchwelcome low priority probably worth adding code jquery suitable workaround probably better solutions nt require wrapping element currently focus", "d": "6/2016"}, {"body": "closed never get fixed one know problem exists reason close pressure resolve open tickets stands description wrap method include mention element get removed dom thus trigger strange unexpected side effects like placing note bottom doc workaround going frustrate developers", "d": "6/2016"}, {"body": "well say patch welcome ticket found search whether open tend keep tickets open think could solve since issue around decade previous reports recall high priority several issues addressed patch mentioned likely problem exists elsewhere using apis example use remove focus element even elements removed later reinserted document treated either docs code cases exist api general nt treat cases consistently leads bug reports focus management extremely fidgety several browsers bad firefox disable several flakey tests ca nt synchronously focus elements obstacles time jquery tries force focus somewhere quite possible screw contrast know sure want focus straightforward application level", "d": "6/2016"}, {"body": "see point detach method think wrap method little different atomically remove reinsert dom also understand concerns focus handling fidgetyness familiar jquery code base feel apprehensive submitting patch workaround side effects concern integrating code base", "d": "6/2016"}, {"body": "think wrap method little different atomically remove reinsert dom nt thought apis might situation minimum wrap unwrap methods affected workaround side effects concern integrating code base spidey sense says side effects patch small worked supported browsers certainly consider think many times day jquery loaded trillions would hard justify adding example bytes fix problem one person reported worked around easily", "d": "6/2016"}, {"body": "thanks opening issue however issues jquerycom posted", "d": "6/2016"}, {"body": "please review comments use things like god fing sake stupid thought obvious ca nt believe library unusable helping productive discussion think team deserves addressed little less negative tone perhaps think comments insulting appeared tried respond explain things work way however want continue discussion want opinion whether reaction continuing negative tone harsh", "d": "6/2016"}, {"body": "please use jquery migrate upgrading code would told prefer read console messages instead upgrade guide", "d": "6/2016"}, {"body": "really easy jquery already ask stackoverflow ca nt find existing question", "d": "6/2016"}, {"body": "note google pretty good job diagnosing cost zero bytes library uncaught exceptions definition bugs yes question whose bugs god fing sake check sanity input values range insane values infinite would require lot extra bytes check suggesting check", "d": "6/2016"}, {"body": "uncaught exceptions definition bugs yes question whose bugs whoever wrote line code throws case library call library function invalid argument bug code error message nt something kind invalid argument xxx function yyy thrown directly library function calling wrong argument library bug simplifying bit obviously always exactly simple think get mean note google pretty good job diagnosing cost zero bytes library note jquery pretty bad job diagnosing clear error message fairly easy figure somewhere used somewhat wrong easing easy spot close impossible figure wrong easing passed parameter vital error message contains invalid value range insane values infinite range sane values nt right also please nt pretend stupid nt need check either invalid valid values one one even ranges infinite certainly invariant rule must hold checked would require lot extra bytes check suggesting check sure nt know internals jquery knew would fix pr couple ideas difficult check whether value valid let suppose wrap code uses value inside trycatch block catch exception know easing ca nt created tha value issue sensible error message containing actual value annoying part issue get error says neasing thiseasing function valuable piece information need heck value thiseasing assume invalid string passed note even go stack trace find line code triggered exception far trivial stack trace quite convoluted goes library inspect places find necessary tell invalid value could variable yes google pretty good job side end pretty useless message neasing thiseasing function looks like something like start something like consider almost pseudocode would lot better starting point probably value stored without checking sanity lot earlier much higher level judging depth stack trace", "d": "6/2016"}, {"body": "think many different places jquery call method incorrect argument add message every one would increase size library much larger understand would nice every time anyone passed bad argument could give essay bad explain probably meant nt practical", "d": "6/2016"}, {"body": "ca nt believe even arguing something obvious writing libraries write function first thing check validity inputs nt blindly use whatever comes general rule anyway may decide omit checks sake efficiency code footprint trading much debuggability understand lot cases jquery debugging whatever error may occur trivial anyway definitely one cases get error impossible debug unacceptable one spend hours debugging trivial error library unusable", "d": "6/2016"}, {"body": "writing libraries write function first thing check validity inputs nt blindly use whatever comes nothing black white jquery loaded trillions times per day size file matter way bug reported indicates minified version jquery used probably hard debug another tradeoff sizeperformance vs debuggability get error impossible debug true get error message console provides location set breakpoint value shows incorrect name maybe would clearer nonminified file provide ca nt control people use try track bugs", "d": "6/2016"}, {"body": "nothing black white know nt think appreciate dark gray case get error impossible debug true thought obvious impossible meant way harder get error message console provides location yeah location error message relevant true nature error error nt caught level invalid value allowed propagate deep low level part library code value provided even location significant crawl like dozen levels stack trace even easy figure much minified version jquery used probably hard debug decent error reporting level would nt even issue set breakpoint value thiseasing shows incorrect name error happens systematically reproducible", "d": "6/2016"}, {"body": "nt think discussion going resolve anything lock thread given reasons nt provide detailed api violations disagree right wo nt change approach", "d": "6/2016"}, {"body": "api documentation explains works", "d": "6/2016"}, {"body": "work moment possible create test case jsfiddle firewall downloading jqueryui replace jquery script newest version open indexhtml open dialog", "d": "6/2016"}, {"body": "uimenu", "d": "6/2016"}, {"body": "blog post mentioned new compatible versions ui mobile coming soon use jquery ui jquery migrate plugin work fine", "d": "6/2016"}, {"body": "experiencing issue hope fix soon guess revert jquery rectified", "d": "6/2016"}, {"body": "jquery jqueryui happens opening dialog electronjs app jqueryjs line", "d": "6/2016"}, {"body": "included jquery migrate app", "d": "6/2016"}, {"body": "fixed nt know need electron thanks", "d": "6/2016"}, {"body": "nt add jquerymigrate many external files added rolled back get fixed", "d": "6/2016"}, {"body": "duplicate", "d": "6/2016"}, {"body": "bootstrap atm support jquery", "d": "6/2016"}, {"body": "thinking submitting wip pr using raf timestamp effects", "d": "6/2016"}, {"body": "one reference jquery ui inside tooltip obviously easy update either hardcoding switching switching would mean stop working ie lt next version officially drops support ie lt trying actively break support one case nt seem worth add overhead feature detection conditionally use plan swapping use wanted see way could handle stay sync actual animation far tell actually sync right nt really matter reason nt inside actual animation call logic around showing tooltip abstracted away see call show implementation show inside base widget definitely nt affect deprecation wondering better way", "d": "6/2016"}, {"body": "fixed uglifyjs jquery fine nt upgrade amp branches real issue though allowed nonstrict mode none supported browsers choke code change jquery source strict mode nt released mode changing semantics released ca nt support modifications jquery rely strict mode onwards", "d": "6/2016"}, {"body": "already fix really problematic deploy would solve problems", "d": "6/2016"}, {"body": "also link uglify issue reference", "d": "6/2016"}, {"body": "issue releasing new version costs release process multistep release versions simultaneously always danger new release break something etc moreover preparing release jquery lines receive critical fixes like reiterate said though changing execution mode libraries use asking problems strict mode changes semantics means put code strict mode ca nt libraries without taking burden suffering consequences bug jquery us fix fixing issue appeared incorrect use library nt warrant releasing new versions also minify jquery lots things nt require us release new versions going close issue since nt think anything actionable part feel free continue discussion", "d": "6/2016"}, {"body": "necessarily asking release part next version branches think would sufficient purposes make temporary local change confidence nt maintain fork forever", "d": "6/2016"}, {"body": "reasonable request commited version bump amp branches ever cut new versions fixed uglifyjs used could check whether free problem tip branch nt use anywhere good verify issue indeed fixed thanks", "d": "6/2016"}, {"body": "appear still broken egrep wstyle functionsw hstyle hstylebackgroundclip contentbox hclonenode stylebackgroundclip lclearclonestyle contentbox hstylebackgroundclip gstylecsstext left position absolute gappendchild h function", "d": "6/2016"}, {"body": "sure nt fix problem version uglify using master echo concerns nt support strict mode fact specifically avoid due compat issues", "d": "6/2016"}, {"body": "short answer nt rely sequence potentially asynchronous operations also longer answer decided casting operation analogous particularly including unwrapping secondary thenables ie thenable fulfills possible native possible object returned fulfills ultimate fulfillment value sequence rather intermediate thenable order acheive need invoke forcing asynchronicity side effect logging example gets delayed", "d": "6/2016"}, {"body": "plain objects always documented limited support discussed dropping support completely present operations supported plain javascript objects wrapped jquery data prop trigger triggerhandler usage far outside purpose jquery dom library recommend including note release notes many people relying add note upgrade guide say many people examples stackoverflow answers example popular library use edit oh see used parsely others", "d": "6/2016"}, {"body": "discussed dropping support completely understand completely examples stackoverflow answers yeah ashamed say used parsley idea others accepted answer upvotes negligible comment undocumented anywhere etc oh wait answer pointed undocumented upvoted smile think lot people mistakenly think ok use difficult maybe go trouble output deprecation warning either supporting another version", "d": "6/2016"}, {"body": "nt think add code generate deprecation warning inside jquery something could jquery migrate nt yet formally deprecated use plain objects way used flat misuse api need add checks methods ones listed docs ensure passed dom elements lot checks", "d": "6/2016"}, {"body": "old ticket bugsjquerycom ca nt find moment due use attributes handler note nt execute handlers early jquery history decided try run handlers part one side effect use manually run jquery inline handlers nt try run dom method method tries run handlers block duplicate runs jquery handlers remembering jqueryeventtriggered ca nt inline handlers note call inline handlers wontfix issue due find ticket old bug tracker add wontfix page update somehow indicate occurs", "d": "6/2016"}, {"body": "dmethvin made think since generally consider inline handlers iffy wo nt stop invoking", "d": "6/2016"}, {"body": "always mostly compat experimenting splitting triggering event calling method like dom happens fire events default action even standard bit muddled things relate", "d": "6/2016"}, {"body": "little confused jquery exports via amdcommonjsglobal depending detected environment changes would like us make", "d": "6/2016"}, {"body": "created issue also jspmcli seems loaded assumes module recognize decides save window object overwriting original version window", "d": "6/2016"}, {"body": "checked happens jquery version nt happens version", "d": "6/2016"}, {"body": "discussing jspm team problem solved adding following snippet code jspmsystemjs config thanks time", "d": "6/2016"}, {"body": "adding support nt hard core issue see regular properties accessed amp written via property nt apply css custom properties need amp bigger issues wo nt decrease performance properties could apply special logic would use methods name starts love supported need careful thanks report", "d": "6/2016"}, {"body": "wo nt work gives properties set element jquery already normal properties anyways gives computed property values directly set values", "d": "6/2016"}, {"body": "yes meant placeholder sorry getter use setting use obviously", "d": "6/2016"}, {"body": "seems pretty doable well like", "d": "6/2016"}, {"body": "getfree would like try prepare pull request", "d": "6/2016"}, {"body": "honestly would nt feel comfortable nt look source code suspect wo nt simple writing wrapper around native js api understanding jquery supposed extra layer abstracts away browser differences incompatibilities nt know guys handle cases like feature missing browsers ie case also different branches target browsers others like jquery branch supports ie one nt", "d": "6/2016"}, {"body": "let try wo nt treated blocker", "d": "6/2016"}, {"body": "great analysis thanks lot surprised using gives worse results using timestamp since based timer made quick patch jquery made use raf timestamp added button test case graph looks similar velocity using timestamp one note seeing performance difference chrome nt see gain safari amp tp firefox safari mostly looks like velocity plus test case cases including one better chrome firefox looks terrible cases sure sth like chrome worth edit edge cases look worse safari way better firefox", "d": "6/2016"}, {"body": "firefox terrible graphs seeing use integrated graphics card macbook ie intel iris pro mb switch dedicated amd radeon mb gets closer safari perhaps firefox problems hardware acceleration intel gpus", "d": "6/2016"}, {"body": "always found dropping huge chunk frames upfront visually jarring fps hit real world lowstress animation scenarios fps hit nt noticeable", "d": "6/2016"}, {"body": "mgol good point created issue firefox bug tracker let see say necessary create issues edge safari julianshapiro agree dropping chunks frames really bad still happening though precise worse compared plotting values noop nt see initial framedrops", "d": "6/2016"}, {"body": "cool thanks", "d": "6/2016"}, {"body": "also updated bug reference older bug added bzbarsky take deeper look", "d": "6/2016"}, {"body": "nice test judging discussion mozilla thread still ca nt use right fixed fingers crossed still look olderother browsers support", "d": "6/2016"}, {"body": "firefox windows looks smooth chrome long nt make things much worse firefox changing raf timestamp anything stop us changing markelog point would also need ensure nt degrade much browsers like android", "d": "6/2016"}, {"body": "dmethvin quick patch made accept timestamp parameter slightly change api avoid need wrapper function might increase code size little nt see much gain using timestamp improves situation chrome maybe way preparing future prepare pr discuss details", "d": "6/2016"}, {"body": "ah said smooth chrome firefox windows mean looks like graph second one original joliss post completely smooth change situation", "d": "6/2016"}, {"body": "yeah firefox results smooth", "d": "6/2016"}, {"body": "mgol points timestamp dependant graphics card dmethvin card might good category case story could browsers also disturbing", "d": "6/2016"}, {"body": "also issue tickets open", "d": "6/2016"}, {"body": "mgol points timestamp dependant graphics card dmethvin card might good category case possible current data points thesis never worse using timestamp using sometimes better", "d": "6/2016"}, {"body": "pr please review", "d": "6/2016"}, {"body": "cc ing mozilla folks miketaylr digitarald bzbarsky annevk kentuckyfriedtakahe cyberdees", "d": "6/2016"}, {"body": "cc arschmitz", "d": "6/2016"}, {"body": "dmethvin ah thanks yeah trouble figuring exactly error coming", "d": "6/2016"}, {"body": "thanks submitting issue continue discussion since code issue going close jquery always open source love open source migration github nobrainer due popularity easeofuse interesting graph suggests newcomers since moving github far comparisons sure internal data github graphs encourage new people contribute conferences summits inperson conversations jquery websites social media avenues could nt say successful certain suspect developers summits organic conversation person played biggest roles attracting newcomers nt see slope much lot seem like burst newcomers end could nt say contributed although first year held conferences outside us thanks", "d": "6/2016"}, {"body": "nt see slope much lot seem like burst newcomers end could nt say contributed although first year held conferences outside us end first developer summit", "d": "6/2016"}, {"body": "avoid check make ie throw detached svgs wo nt", "d": "6/2016"}, {"body": "forget change test", "d": "6/2016"}, {"body": "probably performance reasons change back change cssjs well ps please nt link links become incorrect future", "d": "6/2016"}, {"body": "thanks pointing fixed ref", "d": "6/2016"}, {"body": "experience offset never reliable svg elements used kept running cases nt enough think leave way get enough complaints revisit", "d": "6/2016"}, {"body": "complaint currently working lot svgs would make life easier oo", "d": "6/2016"}, {"body": "want behaviour really complex suppose case overload real math function something like javascript mathrandom function var arr new limit mathpow", "d": "6/2016"}, {"body": "tool trying say warning using cryptography api whether could switch crypto api nt supported browsers tool static analysis would still find file since got fallback", "d": "6/2016"}, {"body": "thanks opening issue however need use trying generate secure random numbers use generate internal unique identifiers instance generating property name use attaching data element security concern number accidentally collides another theoretically could happen nt", "d": "6/2016"}, {"body": "thank thanks opening issue however need use crypto trying generate secure random numbers use mathrandom generate internal unique identifiers instance generating property name use attaching data element security concern number accidentally collides another theoretically could happen receiving mentioned reply email directly view github mute thread", "d": "6/2016"}, {"body": "okay definitions case commited solve problem basically implements four changes code implements regular expression line implements condition base issue commented focusblur morphs focusinout ensure firing right line changed event bubble document match something starts else starts line removed properties line line implements one unit based original issue example file give implemented unit test item nt test matched condition item even remove branch continues validating tests normally reverse changes made item make fail another test line testeventjs fails implemented unit test failed test implemented commit nt try understand think focus case reverse changes made item finally unit test implemented fail consider fixes original issue tried run check four browsers chrome firefox edge nothing matched nt know test instance code removed jquery tried check try write unit test check found way check tried follow conditions reexecute tried run exactly condition said nt worked seems dom trigger well tip test condition works please tell tried everything nothing use condition maybe obsolete", "d": "6/2016"}, {"body": "wow thanks detailed analysis honestly nt remember details unit test added generally difficult test focus events nt fire reliably browsers especially browser tab focus b focusinfocusout supported browsers simulate test probably meant indirectly check code added think something like test reach rfocusmorph condition firefox simulate working jsbin nt even set focus likely due focus unreliability mentioned iframe probably focus time code runs", "d": "6/2016"}, {"body": "vanpuyveldekevin would interested preparing pull request fix suggested simple work would adding proper test case could start code report guide process amp help get stuck", "d": "6/2016"}, {"body": "vanpuyveldekevin ok preparing pr since want get done see missing context example exactly using code snippet relate returns", "d": "6/2016"}, {"body": "pr", "d": "6/2016"}, {"body": "basically using new deferred implement progress notification ajax returns promise implement function course example simplified original implementation implementation using implement deferred recursion odata check next page new retrieve course nifty feature already able get intermediate results loading hence progress example callers retrieve pages get progress containing page basically retrieved using ajax hence ajax success sig afore mentioned results progress callback something like var retrieveallpages function var deferred ajqdeferred", "d": "6/2016"}, {"body": "vanpuyveldekevin ok thanks could check resolves issue", "d": "6/2016"}, {"body": "vanpuyveldekevin would able confirm like include fix like confirmation fixing issue", "d": "6/2016"}, {"body": "alright ran qunit test closer still seems breaking change compared earlier major version latest see example recursive example page size total ease pages internalretrieve data retrieve gets items result progress items ok progress callback gets results recursive internaldorequest retrieve page gets item result progress item nok progress callback get result results somehow details seem end debug flow internaldorequest else flow first basically concat last page full deferred resolving done ending progress callback result last page progress callback situation gets full result instead single page retrieved note previous versions exact approach fact end progress callback last page result item thoughts personally think current operation mode ideal since progress callback often used start binding data example using frameworks like knockoutjs still loading data normally course simple records last page loaded data already bound let say grid would readded adding duplicates pretty much whole list except final page", "d": "6/2016"}, {"body": "vanpuyveldekevin code posted extra details relevant issue could try reduce test case post working state clear description expect happen something like example", "d": "6/2016"}, {"body": "well tried reproducing simple case succeed realistic case last progress callback nt triggered assume means callback queueing contains breaking change since case reach deferred resolve first progress callback triggered meaning order since full deferred already resolved case progress callback ends getting result done nt quite correct however simple case without ajax nt seem occurr even less replicate logic setup example test cases seem issue notify immediately brings flow progress callback see biggest difference ajax deferred mix since fake actual data retrieval situation actual tests work fails test formatting nt seem work well though var retrievepage function var deferred deferred var pageitems settimeout function deferredresolve pageitems return deferredpromise var retrieveallpages function var deferred deferred function internalretrieveallpages items pagenumber return retrievepage function pageitems deferrednotify pageitems pagenumber pagenumber return internalretrieveallpages itemsconcat pageitems pagenumber else var finalresult itemsconcat pageitems deferredresolve finalresult return finalresult fail function jqxhr textstatus errorthrown deferredreject jqxhr textstatus errorthrown internalretrieveallpages return deferredpromise var function var deferred deferred function internalretrievefirstpage var pagenumber return retrievepage function pageitems deferrednotify pageitems pagenumber pagenumber return internalretrievenextpagesrecursive pageitems pagenumber else var finalresult itemsconcat pageitems deferredresolve finalresult return finalresult fail function jqxhr textstatus errorthrown deferredreject jqxhr textstatus errorthrown function internalretrievenextpagesrecursive items pagenumber return retrievepage function pageitems deferrednotify pageitems pagenumber pagenumber lt return internalretrievenextpagesrecursive itemsconcat pageitems pagenumber else var finalresult itemsconcat pageitems deferredresolve finalresult return finalresult fail function jqxhr textstatus errorthrown deferredreject jqxhr textstatus errorthrown internalretrievefirstpage return deferredpromise qunittest retrieveallpages function assert var done assertasync retrieveallpages progress function page pagenumber assertok pagelength progress retrieved page found right amount accounts relative page size found pagelength done function allpages assertok allpageslength done retrieved pages found right amount accounts relative page size found allpageslength always function done qunittest function assert var done assertasync progress function page pagenumber assertok pagelength progress retrieved page found right amount accounts relative page size found pagelength done function allpages assertok allpageslength done retrieved pages found right amount accounts relative page size found allpageslength always function done", "d": "6/2016"}, {"body": "sounds like good candidate", "d": "6/2016"}, {"body": "yes thankyou", "d": "6/2016"}, {"body": "pr please review want get thanks clear description situation needed fix", "d": "6/2016"}, {"body": "anyone know exactly cumulative update fixed problem", "d": "6/2016"}, {"body": "nt get answer microsoft unfortunately find please post information ticket", "d": "6/2016"}, {"body": "since change behavior intentional inclined leave asis", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "agree dave richard", "d": "6/2016"}, {"body": "want take nt time one well", "d": "6/2016"}, {"body": "nt supposed fixed via cc dmethvin", "d": "6/2016"}, {"body": "dmethvin agreed sure worth feature test workaround firefox odd man perhaps could simply align behavior browsers", "d": "6/2016"}, {"body": "think dmethvin nailed take look", "d": "6/2016"}, {"body": "support tracked let consider capture proposal guess one seen mentioned quite issues meant provide kind support option nt get related one thing certainly need parameter related methods like parameter nt care new completely different apis feature already tracked somewhere seen comments difficult would implement nt see possible argument fact simply done", "d": "6/2016"}, {"body": "supporting capture passive properly needs breaking changes ca nt happen mentioned case adding parameter api event plumbing api assumes single multiplexed handler supports bubbling willing pretty serious breaking changes get support directly case would say bother", "d": "6/2016"}, {"body": "supporting capture passive properly needs breaking changes ca nt happen understand question remains main feature request issue tracks one talking capture passive events nt even know mentioned case adding parameter api event plumbing understand implementation point view matter adding parameter requires lot work apparently breaking changes far api concerned would matter adding parameter would nt willing pretty serious breaking changes get support directly sensible option way breaking changes mean changes would break currently working applications use jquery could make example explains would unavoidable understand implies enormous rewrite effort nt quite understand taken account beginning think one could live without capture events really break bc", "d": "6/2016"}, {"body": "started writing reply way large put ticket take look changes made far easy ones however right place discuss nt think need create tickets clear actually work", "d": "6/2016"}, {"body": "cc ing mozilla folks miketaylr digitarald bzbarsky annevk kentuckyfriedtakahe cyberdees", "d": "6/2016"}, {"body": "also happening using envjs could please fix", "d": "6/2016"}, {"body": "cancerberosgx fixed several months ago jsdom unless referring different", "d": "6/2016"}, {"body": "nt idea suggesting issue upgrading jquery solution seems like roll back fixed", "d": "6/2016"}, {"body": "suggesting file bug include simple test case showing problem rather adding comment closed issue error message may cause could completely different", "d": "6/2016"}, {"body": "ok wish could create simple test case complex script case error caused offset withinelementoffset left top within jquery ui withinelement window object", "d": "6/2016"}, {"body": "ccing mozilla folks miketaylr digitarald bzbarsky annevk kentuckyfriedtakahe cyberdees", "d": "6/2016"}, {"body": "dbaron maybe help zcorpan opera btw standards side problem seems using elements sameorigin document nested browsing context give expected results layout trigger applied window method", "d": "6/2016"}, {"body": "yeah seems invalidate wrong window specification may may bogus", "d": "6/2016"}, {"body": "dmethvin fwiw separate threads possible since otherwise would nt able cross easily javascript", "d": "6/2016"}, {"body": "annevk said style recomputed lazily flushed queried gecko flush done document whose rules used inline style works inconsistent across browsers across whether element css box spec says something nt necessarily match reality well generally brokenbydesign course upshot using one window element another window reliable way best avoided option", "d": "6/2016"}, {"body": "using getcomputedstyle one window element another window reliable way best avoided option case someone attempting use jquery api control another frame jquery nt way make consistent option admonition needs go enduser ticket would closed ca nt fix jquery side thoughts", "d": "6/2016"}, {"body": "jquery could get course null elements xhrdomparser result documents like really time someone asks computed style element one document using another document unless saying nt really care computed style unless know fact css rules anywhere matching element given current state uas spec around stuff", "d": "6/2016"}, {"body": "people constantly trying use jquery one frame remotecontrol document another frame despite problems raises wish would stop never convenient place document limits crossframe jquery usage ones imposed browsers ones created jquery implementation given many browserspecific crossoriginspecific matter seems like best thing continue say use risk", "d": "6/2016"}, {"body": "process migrating jquery one projects ran today could nt find breaking change upgrade guide found documentation exact emphasis mine first element collection selectmultiple ie select element multiple attribute set returns array containing value selected option null options selected miss something upgrade guide missing", "d": "6/2016"}, {"body": "mentioned seems working way docs bug got missed api update", "d": "6/2016"}, {"body": "thanks seems missed looking find upgrade guide thank clearing since concerns could mentioned upgrade guide well way could help get doc update going", "d": "6/2016"}, {"body": "sure file prs one upgrade guide would greatly appreciated", "d": "6/2016"}, {"body": "moment shipping version ui works jquery core due change need migrate shims behavior adding sure everyone okay would personally comfortable ui branch something worked long ui ready far action items core nt need make clear upgrade guide blog post people need migrate want use ui", "d": "6/2016"}, {"body": "last rc likely released next week final release probably weeks", "d": "6/2016"}, {"body": "scottgonzalez plan hotfix making ui compatible jquery would hard achieve", "d": "6/2016"}, {"body": "worth noting also work current release jquery mobile without migrate jqm ui also planning release soon planning patch support going bit lot breaking changes mobile need sort need patched", "d": "6/2016"}, {"body": "plan hotfix making ui compatible jquery would hard achieve would simple patch would probably cherrypick cleanly even fixed ui sure release timing though", "d": "6/2016"}, {"body": "scottgonzalez plan hotfix making ui compatible jquery would hard achieve looking involved release right far narrowed commits reviewed inclusion release work list test jquery git", "d": "6/2016"}, {"body": "looking issue year many projects actually start using monorepo approach treeshaking devs nt need worry size note like eventually switch amd modules definitely way go smile", "d": "6/2016"}, {"body": "nt know still relevant folks since months ago encountered issue recent project reduced test case lines htmljs mostly boiler plate html consolelog highlight issue indextxt reference dev fixes problem nixes bug report encountered context another bug report filed file attached", "d": "6/2016"}, {"body": "hunteke test uses inline handlers currenttarget nt populated mentioned inline handlers wontfix item", "d": "6/2016"}, {"body": "thanks patch left unfortunate situation equivalent confusing even though counterintuitive would think inner leaves scrollbar", "d": "6/2016"}, {"body": "problem get information need jquery api", "d": "6/2016"}, {"body": "problem little bit potential confusion jquery native use opposite terms outer inner respectively", "d": "6/2016"}, {"body": "imagine much confusing would jquery larger", "d": "6/2016"}, {"body": "yeah mentioned unfortunate situation native property counterintuitive begin issues people stay within jquery api get window dimensions mix native jquery see inner outer flying around meaning thing anyway commenting new issues", "d": "6/2016"}, {"body": "dmethvin nt know much haste closing issue nt determined irrelevant burden proof created example still available others confirmed issue burden proof close issue longer relevant patch information given needs patch test issues remain open confirmed exist anymore fact nt leads question many issues actually still known shown nt respond git commentsemails nt contributed information addresses patch issue sorry nt realize needed info however continual preemptive closing lack confidence issue exists without testing also discouraging sends message weusers nt report bugs even maybe stop using library maybe solution stop using library nt want support people option nt able download use another browser use jquery keep mind close issue may still exist users worldwide community mention invested time reporting bug effort post format following users closed quickly without appreciation effort time disheartening want make process better next time us", "d": "6/2016"}]