[{"title": "know event triggered backbone events", "body": "actually using backbone events reactjs want save something particular backbone event triggered otherwise want save something else", "num": "4054", "d": "6/2016"}, {"title": "upgrade qunit", "body": "qunit looks like handful tweak get working backbone", "num": "4053", "d": "6/2016"}, {"title": "collection create returns model created follow convention model save returns", "body": "recently learning backbone marionette thankfully getting hang nice implementation anyways curious collection create returns model created model save returns jqxhr per docs something similar hoping convention would understand collection create docs state equivalent instantiating model hash attributes saving model server adding model set successfully created returns new model clientside validation failed model unsaved validation errors model successfully created added collection return model created jqxhr model successfully saved brought attention trying handle asynchronous responses collection model creation issues waiting model created fashion handle jqxhr model save upon success using call instead pass success fail options params collection create method order receieve proper callback sure two ways big deal however hoping understanding difference otherwise would possible return jqxhr model returned another fashion perhaps", "num": "4052", "d": "6/2016"}, {"title": "setting root backbonehistorystart working cordova", "body": "recently upgraded backbone noticed cordova app stopped working could nt start router tracked remove starts router fine upgrade adding root magically worked even though cordova app indexhtml changed work around", "num": "4048", "d": "6/2016"}, {"title": "repository modified files immediately cloning", "body": "looks like someone submitted something confusing repository clone repository clone modified files checkout tags anything repository breaking continuous integration using repository commit causing git modify files clone someone please fix people clone repository correctly suggest one might go getting work system", "num": "4044", "d": "6/2016"}, {"title": "add destroydeconstructor backboneevents", "body": "nt make sense objects automatically call arguments unregister handlers destroyed particularly useful objects objects though nt run use case listen mainly using marionette viewstrigger methods could done call refactor give deconstructor seems better solution using instead using managing call", "num": "4039", "d": "6/2016"}, {"body": "please use stackoverflow questions github issues maintaining framework", "d": "6/2016"}, {"body": "please use stackoverflow mailing list gitter channel questions github issues maintaining framework", "d": "6/2016"}, {"body": "thanks reference", "d": "6/2016"}, {"body": "", "d": "6/2016"}, {"body": "way use two scenarios would call create collection creating new instance transient model client side collection creating new instance persistent model collection saved server use first scenario frequently prototyping application result url must set error console returns useful model work jqxhr preserve also wish allow user create collection related models process creating parent model may require parent model saved url collection known create may still want called related model invoke validation final sync setting url persist entire collection successfully would ever call save model directly intend sent server jqxhr appropriate also call save model already local reference model saving jqxhr additional information calling create collection returned jqxhr would reference model collection see line dev version source passed regular attribute hash create reference hash passed model maybe best thing would collection create continue function add another function collection save requires initialized model returns jqxhr could also listentoonce collection model sync event callback get jqxhr second parameter see", "d": "6/2016"}, {"body": "makes sense collection created added help couple workflows together wish however could perhaps consistency two want shortcut want jqxhr guess ca nt cake eat sure said namdets makes lot sense well case could use model new pass model collection modelsave whatever actually return jqxhr well adding model collection", "d": "6/2016"}, {"body": "familiar cordova specifically diff looks like changed behavior around trailing slashes root feel free look pull request interested looks like might something indexhtml help us track easier find issue", "d": "6/2016"}, {"body": "thanks reply see changes around trailing slashes previous commits sure affecting issue might tried failed finding initial route returns still working truthfully nt know much cordova web views different normal browsers good guide webviews cordova track app see ios navigate different page cross platform app web version also located server myappcomapp web use start app setup nice deeplinks shared example cordova app link takes ignored current behavior backbone convenient help understand would love figure ca nt upgrade backbone", "d": "6/2016"}, {"body": "sorry super familiar cordova might better luck stackoverflow cordovaspecific mailing list irc channel could wrong think root actually rather history object uses windowlocation several places determine canonical location probably want make sure app sync something change backbone make easier work cordovoa please let us know otherwise going close always override key methods return answers want particular take look", "d": "6/2016"}, {"body": "thanks looking adam post stack overflow", "d": "6/2016"}, {"body": "yep tracking thanks reporting", "d": "6/2016"}, {"body": "backboneview nt destroy clean nt think view destroy backbone concern however whenever backbone call marionette behave describing using marionette already backbone models also call work essentially think cleanup happening fiddle something expect listener get cleaned nt certainly take look feel free ask well", "d": "6/2016"}, {"body": "backboneview nt destroy clean nt think view destroy backbone concern ah yes apologies playing w marionette bit much seems point implementation use similar look called handler setup w calls nt track handler therefor never cleaned simply calling w arguments clean everything evidenced fact maps handlers calls call clean registrations objects cleanup handlers point nt common destructor backbone modules matter probably puts nail add destructor destroyremovecleanup backboneevent idea imo right thing inheritance friend inheritance philosophy backbone biggest gripe leads us probably also call wo args marionette test probably test called wo args performance could improved case called w arguments instead iterating every listener calls batched perobject calls wout arguments sure typical usecase though terms ratio", "d": "6/2016"}, {"body": "mean guess see saying nt know purpose removing listeners thing subsequently nt need cleaned reference view ready garbage collection listeners go need context using correct maybe specific example dig back bit discussed marionette controller", "d": "6/2016"}, {"body": "thing thison subsequently thislistento nt need cleaned reference view ready garbage collection listeners go need context using listento correct see point really gc works though know object references objects alone references graph traversal nt also create references arguments thread samccone said take function ref named function might cause leak remove mean named function event pumping try resolve runtime case nt cause leaks yes case though handler solely referenced object registered nt break matter nt break general guess question simply gc work js okay read gc js guess issue moot long destroying references objects means need set something static call say examples seen nt think seen practiced cases marionette hopefully take care would reason would want use anything actually dynamic content area boiler plate childviews nt heavy dynamicview supporting would handy tracking instance ing unsetting think", "d": "6/2016"}, {"body": "understanding jmeas jridgewell might able better answer", "d": "6/2016"}, {"body": "guess onoff issue moot long destroying references objects backboneviews exactly destroying view remove references", "d": "6/2016"}, {"body": "assume backbone takes stance one nt reuse via eg case propose renaming think point needing call still stands one intent two avoid memory leaks object maintain references thus preventing object trees cleaned even stance nt still make sense call cleanup nonmanaged handlers reference trees nt get blocked cleanup gc object cleaned", "d": "6/2016"}, {"body": "assume backbone takes stance one nt reuse via eg reinitialize view remove nt think assumption right docs nt mention anything like happens remove nt anything would make particularly difficult reuse view removed using backbone frequently would often dig issues see could find opinions contributors heavy users backbonemarionette cool way see others agree assumptions see different perspectives things certain would nt surprised similar conversation reusing view removed anyway think name pretty good would nt change something like sounds bit heavy method backboneevents object maintain references callbacks backboneevents object nt global merged view think view instance backboneevents although terminology nt quite right means view holding onto callbacks leaving callbacks around wo nt prevent gc happening perhaps biggest difference related choice determines object relationship holds context callback references paulfalgout pointed though gcsafe create selfreferences long args passed nt reference object seems little obvious typed", "d": "6/2016"}, {"body": "nt think assumption right docs nt mention anything like happens remove nt anything would make particularly difficult reuse view removed anyway think name remove pretty good would nt change something like destroy sounds bit heavy method agree someone take stance preferably devs anyone publish conglomorates code backbone toolkit nt preclude reuse reuse reason calling backboneevents object nt global know sderived closed joke right weekend open monday", "d": "6/2016"}, {"body": "nt preclude reuse reuse reason calling provide specific example getting called causing problem know sderived ah okay gotcha made backboneevents could prevent gc meant explain would nt selfreferences joke right weekend open monday nt think joke make compelling argument functionality always chance issue reopened", "d": "6/2016"}, {"body": "thought see two issues first w behavior evident first example constructedinitialized never rendered removedreused would expect multiple handlers setup callback var view backboneviewextend initialize function wo nt get cleaned thisonce render thissetupevents setupevents function thislistento thisoptionsmodelobject change property thisrender heavyweight update thislistento thisoptionsmodelobject change lightweight update render function backboneviewprototyperenderapply arguments el thistrigger render eg marionetteview var obj var el var view new view modelobject obj beginasyncstuff asyncsuccess asyncfailure function asyncsuccess elhtml viewrender el function asyncfailure var otherobj viewinitialize modelobject otherobj elhtml viewrender el eg function beginasyncstuff success failure async success failure eg issue regarding memory leaksgc follows handlers setup derived object callbacks solely referenced object eg object hold references handlers prevent gc hopefully assuming one nt funkiness higher logic removing references object sever last path callbacks assumption made imo backbone takes stance framework toolkit know easy find hammer", "d": "6/2016"}, {"body": "javascript nt classes taking linguistic shortcut easier say class function name starts capital letter intended constructor members added prototype etc find difficult describe thinking without allowing luxury using word class way luckily makes word class official could break people code yes concede could limited imagination come one case would really really weird first common use cases nt get broken server sends singleton json object wrapper collection array objects case parse function needed either level server sends singleton wrapper one member named data json object server sends collection wrapper one member named data array json objects case need one parse function model extract object different parse function collection extract array objects array data longer wrapped fully cooked nothing raw perfectly ordinary case gets broken use case would get broken proposed fix server sends collection something holds array wrapped objects individual items array ie rows wrapper must removed modelparse function use case seems really weird unlikely anyone come scenario server would want go trouble wrapping row items rows nt get success codes queries mean returning collection server reason embellish individual items wrapper would programmer created system even get idea behavior work double parse behavior documented programmers like discover parse fails debug issue make pullrequest never done nt think look odd make pull requests get oneline change familiar culture thank feedback alexander", "d": "6/2016"}, {"body": "nt think look odd make pull requests get oneline change say perfect reason make pull request", "d": "6/2016"}, {"body": "release date backbone thanks nice framework", "d": "6/2016"}, {"body": "version introduced idea actually executing error jquery parameters real problems extent even wrote error function attempts guess signature use signature wraperror signature end sync pasted please find actual code end sync took lines version code base v version already code note well although assign textstatus errorthrown options also execute error function wrapped wraperror signature seems introduction code execute error xhr textstatus errorthrown mistake reversed somebody explanation alexander", "d": "6/2016"}, {"body": "workaround illustrates problem", "d": "6/2016"}, {"body": "agree addressed situation wanted change remove models without server changes resetting collection original state quirk threw bit landing", "d": "6/2016"}, {"body": "except second place optionserror executed entirely different function call signature version backbonejs lines occurring end sync function seems wacko two different signatures function major difficulties code", "d": "6/2016"}, {"body": "hello guys thanks effort put backbone know old issue came across use case server returns sorted collection backbone parses order lost found discussion stackoverflow explains json response order maintained using array sorted elements json particular option need pass backbone collection explicitly respect order json response coming server thanks ton", "d": "6/2016"}, {"body": "found solution problem sure work worked scopemyview attributes datafoo foo", "d": "6/2016"}, {"body": "rafayepes fully agree argument love backbone simplicity api change introduces bunch problems workarounds code app store relationship url state native way interacting history api would much much easier", "d": "6/2016"}]