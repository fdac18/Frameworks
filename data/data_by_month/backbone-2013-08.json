[{"title": "router stops listening trying isolate cause", "body": "trying debug issue router stops listening page refresh makes route work something inspect instance router shows whether listening provide better report issue suspecting isolating nt issue someone know property observe tell backbone starts stops listening window hash changes", "num": "2738", "d": "8/2013"}, {"title": "fetching single model collection", "body": "hello trying success fetch single model given id collection tried several options expecting works examples never id javascript var services servicescollection servicesfetch var services servicescollection servicesfetch data id var services servicescollection new servicemodel id servicesfetch set urlroot model well", "num": "2737", "d": "8/2013"}, {"title": "framework abstraction adapters", "body": "know backbone supports jquery zepto etc backbone variable works frameworks especially mootools use mootools projects would love use backbone without needing framework dependencies especially titon project seen type question asked many years ago looks like nothing came nt work mootools since functions different etc actual abstraction adapter system something like adapter simply wrapper basic functions added functions seemed like would need adapted pretty basic right seems like much hardcoded jquery syntax looking forward thoughts either way seems like good idea could fork project submit prototype", "num": "2736", "d": "8/2013"}, {"title": "listeners misnomer", "body": "curious name listeners object used track bindings listento implementation nt called listenees correct wrong objects listeners listening listened", "num": "2735", "d": "8/2013"}, {"title": "rewrite modelget access nested level data", "body": "hi rewrite something like internal project backbonemodelprototypeget function query var attrvalue see jsfiddle know usage see would accept give pull request", "num": "2734", "d": "8/2013"}, {"title": "race condition polling server push removes new models", "body": "using backbone app allows users share resources sometimes server updates collection require removal adding merging models clientside collection default behavior collectionset works great time run issue user creates new model right server sends updated version collection client problem comes fact newly created model nt exist response server hence removed collection think ways fix could pass wait true create method slows userperceived snappyness app could build kind queue syncing server thirdly thought maybe solution could added backbone core would let someone pass option collectionset told keep models nt saved server yet commit demonstrates suggesting use option would preferred understand maybe nt belong backbone core maybe implementation lacking anybody thoughts comments recommendations thanks advance", "num": "2733", "d": "8/2013"}, {"title": "wishing improve collection", "body": "hello one question backbonecollection ordinary object extended native array object done walk collection like array native loop need get collectionmodels property many array methods overrided needed technical difficulty tell us interesting know thanks", "num": "2731", "d": "8/2013"}, {"title": "backbonemodelsave nt propagate options sync signature save options", "body": "calling save model like call work success error called anything backbonerelated interpreted options hash backbonesync seeing additional options related backbone like example method action truly work set first parameter null like documentation states modelsave attributes options first thing thought completely omit using attributes param think worth either making save fail first param passed fixing save propagate consistently", "num": "2730", "d": "8/2013"}, {"title": "sign twitter jquery mobile app using cordova", "body": "developing mobile applicaton client side jquery mobile used serverside aspnet mvci want users login twitter application followed link successfully installed childbrowser created app twitter got consumer key consumer secret application index page jsoconfigure app consumer key xxxxxxxxx consumer secret xxxxxxxxxxxxx authorization debug debug oajax url jsoprovider yourapp jsoscopes public write jsoallowia true datatype json success function data consolelog response yourapp consolelog data nt get expected resultam something wrong sure ajax url ie", "num": "2729", "d": "8/2013"}, {"title": "fails load jquery newer versions browserifyinsertmoduleglobals", "body": "discovered way backbonejs code wrapped scope prevents backbone finding jquery loaded window scope result recent change insertmoduleglobals dependency browserify change question changing call call resolves problem sure creates others", "num": "2726", "d": "8/2013"}, {"title": "changing indexof behaviour collection class", "body": "raising question find whether somebody else search model position collection without order sortedindex nt helping us id proposal modify indexof searches idcid attribute something similar consider cause significant drawback perfomance maybe backbone collection another seekposition method takes different arguments glad hear opinion", "num": "2725", "d": "8/2013"}, {"title": "could nt pass string argument backbone view", "body": "eg new myview hello typeerror invalid operand n backbone version throws javascript error underscorejs passing string argument backbone view accepts object worked version", "num": "2722", "d": "8/2013"}, {"title": "router better catchall route", "body": "inclusion notfound route real improvement backbone quite perfect one major issue last route defined nt always simple eg multiple routers routes manually registered required files enough problem fact someone went made whole plugin deal hopefully look plugin source agree nt need exist rather making page found route something implicit people struggle get right position could please consider adding explicit something similar method words inside instead current return line would really great super easy little dirty though supposed get returned matching route output route maybe slightly cleaner way would method could see least couple variations important thing would really awesome could say backbone route defined instead backbone route defined god help say routes registered", "num": "2721", "d": "8/2013"}, {"title": "collection set treats objectprototypes existing models", "body": "ran bug firefox due data errors one watch wrist watch however backbone checking id cache matching method reduced example console output firefox whereas chrome safari similar bugsissues introduced check return actually ca nt think would ever need something else pull request coming shortly also investigated using however broke app think collections extended object may collection", "num": "2719", "d": "8/2013"}, {"title": "unsetclear validate true", "body": "given piece code think option passed say passed call function otherwise function gets called consequently fails one implements function one implements validation attributes set unset think point valid know weird pass api yes one fix would force option impl option passed", "num": "2715", "d": "8/2013"}, {"title": "using model collection option behave intuitively", "body": "model created added collection saved model added collection model properties model events propagated collection however model created using option saved added collection events propagated model related collection events triggered imho behavior less intuitive assumed collection option would ultimately bind model collection saved nt purpose pass along collection url pass literally recommended docs pass collection options model gains collection property used indicate collection model belongs used help compute model url modelcollection property otherwise added automatically first add model collection url andor urlroot options may passed creating new model needs custom oneoff url endpoint use case view updating collection event another view create model want collection view update model saved therefore add model collection saved collection options seemed like clean way pass collection view model feel free close misunderstood intent option happy submit update cheers", "num": "2714", "d": "8/2013"}, {"title": "collection create saves model even adding failed", "body": "try collection create new model already existing id add method fails nothing added original model remains however new model still saved imo replace merge existing model save add method fails save possible according merge option", "num": "2713", "d": "8/2013"}, {"title": "model destroy triggers request event collection nt trigger sync", "body": "destroying model added collection model request event relayed collection thus collection listeners got upon successful xhr model fires event destroy first fires sync collection turn listens destroy removes model thus model fires sync already removed collection event never relayed listener listening request sync events collection get request never get sync model destroy action thus listener logic depends fact request either sync error logic broken", "num": "2712", "d": "8/2013"}, {"title": "backbonejs save model nt cause ajax put request android", "body": "backbonejs", "num": "2708", "d": "8/2013"}, {"body": "override", "d": "8/2013"}, {"body": "blairvanderhoof might easier saved amp added set attributes nt want saved properties model rather model attributes hash", "d": "8/2013"}, {"body": "far know part backbone router api allows stop listening provide details use case", "d": "8/2013"}, {"body": "backbonehistorystop aug pm notifications githubcom wrote far know part backbone router api allows stop listening provide details use case reply email directly view github", "d": "8/2013"}, {"body": "tbranyen totally right completely forgot apologies", "d": "8/2013"}, {"body": "sorry clear aware start stop router used unit testing separate case backbone stops responding urlhash change events idea router instance expose publicly debugging appears intact identical works also appears intact work property object inspect see router bound hash change events something like inspecting handlers bound would great start trying find", "d": "8/2013"}, {"body": "detailed problemstate description backbone router running navigate dashboard works great click links change paths like dashboardpersonality gamereactiontime router respond changes remembered think stores kind state router instance relevant variables object nonresponsive state changes capitalization meaningful keep clicking valid routes changing url history stack length grows follow route handlers everything history object think check looks correct idea nt following route handlers anymore", "d": "8/2013"}, {"body": "maybe stating obvious definitely calling navigate trigger true right default backbone update url history wo nt actually call route handlers unless trigger true passed apologies seems really obvious want get obvious things confirmed first aug eric notifications githubcom wrote backbone router running navigate dashboard works great click links change paths like dashboardpersonality gamereactiontime router respond changes remembered backbonehistory think stores kind state router instance relevant variables object nonresponsive state changes capitalization h h meaningful backbonehistorystarted true backbonehistorywantshashchange true backbonehistorylocationhash dashboardpersonality informative noticed saved new location hash navigate backbonehistoryhandlers array looks good backbonehistoryhistorylength looks good steps backbone history stack keep clicking valid routes changing url history stack grows everything history object think check looks correct idea nt following route handlers anymore reply email directly view github", "d": "8/2013"}, {"body": "nt even programatic route changing links page like fixated difference seems telling although nt understand broken state respond hash changes refresh page press enter url bar follow whatever route url expected", "d": "8/2013"}, {"body": "application bug problem backbone backbonehistory uses attach events see behavior ever call basically accidentally unbound event handler trying clean event handling nt know affected backbone many screens backbone history object looked fine inspect events window object like jquerydata window events hashchange array load array kind arcane place keep informative thanks answer finding jquery events", "d": "8/2013"}, {"body": "think looking collection say need model data must call model want fetch", "d": "8/2013"}, {"body": "preventing creating jquery interface adapter mootools simply binding lieu jquery", "d": "8/2013"}, {"body": "extra overhead forcing framework follow jquery syntax instead offering standard interface went ahead implemented pretty basic prototype passed tests imo seems simple enough also allows backbone used vanilla js solution application every needs", "d": "8/2013"}, {"body": "instead offering standard interface standard set accepted rules mean jquery interface could standard", "d": "8/2013"}, {"body": "jquery uses weird catch function wannabe class global approach never standard thoughts commit made", "d": "8/2013"}, {"body": "mean instances prototypes chaining proposed offers additional benefits providing jquerylike abstraction something like mootoolsdojomylibraryetc admit sucks strong dependency jquery angular shown jqlite implementation fine interface suitable abstraction aug pm miles johnson notifications githubcom wrote jquery uses weird catch function wannabe class global approach never standard thoughts commit made reply email directly view github", "d": "8/2013"}, {"body": "wrapping around jquery syntax bloated potentially problematic seen digress guys nt interested proper interoperability closed sidenote mean instances prototypes chaining mootools better saying", "d": "8/2013"}, {"body": "would guys mind linked fork wiki improved fork bit added vanilla js mootools support pass tests", "d": "8/2013"}, {"body": "milesj go wiki anyone put tools resources others might find useful", "d": "8/2013"}, {"body": "awesome thanks", "d": "8/2013"}, {"body": "yup object seem named opposite really holds definitely aesthetic code change let jashkenas decide whether made", "d": "8/2013"}, {"body": "could someone point duplicate failed find big list", "d": "8/2013"}, {"body": "probably several others", "d": "8/2013"}, {"body": "tgriesser thanks", "d": "8/2013"}, {"body": "perhaps way array object require many customizations also assume cases nt want use models attribute backbonecollection instance enough underscorejs methods work collection", "d": "8/2013"}, {"body": "forgot mention useful underscore methods collection would flagoption return collection object array like map reduce filter", "d": "8/2013"}, {"body": "unfortunately underscore methods unstoppable native loop break customizations means also js object specific methods override overload calling parent methods yeah enough backbonecollection methods", "d": "8/2013"}, {"body": "sintanial want ca nt native loops allow break", "d": "8/2013"}, {"body": "want work already juggle arguments trying infer attributes object vs options object would impossible since plain js objects best remember always needs passed first options", "d": "8/2013"}, {"body": "sounds like issue substack pattern backbone uses common one probably supported whatever using modules", "d": "8/2013"}, {"body": "ah curious could nt tell common approach post insertmoduleglobals conflict", "d": "8/2013"}, {"body": "kpwebb backbone ca nt play nice browserify published invalid npm module discussed times already fix", "d": "8/2013"}, {"body": "ick looks like ways get working clientside simple actually ca nt tell causes problems serverside case", "d": "8/2013"}, {"body": "think would great method extend onto collection applevel making change core think would jarring break parity underscore especially method terse", "d": "8/2013"}, {"body": "hi correct accepts object argument fact previously allowed string coincidence recommend using instead", "d": "8/2013"}, {"body": "hi braddunbar thank yes time update project changes", "d": "8/2013"}, {"body": "even better historystart returns routes match saying nt agree feature built works pretty well already", "d": "8/2013"}, {"body": "ah nt realize could handle things way still think builtin option would nice fairly common case people could still route backbonehistorystart happened still nt worry page load line code provided beats hell using plugin stressing route ordering", "d": "8/2013"}, {"body": "right said traditional way page load router longer trying recognize anything location need anywhere else need documented better", "d": "8/2013"}, {"body": "sorry delayed response think current documentation adequate failed rtfming suppose might nice add quick example maybe something like called route succeeds match current url backbonehistorystart returns true defined route matches current url returns false use return value handle page found cases", "d": "8/2013"}, {"body": "know weird pass validate true unset clear api would nt best solution nt methods use internally inconsistent argument nt passed along entirety elsewhere codebase even something could achieve wrapping using remove validate necessary", "d": "8/2013"}, {"body": "still convinced would nt possible condition call impl way argument would passed entirety", "d": "8/2013"}, {"body": "unit test covering case validate unset clear must agree", "d": "8/2013"}, {"body": "maybe seeing whole picture could nt add model collection passing function model call something like javascript var collection new collection var model new model modelsave success function collectionadd model would allow wait model saved serverside adding collection", "d": "8/2013"}, {"body": "could also pass collectioncreate result", "d": "8/2013"}, {"body": "could however would require passing collection createedit view model minor inconvenience intuitive pattern would choose repeat issue largely subjective see option assume could used add model collection apparently used evaluate model route two options seem satisfy task literal fashion adding address issues event propagation fact using inconsistent desires model events fired collection workaround using time", "d": "8/2013"}, {"body": "caveat reverting workaround model attributes available time collection add event fires", "d": "8/2013"}, {"body": "derp also yet handling", "d": "8/2013"}, {"body": "seems like creating model via already passing collection model allows directly control exactly model added collection implementation want would still ambiguous model added collection model added created saved already specified collection belongs go ahead add collection immediately think answer question would change person person depending want specific time way allows user control model added according needs", "d": "8/2013"}, {"body": "implementation want would still ambiguous model added collection agreed imho would make sense add model collection time instantiation course could explicitly save add even option less explicit even vague variation options implemented option seems redundant bit confusing could instead serve higher purpose providing implicit collectionadd functionality", "d": "8/2013"}, {"body": "hi maximgb one actually asked fairly recently check resolution", "d": "8/2013"}, {"body": "sounds like android bug let leave keep one stack overflow reopen specific code example points bug backbone", "d": "8/2013"}, {"body": "returning valid json op jul schreef tenaciousflea notifications githubcom het volgende using backbone rails save method calling create function rails returns status code browser normally successful instead triggers error callback reply email directly view github", "d": "8/2013"}, {"body": "returning valid json bingo either way please nt open ticket debugging help try mailing list irc channel stackoverflow", "d": "8/2013"}, {"body": "correct functions return arrays return object maps models return integers return booleans documented underscore pages like add something wiki feel free otherwise feel free send pr documentation change", "d": "8/2013"}, {"body": "really bugging lot folks keep getting pings effect backbonepageable release point would greatly appreciated", "d": "8/2013"}, {"body": "pinging jashkenas", "d": "8/2013"}, {"body": "roadmap backbone somewhere months since release even knowing hard make release big project months much longer used really miss fixes improvements come since nt wan na push wan na know plans possible", "d": "8/2013"}, {"body": "yep need nail open tickets push certainly long mea culpa feel free use master time road literally past three months turning wheels back tomorrow morning quiet time", "d": "8/2013"}, {"body": "missing something current documentation updated indicate change notable headbanging realized reviewing source options besides model collection el id attributes classname tagname events really discarded though docs seem say otherwise constructor initializenew view options creating new view options pass merged default options already present view attached view thisoptions future reference several special options passed attached directly view model collection el id classname tagname attributes view defines initialize function called view first created like create view references element already dom pass element option new view el existingelement var doc documentsfirst new documentrow model doc id documentrow docid working development version suppose possible disconnect development version production version implication seems difference compression comment removal would expect see undoced changes edge version", "d": "8/2013"}, {"body": "flatrocks development version mean version version still attaches method sounds like might edge version", "d": "8/2013"}, {"body": "doh thanks tgriesser right version omits configure method sure wound edge dev box hard enough time without edgeing anything nt think twice since firstline comment still says backbonejs apologies", "d": "8/2013"}, {"body": "initially thought could check existence length map listener turns event nt get removed case however fix case", "d": "8/2013"}, {"body": "nice fix henrahmagix last failing test case fixed changing feel free send pull", "d": "8/2013"}, {"body": "instead checking events stoplistening defined test pass nt feel right another issue like address first using expecting object comes reason case test nt working think get misleading instead could use might slower nt return true sure means events stoplistening object goes events listento events listentoonce following two places nt check events stoplistening determine value variable events listento addressing nt return true conditions safely use check use sure better honest former consistent three cases latter verbose strict think uses events eventsapi determine whether call loop checked null never gets far model set inline comment handle style arguments checked null nt get far model save", "d": "8/2013"}, {"body": "probably overkill casey points tests passing expected behavior backboneevents check", "d": "8/2013"}, {"body": "curiosity people making frequent use specific experience used ensure subject garbage collected case arguments need passed else use", "d": "8/2013"}, {"body": "thanks done braddunbar proxy automatically determines context find events remove also used way mentioned pass arguments remove everything think users use way", "d": "8/2013"}, {"body": "please remove emails sent iphone henry blyth notifications githubcom wrote thanks done braddunbar stoplistening proxy automatically determines context find events remove also used way mentioned pass arguments remove everything think users use way reply email directly view github", "d": "8/2013"}, {"body": "johnbertolini hit mute thread bottom", "d": "8/2013"}, {"body": "exactly issue collection sorted add events fired toadd array hence add events firing unsorted order results insertat function inserting elements correctly fninsertat function index element index return thisprepend element var previous thischildren eq index previouslength previousafter element return else return thisappend element", "d": "8/2013"}, {"body": "could nt stoplistening accomplish thing", "d": "8/2013"}, {"body": "hi everybody like reopen discussion basic idea find good one success callback called every status code imho backbone well suited work rest apis nearly perfect point bugs eg save new model success callback get called rest api correctly delivers created reason stick exact status code triggers success callback like abritinthebay stated anything series codes considered success response parsed", "d": "8/2013"}, {"body": "issue seeing likely nt related status code rather data returned response jquery call success format returned match requested format option backbone case verify sending valid json save call", "d": "8/2013"}, {"body": "hi tgriesser thank much api sends nothing empty content response seems treated invalid json sending response triggers success callback nice day thank quick response", "d": "8/2013"}, {"body": "damn smart people handing around repo good call", "d": "8/2013"}, {"body": "hi jashkenas also reason validate signals error create wait true invalid event propagated collection appears fail silently collection point view", "d": "8/2013"}, {"body": "heh yer turns cheers", "d": "8/2013"}]