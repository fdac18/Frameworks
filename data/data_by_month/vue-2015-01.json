[{"title": "possible bind component fields letting others inlined paramattributes", "body": "made component encapsulation using plugin tag component initializes plugin created clears deleted would nice use like thus declared also need vue instance containing components somehow react changes data user types something textarea currently using nonspecific form way wo nt able use way solve problem ca nt update parentmsg childmsg changes", "num": "698", "d": "1/2015"}, {"title": "vm object deleted leave transition function", "body": "like access dom object overlay vm element leave transition function template js object empty entering leave function", "num": "697", "d": "1/2015"}, {"title": "\u76f8\u6bd4 \u4f7f\u7528 component \u65f6 viewmodel \u4f5c\u7528\u57df\u53d8\u4e86\u5bfc\u81f4\u4e0d\u517c\u5bb9", "body": "\u4ee5 vue \u5b98\u65b9\u7684 treeview item \u589e\u52a0\u4e86\u4e2a dataname modelname vue \u5728 jsfiddle \u5bf9\u4e8e treeview \u4e2d\u7684\u4e0b\u9762\u7247\u6bb5 \u5bf9\u4e8e viewmodel \u7684 name \u4e4b\u540e \u89e3\u91ca\u4e3a\u5176\u7236 viewmodel \u7684 name \u6e32\u67d3\u7ed3\u679c hello \u6e32\u67d3\u7ed3\u679c hello \u7248\u672c \u5728\u4e0a\u8ff0\u73af\u5883\u4e0b\u4e5f\u89e3\u91ca\u4e3a", "num": "696", "d": "1/2015"}, {"title": "component option inherited", "body": "currently inspecting shows would make sensebe possible show instead", "num": "695", "d": "1/2015"}, {"title": "transition stuck leave", "body": "trouble transitions api upgraded recently ca nt get work html less directionscontent transition height ease opacity ease height margintop bordertop solid eee padding js methods toggledirectionsform function var show get showdirectionsform result toggling initial state html", "num": "694", "d": "1/2015"}, {"title": "allow specifying private assets using camelcase", "body": "would nice could specify private assets dashes names eg components directives using camelcase way moving take advantage object literal property value shorthands", "num": "693", "d": "1/2015"}, {"title": "tag may enough serve insertion points", "body": "writing component amp vue compile template compiled saw tag moved outside opinion add attribute well tag name serve insertion points transcludejs sorry poor english", "num": "692", "d": "1/2015"}, {"title": "cancelled event continuing traverse dom horizontally", "body": "quite sure correct behaviour maybe wrong want break event first captured node navigating nodes like last node gets selected instead first one spawning new events single thread broadcast gets cancelled stopping execution case good things however current implementation neither first second possibly code altered", "num": "690", "d": "1/2015"}, {"title": "vmodel reactivity issue iterating object", "body": "snagged quirky behavior iterating object referencing model way get reactivity working item key way input blur keypress unless attribute supplied also counterpoint array use case key supplied vmodel using instance renders name input also noticed filled empty values blurring field copy entire field value across next model using skip cursor next input field aside loving vue thanks much", "num": "689", "d": "1/2015"}, {"title": "ready triggered android", "body": "seems ready function component never triggered android browser android attached compiled others well triggered ready quite buggy solution found time put setinterval compiled function check dom contains element template nt find ready triggered could caused buggy interpretation documentcontains android browser android documentcontains used indoc function vuejs", "num": "688", "d": "1/2015"}, {"title": "different behaviors changing object array", "body": "expected output assumed may intended though actual output", "num": "687", "d": "1/2015"}, {"title": "form handlers", "body": "hey please check simple examples", "num": "686", "d": "1/2015"}, {"title": "uncaught typeerror read property update undefined", "body": "error points code problem occurs setting big amount data single property complex component ca nt reproduce fiddle looks like array changes length iterating giving saving length fixes problem", "num": "685", "d": "1/2015"}, {"title": "components nt get attached transcluded parent components", "body": "transcluded component rendered dom event never fires fiddle parent component html child component visible hardcoded html transcluded component deleted everything works using incorrectly bug", "num": "684", "d": "1/2015"}, {"title": "", "body": "html value js var testvm new vue", "num": "682", "d": "1/2015"}, {"title": "vref working element", "body": "nt know working planned would like vref work cases also ca nt find references docs case ps thank implementing waitfor mechanism saved lot trouble", "num": "681", "d": "1/2015"}, {"title": "vwith working element", "body": "specific issue seems happening elements jsfiddle showing behaviour basically value passed via defined first rows second rows difference templates code fiddle html output value extra value extra value extra extra extra extra", "num": "680", "d": "1/2015"}, {"title": "initialize template dynamically result ajax call", "body": "want load template vuejs component dynamically like make ajax call using jquery whatever server returns template vuejs component simplified version code ajax call removed since irrelevant data coming example using created hook thought would suitable newer template never rendered older one possible achieve", "num": "679", "d": "1/2015"}, {"title": "directiveslength error read property length null", "body": "using vueify app compiled dev get following error use custom directives error occurs sometimes weird idea anyone thanks context scriptjs javascript linker function called already compiled piece dom instantiates directive instances param vue vm param elementdocumentfragment el return functionundefined", "num": "678", "d": "1/2015"}, {"title": "vif array", "body": "could vif exclude empty arrays another way instance imagine given vue list things item new vue el container data function return list events list add function item thislistpush item empty array would prefer content included dom would prefer included push items array", "num": "677", "d": "1/2015"}, {"title": "new option preventing vue upgrade", "body": "process upgrading codebase using vue run several issues regarding automatic conversion component id child component key function constructor name registry components looks like map gets sent iterated calls vue seems want try coerce function name using function support forward slashes ostensibly characters valid id valid function names really blocking issue us mean time fork vue allow upgrade happen timeframe allotted opinion conversion id function constructor name much magic essentially debugging feature thanks", "num": "676", "d": "1/2015"}, {"title": "vue nt work", "body": "error warning nt work screenshot", "num": "675", "d": "1/2015"}, {"title": "deep watching computeds", "body": "support deep watching computed dependencies case computed whose dependency array objects objects ie selected true boolean property like computed return result anding values field currently change one objects array trigger reevaluation computed way unsupported feature edit attaching fiddle", "num": "674", "d": "1/2015"}, {"title": "uncaught typeerror read property childnodes undefined", "body": "wrong code get error located function makechildlinkfn linkfns uncaught typeerror read property childnodes undefined nt get running put simpler content like got error trying build example isolate possible memory leak appears content span vtext options thanks", "num": "673", "d": "1/2015"}, {"title": "watch options", "body": "notice pass options vm instance method achieve thing also want instance option", "num": "672", "d": "1/2015"}, {"title": "vevents callbacks bind child vm", "body": "html", "num": "671", "d": "1/2015"}, {"title": "vmodel select elements honor number attribute", "body": "changing value select element sets model value string even number attribute specified select element example jsfiddle", "num": "670", "d": "1/2015"}, {"title": "nested vrepeat adding objects inner array page scrolls top automatically", "body": "please see click add days populate list click xxx make page scroll top anyway prevent", "num": "669", "d": "1/2015"}, {"title": "template variables nt work elements sometimes", "body": "use certain computed value svg element follows get error yet use different computed exactly html works yet output right svg correct get object title choose category icon noselection category overview object title portrait icon switzerland noselection category overview press continue button twice debugging works loads correct icon computed looks follows currenttitle get function experienced similar problems using variables vclass element vcomponent", "num": "668", "d": "1/2015"}, {"title": "vref references updated", "body": "experiencing behaviour nt know normal one issue using array containing child references updated datas actually thanks", "num": "667", "d": "1/2015"}, {"title": "possible memory leak calling vm destroy true", "body": "use case vuejs create vrepeat divs bootstrap tabs parent div say main click call vm destroy true replacing parent div another vm w divs using chrome task manager see memory usage growing took several memory snapshots amp saw huge number detached dom tree corresponding vrepeats divs", "num": "666", "d": "1/2015"}, {"title": "mustache binding nt work starting underscore", "body": "seems vuejs properly parse mustache bindings start underscore like type works fine handlebarsjs could please add support kind binding demo", "num": "665", "d": "1/2015"}, {"title": "filterwrite going model back dom", "body": "think addressed another issue ca nt find case scenario problem edit another example problem", "num": "664", "d": "1/2015"}, {"title": "invalid expression generated function body scopeprof scopecprof", "body": "tried use variable value inside nt work right syntax edit tried worked nt find variable repeat nt happend", "num": "663", "d": "1/2015"}, {"title": "frozen data models", "body": "suggest allow frozen trees data model example current version rejects frozen model frozen objects nt need observed several instances vue share template means compile template current code would like", "num": "662", "d": "1/2015"}, {"body": "probably use vcomponent tag start use template block must define template component dom opposed using templating engine like jade handlebars", "d": "1/2015"}, {"body": "far know ca nt make input components limitations vue made thread discussion nt heard anything yet", "d": "1/2015"}, {"body": "replicate behavior jsfiddle make easier solve issue", "d": "1/2015"}, {"body": "seems like nt working debug looks like changes value traversed looks fine", "d": "1/2015"}, {"body": "btw using directly appending google maps infowindow everything worked fine", "d": "1/2015"}, {"body": "template changes well since tried added comments element", "d": "1/2015"}, {"body": "possible make isolated reproduction issue", "d": "1/2015"}, {"body": "found issue setting instantiation worked fine nt work changed everything works", "d": "1/2015"}, {"body": "way change one attribute time something like", "d": "1/2015"}, {"body": "use anyway trigger one update cycle", "d": "1/2015"}, {"body": "oh good", "d": "1/2015"}, {"body": "useful path string eg", "d": "1/2015"}, {"body": "thanks working replaced nt bug breaking change bug", "d": "1/2015"}, {"body": "clarify issue using list children generated", "d": "1/2015"}, {"body": "yes exactly", "d": "1/2015"}, {"body": "suspicion inputs blurring actually deleted recreated next frame means lose focus guess though would mean vue reruns entire change one object element seems unnecessary anyway fiddle anyone wants look", "d": "1/2015"}, {"body": "thank codepen tmiguelt think suspicion absolutely correct", "d": "1/2015"}, {"body": "guide avoid directly setting elements databound array indices changes picked vuejs instead use agumented set method instead use fiddle fixed also fixed coffeescript getting rid entirely", "d": "1/2015"}, {"body": "zhouzhuojie probably close issue seems like question answered tmiguelt", "d": "1/2015"}, {"body": "assuming question along lines nt function get called call submit form directly cause submit button clicked suspicion js problem vue mdn says form onsubmit event handler example onsubmit return false triggered invoking method geckobased applications general guaranteed invoked html user agents", "d": "1/2015"}, {"body": "couple times seems watchedreferenced property nt originally specified data section adding property usually cures", "d": "1/2015"}, {"body": "issue also repeats try nullify data property bind several times example html customerid customername try set raise error first run modify raise error next loop", "d": "1/2015"}, {"body": "changing fixes problem", "d": "1/2015"}, {"body": "try fiddle html value", "d": "1/2015"}, {"body": "thanks", "d": "1/2015"}, {"body": "although reason nt work fiddle html value", "d": "1/2015"}, {"body": "weird behavior trying something weird tag nt really make sense explicitly hidden dom components designed add content dom look dom code runs appears html gfd gfd reason completely disappeared anyway might want rethink code want component nt put want reference element use instead", "d": "1/2015"}, {"body": "nt see problem using vcomponent also believe planned behavior disappears compilation nice want divide html files blocks block container contents place like component loses vm context one el also present points comment node nt see problem link vref component vm", "d": "1/2015"}, {"body": "ca nt change template component created property component instances parameter pass constructor initial template sort loading barspinner replaced content loaded way create component spinner component new content loaded used dynamic vcomponent parent template changed variable bound new component loaded server causing component change spinner new component also wo nt need scope data functions also use dynamic vpartial", "d": "1/2015"}, {"body": "thanks comment use case different trying display html markup returned server page html markup vuejs directives eg vtext etc want reactive figured part template fine suppose could load html data part different component creating component instance pass template", "d": "1/2015"}, {"body": "still think situation look fiddle code duplicated html javascript create default component vuecomponent default template replaced seconds create parent viewmodel var vm new vue el body data currentview default pretend load data server would actually get url data function windowsettimeout function", "d": "1/2015"}, {"body": "absolutely right actually using currentview pattern described main website nt think would also apply case well thanks showing light", "d": "1/2015"}, {"body": "experiencing error revert back make app work almost definitely bug could try investigations", "d": "1/2015"}, {"body": "actually pretty weird indicates linker called target vm already destroyed would need isolated reproduction identify cause", "d": "1/2015"}, {"body": "kvdmolen repro issue jsfiddle look", "d": "1/2015"}, {"body": "vif conditionally insert remove element based truthyness binding value need think javascript expression evaluate false array empty", "d": "1/2015"}, {"body": "like checking mutation graph array become empty set false", "d": "1/2015"}, {"body": "nt check array mutation vue", "d": "1/2015"}, {"body": "could", "d": "1/2015"}, {"body": "html fiddle", "d": "1/2015"}, {"body": "oh okay nt realize could access array properties inside directive thanks", "d": "1/2015"}, {"body": "issue nt function believe issue vue dynamically creates constructor function using camelized name inherently name variable valid javascript identifier slashes camelize ignores slashes see annoying see thinks believe recommended way namespacing components use hyphens camelize correctly also able used directly html may working library extent", "d": "1/2015"}, {"body": "also think generally recommended use hyphens component identifier dealing web components example polymer required use name attribute component", "d": "1/2015"}, {"body": "script tags bottom page code wrapped dom ready callback element nt exist try instantiate vue", "d": "1/2015"}, {"body": "thanks right", "d": "1/2015"}, {"body": "edit actually trouble figuring exactly causing difference code fiddle going close reproduce consistently", "d": "1/2015"}, {"body": "able reproduce fiddle closely replicating code ca nt tell exactly problem seems something setting parent list compilation", "d": "1/2015"}, {"body": "vue nt support deep watching dependencies vue nt register dependency initially nt exist list objects exactly issue posted couple weeks ago simplified fiddle absolute minimum notice still nt work allselected nt change however define property start even nullundefined value code work fiddle thing changed making list equal", "d": "1/2015"}, {"body": "thanks explanation seems add function exists order add things compile reregister dependencies fixed code close issue related one already open", "d": "1/2015"}, {"body": "put work sure getting error since element html inside nt break though think issue child nodes directive bound gone update honestly shot dark run situation seems like want array seem like right tool job", "d": "1/2015"}, {"body": "fixed", "d": "1/2015"}, {"body": "going assume nt possible watch object convenient form might manually lot code", "d": "1/2015"}, {"body": "closing inactivity", "d": "1/2015"}, {"body": "bad figured", "d": "1/2015"}, {"body": "think problem value correct amp html always handle strings", "d": "1/2015"}, {"body": "think actually bug works elements nt look like works", "d": "1/2015"}, {"body": "yep right could problem case arithemics value like", "d": "1/2015"}, {"body": "looks like fixed dev branch hope works selects allow multiple values tonumber function support arrays", "d": "1/2015"}, {"body": "okay figured issue apparently data passed parent vwith following way caused inconsistent behaviour nt know whether bug desired way working hope helps someone else might run issue", "d": "1/2015"}, {"body": "yep normal vue behaviour afaik update dom frame model changes checking components nt created yet next frame fiddle need access components soon created get dispatch event ready callback parent view model listen perfect example vue guide right", "d": "1/2015"}, {"body": "check memory usage vuenexttick vue deliberately lot things asynchronously avoid blocking ui probably nt delete immediately addition might keep deleted vms longer case need transition rate dom items removed eventually might immediately", "d": "1/2015"}, {"body": "done try isolate code amp get back", "d": "1/2015"}, {"body": "hi isolated code end memory leak even obvious changing thanks note behavior associated pjax framework may know pjax also used github noticed github growing used memory aka memory leak example click repeatedly issue button", "d": "1/2015"}, {"body": "ended conclusion core vue creating leaks source compiler probably closure somewhere", "d": "1/2015"}, {"body": "hmm ran fiddle checked chrome task manager memory usage definitely grow although think still possible could issue code rather vue either way might want look gets back", "d": "1/2015"}, {"body": "hmm looking code suspect memory leak might code calling vue constructor multiple times run modify data necessary", "d": "1/2015"}, {"body": "hi thanks reply pjax application corresponds new page display click app menu button new html content loaded via ajax put main content div corresponding vue object related data initialized remove jquery events call destroy previous view object removing suggest case keep vue object replace el content dynamically", "d": "1/2015"}, {"body": "ca nt speak memory usage situation many better ways going read page guide want make spa vue change pages etc first make pages modules see link use routing library module hash change using webpack put dynamic directive page changes main page component module loaded", "d": "1/2015"}, {"body": "long solves memory leak problem least try trying build alternative heavy angular proto built please help escape monster", "d": "1/2015"}, {"body": "read link provided nt think solve mainly packaging solution could come vcomponent usage wich test", "d": "1/2015"}, {"body": "ah sorry meant whole page section mention routing although highly recommend packaging pages modules anyway since allow lazy load", "d": "1/2015"}, {"body": "tried sample uses deprecated vview vcomponents see memory leaks sadly conclude vue ready prod", "d": "1/2015"}, {"body": "yeah tried new version seem legitimate issue", "d": "1/2015"}, {"body": "ran first example locally chrome dev tools heap snapshots heap recording shows pretty clean garbage collection mind posting heap snapshotrecording results", "d": "1/2015"}, {"body": "tried another way check see memory grows seems chrome choose run gc performance reasons manually forcing gc memory seems recovered red arrow still exist detached dom trees shows leak exists post another capture show step click button problem even recover manually find crazy go app eat smthing like per menu click maybe point chrome would decide recover", "d": "1/2015"}, {"body": "detached dom trees reading using debubgger know retainers object tab maybe example incorrect app bad jquery interaction", "d": "1/2015"}, {"body": "outside task manager initial stage mutliple clicks counter reach click force gc easy interpret even gc lost last column shows pure js memory lower gc", "d": "1/2015"}, {"body": "think heap usage seeing perfectly normal believe see similar usage using frameworks snapshots probably want take lot see keep growing indefinitely gc complex long gc produces proper collection nt affect user experience fine addition chrome lot jit compilation js code compiled machine code gced possibly contributing growing usage even forced gc", "d": "1/2015"}, {"body": "nt bug vue intentional feature guide bottom section hood vuejs attaches hidden property ob recursively converts object enumerable properties getters setters enable dependency collection properties keys starts skipped means nt proxied onto still attached data field accessed fiddle however workaround idea started variable underscore probably private variable probably nt binding dom stuck data structure workaround fine change remove underscore since nt private anyway", "d": "1/2015"}, {"body": "thanks lot", "d": "1/2015"}, {"body": "another case access index key value adding deleting property whoes key starts underscore workaround case fiddle thanks advance", "d": "1/2015"}, {"body": "hmm sure behaviour happening might actually bug think making things difficult using underscores properties trying bind", "d": "1/2015"}, {"body": "actually using underscores really choice data structure defined found easy way change addition found another wired behaviour add another normal property along adding property underscore works fiddle", "d": "1/2015"}, {"body": "properties observed changes use store static data change time need change data structure create beforecompile hook js var data id new vue created function set id dataid also probably keep reference view model instance created properties instead manipulating data object like jsfiddle provided", "d": "1/2015"}, {"body": "yet another example time currency", "d": "1/2015"}, {"body": "currently write filters work better tool condition user interface example application write filter used disable alpha keys disambiguate character used separate decimal places would nice keep functionality though maybe different kind filter", "d": "1/2015"}, {"body": "vue tag attribute requires expression valid javascript code expression array object number case could hand simple html attribute requires string hence use mustache bindings variable interpolation see ref", "d": "1/2015"}, {"body": "suggestions going hope vuecomponent already precompiles templates nt know sure", "d": "1/2015"}, {"body": "template compilations cached long string frozen object usage seems interesting take look vacation", "d": "1/2015"}, {"body": "thanks informal question plan integrate formatjs considering contributing feature", "d": "1/2015"}, {"body": "tarh personally plan feel free contribute", "d": "1/2015"}, {"body": "think questions coming confusion components guide says vuecomponent asset registration method means return navbar component store manipulate rather defines navbar components created actually instantiate component need use somewhere html template guide mentions ways use vcomponent directive like html use component name tag name like use create component location dom used classical inheritance like defining class using like instantiating class address questions property vue instance automatically populated child components instantiate html along vref directive like html could modify uinav component accessing properties wanted however modifying data child object often better using event system decouples components allowing reused modified lot less difficulty example happens put uinav component inside another component change code accesses child component another level component chain", "d": "1/2015"}, {"body": "documentation vref registers reference child component parent easier access add child component parent vm conversely adding component parent vm add references vm automatically documentation due limitations vue detect properties directly added deleted object therefore expected addingremoving references vm object done via vm add vm delete following documentation one way add components dynamically parent vm well creating vref javascript create root vm var vm new vue el body create classtype profile root vm attached per desired dynamic behavior var profile vueextend name profilecomponent el function return documentcreateelement p template firstname lastname aka alias create instances type profile var new profile data firstname edward lastname snowden alias citizen appendto documentqueryselector somenode var new profile data firstname anne lastname frank alias appendto documentqueryselector somenode add vm add vm add access components via reference directly consolelog vm therefore following might useful instead use framework provided api set add delete", "d": "1/2015"}, {"body": "tmiguelt builtap thanks guys reason make something like library component frontend making something like common admin cp type applications lot components added admit documentations vuejs far basic sample application uses vueloader using plain javascript thanks pointers appreciated happy new year", "d": "1/2015"}, {"body": "nt contain first pass computed property wo nt pick dependency essentially got dead computed property never updates think mentioned docs best practice predictable data structure ie explicitly list tab objects compilation builtap solution also works", "d": "1/2015"}, {"body": "yes recognize nt data structure intentionally requesting either way dependencies updated defined possibly better vue log warning message something bound undefined property case lot trouble working dom behaving strangely warning might save people issue", "d": "1/2015"}, {"body": "use add property observed", "d": "1/2015"}, {"body": "actually reason nt defined example really sure jsfiddle anyway vote vue warning situation think plenty warnings development version good idea", "d": "1/2015"}, {"body": "yeah agree usage feels cumbersome would fairly easy extend proposed method nt need unfortunately deal possible situations handled", "d": "1/2015"}, {"body": "hi briansakal code works fine check ps fiddle use vuejs", "d": "1/2015"}, {"body": "closing inactivity", "d": "1/2015"}, {"body": "close duplicate feel free continue discussion briefly looked tds file vue nt time actually write maybe indus solution help", "d": "1/2015"}, {"body": "cyancat sure understand trying explain multi root template exactly nt see reason would want set data property view model use vwith override value many ways", "d": "1/2015"}, {"body": "agonbina set default data issue issue vwith work properly case simple one without default data multi root template single root template multi root template case comment block make template multi root type complicated example include cases could see different caused structure template", "d": "1/2015"}, {"body": "please append jsfiddle example", "d": "1/2015"}, {"body": "root cause issue computed setter triggered compilation phase means dom altered compilation linker work properly brandonjpierce pointed recommended perform dom manipulations computed setters want achieved simply using watchers instead", "d": "1/2015"}, {"body": "write directive implement sorting functionality close issue", "d": "1/2015"}, {"body": "ayamflow oh meant want keep content use vue manipulating visual changes right find problem edge version", "d": "1/2015"}, {"body": "yes using vuecomponent vuevueextend", "d": "1/2015"}, {"body": "ayamflow although bit tricky still achievable using method mentioned may want start separate thread someone fixes", "d": "1/2015"}, {"body": "yep thanks try", "d": "1/2015"}, {"body": "", "d": "1/2015"}, {"body": "", "d": "1/2015"}, {"body": "also problem used filters", "d": "1/2015"}, {"body": "one example events would useful see elegant way please let know thank", "d": "1/2015"}, {"body": "nt need events vstyle", "d": "1/2015"}, {"body": "bdaglish great answer much simpler slight modification used sliders", "d": "1/2015"}, {"body": "problem could nt find easy fix inside vue instead made sure comment always end list sorting sortable options javascript onend function evt thislistsplice evtnewindex thislistsplice evtoldindex", "d": "1/2015"}, {"body": "could use polyfill reliable estimates show around internet still using sad true", "d": "1/2015"}, {"body": "nt think work code seems try neither exist also tries native defineproperty works dom nodes need work ordinary js objects nt way testing however", "d": "1/2015"}, {"body": "yeah think right say partial support common case getters setters values", "d": "1/2015"}, {"body": "looks good nt impractical support input types", "d": "1/2015"}, {"body": "awesome try make work collections fun relevant people existing backbone apps amp want get rid bb view part", "d": "1/2015"}, {"body": "made test works partially works partially incomplete see lot complete much work sync way update newly added models stuff created must performed ends maintainning two arrays objects syncrhonized unless choose refresh full array array change", "d": "1/2015"}, {"body": "ahmadibrahim ratchet vue work deciding vue ratchet ionic would prefer vue solution course", "d": "1/2015"}, {"body": "vue great ratchet pain ass think ratchet dead tried ionic nt like used vue bootstrap", "d": "1/2015"}, {"body": "went ionic nt want deal mobilerelated browser issues active angular painful compared vue project deadline angular right tool hybrid app took several hours understand subtle differences provider service factory feature angular like vue dependency injection makes testing easier end appreciate vue even simplicity", "d": "1/2015"}, {"body": "tested several routers route bootstrap tabs change pathjs nt work director works fine course big minified without server code dispatch works fine bytes minified dispatchjs wins tested crossroadsjs bigger scaleapp seems good complete framework size director anyway", "d": "1/2015"}, {"body": "boussou great success one", "d": "1/2015"}, {"body": "looks good name router director", "d": "1/2015"}, {"body": "recently held vuejs meeup events japan want know future vuejs loadmap sorry poor english", "d": "1/2015"}]