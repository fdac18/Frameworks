[{"title": "strange error watch work list", "body": "demo list watching watch replace text null text text add item later clear list see error html remove second condition error replace conditions error explain wrong ps sory bad english", "num": "728", "d": "2/2015"}, {"title": "passing strings starting directives breaks expression parser", "body": "fiddle seems happen also tried fine", "num": "727", "d": "2/2015"}, {"title": "suggestion vref vrepeating object", "body": "thing always returns array items indexes synthetic relation actual data object keynames vs indexes parent vm ca nt surely match indexes object keys maybe case return object matching keynames would nice get feature", "num": "726", "d": "2/2015"}, {"title": "webcomponentsjs breaks vue using link routing", "body": "looks like webcomponentsjs hearder causing dynamic component able switch version tests version fine checked diff roughly nt know changes could related broken hint fix thanks", "num": "724", "d": "2/2015"}, {"title": "scroll event working", "body": "event works fine event fire", "num": "723", "d": "2/2015"}, {"title": "support callback parameters", "body": "understand possible communicate parent child components via events would convenient vuejs supported calling callback attributes would allow write html something like javascript code like var parent methods dosomething function args something var child cbattributes oncallback ready function thisoncallback args function new vue el body currently fake using passing function name string calling function child like would much nicer explicitly supported tried passing callbacks like seem work also want point couple parent child searched similar issues find one apologize advance duplicate", "num": "722", "d": "2/2015"}, {"title": "support sorting", "body": "", "num": "721", "d": "2/2015"}, {"title": "pass multiline object directive", "body": "ok typeerror res undefined live demo", "num": "717", "d": "2/2015"}, {"title": "read property teardown null", "body": "hi subscribe warcher null object property eg keypath objectprop prop null exception occures call unsubscriber sample code javascript var unwatch vm watch keypath function newval oldval unwatch exception fires cause exception following code exportsdestroy function", "num": "716", "d": "2/2015"}, {"title": "passing values nt work", "body": "pass strings integers booleans nt work fiddle", "num": "715", "d": "2/2015"}, {"title": "vref seem work certain times", "body": "parent component okay corresponding vuemodel instance component input field want access text child component parent problem seems work sometimes times also way get data child environment without leak data parent child though using events let say multiple search components page want field events would nt work case maybe something like child component exposes api components well parent", "num": "714", "d": "2/2015"}, {"title": "vm dom elements vel undefined transitions", "body": "hi ca nt access vm dom elements ex transitions pretty useful use rather select element dom param fiddle click window toggle child log value console thanks", "num": "713", "d": "2/2015"}, {"title": "issues options directive select tag", "body": "notice two issues vue recently directive take filters particularly annoying rare data already format directive nt work without less likely problem still seems unnecessary definitely possible want dynamic select options without data binding jsfiddle demonstrating problems", "num": "712", "d": "2/2015"}, {"title": "checkbox directive source code different distvuejs srcdirectivesmodelcheckboxjs", "body": "vuejs amp distvuejs work safari osx srcdirectivesmodelcheckboxjs code work better", "num": "711", "d": "2/2015"}, {"title": "child component ready hook fired", "body": "basically parent view attached different way eg google maps using neither hooks fired child components", "num": "710", "d": "2/2015"}, {"title": "read property refid undefined vuejs", "body": "error occurs vcomponent points component nt currently exist worked annoying making spa routing vuejs wo nt loaded current page component vue instance first created js fiddle html change", "num": "708", "d": "2/2015"}, {"title": "breaks repeat using", "body": "writing application needs list arbitrary values json object two levels deep values arrays whose constituent objects contain properties consider following code html key id value code outputs list four items expected using vue outputs nothing using vue nt believe test case cover particular use case", "num": "707", "d": "2/2015"}, {"title": "component", "body": "scenes maybe one model needs several children models scope childs need share data methods parent midel like js tried simplest way nt work one effective model parent thought components used nt want make component thing like controller angular like vue awesome components may heavy scenes mentioned way seems chrome app nt support component system give error like", "num": "706", "d": "2/2015"}, {"title": "filters way get keycode", "body": "example got filter placing spaces numbers removing gt using filter input via vmodel allowed change value set cursor near space going remove expecting removed symbol number space expected nothing happens numbers removed could access keycodes could handle case understanding number need remove space judging removed symbol keycode code example", "num": "704", "d": "2/2015"}, {"title": "vrepeat component", "body": "currently ca nt something like something like data nt passed html jsfiddle", "num": "703", "d": "2/2015"}, {"title": "way reset component", "body": "currently component want reinitialize include component expression set expression blank reset expression back component html better way", "num": "702", "d": "2/2015"}, {"title": "fails silently component root element fiddle included", "body": "legacy docs mentions root element restriction current version seems work components multiple root elements vwith breaks warning nt work works javascript var componenta vueextend template bar works template bar doesnt replace true new vue el body template data foo test test test test components componenta componenta", "num": "701", "d": "2/2015"}, {"title": "nt suitable view root element", "body": "hi wrote simple demo table contained vrepeated table contained chosen view root element vue viewmodel way nt work templates nt replaced changing solved issue thing happens referring github commits fiddler sample change root element bug expected behavior", "num": "700", "d": "2/2015"}, {"body": "first select boxes like question html select box value string want whole object value could use jsonstringify jsonparse though people would consider ugly solution", "d": "2/2015"}, {"body": "hello know options attribute using repeat suitable cases eg add empty value first thank explanation add support whole object select would nice feature", "d": "2/2015"}, {"body": "found another way get error add item run timeout timeout set value cleaning list see error demo", "d": "2/2015"}, {"body": "note change default value text null text default work well", "d": "2/2015"}, {"body": "guess summarize problem anyone else list cleared conditions false however inner condition still executed resulting error even though skipped due outer condition evaluating false looks like evaluated hierachically instead order evaluated", "d": "2/2015"}, {"body": "expressions expected valid javascript unless set flag true", "d": "2/2015"}, {"body": "thank sorry missed docs", "d": "2/2015"}, {"body": "issue nt happen chrome firefox also changed include webcomponentslitejs firefox issue nt happen think related shadow dom vue", "d": "2/2015"}, {"body": "make simple reproduction issue sun feb pm notifications githubcom wrote issue nt happen chrome firefox also changed include webcomponentslitejs firefox issue nt happen think related shadow dom vue reply email directly view github", "d": "2/2015"}, {"body": "test link test chrome click link view updated test firefox view nt change thanks", "d": "2/2015"}, {"body": "looks like getting mangled", "d": "2/2015"}, {"body": "wow actually nothing vue seems webcomponentjs breaks safari ff", "d": "2/2015"}, {"body": "filed issue", "d": "2/2015"}, {"body": "silly mistake made everything works fine", "d": "2/2015"}, {"body": "looks like looking", "d": "2/2015"}, {"body": "right pretty much however interesting note compiled directives would cool way thing something like compiled could use cleaner syntax like instead btw really love framework managed create elegant well documented easily comprehensible software economy features previously used angular finally realized despite supported google widely recommend inelegant overcomplicated inefficient mess also interested mithril ultimately turned idea forced template html javascript use jade works well vuejs frontend software stack currently consists vuejs jquery jade stylus autoprefixer browserify gnu make setup working really well moving vuejs breath fresh air", "d": "2/2015"}, {"body": "noticed one significant difference feature originally proposed allow caller get return value since usual case one receiver significant disadvantage example say got callback child needs either confirm reject changes based success callback may require contacting server andor user interaction easily handled parent returning promise callback called however possible granted could solved parent responding broadcast event need event handlers context possibly way differentiate children type", "d": "2/2015"}, {"body": "actually additional arguments provided passed callback", "d": "2/2015"}, {"body": "talking return values", "d": "2/2015"}, {"body": "oh see misread case promise valid sure worth adding specific optionsyntax hand possible use simple callbacks", "d": "2/2015"}, {"body": "ok callbacks bad option still like idea option could really simplify parentchild interaction coupling", "d": "2/2015"}, {"body": "think could easily implemented mixin including core would feel redundant btw appreciate kind words framework", "d": "2/2015"}, {"body": "understand reluctance add features parallel way work together ignoring ability return data would like thought", "d": "2/2015"}, {"body": "agree userland plugin suggestion anything core plugins", "d": "2/2015"}, {"body": "fixed merging", "d": "2/2015"}, {"body": "thanks fixed", "d": "2/2015"}, {"body": "ca nt help first problem need give specific situation undefined second issue yes way get data child pass parent variable child using use modifies variable case would use variable vue guide talks data passing vwith jsfiddle passes parent field child manipulates textbox top child component change text underneath also changes parent scope meaning working want html vara", "d": "2/2015"}, {"body": "oh using bidirectional bindings using introduced guess use vwith case think really nice could expose sort api component scope introducing property viewmodel expose certain functionsdata", "d": "2/2015"}, {"body": "well data already exposed access example way annoying imperative comparison would access child data idea able update without breaking changes", "d": "2/2015"}, {"body": "yeah saying child data exposed gives read write access child data potentially dangerous however suggesting commonjs style functionality components let say data variable child component read well modify could expose function child component way could parent could read child component parent accidentally modify gives fine grained control really want expose components", "d": "2/2015"}, {"body": "run something similar ref inside nested component using passed data data passed data changed inside became workaround manually saving reference reference hook probably best way go things need get done", "d": "2/2015"}, {"body": "fix related bug sure addressed issue though", "d": "2/2015"}, {"body": "could use option tag add remove vmodel filter etc also advantage explicit", "d": "2/2015"}, {"body": "problem ing tags scope data set template compiled example pass data component using value nt set big issue using directive time problems", "d": "2/2015"}, {"body": "hmm parameter nt directive specific parameter hence expressions evaluated case want input output seems strange", "d": "2/2015"}, {"body": "okay might right one side point noticed investigating first problem look source code though seems suggest take expression reason nt take filter seems strange", "d": "2/2015"}, {"body": "tmiguelt might try sure makes sense perhaps using computed property would preferable", "d": "2/2015"}, {"body": "support filters merging", "d": "2/2015"}, {"body": "probably looking dist file instead code checkbox", "d": "2/2015"}, {"body": "interestingly neither parent child hooks fired using thought might let get vm dom pass curious", "d": "2/2015"}, {"body": "thoughts", "d": "2/2015"}, {"body": "workaround vm", "d": "2/2015"}, {"body": "note hook depends hook turn triggered two ways element already document vm compiled vm inserted via vue either method like directive controls child vm like directly inserting vm element able trigger stated docs", "d": "2/2015"}, {"body": "would handle case", "d": "2/2015"}, {"body": "supposed work design", "d": "2/2015"}, {"body": "okay thanks help think add list things need user friendly error messages make pr get chance", "d": "2/2015"}, {"body": "show jsfiddle shows behaviour copied code changed component base vue instance completely skipping", "d": "2/2015"}, {"body": "think thats point change renders expected something", "d": "2/2015"}, {"body": "apologies tmiguelt post unnecessarily ambiguous skipped bit template spews custom filter returns expected behaviour actually see nothing case displaying stringified array objects updated op avert possible confusion anyone else might caught issue thank much fix calebboyd", "d": "2/2015"}, {"body": "fixed merging", "d": "2/2015"}, {"body": "thanks evan smiley", "d": "2/2015"}, {"body": "sorry last error chrome app component must defined model entity since tried two ways mentioned nt work really ca nt accept make html file several templates separating sharing data way implement things like controllers vuejs", "d": "2/2015"}, {"body": "nt think vue simulate controllers like right make child component often still put child template child component ca nt use existing parent template example work think would worked vue changed start compiling html parent scope issues compiling working way actually second point thread similar problem wanting controllerscomponents without template evan think reasonable way make everyone happy scoping issues compile template child scope child component template far know component without template totally useless moment going break existing code think would solve problems course could call controllers try distinguish components like ember either way might good idea", "d": "2/2015"}, {"body": "random idea maybe attribute flag eg indicates nt want content transclusion inside component", "d": "2/2015"}, {"body": "yeah quite like idea effect suggestion explicit might allow reuse component different template contexts", "d": "2/2015"}, {"body": "way getting keycode directly within filter use separate listener", "d": "2/2015"}, {"body": "believe supposed use", "d": "2/2015"}, {"body": "sorry jsfiddle ate fiddle recreate", "d": "2/2015"}, {"body": "fiddle still nt seem repeater", "d": "2/2015"}, {"body": "interesting problem since know component state stored data variable always override original data store original data rather function generates module component like javascript function exactly data function component originally function getdefaultdata return b b moduleexports data getdefaultdata methods resetdata function data getdefaultdata assuming components commonjs modules recommend anyway browserify vueify transform", "d": "2/2015"}, {"body": "seems like work thanks", "d": "2/2015"}, {"body": "thanks seems duplicate", "d": "2/2015"}, {"body": "edit post put backticks around html markdown parser nt delete", "d": "2/2015"}, {"body": "done thanks", "d": "2/2015"}, {"body": "thanks much easier read according html spec element contain phrasing content ie content mostly text related markup table list accepted child nodes quite possible browser deleted component placing inside issues like past basically yes expected behaviour vue issue related html spec obvious solution use elements direct root vue components", "d": "2/2015"}, {"body": "elements special usage vue used block container nt work", "d": "2/2015"}, {"body": "thank reply fiddles minimum code caused error actually like use vrepeat template vcomponent paramattribetus explain created new fiddles fiddle work fine would nt like nesteddiv tryed change div template nt work tryed vrepeat template outside vcomponent vwith inside amp enable replaceoption nt work implement use paramattributesoption without nesteddiv vrepeat vcomponent might wrong way", "d": "2/2015"}, {"body": "nt think able use template specify property seems like trying", "d": "2/2015"}, {"body": "oh makes sense would nt like write template html actually use amp building large app used customtag instead vcomponent expected", "d": "2/2015"}, {"body": "use appendto older vue version", "d": "2/2015"}, {"body": "vwith twoway", "d": "2/2015"}, {"body": "indeed fixed", "d": "2/2015"}, {"body": "directly replacing also work make isolated jsfiddle replacing causing original issue", "d": "2/2015"}, {"body": "sure necessary general want avoid implicit conventions since makes code harder understand unless already know convention", "d": "2/2015"}, {"body": "problem bit today attr would work", "d": "2/2015"}, {"body": "issue allow type horizontal cancellation listener order remain order registered regardless children sorted later basically means event trigger order guaranteed vm order array think broadcast definition reach possible children level words behavior component able affect event propagation children siblings original use case probably better idea pass extra argument broadcast call accurately identify matching child", "d": "2/2015"}, {"body": "vue converts object fresh array update ca nt place updates array identity changed maybe diffing actual object better solution work around converting object array use array instead need data persistence convert array back object nt sound ideal work", "d": "2/2015"}, {"body": "thank end implementing suggested workaround ago wadditional parsing data persistence luckily nature data completely arbitrary worked fine happy close thread unless prefer leave open future implementation purposes", "d": "2/2015"}, {"body": "yeah older versions android quirky implementation bugs nt device version test glad know found workaround", "d": "2/2015"}, {"body": "basically tmiguelt said seems browser behavior issue", "d": "2/2015"}, {"body": "fixed", "d": "2/2015"}, {"body": "tags treated symbolic wrappers block nt work", "d": "2/2015"}, {"body": "okay understood another question would consider make support directives please really nice use sometimes especially costructions tabletrtd guess could redirect top level element component template check one would render", "d": "2/2015"}, {"body": "sure understand use case tabletrtd give example", "d": "2/2015"}, {"body": "templates placing keep templates tpl files near js files time time use plain without classes serving template holder looks like lt lt one holder without classes visual decoration example case forced keep component template container separated content container thing want keep content one tpl file case ca nt use extra table structure components whose containers display inlineblock", "d": "2/2015"}, {"body": "using though seems simply want access raw template something like use template", "d": "2/2015"}, {"body": "nah accessing template case case decomposition want decompose page several components content toppanel header footer etc also smaller components using component mount point allows escape using extra wrapper example got block named toppanel html main articles feedback block container notice actual part toppanel visual decoration want mount toppanel page actually two ways first one get extra wrapper without actual role use second one got rid extra wrapper toppanel containerstarting point got detached content makes mess templates preventing toppanel normal reusing using solves problem serves mount point disappears rendering", "d": "2/2015"}, {"body": "looks like issue one root element template switching table divs recreates problem adding albeit invalid wrapper around fixed", "d": "2/2015"}, {"body": "possible duplicate fails silently component root element", "d": "2/2015"}, {"body": "yes think right duplicate issue guess leave discussion thread", "d": "2/2015"}, {"body": "agonbina definitely try pinpoint amp isolate difficult happens sometimes though happen right emit event receiver vcomponent updated executed html perhaps gives first insight according hackernewsexample working isolating issue", "d": "2/2015"}, {"body": "please see comment issue believe issue related events cause components added removed changing variables effect alters event propagation case list event listeners may change event code traversing list think event propagation code make copy event listener list begins processing list iterating list check listener still exists calling", "d": "2/2015"}, {"body": "component names slashes supported", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "write filters present longer force update back dom", "d": "2/2015"}, {"body": "good improvement allows almost everything except way currency example storing valid values yes way currency restricting user input yes vue user point view ideally would way explicitly enable disable forced update like example however would probably make sense able set template difference presentational belongs element modified example double pipe loosen filter update cycle maybe separate attribute", "d": "2/2015"}, {"body": "twoway currency problem ca nt fixed disabling sync alone since requires detailed control place cursor updating input value dom particular cases like probably better write custom directive instead", "d": "2/2015"}, {"body": "point disabling sync update input value dom need replace cursor right", "d": "2/2015"}, {"body": "nt want format currency example reason hard interact nt know correctly restore cursor position dom update resets cursor", "d": "2/2015"}, {"body": "thinking format would disabled input manipulated user let user write anything edit yes even though talking would best talking compromise", "d": "2/2015"}, {"body": "oh mean delay formatting user blurs input", "d": "2/2015"}, {"body": "yes", "d": "2/2015"}, {"body": "use although would time make sync model delayed", "d": "2/2015"}, {"body": "great option caveat mentioned problem situations", "d": "2/2015"}, {"body": "actually template contains one node component becomes block component means nt root node rather documentfragment directives attached placeholder like lost transclusion theoretically fixed though", "d": "2/2015"}, {"body": "fix recently run workaround utilising time priority fixed rather glaring issue imo", "d": "2/2015"}, {"body": "fixed", "d": "2/2015"}, {"body": "thanks lot looking forward formal release", "d": "2/2015"}, {"body": "duplicate issue closed", "d": "2/2015"}, {"body": "seeing problem exactly likely related notice loop vuejs greater equal think happening calls modify words events cause event listeners added removed example event affects scoped variable components may detached able work around using instead places event could affect value", "d": "2/2015"}, {"body": "recently made prerelease project working use vuejs also insane script imitates vue behavior server side vueserver use one component code server client glad say working fine sorry russian ca nt help could press buttons also check javascript disabled see serverside html ps thanks much vuejs like made fall love frontend development", "d": "2/2015"}, {"body": "nice glad know working", "d": "2/2015"}, {"body": "heard emberjs building htmlbars started simpledom think jsdom pretty heavy weight slow ssr features necessary", "d": "2/2015"}, {"body": "kazupon thanks holding events glad see community growing japan moment plan adding major new features feel api feature set reached good state focus stabilizing mostly fixing bugs issue growth rate slows probably ca nt guarantee date though", "d": "2/2015"}, {"body": "thank comment busy time got", "d": "2/2015"}]