[{"title": "height hidden element css height", "body": "element height inside hidden element jquery returns becouse getcomputedstyle return suppose return actual pixel value", "num": "1825", "d": "10/2014"}, {"title": "figure put bug tracker directions", "body": "since migrated trac longer introduction text presented new bug attached link contributingmd text please review guidelines contributing repository suggests might want put variation text file question near beginning report bugs section reference text thanks coming report bug suggest feature jquery reporting please take minute make sure right place file issue search existing similar tickets create minimal test case jsfiddlenet jsbincom demonstrating issue remember team supports recent versions report bug version example read report bugs creating ticket file bug jquery issue tracker", "num": "1824", "d": "10/2014"}, {"title": "error thrown ready handler subsequent handlers invoked", "body": "jquery version browser browser testcase please take look jsfiddle example example works fine edit old improper test case problem error thrown one handlers registered docuement ready subsequent handler invoked addl info happening error thrown handler function registered ready jquerycallbacksfire refer line invoke user ready handler function related piece code error thrown firing flag reset false due handlers registered error triggered refer line firing true list amp amp firingindex lt firinglength firingindex list firingindex apply data data false amp amp optionsstoponfalse statement invokes ready handler memory false prevent calls using add break firing false looks like firing flag need reset finally block workaround obvious workaround handler code need wrapped trycatch avoid issue", "num": "1823", "d": "10/2014"}, {"title": "ajax catch parsererror", "body": "hello catch handler returned instead see error description code js document ajaxerror function event jqxhr ajaxsettings thrownerror consolelog event event consolelog jqxhr jqxhr consolelog ajaxsettings ajaxsettings consolelog thrownerror thrownerror result requesting file works fine errors", "num": "1819", "d": "10/2014"}, {"title": "ignore source bower", "body": "retrieving jquery bower get folder also folder sure case believe source nt included bower installation adds files project nt need large moment unnecessary nonetheless", "num": "1817", "d": "10/2014"}, {"title": "issue retrieving drop contents via ajax ondrop callback", "body": "please note currently testing chrome browser successful implementing project far tell seems due incomplete conflicting svg implementations across browsers sure issue core issue jqueryui handles dropped elements proposed fix jquery appropriate project user drag drop svg path elements onto svg element caveat ui design purposes technically dragging actual element svg element dragging image svg path element dropped onto svg element run ajax callback tested synchronous asynchronous retrieve render actual path element done using jqueryui appears jqueryui calling setpositionrelative process creating element dropped turn calls jquery css error getting look property css function querying position property exists path element dropping onto svg element apparently nt exist setpositionrelative function called assigning position property manually element querying rendered path element cssrelated functions seem generate appropriate values purposes found single location thought would appropriate use try catch block seems prevent issues trying retrieve css properties elements nt yet exist specifically context drag drop scenario summarized added try catch jqueryjs around line otherwise way get computed value exists use val undefined try val curcss elem name styles catch e fixes issue time reference complete stacktrace", "num": "1816", "d": "10/2014"}, {"title": "css method return wrong value negative percent margin", "body": "css method return wrong value margin hidden element specified negative percent value width returned instead examples css margin css margintop return auto wrong expected css margin width css margintop return wrong expected css margin css margintop return correct css margin css margintop return correct", "num": "1815", "d": "10/2014"}, {"title": "trigger issue", "body": "using method tigger found find input typecheckbox trigger click actually equals b find input typecheckbox click b property checked input changed eventhandler input executed property checked input changed eventhandler input executed nt know trigger designed kind ever think perfectly simulate click event man", "num": "1813", "d": "10/2014"}, {"title": "feature trigger event globally", "body": "would possible officially support triggering event globally question one commonly thought following trigger event item listening source looks like deprecated replacement reason ca nt support feature document make pr helps", "num": "1811", "d": "10/2014"}, {"title": "support xhtml", "body": "sometimes ca nt avoided browser handle html xhtml seems reason jquery nt able handle namespaced xhtml markup since difference dom interface namespace problem jquery ca nt find nodes xhtml document via calls bootstrappingfeature detection code well code handling generated elements fails calls variants need used case xhtml order elements imbued correct dom extensions css etc understand wo nt fix section guidelines references bug unless know something nt dom difference markup comes need specify namespace least feeling many many years osmosis fix less reduces detecting xhtml namespace document load replacing calls testing fix almost certainly take effort fix something fully prepared take preliminary tests positive rather fix lines jquery overhaul entire infrastructure posting issue see general sentiment glean historical information", "num": "1810", "d": "10/2014"}, {"title": "execution applicationldjson ajax page load", "body": "could even type scripts executed ajax page load", "num": "1807", "d": "10/2014"}, {"title": "jquery bind function undefined throw error", "body": "hi code view document click undefined method bind event ca nt defense unfunction bind event brwoser throw error tip click anywhere browser commit", "num": "1805", "d": "10/2014"}, {"title": "send contenttype header post method regardless request body", "body": "see discussion", "num": "1804", "d": "10/2014"}, {"title": "animate scrolltop delay instead animate scrolltop duration", "body": "lot testing delayed seems normally animation duration case actually delay start scrolling setting cause delay scrolling cause delay pages animate scrolltop pagesheight cause delay pages animate scrolltop pagesheight wont strange normally supposed animation duration nt instantly scroll eases chosen slow weird jquery chrome official build windows", "num": "1803", "d": "10/2014"}, {"title": "ajax sends contenttype textplain post data empty changed non empty beforesend", "body": "problem add field ajax post request done using works perfect except requests empty data example requests suddenly textplain contenttype beforesend said contenttype applicationxwwwformurlencoded beforesend lied jquery versions affected see", "num": "1801", "d": "10/2014"}, {"title": "multiple element version", "body": "jquery useful method called lets check whether element set matches certain selector side note documentation could use improvement right clear documentation multiple elements warere matched however way check whether elements set match selector propose solving adding method method would identical except would return true elements jquery object matched provided selector", "num": "1800", "d": "10/2014"}, {"title": "question mark replaced", "body": "originally reported code follows code ends parameter content value content replaced similar content jquery code jquery code end codes maybe need optimize issue reported jquery", "num": "1799", "d": "10/2014"}, {"title": "jquery caching delete request android", "body": "originally reported knobli trying use ajax jquery send delete request android phonegap app like function removeobject id ajax type delete url getapiurl objectphp data id id cache false done function data datasuccess alert success else alert failed looks like response cached first request successful sent backend second one another id also successful never get backend issue js chrome ios workaround put mathrandom variable ur ajax type delete url getapiurl objectphp mathrandom mathrandom issue reported jquery", "num": "1798", "d": "10/2014"}, {"title": "deferred api deferredprogress still available deferred object resolved rejected", "body": "originally reported yuuuuc jquery documentation say calls notify deferred resolved rejected progresscallbacks added ignored read jquery source code progresscallback locked deferred object resolved rejected notify called call resolve reject progresscallback disabled notify called call resolve reject progresscallback locked issue exist version jquery check code example issue reported jquery", "num": "1797", "d": "10/2014"}, {"title": "jquery element triggering events wrap", "body": "originally reported lckooo dynamically create div using jquery use wrap another element using jquerywrap method bind events wrapper nt get triggered see fiddle issue reported jquery", "num": "1796", "d": "10/2014"}, {"title": "css marginright memory leak", "body": "originally reported flexphperia found memory leak reliablemarginright function memory leak created call elementcss marginright jsfiddle test case open address chrome open developer tools make heap snapshot click button jsfiddle example red element removed make another heap snapshot browser tools compare snapshots find one htmldivelement detached dom keeping reference reliablemarginright function fix adding line jquery uncompressed code fix problem docelemremovechild container divremovechild margindiv new line issue reported jquery", "num": "1795", "d": "10/2014"}, {"title": "attributecontainsword selector work attributes newlines", "body": "originally reported gharlan attribute contains newline characters attributecontainsword selector work would expect divs red issue reported jquery", "num": "1794", "d": "10/2014"}, {"title": "change tag npm", "body": "originally reported mgol turns npm install jquery npm actually first recognizes valid semver range nt look tag recently caused issues npm banned ranges npm master rule enforced therefore change tag something nt valid semver range verified via require semver validrange tagname return null issue reported jquery", "num": "1793", "d": "10/2014"}, {"title": "select text input field using jquery onfocus event", "body": "originally reported brianpow background plan select whole text inside input field user focus field enivronment win bits bits method function jquery document focus xxx function xxx thisselect result jqueryon work text selected use addeventlistener instead works well jqueryon addeventlistener work test case issue reported jquery", "num": "1792", "d": "10/2014"}, {"title": "getjson treats request jsonp url contains two question marks", "body": "originally reported stijn similar duplicates data parameter url parameter happens current stable edge fiddle code getjson getjson getjson requests get get get course nt making requests two question marks naive string concat side could dupe mentioned ticket figured worth reporting anyway issue reported jquery", "num": "1791", "d": "10/2014"}, {"title": "calling empty disabled callbacks object reenables", "body": "originally reported thedistantsea earlier today answered stackoverflow question wherein behavior shown var c callbacks var f function cdisable cempty cadd f cdisabled course true cfire invokes f behavior occurs versions jquery tested latest fiddle easily reproduce problem disable relies setting internal variables callbacks object undefined methods add test condition abort true empty instead resets variables causes abort test methods erroneously pass ultimately callbacks added invoked disabled object issue reported jquery", "num": "1790", "d": "10/2014"}, {"title": "contains value attribute selector working", "body": "originally reported alexeykay firefox chrom works expectd logs values hello hello emulator real one logs non existing values well add fix check value nothing document ready function input typehidden id hf value function index consolelog val issue reported jquery", "num": "1789", "d": "10/2014"}, {"title": "ajaxjs environments nt location variable break", "body": "originally reported brianblocker appears change removes ie workaround ajaxjs breaks environments windowlocation specific ajaxlocation locationhref try run automated tests using jasminenode location undefined browser sorta therefore test breaks using previous version works fine appears change introduced breaks environment issue reported jquery", "num": "1788", "d": "10/2014"}, {"title": "way globally clean data", "body": "originally reported mgol element data leaked example detachedoffdom lost reference way get rid data matters tests run watch mode leaks accumulate amp crash browser alternative seems initializing jquery scratch desire clean environment little difficult due fact jquery nt expose initializing function lib would loaded easynatural many test frameworks angular betas recently switched use jquery instead problem arisen see issue reported jquery", "num": "1787", "d": "10/2014"}, {"title": "android erroneous handling script exceptions", "body": "originally reported mgol one test ajax one manipulation concern throwing errors async scripts failing android see eg may needed blacklist tests way prevent behavior probably nt one see also issue reported jquery", "num": "1786", "d": "10/2014"}, {"title": "disable failing tests android eg failures appending checked radios", "body": "originally reported mgol currently almost android failures concern appending checked radio buttons see fixing make android test run almost green one issue left issue reported jquery", "num": "1785", "d": "10/2014"}, {"title": "issues using shadowdom shadowroot elements", "body": "originally reported rictic jsbin link reproduce try chrome firefox domwebcomponentsenabled turned element shadow dom appears ways contained document offset assumes element nt contained document disconnected returns offset top left offset checks see element disconnected could try walking dom checking parentnode contains also looking host one travels shadow root containing element issue reported jquery", "num": "1784", "d": "10/2014"}, {"title": "jquery trigger method nt populate currenttarget", "body": "originally reported arkadykarev problem see subject makes jquery completely compatible libs uses currenttarget example following example work correctly go vegetables gt cucumber press activate next button perform radio button changes attached handlers triggered click radio buttons manually see changes price description etc following workaround help var event jqueryevent change eventcurrenttarget eventtarget parent parenttrigger event anyway seems like jquerry bug also found requests gwt groups issue reported jquery", "num": "1783", "d": "10/2014"}, {"title": "ajax requests binary data throw errors chrome", "body": "originally reported cbroome related issue code starting line complete xhrsuccessstatus xhrstatus xhrstatus xhrstatustext support accessing binarydata responsetext throws exception typeof xhrresponsetext string text xhrresponsetext undefined xhrgetallresponseheaders ticket fix throw exception ie browsers however chrome throws exception well accessing xhrresponsetext advocating jquery handling binary data another ticket left plugins like see conditional typeof xhrresponsetext string changed something safer xhrresponsetype text amp amp xhrresponsetext string something similar long check nt throw exception current state prevents launching complete callback binary data response even though text inessential parameter defaulted undefined thanks issue reported jquery", "num": "1782", "d": "10/2014"}, {"title": "basic authentication work jsonp", "body": "originally reported driz sending basic authentication credentials jquery ajax request like nt work datatype jsonp changing datatype json works however need use jsonp cors following workaround issue reported jquery", "num": "1781", "d": "10/2014"}, {"title": "download builder", "body": "originally reported dmethvin let official download builder issue reported jquery", "num": "1780", "d": "10/2014"}, {"title": "syntax errors minified sources", "body": "originally reported bergi current versions syntactic errors minified distribution files prevents compilation strict mode try execute prefixed use strict syntax error functiondeclaration statement context sure means look stackoverflow question familiar build process might either bug minifier wrong usage minifier problems custom build process jquery fault please file upstream bug used minifier", "num": "1779", "d": "10/2014"}, {"title": "remove coreready hard dependency deferred", "body": "originally reported mgol deferred unavailable eg removed via custom compilation coreready implementation fall back standard promise issue reported jquery", "num": "1778", "d": "10/2014"}, {"title": "mixing delegated direct click handlers behaves differently ie windows phone", "body": "originally reported amasniko got fixed positioned overlay direct click handler attached top absolutely positioned element delegated click handler every browser tried clicking absolutely position element invokes delegated handler except windows phone os version overlay handler called try clicking click text following example issue reported jquery", "num": "1777", "d": "10/2014"}, {"title": "error animate plain object", "body": "originally reported dmethvin sure animate intend support generic object code raise exception uncaught typeerror use operator search opacity undefined var opacity animate opacity try use css set opacity change name var animate works guess might resolvable jquery detect html object sure animate intend support html object issue reported jquery", "num": "1776", "d": "10/2014"}, {"title": "ajaxerror ajaxcomplete firing twice upon abort", "body": "originally reported dwelle aborting jqxhr objects inside ajaxsend results ajaxerror ajaxcomplete callbacks called twice first execution jqxhr status abort second execution throws typeerror read property send undefined jsfiddle tested chrome ff jquery issue reported jquery", "num": "1775", "d": "10/2014"}, {"title": "show animations like show toggle slidedown nt respect css display property initial state display none", "body": "originally reported nicholasbg element class css display property default example display block inline style like display none setting displayed something like toggle cause use class display property toggle work properly even toggle exhibit behaviour tell bug introduced jsfiddle demonstrate bug see working normally change jquery version something remove toggle similar case ticket issue reported jquery", "num": "1774", "d": "10/2014"}, {"title": "allow fire callbacks reversed order using callbacks object", "body": "originally reported logo new flag eg reversed could added callbacks object would make callbacksfire method fire callbacks reversed order stackbased execution patterns popular flag would add another possible usage simple yet powerful tool example function value consolelog value function value consolelog says value return false var callbacks callbacks reversed callbacksadd outputs foo callbacksfire foo callbacksadd outputs says bar foo callbacksfire bar issue reported jquery", "num": "1773", "d": "10/2014"}, {"title": "chrome sandboxed app unload available packaged apps", "body": "originally reported solgar hi discovered latest version jquery receive error attempt load inside sandbox chrome app needs done replicate include jquery inside sandbox chrome app created example app replicate error appears related code designed apply far tell issue generates error app loaded appear affect application jquery seems still behave correctly inside outside sandbox issue chrome inside sandbox chrome app furthermore issue version jquery likely added strain issue reported jquery", "num": "1772", "d": "10/2014"}, {"title": "isplainobject returns true instance event", "body": "originally reported compare seems isplainobject event click return false samples use case jquery breaks event instance issue reported jquery", "num": "1771", "d": "10/2014"}, {"title": "fix release script", "body": "originally reported dmethvin metaticket problems encountered release jqueryrelease issues others core releasejs script release tries update jqueryjs jquerylatestjs cdn fails going update anymore freeze remove core releasejs fixed branches npm publish tag fail two different releases worked failed result ended subsequent steps manually note npm publish tag worked fine manually times since npm independent later steps idea error continue jqueryrelease simplify error recovery minimize mess cdn zip files created releasejs empty bytes release nt get far npm error build script never came back shell prompt even got complete message perhaps related zip files empty version packagejson nt seem happen master manually version nt updated bowerjson either old nonsemver format well need repo fulltime exist tagged release see issue issue reported jquery", "num": "1770", "d": "10/2014"}, {"title": "infinite loop empty namespace", "body": "originally reported christian meixner event registered namespace try remove accidentally empty namespacestring enters inifinite loop locking browser window least firefox example document clicka handler document click note trailing dot click aware valid code fail infinite loop blocking browser issue reported jquery", "num": "1769", "d": "10/2014"}, {"title": "define defined error broken build", "body": "originally reported corbacho building custom jquery master branch command grunt build coreready output line define jquery function produces error referenceerror define defined using grunt build know grunt custom recommended alias trying build minimum possible jquery contains necessary code reliable document ready want propose solution part upcoming drupal core alternative domready solution using whole command grunt build coreready exportsglobal exportsamd ajax ajaxxhr ajaxscript ajaxjsonp css deprecated dimensions effects event eventalias offset wrap sizzle queue data css selector traversing serialize builds size domready solution gzipped removing buggy line mentioned works issue reported jquery", "num": "1768", "d": "10/2014"}, {"title": "show break responsive stylesheets", "body": "originally reported stenpaa show called computed display value cemented inline style cause inconsistent behavior fiddle note fiddle use javascript change layout simulates would happen display inline style applied conditionally based responsive media query given block code could produce different results based something like orientation device device orientation really viewport width changed respect showhide calls made understand based fact inline style applied point show called browser rendering styles properly bug suppose comes fact dynamic computed value assumed ok translate fixed inline style resolution may involve finding way clean inline style end show allow styles provided jquery continue exactly showhide invoked issue reported jquery", "num": "1767", "d": "10/2014"}, {"title": "contents children selectors return elements order", "body": "originally reported npben problem exists version looked source since children content selectors hardcoded go logic verifies uniqueness probably situation nt considered examples children contents removing two tags guaranteedunique array fixes issue nt make patch familiar source may better way handle workaround calling add unorderedobject causes uniqueness check sort elements issue reported jquery", "num": "1766", "d": "10/2014"}, {"title": "offsetparent fails recognize transform context", "body": "originally reported jlukic according spec browser behavior using transformation creates new rendering context similar position relative jquery however return offset parent return incorrectly closest container position relative see jsfiddle absolute positioned element relative transformed context reports wrong offsetparent crucial third party libraries use jquery like library semantic ui need determine correct offsetparent using contexts issue reported jquery", "num": "1765", "d": "10/2014"}, {"title": "ie fullscreen inside iframe needs workaround", "body": "originally reported christopher ie bug fullscreen support element made fullscreen inside iframe values offsetwidthoffsetheight results getboundingclientrect small details issue also noticed click positions may opposite direction update ticket find repro issue well issue reported jquery", "num": "1764", "d": "10/2014"}, {"title": "unable trigger checkbox click immediately changing disabled false", "body": "originally reported danspamable bug occurs firefox internet explorer code reproduce checkbox chk prop disabled false chk trigger click see expected results checkbox enabled checked actual results checkbox enabled checked issue reported jquery", "num": "1763", "d": "10/2014"}, {"title": "outerwidth val nt handle selects properly", "body": "originally reported scottgonzalez broken explicitly setting boxsizing contentbox fixes see also issue reported jquery", "num": "1762", "d": "10/2014"}, {"title": "please provide function escaping special characters selectors", "body": "originally reported fejesjoco read article says plain simple colon period must escaped example code also escapes square brackets problem already future may add new special character cool new selector feature breaking change see already many bugs filed special characters selectors closed documented understand completely bug report feature request please provide function escaping special characters selectors benefits easy utility function implement useful many cases people never cared issues realize use escaping mechanism people used run problems special characters used file unnecessary bugs outofthebox solution instead spec changes jquery api changes wo nt breaking change updated escape function would handle new cases quoted documentation suggests copypaste code js jquery helping eliminate kinds code pieces would great embedded also realized much characters could need escaping talking restricted id proposed escape function could handle well hope problem unnecessarily escapes characters selector cases needed issue reported jquery", "num": "1761", "d": "10/2014"}, {"title": "clean empty cache entries", "body": "originally reported psquared even event handlers removed empty cache entry left datapriv unfortunately empty cache entries remain elements removed using method remove causing memory leak test environment chrome jquery steps reproduce attach event handler element eg using remove event handler remove element noderemovechild expected results memory leaks actual results orphaned cache entry remains datapriv example additional info modifying last block jqueryeventremove seems alleviate problem remove expando longer used jqueryisemptyobject events delete elemdatahandle dataprivremove elem events delete dataprivcache elem dataprivexpando issue reported jquery", "num": "1760", "d": "10/2014"}, {"title": "removeattr selected set property false", "body": "originally reported wchen firefox selected value chrome selected value removeattr special handing boolean attributes set corresponding dom property false removing attribute setting dom property false different case specified setting property false means setting dirtiness true changes option react selected attribute changes test case means adding selected attribute end select option firefox respects specified behaviour select second option issue reported jquery", "num": "1759", "d": "10/2014"}, {"title": "textbox responding keyup event", "body": "originally reported sylvain courcoux hi select element textbox element textbox wired keyup event handler checks input numeric using regex clears nonnumeric characters textbox also wired focus event handler check value select element numeric blur textbox basically functionality enter phone numbers problem nonnumeric characters go whereas chrome firefox nonnumeric characters deleted expected sure jquery problem jsfiddle issue reported jquery", "num": "1758", "d": "10/2014"}, {"title": "problem context loading script iframe", "body": "originally reported jjgcastela create script node append head body iframe code evaluated main window jquery loaded instead window iframe able solve adding desired document second argument globaleval function way globaleval function code doc var script indirect eval code jquerytrim code code code includes valid prologue position strict mode pragma execute code injecting script tag document doc amp amp doc document codeindexof use strict doc doc document script doccreateelement script scripttext code docheadappendchild script parentnoderemovechild script else otherwise avoid dom node creation insertion removal using indirect global eval indirect code dommanip function adding parameter call globaleval jqueryglobaleval nodetextcontentreplace rcleanscript doc issue reported jquery", "num": "1757", "d": "10/2014"}, {"title": "update css parser syntax error message", "body": "originally reported waldechristian code throwing syntax errors css parser looks follows throw error syntax error unrecognized expression e practice triggered deep inside third party javascript generates css selectors programmatically results mildly helpful errors like helpful part error message actually contains css selector used confusing side looks like error might come js engine firefox mention upset invalid css selector contains stacktrace ca nt breakpointed trying approach firebug thrown often trying step code many layers earlier call stack simple change error message would make much helpful less confusing throw error css selector syntax error unrecognized expression e issue reported jquery", "num": "1756", "d": "10/2014"}, {"title": "add vagrant support lightweight server", "body": "originally reported eric current unit test instructions advise developers install variant amp heavy install set development environment adding vagrantfile related configuration would allow project ship portable server configuration along code lowering bar new developers clear order run contribute unit testing example vagrantfile available pull request issue reported jquery related", "num": "1755", "d": "10/2014"}, {"title": "investigate implementing jquery specifically init array subclass", "body": "originally reported inspired interesting zepto proposal seems legs us suspect could reduce size well especially issue reported jquery", "num": "1754", "d": "10/2014"}, {"title": "expose interface usedstyle rawcomputedstyle implemented", "body": "originally reported mikesherov help us fix lot autopxpercent issues cantfixed years issue reported jquery", "num": "1753", "d": "10/2014"}, {"title": "edge selfreplacement cases replacewith", "body": "originally reported markelog created ticket per request see essence related bring issue irc channel right fix landed back decided cases rare ones worth given aware kind problems submitted bug tracker lived years without lot attention taking account complexity solution ticket probably would negatively reflect size speed inclined close issue patchwelcome resolution issue reported jquery", "num": "1752", "d": "10/2014"}, {"title": "nt handle attributes digits name well", "body": "originally reported zerkms version affected browser chrome os windows following html var div div consolelog divdata javascript code expect see object one property actual result empty object jsfiddle issue reported jquery", "num": "1751", "d": "10/2014"}, {"title": "triggering focus event namespace runs focus listeners", "body": "originally reported peter using jquery onwards calling trigger focusmyevent focusses target element triggers focus handlers regardless namespace inconsistent events handlers myevent namespace would triggered behaviour appear present tested google chrome version windows issue reported jquery", "num": "1750", "d": "10/2014"}, {"title": "remove size amp andself methods deprecated jquery", "body": "originally reported mgol high time remove jqueryfnsize jqueryfnandself methods deprecated since removing seems fine issue reported jquery", "num": "1749", "d": "10/2014"}, {"title": "support shadowroot nodes sizzle", "body": "originally reported tjvantoll currently shadowroot nodes used sizzle shadowroots documentfragments additional methods adding support might bad issue reported jquery", "num": "1748", "d": "10/2014"}, {"title": "extension point intercepting html dom insertion", "body": "originally reported nicholas company desire filter html strings go methods like html append prevent xss code base quite large thousands references types methods accept html string dom insertion feasible replace instance method call far tell current way intercept html strings insertion suggesting adding kind extension point jquery core would allow someone register function would receive html insertion allow someone change html would actually inserted following potential uses custom xss filters auto linking filters automatically turn email address link example stripping personal data clear suggesting including anything extension point would allow filters written without need basically overwrite html append prepend others manfully check string arguments issue reported jquery", "num": "1747", "d": "10/2014"}, {"title": "jqueryeventfix may force layout", "body": "originally reported anonymous accessing event properties copying like jqueryeventfix event prop originalevent prop may force style recalculation layout screenshots timeline chrome developer tools issue reported jquery", "num": "1746", "d": "10/2014"}, {"title": "empty leaks children attached via documentfragment", "body": "originally reported simon empty cleanly remove children attached via documentfragment issue bug noderemovechild running fiddle sieve demonstrates problem ca nt run jsfiddle create local html minimal test case press button see sieve elements still memory orphaned althought container emptied issue resolved using noderemovenode true test effect removenode fiddle setting usedestorytrue reloading pressing button elements longer leak test case demonstrates issue resolved using noderemovenode false instead noderemovechild example additionally dojo source documents bug right issue reported jquery", "num": "1745", "d": "10/2014"}, {"title": "enhancement selector unwrap", "body": "originally reported nlte unwrap simple removes parent selected elements accepts arguments cases may desirable unwrap condition parent met enabling pass selector unwrap would allow parent matches selector proceed otherwise nothing issue reported jquery", "num": "1744", "d": "10/2014"}, {"title": "jsonp error handler cross origin requests triggered timeout", "body": "originally reported rijoel jsonp error handler triggered http errors eg origin requests immediately cross origin requests timeout occurred easily fixed adding scriptonerror see zeptojs tested browsers affected chrome firefox safari opera affected ie provide patch later issue reported jquery", "num": "1743", "d": "10/2014"}, {"title": "make unit tests work selectornativejs", "body": "originally reported dmethvin would good native selector engine run clean subset unit tests sanity check would nt hurt wait get user feedback though issue reported jquery", "num": "1742", "d": "10/2014"}, {"title": "focus event ignores additional data triggered", "body": "originally reported mail input focus function event extra data consolelog extra data input trigger focus extra data works version work version expected behavior console shows extra data false behavior console shows undefined undefined browser firefox os os x issue reported jquery", "num": "1741", "d": "10/2014"}, {"title": "improve module handling testswarm grunt task", "body": "originally reported stopgap really robust way ensure qunit tests always sent testswarm issue reported jquery", "num": "1740", "d": "10/2014"}, {"title": "html outerheight true returns inconsistent results across browsers", "body": "originally reported jon receiving inconsistent results browsers using html outerheight true goal retrieve actual rendered height document avoiding document height rendered height smaller window height window height returned firefox html outerheight true works correctly window height always returned observe using example run firefox see notice html height matches document height run see notice height approx matches window height document height issue reported jquery", "num": "1739", "d": "10/2014"}, {"title": "create unit test toggleshowhide callback", "body": "originally reported gnarf signature result animated toggleshowhide default duration historically behavior test document see also signature also hold true fade slide issue reported jquery", "num": "1738", "d": "10/2014"}, {"title": "rewrite speed framework based latest sizzle speed tests", "body": "originally reported mikesherov issue reported jquery git", "num": "1737", "d": "10/2014"}, {"title": "add hook cleandata allow cleanup", "body": "originally reported tj crowder jquery needs know element cleaned plugin code perhaps applicationpage code sometimes needs notification well tinymce jquery plugin instance monkeypatches jquery hook empty remove etc clean plugin instance needs respond window resize try might ca nt come way wo nt leave handler lying around programmer using nt call destroy method let face pretty easy fail recommend adding hook event plugins applicationpage code use clearlydocumented caveat almost option used first potential performance implications performance cost normal case one hooked event looks trivially small looking cleandata current dev source looks like comes one extra property test line manipulationjs line number rot eg data amp amp dataevents new dataeventsdestroy new jquery elem trigger destroy efficient way course new pretty cheap quick test machine firefox elements dataevents one dataeventsdestroy average time clear container without cost someone actually hooked event course higher largely irrelevant hooked presumably reason would course somewhat unusual event offthecuff would nt bubble could nt cancelled unusual events happy get details submit pull request tests documentation suggestion legs issue reported jquery", "num": "1736", "d": "10/2014"}, {"title": "allow objects event handlers", "body": "originally reported petkaantonov oop jquery events requires lot proxy boilerplate addeventlistener interface allows passing object handler like function somewidget elem thiselem elem somewidgetprototype constructor somewidget renderto function target target append thiselem thiselemaddeventlistener click thiselemaddeventlistener mousemove mousemove function e click function e handleevent function e return etype apply arguments jquery function somewidget elem thiselem elem method needs bound instance also overhead creating many functions thismousemove proxy thismousemove thisclick proxy thisclick somewidgetprototype constructor somewidget renderto function target target append thiselem thiselem click thisclick mousemove thismousemove mousemove function e click function e jquery supporting objects event handlers would work like function somewidget elem thiselem elem somewidgetprototype constructor somewidget renderto function target target append thiselem thiselem click mousemove mousemove function e click function e handleevent function e return etype apply arguments proxy hacks redundant creation functions retain binding issue reported jquery", "num": "1735", "d": "10/2014"}, {"title": "move element cache element expando avoid cleanup reduce code", "body": "originally reported johndaviddalton soo way back dean edwards proposed event system slapped listeners actual element allowed cache destroyed element gced weekend peter michaux proposed similar solution noticed jquery supports events vanilla objects change would align elements objects gist since jquery already adding expando uid use property actual storage element code recursively clean removeded elements eventcustom data could removed element gced data destroyed issue reported jquery git", "num": "1734", "d": "10/2014"}, {"title": "sourceurl support scripts loaded dommanip using xhrs", "body": "originally reported vsevik ticket inspired discussion chrome developer tools mailing group sourceurl way give name script executed eval debugging purposes see adding sourceurl scripts loaded dommanip would make debugging easier example head append similar different request closed wontfix earlier comments reasons mentioned developers need debugging yes valuable developers comes virtually zero cost users useful chrome users sourceurl supported firefox webkit chrome safari makes together browser market share limited use names would need randomly generated example mentioned url could taken src attribute script tag url script loaded vsevolod vlasov webkit reviewer issue reported jquery", "num": "1733", "d": "10/2014"}, {"title": "preserve url hash requesting via ajax", "body": "originally reported pferreir trying inject facebook like button js page execution time got funny behavior var fjs script first attr async true src connectfacebooknetenusalljs amp appidxxx insertbefore fjs fails equivalent call var fjs script first get var e attr async true src connectfacebooknetenusalljs amp appidxxx get fjsparentnodeinsertbefore e fjs works ok tried different combinations nativejquery elements fail happens least since issue reported jquery git", "num": "1732", "d": "10/2014"}, {"title": "run jquery unit tests xhtml", "body": "originally reported dmethvin need run unit tests xhtml doctype ensure everything passes issue reported jquery", "num": "1731", "d": "10/2014"}, {"title": "upload property xmlhttprequest", "body": "originally reported superbulldeng upload property xhr object returned new xmlhttprequest supported browser object returned ajax seems nt contain property property important get state file upload progress issue reported jquery", "num": "1730", "d": "10/2014"}, {"title": "window outerwidth include scrollbar width", "body": "originally reported antti sometimes annoying window width window outerwidth include scrollbar width value especially trying match window width css media queries currently eg media query css media screen maxwidth body background red red background actually applied document browser jquery tells window width less scrollbar width annoying eg cases mobilespecific stuff needs done css js would need done exactly width documentwindow however plain javascript returns window width asked point breakpoint follows consolelog windowinnerwidth possible get either window width windor outerwidth working consistently browser actual width document width body width return windowinnerwidth either return window width window outerwidth fixing would greatly help making consistent code css media queries possible workarounds currently using plain javascript ie windowinnerwidth checking visible element visible target width example mean issue reported jquery", "num": "1729", "d": "10/2014"}, {"title": "jquerydata first access performance bad", "body": "originally reported daliuskal first time later first run extremely slow jquerydata el already called note key nt matter bug seems started version jquerydata rewritten using first case takes first time times affecting jquery ui performance badly eg first red rectangle drop takes issue reported jquery", "num": "1728", "d": "10/2014"}, {"title": "migrate open issues bugsjquerycom github", "body": "", "num": "1727", "d": "10/2014"}, {"title": "add global ajax beforesend event", "body": "originally reported joshpeek adds global ajaxbeforesend complement local beforesend event issue reported jquery", "num": "1726", "d": "10/2014"}, {"title": "allow users respond ajax event states", "body": "originally reported hungerandthirst jquery docs explicitly state onreadystatechange mechanism provided however since success error complete statuscode cover conceivable requirements frankly think limiting users unnecessarily want respond something get headers back want know start receiving content back server excellent example using jquery bandwidth testing without way detect initially receive content back server beforesend also include delay spent waiting server respond added support receiveheader loading event per xmlhttprequest specs pull request would also like see support onreadystatechange well since valuable states limiting losing value tracking issue reported jquery git", "num": "1725", "d": "10/2014"}, {"title": "width height etc nt round", "body": "originally reported john right rounding answers width height etc nearest pixel makes hard good positioning elements especially animations example items width inside element returning element theoretically animation method might able return interesting result know extra fractionalnumbers getting rounded got report directly mozilla agree particular change makes hard get good numbers see also issue reported jquery", "num": "1724", "d": "10/2014"}, {"title": "fadeto doesnt work position different static aplied child element faded", "body": "originally reported alexanmtz see live example fadein opacity animation nt work applied element child position different static browsers work expected except issue reported jquery", "num": "1723", "d": "10/2014"}, {"title": "improve api interoperability standard promise", "body": "originally reported jzaefferer discussed jquery team meeting amsterdam spec still changing lot within whatwg draft pages github wait ship unprefixed behind flag stable browsers first happened changefix implementation match spec shipped implementation use pipe continue using jqueryspecific functionality", "num": "1722", "d": "10/2014"}, {"title": "form input element name nodename", "body": "use jquery error uncaught typeerror undefined function", "num": "1721", "d": "10/2014"}, {"title": "html method give warning dropping malformed tags", "body": "call contains malformed tags malformed tags silently dropped example silent warning logged", "num": "1718", "d": "10/2014"}, {"title": "chrome jqueryajax fails without calling errorcomplete handlers requesting", "body": "making ajaxrequest page loaded request blocked chrome neither error handler complete handler functions called safari request succeeds warning success complete handlers called firefox request fails error complete handlers called example", "num": "1717", "d": "10/2014"}, {"title": "create xhr", "body": "originally reported jzaefferer amsterdam team meeting create xhr based ajax without legacy options async false things specific nonxhr jsonpscript options keep beforesend expose native xhr cover removed xhrfields option cache possibly rename something like nocache data string use default param append url get requests otherwise send request body today headers method aka type username password url timeout options remove accept use headers async use different method sync requests contents custom parsing contenttype use headers context use proxy converters global hash convertors crossdomain nonxhr datafilter datatype jq use response contenttype global everything consistent ifmodified make plugin islocal expose localprotocols global config array instead jsonp nonxhr jsonpcallback nonxhr processdata knows one sending xml documents anymore right scriptcharset nonxhr statuscode handle responses mimetype override stuff scriptcharset nonxhr successerrorcomplete legacy traditional convert data option string param true xhr xhrfields use beforesend instead first step would delegate ajax eventually possible build jquery interface without methods like get getjson even ajax", "num": "1713", "d": "10/2014"}, {"title": "width value sets incorrect width value block border value specified ems boxsizing borderbox", "body": "originally reported tde api documentation specifies note width value sets content width box regardless value css boxsizing property two key factors leading bug boxsizing borderbox solid black width specified ems code reproduces bug", "num": "1712", "d": "10/2014"}, {"title": "relative percentage values work animate css", "body": "originally reported jwagner moves item pixel instead works expected adds docs suggest css animate behave identically similar really mean similar identical would help give hint docs relative percentage values supported css problem shows current chrome firefox fiddle reproduce", "num": "1711", "d": "10/2014"}, {"title": "clean support comments compat branch", "body": "originally reported dmethvin sure practical cherrypick several additional code blocks need cleanup ref", "num": "1710", "d": "10/2014"}, {"title": "remove sizzle expando clone action", "body": "originally reported jogi issue space selector jquery internet explorer exemple testcls nameblabla find anything older version work jsfiddle", "num": "1709", "d": "10/2014"}, {"title": "position table rows inside relative div container gives different results based scroll position", "body": "originally reported ripdog docs position clearly state return current position element relative offset parent explicitly position based viewport however position report different results based moved page due scrolling fiddle click button scroll click offsettop direct dom stays constant position changes", "num": "1708", "d": "10/2014"}, {"title": "sourcemappingurl comment removed bower build", "body": "hi installed v bower minified version still comment pointing map file conflicts stated official download page hint circumvent issue contribute", "num": "1707", "d": "10/2014"}, {"title": "expr jqueryexr nt work expected", "body": "expr nt work nt work want create userdefined selector using code javascript jquery user selector body div width paddingleft fontsize lineheight backgroundcolor eee function extend expr function elem index match var arrsinglematch split return arrsingle amp lt index amp amp amp amp index amp lt arrsingle jquery lt p gt function var lt lt div gt lt div gt appendto body div css background color fff lt script gt search many pages look books turtorials find reason code nt work failedfew people use expr many people maybe need create userdefined selectorbut find reason comparing older version jquery finally use run code works nt work expr index argument true index element argument javascript jquery user selector body div width paddingleft fontsize lineheight backgroundcolor eee function extend expr function elem index match var arrsinglematch split index true index elem consolelog index return arrsingle lt index amp amp index lt arrsingle jquery function var lt lt div gt lt div gt appendto body div css background color fff lt script gt expr index argument time index true element index javascript jquery user selector body div width paddingleft fontsize lineheight backgroundcolor eee", "num": "1706", "d": "10/2014"}, {"title": "fix get alpha opacity", "body": "setting opacity element according use note filter upper case jquery currently support getting result setted lower case like see demo also msdn upper case lower case used examples pr", "num": "1705", "d": "10/2014"}, {"title": "broken link", "body": "huge issue url right seems broken", "num": "1703", "d": "10/2014"}, {"title": "feature request resolve jquery context parameter first parameter selector", "body": "eg resolve compare", "num": "1702", "d": "10/2014"}, {"title": "safari detected ie lt", "body": "case safari get body zoom forcibly set check", "num": "1701", "d": "10/2014"}, {"title": "method retrieve request headers sent", "body": "native xmlhttprequest api nt methods get request headers would useful add one jqxhr object facilitate debugging test automation direct calls pass directly fullproof way get request headers sent would need take consideration headers added via user requests dating back suggest would useful feature request headers showing google autocomplete searching jqxhr get", "num": "1700", "d": "10/2014"}, {"title": "ie nt fire event input elements", "body": "listening event consistent across browsers minimal test case javascript var input documentqueryselectorall input inputindeterminate true input change function alert change jsfiddle chrome firefox event fires element clicked input needs clicked twice remove state fire event possible work arround issue manually firing event input elements javascript browsers already fire change event bind listener ie windownavigatoruseragentindexof trident gt checking user agent firing event could probably detected creating input element triggering", "num": "1698", "d": "10/2014"}, {"title": "misleading documentation toggleclass method", "body": "third variation toggleclass method documentation follows toggleclass switch switch type boolean boolean value determine whether class added removed says class particular class specified toggles class names present matched elements would great documentation reads side note also later point docs says arguments passed toggleclass class names element first time toggleclass called toggled would nice added first variant method along better description class names element first time toggleclass called toggled something like class names present element toggleclass called first time toggled better imho", "num": "1696", "d": "10/2014"}, {"title": "ajax abort unload requires event module", "body": "fix put following xhrjs however makes xhr dependent events create custom build events give error nt support property method supports windowonbeforeunload may use instead", "num": "1695", "d": "10/2014"}, {"title": "isemptyobject return true string", "body": "isemptyobject bugaga returns true browsers false jquery", "num": "1694", "d": "10/2014"}, {"title": "make jquery collections forofable", "body": "chrome added support proposing jquery collections made compatible statement achieved line discussion twitter live demo view chrome", "num": "1693", "d": "10/2014"}, {"title": "improve performance removal events namespaces", "body": "found doochik probably happens recursion still fast though absolute numbers wonder could better thinking could something hurt byte size otherwise much edge case something drastic", "num": "1692", "d": "10/2014"}, {"title": "download builder", "body": "let make one people ca nt complain hard", "num": "1691", "d": "10/2014"}, {"title": "jqueryfnoffset returns incorrect values elements shadowroot", "body": "offset function documentation states get current coordinates first element set coordinates every element set matched elements relative document however reality returns coordinates relative closest parent documentfragment shadowroot demonstrate set simple test test also contains simple patch fixes problem set browsers tested chrome firefox ie sure handle setcoordinates part function behavior nt really use patch handles get path bunch libraries depend offset affected setup tests couple", "num": "1690", "d": "10/2014"}, {"title": "inconsistent behavior passing bools html method", "body": "versions jquery calling method produces two different behaviors look test case see two elements html set test case uses latest version jquery see behavior test case using latest version jquery following version backwards see following version test case neither html calls write anything elements version future versions test case calling html true writes true element calling false writes nothing serious issue would preferable html method act boolean values behavior wrote nothing least consistent true false seems html either go back writing nothing cases writing true true false false behavior tested chome safari firefox identical behavior seen three browsers", "num": "1689", "d": "10/2014"}, {"title": "selector bug", "body": "problem issue known issue clonesadds nonstandard element page adds blank prefix tag includes colon note nonstandard exactly correct standard less common elements also happens jquery selecting blankprefixed elements multistage combo selector works using tagname without prefix using selector pattern like refer example clearer understanding affected browsers know applies doubtful applies versions ie able test update statement nt exactly correct nt necessarily solve issue notice inconsistent behavior use pseudoselectors demo shows bug prefixed colon handled using jquery using pseudoselectors least consistent selecting element tagname whether includes prefixed elements return results hidden behavior found acts like something patch ie prefix bug acts like demo test case testing foo add custom element dom documentcreateelement someelement jquery document ready function var el someelement var clone elclone create copy element original create element blank prefix lt someelement gt lt someelement gt elafter clone method outputlength someelement span length someelement span method outputlength someelement find span length someelement find span method outputlength someelement span someelement span length someelement span someelement span method outputlength someelement visible span length someelement visible span function outputlength label elems var label jquery lt label gt html label var value jquery lt span gt html elemslength var output jquery lt div gt append label value jquery body append output consolelog outputhtml elems incase prefer console", "num": "1687", "d": "10/2014"}, {"title": "hidden selector reports true form style rule display inline chrome safari", "body": "reproduced instance form stylerule display inline contains divelement first child form hidden returns true appears problem occur first childelement form blocknode display block bug also appears chrome safari firefox", "num": "1686", "d": "10/2014"}, {"title": "cors http patch request working", "body": "see latest update", "num": "1684", "d": "10/2014"}, {"title": "change references bugsjquerycom github issues", "body": "least references contributingmd packagejson thx arthurvr may jquerycom amp friends need updated well", "num": "1681", "d": "10/2014"}, {"title": "file input click inside div click function", "body": "open console browser run", "num": "1679", "d": "10/2014"}, {"title": "width rounds widths", "body": "sure issue reproduce starting jquery nt think could hide much time however noted returns rounded width element computed width asserted documentation created dummy demo basically set width element say returns", "num": "1677", "d": "10/2014"}, {"title": "core function remove later version", "body": "know jqueryclean core function convert html text dom nt found version seems like rename jquerycleandata", "num": "1674", "d": "10/2014"}, {"title": "create bowerjson release remove repo", "body": "since nt commit built file change bowerjson file refers nonexistent file someone tries install repo get confusing results use npm internal needs could create commit bowerjson file release time instead leaving repo", "num": "1673", "d": "10/2014"}, {"title": "installation issue bower", "body": "hello try install jquery bower nothing extracted bowercomponents excepted files bowerjson index output get c npm bower install v bower jquery cached bower jquery validate bower jquery new version bower jquery resolve bower jquery download bower jquery resolved bower jquery install jquery etag jquery etag bowercomponentsjquery system info bower version node version os windowsnt something wrong", "num": "1671", "d": "10/2014"}, {"body": "great idea monitor errors definitely find lot way things breaking real life see error thrown inside jquery often indicates problem way code calling jquery sometimes thirdparty plugin ad blocker creates situation nt see testing might expect many people using jquery ca nt front line debugging web site uses suggest start site like stackoverflow jquery forum get help see something clear bug jquery feel free open issue specific repro case", "d": "10/2014"}, {"body": "see note docs value reported height guaranteed accurate element parent hidden get accurate value show parent first using height", "d": "10/2014"}, {"body": "cc dmethvin", "d": "10/2014"}, {"body": "surprisingly hard problem eh think current contributingmd file long people nt reading also overlap content quick patch would say content belongs make sure jquery bug section nt fix problem much read though", "d": "10/2014"}, {"body": "nt directing people file pointing instead perhaps remove content making sure relevant site putting short notice instead would direct site well", "d": "10/2014"}, {"body": "using template sites points back contribute site see example maybe could use work discussion getting right place suspect jquery core repo one likely get misdirected requests", "d": "10/2014"}, {"body": "good idea", "d": "10/2014"}, {"body": "would want us error caught", "d": "10/2014"}, {"body": "could force ready handlers called asynchronously ie replace wo nt solve problem functions added promise directly note using standard promises would even worse handler throwing exception would fail silently nothing else would break making quite tricky know bug also previous implementation lt would go array function call sequentially behave exactly way except adding function document ready", "d": "10/2014"}, {"body": "agreed far obvious fix catch error report somehow otherwise masking problem", "d": "10/2014"}, {"body": "apologies improper test case earlierlet give exact use case example example works fine yes jquery suppress error may correct execute pending handlers queue time first handler throws error cause problem newly registered handlers example ready handler added click button works fine jquery fails jquery looks like uses finally block reset firing flag possible similar fix thank looking", "d": "10/2014"}, {"body": "yes think possible restore version remove considers syntax error jaubourg think", "d": "10/2014"}, {"body": "well know pained remove block first place argument", "d": "10/2014"}, {"body": "according finally supported", "d": "10/2014"}, {"body": "mzgol problem required could nt words catch smilecat", "d": "10/2014"}, {"body": "yeah rethrowing catch ended losing actual context original exception", "d": "10/2014"}, {"body": "ah right good dropping ie lt", "d": "10/2014"}, {"body": "put complete test case jsfiddlecom jsbinnet", "d": "10/2014"}, {"body": "sorry emulate parsererror jsfiddle tried created test site jscode bad js help jsfiddle remove links tests site thank", "d": "10/2014"}, {"body": "test case fine proves point looks like current code returning specific error thrown rather dumbing result sure whether change documentation code change docs say may specific error get benefit finding specific parser error occurred change reflect docs lose detail scabbiaza situation saw generic message help jaubourg reason nt return", "d": "10/2014"}, {"body": "well value third argument given canonical error callback see doc doc page reason happened dumbed values aborts timeouts incidental fact actual underlying error thrown situations convenience third argument thus set value second case http errors http status text provided xhr infrastructure parser errors exception thrown converters see documentation lacking regarding latter fact nt access second argument canonical error callback context rather third one another wonderful design flaws stacking top years thankfully since easily get around using prefilter remember global ajax events evil", "d": "10/2014"}, {"body": "writing ajaxerror handler application found issue created ajaxerror tests work fine except parser error case expected get documentation says possible values thrownerror argument timeout error abort parsererror opinion generic message useful error identification need access error description well", "d": "10/2014"}, {"body": "looking docs nt see guarantee value similar comment code opinion generic message useful error identification need access error description well smile particular case error occurring server returned invalid json either something rare encountered initial development something decided want harden code example bad thirdparty servers second one could get input text parse would allow provide detailed diagnostics prefer", "d": "10/2014"}, {"body": "well dmethvin assuming control serverside things always case whole argument moot using prefilter solve problem let put solution case guys missed", "d": "10/2014"}, {"body": "jaubourg want get clarity problem reported whether requires action part based current docs nt look breaking documented guarantee contains wondered comment came know", "d": "10/2014"}, {"body": "comes bad understanding definition documentation documentation stated earlier lacking comes hence made things clearer regarding previous comment reason happened dumbed values aborts timeouts incidental fact actual underlying error thrown situations convenience third argument thus set value second case http errors http status text provided xhr infrastructure parser errors exception thrown converters see documentation lacking regarding latter action required docs real actual problem parameters canonical callback available within global handler need fix since prefilters favored global ajax logic anyway provide much consistent complete interface make sense", "d": "10/2014"}, {"body": "see proposition", "d": "10/2014"}, {"body": "agree totally unnecessary people try use source code reference handy folder offline available jquery team even encouraging use source code", "d": "10/2014"}, {"body": "make available jquerycom download provide duplicate bower installation source keep npm bower valid point using source example needed using jquery dependency bower using dependencies source code files download also get included whatever app site make would really care source would also include md files download page found jquery bower package contains additional files besides default distribution cases ignore files however wish download default release use bower install jquery one urls instead registered package example wish install compressed jquery install file following command would reference version wo nt able include map file uncompressed file either also include separately feel nt really way done goes use bower either use npm source provide whatever feels unnecessary", "d": "10/2014"}, {"body": "yeah good point", "d": "10/2014"}, {"body": "duplicate want files", "d": "10/2014"}, {"body": "bower using source code like said keep jquery source npm exclude bower using bower anything else frontend development misusing", "d": "10/2014"}, {"body": "amd modules frontend consumed eg requirejs anything makes less sense include directory npm bower include npm though people would like use npm package way distribute separate files", "d": "10/2014"}, {"body": "basically using jquery requirejs separate branch included concatenated version still feel separated never use files folder would still suggest supply whatever bower", "d": "10/2014"}, {"body": "sth want said drawback files necessary tree kb though nt cause major issues hand maintaining separate packages would quite effort especially integrating release scripts etc would also need mirror npm already plan maintain two packages core would double huge effort little gain see also comment original issue include unminified file needed final app excluding would save space want keep need introduce overhead anyway amd modules separate branch true source code full file built individual ones", "d": "10/2014"}, {"body": "unminified file used debugging often run problem jquery thus need find line breaks nt concern even though duplicates size required jquery amount files main issue using phonegap nodewebkit need compile app file references live without like including readme many pages images alike would also remove nt planning using since maintaining separate package problem already splitting plus jquery packages separate like ui mobile sure current releasescripts setup difference would includingexcluding source folder", "d": "10/2014"}, {"body": "maintain jquery ui amp mobile bower packages afaik right scottgonzalez maintain bower package mainly historical reasons used rely packages internal build system uses npm packages community feels need separate slimmer package fine someone maintaining package feel free create one nt bandwidth need btw need include full packages phonegap bundle rely gruntbowercopy copy files need", "d": "10/2014"}, {"body": "since maintaining separate package problem already splitting keep package moment though plan split anyway maintaining two git branches huge burden gains significant made sense team cases like happen really rarely eg could save space maintaining two sizzle versions felt gains nt big nt result even jquery contains fixes older browsers virtue including sizzle", "d": "10/2014"}, {"body": "since maintaining separate package problem separating code new package programmatically managing repo sake bower already splitting really tags repo managed separate branches model many projects use supporting multiple versions plus jquery packages separate like ui mobile completely separate projects even close situation sure current releasescripts setup difference would includingexcluding source folder nope said releasing source files important option releasing two different packages bower since bower directly tied repositories need duplicate repository bower release without source code mzgol said effort beyond anything else benefit way small", "d": "10/2014"}, {"body": "nt know grunt module thanks might setup fork ignore source files alternative would change distributiontask copy files needed suggested module gruntcopy still feels weird source files bower project bad bower also nt ability use additional parameters situation could say whether would would nt want certain things", "d": "10/2014"}, {"body": "bad bower also nt ability use additional parameters situation could say whether would would nt want certain things seems vaguely related", "d": "10/2014"}, {"body": "given bower npm currently work nothing change repo make everyone happy people want amd modules custom build use requirejs others want built file someone else free create repo contains built file could pull development repo intended use distribution repo create detached heads built files upon releases issue remove bowerjson file since nt support using dev repo way", "d": "10/2014"}, {"body": "quick found solution turns need try catch previous combination jquery jqueryui allowed attaching draggable events rendered dom assuming since everything worked upgrading libraries fixing issue try catch noticed draggable events working flipped code around initializing draggable events elements already rendered dom everything working expected", "d": "10/2014"}, {"body": "fyi version jqueryui using", "d": "10/2014"}, {"body": "please provide test case well precise information browser experience problem without unable help", "d": "10/2014"}, {"body": "examples already provided op like jsfiddle jsfiddle testcase values b values c correct tested firefox ie jquery version", "d": "10/2014"}, {"body": "confirmed simplified related never return resolved value hidden element obvious reasons although nt understand one could find use percentages instead pixels hidden element could use course nt think could remove though since issue longer exist safari oldest android whereas dropping support safari longer support mobile safari", "d": "10/2014"}, {"body": "widthsheights docs already mention results parenthidden elements may accurate nt think swaps show due potential horrific performance past fix would prefer people explicitly make think mess makes wontfix add docs thoughts", "d": "10/2014"}, {"body": "definitely nt jumping hoops get dimensions hidden elements", "d": "10/2014"}, {"body": "actually proposing fix proposing remove old hack already nt need would save us bytes remove unneeded reflow subsequently return expected value case", "d": "10/2014"}, {"body": "meant mention sorry markelog think comment may wrong perhaps mikesherov remembers better nt think fixed year chrome suppose could remove code see fails nt see lot relevant unit tests cssjs moment smilingimp", "d": "10/2014"}, {"body": "nt think fixed year chrome fixed chrome since version nt see lot relevant unit tests cssjs moment tests mikesherov crying loud see related", "d": "10/2014"}, {"body": "already run tests without portion everything fine", "d": "10/2014"}, {"body": "nt know test nt click sounds like safe remove patch", "d": "10/2014"}, {"body": "branch removing quirks browsers dropped try submit pr today", "d": "10/2014"}, {"body": "done see", "d": "10/2014"}, {"body": "intended native dom method essentially performs click click results event dispatched jquery method explicitly event dispatcher side effect native method name called end", "d": "10/2014"}, {"body": "internal function never documented ability trigger events globally nt correspond dom functionality horrible performance implications removed never documented want use jquery events pubsub mechanism trigger events create custom element use trigger", "d": "10/2014"}, {"body": "think would lines jquery fix give try think much harder problem could also look old tickets trac get idea remember newer query methods like nt designed namespaces keep open get chance look search trac might possible refine start", "d": "10/2014"}, {"body": "thanks kind information interested", "d": "10/2014"}, {"body": "provide test case see two issues opened question evidence", "d": "10/2014"}, {"body": "excuse poorly written theme", "d": "10/2014"}, {"body": "correct use method documented valid argument", "d": "10/2014"}, {"body": "send content type body make kind sense blowing thing way proportions nothing content type content earth going", "d": "10/2014"}, {"body": "would mainly empty form post send contenttype", "d": "10/2014"}, {"body": "prefilter beforesend reports incorrect contenttype browser implementation forms followed sends regardless like looks like regression save us bytes blowing thing way proportions nothing provide fix would something drastic", "d": "10/2014"}, {"body": "lots confusion regarding contenttype prefilter contenttype set yet options related data nt dealt yet prefilter want changeaddremove data beforesend data empty course contenttype set case form encoding always ajax requests wrongly use modify data would actually serialized need set contenttype manually anyway bug fix backendproxy would see contenttype attempt parse content fail miserably content empty ajax clientside argument provide fix would something drastic original bug nt contenttype correctly set set modify data beforesend callback empty first place original issue got twisted conversation went lost track fact talking antipattern simple clear solution case nt clear enough use prefilter fact data modified beforesend callback point request lifespan data related information already processed change data prefilter everything works expected set contenttype every requests including ones content open worms serverside reason supporting antipattern clientside classifies blowing thing way proportions", "d": "10/2014"}, {"body": "case form encoding always applicationxwwwformurlencoded ajax requests true pure new method value contenttype header used sometimes always following form logic fully wrongly use beforesend talking talking modifying properties prefilters beforesend method get wrong value even nt touch anything bug fix backendproxy would see contenttype attempt parse content fail miserably content empty neither tickets parser problems post request requests body set contenttype obviously wrong case form contenttype always sent followed logic nt trip serverside scripts case form encoding always applicationxwwwformurlencoded ajax requests nt break server side scripts form requests ajax requests seems unlikely ajax clientside well yeah browserserver communication prefilter contenttype set set request reports set change data prefilter everything works expected nt change anything report wrongly contenttype value ignore argument repeated couple times already", "d": "10/2014"}, {"body": "case form encoding always applicationxwwwformurlencoded ajax requests true pure new method value contenttype header used sometimes always following form logic fully saying good bad find increasingly confusing follow reasonning also sometimes always nt sound like proposing wrongly use beforesend talking talking modifying properties prefilters beforesend method get wrong value even nt touch anything exactly point never talking actual bug bug fix backendproxy would see contenttype attempt parse content fail miserably content empty neither tickets parser problems post request requests body set contenttype obviously wrong know issues empty body contenttype textjson past maybe specific situation happened case form contenttype always sent followed logic nt trip serverside scripts formencoded data empty string acceptable input instance case jsonencoded data case form encoding always applicationxwwwformurlencoded ajax requests nt break server side scripts form requests ajax requests seems unlikely read wrote little thoroughly please ajax clientside well yeah browserserver communication decisions take clientside consequences serverside begin imagine crazy stuff nt happen still prefilter contenttype set set request reports set report set actually report set documentation faith change data prefilter everything works expected nt change anything report wrongly contenttype value ignore argument repeated couple times already repeating fact wo nt make bug earth would want contenttype set particular moment lifespan request poster original bug sure nt inspect value years working never heard single person complain honestly point way could farther removed original bug report started hacking another module altogether keep ignoring fact original bug antipattern consists using rather easily fixed drum rolls using rather", "d": "10/2014"}, {"body": "think jaubourg point nt recurring issue regardless whether people using incorrectly spend time educating users better approaches rather adding even logic actually say instead suggesting use prefilter encourage users type use case create method wraps adds additional piece data necessary reason think approach better works etc", "d": "10/2014"}, {"body": "also sometimes always nt sound like proposing following default behaviour new standart following html forms logic fully fully case jsonencoded data exactly point never talking actual bug trying fix look one previous comment said provide fix bold want understand please patient know issues empty body contenttype textjson past maybe specific situation happened report set actually report set documentation faith repeating fact wo nt make bug course already provided example perhaps missed keep ignoring fact original bug antipattern consists using beforesend rather ajaxprefilter easily fixed drum rolls using ajaxprefilter rather beforesend talking logic please understand also talking original bug report although still nt understand argument ca nt change ca nt get correct values would use otherwise ca nt use document deprecate even remove really transform inflation discussion simple try determine bug", "d": "10/2014"}, {"body": "also sometimes always nt sound like proposing following default behaviour new standart following html forms logic fully fully actually following html forms logic explained several times handle single type content like forms case jsonencoded data ever tried empty expression valid see fiddle send contenttype textjson requests body effectively create faulty requests exactly point never talking actual bug trying fix look one previous comment said provide fix bold want understand please patient always easy get meaning nt feel like patient would nt answered every single question asked p repeating fact wo nt make bug course already provided example perhaps missed mean repeating see show still tell bug confusing settings behaviour reasoning could argue option set yet parameter final url would reply course nt nt request option ignored option ignored requests without body including post requests default behaviour xml consists setting header body yet none provided triggered something funny always found poorly implemented sense called late thankfully prefilters nt suffer limitations keep ignoring fact original bug antipattern consists using beforesend rather ajaxprefilter easily fixed drum rolls using ajaxprefilter rather beforesend talking logic please understand also talking original bug report although still nt understand argument ca nt change ca nt get correct values would use otherwise ca nt use document deprecate even remove gives snapshot options handled prefilters options object used handle options documentation actually quite clear goes suppose though never seen advanced examples callbacks seem always contain basic custom headers setting preemptive aborts important thing settings object contain options never use current request like related ones instance nt mean wrong really transform inflation discussion simple try determine bug already told several times bug keep demanding convinced level detail quite cumbersome timeconsuming us p", "d": "10/2014"}, {"body": "also realize definitely nt clear enough previous comments regarding dichotomy settings behaviour sorry", "d": "10/2014"}, {"body": "jaubourg nt think tried blow anything proportion since one editors xhr spec going information head goal get info head understand reasoning well much discussion obfuscated topic let see summarize least number words possible decide whether anything currently nt set contenttype post request body empty contrast html form post example always sets contenttype however basic nt set contenttype either perhaps nt need body edge case since encoding empty body probably nt affect processing servers fine either way compelling reason change might well leave asis avoid regressions case someone depends current behavior", "d": "10/2014"}, {"body": "fine either way compelling reason change might well leave asis avoid regressions case someone depends current behavior opinion nutshell", "d": "10/2014"}, {"body": "sounds like stay", "d": "10/2014"}, {"body": "please create working example jsfiddle jsbin test", "d": "10/2014"}, {"body": "inactive closing", "d": "10/2014"}, {"body": "workaround set contenttype beforesend provided", "d": "10/2014"}, {"body": "show incorrect contenttype sends", "d": "10/2014"}, {"body": "use change request data designed last call sending callback really useful abort requests preemptively prefilters called much earlier behave expect", "d": "10/2014"}, {"body": "designed last call sending callback really useful abort requests preemptively really usually used documentation also disagrees prerequest callback function used modify jqxhr jquery xml object sent use set custom headers etc jqxhr settings objects passed arguments", "d": "10/2014"}, {"body": "yeah modify jqxhr object settings object dates one reason prefilters introduced", "d": "10/2014"}, {"body": "hm settings object passed get value error set value also error change would cost us anything would make beforesend consistent domain suppose point might moot", "d": "10/2014"}, {"body": "settings object inspection supposed touch guess would locked using thing existed back keep mind really old stuff rewriting lot back forth regarding end needed called stage request order pass unit tests made point keeping lib backward compatible humanly possible anyway point moot making sense far prefilter proper approach one needs change something settings object handled internally callback late", "d": "10/2014"}, {"body": "guessing land end review settings changed time find need reprocessing correctly reflected case prefer add clarification docs saying something like argument considered readonly changes made may reflected request say may suspect might take effect luck", "d": "10/2014"}, {"body": "exactly dmethvin think doc addendum link would work wonders", "d": "10/2014"}, {"body": "dmethvin like far tell option like default value set circumstances different suppose need document js ajaxprefilter function options consolelog optionscontenttype applicationxwwwformurlencoded jqueryajax url method post contenttype header well", "d": "10/2014"}, {"body": "nt reviewed list ajax options see others thinking original goal nt include reprocessing probably nt change", "d": "10/2014"}, {"body": "saying want get bottom additional problem said original report incorrect value even nt change anything ca nt reliable set values object get incorrect values used", "d": "10/2014"}, {"body": "shown getter issue also applicable prefilters", "d": "10/2014"}, {"body": "case post body sure header matters since content sets header content", "d": "10/2014"}, {"body": "used html forms post method using contenttype set regardless request body", "d": "10/2014"}, {"body": "sounds like always set header even empty body looks like mistake separate issue needs fix", "d": "10/2014"}, {"body": "think yes andrewaladev solve issue well thanks", "d": "10/2014"}, {"body": "correct fix use prefilter", "d": "10/2014"}, {"body": "need nt common easy implement want benefit single method check build plugin", "d": "10/2014"}, {"body": "comment author dmethvin either document fix currentlydocumented case jsonp", "d": "10/2014"}, {"body": "jaubourg read docs replacing jsonp case reason cases", "d": "10/2014"}, {"body": "due fact able perform requests since version btw argument trigger behaviour consequence ajax infrastructure control presence callback placeholder url case request order promote request fix would test presence placeholder set accordingly would break fact promote request providing url placeholder proper think would used much scenario", "d": "10/2014"}, {"body": "information version android simple test case also proposed workaround basically would solve problem since ticket migrated unlikely get response op close", "d": "10/2014"}, {"body": "clarify test case attaching new progress handler promise resolves later progress handlers called result last looks wrong clearer test case", "d": "10/2014"}, {"body": "actually design note notify anymore deferred progress state kept invariant deferred progressed point say upload instance still progressed point deferred resolved rejected nt make sense fire progress handlers", "d": "10/2014"}, {"body": "documentation says copy structure wrapped around elements set matched elements attaching events original elements outside document copies used wrap", "d": "10/2014"}, {"body": "comment author flexphperia direct link jsfiddle click run testing memory leaks chrome chances fix bugi next release quite important", "d": "10/2014"}, {"body": "comment author fixed upstream next jquery release", "d": "10/2014"}, {"body": "comment author mgol also remove current tag year two going banned npm servers well perhaps nt really need tag since works fine semver range", "d": "10/2014"}, {"body": "comment author dmethvin reversion two packages wo nt issue possible unpublishremove tag nt know", "d": "10/2014"}, {"body": "comment author mgol dmethvin seems possible soon see", "d": "10/2014"}, {"body": "cc", "d": "10/2014"}, {"body": "sure enough see npmnpm amp npmnpm mediumterm roadmap may get done end year definitely feature want npm soonish use", "d": "10/2014"}, {"body": "comment author brianpow assume focus text field mouse click tab key", "d": "10/2014"}, {"body": "nt see consistent results chrome either selection done outside event handler use", "d": "10/2014"}, {"body": "comment author thedistantsea also made pr github", "d": "10/2014"}, {"body": "comment author dmethvin since regression like fix however nt unit test support jasminenode chance need help propose fix pull request", "d": "10/2014"}, {"body": "comment author mgol end attaching data directly nodes problem may mostly go away mostly since still may leftover data special events etc", "d": "10/2014"}, {"body": "comment author mgol let see data approach fares", "d": "10/2014"}, {"body": "comment author timmywil mgol go ahead mark tickets open skip triage", "d": "10/2014"}, {"body": "comment author mgol oops", "d": "10/2014"}, {"body": "also present jquery main issue internal contains function used offset places ishidden uses either element function contains failing element function comparedocumentposition see whether element question underneath elementownerdocument elements underneath shadow root always false unfortunately builtin function accessor give shadow root given element means traversal currently guaranteed way retrieving host shadow root putting internal contains function would doubt increase running time function massively however think would acceptable limited knowledge use guardian function offset ishidden etc works principle browser shadow dom support amp amp element matches css selector host traverse find shadow host use contains would hopefully add much overhead thoughts", "d": "10/2014"}, {"body": "issue contains affects multitude jquery methods method chains end using seems fundamental issue would benefit adding tests shadow roots across board", "d": "10/2014"}, {"body": "well okay elaborate actually makes difference two arguments passed one shadow root nt example elem shadow root agree would affect lot different methods especially anything using contains check whether element currently within dom however proper fix would hopefully able something better node traversal find roothost full traversal every time contains called arguments would probably bit speed impact", "d": "10/2014"}, {"body": "seems like needs solved via changes additions dom methods ca nt imagine design shadow root would effectively destroy use dom always require climbing tree either intent indeed hide containment case seems wrong us rereveal least method", "d": "10/2014"}, {"body": "teasealancs could limit performance degradation cases shadow roots need found however dmethvin brings good point sometimes need get browsers fix problem", "d": "10/2014"}, {"body": "bit funny thing think one hand elements shadow root interpreted portion dom separate main body elem shadow root return false also note spec details element shadow root property set shadow host value shadow host element hosting shadow root sure hand though currently nt method function specified part spec acts like takes shadow roots consideration thing found thus far tell us definitively whether element shadow root host term represent shadow host nt necessarily think intention conceal containment given shadow host element easily retrieve shadow root using property however think intention separate dom area hidden main dom get feeling lacking part specification moment yes perhaps launching browser inquiry would good idea", "d": "10/2014"}, {"body": "going pull mikesherov opinion also see could recommend good place raise issue", "d": "10/2014"}, {"body": "comment author arkadykarev another words jquery completely compatible latest version gwt one popular java frameworks web apps probably another libs", "d": "10/2014"}, {"body": "comment author dmethvin populate eventcurrenttarget also seems like regression gwt worked previously gwt nt fix regression end wo nt possible use anything recent version jquery gwt", "d": "10/2014"}, {"body": "comment author cbroome actually thinking something like arraybuffer blob indexof xhrresponsetype lt amp amp xhrresponsetext string would safer existing functionality", "d": "10/2014"}, {"body": "right jsonp method requires script transport first example could use json strip padding returned data example actually prefer change rare case good caller see username password exposed right url passing via options nt make clear", "d": "10/2014"}, {"body": "encountered", "d": "10/2014"}, {"body": "jquery nt meant run use strict effect see comment top unminified file reason look information gaining anything attempting force jquery strict mode prevents interoperability thirdparty libraries usestrict compatible", "d": "10/2014"}, {"body": "thanks explanation guess close issue wontfix", "d": "10/2014"}, {"body": "also related", "d": "10/2014"}, {"body": "testing wp os version get tapping test tapping elsewhere full ua yeah ua strings pointless", "d": "10/2014"}, {"body": "ua info meaningful p pm aaron powell notifications githubcom wrote testing wp os version get popup tapping click test overlay tapping elsewhere full ua mobile windows phone android arm touch nokia lumia like iphone os mac os x khtml like gecko mobile yeah ua strings pointless reply email directly view github", "d": "10/2014"}, {"body": "comment author timmywil support support everywhere words tests everywhere think already places point let add tests animate", "d": "10/2014"}, {"body": "comment author animate method allows us create animation effects numeric css property required parameter plain object css properties object similar one sent css method except range properties restrictive explicitly supporting animate plainobject properties documentation actually bug underlying jqueryanimation unit tests issue appears problematic interaction jquerycssnumber unit conversion default tweener inclination ignore units unless tweenelemnodetype nt think much case intentionally understate already dusty corner api animating nonnumeric properties plain objects thoughts", "d": "10/2014"}, {"body": "comment author timmywil since unit tests area already mark regression fixed", "d": "10/2014"}, {"body": "comment author dmethvin agreed thanks analysis", "d": "10/2014"}, {"body": "comment author dmethvin looks like around aborting happens synchronously cleans request avoid memory bloat gets back ajaxsend actually tries send request xhr object blown aborting request nt make lot sense point see xhr spec pretty much noop called send seems appropriate ajaxsend indicate nt want request proceed way concern making change would compat least know aborting nt currently work mark open discussion", "d": "10/2014"}, {"body": "comment author azriel opened pr suggested solution", "d": "10/2014"}, {"body": "hey relatively new open sourcegithub would like start contributing projects soon curiosity desire learn make effective contributions future want ask pr nt merged yet", "d": "10/2014"}, {"body": "hey jabelman took look earlier think fine jaubourg others comments quite often batch things nt get serious landing prs start push new version already signed cla good shape land soon thanks contributing", "d": "10/2014"}, {"body": "comment author dmethvin entirely much magic", "d": "10/2014"}, {"body": "comment author dmethvin low near zero byte cost could possible add someone would need implementation see cost number people using callbacks directly seems low would probably benefit many people", "d": "10/2014"}, {"body": "since nobody stepped nt needed internally closing ticket", "d": "10/2014"}, {"body": "comment author solgar realised neglected add chrome version version nt tried versions chrome looks issue suspect versions support chrome appschrome packaged apps affected", "d": "10/2014"}, {"body": "beforeunload also gives error chrome packaged apps", "d": "10/2014"}, {"body": "comment author dmethvin docs say properties object constructed via new mycustomobject args builtin javascript types date regexp reconstructed appear plain objects resulting object array expecting anything maintain constructedness deepextend good assumption however event object seem pass isplainobject test seems wrong", "d": "10/2014"}, {"body": "comment author dmethvin running commentary", "d": "10/2014"}, {"body": "comment author dmethvin yeah infinite loop seems like bad outcome suppose ignore trailing dot namespaces", "d": "10/2014"}, {"body": "comment author hamishdickson completeness created quick jsfiddle christian right problem firefox chrome safari handle nt loop forever look see", "d": "10/2014"}, {"body": "comment author hamishdickson digging actually looks issue remove rather could cause problems elsewhere go idea ignore trailing dot namespaces case stripping trailing dots types gets loop remove trailing dots types typesreplace replace typenamespace types type may omitted types types match rnotwhite typeslength tmp rtypenamespaceexec types run unit tests nt get errors also ca nt think reason would valid trailing dot proper test tomorrow submit pull request unless anyone comments style logic", "d": "10/2014"}, {"body": "comment author hamishdickson pull request created fix", "d": "10/2014"}, {"body": "comment author corbacho ignore jsfiddle link correct bug fixed one removing line", "d": "10/2014"}, {"body": "comment author corbacho reduced bug command building empty jquery grunt build contains lines define define jquery function", "d": "10/2014"}, {"body": "comment author dmethvin thanks reducing mark open patches testing welcome", "d": "10/2014"}, {"body": "comment author corbacho pull request fix one issues define working fixing define nt related", "d": "10/2014"}, {"body": "comment author cleanup possible current api better worse show works elements suppressed stylesheet rules may issue best solved plugin seem like taken wrong path also affected us defaultdisplay leave consideration", "d": "10/2014"}, {"body": "comment author dmethvin let address via docs nt think way read possible intents show hide general like deprecate encourage people use classes instead may code changes also made simplifications would hope leave ticket open", "d": "10/2014"}, {"body": "comment author noted meeting today ignoring stylesheets looking inline styles would resolve host showhidetoggle bugs probably eliminate defaultdisplay boot course way know bugs would filed different behavior worth looking consequences breaking change", "d": "10/2014"}, {"body": "comment author scottgonzalez uniqueness check nt run children assume elements already order getting children always result ordered set shown scenario assumption incorrect set containing descendant another element set", "d": "10/2014"}, {"body": "comment author scottgonzalez uniqueness check removed due", "d": "10/2014"}, {"body": "comment author dmethvin still avoid uniqueness overhead singleelement sets currently seems like whole optimization added multielement sets may backed way recognize case", "d": "10/2014"}, {"body": "comment author dmethvin test case shows little clearly console", "d": "10/2014"}, {"body": "comment author reavowed bit look problem potential solutions figured share thoughts case useful anyone problem identified children contents preserve uniqueness necessarily preserve ordering sequence sequence contains nested elements checking sequence contains nested elements probably costly especially run unique children anyway however assumption source sequence ordered much efficient way checking resorting uses fact lt b descendant b lt b lt c b descendant c descendant either following algorithm calculate children sequence elements keeping results ordered single pass iteration take first element source sequence call calculate children get elements source sequence long descendants descendants found push children result sequence one descendants found push children array children run unique array push result sequence repeat next element sequence run unique sets child elements ca nt reasonably confirm kept order requiring additional contains calls particularly complicated algorithm either though nt know enough jquery nfrs say whether worth adding special case rather simpler solution applying unique naively would however definitely recommend renaming guaranteedunique something specific like preservesuniquenessandorder shame jqueryunique nt named bit sensibly well sizzle least calls function uniquesort", "d": "10/2014"}, {"body": "comment author dmethvin help us linking spec would current behavior correct older browsers nt implement newer spec", "d": "10/2014"}, {"body": "comment author jlukic css transforms establish new containing block absolute positions calculated based containing block modern browsers support transforms would believe legacy browsers support transforms calculate closest position relative support dropped jquery correct", "d": "10/2014"}, {"body": "comment author dmethvin support dropped jquery correct moment jquery supports browsers old android neither understand transforms android older currently percent android", "d": "10/2014"}, {"body": "comment author dmethvin nt bother much browsers nt support transforms long offsetparent nt blow developer set transform element older browser nt support transforms transform property ignored wo nt factor calculations still seems like additional code could tricky need look nonnone transform webkittransform property method climb tree probably special cases anticipated jlukic code currently using workaround", "d": "10/2014"}, {"body": "comment author jlukic nt written workaround perhaps try nt underestimate importance affects anything needs position based context sticky menus popups", "d": "10/2014"}, {"body": "come problem believe seen code happening menu length size menu changes depending many foldersassetsetc clients position button contains drop menu next folder recently foldersassets get extremely large started disappearing clicking chrome lead rendering bug basically chrome ca nt handle amount content force use transform translatez turn hardware acceleration converts element element code gist works fine element element button way page seems handling conversion properly using offset jquery", "d": "10/2014"}, {"body": "comment author dmethvin add link ie bug reportedfound addressing slipstream patch reason us attempt fix also nt found reliable way correct numbers could nt tell quick read nothing able", "d": "10/2014"}, {"body": "comment author christopher ie bug reported error condition detected case offsetwidthheight lt clientwidthheight never happen correct numbers easily obtainted calling elementgetboundingclientrect multiplying results subtracting right left bottom top", "d": "10/2014"}, {"body": "comment author dmethvin post link screen shot showing problem still exists see ie", "d": "10/2014"}, {"body": "comment author anonymous click click link look values offsetwidthoffsetheight values shown getboundingclientrect post screen shot later today still need one", "d": "10/2014"}, {"body": "comment author dmethvin still puzzled maybe getting", "d": "10/2014"}, {"body": "comment author anonymous possible revision fixed nt access windows machine moment retest get back later today", "d": "10/2014"}, {"body": "comment author christopher confirm still exists ie screenshot judging dialog screen content looks like second screenshot looks like taken chrome ie ie prompt bottom screen shown screenshot", "d": "10/2014"}, {"body": "comment author dmethvin right got confused trying reproduce issue ca nt get anything like described run go page click second click link box goes full screen shows prompt screen totally white try screen recording nt make sense need install software", "d": "10/2014"}, {"body": "comment author christopher seen totally white issue specifically windows surface us window update kb released last tuesday resolved totally white issue left bad measurements unresolved", "d": "10/2014"}, {"body": "comment author dmethvin several updates reboots able finally arrive place reported ie team privately see immediate plans fix slipstream update given previous issue white screen seems instability area", "d": "10/2014"}, {"body": "comment author christopher thanks appreciate taking time look fwiw white screen issue ever windows windows current state number weeks though nt know long microsoft aware", "d": "10/2014"}, {"body": "comment author dmethvin native seems work consistently browser alerts want run jquery handlers case use triggerhandler actually want click event fire disabled element control browser", "d": "10/2014"}, {"body": "comment author anonymous dmethvin wish click event fire disabled checkbox really want enable checkbox check user interface requires moment workaround basically hammer checkbox using settimeout see edits", "d": "10/2014"}, {"body": "comment author anonymous sorry", "d": "10/2014"}, {"body": "comment author anonymous one time", "d": "10/2014"}, {"body": "comment author dmethvin really want enable checkbox check nt want click checkdisable chk prop disabled false checked true need help try forum rather bug tracker", "d": "10/2014"}, {"body": "comment author anonymous replying dmethvin nt want click checkdisable really want enable check call click event handler check revised fiddle chk prop disabled false checked true simulate user checking checkbox changes state without calling click handler need help try forum rather bug tracker please explain think nt bug nt one goals jquery smooth differences browsers reported behavior works differently explorer firefox enough concern also nt dom changes supposed synchronous triggering click ca nt performed immediately enabling checkbox something quite completing time next line code executed appreciate trying help particular case primary goal let know bug receive tech support think bug low priority choose fix fine nt understand writing notabug bug", "d": "10/2014"}, {"body": "comment author dmethvin nt make sense disable check box expect something happen click jquery goal create consistent behavior sequence actions nt make sense", "d": "10/2014"}, {"body": "comment author dmethvin oh get undisable click", "d": "10/2014"}, {"body": "comment author devuxer phew", "d": "10/2014"}, {"body": "comment author dougrchamberlain happy look issue", "d": "10/2014"}, {"body": "comment author dmethvin dougrchamberlain go thanks", "d": "10/2014"}, {"body": "comment author dougrchamberlain okay looked using firefox completely fails mark checkbox versions lt fails intermittently starting version continues fail intermittently edge fails intermittently versions chaining statements seems reduce number failures like jsfiddle nt eliminate chaining valid workaround really surprised since object passed trigger finished returning jquery object since first attempt resolving issue wondering begin looking", "d": "10/2014"}, {"body": "comment author dmethvin seems like firefox bug happens even jquery involved problem goes away dom click method called asynchronously", "d": "10/2014"}, {"body": "comment author dougrchamberlain disregard comment", "d": "10/2014"}, {"body": "comment author grisendo try documentready", "d": "10/2014"}, {"body": "comment author scottgonzalez issue came whatwg mailing list months ago added cssom", "d": "10/2014"}, {"body": "comment author fejesjoco glad worked think would reasonable provide function jquery would call cssescape available use fixed regexp look jquery layer among others hides kinds browser differences also cssescape valid alternative long jquery syntax accordance css jquery actually extend syntax jquery lots lots functions depend selectors believe would real place utility method", "d": "10/2014"}, {"body": "comment author scottgonzalez jquery allows additional selectors additional syntax believe never case proper css escaping method would fail custom jquery selector", "d": "10/2014"}, {"body": "comment author timmywil certainly helpful use cases common case foresee concatenating attribute value attribute selector certain special characters meaning selectors unless escaped impossible predict user intentions time means inevitable nonbug reports well inclined vote feature lack utility externally need internally usually formula great plugin", "d": "10/2014"}, {"body": "comment author dmethvin since addressed standards nt know want get ahead could possibly offer wrapper seems like someone wanted functionality could easily create polyfill big fan either nt know complicates things str could also html script selector sure whether script injection attempt via css fragment could made succeed marking open discussion meeting next month", "d": "10/2014"}, {"body": "comment author fejesjoco str use case thinking use case want add variable string selector without breaking selector example broken parameters like ab function id return id write instead function id return selectorescape id could many vulnerabilities like already example fixed aspnet mvc added escape mechanism metacharacters nt know enough knows people might think escaped makes sense question hey mr interpreter characters escape best answered interpreter good example regex escaping net knows special characters escaped put usersupplied strings regexp without worrying anything", "d": "10/2014"}, {"body": "comment author dmethvin see also parts builtup str may need selectorescaped htmlescaped passed str depending purpose origin", "d": "10/2014"}, {"body": "comment author fejesjoco yes similar problem every time engine supports certain magic characters user may accidentally submit string something else intended also engine way know intentional best solution engine provides proper escaping function engine knows escape user know call string parts special interpretation intended functions way simple put plugins integral parts interpreting engines rules may change time able whatever html htmlescape whatever cssescape whateverid etc", "d": "10/2014"}, {"body": "comment author fejesjoco found similar thing uiautocompleteescaperegex could also added available globally strictly jquery related already jquery ui wrong place usecase since core javascript provides regexp course also provide escaping function nt good example may want find whole words user specifies like new regexp w usersuppliedvalue w user supplied value properly escaped nt contain characters handled specially regexp", "d": "10/2014"}, {"body": "comment author reference", "d": "10/2014"}, {"body": "comment author psquared perhaps better suggestion one made adding something like end dataremove seems help jqueryisemptyobject cache thisdiscard owner", "d": "10/2014"}, {"body": "comment author dmethvin rwaldron could take look", "d": "10/2014"}, {"body": "comment author general support mixing native dom manipulation jquery close el data leaks true parentnoderemovechild el distinct enough may worth looking small fix", "d": "10/2014"}, {"body": "comment author dmethvin agree plenty ways get trouble use native methods remove elements behind jquery back branch remove events data object removes data object preemptively eg", "d": "10/2014"}, {"body": "comment author dmethvin mark valid pending investigation since events often thing data cache would helpful remove events gone", "d": "10/2014"}, {"body": "comment author dmethvin agree right thing perhaps compatible thing let kick road", "d": "10/2014"}, {"body": "comment author anonymous clarify nonnumeric go select element left nonnumeric", "d": "10/2014"}, {"body": "comment author anonymous btw using jquery functionality works expected ie versions functionality break ie", "d": "10/2014"}, {"body": "comment author michael confirmed", "d": "10/2014"}, {"body": "comment author cjqed dug little bit found culprit combination elementblur handler see following jsfiddle similar original commenter fiddle chrome clicking input boxes neither allow enter keys blur focus console reads whenever click inputs expected take blur command type inputs consolelog keyup expected everything works way except blur added like fiddle starts still type input box input box whose event handlers handled bodyon call instead assigning directly jqueryfocus fn another note per original ticket report keyup function get called input keys box", "d": "10/2014"}, {"body": "comment author anonymous thanks looking weird used work fine jquery", "d": "10/2014"}, {"body": "comment author timmywil cjqed mind assign ticket", "d": "10/2014"}, {"body": "comment author cjqed timmywil sure dive weekend", "d": "10/2014"}, {"body": "comment author cjqed timmywil made headway diving deeper like confirmation see following jsfiddle given three options assign event handlers selector focus function dosomething selector focus dosomething parentselector focus dosomething selector three result right third option leave function attached focus event changing type delegate type focusin blur focusout intended behavior third way assigning event handlers", "d": "10/2014"}, {"body": "comment author dmethvin focusin event bubbles according use focusin event using delegation", "d": "10/2014"}, {"body": "comment author dmethvin yes intended behavior focusin must used event delegation", "d": "10/2014"}, {"body": "comment author anonymous marked resolved jsfiddle clearly demonstrates bug b used work fine jquery something broke jquery needs fixed", "d": "10/2014"}, {"body": "comment author dmethvin agreed problem original broken ie working think seem correct", "d": "10/2014"}, {"body": "comment author anonymous well jsfiddle solves problem functionality working changing code nt fix jquery bug ie functionality originally coded jsfiddle breaks jquery works older jquery versions browsers", "d": "10/2014"}, {"body": "comment author dmethvin need confirmation change seem fix things since test case lot moving parts appears consequence us using real dom blur trigger blur fix several problems related event order", "d": "10/2014"}, {"body": "comment author anonymous yes change line theboxblur theboxtriggerhandler blur makes functionality work", "d": "10/2014"}, {"body": "comment author anonymous sorry realized something else still working change line input box allow focus select element numeric", "d": "10/2014"}, {"body": "comment author dmethvin pretty sure problem dom blur essentially async ie versions least think work around leave ticket open", "d": "10/2014"}, {"body": "comment author anonymous ok thanks leaving open functionality used work stopped working nt fixable", "d": "10/2014"}, {"body": "comment author tracobot get many tickets often need return initial reporter information person reply within days ticket automatically closed happened case still interested pursuing issue feel free add comment requested information happy reopen ticket still valid thanks", "d": "10/2014"}, {"body": "comment author anonymous think bug reopened fixed", "d": "10/2014"}, {"body": "comment author dmethvin anonymous comment reason autoclosed reply nt logged person", "d": "10/2014"}, {"body": "comment author anonymous ok anonymous comment actually person filed bug", "d": "10/2014"}, {"body": "comment author dmethvin nb versions ie upward fire event asynchronously calling dom focus blur methods want see console focusing focus focusing see ie focusing focusing focus reason used work faked focus caused larger stack bugs related event order see", "d": "10/2014"}, {"body": "comment author anonymous see going hard handle", "d": "10/2014"}, {"body": "comment author anonymous might sound bit hack adding settimeout ie reorders events correctly jquery focus blur functions could wait returning might fix problem", "d": "10/2014"}, {"body": "comment author dmethvin yes code unit tests jquery internally without pushing problem another location caller could assume elem focus returns element focused whatever event handler supposed faking focus event worked although undesirable effects forced handler run right bottom line focusblur event trusted async ie occasionally unreliable firefox well nt create complicated scenarios break", "d": "10/2014"}, {"body": "comment author anonymous really unfortunate blur focus events used forms forms used important tasks user registration ecommerce processing particular case functionality jsfiddle used enter international phone numbers user nt selected country code select element blurs phone number textbox force user select prefix first changed code make work would really nice find general solution within jquery inevitably problem causing bugs people websites particular built tested released since maintained btw keyupkeydown events subject unexpected behavior", "d": "10/2014"}, {"body": "comment author dmethvin affected switch script tags contemplated", "d": "10/2014"}, {"body": "comment author dmethvin sympathetic google search usually helps sure additional words add much attempt add sizzle jquery would lead people bug tracker rather place like stackoverflow go messed selector", "d": "10/2014"}, {"body": "comment author waldechristian google search usually helps usability similar numerical error code google unless one seen message know means one little chance figure talking css selector excellent error message inform user exactly wrong current one merely informs user something wrong sure additional words add much attempt add sizzle jquery look ticket never asked terms added simply term css selector specifically error message optimal world error would also come stack tract point code came selector parser would case parsefail reparse order able provide explanation expected see aware nontrivial efforts however making error least clear enough easily seen trivial", "d": "10/2014"}, {"body": "comment author timmywil could change expression selector seems pretty clear selector included error message", "d": "10/2014"}, {"body": "comment author waldechristian seems pretty clear selector included error message please take look original description error triggered thirdparty software including selector little enlighten developer type developer might even aware classes ids used said thirdparty software", "d": "10/2014"}, {"body": "comment author timmywil something concise like error selector syntax flag", "d": "10/2014"}, {"body": "comment author waldechristian fine shortening maximum benevolence towards future users like see explicit mention css remain message", "d": "10/2014"}, {"body": "comment author timmywil thought remembered still users use xpath converters case selector originally css think clear enough without though", "d": "10/2014"}, {"body": "comment author dmethvin okay suggestion comment minor formatting changes error selector syntax flag need announce prominently people use google search find know means", "d": "10/2014"}, {"body": "comment author waldechristian merely observation concerned people understand error message means need google chance good error message rather high excellent error messages explain went wrong offer resolution suggestions", "d": "10/2014"}, {"body": "comment author timmywil waldechristian firstly developers google error messages matter clear secondly resolution suggestions would require certain psychic ability way know user trying select helpful message simply points selector invalid needs changed something wo nt throw error succinct manner dmethvin error part message automatically inserted browser", "d": "10/2014"}, {"body": "comment author waldechristian timmywil respectfully disagree points general case due experience many developers many experience levels due experience writing parsers however see scope constraint experiences jquery would make hold positions nt think arguing points necessary main point ticket said reread thought would like say see shortened proposal better original helpfulness could reasonably given context project average user helped seeing error message golfed maximal brevity mention xpath converters unfamilar assume piece code takes xpath entered user converts css selector used internally case xpath converter oncesanctioned part jquery recommend explicitly acknowledging possibly way error invalid selector syntax check original cssxpath expression flag", "d": "10/2014"}, {"body": "comment author dmethvin mark ship title ticket change something useful changelog googleability", "d": "10/2014"}, {"body": "leave note still stand last comment", "d": "10/2014"}, {"body": "comment author instructions also mention mongoose alternative amp works fine without changing repository use reasons mentioned already lightweight vagrant", "d": "10/2014"}, {"body": "comment author gnarf actually like idea vagrantfile available spawn nginx runs config buildsjenkinsjquerycom couple suggestions could setup dns entry something like vagrantjquerycom rather needing anyone ever edit hosts file also posted exact ways build server jenkins sets virtualhost support post static files jquery core unit tests errorpage location proxymethod get proxypass proxysetheader host buildsjenkinsjquerycom support funky url jsonpphp jquery core unit tests rewrite datajsonpphp", "d": "10/2014"}, {"body": "comment author eric replying gnarf could setup dns entry something like vagrantjquerycom rather needing anyone ever edit hosts file would optimal much better solution ever asking anyone edit hosts file also considering packaging vagrant box phpnginx already installed configured would allow bundled configuration ship nothing vagrantfile much cleaner repository developers could continue use either amp install mongoose instead vagrant without much trouble", "d": "10/2014"}, {"body": "comment author replying gnarf actually like idea vagrantfile available spawn nginx runs config buildsjenkinsjquerycom could setup dns entry something like vagrantjquerycom rather needing anyone ever edit hosts file replying eric also considering packaging vagrant box phpnginx already installed configured would allow bundled configuration ship nothing vagrantfile much cleaner repository developers could continue use either amp install mongoose instead vagrant without much trouble okay sounds really nice sold", "d": "10/2014"}, {"body": "comment author gnarf yeah get box setup nginxetc without download post spinup saves big portion problem host source box infra dropbox also keep day", "d": "10/2014"}, {"body": "comment author dmethvin wo nt work oldie least length property squirrely jeresig tried around timeframe bailed rwaldron nt something still refined", "d": "10/2014"}, {"body": "comment author rwaldron replying dmethvin wo nt work oldie least length property squirrely jeresig tried around timeframe bailed rwaldron nt something still refined simple class jquery extends array constructor selector context document super legit subclass array implement jquery prototype methods issue course new subclass semantics ca nt polyfilled ported traditional function declarationexpression syntax super ca nt reserved function body jquery actually quite vocal design specification mechanism understanding jquerythecode would nt benefit real subclassing builtins time far hackish cases like zepto proto never going officially standardized sent die annex instead objectsetprototypeof compliment objectgetprototypeof", "d": "10/2014"}, {"body": "comment author petty sure already solved oldie length issues jsperf accepting immutability existing instances nt change current api promises look later mostly focal point link aggregation unless gets actual pull request", "d": "10/2014"}, {"body": "comment author rwaldron replying petty sure already solved oldie length issues jsperf accepting immutability existing instances nt change current api promises look later actually length related issues oldie trailing commas produce hole every standard modern js implementation array subclasses always broken length property compare following programs var new array consolelog alength consolelog consolelog alength alength consolelog consolelog alength vs function list arraycall thispushapply arguments listprototype objectcreate arrayprototype constructor value list var l new list consolelog l llength consolelog l consolelog llength llength consolelog l consolelog llength behaviour broken proto well function list thisproto arrayprototype thispushapply arguments var l new list consolelog l llength consolelog l consolelog llength llength consolelog l consolelog llength course latter version wo nt work browsers nt support proto apis jquery definition nt match builtin jqueryfnfilter arrayprototypefilter predicate functions written use arrayprototypefilter wo nt work jqueryfnfilter jqueryfnmap arrayprototypemap mapping functions written use arrayprototypemap wo nt work jqueryfnmap jqueryfnfind arrayprototypefind filter", "d": "10/2014"}, {"body": "comment author scottgonzalez sure problems relevant already said nt change current api promises nobody var divs div divslength nt matter methods incompatible arrayprototype methods unless incompatibility actually break things", "d": "10/2014"}, {"body": "comment author dmethvin seeing perf benefit strange", "d": "10/2014"}, {"body": "comment author rwaldron replying scottgonzalez sure problems relevant exactly relevant two statements length property squirrely dmethvin already solved oldie length issues jsperf accepting immutability existing instances nobody var divs div divslength agree sure nt say trying thoroughly illustrate length problems nt matter methods incompatible arrayprototype methods unless incompatibility actually break things saying break extant code saying behaviour could create confusion", "d": "10/2014"}, {"body": "comment author clear interested performance improvement size reduction never recommended anyone set length documented effects generally ca nt expose array methods patterns accept selectors place elements pushstack new instances instead mutating context make new promises like objectprototypetostring jquery object array exclusively seeking efficient techniques implementing extant api", "d": "10/2014"}, {"body": "comment author rwaldron replying clear interested performance improvement size reduction never recommended anyone set length documented effects yes thought made clear understood point say jquery subclassed array developers expect things work like arrays generally ca nt expose array methods patterns accept selectors place elements pushstack new instances instead mutating context make new promises like objectprototypetostring jquery object array exposed default developers use unless plan keep blacklist methods delete jquery instance objects become instanceof array well promise trying rain parade real things consider", "d": "10/2014"}, {"body": "comment author replying rwaldron point say jquery subclassed array developers expect things work like arrays exposed default developers use unless plan keep blacklist methods delete jquery instance objects become instanceof array well never crow continue chastising everyone tries take advantage undocumented implementation details like currently jquerysupport jquerydata promise trying rain parade real things consider yep actually changing prototype chain would huge deal might worthwhile", "d": "10/2014"}, {"body": "comment author ameyms seems happening camelize key passing dataattr function dataattr tries reconstruct hyphenated attribute name incorrectly consider following example datafoobar foobar datafoobar correct incorrect", "d": "10/2014"}, {"body": "comment author dmethvin ref seems like nt take hyphen unless following char az however inside jquerycamelcase making change could affect many situations outside data attributes", "d": "10/2014"}, {"body": "comment author rwaldron lead filing", "d": "10/2014"}, {"body": "comment author rwaldron closed duplicate based spec name list hyphenminus character name followed lowercase ascii letter remove hyphenminus character replace character followed character converted ascii uppercase solution would remove hyphens immediately followed numbers would produce key called unfortunately compatibility breaking actually unit tests support", "d": "10/2014"}, {"body": "comment author rwaldron", "d": "10/2014"}, {"body": "comment author gnarf one weird situations cantfix probably reopening discuss ultimate fate one next meeting", "d": "10/2014"}, {"body": "comment author rwaldron fixed chrome", "d": "10/2014"}, {"body": "comment author dmethvin behavior change wo nt go think need deal", "d": "10/2014"}, {"body": "comment author malsup breaking change migrating", "d": "10/2014"}, {"body": "comment author dmethvin malsup two branches seem work op test case test case", "d": "10/2014"}, {"body": "comment author malsup replying dmethvin malsup two branches seem work op test case test case dmethvin see thread", "d": "10/2014"}, {"body": "comment author dmethvin another result triggering native focus event get event order right jquery extensions namespaces data cases see", "d": "10/2014"}, {"body": "comment author third time charm", "d": "10/2014"}, {"body": "comment author mgol pull request", "d": "10/2014"}, {"body": "comment author dmethvin seems like lot risk little benefit two deprecated suspect still quite bit usage pretty hard tell", "d": "10/2014"}, {"body": "comment author mgol jqueryfnsize hard check due common name hand size code much larger andself one considering latter alias another function", "d": "10/2014"}, {"body": "comment author dmethvin api changes next release would rather batch since disruptive discourage upgrading", "d": "10/2014"}, {"body": "comment author mgol well officially public api whole jquerysupport behaves differently eg former properties functions actually thought timeframe changing much switch amd etc maybe right changes internal little effect public api", "d": "10/2014"}, {"body": "comment author timmywil officially nt made changes public api support documented changeable every api change annoying users even makes sense say keep deprecated refer recommendations nt mean removable easily removable custom builds desired take little space anyway", "d": "10/2014"}, {"body": "comment author dmethvin let hold one following major release least", "d": "10/2014"}, {"body": "comment author dmethvin neither seem important first step would get migrate asap", "d": "10/2014"}, {"body": "comment author dmethvin", "d": "10/2014"}, {"body": "comment author mgol want", "d": "10/2014"}, {"body": "comment author mgol actually nt log deprecation errors core well andself alias need wrapper size quite easy", "d": "10/2014"}, {"body": "let", "d": "10/2014"}, {"body": "comment author timmywil take stab whenever get chance", "d": "10/2014"}, {"body": "comment author jan appears dupe comments bug suggest shadow dom nt sufficiently available across different browsers rise level jquery team felt comfortable supporting exact semantics operations nt allowed shadow root nt clearly defined fwiw bug references pull request commentary", "d": "10/2014"}, {"body": "comment author timmywil thank reference actually aware bug decided open separate issue sizzle support", "d": "10/2014"}, {"body": "comment author dmethvin lot us team consider fact allow scripts run injecting bug ca nt remove backcompat reasons sympathetic leave ticket open discussion see way fix", "d": "10/2014"}, {"body": "comment author rwaldron preventing something like beginning iife amd whatever var html jqueryfnhtml var append jqueryfnappend jqueryfnhtml function filtering return htmlcall filteredsafe stuff jqueryfnappend function filtering return appendcall filteredsafe stuff end iife amd whatever", "d": "10/2014"}, {"body": "comment author nicholas nothing preventing however inefficient risky probably many paths inserting html jquery without tracking risk remains essentially right afraid might missed corner case course methods change versions nt want keep updating functionality would much efficient safe one place insert functionality", "d": "10/2014"}, {"body": "comment author nicholas wrote blog post everything secure jquery would love formal html filter capability seems like injection points functionality fairly straightforward see blog post", "d": "10/2014"}, {"body": "comment author mgol agree would nice", "d": "10/2014"}, {"body": "comment author related nt know want add another function input pass could definitely see exposing arguments currentlyexisting replace rxhtmltag properties jquery simple extensions like noinnerhtml contents could still use string replacement complex ones like ticket requesting could get wholesale filtering something like following apologies atrocious names var origprematch jqueryhtmlprematch origprereplace jqueryhtmlprereplace jqueryhtmlprematch ww jqueryhtmlprereplace function html return extraprocess html replace origprematch origprereplace", "d": "10/2014"}, {"body": "comment author mgol replying related nt know want add another function input pass passed escapehtml function saved one additional function invocation manip operation overhead one additional lot feel regex might enough cases really make possible secure manip methods", "d": "10/2014"}, {"body": "comment author replying mgol passed escapehtml function saved one additional function invocation manip operation overhead one additional lot well still guaranteed least two passes input custom escaping fix selfclosing tags someone sets preprocessing even trying fix mangling scripttextarea content attribute values come think brings related question whether preprocessing precede follow replace currentlyexisting replace rxhtmltag feel regex might enough cases really make possible secure manip methods str strreplace ww fn equivalent str fn str stringreturning singleparameter fn therefore guaranteed support use cases purely question api surface area", "d": "10/2014"}, {"body": "comment author dmethvin could certainly believe happens events like mousemove populate normalize xy position event object browsers may defer work something asks position case something jquery sure avoided though want information object adding paulirish insight", "d": "10/2014"}, {"body": "comment author dmethvin blocked open ticket probably better handle others casebycase basis rather metaticket", "d": "10/2014"}, {"body": "comment author jbedard recently ran across issue well lead using getters delay copyingcalculating event properties would option something similar previously discussed forum recently original post author blogged solution", "d": "10/2014"}, {"body": "comment author dmethvin problem getters still slow every browser also bugs quirks even list browsers true never get event properties perhaps get one property one time faster case mousemove event example suspect going extremely common caller event handler want information would forced layout anyway additionally layout forced enter dirty layout dom change caused previous event handler", "d": "10/2014"}, {"body": "comment author jbedard getters definitely slow still trying think might still worth nt think event handlers access event properties yet eventfix loop accesses fix loop often bottleneck without forced layout scenario seen bug occur times toggling class mouse enterleave bug forces layout event listener simply toggles class based eventtype sets dirty flag case extra layout completely unnecessary even eventfix loop copying everything unnecessary problem would getters least ffchrome calling getters times seems worth would interested pull request least see action", "d": "10/2014"}, {"body": "comment author dmethvin think could examined part wanted tackle issues decided potentially could use native event object skip fixing entirely", "d": "10/2014"}, {"body": "comment author jbedard provides new event interface skips eventfix would great especially still provides things event namespaces amp selectors anyone cares look tried turns hooks getters instead filters prop copying think setter actually slower calling getter needs testing avoids forced layout removes eventfix loop make accessing properties expensive due getter cases tried well worth assume change bigrisky stable api", "d": "10/2014"}, {"body": "comment author anonymous fiddle updated line much testing", "d": "10/2014"}, {"body": "comment author dmethvin reference nt support document fragments api inputs seems like would occur internal uses well", "d": "10/2014"}, {"body": "comment author simon always assumed supported closer look api proves wrong seems general ie bug related jquery able reproduce leaking behavior even simpler case var lt var frag documentcreatedocumentfragment var div documentcreateelement div fragappendchild div frag null leak closed explicitly call removenode fragments children iteration c fraglastchild cremovenode false", "d": "10/2014"}, {"body": "comment author timmywil duplicate ticket", "d": "10/2014"}, {"body": "comment author dmethvin fan wrappish methods one reason exactly unwrap blindly unwraps elements common case would want remove specific wrapper seems like decent idea done cheaply thoughts", "d": "10/2014"}, {"body": "comment author dmethvin still interested providing patch widespread onerror support xhr", "d": "10/2014"}, {"body": "comment author rijoel dmethvin yes quite busy moment think scriptonerror together scriptonreadystatechange covers browsers sure opera found already fixed jquery reason works origin requests uses xml internally altough format jsonp", "d": "10/2014"}, {"body": "comment author rijoel pull request", "d": "10/2014"}, {"body": "comment author mgol look", "d": "10/2014"}, {"body": "comment author exactly analogous starting think generalize incorporate solution", "d": "10/2014"}, {"body": "comment author dmethvin way much code though thinking user passed data use standard trigger path rather native events passes data expense nonstandard event behavior think people probably misusing event system time happens", "d": "10/2014"}, {"body": "comment author probably acceptable focus click handlers would see different checked states checkbox radio inputs event provided trigger definite nogo", "d": "10/2014"}, {"body": "comment author dmethvin op using initialize page load could use triggerhandler instead really trying focus element well", "d": "10/2014"}, {"body": "comment author mail trying distinguish clicking tabbing input field b using trigger focus function somewhere else nothing page load", "d": "10/2014"}, {"body": "comment author dmethvin duplicate ticket", "d": "10/2014"}, {"body": "comment author dmethvin duplicate ticket", "d": "10/2014"}, {"body": "comment author anonymous triggerhandler really acceptable workaround since wo nt actually focus blur etc", "d": "10/2014"}, {"body": "comment author dmethvin fine workaround indicated dom action afterwards var x aninput xtriggerhandler focus x focus", "d": "10/2014"}, {"body": "comment author anonymous people core team certainly know already arises focus fire native event possible blurfocus sequence correct trigger function safeactiveelement amp amp thisfocus thisfocus blur trigger function safeactiveelement amp amp thisblur thisblur", "d": "10/2014"}, {"body": "comment author anonymous wo nt trigger handlers twice replying dmethvin var x aninput xtriggerhandler focus x focus", "d": "10/2014"}, {"body": "comment author osmestad also issue still valid latest jsfiddle problem using triggerhandler trying avoid running code focus handler setting focus programatically trigger workarounds think would unbinding triggering focus rebinding reverting others issue browser chrome os os x", "d": "10/2014"}, {"body": "comment author dmethvin duplicate ticket", "d": "10/2014"}, {"body": "comment author dmethvin duplicate ticket", "d": "10/2014"}, {"body": "comment author mikesherov thanks contributing html height give consistent results nt really support html height currently considering browsers nt give us useful info discovered curious", "d": "10/2014"}, {"body": "comment author jon case preferred way retrieve actual content height document height works well content larger window content smaller window document height returns window height html height appears correct firefox ie better solution updated test case show height well outerheight true results console output running test case firefox window height document height html outerheight true html height body outerheight true body height window height document height html outerheight true html height body outerheight true body height", "d": "10/2014"}, {"body": "comment author mikesherov thanks contributing test case missing opening html tag update please considering ca nt edit hosting server instead submitting jsfiddle", "d": "10/2014"}, {"body": "comment author jon dufresne fixed mistake test case results uploaded newest test case location also made identical version using jsfiddle version also demostrates bug see fiddle version", "d": "10/2014"}, {"body": "comment author tracobot get many tickets often need return initial reporter information person reply within days ticket automatically closed happened case still interested pursuing issue feel free add comment requested information happy reopen ticket still valid thanks", "d": "10/2014"}, {"body": "comment author jdufresne information requested provided still reproducible information requested provided", "d": "10/2014"}, {"body": "comment author dmethvin sure autoclosed noticed op", "d": "10/2014"}, {"body": "comment author mgol test updated", "d": "10/2014"}, {"body": "comment author mikesherov test earlier build", "d": "10/2014"}, {"body": "comment author timmywil sure sizzle speed tests best starting point specially manufactured work selector engines testing selector engine iframes need probably something custom manufactured test jquery modules said couple principles think adopt sizzle speed suite tests nt really need backend slickspeed operates php nt think even need node benchmarkjs project submodule sizzle update released versions whenever need nt happen often tests encapsulated appropriately guarantee one test affect loading test iframe probably going overboard core module may right ajax module finally rwaldron seemed excited revamping old resig project speed tests still open", "d": "10/2014"}, {"body": "comment author mikesherov fine either way really want blast away speed dir rick even better", "d": "10/2014"}, {"body": "comment author dmethvin salvatore iovene intel going take shot thoughts post ping siovene jquerydev", "d": "10/2014"}, {"body": "comment author mgol dmethvin info progress", "d": "10/2014"}, {"body": "comment author scottgonzalez avoid adding custom event types jquery using callbacks list would much better fwiw duck punching cleandata really easy jquery ui", "d": "10/2014"}, {"body": "comment author dmethvin able achieve cleanup today special events api event attached element teardown handler handler would called cleandata also nt bubble good imo eventspecialsanitation teardown function alert repressed span sanitation noop div html would trick use case", "d": "10/2014"}, {"body": "comment author tj crowder replying scottgonzalez avoid adding custom event types jquery using callbacks list would much better happy callback rather event provided easy hook gets fired seeing real issue destroy event though provided make sure nt bubble nonbubbling event default action sounds lot like callback fwiw duck punching cleandata really easy jquery ui yes addition overkill want notification intercept every call several api points suboptimal imv modifying library rather using", "d": "10/2014"}, {"body": "comment author scottgonzalez seeing real issue destroy event problem cause problems ever decides add destroy event", "d": "10/2014"}, {"body": "comment author tj crowder replying scottgonzalez problem cause problems ever decides add destroy event destroy example jqdestroy jqclean whatever avoid conflicts similarly ready really get renamed point see also six lines code lean toward event interested equivalent callback mechanism would look like replying dmethvin able achieve cleanup today special events api first way cool eventspecialsanitation teardown function alert repressed would trick use case would plugin create special event one handler unless implement callback list jquery ui create special event tinymce implement special event starts getting messy imv nice thing using event causes nearzero bloat uses familiar easy paradigm inherits namespacing sorts goodness offthecuff functionally complete implementation adds six lines code nt checked yet efficient way trigger event three posted earlier dataeventsdestroy jquery elem trigger destroy initializing jqueryeventspecial special nobubble true trivial implementation virtually overhead paradigm jquery programmer trivially understand", "d": "10/2014"}, {"body": "comment author jock murphy allow say voice support felt need thing wanted automatic way cleanup proposed solution message seems ideal", "d": "10/2014"}, {"body": "comment author tj crowder copy sixline patch saying implementation beall endall fiddle generates elements hook click event something dataevents one hook jqdestroy event call html container element destroy time long takes well watching see get jqdestroy event container nt compare version using unmodified version want look overheads", "d": "10/2014"}, {"body": "comment author dmethvin fwiw duck punching cleandata really easy jquery ui however public interface ca nt imagine could refactor without thought always saddled attrfn jquery elem trigger destroy could use triggerhandler nt bubble nice thing using event causes nearzero bloat uses familiar easy paradigm inherits namespacing sorts goodness nt bloat code pretty large hammer need nonbubbling callback follow codepath see mean much code involved implementing dom semantics agree web developers understand semantics really needed performance cost normal case one hooked event looks trivially small likely already horribly inefficient right one things wanted look possibility eliminating jquerycache attaching data directly property dom element removal subtree nt special event removeteardown handlers could simply throw away without walking feature obligates us walk entire subtree seems like bad idea right itt proven ca nt shortcut really cleandata bad reason domsubtreemodified event bad abandoned favor mutationobserver perhaps would better see third party could build dom cleanup functionality top shim available", "d": "10/2014"}, {"body": "comment author tj crowder replying dmethvin fwiw duck punching cleandata really easy jquery ui however public interface exactly jquery elem trigger destroy could use triggerhandler nt bubble great three lines seriously knew efficient way may even one could go although efficiency firing event less important imv efficiency firing firing unusual case performance cost normal case one hooked event looks trivially small likely already horribly inefficient right perhaps mostly trivial vast majority situations adding overhead sitaution element events hooked adding one property exist check quick one things wanted look possibility eliminating jquerycache attaching data directly property dom element removal subtree nt special event removeteardown handlers could simply throw away without walking well special events behavior nt change anything joins list hooking event rare one special events fine really cleandata bad reason domsubtreemodified event bad abandoned favor mutationobserver perhaps would better see third party could build dom cleanup functionality top shim available quick review indicates jquery form cleandata four half years since cleanup showed remove used called empty starting line prevent memory leaks jquery add function jqueryeventremove jqueryremovedata far aware uproar browsers computers getting faster untilunless actually shows real performance problem worrying removing premature optimization jquery able point away cleandata time worry deprecating functionality nt find convincing argument current reality particularly given people today get functionality", "d": "10/2014"}, {"body": "comment author dmethvin convinced anything mark ticket open", "d": "10/2014"}, {"body": "comment author oskarols using custom event seems like horribly roundabout way needed handle straightforward manner adding single trigger", "d": "10/2014"}, {"body": "comment author jock murphy sorry disagree dmethvin oskar problem code adds event like clean well defined way clean basically require cleanup happen manually onunload get missed tj proposing straightforward elegant solution frankly bit shocked learn jquery nt good solution problem", "d": "10/2014"}, {"body": "comment author dmethvin problem code adds event like clean well defined way clean yes specialevents interface standard cleanup insufficient agree tj crowder potential messiness event needing teardown handler lot custom events depends use case current teardown handler design low overhead event like majority discussion single page applications mvcs spend lot time cleandata already tj crowder timing test showing additional test cheap someone writes code depends expensively triggered destroy event makes popular plugin start getting reports like aspect agree oskar frankly bit shocked sorry shock jock", "d": "10/2014"}, {"body": "comment author dmethvin bulk change enhancement feature", "d": "10/2014"}, {"body": "comment author mikesherov whatever dmethvin thinks", "d": "10/2014"}, {"body": "comment author rwaldron", "d": "10/2014"}, {"body": "comment author anonymous", "d": "10/2014"}, {"body": "comment author gnarf found wanting something like figuring teardown actually accomplish leaning towards meh feature", "d": "10/2014"}, {"body": "comment author tj crowder replying gnarf figuring teardown actually accomplish teardown solution leaves lot desired imv least multiple autonomous handlers convoluted client code hooking event never receive course completely avoidable duplication jquery ui duck punches tinymce monkeypatches stuff adds teardown stuff adds teardown jquery nt going stop needing cleanup time soon makes sense open code using library well esp amazingly trivial cost", "d": "10/2014"}, {"body": "comment author jzaefferer dmethvin would cleandata monkeypunching jquery ui look like using special event teardown see also elaborate mutationobserver relates discussion cleandata hook synchronous triggering destroy event node still dom mutationobserver collect events therefore trigger callback node detached could become problem practice", "d": "10/2014"}, {"body": "comment author dmethvin would cleandata monkeypunching jquery ui look like mean using special events proposed cleandata punch could removed entirely would single special event handler widget factory event like uisanitation jqueryeventspecialuisanitation teardown function dom element get widget ref getwidgetfromelement destroy instead attaching remove event widget create attach empty uisanitation event trigger teardown cleandata code would take care rest thison true thiselement uisanitation jquerynoop mutationobserver collect events therefore trigger callback node detached could become problem practice destroyer expected synchronous behavior remove events generally used part public interface widgets stuff done default handler looks like would safe detached element perhaps even better way since changing attached element might cause reflows", "d": "10/2014"}, {"body": "comment author dmethvin worth thinking leave open", "d": "10/2014"}, {"body": "comment author rwaldron dmethvin nt mind like prototype one", "d": "10/2014"}, {"body": "comment author rwaldron note self click fn support handling delegated events click fn div data object events click fn div dataobject", "d": "10/2014"}, {"body": "comment author dmethvin bulk change enhancement feature", "d": "10/2014"}, {"body": "comment author dmethvin gnarf talked austin would lowlevel public interface ideally current event features would built top essentially replace function nt go current jquery dispatcher instead use callersupplied dispatching object would provide users lowoverhead ways handle highfrequency events like scroll mousemove upcoming pointermove avoiding jqueryeventfix example", "d": "10/2014"}, {"body": "comment author good implementation would make something like significantly lightweight", "d": "10/2014"}, {"body": "comment author dmethvin additional note way capturing understand addeventlistener interface seems like events attached object would capturing", "d": "10/2014"}, {"body": "comment author petkaantonov addeventlistener optional usecapture parameter defines whether capturing use regardless use function object handler default false example events bubbling", "d": "10/2014"}, {"body": "comment author dmethvin rwaldron comment thinking interface low level enough support type enhancement includes special events delegation fixing additional data get things either need use standard interfaces additional data issue probably issue since points object get populate features cost execution time one reasons interface provide clean way get performance nt need things like event normalization across browsers", "d": "10/2014"}, {"body": "comment author rwaldron think worth investigating experimenting going grab work jdalton implementing", "d": "10/2014"}, {"body": "comment author jdalton may need confirm memory leak issue maybe really pre handled though remember correctly dean edwards solution leak ie", "d": "10/2014"}, {"body": "comment author dmethvin exit twogc environment oldie implement however still need recursive crawl least cases call special event teardown hooks probably optimize significantly though example expando flag indicates whether special events use element", "d": "10/2014"}, {"body": "comment author dmethvin rwaldron ticket", "d": "10/2014"}, {"body": "comment author rwaldron fixed data rewrite read read backwards", "d": "10/2014"}, {"body": "comment author jdalton looks like still relying data objects internally leak discarded via explicit call element longer needed using element object holds data object would avoid gist issue", "d": "10/2014"}, {"body": "comment author rwaldron current design designed support smooth transition weakmap soon available least browsers picked number arbitrarily putting data directly element would mean exposing jquery interally used data actually two sets data every object element user privateinteral ca nt long user code dom manipulation via jquery data correctly cleaned removed", "d": "10/2014"}, {"body": "comment author jdalton actually two sets data every object element user privateinteral know gist ticket suggest putting element data internaluser element way would need user manually invoke cleaning method would reduce code needed storing data avoid memory leaks without burdening dev cleanup overlooked easy cause leaks easy track", "d": "10/2014"}, {"body": "comment author rwaldron replying jdalton actually two sets data every object element user privateinteral know gist ticket suggest putting element data internaluser element way would need user manually invoke cleaning method would reduce code needed storing data avoid memory leaks without burdening dev cleanup overlooked easy cause leaks easy track user code get jqueryspecific internal data ca nt make guarantees stability reliability trust wish easy always appreciate input feedback case ca nt expose jqueryspecific internal data owner object related directly sure mean need user manually invoke cleaning method happens automatically jquery dom manip methods appropriate time wo nt happen user code uses dom apis directly scope jquery", "d": "10/2014"}, {"body": "comment author dmethvin jdalton general case still need call jquerycleandata method manipulationjs least situations like special events guarantee teardown hook also consider semantics remove say remove elements document removes events data whereas detach go loop part cleandata code regardless perhaps attaching data element would let us skip steps made significant performance difference interested seeing implementation even exposed data extent perf testing web apps sites uncommon see cleandata high list especially mv frameworks update big dom chunks", "d": "10/2014"}, {"body": "comment author rwaldron could patchwelcome ticket patch would pass existing data tests asis", "d": "10/2014"}, {"body": "comment author jdalton related directly sure mean need user manually invoke cleaning method thinking devs use remove friends instead say simply elinnerhtml correct though diligent used lib api managed user code get jqueryspecific internal data ca nt make guarantees stability reliability exposing data pre jquerycache existed sure fits guarantees stability reliability aside jquery nt big user hasownproperty checks could nt someone manipulate objectprototype populate data values fit stabilityreliability guarantees also wan na dmethvin perf concern", "d": "10/2014"}, {"body": "comment author rwaldron exposing data pre jquerycache existed sure fits guarantees stability reliability jquery jquerycache reason aside jquery nt big user hasownproperty checks could nt someone manipulate objectprototype populate data values fit stabilityreliability guarantees sure falls official wo nt fix", "d": "10/2014"}, {"body": "comment author jdalton sure falls official wo nt fix yap lots things scope makes guarantee lip service substance case think beneficial store data element instead said nt time investigate moment resources limited issue noted future reference", "d": "10/2014"}, {"body": "comment author jzaefferer discussed amsterdam jquery ui currently depends cleandata hook widget removal whenever element removed widget calls destroy method widget example unbind event handlers document whatever solution looks like needs provide alternative hook jquery ui see also", "d": "10/2014"}, {"body": "comment author mgol read comments seems still issue teardown hooks invoked element removed via raw dom methods overcome difficulty safety guarantees mostly agree jdalton unable provide complete protection anyway possible jquerycreated amp handled elements cooperate native dom methods one", "d": "10/2014"}, {"body": "comment author dmethvin worried complete protection mainly trying avoid walking elements tree nt someone mingles jquery raw dom methods manipulate document need understand consequences", "d": "10/2014"}, {"body": "comment author dmethvin worth investigating", "d": "10/2014"}, {"body": "comment author jaubourg look", "d": "10/2014"}, {"body": "comment author dmethvin bulk change enhancement feature", "d": "10/2014"}, {"body": "comment author dmethvin ref", "d": "10/2014"}, {"body": "comment author dmethvin note quick look pull request possible might open security holes adding careful sourceurl string newline also need alert ie conditional javascript bug see", "d": "10/2014"}, {"body": "comment author mgol ie conditional compilation bug fortunately behind us recent sourcemap specification changes also changed sourceurl sourceurl", "d": "10/2014"}, {"body": "comment author dmethvin switch always using tags running code get free nt think remaining use cases warrant change globaleval see tradeoffs", "d": "10/2014"}, {"body": "comment author paulirish one came believe wither globaleval script tag script real name debuggable browser devtools sourceurl strong xbrowser support would allow inject filename injected scripts would allow participate like real files", "d": "10/2014"}, {"body": "comment author dmethvin see since feature leave open separately nt think retain globaleval method could inject sourceurl comment user added one script tag method use", "d": "10/2014"}, {"body": "comment author pferreir forgot add first case element seems added dom immediately removed", "d": "10/2014"}, {"body": "comment author dmethvin use getscript provide complete test case jsfiddlenet would help us evaluate problem", "d": "10/2014"}, {"body": "comment author pferreir hello small example uncommented code work show like button commented fail tried getscript success", "d": "10/2014"}, {"body": "comment author timmywil filter scripts manipulation getscript used remove hashes url sure", "d": "10/2014"}, {"body": "comment author dmethvin seems valid enough keep open figure removing hash", "d": "10/2014"}, {"body": "comment author dmethvin okay gives error facebook xxx id gives error nt hash timmywil said since script nt yet executed insertbefore making ajax request request script since hash stripped never going see correct id jaubourg know stripping hash specific reason omission", "d": "10/2014"}, {"body": "comment author trip wayback machine reveals stripping hashes since fix favor preserving kills oldie thus may unable maintaining api symmetry", "d": "10/2014"}, {"body": "comment author dmethvin still searching good solution nt blocker", "d": "10/2014"}, {"body": "comment author dmethvin ref", "d": "10/2014"}, {"body": "comment author tomgrohl case copying tests changing doctype xhtml limited certain test might able help one", "d": "10/2014"}, {"body": "comment author dmethvin part investigation done example support firefox serve xhtml right docttype http contenttype ensure interpreted xhtml spits console warnings get wrong according automated tests would nt catch type problem hand seems firefox xul application demands correct xhtml run nt xul automated tests formal support able keep running except break xhtml accident done couple times similar reports related chrome plugins perhaps provide sort xul test testswarm since seems sensitive environment", "d": "10/2014"}, {"body": "comment author tomgrohl thanks info look see else find", "d": "10/2014"}, {"body": "comment author tomgrohl dmethvin starting point wrote code check content type doctype detects closing tags quoted attributes required based following content type applicationxhtmlxml content type texthtml doctype xhtml document xul needs testing though generally doctype andor content type omitted detaults texthtml logic good use probably fix well work creating tests xhtml based existing ones see get", "d": "10/2014"}, {"body": "comment author dmethvin bulk change enhancement feature", "d": "10/2014"}, {"body": "comment author dmethvin add list browsers generate console warnings doctyperelated errors happen early shim consolewarn see", "d": "10/2014"}, {"body": "comment author dmethvin although wonder whether shim would see delayloaded iframe anway", "d": "10/2014"}, {"body": "comment author firstly note majority regressions xhtml compatibility past years feature bug detection code included jquery two approaches take solving problem neither particularly ideal run entire test suite xhtml mode pros duplicate tests required test suite code paths properly tested cons looking qunit code history extremely regression prone xhtml compatibility could expect regular breakage updating qunit unless similarly encouraged test xhtml support test running interface uses documentwrite would need reimplemented better way unit tests may possible xhtml mode would require form indicator run xhtml mode result previous tests may marked incompatible xhtml could work fine developer laziness misunderstanding increases testrunning time requiring entire suite run mulitple times iframes tests immune xhtml mode setup way since iframe context would result tests passing fail alternatively duplicate specific tests run xhtml iframes none cons code coverage poor tests duplicated html counterparts maintaining list duplicated maintenance burden jquery", "d": "10/2014"}, {"body": "comment author dmethvin anthonyryan thanks taking another look agree none solutions ideal get harder feature detects asneeded basis thinking may still want sort basicfunctionality test xhtml least would give us hope avoiding kind recurring regressions", "d": "10/2014"}, {"body": "comment author true loading jquery iframe invoking parent callback successful load would go long way permodule tests come later need much complicated either", "d": "10/2014"}, {"body": "comment author mgol replying dmethvin anthonyryan thanks taking another look agree none solutions ideal get harder feature detects asneeded basis testsupportjs forcecompute support tests check match expected matrix problem", "d": "10/2014"}, {"body": "comment author timmywil marking valid", "d": "10/2014"}, {"body": "comment author malsup really fairly significant omission stated impossible track formdata file upload progress without property exposed jqxhr object documented superset browser native xml object upload property one example simply true respect xml level either properties exposed must way access native xhr", "d": "10/2014"}, {"body": "comment author jaubourg ways access native xhr overriding optionsxhr prefilter want upload jquery better implement upload method rather try ajax even bloated", "d": "10/2014"}, {"body": "comment author jzaefferer overriding optionsxhr prefilter good enough least document access nonexposed properties sane way part existing docs see also mike comment", "d": "10/2014"}, {"body": "comment author dmethvin like bettersimpler way well", "d": "10/2014"}, {"body": "comment author mikesherov", "d": "10/2014"}, {"body": "comment author timmywil", "d": "10/2014"}, {"body": "comment author rwaldron ajax extendable", "d": "10/2014"}, {"body": "comment author dmethvin bulk change enhancement feature", "d": "10/2014"}, {"body": "comment author mikesherov f timmy", "d": "10/2014"}, {"body": "comment author meleyal seems access xhr object ajaxsettingsxhr", "d": "10/2014"}, {"body": "comment author dmethvin switching far ajax concerned since addition make would crossbrowser either branch prefer deal xhr", "d": "10/2014"}, {"body": "agree seems like confusion pile top let handle via different interface", "d": "10/2014"}, {"body": "comment author antti applies earlier versions jquery well reported latest stable", "d": "10/2014"}, {"body": "comment author dmethvin concerned changing considering compatibility implications way forever window width return documentdocumentelementclientwidth include scrollbars observed say width viewport opinions people expect exclude scrollbars would break lot code changing", "d": "10/2014"}, {"body": "comment author anonymous sure articulated clearly actually meant jquery width fact excludes scroll bar width css media queries count part viewport image might emphasize point see also css defines breakpoint say width viewport nt consistent browser considers viewport width understand would might things bothers match width css media queries using ie width viewport fact none test changing jsfiddle window width window innerwidth window outerwidth possibility get even one working consistently browser viewport width", "d": "10/2014"}, {"body": "comment author dmethvin yes made clear point far tell way long time change good chance break someone code expects width include client area still looking feedback others", "d": "10/2014"}, {"body": "comment author scottgonzalez please nt change honestly strange media queries include scrollbars since developers obviously using things like maxwidth based actual usable space excludes scrollbars expect tons broken sites jquery changed almost broken sites media queries changed thought", "d": "10/2014"}, {"body": "comment author antti understand changing window width would break things nt think changing window outerwidth would break anything", "d": "10/2014"}, {"body": "comment author antti could someone also post example code would break behave strangely changed quite sure currently even see risk high guys", "d": "10/2014"}, {"body": "comment author antti adding looking closer api documentation width states following returns width browser viewport window width returns width html document document width window width currently returns documentdocumentelementclientwidth nt wrong regarding api documentation", "d": "10/2014"}, {"body": "comment author scottgonzalez could someone also post example code would break behave strangely changed anything positions elements relative window eg notifications positioning top right corner would overflow cause horizontal scrollbar anything sizes elements relative window eg overlays overlay would large would cause horizontal scrollbar anything bounds testing window eg draggable elements contained window bounds would slightly wide would cause horizontal scrollbar right edge increasing size document bounds likely several scenarios well generic cases popped head right away", "d": "10/2014"}, {"body": "comment author antti sound something would jquery think cases handled css occasions bounds part correct one yeah might break things looking actual references existing code could test eg links github projects", "d": "10/2014"}, {"body": "comment author dmethvin seems highly unlikely anyone would using window outerwidth today mark open potential change", "d": "10/2014"}, {"body": "comment author scottgonzalez replying dmethvin seems highly unlikely anyone would using window outerwidth today mark open potential change", "d": "10/2014"}, {"body": "comment author dmethvin return value wondering use case spawned", "d": "10/2014"}, {"body": "comment author scottgonzalez use case generic plugins operate elements documents windows example plugin centers x inside would something like xcss left youterwidth xouterwidth correct behavior would achieved today even window however scrollbar width included x would offcenter half size scrollbar compensate would need check windows var ywidth iswindow ywidth youterwidth xcss left ywidth xouterwidth note extended logic already required want support jquery lt since nt support outerwidth windows", "d": "10/2014"}, {"body": "comment author scottgonzalez irc discussion three years ago", "d": "10/2014"}, {"body": "comment author emartel hi sorry nt strong web development background interested topic thought one best way learn collaborate existing projects given thoughts problem wondering would nt simple solution sure elegant solution might start handle legacy code new code wants outerwidth takes scrollbars account would option add state window jquery object default state legacy noscrollbar decent name explains behavior calls made object using function call window sizeexcludesscrollbars truefalse state altered state persisted making subsequent calls width height take scollbars account believe change would give antti wants leaving existing code described scott functional guys think", "d": "10/2014"}, {"body": "comment author rwaldron internal design jquerydata jqueryfndata changing forth coming release", "d": "10/2014"}, {"body": "comment author dmethvin see also", "d": "10/2014"}, {"body": "comment author dmethvin duplicate ticket", "d": "10/2014"}, {"body": "comment author jbedard sorry dupe internal design change solution proposed plans pull request still using objectdefineproperties assume data creation still slow", "d": "10/2014"}, {"body": "comment author dmethvin yes pr mainly proof concept see could attach data directly dom elements avoid cleanup reduce chances leaks suspect need abandon nice encapsulation get speed back", "d": "10/2014"}, {"body": "comment author rwaldron like see benchmarks patterns reflect real pathological use jquery data divs nt realistic using objectdefineproperty means expando property visible objects data elements nt really big deal extant code wants use var data means writable configurable enumerable property user data jquery internal data data properties appearing forin array returned objectkeys jqueryeach iterations data properties appearing json fixed falling back old tojson hack many properties every object fails tests course patched object exists value expando wo nt match returned data", "d": "10/2014"}, {"body": "comment author rwaldron data properties appearing json fixed falling back old tojson hack also means breaking jqueryhasdata agrees data exists even empty data obj exists data returns entire data object expected properties retrieve data object wrapped js object removedata clear object make sure right number properties came data appears expected data empty sanity check data nt change even though data attrs confident fixed concerned resulting code maintenance nightmare", "d": "10/2014"}, {"body": "comment author jbedard sure definepropertyies main cause thought quick test replacing plain assignment use case still significantly slower quick test defineprop big factor could simple assignment used elements still use defineprop objects use case table every cell data approx cells rows columns loads slower vs extra mainly datakey gc example rows x columns seems reproduce profiling cases looks like jsperf reproduces almost exact issue forced relayout expensive cloneappenddatagc fairly small datakey gc skyrocket making relayout looks like might really effect chrome though surprised", "d": "10/2014"}, {"body": "comment author jbedard looks like chrome acting due long data expando property name assume longer name treated differently causes element properties stored differently seems fix everything change makes run faster chrome makes go first run removes gc cpu usage made test locally basically called go heap example showing setting different sized property names elements example ffie actually improve chrome nt understand original bug seems mainly effect chrome others maybe chrome also memory issues also note using plain assignment instead definepropertyies maybe elements still makes another faster datakey get reduced enough uses less time dom manipulations like jsperf jsfiddle examples", "d": "10/2014"}, {"body": "comment author dmethvin awesome jbedard thanks drilling seems like able use uid critical thing allow multiple jqueries work element without conflict jqueryexpando ensure rwaldron think", "d": "10/2014"}, {"body": "comment author jbedard might cause meaning would mathrandom causing issue length string", "d": "10/2014"}, {"body": "comment author dmethvin interesting least fix would easy", "d": "10/2014"}, {"body": "comment author jbedard looks like sizzle also puts property onto dom elements containing dash sizzletimestamp update would great least remove avoid main chrome issue", "d": "10/2014"}, {"body": "comment author jbedard delete elem internalkey cleandata seems cause thing combined lead chrome crashing case deleting giant grid gt nodes delete line cause node increase memory", "d": "10/2014"}, {"body": "comment author markelog landing seems improved also note using plain assignment instead definepropertyies maybe elements still makes another faster sounds like using defineproperties bad idea get back using plain assignment", "d": "10/2014"}, {"body": "comment author jbedard even switching defineproperties defineproperty since one helps bit really think something would best", "d": "10/2014"}, {"body": "comment author replying jbedard even switching defineproperties defineproperty since one helps bit really think something would best agree current implementation trying bit clever", "d": "10/2014"}, {"body": "", "d": "10/2014"}, {"body": "migration helper script", "d": "10/2014"}, {"body": "done changelog purposes cc dmethvin table tickets status migrated ie closed switch github milestone match ticket summary owner type priority component update elements mgol feature low manipulation milestone matches ticket summary owner type priority component switch script injection instead indirect eval call markelog feature blocker core warn sizzle nt recent tag release timmywil bug blocker build hidden selector finds elements chrome safari ff ie timmywil bug high css visible inconsistent across browsers empty tags timmywil bug high css isnumeric implementation version returns wrong results opera bug high core reintroduce use requestanimationframe feature high effects remove optimization make jquery compatible google polymer project bug high css globaleval handling use strict pragma incorrect bug low core windowgetdefaultcomputedstyle elem may return null rrrosas bug low css workaround tests android unable crossdocument node manipulation mgol bug low manipulation buildfragment process script element error bug low core error using jqueryajax amd bug low ajax wrap module uses manipulation module declare dependency bug low manipulation drop bower npm timmywil bug low build milestone match ticket summary owner type priority component error jquery bug low manipulation", "d": "10/2014"}, {"body": "nice job mzgol", "d": "10/2014"}, {"body": "still close bugs old tracker pain least migrating tickets little easier script using github api", "d": "10/2014"}, {"body": "awesome thanks easier track release", "d": "10/2014"}, {"body": "mzgol lt", "d": "10/2014"}, {"body": "comment author dmethvin global events destined trash heap say think longterm goal remove trigger ajax events document breaking change course needs done lot advance notice already possible hook beforesend via ajaxsettings suffice", "d": "10/2014"}, {"body": "comment author jaubourg like dave said ajax events way deprecation actually nt need beforesend event use cases examples pull request use ajax prefilters first use case ajaxprefilter function settings settingsdatatypes xhrsetrequestheader accept settingsacceptsscript second use case ajaxprefilter function settings jqxhr settingsvalidateform amp amp validateform settingscontext jqxhrabort case add validateform option ajax calls related form needs validation put form context course", "d": "10/2014"}, {"body": "comment author joshpeek sounds like removing ajax global events deprecate global event triggers rather kill events together definitely favor triggering document living ajaxbeforesend polyfill yeah hook onto ajaxsetup issue thats one passes beforesend callback ajax override disable event major issue ajaxsetup general global ajax events nice alternative ajaxsetup nt think ever wanted global callbacks disabled local one provided really nt think want using ajaxprefilter domain specific form validation awful api wonderful thing events easily cancelable bubbling semantics ca nt use event delegation machinery prefilters prefilters also meanings global context first use case pointed kinda prefilters design could still accomplish thing either way second use case quite since requires set settingsvalidateform real equivalent would ajaxprefilter function settings settingscontext form amp amp validateform settingscontext jqxhrabort write element matchers like using fnon much nicer fnbind thats kinda generic example magnify situation try use many times domain specific contexts document ajaxbeforesend formnewcomment dataremote function return find input val also pair really great ajaxcomplete document ajaxbeforesend function addclass loading document ajaxcomplete function removeclass loading see also rails jquery adapter bubbling beforesend event form ajax beforesend everyone using rails already interacting dataremote forms dataremote ca nt set stuff like settingsvalidateform nt control ajax caller forced delegate action means ajax content settings matters much zepto already implementing prefilter api lines code add prefilters offer ca nt simple event related prefilter code like lines guys already pretty great event system", "d": "10/2014"}, {"body": "comment author dmethvin think argued case well cost implement nt high firing event document jaubourg think", "d": "10/2014"}, {"body": "comment author jaubourg think road choppy choppy network connection ca nt answer right respectfully disagree joshpeek however give proper answer next week enough time properly", "d": "10/2014"}, {"body": "comment author scottgonzalez worth bothered years ajaxsetup annoying global beforesend useful wrote amplifyrequest made sure publish message beforesend callback never understood nt onetoone correspondence callbacks events ajax requests", "d": "10/2014"}, {"body": "comment author dmethvin bulk change enhancement feature", "d": "10/2014"}, {"body": "comment author dmethvin jaubourg nt complete thought seems like completeness fired document", "d": "10/2014"}, {"body": "comment author mikesherov sentiments dave", "d": "10/2014"}, {"body": "comment author rwaldron consistency", "d": "10/2014"}, {"body": "comment author timmywil", "d": "10/2014"}, {"body": "comment author jaubourg still issue op expressed regarding prefilter needs use settingscontext explicitely far understand also case global events fire document also prefilter nt incur performance penalty order magnitude firing event prefilter also accidently removed third party code documentoff ajaxbeforesend anyone also automagically offers closure data shared across handlers prefilter done fail without need attach data context data pertains ajax request dom element short selfcontained space ideal kind problems promoted introducing global ajaxbeforesend yet another step direction know wrong need orthogonal logic run request sent much better covered prefilters reason exist first place", "d": "10/2014"}, {"body": "comment author joshpeek could reconsidered global events fire document", "d": "10/2014"}, {"body": "comment author jaubourg first onreadystatechange xhr events support removed original rewrite size beginning real blocking issue used much one may think use cases represent need widespread enough justify quite substantial bump size especially already success error complete callbacks jqxhr object nt strive implement whole xhr api complete xhrcompatible wrapper makes sense relatively diversity transports hood bandwidth detection example clearly typical usecase web app putting mildly beside wanted full control xhr still use jqueryajaxsettingsxhr create native xhr end given level control require nt need ajax intervene top native xhr setting headers automagically without knowledge instance patch really nt like create specific options make sense xhr transport really want right insist using ajax lowlevel control xhr easily copy code apply patch change line jqueryajaxtransport function drop file application override default xhr transport able whatever need said know need progress notification system guess progress callbacks deferredspromises would perfect fit kind things given deferreds progress transport agnostic transport able provide progress notification protocol leave opened given love see something notify readystate changes using deferreds progress make soon since nt brought proposals new features order doubt see hand addition would pretty neutral since progress callbacks nt exist earlier code breakage since existing behaviour stays unchanged anyway yes need kind progress notification system transports adding options specific given transport acceptable approach let use deferreds progress introduced transports notify events try take conversation forward next jquery meeting", "d": "10/2014"}, {"body": "comment author jaubourg duplicate ticket", "d": "10/2014"}, {"body": "comment author jaubourg duplicate ticket", "d": "10/2014"}, {"body": "comment author dmethvin bulk change enhancement feature", "d": "10/2014"}, {"body": "comment author dmethvin progress callbacks make easy", "d": "10/2014"}, {"body": "comment author hungerandthirst nt know top need investigate get back chance look new callbacks yet", "d": "10/2014"}, {"body": "comment author mikesherov informed enough choose", "d": "10/2014"}, {"body": "comment author gnarf think least look using notify send something state change measure size decide", "d": "10/2014"}, {"body": "comment author jaubourg fyi preliminary study indicates adding minimal implementation progress callback xhr transport would call readystate native xhr instance sole parameter inspected used vicinity mingzipped attempt make secure expose native xhr directly useful call progress handlers meaningful parameters make much bigger actually desirable approach quite torn know useful would yet feel like much weight point since know xhr transport extremely simplified like postpone", "d": "10/2014"}, {"body": "comment author dmethvin fine moving later date plenty things keep us busy next couple months", "d": "10/2014"}, {"body": "comment author anonymous replying dmethvin anything adding support introduce lot people progress always thought clever part deferred", "d": "10/2014"}, {"body": "comment author dmethvin", "d": "10/2014"}, {"body": "author rwaldron normalization purposes jquery core maintain round pixel value returns however easily write csshook return widthheight value format prefer", "d": "10/2014"}, {"body": "author bzbarsky clear bug makes width completely useless layout calculations uas subpixel layout compute widths look like fit container fact nt people running time uas fact subpixel layout eg webkit", "d": "10/2014"}, {"body": "author mikesherov boris suggest stop rounding fraction returned", "d": "10/2014"}, {"body": "author dmethvin duplicate ticket", "d": "10/2014"}, {"body": "author mikesherov duplicate ticket", "d": "10/2014"}, {"body": "author mikesherov bzbarsky could get ff return floats offsetwidth offsetheight would solve fact jquery nt use getcomputedstyle height calculations uses offsetheight subtractsadds padding border margin necessary perhaps file bug", "d": "10/2014"}, {"body": "author mikesherov bzbarsky reported ff might take stab ditching offsetwidthoffsetheight jquery oldie codepaths gone would fixed automatically offsetwidthheight stopped rounding", "d": "10/2014"}, {"body": "author mikesherov boris nt use offset use getboundingclientrect", "d": "10/2014"}, {"body": "author mikesherov good news ff chrome safari opera getboundingclientrect work great reporting subpixel values appropriate containing width property however bad news reports opposed offsetwidth ie lt reports textrectangle object width property sigh truly want get subpixely either see drop offsetwidth altogether feature detect subpixely getboundingrectclient use", "d": "10/2014"}, {"body": "author mikesherov oh works right", "d": "10/2014"}, {"body": "author dmethvin duplicate ticket", "d": "10/2014"}, {"body": "author dmethvin duplicate ticket", "d": "10/2014"}, {"body": "author dmethvin ref still jquery may better position since site gets choose whether wants upgrade newer jquery question whether lot popular plugins would break fractional widths heights", "d": "10/2014"}, {"body": "going mark potential inclusion release might best place try breaking change like", "d": "10/2014"}, {"body": "mikesherov assigning want please reassign back notify plz", "d": "10/2014"}, {"body": "author anonymous fadein fadeout also nt work", "d": "10/2014"}, {"body": "author domastrijonis fails jquery sets filter property make work correctly msfilter set", "d": "10/2014"}, {"body": "author addyosmani confirming still issue", "d": "10/2014"}, {"body": "author chee confirming still issue jquery", "d": "10/2014"}, {"body": "author dmethvin mikesherov ended assigned inclined wontfix think", "d": "10/2014"}, {"body": "author mgol dmethvin ca nt use msfilter apart filter remove filter anyway", "d": "10/2014"}, {"body": "author dmethvin mgol sure according microsoft msfilter applies synonym filter since dropping support soon perhaps problem simplified want grab ticket see come fix", "d": "10/2014"}, {"body": "author mgol dmethvin meant still msfilter better syntax conforms css rules filter certainly grab ticket amp check effect", "d": "10/2014"}, {"body": "author djgilcrease make jquerydefered promise closer conforming specification around exceptions checked full compliance tests setup test shows exception handling working expected pull request", "d": "10/2014"}, {"body": "author dmethvin nt think right way go swallowing exception silently reported poorly user foresight attach fail handler see even current proposed spec discussions handwaving needing browser support dev tools able debug properly prefer users opt standard promises compliant polyfill retroactively changing semantics deferred significant way seems like bad idea especially builtin support notify unhandled promise rejections", "d": "10/2014"}, {"body": "author markelog ticket requires clarification specification mentioned ticket description one refers domenic repository also promisesa promisesa proposals much relevance right plus upcoming draft also promise clause dom specification draft stage already implemented two browsers firefox nightly chrome canary without prefixes browsers however implementation mistakes new specification defines new api significantly differs jquery deferred aside methods like cast catch etc also behaivor differences guarantee asynchronous execution swallows errors passes propagate stack rejection handlers progress handler signature always passes one argument successfulfailed callbacks", "d": "10/2014"}, {"body": "author dmethvin definitely good emphasize promisesa proposal standard comply jquery deferred several years would guess number users promisedeferred implementation exists today let break code keep deferred way look ways let developers use emerging standard lively discussion around addition done method promises would swallow exceptions nt seem slated first iteration standard think shame built done way around without proposed browser support exposing unhandled exceptions promises going difficult debug", "d": "10/2014"}, {"body": "author rwaldron replying markelog ticket requires clarification specification mentioned ticket description one refers domenic repository promises specification", "d": "10/2014"}, {"body": "author domenic promisesa standard basis promises specification promises follow promise specification pass promisesa tests promises spec effect superset promisesa spec", "d": "10/2014"}, {"body": "author anonymous built done way around false promiseprototypedone onfulfilled onrejected thisthen onfulfilled onrejected catch e gt settimeout gt throw e", "d": "10/2014"}, {"body": "author dmethvin rethrowing error object propagated nt letting browser handle error point occurred lot important error context lost especially older browsers still supports however particular pull request listed trying turn deferred promisesa ca nt would break years worth existing code already using deferred nobody wants break web instead expect support promises like mentioned seems like good approach edit clarified subject reason ticket nt closed expect support promises changing deferred", "d": "10/2014"}, {"body": "author domenic guess unclear op meant make promises speccompliant changefix implementation match spec shipped implementation use pipe continue using jqueryspecific functionality sounds like saying something different op wherein changefix implementation match spec instead somehow support real promises unclear", "d": "10/2014"}, {"body": "author dmethvin reading agree unclear pull request referencing issue misplaced since op nt mention changing deferred becomes confusing close open new ticket specific title", "d": "10/2014"}, {"body": "author mgol amsterdam meeting discussed op says compliance spec wording clear modify title amp text issue prefer recreate one since discussion already started", "d": "10/2014"}, {"body": "author mgol discuss san diego surprisingly jaubourg seemed ok switch least stable browsers implement new spec keeping pipe current semantics like see much code would affected nt think many people relied production code promise throwing errors way flow control oth jquery even small amount lot larger question deprecate old apis eg case ajax planned xhr ever able actually remove former question similar concern", "d": "10/2014"}, {"body": "author calvinmetcalf chrome beta implements firefox beta flag stable browsers soon", "d": "10/2014"}, {"body": "author markelog replying calvinmetcalf chrome beta implements firefox beta flag stable browsers soon see ticket description wait ship unprefixed behind flag stable browsers first", "d": "10/2014"}, {"body": "author anonymous unwrapping thenables also change consider spec useful", "d": "10/2014"}, {"body": "author dmethvin edited title line actually plan converting internal uses deferred emerging promise implementations semantics two differ much promise lacks several features deferred uses progress callbacks multiple arguments however plan accepting promise input appropriate eg ensuring deferred works thenable", "d": "10/2014"}, {"body": "duplicate", "d": "10/2014"}, {"body": "html parser browser parser act differently example throw exception use jquery instead use direct dom operations", "d": "10/2014"}, {"body": "familiar direct dom operations would equivalent using act differently firefox chromium safari opera see browser bug multiple browsers", "d": "10/2014"}, {"body": "yes equivalent operation two behave similarly browser attempts give error try make sense given may involve ignoring input see article", "d": "10/2014"}, {"body": "understand dropping input preventing developers seeing problem impediment debugging browsers fix bug innerhtml implementations also generate warning html", "d": "10/2014"}, {"body": "per article parsing lenient design browser give something like console warning jquery nt get involved process would need look console already many static html errors page nt give errors html injection via", "d": "10/2014"}, {"body": "console warning exactly think missing", "d": "10/2014"}, {"body": "polyergic nt think jquery job provide console warnings things browsers would easy implement today purpose otherwise devs would get flooded warnings jquery setter internally sets value browser generates warning using jquery claimed know better browser vendors warnings browser implements warnings get duplicate right thing logging anything", "d": "10/2014"}, {"body": "submitted bugs browsers", "d": "10/2014"}, {"body": "page throwing error due security problem nt call handlers error occurs xhr method request starts could trycatch call perhaps", "d": "10/2014"}, {"body": "original discussion changed months ago timmywil priority changed undecided high status changed new open component changed unfiled ajax changed months ago rwaldron applause changed months ago jaubourg owner set jaubourg status changed open assigned followup changed months ago markelog would suggest present method shorthand method like jquerygetpostgetscript therefore rename cache type options change signature beforesend jqueryajax expose localprotocols global config array instead eventually possible build jquery interface different tickets reply followup changed months ago scottgonzalez replying markelog would suggest present method shorthand method like jquerygetpostgetscript therefore rename cache type options change signature beforesend jqueryajax shorthand method complete replacement jqueryajax lots parameters bad api expose localprotocols global config array instead eventually possible build jquery interface different tickets except possible build intended without goal leave jqueryajax asis create new leaner simpler api reply followup changed months ago markelog complete replacement jqueryajax could complete replacement jqueryajax since presented functionality like could nt use jsonp script transports give alternatives nt given method name could nt use getjson shorthand method jqueryxhr since conversion list could continue lots parameters bad api arguments except possible build intended without quite localprotocols global config could implemented first jqueryajax could start using build option obviously need implement method first task purpose could make build option hence word eventually quote goal leave jqueryajax asis create new leaner simpler api could achieve jqueryxhr would presented shorthand jqueryajax would considered last resort method fear choose route could lead source confusion reply followup changed months ago scottgonzalez replying markelog could complete replacement jqueryajax since presented functionality misunderstanding wording replacement complete functionality jqueryajax complete replacement sense jqueryajax removed jqueryxhr added one main goals completely get rid jqueryajax jqueryxhr ca nt shorthand method quite localprotocols global config could implemented first jqueryajax could start using suppose nt think plans change apis around jqueryajax proposed path touch jqueryajax goal leave jqueryajax asis create new leaner simpler api could achieve jqueryxhr would presented shorthand jqueryajax would considered last resort method fear choose route could lead source confusion sure source confusion would happy talk potential confusion using jqueryxhr nt using jqueryajax docs would make clear reply changed months ago markelog completely get rid jqueryajax oh even jqueryxhr could functionality jqueryajax better api even would bold guess even deprecate jqueryajax proposed path touch jqueryajax designation localprotocols made inside ajax module public api consequance jqueryxhr introduction said ticket description make public property expose jqueryajaxsettings format question would recommend dealt jqueryxhr implementation would affect jqueryajax like convertors option could passed jqueryajax defined jqueryajaxsettings changed months ago scottgonzalez exposure localprotocols nt affect jqueryajax want would expect jqueryajaxsettings would nt used jqueryxhr changing actual default values ajax requests seems really bad changed months ago dmethvin definitely way change default settings since potential create havoc modular app like jqueryajaxsettings would also good clearly document method whether data sent url alternatively content body ambiguity whether methods like delete body recall ticket around somewhere changed months ago jzaefferer ticket description outlines options keep though consider adjusting well angualar http service seems like good reference specifically avoid confusion data separate params option params get appended query string data message body without ambiguity another aspect consider response object angular puts data status headers config properties single response object order fit promise changed months ago dmethvin yehuda mentioned code among things adapts ajax rsvpjs promise promisesa compliant changed months ago dmethvin milestone changed none changed months ago dmethvin duplicate ticket", "d": "10/2014"}, {"body": "decided create new ajax interface new release create plugin instead", "d": "10/2014"}, {"body": "original discussion changed months ago tde behavior jquery changed months ago dmethvin hi convert example inline example jsfiddlenet changed months ago mgol owner set tde status changed new pending changed months ago tde status changed pending new test case followup changed months ago timmywil status changed new closed resolution set notabug respecting borderbox outside scope width due fact specific methods account padding margin border innerwidthouterwidth truefalse width however use css width instead reply changed months ago anonymous replying timmywil respecting borderbox outside scope width due fact specific methods account padding margin border innerwidthouterwidth truefalse width however use css width instead clearly bug provided workaround want block border border border etc open mind reconsider shit documentation clearly states note width value sets content width box regardless value css boxsizing property changed months ago timmywil status changed closed reopened resolution notabug deleted valid documentation quote point making nevertheless seems edge case caused combining nonpx like em borderbox changed months ago timmywil owner changed tde timmywil priority changed undecided high status changed reopened assigned component changed unfiled css milestone changed none changed months ago timmywil afaict two routes take unit pixels skip widthheight augmentation completely historically dealt problems involving nonpx units exceptions also advantage small fix could something similar main tween convert necessary values set unit accurate could get expensive could potentially require loop width border margin padding order unify units value adjustment time width set imagine animating width thoughts changed months ago favor exploring size performance impact option may take stopgap meantime might reasonable option seems like overkill changed months ago timmywil perhaps could ensure units setpositivenumber call set value asis changed months ago joshua tausz discovered similar case expands scope bug using jquery chrome windows enterprise bug occurs types unit missmatch example provided initial report set width padding px border result width different behavior expected setting padding returns width would seem indicate translated adding width able use chrome builtin debugger trace code file function agumentwidthorheight returns reflect padding set either side unit attached specifically occurs line already part loop used add various values together type checkingconversion could handled inside existing loop coder go option value used function setpositivenumber value subtract line suggest using type conversion transmitting type value reported function agumentwidthorheight type conversion done line additional style missmatches cause issues suggest longer much edgecase changed months ago dmethvin milestone changed changed months ago timmywil milestone changed", "d": "10/2014"}, {"body": "original discussion changed months ago timmywil priority changed undecided blocker status changed new open component changed unfiled css milestone changed none looks valid reply description changed months ago francomalatacca replying jwagner css left problem style function called css function nt care percentage fix could adding support checking symbol end value compute percentage parent width fixed bug something type string amp amp ret rrelnumexec value fixes bug iexec value value ret ret parsefloat jquerycss elem name else value parsefloat jquerycss elem name parsefloat jquery elem parent css width ret ret thanks franco changed months ago owner set status changed open assigned changed months ago milestone changed changed months ago anonymous reproducible unit em popular units like cm etc need fix changed months ago dmethvin milestone changed", "d": "10/2014"}, {"body": "jogi wrong jsfiddle trying reproduce case correctly", "d": "10/2014"}, {"body": "examples seem working correctly describe trying behavior expecting behavior seeing", "d": "10/2014"}, {"body": "duplicate ticket", "d": "10/2014"}, {"body": "jogi case nt understand tblmf namenumasacmp gt undefined tblmf find namenumasacmp gt works firefox works", "d": "10/2014"}, {"body": "need something reduced kb html plus script unrelated issue", "d": "10/2014"}, {"body": "jogi ok reduced exemple", "d": "10/2014"}, {"body": "jogi see one thing remove line prop disabled false selector works correclty", "d": "10/2014"}, {"body": "jogi observation tblmf namenumasacmp gt undefined tblaa namenumasacmp gt work", "d": "10/2014"}, {"body": "removed superfluous markup script fiddle changed better insight something seems related sizzle combinator caching oldie", "d": "10/2014"}, {"body": "jogi problem input instead name nonstructassettemplate input length nonstructassettemplate find input length", "d": "10/2014"}, {"body": "actually problem clone versions well sure clone still reference sizzle cache object referent wreaks kinds havoc operation using maybe update fixclonenodeissues look remove attributes associated referenceequal clonesource properties", "d": "10/2014"}, {"body": "pr", "d": "10/2014"}, {"body": "conflicts stated official download page meant cdn distribution woundering removed npm bower releases clarify timmywil", "d": "10/2014"}, {"body": "yea fine removing bowernpm well", "d": "10/2014"}, {"body": "next version", "d": "10/2014"}, {"body": "done purpose idea people download files cdns install bower copy rarely might true though tools like fine change downside people copying files around using npmbower bundle longer see source maps", "d": "10/2014"}, {"body": "nt sizzle issue instead jquery think sizzle docs help", "d": "10/2014"}, {"body": "first pretty old tried latest version jquery second better way make custom selectors staabm pointed reopen bug", "d": "10/2014"}, {"body": "thank everyone help", "d": "10/2014"}, {"body": "wanting fix pr delete line url replace", "d": "10/2014"}, {"body": "nt delete wayback machine still content", "d": "10/2014"}, {"body": "could modify point wayback machine url", "d": "10/2014"}, {"body": "sounds like good idea broken links drive crazy timmywil intent seems simply give credit courtesy removing would fine well", "d": "10/2014"}, {"body": "arthurvr want send pr wayback link", "d": "10/2014"}, {"body": "opened", "d": "10/2014"}, {"body": "work sizzle requires first argument string assuming implementation presumably empty includes based exclusion inclusion within could light enough would", "d": "10/2014"}, {"body": "sorry nt understand objection meant form something like first comes mind question filter elements elementarray context provided oktober mesz schrieb richard gibson notifications githubcom work sizzle requires first argument string assuming implementation presumably empty includes based exclusion inclusion within could light enough would reply email directly view github diese nachricht wurde von meinem androidmobiltelefon mit mail gesendet", "d": "10/2014"}, {"body": "fan argument since selection via expressed without extra confusing twoargument variants think latter clearer cases nt great value adding another overload way clearly possibility compat problems since eight years code would nt expect interpretation already many overloads", "d": "10/2014"}, {"body": "yeah probably right", "d": "10/2014"}, {"body": "please recheck also jquery old unsupported newest version", "d": "10/2014"}, {"body": "also please attach complete test case jsfiddlenet show expect hard guess problem gist", "d": "10/2014"}, {"body": "iirc zoom related issues used wo nt fix nt currently appear case", "d": "10/2014"}, {"body": "mzgol ca nt set body zoom jsfiddle well jsbin please check safari page loaded body zoom", "d": "10/2014"}, {"body": "mzgol safari get", "d": "10/2014"}, {"body": "tgfjt thanks test case used work safari sigh", "d": "10/2014"}, {"body": "mzgol oh yes safari case body zoom value zoom", "d": "10/2014"}, {"body": "could check styling check instead idea solves issues though cc mikesherov", "d": "10/2014"}, {"body": "chrome got safari got got", "d": "10/2014"}, {"body": "rwaldron thank comment btw let know wo nt fix list", "d": "10/2014"}, {"body": "tgfjt", "d": "10/2014"}, {"body": "mzgol thank", "d": "10/2014"}, {"body": "yes think issues zoom reliably detect zoom level impossible adjust results problem compounded using etc round integers losing data", "d": "10/2014"}, {"body": "think agree supporting zoom related issues something like bog bog nt understand wrong detection fix", "d": "10/2014"}, {"body": "problem compounded using offsetwidth etc round integers losing data might safer use higher numbers wo nt even increase size safe probably wo nt handle cases least little less vulnerable", "d": "10/2014"}, {"body": "something", "d": "10/2014"}, {"body": "mzgol suppose could play numbers bit common zoom values would fooled sure offsetposition methods work properly conditions would problem user calls forcing zoom pretty antisocial thing seem like try fix", "d": "10/2014"}, {"body": "couple points ca nt superset xhr native version nt method ca nt one since browser sends default set headers would way get facilitate debugging test automation struggling sustain current size jquery whereas feature would pretty limited use slowly deprecating method replacing new interface", "d": "10/2014"}, {"body": "microsoft bug report put fix definitely would need feature detect since browser sniff cause bad behavior bug fixed", "d": "10/2014"}, {"body": "nt able find official bug reports similar issue discussed stackoverflow deals issue whether checkbox becomes clicked state also discusses feature detect could adapted check event", "d": "10/2014"}, {"body": "leongersen nt able find official bug reports could report one", "d": "10/2014"}, {"body": "already", "d": "10/2014"}, {"body": "thanks report", "d": "10/2014"}, {"body": "leongersen oops changed", "d": "10/2014"}, {"body": "general resolution process like ie team fix end potentially even slipstream patch next months happy coordinate sort fixes browser vendors good web devs part charter look adoption rate new jquery versions likely sites would nt actually fix months even years meantime recent versions jquery would bloated dozens rare edge cases majority developers would never encounter prefer see problems addressed directly browser vendors depending feedback add workarounds impact high vendor nt planning quick fix", "d": "10/2014"}, {"body": "understandable policy seems unlikely microsoft fix older versions internet explorer got hand aware testing document modes may reflect actual browsers seem share issue inconsistencies event pseudo selector fixed jquery core would prefer see plugins provide patchworkaround", "d": "10/2014"}, {"body": "goes way back likely need look fix inside jquery original report made sound like problem made fiddle little info event order fix still work keyboard use well want sure patch actually bringing ie compliance written standard none seem helpful defining interaction checkbox mention references talk ie team see reason current behavior history aside nt look like sizzle support yet selector seems safe need add non queries work sure widely implemented browser moment tracked", "d": "10/2014"}, {"body": "written fix feature detect issues event state keyboard support issues force browsers others false force takes lines fix issues wrapped small library together helpers github tests docs yet behaviour nt properly defined spec perhaps jquery nt force", "d": "10/2014"}, {"body": "probably issue apijquerycom repo nt", "d": "10/2014"}, {"body": "yes also would help suggest wording easier understand proposed ideally would pull request page", "d": "10/2014"}, {"body": "ca nt use one things handler might ask server requests progress want stop exit lose work user cancel damage would still done agree dependency unfortunate undesired", "d": "10/2014"}, {"body": "could guard whole block though basically restricting fix complete builds", "d": "10/2014"}, {"body": "anything special event effects module hack relative oldie plus already guard checking presence object although code path executed newer version ie ca nt use method directly", "d": "10/2014"}, {"body": "guarding block works justifies listed dependency suppose markelog remembered falsely seems nt work perhaps check feature detect attach way problem supposed fixed nt present", "d": "10/2014"}, {"body": "perhaps check attachevent feature detect attach way think yes provide patch today", "d": "10/2014"}, {"body": "would failed unit tests", "d": "10/2014"}, {"body": "nevermind looking wrong tests entirely wrong function", "d": "10/2014"}, {"body": "docs argument always plain javascript object types object dom elements primitive stringsnumbers host objects may give consistent results across browsers", "d": "10/2014"}, {"body": "going post", "d": "10/2014"}, {"body": "nt bit early inside jquery line person using knows whether environment going nt know", "d": "10/2014"}, {"body": "yes probably early wanted get general feedback", "d": "10/2014"}, {"body": "hard argue one line code smilecat environment know maybe phonegapcordova app year two could handy nt think keep ticket open amount time though", "d": "10/2014"}, {"body": "agree", "d": "10/2014"}, {"body": "slick", "d": "10/2014"}, {"body": "going drop screenshot code becomes common syntax comparison useful", "d": "10/2014"}, {"body": "chrisantaki want take", "d": "10/2014"}, {"body": "sure markelog", "d": "10/2014"}, {"body": "markelog discussed irc small fix good note changes undocumented nonpublic data structures need advance notice firefox dev tools gropes find real handlers cry would nt want reorganized", "d": "10/2014"}, {"body": "thanks heads dmethvin", "d": "10/2014"}, {"body": "update might memory leak due recursion digging", "d": "10/2014"}, {"body": "good news test causing memory leak", "d": "10/2014"}, {"body": "fixed version test shows performing faster", "d": "10/2014"}, {"body": "like pay bytes speed caching regex recursion new parameter added method", "d": "10/2014"}, {"body": "get fancy speed bytes instead new parameter ask moonlight cache bearer agrees course", "d": "10/2014"}, {"body": "summary original jsperf test memory leak fixed increased performance beyond two ways increase performance found steps forward recommend going branch either since increases clarity code introducing new variable name downside branch byte cost minified amp gzipped branch costs bytes pretty clever fear less readable branches improve performance around sure sold merging either changes though working fun especially branch", "d": "10/2014"}, {"body": "chrisantaki consider removing recursion entirely", "d": "10/2014"}, {"body": "nope give try", "d": "10/2014"}, {"body": "please talk rxaviers instead building one scratch", "d": "10/2014"}, {"body": "please whoever going work get touch ideas share", "d": "10/2014"}, {"body": "issue probably closed duplicate", "d": "10/2014"}, {"body": "say way around issue older right", "d": "10/2014"}, {"body": "actually older port nt really matter comments", "d": "10/2014"}, {"body": "see great discussion current state shadow dom think implementation start plugin evaluate utility stability let close ticket watch spec evolve risk anyone letting us forget say still bit early add support shadow dom", "d": "10/2014"}, {"body": "version jquery boolean supported parameter", "d": "10/2014"}, {"body": "please nt post incomplete bugs start someplace like stack overflow create ticket minimal test case post created jsbincom jsfiddlenet", "d": "10/2014"}, {"body": "dmethvin nt post bugs github issue log nt bug code bug source suggest reading post understanding closing", "d": "10/2014"}, {"body": "post minimal test case jsbincom jsfiddlenet change mind honestly opening issue nt yet looked code reason meaning nt spent enough time post issue code snippet nt runnable asis", "d": "10/2014"}, {"body": "dmethvin agreed tried creating jsfiddlejsbin nt think work expect", "d": "10/2014"}, {"body": "must make jsfiddle modern browser use draft feature checkout", "d": "10/2014"}, {"body": "pretty sure jsfiddle also work appended url created elsewhere main concern original post describes bunch confounding code like bootstrap nt versions document positions important things like jquery shiv real minimal running test case important reopen pending test case", "d": "10/2014"}, {"body": "arthrvr ca nt even log jsfiddlenet old method using longer works perhaps could try instead speculating regardless ticket reopened also agree lot code could create quick demo would absolutely", "d": "10/2014"}, {"body": "adding toolbar even mode perhaps toolbar works nt third url see pattern", "d": "10/2014"}, {"body": "post full working page somewhere want sure complete running test case agree broken", "d": "10/2014"}, {"body": "mzgol actually forgot jshell looking thanks dmethvin jshell able provide example hopefully validate issue alright keep ticket closed originally", "d": "10/2014"}, {"body": "dmethvin perhaps add docs nt really get try hard make site destined js testing work nt make sense contact jsfiddle could ask easy way get raw url nt find url manually every change", "d": "10/2014"}, {"body": "stupid question probably jsbin support", "d": "10/2014"}, {"body": "jaubourg nope stays like", "d": "10/2014"}, {"body": "okay made test case post comment update original question testing even finding incorrect nt necessarily solve issue nt started adding pseudoselectors like element able locate newly created element still demo shows bug prefixed colon handled using jquery using pseudoselectors least consistent finding elements whether includes prefixed elements dmethvin please let know satisfactory", "d": "10/2014"}, {"body": "nt invalid document inline elements ca nt contain block elements", "d": "10/2014"}, {"body": "yes perfectly correct jquery bug submitted bug sorry firefoxgecko webkitblink behaves differently met nonstandard behaviour", "d": "10/2014"}, {"body": "think diagnoses cause wondering left rfc actually standard", "d": "10/2014"}, {"body": "weird supported via activex supported via native xhr oo", "d": "10/2014"}, {"body": "created know sites links make sure tracked well", "d": "10/2014"}, {"body": "created", "d": "10/2014"}, {"body": "created", "d": "10/2014"}, {"body": "guys going handle releasenotesjs", "d": "10/2014"}, {"body": "arthurvr script replaced logic jqueryrelease format bit cleaner consistent using commitplease commit messages also notice reference bugs npm page harm leaving bugsjquerycom page supposed help people selftriage issue reduce number spurious tickets handle core page unclear work fixing", "d": "10/2014"}, {"body": "dmethvin correct think references repos removed open pr according github search nt references", "d": "10/2014"}, {"body": "landed thanks modify commit message little please look", "d": "10/2014"}, {"body": "bug triggering click child bubbles parent invoking handler ad infinitum", "d": "10/2014"}, {"body": "documentgetelementbyid qwer click inside work", "d": "10/2014"}, {"body": "sorry ca nt understand infinitum loop", "d": "10/2014"}, {"body": "test case test case browser might protecting triggering another click handler first one reopen let see others say", "d": "10/2014"}, {"body": "dom example cals dom method element jquery example fires event given element none handlers prevent default action call dom method asked afaict", "d": "10/2014"}, {"body": "yeah mainly wondering nt bubble forgot bubbling default native event apis killing corrected fiddle yeah everything works expected alexufo need remember native dom sth totally different dispatched click event see linked fiddle", "d": "10/2014"}, {"body": "yeah impossible fix without breaking lot existing code might possible majorpoint release though ticket still open", "d": "10/2014"}, {"body": "thank reply dmethvin case doc issue page reports number returned dimensionsrelated apis including width may fractional cases nt true agree", "d": "10/2014"}, {"body": "think still dimension cases fractional start math border padding widths root problem use always integer part calculation", "d": "10/2014"}, {"body": "see thank pointing case propose add note pointing issue feel free close issue duplicate", "d": "10/2014"}, {"body": "never documented use outside library please use documented interfaces", "d": "10/2014"}, {"body": "", "d": "10/2014"}, {"body": "would like take", "d": "10/2014"}, {"body": "assume specific jquery core meaning addition repo jqueryrelease right", "d": "10/2014"}, {"body": "yes yes", "d": "10/2014"}, {"body": "installing url package please seek help stack overflow bower package used many users certain contains required files", "d": "10/2014"}]