[{"title": "quest glimmer components ember", "body": "quest issue tracks implementation glimmer components emberjs plan glimmerjs components following features outer html templates etc arguments templates prefixed like arguments set component component classes use javascript class syntax mutable component state annotated properties components invoked via syntax attributes splatted via keeping ember spirit incrementalism want land functionality piece piece via addon allows community start using features providing feedback early process fact already started road glimmer components ember first two features already started land templateonly components templates outer html assuming optional feature enabled arguments accessed template via prefix eg issue proposes finishing process bringing glimmer components ember allowing addons provide alternate component implementations transforming package ember addon implements glimmerjs component api break work phases one unlocking benefits existing ember apps addons phase adding necessary primitives emberjs support alternate component implementations phases incrementally enabling glimmerjs component api go depth phases defer exploring technical details later phases first phases closer completion phase customizing component behavior tl dr add customcomponentmanager api emberjs allow addons implement custom component api currently components ember app assumed subclasses order support alternate component apis ember need way tell ember component behavior change say custom component behavior specifically mean component instances created component instances destroyed arguments provided component instance component notified lifecycle changes glimmer vm introduces concept component manager object makes decisions api low level would premature adopt directly public api ember difficult write easy author way breaks components yet stable instead propose new ember api called implements delegate pattern provides smaller api surface area fullfledged glimmer vm api allows addon authors fall pit success ember know component manager use given component original iteration custom components rfc introduced concept data structure eagerly registered ember specified component manager use one major benefits approach component manager resolution happen build time unfortunately means design api exactly get registered likely means sort integration build pipeline instead propose api setting component manager runtime via annotation component class incremental step allows work custom component managers continue longer term solution designed custom component manager discovery iteration components must explicitly optin alternate component managers via special function exported ember annotates runtime component manager used particular component class js import componentmanager embercustomcomponentmanager import emberobject emberobject export default componentmanager emberobjectextend glimmer eventually could become class decorator js import componentmanager embercustomcomponentmanager export default componentmanager glimmer class first time component invoked ember inspects class see custom component manager annotation uses string value perform lookup container example ember would ask container object container key addons thus use normal resolution semantics provide custom component managers glimmer component addon export component manager get automatically discovered normal resolution rules api verbose particularly ergonomic apps addons abstract away introducing base class annotation example addon called wanted provide custom component manager could export base class like js addonindexjs import emberobject emberobject import componentmanager embercustomcomponentmanager export default componentmanager emberobjectextend turbo users addon could subclass base class define components use correct component manager import turbocomponent turbocomponent export default turbocomponentextend didinsertelementquickly custom component api component island backwards compatibility reasons important introduction new component api break existing components one example existing view hierarchy api ember components inspect parent component via property even parent child ember components still nonnull property currently ember responsible maintaining state well ambient scope state like target actions prevent poorly implemented component managers violating invariants existing system use compositional pattern customize behavior hiding sharp corners underlying api js import customcomponentmanager embercustomcomponentmanager export default new customcomponentmanager major minor ember version manager targets version create componentclass args responsible instantiating component class passing provided component arguments value returned passed hooks getcontext component returns object serves root scope component template implementations return component properties looked curly expressions update component args called whenever arguments component change destroy component phase ember object glimmer components base class ember supports long list features many longer heavily used features impose performance cost even unused first step want provide way opt simplified glimmerjs component api via package ease migration provide implementation glimmer base class inherits example emberglimmer component looks like js srcuicomponentsuserprofilecomponentjs import component glimmercomponentcompat import computed emberobject export default component fullname computed argsfirstname argslastname function let firstname lastname thisargs return isadmin false toggleadmin thisset isadmin thisisadmin hbs srcuicomponentsuserprofiletemplatehbs fullname welcome back firstname isadmin admin notable characteristics components templates outer html example template single root element renders tagless component actions functions component need nested hash arguments set property rather setting individual properties component directly use ember object model means tools like computed properties mixins ember developers already familiar continue work important included properties supported phase properties component methods properties relating view hierarchy etc custom javascript dsl modifying root element dispatching events mandatory class autogenerated guid element id manual method property use instead passed arguments unidirectional create twoway bindings passed arguments set properties component instance avoiding possibility hardtodebug naming collisions create jquery object component element manual components dom support following lifecycle events event listener component lifecycle events hooks must implemented methods one interesting side effect set features dovetails effort enable javascript classes conjunction design proposed es classes rfc provide alternate implementation component js srcuicomponentsuserprofilecomponentjs import component glimmercomponentcompat import computed emberdecoratorsobject export default class extends component isadmin false computed argsfirstname argslastname get fullname let firstname lastname thisargs return toggleadmin thisset isadmin thisisadmin phase angle bracket syntax phase enables invoking components via angle brackets addition curlies syntax disambiguates component arguments html attributes feature also enables splatting passed attributes component template via hbs srcuicomponentsuseravatartemplatehbs lt attributes inserted hello firstname would render output similar following html hello steven phase tracked properties phase enables tracked properties via decorator ember details interop ember object model tracked properties worked tracked properties land users able drop module use normal nonemberobject component base class tandem recentlymerged autotrack feature infers computed property dependencies automatically result simplification application code js import component tracked glimmercomponent export default class extends component tracked isadmin false tracked get fullname let firstname lastname thisargs return toggleadmin thisisadmin thisisadmin q amp add back things like class name autogenerated attribute glimmer components compatibility existing css yes example hbs component content goes js import component glimmercomponent import guidfor emberobjectinternals export default class extends component get uniqueid return guidfor resources stglimmercomponents channel ember community slack coordinating work custom component rfc customcomponentmanager branch inprogress branch emberjs implementation behind feature flag tracked branch inprogress branch emberjs work interop properties ember objects tasks use lists track ongoing work learn implementation add remove items list custom component manager api x update custom component rfc reflect changes chancancode x add feature flag implement function expose resolver needs detect annotated classes resolver needs look specified component manager guidance addon authors put component managers discovered work module unification mixonic implement api define interface validate property upon creation internals preserve existing components instrument rendering performance instrument compatibility ember inspector glimmer component addon todo break separate quest issue glimmerjs repo support using ember addon preserve existing behavior consumed glimmerjs provides plain javascript base class provides base class base classes import add annotation consumed ember implementation discoverable via ember container lookup lifecycle hooks static event delegationinvoked methods etc triggered element access computed property alias arguments available constructor updated called trigger infinite rerender cycle documentation install caveats canaryonly emberglimmer compat components outer html templates lifecycle hooks defining computed properties depend migration guide glimmer components guides writing effective glimmer components people familiar libraries glimmer components ember developers glimmer components react developers glimmer components angular developers glimmer components cobol developers open questions best practices actions something need allow component managers hook use bare javascript classes static method component classes protocol initializing component seems simple surprisingly tricky best place document addon apis like handle versioning", "num": "16301", "d": "2/2018"}, {"title": "public api needed support ember inspector", "body": "working going ember inspector updating encountered several things far support due lack public api things need expose relied find booted applications page like deprecate calling reopen instantiation done given object inspector uses reopen add custom logic think destroy sure atm within initializer expose public way finding descriptors", "num": "16298", "d": "2/2018"}, {"title": "runloop drop events", "body": "hello fans timing bugs today fun one new microtaskbased autorun architecture drop scheduled events see action run following beta js import controller embercontroller import schedule emberrunloop export default controllerextend actions testit deliberately escaping run loop use autoruns instead promiseresolve gt schedules autorun schedule render gt consolelog schedule microtask ahead runloop next flush promiseresolve gt consolelog return promiseresolve gt runs fine consolelog scheduled event never fires schedule actions gt consolelog never runs return runloop goes back first queue start flushing promise stack interleaving runloop onemicrotaskperqueue fire event console logs number layers promises required experience bug depends queue trying schedule runloop spends one microtask per queue stack promise resolutions interleaved queue flush example schedule queue immediately queue flushed runloop never notices make drop events queue varying number promises resolve time first trigger autorun time schedule doomed event published working example bug", "num": "16296", "d": "2/2018"}, {"title": "observers nt trigger complex app", "body": "ok really weird complex app lots addons involved observers triggering create simple test route simple observer watching plain string property nt fire put code new application works every time using change commenting else fixes symptoms function notifyobservers obj keyname meta meta return could broken code would cause fix work uncovered edge case around ember observers", "num": "16292", "d": "2/2018"}, {"title": "meta issue routing fails identify willbeactive paramonly changes", "body": "numerous issues reported topic going fix need work correctly simplified reproduction twiddle instructions one piece new information fails async transitions line triggers bug existing since least related cc topaxi bgentry", "num": "16275", "d": "2/2018"}, {"title": "possible memory leak", "body": "seeing potential memory leak ember beta running acceptance test would expect instance garbage collected afterwards teared however case simple reproduction see readme steps reproduce see instance left object retainer path downgrade ember app container correctly gced", "num": "16273", "d": "2/2018"}, {"title": "operand got", "body": "using latest beta version seeing error operand got one tests seems maximum value literal numbers decreased significantly might also related", "num": "16269", "d": "2/2018"}, {"title": "usage testemjs emberjs two different environments ci dev", "body": "hello thank awesome project please correct testemjs issue using embercli macos sierra testemjs run tests development mode chromium installed macos yes gitlabci zsh dash git enhancementupgradeemberversion ember test cleaning built project successfully stored ok error message gt launcher chromium found installed tests pass skip fail launcher chromium found installed stack trace error report dash git enhancementupgradeemberversion today need run tests passing flags command kind usage seems tricky correct missing something ps gitlab ci use normally wich resolves", "num": "16267", "d": "2/2018"}, {"title": "router service transitionto aborted current route", "body": "calling component router router service get called current route however aborting transition parameter hook abort transition router still transition specified route transition parameter another transition edit transition aborted calling", "num": "16266", "d": "2/2018"}, {"title": "attempted access property", "body": "related service injected route extending authenticatedroutemixin use case nt know error coming route accessing service route service let need information try revert ember seems problems ie cc wycats maybe issue embersimpleauth kindly cc marcoow", "num": "16263", "d": "2/2018"}, {"title": "replace router service transition adds history entry", "body": "hi think may discovered bug transitions circunstances involving routes query params happening ember code traced cause bug currently broken created repo illustrate issue structure could possibly simplified closely resembles real life scenario route links routes using method routes dynamic part one breaks also query param templates let transition next using turns access page press broken link gets added history thats ok transitioning replacing press next link get second unwanted history entry investigating issue case side finally discovered culprit condition system router transitioning service preventing query params correctly pruned value getting saved library router property cause problems line future transitions query params change list reflects query params change previous state reality checks previous state object property keys new one nt triggers event base causes turn creates new transition somehow hijacks original one finalizes original could set route exactly works nt query params event nt get triggered workaround issue stop using instead use internal private one gets solved nt really know aforementioned condition makes transition different things coming service although sure reason behind discouraging coworkers using service additionally speculation say race condition happening within event transition spawned nt able finalize original one sets urlmethod thanks", "num": "16262", "d": "2/2018"}, {"title": "assertion failed attempted access property", "body": "ember assertion failed attempted access property since ember usually fine longer need use access computed properties however case object question special kind ember object proxy therefore still necessary use case encountered error thirdparty code nt control information help us improve error message telling us happened situation seems caused ember data using object since checks unconditionally causing error", "num": "16259", "d": "2/2018"}, {"title": "computed properties relationships nt update model saves", "body": "ember also canary ember lt relationship nt recomputed property changes one underlying models reproduced simple new app app consists two one displaying saved models displaying pending models button creates new model saves saving appear pending section completes gets sets false model appear saved section ember gt newlycreated thing never moves pending lt works expected logging like see new task changed expected returns", "num": "16258", "d": "2/2018"}, {"title": "uncaught typeerror rsvpcast function", "body": "seems ember silently updated rsvp version longer includes unfortunately deprecation warning prior seems use function internally though broke tests cc jasonmit", "num": "16257", "d": "2/2018"}, {"title": "input helper passed type work ember beta", "body": "working updating apps addons beta noticed strange behavior components wrap helper first one rendering input created reproduction played around appears issue passing argument chokes also tested seem difference", "num": "16256", "d": "2/2018"}, {"title": "computed value nt get properly updated input element", "body": "looks like edge use case valid one nonetheless please correct wrong twiddle reproduce user steps reproduce input character input element value gets coerced expected value world input element reflects input get coerced expected however controller property gets correct value expected behavior input element value reflect bound property value input key factors bug computed value whose setter function returns value twice consecutively regardless function argument input element bound computed property user input triggers setter function possible cause guessing stop condition prevent infinite loop propagating binding events checks whether value changed stop condition also stopping update event dom something like possible fix guessing input element bound property triggers change event since property may computed alter original value compare dom element value vs property value decide update needed dom regardless property value changed real case scenario trying define custom user input user value gets corrected special characters cleaned changed alternative twiddle using ember", "num": "16255", "d": "2/2018"}, {"title": "partial application argument order", "body": "begun using following pattern inputs see backstory ember adding additional arguments helper invoked pattern behave expect example passed first argument others seem transposed one would expect argument order respected reproduction steps clone following dummy ember app see compare logged output entering text inputs", "num": "16248", "d": "2/2018"}, {"title": "transitiontoroute gone api documentation", "body": "happens api documentation anymore", "num": "16247", "d": "2/2018"}, {"title": "oneway binding ca nt rerendered coexisting twoway binding", "body": "reproduction twiddle demo shows bug component takes oneway binding value twoway binding value time trying mutate twoway binding value updated rerendered oneway binding value updated logged console rerendered properly however trying mutate oneway binding value nt problem ps like send pr provide test case sure kind tests write would helpful someone show example", "num": "16236", "d": "2/2018"}, {"title": "rfc deprecation emberlogger", "body": "rfc rfc merged yet recently moved final comment period general support land feel confident work commence preparation tasks x deprecate apis emberjs pr develop publish codemod write deprecation guide x emberjswebsite pr x emberlearndeprecationapp pr x review api docs x review guides pr review top addons x ember data pr x emberresolver pr", "num": "16231", "d": "2/2018"}, {"title": "embersimpleauth demo working", "body": "hi yesterday spent hours trying install embersimpleauth want see demo works using following versions ember node npm git version eslint current versions qunit mocha yarn etc etc followed instruction beginning output c yarn install yarn install validating packagejson resolving packages fetching packages info fsevents platform incompatible module info fsevents optional dependency failed compatibility check excluding installation linking dependencies warning gt eslintconfigsimplabs unmet peer dependency eslint gt warning gt eslintpluginmocha unmet peer dependency eslint warning gt sinonchai unmet peer dependency sinon building fresh packages success saved lockfile tried ember serve got c ember deprecation addon trying access projectnodemodulespath reliable way discover npm modules instead consider require resolve sync something basedir projectroot accessed new npmdependencyversionchecker c warning emberdecorators used emberpopper installed emberdecoratorsbabeltransforms extracted separate addon see instructions installation embergetownerpolyfill required ember later please remove group options used testgenerator option qunit mocha error group options used testgenerator option qunit mocha functioneslintvalidationfiltercreate c classlinttree c projectaddonsreduce c arrayreduce classeachprojectaddoninvoke c classjshintaddontree c classtreefor c projectaddonsreduce c arrayreduce emberaddonaddontreesfor c since tried installing emberdecoratorsbabeltransforms eslint qunit mocha broccoli also attempts install emberdecoratorsbabeltransforms fail regard whether use option tried several times warning emberdecorators used emberpopper installed emberdecoratorsbabeltransforms extracted separate addon see instructions installation updating everything latest output c ember deprecation addon trying access projectnodemodulespath reliable way discover npm modules instead consider require resolve sync something basedir projectroot accessed new npmdependencyversionchecker c warning emberdecorators used emberpopper installed emberdecoratorsbabeltransforms extracted separate addon see instructions installation group options used testgenerator option qunit mocha error group options used testgenerator option qunit mocha functioneslintvalidationfiltercreate c classlinttree c projectaddonsreduce c arrayreduce classeachprojectaddoninvoke c classjshintaddontree c classtreefor c projectaddonsreduce c arrayreduce emberaddonaddontreesfor c nt feel like getting anywhere appreciate advice thank", "num": "16219", "d": "2/2018"}, {"title": "ember possible test instanceinitializers", "body": "hey possible test instance initializers using current blueprint errors creating application booting application built app instance automatically boots app fires tested instanceinitializer able prepare test eg registering containers running initializer", "num": "16216", "d": "2/2018"}, {"title": "dom state nt respect bound property values select", "body": "following twiddle shows couple ways select element get sync bound properties first example shows value property select element seems overridden render process value bound property nt correctly reflected unless incidentally first option additional examples show selected property option elements used select element initialize correctly unless bound property value actually changes dom gets sync selecting new option may poor taste mention seems work react seen similar issues form elements eg input typeradio", "num": "16213", "d": "2/2018"}, {"body": "coordinating work stglimmercomponents channel ember community slack interested helping lurkers welcome curious sausage gets made", "d": "2/2018"}, {"body": "regarding hbs srcuicomponentsuseravatartemplatehbs lt attributes inserted hello firstname nt understand curly brackets used denote dynamic variables splatted attributes visually looks like going rendered consistency would nt better", "d": "2/2018"}, {"body": "rfcs glimmer components discuss look work", "d": "2/2018"}, {"body": "tomdale issue mentions documenting component compat mode seem mention documenting migration guide example quite surprised thing anymore would great documentation shows migrate common use cases new best practice patterns", "d": "2/2018"}, {"body": "dbbk biggest reason nt require syntactically ambiguous normal attribute like cases require curlies four fewer characters seemed easier type less visually noisy think may also cause people assume property scope ca nt example syntax would suggest also strongly implies spread syntax works positions nt suggestion adopting special template binding adding spread syntax handlebars needs design implementation immediate roadmap would nt totally surprised future replaced something like glimmer component api would go rfc process enabled default ember apps ever want one nice thing custom component manager approach nt canonize next generation api let different designs compete merits via addon ecosystem great suggestion add migration guide list show existing patterns approach solving problem new api address case specifically since brought usually people use hook initialization component state based passed arguments practice means fair bit unnecessary hooks eg initialize values never end getting used course people end shocking things hooks rendering hot path alternative switch pushbased initialization pullbased initialization example wanted computation generate initialize value component property would instead use tracked computed property ensures work done values actually get used example instead js import component embercomponent import computed emberobject export default componentextend didreceiveattrs thisset firstname thisattrsfirstname tobias thisset lastname thisattrslastname bieniek fullname computed firstname lastname function return js import component tracked glimmercomponent export default class extends component tracked get firstname return thisargsfirstname tobias tracked get lastname return thisargslastname bieniek tracked get fullname return admit skeptical first wycats persuaded experience building big glimmerjs app last year never ran use case could nt modeled moreefficient computed properties", "d": "2/2018"}, {"body": "tomdale agree nt necessary things sometimes saved needing write observer one attributes passed parent example wanted kick ajax request one attributes changed hate add kind side effect getter", "d": "2/2018"}, {"body": "yep thinking similar use cases one example animation say want kick animation changes different one direction would work glimmer components", "d": "2/2018"}, {"body": "ah okay system working performance foot guns performed synchronous anything side effects like animations network requests scheduled async hooks like", "d": "2/2018"}, {"body": "nt seem fit well example case seems trigger component rerendered correct nt actually use property rendering component would nt rerender changing argument would never called", "d": "2/2018"}, {"body": "also throws hard error glimmer set anything cause rerender", "d": "2/2018"}, {"body": "might misconception around called hook invoked tracked property used template passed argument changes see example parent component passes argument child component gets hook called even never used argument moving goalposts example kicking ajax request response argument change would cause error thrown happened want synchronously set property time able model behavior lazy getters need set property asynchronously ajax example wo nt trigger error happen different event loop", "d": "2/2018"}, {"body": "alright seems good enough nt want expand specific thing anyway wanted highlight thorough migration guides needed", "d": "2/2018"}, {"body": "thank detailed write start digging first via failing test cases back burner meantime revert back burner update ensure let door issue", "d": "2/2018"}, {"body": "copied writeup tracking upstream fix", "d": "2/2018"}, {"body": "rwjblue cibernox thoughts", "d": "2/2018"}, {"body": "see pr", "d": "2/2018"}, {"body": "rwjblue mmun suspected app something break framework eg deferring would surprised found bug something fundamental however app huge addons ca nt reproduce anywhere else brand new ember app nt suffer problem pr tell us app broken looking app addons like find pattern search source find way alert dev broken framework way add warning appropriate docs", "d": "2/2018"}, {"body": "deferring done appear global forgetting call would seem break observers application wide ways defer", "d": "2/2018"}, {"body": "guess unbalanced call add logging around variable incremented decremented thing identify gets unbalanced dig things wrong", "d": "2/2018"}, {"body": "bryancrotaz right put logging statements eg put conditional breakpoint contains", "d": "2/2018"}, {"body": "also able put debugger look callstack see requesting deferral", "d": "2/2018"}, {"body": "always write", "d": "2/2018"}, {"body": "saying app throwing errors would definitely assume related addressed likely related", "d": "2/2018"}, {"body": "bryancrotaz conceptually yes nt use functions private using tryfinally hmm unfortunately looks like accidentally marked private", "d": "2/2018"}, {"body": "looks like code using example emberdata", "d": "2/2018"}, {"body": "documentation beginpropertychanges nt jibe private method begins grouping property changes use method group property changes notifications sent changes finished plan make large number changes object one time call method beginning changes begin deferring change notifications done making changes call endpropertychanges deliver deferred change notifications end deferring perhaps documentation point devs public method", "d": "2/2018"}, {"body": "probably also include changeproperties", "d": "2/2018"}, {"body": "changeproperties needs promise aware code setup authenticator authenticatedcontent trigger trigger boolean trigger amp amp thisget isauthenticated thisbeginpropertychanges thissetproperties isauthenticated true authenticator set thiscontent authenticated authenticatedcontent thisbindtoauthenticatorevents going cause problems deferral global overlapping promises could mean deferral count never goes zero fact could explain symptoms", "d": "2/2018"}, {"body": "bryancrotaz seems fine update docs however major part programming model nt belong guides", "d": "2/2018"}, {"body": "mmun nt sit alongside make multiple changes without triggering lots redraws", "d": "2/2018"}, {"body": "bryancrotaz nope redraws scheduled run loop redraw amount without deferred observers", "d": "2/2018"}, {"body": "ok fewer computed property calculations tldr efficiency", "d": "2/2018"}, {"body": "even", "d": "2/2018"}, {"body": "beginpropertieschange etc runloop magic us", "d": "2/2018"}, {"body": "bryancrotaz anyways absolutely nt need made promiseaware seeing embersimpleauth invalid usage private api", "d": "2/2018"}, {"body": "begin end need embersimpleauth providing value", "d": "2/2018"}, {"body": "generally speaking simple auth example using finally end property changes", "d": "2/2018"}, {"body": "begin end need embersimpleauth providing value dunno dig added personally started used begin end propertychanges suspect digging issue tracker shed light edge case satisfies", "d": "2/2018"}, {"body": "bryancrotaz nt code also years old may factor p", "d": "2/2018"}, {"body": "api surface used public perhaps", "d": "2/2018"}, {"body": "almost surely public least unmarked time", "d": "2/2018"}, {"body": "ok dig experiment submit docs prs worked issue submit prs addons", "d": "2/2018"}, {"body": "bryancrotaz regarding actually ensures key object changes multiple times single observer call occurs finished calling callback", "d": "2/2018"}, {"body": "indeed problem unbalanced beginendpropertieschange private api one using would right add deprecation recommendation use instead", "d": "2/2018"}, {"body": "bryancrotaz awesome unbalancing seems ok deprecate think rwjblue worried introducing extra churn intend make observers async case deferral functions nooped deprecate observers entirely", "d": "2/2018"}, {"body": "agreed think changeproperrties reasonable replacement scenarios furthermore think introduce churn also intend significantly change internals observer system work underway much better picture best direction ultimately type issue actually pretty uncommon sorry ran bryancrotaz", "d": "2/2018"}, {"body": "end similar mechanism new design please try make global return handle passed would much easier debug looking misuse especially defer counter global though pig implement", "d": "2/2018"}, {"body": "strongly agree", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "module", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "fwiw ultimately glimmervm issue", "d": "2/2018"}, {"body": "still needs release update right", "d": "2/2018"}, {"body": "yes close intentionally", "d": "2/2018"}, {"body": "fixed", "d": "2/2018"}, {"body": "generally reserve issue tracker bugs ember seems like qa x type thing better served stack overflow slack going close please cross link post update thread answer find future searchers", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "service yes function actually merely copypaste code also function", "d": "2/2018"}, {"body": "paste whole error message including details properties involved", "d": "2/2018"}, {"body": "descriptorget get descriptor case encountered error thirdparty code nt control information help us improve error message telling us happened situation error assertion failed attempted access property since ember usually fine longer need use access computed properties however case object question special kind ember object proxy therefore still necessary use case encountered error thirdparty code nt control information help us improve error message telling us happened situation new embererror assert objectget isdescriptortrap get classget trycatcher invokecallback publish concerning involved properties hard say error thrown access prototypes service aftermodel hook route make app crash code service helps btw thanks kategengler addon import camelize emberstring import keys emberpolyfills import emberobject emberobject import service emberservice export default serviceextend flags emberobjectcreate setup flags var normalizedflags var flag flags flagshasownproperty flag normalizedflags thisnormalizeflag flag flags flag thisset flags emberobjectcreate normalizedflags showall return thisget flags getproperties keys thisget flags enable flag var normalizedflag thisnormalizeflag flag thisget flags set normalizedflag true thisnotifypropertychange normalizedflag enableall keys thisget flags foreach function flag thisenable flag disable flag var normalizedflag thisnormalizeflag flag thisget flags set normalizedflag false thisnotifypropertychange normalizedflag disableall keys thisget flags foreach function flag thisdisable flag unknownproperty key return thisenabled key enabled flag var normalizedflag thisnormalizeflag flag return thisget flags get normalizedflag normalizeflag flag return camelize flag", "d": "2/2018"}, {"body": "case proxy always returns value either true false afaict always trigger proxy assertion accessing properties properties proxy", "d": "2/2018"}, {"body": "submitted fix", "d": "2/2018"}, {"body": "thanks lot rwjblue heart", "d": "2/2018"}, {"body": "condition system router part rfc looks like able compare without default values maybe intelligent different way nt know enough router triage wihtout help maybe rwjblue locks help us bit", "d": "2/2018"}, {"body": "forked repo", "d": "2/2018"}, {"body": "seems related cc mixonic", "d": "2/2018"}, {"body": "fixed issue dserrors unknownproperty returned null instead undefined proxy assertion allows undefined", "d": "2/2018"}, {"body": "noticing thing ember models example variables renamed protect innocent persistedthings computed things eachisnew function let things thisget things toarray code nt running saving new thing nt even run reloading parent model hasmany another model code run first createrecord called also gets run thing deleted maybe equal check returning wrong value hasmany arrays updated save case", "d": "2/2018"}, {"body": "issue workaround set relationship calling", "d": "2/2018"}, {"body": "thanks original issue already fixed could still use sort deprecation warning", "d": "2/2018"}, {"body": "thanks reporting seems weird rsvp removed cast released minor version bump even though clearly breaking change cc stefanpenner", "d": "2/2018"}, {"body": "submitted bring back", "d": "2/2018"}, {"body": "awesome thank reproduction", "d": "2/2018"}, {"body": "forked repo investigating since two changes related input type one ember one glimmer", "d": "2/2018"}, {"body": "seems bizarre indeed", "d": "2/2018"}, {"body": "let write findings far quite strange background neither component helper referred macro closer explanation work like lowlevel helper case important understand code input look like anything familiar users ember requires template compiler plugin transforms inputtype internal helpers basically checks given parameters returns name component based checking bug first thing noticed error console rendering working past first breaking input looking deeply changing order types would keep result first input would rendered also input inside component required add three inputs directly would work invalidates theory problem handled moreover add input failing component work happening checking devtools execution input macro saw params different length first execution rest rest missing first param one added compiler plugin summary problem input macro handling type problem params passed input macro fails directly", "d": "2/2018"}, {"body": "thanks fix", "d": "2/2018"}, {"body": "sure typo positional parameters named arguments strings never get passed", "d": "2/2018"}, {"body": "somewhat surprised nt result build time error imho", "d": "2/2018"}, {"body": "ah interesting typo updated", "d": "2/2018"}, {"body": "thing observing replaces first argument seems like expected though bizarre behavior", "d": "2/2018"}, {"body": "huh thanks explanation wish work like standard helpers realize would need discussion something parsing error invalid usage helpers would nice concrete create separate issue track progress look help", "d": "2/2018"}, {"body": "expected behaviour oneway binding given changing external value internal one overwritten looking local writes shadow external attributes need internal variable like comes still external value would nt overwritten", "d": "2/2018"}, {"body": "closing", "d": "2/2018"}, {"body": "serabe understand described internally expected behaviour please look reproduction demo especially example explain theory oneway binding two properties oneway binding changing external value well got updated correctly compare example difference two oneway binding props vs one oneway one twoway expect oneway binding props behave equally actually btw open console see logging play example bound value actually changed however got updated rendered dom issue nt questioning oneway binding works internally reveals inconsistency twoway oneway mixed together", "d": "2/2018"}, {"body": "nt really happening given change external state component rerendering shadowing works long external state change see twiddle component lifecicle update part logged", "d": "2/2018"}, {"body": "observing life cycles examples finally understand whats going hood thank much patience clearer explanation makes us feels warm ember community also give us confident use ember", "d": "2/2018"}, {"body": "locally last weekend currently two passing references emberlogger guides could probably go pull request without rfc draft entry deprecation guide written final details depend release timing also coded change emberdebug use emberlogger coded deprecation although think may need go back wrap feature flag reworked tests intercepted emberlogger intercept console instead maybe four router tests never set back exit calling run transition two concerns little existing tests passing due issue router tests need verify whether test leakage browser console identical change get busy elsewhere week hoping deprecation completed feature flag weekend rfc exits fcp sure comprehensive way review api docs besides bulk searches source anyway think done right things code comments properly mark deprecation idea build api docs see final effect leaves codemod review addons need little help", "d": "2/2018"}, {"body": "far following prs couple logger references merged closed already deprecation code one reference logger merged closed already corresponding deprecation page corresponding deprecation page", "d": "2/2018"}, {"body": "encountered couple unexpected speedbumps using console edge simple page attachment used easily observe console uses pose problem easy workarounds try edge without developer tools try browsers tryconsolezip", "d": "2/2018"}, {"body": "uhoh realized walking emberobserver emberresolver list many projects", "d": "2/2018"}, {"body": "lupestro sure understand", "d": "2/2018"}, {"body": "wake discussion locks issue emberresolver", "d": "2/2018"}, {"body": "running yarn results c yarn install yarn install validating packagejson resolving packages fetching packages info fsevents platform incompatible module info fsevents optional dependency failed compatibility check excluding installation linking dependencies warning gt eslintconfigsimplabs unmet peer dependency eslint gt warning gt eslintpluginmocha unmet peer dependency eslint warning gt sinonchai unmet peer dependency sinon building fresh packages success saved lockfile done seemed complaining eslint installed decided address eslint warnings installing eslint used one bc good reputation top addins readmemd file says install thus ember install emberclieslint project installing asked wanted overwrite two files embersimpleauth said yes think said program still runs albeit error show bottom post keep reading tried reinstall emberdecoratorsbabeltransforms seemed install ok c ember install emberdecoratorsbabeltransforms deprecation addon trying access projectnodemodulespath reliable way discover npm modules instead consider require resolve sync something basedir projectroot accessed new npmdependencyversionchecker c yarn installed emberdecoratorsbabeltransforms installed addon package question work correctly show auth app answer couple glitches yes c ember deprecation addon trying access projectnodemodulespath reliable way discover npm modules instead consider require resolve sync something basedir projectroot accessed new npmdependencyversionchecker c warning emberdecorators used emberpopper installed emberdecoratorsbabeltransforms extracted separate addon see instructions installation notice still complaining emberdecorators wait c error aftereach defined noundef problem error warnings c error aftereach defined noundef problem error warnings c error aftereach defined noundef problem error warnings build successful serving app served fastboot author note shows auth demo despite errors hurrah follows trying app able login view protected page logout protected page redirected login page expected ok get ms get emberclilivereloadjs ms avg get assetsdummycss ms get assetsdummyjs ms ms get assetsvendorcss ms ms get assetsvendorjs ms ms get faviconico ms ms post token ms get ms get posts ms get ms post revoke ms ok get ms get emberclilivereloadjs ms get assetsvendorcss ms get assetsdummycss ms get assetsdummyjs ms get assetsvendorjs ms post token ms get posts ms get ms get posts ms get posts ms get posts ms post revoke ms ok get ms get emberclilivereloadjs ms get assetsvendorcss ms get assetsdummycss ms get assetsvendorjs ms get assetsdummyjs ms post token ms get posts ms get ms get posts ms get posts ms post revoke ms ok get ms get emberclilivereloadjs ms get assetsvendorcss ms get assetsdummycss ms get assetsdummyjs ms get assetsvendorjs ms", "d": "2/2018"}, {"body": "ps conclusions test shortly download embersimpleauto demo app run yarn yet install eslint perhaps cause warnings saw occur bc eslint present run yarn run yarn point install asked want overwrite two files auth code two files eslint suggest either compare files andor choose overwrite two files seem specific auth testing", "d": "2/2018"}, {"body": "please provide reproduction absolutely possible maybe error specific test question", "d": "2/2018"}, {"body": "code js export function initialize appinstance let loggerservice appinstancelookup service logger return loggerserviceget enabled export default initialize test js import application emberapplication import run emberrunloop import initialize dummyinstanceinitializersmyinit import module test qunit import destroyapp helpersdestroyapp import emberobject emberobject module unit instance initializer init beforeeach run gt thisapplication applicationcreate thisappinstance thisapplicationbuildinstance aftereach run thisappinstance destroy destroyapp thisapplication test return true function assert thisappinstanceregister service logger emberobjectextend enabled true assertok initialize thisappinstance error happened booted app tests possible mock service first real issue", "d": "2/2018"}, {"body": "yes see need use service register service closing thank", "d": "2/2018"}, {"body": "serabe could try latest ember works perfectly change im still getting error also forgot mention happening addon project", "d": "2/2018"}, {"body": "think related new rfc", "d": "2/2018"}, {"body": "tested bug still present", "d": "2/2018"}, {"body": "hmm set meta property always use weakmap", "d": "2/2018"}, {"body": "exactly error get ie see error refresh error dutch ie error believe english translation error shown nt use object freeze test something", "d": "2/2018"}, {"body": "rwjblue fixed ember see ie", "d": "2/2018"}, {"body": "thank testing reporting back", "d": "2/2018"}, {"body": "closed pr merged", "d": "2/2018"}, {"body": "would mind updating demo use may addressed glimmervm update", "d": "2/2018"}, {"body": "hi rwjblue created temporary repo emberjs installed bug still present", "d": "2/2018"}, {"body": "thank sorry delays try carve time dig least figure things going wrong", "d": "2/2018"}, {"body": "good thanks wrote failing test well push next couple minutes", "d": "2/2018"}, {"body": "ran probably issue component trigger component tagless htmlsafe empty string start template component used block includes least one newline", "d": "2/2018"}, {"body": "thank", "d": "2/2018"}, {"body": "skwai reproduce issue please provide one", "d": "2/2018"}, {"body": "skwai ping", "d": "2/2018"}, {"body": "olo main ember app loc dir contextscale", "d": "2/2018"}, {"body": "thank lt", "d": "2/2018"}, {"body": "think close believe folks aware working issue much end", "d": "2/2018"}, {"body": "believe docs wrong would love pr fixing", "d": "2/2018"}, {"body": "seems fixed", "d": "2/2018"}, {"body": "closing seems gone stale happy reopen still issue", "d": "2/2018"}, {"body": "whoops sorry", "d": "2/2018"}, {"body": "closing fix current lts", "d": "2/2018"}, {"body": "gon na assume safe close", "d": "2/2018"}, {"body": "gschulze seeing", "d": "2/2018"}, {"body": "documentation updated reflect array proxy special behavior", "d": "2/2018"}, {"body": "think likely add functionality embercopy ways address issue eg buffered proxy likely serve better long run thank pushing forward going close mostly wontfix", "d": "2/2018"}, {"body": "glimmer using directly longer issue", "d": "2/2018"}, {"body": "enumerable events removed still around add deprecation separately", "d": "2/2018"}, {"body": "initial post hooks mentioned pretty extreme example illustrates problem besides init didinitattrs didreceiveattrs willinsertelement willrender also happens synchronously rendering process additionally backtracking often issue arising behavior twoway bound properties hooks working like charm hooks fail error", "d": "2/2018"}, {"body": "fixed", "d": "2/2018"}, {"body": "closing issue clear error ember please chime like us reopen issue", "d": "2/2018"}, {"body": "closed", "d": "2/2018"}, {"body": "locks link pr incorrect reverted pr introduced another issue perhaps issue fixed another pr perhaps issue still open", "d": "2/2018"}, {"body": "oops someone posted triage channel reopening", "d": "2/2018"}, {"body": "still bug ember fixes horizon", "d": "2/2018"}, {"body": "hi facing issue ember method nt trigger hook kindly assist get", "d": "2/2018"}, {"body": "rwjblue would copying docs router microlib repo embersource acceptable way get documented", "d": "2/2018"}, {"body": "ya want make sure understand disappeared begin first suspect gone due refactors eg path changes micro lib perhaps yuidoc config needs updated match new paths", "d": "2/2018"}, {"body": "rwjblue yes probably suggested would nt happen", "d": "2/2018"}, {"body": "rwjblue maybe removed class marked private something weed classes", "d": "2/2018"}, {"body": "since private would improvement declare documented transition methods interface ember documentation mark parameter interface instead fact parameter instance private class routerjs feels like realm intimate api", "d": "2/2018"}, {"body": "fullsailor good way create interfaces ember docs", "d": "2/2018"}, {"body": "wycats limited knowledge scanning ember docs examples interface ember though least one similar bit api marked private methods documented guides therefore actually public like saying one objects allowed call methods nt go instantiate redefine transition public class private constructor though speculating marked private removed docs first place", "d": "2/2018"}, {"body": "fullsailor wycats transition marked private still docs would click privatedeprecated checkbox think happened change configuration like rwjblue said wacky things get documented first place nt want docs imported think copy transition docs wo nt happen", "d": "2/2018"}, {"body": "encountered well surprised learn nt implement reasonable default two proxy objects class content considered equal imo", "d": "2/2018"}, {"body": "modelfactoryinjections removed", "d": "2/2018"}, {"body": "emberjs might think property changed fact might say bound normal javascript array change field somewhere within able say trust ember changed update", "d": "2/2018"}]