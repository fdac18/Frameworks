[{"title": "expose event focusable element", "body": "curious earlier event works things form elements elements disabling couple conditions code seems first brush least works splendidly element focusable via attribute obtain things like would problem relaxing conditions allowing include elements attribute case existing implementations userland rely event disabled removed element", "num": "12309", "d": "2/2018"}, {"title": "reset state", "body": "like function would reset state react start rendering scratch currently code causes duplication virtual dom react tab devtools shows node twice documentbodyinnerhtml reactdomrender documentqueryselector app page change documentbodyinnerhtml reactdomrender documentqueryselector app possible unmount container element lost prevent duplication vdom documentbodyinnerhtml reactdomrender documentqueryselector app reactdomunmountcomponentatnode documentqueryselector app lt unmount remove page change documentbodyinnerhtml reactdomrender documentqueryselector app however sometimes difficult bind event change router code legacy app react used rendering page page destroyed router decides change page another react nt get container element since ca nt call change change rendering lost container element would useful function reset react state rendering new page documentbodyinnerhtml reactdomrender documentqueryselector app page change documentbodyinnerhtml reactdomreset lt nt care previous state want render component scratch would rendering reactdomrender documentqueryselector app name nt called within point rendering duplicate virtual dom since container element changed", "num": "12308", "d": "2/2018"}, {"title": "get dom htmlelement instance reference order use scrollintoview api", "body": "implementationusage question like use native elementscrollintoview api react app scroll components code use need reference html element want scroll using react ref prop returns reference react component htmlelement dom instance ca nt use desired api way get access html dom element order use native scrollintoview api versions use react chrome browser latest", "num": "12307", "d": "2/2018"}, {"title": "best practice new react context api", "body": "new context api really great lot thanks efforts enabled us efficient easier way write react app still consider much boilerplateverbosity use leaf component everytime may write like published npm package think easiest way use new context api could use decorator like jsx import withtheme use anywhere import withtheme withtheme withtheme export default class leafcomponent extends reactpurecomponent suggesting adding official implement would think please give try tell think really appreciate attention", "num": "12306", "d": "2/2018"}, {"title": "inspect element hover", "body": "using mouseenter mouseover hover using html css know debug hover inspect elememt debug mouseover mouseenter inspect element dev tools react normal", "num": "12305", "d": "2/2018"}, {"title": "nt synchronize property value attribute especially value attribute", "body": "read repo", "num": "12302", "d": "2/2018"}, {"title": "state change td element", "body": "displaying tabular rows setting data td element state change displays currently updated td element dataall ones go missing screen thing placed within text box td element things work fine following sample code working code failing code", "num": "12301", "d": "2/2018"}, {"title": "safe read currentownercurrent assume statenode", "body": "might mean assumption like leads runtime failure dev fix code sites", "num": "12299", "d": "2/2018"}, {"title": "errors thrown componentunmount nt reported proper timings", "body": "want request feature report bug bug least qa respect current behavior creating testcase handle error thrown reported asynchronously since react errors reported last test cases bunch virtually lacks reproducibility rely current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example please clone repository execute expected behavior report errors every test case provide proper way handle especially testing already exists versions react browser os affected issue work previous versions react react", "num": "12297", "d": "2/2018"}, {"title": "ci danger failing auth errors", "body": "see", "num": "12292", "d": "2/2018"}, {"title": "syntax error reactis package", "body": "trying use reactis syntax error stopping imported", "num": "12287", "d": "2/2018"}, {"title": "strange behavior conditional rendering", "body": "want request feature report bug bug gives error warning message clear error wrap code div works fine gone wrong thanks", "num": "12286", "d": "2/2018"}, {"title": "scriptsjestmatcherstowarndev expected actual arguments mixed", "body": "want request feature report bug bug current behavior calls jestdiff b calls diffstrings b default annotated green red expected behavior pass expected values actual received values", "num": "12285", "d": "2/2018"}, {"title": "scriptsjestmatcherstowarndev unexpected warning recorded null null caused jestdiff returning null", "body": "want request feature report bug bug current behavior example actual warning multiline output message received matcher confusing rendering react components document new explicit hydration api render w markup full document expected behavior expected least show original expected messages without fancy upstream bug", "num": "12284", "d": "2/2018"}, {"title": "holl", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12283", "d": "2/2018"}, {"title": "bensin", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12282", "d": "2/2018"}, {"title": "mgm", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12281", "d": "2/2018"}, {"title": "typeerror read property valuetracker undefined", "body": "want request feature report bug bug current behavior worked branch error happened current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example error shows time radio clicked expected behavior opened pr versions react browser os affected issue work previous versions react branch notice error fixed", "num": "12280", "d": "2/2018"}, {"title": "development production find", "body": "want request feature report bug primary question secondary maybe tiny feature request question official way find whether imported react package development production module reactdevelopmentjs vs reactproductionminjs obviously something like think agree really evil solution answer question would possible add something like respectively something similiar react object useful sure first thought use usual webpack processenvnodeenv stuff assume react addon library library two different packages depending environment eg fancyreactaddondevelopmentjs vs fancyreactaddonproductionminjs also assume whatever reasons make sense maybe even allowed use react development module combination production module addon library vice versa would great directly import error thrown module combination invalid independent webpack processenvnodeenv maybe user addon library use tools javascript assume fancyreactaddonproductionminjs reactenvironment production throw new error use react production packages details course also use cases feature would also handy even necessary hope use case already convincing versions react browser os affected issue work previous versions react", "num": "12277", "d": "2/2018"}, {"title": "eventcurrenttargetvalue returns undefined react", "body": "upgraded react using give undefined basically stateless child component fire callback clicked pass extra params dom api value field parent component callback follows param accessible anymore looked event returned versions react looks like whereas react react intentional change go passing params callback nt really want use arrow functions since affects performance", "num": "12276", "d": "2/2018"}, {"title": "state updated doesnt update dom", "body": "hi want feature bug thistogglehidden gt thisstateistoogle misc thisstateistoogle amp amp members plugins add member condition update image chevron nothing happen use code everythings fine someone help please version react cheers", "num": "12275", "d": "2/2018"}, {"title": "warning invalid prop arialabeledby tag element", "body": "want request feature report bug bug current behavior react throws warning use arialabeledby warning invalid aria prop tag details see expected behavior waiaria shows ways implementations wacg link aria technique im developing website use android talkback runs fine arialabeledby attrs like ariadescribedby versions react browser os affected issue work previous versions react react version browser version chrome versi\u00f3n build oficial bits os ubuntu mobile extra info talkback android version talkback version", "num": "12274", "d": "2/2018"}, {"title": "input replacement bugchanging controlled input", "body": "want request feature report bug appears bug current behavior codesandbox quick development solutions listed codesandbox readme demo warning open debugging console wait secs settimeout line change state observe warning console warning component changing controlled input type text uncontrolled happening react updating necessary input elements react adds additional properties placeholder title readonly changes existing property value input replaced rather replacing entire input results controlled status changing dom input element persists value expected behavior old input element replaced new input uses placeholder text use case described origin section codesandbox readme actual desired behavior unknown versions react browser os affected issue work previous versions react react version chrome version official build throw warning may production version dom input value persisted codepen react version think", "num": "12273", "d": "2/2018"}, {"title": "react new error handling results data loss forms react typing", "body": "discussed similar problems error happens ex textarea widget unmount entire app previously user could copy paste text form even page behaving strangely print whatever error anywhere part system even third party dependency browser feature results immediate data loss user ex counter shows number words type bug users would sometimes lose text typed totally understand motivations feature models native apps crashing nt really work well least us web tangle third party dependencies exist today see works well facebook since control every dependency fix bugs across needed instead set third party dependencies one bug end stuck app randomly breaks shows blank users guess could put error boundary around every widget entire page hard enforce still results data loss scoped understanding ca nt render per discussion mentioned bug since throw destroys statefulness various browser widgets ex video plugins feature made opt", "num": "12271", "d": "2/2018"}, {"title": "react passes empty spaces children react components", "body": "want request feature report bug report bug current behavior passing empty string inside react element treated child current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example syntax make notice empty space react fills thispropschildren variable myreactcomponent expected behavior thispropschildren property myreactcomponent contain one children versions react browser os affected issue work previous versions react version chrome mac os high sierra", "num": "12270", "d": "2/2018"}, {"title": "component return null font awesome sibling throws domexception", "body": "want request feature report bug bug current behavior following react code throw exception firefox chrome throw current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example jsfiddle showing example code simply sets class either show hello wordl null wraps component hoc simulate changing data remove works wrap tag works change classname element well work expected behavior expect work like versions react browser os affected issue work previous versions react react version chrome version mac os x firefox version mac os x", "num": "12269", "d": "2/2018"}, {"title": "checkboxes handling going wrong", "body": "weird issue button called assign click modal userslist checkboxes opens modal confirm cancel button buttons functionality click confirm checked unchecked data matter selection made save click cancel data revert back confirmed saved data built component loading initially copying state copystate changes saved original state confirmed cancelled original state changes copied copystate happening state getting updated matter change make copystate copystate original state data somebody help render method assign handler cancel method confirm method", "num": "12268", "d": "2/2018"}, {"title": "componentwillunmount cancel requests", "body": "write perform necessary cleanup method invalidating timers canceling network requests people say ways cancel request mean canceling network requests would please share knowledge", "num": "12266", "d": "2/2018"}, {"title": "componentdidcatch unhandled", "body": "want request feature report bug sure tbh current behavior global handler unhandled errors windowaddeventlistener error evt gt use componentdidcatch function gets called correctly render throws exception global error event also triggered componentdidcatch call expected behavior since componentdidcatch handles error prefer global event nt triggered usual trycatch block least way figure evt object event handler exception caught react hope made sense", "num": "12262", "d": "2/2018"}, {"title": "setstate callbacks getting executed expected order", "body": "want request feature report bug bug versions react browser os affected issue work previous versions react v sure worked previous versions current behavior following piece code called multiple times quickly without executing callbacks completing expected callbacks executed correct order corresponding scope contrary expected behavior callback later value called first one older value next eventually calling older value upon debugging following piece code enqueuecallback function publicinstance callback callername reactupdatequeuevalidatecallback callback callername var internalinstance getinternalinstancereadyforupdate publicinstance setstateinternalinstancependingcallbackssetstate executed expected behavior expected callbacks registered executed order known bug mistake made", "num": "12261", "d": "2/2018"}, {"title": "create first visit popup react application using reactpopup module", "body": "make first visit popup react application possible implement using reactpopup module used module seem work check let know wrong homepage component import react component react import homepagecss import carousel nukacarousel import headercomponent componentsheaderheaderjs import decorators decoratorsjs import popup reactpopup export default class homepage extends component redirectpage gt windowlocation dashboard componentwillmount popupalert component render var mixins carouselcontrollermixin return homepage content", "num": "12260", "d": "2/2018"}, {"title": "display pop first time user visit react application", "body": "make first visit popup react application possible implement using reactpopup module used module seem work check let know wrong homepage component import react component react import homepagecss import carousel nukacarousel import headercomponent componentsheaderheaderjs import decorators decoratorsjs import popup reactpopup export default class homepage extends component redirectpage gt windowlocation dashboard componentwillmount popupalert component render var mixins carouselcontrollermixin return component carousel", "num": "12259", "d": "2/2018"}, {"title": "feature request checksum error reporting production", "body": "process enabling ssr unsplashcom would like track checksum errors occur however knowledge checksum errors reported production way tracking need might accidentally introduce change results checksum error want know quickly possible case avoid checksum errors must ensure first client render matches server render easy slip working better infrastructure make impossible eg state accessible enhanced renders ie first client render meantime need know break something", "num": "12258", "d": "2/2018"}, {"title": "warning message socketon", "body": "got problem socket spamming warning line idea improve thanks componentdidmount thissocketon emitloadcandidates data gt data undefined thissetstate isreading false servicesinsertcandidate data", "num": "12257", "d": "2/2018"}, {"title": "strange behavior conditional rendering bypassing props functional component", "body": "bug got today parent component includes nested child component prop passed prop named way variable get value idk important prop used later conditional render jsx block first cycle component gets prop correct way null passed jsx block nt render next cycle prop gets value insted null also works finally prop got null agian like beginning condition nt work proper block still appears code trivia jsx nt work proper const parent someprop gt const child someprop gt someprop null works great const parent somebigprops gt var someprop somebigpropssomeprop real code shots", "num": "12255", "d": "2/2018"}, {"title": "obfuscating bundlejs unauthenticated users", "body": "using react reactrouterdom redux reactredux simple scenario website reactjs php backend restful service backend want bundlejs code exposed unauthenticated users looked everywhere solution seem find one possible react js frameworks understand user unauthenticated data would injected bundle would rather unauthenticated users see anything admin panel solution", "num": "12252", "d": "2/2018"}, {"title": "react still require nontoplevel submit handler", "body": "want request feature report bug bug maybe current behavior using nondelegated handler submit event expected behavior least know submit event bubbled versions react browser os affected issue work previous versions react", "num": "12251", "d": "2/2018"}, {"title": "concern", "body": "read concerned new api wo nt flexible enough cover common use cases instance scrolling tabs component whenever prop changes use browser apis scroll tab view would best way accomplish without currently code something like js class tabs extends reactcomponent render return thispropstabsmap tab gt componentwillreceiveprops nextprops nextpropsselectedtabid thispropsselectedtabid documentqueryselector scrollintoview", "num": "12249", "d": "2/2018"}, {"title": "daniel baker email messages", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior versions react browser os affected issue work previous versions react", "num": "12248", "d": "2/2018"}, {"title": "support changing portal container without remounting children", "body": "related working project lot globally unique component instances words essentially database ids also dnd functionality reordering everything fine moving instance one parent another causes complete rerender instance instead moving nodes around thinking using portals instance prop element id render inside reparent simple case passing different element id using redux state however changing portal container node also causes complete rerender everything passed see codepen would possible skip rerendering effectively move portal contents instead", "num": "12247", "d": "2/2018"}, {"title": "context update nt fully propagate cases", "body": "think may bug context latest alpha updates scheduled commit phase nt seem propagate enter mon erase click dark mode expected children update actual children nt update seems happen indirection", "num": "12246", "d": "2/2018"}, {"title": "context providers maybe consumers show unknown performance tab", "body": "noticed alpha think need support else could skip altogether", "num": "12245", "d": "2/2018"}, {"title": "children consumer without new line gives typeerror render function", "body": "want request feature report bug bug current behavior get confusing error using new line children consumer un new context api error fix expected behavior component getting redered versions react browser os affected issue work previous versions react chromium archilinux react nt support new context api", "num": "12241", "d": "2/2018"}, {"title": "error trying createcontext", "body": "want request feature report bug bug current behavior error invariant violation element type invalid expected string builtin components classfunction composite components got object check render method current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example basically returning seems cause weird error wrong js import react createcontext react import render reactdom import hello hello const themecontext createcontext background yellow color white const styles fontfamily sansserif textalign center const app gt return start editing see magic happen render documentgetelementbyid root expected behavior render correctly even though havent implemented consumer also didnt help versions react browser os affected issue work previous versions react", "num": "12239", "d": "2/2018"}, {"title": "new react component definition autobind", "body": "nt know exactly planned auto bind methods would nice yeah know property initializers still user think suppose state stored object closure logs component object ideally nevermind feel free close issue without explanation curious reasoning behind new design", "num": "12238", "d": "2/2018"}, {"title": "new context require explicit interface", "body": "read post new context understood creating problems rather solving one please correct wrong previous context opinion achieved called means nt need explicitly api use instead define api provide using expect implicitly provided runtime design helps decouple api providers api consumers react component tree believe original idea context also applied golang would understand talking used new context consider example javascript xjs const x reactcreatecontext x export default x consumerjs import x complexprojectx problem class something extends reactcomponent render return x context every consumers x worked industry years got pain enough understand bad complex heavy dependency graph code good explaining things english please help explain problem got", "num": "12236", "d": "2/2018"}, {"title": "extracting context stack", "body": "useful feature context creating custom stack things see component embedded side think primary use case logging explicitly currently pretty expensive maintain case need see example could provide api lazily extracts whole path contexts tree would basically synchronously rerender shortest path recreate context time call create stack lazily cc acdlite", "num": "12235", "d": "2/2018"}, {"title": "context transform", "body": "new context api really bulky create middle man consumes one context value transforms provides another one create many components store intermediate state avoid rerendering provider input unchanged could convenience api use case js function transform inputvalue return inputvalue extradata cc acdlite", "num": "12234", "d": "2/2018"}, {"title": "ordering componentwillmountunmount react", "body": "problem seems ordering longer guaranteed react due support async previously always called old components removed called new components example form component inputs register parent form deregister allows form keep track global state inputs following scenario cause form throw error ordering longer guaranteed scenario possible form try register input name previous input unmounted allowed question understand reasoning behind change wondering suggested solution code previously relied firing obvious solution comes mind moving step however means deal unnecessary rerender upon mounting input still correct approach", "num": "12233", "d": "2/2018"}, {"title": "way hint hydration reuse dom nodes", "body": "want request feature report bug feature request since current opinion rather weird behaviour wai current behavior render additional dom client hydrating works partially new dom nodes get confused ones rendered server even though obvious addition server rendered elements get reused css classes would argue behavior would acceptable component state matched serverside state example use state change componentwillmount drive diff current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example clone run expected behavior current behavior truly intended would like way explicitly hint react hydrate specific nodes suggestion nodes property reuse value matches similar react knows handle changes arrays limited knowledge hydration works maybe shows afaik would virtually performance impact still allow client pure additions dom versions react browser os affected issue work previous versions react using react well yes worked react", "num": "12232", "d": "2/2018"}, {"title": "using reactportal newly opened window", "body": "want request feature report bug bug current behavior interactivity highly used react component reacttable newly opened window injected via react portal code based article click open button table opens new window interactivity expected behavior component work docked mode versions react browser os affected issue work previous versions react chrome", "num": "12231", "d": "2/2018"}, {"title": "issue error boundaries custom error types", "body": "think may found bug react defined custom error type react application throwing error boundary defined top application component tree whose purpose catch uncaught errors display error page error boundary catching custom error nt able distinguish error type put simply custom error types created following syntax error boundary perspective simply errors type illustration even though explicitly throwing error boundary method thinks error argument type crazy bug react issue reproduced code documented butin nutshell implemented application component wraps contents error boundary custom error thrown subcomponent custom typing gets lost somewhere along way error boundary perspective error thrown type custom type defined application also stackoverflow expected behavior custom error types would preserved crossed error boundaries tested reactreactdom chrome macos", "num": "12228", "d": "2/2018"}, {"title": "provide way perform synchronous render another root commit phase", "body": "want request feature report bug bug current behavior reentrancy checks prevent synchronous nested react component used work react seems related issue nested reactdom renders current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example jsfiddle documents problem simulation external dependency manifests expected behavior running think similar problem one nested except difference nt think use portals address usecase component manages dom tree nodes outside react contenteditable node uses bestinclass prosemirror library manage children component looks something like javascript class prosemirror extends component componentdidmount prosemirror manages dom nodes thisel part render cycle configuration prosemirror ends calling render isolated child node wants able immediately afterwards able leverage piece dom longer available synchronously looks like reentrancy change came react portals nt work us site called nt directly part root react tree clearer observe fiddle hierarchy something like way skip reentrancy checks cases isolated react render happening grandchild component react tree nt immediate parent versions react browser os affected issue work previous versions react querying dom immediately reactdomrender worked versions prior react excited async possibilities main react tree curious workarounds ignore reentrancy checks isolated renders", "num": "12227", "d": "2/2018"}, {"title": "ok put random things divroot", "body": "put initial text divroot element eg p tag text div canvas saw many people put entire rendered markup divroot hack seo happen divroot childnode erased put random things right thank patience", "num": "12226", "d": "2/2018"}, {"title": "new chrome iframe spec requires allow attribute use devices", "body": "want request feature report bug sure maybe feature side current behavior opening iframe third party site need access user camera new specs chrome states since version need add attribute order access things like camera microphone however react recognise attribute removes therefore nt access user camera error displayed console allow expected behavior tag known versions react browser os affected issue work previous versions react react version real possibilities change yet chrome version official build os macos sierra sorry already reported could nt find another issue mentioning", "num": "12225", "d": "2/2018"}, {"title": "uncaught typeerror function", "body": "want request feature report bug bug current behavior got following behavior import searchareajs indexjs searchareajs import react component react import searchareaclasses searchareacss class searcharea extends component state showfederalstate false export default searcharea import searcharea searchareasearcharea render return got following error console remove searchareajs defined state work like charm versions react browser os affected issue work previous versions react react v google chrome mac os", "num": "12223", "d": "2/2018"}, {"title": "important note", "body": "", "num": "12222", "d": "2/2018"}, {"title": "select input field working works change text input", "body": "building simple react text generator mostly finished except one problem ca nt seem solve select input nt work read documentation nt see problem code tried changing select input text input worked number input works fine pretty much exact code component import react component react class select extends component constructor props super props thisstate value propsvalue export default select appjs import react component react import appcss import output componentsoutput import select componentscontrolsselect import text componentscontrolstext class app extends component constructor props super props thisstate paras format html text componentwillmount thisgetsampletext getsampletext fetch res gt restext text gt thissetstate text text gt consolelog thisstate catch err gt consolelog err showformat x thissetstate format x thisgetsampletext changeparas number thissetstate paras number thisgetsampletext render return react text generator format paragraphs export default app help greatly appreciated also sorry messed formatting", "num": "12221", "d": "2/2018"}, {"title": "contextconsumer unexpectedly updates time one child components call setstate", "body": "want request feature report bug report bug current behavior time child component calls parent rerenders current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior presumably expected behavior one setting state child component affect parent components particularly state change versions react browser os affected issue work previous versions react versions browser chrome osx works expected previous context api used", "num": "12218", "d": "2/2018"}, {"title": "warning reactcreateelement type invalid expected string", "body": "taking tutorial learn react js everything fine days could run example simple carrying recommended basic configuration plus addons add recognize javascript version several days longer reviewing project working correctly executing command see error show anything browser multiple errors appear console one uninstalled reinstalled reac reactdom problem still persists try new project cloning friend works normally copied structure mine warning reactcreateelement type invalid expected string builtin components classfunction composite components got undefined likely forgot export component file defined might mixed default named imports error occurred one react components consider adding error boundary tree customize error handling behavior packgejson webpackconfigjs const path require path const config entry srcindexjsx output path pathresolve js filename bundlejs moduleexports config appjsx import react component react import render reactdom class app extends component render return mi aplicacion react js probando la exportacion export default app indexjsx import react component react import render reactdom import app componentsappjsx render documentgetelementbyid appstart indexhtml", "num": "12214", "d": "2/2018"}, {"title": "autofocus issue firefox going react", "body": "got strange issue might bug firefox quantum sure tried upgrading react noticed pages give flash unstyled content isomorphic app even js turned see thing happens pages use autofocus attribute firefox version mac maybe react developer give scenario try see see anything strange server side rendered template regular stylesheet document head react reactdom version create page load latest firefox issue present chrome safari present remove autofocus attributes cc gaearon maybe something autofocus attribute changes recently", "num": "12211", "d": "2/2018"}, {"title": "warn stringifying attribute takes long", "body": "react nt attribute whitelist would valid objects get stringified added attributes smooth migration path lot existing code already depends behavior however one pitfall sometimes made realize includes object whose stringifying unusually expensive example deeply nested immutable map would nt produce error would slow rendering good reason could protect putting counters around places stringify attributes stringification takes say milliseconds something bad going probably warn", "num": "12209", "d": "2/2018"}, {"title": "reacthydrate match", "body": "want request feature report bug bug current behavior match current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example component use show error expected behavior show versions react browser os affected issue work previous versions react react os mac os x browser chrome official build", "num": "12208", "d": "2/2018"}, {"title": "precompile renderers prepack", "body": "filing future work anyone wants take feel free easiest task wo nt able answer lot questions largely fun though want remove much indirection hot paths however react reconciler abstracted away underlying platform renderer host config example reactdom says insert dom node reconciler uses function problem get function passing config object around extra code around extra indirection runtime note approach significantly reduce code size hope could make runtime bit efficient ideally want compiled reconciler code directly include calls dom apis already use closure compiler helps inlining smart enough see functions host config fully inlined object never escapes bundle prepack smart enough actually executes initialization code hypothetical new approach run prepack first get rid intermediate representations run closure compiler top less indirection means closure compiler smarter inline made proof concept shows dom methods successfully end right reconciler hot paths like want proof concept hacky done outside build workflow wo nt sending pr roughly try first need add prepack build workflow roughly shows done even though give broken bundle need make sure include maybe options still broken main reason breaks immediately umd wrapper emitted rollup prepack nt understand soup checks means nt think easy way model without changing prepack found easier change function return tell rollup output simple factory pattern assigns global enough start hacking course work browser prepack still confused things found easiest take rollup bundle save disk manually tweak rerun prepack cli afterwards could quickly get idea exactly breaking common cases access prepack nt know probably possible get around modeling react abstract global ie something like prepended input bundle nt get far replaced bundle need proper fix access initialization cases like shimmed something like cases like probably wo nt work nt know model abstract cases nt clear made initialize lazily prepack executes initial path code like js var supportsomefeature documentdocumentmode lt function shoulddosomething supportsomefeature could written like js var didinit false var supportsomefeature function ensureready didinit return didinit true go wild supportsomefeature documentdocumentmode lt function shoulddosomething ensureready supportsomefeature super happy works like places ends necessary maybe model abstracts nt know prepack well nondeterministic calls like sure shimmed string literals maybe teach prepack also abstract string somehow say fix immediate issues get excited first bundle huge prepack preevaluates metaprogramming code like turn giant precomputed object literals final values one way solve remove code like tricky although time move direction another way delay initialization prepack preexecutes initial path change code lazily initialize objects eg functions use called first time already work find places css prefixes mentioned css prefixes dom property configs cases prepack explodes solving get back roughly bundle size normal react super hacky version made event plugins lazy injected first call way prepack nt attempt preevaluate paths contains explosive objects maybe better way eg making lazy somehow avoiding need objects altogether get rid host config needed make sure parts like mutation object nt referenced inner closures otherwise prepack wo nt know safe omit added early used destructured functions point bundle already hundred bytes smaller original one host config indirection gone final problem bumped gcc running memory reason prepacked input puts pressure able work around manually bumping process memory limit peaks around compiles sum fun evening hack probably viable longer term strategy need think solve object initialization issues whether want make things lazy course also need figure integrate build properly eg readd umdnode headers later model prepack think fun task work motivated contributors tag one please nt expect result would get merged mostly exploratory work would awesome see working pr though", "num": "12206", "d": "2/2018"}, {"title": "prefix private api fields context object", "body": "safe read obvious even nt document others people think safe prefix unsafe ones underscores even longer prefixes like", "num": "12203", "d": "2/2018"}, {"title": "rowspan colspan render inconsistent case", "body": "js renders dom js renders sure preferred consistent right js class hello extends reactcomponent render return consolelog reactdomserverrendertostring html", "num": "12202", "d": "2/2018"}, {"title": "regression react automatically marks first item mutliple select checked", "body": "want request feature report bug bug regression current behavior react creating first child automatically getting marked selected react seem way specify gets selected default expected behavior react unless marked option selected options selected default versions react browser os affected issue work previous versions react versions effected include worked bug reproducible chrome firefox hacky workaround found get around first option getting selected inject first child multiselect", "num": "12200", "d": "2/2018"}, {"title": "warn componentnameproptypes", "body": "want request feature report bug feature current behavior sometimes boss stressing add prop types way notice uppercase p proptypes react warn typo expected behavior love get warning sake whenever mistype would actually love implement pull request could nt find anywhere else warning static properties like would like put code", "num": "12197", "d": "2/2018"}, {"title": "bug gulputil deprecated react", "body": "hi everyone problem react run command npm install log npm install npm warn deprecated gulputil gulputil deprecated replace following guidelines resolve conflict project see variant migrate new react version dangerous pain variant fix react source code change gulputil use packages instruction possible help ps sorry english", "num": "12196", "d": "2/2018"}, {"title": "requesting localization tl tagalog filipino", "body": "would like ask translate documentation tagalog filipino", "num": "12195", "d": "2/2018"}, {"title": "stub document object link click", "body": "hi trying mimic function called link click react getactiveclass e navdata const elements documentbodygetelementsbyclassname camnavpanelrewardsmenu getelementsbytagname li describe camnavpanellistitem isredirect false plus highlight li gt let wrapper let please help getting getelementsbytagname undefined", "num": "12194", "d": "2/2018"}, {"title": "feature implement method get sync state since async", "body": "want request feature report bug feature request current behavior expected behavior", "num": "12193", "d": "2/2018"}, {"title": "add oldprops additional argument getderivedstatefromprops", "body": "want request feature report bug feature current behavior receives nextprops previousstate arguments current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example deprecated used allow code like new function choice static method constantly copy state order access later illustrated example posted twitter gaearon expected behavior ideally difficult implement would also take current previousold props argument something like would eliminate need constantly assign props state purely comparison purposes quick look source nt make clear easy would though versions react browser os affected issue work previous versions react", "num": "12188", "d": "2/2018"}, {"title": "update shouldcomponentupdate docs advice closures", "body": "want request feature report bug possible bug depending understanding new context feature current behavior presence component blocking updates context consumers first click toggle top data expected behavior consumers shouldcomponentupdate component continue updating first toggle top data click versions react browser os affected issue work previous versions react react", "num": "12185", "d": "2/2018"}, {"title": "access refs recommend callback pattern instead", "body": "mean currently using thisrefstextinput access refs recommend callback pattern instead callback pattern mean mean use refs", "num": "12184", "d": "2/2018"}, {"title": "ref callbacks called componentdidupdate", "body": "want request feature report bug bug current behavior refs documentation states ref callbacks invoked componentdidmount componentdidupdate lifecycle hooks however seems ref callback called update occurs closest things similar bit confused seems nobody ever experienced something like might misunderstanding something current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example copy code link import react react import render reactdom const styles margin auto padding width border solid black textalign center cursor pointer class test extends reactcomponent test e consolelog ref callback constructor super thisstate number update thissetstate number mathrandom componentdidupdate consolelog updated render return class app extends reactcomponent render return render documentgetelementbyid root expected behavior ref callback logged updated logged versions react browser os affected issue work previous versions react tried several versions react chrome running macos", "num": "12183", "d": "2/2018"}, {"title": "unexpected contextconsumer contextprovider behavior", "body": "want request feature report bug bug current behavior use two contexts created childtree use set new context expect child consumer got new result next sibling childtree got unexpected new context current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example createcontext issue expected behavior contextprovider affect children node versions react browser os affected issue work previous versions react react", "num": "12182", "d": "2/2018"}, {"title": "request filipino translation", "body": "hi would like contribute project thru translation would like translate necessary files filipino hoping response thanks", "num": "12180", "d": "2/2018"}, {"title": "removing ref callback works differently hostcomponents vs classcomponents", "body": "want request feature report bug bug current behavior remove ref mounted hostcomponent update calls original ref null remove ref mounted classcomponent update call original ref null note nt call passed fooinner ref null note call passed div ref null modify ref either hostcomponent classcomponent change original ref called null new ref called instance take sandboxes change second expected behavior honestly sure consistent reason different hostcomponents decide schedule ref effect completework long classcomponents decision made beginwork long means workinprogressref null behavior different hence issue probably pick one make consistent versions react browser os affected issue work previous versions react unsure sure issue latestfiber nt dug deep enough see happened lt", "num": "12177", "d": "2/2018"}, {"title": "way directly use function like react", "body": "case nb somewhat related tasked integrating wysiwyg uses ofc reactagnostic want use object iframe use style props website consistency properties theme object per react convention camelcased eg paddingtop however css needs put iframe needs cssstandardcased question way directly use function like react guessing handled source csspropertyoperationsjs afaik direct export", "num": "12176", "d": "2/2018"}, {"title": "flow find reactdom hydrate function", "body": "want request feature report bug bug current behavior flow ca nt find reactdom function current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example try following code project using flow js flow import hydrate reactdom flow error module named export called calling method default export also fails import reactdom reactdom reactdomhydrate flow error property found reactdom expected behavior cause flow errors versions react browser os affected issue work previous versions react reactdom node flow nt think ever worked", "num": "12175", "d": "2/2018"}, {"title": "form causes react crash", "body": "file new bug adding input form element component react crashes caused mozilla firefox browsers version react higher", "num": "12174", "d": "2/2018"}, {"title": "onchange behaviour radio buttons", "body": "want request feature report bug bug current behavior assigning onchange listener radio button group form event fires per radio button current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example created basic example problem working jsfiddle since guess using date version react also found workaround problem using components internal state detailed expected behavior onchange event fire every time selected radio button changes versions react browser os affected issue work previous versions react affected version far tell happens across browsers check previous future versions problem appears fixed sadly still process preparing update", "num": "12172", "d": "2/2018"}, {"title": "remove use proxy events development", "body": "think maybe revert people already think kind api also annoying view debugger none properties show instead could seal event object something like", "num": "12171", "d": "2/2018"}, {"title": "prop pass data event handlers", "body": "feature request suggestion add known prop gets passed handlers second parameter would eliminate need closures inline binding inline arrow functions proxyeventtargetdataset etc currently need pass event handler several ways create class method returns closure use inline bind arrow function intuitive alternative use pass object prop gets converted string immutable map becomes pass id use handler find data", "num": "12169", "d": "2/2018"}, {"title": "ca nt use prevstate function callback parameters setstate", "body": "", "num": "12165", "d": "2/2018"}, {"title": "unstablerendersubtreeintocontainer execution order", "body": "current behavior execution order changed know old api replaced starting switch codebase still depends libraries use old api matter knowing change wrote link order functions executed see calling children gets mounted called behavior change intentional", "num": "12160", "d": "2/2018"}, {"title": "add stringref warning strict mode subtrees", "body": "", "num": "12158", "d": "2/2018"}, {"title": "getting started docs terrible", "body": "came back react year using getting started docs pretty much helpful slightest docs links websites without instructions get react project running remember year ago back react docs step step walkthrough set get project running scratch links websites without react specific instructions happened docs become useless needs step step guide added back docs guide get nothing running browser instead links websites nt anything react remember back react could run guide hello world app running within minutes problems trying figure new docs hour still luck getting running instructions used actually instructions basically saying install run command terminal docs say well use link site nothing react even sort instruction react website link without context around docs please reverted old versions actually create proper getting started page get nothing running", "num": "12157", "d": "2/2018"}, {"title": "typescript definition sfc returning fragmentstring", "body": "want request feature report bug likely bug current behavior open sandbox wait compiler catch see error expecting returned expected behavior based blog post possible component like correct looking type definition method return type correct however sfc declaration looks like assume oversight type well case true able create pr correct missing something please versions react browser os affected issue work previous versions react", "num": "12155", "d": "2/2018"}, {"title": "reacttestrenderer asynchronous rendering guarantees", "body": "want request feature report bug think question understand react newer fiber architecture introduces asynchronous rendering pipeline allows better prioritisation work also aware version react still expected render synchronously looking forward though using especially reacttestinstance helper apis guarantees safe developer lean creating testrenderer instance safe immediately introspect instance look child node given type differ components userspace asynchrony instance class component child node want make test assertion safe safe way flush pending reconciler changes check pending work currently experiencing intermittent failures test assertions look like error output looks like fail pathtomycomponenttestjsx mycomponent test assertion child node instance instances found node type childnode expectone reacttestinstancefindbytype versions react browser os affected issue work previous versions react seeing failure running running", "num": "12153", "d": "2/2018"}, {"title": "umbrella releases", "body": "x new context api x add context api test renderer add context api shallow renderer even makes sense x mark private fields private x context consumerprovider bailout props change x looks like wording warning might need updated reflect actually wo nt work recommendation x prefixed versions x x fires deprecation warnings x x enables asyncbydefault updates x also enables strict mode changes related async mode update scheduling x interactive updates async expires within second subsequent interactive event fired earlier one flushed earlier one synchronously flushed processing incoming one used event result discrete user interaction words interactive events events debounced without affecting terminal state click event interactive scroll event x controlled updates syncish effectively using synchronous mode updates flushed react yields back browser used controlled components state dom must always sync react internal state x deferred updates default updates outside react lifecycle event handler promise handlers etc x useful prerendering via quite ready make api stable also enables asyncmode children root x useful things like draft need wrap event handlers confirm et al work nested inside lifecycle prioritychanging function x expose persistent mode via use separate entry point pr x fix fragment support test renderer x revert deprecation injecting custom event plugins necolas ready commit providing another migration path rnw deprecate even outside strict mode keep working warning add prefix want keep using deprecate legacy context api possible migration strategy implement legacy api top new api extract separate package like revert deprecation injecting event plugins far future major version remove deprecated apis legacy context api assuming deprecate minor strict mode everywhere presumably added warnings strict mode point chose include may include beyond new component api holding closer feature complete phrase means implemented async rendering bytecode compilation static version method would take lots effort migrate mostly class instance methods used event handlers migration effort may worth eventually introduce new component api replaces classes stable version really made stable ago clearly useful synchronous mode however asynchronous mode effectively noop would weird ask everyone migrate new api remove upcoming release stable version probably ready used production limited capacity holding tested internally tentative plan make stable automatically opt error boundary children strict mode technically strict mode resilient many apps would effectively opt components strict mode since recommendation always error boundary top tree", "num": "12152", "d": "2/2018"}, {"title": "contextconsumer contextprovider reacttestrenderer", "body": "want request feature report bug bug current behavior unsupported component type test renderer probably bug react called know component types current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example expected behavior identify new context types versions react browser os affected issue work previous versions react", "num": "12150", "d": "2/2018"}, {"title": "ci broken", "body": "looks like commit broke ci sure release script passed test variants devprod bundle devprod first unable reproduce broken behavior fresh install able sure yet causing perhaps something yarn workspace prerelease versions", "num": "12147", "d": "2/2018"}, {"title": "processci check looks like typo", "body": "check looks like typo may wrong nt found ci checked", "num": "12145", "d": "2/2018"}, {"title": "change lifecycle deprecation warnings lowpri", "body": "warnings driven use rather avoid thrashing automated tests", "num": "12144", "d": "2/2018"}, {"title": "using react app without rendering html piece", "body": "come angularjs need using react app without rendering html piece like contain html tags want use react app model logic errormessage name errorsfirst name email errorsfirst email message errorsfirst message fyi achieve scenario question achieve scenario", "num": "12143", "d": "2/2018"}, {"title": "upload files ftp server location using reactjs", "body": "hi please let know anyone knows upload files ftp server using reactjs", "num": "12142", "d": "2/2018"}, {"title": "dev memory leak render event listeners", "body": "want request feature report bug bug current behavior using dev appears around event listeners added every time component rerendered occasionally get garbage collected listening events happen lot scroll fast typing etc slow kill tab using current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example open dev tools performance check memory checkbox start performance capture type quickly text box bit stop performance capture note increase event listeners picture included reference expected behavior memory leaks versions react browser os affected issue work previous versions react chrome macos let know anything help clarify hopefully got right wordinginfo thanks", "num": "12141", "d": "2/2018"}, {"title": "safari errors using fragment upon hydrating", "body": "want request feature report bug bug current behavior safari mac os x ios throws error able make reduced test case reporting hope someone else also issue able figure root cause currently best figured production universal rendering scenario using reactfragment together elements use context like component connected redux safari errors client side hydration example one case code like errored safari replaced fragment div case modal component also connected redux returned node using another scenario cms content using custom renderer json transformed react rendering components complex context based logic using fragments anywhere causes error safari similarly issue fixed replacing fragment div span depending case currently things able track together use fragments context possible bug requires condition large complex project apple user complicates things also inconvenient bug happens production react bundle results unhelpful error messages current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example current best attempt isolating issue replicate expected behavior safari throw hydrate using mixture fragment context versions react browser os affected issue work previous versions react react production issue development version safari safari works fine", "num": "12140", "d": "2/2018"}, {"title": "question call method react component instance", "body": "bit new react advice pointers current implementation always open advice question extended react component class create new component export default class comp extends reactcomponent render component using following code like element could different places page currently transition moving te components react yet multiple components page call method specific component instance way get instance selecting dom element approach totally different way", "num": "12139", "d": "2/2018"}, {"title": "working context", "body": "typescript import react react import reactdomserver reactdomserver const proptypes require proptypes export class parentcomp extends reactcomponent lt gt export class childcomp extends reactcomponent lt gt let html reactdomserverrendertostaticmarkup consolelog html context workin result call parent context parant foo foo", "num": "12138", "d": "2/2018"}, {"title": "modify parent component state child component props", "body": "want request feature report bug bug current behavior possible modify state parent component child props prop array object seems byproduct fact javascript passes arraysobjects functions reference instead value current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example shown mean codepen expected behavior able modify parent state child component props since props normally assumed immutable easy prevent behavior deep clone arrayobject passed prop value array example see mean versions react browser os affected issue work previous versions react tried react", "num": "12137", "d": "2/2018"}, {"title": "childrenonly inconsistent childrencount", "body": "want request feature report bug bug current behavior const children reactchildrencount children gt const child reactchildrenonly children gt error reactchildrenonly expected receive single react element child repro codesandbox expected behavior excepted return one element array throw versions react browser os affected issue work previous versions react react certain behavior prior react prefiber fiber supports encourages use fragments ie arrays elements issue much likely encountered react onward furthermore code reads like something wrong many children may child expected one child um okay", "num": "12136", "d": "2/2018"}, {"title": "synthetic event system", "body": "hi new react dont know synthetic event anyone help explore topic", "num": "12133", "d": "2/2018"}, {"title": "characters string objects rendered separate elements", "body": "want request feature report bug bug current behavior characters string objects created new keyword rendered separate elements english visible user farsi letters become disconnected looks like h current behavior bug please provide steps reproduce possible minimal demo problem bug get fixed much faster run code nt dependencies react paste link jsfiddle codesandbox example five separate text elements rendered chrome inspector looks like expected behavior value represented string object rendered like native string value would versions react browser os affected issue work previous versions react react tested chrome ubuntu likely unrelated version os", "num": "12132", "d": "2/2018"}, {"title": "meta charset rendered camel case", "body": "use reactdom rendertostring meta property charset rendered camel case like insted using react reactdom version", "num": "12131", "d": "2/2018"}, {"title": "update state batch react outside render cycle", "body": "app many state changes coming external sources calling setstate outside render cycle hurts performance lot setstate starts new render cycle would like something like achieve react", "num": "12130", "d": "2/2018"}, {"body": "hey use issue tracker bug reports feature requests question please check community support resources using react ref prop returns reference react component htmlelement dom instance ca nt use desired api return reference component element defined need reference element component renders pass function another prop define element", "d": "2/2018"}, {"body": "sunhuawei hoc api discussed lot times original rfc dismissed props collision", "d": "2/2018"}, {"body": "trysound omg even noticed thanks reminder still think useful someone want hear voice", "d": "2/2018"}, {"body": "please nt use issue tracker platform sharing personal projects try use solely bug reports feature requests general usage question please check community support resources thanks", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "gaearon bug look would need help", "d": "2/2018"}, {"body": "sorry test case seems broken reducing although still says way handle errors add found behavior may depend actual states dom elements affected test structure residents file complicated dive", "d": "2/2018"}, {"body": "fixed", "d": "2/2018"}, {"body": "want use release placeholder iirc", "d": "2/2018"}, {"body": "ah guess someone sebastian published accidentally guess wanted reserve package name either way soon releasing lockstep etc", "d": "2/2018"}, {"body": "ah nt realise nt officially published", "d": "2/2018"}, {"body": "understandable version npm seems like mistake part", "d": "2/2018"}, {"body": "bug nothing react simply invalid javascript code curly brackets js denote block since block expression use ternary operator directly without assignment something similar second case inside jsx starts jsx context lack better word inside jsx brackets different meaning translate comes js code", "d": "2/2018"}, {"body": "thanks marvinhagemeister reliazed done silly mistake must seen code carefully opening issue", "d": "2/2018"}, {"body": "worries happens us", "d": "2/2018"}, {"body": "good", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "running branch nt think branch stable state sounds like running mismatched versions react reactdom", "d": "2/2018"}, {"body": "aweary hi reasons project ready stable version bug like noticed branch fixed bug ran project build branch use link project react reactdom problem still", "d": "2/2018"}, {"body": "mcjazzyfunky use react devtools tell build running assume react addon library library two different packages depending environment eg fancyreactaddondevelopmentjs vs fancyreactaddonproductionminjs also assume whatever reasons make sense maybe even allowed use react development module combination production module addon library vice versa addon development production build must check similar determine features included build unless two entirely separate code paths seems unreasonable addon meant used react applications would recommend use heuristics react uses checking checking environment way consumers import rely build system nt recommend different behavior production development builds outside things like warnings safety checks check using production build documentation information approach", "d": "2/2018"}, {"body": "aweary thank much answer think unfortunately question may comprehensive enough please let try ask different way following twoliner first line code evil change first line evil longer aware concrete browser example neither node processenv react devtools nt recommend different behavior production development builds outside things like warnings safety checks replace throw new error comment consolewarn satisfy yourfacebook recommendation nt forget aspect justifies differences dev vs prod performance necessary provide example matters think currently necessary", "d": "2/2018"}, {"body": "change first line evil longer short nt way nt trying test environment runtime like nt forget aspect justifies differences dev vs prod performance necessary provide example matters think currently necessary nt recommend trying run semantically different code dev prod need exclude include code based environment recommend use something like ask consumers library set environment build process already required use react", "d": "2/2018"}, {"body": "aweary thanks answer recommend use something like nodeenv scenarios nodeenv like jsfiddle demos example germany web shop system kind special tag html templates takes bunch", "d": "2/2018"}, {"body": "scenarios nodeenv like jsfiddle demos example germany web shop system kind special tag html templates takes bunch", "d": "2/2018"}, {"body": "yidingalan according spec nt property expect work react previous behavior could bug arrow functions render affect performance cases like", "d": "2/2018"}, {"body": "trysound right probably nt worked react reason whitelisted attribute also configured set property means set like instead set attribute meant react creating new property element probably nt happened react sets attribute using reading still works input elements dom keep property sync attribute since anchor elements nt property default setting attribute nt set property recommend either using arrow function unless benchmarked problem rare using data attribute like hope helps", "d": "2/2018"}, {"body": "please provide working example bug using jsfiddle template example given complete thanks", "d": "2/2018"}, {"body": "seems experiencing issue happens chrome works well firefox suspect bug chrome show right state new render", "d": "2/2018"}, {"body": "btw issue typo radjivc", "d": "2/2018"}, {"body": "nihgwu typo alright problem zendesk iframe maybe problem close issue thanks guys", "d": "2/2018"}, {"body": "well sorry close post misspelled labeled labelled", "d": "2/2018"}, {"body": "expected supposed switch controlled uncontrolled components", "d": "2/2018"}, {"body": "expected behavior react adds additional properties placeholder title readonly changes existing property value input replaced rather replacing entire input even though returns different input element identical one passed due way react diffs changes considered update existing input element new element happens render input value warning occurs use represent empty value controlled component use check section docs controlled input null value hope helps", "d": "2/2018"}, {"body": "see expected behavior thank much clarification much appreciated apologize inconvenienced", "d": "2/2018"}, {"body": "esprehn please post forking discussion makes harder follow reason issue reopen since discussion", "d": "2/2018"}, {"body": "expected behavior whitespace meaningful jsx space actually rendered according jsx docs jsx removes whitespace beginning ending line also removes blank lines new lines adjacent tags removed new lines occur middle string literals condensed single space", "d": "2/2018"}, {"body": "think see problem font awesome changed default behavior replace tag svg guessing recommended use instead", "d": "2/2018"}, {"body": "wzup abort xhr unsubscribe events set conditional flag prevent depends api use react gives place", "d": "2/2018"}, {"body": "hey use issue tracker bug reports feature requests question please check community support resources", "d": "2/2018"}, {"body": "think duplicate", "d": "2/2018"}, {"body": "right suggestion worked well thank", "d": "2/2018"}, {"body": "please provide details issue template deleted without information like version react using example reproducing problem difficult figure happening", "d": "2/2018"}, {"body": "aweary updated details", "d": "2/2018"}, {"body": "hey use issue tracker bug reports feature requests question please check community support resources", "d": "2/2018"}, {"body": "checksum validation react nothing enable related issue discussion", "d": "2/2018"}, {"body": "hey use issue tracker bug reports feature requests question please check community support resources", "d": "2/2018"}, {"body": "aweary thanks", "d": "2/2018"}, {"body": "solve acemarke assume socket still alive component unmounted turn socket callback listener componentwillunmount", "d": "2/2018"}, {"body": "try changing code also try reproduce issue jsfiddle try debugging code also help", "d": "2/2018"}, {"body": "try debugging code also help put breakpoint ternary nt run code branch child component looks like nt even touch lifecycle event nt use child component work properly", "d": "2/2018"}, {"body": "try changing code actually helps basically done jsx const parent someprop gt const child someprop gt someprop null const parent someprop gt const child someprop gt var children initially contain multiple elements make array better situation coverage questuon first one code nt working nt even hit brakepoint inside child component", "d": "2/2018"}, {"body": "maybe something wrong putting ternary condition inside", "d": "2/2018"}, {"body": "please provide full example run reproduce problem", "d": "2/2018"}, {"body": "possible really related react bug tracker questions use stackoverflowcom please", "d": "2/2018"}, {"body": "thank replying actually researched topic lot seem find answer even lead would go would able give advice point right direction go figure aside issue directly linking bundlejs page also issue openly available server thing think bundlejs residing directory publicly available loading contents bundle page using ssr would really appreciate help already asked stackoverflow done lot searching find pointers get done", "d": "2/2018"}, {"body": "possible react js frameworks whether serve bundle user related javascript frameworks purely severside limitation depends use server side said use php need check user authenticated php serving bundle authenticated nt serve hope helps need pointers would search something like nt serve static file unauthenticated user php", "d": "2/2018"}, {"body": "thank", "d": "2/2018"}, {"body": "nice", "d": "2/2018"}, {"body": "ailrun sure asking please clarify", "d": "2/2018"}, {"body": "aweary states event delegated since consistently bubble browser makes problem least know problem occurs react nt support could give name browser makes problem really thank response", "d": "2/2018"}, {"body": "current example likely want called dom actually updated condition may attempt scroll item view prematurely alternatively could consider ref rather dom apis example jsx class tabs extends reactcomponent render return thispropstabsmap tab gt scrollref ref ref refscrollintoview", "d": "2/2018"}, {"body": "thanks iamdustan actually nt used lifecycle method see much better solution deprecating probably help steer lot folks like better direction use cases like one", "d": "2/2018"}, {"body": "gaearon solved bug particular task changing key props emojiresultrow item title index bad decision bug maybe provider reconciliation new code emojiresults", "d": "2/2018"}, {"body": "gaearon alexanderkositsyn know bug todo list", "d": "2/2018"}, {"body": "hello gaearon issue beginner friendly", "d": "2/2018"}, {"body": "maybe skipping would two lines need soon promise wait days", "d": "2/2018"}, {"body": "gaearon would love contribute understand need skip", "d": "2/2018"}, {"body": "fibers contextprovider contextconsumer tags", "d": "2/2018"}, {"body": "fixed", "d": "2/2018"}, {"body": "show nicer error message nt agree render ambiguous technically text node message make sense", "d": "2/2018"}, {"body": "gaearon like jump", "d": "2/2018"}, {"body": "elbaumpj", "d": "2/2018"}, {"body": "would someone mind pointing right direction might find relevant logic issue figured would reactcontextjs trouble figuring actual error message generated also wonder new message say something like consumer component children must return react element jsx honest exactly sure consumer demands new line children", "d": "2/2018"}, {"body": "elbaumpj find call site using stack trace error thrown codesandbox example posted ryepesg context consumer render callback called add call calling checks actually function honest exactly sure consumer demands new line children nt actually require newline requires render single child function case space function created text node function returns foo insert space space meaningful trying call array children function causes throw newline fixes newline nt create new text node help also wonder new message say something like consumer component children must return react element jsx gaearon probably better copy gist something like context consumer rendered multiple children child nt function context consumer expects single child function pass function make sure trailing leading whitespace around", "d": "2/2018"}, {"body": "aweary super helpful thank", "d": "2/2018"}, {"body": "took crack hope issue", "d": "2/2018"}, {"body": "raunofreiberg nt really appreciate clearly claimed issue nt got chance make pr yet states docs decide fix issue please sure check comment thread case somebody already working fix nobody working moment please leave comment stating intend work people accidentally duplicate effort somebody claims issue follow two weeks fine take still leave comment", "d": "2/2018"}, {"body": "oops sorry merged without looking took issue assumed submitter saw thread would nt try submit pr outside process guess fixed raunofreiberg please nt take claimed issues future", "d": "2/2018"}, {"body": "got apologies elbaumpj", "d": "2/2018"}, {"body": "swyx need set reactdom dependency well fix issue", "d": "2/2018"}, {"body": "doh thanks gareth", "d": "2/2018"}, {"body": "search issue tracker find bunch threads topic please refer rather creating new issue another question please check community support resources", "d": "2/2018"}, {"body": "discussed lot times take look rfc original thread", "d": "2/2018"}, {"body": "import child components context different", "d": "2/2018"}, {"body": "trysound yeah read topics nt see problem listed section gaearon importing child components tree dependency graph flat know right way importing way spaghetti dependency graph difference", "d": "2/2018"}, {"body": "nt understand mean spaghetti dependency graph components imports react make graph spaghetti shows components using library similarly components rely specific context need import show depend better large projects nt risk context collisions naming nt colocate context exports components anywhere tree even npm package", "d": "2/2018"}, {"body": "spaghetti dependency graph mean imagine contexts consumers component tree import contexts graph look like form name case star graph easier manage delete replace nt nt mean organize graphs mean let focus original problem way provide piece data components tree without messing achieve new one understand new context solve many problems previous one new context implemented merged seems ready release suggest please consider trade gt", "d": "2/2018"}, {"body": "problems would solve problems would issue gt ca nt see importing context would cause problems sort abstract makes dep graph ugly nt think good reason also nt think true even", "d": "2/2018"}, {"body": "okay seems problem talking think issue closed btw agree gaearon nt colocate context exports components anywhere tree even npm package components colocate imports contexts move components problem wo nt move lot npm packages solve problem yes good longtermsupport code indevelopment code updating take lot time another problem wo nt talk", "d": "2/2018"}, {"body": "problems would solve problems would issue gt judging issue one commented voted issue react repo confident answer yes npm packages solve problem yes good longtermsupport code indevelopment code updating take lot time another problem wo nt talk think describing react api problem dependency management problem existing solutions like yarn workspaces let treat local code folders npm packages imports like instead", "d": "2/2018"}, {"body": "think another use case besides logging trying think one", "d": "2/2018"}, {"body": "think like component stack errorstack etc mostly logging form either event handler commit phase lifecycle could contrive use case would use stack render nt real one mind", "d": "2/2018"}, {"body": "nervous since read apis like finddomnode ismounted problematic past", "d": "2/2018"}, {"body": "like love god let call middleware please", "d": "2/2018"}, {"body": "contextmap", "d": "2/2018"}, {"body": "yeah like contextmap contexttransform", "d": "2/2018"}, {"body": "like contexttransform map overloaded tag google maps map hash object", "d": "2/2018"}, {"body": "alternatively could add prop contextconsumer", "d": "2/2018"}, {"body": "thirdparty vote name pretty apparent connotation node stream transforms", "d": "2/2018"}, {"body": "sebmarkbage think doable userland looking context api seems low level curious really expect plain use would warrant addons everything bit verbose transforms creation reading sharing kept relatively simple focussed one thing well would fine userland build patterns around", "d": "2/2018"}, {"body": "explain registering would cause rerender think right needs didmount", "d": "2/2018"}, {"body": "thanks quick response basically input registered adds form state default props ie propagated back input via move means none props set initial render since component nt registered yet input registered change global form state triggers rerender refactoring use would nt difficult want confirm recommended approach", "d": "2/2018"}, {"body": "yes recommended approach input registered change global form state context triggers rerender sounds unfortunate think might make sense initialize create fields lazily first change", "d": "2/2018"}, {"body": "gaearon jumping thread think might make sense initialize create fields lazily first change possibly relying props like register input initially rendered first time also default flags like istouchedispristine get default values expected input first render assume fix would return null render initially register didmount render would work fine initial props curious order changed also would imagine component replaced another first unmount one mount used react thanks", "d": "2/2018"}, {"body": "order changed intentionally mentioned release notes breaking change reason want react able start work new trees asynchronously old trees still visible start working tree first render old tree unmounted particular case maybe way keep state interdependent hoisted initialised lazily state determined component could initially component gathered form needed submission great answer create minimal example demonstrating need please create new issue specifically pattern formfield communication maybe come api could make cases natural hard discuss without code could run", "d": "2/2018"}, {"body": "gaearon thanks answering bottom line solution set sandbox code differences react react raw sample actual code involves hocswrappers works kinda like html form meets redux knows inputs values holds everything context side effect order change register new input happens unregister old input ideal flow old input unregisters actually removes new input solution took move willmount registration didmount render null context nt filled yet input state", "d": "2/2018"}, {"body": "let keep open discussion interesting may better ways personally nt much time look though", "d": "2/2018"}, {"body": "hey bllfrnch copied example jsfiddle unable reproduce issue guess codepen compiling classes way support context around kind issue hope helps", "d": "2/2018"}, {"body": "bug intentional change behavior inconvenient cases prevents whole bunch bugs caused reentrancy past also pretty fundamental enabling new algorithm nt see changing piece dom longer available synchronously need still see fiddle note callback called finishes called exit toplevel user wo nt see intermediate state", "d": "2/2018"}, {"body": "need case external library prosemirror manages state children expects code manages state childrens children using synchronously fiddle code sets prosemirror expects able query dom immediately exits callback executes library nt able find piece dom needs finding piece dom situation important prosemirror needs able interpret subsequent native browser contenteditable events according internal mapping dom nodes state contenteditable document asynchronously rendering context would introduce kinds timing issues state mapping managed also pretty fundamental enabling new algorithm nt see changing would nt expect change wondering ways guarantee dom paints synchronously isolated render contexts like reading thru source code methods control react batches renderingreconciling hooks would allow control reactdom rendering executes specific situations", "d": "2/2018"}, {"body": "explain detail solution portals nt work presumably way pass value opaque process value already rendered div ready inserted", "d": "2/2018"}, {"body": "realizing included original fiddle problem portal would responsible rendering component whose required props nt ready external library chance render props data structures createddestroyed external library updated original fiddle illustrate", "d": "2/2018"}, {"body": "struggling see solution could tell specific use case eg data component getting prosemirror prosemirror expects synchronously see rendered right runs hook", "d": "2/2018"}, {"body": "library react components define structure various elements rendered contenteditable element prosemirror whose children managed prosemirror eg something like following use component allow components define dom hierarchy editable children rendered document whose abstract data structure looks something like header would rendered prosemirror using headercomponent whereas headline summary paragraph might rendered using plain dom node creation desired end dom state looks something like html ny metro breaking news headline summary news upon time filling blanks little headercomponent rendered inside prosemirror hook prop would derived data structure prosemirror maintains node document something like trick getting prosemirror able find childrencontainer selector header node created insert elements location node", "d": "2/2018"}, {"body": "root dom begaining react managed react put dom instead put react element app", "d": "2/2018"}, {"body": "way like possible", "d": "2/2018"}, {"body": "created pen seems fine random thing", "d": "2/2018"}, {"body": "saw many people put entire rendered markup divroot hack seo search engine crawlers problem parsing clientrendered applications definitely send rendered markup using reactdomserver put random things right feel free put whatever want inside root container react simply clear child nodes rendering server rendering would instead use would avoid cost throwing away markup starting scratch", "d": "2/2018"}, {"body": "aweary thank much", "d": "2/2018"}, {"body": "hey romaingoncalves behavior changed react release see blog post dom attributes react details know said ca nt updating yet unlikely making releases changes attribute whitelist definitely recommend updating soon lots great stuff coming potentially use workaround", "d": "2/2018"}, {"body": "hey use issue tracker bug reports feature requests question please check community support resources", "d": "2/2018"}, {"body": "remove", "d": "2/2018"}, {"body": "sorry office troll action", "d": "2/2018"}, {"body": "hi would helpful include live example reproduces issue use codesandbox nt really know mean tried shorter version code posted everything seems work select another option new text fetched selected format nt work exactly", "d": "2/2018"}, {"body": "need set prop seen", "d": "2/2018"}, {"body": "hey use issue tracker bug reports feature requests question please check community support resources", "d": "2/2018"}, {"body": "woo hoo thanks incredibly detailed bug report know happening easy fix get working release", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "error message says might mixed default named exports default export import need use default import note lack curly braces use curly braces importing importing named import called case needs corresponding named export called note presence curly braces places learn", "d": "2/2018"}, {"body": "shiyiya dont work gaearon close question issue dont solved yet", "d": "2/2018"}, {"body": "pterpmnta answered question problem seeing mixing default export named import use one nt help post details exactly nt ca nt guess", "d": "2/2018"}, {"body": "gaearon still problem dont know still happened", "d": "2/2018"}, {"body": "maybe nt recompile something hard say sure without full reproducible project download try", "d": "2/2018"}, {"body": "gaearon wait minute upload project give second", "d": "2/2018"}, {"body": "clarify specific fix suggesting replace rebuild still see problem please post full code screenshots", "d": "2/2018"}, {"body": "gaearon ame change still issue", "d": "2/2018"}, {"body": "gaearon cheack repo react scaffold", "d": "2/2018"}, {"body": "asked earlier please provide exact instructions reproduce issue screenshots hard people help information error seeing error changed", "d": "2/2018"}, {"body": "gaearon error write", "d": "2/2018"}, {"body": "reason even change code still get old compiled bundle nt know unrelated react code looks correct something build process caching output file", "d": "2/2018"}, {"body": "gaearon solved user answer stackoverflow answer", "d": "2/2018"}, {"body": "difference react emits attribute server", "d": "2/2018"}, {"body": "ok pasted input outside react app altogether containing serverside template like seeing issue firefox bug nothing react seems close", "d": "2/2018"}, {"body": "probably bug", "d": "2/2018"}, {"body": "gaearon like claim", "d": "2/2018"}, {"body": "sounds good", "d": "2/2018"}, {"body": "could point right direction migration path starts attributes looking prs mentioned try figure start looking little overwhelming", "d": "2/2018"}, {"body": "swieckowski think want look dompropertyoperations two lines known attribute unknown attribute values get stringified respectively sure gaearon intends warn attributes nt recognize good place start keep mind warning timing logic happen dev bundle handled wrapping code checks see examples file linked hope helps", "d": "2/2018"}, {"body": "getting referenceerror performance defined something files client datenow works fine hand", "d": "2/2018"}, {"body": "also sure reliably test something involves performance issue across different machines something write test", "d": "2/2018"}, {"body": "getting referenceerror performance defined something files client datenow works fine hand make sure using lowercase p supported major browsers want sure accurately measuring timing nt good choice given low resolution compared also sure reliably test something involves performance issue across different machines something write test write test use value practically always order magnitude expensive threshold example set threshold milliseconds test something takes stringify could try overriding expensive work essentially always take long js const attributevalue tostring expensive work like computing hash", "d": "2/2018"}, {"body": "aweary made sure use proper capitalization got reference error tests matter tried function made used dev used dev stringifies value warns took long const stringifywithperformancewarning value gt const stringifystart performancenow let attributevalue value tostring const stringifyend performancenow warning stringifyend stringifystart lt stringifying attribute causing perfomance issues return attributevalue got reminded project euler thinking expensive functions decided insert find nth prime algorithm suitable number get prime machine", "d": "2/2018"}, {"body": "short version guessing alright test nonprimitive data types longer learning experience version technically attribute values could type including primitives started researching function calls like work js kind complex understanding primitives briefly coerced objects call really nt instance method override change actual insert primitve prototype override rubs wrong way pollute actual datatype prototype especially time wasting function going go forward assumption big deal testing primitives sorry pedantic", "d": "2/2018"}, {"body": "made sure use proper capitalization got reference error tests matter tried huh assumed jsdom support already added within last month version depend nt could potentially polyfill test setup would let us also implement version always returned times increments greater threshold could avoid actually wait think better idea raises question want fall back nt available scheduler since warning people develop browser supports might matter gaearon thoughts", "d": "2/2018"}, {"body": "cc banga case find interesting", "d": "2/2018"}, {"body": "know probably take seriously internally good reason every time see like back separated reactdom core library ca nt help chuckle little bit inside", "d": "2/2018"}, {"body": "might also worth ensuring right compatibility mode enabled option passed prepack enable comes bunch predefined abstracts dom things like need added though", "d": "2/2018"}, {"body": "trueadm strangely tried made difference maybe little", "d": "2/2018"}, {"body": "gaearon huge amount key ones like etc supported", "d": "2/2018"}, {"body": "implementation detail may change releases practice difference html caseinsensitive", "d": "2/2018"}, {"body": "cc aweary", "d": "2/2018"}, {"body": "change made specifically single select since specced behavior supposed seems like behavior specified confusing complication one dom fun folks ref", "d": "2/2018"}, {"body": "jsfiddle showing nonreact behavior multiple false selects first option multiple false size nt select first option multiple true nt select first option multiple true size nt select first option chrome safari ff random bonus like year old bug webkit affect looks like logic select first option displayed like listbox", "d": "2/2018"}, {"body": "last time touched select logic nt actually affect behavior seeing nt called reason see regression order operations attributes set children appended changed react attributes set element children appended means set option elements appended react children appended attributes set parent elements appended set calls called exposes nuanced behavior around option elements work append child element updates append child multiselect happens react append options select element assumes single select see spec defined behavior jquense mentioned example reproducing issue without react see set appending options works expected", "d": "2/2018"}, {"body": "solution likely either ensure attributes set children appended would make react consistent would potentially resolve unknown issues arise due think also require changes reconciler maybe may affect renderers different requirements special set attributes set children appended go back attributes children set manually fix first option probably best one nt cause problems third option probably easiest hacky solution", "d": "2/2018"}, {"body": "aweary mind take first issue", "d": "2/2018"}, {"body": "garethsmall go let us know questions straightforward code base p", "d": "2/2018"}, {"body": "jquense thank got many looking tests afterwards sure ask", "d": "2/2018"}, {"body": "continuing discussion think makes sense ensure attributes set children appended try comb spec append behavior forks based parent attributes gut tells nt unique unique attributes depend children appended attribute set maybe manually fixing best idea problem reordering reconciler methods might make sense renderers like react native maybe acdlite bvaughn insights maybe could put call somewhere else lifecycle sure", "d": "2/2018"}, {"body": "looks like two things setinitialproperties setting initial properties handling events fair say two processes separated also confirm issue areas going tests fiddle see cause issues order", "d": "2/2018"}, {"body": "another thing note set properties append children run issues example defaultvalue property set properties gt append children defaultvalue wo nt set think suggested manually fixing may best option", "d": "2/2018"}, {"body": "already finally found reactelementvalidator file well least learned something", "d": "2/2018"}, {"body": "runtime dependency need use react run react folder mistake need install react development dependencies use hard say without context message irrelevant react recommend keeping date warning completely safe ignore", "d": "2/2018"}, {"body": "please see", "d": "2/2018"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources", "d": "2/2018"}, {"body": "xialvjun rfc may use discuss", "d": "2/2018"}, {"body": "trysound proposal totally rfc proposal nt mutate state get", "d": "2/2018"}, {"body": "show realworld use case feel necessary", "d": "2/2018"}, {"body": "exactly callback able use", "d": "2/2018"}, {"body": "well indeed use callback ensure executed rendered fact forgotten want api remember upon time confused component rendered state merged event occurred fast like totally rely sometimes attach state like well sorry maybe api necessary", "d": "2/2018"}, {"body": "hi idea discussed rfc well followup issue filed repo short version current api enable shown example js class examplecomponent extends reactcomponent initialize state constructor property initializer state static getderivedstatefromprops nextprops prevstate nextpropscurrentrow prevstatelastrow return lastrow nextpropscurrentrow isscrollingdown nextpropscurrentrow gt prevstatelastrow felt nullable parameter would potentially confusing using intuitive", "d": "2/2018"}, {"body": "right mentioned original post know current api requires mixing props state linked similar example one provided know end world mix props state bad code smell particularly mixing props state sole use function curious know think parameter would confusing particularly since use would entirely optional thanks linking rfc issue nt thought look discussion repo summarize currently large number react components currently utilize componentwillreceiveprops almost compare several props migrate using push every one props state opinion ideal also means go sanity check state components make sure nt accidentally end prop vs state key collisions make sure nt mixup reading key state accidentally instead props last point probably one best reasons could put forward think cleaner arguably less confusing pass prevprops extra argument", "d": "2/2018"}, {"body": "curious know think parameter would confusing particularly since use would entirely optional reasons previous mentioned rfc discussion thread linked reply read thread", "d": "2/2018"}, {"body": "lol yes despite length scan nt see specific reference think parameter would confusing", "d": "2/2018"}, {"body": "sorry obtuse would passing lead confusion something related discussion thread surrounding", "d": "2/2018"}, {"body": "sorry nt trying sound sarcastic serious question literally discussed already rfc issue linked nt seem productive repeat discussion deeplinked previous conversation although looks like github autocollapsing parent thread page load since many comments sucks try loading page searching amannn reviewed days ago click show outdated see expanded comments", "d": "2/2018"}, {"body": "ahhh yeah obvious indeed buried show outdated thanks patience got orientated know confusion referring initial call prevprops yet exist vote would still rather force pollution state read original thread see concern already raised nonetheless committed api maybe look creating kind utility hoc least removes duplicated boilerplate required moving props state ideally even stores one state key mitigate risk collisions something like", "d": "2/2018"}, {"body": "yeah worries looks like github bug reached appreciate understanding", "d": "2/2018"}, {"body": "thysultan case react nt react changing props case new context api relating shouldcomponentupdate component renders consumer like", "d": "2/2018"}, {"body": "trysound assumption bug based test case updates propagate component leaf", "d": "2/2018"}, {"body": "thysultan bug indirection component rerendered prop changed consider prop", "d": "2/2018"}, {"body": "trysound sure understand updated click toggle top data first time stops updating future events test details new context api able propagate updates number nested components could otherwise prevented update alternateolder context api", "d": "2/2018"}, {"body": "think test linked specifically confirms behavior works correctly component rendered since returns false rerendered value changes case test shows changes nt propagating component inner consumer think expected inside toplevel consumer however changes nestedprovider propagate", "d": "2/2018"}, {"body": "behavior works first click subsequent clicks registered every click alternate true false", "d": "2/2018"}, {"body": "nt know test hard read several levels indirection stuff tried simplify little better understand see behavior would expect", "d": "2/2018"}, {"body": "expected result based understand test specifications would identical", "d": "2/2018"}, {"body": "please take look codesandbox linked let know unexpected codesandbox bit odd following structure sure level nesting indicative valid usecase", "d": "2/2018"}, {"body": "codesandbox linked nt reveal behaviorbug yes lot think intentional particular example original kentcdodds added component get better sense context api spec support new context api restrictions amount indirection context update propagate", "d": "2/2018"}, {"body": "convinced reasonable bug even mean context wrap example looks like mistake like using consumer provider exactly opposite way intended rewrote attempt simplify", "d": "2/2018"}, {"body": "point example kent referring", "d": "2/2018"}, {"body": "assume referring blog post demonstrate odd wrappingnesting behavior codesandbox think kind version kent shows indirection mention also seems work", "d": "2/2018"}, {"body": "codesandbox fork kent codesandbox fork added component test react would handle within level nesting", "d": "2/2018"}, {"body": "acknowledge strange nesting structure explain important believe cause behavior reporting unexpected nt understand necessary instance remove double layer middle pen behaves like want", "d": "2/2018"}, {"body": "bvaughn consumer wrapping provider pattern ran migrating code new api way components mapalter context passes seem though like problem least pattern mixed around nested providers still think cases might happen naturally eg nested themedcomponents consumer context", "d": "2/2018"}, {"body": "clear context supports nesting provider multiple times tests okay provider ancestor consumer code snippet provided looked bit unnecessarilyarbitrarily complex trying better understand way sure yet specific bit causing problem maybe try pair unit test morning", "d": "2/2018"}, {"body": "case whether bug react whether code strange two different discussions", "d": "2/2018"}, {"body": "sure trying help also able simply example effectively", "d": "2/2018"}, {"body": "yeah mean sure level nesting indicative valid usecase nt mean nt fix", "d": "2/2018"}, {"body": "case whether bug react whether code strange two different discussions nt mean imply otherwise although rereading comment quoted see gave impression", "d": "2/2018"}, {"body": "thought wanted make sure original author also knows", "d": "2/2018"}, {"body": "good call going pick see catch local test intent anyway wanted eat breakfast first", "d": "2/2018"}, {"body": "reduced case convinced bug think might artifact reading closure old render sure", "d": "2/2018"}, {"body": "reduced case remove component comment scu method bug nt manifest thinking along lines saying though wrt stale data", "d": "2/2018"}, {"body": "apparently gave wrong link smaller example codesandbox nt save", "d": "2/2018"}, {"body": "adding logging click handler sandbox shows calling stale data onclickhandler toplevel true onclickhandler toplevel true", "d": "2/2018"}, {"body": "example components combined", "d": "2/2018"}, {"body": "think problem inner prevents rerendering new data time clicked reapplies stale data", "d": "2/2018"}, {"body": "consumer rerendered time though added logging shows", "d": "2/2018"}, {"body": "makes sense sounds expected behavior tree fix would move indirection consumer way react could know leaf component button uses value", "d": "2/2018"}, {"body": "yup yup agreed", "d": "2/2018"}, {"body": "guess worth documenting gotcha", "d": "2/2018"}, {"body": "original example still confuses though indirection appears inside consumer", "d": "2/2018"}, {"body": "ahh get inside nested consumer trying read value toplevel consumer though exactly toggle nested keeps working uses context values indirection", "d": "2/2018"}, {"body": "yup", "d": "2/2018"}, {"body": "hate render props well hate find present pitfalls compared hocs people readily ignore anyway fine new context api ranting bit", "d": "2/2018"}, {"body": "cc acdlite writing new context api docs", "d": "2/2018"}, {"body": "things going one closures confusing really easy accidentally depend values outer scope without realizing gaearon right render props rely closures exacerbate confusion view core problem examples always returns false solution worth pointing could bug hoc normal component returning return false indirection signaling react children never rerenders children click event handler never gets updated new closure values stale next time click unit tests context happen always return false places bad chosen realistic scenario never unless children completely static believe actionable items react add additional documentation advice never treat two closures two props equal unless referentially identical since impossible know values close documentation new context api advertising ability bypass bailouts nt mislead people thinking reach javascript closures swap values", "d": "2/2018"}, {"body": "understanding new api looked like bug since manifested limitation old context api expected rerender regardless also update inline function", "d": "2/2018"}, {"body": "expected dataconsumer rerender regardless shouldcomponentupdate false also update inline onclick function rerender reason would update function though says never update new children ignores updated maybe simpler way explain imagine code like hope see way would update either old new context would nt even update context usage make sense new context nt force every single component update case components happen pass context value later render new context fixes issue context consumers would nt get updated everything flow like normal react subject normal react rules another way explain example would work changed shallowly compare props eg inheriting would notice element changed old context would nt work new one", "d": "2/2018"}, {"body": "thysultan easy way confirm consumer rerenders put log statement inside render prop", "d": "2/2018"}, {"body": "dataconsumer rerender reason would update onclick function though indirection says never update new children assuming rerenders also reconciles difference say calls render prop function reconciles part tree using new return value hope see way value would update either old new context outside sure example would apply case", "d": "2/2018"}, {"body": "applies case obvious root issue referencing toplevel value nested closure bottom nt update children context consumer rerendered refused update value closure stale uses previous value exact problem closed variable top render method blocking indirection middle even component deeper indirection rerendered would still stale toplevel value stale closure", "d": "2/2018"}, {"body": "anyone reading later avoid problem always make sure either nt write hand return example swallowed new closure", "d": "2/2018"}, {"body": "thanks makes sense", "d": "2/2018"}, {"body": "anyone wants play around concept made sandbox might useful", "d": "2/2018"}, {"body": "lets", "d": "2/2018"}, {"body": "instead ref someref use ref ref gt thissomeref ref", "d": "2/2018"}, {"body": "hrachmkr issue saved value saved correct behavior get", "d": "2/2018"}, {"body": "wzup explicitly set expect anything string refs behavior nt rely use callbacks also new ref api soon", "d": "2/2018"}, {"body": "callback pattern mean one described everywhere else page value saved value correct behavior yes set point callback refs completely control magically appear reactcontrolled field hope helps", "d": "2/2018"}, {"body": "ioiurson called every time didupdate already got element nt need assigned docs mean different lifetime component ref child example add remove component ref prop react dom didmount willunmount ref callback called didupdate", "d": "2/2018"}, {"body": "maybe change docs say refs guaranteed uptodate componentdidmount componentdidupdate fires feel free send pr", "d": "2/2018"}, {"body": "create minimal test case fails similar ones", "d": "2/2018"}, {"body": "example second outside provider nt think supported usecase begin positive although agree getting value seems unexpected believe valid case default value passed consumer", "d": "2/2018"}, {"body": "got test submit lunch", "d": "2/2018"}, {"body": "added pr failing test look soon captures failure", "d": "2/2018"}, {"body": "bvaughn took look tell problem related ends wrong provider updated match updated wrong provider", "d": "2/2018"}, {"body": "think current stack approach assumes stable order providers pushed popped stack consumed providers nested consumers rendered without providers gets sync", "d": "2/2018"}, {"body": "yeah thinking step away meetings right writing test thanks brandon", "d": "2/2018"}, {"body": "awesome happy hear right track maybe would good problem fuzz testing cover crazy combinations", "d": "2/2018"}, {"body": "yeah andrew keen improving fuzz tester better cover cases like", "d": "2/2018"}, {"body": "ahh sorry aweary missed looking posted might work nt tested", "d": "2/2018"}, {"body": "sophiebits worries enough time try diagnose anyways", "d": "2/2018"}, {"body": "hey iamstrings looks like someone else opened similar issue website repo right place please see comment issue thanks", "d": "2/2018"}, {"body": "nt anyway access sicne internal api plenty libraries npm tho grab handle nt particularlly big size personally use", "d": "2/2018"}, {"body": "jquense thx pointer", "d": "2/2018"}, {"body": "flow contains builtin react typings fixed", "d": "2/2018"}, {"body": "caused mozilla firefox browsers version firefox released almost years ago specific reason running old version caniuse usage statistics puts approximately total usage means significant group people still using version please try update newer version try possible bug incompatibility old version given age likely spend time trying resolve", "d": "2/2018"}, {"body": "maritime company manages fleet hundreds vessels means upgrading option furthermore lot legacy applications run board thus need compatible time primary reason chose react development framework", "d": "2/2018"}, {"body": "thanks context interesting usecase react aim broad browser support providing support legacy browsers nt primary goal library example dropped support two years ago needs include library longterm support legacy platforms react may best fit provide specific details error getting happy try figure workaround likely backport potential fixes older versions may want consider forking library maintaining version", "d": "2/2018"}, {"body": "finding bug related reactdom", "d": "2/2018"}, {"body": "hey saenglert known issue tracked resolved nt patch releases since may release uncertain moment definitely recommend upgrading lots great stuff make worth", "d": "2/2018"}, {"body": "seal event object non strict environment adding extra properties nt warn anything ignoring makes debugging hard strict mode get error something like uncaught typeerror add property foo object extensible trade", "d": "2/2018"}, {"body": "think safe assume react users run strict mode", "d": "2/2018"}, {"body": "still run initial concern sealing would prevent extension granted probably great pattern bet handful folks show say integral abstraction built feature p", "d": "2/2018"}, {"body": "rewrite check verify existing fields used take pool want get rid proxy annoying", "d": "2/2018"}, {"body": "work verify change makes sense", "d": "2/2018"}, {"body": "using es proxy properties nt show sounds like debugger bug", "d": "2/2018"}, {"body": "nt think trying enumerate potentially sideeffectful would nt safe debugger", "d": "2/2018"}, {"body": "trap may specific debugger", "d": "2/2018"}, {"body": "point way pass data handler avoid need work arounds added hoc case case situation way inconsistent sometimes added values defined sometimes id never use production think api", "d": "2/2018"}, {"body": "justduy please explain asking", "d": "2/2018"}, {"body": "use arguments", "d": "2/2018"}, {"body": "indeed intentional know frustrating depend specific api allowed us solve many nasty issues old api used suffer recommendation switch portals", "d": "2/2018"}, {"body": "primarily want adopt createreactapp nt need grunt work said also doc", "d": "2/2018"}, {"body": "sorry new docs nt helpful wrote quite bit probably fault page three commands enough set app specifically lacking", "d": "2/2018"}, {"body": "tried method babel files included nothing packagejson config files look nodemodules installed ton stuff nt packagejson nt know createreactapp thing set project expected something nodemodules needs inside packagejson also saw babel packages nodemodules babel config files theres nothing even packagejson get first place mainly nt want use createreactapp nt know nodemodules coming packagejson ca nt change anything config files ca nt change babel settings way documented nt give instructions says use babel link website click nothing even mentioning react version use set install webpack says use link website questions babel needs depth instructions set nt say use absolutely context around another note use createreactapp thing instructions page actually run back react pages got nothing running webapp browser able change get complicated nt know though nt like using automated scripts set bunch stuff least first couple times something like step step guide tells exactly need works way get much better understanding going project working getting anything goes wrong need change anything much better idea start", "d": "2/2018"}, {"body": "seems like getting started react less problem getting started jsnode ecosystem npm appreciate complex intuitive also hard know draw line library like react react docs include instructions using tool pl stack well definately helpful folks situation however actively confusing helpful folks already familar tool chains want learn react", "d": "2/2018"}, {"body": "trying fight talking hte various conflicting cross cutting challenges face documentation something like react", "d": "2/2018"}, {"body": "way npm works installs direct dependencies transitive dependencies project depends package depends babel webpack etc modules coming run created project see logical dependency tree tell organized also run move transitive dependencies like babel directly project help see everything works downside get painless updates example new versions webpack babel come work often taking weeks make sure everything works together intended configs updated regressions functionality etc behind scenes bump version single package however eject maintain babelwebpack setup fine wanted explain difference two approaches instructions page actually run pointed page lists commands need run four need extra steps work feel like giving another try something else could make clearer", "d": "2/2018"}, {"body": "would really helpful could post screenshot terminal point got stuck right creating project maybe something broken talk past see things screen thank", "d": "2/2018"}, {"body": "back react pages got nothing running webapp browser able change get complicated exactly pretty much section provides would change something", "d": "2/2018"}, {"body": "fairly familiar jsnode npm working reactnative year compare getting started docs react reactnative right react native exactly kind instructions talking go page select literally one page gets nothing starting react used page exactly like worked perfectly see createreactnativeapp library instructions use tell exactly install run links bottom get code setup done app already running time get bottom page lets choose want set easy ways prefer use eject nt want eject every dependency everything dependency get babel webpack saying people nt want script work would nice proper step step instructions get way nothing running browser like reactnative provides react used provide page nt offer much cause one quickstart installation section page quickstart skips installation together click instructions helpful need tell minimum install install versions need give link sites want go depth works", "d": "2/2018"}, {"body": "referring section offers download html file helpful would get running second productionready setup gives quick start babel extra tooling understand asking full guide one actually woefully incomplete example crucial difference development production versions explained also often getting outdated people complaining many steps get project running pivoted installation guides different direction sorry preferred old one find plenty guides setting webpack babel web sorry quite helpful maybe underlying tools easier configure without steps example webpack promises improvement add guide adding react existing app guide links page give really wellwritten guides babel webpack recommend check much better introductions tools could written", "d": "2/2018"}, {"body": "ok get want help people nt want deal bunch steps set nt whole createreactapp thing nt way explained depth people still want use step step version hard would add babel webpack sections quick line explanation install like babel says link babel page person go get full understanding way never leave webpage set project pointed couple things nt obvious page help asking add react existing project page fixed get little detail someone going getting started nt jump multiple websites get project running asking explanation babel webpack whatever else people may use works lines telling install old versions docs great could follow along never leave site get react project running asking give us enough nt leave site use product", "d": "2/2018"}, {"body": "understand valuable feedback happy review pr docs nobody else probably look webpack makes many steps straightforward another thing consider people want configure everything manually often wildly different setups eg different backends different development setups etc soon write specific stepbystep webpackfocused guide people start asking rails net want use parcel instead webpack rollup react promote webpack et cetera try satisfy requests making guide generic outsourcing specific documentation different tools docs cover scenarios back", "d": "2/2018"}, {"body": "could follow along never leave site get react project running single command understand looking something different see frustration coming hope address future think entirely fair say get project running without leaving website fact see many people able get projects running old instructions course people always alienated matter choice make", "d": "2/2018"}, {"body": "noticed returning fragment works fine could current workaround looking closely fragment return type declared correct however string string", "d": "2/2018"}, {"body": "fredyc ask repo responsible typescript definitions", "d": "2/2018"}, {"body": "see thought kind approval react typings coming nevermind", "d": "2/2018"}, {"body": "functional component return string number react element array null", "d": "2/2018"}, {"body": "returning boolean least false probably also works useless", "d": "2/2018"}, {"body": "gaearon useful conditional rendering nt like ternaries jsx js false amp amp", "d": "2/2018"}, {"body": "yes referring return value function nt think useful root level always", "d": "2/2018"}, {"body": "gaearon thanks confirmation pr case someone wants chime", "d": "2/2018"}, {"body": "also note currently differences sfc return class component return full feature parity", "d": "2/2018"}, {"body": "test renderer expected always behave synchronously similar reactdom compatibility mode react going forward also expect stay true need reproducing case something wrong", "d": "2/2018"}, {"body": "thanks quick response confident intended behaviour close reproduce reliably", "d": "2/2018"}, {"body": "make sense shallow rendering new context api see couple issues rendered inside simulated options way old context unless mistaken function passed wo nt actually called shallow render means ca nt test output", "d": "2/2018"}, {"body": "yeah clear makes sense either", "d": "2/2018"}, {"body": "loop componentwillmount bad", "d": "2/2018"}, {"body": "please wait blog post explain everything", "d": "2/2018"}, {"body": "late ask", "d": "2/2018"}, {"body": "yeah please follow rfcs discuss early also intentionally added api rarely needed nt type often obvious ca nt", "d": "2/2018"}, {"body": "guys breaking changes looks like waste thousands manhours big projects real benefit changes hope know", "d": "2/2018"}, {"body": "breaking changes react another minor release react always respected semver never introduced breaking changes public apis minor versions referring major releases like upcoming months away always breaking changes literally reason major releases thousand react components facebook make breaking changes without good migration path works scale", "d": "2/2018"}, {"body": "gaearon waiting blog post explain everything reassure us", "d": "2/2018"}, {"body": "kvolkovichsc must sacrifices progress", "d": "2/2018"}, {"body": "kvolkovichsc blog post comes together release see checklist things release right thread nt see sense adding pressure creating fud thread", "d": "2/2018"}, {"body": "locking focus getting release together blog post", "d": "2/2018"}, {"body": "include enzyme folks shallow context discussion since almost certainly affect public api sure worked around without support renderer tho", "d": "2/2018"}, {"body": "makes sense want reach", "d": "2/2018"}, {"body": "enzyme currently provides api setting legacy context shallow rendering reasonable add way mock well might expect shallow renderer act components nt exist tree would render depth would render context providers since real reason assert directly", "d": "2/2018"}, {"body": "believe dependency mismatch packages like specify dependency version prerelease match users mean npm version warning seems causes bigger problems yarn workspaces update release script adjust dependency version range handle case hopefully also fix ci", "d": "2/2018"}, {"body": "problem actually seems called dependency version include prerelease version", "d": "2/2018"}, {"body": "seems right want send fix", "d": "2/2018"}, {"body": "done", "d": "2/2018"}, {"body": "react templating library reviving templates like supported", "d": "2/2018"}, {"body": "hi use issue tracker bug reports feature requests question please check community support resources", "d": "2/2018"}, {"body": "pmidalwan", "d": "2/2018"}, {"body": "thanks grave tried getting error thanks error appjsx module found error ca nt resolve fs c userspmidalwandesktopreact app appjsx mainjs multi webpack devserverclient webpackhotdevserve r mainjs", "d": "2/2018"}, {"body": "hey frehner thanks report nt able reproduce memory leak using jsfiddle provided running chrome incognito mode see listener count remain mostly constant make sure run test incognito mode could chrome plugin causing problem share specific details setup specific chrome macos versions thanks", "d": "2/2018"}, {"body": "aweary tried incognito made sure extensions disabled incognito get thing typing fast box recording chrome macos mac", "d": "2/2018"}, {"body": "typing fast could probably seconds could try updating chrome reproducing", "d": "2/2018"}, {"body": "updated issue coworker try machine reproduced well", "d": "2/2018"}, {"body": "nt believe generating events fast renders fake events created every time call user code dev nt know reuse instance somehow", "d": "2/2018"}, {"body": "ah yeah renders appear actually causes focusing event listeners added update title reflect aweary noticed screenshot actually listeners added notice giant cliff left side appears get garbage collected something", "d": "2/2018"}, {"body": "clear going get gc yes would nice reduce dev pressure gc", "d": "2/2018"}, {"body": "able reproduce chrome screenshot chrome seeing multiple event listeners created frehner understand correctly happening dev mode issue wo nt affect production", "d": "2/2018"}, {"body": "frehner nt think showing case significant climb listenersmemory see numbers top stay mostly constant others reproduce", "d": "2/2018"}, {"body": "aweary triggering rerenders", "d": "2/2018"}, {"body": "zoomed way timeline picture timeline zoomed automatically last part scroll area zoom inout possibly zoomed one area", "d": "2/2018"}, {"body": "frehner yupp zoomed way jumps memory usage steep climb seeing gaearon smashing keys inside text input triggering renders reproduce profile ran incognito listeners stay memory moves seconds exception whatever reason go away", "d": "2/2018"}, {"body": "best guess multiple reacts bundle one older version support fragments multiple versions react even multiple copies one react version supported lead weird issues like", "d": "2/2018"}, {"body": "also inconvenient bug happens production react bundle results unhelpful error messages production errors include link gives exact message would seen development", "d": "2/2018"}, {"body": "probably throw one simple frustration dealing several random seeming issues around fragments two work days nt react main bundle current code loads react deps async booting main bundle include react least multiple copies react however notice whatever reason safari loads react like every browser means sort caching issue safari samsung internet troublesome browser odd checksum cache busters change files change although actual filename react remain anyway lead progress writing issue worthwhile thanks help", "d": "2/2018"}, {"body": "glad helped something side could improve please let us know", "d": "2/2018"}, {"body": "use refs js let inst function setinst inst reactdomrender node technically also use return value get instance comes pitfalls legacy api assumes rendering always synchronous moving model already case get value synchronously start rendering toplevel component lifecycle method another component need cautious using return value suggest refs instead keep mind guaranteed resolve synchronously another thing consider generally methods react components considered private fine call methods rare cases eg interop nonreact code really depends trying example want update react component better rerender using new props methods useful things accomplished imperatively focus", "d": "2/2018"}, {"body": "things parent defining context work child context consumer rendered within parent parent context provider rendered child example", "d": "2/2018"}, {"body": "ok thx working", "d": "2/2018"}, {"body": "bug props immutable means values props immutable btw universal deep clone easy deep clone easy", "d": "2/2018"}, {"body": "deep clone slow defies performance optimizations components longer compare values reference see optimizing performance docs details important ultimately nothing react guarantee mutate props accident recursively freeze objects working like stronger guarantees comes performance penalty recommmend production also use library like help making immutable updates", "d": "2/2018"}, {"body": "one item would", "d": "2/2018"}, {"body": "meowtec right modify codesandbox example work expected inconsistency see confusing case works cases design check docs reactchildrenonly information", "d": "2/2018"}, {"body": "thanks chiming well aware work around limitation questioning limitation exists stated docs reactchildren reactchildren provides utilities dealing thispropschildren opaque data structure supposed treat opaque element hierarchy take several representations example following element hierarchies react jsx const element foo const element foo first would return latter would despite producing virtual dom concern relevant given new support react arrays fragments wherever element expected find especially confusing purported conceptually behave differently far concerned jsx const element foo const element foo answer look type manually unwrap value longer opaque might well ditch utilities especially since sure going lie think justification noaction dogmatic concern backwards compatibility", "d": "2/2018"}, {"body": "jamesreggio sounds reasonable either takes array return array case either way solves confusion think", "d": "2/2018"}, {"body": "hi try keep react issuer tracker focused bug reports feature requests learning react suggest reading documentation specifically section synthetic events need info check support section different avenues thanks", "d": "2/2018"}, {"body": "use unnecessary react special support string objects created considered string primitives js checking rare case hot rendering code paths would wasteful also reliably detect objects coming another iframe anyway reason shows string object instance happens iterable react iterates think need anything extra prevent think", "d": "2/2018"}, {"body": "string objects useful string natives convey important information text contain written right left agree checking specifically string objects would wasteful unreliable like object mechanism inform react render object perhaps checks presence specific function feature could value variety cases nt one already would accept pr", "d": "2/2018"}, {"body": "pretty big change think need rfc first", "d": "2/2018"}, {"body": "string objects useful far rendering goes advantages listed nt really relevant whether objects properties inherited nt matter react since expected behavior case would treat string literals representing textual data instances listed reasons would recommend coercing actual strings rendering jsx const text new string hello text", "d": "2/2018"}, {"body": "hey voodoochild currently expected behavior see context decision hope helps thanks", "d": "2/2018"}, {"body": "looking", "d": "2/2018"}, {"body": "write onerror video element event fire eventtargeterror null different native dom", "d": "2/2018"}, {"body": "hi txiaocao would nt something like following work object seems available try", "d": "2/2018"}, {"body": "spirosikmd thank reply moment video loaded sometimes null way different original onerror", "d": "2/2018"}, {"body": "hi txiaocao thank info maybe create reproducible example eg codesandbox example throws error video loaded would help lot", "d": "2/2018"}, {"body": "problem reappearing may problem code", "d": "2/2018"}, {"body": "thanks", "d": "2/2018"}, {"body": "great thanks solved", "d": "2/2018"}, {"body": "think would really useful gaearon explanation makes perfect sense need change state wrongly assumed pronebird", "d": "2/2018"}, {"body": "closing since response really react issue still trouble editing wiki might want reach github support hassanzadeh", "d": "2/2018"}, {"body": "going close wo nt specifically working happy take pr", "d": "2/2018"}, {"body": "thank much", "d": "2/2018"}, {"body": "hiii nasir anyone needs help nasir jan pm nathan hunzaker notifications githubcom wrote circling back thanks providing possible fix want make sure checking type sufficient instead compare value selectionstart example var input documentcreateelement input inputselectionstart inputtype emailinputselectionstart nullinputselectionend null would awesome make dom test fixture something like take receiving subscribed thread reply email directly view github mute thread", "d": "2/2018"}, {"body": "hi currently working issue mention nt end duplicate work", "d": "2/2018"}, {"body": "awesome spirosikmd thanks picking", "d": "2/2018"}, {"body": "really miss feature trying create proper abstractions order listen events inside wrap everything additional nodes avoid creation nodes invent function children interface pass event listeners arguments manually assign topmost nodes inside easily testable clean interface imagine much easier life become events support double implementation proposal call handler soon descendant node emitted event far got already implemented way internally synthetic events bubbling phase happens later engine one bubbles react components", "d": "2/2018"}, {"body": "hm unfortunately feature mentioned guys focused async rendering stuff", "d": "2/2018"}, {"body": "pyitphyoaung discussion without decision expect behavior implemented maybe wo nt", "d": "2/2018"}, {"body": "yeah realize since feature mentioned official docs thought least plans btw missed handle", "d": "2/2018"}, {"body": "going take look finishing pr", "d": "2/2018"}, {"body": "check pr", "d": "2/2018"}, {"body": "fyi test new alpha via", "d": "2/2018"}, {"body": "bvaughn package awesome", "d": "2/2018"}, {"body": "glad hear", "d": "2/2018"}, {"body": "yes know api would need changed question could changed way stays backwardscompatible existing code obviously ca nt say unwanted effects possible solutions would understand existing context object ca nt used transport reactcurrentowner problem optionally storing global", "d": "2/2018"}, {"body": "problem storing global two different react apps single page might even written team eg two thirdparty widgets start stealing refs use global", "d": "2/2018"}, {"body": "one reason optional", "d": "2/2018"}, {"body": "optional work case decides option thirdparty plugins might know option exists app might access react instances inside thirdparty plugins finally plugins may written way works global like asked issue even app could opt using would break kinds mismatches exactly react configuration options trying rely shared mutable state new apis thorny problems good solutions", "d": "2/2018"}, {"body": "would main application obviously implementation nt hard application creates storage space global react space react uses uses module variable nt see something thirdparty plugins time concerned reacts use module global ca nt prevent", "d": "2/2018"}, {"body": "always one main application page website may use react also use widgets thirdparty websites control example theoretically twitter facebook widgets embed react today collide write read shared globals proposal collisions would possible worst would completely control application author feel like rehashing argument convincing fine think leave discussion", "d": "2/2018"}, {"body": "benefit moving maybe less attractive use another dependency case obvious preferable use makes sense", "d": "2/2018"}, {"body": "strayiker use rfc comments", "d": "2/2018"}, {"body": "thank improved life lives everyone team", "d": "2/2018"}, {"body": "thank lot team create react people involved project mexico mexico", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "thank lt lt lt", "d": "2/2018"}, {"body": "gaearon looks like fixed master tried building got reproduce issue currently released version guess issue pr closed", "d": "2/2018"}, {"body": "gaearon timneutkens looking last night hiatus saw essentially fixed updated pr match error put test case desired", "d": "2/2018"}, {"body": "reasons stop syncing", "d": "2/2018"}, {"body": "oof send minor release removes syncing password inputs", "d": "2/2018"}, {"body": "something brought concern good argument favor removing attribute syncing added list oof send minor release removes syncing password inputs potentially dangerous behavior believe still expected behavior regardless sure worth releasing breaking change minor release anything good incentive upgrade next major release removes attribute syncing assuming agree", "d": "2/2018"}, {"body": "relevant poc exploit relies syncing making rounds", "d": "2/2018"}, {"body": "wonder much overfocus one particular vector others similar ones selectors contenteditable content html content general visible page really good sense much worse password fields however use cases also much limited hurt bad password fields minor going things later", "d": "2/2018"}, {"body": "however use cases also much limited hurt bad password fields minor going things later get behind think defaultvalue assignment pathways pass pretty simple add case passwords", "d": "2/2018"}, {"body": "think things like part parcel web platform like think syncing value breaking expectations folks attack vector", "d": "2/2018"}, {"body": "put demonstration site easily see action highlevel github searches seems many thousands repositories sync value password fields let alone fields", "d": "2/2018"}, {"body": "interim might worthwhile mention documentation dangerous sync input fields contain sensitive information sites nt use content security policy prevent injection untrusted stylesheets", "d": "2/2018"}, {"body": "hmm nt simple including send bug tracker", "d": "2/2018"}, {"body": "anything would help tracking source error would greatly appreciated example element index component stack using something find difficult root cause issue like happens nt know enough internals reconciler able answer full backtrace actually get mounted component instance sure looks easy enough saying also able provide reproducible example assuming components pure think part", "d": "2/2018"}, {"body": "read sure would considered intentional would think would either error c ers done forever avoid multiple iteration converting array", "d": "2/2018"}, {"body": "proposals additional information written imho commonly best idea pass iterators aka generators outside world higly stateful enumerated one single time least programming languages gt c php may different find odd ienumerator reset iterator rewind methods anyway means never know outside world iterator instead advisable pass stateless unmodifiable iteratoraggregate outside world iterate sequence often desired without unwanted side effects issue different example generator object passed outside world like said really advisable passes generator function passing functions often least pure functions cause problems mostly stateless gt causes indeed odd unexpected issues nevertheless examples lead problem programming languages strict distinction iterators aka generator aka ienumerator etc iterator aggregates aka iterable ienumerable etc iterator aggregate want iterate elements invoke getiterator method aka symboliterator aka iterator aka getenumerator etc get brand new iterator object dedicated foreach loops iterator object generated internally course unfortunately things different ecmascript imho odd design decisions es generators also symboliterator property makes iterator iterator aggregate time symboliterator method generator generate new generators time invoked would normally expected iterator aggregates react checks symboliterator function property given considers object normal iterator aggregate thinks problem iterate whole sequence twice development module linked example react treats generator function test normal render function invokes gets generator object single children checks symboliterator method finds methods iterates twice dev causes described trouble little demo generator stuff run chrome click run first", "d": "2/2018"}, {"body": "say considered quite strange c pass around seen escape method body internals parserlike code also c generator functions operate differently js react fix without much juggling essentially preiterate something like", "d": "2/2018"}, {"body": "simonbuchan thanks answer question whether generator functions allowed first argument code snippet much allows generator objects random arguments function basically allowing iteratorsgenerators input arguments functions sooner later end trouble see example following demo uses react production modules really easily understandable see three stripes instead four red items stripe missing course allowing generator objects arguments completely different subject allowing generator function first argument first one may good idea say anything latter suggested code change would lead unexpected side effects", "d": "2/2018"}, {"body": "yes going description sorry dug around bit could nt find heck stateless component actually called would iterator check spreading issue actually due multiple iteration", "d": "2/2018"}, {"body": "agree passing generator object outside world bad idea pass stateless generator function react nextable object problem react treats generator function normal function invokes uses resulting stateful iterator generator function treated properly development behavior production behavior generator function equals react create stateless iterable object generator function pass around react node looks like ps leave developers recommend using bare generator functions component make things clear suggest following pattern instead", "d": "2/2018"}, {"body": "addressed nt want check generators want fix specific gone care result iterable iterator use irrelevant since react nt invoking separately validation even regular iterators means visible behavioral difference development production means actual results used ones validated even worse performance collect results array first opinion react general either remove support ie deprecate iterables careful multiply iterate even regular iterables especially differently production", "d": "2/2018"}, {"body": "ping highskillzz still issue take ok gaearon wink", "d": "2/2018"}, {"body": "sure", "d": "2/2018"}, {"body": "gaearon think issue completed yep", "d": "2/2018"}, {"body": "nt need create two watchers need complex vue use want fire single side effect either two values change", "d": "2/2018"}, {"body": "like propose new react api please thank", "d": "2/2018"}, {"body": "hi everyone new contributor react would happy handle issue already submitted cla", "d": "2/2018"}, {"body": "opened pull request", "d": "2/2018"}, {"body": "hey veekas still working like try finishing", "d": "2/2018"}, {"body": "almost done afaik look pr", "d": "2/2018"}, {"body": "hi investigating issue found malstoun pointed reason incompatibility case problem workaround tricking apis accept new container hacky anyone investigating checked used internals temporary fixhelper export reacttestrenderer used write test hope help investigation issue", "d": "2/2018"}, {"body": "speaking workarounds added hack jest snapshot tests hopefully get removed soon", "d": "2/2018"}, {"body": "caused various chrome extensions replace text page example one users reported click call extension also causing crash gaearon provide guidance react could patched resilient sort bug", "d": "2/2018"}, {"body": "customers problem react happen computers chrome last version working ok users others produces use keys react elements google translate plugins anothers plugins solutions tell people turn plugins", "d": "2/2018"}, {"body": "trying add point view thread work app based mobx months exploring clojurescript years made react alternative called respo tried redux early days although short time betting reasonml core idea combining react functional programming fp got piece data render view whatever skills obeys laws fp got sideeffects use pure functions react pure functional embracing local states inside components react power interacting various libraries related dom browser apis also friendly mobx meanwhile makes react impure however tried clojurescript react pure could disaster since really hard interact many existing libraries sideeffects respo solution two goals seem conflicted local state expected nt like program component ui states global reducers since could hard maintaining end figured need syntax sugar helps maintain components states global store meanwhile write state updates inside component clojure macros learnt local states developer experience feature underneath want global states enables engines perform optimisations deep levels mobx people prefer oop developer experience engines", "d": "2/2018"}, {"body": "class js import component reactcomponent class mybutton extends component constructor thisstate render return button transform use supercreateelement transform jsx use static componentcreateelement stateless components js import jsx reactjsx const mybutton gt jsx maybe possible use tagged template literal node hopefully accept pr", "d": "2/2018"}, {"body": "agree richharris", "d": "2/2018"}, {"body": "pasting incorrectly pasted solution similar fix render result react fix without much juggling essentially preiterate something like", "d": "2/2018"}, {"body": "create react app displaying internet explorer fix", "d": "2/2018"}, {"body": "tried approach nt work still coming string etc problem please forget mismatch src working scenarios found issues used string literals", "d": "2/2018"}, {"body": "still active would interested using functionality", "d": "2/2018"}, {"body": "need usually bind handler function handles problem errorboundaries handlers inside component constructor args super args thishandler bindfunction thishandler instead thishandler thishandlerbind author solution found also throw setstate mentioned comment", "d": "2/2018"}, {"body": "reasons decided event handlers passed multiple levels throw nt know component error originated dom node triggered event component owns handler latter case even clear know component expect error originate component rendered dom node event handler attached saying nt possible even could reliably figure component originated error would work error surfaces synchronously end event dispatch however many errors occur asynchronously like promise handler timeout way catching react expect covered returning rejected promise event handler treated event handlers threw error user make sure asynchronous errors result promise returned event handler rejected related note also expect returning rejected promise lifecycle methods would result behaviour throwing error similar previous point gave event errors semantics render errors raises question whether types events like network events userdefined subscriptions would require us exposing api like invokecallback wrap arbitrary function error handling mean network events userdefined subscriptions", "d": "2/2018"}, {"body": "still working blacktrident may give go", "d": "2/2018"}, {"body": "fix extremely difficulttodiagnose bug outer application focus management code result using workaround posted specifically calling stoppropagation synthetic focus event prevent bubbling portal causes stoppropagation also called native focus event react captured handler document meant make another captured handler fixed moving handler document specifically avoided past step react toes new bubbling behavior portals really feels like minority case opinion truth could please get traction issue maybe gaearon four months old causing real pain think could fairly described bug given breaking api change react completelysafe workaround", "d": "2/2018"}, {"body": "craigkovatch still curious would solve inline example let say popup pushing size box inlining something important since pushing something layout given size ca nt hover could potentially measure popover insert blank placeholder size try align top people popover need expand content place like right next button would solve suspect pattern works work cases recommend one pattern", "d": "2/2018"}, {"body": "think general pattern works scenarios js class foo extends reactcomponent state highlight false showflyout false mouseenter thissetstate highlight true mouseleave thissetstate highlight false showflyout thissetstate showflyout true hideflyout thissetstate showflyout false render return lt gt thisstateshowflyout null flyout portal works nt get mouse events hovering portal importantly also works portal needs inline flyout stoppropagation needed pattern nt work use case", "d": "2/2018"}, {"body": "sebmarkbage using portals completely different fashion rendering container mounted final child positioned sometimes zindex react documentation suggests closer design intention ie rendering totally different place dom nt seem use cases similar enough discussion belong thread want brainstormtroubleshoot together happy discuss another forum", "d": "2/2018"}, {"body": "use case sometimes one sometimes relevant choose render final child body long hoist portal sibling hovered component rather child scenario works", "d": "2/2018"}, {"body": "think plausible scenario inconvenient want way teleport things deeply nested components scenario probably fine context context intermediate point think two separate issues maybe need slots api js class foo extends reactcomponent state showflyout false showflyout thissetstate showflyout true hideflyout thissetstate showflyout false render return lt gt hello thisstateshowflyout null class bar extends reactcomponent state highlight false mouseenter thissetstate highlight true mouseleave thissetstate highlight false render return lt gt portal would get context bar deepcomponent context event bubbling still share tree path", "d": "2/2018"}, {"body": "sebmarkbage modal case usually require context point rendered slightly unique case think component logical child thing rendered structural one lack better word eg usually want things like form context relay formik redux form whatever dom events pass one also ends rendering modals fairly deep trees next triggers stay componenty reusable belong structurally think case generally different flyoutdropdown case createportal serves tbc think bubbling behavior portals good modals also think could handled context sort modalprovider reasonably well kinda annoying especially libraries", "d": "2/2018"}, {"body": "long hoist portal sibling hovered component rather child scenario works sure follow still problem eg keydown events bubbling unexpected dom tree", "d": "2/2018"}, {"body": "jquense note example slot still within bar component would get context form something like even portal rendered document body like two indirections portalings deep sibling bar document body context portal still context form event bubbling chain neither context hovered thing", "d": "2/2018"}, {"body": "yes sorry missed reading right tho still bubbling though definitely better though think modal dialog case one probably nt want bubbling like thinking terms screen reader want everything outside modal invert nt know think case bubbling gotcha one would expect click inside dialog bubble anywhere", "d": "2/2018"}, {"body": "maybe problem nt portals nt good way share context across trees part context thing really fine modals maybe correct way thinking anyway", "d": "2/2018"}, {"body": "thinking bubbling still goes modal div body document window conceptually beyond frame containing window theoretical something like art gl rendered content extent react native might existing backing tree get semantics needs way say bubbles apps modals modals eg fb chat window might modal modal might part chat window even modal context tree belongs never completely standalone say ca nt two different semantics event bubbling context explicit portal one without etc guarantee follow path really powerful though since means event bubbling fully implemented user space events browser example happens various redux contexts today imagine user space event bubbling could even implement react events part context seams reasonable think use way every way right think fork two contexts probably end another user space context api follows dom structure parallel normal context truly different kind pushing bit see slots thing might sufficient since need explicit context bubbling happens anyway b avoid forking world two entire context systems", "d": "2/2018"}, {"body": "specifically calling stoppropagation synthetic focus event prevent bubbling portal causes stoppropagation also called native focus event react captured handler document meant make another captured handler fixed moving handler document specifically avoided past step react toes craigkovatch used event document workaround captured events nt stopped provide detailed example done resolve issue also think code issue stopping event nt stopped investigate question deeper try found reliable solution", "d": "2/2018"}, {"body": "suggesting issue workaround think separate bug react ie nt cancel propagation native focus events capture phase calling stoppropagation synthetic focus events bubbling phase code question uses native capture event listener ie", "d": "2/2018"}, {"body": "craigkovatch sounds interesting given fact used captured handler however thoughts happens guys two different scenarios using portal rendering prevent css issues like overflow hidden etc simple widgets like dropdown buttons onelevel menus create new ux layer powerful cases like modals nested menus popoverswithformswithdropdowns cases layers combined think current api satisfies first scenario suggestion use new reactrender second unusable poor create separate app providers every layer additional info provide help resolve issue disadvantages suggested param api", "d": "2/2018"}, {"body": "added comment rfc pr think worth discussing covers proposed well simpler model reliably inferring custom element properties turns back hybrid approach offers zeroconfig way integrating use cases", "d": "2/2018"}, {"body": "rolling ssr unsplashcom also need fortunately still using react able add tracking checksum mismatches patching reactdom specifically diff containernodetype docnodetype processenvnodeenv production invariant false trying render component document using server rendering checksum invalid usually means rendered different component type props client one server render methods impure react handle case due crossbrowser quirks rendering document root look environment dependent code components ensure props client server side n difference prodinvariant difference void else windowonreactproductionchecksummismatcherror undefined windowonreactproductionchecksummismatcherror difference difference redonkulus curious achieved using attribute afaics attribute always regardless mismatch sure manage going forward upgrade react think quite important experience easy introduce errors accidentally think nt handle production rely showing point development lot needs systemic handling building frameworks around ensures common patterns nt cause sebmarkbage completely agree meantime absence infrastructure need way track errors inevitably come make errors impossible write clientonly state eg dom local storage needs impossible access server render firstclient render way thinking union type unenhanced server render first client render enhanced every client render first components would receive union type access would possible inside", "d": "2/2018"}, {"body": "also interesting reactnative customers sure apply situation", "d": "2/2018"}, {"body": "working tackle others done", "d": "2/2018"}, {"body": "writing set components part common objects like render visually demonstrate happens error handled present see behaviour awreese demo exceptions caught fallback getting rendered rethrown exception covers app lead initial impression nt catching exceptions console states hours hunting amp second guessing finally ended noting functions called problem nt affect nondev environments eg test prod etc case exceptions meaningless caught seeing fullscreen overlay leads confusion manner avoiding would helpful way marking exceptions handled option rethrowing exceptions already handled boundary way turning traceback overlay etc quickanddirty workaround hide overlay", "d": "2/2018"}, {"body": "also problem first thought something wrong always see last resort error view triggered global onerror handler least docs mention another thing really believe global error handles rare lacking real data well react catches errors renders global error handler needs used catch errors last resort manner personally already catch expected errors eg network errors sagas", "d": "2/2018"}, {"body": "herodrigues able get valid errors chrome extension dev chrome extension well seeing crossorigin errors", "d": "2/2018"}, {"body": "try checking packagejson remove flag finally worked", "d": "2/2018"}, {"body": "brendonsled mean npm loglevel flag yes nt fix merely silencing problem would nt recommend might silence useful errors way", "d": "2/2018"}, {"body": "ianvs something wrong project developed clean extension using react everything ok see comment", "d": "2/2018"}, {"body": "dominikserafin mean webpack cli", "d": "2/2018"}, {"body": "following solution works tag", "d": "2/2018"}, {"body": "ok actually fix images displayed react component using img src tag", "d": "2/2018"}, {"body": "react native including metro fresco yoga also relicensed mit", "d": "2/2018"}, {"body": "unrelated question yall cope github issue references commits conjunction commit reference spam caused rebases", "d": "2/2018"}, {"body": "new updates pr please look", "d": "2/2018"}, {"body": "aweary according nt support custom dom elements ampcarousel custom attributes slide tried call react serverside rendering success confirm", "d": "2/2018"}, {"body": "hey kschmidtdev correct server renderer still restricts attributes using isattributenamesafe nt remember thought changed react neither successor change behavior reopen sure solution would unfortunate amp uses nonstandard attribute names server rendering amp components common use case could potentially fork version allows attributes leadingtrailing brackets custom elements gaearon think", "d": "2/2018"}, {"body": "would really appreciate solution serverside amp rendering well using react never dehydrate client", "d": "2/2018"}, {"body": "lucasconstantino would love hear opinions fb article addition go testing kinds methods perhaps deciding test", "d": "2/2018"}, {"body": "creativetim component methods usually implementation detail nt tested propscallbacks interface use time use methods part public api api used case also test methods though bind arrow even inlined functions nt care", "d": "2/2018"}, {"body": "agree using refs outside component reach bad practice", "d": "2/2018"}, {"body": "mean using refs testing", "d": "2/2018"}, {"body": "mean unless explicit part component api suggest trying get access component internal implementation sure would needed testing enzyme used get node want without refs", "d": "2/2018"}, {"body": "yeah meant cases ca nt describe events state example reactvirtualized props shot foot gon na change initial values instance methods", "d": "2/2018"}, {"body": "different projectmodule react present inside main express application saying different packagejson present call react client react client make change configuration ie packagejson configure use proxy render express apis server since express react running different servers", "d": "2/2018"}, {"body": "like open based something finding bit confusing would preferred open new issue well figured post comment first reduce new issue clutter using controlled components near everything application recommended way go subscribe idea react control state possible however recently went ryanflorence advanced react wonderful collection breakdown powerful still uncommon features patterns available last lecture controlled components around lecture video ryan something interesting writes code looks like context component necessarily relevant although would help understand watching lecture video lecture free create account mentally replace snippet native input element note statement incorrect form field elements special cases compared composite components talking controlled vs uncontrolled components please correct intention something nt seen heard lot noise using change handler uncontrolled component ryan says emphasis mine nt actually need control active index nothing else app changing active index buttons anything changes even need get state change handler nt mean control time control component programmer need change index value whatever controlled property nt need control want know ryan florence advanced react lecture controlled components watched video handful times implemented controllable components realized rather confused pattern like might seen react community large react docs make mention pattern uncontrolled components read official docs uncontrolled components ever used conjunction refs however want know value okay pattern use change handler something like input element trying read value affect something else app", "d": "2/2018"}, {"body": "aweary trying fix issue looks like update happening fiber changes however could nt see anywhere parsing number like said like etc state input ca nt add checks line set help may wrong idea shouting thoughts", "d": "2/2018"}, {"body": "interest fix based suggestions nilshartmann happy contribute required changes new tests required edit understand correctly xastor suggestion closely related appears general approach fix reading lengthy discussion last implementation attempt guess redesigning event propagation system support multiple roots sprawlinghard implement change", "d": "2/2018"}, {"body": "encouter bug using textfield focus gets disabled next render native blur event fires react attached event handler nt using chrome minimal example shows bug renders textinput button focus textfield submit pressing enter native blur event logged react blur event fire class app extends purecomponent state disabled false", "d": "2/2018"}, {"body": "snegostup roastlechon problem gptadsense ads wait show first add react loaded around seconds destroys viewability first ad need load ad react loaded really simple using ssr react wipes hydration phase surprised nt solution workaround yet insight really welcomed", "d": "2/2018"}, {"body": "luisherranz able diagnose figure hydration mismatch occurred wiped dom hydration gpt able load beforehand server side rendered markup hydration nothing wiped fixed issue mismatch", "d": "2/2018"}, {"body": "roastlechon thanks answer error render one react tag inside rendered library react loaded mismatch really happening server client code sever code additional tags created client code react finally loads", "d": "2/2018"}, {"body": "nobody else picked issue love give try", "d": "2/2018"}, {"body": "look feel like would mean relatively big change could probably bit feedback gaearon pushing", "d": "2/2018"}, {"body": "yeah good point looks like would require changing order different effects applied elements createdupdated changing would obviously lot sideeffects leave find something else work", "d": "2/2018"}, {"body": "exactly unless misunderstood something find another way interested hear sun feb portfoliorails notifications githubcom wrote yeah good point looks like would require changing order different effects applied elements createdupdated changing would obviously lot sideeffects receiving commented reply email directly view github mute thread", "d": "2/2018"}, {"body": "sebmarkbage purpose would highly discourage sideeffects unforeseen consequences even though technically could constructor could give details edge case", "d": "2/2018"}, {"body": "nesmalltown take look link", "d": "2/2018"}, {"body": "occurs specific conditions hover rule element clickable styles rule nt matter rule even empty adjacent sibling rule specific term matches least one element dom nt need match entire rule rule even empty clickable element followed element could also wrapped first element inside element hover rule element clickable styles rule nt matter rule even empty adjacent sibling rule specific term matches least one element dom nt need match entire rule rule even empty clickable element followed element could also wrapped first element inside element case tapping clickable element whether click javascript onclick handler simple lt href gt register instead applies hover style second tap navigate run javascript happens mobile safari changing pretty much anything make bug disappear", "d": "2/2018"}, {"body": "problem bundler webpack gcc error mainjs closure compiler compiler waiting input via stdin warning bad type annotation missing opening see information param function callback callback function warning bad type annotation missing opening see information param function callback callback function warning suspicious code result void operator used react invariant false reactdom loaded react make sure load react package loading reactdom void warning suspicious code result void operator used propertieshasownproperty propname invariant false injectdompropertyconfig trying inject dom property already injected may accidentally injecting dom property config twice may injecting two configs conflicting property names propname void warning suspicious code result void operator used propertyinfohasbooleanvalue propertyinfohasnumericvalue propertyinfohasoverloadedbooleanvalue lt invariant false domproperty value one boolean overloaded boolean numeric value combination propname void warning suspicious code result void operator used typeof injectederrorutilsinvokeguardedcallback function invariant false injected invokeguardedcallback must function void warning suspicious code result void operator used pluginindex gt invariant false eventpluginregistry inject event plugins exist plugin ordering pluginname void warning suspicious code result void operator used pluginmoduleextractevents invariant false eventpluginregistry event plugins must implement method pluginname void warning suspicious code result void operator used publisheventforplugin publishedevents eventname pluginmodule eventname invariant false eventpluginregistry failed publish event plugin eventname pluginname void warning suspicious code result void operator used eventnamedispatchconfigshasownproperty eventname invariant false eventpluginhub one plugin attempted publish event name eventname void warning suspicious code result void operator used registrationnamemodules registrationname invariant false eventpluginhub one plugin attempted publish registration name registrationname void warning suspicious code result void operator used eventpluginorder invariant false eventpluginregistry inject event plugin ordering likely trying load one copy react void warning suspicious code result void operator used namestoplugins pluginname invariant false eventpluginregistry inject two different event plugins using name pluginname void warning bad type annotation missing opening see information param function listener applicationlevel callback warning suspicious code result void operator used next null invariant false accumulateinto accumulated items must null undefined void warning bad type annotation missing opening see information param function cb callback invoked element collection warning bad type annotation missing opening see information return function stored callback warning suspicious code result void operator used listener typeof listener function invariant false expected listener function instead got value type registrationname typeof listener void warning suspicious code result void operator used eventqueue invariant false processeventqueue additional events enqueued processing event queue support yet implemented void warning bad type annotation missing opening see information param function class warning suspicious code result void operator used event instanceof eventconstructor invariant false trying release event instance pool different type void warning suspicious code result void operator used fiberhostcomponent amp amp typeof fiberhostcomponentrestorecontrolledstate function invariant false fiber needs injected handle fiber target controlled events error likely caused bug react please file issue void warning suspicious code result void operator used isfibermountedimpl fiber mounted invariant false unable find node unmounted component void warning suspicious code result void operator used state unmounted invariant false unable find node unmounted component void warning suspicious code result void operator used didfindchild invariant false child found either parent set indicates bug react related return pointer please file issue void warning suspicious code result void operator used aalternate b invariant false return fibers always others alternates error likely caused bug react please file issue void warning suspicious code result void operator used atag hostroot invariant false unable find node unmounted component void warning suspicious code result getprop operator used anchornodenodetype warning suspicious code result getprop operator used focusnode warning suspicious code result void operator used contextstackcursorcursor null invariant false unexpected context found stack error likely caused bug react please file issue void warning suspicious code result void operator used contextkey childcontexttypes invariant false sgetchildcontext key defined childcontexttypes getcomponentname fiber unknown contextkey void warning suspicious code result void operator used instance invariant false expected instance point error likely caused bug react please file issue void warning suspicious code result void operator used isfibermounted fiber amp amp fibertag classcomponent invariant false expected subtree parent mounted class component error likely caused bug react please file issue void warning suspicious code result void operator used parent invariant false found unexpected detached subtree parent error likely caused bug react please file issue void warning suspicious code result void operator used typeof callback function invariant false invalid argument passed callback expected function instead received callback void warning suspicious code result void operator used props invariant false must pending props initial mount error likely caused bug react please file issue void warning suspicious code result void operator used newprops null invariant false always pending memoized props error likely caused bug react please file issue void warning suspicious code result void operator used typeof childstore object invariant false react component warnformissingkey store error likely caused bug react please file issue void warning suspicious code result void operator used ownerfibertag classcomponent invariant false stateless function components refs void warning suspicious code result void operator used inst invariant false missing owner string ref error likely caused bug react please file issue mixedref void warning suspicious code result void operator used typeof mixedref string invariant false expected ref function string void warning suspicious code result void operator used elementowner invariant false element ref specified string owner set may multiple copies react loaded details mixedref void warning suspicious code result void operator used typeof iteratorfn function invariant false object iterable error likely caused bug react please file issue void warning suspicious code result void operator used newchildren null invariant false iterable object provided iterator void warning suspicious code result void operator used current null workinprogresschild currentchild invariant false resuming work yet implemented void warning suspicious code result void operator used nextprops null invariant false always pending current props error likely caused bug react please file issue void warning suspicious code result void operator used current null invariant false indeterminate component never mounted error likely caused bug react please file issue void", "d": "2/2018"}, {"body": "found solution using two dirty things one calling trigger reflow css tricks one using", "d": "2/2018"}, {"body": "similar problem use case stock quote needed animate cell flash background red green depending direction change quote price solution css animation resulting one change dom component state reflect updated price apply right classname background animation code react component example nt anything react specific hopefully helps people similar need temporarily change look something screen allow animate back original state", "d": "2/2018"}, {"body": "jasonmerecki problem code want show animation example case two consecutive raises wo nt work", "d": "2/2018"}, {"body": "aha thanks saitonakamura actually need fix needs happy solution least working basically duplicate css flip like since different classes browser apply new class new animation", "d": "2/2018"}, {"body": "ran optimizely rewriting headline element specific page bad time imagine could potentially run similar services rewriting content page load", "d": "2/2018"}, {"body": "hey may know difference calling reacfperfstart reactperfstop console app thank", "d": "2/2018"}, {"body": "news issue far see makes almost impossible write performant code requestanimationframe throttling mouse move events seems quite relevant", "d": "2/2018"}, {"body": "hi add active event listener like call stop default scrolling chrome move element order know element move add jsx element like set state property read react would support active event listeners would boil one line thanks philipp ps try call passive event listener get error chrome intervention unable preventdefault inside passive event listener due target treated passive see passive events become default chrome intervention google breaking web somehow also making scrolling faster", "d": "2/2018"}, {"body": "realizing well nt think recommendation use explicit enough cover behaviour think description fatfisz put forward wordier explicit", "d": "2/2018"}, {"body": "supply bound callback method instead javascript inefficiently recreate callback method call every render", "d": "2/2018"}, {"body": "getting behavior shape require keys present anymore remember keys needing present back also", "d": "2/2018"}, {"body": "yes scanning serverside rendered html adding style unsafeinline nonce stuff try publish npm module code post", "d": "2/2018"}, {"body": "using npm node webpack issue happens us fixed creating alias webpack dev config", "d": "2/2018"}, {"body": "fixed replacing string ref function ref one deeply nested components replaced", "d": "2/2018"}, {"body": "info also solved class mybutton extends component", "d": "2/2018"}, {"body": "interest saving time solution use camel case renders", "d": "2/2018"}, {"body": "sorry resurrect old thread came across issue google trying understand make render callback component performant got interested gaearon suggestion go implementing published leaving link anyone else might come across issue like also much welcome feedbackcriticism purerendercallbackcomponent thanks", "d": "2/2018"}, {"body": "exactly problem transitions transition container two animated views animate previous next children remounting causes slow visual artifacts components network requests load huge sets data", "d": "2/2018"}, {"body": "pronebird wrote based blog post reparentablejsx sure help solving problem explain gist reparentable component true react component inside manually creates dom node reactdomrender children given children must thus single react component use reactfragment needed additionally reparentable requires ref attach manually created dom node awsm reparentable tries implement react createelement like call api controlling manually created dom node want create reparentable element could use reparentable alias like use use tried little hard make work smoothly looking sure actually work note used extensively caveats react node ref points keeps changing entirely possible react take offense extra dom child detach nt seen happen nt keep changing ref node way naturally use jsx syntax interact reparentable component want need implement babel plugin transform eg calls want vary time takes old node removed need implement fex promise prop resolved newchildren finished networking could maybe use promisefinally remove old dom mount node promise resolved presume mit licence code guess something hope one cares enough come hounding", "d": "2/2018"}, {"body": "actually event target following follows correct pattern descern difference click event return event button js srccomponentsbuttonbuttonjs import react react const handleclick event gt eventdetail return event occured type click event occured const button props gt export default button", "d": "2/2018"}, {"body": "facing issue react seemingly find solution rendered server without server render used work fine sharing two snippets import express express import serverrenderer middlewarerenderer const port const path require path const app express const router expressrouter import loadable reactloadable routeruse serverrenderer appuse static expressstatic pathjoin dirname assets routeruse expressstatic pathresolve dirname build maxage routeruse serverrenderer appuse router loadablepreloadall gt applisten port error gt error return consolelog something bad happened error rendererjs import react react import reactdomserver reactdomserver import provider reactredux import connectedrouter reactrouterredux import store srcstore import creatememoryhistory history import staticrouter reactrouter import app srccontainersapp import serverstylesheet styledcomponents import main app component import app srcindex const path require path const fs require fs const history creatememoryhistory initialentries next last initialindex export default req res next gt const filepath pathresolve dirname build indexhtml fsreadfile filepath err htmldata gt err consoleerror err err return resstatus end const sheet new serverstylesheet const body reactdomserverrendertostring sheetcollectstyles const styletags sheetgetstyletags sheetgetstyleelement var htmldata htmldatareplace var htmldata htmldatareplace return ressend htmldata works fine use document inside instead srcindexjs import react react import reactdom reactdom import indexcss import store history store import app containersapp const target documentqueryselector root reactdomhydrate target using file wo nt work server throws error", "d": "2/2018"}, {"body": "writing old issue fixed whatever problem react unrelated please file new issue minimal reproducing example problem thanks", "d": "2/2018"}, {"body": "sophiebits given client longer run rendertostring relies suggested way forward", "d": "2/2018"}, {"body": "class shouldnotupdate extends reactpurecomponent puzzled super nt work inside react component", "d": "2/2018"}, {"body": "vincnetas intercepting lifecycle methods example want measure time occurred componentwillmount componentdidmount child component achieve hoc", "d": "2/2018"}, {"body": "want achieve something like jsx const mydivclassnames b could possibly use classnames utility follows jsx import classnames classnames const mydivclassnames classnames b maybe jsx import classnames classnames const isctrue false const mydivclassnames classnames true b true c istrue", "d": "2/2018"}, {"body": "always const children reactchildrenmap thispropschildren child gt child childrenfilter somecondition childrensome anothercondition attach directly", "d": "2/2018"}, {"body": "seems like changing would solve practical problems experiencing would introduce new ones would actually solve problems would remove two levels indirection creating ast jsx jsonml supported natively would need two steps would allow people prefer js xml write templates directly js also eliminates hidden dependency nt see using jsx eliminated allows create crossframework templates specific react vdom library also template simple ie using complex props like serialized sending wire saved together json data like translations example allows add markup translations stored json one biggest benefits would jsonml standartized tool works jsonml could pick work", "d": "2/2018"}, {"body": "native browser fetch api promise based cancellable polyfills every http library make use abortcontrollers rxjs also cancellable", "d": "2/2018"}, {"body": "wrote blog article demonstrating use abortcontroller simple react use case appreciate feedback got something wrong", "d": "2/2018"}, {"body": "smithaitufe recycle rows view scrolling massive list lessen dom size result faster ui speeds", "d": "2/2018"}, {"body": "bumped problem react native web currently relies certain flex styles due inconsistencies browsers expand shorthand applying fine transforming styles css via breaks using inline styles due limitation react dom make pr add style warning values include look ways potentially support", "d": "2/2018"}, {"body": "using apollo makes data loading super simple reactrouter componentbased api makes simple composable routing orthogonal application state redux order singlepass streaming rendering waits data fetches possible return promise client server return promise simply return promise render data loaded rest plain react", "d": "2/2018"}, {"body": "approach creates nice symmetry functional components function person name return name class people extends reactcomponent render people peoplemap person example share similar interfaces makes easier mix stateful stateless components means less work decide convert one type component", "d": "2/2018"}, {"body": "solutions using unfortunately work ios safari ios chrome still empty autofill idea people handling autofill forms using controlled components consider login scenario autofill email nothing changes even dispatchevent hack chrome report email empty start writing value password field email gets lost react state thinks empty unless way get chrome report value ca nt think solution using uncontrolled components input validation getting form values submit like old days track star issue", "d": "2/2018"}, {"title": "unable get response objects", "body": "submitting current behavior response data encoded try call value ca nt get value code even ca nt get alert also expected behavior objects angular return object environment", "num": "22507", "d": "2/2018"}, {"title": "markup rendering school assignment recreation", "body": "submitting current behavior issue done using web template school attempting get render instructions assignment asking help assignment problem expected behavior part trying render first page without images worked clean project either complements attempting section arranging components tried creating new projects also using markup timer layout nothing web console complaining closing certain tags literally idea worked yesterday exact steps minimal reproduction problem instructions follow instructions rendering markdown appcomponenthtml render page ng open serve fix issues web console warnings nonclosed tags render page try rerendering header works also works render html outside approot indexhtml otherwise literally double checked working indexhtml sane default motivation use case changing behavior fix rendering assignment people future environment ubuntu latest firefox angular memory tooling issues node version platform linux others github allow html rendered comments people need actual code complete layout glad send email put shared folder", "num": "22505", "d": "2/2018"}, {"title": "aio docsapi render param descriptions functions interfaces enums", "body": "submitting current behavior captures params types table ignores description param tag expected behavior capture param description param table minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22501", "d": "2/2018"}, {"title": "aio docsapi consider layout method description etc", "body": "continuing discussion", "num": "22500", "d": "2/2018"}, {"title": "testing example work without manual corrections", "body": "submitting current behavior testing example work locally use guide issue get several errors warning local angular cli older global one expected behavior works example immediately without warnings please provide srctestts put jasminemarbles latest angularcli packagejson example package mentioned minimal reproduction problem instructions ng test motivation use case changing behavior environment", "num": "22497", "d": "2/2018"}, {"title": "discriminate routes union interfaces", "body": "submitting current behavior currently required parameters witch result run time errors checking parameters expected behavior interface required parameter one options work properly using union types type discrimination expressed like typescript export type route componentroute redirectroute childrenroute loadchildrenroute interface baseroute path string pathmatch full prefix think literal types matcher urlmatcher outlet string canactivate canactivatechild candeactivate canload data data resolve resolvedata runguardsandresolvers runguardsandresolvers interface componentroute extends baseroute component type interface redirectroute extends baseroute redirectto string interface childrenroute extends baseroute children routes interface loadchildrenroute extends baseroute loadchildren loadchildren minimal reproduction problem instructions motivation use case changing behavior would allow use predictable api errors coding time would allow fix properly declare route according needs environment", "num": "22496", "d": "2/2018"}, {"title": "support listener return value", "body": "needs retain return values event handlers preventdefault called appropriate dom renderer currently click handler like generate however loses return value compiler could generate slightly complicated chains like becomes downsides code size listener defined since involves compiler changes chuckjaz probably want weigh makes sense generate cc chuckjaz", "num": "22495", "d": "2/2018"}, {"title": "documentation error", "body": "submitting current behavior empty content expected behavior show masterdetail components chapter minimal reproduction problem instructions browse", "num": "22493", "d": "2/2018"}, {"title": "httpclientpost request becomes options setting custom headers", "body": "submitting current behavior request send using options method seen logs request url url request method options remote address ip address status code version request headers raw host url useragent macintosh intel mac os x accept texthtml applicationxhtmlxml applicationxml acceptlanguage enus en acceptencoding gzip deflate accesscontrolrequestmethod post accesscontrolrequestheaders accesscontrolalloworigin paceuseragent origin connection keepalive cookie sessionidvalue realmptpl expected behavior cookie sessionidvalue realmptpl paceuseragent rest host url useragent macintosh intel mac os x accept texthtml applicationxhtmlxml applicationxml acceptlanguage enus en origin connection keepalive minimal reproduction problem instructions let cookie sessionidxxzzxzxzx realm ptpl let apiheader new httpheaders let contenttype apiheaderappend contenttype applicationxwwwformurlencoded let acontrol contenttypeappend accesscontrolalloworigin let pace acontrolappend paceuseragent rest let hcookie paceappend cookie cookie let param new urlsearchparams var key data paramappend key data key post request motivation use case changing behavior environment", "num": "22492", "d": "2/2018"}, {"title": "angular guide working getting error request document failed", "body": "getting error tried navigate around angular guide request document failed unable retrieve guidecomponentstyles page time please check connection try later", "num": "22491", "d": "2/2018"}, {"title": "unable lazy load modules dependencies using barrel", "body": "submitting current behavior trying lazyload cherry picking specific modules related particular route example npm package flat indexjs want lazyload dependencies loaded dependencies loaded dependencies loaded js chunks generated attached image refer dist also noticed loading last registered route case loads required js chunk however navigating loads incorrect chunk following error error find loginmodule commonindex please refer image expected behavior expect necessary modules lazy loaded specific route minimal reproduction problem instructions github repo navigate otherwise refer attached images environment browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx x tooling issues angular cli node version platform windows", "num": "22490", "d": "2/2018"}, {"title": "maintain log documentation changes enable subscription doc updates", "body": "submitting current behavior came across changelog page page updated last time although many changes page longer updated supported expected behavior nice notificationsubscription feature actual documentation changes new docs guides addedremovedupdated etc get informed", "num": "22489", "d": "2/2018"}, {"title": "defaulturlmatcher routerjs prints error router config path property", "body": "submitting current behavior config routers following code ngmodule declarations somecomponent imports routermoduleforchild url tablecalendar desc calendar path abc component somecomponent export class somemodule routermodule prints error encoutering first mistake router config path property second valid router config parsed unhandled error expected behavior router module angular ignore invalid router config continue parse valid router config items minimal reproduction problem instructions online app explains everything motivation use case changing behavior case use router config array need add invalid router config item array environment", "num": "22487", "d": "2/2018"}, {"title": "sometimes errors nt disappear reopen file htmlts files", "body": "submitting current behavior extension requires closing html ts files reopening update state errors file happens angular projects created cli extremely counter productive expected behavior error fixed red squiggly disappear minimal reproduction problem instructions error app component ts file stating including angular module modifying app module ts file cause red squiggly disappear app component ts file right requires close app component file reopen completely confusing counter productive motivation use case changing behavior environment browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows gif shows error action found", "num": "22486", "d": "2/2018"}, {"title": "ots parsing error invalid version tag", "body": "upgraded angular ca nt get get glyphicons icons download also deleted nodemodules packagelockjson reinstall issue browser chrome version official build thanks help failed decode downloaded font ots parsing error invalid version tag", "num": "22484", "d": "2/2018"}, {"title": "documenting import feature module another application", "body": "submitting current behavior documenting import feature module within application another application expected behavior explain import feature module external application minimal reproduction problem instructions motivation use case changing behavior requested documentation could complete explanation feature modules environment", "num": "22479", "d": "2/2018"}, {"title": "validators default methods like required return object including error message easy translation", "body": "submitting current behavior package forms validators class methods like required returning boolean null object static required control abstractcontrol validationerrorsnull return isemptyinputvalue controlvalue required true null expected behavior method default validators like required return object including error message translated like way minimal reproduction problem instructions motivation use case changing behavior easy translation invalid messages template forms environment", "num": "22478", "d": "2/2018"}, {"title": "change detection stops working cordova", "body": "change detection stops working cordova application goes background opens via push notification click mobile phone example social authorization via native mobile facebook application iphone click authorization button facebook application opens application goes background authorization finished application goes back foreground change detection stops working events buttons run fine html code update example change classes etc environment", "num": "22476", "d": "2/2018"}, {"title": "routereusestrategyretrieve gets called twice row", "body": "submitting current behavior called twice row creating router state expected behavior call reuse return value ts else retrieve activated route used displayed currently displayed const detachedhandle detachedroutehandleinternal routereusestrategyretrieve currvalue detachedhandle const tree treenode detachedhandleroute setfuturesnapshotsofactivatedroutes curr tree return tree motivation use case changing behavior current behavior confuses implementer interface environment", "num": "22474", "d": "2/2018"}, {"title": "problem observableformpromise form submit document", "body": "code observablefrompromise documentforms myform submit subscribe response gt debugger consolelog subscribe submit alert subscribe submit consolelog response error gt go debugger consolelog error submit alert error submit consolelog error gt debugger consolelog complete submit alert complete submit want gets response submit form try use observable subscribe get error typeerror read property undefined promiseobservablewebpackjsonp rxjsobservablepromiseobservablejspromiseobservablesubscribe promiseobservablewebpackjsonp rxjsobservablejsobservabletrysubscribe promiseobservablewebpackjsonp rxjsobservablejsobservablesubscribe safesubscribererror safesubscriberwebpackjsonp rxjssubscriberjssafesubscribertryorunsub safesubscriberwebpackjsonp rxjssubscriberjssafesubscribererror subscriberwebpackjsonp rxjssubscriberjssubscribererror subscriberwebpackjsonp rxjssubscriberjssubscribererror xmlhttprequestonload anybody help thanks david", "num": "22473", "d": "2/2018"}, {"title": "navigate router method ngoninit target component called", "body": "submitting current behavior making redirect thisrouternavigate route ngoninit called navigated component thisrouternavigatebyurl someroute everything works fine expected behavior thisrouternavigate route ngoninit navigated component fire environment", "num": "22472", "d": "2/2018"}, {"title": "c", "body": "possible angular engine work c place typescript really love angularjs always use web project also fond c much work c unity server wish could write angular template syntax html write c run page instead javascript look blazor project see compilation process similar compile typescript switch typescript angular c could bridge underlying angular engine monowasm", "num": "22470", "d": "2/2018"}, {"title": "tutorial two version", "body": "tutorial two version different modified english chinese version gt english gt chinese", "num": "22468", "d": "2/2018"}, {"title": "ngondestroy called injectables created via factory providers", "body": "current behavior export class destroytest implements ondestroy ngondestroy lt lt lt lt lt method never called consolelog ngondestroy destroytest called export class implements ondestroy ngondestroy lt lt lt lt lt method called app ref destroyed consolelog ngondestroy called export function createdestroytest return new destroytest ngmodule imports browsermodule formsmodule declarations appcomponent hellocomponent bootstrap appcomponent providers provide destroytest usefactory createdestroytest export class appmodule constructor destroytest expected behavior method present called values provided via di regardless provider type minimal reproduction problem instructions environment note reported gx", "num": "22466", "d": "2/2018"}, {"title": "download excel file web api file corrupt", "body": "trying download file controller api angular component file getting downloaded showing corrupted could please one one help issue controller code service code component code spending almost day issue luck please provice solution different approach also good", "num": "22464", "d": "2/2018"}, {"title": "move compiler routes token core", "body": "right libraries toolings using angular compiler list routes require peer dependency awkward nt deal normal routes routing tokens token core would remove dependency", "num": "22463", "d": "2/2018"}, {"title": "link target href applied directive exists", "body": "submitting current behavior directive created selector containing href things work fine links created inline html directive done link followed link returned code though using href html anchor longer styled link clicking text directive nt follow link expected behavior directive run link followed minimal reproduction problem instructions motivation use case changing behavior want run code links clicked throughout app environment browser x chrome desktop version x firefox version x ie version", "num": "22462", "d": "2/2018"}, {"title": "parent component change detection strategy inherited descendants", "body": "submitting current behavior setting change detection strategy parent component sets change detection strategy descendants tree seems understand change detection skipped parent nt changed child performs change worthy event calling nt change detection set nt still trigger change detection expected behavior switching change detection strategy parent component set change detection strategy components tree minimal reproduction problem instructions set examples angular example layer deep parent motivation use case changing behavior migrating codebases smartpresentational component architecture seems quite possible piecemeal container components affecting descendants large distributed team used quite often trigger change detection perform operations next tick api calls used work triggering changes either also seems break encapsulation parent component change detection strategy affects child also affects projected content environment", "num": "22461", "d": "2/2018"}, {"title": "angular tutorial tour heroes routing documentation nt accurate", "body": "submitting current behavior written documentation code samples work described tutorial begins breakdown add routeroutlet error template parse errors appmessages known element expected behavior stepbystep documentation accurate incremental build working app minimal reproduction problem instructions follow current tutorial motivation use case changing behavior tutorial accurate works people interested learning angular environment na", "num": "22460", "d": "2/2018"}, {"title": "component transclusion instantiates transcluded component always", "body": "submitting current behavior component template transclusion tag ngcontent decorated container structural directive ngif framework instantiates component render expected behavior expect component inside instantiated rendered unless directive true minimal reproduction problem instructions check console logged message component ngoninit event fired environment", "num": "22457", "d": "2/2018"}, {"title": "deep copy still reflect new changes parent", "body": "submitting bug report current behavior nested array object copied changes new new object still reflects old expected behavior expected behaviour copy parent independent angularcopy method minimal reproduction problem instructions var arr name ab name bc name ca options size var newfield objectassign arr newfieldoptionspush size consolelog new array newfield output name ca options size size consolelog old arr output name ca options size size motivation use case changing behavior environment", "num": "22455", "d": "2/2018"}, {"title": "valid code interpreted dead code due custom annotation", "body": "submitting current behavior compiling prod using aot dead code removed without possibility developer fine tune behavior poses problems certain use cases example import oninit component angularcore component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent implements oninit title app aclass ngoninit consolelog checking component thisaclass thisaclasssmethod consolelog aclass null export function customannotation obj consolelog hello obj appcomponentprototype aclass obj consolelog appcomponent appcomponent file could seen example class going added properties using custom annotation would expect launching application see console message happens compiled aot dev compiled prod includes minification problem minifier going remove class considered dead code obviously dead code full project found project compiled tested project compiled found project compiled found expected behavior would expect see message developper tool console static method executed component minimal reproduction problem instructions download project check developer tools gt static method class called try serve like basically simulate prod environment without minification everything fine motivation use case changing behavior developer allowed fine tune behavior certain cases could set false dead code would removed poses problems environment", "num": "22452", "d": "2/2018"}, {"title": "httptestingcontroller expect specified number http calls", "body": "submitting current behavior write test use httptestingcontroller mock http calls ca nt assert set number calls made api route expected behavior examples could called minimal reproduction problem instructions motivation use case changing behavior want test whether http calls made api route environment issue raised stackoverflow", "num": "22451", "d": "2/2018"}, {"title": "invalid return type debugelementquery", "body": "submitting current behavior debugelementquery declares debugelement return type expected behavior declares return type minimal reproduction problem instructions motivation use case changing behavior result actually null error caught compiler since programmer assert element found especially true predicate seems likelihood typos mistakes pretty high reason compiles without errors return type array indexing seems intended behaviour typescript compiler environment", "num": "22449", "d": "2/2018"}, {"title": "bug async test report error call settimeout async beforeeach", "body": "submitting current behavior call case throw error expected behavior error throw minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22448", "d": "2/2018"}, {"title": "router guard nt trigger using navigatebyurl router class", "body": "submitting current behavior navigating using directive works well router guard however navigating using class router guard trigger expected behavior navigating using class router guard triggered similar using directive minimal reproduction problem instructions step reproduce example app open example app chrome open chrome developer tool switch console tab click link check console log console log printed click link check console log console log printed motivation use case changing behavior use router guard regardless way routing either using directive using navigatebyurl class environment", "num": "22447", "d": "2/2018"}, {"title": "cloning angularnode project", "body": "hello everyone working end studies project project management web application found project seems interesting installed npm frontend stuck login component could nt navigate components body help please make working started study nodejs recently thank nice day", "num": "22444", "d": "2/2018"}, {"title": "feature request non nodejs depdendant server side platform server", "body": "background hey would like start discussion ask feature request tried keep feature request short amp understandable possible somehow failed miserably java backend developer really interested angular last year wrote small java library allows developer server side render angular application java stack library uses java language bindings find project would like spend time library add features make production ready problem experiencing several technical limitations personally ca nt solve good alternative reaching inputfeedback possible solution overview give short overview library works take look diagram create normal angular application via angular cli generate universal server addition glue code required nodejs instance load server bundle call method render page requests via result passed back java system sent back client important node javascript engine allows us dynamically register javascript functions like implemented java called javascript find glue code file compare render adapter expressjs view engine lot simpler guess problems solutions works great small applications one module routing exist several larger problems problem angular requires nodejs rendering javascript engine solution provides modern module loading b implemented nodejs api exist library provide functionality quality problem project nt actively maintained last public releases windowsox x made september really like project future unsure would like nonnodejs requiring solutions keep mind java javascript engines dynamically implement functions java could reimplement required nodejs parts exist several nonnodejs alternatives nt implement nodejs api nashorn great box implementation nodejs api ringojs great full implementation nodejs api rhino dead superseded nashorn still usable see usable solution available one would good alternatives favor nashorn javascript engine provided java runtime box problem many rendering tasks done nodejs underlaying subsystem authentication sessioncookie management done java wevserverwebframework example session based basic authentication stateless jwt token stored via secured cookie works great potential requests like server side rendering made nodejs precise underlying system aware sessioncookies hence server side rendered request unable fetch data client side executed request able question nodejs know sessioncookieauthentication one solution opinion dirty hack would pass sessioncookiehttp header information pass request would work violates protection cookie values would nt pass commercial security review happens case potential xss server side rendering sophisticated cleaner solution would route back request java environment securly access sessioncookie information user make manual java request information pass result back nodejs instance nodejs instance never know anything cookies pass available cookies course proposal short make possible replace nodejs based functionality like http handling custom non nodejs dependent solution happen compile time relocatable server bundle nt require nodejs module also means could use clientside read source code thought ripping apart reimplementing parts java provide new one example guess approach really time consuming solution keep upstream version please keep mind familiar angular internals already might solution also know feature request nt asking specific features starting point discussion please also take look comments", "num": "22443", "d": "2/2018"}, {"title": "error new webpack", "body": "submitting current behavior today released webpack try run angular new webpack version get read property thiscompilation undefined nodetemplatepluginapply go back works ok environment tooling issues node version platform windows", "num": "22442", "d": "2/2018"}, {"title": "ui misalignment sub section title", "body": "submitting current behavior title section highlight much left expected behavior note link section seems unnecessary could removed minimal reproduction problem instructions visit motivation use case changing behavior make ui look broken inconsistent environment browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx", "num": "22441", "d": "2/2018"}, {"title": "ngupgrade documentation phonecat tutorial duplicate export name file", "body": "submitting current behavior trying go phonecat demo ngupgrade create appajsupgradedprovidersts file described upgrading components section webstorm complains duplicate identifier routeparamsfactory expected behavior getting ide errors minimal reproduction problem instructions create file mentioned populate given text phonecat ngupgrade tutorial upgrading components section export abstract class routeparams export function routeparamsfactory return iget routeparams export const routeparamsprovider provide routeparams usefactory routeparamsfactory deps injector motivation use case changing behavior ide errors nt occur environment webstorm tsc", "num": "22440", "d": "2/2018"}, {"title": "nested formgroup levels may cause expressionchangedafterithasbeencheckederror", "body": "submitting current behavior nested formgroup set structure valid invalid default expressionchangedafterithasbeencheckederror thrown however invalid errors expected behavior nested form invalid errors minimal reproduction problem instructions please see plunker details motivation use case changing behavior making nested formgroups work environment", "num": "22439", "d": "2/2018"}, {"title": "default select option working even coded html syntax selected selected selected", "body": "please look issue expected code default select select city drop work select city let know anything else thanks gaurav rawat", "num": "22436", "d": "2/2018"}, {"title": "support custom typescript transformers", "body": "submitting current behavior angularcli support custom typescript transformers expected behavior provide custom transformers webpack tsloader awesometypescriptloader", "num": "22434", "d": "2/2018"}, {"title": "error uncaught promise rangeerror maximum call stack size exceeded", "body": "tried nesting component routerlink error thrown uncaught promise rangeerror maximum call stack size exceeded rangeerror maximum call stack size exceeded callwithdebugcontext webpackinternal objectdebugcreatecomponentview createcomponentview webpackinternal createviewnodes webpackinternal callviewaction webpackinternal execcomponentviewsaction webpackinternal createviewnodes webpackinternal callviewaction webpackinternal execcomponentviewsaction webpackinternal createviewnodes webpackinternal callviewaction webpackinternal callwithdebugcontext webpackinternal objectdebugcreatecomponentview createcomponentview webpackinternal createviewnodes webpackinternal callviewaction webpackinternal execcomponentviewsaction webpackinternal createviewnodes webpackinternal callviewaction webpackinternal execcomponentviewsaction webpackinternal createviewnodes webpackinternal callviewaction webpackinternal resolvepromise webpackinternal resolvepromise webpackinternal eval webpackinternal zonedelegateinvoketask webpackinternal objectoninvoketask webpackinternal zonedelegateinvoketask webpackinternal zoneruntask webpackinternal drainmicrotaskqueue webpackinternal zonetaskinvoketask invoke webpackinternal invoketask webpackinternal defaulterrorlogger webpackinternal code rendered routererlink appfilter appreportscomp components using angular please help thanks advance", "num": "22432", "d": "2/2018"}, {"title": "proposal add removeall method formarray", "body": "submitting current behavior write following need remove controls formarray expected behavior suggest introduce method removeall implementation make formarray api userfriendly", "num": "22430", "d": "2/2018"}, {"title": "bug insert destroyed view viewcontainer", "body": "submitting current behavior using use named templates parent component rendered child component logic changes causing change detection run get error expected behavior desired behavior logic stay consistent always work regardless values change change detection runs minimal reproduction problem instructions see componenttemplateusage stackoverflow question motivation use case changing behavior use case create component wraps logic pagination letting use named templates expressive want things like results render content noresults template results render content results template forth prevents copypasted code every component want pagination logic gets hard maintain environment browser x chrome desktop version tooling issues node version", "num": "22429", "d": "2/2018"}, {"title": "could resolve module angularcore using files tsconfigjson", "body": "submitting current behavior using files tsconfigjson include parent directory ts file gives error could resolve module angularcore removing files tsconfigjson works fine also tried including src files etc nothing seems work thanks advice folder structure shared modules coinpush constant indexts client packagejson tsconfigjson srcetc nodemodules error error could resolve module angularcore staticsymbolresolvergetsymbolbymodule userskewinbrandsmaprojectstradejsclientnodemodules staticreflectorfinddeclaration userskewinbrandsmaprojectstradejsclientnodemodules staticreflectorinitializeconversionmap userskewinbrandsmaprojectstradejsclientnodemodules new staticreflector userskewinbrandsmaprojectstradejsclientnodemodules objectcreateaotcompiler userskewinbrandsmaprojectstradejsclientnodemodules angularcompilerprogramcreatecompiler userskewinbrandsmaprojectstradejsclientnodemodules angularcompilerprogramget hostadapter userskewinbrandsmaprojectstradejsclientnodemodules angularcompilerprogramcreateprogramwithbasicstubs userskewinbrandsmaprojectstradejsclientnodemodules userskewinbrandsmaprojectstradejsclientnodemodules processtickcallback expected behavior include parent directory ts file find nodemodules angularcore environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform mac ps seem fixed following tsconfigjson basically setting paths include seems like strange workaround something dont understand", "num": "22427", "d": "2/2018"}, {"title": "expressionchangedafterithasbeencheckederror nguntouched flag disabling form submission enter key", "body": "submitting current behavior form contains single input right loading focus set input submit enter key form disabled thanks use container error shows chrome console suppose behavior occurs enter key pressed nguntouched flag checked angular underthehood callback triggered form disabled gt input lost focus gt nguntouched flag set angular complains undesired change expected behavior error minimal reproduction problem instructions extract content zip archive enclosed issue directory tomcat servlet container guess simple http server open url chrome page loaded set focus input field press enter see error chrome console motivation use case changing behavior environment tomcat jdk update google chrome may done something wrong thanks advance help appzip br vincent", "num": "22426", "d": "2/2018"}, {"title": "typeerror thisformupdatetreevalidity function", "body": "hello got issue use case html fill name first name required last name required next typescript import component oninit angularcore import httpclient httpheaders angularcommon import abstractcontrol formbuilder formgroup validators ngform angularforms import fuseconfigservice coreservicesconfigservice import import fuseanimations coreanimations import import activatedroute params router angularrouter import environment environmentsenvironment component selector templateurl styleurls providers animations fuseanimations export class implements oninit registerform formgroup registerformerrors", "num": "22425", "d": "2/2018"}, {"title": "check presence validator", "body": "currently pretty hard check validator added reactive form way validators composed one function would handy able check somehow cases like required asterisk related error handling mdinput", "num": "22422", "d": "2/2018"}, {"title": "change location tsconfigappjson", "body": "file desired behavior nt use cli regards submitting current behavior hello guys change location files tsconfigappjson tsconfigspecjson want put files inside folder try terminal show error put file inside config folder change location inside tsconfigappjson run start project return error motivation use case changing behavior organizate project moving root files config environment", "num": "22421", "d": "2/2018"}, {"title": "ngpackage inline html css templateurl styleurl", "body": "eg material cc jelbourn juristr", "num": "22420", "d": "2/2018"}, {"title": "ngpackage nt collect transitive dts metadata", "body": "layout like nt appear resulting package", "num": "22419", "d": "2/2018"}, {"title": "lazy loading amp routing issue", "body": "main routing import ngmodule angularcore import commonmodule angularcommon import routermodule routes angularrouter import adminmodule adminadminmodule import pagenotfoundcomponent sharedcomponentspagenotfoundpagenotfoundcomponent const routes routes path pagenotfound component pagenotfoundcomponent pathmatch full path admin loadchildren adminadminmodule adminmodule path redirectto pagenotfound pathmatch full path component pagenotfoundcomponent pathmatch full ngmodule imports commonmodule adminmodule routermoduleforroot routes declarations exports routermodule export class routingmodule import ngmodule angularcore import commonmodule angularcommon import routermodule routes angularrouter import adminhomecomponent admincomponentsadminhomecomponent const adminroutes routes path component adminhomecomponent ngmodule imports commonmodule routermoduleforchild adminroutes declarations exports routermodule export class adminroutingmodule appmodule ngmodule declarations appcomponent pagenotfoundcomponent imports browsermodule adminmodule routingmodule providers bootstrap appcomponent export class appmodule problem comes serve app directly show anyone knows looks like child routes overwriting parent routes path thanks", "num": "22418", "d": "2/2018"}, {"title": "ngpackage rule fix main etc properties packagejson", "body": "bunch properties set distributed angular library including main module typings metadata would easier users omit fields hard set correctly special attribute label pointing packagejson knows input gets special treatment cc juristr", "num": "22416", "d": "2/2018"}, {"title": "documentation rxjs unsubscribing", "body": "submitting current behavior ca nt seem find information unsubscribing rxjs objects angular found online articles discuss unsubscribe angular angular nt forget unsubscribe expected behavior would nice get official guidance topic maybe ca nt find googling angular rxjs unsubscribe", "num": "22410", "d": "2/2018"}, {"title": "call typescript function inside external javascript", "body": "submitting current behavior im using angular want call typescript function inside external javascript file expected behavior minimal reproduction problem instructions motivation use case changing behavior environment angular", "num": "22409", "d": "2/2018"}, {"title": "docs heading misaligned inside div", "body": "submitting current behavior heading typescript interfaces nt valid tokens misaligned within expected behavior heading visually left aligned within maintain consistency sections minimal reproduction problem instructions open angular documentation typescript interfaces nt valid tokens motivation use case changing behavior maintain consistency sections angular documentation environment angular version browser x chrome desktop version official build chrome android version xx chrome ios version xx x firefox x safari desktop version safari ios version xx ie version xx edge version xx gif bug upon closer inspection inside chrome dev tools looks like heading nt properly aligned css reason potential fix potential fix might adding found would result following", "num": "22407", "d": "2/2018"}, {"title": "master red circleci", "body": "reported", "num": "22405", "d": "2/2018"}, {"title": "route animation param", "body": "hello used child routing system transition animation problem want go one stage another animation current behavior call indexstate route animation goes well first time next expected behavior animation restarted enter amp leave data updated template example problem plunker thought technique except come back hit guess better go back old state force animation leave restart opening component thank environment", "num": "22399", "d": "2/2018"}, {"title": "angular api idlbased", "body": "submitting current behavior angular currently works best typescript application code webassembly supported four leading browsers shipping web browsers though webassembly needs bit evolving become really useful clear play significant role browser development next years moment angular webassembly live two separate worlds though run browser expected behavior programming languages java c swift python etc likely supported directly browser via webassembly able easily use angular framework happen form interface definition language idl needed accurately describe angular api allow languagespecific client wrappers generated client language multiple kinds idl perhaps simplest get started use subset typescript might act idl allow use essentially current angular exported api simplifications eg pretty much programming languages support classmethodproperty fine idl may difficulty typescriptspecific metadata type aliases minimal reproduction problem instructions detailed explanation idea motivation use case changing behavior programming languages coming webassembly need powerful web framework reason typescript developers needed one found angular", "num": "22398", "d": "2/2018"}, {"title": "documentation libraries creation", "body": "submitting current behavior seems lot confusion create library angular crawled web days reading tons articles one seems work fine think users really like official article expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22396", "d": "2/2018"}, {"title": "response service undefined assigned local variable", "body": "okay confused need help guys cause getstudent void get student id url thisstudentid thisroutesnapshotparammapget id thisportalservicegetstudent thisstudentid subscribe res gt thisstudent res correctly getting student data backend proof see alert problem comes assign res thisstudent res echo ngoninit method undefined please help", "num": "22393", "d": "2/2018"}, {"title": "downgraded components within upgraded destroyed", "body": "submitting current behavior called ngupgrade cases also causes entire dom route leak least example outlined expected behavior ondestroy methods invoked angular angularjs using ngupgrade minimal reproduction problem instructions watch console component createdestroy events using router simpler using essentially destroy seems never called note ngondestroy called though seems like something lost two note nothing router original use case anything addsremoves component works", "num": "22392", "d": "2/2018"}, {"title": "unable dynamically add change event external matselect component angular", "body": "submitting current behavior unable dynamically add change event external matselect dropdownlist component angular expected behavior provision dynamically add events angular material components minimal reproduction problem instructions motivation use case changing behavior would like reuse matselect dropdown list many components also would able add events dynamically environment", "num": "22391", "d": "2/2018"}, {"title": "click vs mousedown event reproduced github page", "body": "submitting current behavior clicking absolute positioned higher zindex element click event fired mousedown event fired tap dropdown list second list item select item click mouse click touchpad ca nt select item could css problem question definitions click mousedown found mdn seems difference mousedown fired press released wonder angular treats click mousedown click event fired pointing device button usually mouse primary button pressed released single element mousedown event fired pointing device button pressed element expected behavior expected work click event works mousedown event noticed minimal reproduction problem instructions page motivation use case changing behavior click dropdown list item select item environment", "num": "22390", "d": "2/2018"}, {"title": "inject exported angularcore", "body": "treeshakeable injectors dependencies use generated code access injector typescript import defineinjectable inject angularcore export class service static nginjectabledef defineinjectable scope somemodule factory gt new service inject dep exported causes code break runtime", "num": "22388", "d": "2/2018"}, {"title": "aio docsapi table contents renders heading link icon", "body": "example", "num": "22387", "d": "2/2018"}, {"title": "aio docsapi consider placement subclasses see also blocks", "body": "moment blocks rendered floating sidebar order make use empty space wide screens example implementation issues also sjtrimble concerns design point view", "num": "22386", "d": "2/2018"}, {"title": "aio docsapi split content first paragraph rest", "body": "render first paragraph different part template need dgeni split tag content two separate properties let call", "num": "22385", "d": "2/2018"}, {"title": "aio docsapi experimental badges shown", "body": "documents tagged usually content checking via nt return true empty", "num": "22384", "d": "2/2018"}, {"title": "ivy directivedef properties may need better names", "body": "pr triggered naming discussion properties interface vicb proposed following terminology information need inputs alias name given decorator property name source code minified name let discuss rename inputs inputspropertyname outputs", "num": "22383", "d": "2/2018"}, {"title": "directive example errors", "body": "submitting current behavior directive documentation example inputs section uses bankname class variable usage example code uses bankname addition live demo link incredibly date trying use longer works expected behavior syntactically correct example code working live demo motivation use case changing behavior accurate documentation", "num": "22382", "d": "2/2018"}, {"title": "bot update merge status approved review", "body": "see", "num": "22381", "d": "2/2018"}, {"title": "aio apidocs github link text big", "body": "text buttons seems disproportionately big compared rest page suggest edits link nt fit single line", "num": "22379", "d": "2/2018"}, {"title": "angular get data http response", "body": "submitting current behavior access inner array response data sometimes use promise get response service thispageservicegetsync res response gt consolelog res json resjson genericresponse thisresultnull thisresult resjson genericresponse consolelog thisresult thisresult result following success true message success success true data createdate createuserid id modifydate modifyuserid namear wdqewdwdqewd nameen wdqewdwdqewd privilliges nameen securitymodel namear securitymodel groups array users array createuserid please note privillige array one record second log record message success success true data createdate createuserid id modifydate modifyuserid namear wdqewdwdqewd nameen wdqewdwdqewd privilliges array finally please note sometimes works good sometimes working got crazy appreciate help expected behavior expecting privillige array cases minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22377", "d": "2/2018"}, {"title": "ngvalue options detected custom selectcontrolvalueaccessor", "body": "hello saw selectcontrolvalueaccessor contains map option value key ngvalue map value map filled standard selectcontrolvalueaccessor component custom select component trying custom select component detect changes done data model use select instead reactiveselect custom component ngvalue taken account ngvalue returned select option reactiveselect ngvalue taken account displayed data returned example select first option returns null select native component returns reactiveselect custom component see select value selector option map link options id option values filled custom component successfully created custom input checkbox component could create custom select component detected ngvalue property submitting current behavior value returned custom select component returns ngvalue expected behavior value returned custom select component behave like select component minimal reproduction problem instructions create component providers provide ngvalueaccessor useexisting forwardref gt reactiveselectcomponent multi true export class reactiveselectcomponent extends selectcontrolvalueaccessor constructor private cdref changedetectorref renderer renderer elementref elementref super renderer elementref change model writevalue value void motivation use case changing behavior component detects changes model overriding writevalue method selctcontrolvalueaccessor environment browser x chrome desktop version bits chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform windows", "num": "22374", "d": "2/2018"}, {"title": "problem demo dynamiccomponentloader", "body": "error expressionchangedafterithasbeencheckederror expression changed checked previous value undefined current value bombasto seems like view created parent children dirty checked created change detection hook", "num": "22371", "d": "2/2018"}, {"title": "changedetectorref demo deprecated", "body": "demos changedetectorref deprecated could please update accordingly", "num": "22370", "d": "2/2018"}, {"title": "opening auxiliary route removes query params primary route", "body": "submitting current behavior stand given route queryparams open auxiliary route page queryparams whiped url example url change add auxiliary route expected behavior using example would expect query params stay maybe looking something like add auxiliary route minimal reproduction problem instructions made small example stackblitz simply click buttons add query params click open dialog button see query params whiped url motivation use case changing behavior list products ecommerce solution use query params set initial filter state page loaded user makes changes filter query params updated also auxiliary outlet page open dialogs whipe queryparams url making filter page unlinkeable environment browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx", "num": "22369", "d": "2/2018"}, {"title": "assets folder issuein angular", "body": "hi creating roles angular application creating role successfully one json file generated back end json file contains list menu items user access storing json files assets folder using files build side menu issue trying log new role immediately creating new role side menu building even though corresponding role json file exist assets folder restart lite server ng serve login new role side menu showing ie changes new updates assets folder reflecting nt rerun ng server angularcli refreshing restarting lite server good practice resolve restarting lite server thanks advance", "num": "22367", "d": "2/2018"}, {"title": "resolve router update", "body": "submitting current behavior error srcappxxxxxxxts module found error ca nt resolve xxxxxxsrcnodemodules angularrouter xxxxxxsrcappxxxxxxx xxxxxxxts xxxxxxxngfactoryjs srcappappmodulengfactoryjs srcmainbrowserts multi webpack devserverclient srcmainbrowserts expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22366", "d": "2/2018"}, {"title": "want know behavior encodeuri treefragment", "body": "submitting current behavior get bit confusing read source code serializesegment treeroot true string encodeuri treefragment encodeuri thanks lot expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22365", "d": "2/2018"}, {"title": "docsapi param separate line source code", "body": "see jbogarthyde comment think something angular core team would need make decision upon implement via clang rule cc igorminar alexeagle", "num": "22364", "d": "2/2018"}, {"title": "aio docsapi constructor heading match properties methods headings", "body": "see jbogarthyde comment", "num": "22363", "d": "2/2018"}, {"title": "failed load resource server responded status gateway timeout", "body": "submitting current behavior angular service worker application throws following error failed load resource server responded status gateway timeout expected behavior throw exceptions minimal reproduction problem instructions even iis host see issue motivation use case changing behavior environment", "num": "22362", "d": "2/2018"}, {"title": "ng test produces gt ca nt bind ngmodel since nt known property input", "body": "submitting current behavior compiles gives error running produces imported already expected behavior give errors minimal reproduction problem instructions motivation use case changing behavior clone repo run environment", "num": "22361", "d": "2/2018"}, {"title": "tour heroes chapter routing srcappheroservicets missing final code review", "body": "submitting current behavior final code review nt file srcappheroservicets expected behavior final code review file srcappheroservicets minimal reproduction problem instructions open find add heroservicegethero step step change srcappheroservicets make sure final code review heroservice motivation use case changing behavior improve quality documentation", "num": "22359", "d": "2/2018"}, {"title": "docs link stackblitz examples filename aio", "body": "submitting current behavior visiting page stackblitz link link top open live example like one also opens maints editor expected behavior would nice examples linked directly relevant file example approutingmodulets motivation use case changing behavior would make easier engage examples quickly see example attempting demonstrate", "num": "22357", "d": "2/2018"}, {"title": "router issue wrong case deep link explicit base url", "body": "hi issue router serve angular project spa virtual application iis entry url looks like several different apps served myserver specific app work got base url set like router implements pathlocationstrategy everything works great access app without deep links including implemented urlserializer class workaround incorrect url segment casing like problem router convert urls note doubled segment wrong", "num": "22355", "d": "2/2018"}, {"title": "optimizationterminate called throwing instance std badalloc running ng build aot prod", "body": "", "num": "22354", "d": "2/2018"}, {"title": "missing documentation cli config universal app", "body": "example code entry server app lacking tutorial also misses example tutorial file without code nt work", "num": "22349", "d": "2/2018"}, {"title": "back button weird delay used inside webview cordova", "body": "submitting current behavior back button pressed running angular app inside cordova webview presents strange random delay router state changes occasionally glitches expected behavior back button working fine minimal reproduction problem instructions provide demo link issue angular app deployed cordova app android webview", "num": "22348", "d": "2/2018"}, {"title": "documentation request multiple build outcomes dgeni angular documentation project", "body": "submitting x documentation issue request current behavior single documentation project documentation products project project b shared documents need able create documentation builds project another project b two issues first navigational sidepanel resolved custom code environment file pick correct navigationjson second selecting folders files copied project dist currently created another contentpackage original intention expected behavior documentation handle multiple build outcomes single source minimal reproduction problem instructions motivation use case changing behavior user must able generate different distributables single source based project building environment angular version beta tooling issues node version platform windows", "num": "22347", "d": "2/2018"}, {"title": "named outlets working child routes lazy loaded", "body": "submitting current behavior report issue modified routing amp navigating live app stackblitz app routes looks like routing configuration load default load clicking link would like move heroes related routes lazy loaded heroes module heroesrouting approutingmodulets heroesroutingmodulets ts const heroesroutes routes path component heroescomponent children path component heroesbottomothercomponent outlet bottom path component heroesbottomdefaultcomponent outlet bottom path component herolistcomponent ngmodule imports routermoduleforchild heroesroutes case nt work link expected behavior would like activate named outlet lazy loaded child routes way work without lazy loading minimal reproduction problem instructions modified routing amp navigating live app stackblitz stackblitz lazy loaded setup presents issues stackblitz working version without lazy loading motivation use case changing behavior want create application layout preserved page navigation content certain areas changed example main content area environment", "num": "22346", "d": "2/2018"}, {"title": "dart static members component accessible html templates", "body": "submitting x feature request current behavior currently throws error expected behavior static member accessible like nonstatic class member minimal reproduction problem instructions see current behavior motivation use case changing behavior static members intended members every instance class using angular force user move nonstatic member force creation nonstatic getter forward variable environment yaml environment sdk gt lt dependencies logging path angular angularforms angularcomponents streamtransform ngbootstrap cookie intl angular version dart browser x chrome desktop version official build beta tooling issues platform arch linux", "num": "22345", "d": "2/2018"}, {"title": "method parameters unclear angularcore", "body": "submitting current behavior number methods perform changes dom barely documented parameters type makes hard figure actually expected see api docs eg supposed know passed method native angular selector something else beauty type checked typescript apis would less selfdocumenting expected parameters importantly failfast compilation error use something incorrectly specifying destroys whole concept causes lot pain angular developers side expected behavior api properly documented explaining methods expected parameters specify acceptable parameter type types avoid using specific type expected minimal reproduction problem instructions na motivation use case changing behavior na environment na", "num": "22344", "d": "2/2018"}, {"title": "websocket handshake unexpected response code", "body": "browser chrome version official build angular cli node os application start loads chrome browser showing given error console websocket connection ws failed error websocket handshake unexpected response code apis requests failed options net erremptyresponse please share solution", "num": "22343", "d": "2/2018"}, {"title": "animation css style working properly keep mouseenter mouseleave", "body": "submitting current behavior keep mouseenter mouseleave div fast moving animation css style div working properly image one styling error mouseenter div expected behavior animation css style work stated animation styling mouseleave words become transparent opacity change mousenter words remain white color opacity therefore mousenter div like minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22342", "d": "2/2018"}, {"title": "resolved templates guid template parse failure", "body": "submitting current behavior unable use guid identifiers input parameters child component uncaught error template parse errors parser error unexpected token lexer error invalid exponent column expression column ng appmoduleappcomponenthtml shelldimlocid gt ng appmoduleappcomponenthtml parser error lexer error invalid exponent column expression column ng appmoduleappcomponenthtml shelldimlocid gt ng appmoduleappcomponenthtml parser error lexer error invalid exponent column expression column ng appmoduleappcomponenthtml shelldimlocid gt ng appmoduleappcomponenthtml syntaxerror templateparserparse jitcompilerparsetemplate jitcompilercompiletemplate eval setforeach jitcompilercompilecomponents eval objectthen jitcompilercompilemoduleandcomponents syntaxerror templateparserparse jitcompilerparsetemplate jitcompilercompiletemplate anonymous jitcompilercompilecomponents anonymous jitcompilercompilemoduleandcomponents jitcompilercompilemoduleasync compilerimplcompilemoduleasync platformrefbootstrapmodule anonymous appsshellhistorysrcmaints webpackrequire webpackrequire webpackjsonpcallback anonymous expected behavior able use string input minimal reproduction problem instructions create standard ng cli app build component supports following motivation use case changing behavior heavily use guid inside system able inject parent level must environment", "num": "22341", "d": "2/2018"}, {"title": "factory rather global interceptors", "body": "submitting would possible create sort httpclientfactory used generate contained httpclient classes httpinterceptor rather creating global interceptors seems like would better solution projects multiple data sources would allow better packaging code ngxrestangular library way reference reason nt use library nt make use type thing seems like might core feature rather party library", "num": "22340", "d": "2/2018"}, {"title": "httpclient post edge", "body": "submitting current behavior using httpclient post request working expected chrome mozzila safari however facing issue edge following errror error occured authenticating error typeerror invalid calling object source code import httpclient httpheaders httpparams angularcommon let params new httpparams params paramsappend username userid params paramsappend password password params subscribe res gt consolelog success err gt consolelog error occured authenticating consolelog err expected behavior expected behavior browser ie send http request return success environment angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx x ie version x edge", "num": "22329", "d": "2/2018"}, {"title": "commenting inner html attributes", "body": "submitting current behavior possible comment html attributes natively possible several template languages see examples expected behavior commenting syntax ideally beginend single line one would enough guess motivation use case changing behavior considering templates template binding core concepts angular may find dealing big sets attributes way comment without commenting whole component would nice add", "num": "22328", "d": "2/2018"}, {"title": "custom twoway binding input output properties", "body": "submitting current behavior code syntax sugar solving problem spend enough time find wrong component custom twoway binding input output properties factorydepartmentlistcomponentts two way binding required input public factory commonitem two way binding optional input public department commonitem \u043f\u0440\u0438 \u0432\u044b\u0431\u043e\u0440\u0435 \u0446\u0435\u0445\u0430 optional output factorychanged new eventemitter selectfactory factory commonitem assign thisfactory factory thisfactorychangedemit input factory ngmodel output factorychangesomevariable ngmodel output somevariablechange component updating output property another solves problem factorychange factorychanged expected behavior give opportunities name wish case show console collision naming something like event binding overriden component angularjs remember problem like minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22326", "d": "2/2018"}, {"title": "httpclient nt throw observable chrome cancels request", "body": "submitting current behavior google chrome cancels request httpclientget observable never finishes happens example put computer sleep concrete usecase close laptop expected behavior observable throw like network related request error would minimal reproduction problem instructions cancel request chrome put windows sleep mode eg close laptop nt know enough pipeline simulate request cancelation hand created stackblitz simulate request takes least time put computer sleep also provoke cancelation simply pressing ctrls motivation use case changing behavior request rerstarts finishes user might close laptop put sleep keep site open request never restarted feasible workaround would either detect browser sleep unrealiable add timeout request delayed reaction miscellaneous sleepproblem nt seem exist browsers tested amp nt cancel request like chrome could nt find existing issue talking concrete problem might also related sleep windows google chrome handling cancelation rxjs also tried steps fix issue sadly without success use new rxjs instead oldschool methods eg gt specify observe response using provided stackblitz got following warning chrome maybe chrome issue environment", "num": "22324", "d": "2/2018"}, {"title": "feature compiler able get reference direct context template", "body": "submitting current behavior template keyword always refer component context even inside html component thisprocess template thisprocess quite troublesome retrieve entire template context rather specific property expected behavior another keyword always refer real context html component contextprocess context template contextprocess context minimal reproduction problem instructions motivation use case changing behavior shape context may unknown dynamic keys spreading required environment relates infeasible indeed need two contexts relates extra compiler work workaround intercepting templateref even still technically public api usage looks hacky require deep knowledge", "num": "22323", "d": "2/2018"}, {"title": "use aot error encountered resolving symbol values statically", "body": "submitting current behavior compile error typescript error error encountered resolving symbol values statically function calls supported consider replacing function lambda reference exported function position original ts file resolving symbol mobileawarehostlistener eventlistenerdecoratorts resolving symbol homepage homets error angular aot build failed see issues expected behavior compile without errors minimal reproduction problem instructions make file exporting function inside function return value using ternary operator ifelse condition call function component build project prod aot full example notes example changing solves part issue ca nt use still issue motivation use case changing behavior ca nt use one used features supported aot something specific environment", "num": "22320", "d": "2/2018"}, {"title": "standard validator could optional string param override validators nameerrorkey", "body": "submitting regression behavior used work stopped working new release bug report x feature request documentation issue request support request gt please submit support request instead see current behavior imagine class keyvalue pairs defined key name validator like min validatorsmin number value key would error message min max validators multiple fields try get specific error message specific min max required validator get multiple error messages multiple keys exist goal really error keys error custom messages defined one class would work maximum validatorvalue sind erlaubt custom validator names standard validators possible expected behavior would like validatorsmin minbestscore validatorsmin minworstscore minimal reproduction problem instructions really nothing reproduce easy understand looking motivation use case changing behavior want keep validation error messages one class geterrormessage method like work unique error key names moment error messages spread whole application inside terrible read html templates environment angular version beta", "num": "22319", "d": "2/2018"}, {"title": "activatedroute paramsmap function", "body": "submitting current behavior reading document activatedroute section use contains example line trhows error expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22314", "d": "2/2018"}, {"title": "bug invalidpipeargument pipe datepipe", "body": "current behavior ff amp amp chrome work expected behavior error datepipe motivation use case changing behavior use pipe date without error environment browser x chrome desktop version x ie version tooling issues node version platform windows bits", "num": "22312", "d": "2/2018"}, {"title": "handle notification click events find docs", "body": "submitting x documentation issue request current behavior currently clear handle notification clicks angular service worker expected behavior finding source handle notification clicks web push pwa would great thanks minimal reproduction problem instructions send push notification actions like clicking open app push notification wont work motivation use case changing behavior widely requested feature environment tooling issues node version platform mac", "num": "22311", "d": "2/2018"}, {"title": "navigating parent route auxiliary route breaks navigation flow", "body": "submitting current behavior navigating parent route auxiliary route keeps current route url expected behavior remove current url segment navigating absolute parent route minimal reproduction problem instructions first case working properly let say route service calling following method works properly redirected url second breaking case let say route service calling following method works properly redirected url keeps route part loop even intended navigate absolute path please note addition edit route within parenthesis eventually break subsequent router flow example close auxoutlet navigating url becomes managemysuperid edit breaks example regex route matchers rely url parts strings environment", "num": "22310", "d": "2/2018"}, {"title": "add ability remove event handlers name", "body": "submitting current behavior way remove element event handler without original eventhandler expected behavior ability remove element event handler name alone minimal reproduction problem instructions consider following typescript directive selector disableclick export class disableclickdirective implement oninit example way disabling previously registered host element triggered nt fully understand nt actually prevent default could see debugging triggered zonetask bug please let know could remove event handlers would solve problem simplest usage could think motivation use case changing behavior jquery able remove element event handlers name without knowing handler convenient cases environment", "num": "22309", "d": "2/2018"}, {"title": "want export datatable excel xls using angular dependency purpose", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22306", "d": "2/2018"}, {"title": "expressionchangedafterithasbeencheckederror expression changed checked", "body": "need change value life cycle component error falls submitting current behavior appcomponentts ts import component afterviewinit angularcore component selector myapp templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent implements afterviewinit public value boolean true public testvalue value true public ngafterviewinit thisvalue false thistestvaluevalue false appcomponenthtml minimal reproduction problem instructions environment", "num": "22304", "d": "2/2018"}, {"title": "make possible make multiple roots inside", "body": "submitting feature description recently looked stencil fan well ionic way stencil makes components really easy create new component implement page want minutes without worrying routing anything like would love could make component angular completely ignores component like stencil easy implement n amount components using stencil would like something simple angular since seems like pretty easy thing implement bootstrapping multiple root components", "num": "22303", "d": "2/2018"}, {"title": "view encapsulation feature module level", "body": "submitting current behavior feature module loaded lazyeager view encapsulation set none css bleeds parts app expected behavior feature module loaded lazyeager view encapsulation settings apply module ie bleedaffect parts app motivation use case changing behavior developing feature module might need set view encapsulation none feature module setting nt affect styling feature modules module loaded app", "num": "22302", "d": "2/2018"}, {"title": "getting disgusting issue run production build", "body": "please help solve ng build prod global angular cli version greater local version local angular cli version used disable warning use ng set global warningsversionmismatchfalse hash time chunk polyfills kb initial rendered chunk styles bytes initial rendered chunk scripts kb initial rendered chunk main kb initial rendered chunk vendor kb initial rendered chunk inline bytes entry rendered error srcmaints module found error ca nt resolve gendirappappmodulengfactory e localhosthtdocsprojectsvirtualtourgitvirtualteamangularsrc srcmaints multi srcmaints error src gendir async module found error ca nt resolve e localhosthtdocsprojectsvirtualtourgitvirtualteamangularsrc gendirapptourstoursmodulengfactoryts e localhosthtdocsprojectsvirtualtourgitvirtualteamangularsrc gendir src gendir async angularcore srcmaints multi srcmaints", "num": "22301", "d": "2/2018"}, {"title": "call interact method childparentsibling component angular", "body": "problem call method child component another one child siblings parent well based conditions need proper solution struggling lot", "num": "22300", "d": "2/2018"}, {"title": "issue file uploading angular", "body": "files uploading issue angular struggling issue since days possible provide serve rside code also please see link issue current behavior implemented code working fine text files like ts json html txt comes pdf xls png jpg working properly data sent request saving file server side expected behavior want send amp store types files server environment angularcli node angular version npm version", "num": "22299", "d": "2/2018"}, {"title": "reflective injector get parameters derived classes", "body": "submitting current behavior typescript compile target angular reflective injector get parameters derived classes typescript injectable class engine injectable class car constructor public engine engine injectable class sportscar extends car const injector reflectiveinjectorresolveandcreate engine car sportscar consolelog injectorget sportscar engine undefined consolelog injectorget car engine engine expected behavior injector creates know one class parameters minimal reproduction problem instructions example plunker change typescript target works use early angular version current version angular typescript compiling injector fails get correct parameters environment", "num": "22297", "d": "2/2018"}, {"title": "files emitted ngc compiler", "body": "submitting current behavior run build process library code inside postinstall hook modules lot development want commit compiled js version control libraries angular projects ngc function run follow imports imported components etc generate library seems guess believe since library within nodemodules path parent project external therefore shoudl compiled result get files compiled specifically listed includes files configurations sort fo fix extend scope fo include specifically identify files explicitly goes flatmoduleoutfile option requires single entry module results files compiled required traced entry point library alternative test installed library standalone rather dependancy parent module case post install works perfectly difference see case src files inside nodemodules path therefore get picked external ignored expected behavior compile files whether standalone project dependancy inside nodemodules path minimal reproduction problem instructions run ngc compile library whilst within nodemodules tree follow compile dependancies run outside fo nodemodules tree compile correctly motivation use case changing behavior allow typescript compiled module point install environment typescript compilercli", "num": "22296", "d": "2/2018"}, {"title": "formcontroldirective never unsubscribes", "body": "submitting current behavior update binding formcontroldirective directive still bounded old form control expected behavior formcontroldirective cleanup correctly ngonchanges minimal reproduction problem instructions m\u00ednimal repro yet obvious calls cleanupcontrol missing environment angular version", "num": "22294", "d": "2/2018"}, {"title": "argument type formgroup assignable parameter type customer", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22286", "d": "2/2018"}, {"title": "code sharepoint hosted app written angular move sharepoint", "body": "created sharepoint hosted app written angular sharepoint want use app code sharepoint possible please tell step", "num": "22281", "d": "2/2018"}, {"title": "docs live example lifecycle hooks working expected", "body": "x documentation issue request current behavior live example lifecycle hooks documentation working expected example link clicking create peekaboocomponent logging lifecycle hooks ui expected behavior clicking create peekaboocomponent logs viewed possible solution togglechild method peekabooparentcomponent", "num": "22279", "d": "2/2018"}, {"title": "may little typo docs tutorial routing page", "body": "submitting docs tutorial routing page section dashboardcomponent hero links current behavior using angular interpolation binding within ngfor repeater insert current interation heroid routerlink expected behavior using angular interpolation binding within ngfor repeater insert current iteration heroid routerlink", "num": "22278", "d": "2/2018"}, {"title": "components route instantiated calls ngondestroy previous route components", "body": "noticed components route getting instantiated called components previous route causing problems order things need happen components previous route need unsubscribe things new route makes changes state emit observablesevents whatnot may may big issue may add code many components listen route change rather rely mostly perplexed missing something change angular sure actually makes sense guess main question would bug reason submitting current behavior components route instantiated calls ngondestroy previous route components expected behavior components previous route destroyed new components successive route minimal reproduction problem instructions make angular app two routes onondestory component first route constructor component second route see constructor second route gets called ngondestory first route motivation use case changing behavior listening route changes updating certain variables triggers events observables dispatchemit events triggering processes components previous route right destroyed overall state changes occur route change previous route component operating correct state expecting causing errors sure nt use case really screwing things may detect route changes manually destroy components hopefully bunch environment browser x chrome desktop version xx x chrome android version xx x chrome ios version xx x firefox version xx x safari desktop version xx x safari ios version xx x ie version xx x edge version xx", "num": "22267", "d": "2/2018"}, {"title": "could resolve module angularcore sailsjs", "body": "due integration sailsjs application path changes due throwing error attaching tsconfigappjson file please let update file according directories structure extends tsconfigjson compileroptions outdir outtscapp module baseurl types paths angular nodemodules angular nebular nodemodules nebular exclude testts spects", "num": "22266", "d": "2/2018"}, {"title": "script mergepr close pr merging patch branch", "body": "using merge pr go default branch master feb would close pr closes pr pr merged default branch", "num": "22264", "d": "2/2018"}, {"title": "symlink node module detecting changes past folder depth", "body": "submitting current behavior currently module share across multiple angular applications using symlink way module shared across multiple applications changes made files trigger angular watcher recompiles code folder depth anything past trigger noticed work windows using angular version linux expected behavior changes made shared folder trigger auto compiler refresh page minimal reproduction problem instructions packagejson one shared module dependency listed motivation use case changing behavior decrease development time environment browser na tooling issues node version platform linux", "num": "22262", "d": "2/2018"}, {"title": "implement google analytics tracking via gtagjs instead analyticsjs", "body": "submitting motivation use case changing behavior users implementing ga tracking february prompted use gtag implementation tracking ga admin dashboard would great see aio implement strategy others looking best practice could something go migration guide", "num": "22260", "d": "2/2018"}, {"title": "error ng eject npm start", "body": "submitting current behavior used ng eject get webpackconfig used npm start says webpackdevserver throw new typeerror path must string received inspect path typeerror path must string received undefined assertpath objectresolve moduleexports poject object poject modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerequire require requireconfig poject poject arrayforeach moduleexports poject object poject expected behavior expecting like ng serve run aplication n minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22259", "d": "2/2018"}, {"title": "gh sync script incorrectly report missing merge label", "body": "first part sentence accurate pr", "num": "22256", "d": "2/2018"}, {"title": "reactive forms async validation internal control validator able raise state formgroup pending valid", "body": "submitting current behavior reactive forms async validation async validators form child control form validator still process form state pending child control able set form state valid expected behavior regarding fact nt result outer validator form stay pending state state form valid validation result unknown yet minimal reproduction problem instructions please refer easy see form valid ever soon async validator returns error timeout motivation use case changing behavior form allow submit incorrect data casetime abstractcontrol internal state propagation follow hierarchy based statement formgroup api nt allow change internal state formgroup easy workarounds environment browser x chrome desktop version", "num": "22253", "d": "2/2018"}, {"title": "angular work augury", "body": "task opened december last year soon release angular planned release normal dev tools developers", "num": "22252", "d": "2/2018"}, {"title": "drop event firing attached inside ngfor", "body": "hi team attaching html drop event element inside ngfor enabled element working code working code drag event firing working non working code submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22250", "d": "2/2018"}, {"title": "aio consider implementation maxwid centered content concept documentation pages", "body": "submitting current behavior currently content may difficult read larger resolution screen sizes constraints width documentation pages expected behavior add width constraint content improve legibility minimal reproduction problem instructions sample page motivation use case changing behavior discussion exploration concept upon team request improve legibility large resolution screens", "num": "22246", "d": "2/2018"}, {"title": "ca nt resolve parameters importing module index", "body": "submitting current behavior project structured following src app appmodulets appcomponentts appcomponenthtml appcomponentcss core coremodulets components indexts model indexts services indexts indexts component model service coremodule exported index file every indexfile module exported coreindexts like import service moduleindex import component oninit angularcore import index work import services work import model component selector templateurl styleurls export class implements oninit constructor private dummy private private dummy new ngoninit thisdummytest thisdummyname test leads following error thought maybe circle dependency works referenced index import injectable angularcore import index work injectable export class constructor private dummy public test void consolelog test first thought bug webpack indexfile referring entries z indexfile exported files seems entries missing edit seems work aot instead jit compilation expected behavior let import top index file regardless components count minimal reproduction problem instructions made small repro stackblitz uncomment code want see working example visit see error motivation use case changing behavior webstorm suggestion change try changes environment angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack", "num": "22244", "d": "2/2018"}, {"title": "feature request support dynamic atruntime lazyloading", "body": "submitting current behavior currently lazy loading tightlycoupled angular router also requires static declarations lazyloaded routes primary angular application furthermore primary method compilation angular applications via webpack requires application compile parts application including external dependencies npm libraries specified angular package format scenario work well enterprise environment unless teamsapplications setup one monorepository recommended nrwl unfortunately realistic setup many enterprise environments due various issues parenthost application required know much child applicationmodule compile child application expected behavior child module needs compiled way dynamically loaded parenthost application runtime child module could set routes could added parenthost application routing table parenthost application could discover child dynamically eg via web service file etc parenthost application required compile child modules may result less code optimization repeated code necessary tradeoff enterprise environment could hundreds applications different repositories scattered around globe minimal reproduction problem instructions current tooling angular documentation create two angular applications using angularcli appa child module lazyloaded platform parenthost application use ngpackagr turn appa module adheres angular package format host appa npm fake move nodemodules directory host application setup simplerouting table platform application note declared statically const routes routes path component homecomponent path appa loadchildren nodemodulesappa ngmodule imports routermoduleforroot routes exports routermodule observe angularcli webpack compile child application code parenthost application child code separate parent code webpack references heavily intertwined furthermore parenthost module statically declare existence child module compilation motivation use case changing behavior scenario fairly easy implement angularjs child modules could loaded script tags could register angular without tightly coupling parenthost module therefore additional tooling apisupport andor walkthroughs scenario angular would really help enterprise clients move angularjs angular environment", "num": "22243", "d": "2/2018"}, {"title": "document found service workers", "body": "submitting current behavior service workers section getting loaded angulario expected behavior clicked service workers link service workers documentation show", "num": "22242", "d": "2/2018"}, {"title": "factory provider type respect ondestroy hook", "body": "submitting current behavior provide service method type provider service lifecycle hook called however service provided via factory function lifecycle hook never called expected behavior behavior differ using type provider factory provider minimal reproduction problem instructions simple demo comment type provider hook called consolelog performed use factory provider hook called motivation use case changing behavior tried destroy angular application manually calling ngmodulerefdestroy method contains angular router appliction destroyed routing events still fire cause hook never called leads memory leak application garbage collected issues might someone changes provider type aware limitation thus introducing subtle bugs appliction solution exactly know look fix contain bit cause bug probably somwhere compiler familiar environment", "num": "22240", "d": "2/2018"}, {"title": "maximum call stack size exceeded", "body": "submitting current behavior hi created project cli version work project month always ng serve testing today want deploy server run ng build prod throws maximum call stack size exceeded look post likely behaviour nt seem fixed expected behavior complile without problems minimal reproduction problem instructions c usersdiego mendezdesktopinnovacionnotariadigital gt ng build pr od building modules modules active nnovacionnotariadigita building modules modules active cionnotariadigitalsrc building modules modules active acionnotariadigitalsr building modules modules active acionnotariadigitalsr building modules modules active nnovacionnotariadigita building modules modules active cionnotariadigitalsrc building modules modules active cionnotariadigitalsrc building modules modules active acionnotariadigitalsr cstylesscssnode moveto deprecated use container append building modules modules active demodulescssloaderli building modules modules active acionnotariadigitalsr date hash time chunk scripts scripts k b initial rendered chunk styles kb init ial rendered chunk polyfills byte initial rendered chunk main bytes initial rendered chunk inline kb entr rendered error rangeerror maximum call stack size exceeded aotsummaryresolverresolvesummary c usersdiego mendezdeskto pinnovacionnotariadigitalnodemodules angularcompilerbundlesco staticsymbolresolverresolvesymbolfromsummary c usersdiego mendezdesktopinnovacionnotariadigitalnodemodules angularcompil staticsymbolresolverresolvesymbol c usersdiego mendezdeskt opinnovacionnotariadigitalnodemodules angularcompilerbundlesc resolvereferencevalue c usersdiego mendezdesktopinnovacion notariadigitalnodemodules angularcompilerbundlescompilerumdj simplify c usersdiego mendezdesktopinnovacionnotariadigi talnodemodules simplifyincontext c usersdiego mendezdesktopinnovacionnot ariadigitalnodemodules simplifynested c usersdiego mendezdesktopinnovacionnotari adigitalnodemodules simplify c usersdiego mendezdesktopinnovacionnotariadigi talnodemodules simplifyincontext c usersdiego mendezdesktopinnovacionnot ariadigitalnodemodules simplifynested c usersdiego mendezdesktopinnovacionnotari adigitalnodemodules simplify c usersdiego mendezdesktopinnovacionnotariadigi talnodemodules simplifyincontext c usersdiego mendezdesktopinnovacionnot ariadigitalnodemodules simplifynested c usersdiego mendezdesktopinnovacionnotari adigitalnodemodules simplify c usersdiego mendezdesktopinnovacionnotariadigi talnodemodules simplifyincontext c usersdiego mendezdesktopinnovacionnot ariadigitalnodemodules simplifynested c usersdiego mendezdesktopinnovacionnotari adigitalnodemodules motivation use case changing behavior environment", "num": "22239", "d": "2/2018"}, {"title": "tutorial tour heroes added hero value shows nothing", "body": "submitting current behavior tutorial tour heroes removing hero names value added hero shows null expected behavior", "num": "22237", "d": "2/2018"}, {"title": "language service error checking updates reopening template", "body": "submitting current behavior component b module exported import modula importing module module component ca used component b template ok module import prop comment module b template ca component opened time service worker nt throw error close ca template editor open reopen error throws case uncomment module b import array prop module editor ca template staying opened error still staying make error dissappear need close ca template open expected behavior update language service error analyzer smarter reopening component template affect user experience lagging editor current behavior sufficient hope realizable minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22236", "d": "2/2018"}, {"title": "restore version checking back", "body": "travis runs error pops due unresponsive page working uncomment close issue", "num": "22231", "d": "2/2018"}, {"title": "setattribute rendering attributes lower case", "body": "submitting current behavior using set attributes div case felx layout attributes renderer renders attributes lower case fxflex get fxflex flexlayout longer working code using gt expected behavior attributes must rendered described function call outcome fxflex fxflex minimal reproduction problem instructions see code motivation use case changing behavior moment possible render flexlayout code environment", "num": "22230", "d": "2/2018"}, {"title": "header issue", "body": "documentation issue request insignificant bug documentation move header little bit right", "num": "22227", "d": "2/2018"}, {"title": "aio docsapi new icons types", "body": "submitting current behavior currently type api reference icon icons rectangular boxes caps text color differentiates types expected behavior find asking decoration expect users build memory association icons types example users begin learn class blue box api ref index pages wonder come set icons pop caps box nt easy scan sentence camelcaps shape variation also colors close nt distinguish well scanning perhaps come icons colors scan easily perhaps color families could used similar types blue green class interface get icons like might able reuse diagrams elsewhere help reinforce association nt bad wondering opportunity minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22224", "d": "2/2018"}, {"title": "work arrays queryparams", "body": "submitting current behavior work arrays queryparams expected behavior match correctly url arrays queryparams minimal reproduction problem instructions plunker show issue click link array plunker navigation achieved class added link red queryparams array however click link integer works fine link highlighted red identification issue looked issue angular code think issue caused method compare queryparams file packagesroutersrcurltreets issue work arrays maybe pull request fix motivation use case changing behavior using arrays queryparams store state url order able save link use later could probably use workaround sort stringify array using prefer environment", "num": "22223", "d": "2/2018"}, {"title": "mistake css file tour heroes tutorial", "body": "submitting current behavior buttons nt styled correctly expected behavior buttons styled minimal reproduction problem instructions heroesheroescomponentcss line change class selector button element selector button buttons styled correctly motivation use case changing behavior nice output environment", "num": "22222", "d": "2/2018"}, {"title": "component loading jqxlayout", "body": "using jqxwidgets designed one jqxlayout tabbed group document group trying load angular component inside jqxlayoutit loading kindly share code load component jqxlayout code export class appcomponent layout type layoutgroup orientation horizontal items type layoutgroup orientation vertical width items type documentgroup items type documentpanel title toolitems contentcontainer toolbarpanel type layoutgroup class color orientation horizontal width height items type tabbedgroup width height items type layoutpanel title color group contentcontainer colorgrouppanel type tabbedgroup width height items type layoutpanel title error list contentcontainer colorlistpanel type tabbedgroup width items type layoutpanel title properties contentcontainer propertiespanel html code list properties requirement load component jqxlayout kept controls child component need instantiate component controls refer child component layout find reference regarding requirement please provide example useful thanks hanusaikrishna", "num": "22220", "d": "2/2018"}, {"title": "serviceworker read property next undefined", "body": "submitting current behavior updating files server serviceworker active sometimes fails serviceworker read property next undefined line ngswworkerjs node head previous may may tail next first grab previous node const previous thisstatemap nodeprevious fix forward pointer skip node go directly nodenext previousnext nodenext lt assertion fails nodenext may may set fix back pointer skip node set node happened tail tail needs updated point previous node removing tail seems set node array expected behavior serviceworker crash set check object set setting property minimal reproduction problem instructions sorry ca nt provide example happens every time depends changes files cached serviceworker motivation use case changing behavior preventing crash environment", "num": "22218", "d": "2/2018"}, {"title": "docs forms expand documentation validator interface", "body": "submitting current behavior description validator interface poor imo furthermore currently documentation method expected behavior function signatures commented minimal reproduction problem instructions check src", "num": "22217", "d": "2/2018"}, {"title": "test component input set foo bar method", "body": "submitting stackoverflow find support write current behavior test component import component input angularcore import cameramodel videomodel models import translation translationservice import utilities isodatetime utilitiesutilities import observable rxjs import dashboardservice servicesdashboarddashboardservice import overlayservice servicesoverlayoverlayservice import dashboardvideoaddcomponent dashboardvideoadddashboardvideoaddcomponent component selector dashboardvideoslist templateurl dashboardvideoslistcomponenthtml styleurls dashboardvideoslistcomponentscss export class dashboardvideoslistcomponent extends translation camerafetching boolean false utilities utilities test import async componentfixture testbed angularcoretesting import dashboardvideoslistcomponent dashboardvideoslistcomponent import dashboardservice servicesdashboarddashboardservice import locationsservice serviceslocationslocationsservice import configservice servicesconfigconfigservice import localservice serviceslocallocalservice import camerasservice servicescamerascamerasservice import portalvideoservice servicesportalvideoportalvideoservice import storagevideoservice servicesstoragevideostoragevideoservice import webcamerastreamservice serviceswebcamerastreamwebcamerastreamservice import dictionariesservice servicesdictionariesdictionariesservice import videoanalyticsservice servicesvideoanalyticsvideoanalyticsservice import authmodule modulesauthauthmodule import httpmodule angular import translationmodule import ngbmodule ngbtooltipmodule ngbootstrapngbootstrap import loadablecomponent loadableloadablecomponent import customelementsschema angularcore import cameramodel modelscameramodel describe dashboardvideoslistcomponent gt let component dashboardvideoslistcomponent let fixture componentfixture test get error failed componentcamera function expected behavior test passes minimal reproduction problem instructions moment ca nt provide environment dependencies agmcore angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter ngbootstrapngbootstrap swimlanengxdatatable bootstrap corejs csselementqueries geojson jquery lodash moment normalizr rxjs tether zonejs devdependencies angularcli angularcompilercli angularlanguageservice typesjasmine typesnode bestzip codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter karmaphantomjslauncher protractor tsnode tslint typescript angular version browser chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx x karmachromelauncher version x karmaphantomjslauncher tooling issues node version platform windows", "num": "22216", "d": "2/2018"}, {"title": "error polyfillsbundlejs running angular project", "body": "submitting current behavior running angular project working perfect chrome run sometimes throws error line code pollyfillsbundlejs try tasktype macrotask amp amp taskdata amp amp taskdataisperiodic taskcancelfn null try return thiszonedelegateinvoketask task applythis applyargs catch error thiszonedelegatehandleerror error throw error error throws line please see attached screenshots reference expected behavior happening frequently always minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22215", "d": "2/2018"}, {"title": "add milestone needstriage issues nt label comp", "body": "submitting current behavior github way label comp wildcard searches find untriaged issues expected behavior new feature request bot issues angularangular dont label comp assignment would like bot assign milestone needstriage minimal reproduction problem instructions applicable motivation use case changing behavior efficiency improvement triaging environment", "num": "22212", "d": "2/2018"}, {"title": "ngc attempts generate metadata rxjs subscription", "body": "steps reproduce clone relevant tsconfig also worth mentioning bazel build tests fine error", "num": "22210", "d": "2/2018"}, {"title": "feature request fragments components like ngcontainer", "body": "submitting current behavior every custom component make angular nodes document new tag expected behavior would like way create custom component show self document tree content like tag minimal reproduction problem instructions motivation use case changing behavior libraries like angular material needs components needs child nativescript use special xml syntax define components framework special requirement work properly fragments could able create new components fits needs application insert knowing applied would insert template declaring environment related current angular tags disappears applied ngcontainer issues spa platforms react fragments declaration suggestion could new property declaration like boolean another decorator propuse implementation suggestion concerns styles classes names applied currently shadow dom emulation new attribute added children component could mean styles still developer declare styles component using pseudo selector would create new shadow dom styles applied asis declared angular try figure developer would want developer apply styles classes names fragment tag ignored cause element would disappear expected behavior fragment allow attributes declared properties effectively ignoring throwing valid attribute", "num": "22208", "d": "2/2018"}, {"title": "trouble cli ivy hello world read property type undefined", "body": "submitting preconditions new cli project enable ivy update boostrap current behavior runtime browser expected behavior hello world application renders environment", "num": "22206", "d": "2/2018"}, {"title": "hello world size regression tree shakeable providers", "body": "notice size increase guess pulls decorator fails tree shaken away see", "num": "22205", "d": "2/2018"}, {"title": "router mutate route config objects causes issue platformserver", "body": "submitting current behavior router mutates route object created user configure ngmodule writing extra loadedconfig field ok platformbrowser platformserver parallel requests sharing route object expected behavior router create copy route config per application mutating minimal reproduction problem instructions motivation use case changing behavior make sure router works properly server environment environment", "num": "22203", "d": "2/2018"}, {"title": "generic type formbuilder functions", "body": "submitting current behavior formbuilder functions create forms controls ca nt typed model structure expected behavior formbuilder functions could generic type argument type form model typescript interface model name string thisfbgroup name verify property value thisfbgroup name throws error motivation use case changing behavior typed forms help improve development environment", "num": "22202", "d": "2/2018"}, {"title": "formarrays shared formcontrols", "body": "submitting current behavior one formgroup two formarrays first formarray formcontrols b c second formarray formcontrols b subscribed formarrays valuechange observable b changes first formarray nt executes valuechange second formarray changes executed c changes first formarray executes valuechange expected behavior expected changes b executes valuechange formarrays minimal reproduction problem instructions environment", "num": "22200", "d": "2/2018"}, {"title": "formcontrol nt update fields used multiple locations", "body": "submitting current behavior using formcontrol multiple input fields values shown updated input fields one field edited expected behavior proper binding reflect like ngmodel minimal reproduction problem instructions stackblitz shows behavior using formcontrols well ngmodel see ngmodel updates input fields formcontrol motivation use case changing behavior segmenting long forms makes sense show input multiple sections environment", "num": "22199", "d": "2/2018"}, {"title": "form validator directives working", "body": "submitting current behavior form validators directives nt seem work implicit formgroup instances observed recently validators expected behavior field directive value result set minimal reproduction problem instructions example stackblitz create implicit form using create implicit control using set validator control eg enter value observe errors valid still also observe accepted value looks like default counterintuitive behavior environment", "num": "22198", "d": "2/2018"}, {"title": "errorhandler working lazyloaded child modules", "body": "submitting current behavior declaring errorhandlers child modules also declaring errorhandler root module root error handler always called case error child module errorhandlers ignored made sample repo behaviour click error thrown also made branch rooterrorhandler removed error handling expected behavior expect error handling module specific least work declared one child module minimal reproduction problem instructions click either see error always handled root error handler click either see errors nt handled motivation use case changing behavior want module specific error handling environment angular version browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx also added bounty question week ago real answer", "num": "22197", "d": "2/2018"}, {"title": "angular routing seems functioning runs using vs", "body": "submitting current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22196", "d": "2/2018"}, {"title": "duplicated navigationid restoredstate app reloads", "body": "submitting current behavior application reloaded browser router starts assigning navigation id user goes back reload get id navigation nt happened current application context imho acceptable id unrelated navigation much worse use id store data restored user navigates back page possible get bad inconsistent data expected behavior navigation id always unique browser session even reload probably start counting stopped reload cookies session storage may necessary option would using timestamp instead consecutive integers navigation id minimal reproduction problem instructions open app navigate page reload navigate page click back back log twice motivation use case changing behavior duplicated browser session otherwise stored data associated inconsistent environment", "num": "22195", "d": "2/2018"}, {"title": "incorporate change event tinymce", "body": "trying use library project successfully integrated tinymce module could trigger callback change event changes happened tinymce editor addprogressnotemodulets file ngmodule declarations addprogressnotepage imports ionicpagemoduleforchild addprogressnotepage tinymcemodulewithconfig menubar false plugins textcolor toolbar forecolor resize false statusbar false addprogressnotehtml file addprogressnotets file onchangenote void consolelog thisnotetext onchangenote fire trigger callback event change event tinymce editor", "num": "22194", "d": "2/2018"}, {"title": "compiler generates ngfactory file angular metadata", "body": "submitting current behavior circumstances aot compiler generate file file angular metadata must using angular cli must using aot compilation must using tsconfig cli sets automatically performance reasons must namespace import like file without angular decorators conditions met rebuilds fail following stack trace expected behavior compilation succeed minimal reproduction problem instructions issue originally reported reproduced git clone cd reprobugangularcli npm npm start aot edit file eg add environment cc chuckjaz", "num": "22193", "d": "2/2018"}, {"title": "facing issue referring typescript file outside project directory working", "body": "following directory structure mainproject packagejson systemjsconfigjs tsconfigjson app folder shared packagejson tsconfigjson app folder service servicets main project try add servicets file get error need assistance achieve adding ts file outside project directory", "num": "22192", "d": "2/2018"}, {"title": "build failed production mode", "body": "hi error building application production mode following error building angular application production mode error getting error uglifyjs unexpected character used command ng build prod working fine use production mode please help solve issue", "num": "22191", "d": "2/2018"}, {"title": "production build failed error angular form", "body": "current behavior ng build prod giving error reactive form error chunk styles bytes initial rendered chunk polyfills bytes initial rendered chunk main bytes initial rendered chunk inline kb entry rendered error srcappcomponentsloginlogincomponenthtml argument type formgroup assignable parameter type ngform property submitted missing type formgroup minimal reproduction problem instructions componentts file componenthtml file name birth year location country city phone numbers phone number remove add phone number myformvalue json register print console environment", "num": "22190", "d": "2/2018"}, {"title": "classname template function work production", "body": "submitting current behavior classname property works dev build however fails production build classname gives undefined browser related dev build works fine browser expected behavior get classname undefined production build get actual class name something compiles works dev build must work production build minimal reproduction problem instructions code used dev build works fine fail gives undefined production build export class employee public id string public classname employee constructor values object objectassign values export class api public list c new values object gt var classname cname returns employee dev build undefined production build motivation use case changing behavior template functions wo nt help much get class name production environment", "num": "22187", "d": "2/2018"}, {"title": "selected option selected ngfor loop", "body": "submitting current behavior create select ngfor selected tag expression default select correct option selects nothing even keyboard model null option selected expected behavior case select show azerty also tested keyboard variable initialized id name azerty value selected tested also string object number comparison expression work either minimal reproduction problem instructions see code motivation use case changing behavior environment", "num": "22184", "d": "2/2018"}, {"title": "angular support custom view engines addition amp", "body": "submitting current behavior angular currently supports ivy view engines alternatives supported expected behavior angular supported alternative view engines alternative view compilers range implementation approaches view processing could experimented one idea webassembly rather within compilercli producing typescript code could emitwasm would create wasm code another idea custom view engine would multithreaded different parts page managed different web workers connected main ui thread actual dom edits via shared array buffer angular application developers continue write angular template syntax unchanged alternative view engines process different ways minimal reproduction problem instructions detailed explanation idea motivation use case changing behavior find absolute fastest way view processing large applications webassembly supports direct dom access larger angular apps approach could faster typescript approach environment", "num": "22183", "d": "2/2018"}, {"title": "ng build remove git info dist dir", "body": "submitting current behavior git dir removed expected behavior git kept back minimal reproduction problem instructions motivation use case changing behavior easier deployment git push", "num": "22180", "d": "2/2018"}, {"title": "platformbrowser transferstate support values", "body": "submitting current behavior thistransferstateset key thistransferstateset false thistransferstateset null thistransferstateset testenumfirst consolelog thistransferstateget key default consolelog thistransferstateget default consolelog thistransferstateget default consolelog thistransferstateget default output expected behavior minimal reproduction problem instructions set transfer state given key value javascript conditionally evaluates false access value using get method observe default value returned motivation use case changing behavior transfer state support primitive types environment", "num": "22178", "d": "2/2018"}, {"title": "provide routing details router events", "body": "submitting current behavior contain information whether provided expected behavior events navigationend contain flags motivation use case changing behavior would useful eg track navigation events build internal history stack used implement back button app however may components within page change url used prevent adding location history router events however possible see whether flags provided also nt want use like provide actual routerlink instead click handler link actually proper link environment", "num": "22177", "d": "2/2018"}, {"title": "upgraded components ngtransclude throw error content", "body": "submitting current behavior upgrading angular js component uses transclude option error thrown runtime attempts destroy transcluded scope happening content passed aside appears local available either thus injected related issue possible pr expected behavior error thrown minimal reproduction problem instructions error visible console environment angular version angularjs version browser", "num": "22175", "d": "2/2018"}, {"title": "improvement tour heroes tutorial routing", "body": "section masterdetail components introduced property binding since heroescomponent directly binding hero property herodetailcomponent necessary import input declare hero property using input hero hero technique used however improvements made section routing hero details retrieved route heroid result code herodetailcomponentts simplified import component oninit angularcore instead import component oninit input angularcore hero hero instead input hero hero", "num": "22174", "d": "2/2018"}, {"title": "forms updatevalueandvalidity update descendants", "body": "submitting current behavior currently updatevalueandvalidity method abstractcontrol class updates abstract control ascendents descendants expected behavior triggering updatevalueandvalidity method abstract control possibility say descendants abstract control updated well eg form group containing several form controls executing updatevalueandvalidity form group update value validity form controls form group motivation use case changing behavior cumbersome lot additional code written update every single form control environment", "num": "22166", "d": "2/2018"}, {"title": "introduce waiting status control", "body": "submitting current behavior currently hard implement proper behavior form control control ready used example order use http call must performed get list available options get worse list available options depends form control change many times example creating typeahead like behavior right programmer options set controls state disabled invalid data ready choices bad one thing meaning set control state disabled form forgets existing errors control form becomes valid set control state invalid mess styles expected behavior control wating status could set using method input least one controls waiting whole form waiting also would nice user could implement kind indicator andor block control minimal reproduction problem instructions na motivation use case changing behavior app would used time many selects depend control value waiting state would make implementation easier less hacky", "num": "22165", "d": "2/2018"}, {"title": "enhancement", "body": "submitting x feature request current behavior seems hook page reload refresh hook like onpagerefresh helpful page refreshes expected behavior refresh page initiated user browser parent app component reloaded parent component reloaded could manual redirections parent component loses current page user instance let say home component check see presence unexpired jwt key redirect user home route user purchase route refreshes page app home component recreated redirects home route upon seeing presence unexpired jwt key instead reloading purchase route component minimal reproduction problem instructions motivation use case changing behavior refresh angular page still stay page refresh environment", "num": "22161", "d": "2/2018"}, {"title": "simple visual bug main angular page", "body": "look next step label", "num": "22159", "d": "2/2018"}, {"title": "documentation error says ngmodule instead browsermodule", "body": "submitting current behavior architecture overview angular libraries screen print says also import ngmodules angular libraries using javascript import statements contradiction example shown code expected behavior description also import brosermodul angular libraries using javascript import statements inline code example given minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22158", "d": "2/2018"}, {"title": "docs aio circular dependency guides", "body": "submitting current behavior bootstrapping page starts following prerequisites basic understanding following javascript modules vs ngmodules javascript modules vs ngmodules page starts following prerequisites basic understanding bootstrapping expected behavior reader able read prerequisites page page minimal reproduction problem instructions na motivation use case changing behavior reader new angular unable know heshe read page first page first environment na", "num": "22157", "d": "2/2018"}, {"title": "hammerjs events causing memory leaks detached nodes", "body": "submitting current behavior angular removes event listener hammer event calls function hammer manager instance addeventlistener element htmlelement eventname string handler function function const zone thismanagergetzone eventname eventnametolowercase however destroying manager instance holding reference element causing detached nodes every element listening hammer touch event expected behavior removing event listener hammer touch event detached nodes left therefore addition angular also call minimal reproduction problem instructions simple demo reproducing problem repeatedly clicking toggle button button add remove component tab event go memory tab chrome dev tools create heap snapshot filter list detached see bunch detached nodes expand nodes see causing also added quick fix go gestureservicets uncomment code line fix simply calls ind addition motivation use case changing behavior current behavior drastically decreases performance apps lot touch events environment browser x chrome desktop version", "num": "22155", "d": "2/2018"}, {"title": "angular throws aot parent component decorator", "body": "submitting current behavior basecomponentts injectable export class basecomponent constructor public comopnentservice comopnentservice childtwocomponentts export class childtwocomponent extends basecomponent intermediatecomponentts export class intermediatecomponent extends basecomponent constructor protected type typesenum comopnentservice comopnentservice super comopnentservice childonecomponentts export class childonecomponent extends intermediatecomponent constructor comopnentservice comopnentservice super typesenumone comopnentservice jit without decorator childtwocomponent ca nt instantiated aot decorator warning shown console expected behavior warnings aot minimal reproduction problem instructions reproduction motivation use case changing behavior confusing behavior environment browser x chrome desktop version tooling issues node version", "num": "22153", "d": "2/2018"}, {"title": "violation added nonpassive event listener scrollblocking mousewheel event", "body": "x bug report chrome open developer console run plunker click alabama get error message problem reported already", "num": "22152", "d": "2/2018"}, {"title": "testing mocha done stops subsequent tests", "body": "submitting current behavior use standard case mocha done function subsequent tests run work done gt done work gt executed expected behavior subsequent tests continue run motivation use case changing behavior ability write tests using mocha environment browser x chrome desktop version tooling issues node version platform windows others angular cli used test starter", "num": "22150", "d": "2/2018"}, {"title": "required edits layout official site", "body": "submitting current behavior apparently somewhere overdetermined styles animation hangs badly weak computers examples small screen stable execute default screen width execute scrolls displayed hovering community focus black bands css matsidenavmatsidenavsidenav overflow hidden matsidenavmatsidenavsidenav hover overflow auto etc broken layouts home page browser chrome desktop version tooling issues platform windows", "num": "22149", "d": "2/2018"}, {"title": "listeners property debugelement instance represent actual event listeners element", "body": "submitting current behavior component htmlelement moment add event listener element addeventlistener rxjs subscription whatever everything works perfectly production problem unit tests specifically debugelement suppose problem listeners array represent actual state event listeners element find html element moment unit test something happens element gets new event listener rxjs subscription instance want emulate event want check component reacted correctly example work rxjs fromevent subscription async gt const fixture testbedcreatecomponent appcomponent const de fixturedebugelement const component fixturecomponentinstance code createkeydownsubscription thiskeydown observablefromevent thisinputnativeelement keydown unit test work also compare eventlisteners array element listeners property debugelement element different expected behavior expect listeners array debugelement instance represents actual listeners element minimal reproduction problem instructions created repro github repo repro cd ngrxjsfromeventtestgit yarn yarn test get bit verbose code provided repro component spec motivation use case changing behavior bug fixed fixed comfortable unit test cases environment", "num": "22148", "d": "2/2018"}, {"title": "typo code snippet preservewhitespaces", "body": "submitting current behavior section angular compiler options page aheadoftime aot compiler code snippet typo property name preservewhitespaces uppercase preservewhite preservewhitespaces lowercase preservewhite expected behavior property name preservewhitespaces lowercase preservewhite minimal reproduction problem instructions wrong property name effect compiling aot error message regarding invalid property name displayed motivation use case changing behavior code snippet used via copy amp paste really hard find changing value effect especially difficult error message regarding invalid property name displayed environment", "num": "22147", "d": "2/2018"}, {"title": "feature request service worker background sync", "body": "submitting current behavior right service worker package sync feature since angular follows plugin mechanism add service worker apis feel major feature required background sync expected behavior able register background sync easily using angularserviceworker package minimal reproduction problem instructions na motivation use case changing behavior required make sure user able actions even unstable internet connections", "num": "22145", "d": "2/2018"}, {"title": "collect google analytics subdomains nextangulario", "body": "believe currently collect analytics angulario stable version means missing seeing traffic goes next version archive versions reconfigure analytics domains included reports x nextangulario x x exist also consider x cliangulario x universalangulario x materialangulario anything else additional items x also need reconfigure analytics reports views display domain name helpful links", "num": "22142", "d": "2/2018"}, {"title": "error formgroup inside formarray formarray error typeerror ctrlupdatetreevalidity function", "body": "submitting current behavior trying render form little complex usual survey formgroup questions formarray onequestion formgroup items formarray like nested formarray model load form presenting error console expected behavior show form questions field formarray formarrays inside makeform thissurveyformfields id title validatorsrequired description status draft image questions thisfbarray thisinitquestion thissurveyform thisfbgroup thissurveyformfields thissurvey amp amp objectkeys thissurvey length gt thissetdataform thissurveyform thissurveyformfields thissurvey thissurveyformcontrolsquestions thisfbarray thissurveyquestionsmap q gt return thisinitquestion q initquestion question null const keys title description status draft type text points position image group api thisinitapi items thisfbarray validators thisfbarray conditions thisfbarray const group thisfbgroup keys question thissetdataform group keys question groupcontrolsitems questionitemsmap gt return thisinititem null return group inititem item null const keys label value const group thisfbgroup keys item thissetdataform group keys item return group setdataform form keys data data return const formdata const key keys key data const value data key formdata key value else formdata key form patchvalue formdata onlyself true minimal reproduction problem instructions try form like try render form empty fields motivation use case changing behavior work tieh formgroup formarray formgroup formarray environment latest angular browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform mac others braking view would good working one view", "num": "22141", "d": "2/2018"}, {"title": "bot sets status check green even though forbiden label", "body": "", "num": "22140", "d": "2/2018"}, {"title": "setup ngbot autodeploy", "body": "merge bot pr changes deployed firebase updates go live", "num": "22139", "d": "2/2018"}, {"title": "aio docsapi enforce use required jsdoc tags", "body": "gkalpak suggested think might good idea enforce docs whatitdoes description sections think encourage good practices right depending whether whatitdoes andor description section docs something looks like description overview description section others description section overview nothing others guess think enforcing whatitdoes description tags ensure docs look consistent api docs authors forc ehm encouraged provide short highlevel possibly oneline description well longer thorough description", "num": "22138", "d": "2/2018"}, {"title": "aio docsapi remove single character param names", "body": "gkalpak suggested think would good idea check via dgeni prevents oneletter param names", "num": "22137", "d": "2/2018"}, {"title": "aio docsapi render calltype interfaces correctly", "body": "see", "num": "22136", "d": "2/2018"}, {"title": "aio docsapi place examples signature params sections", "body": "probably combination src code changes actually implementing jsdoc tag dgeni", "num": "22135", "d": "2/2018"}, {"title": "aio docsapi indicate param optional", "body": "information dgeni rendered template", "num": "22134", "d": "2/2018"}, {"title": "aio docsapi consider removing parenthesis method headings", "body": "gkalpak noted ignore red arrow another issue resolved since constructor signature shown find little confusing inconsistent sections eg heading section kind looks like constructor called arguments", "num": "22133", "d": "2/2018"}, {"title": "aio apidocs group members type overview", "body": "gkalpak suggested overview consider grouping properties normal getterssetters together put methods", "num": "22132", "d": "2/2018"}, {"title": "aio apidocs header link icons overwrite visual elements", "body": "gkalpak noted headerlink appears hovering main doc heading overlaid onto badge", "num": "22131", "d": "2/2018"}, {"title": "aio apidocs doctype badge placement", "body": "gkalpak raised concerns placement badges badges name ideal imo imo main piece information line name thing helps predictable location depending number texts badges name may end right would put badges either right name make smaller", "num": "22130", "d": "2/2018"}, {"title": "angular team eng productivity tracking issue", "body": "bunch ongoing work make engineering productive many cases use improve tools depend write blog posts explaining projects adopt things externalize googleinternal workflows tools part projects described", "num": "22126", "d": "2/2018"}, {"title": "incorrect template errors union types", "body": "submitting current behavior imported following component error given value expected behavior template error appears similar", "num": "22125", "d": "2/2018"}, {"title": "lazy loaded module rendered server side rendering", "body": "submitting current behavior added lazyloaded module named user amp simple component named admin routing lazyloaded module working fine getting things properly content lazyloaded module rendered page source mean right click amp view page source ca nt get content lazy module rendered instead getting routeroutlet tags issue normal component also getting error cmd uncaught promise referenceerror system defined systemjsngmoduleloaderloadfactory also importing modulemaploadermodule crashes entire app issues building running browser getting errors without app served hereby attaching github repo link amp snapshots issue using following links get working error part like due code missing side please pardon amp help fix checked issue could nt find solution please help get resolved expected behavior contents lazyloaded module also rendered page source nt right according angular universal currently issue normal components contents lazyloaded module must rendered page source minimal reproduction problem instructions github link project normal component contents getting rendered page source lazyloaded module routeroutlet tags rendered instead actual content motivation use case changing behavior environment", "num": "22124", "d": "2/2018"}, {"title": "master branch represent already tested google", "body": "change branches angularangular branch used caretaker commits ready land get merged first one looks changes merged fastforward pointer called master commit synced internally gives external users reliable snapshot build master already live google fixes issue see changes master delta show presubmit run cleanup needed docs refer master lot needs change caretaker queue becomes githubcomangularangularcomparemaster hardcoding branch travis config instead stop building master pull requests default target branch", "num": "22123", "d": "2/2018"}, {"title": "add ngconf announcement homepage", "body": "april salt lake city ut campaign duration april logo provided nt fit design petebacondarwin clarify problem aaronfrost provide better logo previous logo ngatl angular mix ac logos found please note landing change change implemented ref stephenfluin", "num": "22122", "d": "2/2018"}, {"title": "tutorial example problem enter new item empty list", "body": "submitting current behavior angular example tour heroes part tutorial angular problem enter item heroinescomponent delete items list heroinescomponent enter new item text field press add button listed item neither id name browser console indicates error message like expected behavior new item entered even list empty recommend revise code angular example able enter new item empty list shows minimal reproduction problem instructions see current behavior motivation use case changing behavior confused learning tutorial sample environment", "num": "22120", "d": "2/2018"}, {"title": "angular router erases oauth authentication results", "body": "submitting current behavior use address spa redirect url oauth angular using hashlocationstrategy erase authentication information hash uri part angular app process expected behavior way configure router individual routes rewrite uris routing event fires uri rewritten minimal reproduction problem instructions go offlineaccess amp amp statearbitrarydatayousentearlier compare uri link uri browser examine javascript log routing events motivation use case changing behavior oauth widelyused protocol authorization spas use implicit grants default append authentification results uri fragment see link angular must offer angular app way evaluate original uri fragment order oauth work environment", "num": "22119", "d": "2/2018"}, {"title": "uncaught typeerror staticinjectorerror platform core set property injector undefined", "body": "submitting source contains rest api call well global variable reference also used bootstrap css saved jquery since using bootstrapjs getting prod build files executing ng build prod everying working fine local server however merging jsp code server getting error uncaught typeerror staticinjectorerror platform core set property injector undefined expected behavior error minimal reproduction problem instructions create ng build prod merge code another jsp environment dependencies angularanimations angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter bootstrap classlistjs corejs rxjs webanimationsjs zonejs devdependencies angularcli angularcompilercli angularlanguageservice typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter protractor tsnode tslint typescript angular version browser na tooling issues node version platform windows", "num": "22118", "d": "2/2018"}, {"title": "animation events hostlisteners nt supported angular elements yet", "body": "regression behavior used work stopped working new release x bug report x feature request documentation issue request support request could considered bug also feature decide current behavior angular component builtin animations using angular animation events components host listeners nt supported example assuming component animation events like wo nt triggered resulting angular element component native host listener work eg reason nt working yet custom element equivalent angular events expected behavior sure whether expect magically handled angular elements sure supposed supported eventually definitely makes components work way expected running custom elements bringing motivation use case changing behavior might want angular elements support angular animations well affects many angular material components", "num": "22117", "d": "2/2018"}, {"title": "future snapshot route navigated", "body": "submitting current behavior sure whether bug documentation error parameter route navigating really confusing expected behavior would expect parameter route navigating minimal reproduction problem instructions create two routes go one motivation use case changing behavior current behaviour makes hard work environment", "num": "22116", "d": "2/2018"}, {"title": "ngmodelchange called input lose focus type number", "body": "submitting current behavior using input type function called value changes input loses focus expected behavior using input type behave like string input type minimal reproduction problem instructions using input default string type function called one time change type function called input loses focus also component html event called one time even input lose focus event called input lose focus motivation use case changing behavior environment", "num": "22115", "d": "2/2018"}, {"title": "angular elements preserveforward component methods", "body": "submitting regression behavior used work stopped working new release x bug report x feature request documentation issue request support request partially considered bug due developer expectations partially feature request might fixable sense current behavior creating custom elements angular components using angular elements apis resulting elements preserve angular component methods custom elements example giving component like make available resulting custom element const car documentqueryseletor carthing cardrive errors nt exist angular component nt actually become custom element rather preserved inside custom element readable via make code work need call expected behavior angular elements promoted angular components packaged custom elements expect angular elements characteristics custom elements come attributes properties methods events words expect work useful notes ideas talked gkalpak already one ideas maybe come new decorator tells angular preserve decorated method resulting host element another idea would declare registration process methods preservedforwarded could look like reason might additional api needed ca nt preserveforward components methods methods may intended available resulting angular element eg lifecycle hooks etc motivation use case changing behavior think great consumers angular elements nt worry angular internals fact use angular element exactly way use dom element right call component methods consumers angular elements know populated nt seem convenient one would expect", "num": "22114", "d": "2/2018"}, {"title": "error uncaught promise typeerror", "body": "error error uncaught promise typeerror read property getcountries undefined typeerror read property getcountries undefined new trialcomponent createclass createdirectiveinstance createviewnodes createrootview callwithdebugcontext objectdebugcreaterootview createrootview componentfactorycreate componentfactoryboundtomodulecreate viewcontainerrefcreatecomponent new trialcomponent createclass createdirectiveinstance createviewnodes createrootview callwithdebugcontext objectdebugcreaterootview createrootview componentfactorycreate componentfactoryboundtomodulecreate viewcontainerrefcreatecomponent resolvepromise resolvepromise eval zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue", "num": "22113", "d": "2/2018"}, {"title": "httpclienttestingbackendverify drops query parameter info open requests", "body": "submitting current behavior test failures httpclienttestingbackendverify prints list open unexpected requests urls eg unfortunately drops query parameters requested urls makes difficult track test failed expected behavior eg minimal reproduction problem instructions nt yet created test reproduce problem questionable code seems split call explicitly drops query params motivation use case changing behavior hard track failed tests applications use query parameters backend requests environment", "num": "22112", "d": "2/2018"}, {"title": "refreshing route offline fails angular service worker", "body": "moved versions windows server angular version angular cli node os angular reproduce create new angular service worker routing ng new app serviceworker routing add route home link go home build deploy open site go home page clicking link go offline refresh browser observed behavior u refresh fails cause url home home cached indexhtml desired behavior since home indexhtml different route fail problem wo nt show offline cause handled server following script server knows return indexhtml service worker nt cached indexhtml home guess requestquestion able service worker create default file routes routes caching rules workaround use hash routing instead path routing", "num": "22110", "d": "2/2018"}, {"title": "docs outdated developermd", "body": "submitting current behavior developer guide outdated building angular bower package manager missing rsync command found installed rsync added environment path another error throws could nt solved expected behavior update document actual inlcude prerequisite correct rsync minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22109", "d": "2/2018"}, {"title": "problem property binding reevaluation template reference variable", "body": "submitting current behavior expected behavior template include following html code expect submit button disabled default type something input box gets enabled since property binding reevaluated every event cycle happening button stays disabled change code following add explicit event binding nothing template variable behaves intended think overaggressive optimization going compliance stated page angular processes data bindings per javascript event cycle root application component tree child components minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22108", "d": "2/2018"}, {"title": "application stays memory even destroyed", "body": "submitting current behavior platform destroyed dom node removed application still exists memory easily verified taking heap snapshot destruction platform expected behavior application destroyed using platformrefdestroy even dom node removed manually application continue exist memory minimal reproduction problem instructions simple stackblitz application illustrates problem take heap snapshot see references applicationref platformref angular classes memory click destroy button calls destroy platform ref temporarily stored window default stackblitz angular application deletes reference window notice application appears gone dom nodes removed take heap snapshot references still motivation use case changing behavior portal environment applications may come go user navigates around causes significant memory leak applications cleaned environment related defect seems conflated several different things one conversation", "num": "22106", "d": "2/2018"}, {"title": "deprecate async test helper since confused asyncawait", "body": "instances people confused async test helper asyncawait unintentionally made test function javascript async block instead using async wrapper deprecated async test wrapper name thing else", "num": "22105", "d": "2/2018"}, {"title": "error error uncaught promise typeerror read property style null", "body": "got error error error uncaught promise typeerror read property style null typeerror read property style null logincomponenteval step objecteval next eval new zoneawarepromise awaiter logincomponentloginwithgoogle objecteval handleevent handleevent callwithdebugcontext logincomponenteval step objecteval next eval new zoneawarepromise awaiter logincomponentloginwithgoogle objecteval handleevent handleevent callwithdebugcontext resolvepromise new zoneawarepromise awaiter logincomponentloginwithgoogle objecteval handleevent handleevent callwithdebugcontext objectdebughandleevent handleevent dispatchevent eval tried data entry tests html code welcome authservicenameandfname ts code async loginwithgoogle thisusername amp amp thisphone thisfirebaseserviceupdateuser username thisusername phone thisphone await thisauthservicekeepuser username thisusername phone thisphone else thisusername thisphone documentgetelementbyid username documentgetelementbyid phone thisusername documentgetelementbyid thisusername styledisplayblock else documentgetelementbyid thisusername styledisplaynone packagejson name imagetalke version license mit scripts ng ng start ng serve build ng build test ng test lint ng lint ng private true dependencies angularanimations angularcdk angularcli angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularlanguageservice angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter angularcalendar angularmaterial errorcontext firebase groc thenrequest devdependencies angularcli angularcompilercli angularlanguageservice typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter protractor rmnpm tsnode tslint typescript anyone know solve", "num": "22102", "d": "2/2018"}, {"title": "bootstrap framework adding app", "body": "current behavior installing bootstrap via npm styles loading angular app bootstrap installed listed dependency also tried use bootstrap classes style app expected behavior bootstrap classes styles work installed via npm works fine cli angular cli angular minimal reproduction problem instructions environment", "num": "22101", "d": "2/2018"}, {"title": "type definition asyncpipetransform overly strict", "body": "submitting current behavior using type checking templates pipe accept values type instead overloads defined accept note declaring method overload implementation signature ignored typing calls needs wider overload declarations reported error argument type observable undefined assignable parameter type promise lt gt expected behavior able pass nullable values pipe without generating type errors minimal reproduction problem instructions enable template type checking define field type pass field pipe template motivation use case changing behavior environment", "num": "22100", "d": "2/2018"}, {"title": "including implied end tag p template still work", "body": "submitting current behavior including tag like address inside open closing p tags error thrown parsing template tried couple tags instead address ul li still problem checked transpiled source nt incorrectly modifying source seems issue parser expected behavior including optional closing tag still valid able parsed minimal reproduction problem instructions add html template html text contact information somedrive townsvill plnkr motivation use case changing behavior section p implies optional omit closing tag required also allowed formatting consistency error prevention optional end tags nt known environment", "num": "22099", "d": "2/2018"}, {"title": "unnecessary route change everytime runtime error occurs", "body": "submitting current behavior using using lazy loaded component router everytime error occurs angular redirects root directory making difficult development since development cycle occurs many times type inject service nt declared yet example expected behavior show runtime error without redirecting allowing error fixed page reloaded run fine minimal reproduction problem instructions motivation use case changing behavior motivation speed development process since unnecessary redirection consumes seconds every time occurs environment", "num": "22098", "d": "2/2018"}, {"title": "missing asset ngmodule reported possible mistake rule", "body": "moved", "num": "22095", "d": "2/2018"}, {"title": "use injected document instead global document object", "body": "submitting current behavior following code angularanimations package assuming global document object exists expected behavior using injected document object instead motivation use case changing behavior global document object nativescript defining polyfill causes troubles node packages try use specific methods environment angular version related", "num": "22093", "d": "2/2018"}, {"title": "using extjs inside geting context releated issue", "body": "scenario geting using ext inside angular solve", "num": "22092", "d": "2/2018"}, {"title": "download clipped part video angular using video js range slider", "body": "description working simple angular project select specific part video download clipped part different video formats help regards highly appreciable thanks expected result able download clipped part video actual getting values selected part able download versions videojs videojs plugins used page please list range slider", "num": "22091", "d": "2/2018"}, {"title": "ability ignore component css calling", "body": "would great reuse component ignore css without modifying lot plugins comes predefined css nt want need erase time make component look rest application", "num": "22090", "d": "2/2018"}, {"title": "string could nt converted number prefix interpolation expression", "body": "submitting current behavior template get expected behavior get javascript expression minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22089", "d": "2/2018"}, {"title": "aio use preview server", "body": "would nice could integrate mock firebaseredirector preview server redirects work preview server well idea credits petebacondarwin smiley", "num": "22088", "d": "2/2018"}, {"title": "service worker ca nt update sw safemode", "body": "submitting current behavior service worker installed initialized first time fetches content valid json sw goes safemode thereon impossible update service worker call never resolves rejects new fetch performed due fact messages ignored safemode replacing wrong correct one resolve issue service worker unregistered contain json example contains html sw unregistered cache cleared contain json ex also triggers following error issue occurred firebase hosted app seems cache sometimes returns html page status instead broke service worker also needed clear cache unregister service worker mobile clients might firebase sends sometimes wrong json file might another way lock service worker safemode error expected behavior possible update sw sw safemode maybe sw try refetch sure would appropriated way handle issue minimal reproduction problem instructions repo run dist change content non json case json case run something similar folder goto localhost incognito mode get error non json case json case sw installation fails sw goes safemode reload amp press button stay true fall back false ms replace content correct data non json case unregister sw amp reload works json case unregister sw amp reload error occures seems work reload fails resolve clear cache unregister sw amp reload works motivation use case changing behavior service worker lock state updated anymore environment", "num": "22087", "d": "2/2018"}, {"title": "configuration angular webpack aspnet mvc", "body": "would nice read article configuration angular webpack aspnet mvc visual studio complete documentation theme internet modern way configuration angular quickstart repo deprecated", "num": "22086", "d": "2/2018"}, {"title": "call service function template without watching", "body": "make call service function directly template angular keeps calling function infinitely affects application performance way call", "num": "22084", "d": "2/2018"}, {"title": "expose httpinterceptorhandler public api", "body": "submitting current behavior httpinterceptorhandler angularcommon exposed public api expected behavior expose httpinterceptorhandler angularcommonhttp exported apis motivation use case changing behavior currently implemented way perrequest configuration ie configurable dynamic interceptors extend httpclient dynamically chain new interceptors specific requests use httpinterceptorhandler class like done static interceptors added httpinterceptors token want use private api duplicate httpinterceptorhandler code silly already exposed long want tinker interceptors class needed would makes sense expose publicly environment", "num": "22083", "d": "2/2018"}, {"title": "docs style guide directive selectors nt mention prefixing selectors", "body": "submitting current behavior directive selectors section style guide nothing mentioned prefixing selectors name spacing however guide write structural directive second last paragraph find following directive attribute name spelled lowercamelcase begin prefix nt use prefix belongs angular pick something short fits company example prefix mentioned style guide worse angular directives seem prefixed single word prefixed multiple expected behavior style guide make recommendation prefixing prefixing directive attribute names would happy submit pr clarify issue style guide receive direction", "num": "22081", "d": "2/2018"}, {"title": "configure service worker present stale content frequently visited landing pages", "body": "repro user navigate stick around enough sw catch everything angular developers push update angulario homepage eg new release announcement user go find release announcement click link mentioned blog post new events coming expected result see updated version current result see outdated version wait long enough sw update reload see new content tricky thing nt way going affect tti new sw feature optimize freshness affects tti maybe consider full page reload detect currently displayed content stale sure alxhub stephenfluin", "num": "22080", "d": "2/2018"}, {"title": "remove document coresrcanimationdslts symlink", "body": "introduced symlink nt recall reason think something code reuse backwards compatibility symlink causing issues bazel build generally confusing could remove ca nt document needs done symlink removed issue", "num": "22079", "d": "2/2018"}, {"title": "aio redirect guidestyleguide", "body": "submitting current behavior old valid styleguide url minko gechev tells breaks lot releases codelyzer printed content book used redirect current location redirects recently updated maybe much bigger regression expected behavior redirect confirm old redirects still working minimal reproduction problem instructions go", "num": "22078", "d": "2/2018"}, {"title": "docs explain information required breaking changes commit", "body": "submitting per comment developer docs breaking changes commit messages formatted", "num": "22076", "d": "2/2018"}, {"title": "patching elementprototypeaddeventlistener breaks angular apps", "body": "angular app tried patch elementprototypeaddeventlistener use case patch patch elementprototypeaddeventlistener breaks angular app resourcesxhrs sent app tried many angular apps result errors console ca nt patch eventtargetprototypeaddeventlistener work eventtarget defined", "num": "22073", "d": "2/2018"}, {"title": "fix angularangular available angular cli github code yet", "body": "submitting current behavior current fix angular cli following fix ngtoolswebpack suppress warnings overwriting files tsc works manually change code local code base download latest version angular cli change expected behavior current fix angular cli following fix ngtoolswebpack suppress warnings overwriting files tsc change official angularcli version instead fork minimal reproduction problem instructions plz install latest angularcli go file nodemodules ngtoolswebpacksrcangularcompilerpluginjs line thiscompileroptionsoutdir per fix expect line thiscompileroptionssuppressoutputpathcheck true line absent motivation use case changing behavior current project include external javascript files js extension environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version platform mac", "num": "22071", "d": "2/2018"}, {"title": "httpclient incorrect uri encoding params", "body": "submitting context httpclient current behavior adding param http get request colon encoded value expected behavior adding param http get request colon encoded value minimal reproduction problem instructions expected request actual request motivation use case changing behavior seems though encodeuri function used parameters order translate strings opposed appropriate encodeuricomponent function environment", "num": "22068", "d": "2/2018"}, {"title": "last function", "body": "submitting current behavior observablelast working expected behavior observablelast working minimal reproduction problem instructions thissubscription thiseditservice last function x idx obs return x subscribe data gt data amp amp datalength thisloaddata data thisready error gt thisnotificationservicenewmessage severity error summary error detail errormessage thisready gt thisready thissubscription thiseditservice last function x idx obs return x subscribe data gt data amp amp datalength thisloaddata data thisready error gt thisnotificationservicenewmessage severity error summary error detail errormessage thisready gt thisready produce error error error uncaught promise typeerror thiseditservicelast function motivation use case changing behavior environment", "num": "22067", "d": "2/2018"}, {"title": "ngonchanges nt get called input property changed", "body": "submitting current behavior input properties generally ngonchanges change get call one input changed five inputs case one input ngonchanges getting called trying change child input property using viewchild instance parent method ngonchanges nt get called changing processpage parent trigger ngonchanges child also update thisparentcomponentpagesize parent change appear dom ngonchanges wo nt get called expected behavior method ngonchanges called every time property changed able get changes nt possible angular throw error silent fail nt accepted behaviour minimal reproduction problem instructions component selector myapp template providers appservice export class appcomponent viewchild paginationcomponent processlistpagination paginationcomponent processpage public currentval string component selector mycomponent template current child value testval export class mycomponent implements oninit onchanges docheck input id number input size number input page number public ngonchanges void consolelog thispage motivation use case changing behavior environment", "num": "22066", "d": "2/2018"}, {"title": "error instance outputpropname subscribe function resulting polyfill", "body": "submitting current behavior running strange issue researched error generally seems related use output eventemitter case get following error component karma test particular polyfill place polyfill follows issue appear affect application one specific test spec anyone help understand might cause error inside createdirectiveinstance comment code error goes away simply polyfill causes problems another adds arrayprototypeupsert nt cause problems expected behavior adding polyfill result failure create directive minimal reproduction problem instructions nt able figure create plunker karma tests motivation use case changing behavior environment", "num": "22065", "d": "2/2018"}, {"title": "feature provider interceptor equivalent providedecorator angularjs", "body": "submitting supersedes concrete summary design current behavior currently possible wrap existing provider injector causing class inheritance problems angular constructor consider public api due di system extending class would problematic may require lots boilerplate declare deps customize existing service problems declared class may provided one latter may exposed user strategy pattern design problems extends behavior poordesigned services expected behavior api design term fit due meanings currently choose similar usage still open bikeshed optional property like applies kinds providers typescript injectable class customerrorhandler implements errorhandler constructor private handler errorhandler handleerror error custom error collecting reporting thishandlerhandleerror error ngmodule providers provide errorhandler useclass customerrorhandler intercept true class appmodule semantics ref angularjs decorator api setting would allowed inject previous instance token providers helps reusing existing logic need rewrite without modifying consumer part token combining makes sense would allowed technically valid meaningless could cause either warning error edge case provider interceptor transform instances array namely getting existing array returning new array would allowed return array inconsistent value concrete provider interceptor injector would allowed scoping interceptor would belong specific thus supporting inheritance example typescript component providers provide errorhandler usefactory deps errorhandler intercept true class mycomponent constructor handler errorhandler handler gt originalerrorhandler ngmodule providers provide errorhandler usefactory deps errorhandler intercept true class mymodule constructor handler errorhandler handler gt originalerrorhandler providing normal instance wo nt affected interceptor parent example typescript component providers provide errorhandler useclass customerrorhandler class mycomponent constructor handler errorhandler handler gt customerrorhandler ngmodule providers provide errorhandler usefactory deps errorhandler intercept true class mymodule constructor handler errorhandler handler gt originalerrorhandler intercepting providers level example without typescript component providers provide errorhandlers usevalue multi true provide errorhandlers usevalue multi true provide errorhandlers usefactory deps errorhandler multi true intercept true class mycomponent constructor handler errorhandler handler gt ngmodule providers provide errorhandlers usevalue multi true provide errorhandlers usevalue multi true provide errorhandlers usefactory deps errorhandler multi true intercept true class mymodule constructor handler errorhandler handler gt typescript component providers provide errorhandlers usevalue multi true provide errorhandlers usevalue multi true provide errorhandlers usefactory deps errorhandler multi true intercept true class mycomponent constructor handler errorhandler handler gt ngmodule providers provide errorhandlers usevalue multi true provide errorhandlers usevalue multi true provide errorhandlers usefactory deps errorhandler multi true intercept true class mymodule constructor handler errorhandler handler gt ordering interceptors considered provider applied last local example examples reduce class inheritance typescript injectable class customerrorhandler implements errorhandler constructor private handler errorhandler handleerror error custom error collecting reporting thishandlerhandleerror error ngmodule providers provide errorhandler useclass customerrorhandler intercept true class appmodule protect private apis applying new strategy actually best way solve problem exposing multi provider would better could work without changing existing apis typescript injectable class customiterablediffers implements iterablediffers constructor private differs iterablediffers get factories iterabledifferfactory return thisdiffersfactories find iterable iterabledifferfactory iterable somespecialtoken return superperformantdifferfactory return thisdiffersfind iterable ngmodule providers provide iterablediffers useclass customiterablediffers intercept true class appmodule custom control existing strategy typescript const disabledinterceptors new weakmap gt gt ngmodule providers provide httpinterceptors usefactory enablefiltering multi true intercept true interceptorcontrolservice class appmodule function enablefiltering interceptors httpinterceptor return interceptorsmap interceptor gt intercept req httprequest next httphandler observable gt disabledinterceptorshas req amp amp disabledinterceptorsget req interceptorconstructor return nexthandle req return nexthandle interceptorintercept req next injectable class interceptorcontrolservice disable request httprequest interceptortype type disabledinterceptorshas request disabledinterceptorsset request new set disabledinterceptorsget request add interceptortype component class mycomponent constructor httpclient interceptorcontrol interceptorcontrolservice const request interceptorcontroldisable request somecustominterceptor requestsubscribe implementation hold internal slot interceptors naive logical demo could multi true yet class injector private interceptedinjectables new maptokenany instanceany private providerinterceptors new maptokenany interceptorsprovider gt hasinterceptors token return thisproviderinterceptorshas token thishaslocalprovider token amp amp thisparenthasinterceptors token getinterceptors token return thishaslocalprovider token thisparentgetinterceptors token thisproviderinterceptorsget token get token thisinterceptedinjectableshas token return thisinterceptedinjectablesget token thishasinterceptors token const raw getrawprovidersomehow token const interceptors thisgetinterceptors token const res interceptorsreduce previousinstance currentprovider gt instantiatesomehow currentprovider previousinstance raw thisinterceptedinjectablesset token res return res original logic performance consideration static ones get rid mapping slot directly added instance via injector provider interceptor concrete provider use value special symbol ship treeshakable consideration static ones extend decorator accept additional optional parameter typescript component class mycomponent constructor inject httpclient logrequest httpclient makeparamdecorator inject token interceptors gt token interceptors introduce new decorator typescript component class mycomponent constructor intercept logrequest httpclient makeparamdecorator intercept interceptors gt interceptors child injectors affected way minimal reproduction problem instructions could go repro current behavior motivation use case changing behavior provide demo raise concrete feature request make di mechanism powerful useful environment", "num": "22064", "d": "2/2018"}, {"title": "abstract superclasses injector gives argument type typeof amyservice assignable parameter type type", "body": "submitting current behavior using reports deprecated use typeinjectiontoken possible use alternate version abstract type ts import injectable angularcore injectable export abstract class amyservice abstract hello string injectable export class myservice extends amyservice public hello return world spec give compile error typescript change compiles lose ability abstract superclass interface used required wanted use provider token opposed interface expected behavior able use injector without getting deprecation compile errors abstract classes minimal reproduction problem instructions add service add line file generated motivation use case changing behavior avoid getting hit deprecation issues tests environment", "num": "22063", "d": "2/2018"}, {"title": "currencypipe numberexpression input undefinednull", "body": "submitting current behavior trying use currencypipe without providing input like got either error empty response expected behavior display currency symbol like", "num": "22062", "d": "2/2018"}, {"title": "require environment const variable loading angularfiremoduleinitializeapp environment production build working deveopment build", "body": "submitting current behavior using appmodulets file code var environment require datajson ngmodule imports angularfiremoduleinitializeapp environment expected behavior code working perfect ng build nt work ng build targetproduction minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22059", "d": "2/2018"}, {"title": "set csp header value bootstrap", "body": "trying csp response header angular application bootstrap dynamic value hence set webconfig add meta tag way achieved angular application", "num": "22057", "d": "2/2018"}, {"title": "remove need webanimations cases except scrubbing animations", "body": "today suggest people install webanimations polyfill using angularanimations polyfill buggy quite large shame put burden angular app developers matsko mhevery came way remove need polyfill cases issue tracks effort", "num": "22054", "d": "2/2018"}, {"title": "bot consider type refactor issues triaged move backlog", "body": "look second one triaged still showing milestone list type refactor cc igorminar ocombe", "num": "22053", "d": "2/2018"}, {"title": "percolate input bubble output deep grandchild parent skip intermediary children", "body": "submitting feature request current behavior scenarios parent components many deeply nested children grandchildren say n levels deep parent level grandchild gc level k needs data parent access intermediary child must data merely passed conversely order gc k emit requests intermediary child must intercept merely pass parentchild relationship depicted desired behavior components automatically pass input output downup chain default add settings activate passthrough perhaps omitting decorator like component attribute decorator motivation use case changing behavior hectic laborious passing environment browser x chrome desktop version xx chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues na others na", "num": "22052", "d": "2/2018"}, {"title": "issue angular tutorial chapter services", "body": "submitting current behavior angular tutorial chapter title provide heroservice sample piece code mentions text mentioned see run whole app work unfortunately true stage still nt declared provider expected behavior better fix line way minimal reproduction problem instructions motivation use case changing behavior environment", "num": "22051", "d": "2/2018"}, {"title": "platform server rendermodulefactory module ref", "body": "submitting current behavior currently returns output html expected behavior ideally return also eg minimal reproduction problem instructions motivation use case changing behavior allow additional hooks rendering core scenarios able remove hacks within static props well fix work aspnetcore using environment", "num": "22049", "d": "2/2018"}, {"title": "ivy object literal support need support minification", "body": "work minification think quoted props amp unquoted props added canonical spec added comments nt see pr mergedclosed", "num": "22047", "d": "2/2018"}, {"title": "ngrollupbundle produce compressed outputs well", "body": "would useful tracking bundle size", "num": "22044", "d": "2/2018"}, {"title": "ngstarinserted breaks font awesome", "body": "submitting current behavior font awesome svg js mode recommended way use relies specific class come last change introduced makes appears within container component template output font awesome fail initialize svg object minimal reproduction problem instructions previously output would display icon environment", "num": "22039", "d": "2/2018"}, {"title": "onsameurlnavigation reload feature reload routed components", "body": "reloading components navigation url triggered url calling using onsameurlnavigation reload feature subscribe router events corresponding component component reloading case component reloaded", "num": "22038", "d": "2/2018"}, {"title": "css changes nt refresh browser tab", "body": "submitting current behavior currently css code application modified full reloadrefresh browser tab takes place expected behavior instead code must modifed without reloadingrefreshing browser tab something handles well", "num": "22037", "d": "2/2018"}, {"title": "routereusestrategy delete handles anew route error", "body": "error error uncaught promise error insert destroyed view viewcontainer error insert destroyed view viewcontainer", "num": "22036", "d": "2/2018"}, {"title": "fixed", "body": "fixed", "num": "22035", "d": "2/2018"}, {"title": "support expiration campaigns homepage banner component", "body": "follow really campaign expiration support banner component like notification bar nt keep old info site events pass", "num": "22031", "d": "2/2018"}, {"title": "remove ngatl banner homepage", "body": "let remove banner homepage conf unless breaks design replace anything new", "num": "22029", "d": "2/2018"}, {"title": "optimize whitespace template default preservewhitespace false default", "body": "implemented compiler flag fix initially made optin possibility subtle breaking changes related applying styles dom whitespace suddenly stripped nodes verified negative impact change google minimal go ahead make option set false default", "num": "22027", "d": "2/2018"}, {"title": "multiple subscrptions single request call create multiple requests", "body": "submitting current behavior multiple subscriptions observable returned request request function called request executed subscriptions expected behavior call function results exactly one request minimal reproduction problem instructions clean angular app use component add httpmodule appmodule import component angularcore import http angular import observable rxjsobservable component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent title app count constructor private http const thisrequest osubscribe gt consolelog foo gt consolelog foo osubscribe gt consolelog bar gt consolelog bar request observable consolelog request thiscount return inspect page reload see network activity although request function called request actually executed twice motivation use case changing behavior environment", "num": "22026", "d": "2/2018"}, {"title": "input type number incompatible ngmodel using number pipe", "body": "submitting current behavior input type set number seems convert value string trying run ngmodel statement cause issues using pipes number expecting input number string expected behavior process ngmodel statement trying convert input match whatever type assigned work around using input type minimal reproduction problem instructions motivation use case changing behavior form calculated value wanted look like fit form used readonly input material framework styling nt effect wanted number formatted decimal places found stopped working number greater put input environment", "num": "22025", "d": "2/2018"}, {"title": "export publicly", "body": "submitting current behavior implement custom renderer extend default renderer need specify dependency currently exported privately importing prepending greek theta symbol expected behavior want able import directly angularplatformbrowser without prepending greek theta symbol", "num": "22024", "d": "2/2018"}, {"title": "service worker offline mode reload nt work error", "body": "submitting current behavior refresh app specific url route example dashboard directly get even online offline expected behavior get specific page minimal reproduction problem instructions go chrome everything works fine refresh specific url environment notes googled problem appears something link service worker routing everytime speak file nt build way done properly mine thank advance", "num": "22023", "d": "2/2018"}, {"title": "message http failure response unknown url unknown error", "body": "", "num": "22022", "d": "2/2018"}, {"title": "rename angular angular stackshareio", "body": "could google somehow agree made redirects normal page angular simply mentioned instead official repo email team stackshareio", "num": "22021", "d": "2/2018"}, {"title": "docs aio error initial first loading code example dynamic component loader guide", "body": "submitting current behavior guide initial loading code example throws error console example visible browser expected behavior loading without error adbannercomponentts ngafterviewinit wrap two method calls settimeout gt replace template div css class another class adbanner example update work minimal reproduction problem instructions", "num": "22020", "d": "2/2018"}, {"title": "ng build prod nt throw error html invalid", "body": "submitting current behavior building prod mode went successful although html invalid expected behavior error message minimal reproduction problem instructions steps reproduce add html button page closing tag motivation use case changing behavior difficult find html many components many changes environment angular version browser chrome desktop version official build", "num": "22019", "d": "2/2018"}, {"title": "remove private urls sitemap", "body": "following private internal test urls published sitemap confusing crawlers test filenotfound overviewdump gives sitemap think please check sitemap one time case missed anything else", "num": "22017", "d": "2/2018"}, {"title": "need way override cla failure make pr green", "body": "currently pr contains commits multiple authors cla check fail causing whole pr green good cla check simplistic nt allow commits multiple authors single pr problem often augment prs pull commits one pr another one solution might new cla override label github robot would recognize somehow suppress status cla bot would even better feature supported signcla bot ask internally", "num": "22014", "d": "2/2018"}, {"title": "httpclient package export httpparamsoptions", "body": "submitting current behavior reason exported package level exported interface reexported package root error expected behavior expect import work minimal reproduction problem instructions try motivation use case changing behavior able write wrapper method like environment", "num": "22013", "d": "2/2018"}, {"title": "promise awaited flushmicrotasks test", "body": "submitting current behavior using agmcore angular component google maps test component uses mapsapiloader class asynchronously loads google maps library method returns promise resolves libraries loaded source code test need works library loaded promise resolves run test fakeasync zone use flushmicrotasks method promise termianted methods returns next code executed expected behavior promises terminated returns minimal reproduction problem instructions simple test shows problem promise another timer load maps api fakeasync gt testbedconfiguretestingmodule imports agmcoremoduleforroot apikey xxxxx const loader testbedget mapsapiloader last instruction test executed api loaded current output motivation use case changing behavior execute code promises resolved expected output environment browser chrome desktop version xx chrome android version xx chrome ios version xx x firefox version safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version npm platform windows libraries angular angular cli zone agmcore", "num": "22012", "d": "2/2018"}, {"title": "insert multiple dynamic components one viewcontainerref", "body": "submitting current behavior calling viewcontainerrefinsert viewref viewref multiple times add multiple dynamic components last dynamic component attached dom expected behavior multiple dynamic components attached dom minimal reproduction problem instructions typescript export class dynamiccomponent currentcomponent viewchild dynamiccomponentcontainer read viewcontainerref dynamiccomponentcontainer viewcontainerref input set componentdata data component inputs data return let inputproviders objectkeys datainputs map inputname gt return provide inputname usevalue datainputs inputname let resolvedinputs reflectiveinjectorresolve inputproviders let injector reflectiveinjectorfromresolvedproviders resolvedinputs thisdynamiccomponentcontainerparentinjector let factory thisresolverresolvecomponentfactory datacomponent let component factorycreate injector constructor private resolver componentfactoryresolver typescript createcomponent component thiscomponentdata component component inputs input createcomponents thiscreatecomponent onecomponent thiscreatecomponent twocomponent components add ngafterviewinit thiscreatecomponents workaround set immediate timeout solves issue dirty typescript createcomponent component settimeout gt thiscomponentdata component component inputs input nt understand yet workaround even working maybe something change detection please let know easily reproducible otherwise add stackblitz motivation use case changing behavior current behavior impossible attach multiple dynamic components dom workaround dirty environment cheers mo", "num": "22010", "d": "2/2018"}, {"title": "httpclient using json nt", "body": "submitting current behavior making call specify header response header specifies httpclient trying parse json throwing error syntaxerror unexpected token json position jsonparse xmlhttprequestonload webpackinternal zonedelegateinvoketask webpackinternal objectoninvoketask webpackinternal zonedelegateinvoketask webpackinternal zoneruntask webpackinternal zonetaskinvoketask invoke webpackinternal invoketask webpackinternal xmlhttprequestglobalzoneawarecallback webpackinternal expected behavior json involved transaction minimal reproduction environment", "num": "22008", "d": "2/2018"}, {"title": "large difference numbers", "body": "submitting current behavior test get following numbers however use main bundle significantly larger expected behavior bundle sizes would identical least similar minimal reproduction problem instructions angular repository workspace", "num": "22006", "d": "2/2018"}, {"title": "pipe operators eventemitter leaks subscriptions", "body": "submitting current behavior overrides add support nt take param types account case probably types filters correctly cleanup unsubscribe expected behavior methods available function leak minimal reproduction problem instructions motivation use case changing behavior nt think standard supported use case definitely use cases people could potentially listening outputs within components etc either way standard methods available probably function correctly leak changing extend would another solution know mentioned", "num": "21999", "d": "2/2018"}, {"title": "compilercli wrong unmet peer dependency typescript", "body": "submitting current behavior updated angular also updated typescript getting warning related unmet peer dependency warning gt angularcompilercli unmet peer dependency typescript gt lt warning angularcompilercli gt tsickle unmet peer dependency typescript gt lt warning gt tslint unmet peer dependency typescript gt gt gt gt gt gt gt gt gt warning tslint gt tsutils unmet peer dependency typescript gt gt gt gt gt gt gt gt gt gt expected behavior since installed typescript receive warnings minimal reproduction problem instructions install angular typescript environment", "num": "21997", "d": "2/2018"}, {"title": "add location sync code hashbased navigation angularjs", "body": "anguarjs applications using hashbased url navigation encounter problem added value fact angularjs applications using hashbased url navigation encounter problem time something exists turns browser publishes event hash url changes angular router getting notified url changes caused angularjs router using hashbased url navigation apps nt need upgrade code change applied gives option pass state history api calls angular location service something angularjs never implemented angular router used new apis store history api allows us sync two routers much better however side effect angularjs sees history api used assumes want update location history api rather locationhash locationurl trigger event angular router hooks use history api directly nt published therefore needed add sync code keep two routers sync similar code anyone using urls would already done code looks slightly different manage hashbased urls need add solution package projects take advantage", "num": "21995", "d": "2/2018"}, {"title": "router redirect route resolution looses query params", "body": "submitting current behavior navigate projecta inside resolver end adeep instead adeep projecta expected behavior end adeep projecta minimal reproduction problem instructions", "num": "21994", "d": "2/2018"}, {"title": "service worker configuration generate valid manifest file", "body": "submitting current behavior current interface service worker manifest setting example results generated manifest expected behavior acknowledge current standard web app manifest draft believe browsers expectations application properties eg name shortname etc root level manifest file example minimal reproduction problem instructions following getting started adding reproduce issue motivation use case changing behavior environment", "num": "21993", "d": "2/2018"}, {"title": "question tutorial example", "body": "new angular testing examples structural directives provided angulario ngswitch example clicking none wo nt give indecisive could please let know thanks", "num": "21991", "d": "2/2018"}, {"title": "feat core keyvaluediffer support ngforof", "body": "submitting current behavior supports expected behavior support default making easily iterable using motivation use case changing behavior iteration currently possible caching every time change detected manually within using injected iterating caching required returns different value call making angular default change detection go crazy nt problem impossible work around certainly inconvenient builtin way tackle would much appreciated believe change would introduce much complexity core directive trade simply worth please feel free close issue", "num": "21990", "d": "2/2018"}, {"title": "tslint destroys karma setup", "body": "submitting current behavior run tslint project rewrites srctestts reorders alphabetically imports subsequently karma jasmine fails error message like expected behavior need add lintignore rule srctestts find way author testts compatible lint alphabetization imports minimal reproduction problem instructions ng new myapp cd myapp npm run lint npm run test packagejson following commands lint test motivation use case changing behavior unexpected test failure running tslint need able run tslint without affecting test setup environment", "num": "21989", "d": "2/2018"}, {"title": "element duping via enter leave animation ngif", "body": "submitting current behavior animating element via enter leave ngif angular dupe multiple times expected behavior maybe drop leave animation enter triggered minimal reproduction problem instructions moving mouse quickly gray rectangle causes text label appear multiple times environment", "num": "21987", "d": "2/2018"}, {"title": "componentclassname", "body": "currently dynamic component must dependent container component componentfactoryresolverresolvecomponentfactory method must component parameter possible use componentclassname string instead", "num": "21986", "d": "2/2018"}, {"title": "docs aiogenerated code examples angular universal serverside rendering guide outdated broken code examples", "body": "submitting current behavior guide tour heroes project uses new httpclientmodule guide references deprecated http module used link http case unnecessary module property must commonjs require server application typo mistake guide outdated written incorrectly exceptions happens running scripts npm downloaded final code example universal nt work script error mising src folder downloaded code example aio folder gt problem generating zips need fix code called regex matches returned breaks code examples replacing code examples zipped code examples one overrides extracted folder final code one universal guide need reinstall nguniversal dependencies maybe last version local dependencies local angularcli nt properly installs throws error working version packagejson name angularioexample version license mit scripts ng ng start ng serve build ng build test ng test lint ng lint ng build ssr npm run build clientandserverbundles amp amp npm run webpack server serve ssr node distserverjs build clientandserverbundles ng build prod amp amp ng build prod app outputhashingfalse webpack server webpack config webpackserverconfigjs progress colors private true dependencies angularanimations angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularplatformserver angularrouter angularupgrade nguniversalexpressengine nguniversalmodulemapngfactoryloader angularinmemorywebapi corejs rxjs tsloader zonejs devdependencies angularcli typesjasmine typesnode jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter karmaphantomjslauncher lodash phantomjsprebuilt protractor tsnode tslint typescript expected behavior guide need update reference http module httpclientmodule remove unnecessary link update guide actual sample code guide differ", "num": "21983", "d": "2/2018"}, {"title": "aot error use loadchildren routermodule", "body": "submitting current behavior use loadchildren lazyload try change still lambda failed error info motivation use case changing behavior want use modulewithproviders take parameters like times want use factory function create module import feature module router environment", "num": "21981", "d": "2/2018"}, {"title": "querylist initialized properties regression", "body": "submitting current behavior believe found regression issue possibly caused commit stumbled upon isolated test ie testing class logic rendering component component property decorated logic depends length testing purposes manually instantiate course would automatically populated outside angular purview issue comes previously angular case used initial value getter array length upon upgrading angular actually populated use required impacted isolated tests logic however use makes change imperceptible component rendered expected behavior minimal reproduction problem instructions examples show behavior changed using also showcased via nt changed practice however angular length must getting initialized via calling behind scenes angular angular motivation use case changing behavior regression environment", "num": "21980", "d": "2/2018"}, {"title": "regexp templates pipes", "body": "submitting current behavior putting regexp inside template compiler fails expected behavior compile template correctly use regexp normally minimal reproduction problem instructions motivation use case changing behavior would much convenient use regexps directly otherwise pass string b create regexp using string end case pipe c use double backslashes escape things like breaks actual regexp rules meaning need modify regexp creating testing etc remember remove leading trailing slashes string input regexp nt like environment", "num": "21978", "d": "2/2018"}, {"title": "titlecasepipe underdocumented", "body": "submitting current behavior listed builtin pipes doc section provided code examples builtin pipes expected behavior listed pipes page within builtin pipes section code examples provided titlecasepipe page environment", "num": "21976", "d": "2/2018"}, {"title": "support emitting factories one file instead separate files", "body": "submitting current behavior compiler generates factory file module contains module component problematic rule bazel bazel requires output files determinable name input file eg since file might might generated files rule assumes every file produce files generate empty files module nt end containing component module application gets large multiplier number emitted files could cause problems build systems reasonable limits number files handle files per action causes limit hit unnecessarily soon bazel would better generate fixed module contains factories rule instead would mean every would imply one three extra files instead times number files desired behavior option allows emit single module containing factories instead companion modules", "num": "21975", "d": "2/2018"}, {"title": "aio modify codeexamples include link stackblitzzip default", "body": "", "num": "21974", "d": "2/2018"}, {"title": "add support typescript", "body": "submitting versions error mesage updated npm packages yesterday updated typescript angular cli produces warning angularcompilercli requires typescript lt found instead using version result undefined behaviour difficult debug problems please run following command install compatible version typescript disable warning run ng set warningstypescriptmismatchfalse repro steps found running latest typescript version desired behavior update angular support typescript resolve issue", "num": "21972", "d": "2/2018"}, {"title": "compilation fails try include external javascript files angular", "body": "submitting current behavior try include external javascript file inside angular project created using angular cli allowjs set true compilation fails expected behavior try include external javascript file inside angular project created using angular cli allowjs set true compile successfully minimal reproduction problem instructions created angular project angular cli trying include widgetjs file reference file added angularclijson inside scripts array reproduce git clone cd ujjainiincludejavascript npm install ng serve error appears error error write file usersumukherjeeworkspaceangularwrapperujjainiincludejavascriptsrcappwidgetjs would overwrite input file adding tsconfigjson file help organize projects contain typescript javascriptfiles learn motivation use case changing behavior trying create angular wrappers existing javascript components written ion vanilla javascript need multiple components issue holding us environment", "num": "21971", "d": "2/2018"}, {"title": "aio use axecore catch accessibility issues examples", "body": "", "num": "21969", "d": "2/2018"}, {"title": "docs misleading docs reactiveforms revertcancelchanges", "body": "submitting current behavior code docs say clicking revert button triggers call component revert method users save revert changes actually docs clicking button type reset resets formdata initial values therefore revert function useless leads bug took resolve performing handling form revert method expected behavior tell people use button type reset want perform behaviour click likely get overriden default behaviours minimal reproduction problem instructions try demo revert motivation use case changing behavior erroneous guide browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "21968", "d": "2/2018"}, {"title": "project path hardcoded generated webpack", "body": "submitting current behavior run current full folder path hardcoded webpack build expected behavior relative path minimal reproduction problem instructions run check line circulardependencyplugin motivation use case changing behavior move application another folder result different folder paths", "num": "21967", "d": "2/2018"}, {"title": "primary route triggers change auxiliary route triggered", "body": "submitting current behavior two router outlets given app one primary routeroutlet one auxiliary routeroutlet named outlet standing root domain triggers auxiliary route routerlink browser insert auxiliary route url causes change detection router use reuse strategy wildcard routes needed hooking cms primary route rerendered therefore triggering http calls animations may associated however stand subpage primary outlet issue since inserted auxiliary route url therefore triggering change event example expected behavior would expect primary router changed root domain behaviour subpage minimal reproduction problem instructions example motivation use case changing behavior using auxiliary routes open overlay display data make deeplinkable within application content coming cms therefore use wildcard routes noreuse strategy route components environment", "num": "21966", "d": "2/2018"}, {"title": "abstractcontrolsetvalidators wrong typescript definition", "body": "submitting current behavior look typescript definition file setvalidators method definition setvalidators newvalidator validatorfn validatorfn null void means able write mycontrolsetvalidators validatorsrequired case works array though mycontrolsetvalidators validatorsrequired expected behavior either expect setvalidators accept single value remove option definition file environment", "num": "21965", "d": "2/2018"}, {"title": "ngmodulefactoryloader load method modifies errors type", "body": "submitting current behavior simple global error handler want special action instance thrown error come custom module loader export class moduleloader implements ngmodulefactoryloader private systemjsngmoduleloader systemjsngmoduleloader constructor private readonly compiler compiler optional config systemjsngmoduleloaderconfig thissystemjsngmoduleloader new systemjsngmoduleloader compiler config public load path string pathincludes lazyloaded throw new customerror custom error else return thissystemjsngmoduleloaderload path simplified demo throwing given path console displays caught normal error expected behavior would expect console see caught customerror minimal reproduction problem instructions reason nt able reproduce stackblitz seems use sort ssr anyway could nt see network request component displayed simple repro github take look global error handler take look custom module loader problem probably located custom module loader throw error somewhere else well caught simple motivation use case changing behavior avoid search error message given message use proper know type error environment", "num": "21964", "d": "2/2018"}, {"title": "currencypipe adds character euro sign instead normal space", "body": "submitting current behavior logging shows expected behavior instead character code would expect code normal space like environment browser x chrome desktop version latests x ie version tooling issues node version platform windows", "num": "21963", "d": "2/2018"}, {"title": "clearer api overload signatures", "body": "api would much easier comprehend laid like typescript export type httpresponsetype arraybufferblobjsontext export type httpobserve body events response export interface httpoptions body headers httpheaders header string string string observe params httpparams param string string string reportprogress boolean responsetype r withcredentials boolean class httpclient request req httprequest observable gt request method string url string options httpoptions lt body arraybuffer gt observable request method string url string options httpoptions lt body blob gt observable request method string url string options httpoptions lt body text gt observable request method string url string options httpoptions lt events arraybuffer gt observable gt request method string url string options httpoptions lt events blob gt observable gt request method string url string options httpoptions lt events text gt observable gt request method string url string options httpoptions lt events json gt observable gt request method string url string options httpoptions lt response arraybuffer gt observable gt request method string url string options httpoptions lt response blob gt observable gt request method string url string options httpoptions lt response text gt observable gt request method string url string options httpoptions lt response json gt observable gt request method string url string options httpoptions lt body json gt observable request method string url string options httpoptions observable", "num": "21962", "d": "2/2018"}, {"title": "feature request router resolver cancellable", "body": "submitting search around issues regarding find one closed believe rather feature request completely legit expect ongoing route observable sitting inside resolve function discarded user changes mind preceded another route youtube example current behavior scenario user clicks slow route link fetches data necessary component resolving user hits back clicks another link would want cancel current resolve begin new routing demotrate try solve problem inject router event someresolve class hoping like pseudo code ts injectable export class someresolve implements resolve constructor private someservice someservice private router router resolve return thissomeservice takeuntil thisrouter eventspipe filter navigationstart seems router events blocked resolver complete quoted angulario router navigation section observable provided router must complete observable complete navigation continue solution events shooted resolver function complete user still needs wait ajaxobservable complete proceeding expected behavior router events blocked idea lead cancellable router resolver", "num": "21961", "d": "2/2018"}, {"title": "angular prod build loading defaullt route automatically open server", "body": "developed application using angular lazy loading routing created development build every thing working fine current behavior generated production build using ng build placed dist folder local host run loading default route specified routing type manually particular route loading route times pointing expected behavior generated production build placed local host run load default routed routing environment windows angular version browser chrome desktop version official build tooling issues node version platform windows dependencies angularanimations angularcdk angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter typesmoment angulariodatepicker angulariooverlay bootstrap corejs hammerjs moment rxjs zonejs devdependencies angularcli angularcompilercli angularlanguageservice typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter protractor tsnode tslint typescript", "num": "21960", "d": "2/2018"}, {"title": "reactiveforms formvalue behaving consitent", "body": "x bug hi think found bug design flaw opinion disable form expect form value available available dont mind form value availabe long consistent framework moment form values available disabled reactive form simple formcontrols disabled reactive forms formarray turn empty form values believe incorrect behaving inconsistent two examples simple reactive form based simple class class export class profile companyaddress string companycity string companycountry string companyname string companypostcode string submit form formgroup form array reactive form class export class patterns patterns submit form formgroup void let value formgetrawvalue conclusion formvalue behave reactive forms always return empty form values always behave like get raw value", "num": "21959", "d": "2/2018"}, {"title": "typescript got one issue nt tell logic error beacuse checked", "body": "import moment momenttimezone export class dashboardcomponent chart constructor thischartpush name clock series thischartpush name clock series thischartpush name hang series thischartpush name missed check series note nt assign manually thischart check beacause wo nt get problem let lt let id let jid let databasedata id let methis let lt databasedata length let filterdatabasedata let j lt mechart series length j mechart series j monthfilteridmonth mechart series j value filtercount chart generate like thischart name clock series month year name value month year name value month year name value month year name value month year name value name clock series month year name value month year name value month year name value month year name value month year name value going comapare update value array thischart loop got thischart name clock series month year name value month year name value month year name value month year name value month year name value name clock series month year name value month year name value month year name value month year name value month year name value expected result thischart name clock series month year name value month year name value month year name value month year name value month year name value name clock series month year name value month year name value month year name value month year name value month year name value note nt assign manually thischart check beacause wo nt get problem", "num": "21958", "d": "2/2018"}, {"title": "docs language service install command vs code wrong", "body": "submitting current behavior says install extension vs code press ctrl p enter list wanted extension expected behavior say motivation use case changing behavior less confusion search effort users tooling issues node version platform windows others comp docs", "num": "21956", "d": "2/2018"}, {"title": "architecture guide references appherodetail tag herodetail", "body": "submitting current behavior text component section architecture page refers tag whereas example code snippet expected behavior use text minimal reproduction problem instructions applicable motivation use case changing behavior confusing confusing fixed nonetheless opinion environment", "num": "21955", "d": "2/2018"}, {"title": "angularlanguageservice support strictnullchecks ngif", "body": "submitting current behavior typescript compiler option enabled angularlanguageservice throws errors example typescript interface foo bar string component selector appfoo templateurl foocomponenthtml export class foocomponent foo foo html html foobar expected behavior expect assert object null safely use without errors environment", "num": "21954", "d": "2/2018"}, {"title": "http return correct status code text errors occur", "body": "submitting regression behavior used work stopped working new release x bug report feature request documentation issue request support request gt please submit support request instead see current behavior request api response statustext returned ok expected behavior request api response statustext bad request something like motivation use case changing behavior responses type returned incorrectly therefore statustext actually reflecting actual response environment angular version browser x chrome desktop version chrome android version xx chrome ios version xx firefox version xx safari desktop version xx safari ios version xx ie version xx edge version xx", "num": "21953", "d": "2/2018"}, {"title": "ngmodel binding breaks model value", "body": "submitting regression behavior used work stopped working new release x bug report feature request documentation issue request support request gt please submit support request instead see current behavior component containing element bound child elements passed via component used another component elements generated array initially empty populated short delay list populated one generated elements value dropdown list selects first item seem make difference whether array empty long contain value matching expected behavior dropdown selection switches item value matches minimal reproduction problem instructions plunk starts model initialised array generated empty constructor sets timers make following changes sequence set array value contains item set model value set array value contain item set array value contains item motivation use case changing behavior form list choices dropdown menu fetched server environment angular version browser x chrome desktop version chrome android version xx chrome ios version xx x firefox version safari desktop version xx safari ios version xx ie version xx edge version xx tooling issues node version na platform windows", "num": "21952", "d": "2/2018"}, {"title": "fields dot name retrieved using formget", "body": "submitting current behavior creating form field dot id retrieved expected behavior allow field id characters string minimal reproduction problem instructions click button look console logs field without dot works field dot nt work motivation use case changing behavior stop errors occuring environment", "num": "21950", "d": "2/2018"}, {"title": "unsubscribe issue", "body": "hi code problems unsubscribing says read property unsubscribe undefined using angular nt correct way unsubscribe deletecard event let deletecard thisstoresubscribe gt let deleteditem item deleteditem deleteditemisloading amp amp deleteditemissuccess thisstoredispatch type fetchitemdata payload id thisid deletecardunsubscribe", "num": "21949", "d": "2/2018"}, {"title": "incorrect output transpiling target prod", "body": "submitting current behavior bundle production environment outputting following invalid code using httpclientmodule especifically error line lines declared constant producing following error chrome similar firefox expected behavior valid code outputted targeting production minimal reproduction problem instructions given downloadable example http chapter tour heroes tutorial disable app try make actual x change target run app like motivation use case changing behavior output compilation broken environment worth noting issue arises three factors combined use target buildingserving probably issue fixed angularcli uglifywebpackplugin level time dig deeper", "num": "21948", "d": "2/2018"}, {"body": "also typetypealias", "d": "2/2018"}, {"body": "ok looking george example live oneliner signature especially since parameter table parameters heading let try make sure keep one line", "d": "2/2018"}, {"body": "implement", "d": "2/2018"}, {"body": "ps works", "d": "2/2018"}, {"body": "making docgen infrastructure changes master deployed real bug thanks catch dariolongo", "d": "2/2018"}, {"body": "well nt make sense", "d": "2/2018"}, {"body": "selected trying remove child unless descendant child", "d": "2/2018"}, {"body": "ahah finding tag finds tag need change selector specific", "d": "2/2018"}, {"body": "fix pipeline", "d": "2/2018"}, {"body": "hello security mechanism web browser angular encourage read article spec", "d": "2/2018"}, {"body": "hardikajmeri avoid automatic cors options request related angular requests called simple requests simple requests requests meet following criteria http method matches head get post http headers matches accept acceptlanguage contentlanguage lasteventid contenttype applicationxwwwformurlencoded multipartformdata textplain", "d": "2/2018"}, {"body": "try cleaning browser cache", "d": "2/2018"}, {"body": "thanks works", "d": "2/2018"}, {"body": "thx ericmartinezr closing works worth investigating since soon switching new serviceworker implementation see", "d": "2/2018"}, {"body": "think maybe issue belongs angularangularcli think filipesilva", "d": "2/2018"}, {"body": "hi waelkdouh mean template error looks like issue", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "systemaker hundreds different scenarios data structure could returned validators could dependent concrete requirements real apps angular validator api defines returning success object like error could trivial value structural object properties like totally would structure also supposed wrap angular standard validators custom validators keep returned values consistent understandable cross app", "d": "2/2018"}, {"body": "artuska issue could post reproduce repo", "d": "2/2018"}, {"body": "jialipassion ugh unfortunately possible make repro repo", "d": "2/2018"}, {"body": "duplicated issue issue tracker", "d": "2/2018"}, {"body": "ca nt reproduce app", "d": "2/2018"}, {"body": "jialipassion think zonejs dupe bug actionable since pretty sure bug closing please reopen wrong", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "daviatorstorm simple reproduction demo problem supposed", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "admosity well think similar opposite way nt even need idl use angular template syntax access methodproperty webassembly compiled c hook c compiler place typescript compiler toolchain could replace language aside c angular way make custom binding template syntax think c c dynamic object could imitate javascript object easily", "d": "2/2018"}, {"body": "ca nt anything issue nt even know tutorial two versions", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "u sample downloading file angular using web api sent iphone feb pm eric martinez notifications githubcom wrote hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag angular wondering nt resolve support issues via issue tracker please check explanation receiving authored thread reply email directly view github mute thread", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag angular wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "need rebind property attribute manually plunker ability intercept design otherwise directives like wo nt able work guess one would expect final dom", "d": "2/2018"}, {"body": "mcalmus please reopen nt resolve issue", "d": "2/2018"}, {"body": "could provide detail reproduce nt even say instructions following", "d": "2/2018"}, {"body": "add routeroutlet basically whole routes section tutorial needs rework recommendation start complete code previous step follow tutorial note places breaks", "d": "2/2018"}, {"body": "hey jonathansteinmann thanks bringing worked everything worked ok add routeroutlet section end pushed version tour heroes routing test built went instructions reference started completed version services step could somewhere instructions might specific enough like compare built let know spot difference make sure docs team looped edit steps necessary", "d": "2/2018"}, {"body": "design explanation behavior", "d": "2/2018"}, {"body": "think makes deep copy", "d": "2/2018"}, {"body": "austyns nested object reference", "d": "2/2018"}, {"body": "seems like problem angular construct copy please reopen case", "d": "2/2018"}, {"body": "filipesilva think belongs angularcli issue tracker also handle angular decorators differently userdefined ones", "d": "2/2018"}, {"body": "moving", "d": "2/2018"}, {"body": "bug fix first add testcases back", "d": "2/2018"}, {"body": "ahnpgit defined guard route route ca nt expect guard run also route", "d": "2/2018"}, {"body": "oops sorry put wrong code close reopen get back codes work project", "d": "2/2018"}, {"body": "repo angular platform since problem facing specific project angular try opening issue repo btw questions related using angular post question stackoverflow using tag ask angular channel gitter good luck project", "d": "2/2018"}, {"body": "discussed possibility vikerman working", "d": "2/2018"}, {"body": "really great hear way trace progress feature", "d": "2/2018"}, {"body": "please fill issue template", "d": "2/2018"}, {"body": "problem old dependencies need remove packagelockjson", "d": "2/2018"}, {"body": "splincode fix problem reverting webpack", "d": "2/2018"}, {"body": "got issue removed nodemodules packagelockjson made sure latest version angular related packages reverted older webpack version nice work since new version supposed reduce build time considerably", "d": "2/2018"}, {"body": "could file issue please", "d": "2/2018"}, {"body": "dublicate", "d": "2/2018"}, {"body": "misread one factory another provider", "d": "2/2018"}, {"body": "may know exactly passing setting variable make sure according written code must id match available id values cities eg demo angular v versionfull thiscities name xyz name abc name etc resolves problem kindly close question", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "issue tracker suitable support requests please repost issue stackoverflow using tag check explanation", "d": "2/2018"}, {"body": "yerkon mentioned issue tracker support request please go stackoverflow gitter ask question help issue side note make sure amp already declared decorator requesting close question", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "fixed explanation answer stackoverflow question tl dr subscribing observable directive never unsubscribed hook event triggered directive trying insert component resulted error received", "d": "2/2018"}, {"body": "add quick note reason even required ticket got stack trace reason got message passed function assume error somehow passed stream observable silenced stack trace left ui toast message saying insert destroyed view viewcontainer made increasingly difficult debug stack trace could see last function app called problem would solved quickly", "d": "2/2018"}, {"body": "nt say command ran produces error", "d": "2/2018"}, {"body": "prepare simple online demo reproduction using standard nt suppose anybody would download something run locally", "d": "2/2018"}, {"body": "hi mlcmlapis unfortunately reproduce exactly issue online tools like plunkr stackblitz stackblitz get error exactly one mentioned related property", "d": "2/2018"}, {"body": "hmm ok still even problem let try solve first see", "d": "2/2018"}, {"body": "ok link stackblitz app please note problem appears chrome console firefox see error must also apologize contrary said reproduce exactly problem plunker chrome sorry contradictions", "d": "2/2018"}, {"body": "possible solution template based form case use immediately case update property cd cycle disabling controls via binding run additional cd see way would using reactive based form recommended generally template based form would possibilities control flow using", "d": "2/2018"}, {"body": "yes understand thank much clarifications cd help mlcmlapis closing issue shall interpret fact issue occurs chrome", "d": "2/2018"}, {"body": "yep true problem appears chrome edge ie ff ff dev bit mystery related fact different browsers call event handlers different orders internal implementation events processing especially chrome find discussions problem even related angular try google term like", "d": "2/2018"}, {"body": "great explanations thank", "d": "2/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "2/2018"}, {"body": "ericmartinezr thx advise meantime figured issue removing template driven syntax seems allowed run template driven syntaxes reactive form syntaxes header form", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "ericmartinezr ok thanks", "d": "2/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "2/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "2/2018"}, {"body": "see pr talks nt would good idea ask added imo", "d": "2/2018"}, {"body": "thanks reviewed pr nt see anything asked see", "d": "2/2018"}, {"body": "topic evocated different places documentation find example router documentation subscribing observable component almost always arrange unsubscribe component destroyed exceptional observables necessary activatedroute observables among exceptions activatedroute observables insulated router router destroys routed component longer needed injected activatedroute dies feel free unsubscribe anyway harmless never bad practice explain directly related technical element router http rather generaly", "d": "2/2018"}, {"body": "good question yes needs documented assigned addressed followup", "d": "2/2018"}, {"body": "added jbogarthyde another assignee radar add backlog rxjs doc well", "d": "2/2018"}, {"body": "collected information answer traction appears devs using approach document would happy update answer point documentation released also issue closed asking specific scenario assume pr cover", "d": "2/2018"}, {"body": "interesting stack overflow posts post unsubscribe http observable service post angular subscribe unsubscribe observables case http calls", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "want provide pr cc sjtrimble", "d": "2/2018"}, {"body": "seanprashad recommends would work intended side note actually inside subsection though seems bit odd content hierarchy perspective", "d": "2/2018"}, {"body": "would love actually help walk new oss contributor haorchen building angular submitting pr next days ok", "d": "2/2018"}, {"body": "looking issue applying seanprashad fix noticed header aligned properly mobileresponsive views see proceed solution", "d": "2/2018"}, {"body": "actually looking nt think fault element instead related anchor appears hover sneaky position affects text begins done", "d": "2/2018"}, {"body": "filipesilva points github made change proximate cause breakage earlier today permanently removed support following weak cryptographic standards githubcom apigithubcom applies https connections including web api git connections applies ssh connections githubcom applies ssh connections githubcom change originally announced last year final timeline removal posted three weeks ago run issues questions please nt hesitate let us know", "d": "2/2018"}, {"body": "tried local repro docker container run circleci docker run rm angularngcontainer cat gt workspace rulesnodejsversion name buildbazelrulesnodejs url rulesnodejsversion stripprefix rulesnodejs rulesnodejsversion load buildbazelrulesnodejs defsbzl checkbazelversion noderepositories checkbazelversion noderepositories packagejson gitrepository name buildbazelrulestypescript commit remote load buildbazelrulestypescript defsbzl tssetupworkspace tssetupworkspace bazel build buildbazelrulestypescriptinternaltscwrapped info analysed target buildbazelrulestypescriptinternaltscwrapped tscwrapped packages loaded info found target target buildbazelrulestypescriptinternaltscwrapped tscwrapped uptodate bazelbinexternalbuildbazelrulestypescriptinternaltscwrappedcompilerhostdts bazelbinexternalbuildbazelrulestypescriptinternaltscwrappeddiagnosticsdts bazelbinexternalbuildbazelrulestypescriptinternaltscwrappedfilecachedts bazelbinexternalbuildbazelrulestypescriptinternaltscwrappedindexdts bazelbinexternalbuildbazelrulestypescriptinternaltscwrappedmanifestdts bazelbinexternalbuildbazelrulestypescriptinternaltscwrappedstrictdepsdts bazelbinexternalbuildbazelrulestypescriptinternaltscwrappedtscwrappeddts bazelbinexternalbuildbazelrulestypescriptinternaltscwrappedtsconfigdts bazelbinexternalbuildbazelrulestypescriptinternaltscwrappedumdmoduledeclarationtransformdts bazelbinexternalbuildbazelrulestypescriptinternaltscwrappedworkerdts info elapsed time critical path info build completed successfully total actions leads suspect something related network circleci maybe proxy", "d": "2/2018"}, {"body": "couple workarounds try use instead better downloads less problems getting right paths everywhere use skylark java implementation git moved reason", "d": "2/2018"}, {"body": "kydenz considered using custom route reuse strategy turn modify detach attach behaviour might achieve desired result component animating enters leaves force behaviour get desired result see following example implement solution create custom reuse strategy monkey patch functions changing behaviour routes want modify default alternative look data shoulddetatch truthy value provide custom reuse strategy app module add data shoulddetatch true component route want modify related links", "d": "2/2018"}, {"body": "agree say best software engineer one least work true think typescript dts would answer question", "d": "2/2018"}, {"body": "using dts easiest way get started think effort producing idlbased angular api needed time mainstream compiler teams currently experimentingprototyping webassembly seven months time angular arrives shipping compiler toolchains application developers using need powerful web framework let say adding random additional feature angular increase angular application developer population making angular callable webassemblified javac python double population overnight", "d": "2/2018"}, {"body": "definitely realize somewhat frustrating moment want make straightforward possible currently working support release aiming cli make automatic details interim good video jason package guidelines see also ngpackagr working author roll cli good thing use add official support going close tracking cli issue get better soon", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "good catch jbedard fix", "d": "2/2018"}, {"body": "think issue belongs", "d": "2/2018"}, {"body": "tried reproduce plain htmljs nt see angular would change behavior please test attach working repro thanks edit actually going close one please reopen ever behavior caused angular", "d": "2/2018"}, {"body": "vicb thank found issue attach repo guess overlooked github page edit found problem", "d": "2/2018"}, {"body": "tests nt catch weird effect angular repo code nt run tsickle buildoptimizer tests decorators retain runtime effects decorator designed thing compiler patch decorated class thus broken call never executed replaced runtime decorator side effect version points internallyimported function", "d": "2/2018"}, {"body": "given following reasons floating sidebar would work mobile api page maximum width toc right implementation issue layout implemention going revert rendering subclasses seealso list main flow document overview", "d": "2/2018"}, {"body": "actually already fixed", "d": "2/2018"}, {"body": "vicb aio issue purely related docs aio application doc generation infrastructure", "d": "2/2018"}, {"body": "original design reference font size px make fit bit better along minimum width min width adjusted content centered aligned idea could change either shorten text say edit source b icons tooltips hover like less straight forward user think option b obvious enough shortened text b icons wtooltips option b would nice mobile regardless also consider moving placement within depends see toc", "d": "2/2018"}, {"body": "think like last option either format action buttons like clean icononly option followed full text", "d": "2/2018"}, {"body": "like icon option putting links toc would technically challenging since outside docviewer area control", "d": "2/2018"}, {"body": "oooh like icononly version clean intuitive like github", "d": "2/2018"}, {"body": "knock icons pr", "d": "2/2018"}, {"body": "ahmedhassanahmedwasfy formatting response data looks really strange talking arrays see arrays would expect array syntax nothing like description totally confusing", "d": "2/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "2/2018"}, {"body": "hi please look issue", "d": "2/2018"}, {"body": "thats expected behavior according routerlink directive docs ill try explain conditions lead result navigation triggered directive created instance directive default method take ones defined directive gt none navigation triggered handled according directive gt use ones directive gt none trying archive preserve url work button decorated look like", "d": "2/2018"}, {"body": "see aware queryparamshandling tried looking documentation ca nt seem find possible options none merge preserve thank much jotatoledo", "d": "2/2018"}, {"body": "default though see", "d": "2/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "2/2018"}, {"body": "bug", "d": "2/2018"}, {"body": "wasted hours trying figure issue finally got solution thanks lot", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "thanks trotyl", "d": "2/2018"}, {"body": "mean suggestion put parameter line thing likely answer switch prettier discuss curious gated getting incremental formatting setup thu feb pete bacon darwin notifications githubcom wrote see jbogarthyde comment comment think something angular core team would need make decision upon implement via clang rule cc igorminar alexeagle receiving mentioned reply email directly view github mute thread", "d": "2/2018"}, {"body": "see", "d": "2/2018"}, {"body": "ran issue rather open new ticket add findings seems happen open chrome devtools believe line causing problems sure ngsw debug info driver state normal nominal latest manifest hash last update check version clients idle task queue last update tick last update run task queue checkupdatesonnavigation debug log typeerror failed execute fetch serviceworkerglobalscope onlyifcached set sameorigin mode typeerror failed execute fetch serviceworkerglobalscope onlyifcached set sameorigin mode driversafefetch driverhandlefetch driverfetch line referenced error message googling shows people seem solved issue respective projects alxhub", "d": "2/2018"}, {"body": "fixed importing imports property configuration object", "d": "2/2018"}, {"body": "thank spotting mavbraz pr submitted", "d": "2/2018"}, {"body": "add context configurable via property example example architecture overview guide open corresponding stackblitzjson currently otherwise specified liveexample open default configure specific files perexample basis also change default value something else eg", "d": "2/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "2/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "2/2018"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "2/2018"}, {"body": "thanks spotting duplicate yerkon", "d": "2/2018"}, {"body": "without reproduction issue nt actionable", "d": "2/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "2/2018"}, {"body": "open angulardgeni", "d": "2/2018"}, {"body": "trotyl reason opening ioriginally cloned repo base suppose documentation go anywhere would say documentation go least link angulardgeni aioreadmemd visibility one nt even know repo let alone think look", "d": "2/2018"}, {"body": "dinosourcesrex sorry confused documentation angulario generated tool called dgeni actually link readme mentioned although accept prominent see configuration generating angular docs ie held repo supposed provide starting point generating app documentation tuned specifically requirements generating docs angular library want generate docs app must configure dgeni would take look dgeni repo also dgeni packages repo lot processors held documentation generation work also look projects configured dgeni create docs instance", "d": "2/2018"}, {"body": "thanks petebacondarwin ca nt actually believe missed link twice though see pointed gotten something working case nt think done way dgeni folks intended continue search thank", "d": "2/2018"}, {"body": "dinosourcesrex feel free email directly questions wrote dgeni code", "d": "2/2018"}, {"body": "thought name seemed familiar must seen gitlens may take thanks", "d": "2/2018"}, {"body": "repo nondart version angular dart open issue", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "angular issue", "d": "2/2018"}, {"body": "please attach minimal repro otherwise way help", "d": "2/2018"}, {"body": "vicb demo link", "d": "2/2018"}, {"body": "guid type js use string", "d": "2/2018"}, {"body": "toxicable understand issue transpilation via ngts compiler runtime compilation template seems something funky dash delimited text angular component property example would declared", "d": "2/2018"}, {"body": "binding property template expression angular try evaluate value case avoid brackets explained docs", "d": "2/2018"}, {"body": "jotatoledo ok got examples saw input used test back work consider closed problem frameworks confirmed removing solved issue stopped interpolation value", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "closing duplicate thanks trotyl", "d": "2/2018"}, {"body": "please provide repro", "d": "2/2018"}, {"body": "pace js overriding xhr requests bug related angular sorry inconvenience", "d": "2/2018"}, {"body": "angular templates need valid html syntax begin end style may feasible idea may valid concrete cases feature done binding default value attribute corresponding property", "d": "2/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "2/2018"}, {"body": "several components lots simple interactions variable changes within template using typescript hence ts comments want change tweak way temporarily mute aka comment useful variable binding problems inducing infinite loop deadlock generally need test withwithout combinations want todolike reminder later otherwise either comment component entirely making twice code lines get commented line component messes date integer interval kind component example code html button keydown onkey true event sorry delay", "d": "2/2018"}, {"body": "nt include complete repro seems like dynamic code annotations wrong need resolved compile time", "d": "2/2018"}, {"body": "bastienjs maybe nt understand correctly probably need sets validators including wrappers standard validators validator return either object want", "d": "2/2018"}, {"body": "mlcmlapis think get point want create bag wrappers around standard minmaxrequired validators handled framework common requirement frontend apps stuff like dejson pljson many translations one class reading holding keyvalues could handled framework happy instead everyone work", "d": "2/2018"}, {"body": "bastienjs think reason angular standard validators wrapping several lines code data type returned value therefore designed purpose angular ca nt cover needs realworld applications supposed customize specific way", "d": "2/2018"}, {"body": "work tell without repro case please use stack overflow support request", "d": "2/2018"}, {"body": "duplicate see", "d": "2/2018"}, {"body": "yes understood later create issue sorry", "d": "2/2018"}, {"body": "fyi chembu jenniferfell", "d": "2/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "2/2018"}, {"body": "omermizr current version get call remove call future version maybe optimized bypass apis maybe available longer", "d": "2/2018"}, {"body": "jialipassion first thank much secondly wondering documented anywhere also possible change event listener order finally typing would really rather use unless absolutely necessary", "d": "2/2018"}, {"body": "relateddup", "d": "2/2018"}, {"body": "omermizr apis provided documented possible change order kind apis basically keep apis may use manage keep mind future version apis gone", "d": "2/2018"}, {"body": "stopping", "d": "2/2018"}, {"body": "dependency excel angular", "d": "2/2018"}, {"body": "yessineabid excel word powerpoint openoffice many others", "d": "2/2018"}, {"body": "ca nt search", "d": "2/2018"}, {"body": "mlcmlapis use material angular want export datatable excel using angular", "d": "2/2018"}, {"body": "roeba nt think already done dependency supported angularjs", "d": "2/2018"}, {"body": "yessineabid guess probably understood related angular related custom components level nt matter md ui components component primeng component example export csv format via method usual way wijmo ui components native support readingwriting excel files ui component sets finally nothing else still write publish open source licence angular issues channel dedicated reporting reproducible bugs proposals new features", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "splincode lol simply change logic ca nt directly synchronously moment angular preparing update view based latest data changes process called ca nt change conditions moment late break unidirectional principle top bottom", "d": "2/2018"}, {"body": "documentation mentioned", "d": "2/2018"}, {"body": "examples documentation ts export class afterviewcomponent implements afterviewchecked afterviewinit private prevhero query view child type viewchild childviewcomponent viewchild childviewcomponent ngafterviewinit viewchild set view initialized thislogit afterviewinit thisdosomething ngafterviewchecked viewchild updated view checked thisprevhero thisviewchildhero thislogit afterviewchecked change else thisprevhero thisviewchildhero thislogit afterviewchecked thisdosomething angular throws error hook updates component databound comment property immediately try loggerservicetickthen postpones log update one turn browser javascript cycle long enough immediately write warning hooks need understand thisloggertickthen description promise settimeout", "d": "2/2018"}, {"body": "thrown try modify component state change detection algorithm ended issue happens name suggests change detection algorithm ended point angular expects nothing else change component state next tick however set value properties false ca nt something would trigger new change detection change detection ended assignments angular wo nt complain", "d": "2/2018"}, {"body": "many short descriptions documentation done done bunch examples beginners always much effort study", "d": "2/2018"}, {"body": "issues read like trotyl mentioned need open new one", "d": "2/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "2/2018"}, {"body": "vicb really feature supported angular ca nt get support help feature", "d": "2/2018"}, {"body": "mortenmoulder wait angular elements", "d": "2/2018"}, {"body": "related cli please create issue repository use issue template", "d": "2/2018"}, {"body": "without filling template providing repro help", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "ericmartinezr thanks tagged issue angular thing else required please let know hoping close issue soon", "d": "2/2018"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "closing dulpicate", "d": "2/2018"}, {"body": "please add repro", "d": "2/2018"}, {"body": "without simple demo reproduction vague", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "sebastianstehle hmm happens switching forms first nt happen firstly switching index something really wrong right", "d": "2/2018"}, {"body": "said directive never unsubscribes formcontrol therefore go form directive subscribed formcontrol times formcontrol time formcontrol time loop increment method setting formcontrol last shows value formcontrol formcontrol", "d": "2/2018"}, {"body": "potential fix", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "please add living demo issue", "d": "2/2018"}, {"body": "please add repro otherwise help", "d": "2/2018"}, {"body": "yes mad deadline right might thursday", "d": "2/2018"}, {"body": "plunkr example reproducing issue observe app need investigate", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide plunker reproducing problem describing difference expected current behavior use plunker template", "d": "2/2018"}, {"body": "cc igorminar", "d": "2/2018"}, {"body": "please report angularcli issues repo", "d": "2/2018"}, {"body": "thanks", "d": "2/2018"}, {"body": "yeah broken already existing issue though closing dupe", "d": "2/2018"}, {"body": "fun part linked issue ca nt reproduce label nobody including provided reproduction augury developers use reproduce consequently fix problem two months since opened issue instead complaining try ask help augury team solve problem", "d": "2/2018"}, {"body": "please make living demo", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "also tried changedetection changedetectionstrategyonpush listen changes detach doesnt work", "d": "2/2018"}, {"body": "hey guys thanks support found problem div binds drop event div doesnt occupy space rendered close issue thanks", "d": "2/2018"}, {"body": "closeyour issues thanks", "d": "2/2018"}, {"body": "issue sidenav slide drawer fixed item need explore options", "d": "2/2018"}, {"body": "angular bug normal circular dependency problem simpler repro angular get metadata since exist even possible better error message", "d": "2/2018"}, {"body": "trotyl using index file exports service component appmodule using index file component service work sample see believe matter exported servicecomponentmodel count circular dependency thats shared bigger repro first sample ts ends containing model classes services needed di", "d": "2/2018"}, {"body": "check logs expected semantics es module", "d": "2/2018"}, {"body": "interesting thanks well services listed sooner later getting services ca nt injected", "d": "2/2018"}, {"body": "could work requiring postpone evaluation jit metadata definitions running angular changed", "d": "2/2018"}, {"body": "yes seems works aot compilation instead jit doc could confirm expected behaviour spent lot time find could wrong reproducing way forwardref course better workaround importing another index interesting see circular dependency problem", "d": "2/2018"}, {"body": "way working raising angular bug one prove real angular problem rather parts reproduced without using angular since already observe importing result running caused angular whether typescript implemented correct semantics es module another story note tsconfig options semantics emulated output format designed follow es module polyfillable way information circular dependency problem es module easy search google like", "d": "2/2018"}, {"body": "quick comment make sure index files first imports exports mix habe multiple issues resolved first imports exports", "d": "2/2018"}, {"body": "thanks hint imports exports mixed even tho good know future", "d": "2/2018"}, {"body": "quick comment make sure index files first imports exports mix multiple issues resolved first imports exports", "d": "2/2018"}, {"body": "make sure nt circular dependency rather hoping wo nt break much", "d": "2/2018"}, {"body": "duplicate always possible angular actually feature request api simplification better angular cli support raised", "d": "2/2018"}, {"body": "seems like feature request issue either needs better documentation since common enterprise scenario better compiled javascript formatdecorators allows dynamic loading without compile subprojects system see something similar dll files net world team builds library libadll net libajs ng team b builds library b libbdll net libbjs ng team platform able dynamically load library platform system examples show dynamically loading module get component unclear module registered system routing would pick also programmatic way add routes found liba libb think poorly documented way seen several issues currently buggy granted superawesome aot optimizations probably work scenario could optimize things platform know liba libb depend something seems like common scenario especially enterprise markets", "d": "2/2018"}, {"body": "bmbell true especially adding additional routes adhoc programmatically loaded modules route definitions main app till moment loading area poor none documentation many unsolved unclear points time consuming anybody wants use comparison net world would fine except moment need net framework installed run dll area angular world actually solvable either process unique compilation build whole app using native shareable umds angular libs even advantages browsers caches prepared running ngmodule", "d": "2/2018"}, {"body": "provide info eg url address bar see messageserrors console version shown bottom page inside blue footer", "d": "2/2018"}, {"body": "gkalpak please find details url console logs version network calls request url request method get status remote referrer policy noreferrerwhendowngrade request url request method get status serviceworker remote referrer policy noreferrerwhendowngrade let know need details", "d": "2/2018"}, {"body": "thx info please also post content also xhr requests shown devtools tab loading page done try unregister serviceworker gt gt gt reload page sounds like something gone wrong sw", "d": "2/2018"}, {"body": "gkalpak please find details ngswlog xhr requests request url request method get status remote referrer policy noreferrerwhendowngrade request url request method get status serviceworker remote referrer policy noreferrerwhendowngrade request url referrer policy noreferrerwhendowngrade request url request method get status ok serviceworker remote referrer policy noreferrerwhendowngrade request url referrer policy noreferrerwhendowngrade request url chromeextension elgalmkoelokbchhkhacckoklkejnhcdbuildngvalidatejs request method get status ok disk cache referrer policy noreferrerwhendowngrade request url request method get status ok serviceworker remote referrer policy noreferrerwhendowngrade request url referrer policy noreferrerwhendowngrade request url request method get status disk cache remote referrer policy noreferrerwhendowngrade unregistered service workers applications page still nt load let know need detail", "d": "2/2018"}, {"body": "hm responses look suspicious grin especially since files cached sw confused alxhub idea might going related issue issues go away upgrade new serviceworker implementation though see tried disabling browser cache could browser sw cached bad response possibly days ago issues firebase hosting could also try different browser thx patience providing info really helps us make sure everything works smoothly future", "d": "2/2018"}, {"body": "gkalpak works fine browsers safari disabled cache tried load service workers nt work thx", "d": "2/2018"}, {"body": "strange running ideas get request directly", "d": "2/2018"}, {"body": "gkalpak sorry issue proxy able load angular pages sorry trouble closing issue", "d": "2/2018"}, {"body": "works intended check presence compile time", "d": "2/2018"}, {"body": "vicb issue router router class implements interface provided via factory destroy hook never called file separate issue", "d": "2/2018"}, {"body": "duplicate better file separate issue router memory leak problem", "d": "2/2018"}, {"body": "hard tell whats happening little information", "d": "2/2018"}, {"body": "packagejson content info could provide", "d": "2/2018"}, {"body": "imo isnt problem angular side would related cli general support issue tracker right place kind issues trully think bug please provide minimal reproduction issue", "d": "2/2018"}, {"body": "bad thought cli channel sorry bad", "d": "2/2018"}, {"body": "please reopen issue include exact steps required reproduce issue otherwise way could help thanks", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "duplicated issue", "d": "2/2018"}, {"body": "capture failing next caretaker know safe restore", "d": "2/2018"}, {"body": "duplicate support question", "d": "2/2018"}, {"body": "hi trotyl see related solution since month thought products google finger pointing regards", "d": "2/2018"}, {"body": "trotyl trying say html attributes caseinsensitive nt matter", "d": "2/2018"}, {"body": "understood apply fxlayout difference colleagues flexlayout say angular problem angular says flexlayout problem", "d": "2/2018"}, {"body": "atmike triggering directive attribute binding feature request tracked nothing", "d": "2/2018"}, {"body": "dup", "d": "2/2018"}, {"body": "nt see going close", "d": "2/2018"}, {"body": "dup", "d": "2/2018"}, {"body": "types shown small icons large icons associated pages", "d": "2/2018"}, {"body": "princeleto thanks issue yes pr would definitely helpful", "d": "2/2018"}, {"body": "ok try make pull request three weeks time", "d": "2/2018"}, {"body": "offtopic congrats getting issue number", "d": "2/2018"}, {"body": "hanusaikrishna bit lost detailed demos many jqwidgets components pages especially jqxlayout", "d": "2/2018"}, {"body": "please dont use issue tracker general support questions", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "struggling error fetching network first html file typeerror previous undefined", "d": "2/2018"}, {"body": "thanks agree api reference validator interface could complete put list meantime guide may provide need use cases scenarios would useful guide section interested well thanks", "d": "2/2018"}, {"body": "alpnp method ca nt make call way failed componentcamera function", "d": "2/2018"}, {"body": "mlcmlapis right sorry wrong thanks help works describe set camera gt", "d": "2/2018"}, {"body": "please provide reproduce repo", "d": "2/2018"}, {"body": "able reproduce sorry happening intermittently sure causing", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "searching issues milestone instead since anything triaged milestone backlog another milestone like", "d": "2/2018"}, {"body": "trying determine issues triaged milestone would bring semitriaged issues already component designation missing fields expect comp triagers assign", "d": "2/2018"}, {"body": "update", "d": "2/2018"}, {"body": "work tomorrow want", "d": "2/2018"}, {"body": "already possible via lower level apis component define template embedded templates used instantiated projected view container missing declarative way define fragments without need involving low level apis", "d": "2/2018"}, {"body": "update issue suggestions could nt know much angular low level apis remember behavior dropped anguarjs least something similar", "d": "2/2018"}, {"body": "things note style native anymore course style emulated anymore current implementation allowing bring eidt actually possible way even private apis example meaningless possible style removed hello world p color red class component selector template styles class component selector mycomp template styles class mycomponent result html p color green p color blue p color red hello world become style overriding technically fragment could even may metadata eg using nothing similar stuff duplicate", "d": "2/2018"}, {"body": "possible embeddedview style computed encapsulated styles could applied children like example", "d": "2/2018"}, {"body": "michaeljota like example commented already styles static renderer applied possible achieve current architecture could even", "d": "2/2018"}, {"body": "make sure edit gt edit remove well work verify", "d": "2/2018"}, {"body": "throw compilation errors date hash time unchanged chunks error error feature host dependencies supported yet unsupported usrlocalgooglehomestephenfluinworkspaceivynodemodules createfactory usrlocalgooglehomestephenfluinworkspaceivynodemodules compiledirective usrlocalgooglehomestephenfluinworkspaceivynodemodules usrlocalgooglehomestephenfluinworkspaceivynodemodules arrayforeach aotcompileremitpartialmodule usrlocalgooglehomestephenfluinworkspaceivynodemodules usrlocalgooglehomestephenfluinworkspaceivynodemodules arrayreduce aotcompileremitallpartialmodules usrlocalgooglehomestephenfluinworkspaceivynodemodules usrlocalgooglehomestephenfluinworkspaceivynodemodules angularcompilerprogramemit usrlocalgooglehomestephenfluinworkspaceivynodemodules angularcompilerpluginemit usrlocalgooglehomestephenfluinworkspaceivynodemodules promiseresolvethenthenthen usrlocalgooglehomestephenfluinworkspaceivynodemodules processtickcallback webpack failed compile", "d": "2/2018"}, {"body": "removed ngmodule imports seems worked", "d": "2/2018"}, {"body": "stephenfluin hello trying test new ivy renderer see benefits get error received updated angular cli executed executed enabled ivy removed well nt understand step import function currently still bootstrap like past think wrong maybe early possible bootstrap module component", "d": "2/2018"}, {"body": "nt work done please nt file issues", "d": "2/2018"}, {"body": "trotyl picky first open issue talking closed issue nt want waste people time linked project partially answer question expected bootstraps single component nb nt want answer nt absolutely need patronizing way", "d": "2/2018"}, {"body": "trotyl let step bit see happening time let step back see might happened tries build small app ivy test things encounters error heshe suspects problem related ivy finished sure really would love see magic working post comment asking helpconfirmation trotyl sees comment wants confirm problem related feature incompleteness ivy rather writing full message copy amp pastes section faq robwormald ivy demo sees comment feels patronized comment brief explicitly mentions people nt file issue something working posts new comment calling trotyl picky patronizing conversations go like happen assume intention none nt believe trotyl trying mean patronizing see trotyl comment lots issues prs sometimes people post frequently try efficient possible use shortcuts communicate message like copy amp pasting existing documentation github enables textonly communication form voice tone amp emphasis body language facial expressions observed message receiver nonverbal communication channels fill meaning tone context brief verbal interactions text communication like one happened issue nt additional communication channels available leaves brief text messages like one trotyl interpretation receiver often interpretations incorrect result response sends whole conversation downward spiral go think following could help robwormald could improve brief faq easily used reference inquiries ivy feature completeness trotyl could bit mindful brief messages could misinterpreted try avoid could interpret brief messages benefit doubt assume bad intent message ambiguous said see kinds interactions quite frequently find fascinating different people handle personally use great resource help understand happening highly recommend answer original question ivy feature complete yet many things still nt work follow progress ivyangulario bootstrap method indeed changed currently uses private api called imported expect change time ivy ready prime time please keep mind private api anything else prefixed \u0275", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "2/2018"}, {"body": "like formarray intended feel like want done rxjs", "d": "2/2018"}, {"body": "dupe", "d": "2/2018"}, {"body": "see validator attributes due compatibility issue", "d": "2/2018"}, {"body": "issue appears closed even though marked fix alternative planned", "d": "2/2018"}, {"body": "supporting bug removing fix please read carefully", "d": "2/2018"}, {"body": "trotyl notes intentional change breaking existing issue tracks readding line", "d": "2/2018"}, {"body": "looks like expecting error handler change based error occurs going work never inject error handler need example looks like creating injecting going never reinstantiated would ever also even reinstantiated pull injector attached case one configured always", "d": "2/2018"}, {"body": "well thats quite true inject error handler show output appcomponent error handling works inject error handler problem work provide child module updated repo show", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "may caused new behavior stores using", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "use instead", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "chuckjaz looked problem yesterday say believe line wrong genesis problem try produce reexports symbols metadata refer files outside compilation line cause second file treat reference localdata file reference external library problem commonjs avoiding avoids typescript trying report invalid import problem still hiding probably show elsewhere fix way new programs created reported incremental builds also suggested workaround type problematic namespace import next major version angular cli away commonjs also ameliorate problem real fix though reduce symptoms", "d": "2/2018"}, {"body": "going include chuckjaz workaround release would cool nt wait webpack integration angularcli real solution", "d": "2/2018"}, {"body": "kondi workaround usercode tooling", "d": "2/2018"}, {"body": "sorry nt checked repro repo completely different imports cause understand thanks infos investigation gt", "d": "2/2018"}, {"body": "filipesilva chuckjaz workaround seem type problematic import already case repro code seems assign problematic line variable returning really strange", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "ca nt share code like without proper build setup using angularcli directory layout definitely supported using bazel directory layout supported requires know manually setup build pipeline", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "sure ng build without prod works fine", "d": "2/2018"}, {"body": "yes working fine system prod mode issue happens", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "classname even tempting java developers nt used prod mode code also minified uglified means class may get completely different name expect eg builds others another minified version", "d": "2/2018"}, {"body": "right javascript ca nt rely class name prod mode angular thing javascript minificationprod optimizations work working years", "d": "2/2018"}, {"body": "agreed come undefined understand getting different name due optimization", "d": "2/2018"}, {"body": "absolutely bug mixing two things work together conflict solve issue initializing keyboard variable", "d": "2/2018"}, {"body": "wartab would solve issue correct wrong selected attribute contain expression returns true false right made tests following answer made doubt funcitionalities html keyboard json aname json azerty qwerty keyboardstr json azerty qwerty keyboardstr json azerty qwerty keyboardstr json azerty qwerty component import component oninit angularcore component selector apptest templateurl testcomponenthtml styleurls testcomponentcss export class testcomponent implements oninit constructor ngoninit surprised azerty never default selected unless last example", "d": "2/2018"}, {"body": "mix apples oranges would use selected along two way databinding place question probably stack overflow way", "d": "2/2018"}, {"body": "indeed nt know selectcontrolvalueaccessor could job issue closed", "d": "2/2018"}, {"body": "using lithtml angular would incredible", "d": "2/2018"}, {"body": "worth think interesting proposal love hear feedback angular team", "d": "2/2018"}, {"body": "arjunyel proposal going change template syntax compilation result benefit compile current template lithtml internally also making view engine configurable means view engine never become public api shareable code depend think proposal may goes goal", "d": "2/2018"}, {"body": "please report angularcli issues repo one framework", "d": "2/2018"}, {"body": "closed already missing statement", "d": "2/2018"}, {"body": "thanks issue definitely see would useful something would like create pr", "d": "2/2018"}, {"body": "ca nt promise anything yet see find time file pr soonish thanks", "d": "2/2018"}, {"body": "thank clear explanation recommenation take look adding section reader rewrite section code simpler improvements section", "d": "2/2018"}, {"body": "damodaranr like contribute fix directly happy help process", "d": "2/2018"}, {"body": "jenniferfell sure contribute noticed minor improvements possible documentation create issues work well contributed hence might little slower begin signing cla enough get started", "d": "2/2018"}, {"body": "damodaranr fantastic welcome aboard recommendation read sign cla linked contributingmd review docs contributions examples code developermd everything building skip jdk point tools fork contributing info commit message format submitting prs familiar git github markdown let know send links thanks", "d": "2/2018"}, {"body": "thanks jenniferfell familiar github stuff send links well get started soon", "d": "2/2018"}, {"body": "damodaranr access wiki written byandfor team still construction much applies doc contributor getting started setup information", "d": "2/2018"}, {"body": "jenniferfell yes able access thanks", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "closing dup", "d": "2/2018"}, {"body": "dawidgarus status method already status neither valid invalid nt affect styles would serve use case hard know without minimal reproduction add one", "d": "2/2018"}, {"body": "would like implement comparing current time last close time session expiry cookie make sure false positive", "d": "2/2018"}, {"body": "rbkgh mean terms pressing key", "d": "2/2018"}, {"body": "yeah mlcmlapis", "d": "2/2018"}, {"body": "rbkgh ok concrete case user need means user press", "d": "2/2018"}, {"body": "rbkgh thanks issue think need details order understand maybe creating stackblitz example showing problem would help understand feature request", "d": "2/2018"}, {"body": "jasonaden kindly find attached stackblitz example hope helps angularreloadenhancement accompanying code", "d": "2/2018"}, {"body": "rbkgh problem reload behavior manually entering url enter problem routing definition following think second component placed", "d": "2/2018"}, {"body": "mlcmlapis yes hellocomponent render location hicomponent loaded refresh button pressed hicomponent loaded new feature reload hicomponent instead redirecting hello component appcomponent", "d": "2/2018"}, {"body": "rbkgh try open directly redirected well refresh nt make difference", "d": "2/2018"}, {"body": "appears behaves expected still feel issue please provide details new issue", "d": "2/2018"}, {"body": "please specify resolution details nt see visual error main document zoom point browser", "d": "2/2018"}, {"body": "dup", "d": "2/2018"}, {"body": "please note plural example used app may import several different others ngmodules well nothing wrong would suggest something like also import ngmodules eg angular libraries using javascript import statements", "d": "2/2018"}, {"body": "yes would lot better thanks comments", "d": "2/2018"}, {"body": "thank feedback done work architecture doc expanded information ngmodules sufficiently address potential point confusion", "d": "2/2018"}, {"body": "hi thanks catching would willing submit pr happy review", "d": "2/2018"}, {"body": "damn head almost overflowed trying read", "d": "2/2018"}, {"body": "kapunahelewong could nt know one supposed read first", "d": "2/2018"}, {"body": "ngmodules information ngmodules see bootstrapping frequently used modules providers since bootstrapping already marked reading javascript modules vs ngmodules could remove prerequisites namely javascript modules vs ngmodules prerequisite bootstrapping opposite", "d": "2/2018"}, {"body": "good idea trotyl could remove like trotyl suggests since leave nothing like give people sort context altering something like basic understanding following javascript without linking pages prerequisites like since presume basic knowledge docs two think", "d": "2/2018"}, {"body": "hey got worries thank", "d": "2/2018"}, {"body": "sebastianschenk thank reporting issue created pr add", "d": "2/2018"}, {"body": "wisebird seem might slight misunderstanding since angular opinionated framework concepts cemented ca nt get around good thing common point reference point team understanding issue arises angular ioc container knowing inject ways solve problem approach taking commits adding pull request adding provider help angular figure sees dependency defaulting dependency injecting value would like default using note point nt need ar providing dependency run time basically need inject intermediate help ioc crash would better suited stack overflow question stating happen link add answer code example intermediate component dependant child bad mvc design need refactor would like help however need understanding intermediate component need inject enum value could provide full solution could maybe point direction solve problem still making use ioc intended", "d": "2/2018"}, {"body": "mhevery hey new angular issues anything contribute give issue shot", "d": "2/2018"}, {"body": "dewwwald understanding issue arises angular ioc container knowing inject yes actually ioc business values passed child component thinks decorator ca nt remove decorator stops working adding provider help angular figure sees dependency wrong losing ability create multiple descendants different values purpose existence right fix would provide type via property export abstract class intermediatecomponent extends basecomponent abstract gettype typesenum export class childonecomponent extends intermediatecomponent gettype typesenum return typesenumone intermediate component dependant child bad mvc design please elaborate direct dependency passing value superclass constructor oop basic operation", "d": "2/2018"}, {"body": "need extra inject intermediate component nt needed child component test sample works means variations instead passing type use look issue base component please elaborate direct dependency childonecomponent passing value superclass constructor oop basic operation sorry could clear think intermediate component rendering something likely result happened child actually bad mvc design wrong rather said alternatives passing value bug compiler tries resolving component parent class sample work determine value child proposing temporary fix setting default inject intermediatecomponent", "d": "2/2018"}, {"body": "made another commit labeled fix repo read understand variations turns use super call", "d": "2/2018"}, {"body": "dewwwald ok thank guess use workaround prevent warning showing", "d": "2/2018"}, {"body": "wisebird clear dewwwald explained dependency injector works class injectable angular assumes parameters constructor determined injector since annotations inherited descendants injectable follow rule", "d": "2/2018"}, {"body": "see nothing console select verbose right next filter input box said nt seem problem angular reproduce simple jsfiddle look ngfor directive source code see event handling unless functions called inside actually handle scroll events angular nt support passing properties hostlistener afaik tracked", "d": "2/2018"}, {"body": "recommend use tracking status passive events", "d": "2/2018"}, {"body": "toxicable ericmartinezr ok guys observe feat thanks", "d": "2/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "2/2018"}, {"body": "mhevery thank comment provide repository reproduction problem issue", "d": "2/2018"}, {"body": "niklimenko sure please provide reproduce repo describe issue", "d": "2/2018"}, {"body": "mhevery jialipassion repository reproduction issue questions let know thank", "d": "2/2018"}, {"body": "niklimenko thank posting issue bug compatible new version fix", "d": "2/2018"}, {"body": "niklimenko update use temp branch test", "d": "2/2018"}, {"body": "oops splincode thanks pointing would like send us pr proposed fixes", "d": "2/2018"}, {"body": "possibly feature researched lot could nt find solution correctly handle please provide information workaround handle get correct handlers listeners property debugelement", "d": "2/2018"}, {"body": "chuckjaz mhevery ideas handle moment", "d": "2/2018"}, {"body": "started implementing following ga filter source see domains reports need verify collecting data domains care ca nt seem prove collect info vangulario nextangulario", "d": "2/2018"}, {"body": "afaict tracking exact way visit see requests sent maybe nobody visiting grin", "d": "2/2018"}, {"body": "tried visit testing nt see traffic domains sat feb george kalpakas notifications githubcom wrote afaict tracking nextangulario vangulario exact way angulario visit see requests googleanalytics sent maybe nobody visiting receiving authored thread reply email directly view github mute thread", "d": "2/2018"}, {"body": "alright checked traffic since friday see hits various subdomains filter place looks like missing material subdomain", "d": "2/2018"}, {"body": "created track last site", "d": "2/2018"}, {"body": "merge materialangulario begin collecting analytics data next release", "d": "2/2018"}, {"body": "found issue thing change form directly always change previous code", "d": "2/2018"}, {"body": "also enforce things like sentences start capital letter unless keyword monospaced end dots also enforce free form text formatted way sentence located new line makes reviewing diffs much easier also nt force us reformat big chunks text fit within line length used code", "d": "2/2018"}, {"body": "already parsing html unist tree via rehype postprocessing phase dgeni could use retext parse natural language nlcst maybe overkill go basic regexes", "d": "2/2018"}, {"body": "originally comment gkalpak sure possible possible might better put examples signature params sections jbogarthyde commented agreed intention optional syntax examples subsection method hoped similar usage notes section whole class bottom methods", "d": "2/2018"}, {"body": "fix issue need nail data structures authors developers provide jsdoc tag suggestions suggestions jsdoc tags per code item detailed aim automate much possible parsing source code minimize developer actually write indicates zero tags indicates tag optional common tags tags used code items classes interfaces enums functions properties methods consts typealiases pipes directives components decorators ngmodules short overview item first paragraph extracted rendered independently rest paragraphs detailed description usage class perhaps implementation details relevant application developer links related classes interfaces guides etc present api item deprecated tag content message display indicate information deprecation status present api item yet stable present security implications using api item tag content message explaining implications api item included documentation members consts typealiases functions additionally tags used properties getters setters code items type call signature description value returned call type value represented code item description parameter call signature description types error thrown exotic docs currently decided additional information would need provided things like directives pipes decorators ngmodules etc tag migration table suggests might map current tags new ones tags mentioned need migration current migrate notes currently mostly used long description item currently used short description api item often used provide detailed description usage tag sometimes contains examples extracted none present api stable ie experimental deprecated probably implied two tags present notes going implement tags timebeing migrating consider leaving tags alone mapping short contents tag", "d": "2/2018"}, {"body": "mostly progresses docgen side except removing need next step actually change docs see docgen highlighting deprecated tags warnings even though onthefly automated migration content new tags see travis log example", "d": "2/2018"}, {"body": "jbogarthyde suggested developers required mark params optional description information whether param optional available directly source code would argue generate automatically require author anything special two benefits lower workload author ensure consistency rendering optional information corollary optional parameter may default value information also available source code rendered automatically need manually provided author", "d": "2/2018"}, {"body": "similar reasons constructor would consider dropping parenthesis method names", "d": "2/2018"}, {"body": "jbogarthyde agree suggestion see nt agree widelyused convention identify fnmethod names text empty parens parallel constructorpropertiesmethods subheading methods needs distinguished method name", "d": "2/2018"}, {"body": "igorminar jbogarthyde comment whether get rid method headers", "d": "2/2018"}, {"body": "like since heading styles particularly distinguishable unless right next think parens help reader maintain orientation nav immediately intuitively understand looking individual method within methods section kind descriptive section heading", "d": "2/2018"}, {"body": "believe ways help user maintain orientation example wide screens toc always visible right highlight current method subsection section also suggest put method signature right heading description makes easy see method also note methods section currently different properties section properties inside table accept might change future would look similar java docs maybe could layout like signature short description params return value full descriptionusage notes examples said nt feel strongly always use mention methods grin reason suggested dropping context clear whether method name full signature someone careful might seem like method called without arguments nt think major impact anyway happy go either way smiley", "d": "2/2018"}, {"body": "layout currently name heading description signature params return value usage notes currently implemented unless description short signature could screen jbogarthyde sure wanted signature directly followed params return value think could follow footsteps class descriptions split first paragraph use shortdescription would happy put signature move rest description everything", "d": "2/2018"}, {"body": "fact look examples feel signature come first followed one liner description params etc", "d": "2/2018"}, {"body": "getting topic think leave parens place since particularly confusing since real signature directly", "d": "2/2018"}, {"body": "created new issue discuss description ordering", "d": "2/2018"}, {"body": "headerlink appears hovering heading blend well card border", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "igorminar thoughts page title api name option remove anchor link option move labels right title text think option work best number labels varies per api fix anchor link header issues headings tables formatting option remove anchor link api pages option shift text anchor fit upon hover see gif consider options nt work", "d": "2/2018"}, {"body": "generally find ability link specific methods useful used extensively answering angularjs questions stackoverflow gitter etc grin live name jump around hover ideal place link icon right headings inside tables headings narrow screens btw", "d": "2/2018"}, {"body": "option moving right class name originally would recommend option moving underneath header element always explore additional options igorminar", "d": "2/2018"}, {"body": "moving badges solves problem instance situations heading within container link partially falls outside container eg", "d": "2/2018"}, {"body": "sjtrimble think meant comment go", "d": "2/2018"}, {"body": "petebacondarwin sure delete add", "d": "2/2018"}, {"body": "thread okay removing link visual api pages", "d": "2/2018"}, {"body": "ok removing link visual sorry think simply move anchor heading ie rhs l r text", "d": "2/2018"}, {"body": "petebacondarwin fair enough want make sure understand limitations", "d": "2/2018"}, {"body": "option moving right class name originally would recommend option moving underneath header element always explore additional options igorminar", "d": "2/2018"}, {"body": "nt think following story typescript note import modulemaploadermodule nguniversalmodulemapngfactoryloader ngmodule imports note modulemaploadermodule lt important lazyloaded routes work export class appservermodule standalone package lies angularuniversal", "d": "2/2018"}, {"body": "trotyl firstly added app module building crashed deleted angular related file cli n amp installed fresh new app n tried getting rendered page needed thanks trotyl clearly pointing missing let ask fewer resources implementing ssr angular mean things taken care using n much things related anyway thanks lot trotyl", "d": "2/2018"}, {"body": "please ask ask angular team actually angular cli team case instead", "d": "2/2018"}, {"body": "thanks igorminar example get today", "d": "2/2018"}, {"body": "problem logo given great large display banner quite small fiddly clear enough see", "d": "2/2018"}, {"body": "would file work petebacondarwin", "d": "2/2018"}, {"body": "worried headed wrong direction think need fewer colors instead like monochrome one favicon", "d": "2/2018"}, {"body": "made coloring alpha channel logo thoughts", "d": "2/2018"}, {"body": "another one made cropping gradient", "d": "2/2018"}, {"body": "like monochrome one remember logo going really small banner", "d": "2/2018"}, {"body": "yup monochrome better us frosty ok end using brand provide us monochrome logo ok stephen mod sat feb pete bacon darwin notifications githubcom wrote like monochrome one remember logo going really small banner receiving mentioned reply email directly view github mute thread", "d": "2/2018"}, {"body": "black white one good enough interested getting site getting publicity getting specific image thanks working", "d": "2/2018"}, {"body": "one modern b amp w", "d": "2/2018"}, {"body": "send us pr need edit aiocontentmarketingannouncementsjson add image please resize image height use text dates issue json fields thanks sat feb pm aaron frost notifications githubcom wrote one modern b amp w receiving mentioned reply email directly view github mute thread", "d": "2/2018"}, {"body": "would work color garish", "d": "2/2018"}, {"body": "brand works", "d": "2/2018"}, {"body": "live", "d": "2/2018"}, {"body": "nice catch currently would autoincrease existing id property numeric suggested fix override method know always demo", "d": "2/2018"}, {"body": "thank suggestion appended solution article", "d": "2/2018"}, {"body": "url posted invalid got redirected try", "d": "2/2018"}, {"body": "appears behaves expected still feel issue please provide details new issue looks like difference percent encoded asexpected fixed using", "d": "2/2018"}, {"body": "feeling trotyl jasonaden observing different behavior use original url shortened see behavior across different browsers operation systems url trotyl works authentication result encoded differently different encoding supported oauth different variant standard meant web applications may supported javascript authentication libraries", "d": "2/2018"}, {"body": "authentication result encoded differently encoding leaved intact different path please try inline diff please note browser would perform escaping navigation happens", "d": "2/2018"}, {"body": "sorry used word encoding talking character encoding meant moved authentication result fragment query", "d": "2/2018"}, {"body": "oauth parameters normal query parameters", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "done", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "mhevery support request asking help reporting flaw framework", "d": "2/2018"}, {"body": "reproduce please provide valid repro could based one understood", "d": "2/2018"}, {"body": "trotyl thank tried edit click input type lose focus still fire chrome firefox", "d": "2/2018"}, {"body": "current implementation listen event listen event", "d": "2/2018"}, {"body": "ok thank seems standard way listen changeinput event asking feature normal behaviour ws call ngchangemodel input number called ws twice", "d": "2/2018"}, {"body": "personally agree improved please waiting angular team determine", "d": "2/2018"}, {"body": "agree improved already tracking core problem", "d": "2/2018"}, {"body": "today using puppeteerchrome headless populate material form inputs easy ca nt matselect driving nuts nt anything publicly exposed like saw elements demo end hardcoded clicks ideally component like matselect would expose functionality regular select programatically select options like native element could expose api dom elements would sooo happy", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "discussing similar issue think root cause response gateway timeout trying access nonindex route offline question currently open issue thus far one able give explanation case handled still trying step generated file see failure occurs nonindex routes offline fail index route nt yet answer", "d": "2/2018"}, {"body": "issue probably closed duplicate meantime see repo minimal reproduction run locally", "d": "2/2018"}, {"body": "seeing stack blitz reproduction would great", "d": "2/2018"}, {"body": "duplicate bug report feature request possibly could improve docs", "d": "2/2018"}, {"body": "trotyl thanks pointer understand angular maintainers may want change current behavior given potentially negative performance implication current behavior template reference variable puts strain developer mind one exception need remember pay attention current wording documentation clear intuitive angular processes data bindings per javascript event cycle real behavior roughly data binding processed per event cycle unless data binding contains template reference variable whose element events bound btw template input variable get processed event cycle difference behavior depending whether comes template reference variable component property change current behavior leads unbearably high overhead might much maintainers users take whatever practically possible hope sides option carefully weighed community elegance simplicity template syntax vs highperformance lowoverhead implementation", "d": "2/2018"}, {"body": "toxicable behavior first input box binds input event expected behavior second input box input event binding rather unpredictable submit button stays disabled time gets enabled sometimes type something first input box", "d": "2/2018"}, {"body": "angular processes data bindings per javascript event cycle event listener defined wo nt event cycle tick javascript vm technically true", "d": "2/2018"}, {"body": "formatted bit make easier explain explanation behavior typing second angular running change detection cd process updating angular bindings becasue nothing bound input event wgile value get updated simply reflected ui since cd ruin first input however bound event therefore cd run everytime event fired confirm ofllowing type type notice bindings angular values updates type believe intended behavior case either way recommend using angular forms handle inputs anyway", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "would mind reporting issue angularcli repo", "d": "2/2018"}, {"body": "tagging onto surprised discover day two ago passing nonpromiseobservable value async pipe like causes runtime error would expect behave like keyword accept value", "d": "2/2018"}, {"body": "fixed already missing statement", "d": "2/2018"}, {"body": "nrauh due html spec", "d": "2/2018"}, {"body": "look mdn creating issue double check misread category content close issue", "d": "2/2018"}, {"body": "thank submitting issue issues require plunker demonstrates problem reproduce please reopen issue create new issue reproducible use case sorry aggressive closing issues overwhelmed number issues get time look ones easy us reproduce", "d": "2/2018"}, {"body": "provide example soon possible", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "use issue template", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "blamed parser skips prefix", "d": "2/2018"}, {"body": "trotyl thanks taking time view source code skip prefix convenient data determined string number especially get data asynchronous request", "d": "2/2018"}, {"body": "saying design logic implemented early stage years ago even copied elsewhere legacy mistake convention finder given opportunity raising fix pr heshe wants issue criticalurgent tip making changes would totally ok waiting fix", "d": "2/2018"}, {"body": "pr raised since reply op suggested tags", "d": "2/2018"}, {"body": "sw enters degraded state safemode stay possible exit state application restart sw end good state though provided valid investigate whether case", "d": "2/2018"}, {"body": "thanks investigating think function could get mode state sw application could un reregister sw current workaround would call check promise resolve rejected within given time unregister sw well standard way resolving rejecting promise might another issue", "d": "2/2018"}, {"body": "im experiencing issue promise never gets resolvedrejected trigger manually refreshing app tldr everything works fine close chrome devtools opened devtools screws service worker update mechanism check manage work sw update closing devtools hope helps logic looks like ts public checkupdates public checkforupdate consolelog app checkforupdate started thisswupdatecheckforupdate gt consolelog app checkforupdate completed catch err gt consoleerror err public activateupdate consolelog app activateupdate started thisswupdateactivateupdate gt consolelog app activateupdate completed thiswinrefnativewindowlocationreload catch err gt consoleerror err way make button app tapped user check updates triggers open snackbar currently possible due never resolvingrejecting promise right update everything works fine close chrome devtools opened devtools screws service worker update mechanism check manage work sw update closing devtools hope helps", "d": "2/2018"}, {"body": "nikolayyeryomenko net developer say good idea combine angular webapi mvc unless ssr still prefer nodejs probably wan na look repo amazingly good job combining angular net nt think good idea drop angularcli use webpack independent whether u use net might interesting extend docs configure angular aspnet application would probably mean extended technologies php java aswell sure something maintained angular docs net angular related questions feel free ping gitter", "d": "2/2018"}, {"body": "duplicate support question", "d": "2/2018"}, {"body": "nt think called binding talk talk service function calls templates", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "ericmartinezr may improvement angular make call default behaiviour", "d": "2/2018"}, {"body": "rendering without watching called onetime binding conversion name used years decades maybe", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "hi sinedied ran http interceptor codes colleague think would nice allow angular support dynamic interceptors", "d": "2/2018"}, {"body": "unfortunately nt intend support public api time extending supported recommended could break time example code probably broken already", "d": "2/2018"}, {"body": "alxhub understand position though due way around extending also would like avoid lack recommendation apply perrequest configuration without extending really easy deprecated api really problematic best shot keep standard dynamically use using extended class injected place default one still feel hacking around issue", "d": "2/2018"}, {"body": "shaungrady thanks awesome tweet let know ready help contributing process needed excited", "d": "2/2018"}, {"body": "ready first question recommendation style guide make directives prefixed way components", "d": "2/2018"}, {"body": "directive selectors section style guide nothing mentioned prefixing selectors name spacing shaungrady", "d": "2/2018"}, {"body": "yerkon ohhhh see confusing bit custom prefixes directives nt appear immediately directive selectors section instead bisected custom prefix components also expecting directive selectors cover prefixes since prefixes part selector maybe custom prefix directives could moved directive selectors section custom prefix components could renamed component selectors would bit consistent way", "d": "2/2018"}, {"body": "thanks yerkon shaungrady good catch order read style guide several times never caught section custom prefix components looks like components section think moving component selector names would put directives related sections together current naming would make sense think components section", "d": "2/2018"}, {"body": "kapunahelewong shaungrady directives section nt section look directive selectors allocated naming section thats component selector names moved naming section naming", "d": "2/2018"}, {"body": "good point yerkon naming section makes sense shaungrady could even reference made sense components section", "d": "2/2018"}, {"body": "understanding correctly reorganized naming component selectors component custom prefix directive selectors directive custom prefix components component selector names naming think makes sense component section appear directive section components common also renaming custom prefix components component custom prefix keeps visually connected preceding component selectors sounds good submit pr changes", "d": "2/2018"}, {"body": "hey shaungrady yes agree completely points questions editing files let know jenniferfell fyi shaungrady would like contribute docs shaungrady jenniferfell project manager docs help navigate process approving landing pr", "d": "2/2018"}, {"body": "thank kapunahele one question noticed style numbers increment handle reorganizing sections sure changing broader impact keep original numbers use next available number new section component custom prefix got moment rule numbers left", "d": "2/2018"}, {"body": "good question shaungrady hey petebacondarwin could advise us numbering styleguide shaungrady brings think links numbers distinct reason memory hazy", "d": "2/2018"}, {"body": "admit sure would imagine number people maybe tools link styles perhaps numbering stay stable", "d": "2/2018"}, {"body": "yeah confirm link styles number", "d": "2/2018"}, {"body": "also johnpapa wardbell lot historically might view", "d": "2/2018"}, {"body": "right check available updates every hours think update downloaded new content displayed new navigations theoretically content navigation either inapp new page staler ca nt think another way ensure freshness without affecting tti wait show snackbar update available prompting user reload page grin d\u00e9j\u00e0 vu", "d": "2/2018"}, {"body": "mgechev", "d": "2/2018"}, {"body": "fix today", "d": "2/2018"}, {"body": "document linked info examples think enhance better job surfacing", "d": "2/2018"}, {"body": "gkalpak ah missed doc thanks maybe moving whats would great", "d": "2/2018"}, {"body": "generally bad idea patching builtins almost always lead strange behavior case likely breaking zonejs see details something going support", "d": "2/2018"}, {"body": "want track user clicks things like monkey patch methods right", "d": "2/2018"}, {"body": "ujjainimukherjee commit linked merged track cli changelog know released need information please reopen issue thanks", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "thanks trotyl", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "expected provide simple reproduction demo problem using", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "mhevery love better understanding getting obscure error one polyfill another considered support issue rather bug clear relation adding polyfill test error fyi posted question couple days prior posting response", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "asgerjensen please let know find solution problem", "d": "2/2018"}, {"body": "ericmartinezr problem", "d": "2/2018"}, {"body": "plan provide api get access locale data using pipe right solution", "d": "2/2018"}, {"body": "const input nz inputforeach element gt let found elementmatch return elementsubstring foundindex inputforeach element gt consolelog elementsubstring elementmatch index result nok nz nzd", "d": "2/2018"}, {"body": "trotyl using module initializing via imports section ngmodule importing environment variable var environment require firebasewebgoogleservicesjson environment variable passing angularfiremoduleinitializeapp environment well ng build good ng build targetproduction think production mode nodemodules code compiled first environment undefined getting correct environment variable values done consolelog", "d": "2/2018"}, {"body": "trotyl anything man stuck sure angular issue", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation sounds like using importing environment incorrectly check docs", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "also type rfc discussion question", "d": "2/2018"}, {"body": "also type feature nt seem triaged see used work something wrong", "d": "2/2018"}, {"body": "igorminar actually bot triages issues right prs nt triaged automatically want change bot triages prs well think said nt right", "d": "2/2018"}, {"body": "prs triaged via pr workflow automation proposal nt issue handy thu feb pm olivier combe notifications githubcom wrote igorminar actually bot triages issues right prs nt triaged automatically want change bot triages prs well think said nt right receiving mentioned reply email directly view github mute thread", "d": "2/2018"}, {"body": "see", "d": "2/2018"}, {"body": "closed deployment already done", "d": "2/2018"}, {"body": "designed shortcut minimal requirements use normal api need control", "d": "2/2018"}, {"body": "trotyl yes understand since utility simply returning moduleref extremely useful avoid copy paste function universal possibly multiple times different libraries", "d": "2/2018"}, {"body": "mean exposing simply remove", "d": "2/2018"}, {"body": "fix", "d": "2/2018"}, {"body": "fort awesome recommends using angularfontawesome productionready suppose issue ninjaclosed", "d": "2/2018"}, {"body": "might confused raw svgjs never actually worked angular seems like app using material icons cheers", "d": "2/2018"}, {"body": "dhanarajp feature designed create new instance component reason designed invoke router events run attached guards run attached resolvers also read", "d": "2/2018"}, {"body": "thanks mlcmlapis reload component navigate url thing way achieve scenario", "d": "2/2018"}, {"body": "dhanarajp exactly suppose code runs component instantiated probably constructor design code ready rerun receiving emits could emits routerevents activatedroute observables change code able use information rerun code hooks methods component react properly route reloaded information emitted extend logic edge able reinitialize component instance initialized created beginning without creating new component instance", "d": "2/2018"}, {"body": "appears behaves expected still feel issue please provide details new issue also ask support stackoverflow using tag", "d": "2/2018"}, {"body": "exactly mean something global css styles", "d": "2/2018"}, {"body": "files either imported component", "d": "2/2018"}, {"body": "use hot module reload command changing component cssts etc files trigger partial reload", "d": "2/2018"}, {"body": "actually cli issue yerkon correct", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "nt supposed put imports like exports", "d": "2/2018"}, {"body": "work progress see", "d": "2/2018"}, {"body": "work progress", "d": "2/2018"}, {"body": "petebacondarwin please fix first work", "d": "2/2018"}, {"body": "petebacondarwin please replace ngconf april salt lake city ut", "d": "2/2018"}, {"body": "stephenfluin afraid logo image going work banner tried adding dark background make similar website fiddly small size looks weird", "d": "2/2018"}, {"body": "igorminar removed banner pr ready review also removes banner land either", "d": "2/2018"}, {"body": "stephenfluin issue get closed soon landing soon please open new issue provide correct assets thanks", "d": "2/2018"}, {"body": "petebacondarwin size need get something bigger need know need", "d": "2/2018"}, {"body": "stephenfluin created new issue please next time thanks", "d": "2/2018"}, {"body": "observables work observable like plan subscription execution plan", "d": "2/2018"}, {"body": "missed probably key points observables work cold observable invoked subscription without subscription nothing running", "d": "2/2018"}, {"body": "rxjs uses internally works btw want use httpclient instead probably want look rxjs operators avoid try following resolve issue note one possible solutions sure look probably wan na dig rxjs works nevertheless nt anything angular", "d": "2/2018"}, {"body": "closing replies spot design", "d": "2/2018"}, {"body": "pretty minor bug work around using input type maybe someone else run issue find maybe result aha moment solves bunch input bugs", "d": "2/2018"}, {"body": "rfuhrer input type set number seems convert value string trying run ngmodel statement cause issues using pipes number expecting input number string input type nt convert string decimalpipe formats ngmodel value accordingly pipe return ca nt shown input type", "d": "2/2018"}, {"body": "nt know number data type nothing angular input type try read value returned string rather number see codepen demo stackoverflow post also nice information", "d": "2/2018"}, {"body": "looks like guys right thought pipe blowing value converted passed pipe actually way around pipe passing number input comma catches spits error seeing", "d": "2/2018"}, {"body": "realappie code example confusing related angular context uncomment input change value input html see actual type input type number case type input type text", "d": "2/2018"}, {"body": "yerkon talking fact input value changes cause value become string think code example confusing offered insight inputs type number value type string thing nt touch aware retain original data type changed", "d": "2/2018"}, {"body": "think better reintroduce something similar angularjs decorator pattern angular likely different name able provide general solution since term changed decorator design patten attribute directive es decorator proposal nt know existing issue due search difficulty", "d": "2/2018"}, {"body": "trotyl yes general mechanism would ideal solution quick fix would simply export publicly extending default renderer way angular", "d": "2/2018"}, {"body": "file used older version angular service worker longer needed", "d": "2/2018"}, {"body": "may problem routing strange using nt issue maybe problem thoughts", "d": "2/2018"}, {"body": "maybe problem maybe server configuration app uses angular router must configure server return application host page indexhtml asked file", "d": "2/2018"}, {"body": "nt service worker enabled", "d": "2/2018"}, {"body": "options net errconnectionrefused tscheduletask onscheduletask tscheduletask rscheduletask rschedulemacrotask anonymous anonymous function anonymous observabletrysubscribe observablesubscribe subscribetoresult mergemapsubscriberinnersub mergemapsubscribertrynext mergemapsubscribernext subscribernext scalarobservablesubscribe observabletrysubscribe observablesubscribe mergemapoperatorcall observablesubscribe filteroperatorcall observablesubscribe mapoperatorcall observablesubscribe connectableobservableconnect refcountoperatorcall observablesubscribe anonymous handleevent callwithdebugcontext debughandleevent dispatchevent anonymous anonymous tinvoketask oninvoketask tinvoketask rruntask einvoketask p v error httperrorresponse headers httpheaders status statustext unknown error url null ok false error progressevent istrusted true lengthcomputable false loaded total type error headers httpheaders normalizednames map lazyupdate null headers map message http failure response unknown url unknown error name httperrorresponse ok falsestatus unknown error url nullproto httpresponsebase anonymous safesubscribertryorunsub safesubscribererror subscribererror subscribererror subscribererror subscribererror subjecterror subscribererror connectablesubscribererror subscribererror subscribererror subscribererror subscribererror subscribererror outersubscribernotifyerror innersubscribererror subscribererror onerror tinvoketask oninvoketask tinvoketask rruntask einvoketask p v xmlhttprequestsend async tscheduletask onscheduletask tscheduletask rscheduletask rschedulemacrotask anonymous anonymous function anonymous observabletrysubscribe observablesubscribe subscribetoresult mergemapsubscriberinnersub mergemapsubscribertrynext mergemapsubscribernext subscribernext scalarobservablesubscribe observabletrysubscribe observablesubscribe mergemapoperatorcall observablesubscribe filteroperatorcall observablesubscribe mapoperatorcall observablesubscribe connectableobservableconnect refcountoperatorcall observablesubscribe anonymous handleevent callwithdebugcontext debughandleevent dispatchevent anonymous anonymous tinvoketask oninvoketask tinvoketask rruntask einvoketask p v xhr failed loading options", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "status code indicates cors failure", "d": "2/2018"}, {"body": "alxhub long process backend makes api unavailable finishes process options response returns status code interceptor redirects app maintenance page worked angular status issue able know status sure use like", "d": "2/2018"}, {"body": "response exposed xhr fetch clientside logic help", "d": "2/2018"}, {"body": "enough discussion naming topic past sadly framework came ppl adopted angular official name afterwards developers realized name made sense start opening issues every site blog etc wrong name would never end best thing moment imo inform newcomers minimize amount new resources using wrong naming", "d": "2/2018"}, {"body": "however major publications blogs etc would useful inform misinform community", "d": "2/2018"}, {"body": "clear enough", "d": "2/2018"}, {"body": "yeah something would personally ask angular team prioritize definitely relevant things feel free contact many bloggers devs etc used wrong name advice em change though personally small contribution slapping ppl face correcting tagsquestions stackoverflow", "d": "2/2018"}, {"body": "splincode tried emailing member community like anyone else cares angular angular community people help help angular better obviously care enough file issue us encourage email stackshare ask rename entry feel free reference branding guidelines even issue let us know went thanks helping angular", "d": "2/2018"}, {"body": "igorminar yes tried write waiting answer", "d": "2/2018"}, {"body": "thank mon feb max ivanov notifications githubcom wrote igorminar yes tried write waiting answer receiving mentioned reply email directly view github mute thread", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "totally valid html syntax means attribute named without value still reported unknown attribute default schema config validation attributes compiler check applies property binding actually", "d": "2/2018"}, {"body": "valid html unlikely intentionally written way already enforce stricter subset html via compiler crazy say nt report error least warning", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "found others contributors navigation", "d": "2/2018"}, {"body": "wonder also removed", "d": "2/2018"}, {"body": "wonder real page even referenced rest site rubbish would rather removed site altogether rather blacklisting search index", "d": "2/2018"}, {"body": "fixed", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "fredgate see code posted call get data currently treated async operations controlled two possible solutions made pr help patch pr merged provide help method patch test would fine case return promise operation maybe also handle case default consider found solution make pr", "d": "2/2018"}, {"body": "yes loading google maps use jsonp loader returns promise resolve callback called jsonp thought flushmicrotasks able wait promise matter resolved understand case execute test resolve promise example wroted issue simple case show problem fact loader called component test test aware promise option possible jialipassion hope lies pull request", "d": "2/2018"}, {"body": "fredgate thought flushmicrotasks able wait promise matter resolved understand case fact although return async task async operation angular wait operations", "d": "2/2018"}, {"body": "wont fix since jsonp ca nt patched", "d": "2/2018"}, {"body": "mboughaba look example inject form control viewchild ngform query examine ngafterviewinit lifecycle hook discover children must wait tick using settimeout extract value control test validity set new value something similar use case", "d": "2/2018"}, {"body": "hi yerkon indeed similar thanks case using insert dynamic children", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "toxicable response spot", "d": "2/2018"}, {"body": "extra size result live reload scripts injected main bundle opt using obtain sizes note already sets", "d": "2/2018"}, {"body": "think resolved via chuckjaz confirm", "d": "2/2018"}, {"body": "confirmed", "d": "2/2018"}, {"body": "material reproduces subscribing directionalitychange output", "d": "2/2018"}, {"body": "example using material time toggle leaks subscription mentioned references references etc click button times take heap snapshot search matdrawercontainer", "d": "2/2018"}, {"body": "potential fix tests changes handling emittime instead subscriberhandler time hoping avoid change ca nt figure fix issue keep support case used one benefit think subscribers longer wrapped often find minorly annoying debugging inspecting stack traces alternative might using scheduler appears schedulers make completeerror async would breaking change edit realized commit changes listeners independent async events grouped per could potentially good thing less cd probably makes option breaking change probably also means tests missing", "d": "2/2018"}, {"body": "interesting really looks like bug works expected observer removed tried demo couple variants however reason nt work expected different describe tied specific subscriber like generally instance example work const new eventemitter unsubscribe consolelog const new eventemitter pipe filter gt true subscribe unsubscribe consolelog const new eventemitter val gt consolelog val unsubscribe consolelog note use chain operators unsubscribe correctly problem way works instances class includes etc right takes object wraps methods functions passes parameters calls functions wrapped another subscriber object returned nt anything original object came first place returns wrapped comes disposing rx chain original never disposed example two examples wo nt work const ee new eventemitter eepipe map gt true subscribe unsubscribe consolelog eventemitter eeobserverslength wrong simulates const subscriber new subscriber val gt subscriberadd gt consolelog subscriber disposed never called wrong const new eventemitter subscriber unsubscribe consolelog eventemitter subscriber unsubscribe holding direct nt trigger teardown function teardown function unsubscribes parent think easiest way fix keep original functionality without introducing possible breaking changes add new original one hen disposing chain properly dispose subscribe generatorornext error complete", "d": "2/2018"}, {"body": "thanks excellent bug report let discuss pr seems promising", "d": "2/2018"}, {"body": "martinsik thanks nice fix looks right", "d": "2/2018"}, {"body": "nt issue sure using caret version typescript packagejson file", "d": "2/2018"}, {"body": "existing might want delete delete folder", "d": "2/2018"}, {"body": "yeah sorry pretty sure either nt installed typescript package correctly lock file outdated", "d": "2/2018"}, {"body": "tests verify packagejson correct", "d": "2/2018"}, {"body": "removed yarnlock also nodemodules project yarn install getting error could someone point wrong packagejson please", "d": "2/2018"}, {"body": "guessing whether old global ts installation left", "d": "2/2018"}, {"body": "csentis thank reply ts would nt nodemodules folder remove folder would nt problem gone typescript yarn global typescript", "d": "2/2018"}, {"body": "global installation ts answer project folder try find rule another scenario outdated ts version installed standalone dependency globally installed angularcli use look typescript", "d": "2/2018"}, {"body": "really weird issue tested linux windows version typescript installed angular cli node os angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpackbundleanalyzer webpack ng g new myapp routingtrue run yarn see change typescript back run wo nt get warnings case cc igorminar update use warnings seems like issue", "d": "2/2018"}, {"body": "getting output npm seems work correctly environment angular cli node os linux angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpack", "d": "2/2018"}, {"body": "also getting warning", "d": "2/2018"}, {"body": "thing right possible yarn bug repro problem using yarn npm works fine steps repro mkdir test cd test yarn init manual step update packagejson using definition yarn install result", "d": "2/2018"}, {"body": "someone community help investigate see create minimal reproduction yarn maybe existing bug open yarns issue tracker", "d": "2/2018"}, {"body": "igorminar two related issues seems like already closed due update solved looked figure version yarn release candidate actually installed believe version yarn contains pr solving problem using rc warning issue case typescript dependency", "d": "2/2018"}, {"body": "awesome thanks let keep open yarn tagged latest", "d": "2/2018"}, {"body": "igorminar probs", "d": "2/2018"}, {"body": "closing angular issue", "d": "2/2018"}, {"body": "member overules owner love hierarchy joy", "d": "2/2018"}, {"body": "internal tracking", "d": "2/2018"}, {"body": "likely related", "d": "2/2018"}, {"body": "believe confusing generated web app manifest related file generated based file used web app manifest config file used recognized angular serviceworker implementation section meant provide appspecific data angular services browser docs need provide web app manifest since mostly static related app implemented eg using angular", "d": "2/2018"}, {"body": "appreciate reply gkalpak looking sample repo weekend noticed registering different manifest app registration apologize making incorrect assumption someone new serviceworker implementation thought generating web app manifest", "d": "2/2018"}, {"body": "thx opening issue anyway thought way might maybe could better job making clear docs shaunlmason welcome submit pr clarification wink cc kapunahelewong", "d": "2/2018"}, {"body": "hey shaunlmason like submit pr happy help get right file process", "d": "2/2018"}, {"body": "bad idea add todo list week", "d": "2/2018"}, {"body": "someone thumb right place ask issue tutorial example wondering whether example runs older version angular specifically component working hero null feeling indecisive nt returned picked component selector appunknownhero template message export class unknownherocomponent input hero hero get message return thishero amp amp thisheroname feeling indecisive", "d": "2/2018"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "2/2018"}, {"body": "sorry mistake nt know missed", "d": "2/2018"}, {"body": "appears issue latest cligenerated app lot differences tsconfigjson one created ng new probably already addressed issue specific project setup closing", "d": "2/2018"}, {"body": "noticed bug making button fa icons click generates new icon simplified still giving duplications html code ts forked vagrantaic plunker example show action", "d": "2/2018"}, {"body": "something like nt exist js ts use related angular", "d": "2/2018"}, {"body": "lose string minification one option const entrycomponents const key resolverresolvecomponentfactory entrycomponents key", "d": "2/2018"}, {"body": "hi entrycomponents one ngmodule define entrycomponents module assign key", "d": "2/2018"}, {"body": "thanks filing issue class name strings two problems nt preserve namespace minification safe", "d": "2/2018"}, {"body": "hi thanks know concern use static map variable appmodule export class appmodule static entrycomponents usercomponent usercomponent place use appmoduleentrycomponents argsclassname code currently manually cli automatically perfect", "d": "2/2018"}, {"body": "pattern looks odd actually sure trying nt look right mon feb pm notifications githubcom wrote hi thanks know concern use static map variable appmodule export class appmodule static entrycomponents usercomponent usercomponent place use appmoduleentrycomponents argsclassname code currently manually cli automatically perfect receiving modified openclose state reply email directly view github mute thread", "d": "2/2018"}, {"body": "important dynamic component loading currently dynamic component must depend container component import container component ts file many components inconvenient use app components dynamic loaded popular normal desktop application like c delphi etc use reflection", "d": "2/2018"}, {"body": "gkalpak foxandxss updated issue description please look position need update method incorrect override different identify one right version", "d": "2/2018"}, {"body": "website tutorial also missing angular cli config entry server", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "trotyl thx", "d": "2/2018"}, {"body": "added pr", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "regexp literals supported indeed still create regexp component pass although would indeed cool regexp literal support note templating language supposed featureparity javascript subset extra angularspecific semantics given fact parsing regexps would quite complicated esp also validate smiley guess would regexp literals remain unsupported trotyl thx pointing issue since nt explanation regexp literals supported templates leave one open feature request let see people think", "d": "2/2018"}, {"body": "let see compiler people think act compiler people long willing", "d": "2/2018"}, {"body": "think handy particular usecase pipe one handy things pipes reused multiple locations template kinda ruined make variables store regexp p know huge issue maybe nice nt think parsing regexp important finding start end", "d": "2/2018"}, {"body": "decimalpipe also nt listed builtinpipes doc jocelyndelalande pipes listed find pipes topics builtin pipes guide link", "d": "2/2018"}, {"body": "feel free submit pr like", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "please follow thanks sandangel", "d": "2/2018"}, {"body": "relateddup", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "perhaps implement", "d": "2/2018"}, {"body": "might reset form reset button component simply calls case adding helped prevent form sending update db user click reset button", "d": "2/2018"}, {"body": "kara would advice bzmillerboy added sure interested", "d": "2/2018"}, {"body": "bzmillerboy case need basic behaviour reset button stick type reset goal make sure consequences setting type reset understood beginners would read piece docs ps think need put type submit button wo nt submit form example reset button html ts output revert new eventemitter public reverted void thisrevertemit parent component taking care form catches event working edit forms therefore reset actually reset data state form dirtied example", "d": "2/2018"}, {"body": "hey sarbull would mind opening issue angularcli repo one framework", "d": "2/2018"}, {"body": "ok thanks", "d": "2/2018"}, {"body": "okay seem found work around gotten closer finding causes bug explained use wildcard route everything apparently opening auxiliary route wildcard route pick route however adding new empty route exact configuration fixes recognizes route even open example", "d": "2/2018"}, {"body": "issue bit hard follow maybe produce clearer steps reproduce go xyz url click abc link notice url changes zyx expected url cba also difference first example siblings second example front dialog child", "d": "2/2018"}, {"body": "jasonaden sorry confussion indeed bit complex narrow clear possible go click overlay expected text stay within primary outlet disappears go click overlay notice stays expected behaviour", "d": "2/2018"}, {"body": "okay got thanks clarification", "d": "2/2018"}, {"body": "bad working expected testing wrong sorry", "d": "2/2018"}, {"body": "think angular getting rejected error routing passed zonejs loosing original error tried show steps reproduce live example ngrun see get origin error seems better way router one property called might see illustration handler called global angular error handler takes place since public property set handler export class appmodule constructor private router router private errorhandler errorhandler routererrorhandler errorhandlerhandleerror custom error handler get expecting", "d": "2/2018"}, {"body": "alexzuza brilliant debug clap thanks helping gets proper fix", "d": "2/2018"}, {"body": "actually think character perfect fit unicode nobreak space prevent currency awkwardly broken nt enough space display single line", "d": "2/2018"}, {"body": "yes cldr format uses non breaking space makes sense", "d": "2/2018"}, {"body": "work intended", "d": "2/2018"}, {"body": "hi like take go bug explain get started locating files", "d": "2/2018"}, {"body": "alxhub wrote original code looking discussed offline subtle difficulties get work right ide intellisense example snippet stands always optional even constrain type properties specific strings perhaps could help testing signatures looking better proposals code found", "d": "2/2018"}, {"body": "petebacondarwin look thx", "d": "2/2018"}, {"body": "exact problem multiple routes app one lazily loaded route uses resolver get async data network slow route could take minute load use router lifecycle show spinner sync code running let say user clicks slow route wants click another route get stuck slow route resolver resolves happen slow resolver cancelled route changes route change take precedence route resolver route resolver nice idea easy use blocking use might initial app bootstrapping manually write observables component", "d": "2/2018"}, {"body": "thank feature request yes agree looking creating new apis make work add label picking relatively near future", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "update subscription still active formgroup like pattern subscriptions subscribechanges pattern formgroup needed unsbuscribe first form valid formvalue formgetrawvalue returning full form values would expect", "d": "2/2018"}, {"body": "sounds like resolved issue confirm entire form disabled formvalue formgetrawvalue match still seeing weirdness please feel free reopen minimal repro case stackblitz able reproduce using snippets provided", "d": "2/2018"}, {"body": "issue already opened somehow closed without fix seen issue", "d": "2/2018"}, {"body": "cesareian please include reproduction illustrates issue", "d": "2/2018"}, {"body": "alxhub link issue one", "d": "2/2018"}, {"body": "cesareian problem could related also case enabled server requests sent means setting server returns always request nt exist server case always result always error parsing response content html json string expected", "d": "2/2018"}, {"body": "looks like root problem please track options nt registered properly select select parent element", "d": "2/2018"}, {"body": "timruhle dot character reserved meaning", "d": "2/2018"}, {"body": "think usable change adding another condition inside check string dot exists making array want keep reserved character better documentation may needed find one small sentence word page nt explicitly say inferred", "d": "2/2018"}, {"body": "timruhle mlcmlapis mentioned dots reserved characters shorthand syntax want use dots form control names already possible using array syntax", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "ran issue today migrating code use common references old http another part project hence httpmodule httpclientmodule imported temporarily solved reverting usage common", "d": "2/2018"}, {"body": "complex business app simple heros app httpclient ng build ng build aot apps working fine ng build prod complex business app starts fine login screeen however making first httpclient call auth browser console give http call auth actually successful ng build prod noaot complex business app could start properly error simple heros app similar problem prod use ng build aot production deployment may find simple heros demo app locate demongcli stacks ng ng cli", "d": "2/2018"}, {"body": "ran problem target", "d": "2/2018"}, {"body": "cont target things become fine tried apps apparently ng build prod problem target", "d": "2/2018"}, {"body": "problem zijianhuang login auth call app targeting except using command ng build prod sourcemaps error reads line breaks file reads", "d": "2/2018"}, {"body": "stage entire sure cause angularhttpclient angular cli reported well", "d": "2/2018"}, {"body": "issue resolved using target", "d": "2/2018"}, {"body": "issue im sure removing nodemodules sets packages fixed target angular cli node os darwin angular common compiler compilercli core forms http languageservice platformbrowser platformbrowserdynamic router serviceworker angularcli angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema ngtoolswebpack schematicsangular typescript webpackdevserver webpack", "d": "2/2018"}, {"body": "problem target app compiles works target tsconfigjson typescript packagejson using angularcli angularcompiler", "d": "2/2018"}, {"body": "cli angular problem still persists", "d": "2/2018"}, {"body": "use ngtoolswebpack angulardevkitbuildoptimizer outside angularcli project hand written webpack config also confirm issue going fixes", "d": "2/2018"}, {"body": "use uglifyes compress option fix since angular angular cli problem making issue repro without angular code uglifyes could make solved sooner", "d": "2/2018"}, {"body": "trotyl thanks hint however angular cli seems way define uglifyes option angularclijson means give hint anyway report", "d": "2/2018"}, {"body": "event union type ambient dom one name correct every event type extends property like routeconfigloadstart error message clear", "d": "2/2018"}, {"body": "alrighty", "d": "2/2018"}, {"body": "start straightforward handler sends max bytes google analytics stack trace error available handler browsers going forward could try hooking angular errorhandler functionality driven zonejs capture information looking even ahead google analytics allows us send bytes per message server limiting useful information stack traces could consider offtheshelf service eg roll perhaps firebasedb", "d": "2/2018"}, {"body": "nt think working tried manually cause errors nt see pings analytics tried using following also tried call results analytics ping network tab nt see event analytics ui events", "d": "2/2018"}, {"body": "using correct ga identifier guess getting messages page navigations", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation taking quick look would change made eagerly loaded module dependency app routing module instead app module directly nt know would help way got imported level really one child", "d": "2/2018"}, {"body": "pkozlowskiopensource thanks link given static interpolation already covered test case may good design allow interpolation provide support changing value thought bug", "d": "2/2018"}, {"body": "thanks link given static interpolation class already covered test case trotyl right pkozlowskiopensource case interpolation class dynamic case covered", "d": "2/2018"}, {"body": "trotyl amazing conversation queries resolved thanks lot", "d": "2/2018"}, {"body": "tiepphan thank response although got works using providers inside component idea gives idea helps alot", "d": "2/2018"}, {"body": "hello sorry nt understand looking date separator nt see anything like cldr data nt even know would separate trying", "d": "2/2018"}, {"body": "hello date separator alike time separator divides parts date next date separator time separator nt understand exists timeseparator cldr date separator german dot america create input component dates need allow characters disallow others", "d": "2/2018"}, {"body": "ok understand better looking afraid nothing like cldr right closest thing use date formats example german formats represented use function chose want example get medium format locale want use current locale application use token matter replacing values want", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "issue used framework dependency versions repo different angular versions ended error updated repo angular version error disappeared", "d": "2/2018"}, {"body": "problem fundamentally causes typescript bring well never supported errors produced configuration considered regressions scenario support happened break several cases would broken code earlier nt hit state clearly nt support two different versions angular definitions compilation simple way around module app share copy angular instead words move packagejson one directory require separate compilation recommend using something like help build directory package package installed working improve ergonomics libraries one primary focuses release cycle however need ensure one copy angular found compiler separately compile modules using", "d": "2/2018"}, {"body": "robwormald supposed handle situations bit loss wish covered rather one giant monolithic template entirely standard form controls may within smaller reusable subcomponents bind reactive form controls without necessitating templatemonolith worth noting crafting new input components like material design might simply trying organize reusable components submission page might giant form composed multiple reusable sections example", "d": "2/2018"}, {"body": "quick conversation kara adding one needs engineering input discussion needs take place determine document needs go along", "d": "2/2018"}, {"body": "done requested reviews required difficult expected github api kinda lame reviews", "d": "2/2018"}, {"body": "error error would like see trivial change string send pr", "d": "2/2018"}, {"body": "jasonaden would take look get chance confirm accuracy happy submit pr make changes edit oops tagged stephenfluin instead per pull approve doc", "d": "2/2018"}, {"body": "imo fine", "d": "2/2018"}, {"body": "hi dubbha nikosgpet thanks bringing work clarify style guide maybe would help check new sharing ngmodules doc section briefly reason usually nt want provide services shared component create separate instances deeper info might also find helpful page providers section provider scope additionally might like singleton services gives alternative providing services nt get multiple instances recently reworked docs help make concepts clearer interested take said think reason example providing service shared module show create new instance need look closely work clarify maybe need clarify like show alternative please let know helps thank", "d": "2/2018"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "2/2018"}, {"body": "people coming google helped understand going fixed ps become example code also referenced docs appears unused field removed", "d": "2/2018"}, {"body": "dankellett try solution", "d": "2/2018"}, {"body": "hey thanks finding dankellett learned something new", "d": "2/2018"}, {"body": "rxjs introduces lettable pipeable operators deprecate old way importing example still work way fixed", "d": "2/2018"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "get errors console", "d": "2/2018"}, {"body": "sorry false positives please report tool vendor", "d": "2/2018"}, {"body": "sorry false positives please report tool vendor", "d": "2/2018"}, {"body": "okay updated branch use inputs app instead still getting size maybe errors note case bundling angular sources angular npm distribution functional test within angular repo obvious difference repro", "d": "2/2018"}, {"body": "still valid", "d": "2/2018"}, {"body": "solved buildsize keeping us honest", "d": "2/2018"}, {"body": "closing longer needed gets merged", "d": "2/2018"}, {"body": "davidsouther add repro case", "d": "2/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "2/2018"}, {"body": "good idea see possible nt hard add generated id keep mind low priority though", "d": "2/2018"}, {"body": "closed", "d": "2/2018"}, {"body": "reference duplicate", "d": "2/2018"}, {"body": "thank suggestion link stephenfluin please take look think good resource add", "d": "2/2018"}, {"body": "looks like great course thing would ask loiane update naming include version number list lists great content versions beyond well", "d": "2/2018"}, {"body": "done since updated description removed versions references also updated link thanks recommending course helderrangel stephenfluin create pr ok", "d": "2/2018"}, {"body": "loiane also bought book recommended teacher lucachaves data structure algorithms hard time learning angular course became clearer", "d": "2/2018"}, {"body": "helderrangel highly recommend creating pr add course nt one", "d": "2/2018"}, {"body": "stephenfluin angular speak portuguese", "d": "2/2018"}, {"body": "thank suggestion agree reference information usually end topic check engineering see reason first see position better thank", "d": "2/2018"}, {"body": "chuckjaz reason keep options top", "d": "2/2018"}, {"body": "jenniferfell moved", "d": "2/2018"}, {"body": "looks like recovered interestingly got alert google wrong wish nt take days alerts arrive note date crawling errors occurred around time noticed decreased traffic googlecom results", "d": "2/2018"}, {"body": "going close issue related note experimenting adding noindex dynamically preemptive measure crawling screen nt completely rendered info", "d": "2/2018"}, {"body": "encountered problem ng build prod aot buildoptimizer building modules modules active dashboardsrcassetsscssstylesscssnode moveto deprecated use container append date hash time unchanged chunks chunk kb rendered chunk polyfills kb initial rendered chunk styles kb initial rendered chunk inline kb entry rendered error chunk main initial name bundlejs read property range null typeerror read property range null enternode usersuniversoniccodesultrappdashboardnodemodules getpathinast usersuniversoniccodesultrappdashboardnodemodules getpathinast usersuniversoniccodesultrappdashboardnodemodules enternode usersuniversoniccodesultrappdashboardnodemodules getpathinast usersuniversoniccodesultrappdashboardnodemodules enternode usersuniversoniccodesultrappdashboardnodemodules getpathinast usersuniversoniccodesultrappdashboardnodemodules getpathinast usersuniversoniccodesultrappdashboardnodemodules enternode usersuniversoniccodesultrappdashboardnodemodules getpathinast usersuniversoniccodesultrappdashboardnodemodules getpathinast usersuniversoniccodesultrappdashboardnodemodules infomodulescopevariablesforeachvariable usersuniversoniccodesultrappdashboardnodemodules arrayforeach native moduleswithinfoforeachinfo usersuniversoniccodesultrappdashboardnodemodules arrayforeach native concatenatedmodulesource usersuniversoniccodesultrappdashboardnodemodules angular cli node os darwin angular animations common compiler compilercli core forms languageservice platformbrowser platformbrowserdynamic router angularcdk angularcli angularmaterial angulardevkitbuildoptimizer angulardevkitcore angulardevkitschematics ngtoolsjsonschema schematicsangular typescript webpack added still problem", "d": "2/2018"}, {"body": "ocombe update", "d": "2/2018"}, {"body": "alexabbott according ocombe pr modify tested machine works well", "d": "2/2018"}, {"body": "alexabbott also tried universonic suggestion worked bundle sizes bit larger least code compile prod mode", "d": "2/2018"}, {"body": "code posted universonic fixes issue case bundle size increased mb mb guess due impossibility applying tree shaking commonjs modules", "d": "2/2018"}, {"body": "reverting angularcommon solved problem", "d": "2/2018"}, {"body": "ocombe would like know fix released plan", "d": "2/2018"}, {"body": "build registerlocaledata called timeframe solution", "d": "2/2018"}, {"body": "problem", "d": "2/2018"}, {"body": "root issue fixed latest webpack release", "d": "2/2018"}, {"body": "resolved following pr lands angularcli week", "d": "2/2018"}, {"body": "facing problem way use changedetectorref workaround fix using provided", "d": "2/2018"}, {"body": "call ngmodel directive would make case works", "d": "2/2018"}, {"body": "seems related basically custom form control behaving like using parent component fix", "d": "2/2018"}, {"body": "admosity think angular fix rather child component third part ui vendors nt know using strategy wo nt fix triggering cd writevalue", "d": "2/2018"}, {"body": "ever figure errors testing", "d": "2/2018"}, {"body": "igorminar deliberate change angularjs also document", "d": "2/2018"}, {"body": "used", "d": "2/2018"}, {"body": "jenniferfell angularjs released change angular already published change made angularjs angular angularjs", "d": "2/2018"}, {"body": "duplicate copy amp pasted", "d": "2/2018"}, {"body": "vincecampanale would great", "d": "2/2018"}, {"body": "jenniferfell run docs locally verify formatting correct also tested selectors pkozlowskiopensource comment couple nt seem work attribute selectors element selectors pseudoselector look console stackblitz example see selectors may something wrong though", "d": "2/2018"}, {"body": "ca nt confirm error reported correctly cli typescript amp angular noticed nt propagate correctly via may problem added block files repo breaks expected case", "d": "2/2018"}, {"body": "ah perfect thanks fixed problem test project caught errors real project already issue tracking", "d": "2/2018"}, {"body": "typescript merge angular compiler options like unfortunately means default set base tsconfigjson update specific tsconfigjson files", "d": "2/2018"}, {"body": "would avoid putting formdata store vice versa biggest mistakes redux patter matter framework putting form data errors success messages store every app improve analyse first removing things redux dont overload apps unnecessary complexity best michael", "d": "2/2018"}, {"body": "biophoton interesting consider mistake use redux pattern nt pretend know perfectly using month let consider following scenario tabs component regardless possibility using routed tabs keeping tab index database know particular tab show app startup user set app starts loads tab index ngrx store multiple components subscribes store property see value one component input form field tab index form value changes dispatch store update also async call update db feels like pretty reasonable use store", "d": "2/2018"}, {"body": "update store forms save click button instead binding valuechanges store update db server might separate action response arrives guess want avoid sending requests every value change", "d": "2/2018"}, {"body": "agreed point point get value store put form without need manually subscribing", "d": "2/2018"}, {"body": "looking forward early release", "d": "2/2018"}, {"body": "super excited", "d": "2/2018"}, {"body": "bit typo still ca nt wait ivy released", "d": "2/2018"}, {"body": "want higher order components hope component composition land", "d": "2/2018"}, {"body": "sorry ask consider spam feel free remove ivy renderer aim improving runtime perf info found far new features regarding fact backward compatible anyone point toward info related ivy thank", "d": "2/2018"}, {"body": "follow rob twitter also shrinks build size eg", "d": "2/2018"}, {"body": "avatsaev new feature feature almost provide openness class factory transforming type compiled metadata runtime even hook emulated feature rather real lifecycle hooks recognized angular", "d": "2/2018"}, {"body": "avatsaev already possible understand correctly", "d": "2/2018"}, {"body": "chaosmonster mixin pattern yet generally supported aot mode like lifecycle hooks recognition issues described", "d": "2/2018"}, {"body": "chaosmaster thank link opnion looks sloppy hacky ideal would one extending another im unsure decorator inheritance behavior would override extend compose", "d": "2/2018"}, {"body": "avatsaev higherorder components feature code pattern concretely higherorder component function takes component returns new component thing really stop aot compiler support toplevel classes metadata inheritance overriding independent feature", "d": "2/2018"}, {"body": "waiting compiler cli support", "d": "2/2018"}, {"body": "target also reduce compile time runtimeaot great work keep", "d": "2/2018"}, {"body": "guskis available behind flag nondefault compile build time would greatly reduced bazel tooling eap regardless using ivy", "d": "2/2018"}, {"body": "igorminar curiosity documentation design new ivy renderer publicy available", "d": "2/2018"}, {"body": "tmair asked rob twitter", "d": "2/2018"}, {"body": "looking forward allow components dynamically load html templates prophecized", "d": "2/2018"}, {"body": "allow", "d": "2/2018"}, {"body": "karasuni mentioning another context wait bit final features brings sure really interesting even context using dynamic adhoc components", "d": "2/2018"}, {"body": "tmair blog post translating answers trotyl might helpful get rough idea ivy", "d": "2/2018"}, {"body": "herringtondarkholme found blog post informative thanks", "d": "2/2018"}, {"body": "sorry non native english speaker could nt understand half written broken english understand half ivy far ready retro compatible", "d": "2/2018"}, {"body": "still better chinese", "d": "2/2018"}, {"body": "better appendix", "d": "2/2018"}, {"body": "avatsaev compatible integration points ready original answer could ivy app achieve app ivy would look like future written broken english far better mine already hurting fine know english quite bad", "d": "2/2018"}, {"body": "ca nt wait please include dynamically load template feature similar like angular js compiler", "d": "2/2018"}, {"body": "trotyl yes agree informative thanks article nsksaisaravana need embed compiler inside bundle already called jit compilation good luck bundle sizes performance", "d": "2/2018"}, {"body": "thanks agree would cool feature similar uirouter angularjs resolves planned version router adding better observable support though allow compose data mapped components whatever delaysdependencies want", "d": "2/2018"}, {"body": "trotyl one nt work angular team intended change title open another issue inconsistent behavior", "d": "2/2018"}, {"body": "another look current spec valid usage supported please continue", "d": "2/2018"}, {"body": "far tell compiler right thing equivilent saying typescript playground produces exactly error", "d": "2/2018"}, {"body": "think end removing stableexperimental labels reality since want make upgrades smooth ca nt make painful breaking changes commonly used apis includes many apis currently parked experimental nt know still time kind late adding backlog likely", "d": "2/2018"}, {"body": "jbogarthyde fyi keep mind work api docs", "d": "2/2018"}, {"body": "closing addressed mlcmlapis still something broken angular please create new issue", "d": "2/2018"}, {"body": "fixed", "d": "2/2018"}, {"body": "seems like got issue", "d": "2/2018"}, {"body": "believe root cause would issue question posted handle routing angular service workers nt seem angular gives us way route service worker handling nonindex routes least find", "d": "2/2018"}, {"body": "error service worker usable", "d": "2/2018"}, {"body": "cli projects works fine really nt know problem", "d": "2/2018"}, {"body": "odahcam mean cli project angular able handle routing generated service worker sorry sure mean nt know problem comes sure problem people works", "d": "2/2018"}, {"body": "hi alxhub would able give input whether routing functionality older versions package know time gave talk linked w timestamp could autogenerated routing based appmodule route handling nt seem anywhere docs leads errors issue nonindex nondatagroup routes would happy attempt work guessing missed discussion future direction serviceworker package", "d": "2/2018"}, {"body": "nt know problem came saw working without cli cli everything always worked fine", "d": "2/2018"}, {"body": "getting exact error api request setup datagroups audit mentions everything perfect respect pwa service worker unable run application offline mode", "d": "2/2018"}, {"body": "testing issue recreated exact problem explained mrcroft repro ensure exists even simplest app still trying dig fetching fails", "d": "2/2018"}, {"body": "app loads json file assets startup lang pack maybe xml init cause", "d": "2/2018"}, {"body": "able figure two issue spots worked around app allow work offline wo nt go full detail given long explanation answer hosted versions angular app flag set cli list absolute urls service worker resources comparing requests resources expecting relative urls available states experience seems bet set incorrectly source code links answer duplicate well current workaround running build script give shot see works trying work pull request definitely fixed source needs investigation avoid breaking anything currently stymied setting dev environment package final note see app working offline repo using build script line see clone repo time issue still fails offline", "d": "2/2018"}, {"body": "hey jackkoppa workaround seems work problem app would refresh offline hope resolved soon", "d": "2/2018"}, {"body": "jackkoppa worked history coming angular upgrade full serviceworker support everything worked fine urls inside datagroup problem cache dynamic work offline url reconized serviceworkers cache storage ok solution jackkoppa script since use problem waiting fix", "d": "2/2018"}, {"body": "gon na test next week", "d": "2/2018"}, {"body": "using outside cli hope works package never worked build made outside cli even simple", "d": "2/2018"}, {"body": "jackkoppa works like charm thanks lot waiting actual fix", "d": "2/2018"}, {"body": "sure causing httperror also causes something new sometimes push new code app completely broken manually unregister sw know delete file sw automatically destroy scenario nt even request file sure deleting would effect sw used simply work oh man break luckily test environment order make sure things nt blow production option remove next deployment fun sw", "d": "2/2018"}, {"body": "finally took time finish one keep milestone status updated", "d": "2/2018"}, {"body": "thanks", "d": "2/2018"}, {"body": "lucasfrecia thank repro sample reason also updated version", "d": "2/2018"}, {"body": "update angular using worked", "d": "2/2018"}, {"body": "clear packages angular must upgraded together must match version support mismatched packages take care npm yarn reports unmet peer dependencies", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "hi thank bringing nt cover looking", "d": "2/2018"}, {"body": "kapunahelewong looks good", "d": "2/2018"}, {"body": "ksamuel supply repository cloned reproduces issue", "d": "2/2018"}, {"body": "found workaround worked specifically us generate routes template everything seems hardcoded cwd angular moved apologize give time close somebody stumble reopen details", "d": "2/2018"}, {"body": "related", "d": "2/2018"}, {"body": "superdoudou thanks reporting ericmartinezr thanks referencing issue close one keep one open", "d": "2/2018"}, {"body": "thank closing duplicate", "d": "2/2018"}, {"body": "duplicate see eidt duplicate", "d": "2/2018"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "2/2018"}, {"body": "searched lot ask everyone thought could help nothing solution created new project copied files main project magically errors get gone problem inheritance components still nt know made errors chuckjaz", "d": "2/2018"}, {"body": "triggering another change detection inside existing change detection possibly angular throw error like angularjs error rootscope inprog apply already progress", "d": "2/2018"}, {"body": "totally unrelated rxjs forms feature request unfortunately something wait due changes going expect take closer look forms", "d": "2/2018"}, {"body": "discussed flag mhevery considered various options came conclusion flag right thing kind special treatment angular fields would compromising type model recommendation either nt use flag better option initialize inputs default value requires type union", "d": "2/2018"}, {"body": "igorminar inputs defined constructor like example would enable proper use understood documentation may needed change detection understand change detection need started inputs available", "d": "2/2018"}, {"body": "inputs definition change time constructor receive one value use constructor unfortunately someone needs wire docs see spec instead", "d": "2/2018"}, {"body": "setting default value possible objects common case setting require set union type also forces add conditions checking null every bit code using data clearly option especially relevant classic architecture angular controller component get data via service pass data presentation component check done controller component know wo nt would crazy add conditions checking everywhere ts behavior sure option sad think really weird ts introduced feature relevantfriendly one bigger project using suppose angular wo nt affected frameworklibrary said discussion current logic let developer change hisher code even good code manage problems let typescript manage problems", "d": "2/2018"}, {"body": "mhevery seems interesting situations thanks actually would hoped parameter property would equivalent way", "d": "2/2018"}, {"body": "cyrilletuzi nt think check forces set input parameters technically marking potentially undefined make sense rather want possibility within angular say properties need set type check example nicolashenry would perfect works like way case nt care implementing setter could nt directly write", "d": "2/2018"}, {"body": "cyrilletuzi nothing forces set user component may simply chose bind input case initialize checks noninitialized case know disagree think correct behavior would nice would error user created component bind yet nt feature", "d": "2/2018"}, {"body": "could accomplished using ts somehow analyzing variable type seeing acceptable type", "d": "2/2018"}, {"body": "would really nice required default except default value like function parameters typescript quite language actual behavior yes check one parent controller checks done code good normal developer add ts specific code please typescript", "d": "2/2018"}, {"body": "considered making input viewchild viewchildren contentchild contentchilren etc injectable observables personally wanting anyway easier rxjs compositions seems like would solve large percentage strictpropertyinitialization problem would still properties initialized oninit would small enough probably happy dealing case case either adding null default needed", "d": "2/2018"}, {"body": "yes adding observables roadmap tue feb jamesschwartzkopf lt notifications githubcom wrote considered making input viewchild viewchildren contentchild contentchilren etc injectable observables personally wanting anyway easier rxjs compositions seems like would solve large percentage strictpropertyinitialization problem would still properties initialized oninit would small enough probably happy dealing case case either adding null default needed receiving mentioned reply email directly view github mute thread", "d": "2/2018"}, {"body": "progress", "d": "2/2018"}, {"body": "sebastianzarzyckies see pull request dealing issue opened days ago currently merge conflicts needs little fixing seems way", "d": "2/2018"}, {"body": "yeah see probably bit vague question really roughly expect also would interested problems handled eventually strict check turned", "d": "2/2018"}, {"body": "sebastianzarzyckies option never turned angular cli seed mean turned", "d": "2/2018"}, {"body": "comment angular supported new version typescript supported strict mode", "d": "2/2018"}, {"body": "sebastianzarzyckies please refer tracker angular cli project", "d": "2/2018"}, {"body": "nt bring cli merely referred first cyrilletuzi comment really sidequestion interested release dateestimate mostly", "d": "2/2018"}, {"body": "sebastianzarzyckies since milestone happen stable release", "d": "2/2018"}, {"body": "asking turned place likely turned google cli think assumption asking turned case answer never turned first place otherwise using cli simply enable strict checking config wo nt issue", "d": "2/2018"}, {"body": "also please note two questions different whether angular work new typescript option whether existing project still work new typescript option seamlessly latter one something angular directly helped", "d": "2/2018"}, {"body": "clear thank", "d": "2/2018"}, {"body": "seems general issue developers using angular wait weeksmonths upgrade new version typescript possible could get point angular immediately supports new version ts drops sure even feasible makes sense seems like worthwhile goal always thanks hard work", "d": "2/2018"}, {"body": "question answered unlike syntax typescript compiler api would breaking change every minor version always require extra work supporting status checked technically one use typescript command line tool jit angular project configuration would able use latest typescript immediately like already use latest typescript plunker wo angular support user need", "d": "2/2018"}, {"body": "btw discussions eluded initial question developer choose heshe wants work mode angular code support ts nt working mode wo nt option", "d": "2/2018"}, {"body": "angular code support strictpropertyinitialization ts actually nt affect makes impact whether angular supports", "d": "2/2018"}, {"body": "fair still option uglier syntax", "d": "2/2018"}, {"body": "trotyl explain previous stricter checks introduced typescript often produced errors compilation app errors angular", "d": "2/2018"}, {"body": "cyrilletuzi option applied lib information constructor implementation exists perform check", "d": "2/2018"}, {"body": "jdhines thank bringing krodyrobi chiming reached kara gotten clarification paraphrasing validation functions take value return either map errors invalid null valid name error map anything value error extra info example error includes expected length actual length however errors dont extra info example even error value false map error assumed exist indicate error nt exist error absent map errors property null help add docs help anyone runs let know anything still fuzzy find answer", "d": "2/2018"}, {"body": "scenario nt sufficient like pain properly consider validator placed group control validates fields equal ca nt place control notified one state changes issue order trigger lose posible errors validators need juggle around practically hack minimal example remove ifs either add error results state errors first place slice nt even considered possibility racing async validator fairly new angular nt used one yet sample repo using sync validators nt concrete example last part yet know sync validators ran first async ones one could imagine something similar validator async set plausible would nice means remove error easier understand edge case would greatly benefit group validations edit guess return new error like normal validator issues error attached control wo nt display properly group error displayed hacking css coresponding field searching custom error handler implementation seems hacky", "d": "2/2018"}, {"body": "think already implemented mhevery", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "believe working expected would need look know sure means siblings means child nt know intuitive basically first example using inside parenthesis denotation siblings slash vs missing slash works root recursive words let know helps debug anything mark bug look", "d": "2/2018"}, {"body": "jasonaden yes helps least understanding sure considered bug first place current router implementation works regarding routerlink directive siblingschilds close one file another issue something inconvenient pops", "d": "2/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked", "d": "2/2018"}, {"body": "sorry reported issues require reproduction issue suggest using stackblitz plunker github issue persists please create reproduction using one links describe difference expected current behavior new issue reproduction linked also would seem expected css would attached components aot code would load along component", "d": "2/2018"}, {"body": "solved restructuring css code", "d": "2/2018"}, {"body": "closing repro", "d": "2/2018"}, {"body": "thanks looks like duplicate", "d": "2/2018"}, {"body": "angular issue actually issue want store token send server via ajax example store token using cookies maybe use later server force authentication firebase example check authentication status token like", "d": "2/2018"}, {"body": "thank much jnizet huge help edit jenniferfell need checked look pretty straightforward", "d": "2/2018"}, {"body": "bit cli generates injectable nt want service class", "d": "2/2018"}, {"body": "patrickmichalina interested loader snippet works dynamic imports implemented simple string paths", "d": "2/2018"}, {"body": "believe resolved via misunderstood please file new issue thanks", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "gkalpak know tech component areaowner might go", "d": "2/2018"}, {"body": "caeruskaru approach similar would", "d": "2/2018"}, {"body": "nt think necessary follow suggestion get desired behavior responsibility platformserver specific usecase tell lack attention issue widely needed usecase", "d": "2/2018"}, {"body": "relates styles could compiled separate files work client server rendering", "d": "2/2018"}, {"body": "still issue angular angularjs router parses uri component trycatch thus ignoring invalid parts url angular nt trycatch decodeuricomponent throws like app stops functioning", "d": "2/2018"}, {"body": "updated working", "d": "2/2018"}, {"body": "angular rly", "d": "2/2018"}, {"body": "maximelafarie yes", "d": "2/2018"}, {"body": "expected semantics imaging directive called listen event call handler used like case changed right question comes normal directive normal handler runs handler parent template opposite result suggest execution order depend literal attribute order directive complex selector multiple attributes", "d": "2/2018"}, {"body": "discussed person igorminar want understand better error visible bazel angular users ca nt see difference", "d": "2/2018"}, {"body": "fyi fix moved nt landed yet", "d": "2/2018"}, {"body": "kara could finally found solution problem update angular material way material create new project recreate error several tests found file packagejson different versions libraries mention replace packagejson nodemodules folder everything working think main problem could find official way update new releases way found searching google error took lot time also know people problem perhaps docs lacking info particular topic update thanks lot time patience", "d": "2/2018"}, {"body": "martinaguilar update node packages move mouse pointer package name info latest available version showed also use tools like node package installed globally check updates", "d": "2/2018"}, {"body": "mlcmlapis new version angular released update angular npm dependencies update dependencies remain never problems running ng serve even warning problem building production mode made application work strange behavior", "d": "2/2018"}, {"body": "nkdweb thanks", "d": "2/2018"}, {"body": "thank dementey fix beat pr finish line close outstanding questions feel free tag", "d": "2/2018"}, {"body": "happening asked simple comment fixing two bugs answer personal project preferences add feel free close issue without explanation", "d": "2/2018"}, {"body": "alippai bot helping us categorize issues based current state compiler currently fully incremental architectural constraints removing new renderer call ivy however investigate change really improves current situation need chuckjaz take look pr one needs approve change piece code sorry delay see chuck take quick look next week", "d": "2/2018"}, {"body": "thank detailed answer happy help nt know proceed something mind feel free ask updates ivy really looks good keep good work ps wanted say project could use pm intern helps us whether contribute chuck work amazing", "d": "2/2018"}, {"body": "trying automate team contributor workflows hoping prs like get better attention faster without us reviewing pr many times hopes updated tests pass thanks patient sun feb \u00e1d\u00e1m lippai notifications githubcom wrote thank detailed answer happy help nt know proceed something mind feel free ask updates ivy really looks good keep good work ps wanted say project could use pm intern helps us whether contribute chuck work amazing sun feb igor minar notifications githubcom wrote alippai bot helping us categorize issues based current state compiler currently fully incremental architectural constraints removing new renderer call ivy however investigate change really improves current situation need chuckjaz take look pr one needs approve change piece code sorry delay see chuck take quick look next week receiving mentioned reply email directly view github receiving mentioned reply email directly view github mute thread", "d": "2/2018"}, {"body": "igorminar close firebase redirects pr landed", "d": "2/2018"}, {"body": "issue still exists let wait pages disappear search results", "d": "2/2018"}, {"body": "redirects seem working found results", "d": "2/2018"}, {"body": "redirects never landed stable making pr", "d": "2/2018"}, {"body": "links gone going close thanks petebacondarwin", "d": "2/2018"}, {"body": "ok checked working thanks lot", "d": "2/2018"}, {"body": "angular sw works browsers support service workers includes application integration eg service sws unsupported current browser sw script never downloaded active attempts interact sw calling return rejected promises passive attempts listen sw simply never trigger never emit", "d": "2/2018"}, {"body": "thanks clarifying", "d": "2/2018"}, {"body": "big concern operator operator different opposite operators", "d": "2/2018"}, {"body": "absolutely right updated pr title prevent confusion", "d": "2/2018"}, {"body": "tsconfigjson change target polyfilllsts uncomment import items comment requires following polyfills work", "d": "2/2018"}, {"body": "toxicable lazy load module route include core module component please live example lazy load module route able use core module components directive create shell component use creating child route lazyloaded module navigate lazy load module said shell component exist ngmodule please explain happened try import core module lazy load module error shown import core module app module", "d": "2/2018"}, {"body": "following style guide confusion things providable mainly services imported root things declarable components pipes directives import many times", "d": "2/2018"}, {"body": "solution saved life case works import injectable angularcore import httpevent httperrorresponse httpinterceptor httphandler httprequest angularcommon import router angularrouter import observable rxjsobservable import rxjsaddobservablethrow import rxjsaddoperatorcatch injectable export class errorinterceptor implements httpinterceptor constructor private router router intercept req httprequest next httphandler observable return nexthandle req catch err httperrorresponse gt thisrouterurl login amp amp errstatus thisrouternavigate logout return observablethrow err", "d": "2/2018"}, {"body": "moving api template testing branch", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "impossible event could many receiver possible like get returned values order", "d": "2/2018"}, {"body": "ca nt simply pass returned value child like parent cmp dosomething thisvaluetothechild thinking loud", "d": "2/2018"}, {"body": "issue shifting time different modules could rooted angular packages transpired bundled happened whenever would inject router application replicate issue injecting browseranimationsmodule configuring component animations array router however works configured", "d": "2/2018"}, {"body": "ok traced issue angular far either injected app results blocking features apps loading issue effected router prevented routes resolving alxhub jasonaden broken throughout please get fix released im sure enterprise users thankful", "d": "2/2018"}, {"body": "okay thanks additional clarification please specify version worked also alert matsko one regards animations", "d": "2/2018"}, {"body": "jasonaden version worked unclear devote time today figure may far back", "d": "2/2018"}, {"body": "hello steveblue possible stackblitz reproduction would help find exact reason causing error", "d": "2/2018"}, {"body": "matsko use case possible stackblitz doesnt support needed reproduce scaffold app try viewing app appmodulets works import ngmodule angularcore import commonmodule angularcommon import browsermodule angularplatformbrowser import appcomponent appcomponent ngmodule imports browsermodule commonmodule declarations appcomponent bootstrap appcomponent export class appmodule angular modules effected far ive traced issue routermodule browseranimationsmodule formsmodule try injecting module appmodule like routermodule see issue moment give application routeconfig browseranimationsmodule injected appmodule moment component includes animations configuration issue appears developer tools console tried shimsforiejs even though nt recommended complete corejs library ca nt find shim works believe problem either certain coding practices packages codebase transpiled build process may come calls super handled transpilation process best guess want know weird part look developer tools console outputs type objectapply typeerror object nt support property method apply objectapply function apply native code add watch issue another repo may clue go back years search results find similar issue", "d": "2/2018"}, {"body": "elvisfernandes thanks help work workaround missed purpose watchauto thanks help", "d": "2/2018"}, {"body": "tested newer version cli still issue resolved followed steps mentioned link upgrade", "d": "2/2018"}, {"body": "ameya first version including fix check cli releases log", "d": "2/2018"}, {"body": "trotyl add simply changing packagejson cli version followed npm install npm install savedev angularcli latest getting adding similar issue", "d": "2/2018"}, {"body": "ameya npm support question made angular cli beta versions always marked stable versions already released", "d": "2/2018"}, {"body": "reason deserializing dates central place maybe one provides even option httpclient turn date deserialization date objects", "d": "2/2018"}, {"body": "say mvp allow reviver specified allow custom deserialization general everyone want deserialize dates javascript date object people may want deserialize party representations moment jsjoda better suited usecases handling timezones date arithmetic said turn date deserialization date objects would first define date since json standard seem specify format dates several think iso people probably want maybe angular could provide reviver function could configure even flag iso standard easily setup reviver using might something better solved example documentation related configuring custom revivers", "d": "2/2018"}, {"body": "say mvp allow reviver specified totally agree making reviver able specified base everthing would sugarcoating would easier use predefined reviver functions common usecases like date serialization could similar predefined formats short medium also define custom formats mdyy h mm several think iso people probably want iso would fulfill needs", "d": "2/2018"}, {"body": "close favor", "d": "2/2018"}, {"body": "igorminar sorry think confused says closed issue favor issue maybe familiar new system", "d": "2/2018"}, {"body": "ohh meant never mind", "d": "2/2018"}, {"body": "facing problem httpclientget hit error pass headers", "d": "2/2018"}, {"body": "hi everyone force backend add accesscontrolalloworigin header verify response message accesscontrolalloworigin longer displayed httperrorresponse status always return instead correct status returned server", "d": "2/2018"}, {"body": "aubrym using angular probably", "d": "2/2018"}, {"body": "aholbreich still cors issue simulate case even tool totally outside angular get also", "d": "2/2018"}, {"body": "hey ocombe sorry delay make little repro stackblitz using string date empty string date null value invalid js date object hopes help", "d": "2/2018"}, {"body": "fixed", "d": "2/2018"}, {"body": "hitting issue one apps well service worker silently fails register despite configuration apps work using angularfire unsure cause pointers wait complete solution merged", "d": "2/2018"}, {"body": "btroncone maybe somewhere interval long running timeout nevertheless fix register service worker check production browser supports sw sw currently active", "d": "2/2018"}, {"body": "btroncone created pr support seannicholas said register", "d": "2/2018"}, {"body": "seannicholas jialipassion thanks point register could share snippet manually registering w checks appreciate help", "d": "2/2018"}, {"body": "btroncone sure serviceworkerservice injected main component code service constructor", "d": "2/2018"}, {"body": "seannicholas thanks ton", "d": "2/2018"}, {"body": "seannicholas nt mind asking managing registering available updates without use service", "d": "2/2018"}, {"body": "btroncone using describes docs still use registering sw works expected", "d": "2/2018"}, {"body": "seannicholas still include main app module rest services even though registration script fails rest works perfectly thanks help", "d": "2/2018"}, {"body": "btroncone correct", "d": "2/2018"}, {"body": "think called pseudoevent number places far tell explicitly defined explained docs asks docs maybe upvote watch one", "d": "2/2018"}, {"body": "kemsky problem component inheritance extend single class want provide different features need bundled viable longterm solution although using work around lack lifecycle observables", "d": "2/2018"}, {"body": "ffs thank", "d": "2/2018"}, {"body": "fixed", "d": "2/2018"}, {"body": "mlcmlapis correct attempt dynamic compilation components inside aot compiled app successful reading comments make sense compiler tricks using nt deepenough understanding aspect angular yet manage come working solution would mind sharing complete example try follow compiler configs described would debt years come since technique fundamental project recently assigned create reactive model forms runtime based templates data coming backend atm working solution based jit fails soon try build app aot", "d": "2/2018"}, {"body": "facing problem dynamic templates coming backend solution working aot enabled", "d": "2/2018"}, {"body": "torqode setting turns aot effectively got usual jit build", "d": "2/2018"}, {"body": "cec yes code app fully compiled aot app able use also jit compiler see necessary load also dynamically compile adhoc html template strings nt matter could even result request cms produce adhoc module components actual limitation cli feature issue removing decorators default behavior hack cli code let decorators place nt try go use different way compile bundle app using ngc compiler depends limited using cli whether hack using different way compile app without problem", "d": "2/2018"}, {"body": "mlcmlapis also work aot compiled lazy loaded modules angular router knows treat lazy loaded modules aot lazy loaded modules also jit compiled modulescomponents able get angular aot app running jit components resulted broken lazy loading aot modules", "d": "2/2018"}, {"body": "angular router knows treat lazy loaded modules aot mattduch angular router nt know toolingspecific", "d": "2/2018"}, {"body": "mattduch nt try combination specifically two variants mean module load jit compiler could probably worth try even prepare example github demonstrate combinations possibilities", "d": "2/2018"}, {"body": "mlcmlapis app dynamic jit table component column definitions dynamic configured database modifiable users runtime component shows root app lazy loaded modules added jit compiler root app approach mentioned able get main app running module loader looks lazymod lazymod instead lazymodngfactory lazymodngfactory different conversation mentioned systemjsngmoduleloader ngmodulefactoryloader detects angular compiler available di yes supposes jit module wanted loaded appmymodule mymodule loads mymodulejs supposes aot module wanted mymodulengfactoryjs loaded automatically sounds like missing piece tell ngmodulefactoryloader even though jit compiler treat lazymod aot app angular running production last months using approach wondering suggestions recommendations alter app angular work", "d": "2/2018"}, {"body": "mattduch yes right necessary try think could work sounds like missing piece tell ngmodulefactoryloader even though jit compiler treat lazymod aot probably difference angular point view everything depends ngmodulefactoryloader whether believes want app angular running production last months using approach wondering suggestions recommendations alter app angular work", "d": "2/2018"}, {"body": "mlcmlapis understand create component want provide jit compiler questions though define compileroptions reference appmodule maints platformbrowserdynamic using platformbrowser currently reading docs watching presentations tobias bosch angular compiler better understand problem source recommend get closer level expertise topic", "d": "2/2018"}, {"body": "cec yes following import lines added also exported function following providers place following method place want addjitcomponent vc viewcontainerref template string componentref compiler commonmodule ngmoduleconstructor private compiler compiler aot app fact bootstrap app using maints platformbrowserdynamic using platformbrowser", "d": "2/2018"}, {"body": "hi mlcmlapis thought compileroptions defined ide nt suggesting importing able compile app calling ngc directly works import however output compiler ends ts sources accept config proper git ignores tried serve app via local apache install ng serve would jit compilation however indexhtml contain references bundle files guess missing big step webpack maybe unclear development workflow use approach calling directly call ngc webpack manually check app repeat live reload dynamic recompilation file changes possible workflow thanks help seriously", "d": "2/2018"}, {"body": "cec using bundling path using cli webpack redirect output ngc different directory mix sources steps modifying ts sources ngc compilation first step new aot build always copying source files separate directory ngc compilation creating bundles solution based systemjs builder public use local apache work even without bundles loading necessary js ngfactoryjs files need import platformbrowser angularplatformbrowser import enableprodmode angularcore import appmodulengfactory appmodulengfactory enableprodmode platformbrowser bootstrapmodulefactory appmodulengfactory see simple example systemjs loader original purpose demo bit different nt matter steve belovarich maintaining building solution cli bundling angular web app library aot compiler rollup closure compiler also nt use cli webpack would also way compile bundle angular app need decorators removed also aot build point steveblue angular gitter channel frequently certainly helps set remove decorators", "d": "2/2018"}, {"body": "mlcmlapis custom build toolchain nonstandard one feasible us moment first build app later use approach like rollup part deployment thank helping", "d": "2/2018"}, {"body": "cec yep also think fastest way feature issue possibility optional removing decorators cli ocombe opinion member angular core team recommend contact discuss best way go", "d": "2/2018"}, {"body": "alexeagle already started experimenting renovate angulartsickle pilot angularangular", "d": "2/2018"}, {"body": "ready rarkins wrote special onboarding doc us igorminar need find time", "d": "2/2018"}, {"body": "discussed person ocombe igorminar would like start renovate solve multirepo ci problem specific limited capacity angularangular folder repo two packagejson files two workspace files bazel examples one latest snapshots dependencies latest release dependencies probably start one integrationfoo folder start configure renovate update two packagejson files two workspace files probably updating particular whitelisted deps care projects control nt need renovate automerge green set bot want nonrenovate prs also automerge green change integration test runner kicks test n times packagejson file basically gives us test matrix integration scenario x releaseddeps snapshotdeps user prs angular red nt work kinds deps renovate prs red deps broke angular code", "d": "2/2018"}, {"body": "cc gregmagolan use catch many rulesnodejs rulestypescript regressions", "d": "2/2018"}, {"body": "one latest snapshots dependencies understand flow correctly new code lands master snapshot build pushed renovate submit pr back updating integrations point new commit exactly would specify latest snaphot notice seems branches tags sure know namingtagging convention use change integration test runner kicks test n times packagejson file packagejson files within separate subdirectories within particular integration folder", "d": "2/2018"}, {"body": "matsko update", "d": "2/2018"}, {"body": "thinking unresolved promise pending async task maybe yes async function call waiting unresolved promise test passes find highly dangerous typescript async work async inject myservice service myservice gt async gt let nonresolvingpromise new promise resolve reject gt never call resolve reject await nonresolvingpromise", "d": "2/2018"}, {"body": "kenborge gkalpak next version issue fixed test cases javascript async work async inject myservice service myservice gt async gt let nonresolvingpromise new promise resolve reject gt never call resolve reject await nonresolvingpromise work expected", "d": "2/2018"}, {"body": "jialipassion awesome great news make lot tests foolproof", "d": "2/2018"}, {"body": "trying achieve", "d": "2/2018"}, {"body": "exactly want achieve problem want recreate components attach amp dettach different containers right bug kind sad assigned yet im scared gona spend lots time backlog right created workaround creating ngfor directive solves issue basically one line code missing sure angular accepts prs solved issue internally would better available next public release", "d": "2/2018"}, {"body": "exactly plnkr right detach one viewcontainerref insert another one without destroying componentview mean time subtle difference usecase unaware use approach software customizable user interface user reshuffle resize components workspaces call fact tree nesting components possible removing component example moving detach view save componentref node component represents node gets inserted somewhere else tree oninit inserts saved hostview new wrapper component", "d": "2/2018"}, {"body": "oh yes works basic stuff list components ngfor moving components around ngfor approach breaks host parent references longer maintained btw code approach implement directive", "d": "2/2018"}, {"body": "ah see coul nt get title expected behavior", "d": "2/2018"}, {"body": "duplicate better close one since old", "d": "2/2018"}, {"body": "jamesthurley sais fixed version works fine", "d": "2/2018"}, {"body": "thank pedrovk", "d": "2/2018"}, {"body": "case anyone stumbles issue want animations play time simply need use basically plunker linked first post replace following", "d": "2/2018"}, {"body": "getting decent error message would gold though", "d": "2/2018"}, {"body": "graemehyde works thank", "d": "2/2018"}, {"body": "workaround like wrap library components extend behavior however issue pretty much prevents example usage library components html name elementname labels elementlabels status elementstatus html nodes name nodename labels nodelabels status nodestatus contentchildrencdktable failing find children", "d": "2/2018"}, {"body": "subscribe", "d": "2/2018"}, {"body": "floreks read", "d": "2/2018"}, {"body": "unless library specifies differently using option make work wrappers cases used allow option wo nt traverse multiple componentsdirectives levels also", "d": "2/2018"}, {"body": "floreks necessary wait till moment logic modified possible expect releasing guess suppose also combinations considered cover thema", "d": "2/2018"}, {"body": "understand still open issue wondering workaround right could try make work wait fix", "d": "2/2018"}, {"body": "floreks suppose way use pattern selfregister components would able use need", "d": "2/2018"}, {"body": "wo nt help library function crashes find required children using ca nt really modify external code", "d": "2/2018"}, {"body": "floreks ah understand chance completely different way lib guess", "d": "2/2018"}, {"body": "looking forward see type guard support languageservice well simple use case typescript interface animal type fish bird interface fish extends animal type fish foo string interface bird extends animal type fish bar string component class mycomponent animal animal isfish animal animal animal fish return animaltype fish isbird animal animal animal bird return animaltype bird use case use case use cases covered", "d": "2/2018"}, {"body": "expression eg event handler note works angularjs", "d": "2/2018"}, {"body": "im trentonadams syntax certainly gives impression data returned would type specified comments get impression new syntax nt actually anything correct", "d": "2/2018"}, {"body": "juliencap progress running today using chrome browser lg phone angular service worker edit thing service worker", "d": "2/2018"}, {"body": "looking angularclijson moved call service worker serviceworker true environments details move sounds little better sure reason also noticed pwa open severals softwares samsung internet google chrome twitter example time create behavior described kill softwares example closing google chrome twitter keep samsung internet work better still confuse service worker yet supported iphone pwa works good finally also good news facebook app samsung phone using tests latest update f errfailed page app tryed open link pwa ok", "d": "2/2018"}, {"body": "issue angular service worker samsung internet browser get following error uncaught promise invalidstateerror failed execute waituntil extendableevent event handler already finished site nt load properly delete service worker loads ok next page refresh broken chrome firefox phone work fine", "d": "2/2018"}, {"body": "jongear example using resjson old http module httpclient", "d": "2/2018"}, {"body": "jenniferfell one need looked closely see docs impacted", "d": "2/2018"}, {"body": "would like add document samples describe relationship currently making document new feature jasmine support mocha support promisethen support released next version", "d": "2/2018"}, {"body": "would helpful testing mode", "d": "2/2018"}, {"body": "going happen reasonably near future want people implement currency code display", "d": "2/2018"}, {"body": "todo list week sure going merged", "d": "2/2018"}, {"body": "fixed open api track progress", "d": "2/2018"}, {"body": "need change little bit routes one child routes named course indexcomponent also two outlets one named one without name", "d": "2/2018"}, {"body": "current behavior confusingly surprising undocumented nt feel correct please consider relabeling issue bug", "d": "2/2018"}, {"body": "brilliant hope angular fixes way fallback outlets", "d": "2/2018"}, {"body": "links reference original plunk issue relevant question", "d": "2/2018"}, {"body": "turns already done see", "d": "2/2018"}, {"body": "interested know resolved running issue response stack overflow question either", "d": "2/2018"}, {"body": "hello problem resolved noticed problem appears jit compilation production aot build everything works fine window password save proposal shown problem somewhere annoying developers", "d": "2/2018"}, {"body": "maximusk bond parent change detector angular checks parent component decides whether run change detection child component scenario parent component set child component without performing async operation like without parent works expected nt update due modularity angular possible distributed teams varying skillsets way change detection currently every dev would code component used parent easy developing normally example examples find issue", "d": "2/2018"}, {"body": "admosity without onpush parent works expected nt update yeah idea disable checks entire tree components responsibility parent component understand concern someone developing child component ca nt know component used inside parent component without changes change detection mechanism coming maybe mechanism specific situations case always possible inject call", "d": "2/2018"}, {"body": "thanks maximusk move forward assumption make safety precaution develop way future correct assumption setting app component essentially sets components globally play", "d": "2/2018"}, {"body": "admosity correct assumption setting onpush app component essentially sets components onpush globally play suggest watch talk read article change detection setting app component simply prevents change detection mechanism checking app component children unless input bindings specified child components changed", "d": "2/2018"}, {"body": "thanks personally shared article many times one best explanations change detection around think feels like break encapsulation think zonejs patched events check originator change detection request set component automatically", "d": "2/2018"}, {"body": "mhevery could please consider reopening issue fulltemplatetypecheck compiler option true expected could nt assign incompatible type property binding componentdirective unsafe behavior lead numerous errors runtime real pain large application many components", "d": "2/2018"}, {"body": "wow hope finally works", "d": "2/2018"}, {"body": "ask backlog curated", "d": "2/2018"}, {"body": "update xsrftoken nonhttponly angular still set xxsrftoken", "d": "2/2018"}, {"body": "let also share quick idea one could use mobx computed properties basic idea install first getter call cache calculated value fires curious guys think additional decorator typescript function optimize obj key desc const get desc let cached let disposer descget function disposer consolelog autorun init disposer autorun gt cached getcall consolelog cached cached consolelog getter cached return cached", "d": "2/2018"}, {"body": "ribizli example added computed optimize decorators mobx nt need additional decorator computed decorator already caching", "d": "2/2018"}, {"body": "anjmao need kickin observation decorator nt use directive template", "d": "2/2018"}, {"body": "jasonaden concerns making pull request", "d": "2/2018"}, {"body": "example code self explaining bugs opened really helps add explanation", "d": "2/2018"}, {"body": "made assumption child component would use parent would set parent automatically child also docs however clearly states always default", "d": "2/2018"}, {"body": "actual issue parent component child component styles parent case plunker make child blue case parent child child become blue changed plunker bit readable", "d": "2/2018"}, {"body": "fixed already", "d": "2/2018"}, {"body": "thanks", "d": "2/2018"}, {"body": "get functionality group created separate npm task creating service worker supports strategy well bit configuration also custom sw authoring though really liked angular setup easy get started workbox one gave group extra configuration really needed looking forward seeing libraries grow learn future", "d": "2/2018"}, {"body": "hi error fixed newbie spend hour depbugging commenting messageservice", "d": "2/2018"}, {"body": "like said waiting pull request", "d": "2/2018"}, {"body": "kindly ask timeline fixed", "d": "2/2018"}, {"body": "import httpclientmodule app module list imports import httpclientmodule angularcommon imports httpclientmodule", "d": "2/2018"}, {"body": "chakrapanikulkarni solution works imported order mentioned otherwise end getting errors really weird", "d": "2/2018"}, {"body": "toxicable nt understand big purpose use observables widely angular pick one one treeshaking work better case", "d": "2/2018"}, {"body": "fetis yes otherwise complete rxjs added bundle", "d": "2/2018"}, {"body": "mlcmlapis big overhead see gon na change import format rxjs alpha import observable subject replaysubject rxjs import range rxjscreate import map filter switchmap rxjsoperators rxjs import observable rxjsobservable import rxjsaddobservableof import rxjsaddoperatormap looks like problem import operatorbyoperator", "d": "2/2018"}, {"body": "already tracked rxjs requires webpack support", "d": "2/2018"}, {"body": "trotyl question relates end applications rather angular code imagine application style imports new angular version big refactoring renaming going provide tool part ngcli", "d": "2/2018"}, {"body": "fetis angular specific question rxjs support questions better raised channels", "d": "2/2018"}, {"body": "trotyl think still angular specific import style dictated ngcli", "d": "2/2018"}, {"body": "fetis angular cli nt forbid changing actually everyone change first according needs real works always updates default one project could already outdated created older angular cli version", "d": "2/2018"}, {"body": "trotyl angular team perspective make migration manually assume individual imports every operator", "d": "2/2018"}, {"body": "fetis ask angular team raise proper doc request knowledge angular would still support rxjs style import breaking change angular side like upgrade rxjs version like rxjs project", "d": "2/2018"}, {"body": "ionic serve", "d": "2/2018"}, {"body": "apart solutions think removing navctrl service also helps seems conflict navctrl component serviceprovider", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "solution add service providers componentts", "d": "2/2018"}, {"body": "import httpmodule angular add httpmodule imports imports httpmodule browsermodule ionicmoduleforroot myapp fixes problem also import import httpclientmodule angularcommon convenience sake", "d": "2/2018"}, {"body": "need provide service module component declared ngmodule imports sharedmodule routermoduleforchild path login component logincomponent declarations logincomponent providers authservice referencing component injecting constructor make sure service injectable decorator", "d": "2/2018"}, {"body": "uncaught promise error occurs import required dependency got error error uncaught promise error staticinjectorerror angularfireauth import angularfiredatabasemodule lt database angularfireauthmodule lt angularauth import angularfiremodule angularfiredatabase import angularfiredatabasemodule import angularfiredatabase firebaseobjectobservable angularfireauth import angularfireauthmodule import angularfireauth ngmodule imports angularfiremoduleinitializeapp authdomain databaseurl storagebucket messagingsenderid angularfiredatabasemodule angularfireauthmodule", "d": "2/2018"}, {"body": "relates", "d": "2/2018"}, {"body": "trying solved problem remember include import constructor public zone ngzone", "d": "2/2018"}, {"body": "pavansinghx thank solution solved problem project", "d": "2/2018"}, {"body": "pavansinghx wanted say thanks works", "d": "2/2018"}, {"body": "also problem combination global error handler unhandled errors component throwing unhandled error error handler tries route errorcomponent appends errormessage remove browseranimationsmodule routing works normally worked around feels like hack save using work around problem getting fixed could usage cause nasty side effect", "d": "2/2018"}, {"body": "really still nt understand case able solve issue adding include property tsconfigjson adding maints polyfillsts include list", "d": "2/2018"}, {"body": "fixed", "d": "2/2018"}, {"body": "would better injecting ngcontrol cva programmatically setting value kara even direct access ngcontrol would still need way forward options used control initially updated", "d": "2/2018"}, {"body": "still working working lazy loaded module also routes lazy application please help", "d": "2/2018"}, {"body": "tusharbalar read", "d": "2/2018"}, {"body": "kirillgroshkov solution applied context angular bash ls nodemodules angular common compiler compilercli core forms platformbrowser platformbrowserdynamic ls nodemodules angularcompilercli indexdts indexjs indexjsmap packagejson readmemd src hints", "d": "2/2018"}, {"body": "daixtrose solution used project seems nt use cause ca nt see nodemodules compile angular project anyway dig deeper find lines need add compiler script make work good luck ps lines", "d": "2/2018"}, {"body": "anyone else looking solution found solution navigating definition http handler used argument constructor httpclient used visual studio code navigate definition httpclient navigated definition httphandler found look commentary httpbackend might notice important message injected dispatches requests directly backend without going interceptor chain got working properly like import injectable angularcore import httpclient httpbackend angularcommon import observable rxjsobservable injectable export class authservice httpbackend injected angular indeed call interceptor", "d": "2/2018"}, {"body": "thank much last post exactly scenario needed exclude global bearer token interceptor called end point requesting token thanks", "d": "2/2018"}, {"body": "closing action items tracked internally cc ocombe", "d": "2/2018"}, {"body": "ocombe estimation runtime traduction released", "d": "2/2018"}, {"body": "anything wrong", "d": "2/2018"}, {"body": "use uglifyjsplugin rather uglifyjswebpackplugin webpack one fixes regex issue new uglifyjsplugin uglifyoptions false mangle true output asciionly true comments false beautify false webkit true", "d": "2/2018"}, {"body": "saw thing waiting seconds started happen commented component css files imported bootstrap removing comments component css files regexp replace", "d": "2/2018"}, {"body": "noticed problem aot build devtime compiler using cropped commented large number css rules step compile appears strip comments whitespace leading insane regex replace time backtracking bug collapsing extra whitespace running replace seems sidestep problem patching angular compiler change reduced aot build time tiny test project", "d": "2/2018"}, {"body": "nodejs script demonstrates execution time increases whitespace added", "d": "2/2018"}, {"body": "febner deadalusai thanks reports especially repro deadalusai would interested making pr fix proposed", "d": "2/2018"}, {"body": "filipesilva opened", "d": "2/2018"}, {"body": "deadalusai great thank", "d": "2/2018"}, {"body": "started happen accidentially imported commonmodule instead browsermodule main app module middle mass refactoring easy fail considering may include anything anywhere nothing required something wrong errors get usually obscure hope get better soon", "d": "2/2018"}, {"body": "guys importing angularfirebasedatabase break old code see guys code solutions worked give shot tell us works waiting better solution get going least replace angularfirebasedatabase imports essentially adding deprecated hope helps", "d": "2/2018"}, {"body": "hi nt know add preservesymlinks", "d": "2/2018"}, {"body": "helllo hmm regards error using services please make sure imported appmodulets", "d": "2/2018"}, {"body": "thanks vincentalibert works", "d": "2/2018"}, {"body": "would expect nt need import httpmodule anymore since mentioned", "d": "2/2018"}, {"body": "caused angular party libraries", "d": "2/2018"}, {"body": "im nativescript angualr ran issue today cant recall stopped working seemed appear nowhere resolved took look groceries tutorial added module appmodulets import ngmodule noerrorsschema angularcore import nativescriptmodule nativescriptangularnativescriptmodule import nativescriptroutermodule nativescriptangularrouter import appcomponent appcomponent import loginservice sharedloginloginservice import routes navigatablecomponents approuting uncomment add ngmodule imports need use twoway binding import nativescriptformsmodule nativescriptangularforms uncomment add ngmodule imports need use http wrapper import nativescripthttpmodule nativescriptangular lt ngmodule bootstrap appcomponent imports nativescriptmodule nativescriptroutermodule nativescriptroutermoduleforroot routes nativescriptformsmodule nativescripthttpmodule lt declarations appcomponent navigatablecomponents providers loginservice pass application module bootstrapmodule function located maints start app export class appmodule", "d": "2/2018"}, {"body": "solution problem set everything according different suggestions including importing httpmodule httpclientmodule appmodulets injecting provider pagets app built correctly making get request get error error error uncaught promise error staticinjectorerror httpangularprovider staticinjectorerror httpangularprovider nullinjectorerror provider httpangularprovider error staticinjectorerror httpangularprovider staticinjectorerror httpangularprovider nullinjectorerror provider httpangularprovider nullinjectorget resolvetoken tryresolvetoken staticinjectorget resolvetoken tryresolvetoken staticinjectorget resolvengmoduledep createclass createproviderinstance nullinjectorget resolvetoken tryresolvetoken staticinjectorget resolvetoken tryresolvetoken staticinjectorget resolvengmoduledep createclass createproviderinstance c c tinvoketask objectoninvoketask tinvoketask rruntask einvoketask invoke p would appreciate help", "d": "2/2018"}, {"body": "case mdbootstrap jhipster fixed issue adding instead", "d": "2/2018"}, {"body": "error one modules fix fix incorrect import module module file name xyzmodule another file importing like xyzmodule hope helps someone", "d": "2/2018"}, {"body": "jenniferfell fyi", "d": "2/2018"}, {"body": "closing updated pr thanks magnusri outstanding questions let know", "d": "2/2018"}, {"body": "thank closing pr fix merged outstanding questions please feel free tag thanks", "d": "2/2018"}, {"body": "thank kapunahelewong proper issue handling", "d": "2/2018"}, {"body": "aw thank means lot", "d": "2/2018"}, {"body": "seems closed", "d": "2/2018"}, {"body": "right fixed", "d": "2/2018"}, {"body": "interesting similar issue failed load localhost whatever google search brought post without solution decided go back last component created well turns hope help anyone", "d": "2/2018"}, {"body": "believe get resolved land", "d": "2/2018"}, {"body": "ran well could however use following check add http params gt servicefetchall name juri subscribe complex case instance check whether service method removes nullundefinedempty values query url simply check whether current url access request add expect statements individual params remove nullundefinedempty values http params gt service fetchall name juri age null street undefined location subscribe", "d": "2/2018"}, {"body": "juristr yes showed use function argument get request handle assert parameters point feature request nt necessary also note one obvious problem tests never actually test values query parameters", "d": "2/2018"}, {"body": "think something like ideally", "d": "2/2018"}, {"body": "choose last would throwing error type small edge case problem", "d": "2/2018"}, {"body": "hello problem whether example case response status response body casted requested interceptor wating object json got instead workaround interceptor typescript let clonederror error arraybuffertext think case error angular try parse json regardless requested", "d": "2/2018"}, {"body": "matsko worked introduced third slidein leave animations nt play order look buggy updated example reproduce issue open three slideins click backdrop see buggy animations open two slideins click backdrop works fine animations play order smoothly using something missing make work", "d": "2/2018"}, {"body": "updates issue", "d": "2/2018"}, {"body": "works cli angular project", "d": "2/2018"}, {"body": "confirm upgrading angular cli seems resolved issue using angular", "d": "2/2018"}, {"body": "kapunahelewong already done updates related issue jbogarthyde updates di docs might able incorporate someall requested", "d": "2/2018"}, {"body": "jenniferfell nope work injector trees realm ngmodules wo nt go di documentation", "d": "2/2018"}, {"body": "jenniferfell issue need assessment see impact docs", "d": "2/2018"}, {"body": "matsko may ask much progress made feature", "d": "2/2018"}, {"body": "vicb ticket track exporting functions", "d": "2/2018"}, {"body": "documented", "d": "2/2018"}, {"body": "closed", "d": "2/2018"}, {"body": "mgol documented time ago", "d": "2/2018"}, {"body": "hmm ok wonder chuckjaz wrote documented closing", "d": "2/2018"}, {"body": "tw thu feb micha\u0142 go\u0142\u0119biowskiowczarek lt notifications githubcom wrote hmm ok wonder chuckjaz wrote documented closing receiving subscribed thread reply email directly view github mute thread", "d": "2/2018"}, {"body": "sorry yes documented sorry typo", "d": "2/2018"}, {"body": "valid html need equal attributes write space", "d": "2/2018"}, {"body": "updates", "d": "2/2018"}, {"body": "feature way", "d": "2/2018"}, {"body": "hey jenniferfell issue part way addressed style guide updated still need assess example see needs refactored could probably close issue serve good reference one writers", "d": "2/2018"}, {"body": "kara exactly kind thing shown example", "d": "2/2018"}, {"body": "closed", "d": "2/2018"}, {"body": "nt know error got status code browser shows conclusion issue code", "d": "2/2018"}, {"body": "like works fine const body new httpparams set clientid settingsclientid set clientsecret settingsclientsecret set granttype password set scope settingsscope set username authusername set password authpassword", "d": "2/2018"}, {"body": "titaneboy sir api multiple route deal options method problem need create options route post request created login application right solution problem thanks", "d": "2/2018"}, {"body": "jenniferfell issue specifically outstanding coverage search part works ok something find like however might like assess search great eye", "d": "2/2018"}, {"body": "ran guess angular dev team decided disallow raise awareness fact might supported servers aka prevent problems left workaround using generic version imo difficult decision either way young blood devs either lose time searching bug might searching server ignoring body p", "d": "2/2018"}, {"body": "strugling hour finally thanks odolha appears also removed adding solve problem", "d": "2/2018"}, {"body": "using node vs code changing solved problem", "d": "2/2018"}, {"body": "experiencing problem fix", "d": "2/2018"}, {"body": "template reference variables scoped template defined structural directive creates nested template therefore introduces separate scope reason undefined accessing ref property application noted workaround", "d": "2/2018"}, {"body": "also looking smooth solution solve another ticket tracking", "d": "2/2018"}, {"body": "happened across today noticed old quickstart clearly marked deprecated heartily approve new cli approach great happened across still linked documentation maybe unlinking documentation would enough item closed abandoned", "d": "2/2018"}, {"body": "consistency ease use well others looking work around resolved code works us let myformgroup thisfbgroup control value control value myformgroup new formgroup formgroupwithoutblurcontrols updateon blur", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "obsolete value allowed", "d": "2/2018"}, {"body": "leave trotyl made aware issue think alex thought wo nt work aot think fixed", "d": "2/2018"}, {"body": "chaosmonster guess tracker lifecycle hooks problem meant mixin pattern generally supported aot basic functionality may able work already suggest raise separated issues founding concrete problems edit updated original comment make clear", "d": "2/2018"}, {"body": "main reason like like html easily readable lean possible unfortunately often ctnr element actual content using readable nt view information need looking template", "d": "2/2018"}, {"body": "using angular also error", "d": "2/2018"}, {"body": "use headers purpose using", "d": "2/2018"}, {"body": "nt need passing plain object would enough", "d": "2/2018"}, {"body": "code working riyasat thanks share code working let headerjson contenttype applicationjson accept applicationjson accesstoken windowlocalstoragegetitem accesstoken client windowlocalstoragegetitem client uid windowlocalstoragegetitem uid let headersconfig new httpheaders headerjson", "d": "2/2018"}, {"body": "really annoying anyone trying upgrade httpmodule httpclientmodule say works intended want type things piss developer base", "d": "2/2018"}, {"body": "bet trying make api fluent stuff like though wanted think would easier way", "d": "2/2018"}, {"body": "hi issue little different class called extends like import httpparams angularcommon import pagination paginationpaginationmodel export class queryparam extends httpparams constructor paginationmodel pagination parammap map super consolelog paginationmodel value httpparamsnullsetappend got result idea", "d": "2/2018"}, {"body": "update thanks", "d": "2/2018"}, {"body": "hi deborahk since new doc entry components would mind closed", "d": "2/2018"}, {"body": "yes thanks", "d": "2/2018"}, {"body": "seems fixed ago", "d": "2/2018"}, {"body": "jenniferfell issue something keep mind future", "d": "2/2018"}, {"body": "agree needs documented somewhere like know exactly works beyond trying reverseengineer behavior source example get work like see better support symbol keys whose printable representation obviously nt suitable use directive name using shorthand need know supposed work file issue", "d": "2/2018"}, {"body": "matsko movement trying attach animation state property model moved around dom callback param set rather value bound possibly workarounds could suggest well", "d": "2/2018"}, {"body": "hi guys issue using grid component ngxdatatable image one grid columns template routerlink click link page component loaded ngoninit event triggered interesting thing click link visible grid row opens properly scroll grid click link nt load component properly proposed workaround marekozw works properly side try reproduce issue runnable sample maybe next week time thanks", "d": "2/2018"}, {"body": "error message expected operants similar type visual studio code angular language service similar situation nullable property number instead string defined class instead interface html typescript export class item size number null ngif present visual studio code happen build fyi nt know determine version visual studio code extension running description says extension uses angularlanguageservice typescript", "d": "2/2018"}, {"body": "also issue run vs code error getting error run visual studio ide tried solve solutions nt work project link vs code project link visual studio ide", "d": "2/2018"}, {"body": "started visual studio project template followed angular tutorial routing soon tried use animations error showed tried put demo stackblitz soon animations package imported project error regarding zonejs polyfill appears", "d": "2/2018"}, {"body": "note obvious ts helping next case", "d": "2/2018"}, {"body": "one bit app application started user logged setting authorization field null since value parameter ts would caught would right update set function null value parameter would result header field removed", "d": "2/2018"}, {"body": "issue alan header variable set null angular failed length think line", "d": "2/2018"}, {"body": "hey vicb like document sure say options could share thoughts touch put thanks", "d": "2/2018"}, {"body": "kapunahelewong chuckjaz knows status expert anything compiler related", "d": "2/2018"}, {"body": "way catching fixed", "d": "2/2018"}, {"body": "still monitoring updating seems fix problem", "d": "2/2018"}, {"body": "installed issue seem still returns text seem getting error still error syntaxerror unexpected token h json position jsonparse", "d": "2/2018"}, {"body": "think ca nt provide route path variable function using way case aot runtime app throws error path signin component signincomponent works const signin string signin path signin component signincomponent doesnt nt know reason fixes problem appreciate someone explains thanks", "d": "2/2018"}, {"body": "need updates also facing problem", "d": "2/2018"}, {"body": "agree method used ignore nullundefined values", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "one solution webstorm disable angular service like killing messenger updates fix", "d": "2/2018"}, {"body": "bkbaheti works ok latest version", "d": "2/2018"}, {"body": "wisebird luck updated everything", "d": "2/2018"}, {"body": "great fix bennadel way anybody found nothing like would effect know anything going fixed real also wanted make sure following similar scenario handled confirm fix works works even dynamic observable several tabs shared router outlet current customer eg order history notes order tab shows single order chosen list observable emits something like current order changes course thing happens link nt made active switching alreadyactive current route fortunately able push hack correctly triggers update every time emits new route behaviorsubject", "d": "2/2018"}, {"body": "subinsebastian completely irrelevant issue plain text json looking issues already fixed", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "might best issue mention since issue really related testing goes open another issue wanted since docs issues comes httpclient error handling docs updated use instead apparently actually parameter typescript issue xmlhttprequest spec also suggests testing chrome safari firefox also got instance connection server browsers might use", "d": "2/2018"}, {"body": "problem angular way solve locally", "d": "2/2018"}, {"body": "christianbs checked stackoverflow link", "d": "2/2018"}, {"body": "tried man still problem created headers const headers new headers authorization basic myhash const options new requestoptions withcredentials true headers headers options map response gt responsejson something wrong", "d": "2/2018"}, {"body": "christianbs try following code import necessary modules create constructor call like hope helps", "d": "2/2018"}, {"body": "hey phuhn still issue", "d": "2/2018"}, {"body": "hey tried download morning unable find remember angulario github", "d": "2/2018"}, {"body": "second link", "d": "2/2018"}, {"body": "fyi newimproved testing guide find latest preview", "d": "2/2018"}, {"body": "kapunahele literally downloads also checked testingspeczip", "d": "2/2018"}, {"body": "inverse problem put url browser like angular transform build pretty friendly url script fronted server came angular problem begins helps many thanks", "d": "2/2018"}, {"body": "mlcmlapis absolutely right case sensitive needing exactly like incidentally nt need implement anything talking unless someone edited answer first person thread use casing", "d": "2/2018"}, {"body": "devniz routlet nothing issue", "d": "2/2018"}, {"body": "ngzone nt work angular fix thisrouterroutereusestrategyshouldreuseroute function return false packagejson name prueba version license mit scripts ng ng start ng serve build ng build test ng test lint ng lint ng private true dependencies angularanimations angularcdk angularcommon angularcompiler angularcore angularforms angular angularmaterial angularplatformbrowser angularplatformbrowserdynamic angularrouter ngbootstrapngbootstrap corejs rxjs zonejs devdependencies angularcli angularcompilercli angularlanguageservice typesjasmine typesnode codelyzer jasminecore jasminespecreporter karma karmachromelauncher karmacli karmacoverageistanbulreporter karmajasmine karmajasminehtmlreporter protractor tsnode tslint typescript", "d": "2/2018"}, {"body": "related issue url updating nav bar navigated page would nt load solution linked issue worked making sure import inject", "d": "2/2018"}, {"body": "hi also apply case type narrowing inside ifcondition separate issue class animal class bird extends animal public wingcount number component template export class testcomponent input animal animal isbird animal bird return instanceof bird current language service reference would error animal contain member even though course aot compiler gets fine", "d": "2/2018"}, {"body": "see closed release mentioned changelog still nt work updated nuked first replaced old code interceptor constructor private injector injector intercept req httprequest next httphandler observable const authservice thisinjectorget authservice const token authservicegettoken const reqcopy reqclone headers reqheadersappend authorization return nexthandle reqcopy constructor private authservice authservice intercept req httprequest next httphandler observable const token thisauthservicegettoken const reqcopy reqclone headers reqheadersappend authorization return nexthandle reqcopy prod flag", "d": "2/2018"}, {"body": "mrcroft updated angular working fine maybe something causing problem case", "d": "2/2018"}, {"body": "also get cyclic dependency error try build prod flag", "d": "2/2018"}, {"body": "getting cyclic error using angular ran visual studio code updated error seems like angular team addressed issue latest release", "d": "2/2018"}, {"body": "jzahoor like know fix work around many months ago using fetch inside interceptor order completely bypass angular thanks", "d": "2/2018"}, {"body": "melicerte sorry late response nt realize pay hosting provider weird getting email notifications days realized topic turns universal app still get error course nt notice decided create new app scratch nt even build universal app needs simply running throws error builds first app apps array client case alxhub made repo reproduce simply running build client app produce error weird thing mention even though building client app sure issue cli rather angular angular cli angular node os", "d": "2/2018"}, {"body": "marcincichocki interested know sent interceptor like solution bypassing interceptors certain things like auth sure use example existing interceptor", "d": "2/2018"}, {"body": "jdhines particular example would need provide token via dependency injection however good need highly portable reusable code let say multiple apps use different backends nt set property interceptor", "d": "2/2018"}, {"body": "marcincichocki thanks apologies thread pardon probably basic question pretty foreign backend standin authservice assume actually pass something", "d": "2/2018"}, {"body": "jdhines yes must pass arguments describing request class overloads commonly would use something like", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "problem", "d": "2/2018"}, {"body": "dawidgarus thanks sharing solutions giving thoughts going fluent api dynamic interceptors options come around fluent api would nice dawidgarus shared also need able disable interceptors like feasible solution compromising single method class extension instead fluent api set interceptors exactly would simple option interceptor without noise around alxhub still working issue seems like would like know still hold breath", "d": "2/2018"}, {"body": "finally went around took serious work mixup proposed solutions needed keep backward compatibility new service injected place dynamically add remove hardest configure interceptors per request make convenient users reduce boilerplate code came completely satisfied solution least allows use standard interceptors limit breaking changes users move options request add option calls service better ideas approach taking seriously extending methods really painful overloads resolve use types abuse typescript allow override method find really awful", "d": "2/2018"}, {"body": "hey dawidgarus thanks bringing point starts getting scope docs tried allows specify features interested using angulario would mind closed issue", "d": "2/2018"}, {"body": "updates common scenario enterprise currently stuck well would like migrate angularjs seems show stopper", "d": "2/2018"}, {"body": "bmbell use original angular libs umds share even using advantages browser cache compile ngmodules independently via ngc compiler using bundler want load programmatically without router ondemand right condition using angular version recompiling app parts moment moving newer version", "d": "2/2018"}, {"body": "mlcmlapis would love see example action documentation loading module programatically sparse also feels like digging hole nt underlying api considered private subject change", "d": "2/2018"}, {"body": "bmbell could something like export class appcomponent implements oninit viewchild vc read viewcontainerref vc viewcontainerref ngmodule declarations mycomponent imports commonmodule entrycomponents mycomponent export class mymodule cmps map", "d": "2/2018"}, {"body": "mlcmlapis thanks makes lot sense trying dynamically load component however nt get way specifically looking might need create new item specifically trying load module specifies routing information would add information routing table specific parent route would need specify", "d": "2/2018"}, {"body": "still working follow code nothing happens even error mounting query works seems problem resume woking request fired working", "d": "2/2018"}, {"body": "rochapablo figured working httpparams seems work httpclient http service inject http try refer httpclient import httpclient angularcommon instead http", "d": "2/2018"}, {"body": "import httpclient httpparams angularcommon constructor protected httpclient", "d": "2/2018"}, {"body": "rochapablo mean error could check request successfully responded error code returned eg chrome network tab possible even hook apiservice method could set debug break point", "d": "2/2018"}, {"body": "cddelta right immutable set append create new object wrote generic function extract fields form defined object returns object", "d": "2/2018"}, {"body": "jwhijazi actually provide object http client instead httpparams need update angular though", "d": "2/2018"}, {"body": "cddelta currently using angular version tell next version please provide example using objects thanks", "d": "2/2018"}, {"body": "jwhijazi introduced", "d": "2/2018"}, {"body": "static factory method", "d": "2/2018"}, {"body": "mrantix wrap object used directly", "d": "2/2018"}, {"body": "trotyl guess use case would object want start append fact api pretty tough everything string know ultimate goal something handle serialisation generally would helpful global extension point easily implemented would good meantime inject service map objects httpparams fact become used framework handling guess getting lazy old age totally fine immutable ideal btw", "d": "2/2018"}, {"body": "mrantix objects also changed quickly mutate immutability may good restriction could gain little benefit end user supporting nonstring types discussion linked prs", "d": "2/2018"}, {"body": "really allow params really makes sense us make use default kiss typesafety goodbye instead wish keep type safety params write utils convert properly typeannotated params object type really core util handled hood", "d": "2/2018"}, {"body": "also reproduced", "d": "2/2018"}, {"body": "case ca nt try ngif want define template reference variable component ngif creating component library ca nt ask library user add ngif true statement template", "d": "2/2018"}, {"body": "work around issue like promiseresolve gt thiscontrolsetvalidators thisbuildvalidators thiscontrolupdatevalueandvalidity", "d": "2/2018"}, {"body": "issue reproduced critical big application required lazy loading", "d": "2/2018"}, {"body": "problem alsoi using angular version fixed gt versions please help version", "d": "2/2018"}, {"body": "case authservice quick start line windowlocationhash nt work lazy routing solved removing line", "d": "2/2018"}, {"body": "issue angular using however problem seeing however components loaded nt styles correctly applied refresh page enter url component correctly displayed navigate via routerlink lazyloaded component look weird components take parent router outlet case fill outlet resize window component snaps fill correct space seems like route navigation need fire windowresize event order make component show upinitialize dimensions amp styles correctly help would great", "d": "2/2018"}, {"body": "months later still nothing issue beginning angular please fix extremely annoying frustrating thing work", "d": "2/2018"}, {"body": "problem lazy loaded module navigation", "d": "2/2018"}, {"body": "plunker problem calling wrong level parent component child component keydown event trigger change detection parent anyway wo nt check child run unless one conditions toxicable notes occurs fix example calling cva component appropriate", "d": "2/2018"}, {"body": "hey petebacondarwin know resolved somewhere transition stackblitz nt know tell far know nt example specific tree shaking anywhere docs brief mention aot guide happy make one think", "d": "2/2018"}, {"body": "look later today", "d": "2/2018"}, {"body": "kapunahelewong afaict guide describes tree shaking aot guide mentions treeshaking passing want put something together would fine even sure whether treeshaking done done default already cli possible using cli might stackblitz runnable example really possible", "d": "2/2018"}, {"body": "thank petebacondarwin conversation filipesilva sounds like best way explain would short paragraph deployment pointing difference size compared building without dmitrysteblyuk reasoning creating specific example process treeshaking nt something see take place instead see evidence treeshaking size build app petebacondarwin would right", "d": "2/2018"}, {"body": "yes problem nt see evidence working treeshaking process bundlers rollup webpack etc except google closure errorprone hard use lazyloaded modules guess angular module system wanted see somewhere somehow working example angular bundles especially use materialanimations tend get pretty big", "d": "2/2018"}, {"body": "dmitrysteblyuk bundle sizes without tree shaking happening optimizations tree shaking happening automatically easy see though generally tree shaking dead code elimination safely", "d": "2/2018"}, {"body": "ok made comparison angular cli closure setup quite simple create new angularcli project add results formsmodule initial example generated cli angular cli kb vendor run closure kb vendormain formsmodule used bit added imported formsmodule angular cli kb closure kb formsmodule used extensively added multiple input types select radio validators etc angular cli kb closure kb closure treeshaked formsmodule second bundle much smaller third angular cli formsmodule well results bit inconclusive since nt separate closure bundle vendor main hand tell angular cli bundle nt get much smaller even formsmodule used much", "d": "2/2018"}, {"body": "dmitrysteblyuk using vendor chunk greatly reduces savings mentioned compare", "d": "2/2018"}, {"body": "ok kb angular cli kb treeshaked take grain salt since app also grows true closure remove approximate size app bundle mainbundlejs kb combined vendor vendor gets treeshaked", "d": "2/2018"}, {"body": "think would helpful thread documented guide perhaps deployment", "d": "2/2018"}, {"body": "angularcli treeshaking alright tried use ngform directive template instead ngmodel formsmodule got treeshaked good closure cost guess official example longer needed seeing angular cli well documented anyway official guide aot ps opened issue first place guide use rollup could nt get work", "d": "2/2018"}, {"body": "chembu working treeshaking documentation pull chembu could reference issue create pr", "d": "2/2018"}, {"body": "think issue opened comment made vicb clearly conflicts one done igorminar considered bad practice case alternative good practice communication documentation gap", "d": "2/2018"}, {"body": "sandorfr think meaning words used express relevant time period slightly different reality possible expect anything area fast take account example long takes till ie wo nt supported allow us move much faster long takes specs full support browsers around shadow dom unrealistic expect movement forward without", "d": "2/2018"}, {"body": "agree needs way apply styling child components currently way using deep selector deprecated removed according docs using unencapsulated styling css custom properties sufficient replacement imo maybe missing something looks like would work child component using variable thing want change fine child component firstparty code easily modify much thirdparty component", "d": "2/2018"}, {"body": "rdicroce right also fact behavior intended creates api styling component author wanted allow related many security functionality factors blocking factor actually support ie ie version able use css custom properties counterproductive reality time supporting ie extending time apps able run cost savings means side much financial timing costs others technically maybe also fact css custom properties actually able map trivial values objects limitation cases large number properties work child component using variable thing want change", "d": "2/2018"}, {"body": "mlcmlapis case ngdeep nt marked deprecated", "d": "2/2018"}, {"body": "jbogarthyde started work di editing titles currently two actual pages titles section title di group page title page di action dependency injection", "d": "2/2018"}, {"body": "foxandxss live example link end page originally missing think looks ok want confirm baluragala thank much volunteering hoping fixed working getting backlog see anything else like help please feel free tag come take look right away", "d": "2/2018"}, {"body": "worked either downgraded tsc upgraded txjs latest", "d": "2/2018"}, {"body": "sure still relevant need take closer look", "d": "2/2018"}, {"body": "came across problem somehow directives already seam view encapsulation possibility styles major problem directives break styles defined inside surrounding component", "d": "2/2018"}, {"body": "see problem directives breaking styles defined component used responsibility great addon angular material team something intent look inside input folder inputscss file input directive use build engine add styles global styles using angularcli clear way achieve hope comes angular soon", "d": "2/2018"}, {"body": "superseded", "d": "2/2018"}, {"body": "obsolete new tutorial always use individual html templates", "d": "2/2018"}, {"body": "working intended per inheritance rule child class nt define constructor inherit constructor parameters parent besides see doc even thus extended implemented anyway since constructor parameter removed already fixed closed", "d": "2/2018"}, {"body": "importantly microsoft planning anything ie bug developers world wide pick trash every application code base", "d": "2/2018"}, {"body": "ie dead sw years already", "d": "2/2018"}, {"body": "viable workaround basically appinitializer functionality sub module level app module level", "d": "2/2018"}, {"body": "leak module level enough", "d": "2/2018"}, {"body": "constructor kicks early even loading loginpagecomponent home module constructor called need sort life cycle hook kicks home module actually active actual use case loading user profile one way login page auth already good app loading another browser tab nt want go login component rather fetch user profile api maybe completely wrong train started digging issue", "d": "2/2018"}, {"body": "leak oh thought lazy loaded module called module loaded earlier certainly instantiated", "d": "2/2018"}, {"body": "tested confirm export class homemodule constructor consolelog homemodule ctor sadly shows console start application login", "d": "2/2018"}, {"body": "leak ah module default route surprise loaded immediately sense lazy loaded module problematic nt sense", "d": "2/2018"}, {"body": "nice catch leaves short ctor option though guess resort dabbling routing events", "d": "2/2018"}, {"body": "using angular fixed using detectchanges", "d": "2/2018"}, {"body": "yes fixed using detectchanges route well angular many others though thinks still workaround nt treated answer long run another lifecycle hook able use triggering entirely new change detection cycle allow changes like seems suboptimal", "d": "2/2018"}, {"body": "seems keep going even though answers advice already posted right way fix rearchitectrestructure components data handling work single change detection pass top means child component may change value used template parent component reevaluate built verify data flows one direction component tree may simple moving code cases official recognized way handling less cases first step problematic notes careful anything changing values used dom cause error careful using lifecycle hooks may called every change detection cycle work around two solutions preferred ignoring error dev mode happy production mode fixes error valid explained checks made prod mode prod mode code still leaving changes undetected causing view data sync harmless cases lead dataview corruption worse problems ignored one way data flow nt really changed lot angular posting hit version x angular nt helpful adding lifecycle hooks states solution developers would add code violates one way data flow hooks trigger error finally remember error indicating problem angular error let know done something wrong code violating one way data flow system makes angular fast efficient posts many blog posts go deeply worth reading understand one way data flow model build components pass data within", "d": "2/2018"}, {"body": "splaktar would better lock issue delete make comment outstanding thread already gets long repeating", "d": "2/2018"}, {"body": "splaktar make point means child component may change value used template parent component suppose container component includes navigation page titles etc loads collection subcomponents may load subcomponents components loaded container change based data subcomponents load change based data subcomponents needs able communicate back parent container information parent container display appropriate top level nav user perhaps breadcrumb trail perhaps something similar well information used titles identify container level loaded view extremely common architecture experience would make use common state service subcomponents would register parent component subscribes children educate parent parent display appropriate information nt following bottom approach parent would get relevant data service push information required child components via oneway communication seems run counter suggesting source problem child component registers service parent component throws error incorrect", "d": "2/2018"}, {"body": "never forget approved bug", "d": "2/2018"}, {"body": "martinwegner please see", "d": "2/2018"}, {"body": "alignsoft simple reproduction case problem stackblitz looks something else affect case logic described", "d": "2/2018"}, {"body": "trotyl solutions splaktar related simple problem", "d": "2/2018"}, {"body": "martinwegner case enough change hook", "d": "2/2018"}, {"body": "alignsoft mlcmlapis said stackblitz example would helpful demonstrating proper architecture case much possible using right set services observables lifecycle hooks etc specific case would also good topic stackoverflow", "d": "2/2018"}, {"body": "splaktar get current deadline desk mockup project demonstrates simple case", "d": "2/2018"}, {"body": "mlcmlapis wow thanks works", "d": "2/2018"}, {"body": "alignsoft today creating app behaves exactly like described mlcmlapis find stripped example stackblitz click cms system left nav exception thrown example admincomponent acts parent component charge things displaying left nav top ticker sub components use display ticker message main content section displays sub component specific data parent component html tickedmessage close side nav dashboard cms system typescript export class admincomponent implements oninit ondestroy private tickedmessagesubscription subscription tickedmessage string constructor private router router private adminservice adminservice ngoninit side nav click cms system piece code throws exception error error expressionchangedafterithasbeencheckederror expression changed checked previous value false current value true thistickedmessagesubscription thisadminservicetickedmessageannounced subscribe tickedmessage string gt thistickedmessage tickedmessage ngondestroy thistickedmessagesubscriptionunsubscribe output send data back parent component routeroutlet directive end handling event since custom event routeroutlet directive know handle skipped method read shared services angulario wrote shared service typescript import injectable angularcore import subject rxjssubject injectable export class adminservice private tickedmessageannounced new subject tickedmessageannounced thistickedmessageannouncedasobservable announcetickedmessage tickedmessage string thistickedmessageannouncednext tickedmessage one child components called child component typescript import observable rxjsobservable import component viewchild oninit inject angularcore import adminservice coreadminadminservice component selector cms templateurl thirdpartycmscomponenthtml styleurls thirdpartycmscomponentscss export class thirdpartycmscomponent implements oninit private tickedmessage string constructor private adminservice adminservice ngoninit void thistickedmessage please create entry page url exist cms system parent component threw exception tried updating one public properties ticked message value sent child component parent component throws exception typescript export class admincomponent implements oninit ondestroy private tickedmessagesubscription subscription tickedmessage string constructor private router router private adminservice adminservice ngoninit side nav click cms system piece code throws exception error error expressionchangedafterithasbeencheckederror expression changed checked previous value false current value true thistickedmessagesubscription thisadminservicetickedmessageannounced subscribe tickedmessage string gt thistickedmessage tickedmessage ngondestroy thistickedmessagesubscriptionunsubscribe fixed executing subscribe call back asynchronously awaiting ticked message parent component async await typescript export class admincomponent implements oninit ondestroy private tickedmessagesubscription subscription tickedmessage string constructor private router router private adminservice adminservice ngoninit clears expressionchangedafterithasbeencheckederror exception thistickedmessagesubscription thisadminservicetickedmessageannounced subscribe async tickedmessage string gt thistickedmessage await tickedmessage ngondestroy thistickedmessagesubscriptionunsubscribe coming wpf world seems like need tell ui thread await observable subscription callback since observables executed asynchronously starting angular please compassion towards angular skillz p", "d": "2/2018"}, {"body": "obsolete aot guide rewritten already", "d": "2/2018"}, {"body": "given able repro minimal repro closing expectation current code min max errors never appear given directives removed", "d": "2/2018"}, {"body": "planetmalone normally common way provide new ngvalueaccessor inject ngcontrol directly using injector changes minimal code pattern opinion", "d": "2/2018"}, {"body": "relates", "d": "2/2018"}, {"body": "encountering exact issue version run root directory level nodemodules folder get distsrc distnodemodules want everything distsrc dist compiler versions angularcompilercli version angularcompiler version", "d": "2/2018"}, {"body": "sathishchary use backend side php net etc using php laravel toxicable angular universal implement working backend php laravel", "d": "2/2018"}, {"body": "using java backend spring rest api", "d": "2/2018"}, {"body": "sathishchary implement angular universal successfully", "d": "2/2018"}, {"body": "parthkharecha using angular universal ended issue creating simple spring web application sending meta tags client application simple web application generating new url redirect angular app good idea looking change angular universal thanks", "d": "2/2018"}, {"body": "sathishchary thanks reply", "d": "2/2018"}, {"body": "sathishchary love update happen one", "d": "2/2018"}, {"body": "problem anyone resolve net core", "d": "2/2018"}, {"body": "implementation laravel hope get idea net", "d": "2/2018"}, {"body": "came across thread looking solution reverse problem case want reset parent form control propagate children child controls implementing understanding correctly called right place reset child component called consider child control pristine untouched", "d": "2/2018"}, {"body": "ericsnap sure want processes data update direction model view", "d": "2/2018"}, {"body": "mlcmlapis right think gathered documentation conceptually data gets updated model outside model case since dealing child components correct assuming consider child component pristine untouched point user modified view course", "d": "2/2018"}, {"body": "ericsnap depends case situation live edit available sides one user view imagine using push technologies websocket even change user change another side", "d": "2/2018"}, {"body": "closed already", "d": "2/2018"}, {"body": "triaging issue nt context information goes backlog first step resolve might sit longer", "d": "2/2018"}, {"body": "hi fluccioni thanks tip works thank much help taking time truly appreciate blessed cheers", "d": "2/2018"}, {"body": "submitted pr think covers part issue adblocker looks like part nothing outstanding would mind close issue still questions happy help find answers", "d": "2/2018"}, {"body": "pull request enables see route cause error console error error cleanup component able see stacktrace fixture ca nt destroyed x reason main cause error catch fixture ca nt destroyed send user hope helps", "d": "2/2018"}, {"body": "updates seems like would common request find much use case pages certain users access already nt render pages navigation bar nt manually navigate certain pages want act page exist even though right got showing url goes back root", "d": "2/2018"}, {"body": "jelbourn anupvarma guys find solution currently facing issue disabling change detection solution", "d": "2/2018"}, {"body": "jasonaden facing issue using angular version issue occurring aot build test local region nt happen", "d": "2/2018"}, {"body": "issue version", "d": "2/2018"}, {"body": "obsolete rollup longer mentioned doc", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "hi jeffbcross happy document nt quite get would recommend reference maybe talk something could get started thanks", "d": "2/2018"}, {"body": "heathkit would like make pr implement feature let review finished", "d": "2/2018"}, {"body": "please check vikerman first work along lines internally", "d": "2/2018"}, {"body": "heathkit got thank vikerman could provide information one thank", "d": "2/2018"}, {"body": "exist", "d": "2/2018"}, {"body": "sorry sure help looked repo tell using unusual setup nt really consider supported reduce problem particular actionable bug report take look ca nt debug application way general however continue path going end megabytes javascript downloaded clients likely something want", "d": "2/2018"}, {"body": "size final javascript files problem investigating way load external modules plugins modules plugins could developed independently loaded run time external hosts pd tested angular works", "d": "2/2018"}, {"body": "know question quite old facing problem zlepper nt know best way achieveworkaround trying component raptorbutton receive css classes input cssclass aware angular directives related dom attributes developed directives easy path bootstrap classes like bellow directive selector raptorbtndanger export class raptordangerbuttoncssdirective hostbinding cssclass classes btn btndanger put use included new directives module file consumed page component planning replace repetitive class declarations bigger like bellow instead planned ng build said ca nt bind cssclass since nt known property raptorbutton suggestions achieve planned directives tried also change input name class component received class component property remained empty thank", "d": "2/2018"}, {"body": "danielrsantana try use attribute binding syntax", "d": "2/2018"}, {"body": "still work error error expressionchangedafterithasbeencheckederror expression changed checked previous value undefined current value bombasto seems like view created parent children dirty checked created change detection hook", "d": "2/2018"}, {"body": "solution directive using solution remborg import directive elementref ondestroy angularcore import textmask vanillatextmaskdistvanillatextmaskjs directive selector appmaskdate export class maskdatedirective implements ondestroy mask ddmmyyyy maskedinputcontroller constructor private element elementref thismaskedinputcontroller textmaskmaskinput inputelement thiselementnativeelement mask thismask ngondestroy thismaskedinputcontrollerdestroy", "d": "2/2018"}, {"body": "worked", "d": "2/2018"}, {"body": "solution pass parameter object", "d": "2/2018"}, {"body": "got error angular user agent", "d": "2/2018"}, {"body": "overcome problem least workaround call router links inside timeout function directly html timeout prevent ios bug redirect path settimeout gt thisrouternavigate path", "d": "2/2018"}, {"body": "problem planning update version maybe help", "d": "2/2018"}, {"body": "problem use angular version typescript", "d": "2/2018"}, {"body": "issue nothing jit aot compilation whether multiple sets angular libraries loaded runtime like informative work within modules dbechtel simple reproduce jit see tbosch nt think usage ever officially supported angular nt scenario still valid especially incoming angular elements suggest open new feature request case think", "d": "2/2018"}, {"body": "duplicate marked intended sure decision changed", "d": "2/2018"}, {"body": "according angular docs style scope styles specified component metadata apply within template component sure missing something functionality described documentation appear match way actually working", "d": "2/2018"}, {"body": "obsolete", "d": "2/2018"}, {"body": "yup thanks", "d": "2/2018"}, {"body": "jenniferfell issue needs update example well doc", "d": "2/2018"}, {"body": "still issue portuguese brazil viewfirstmonth date march mar\u00e7o locale pt pipe transforms mar\u00e7o viewfirstmonth date mmmm titlecase", "d": "2/2018"}, {"body": "two subsites load views depending city constant following versions failed", "d": "2/2018"}, {"body": "thanks hard work preparing groundup rewrite entire app starting april anything canshould prepare changes right planning using thanks", "d": "2/2018"}, {"body": "ocombe curious ignore leading trailing spaces land", "d": "2/2018"}, {"body": "need update roadmap bit confused right even feature particular clearly priority nt expect us working anytime soon", "d": "2/2018"}, {"body": "ocombe yeah would great interested runtime blocking point us could maybe give guess completion thank much hard work", "d": "2/2018"}, {"body": "ocombe feature particular clearly priority nt expect us working anytime soon could clarify feature talking nt want make assumptions", "d": "2/2018"}, {"body": "ofuangka feature ignore leading trailing spaces priority karamuto hard guess working right", "d": "2/2018"}, {"body": "ocombe could please share milestone runtime one bundle locales aot decide using tools using party libriaries huge multilanguage project hope able use canonical tooling aware raw also would like able split xlf files one file per module possible", "d": "2/2018"}, {"body": "hey alxhub happy submit pr add", "d": "2/2018"}, {"body": "closed", "d": "2/2018"}, {"body": "case component get added added whenever try assign specific routeroutlet name", "d": "2/2018"}, {"body": "jasonaden apologies late response look report back", "d": "2/2018"}, {"body": "getting error fix root folder needed set baseurl src path paths added paths baseurl everything working fine", "d": "2/2018"}, {"body": "closed already deprecated better error message", "d": "2/2018"}, {"body": "silvioamaral please create pr feature otherwise stay backlog", "d": "2/2018"}, {"body": "hey karasuni tried push commit branch denied since signed contributor agreement thinking cause talk anyone wait sorry first time contributing", "d": "2/2018"}, {"body": "silvioamaral make sure read forks create one push branch forked repo create pr following guide", "d": "2/2018"}, {"body": "fact validator directives reverted angular team wants back revert revert would fine commit already need extra commits also wo nt help something workload", "d": "2/2018"}, {"body": "trotyl got going push would say wo nt help", "d": "2/2018"}, {"body": "proposal put back even different name certain read somewhere ok add html validators", "d": "2/2018"}, {"body": "even different name different name like course could work still align html validation help op problem", "d": "2/2018"}, {"body": "micsel sory solution result may call routernavigate inside component needed checks logic code try open route gt canactivate gt reject component activation gt navigate need programatically nt need implement guards box problem issue open link like abc canactivate c returns false router rejects snapshots chain activated expected result access ab", "d": "2/2018"}, {"body": "also seeing guard response false version", "d": "2/2018"}, {"body": "markgoho guards fixed pr jasonaden stated slated review inclusion next weeks sprint routes fully guarded flow first fully available route", "d": "2/2018"}, {"body": "anyone wishes test solution builds nt really problems versions nt match rest angular build hopefully folded released absolutely", "d": "2/2018"}, {"body": "still fixed two arguments call site need switched right vsavkin could doublecheck line", "d": "2/2018"}, {"body": "confirm wrong trying implement route reuse strategy named router outlet getting swapped arguments named outlet right something like work around issue", "d": "2/2018"}, {"body": "try works wich import defaultroutereusestrategy angularroutersrcroutereusestrategy", "d": "2/2018"}, {"body": "fixed landed closed", "d": "2/2018"}, {"body": "working version using following validator", "d": "2/2018"}, {"body": "fixed", "d": "2/2018"}, {"body": "fixed together opening api", "d": "2/2018"}, {"body": "want take approach inlining later build pipeline requires workarounds various things let discuss week like get bazelbuilt packages inlined resources", "d": "2/2018"}, {"body": "jenniferfell issue might resolved", "d": "2/2018"}, {"body": "jasonaden wondering updates router issues possibly targeting", "d": "2/2018"}, {"body": "updated plunkr use angular", "d": "2/2018"}, {"body": "troubles solution case nt work routerlink route button click button navigates see page expect see component pagenewscomponent url works correctly type url address bar browser decided rewrite function apply trailing slash url nt one still nt work correctly works refresh page try navigate", "d": "2/2018"}, {"body": "read somewhere stackoverflow include dot end slash working nt know whether right way anyway created sample repository demo stackblitz", "d": "2/2018"}, {"body": "aot smarter always consider ngoninitngondestroyngetc even method explicitly defined", "d": "2/2018"}, {"body": "problem seems actually used see templateref created using parentview template changed along inherits properties behavior clearly shown template reused two places however since bound context template context actually included might create quite confusing behavior someone might rely", "d": "2/2018"}, {"body": "exact issue stored routes nt get revisited sit memory never get destroyed maybe fine lot apps app shows timesensitive data need able destroy stale routes nt get revisited certain timeframe order minutes sure understand documentation says type opaque token reality complex object lot context information attached make properties public edit suppose possible let stale routes sit memory get revisited return point framework destroys removes store good enough though", "d": "2/2018"}, {"body": "sort issue understanding nt imported solved issue make sure nt import inside mainroot app component import also nt need import inside also make sure nt import inside import adminroutingmodule since lazy loaded modules adminmodule appmodule nt imported anywhere", "d": "2/2018"}, {"body": "hi still facing issue tried like luck let options new requestoptions withcredentials true return true could please share code", "d": "2/2018"}, {"body": "harimada hi using angular new way angular authinterceptor javascript import injectable angularcore import httpevent httphandler httpinterceptor httprequest httpresponse httperrorresponse angularcommon import router angularrouter import observable rxjsobservable import rxjsaddoperatordo injectable export class authinterceptor implements httpinterceptor constructor private router router intercept req httprequest next httphandler observable req reqclone withcredentials true appmodule javascript import ngmodule angularcore import browseranimationsmodule angularplatformbrowseranimations import browsermodule angularplatformbrowser import jsonpmodule angular import httpinterceptors httpclientmodule angularcommon import appcomponent appcomponent import approutingmodule approutingmodule import coremodule corecoremodule import authinterceptor coreservicesauthinterceptorservice import pagenotfoundmodule pagenotfoundpagenotfoundmodule ngmodule imports browseranimationsmodule browsermodule jsonpmodule httpclientmodule declarations appcomponent providers provide httpinterceptors useclass authinterceptor multi true bootstrap appcomponent export class appmodule", "d": "2/2018"}, {"body": "hi problemwhen use get following error response preflight request nt pass access control check value accesscontrolalloworigin header response must wildcard request credentials mode include origin therefore allowed access credentials mode requests initiated xmlhttprequest controlled withcredentials attribute odd thing nt error call url browser could help", "d": "2/2018"}, {"body": "found use local host url things work sent mail windows ali sent saturday february angularangular cc bob breitling mention subject angularangular angular ignoring withcredentials hi problemwhen use externalloginconfirmation withcredentials true get error response preflight request nt pass access control check value accesscontrolalloworigin header response must wildcard request credentials mode include origin therefore allowed access credentials mode requests initiated xmlhttprequest controlled withcredentials attribute could help receiving mentioned reply email directly view github mute thread", "d": "2/2018"}, {"body": "update issue", "d": "2/2018"}, {"body": "diestrin tried implementing workaround seems nt package get method check please let know get using angular", "d": "2/2018"}, {"body": "setting app stops loading tell whats making break using angular", "d": "2/2018"}, {"body": "issue resolved still get flicker angular tried works main route routes especially lazily loaded ones", "d": "2/2018"}, {"body": "also issue animations applied route navigation ssr renders page client side navigation happens animations guessing animations run page rendered server anyone anything working animations ssr share expected behaviour", "d": "2/2018"}, {"body": "sounds like mostly solved use cases still specific bug please create new issue minimal reproduction", "d": "2/2018"}, {"body": "signature fixed expected behavior", "d": "2/2018"}, {"body": "duplicate already fixed", "d": "2/2018"}, {"body": "reply comment angular read conversation failed get actual breakpoint fix would really helpful someone explains nt working many mentioned comment worked looking code shared really appreciate discussion thank stackoverflow question thing tried", "d": "2/2018"}, {"body": "hi everyone convert dynamic template module lib work know ok reason export decorators ngxdynamicoutletmodule anyone help thanks ngxdynamicoutletumdjs var ngxdynamicoutletmodule function function ngxdynamicoutletmodule", "d": "2/2018"}, {"body": "jackclarify mean line", "d": "2/2018"}, {"body": "mlcmlapis thanks replay think line compile tool ng tool project ngc lib package might real reason sure try verify", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "problem still resolved generally appears every time reference property variable declared dot notation bracket notation works nt understand issue closed problem obviously persists", "d": "2/2018"}, {"body": "jakefreeberg exactly use componentyouwanttotest spec file higher level", "d": "2/2018"}, {"body": "using production import directive input ondestroy onchanges embeddedviewref viewcontainerref templateref simplechanges changedetectorref angularcore import observable rxjsobservable import subscription rxjssubscription import rxjsobservablefrom directive selector btcontext btcontexton export class contextdirective implements onchanges ondestroy input btcontexton observable promise private viewref embeddedviewref private sub subscription constructor private template templateref private vcr viewcontainerref private cdr changedetectorref ngonchanges changes simplechanges thisviewref thisviewref thisvcrcreateembeddedview thistemplate ngondestroy thissub thissubunsubscribe usage", "d": "2/2018"}, {"body": "dzmitryshylovich put basehref option well still nt get error mentioned", "d": "2/2018"}, {"body": "preview angular ivy renderer angular new view engine", "d": "2/2018"}, {"body": "still issue angular", "d": "2/2018"}, {"body": "mhevery would see user selected file nt point nt think client side validation make sure user selected file scope client side validation feature set", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "relates", "d": "2/2018"}, {"body": "extractcss default production mode angular cli still see styles added head tag ssr", "d": "2/2018"}, {"body": "resolved way fallback found outlets", "d": "2/2018"}, {"body": "probably fails using lazy loading router determining exactly moment however able continue using property relativeto current route activatedroute wrote problem planning use second router dinamic param allow set route manually denisyilmaz comment several expended hours workaround found sure possible make fix seems complicated thought beggining", "d": "2/2018"}, {"body": "also gon na fail multiple angular applications single app case nevertheless could solve without using named outlets", "d": "2/2018"}, {"body": "tolemac tried workaround clear component property come undefined", "d": "2/2018"}, {"body": "somebody wants fix nt want upgrade angular version yet workaround ts import animationdriver \u0275noopanimationdriver noopanimationdriver \u0275supportswebanimations supportswebanimations \u0275webanimationsdriver webanimationsdriver angularanimationsbrowser export function animationdriverfactory platform platformchrome amp amp supportswebanimations return new webanimationsdriver return new noopanimationdriver const providers provide animationdriver usefactory animationdriverfactory deps rtplatform", "d": "2/2018"}, {"body": "also struggling get angular work mpa currently use angular webpack ngcwebpack plugin compile multi page app aot unable ngtools plugin hard explain management nt meant used way regret adopted angular spent year converting ecommerce site seems team focused toward spa odd chose angular thought would suited larger institutional projects little toy projects", "d": "2/2018"}, {"body": "inquiztr ended spa way yet still app shell rendered server server routing able processing angular catches routes goes correct modulecomponent behaves adequately lazyloaded routes think could get behavior like want loading whole app every page trying make page app pain lazy loaded routes r way go", "d": "2/2018"}, {"body": "would like go way environment nt support right use net framework understanding switch angular universal rendering would first switch backend net core agree spa way lazy loaded routes universal rendering probably way forward", "d": "2/2018"}, {"body": "already solved new transformerbased compiler", "d": "2/2018"}, {"body": "yes requires turning", "d": "2/2018"}, {"body": "hi error working fine without aot throwing following error error template compile appmodule function calls supported decorators providerhere called made class implements factoryprovider angularcore production needs aot provider intended run function appinitializer fetch user config basic stuff works building without aot see issue reported initially feb today february due respect waiting elon musk reach mars actually prioritize investigating dealbreaker production receive higher prio", "d": "2/2018"}, {"body": "andreimcristof extra reason use following syntax even main app module", "d": "2/2018"}, {"body": "see issue reported initially feb today february andreimcristof please note never valid repro provided entire thread obvious symlink issue nothing within repo", "d": "2/2018"}, {"body": "mlcmlapis actually using pattern however got almost identical error function calls supported google searches pointed thread trotyl thanks input quite simple reproduce actually basically made class implements factoryprovider eg provided appinitializer providers appmodule said providers new myprovider gives error provide repro repository weekend prove know know angular know since work angular team correct wrong expect consistency bad implementation build successful nonaot build fails frustrates nt work would say ok fault need read docs better", "d": "2/2018"}, {"body": "andreimcristof ah ok use exported function like following pattern", "d": "2/2018"}, {"body": "andreimcristof normal user well thread filled different kinds questions like people reporting error never refer thing possible investigate exist case known design limits static metadata collecting case yet supported please try solution provided mlcmlapis", "d": "2/2018"}, {"body": "specialkk think good approach ideal works ended fixed switch statements need would prefer somehow could move template html another file somehow feels odd template bottom html wherever reference another workaround would answer prefer", "d": "2/2018"}, {"body": "correasebastian following ngupgrade tutorial issue corejs installed vasuneet mentioned rather issue occurs forget delete js file indexhtml given ts file name receiving error delete corresponding js file script tags indexhtml issue goes away", "d": "2/2018"}, {"body": "issue love see fixed gcp well particular partial case", "d": "2/2018"}, {"body": "naomiblack using workaround moment could let us know", "d": "2/2018"}, {"body": "obsolete since angular deprecated support parsing string yet", "d": "2/2018"}, {"body": "using reactive form remove disabled attribute solution make work edge angular", "d": "2/2018"}, {"body": "fixed try another look plunker", "d": "2/2018"}, {"body": "dzmitryshylovich fix issue input firing empty string ie placeholder unable figure hack way come since situation need fire event empty search also application using angular ie win os search field input placeholder help would appreciable since struggling issue week time response micrsoft fix issues regards soma", "d": "2/2018"}, {"body": "funny trying find extra super magic trick probably right time forget ie nt", "d": "2/2018"}, {"body": "mlcmlapis sadly lot enterprise clients enforce ie usage else discussion would nt even exist clearly", "d": "2/2018"}, {"body": "vladjerca believe using ie means much cost savings really counterproductive also one main reason ms dropped ie cemetery history", "d": "2/2018"}, {"body": "mlcmlapis one tell huge corporate securitymanagement teams everyday find new reason use ie none actually make sense procedure limbo inside companies nobody personally know uses ie workhome clients", "d": "2/2018"}, {"body": "hi facing issue uncaught typeerror read property tojson undefined backbone js coming every time sometimes coming estivation also everything get data thiscollectionget creativeid tojson please give scenario get tojson issue", "d": "2/2018"}, {"body": "facing issue another post form done resolve issue using ionic framework headers created correctly headers stop created correctly faced errors reported strange behavior would get different results piece code", "d": "2/2018"}, {"body": "obsolete ivy debugging helpers shipped runtime", "d": "2/2018"}, {"body": "facing issue entry components dialog singleton service feature related modal components remain respective module without need jmcclanahan workaround", "d": "2/2018"}, {"body": "dzmitryshylovich angular repro changed error message workaround still works", "d": "2/2018"}, {"body": "tbosch nt understand reason apply every route global css time would useful ability load specific global css per view thought halfway css gets eagerloaded one css file least unique css parent class added html tag automatically change global css whenever route changes common web development need different global css per view would elegant way handle need", "d": "2/2018"}, {"body": "hit bug today angular issue gets addressed posted workaround", "d": "2/2018"}, {"body": "reproduce issue angular issue fixed newer version angular reproduction", "d": "2/2018"}, {"body": "thank much help", "d": "2/2018"}, {"body": "cosolidate code code working good downloadexcelservice import injectable angularcore import requestoptions baserequestoptions requestoptionsargs headers angular import cookieservice ngxcookieservice import uuid import startupservice startupservice import http request angular import observable rxjsobservable import rxjsaddoperatormap injectable export class downloadexcelservice private observabledataget observable lt failure blob constructor private http appcomponent import component angularcore import http request angular import httpclientmodule angularcommon import rxjsaddoperatormap import startupservice sharedstartupservice import downloadexcelservice shareddownloadexcelservice component selector approot templateurl appcomponenthtml providers downloadexcelservice styleurls appcomponentcss export class appcomponent public ispageblock boolean false web api service", "d": "2/2018"}, {"body": "confused need options first reply seems like easiest builtin way drawback aware using", "d": "2/2018"}, {"body": "set attribute instead property still binding cd keep checking subsequent change detection run suggested hard code value template assumes know value beforehand ie load somewhere check property", "d": "2/2018"}, {"body": "dzmitryshylovich hope late example facing problem open loaded router outlet try open prevent loading end good case router outlet empty ie change use instead case loaded expected use case angular could check route even trying load lazy module waste bandwithtime stackblitz", "d": "2/2018"}, {"body": "thanks tytskyi case solved problem wrapping removing quotation marks", "d": "2/2018"}, {"body": "face issue", "d": "2/2018"}, {"body": "dzmitryshylovich everyone stackoverflow account wants one spotty governance model extreme opacity way site administered severely unresponsive user suggestions requests based exploitative business model nt know quite right alternative course nt want noobie support requests cluttering github issues would really like avoid speak experience rep saw light pulled plug", "d": "2/2018"}, {"body": "rtm saved reply message support questions better raise separate doc issue suggestions", "d": "2/2018"}, {"body": "struggled issue finally resolve reading angular doc webpack add following lines polyfillts import import require zonejsdistzone processenvenv production production else development test error stacktracelimit infinity require zonejsdistlongstacktracezone lines original generated ts file commented", "d": "2/2018"}, {"body": "news version basic navigation work", "d": "2/2018"}, {"body": "mtpultz find documentation related testingmodules llr routertestingmodule", "d": "2/2018"}, {"body": "got problem routernavigate doesnt work mobile browsers im looking solution almost day code already tried examples code singupts signuproutingts export const moduleroutes route path component signupmerchantcomponent children path submitinterest component submitinterestcomponent path submitinterestsuccess component submitinterestsuccesscomponent path redirectto submitinterest pathmatch full export const approuting routermoduleforroot moduleroutes export const signupcomponents signupmerchantcomponent signupsidebarcomponent signupmodulets jacodv markgoho koshmaar", "d": "2/2018"}, {"body": "hey fixed ago remenber well solution indexhtml let html like documentwrite rounter put add usehash true ngmodule declarations appcomponent imports browsermodule routermoduleforroot approutes usehash true providers bootstrap appcomponent export class appmodule de samuel kavin loganathan notifications githubcom enviado sextafeira de fevereiro de angularangular cc jhonattan oliveira comment assunto angularangular run angular file looks like base href issue got problem routernavigate doesnt work mobile browsers im looking solution almost day code already tried examples code singupts onsubmit thisregistrationmerchantserviceregisterinterestdirectmerchant email thispersonemail subscribe response gt thisrouternavigate submitinterestsuccess signuproutingts export const moduleroutes route path component signupmerchantcomponent children path submitinterest component submitinterestcomponent path submitinterestsuccess component submitinterestsuccesscomponent path redirectto submitinterest pathmatch full export const approuting routermoduleforroot moduleroutes export const signupcomponents signupmerchantcomponent signupsidebarcomponent signupmodulets jacodv markgoho koshmaar receiving commented reply email directly view github mute thread", "d": "2/2018"}, {"body": "dietergeerts u switch different language", "d": "2/2018"}, {"body": "completely honest thought preliminary research would need done fix beginning disagree bug dzmitryshylovich workaround actually proper solution purpose resolver resolve critical data must exist route even loads dealing data resolved preactivation nt use resolver anyway load data ngoninit therefore would nt make sense continue successful navigation resolver fails error would mean critical data required route failed load attempting catch error resolver conflating failure navigation failure applicationspecific business logic component expects successfully load receive information regarding failed resolver still navigation success albeit application failure therefore resolver responsibility catch application errors return navigation success data structure properly communicates state resolver component think actual bug activatedroutedata observable first place already resolved component loaded really misleading rather functional bug", "d": "2/2018"}, {"body": "agree resolve fails nt activate route instead show error source component", "d": "2/2018"}, {"body": "since people still active year ask officially angular claim router resolver throws error eg resolve returns promise without catch btw preventing calls resolver destined fail catching potential errors advance via made complicated bugproblem angular handles canactivate returning false", "d": "2/2018"}, {"body": "adolphyu replace content function retrieve code", "d": "2/2018"}, {"body": "running issue idea might fixed suggested work around make controlvalueaccessor respond fieldsets disabled state described", "d": "2/2018"}, {"body": "nt really pursuited tested might try make attribute directive fieldsets emit event disabled propattribute changes might work might worth trying mon feb tim barber notifications githubcom wrote running issue idea might fixed suggested work around make controlvalueaccessor respond fieldsets disabled state receiving authored thread reply email directly view github mute thread", "d": "2/2018"}, {"body": "able get working although ideal ts import directive eventemitter hostbinding input oninit optional self skipself angularcore import ngcontrol ngform angularforms directive forcing synchronization disabled states form elements suchs ngform fieldset ngmodel directive selector form fieldset formcontrolname formcontrol ngmodel export class disabledsynchronizationdirective implements oninit problem nt work one particular use case template content fieldset defined inside controlvalueaccessor looks like html irrelevant content irrelevant content html inputs instance disabledsynchronizationdirective find disabledsynchronizationdirective instance mycontrolvalueaccessor parent fieldset", "d": "2/2018"}, {"body": "like add usecase interested well got featuremodules configure using di chatconfigvaluets ts import injectiontoken angularcore export interface chatconfig showheader boolean export const chatconfig new injectiontoken chatconfig export const chatconfig chatconfig showheader true chatmodulets get default importing appmodule override config like problem lazily load longer call forroot provide default config got manually provide despite chatmodule solely depending", "d": "2/2018"}, {"body": "toxicable group forking table record case group difficult organize form validation check case", "d": "2/2018"}, {"body": "jagcolombat thanks", "d": "2/2018"}, {"body": "welcome users reactions", "d": "2/2018"}, {"body": "problem still valid angular", "d": "2/2018"}, {"body": "two points note following code first worth say example subtle difference template driven reactive versions reactive version single formcontrol object template driven version two formcontrol objects avoid difference wrapping inputs form second two versions template driven reactive really equivalent problem really problem exists also template driven forms reactive ones give equivalent reactive version template driven one template driven version equivalent reactive one", "d": "2/2018"}, {"body": "likely closed inherit parameters use proper param naming avoid override", "d": "2/2018"}, {"body": "checked confirmed trick closing issue thanks", "d": "2/2018"}, {"body": "seeing thing seems like dom nodes never getting destroyed creating new components even though nt seem show chrome elements tab js event handlers also seem continue grow according performance monitor page containing kendo grid rows seen almost ram used application refreshing entire page resets memory levels continues grow", "d": "2/2018"}, {"body": "experiencing problem mbrookson ionic app angular add card dom nodes count goes remove card dom nodes stay image represents adding card removing three times", "d": "2/2018"}, {"body": "done conditional mapped types recursion conditional mapped types merged typescript published chance make strong typed forms possible", "d": "2/2018"}, {"body": "use", "d": "2/2018"}, {"body": "really ridiculous shared npm module exporting couple pipesdirectives unless import fails dumb error really changed warning break compile", "d": "2/2018"}, {"body": "opinion every component scary create another every component like", "d": "2/2018"}, {"body": "think really virtual problem ca nt see also reason anything halfway around package outside app tree something looks dead code", "d": "2/2018"}, {"body": "new angularcli even ignoremodule somehow workaround problem opinion every component ngmodule even try write unittests bug making creating test helpers kinda problematic", "d": "2/2018"}, {"body": "sarunint enterprisesized applications like one originally opened ticket would hundreds modules complicated imports order handle dependent directives components simple fix compiler find module component throw warning get rid treeshaking real reason annoying fact barrel files become hazard boon convenient centralize imports committing including every single exported component every app uses library", "d": "2/2018"}, {"body": "dborisenkowork sure nt see nt work use case solution rahulsivalenkawtc provided works perfectly", "d": "2/2018"}, {"body": "anyone recently moved angular angular noticed components actually declared modules throwing error", "d": "2/2018"}, {"body": "novologicclay error thread long referring original error aot compilation determine module class many components unused", "d": "2/2018"}, {"body": "andelaandrewmakenzi yes error printed attempting compile component complaining certainly included module migrating getting error particular component updated version angular aot compile right started migrating smoke test", "d": "2/2018"}, {"body": "novologicclay share console errors", "d": "2/2018"}, {"body": "final goal using option eliminates everything unused", "d": "2/2018"}, {"body": "andelaandrewmakenzi enterprise application dozens layers modules imports code actually declares component component import component inject input angularcore import matdialogdata matdialogref angularmaterial import activatedroute angularrouter import baseform formformbaseform import formdataservice formdataserviceprovider formformformdataservice import baseapi apibaseapi component selector inlineadd templateurl inlineaddcomponenthtml styleurls inlineaddcomponentscss providers formdataserviceprovider export class inlineaddcomponent extends baseform module import ngmodule angularcore import sharedmodule sharedsharedmodule import inlineaddcomponent inlineaddinlineaddcomponent ngmodule imports sharedmodule declarations inlineaddcomponent exports inlineaddcomponent entrycomponents inlineaddcomponent export class forminputsmodule", "d": "2/2018"}, {"body": "also note run application ng serve component works fine", "d": "2/2018"}, {"body": "fake components used tests many real components module inclued testbed tested components error stupid please solve one year", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "hello see function overrideprovider exists manage use test use provider nt change nt manage find example function called could explain use properly thank advance one may able help", "d": "2/2018"}, {"body": "added following code working fine desktop browser mobile browser doesnt work idea nt redirect using mobile browser", "d": "2/2018"}, {"body": "nt declarative keeping unidirectional data flow ideal implementation would allow sort usage welcome home page title component gets rendered updated updates document head side effect way bind outer component class values need integrate tightly router render data coming naturally route resolvers operate idiomatically listening events imperatively calling methods like seems undermine angular component model similar api assuming something like possible", "d": "2/2018"}, {"body": "far see issue closed navigations observable router private another feature request way allowing enduser listen navigation use case single component enclosing iframe needs reset state iframe url user clicks link toward current page directive override whole application seems bit overkill case able override perroute basis would perfect actually", "d": "2/2018"}, {"body": "lemoinem clear nt able reset anything base observable setting flag", "d": "2/2018"}, {"body": "know old issue seems still happening angular angularjs", "d": "2/2018"}, {"body": "fdim issue closed fixed please open new issue track bug reporting", "d": "2/2018"}, {"body": "gkalpak done", "d": "2/2018"}, {"body": "needed use solution dherges nt work", "d": "2/2018"}, {"body": "duplicate superseded since one came first fixed edit different issue see", "d": "2/2018"}, {"body": "vicb think issue nt closed least become feature request way cancel observable subscription inside resolve function router events blocked resolve function completed resolve function makes less sense cancellable given even route changed everything frozen waiting discarded request back next meaningful routing", "d": "2/2018"}, {"body": "working around issue going times instead one fixed soon", "d": "2/2018"}, {"body": "issue found juliusstoerrle found need include bunch additional relative link want navigate nested modules lazy loaded case get work need need additional would great get update fix issue know application break eventually resolved", "d": "2/2018"}, {"body": "get update subscribing issue andor reading changelog someone appreciate comments made discussion issue simply subscribe updates button without sending emails everyone already subscribed", "d": "2/2018"}, {"body": "reporting understanding issue bug actually router designed work relative routes routing done based router config tree necessarily match url path understood lazy loading adds another notch tree needs traversing relative router could work fine however feel would nice also relative routing based url path router tree written little helpers need think people think relative routing expecting work like work around routing one level current url something like q would like see easy relative routing based url path well route config tree", "d": "2/2018"}, {"body": "made helper function actually help solves based jpduckwo comments pull request seemed fixed issue revealed issue relating named outlets going path named outlet nt work using solution use relative path use parent activatedroute notch routing tree import router activatedroute angularrouter angular relative path tempory solution angular nt like empty paths fixed version pull request angular issue removing check relative paths work named outlet using navigate named outlet currently relates secondary routes outlet routetest meant breaking nt possiable using like documented angular documentation key information relative routes like anuglar intended url path bug relates going parent tree export navigatebyrelative param string path param router router param activatedroute route export function navigatebyrelative path string router router route activatedroute hopefully help others surprisingly taken couple days find resolve looking though routing code hopefully adriensamson pull request fix issue hope solution helps deal pain", "d": "2/2018"}, {"body": "still issue using ngpackagr", "d": "2/2018"}, {"body": "obsolete", "d": "2/2018"}, {"body": "experiencing issue well angular", "d": "2/2018"}, {"body": "although configuration bit different trying achieve always render parentcomponent lazyone module module depending url url lazyonemodule rendered url two lazytwomodule rendered parentcomponent instance gets reinstantiated upon navigation two viceversa", "d": "2/2018"}, {"body": "jbgraug question get routes syntax especially mentioning", "d": "2/2018"}, {"body": "example application complicated parentcomponent part another module lazyloaded onemodule twomodule import parentcomponent componentsparentcomponent const routes routes path component parentcomponent pathmatch full loadchildren applazymoduletwolazyonemodule onemodule path two component parentcomponent pathmatch full loadchildren applazymoduletwolazytwomodule twomodule export const routes routermoduleforchild routes mlcmlapis sure understood question way using angular", "d": "2/2018"}, {"body": "jbgraug something like level could child parent course routing", "d": "2/2018"}, {"body": "mlcmlapis need parentcomponent rendered along childs think masterdetail navigation render one detail module lazily master module lazy loaded behaviour correct one problem parent component recreated every time along lazy modules", "d": "2/2018"}, {"body": "jbgraug still understand component displayed lazy module time want display place mean component lazy loaded module placed btw represent two different routes even mapped component case component instance kept without recreating syntax case new component instance created route one route", "d": "2/2018"}, {"body": "mean parentcomponent component lazy loaded module placed btw path path two represent two different routes even mapped component case component instance kept without recreating syntax xxx id case new component instance created route one route thats exactly case need achieve without using id ad recreating component guess bug flag allow behaviour", "d": "2/2018"}, {"body": "jbgraug hmm describing new functionality necessary record new feature request describe logic syntax details including real cases show really necessary introduce new feature additional code increases size remember necessary introduce breaking change new syntax effect actual api", "d": "2/2018"}, {"body": "mlcmlapis achieved desired behaviour one parent instance changing structure import parentcomponent componentsparentcomponent const routes routes path component parentcomponent children path loadchildren applazymoduleonelazyonemodule onemodule path two loadchildren applazymoduletwolazytwomodule twomodule export const routes routermoduleforchild routes guess doc could improved thanks help", "d": "2/2018"}, {"body": "maybe miss something fixed cases app app dependency core module app lazily loads lazy module lazy module dependency core module app module lazy module use singleton service provided core module gt service instantiaited twice run app look logs something wrong declarations explains please tell workaround mind need singletons singletons basis", "d": "2/2018"}, {"body": "rlegrand ca nt imagine provide singleton core module directly app module want reason need use following syntax", "d": "2/2018"}, {"body": "hi rlegrand get expected behavior achieve scenario use root technic please look doc", "d": "2/2018"}, {"body": "hi thank guyz without answer would probably used static attribute service sure manage one instance manually mlcmlapis called core module includes app example fact mean module provides services thank", "d": "2/2018"}, {"body": "rlegrand ah ok understand still think idea recombined especially singleton providers recommend include directly section app module parts like components pipes idea still fine", "d": "2/2018"}, {"body": "writer need work engineer document correctly probably needs higher level conversation pm planning level effort notable fyi jenniferfell", "d": "2/2018"}, {"body": "stated buy gmfun solution unwrittenfun works refreshing make app crash think bug really addressed soon lazy load module name router outlet quite common pattern auxiliary routes", "d": "2/2018"}, {"body": "js came across similar problem simple working around used canactivate route state problem history activate false thisplatformlocationpushstate state msg previousvisitedroute return activate", "d": "2/2018"}, {"body": "currently upgrading angular angular spent long time today figuring rootdir set root cause aot build failing way solved issue reverting line webpacktsconfigetc configuration build started working painful supposed easy upgrade reported error angularcompilerplugin almost completely useless finding root cause improving scenario would nice", "d": "2/2018"}, {"body": "solved creating observable passed emit example hopefully helps", "d": "2/2018"}, {"body": "obsolete results green working quite hard dealing flaky results", "d": "2/2018"}, {"body": "much would solved possibly sounds like askedfor capabilities much easily elegantly handled exposing private variables fear external references items hamfistedly manipulated wrecking havoc within form innards", "d": "2/2018"}, {"body": "agree work wider variety scenarios complex component handle several type urls needs remember state tree widget shows hierarchy data im using service keep state pain need keep track nodes downloaded nodes expanded etc lot coding could saved angular flexible", "d": "2/2018"}, {"body": "reason matchers nt called empty paths makes impossible define routes like artstar solution looks like bug", "d": "2/2018"}, {"body": "current behavior please op wrote changes meanwhile", "d": "2/2018"}, {"body": "tbosch per would better remove label", "d": "2/2018"}, {"body": "yes good answer understand right want navigate specific route show another component change route redirected use guard create guard nt worry wo nt navigate another route route example path component canactivate yourguard guard example export clan yourguard implements canactivate canactivate activatedroute activatedroutesnapshot state routestatesnapshot observable return canactivatenextrouteswitchmap allowed gt allowed return observableof true canactivatenextroute observable return logic solution work fine get difficult emplane specific", "d": "2/2018"}, {"body": "feels pretty clean correct", "d": "2/2018"}, {"body": "obsolete", "d": "2/2018"}, {"body": "struggling problem large angular project becomes issue components contain methods mutate inner state precisely public methodsproperties used template called references template issue continues components used dependency injections programmer ca nt safeguard components abuse everything public programmers assume autocomplete features ide show safe list propertiesmethods needed solution stop bugs came like works interface exampleview title string onclick component selector example template export class examplecomponent protected title string protected onclick return public get view exampleview return kind dirty hack get around aot compiling type checking much easier tell developer use view property allows define everything guarded protected also export template via little runtime overhead hope helps people", "d": "2/2018"}, {"body": "wrong changing code aot generating way tsc wo nt complain accessing private property", "d": "2/2018"}, {"body": "cosminadrianpopescu lose typechecking completely", "d": "2/2018"}, {"body": "type checking template component looks far better solution forcing components everything public thought speaking generated code checking generated code produces type errors think bigger problem generated code errors free right", "d": "2/2018"}, {"body": "looks far better solution forcing components everything public cosminadrianpopescu given already supported ivy without compromise typechecking makes sense find another worse solution generated code produces type errors think bigger problem angular make use typescript typechecking error generated code template compiletime template checking one powerful feature angular provided frameworks", "d": "2/2018"}, {"body": "given already supported ivy make sense find another worse solution exactly available excuse ignorance checked quick view nt exactly understand saying could please explicit ps thanks taking time explain little detail", "d": "2/2018"}, {"body": "exactly available ivy accessing component property template available without losing typechecking checked angular ivy quick view typescript property ecmascript private fields lexical scoped observed easily quick look position generated code", "d": "2/2018"}, {"body": "aha ok thank much info suppose angular issue anymore good know", "d": "2/2018"}, {"body": "likely ivy would turned default still behind flag like big refactoring would require time prove make sure everything works fine", "d": "2/2018"}, {"body": "since nt find official documentation link suppose also aot compiling right", "d": "2/2018"}, {"body": "indeed official documentation ivy totally right aot jit would still", "d": "2/2018"}, {"body": "would appreciate update issue", "d": "2/2018"}, {"body": "tried react hot css reload angular css reload page reload unbearable really expect feature", "d": "2/2018"}, {"body": "hey vicb happy document still need saying use iterating array nt know else qualifyexpoundexplain document still think need explicit working example also would place put template syntax ngforof trackby", "d": "2/2018"}, {"body": "taken way long finally fixing going close dupe", "d": "2/2018"}, {"body": "already fixfeature", "d": "2/2018"}, {"body": "surprisingly however think proper workaround updated version using rxjs pipable operators note use operator take property need arguments could additionally use operator assert operation emits parameter wantneed exist", "d": "2/2018"}, {"body": "trouble pipes currency pipe though manifesting sign rendered rendered code maybe post helps someone figure", "d": "2/2018"}, {"body": "angular still problem regard lifecycle methods dmitrysteblyuk mentioned zoechi already multiple tickets opened issue including closed favor ticket", "d": "2/2018"}, {"body": "ytilis see", "d": "2/2018"}, {"body": "benelliott reading ticket correctly issue explicitly exporting base class well child class", "d": "2/2018"}, {"body": "ytilis clarify mean implicit lifecycle hook inheritance nt work still works", "d": "2/2018"}, {"body": "yes explicitly call case looking runs work implicitly exactly jit mode", "d": "2/2018"}, {"body": "angular onwards found lifecycle methods superclasses called without need explicit forward", "d": "2/2018"}, {"body": "fahadhaq need add code array webpackconfigjs", "d": "2/2018"}, {"body": "fact looking good sample code problem changedetection strategy chosen case default strategy expect component mounted sanitize url youtube video case src attribute calls method returns secure url however changedetectionstrategydefault enabled angular pattern component tree reassembled every change made anywhere application within component causes calling method sanitize url video every reassembly dom understand problem two ways solve one change changedetection strategy component displays video leaving changedetectionstrategyonpush component case component requires state changes would trigger dom change check manually changedetectionref way treat video url directly component attribute instead calling function iframe src attribute let say receive data video api database load component via http make available view tip make sanitized url available advise observable http method queries data assigns attribute class sth export class app implements oninit video hope helped", "d": "2/2018"}, {"body": "validatorsrequiredtrue instead validatorsrequired", "d": "2/2018"}, {"body": "thx ocombe sounds really nice breaking changes syntax template translation thinking adding translations project nt want redo completely weeks", "d": "2/2018"}, {"body": "template syntax", "d": "2/2018"}, {"body": "thanks ocombe great news extremely promising kind production readiness expect ngivy renderer would get released understand wo nt battletested would still ready production use work major nearly current version browsers right", "d": "2/2018"}, {"body": "follow progress nt think everything ready since flag keep progressing even release breaking change anything honestly sure things know hello world app cli already working think things needed benefit optimizations new renderer probably work without everything checked said also means wo nt production ready nt bet product yet tested internal google apps might need breaking changes fix stuff using new renderer discretion risk", "d": "2/2018"}, {"body": "present", "d": "2/2018"}, {"body": "check roadmap feature blocked runtime", "d": "2/2018"}, {"body": "current behavior routerlink directive available subcomponents modules gt nothing gt error ca nt bind routerlink since nt known property answer use use import routermodule parent component appmodule", "d": "2/2018"}, {"body": "building angular component library embedded third party lib uses default exports control lib nt build", "d": "2/2018"}, {"body": "sorry priority would accept pr making pr really need rather waiting years opensource project", "d": "2/2018"}, {"body": "pretty horrible", "d": "2/2018"}, {"body": "really appreciate current hacky solutions provided wait get changed", "d": "2/2018"}, {"body": "medeirosrich good buddy best solution works like charm", "d": "2/2018"}, {"body": "agree many others disabled needs dynamically controlled otherwise fairly useless", "d": "2/2018"}, {"body": "kara closed", "d": "2/2018"}, {"body": "hunderlinek one true messiah dzmitryshylovich dunno wtf going suggestions systematically unrunnable going assume deprecation made way angular worked comments removed edited people thrown course", "d": "2/2018"}, {"body": "closed", "d": "2/2018"}, {"body": "case feature module import routing module feature forgot add", "d": "2/2018"}, {"body": "addition ngmodelchange fires form marked dirty means subsequent check dirty form done thread regard form dirty", "d": "2/2018"}, {"body": "supersede closed", "d": "2/2018"}, {"body": "tried seems longer work", "d": "2/2018"}, {"body": "issue using urlsearchparams prepare parameters post authtoken service char replacedencoded space authentication fails", "d": "2/2018"}, {"body": "ai nt pr trying address us sitting", "d": "2/2018"}, {"body": "xd ahem mean issue", "d": "2/2018"}, {"body": "ever solved", "d": "2/2018"}, {"body": "running issue would nice get fixed", "d": "2/2018"}, {"body": "chalk another user needs lazy load secondary route component combo", "d": "2/2018"}, {"body": "struggled bit convinced bug perhaps issue documentation working hands angular book created sample project demonstrates concept use given parent component router config notice routerlink specifies detail outlet originally tried redefine master outlet link link simply would nt anything perhaps issue everyone running parent component usermanagementcomponentts routing config managerroutingmodulets navigation usertablecomponenthtml", "d": "2/2018"}, {"body": "found another thread solved problem fine", "d": "2/2018"}, {"body": "photostu clear specify route masterprimary outlet config masterprimary default ie empty route mine", "d": "2/2018"}, {"body": "root level routing looks like using call route recipe sidebar cart get distinct modules loaded different routeroutlets", "d": "2/2018"}, {"body": "reading thread sure working fine leave lazy route empty outlets seem work fine config typescript approutingmodulets const approutes path empty loadchildren pathtomycomponentmodule mycomponentmodule typescript mycomponentroutingmodulets const mycomponentroutes path mycomponent real route component mycomponent children path child outlet aux component childcomponent", "d": "2/2018"}, {"body": "hi trying write test case following method able successed historicalweatherdata const lat thissearchresultcoordlat const lng thissearchresultcoordlon thishisoricaldataservicegethistoricalweatherdata lat lng subscribe response gt thishistoricaldata response error gt consolelog error gt consolelog executed historical wreather", "d": "2/2018"}, {"body": "solution child routes part functionally behaves desired routes lazyloaded conceptually however may want separation docs describe unit functionality understandable want encapsulation module without wanting bundled separate lazyloaded file", "d": "2/2018"}, {"body": "anyone curious past weeks think come something handles halfway decent set usecases including sibling secondary routeroutlets complex pushstate history created polyfill application module shared directives module application nt need know anything bear problem wait angular team implement something core nt ever think", "d": "2/2018"}, {"body": "hey bennadel thanks polyfil available npm", "d": "2/2018"}, {"body": "solution awesome also restores scroll position without pressing button example going home scrolling go contact click back home scrolls page undesired effect per standards", "d": "2/2018"}, {"body": "stephengardner unfortunately approach npm sure package angular modules tried looking past always seems absurdly complicated supposed could publish ts files leave compile nt seem community advocates hopefully packaging get simpler", "d": "2/2018"}, {"body": "took long figure happening one agree routerlink setting tabindex behalf least without obvious way came across tried apply routerlink matrow mattable looks awful focused outline", "d": "2/2018"}, {"body": "similar intellix component show input errors ca nt listen changes touched dirty control object using instead able use among hundreds components project one way listen changes aside including input property would need passed whenever component used hope issue fixed soon nt see taking long think best options either using state object passed creating observable state change like shown post intellix hard implement options issue considered important", "d": "2/2018"}, {"body": "use firebase backend server issue facing following component changedetectionstrategy set onpush reactive form async validator template binds errors following way whenever validator fired trigger change detection component found workaround following code someone better idea please let know", "d": "2/2018"}, {"body": "mprzybylski bit lost expect cd run component simple demo reproduction related firebase simulate whenever validator fired trigger change detection component", "d": "2/2018"}, {"body": "mlcmlapis sorry confused prepared sample app inputs required inputs async validator check value promise resolves second component uses cd triggered interact template either click loose focus input try use first input wait timeout notice nothing happens second input works charm small remark sync validators works fine try remove text input fire right way maybe confused something wrong let know", "d": "2/2018"}, {"body": "mprzybylski apologize nt enough time right look deeply one notice immediately sense talking components composition child setting parent passing object input child crux concept demo code irrelevant", "d": "2/2018"}, {"body": "mlcmlapis totally agree make sence set onpush use one component example try say place trigger cd component use async validators forms onpush strategy", "d": "2/2018"}, {"body": "mprzybylski would prefer talk case really related always confusing case asyncvalidators nothing", "d": "2/2018"}, {"body": "mlcmlapis sorry wrong change detection strategy default works expected", "d": "2/2018"}, {"body": "mprzybylski oh interesting look deeply probably hidden unexpected relation", "d": "2/2018"}, {"body": "chuckjaz hi create browser animation import sequence trigger animate style group query q transition animatechild angularanimations const query optional true gt q export const slideleft trigger slideleft transition gt query enter leave style position fixed width query enter style transform translatex sequence query leave animatechild group query leave style transform translatex animate cubicbezier style transform translatex query enter style transform translatex animate cubicbezier style transform translatex query enter animatechild import component oninit angularcore import slideleft assetsanimationsrouteranimations import router angularrouter component selector approuting templateurl routingcomponenthtml styleurls routingcomponentscss animations slideleft export class routingcomponent implements oninit router router constructor ngoninit getstate outlet return outletactivatedroutedatastate get nt see case applies", "d": "2/2018"}, {"body": "public ngafterviewinit settimeout gt let modalfactory thiscomponentresolverresolvecomponentfactory thismodalinstanceconfigcontent thiscomponentinstance thiscontainercreatecomponent modalfactory null thisinjector worked", "d": "2/2018"}, {"body": "choeller opened issue aug ngbot bot added backlog milestone days ago comment", "d": "2/2018"}, {"body": "andreyanandreev robot introduced recently ngbot", "d": "2/2018"}, {"body": "problem used resolve promise observable work around service case caches data would nice supported natively javascript injectable export class documentsresolve implements resolve javascript component selector appdocumentlibrary templateurl documentlibrarycomponenthtml styleurls documentlibrarycomponentcss export class documentlibrarycomponent implements oninit ondestroy public documents observable", "d": "2/2018"}, {"body": "example simplifying reusable base class javascript export abstract class hotresolve implements resolve public resolve route activatedroutesnapshot state routerstatesnapshot promise return new promise resolve reject gt const observable thishotresolve route state observablefirst subscribe gt resolve observable javascript injectable export class documentsresolve extends hotresolve", "d": "2/2018"}, {"body": "good example using feature firestore work realtime data updates would like continue note updates resolved route data", "d": "2/2018"}, {"body": "hey greggbjensen example second version must documentservice calling service failing get past navigation vice versa supposed call use documentresolve service documentservice nt get use code also error srcassetsserviceshotresolveservicets error property first exist subject", "d": "2/2018"}, {"body": "greggbjensen actually think takes boilerplate code might already covers elsewhere without probably happens observable created observable subscribed network request made first item arrives subscription released observable provided component observable subscribed network request made component constructed values pending observable stream though resolved note network request made twice yet navigation still completes without data sequenced observable stream reason reference publishreplay original comment years later still fighting issue pretty severely iterated many solutions far perfect due lack support need various points router code example another problem best place unsubscribe posed question yet another problem maintainable pattern defining resolvers like try dig current base classes mentioned none pretty lack trying", "d": "2/2018"}, {"body": "core code current implementation relative topic typescript export abstract class viewmodelfactory implements resolve constructor private router router export abstract class viewmodel subscription new subscription private hasconnected false injectable export class appspecificviewmodelfactory extends viewmodelfactory factory provides receiver injected services require without needing distinct class oneline network call constructor private ds dataservice router router super router export class metricviewmodel extends viewmodel ca nt resolve router without intermediary unless distribute matching magic strings case metricid multiple files constructor public id number private ds dataservice super metric thisdsmetricgetmetric thisid metricfeedback thisdsmetricfeedbackgetformetric thisid metriccriteria thisdsmetriccriteriagetformetric thisid export routes transformviewmodelroutes appspecificviewmodelfactory path metricid component metriccomponent arrow expression breaks aot necessitates precompile step viewmodel r p gt rmetric p metricid following resolver implied transform resolve appspecificviewmodelfactory", "d": "2/2018"}, {"body": "note implementation hooks solve router issues encountered well distributing magic string parameters typesafe resolves constructing urltree outside router typesafe parent route parameters others nt resolved pattern issues surrounding aot related issues much say honestly kinda burned issue", "d": "2/2018"}, {"body": "jasonaden ps added demonstration issue causing us lot grief also shows couple related issue trying solve love would take look give little guidance see better ways accomplish fighting long time could use author guidance", "d": "2/2018"}, {"body": "kemsky router stops waiting observable complete loose possibility redirect component created nt see way current assumption one item observable sequence therefore proceeding navigation first result nt break implementations suggesting allowing configuration would nt capture usecases would relevant also even without global configuration returning observable promise returning observablelast observablereduce similar operators provide easy local configuration approach selecting observable operator necessary anyway determine actually done multiple stream values need unsubscribe point gets tricky components reused router totally agree hard see publishreplay sharereplay used address sample however becomes harder urltree constructors related tooling nt exported public use capturing query parameters would address component reuse scenario might easily addressed integrating internal router tooling instead", "d": "2/2018"}, {"body": "syndicatedshannon understood definitely agree issue right preparing means getting critical fixes plus updates support new rxjs said shortly starts diving topic plus others regards router hopefully directly addressing observables exposedused within router know topic part problem consistency across framework terms observables exposed used something looking standardize likely start router", "d": "2/2018"}, {"body": "tatsujb syndicatedshannon example documentservice holds onto original observable request made uses fetch get list publish back stream update create delete made component calls get cached observable stream updates typescript cache hot observable allows stream cached pushed export class subjectfetch private subject replaysubject private observable observable private fetch gt observable injectable export class documentservice private documentscache subjectfetch", "d": "2/2018"}, {"body": "greggbjensen observables end nt see subscription token saved anywhere sorry really following works critical think get general idea relative ticket", "d": "2/2018"}, {"body": "syndicatedshannon far know services injectables nt need unsub since handle unsubbing pattern reserved components", "d": "2/2018"}, {"body": "jasonaden thanks reply going try summarize see major routerresolverelated issuesenhancements raised take edits done also try dig related tickets already capture individual line items help identify items nt actually issues created yet also start looking issue maybe list helpful hot resolve confusing waiting observable complete appears hang application without error passing hotresolved observable component requires complex boilerplate manipulation unsubscribing hotresolved observable requires asymmetric postresolve code event notifies router releases resolved items possible solution line difficult evaluate complete route identity comparison alternate solution line b resolve parameter pattern router resolve support parameters requires matching parameter magic strings route template resolver aot blocks functions arrow expressions route definitions resolve pattern typically results many cumbersome nearlyidentical classes access di ctor state resolve params state c resolve typing difficult get typesafe resolution resolve components difficult get parentfulfilled resolves child route resolutions", "d": "2/2018"}, {"body": "tatsujb true following relatively limited set usecases router nt perform subscribe alter observable way wo nt token unsubscribe example would generally trust component unsubscribe pipe unless really expensive operation try avoid anyway would also expect observable handed directly unsubscribed moment resolution complete precisely resolution completion coincident unsubscribe handing exactly approach taking case forcefully taken unsubscribe responsibility test specific scenarios adding operators see happens", "d": "2/2018"}, {"body": "using cli issues router transition animations installing importing polyfill across edgesafari eg typescript import trigger animate style group animatechild query stagger transition angularanimations export const routertransition trigger routertransition transition gt animation query enter leave style position absolute width optional true animation query animateonroute style opacity optional true animation group query leave style transform translatex animate easeinout style transform translatex opacity optional true query enter style transform translatex animate easeinout style transform translatex opacity optional true", "d": "2/2018"}, {"body": "notesfix plan url original issue appears work issue states fails match route however valid url therefore something parenthesis would get parsed another route url instead would parse two toplevel based agree url invalid valid version would parentheses encoded url parameters andor fragments probably cause errors match current behavior serializing url params contain parens serialize encoded version refreshing deep linking wo nt cause errors", "d": "2/2018"}, {"body": "sounds reasonable see really matter routerlink erroneously letting unencoded parentheses everything else seems spec", "d": "2/2018"}, {"body": "fix reverted", "d": "2/2018"}, {"body": "identical template inline templateurl breaks validation problem need change escaping html javascript string literals support question closed", "d": "2/2018"}, {"body": "gilbertogwa solution great really thinkg official directive simplify implementation valueaccessor solution requires lot work quickly becomes mess settimeout value changed warnings statuses updated correctly reduced code least lines gilberto method", "d": "2/2018"}, {"body": "thanks responses guys believe ended passing handle formgroup child components referencing child templates everything plays nicely seems like gilbert response bit cleaner", "d": "2/2018"}, {"body": "still huge pain deal shared services get far good substitute best thing could come service controls navigation also acts resolve guard state attached every route snapshot nt figured good way also update history api ts class statefulnavigationservice implements resolve private state constructor private router router navigatewithstate commands extras navigationextras state promise thisstate state return thisrouternavigate commands extras success gt success historyreplacestate thisstate null thisstate null return success resolve route activatedroutesnapshot routerstate routerstatesnapshot return thisstate", "d": "2/2018"}, {"body": "behaviour", "d": "2/2018"}, {"body": "really wish angular team would see much usability issue average developer burying heads sand making excuses nt making unit tests go green", "d": "2/2018"}, {"body": "following typescript describe thing gt let clock jasmineclock tests using", "d": "2/2018"}, {"body": "next version support test cases work without additional code add documentation new version released support auto patch javascript fakeasynctestzonerun gt const start datenow testzonespectick const end datenow expect end start tobe fakeasynctestzonerun gt const start new date testzonespectick const end new date expect endgettime startgettime tobe automatically run test called javascript beforeeach gt jasmineclock install rxjs support need import", "d": "2/2018"}, {"body": "removing better making option nt work case use different types directives html html lt goes wrong parent also child filter x gt xelementnativeelement thiselementnativeelement besides even dirtier also requires exposing elementref", "d": "2/2018"}, {"body": "going give try hopefully working fix weekend", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "matsko months since last update news", "d": "2/2018"}, {"body": "sorry met problem button work normally local environment use ng build prod outputhashingnone build code button redirect url refresh current page reproduce website please", "d": "2/2018"}, {"body": "find running angular nt throw throws", "d": "2/2018"}, {"body": "superseded quite hard search due bad naming description", "d": "2/2018"}, {"body": "hi everybody try use injectable data define injectable import injectable angularcore injectable export class data public storage public constructor define like provider ngmodule ngmodule declarations appcomponent appcomponents bootstrap appcomponent imports nativescriptmodule nativescriptroutermodule nativescriptroutermoduleforroot approutes providers data define origin page like public constructor private router router private data data public ontap thisdatastorage firstname nic lastname raboy address city san francisco state california thisrouternavigate receive page lke public constructor private data data consolelog jsonstringify thisdatastorage hope help nice day david mart\u00ednez ros davidnezan", "d": "2/2018"}, {"body": "use navigate data", "d": "2/2018"}, {"body": "obsolete platforms provide rather static", "d": "2/2018"}, {"body": "think pretty nasty hard detect bug spent good half day lucky copy paste demo code space params please fix soon", "d": "2/2018"}, {"body": "yeah worked skuriles ahe told html create new formgroup worked thank", "d": "2/2018"}, {"body": "chromedriver bug fixed september improved anything angular changes still needed", "d": "2/2018"}, {"body": "need update docs take hour investing", "d": "2/2018"}, {"body": "working like", "d": "2/2018"}, {"body": "denisyilmaz using setattribute working details css uioverlaypanel top left border solid transparent content height width transform rotate position absolute pointerevents none bordercolor rgba bordertopcolor fff borderwidth marginleft var marlft function toggleoverlaypanel event overlaypanel overlaypanel selectedoptionlabel consolelog selectedoptionlabel thisrenderersetattribute overlaypanelelnativeelement style marlft overlaypaneltoggle event thisrenderersetattribute overlaypanelelnativeelement style marlft debug mode see csstext marlft set like nt see marginleft moving help", "d": "2/2018"}, {"body": "read formatting syntax correct post please looks terrible", "d": "2/2018"}, {"body": "obsolete", "d": "2/2018"}, {"body": "angularprotractor still open without update since october definitely people stuck angularjs due issue", "d": "2/2018"}, {"body": "run issue mistake introduced barrel pity angular never produces helpful error messages", "d": "2/2018"}, {"body": "vikerman think issue still opened simple test involving still fail since ng let take method returning observable delay following simple test still failing ng cli rxjs typescript list races fakeasync gt let fetchedraces array const observable servicelist observablesubscribe races array gt fetchedraces races tick expect fetchedraceslength tobe service return races delay tick expect fetchedraceslength tobe service return race also fails tick directly typescript list races fakeasync gt let fetchedraces array const observable servicelist observablesubscribe races array gt fetchedraces races tick expect fetchedraceslength tobe service return race", "d": "2/2018"}, {"body": "bobrosoft scrolling promise resolve best solution furthermore chrome works safari", "d": "2/2018"}, {"body": "thanks", "d": "2/2018"}, {"body": "interested dynamically loaded html interested statically loaded html equivalent include statement c razor html helper repeatative html bindings used multiple places good example would set say different grids displayed different data last columns common grids inherited components need lot common html parent class example c helper razor would razortxt columns want repeated columnstxt building columnstxt compile time would present zero security risks would save lot code razortxt columnstxt", "d": "2/2018"}, {"body": "seanspyder make component", "d": "2/2018"}, {"body": "wesleycho issue closed", "d": "2/2018"}, {"body": "jcwardle thank polyfill link really saved bacon one", "d": "2/2018"}, {"body": "future googling new router uses syntax", "d": "2/2018"}, {"body": "u resolved back end spring getting hit response getting blank array using post request", "d": "2/2018"}, {"body": "chance someone point us handle seems like ball kinda dropped", "d": "2/2018"}, {"body": "two years later getting issue using validator works nt fixed angular version", "d": "2/2018"}, {"body": "georgeknap directive lower case remember different", "d": "2/2018"}, {"body": "mlcmlapis might getting bit confused kara posted decided keep validators lowercamelcase ie work", "d": "2/2018"}, {"body": "georgeknap talking validator function name error property name used validator always please try read thread", "d": "2/2018"}, {"body": "trotyl ah ok bad", "d": "2/2018"}, {"body": "also break email validation angular browser native one validates text input wonder type property element like attributes ng already created element property bindings interpolation", "d": "2/2018"}, {"body": "funkizer see browser angular", "d": "2/2018"}, {"body": "limitation framework see also formsspecific version issue", "d": "2/2018"}, {"body": "similar use case delete button clicked want auto subscribe controller method template returns template dont care data encapsulated side effects needed taken care controller super controller via pipe map catcherror finalize chain asking enrich pipe support use case add new pipe auto subscribing controller methods return controller method extends super controller expecting template workaround works", "d": "2/2018"}, {"body": "imalhasaranga good job see", "d": "2/2018"}, {"body": "ca nt placeholder hyperlink used purpose", "d": "2/2018"}, {"body": "laserus think placeholder link intended represent link placeholder link still link attribute added like mouse cursor hand clickable useful breadcrumb scenarios example nt want current page link still nt want conditionally replace nt think right solution problem", "d": "2/2018"}, {"body": "problem styling pretty much easy setup styles following color red fontweight bold textdecoration none textdecoration underline cursor progress link color blue fontweight normal textdecoration underline cursor pointer note style placeholder links one simple style rule span need class want span elements underlined", "d": "2/2018"}, {"body": "laserus styling course could style elements wish problem semantic intended role placehodler link link nt style links bind click events solution different style element link bind click event solves problem issue violates html element semantic", "d": "2/2018"}, {"body": "judging logic aforementioned solutions completely incorrect nt first place reload page go top page hack people really want button styled hyperlink example right see use placeholder even breadcrumb example useless usage different span way affected tabindex although also see placeholder usage violate element semantic every approach violates strict", "d": "2/2018"}, {"body": "people really want button styled hyperlink agree", "d": "2/2018"}, {"body": "still face issue even though tried compatibility mode ts target polyfills uncommented meta tag added shims added time error appears underlying projects referenced happens ff chrome mobile browsers fine webpack anyone may check following ghpg", "d": "2/2018"}, {"body": "davutg dist code look valid", "d": "2/2018"}, {"body": "delagen thanks comment spent two hours could nt solve issue yet republished time without prod option unfortunately still similar errors unable get property call undefined null reference mentioned angularcli tsconfig looks like seen polyfillsts lines uncommented compileonsave false compileroptions outdir distouttsc sourcemap true declaration false moduleresolution node emitdecoratormetadata true experimentaldecorators true target typeroots nodemodules types target lib dom change lib array generic array lt gt iterable set kind classes cause errors expected polyfills solve issues even underlying projects issue referenced mentioned could errors caused underlying projs use libraries like observablecollection typescriptlinq nt know carry debugging details check environment created brand new app use polyfills works new project ie nodemodules wiped old shims typings kind recommendations obsolete technics tried neither solved issue packagejson seen", "d": "2/2018"}, {"body": "davutg output still style declaration nt know nt use angularcli", "d": "2/2018"}, {"body": "delagen figured problem expected underlying projects nt support actually npm distributions designed remove following libs packagejson project appeared sure lost functionalities nt know way repackaging libs directly way reactiveproperty typescriptlinq observablecollection npm package works expected even clientstore would lilke use useful packages used rollup delivered umd know compatible ones request project owners deliver packages enabled get fork work lately noticed even project owner mentioned project compiled ecma script edition explains situation nt understand lib intentionally compiled since dozens still around please aware library intentionally compiled ecmascript library neither tested designed run javascript engines nt support ecmascript standard want pollute issue loop anymore wanted share novice experience people like looking workaround underlying libs well", "d": "2/2018"}, {"body": "denissb code used work versions angular made hack working set directly following part setup enable lazyloading multiple components page working today typescript export class appmodule constructor private injector injector private moduleloader systemjsngmoduleloader private componentfactoryresolver componentfactoryresolver private ga analyticsservice ngdobootstrap appref applicationref consolelog entrycomponents const w entrycomponents thiscustombootstrapcomponent appref thiscomponentfactoryresolverresolvecomponentfactory w private custombootstrapcomponent appref applicationref factory componentfactory lt gt void bootstrap one many components page contains selector const elements documentgetelementsbytagname factoryselector elementslength gt elementslength gt multiple elements make unique selectors const originalselector factoryselector let j j lt elementslength j elements j id originalselector j factory selector elements j id lt lt lt bad consolelog factory apprefbootstrap factory factory selector originalselector else consolelog one element bootstraping factoryselector apprefbootstrap factory", "d": "2/2018"}, {"body": "jmbarbier nt use hack anymore see", "d": "2/2018"}, {"body": "validations firing onblur appear conflict cancel button form cancel like form reset total dismiss inputedit operation possibly even closing form field focus validation logic fires field loses focus cancel click occurs particularly bad ux form inside modal since cancel button also dismiss modal except validation firing first example believe angular could set formsubmitted false inside cancel click handler angular submitted readonly attribute set form cancel without firing validations", "d": "2/2018"}, {"body": "israellev code javascript code importing location inject constructor waste", "d": "2/2018"}, {"body": "tried understand angular changedetection surprised ngafterviewchecked called although changed changedetectionstrategy onpush input property changed event fired inside component seems component really checked small example components", "d": "2/2018"}, {"body": "moirag sequence hooks processed case cd could expensive place code run frequently hook also decides component refreshed also true", "d": "2/2018"}, {"body": "example tried show called component set onpush input property changed event triggered within component expected behavior angular used", "d": "2/2018"}, {"body": "moirag yes expected example also shows component refresh done hooks processed fine zero performance hit opposite situation would pass new reference onpush expects detects full refresh component done potential performance hit hooks still allow add extra code absolutely way even enabled full refresh component processed", "d": "2/2018"}, {"body": "mlcmlapis ok thanks information thought ngafterviewchecked called component really checked", "d": "2/2018"}, {"body": "forget export component withrouter example export default withrouter withcookies", "d": "2/2018"}, {"body": "vicb original problem automatically apply class components generated router achieved current router sorry missing something obvious could nt see documentation", "d": "2/2018"}, {"body": "hi one know use parse angular component since issue opened", "d": "2/2018"}, {"body": "simple works time hope helps", "d": "2/2018"}, {"body": "understand paulogr method traditional way something like angular since supposed touching dom right", "d": "2/2018"}, {"body": "poulogr approach nt account tabindex adjustment keyboardonly users though someone using keyboard hit enter link page scroll go tab page jump right back", "d": "2/2018"}, {"body": "far straightforward solution seen far nt remember came guess supposed fragment attribute changes url nt jump section need add anchor tag within tag using complete trick", "d": "2/2018"}, {"body": "anchor service added angular need build accessible apps feature isolates enormous community please prioritize getting developed thank", "d": "2/2018"}, {"body": "jorgjanke solution navigate correct id page disregards styling routerlinkactive also hard time applying fragment attribute value navigate element id routerlinkactive stays intact following applies correct active styling click nt go correct route page hash work following function however wondering really best solution", "d": "2/2018"}, {"body": "enable service side cors spring use crossorigin origins maxage restcontroller public class xyzcontroller case angular application running port spring application running port say without enabling cors would work", "d": "2/2018"}, {"body": "want use api created using nodejs resolve issue", "d": "2/2018"}, {"body": "obsolete since dsl already removed", "d": "2/2018"}, {"body": "oprating system npm warn saveerror enoent file directory open c userskapilpackagejson npm warn enoent enoent file directory open c userskapilpackagejson npm warn schematicsschematics requires peer angulardevkitcore none installed must install peer dependencies npm warn bootstrap requires peer jquery none installed must install peer dependencies npm warn bootstrap requires peer popperjs none installed must install peer dependencies npm warn kapil description npm warn kapil repository field npm warn kapil readme data npm warn kapil license field npm warn optional skipping optional dependency fsevents nodemodulesfsevents npm warn notsup skipping optional dependency unsupported platform fsevents wanted os darwin arch current os arch date", "d": "2/2018"}, {"body": "guys least fix documentation misleading makes cry refer template reference variable anywhere template reference variable anywhere angular contexts within contexts within", "d": "2/2018"}, {"body": "marking dirty seems dirty", "d": "2/2018"}, {"body": "working help", "d": "2/2018"}, {"body": "issue rahulwinner", "d": "2/2018"}, {"body": "robwormald traction issue would certainly go long way towards making things easier use", "d": "2/2018"}, {"body": "bryanrideshark best chance supported think surprised pr linked issue", "d": "2/2018"}, {"body": "happen ship ivy wed feb james pike notifications githubcom wrote bryanrideshark best chance supported think surprised pr linked issue receiving mentioned reply email directly view github mute thread", "d": "2/2018"}, {"body": "evanplaice dude freakin put github gist fucking genius", "d": "2/2018"}, {"body": "longer relevant", "d": "2/2018"}, {"body": "get full response object", "d": "2/2018"}, {"body": "shivarajnaidu", "d": "2/2018"}, {"body": "yeah feel like pretty common use case nt need resolve data already want pass along route navigating sure make service sole purpose temporary state holder transferer feels gross unnecessary yes parammap exists tries serialize everything url also nt need case ca nt support complexnested objects", "d": "2/2018"}, {"body": "use navigate data", "d": "2/2018"}, {"body": "u open market vue", "d": "2/2018"}, {"body": "setting outlet value null worked long nt two outlets name page hiddenshown different viewports angular flexbox bug", "d": "2/2018"}, {"body": "obsolete", "d": "2/2018"}, {"body": "yup thanks", "d": "2/2018"}, {"body": "another way solve probably common one improve ngfor syntax", "d": "2/2018"}, {"body": "issue still exists using", "d": "2/2018"}, {"body": "say angular stressful javascript framework deal due adoption work somehow paradoxically overengineered well thought", "d": "2/2018"}, {"body": "say angular stressful javascript framework deal due adoption work somehow paradoxically overengineered well thought giwayume understand frustrated also understand things perfect comments constructive create value please stay subject", "d": "2/2018"}, {"body": "people using tslint wanting avoid issue suggest installing well enabling rule", "d": "2/2018"}, {"body": "mhevery yet another small issue framework run many mind decided break constructive criticism framework imitate everything little brother vue especially stellar dev error handling far seen vue got everything right try equivalent fiddle latest angular using hostlistener component attribute selector click event fires times click crazy bug like sign use case even considered", "d": "2/2018"}, {"body": "lost much time eventually faced following made clear", "d": "2/2018"}, {"body": "kind label priorityseverity", "d": "2/2018"}, {"body": "anybody still watching issue please take look syntax nt really documented like know get working keys mentioned upthread use printable representation key number letter many keys nt valid part dom attribute directive name brackets pipe etc", "d": "2/2018"}, {"title": "flexbox column width collapse safari using transitiongroup", "body": "version reproduction link steps reproduce go jsfiddle link click button children removed second column expected chrome firefox second columns width collapse children removed columns also animate expect occur safari actually happening safari second column width remains repaint occurs ran issue whilst testing work mobile safari able reproduce issue desktop safari high sierra amp safari also created another jsfiddle using vue column width collapses", "num": "7724", "d": "2/2018"}, {"title": "unable passing props component define order treated", "body": "version reproduction link steps reproduce given following template want modify props time would proceed expected first modified actually happening however vue first taking account leading vueautonumeric component incorrectly update internal raw value instead since defines number allowed decimals instead default order set super important component since first set autonumeric check many decimal places needs keep default means convert given first chance take account modifies allowed number decimal places would first set given value would correctly kept decimals would allow displaying question way passing props component define order treated instance previous example using component want modify time using single object need make sure modification done first modifying otherwise particular case decimal places dropped see example easily see bug far reliably get correct result manually first change change block wondering could automatically inside component prevent user manually time want update optionsvalue context issue", "num": "7723", "d": "2/2018"}, {"title": "ambiguous combined usage slotscope vfor", "body": "version reproduction link steps reproduce see codepen link use following code html propsitemtext itemtext js consoleclear vuecomponent mylist props items template mylisttemplate new vue el app data items id x text item message message id text item message message id z text item message message red z expected warning way solve warning working solution actually happening console warning template solves warning breaks functionality html propsitemtext neither works html propsitemtext", "num": "7722", "d": "2/2018"}, {"title": "webview loads blank", "body": "", "num": "7721", "d": "2/2018"}, {"title": "vue warns missing required prop default value", "body": "version reproduction link steps reproduce specify required prop default value render component without specifying value prop expected component render following without prop validation errors html number actually happening component renders ok warns missing required prop true prop specified since default value warning message exactly check appears checks two things prop provided least prop value nonnull nonundefined think case required prop default value relaxed otherwise enforce prop never null also providing default value prop value provided", "num": "7720", "d": "2/2018"}, {"title": "\u600e\u6837\u8ba1\u7b97virtual dom \u6e32\u67d3\u7684\u8017\u65f6", "body": "version reproduction link steps reproduce \u6bd4\u5982 expected \u8fd9\u4e0d\u662f\u4e00\u4e2abug report actually happening \u4f46\u662f\u6ca1\u6709\u5408\u9002\u7684\u5206\u7c7b \u5177\u4f53\u8bf4\u660e\u89c1", "num": "7719", "d": "2/2018"}, {"title": "use vmodel array prop update prop unexpected someway", "body": "version reproduction link steps reproduce open click tab detail wrote comments expected component update share data parent component strict wish statement work actually happening statement work unexpected modified share data parent component", "num": "7718", "d": "2/2018"}, {"title": "async component add api reload load failed async component", "body": "problem feature solve currently vue asynccomponent use http load js file may fail due network break timeout api exposed way make lead user interact try reload component instead refresh whole page addition detailed error exposed show different states based error tks advance proposed api look like vue asynccomperrormessage click reload export default methods reload asynccompreload", "num": "7717", "d": "2/2018"}, {"title": "warnings lead different behavior", "body": "version reproduction link steps reproduce check working example using minified vue compare failing example using dev vue expected expect minified dev versions vue result outcome property defined parent expect render child even though nt explicitly defined prop preferably vuejs warnings would nt lead components failing compile actually happening minified production build code works expected developer build getting warning prevents component compiling assume prevent making typo forgetting add data property child component warning super useful general thanks taking time make let know need examples help issue thanks", "num": "7716", "d": "2/2018"}, {"title": "global window modifier von listeners new property listeners", "body": "problem feature solve solves issue components like keys called focused element leads windowaddeventlistener keyup thisevent destroy windowremoveeventlistener keyup thisevent solve issue beforemount registering events beforedestroy vue handle vue way like handling keycodes proposed api look like keyup event like input keyupglobal close keyupwindow close maybe vue instance listeners keyup thisevent", "num": "7715", "d": "2/2018"}, {"title": "incrementing variable vfor loop increments hundred times expected", "body": "version reproduction link steps reproduce click run notice speed rendering value variable incr rendering expected expect variable incr increases vfor finishes actually happening variable incr increases vfor finishes app works slow also getting vue error may infinite update loop console want ids example instead", "num": "7714", "d": "2/2018"}, {"title": "use better types model prop type", "body": "version reproduction link steps reproduce expected typescript error actually happening typescript report error property gettime exist type string use vue typescript want set component prop type date find something could userful optionsdts make simple test still nt know solve thanks suggestion", "num": "7713", "d": "2/2018"}, {"title": "html keyboard input element supported", "body": "version reproduction link steps reproduce add element expected render element correctly actually happening", "num": "7711", "d": "2/2018"}, {"title": "slots resolving issue subsequent components", "body": "version reproduction link steps reproduce stated docs slots fn components used component knows otherwise pass along children next component could deal expected would expect children component would resolve slots correctly long children passed along actually happening initial component gets resolved slots well subsequent component gets children passed along nt", "num": "7710", "d": "2/2018"}, {"title": "vue get new props data hook activated", "body": "problem feature solve let suppose component child prop child use query data server found prop id value try use get new id work work think right way way get right value prop data proposed api look like like", "num": "7709", "d": "2/2018"}, {"title": "instanceof expressions work", "body": "version reproduction link steps reproduce create class set data use instance class create expression example vif using instanceof note expression return true span rendered example expected expected expression evaluates true actually happening expression return true resulting displayed span workaround create expression form instancecontructorname typesafe stringlytyped instead thus toolable", "num": "7708", "d": "2/2018"}, {"title": "styles updated time", "body": "version reproduction link steps reproduce open scroll inside region black border top bottom see another div black border text inside expected text always right midline visible area smaller bordered div actually happening text sometimes midline produces visible lags see wrongly rendered frames developer tools eg note clarity temporarily set red border div text online demo available effect achieved modifying text inside smaller div every scroll seems modified styled applied time newly scrolled frame rendered using old style highly suspect styles also data applied time possible scenarios problem browser since raw dom solution works well source demo angular react suffer problem react source react demo angular source angular demo", "num": "7707", "d": "2/2018"}, {"title": "class change transition working mounted lifecycle", "body": "version reproduction link steps reproduce component mounted change class initiate transition working element snaps left right without transition expected element gradually transition left right actually happening element jumps left right wrapping class change settimeout would allow transition effect work however without settimeout element simply jumps left right issue replicated class binding apologize bug mystery posting last resort ps", "num": "7706", "d": "2/2018"}, {"title": "events modifiers always return undefined", "body": "version reproduction link steps reproduce create event modifier create directive get event instance vnode call event maybe dummy event required expected event without modifiers return function value actually happening event without modifier return value events modifiers always return undefined fixed pr", "num": "7705", "d": "2/2018"}, {"title": "ssr webpack vueextends throws property method ssrnode defined", "body": "version reproduction link steps reproduce clone repo details see readme linked repo expected output console follows actually happening following error vue warn property method ssrnode defined instance referenced render make sure property reactive either data option classbased components initializing property see found srccomponentsappvue found srccomponentsappvue found srccomponentsappvue typeerror vmssrescape function narrowed case vueextend actually want use typescript vueclasscomponent", "num": "7703", "d": "2/2018"}, {"title": "extra blank spaces elements rendered template", "body": "version reproduction link steps reproduce run jsfiddle expected background green styled children conditionally rendered empty evaluate false actually happening background red used blank space inside tags css nt consider multiple children elements important single element produce correct result appears vue putting blank space elements even conditionally rendered appearing instead worth noting manually remove extra spaces using developer tools everything looks expected affect furthermore reproduces newline elements modifying provided jsfiddle two produce correct result newline vue seems turning newline elements single space causing issue", "num": "7701", "d": "2/2018"}, {"title": "adding reactive array state", "body": "component would like add new reactive array sst vuex tried beforecreate hook added array reactive plain one add plain fields beforecreate sst reactive dynamically created array sst note updating existing array sst aware array change detection gotchas trying dynamically add entirely new array sst make reactive", "num": "7700", "d": "2/2018"}, {"title": "", "body": "problem feature solve proposed api look like", "num": "7699", "d": "2/2018"}, {"title": "", "body": "problem feature solve gt proposed api look like", "num": "7698", "d": "2/2018"}, {"title": "contenteditable input nt fire", "body": "version reproduction link steps reproduce create contenteditable input event binder test possibly happening according searches expected fire input event actually happening nt fire input event problem found mediumeditor issue contains proposed fix", "num": "7697", "d": "2/2018"}, {"title": "internet explorer opens white screen", "body": "version reproduction link project complex located specific problems steps reproduce build vuecli project development completed use chrome open normal opens white screen expected open use applications normally actually happening hang console error strict \u6a21\u5f0f\u4e0b\u4e0d\u5141\u8bb8\u4e00\u4e2a\u5c5e\u6027\u6709\u591a\u4e2a\u5b9a\u4e49", "num": "7696", "d": "2/2018"}, {"title": "modal nt work", "body": "help please modal nt work", "num": "7693", "d": "2/2018"}, {"title": "modal nt work", "body": "help please modal nt work", "num": "7692", "d": "2/2018"}, {"title": "modal nt work", "body": "help please modal nt work", "num": "7691", "d": "2/2018"}, {"title": "array properties reactives", "body": "version reproduction link steps reproduce click change array property button array property reactive click change array property push button item added array property reactive expected array property reactive case actually happening array property reactive array change reactivity array properties even length array change use proxies fix issue use case init array isloading property set true fetch db x results db add items array set isloading false reactive great result db array change set isloading property false reactivity stay loading state", "num": "7690", "d": "2/2018"}, {"title": "computed variable arrow functions second argument setter", "body": "problem feature solve one guy finded computed getter may use arrow function destructed variablesmethods went ahead appended case failed setter called component later tried use vuex ca nt use undefined think api looks nice reduce many new lines proposed api look like", "num": "7688", "d": "2/2018"}, {"title": "strange behavior setinterval", "body": "version reproduction link steps reproduce create simple square vmodel input changethe width height styling create method upon pressing enter stepwise undos alteration width reseting back html dif js css expected following function expect block reset width input actually happening value width becomes width dif becomes becomes strange thing use reverse dif value lt condition works fine", "num": "7686", "d": "2/2018"}, {"title": "love", "body": "", "num": "7685", "d": "2/2018"}, {"title": "writable isserver", "body": "problem feature solve added method vuetestutils wrapper around let users test ssr code without sometimes users running tests ssr code browser target code process window defined means false even though rendering serverrenderer proposed api look like unsure best way one solution make writable", "num": "7684", "d": "2/2018"}, {"title": "regression returning input element render function fails twoway binding", "body": "version reproduction link steps reproduce write functional component render function returns input element clear button clear value input element expected twoway binding returned component work html input element actually happening click clear button nt clear value input element use older version vue older eg works ok", "num": "7683", "d": "2/2018"}, {"title": "returning string array containing strings render functions nt work", "body": "version reproduction link steps reproduce write functional component render function returns string array containing strings expected component renders strings text nodes actually happening uncaught typeerror create property isrootinsert string test works also like able use html templates vueloader also fails", "num": "7681", "d": "2/2018"}, {"title": "extended components fall back global component definition instead local one superparent", "body": "version reproduction link steps reproduce codepen shows bug opening expected expect extcomp behave exactly like basecomp since extended actually happening extcomp uses global mycomp definition instead one superparent component might expectedintended behavior however people asked agree counter intuitive feels like bug feature cheer jm", "num": "7680", "d": "2/2018"}, {"title": "iphone safari displays blank page", "body": "safari iphone ios showing blank page new website enabled disabled gzip change iphone site works fine newer ipad iphone", "num": "7679", "d": "2/2018"}, {"title": "template compiler ignores svgdefsstyles element", "body": "version steps reproduce expected exprected element inside also genreated render method actually happening generated render method omits", "num": "7678", "d": "2/2018"}, {"title": "pass dataprop root vue instance", "body": "version reproduction link steps reproduce message var app new vue el app data message hello vue one way data passing vue dom transfer dom vue eg message please note sub component root node expected sometime part html thing needs passed vue root instance actually happening could figure pass data root vue instance", "num": "7677", "d": "2/2018"}, {"title": "keypressprevent preventing caret input moving", "body": "version reproduction link steps reproduce click input press right left arrow expected caret input nt move actually happening caret input moving", "num": "7675", "d": "2/2018"}, {"title": "vue warn computed prop never consumed anywhere", "body": "problem feature solve computed props lazily evaluated computed prop never consumed evaluated misleading appearance chrome vue devtools reactivity failure expected behavior developer would assume writing computed props possibly consumed prop dom console warning appropriately explain natural write computed props inspect consuming consuming depends prop written long time source confusion unpredictability proposed api look like computed property x become reactive consumed templatedom", "num": "7674", "d": "2/2018"}, {"title": "better watcher syntax", "body": "problem feature solve multi dependency watchers scale poorly exponentially poorly typically computed function would used many cases user needs nonlazy evaluation need cause side effects multi dependency watcher cases current watcher syntax verbose see fiddle proposed api look like", "num": "7673", "d": "2/2018"}, {"title": "computed documentation mention lazy evaluation", "body": "problem feature solve truth computed variables evaluated lazily documentation says computed props evaluated time underlying data changed difference computed props often reevaluated underlying data changes development example template yet consumes hidden due conditional rendering proposed api look like please add special notecaveat red exclamation point explaining lazy evaluation computed props suggest watcher used continuous evaluation required", "num": "7672", "d": "2/2018"}, {"title": "strange behavior nested arrays checkboxes", "body": "version reproduction link steps reproduce open codepen click checkboxes expected clicking first row checkboxes trigger watcher actually happening triggered changes upper row performed one checkboxes lower row clicked might something wrong", "num": "7670", "d": "2/2018"}, {"title": "assign ref zero result missing element refs", "body": "version reproduction link steps reproduce assign element ref expected p exist refs actually happening p nt refs workaround put additional char ref p refs reference", "num": "7669", "d": "2/2018"}, {"title": "vue server renderer nt render inner routerview", "body": "hi vue server renderer nt render inner routerview server side", "num": "7668", "d": "2/2018"}, {"title": "\u52a8\u6001\u5207\u6362transition\u7684enterleaveactiveclass\u4e0ename\u5c5e\u6027\u5bfc\u81f4\u52a8\u753b\u6548\u679c\u65e0\u6548", "body": "version reproduction link steps reproduce expected \u52a8\u6001\u6539\u53d8\u503c\u540e\u4f9d\u65e7\u663e\u793a\u52a8\u753b actually happening \u52a8\u6001\u6539\u53d8\u503c\u540e\u8df3\u8fc7\u52a8\u753b\u663e\u793a\u7ed3\u679c \u5f53transition\u4f7f\u7528name\u5c5e\u6027\u7684css", "num": "7667", "d": "2/2018"}, {"title": "use instead", "body": "problem feature solve change since soon going depreceated proposed api look like nothing", "num": "7664", "d": "2/2018"}, {"title": "suggestion cache vm emit data", "body": "problem feature solve listener instantiated event emitted get triggered value cached listener triggered even event emitted proposed api look like add flag parameter cache value thank people awesome job lt", "num": "7662", "d": "2/2018"}, {"title": "support ref attribute slots", "body": "problem feature solve composition component like child component slot html child export default name child parent component html parent import child childvue import customcomponent customcomponent export default name parent components child customcomponent would great access customcomponent component element using currently done using statement use case calling child slot component methods thanks proposed api look like accessing slot component using", "num": "7661", "d": "2/2018"}, {"title": "spanish translation", "body": "problem feature solve hello would like collaborate spanish translation done proposed api look like would like collaborate spanish translation done", "num": "7660", "d": "2/2018"}, {"title": "spanish translation", "body": "hello would like translate project spanish already translated", "num": "7659", "d": "2/2018"}, {"title": "add debounce event modifier", "body": "problem feature solve add standard debounce feature events like input keyup etc data driven apps debounce functionality must overloading backend proposed api look like example", "num": "7658", "d": "2/2018"}, {"title": "transform data properties set component", "body": "problem feature solve would nice components ability normalize properties without create additional computed property unwanted property name like myprop computed version mypropnormalized one ever touch inside component mypropnormalized myprop might well exist normalized would allow components consume properties multiple formats input work single format easier consumers component coders component proposed api look like best api designer suppose would prop validation", "num": "7657", "d": "2/2018"}, {"title": "regarding vue class extending support feature request", "body": "able find current documentation wondering plans vue supporting class syntax like know exists vue files part vuejs", "num": "7656", "d": "2/2018"}, {"title": "undefined importing typescript", "body": "version reproduction link steps reproduce using typescript importing vue results reproduce create blank ts file fixed importing like returns ts error testts use new expression whose type lacks call construct signature changing resolves ts error results node error typeerror vuedefault constructor expected errors actually happening see note using webpack example assume happening referencing recommended config statements asis typescript webpack pick use properly however think improved work typescript directly without requiring webpack enter mix would benefit serveronly environments code transpilation nt necessarily required", "num": "7655", "d": "2/2018"}, {"title": "question exist clean solution passing string literal attribute custom directive without error", "body": "problem feature solve hey guys trying write simple custom directive got problem console error told trying solve make directive trigger modal component action mutating vuex store state simple directive hooks looks like example html js problem disappears use single quotes inside double quotes proposed api look like convenient would adding param directive object found online nt work probably older version vue something like case found seems working anymore anyway jumped docs guide nt find suggestion maybe solution nt come across thanks advance help", "num": "7654", "d": "2/2018"}, {"title": "errorhandler working promises async", "body": "version reproduction link steps reproduce vueconfigerrorhandler function err vm info alert handler new vue el app mounted function return new promise function resolve reject throw new error err expected errorhandler called actually happening uncaught promise error err vueconfigerrorhandler called error occurs inside promise awaitasync function want use created hook await call async errorhandler ignored", "num": "7653", "d": "2/2018"}, {"title": "one loop json", "body": "problem feature solve key value write tdata key line key varaible reach proposed api look like like mentioned case", "num": "7652", "d": "2/2018"}, {"title": "von keyupenter work android", "body": "version reproduction link steps reproduce open link minimal reproduction android chrome browser click second field contains text hello vuejs click enter key expected alert box message hello vuejs shown actually happening nothing apparently android recognize command von keyupenter focus changed next field maybe something related may lead errors sites use vue accessed via mobile", "num": "7651", "d": "2/2018"}, {"title": "firefox windows html select flickers", "body": "version reproduction link steps reproduce go open fruit selector dropdown hover option apple lemon orange expected html select dropdown focus back currently selected option cherry model updates actually happening witnessing unexpected html select dropdown flickering looks triggered unrelated model updates tested working fine", "num": "7650", "d": "2/2018"}, {"title": "scoped css applied programmatically added elements", "body": "version reproduction link steps reproduce vue add elements programmatically scoped css applied elements inside given vue file add styling style tag remove scoped attribute work example export default created const item documentqueryselector item iteminnerhtml box background red intended bug expected expect css applied actually happening applied", "num": "7649", "d": "2/2018"}, {"title": "scoped css applied programmatically added elements", "body": "vue add elements programmatically scoped css applied elements inside given vue file add styling style tag remove scoped attribute work example export default created const item documentqueryselector item iteminnerhtml box background red intended bug", "num": "7648", "d": "2/2018"}, {"title": "handle undefined boolean prop value set instead coersing false", "body": "problem feature solve due compositional nature vuejs apps often necessary define props simply passed child component without otherwise using parent coercing unset undefined prop value false vue prevents usage default values props type boolean also context boolean typed props make difference wether something explicitly usage scenario suppose two components props uses instance know values provide props childprop hence moves responsibility providing childcomp props outer scope defining props simply passing child user provide correct input props default values props define defaults remember know use simply moves responsibility away letting user decide setup described leads following useful behavior user may decide provide values may also ommit one props values ommited defaults child kick provide useful values problem bahavior described works prop types except ommiting parent prop values usually leads child prop using default values case props however parent prop without default value undefined always transformed effectively breaking pattern use child default parent prop value ommited child defined boolean prop default value always overwritten parent prop parent prop explicitly define prop default value words needs know implementation detail child proposed api look like props props template usage resulting values currently implemented vue proposed change", "num": "7646", "d": "2/2018"}, {"title": "unexpected reevaluating computed property", "body": "version reproduction link steps reproduce see console expected computing appears actually happening computing appears twice", "num": "7645", "d": "2/2018"}, {"title": "filter executed route change", "body": "version reproduction link steps reproduce alert pop start indicates filter called route change alert pop ups meaning filter executed expected filter called route change actually happening filter called route change behaviour normal", "num": "7644", "d": "2/2018"}, {"title": "different nested transitions working expected root transition gets applied", "body": "version reproduction link steps reproduce create transition inside transition different effects expected two different effects shown actually happening effect root transition shown", "num": "7643", "d": "2/2018"}, {"title": "widthheight without unit style bindings give warning dev mode", "body": "problem feature solve really bad brainfart today trying figure elements nt updating width correctly eventually found missing px bindings everything fine imo would helpful warn author least development mode binding pure number might developer intended could also used properties like height paddings margins proposed api look like api warning widthheight pure number maybe missing unit", "num": "7642", "d": "2/2018"}, {"title": "typings typescript", "body": "version steps reproduce create simple component using typescript import vue vue vueextend props myprop type array computed mycomputed string return hello othercomputed string return thismycomputed following error change type prop smtg else nt problem anymore expected error actually happening errors problem happening previous typescript versions least", "num": "7640", "d": "2/2018"}, {"title": "\u65e0\u6cd5\u83b7\u53d6\u672a\u5b9a\u4e49\u6216 null \u5f15\u7528\u7684\u5c5e\u6027 split", "body": "version reproduction link steps reproduce copy code jsfiddle indexhtml sorry jsfiddle nt support document mode reproduce bug way open indexhtml file ie browser browser open debugger choose useragent must browser simulation tool click datepicker component see error \u65e0\u6cd5\u83b7\u53d6\u672a\u5b9a\u4e49\u6216 null \u5f15\u7528\u7684\u5c5e\u6027 split expected error ie browser mode incompatible document mode know bug caused transition fix actually happening error \u65e0\u6cd5\u83b7\u53d6\u672a\u5b9a\u4e49\u6216 null \u5f15\u7528\u7684\u5c5e\u6027 split js run vue add feature remove tansition", "num": "7639", "d": "2/2018"}, {"title": "use webpack dllplugin server side rendering scenario", "body": "problem feature solve webpack dllplugin reduce build time client build already done write code use dllplugin server side rendering put vendor bundle proposed api look like noop", "num": "7638", "d": "2/2018"}, {"title": "selector name ca nt use special symbols", "body": "version reproduction link steps reproduce selector name contain expected selector name contain work actually happening selector name contain work", "num": "7637", "d": "2/2018"}, {"title": "vbind class work", "body": "selector name contain example work work", "num": "7636", "d": "2/2018"}, {"title": "version mismatch erro bash", "body": "shows vue packages version mismatch vue vuetemplatecompiler", "num": "7635", "d": "2/2018"}, {"title": "ad", "body": "", "num": "7634", "d": "2/2018"}, {"title": "", "body": "found srccomponentsmdbuttonmdbuttonvue srccomponentsmdbottombarmdbottombaritemvue srccomponentsmdripplemdripplevue srccomponentsmdbottombarmdbottombarvue srccomponentsmdcardmdcardvue resourcesassetsjscomponentsuseruservue using", "num": "7633", "d": "2/2018"}, {"title": "vue router push \u5230\u7684 route \u53c2\u6570\u65e0\u6cd5\u4f20\u9012\u5230\u65b0\u5730\u5740", "body": "version reproduction link steps reproduce vuerouter vue vue \u901a\u8fc7name params \u5982\u679c\u8def\u7531\u76ee\u6807\u6709\u914d\u7f6e redirect \u90a3\u4e48\u7b2c\u4e00\u4e2a\u76ee\u6807\u8def\u7531 \u548c\u6700\u7ec8\u7684redirect\u90fd\u6536\u4e0d\u5230params expected vuerouter vue vue \u901a\u8fc7name params \u5982\u679c\u8def\u7531\u76ee\u6807\u6709\u914d\u7f6e redirect \u90a3\u4e48\u7b2c\u4e00\u4e2a\u76ee\u6807\u8def\u7531 \u548c\u6700\u7ec8\u7684redirect\u90fd\u6536\u4e0d\u5230params actually happening vuerouter vue vue \u901a\u8fc7name params \u5982\u679c\u8def\u7531\u76ee\u6807\u6709\u914d\u7f6e redirect \u90a3\u4e48\u7b2c\u4e00\u4e2a\u76ee\u6807\u8def\u7531 \u548c\u6700\u7ec8\u7684redirect\u90fd\u6536\u4e0d\u5230params", "num": "7632", "d": "2/2018"}, {"title": "warn assignment vif development mode", "body": "problem feature solve may fix errors made misktake quickly eg piece code like want proposed api look like nothing", "num": "7631", "d": "2/2018"}, {"title": "vscode eslint\u6309 airbnb \u89c4\u8303\u89e3\u6790 vue \u6587\u4ef6\u6709\u8bef", "body": "vscode version setting eslintrcjs \u914d\u7f6e\u5b8c\u6210\u540e js \u6587\u4ef6\u53ef\u4ee5\u6b63\u5e38\u9a8c\u8bc1 airbnb \u89c4\u8303 \u4f46 vue \u6587\u4ef6\u53ea\u80fd\u9a8c\u8bc1\u90e8\u5206\u89c4\u8303 \u4f46\u50cf missing semicolon \u8fd9\u6837\u7684\u89c4\u8303\u5c31\u65e0\u6cd5\u8bc6\u522b \u4f46\u8fd0\u884c \u662f\u53ef\u4ee5\u8bc6\u522b", "num": "7630", "d": "2/2018"}, {"title": "consider additional naming convention single file component", "body": "problem feature solve consider additional naming convention single file component within directory autoload js css file name vue file help single file component separation concern reduce code proposed api look like", "num": "7629", "d": "2/2018"}, {"title": "suggestion wrapped von invokers return internal result", "body": "problem feature solve trying implement loading button component internally keeps track specified event handlers changes state based resolution state said handlers assuming event handler returns button internally waits promise resolve shows loading state handles accordingly approach inside component keeping track event handler passed let say want look handlers inside event handler internal button wrapping function change state something like typescript thisisloading true await thishandlerfunc thisisloading false consumer using binding like fine works expected problem however try use component use inline method handler optional parameter somehow lose context returned curious issue dug bit deeper found pain point inside wrapper function inline handler returning returned proposed api look like suggestion return result internal handler really way regardless handler written get context internally result handler also makes sense would nt swallow returned value wrapped function thinking solve problem please advise wrong regarding take different approach thanks time ps nt get time yet dive source vue plan fine actual source problem code", "num": "7628", "d": "2/2018"}, {"title": "access html elements anywhere", "body": "problem feature solve vue application along vuex webrtcl calls application u need use html elements jsl api functions able due callbacks api written functions storejs access html elements need send html elements callback function access need access html elements defined inside component template modal template different components chrome gives error proposed api look like access html elements anywhere like element access getelementsbyid etc", "num": "7627", "d": "2/2018"}, {"title": "read property undefined proxyrenderstatic", "body": "version reproduction link steps reproduce run jsfiddle use render function maybe lack vue element lead problem expected normal display actually happening show cause error typeerror read property undefined proxyrenderstatic unpkgcomvue proxyeval eval createfunction unpkgcomvue vuecomponentvuerender unpkgcomvue vuecomponentupdatecomponent unpkgcomvue watcherget unpkgcomvue new watcher unpkgcomvue mountcomponent unpkgcomvue vuecomponentvue mount unpkgcomvue vuecomponentvue mount unpkgcomvue init unpkgcomvue thanks", "num": "7626", "d": "2/2018"}, {"title": "", "body": "template", "num": "7625", "d": "2/2018"}, {"title": "bind checkbox state using vbinded type", "body": "version reproduction link steps reproduce let vue set attribute element via expected vue state updated actually happening vue state updated set input type checkox explicitly", "num": "7624", "d": "2/2018"}, {"title": "using svg template throws warning use builtin reserved html elements component", "body": "version reproduction link steps reproduce import vue component see also chinese expected working whitout warning actually happening throws warning", "num": "7623", "d": "2/2018"}, {"title": "drgewrwer", "body": "version reproduction link steps reproduce dfhsfghfgs expected fsdfgsdh actually happening sfhdfghdg fdghdghj", "num": "7622", "d": "2/2018"}, {"title": "", "body": "version reproduction steps reproduce vplateinputvue javascript export default props value type string default mounted function thisformatvalue methods updatevalue function value var result valuetouppercase emit input result formatvalue function refsvinputvalue thisvaluetouppercase html expected actually happening \u7528\u641c\u72d7\u8f93\u5165\u6cd5\u65e0\u6cd5\u8f93\u5165\u4e2d\u6587", "num": "7621", "d": "2/2018"}, {"title": "report empty vmodel attributes nice debug message", "body": "problem feature solve accidentally creating markup empty vmodel attribute strange debug message displayed vue element renders empty error seen following hello world empty vmodel attribute yes user error may save someone lot time better message displayed message new vue el app data message hello vuejs proposed api look like provide better error message vs vmodel attribute empty syntaxerror unexpected token return c tr attrs id taxrow c td staticclass right totlabel v c span staticclass paddingnone textright staticstyle margintop c input directives name model rawname vmodel attrs type checkbox value name id field taxoverride domprops checked arrayisarray gt change function event var el eventtarget c elchecked true false arrayisarray var v ii v elchecked lt amp amp aconcat v else amp amp aslice concat aslice else c c input attrs type hidden id name value v v c span staticclass paddingnone textright staticstyle margintop c input directives name model rawname vmodel value taxexempt expression taxexempt attrs type checkbox value name id vmodel taxexempt field taxexempt domprops checked arrayisarray taxexempt taxexempt gt taxexempt change function event var ataxexempt el eventtarget c elchecked true false arrayisarray var v ii v elchecked lt amp amp taxexempt aconcat v else amp amp taxexempt aslice concat aslice else set tax exempt c c input attrs type hidden id name value v c td staticclass right strong c input staticclass attrs datainputlength dataplaceholder datacallback ressalestaxcallbackstaxselectphp datawidth type hidden dataid datatext id taxlocation name v c div staticclass inputgroup staticstyle paddingto", "num": "7620", "d": "2/2018"}, {"title": "build project nt request mainjs", "body": "", "num": "7619", "d": "2/2018"}, {"title": "", "body": "appjs file require bootstrap windowvue require vue import vue vue import vuerouter vuerouter vueuse vuerouter import sidebar componentssidebar import dashboard componentsdashboard import transactions componentstransactions const routes name dashboard path dashboard component dashboard name transactions path transactions component transactions const router new vuerouter routes mode history vuecomponent sidebar require componentssidebarvue const app new vue el app router components sidebar sidebar sidebarvue file rendering vuelink tag tag hello chemicals chem chem chem transactions export default name sidebar data return sidebar border width backgroundcolor position absolute height sidebar ul liststyletype none sidebar ul li sidebar ul li active sidebar ul li visited textdecoration none padding color display block borderbottom solid fontsize sidebar ul li hover color caret float right margintop sidebar ul li submenu display none sidebar ul li hover submenu display block borderleft solid footer background padding color textalign right media screen maxwidth sidebar width backgroundcolor position absolute height sidebar ul li span nthchild fontsize textalign center sidebar ul li span nthchild display none please help hours stuck basic stuff using laravel packagejson file case anybody also wants see private true scripts dev npm run development development crossenv nodeenvdevelopment nodemoduleswebpackbinwebpackjs progress hidemodules confignodemoduleslaravelmixsetupwebpackconfigjs watch crossenv nodeenvdevelopment nodemoduleswebpackbinwebpackjs watch progress hidemodules confignodemoduleslaravelmixsetupwebpackconfigjs watchpoll npm run watch watchpoll hot crossenv nodeenvdevelopment nodemoduleswebpackdevserverbinwebpackdevserverjs inline hot confignodemoduleslaravelmixsetupwebpackconfigjs prod npm run production production crossenv nodeenvproduction nodemoduleswebpackbinwebpackjs noprogress hidemodules confignodemoduleslaravelmixsetupwebpackconfigjs devdependencies axios bootstrap popperjs crossenv jquery laravelmix lodash vue dependencies vuerouter", "num": "7618", "d": "2/2018"}, {"title": "tags rendering laravel application", "body": "", "num": "7617", "d": "2/2018"}, {"title": "building local css components getting overridden global css", "body": "version reproduction link steps reproduce added global css mainjs say bootstrapmincss adding css class component level scope build production build expected priority component level css actually happening priority global css", "num": "7616", "d": "2/2018"}, {"title": "pointer custom directive", "body": "version reproduction link steps reproduce first created directives like vuedirective demo bind el binding vnode gt el el update el binding vnode gt consolelog el second use one demo directives like view expected update variable elements output console corresponds instruction bound two different elements actually happening elements output console last one innerhtml", "num": "7615", "d": "2/2018"}, {"title": "undefined var vue instance", "body": "let vm new vue el app data omdbdata movie casts methods getdatafromomdb get function response vmomdbdata response vmgetdatafromthemovie created vmgetdatafromomdb", "num": "7614", "d": "2/2018"}, {"title": "case discrepancy regular event names sync modifier event names", "body": "version reproduction link case consistent across entire framework comes emitting events repo see using snakecase events works using snakecase sync modifier fails sync expects camelcase inconsistency leads confusion mistakes", "num": "7613", "d": "2/2018"}, {"title": "allow data binding inside comments", "body": "problem feature solve data bindings inside html comments ignored sometimes would useful especially using conditional ie comments proposed api look like allow using mustache syntax inside html comments", "num": "7612", "d": "2/2018"}, {"title": "userdef undefined", "body": "come situation got userdef undefined error caused could someone add warning would tell error caused", "num": "7609", "d": "2/2018"}, {"title": "", "body": "version reproduction link steps reproduce dont example cant register component please ignore website example runnig dev mode webpack get error component name dpinput import import dpinput componentsinputsinput components dpinput template dpinput vmodel data expected error need saved html element actually happening get error", "num": "7608", "d": "2/2018"}, {"title": "vmodel nt work attribute", "body": "version reproduction link steps reproduce select one expected selected text appear actually happening value change code works changed native manually binding change works", "num": "7607", "d": "2/2018"}, {"title": "vue fragments react fragments", "body": "problem feature solve solve issue multiple root components allowed like instance trying slots using component page loading checking loading loading state checking valid render main component js vif loading color secondary div velseif loaded slot vcontainer fluid fillheight velse vlayout justifycenter aligncenter slot name noresult result export default name page props loading type number default valid type boolean computed loaded return thisvalid amp amp thisloading part template makes another div prevent multiple root issue like would help know thing done somehow render functions vueish anymore proposed api look like slots template syntax got idea", "num": "7606", "d": "2/2018"}, {"title": "support rendercreateelement", "body": "problem feature solve requirement add quotes around using render functions somewhat annoying seems reasonable support recommend using instead nt need quote single oddball property proposed api look like", "num": "7605", "d": "2/2018"}, {"title": "using reserved keywords computed props inside template expressions", "body": "version reproduction link steps reproduce check error console log expected consistent behavior explained additional comments actually happening vue throws following error indeed something needs fixed propose one following disallow use special keywords like default used create computed properties allow people create computed props names case computed props used inside template expressions", "num": "7604", "d": "2/2018"}, {"title": "decrease fps cesiumjs deep reactivity", "body": "version reproduction link steps reproduce need load array computed position vuejs run cesiumjs create deep object expected array reactivated inner object actually happening array object deep reactivated cesiumjs used object calling getter object fps decreased fps maybe cases need deep set reactivity case needed array items forum help question", "num": "7603", "d": "2/2018"}, {"title": "allow component props read original prop expression", "body": "problem feature solve author dynamic form component porting metawidget vue difficulty passing prop component nt seem able access prop original expression example vue component html could vue component access text string contained attribute fiddle proposed api look like several approaches would suitable extend component props object notation pass second parameter validator could capture original expression well value allow attrs array hold original expression prop angular", "num": "7602", "d": "2/2018"}, {"title": "slot shows information one step past", "body": "version reproduction link steps reproduce click radio buttons see checked state previous one expected pressed button checked state actually happening previous pressed button checked state", "num": "7601", "d": "2/2018"}, {"title": "use loop ios run twice", "body": "version reproduction link steps reproduce let array right wrong run twice nt know ios first find iphone ios second open bugs github demo third see image run code view demo url readme expected forloop run actually happening forloop run twice", "num": "7599", "d": "2/2018"}, {"title": "ssr component cache nt cache strings", "body": "version reproduction link steps reproduce run runkit code prefer git repository provide one expected value passed function string actually happening value passed function object properties html containing rendered component components containing nothing function depending context subcomponents think issue breaks external cache possibility redis case possible cache process memory like lrucache seems impossible scale processes share common cache moreover documentation explain clearly cached value string even provides small redis example implementation could work think documentation describe expected behavior nt want fix documentation think fix behavior try help may need explanations parts rendercontext ask questions thread", "num": "7595", "d": "2/2018"}, {"title": "\u4e07\u80fd\u7684\u5c24\u5927\u5927 \u8bf7\u6559\u4e00\u4e2a\u5173\u4e8e\u73af\u5883\u7684vue\u90e8\u7f72\u95ee\u9898", "body": "problem feature solve \u6211\u73b0\u5728\u6709\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898 \u6211\u4eec\u516c\u53f8\u6709\u591a\u4e2a\u73af\u5883 \u672c\u5730\u5f00\u53d1\u5f00\u53d1\u5c31\u4e0d\u8bf4\u4e86 \u4ec0\u4e48\u5185\u5916\u6d4b\u8bd5 \u5916\u7f51\u6d4b\u8bd5 \u6b63\u5f0f\u73af\u5883\u7b49 \u6211\u4eec\u4f7f\u7528\u7684\u662fhomestead\u96c6\u6210\u7684laravel php \u5404\u79cd\u5730\u5740\u7684baseurl\u5728\u6bcf\u4e2a\u73af\u5883\u4e2d\u90fd\u4e0d\u4e00\u6837 \u5982\u4f55\u624d\u80fd\u505a\u5230\u4e0a\u4f20\u6253\u5305\u4e4b\u540e\u7684\u4ee3\u7801 \u81ea\u52a8\u5207\u6362baseurl proposed api look like", "num": "7594", "d": "2/2018"}, {"title": "ssr component cache nt cache strings", "body": "version reproduction link steps reproduce need running redis server setup project load page gt works reload page error cache wrong expected variable passed component cache string explained documentation actually happening variable passed component cache javascript object tried jsonstringify parse get method object contains set javascript functions loose data stringify issue breaks external cache possibility possible cache process memory like lrucache seems impossible scale processes share common cache moreover documentation explain clearly cached value string even provides small redis example implementation could work", "num": "7593", "d": "2/2018"}, {"title": "velse vfor ca nt used together", "body": "version reproduction link steps reproduce velse vfor ca nt used together expected rendering results actually happening rendering results undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined", "num": "7592", "d": "2/2018"}, {"title": "condition erros vuejs", "body": "trying check variable empty think code looks fine working code javascript empty good export default data function return myvalues new object", "num": "7591", "d": "2/2018"}, {"title": "add wrap directive", "body": "problem feature solve sometimes need wraper element sometimes title title proposed api look like need directive like value haswraper false perform title gt", "num": "7590", "d": "2/2018"}, {"title": "vleave nt work correctly", "body": "version reproduction link steps reproduce click toggle cond expected transition element text button become red first vleave slowly turn green vleaveto actually happening transition element become red first frame vleave nothing green background works fine change version top html panel watch vleave worked since vleaveto available ps beginner", "num": "7589", "d": "2/2018"}, {"title": "functional component rendered prematurely", "body": "version reproduction link steps reproduce check console logs expected foo component rendered ajax call completed setting false actually happening card component render placeholder text fetching data line otherwise render children although foo initially hidden somehow render function gets gets called important note happening foo functional component remove foo see gets rendered log", "num": "7588", "d": "2/2018"}, {"title": "functional component used named slot another component", "body": "version reproduction link steps reproduce ust run demo expected default slot fallback inner actually happening inner named slot fallback like", "num": "7587", "d": "2/2018"}, {"title": "functional component used named slot another component", "body": "vuejs version reproduction link steps reproduce run demo expected default slot fallback inner actually happening inner named slot fallback like", "num": "7586", "d": "2/2018"}, {"title": "refs lost component rerendered", "body": "version reproduction link steps reproduce follow jsfiddle link click see refs printed console expected click switch condition click see console refs empty array expected refs remain valid component rerendered actually happening refs lost", "num": "7585", "d": "2/2018"}, {"body": "issue goes away remove suspect actually safari bug", "d": "2/2018"}, {"body": "imo problem implementation vueautonumeric description component using separate watchers imperatively produce side effects changes different values two values coupled order importance correct implementation get rid order dependence use watcher watches values watch getter function expression produce desired side effects even better use computed properties", "d": "2/2018"}, {"body": "warning telling use template", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "tldr maybe indeed allow required default value check saying prop required expect user always provide value making default value defeats purpose prop required require prop means need information user way provide fallback value otherwise enforce prop never null also providing default value prop value provided values always skip validation want take deeper look prop validation works check research past issues found comment hmm yeah needs accurate indicates value explicitly marked present remain indicates value present default value used available indicates neither allowed unless default used agree could confusing existence vs language design trying stay close values designed represent js changing would break", "d": "2/2018"}, {"body": "yeah currently issue implies prop absent prop value nully validation skipped altogether way enforce prop nonnully times without hence prop omission disallowed also think docs could clear precise definition option", "d": "2/2018"}, {"body": "validation always skipped nully values though validation always skipped nully values though contributions docs always welcome", "d": "2/2018"}, {"body": "validation always skipped nully values though given", "d": "2/2018"}, {"body": "javoski confirmed section code", "d": "2/2018"}, {"body": "right undefined validation skipped nonrequired props", "d": "2/2018"}, {"body": "issue issue issue", "d": "2/2018"}, {"body": "coolzjy", "d": "2/2018"}, {"body": "\u8bf7\u81ea\u884c\u5173\u95ed\u8fd9\u4e2a issue", "d": "2/2018"}, {"body": "coolzjy konw\u4e86", "d": "2/2018"}, {"body": "\u5230forumvuejsorg team member \u68c0\u7d22\u73b0\u6709\u95ee\u9898", "d": "2/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "2/2018"}, {"body": "inherent javascript nature objects passed reference components end modifying object btw declare initial data sure hardcoding values example maybe want please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "2/2018"}, {"body": "nt think good idea easier handle application level displayed internet connection need dynamic approach retry fetching component implement userland using data property set result promise resolves component making easy trigger new request", "d": "2/2018"}, {"body": "done wrapper component nt need builtin", "d": "2/2018"}, {"body": "expected behavior inline template nt access parent scope fact one reasons recommend using inline templates", "d": "2/2018"}, {"body": "thanks evan pretty impressive response time added code inline templates simple example nt mean draw attention aspect github issue clarify main concern warning causing minified unminified versions vue different things lead code working production development chose use unminified version development updated issue name make clear thanks ryan", "d": "2/2018"}, {"body": "looks like warning displayed scenario", "d": "2/2018"}, {"body": "warning displayed usage wrong development breaks app since deploying app breaks development production nt think really need fix behavior behavior dev production guaranteed consistent app works properly development production lot runtime checks removed assume fix development", "d": "2/2018"}, {"body": "ups sorry thought failing parse property simply misread", "d": "2/2018"}, {"body": "solved userland actually already exist made together shentao", "d": "2/2018"}, {"body": "incrementing value attribute also reading vue observing rerendering everytime changes stops rendering times template modify values use index iteration instead method compute value based parameters", "d": "2/2018"}, {"body": "rule thumb never produce side effects templates", "d": "2/2018"}, {"body": "problem call signature returns ts gets wrong inference think best solution await conditional type ts cc ktsn", "d": "2/2018"}, {"body": "yes seems handle dateconstructor without conditional types fyi manually annotate", "d": "2/2018"}, {"body": "valid issue misspelled", "d": "2/2018"}, {"body": "yaodingyd right misspelled", "d": "2/2018"}, {"body": "ups thanks nt see typo either", "d": "2/2018"}, {"body": "passing children specify place although would agree would make things easier assigned automatically corresponding think writing template way would note explicitly name slot say slot need things render functions example functional nonfunctional components sure giving right solution think pr document although sure approach take cc chrisvfritz documentation shows attribute nt section pass slots render functions", "d": "2/2018"}, {"body": "posva think difference templates nt concept since meant used transparent wrappers components exactly transparent wrapper know slots child order explicitly pass sound like bug", "d": "2/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "2/2018"}, {"body": "feature request methods resolve vue give handsome", "d": "2/2018"}, {"body": "actually sent wrong reply issue looks like bug report would like see boiled repro", "d": "2/2018"}, {"body": "need let vue know use templates either add data", "d": "2/2018"}, {"body": "thanks fixed issue still suboptimal make huge list types using solve automating possible write proper fix vue make happen limitation workaround fixes second searched docs instanceof find anything related miss something fix explaining somewhere", "d": "2/2018"}, {"body": "fix need explicitly add classes way add data using instances data usually good idea serializable making hard use ssr applications nt found docs", "d": "2/2018"}, {"body": "seems regression feature internal change tried seems work well found workaround yet", "d": "2/2018"}, {"body": "likely related considered fix related issue", "d": "2/2018"}, {"body": "would argue vue intended used animations rapidly changing style value bindings would horrible performance simple components rerender whole component every scroll event opinion rather done dom level ie custom directive dedicated animation library biger things", "d": "2/2018"}, {"body": "add class right element added dom browser able trigger css transition browser checks transform also check transform applied turns none therefore skips transition need make work demo vue", "d": "2/2018"}, {"body": "previous understanding transition nt work vanilla js example event loop finish task queue clear stack first proceed render queue case first renders already rendering element test loaded class thus transition possible reference pensive however vue case thought mounted means executing code component already mounted rendered already initial transition state rendered first different vanilla js case one initial state already element test loaded class", "d": "2/2018"}, {"body": "currently option called preservewhitespace vue loader choose strip empty text nodes using single file components actually option vuetemplatecompiler afaik exposed runtime api yet", "d": "2/2018"}, {"body": "thing happens regular html empty lines css apply html want spaces however remove white spaces template html item closing sure new line replaced empty space behaviour consistent automatically removing whitespaces using newlines regular html would yield result", "d": "2/2018"}, {"body": "want spaces however remove white spaces template really practical solution though putting everything one line turns unreadable mess anything trivial templates closing sure new line replaced empty space behaviour consistent automatically removing whitespaces using newlines regular html would yield result vue collapse everything inside single line already chomping newlines turning spaces instead wants preserve newlines sure would consistent vanilla html acts nt currently results unintuitive justineo using seem get intended result said available via moment way activate single node bit icky turn entire project want behavior single template even single part single template great directive like could used individual node briefly looked writing directive get end result reasonable hook use seemed changing element point led inconsistent results probably good place touch html", "d": "2/2018"}, {"body": "way activate single node like evan said except might solved css think better keep consistent across whole project custom directives may work remove whitespaceonly text nodes instead setting directly", "d": "2/2018"}, {"body": "like evan said except might solved css think better keep consistent across whole project nt really work reusable components library ca nt least nt force users change projectwide settings also applicable using moment custom directives may work remove whitespaceonly text nodes instead setting innerhtml directly right seemed make work nicely example directive anyone comes across looking solution javascript function trimemptytextnodes el let node elchildnodes nodenodetype nodetextnode amp amp nodedatatrim noderemove vuedirective trimwhitespace inserted trimemptytextnodes componentupdated trimemptytextnodes open question remains regarding vue chomping newlines single space rationale behavior chomped newlines nothing rather single space would work box", "d": "2/2018"}, {"body": "collapsing new lines white spaces consistent behavior html", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "maybe meaning", "d": "2/2018"}, {"body": "jounqin yeah changed description", "d": "2/2018"}, {"body": "perhaps means behave like von works way something like passed sure nt executed template parsed event emitted", "d": "2/2018"}, {"body": "jangjoe exactly", "d": "2/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "2/2018"}, {"body": "ie problem firing input event happens without vue listen another event also emitted ie", "d": "2/2018"}, {"body": "guess problem webpackdevserver instead vue try replace directory ie wo nt recognize babel wo nt work anyway solved mine worth try", "d": "2/2018"}, {"body": "much without minimal reproduction consider using forum discord server stackoverflow ask help need share code want others help", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "oltika use forum discord server stackoverflow questions", "d": "2/2018"}, {"body": "please actually read responses keep opening issues ignoring policies block", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "supported intentional extra properties arrays jsonencodable", "d": "2/2018"}, {"body": "wo nt work even future", "d": "2/2018"}, {"body": "point consistency reassign different empty array extra properties reactives change array content extra properties reactives change extra property array extra properties reactives extra properties array jsonencodable impossible get work nt want support", "d": "2/2018"}, {"body": "property never reactive reassign change array content triggers component rerender accidentally pulls latest value property update caused property technical limitation bestpractice enforcement state jsonencodable leads problems debugging tools serverside rendering", "d": "2/2018"}, {"body": "know getterssetters array extra properties meant feels like reactive confusing reactives metadata array wrap object big deal well arrays objects thanks explaination ssr amp debug needs", "d": "2/2018"}, {"body": "duplicate make sure open issue right repo", "d": "2/2018"}, {"body": "value got string modifier helpful", "d": "2/2018"}, {"body": "thanks quick reply works charm", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "forgot prop component", "d": "2/2018"}, {"body": "posva mean add warn change version really works well without adding", "d": "2/2018"}, {"body": "course also need remove using correctly", "d": "2/2018"}, {"body": "please update document copied code straight away posva", "d": "2/2018"}, {"body": "done nt forget also nice contribution", "d": "2/2018"}, {"body": "think returning string definitely worth better writing string regarding array containing strings could create textnodes", "d": "2/2018"}, {"body": "nkovacs problem creating root node output returning would look like valid within vue requires root element either wrap tag directly instead defining template pass wrapping element tag name like component", "d": "2/2018"}, {"body": "functional component multiple root elements allowed example works fine even workaround works fine strings converted text nodes", "d": "2/2018"}, {"body": "okay bad never used functional components way ended multiple roots", "d": "2/2018"}, {"body": "consistent indeed name components camelcase fix error btw probably normalization going working correctly", "d": "2/2018"}, {"body": "yes mostly use pascalcasing actual code camelcasing thought name comes third party library help though bit tricky naming done party libraries consistent normalization good cheers", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "intentional even error telling templates responsible mapping state ui avoid placing tags sideeffects templates", "d": "2/2018"}, {"body": "hmm thinks bit unfortunate inlining svgs may ship default styles", "d": "2/2018"}, {"body": "agree styles inside svg maybe kept", "d": "2/2018"}, {"body": "root vue component always created javascript land would pass data using standard javascript objects want query dom data away", "d": "2/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow maybe looking", "d": "2/2018"}, {"body": "need use instead even without vue", "d": "2/2018"}, {"body": "please provide proper reproduction believe behavior correct misleading jumping directly feature requests makes difficult evaluate enough context", "d": "2/2018"}, {"body": "thought bit warning like nt make sense perfectly normal computed prop collected dependency initial render used part template conditionally rendered yet would create strange warnings perfectly fine situations hand useful rare ones think evan misunderstood request bit would agree keep closed really doable way creating unnecessary misleading warnings", "d": "2/2018"}, {"body": "linusborg thinking would warn computed prop never consumed anywhere including conditional logic computed way would extra warnings idea warn computed props legitimately unused possibility ever evaluated current logic", "d": "2/2018"}, {"body": "thinking would warn computed prop never consumed anywhere would require vue go meta component analyse understand component code data flow wo nt even possible included babel vue generating warning question could maybe write eslint rule eslintpluginvue statically checks sure eslint clever", "d": "2/2018"}, {"body": "afraid would say", "d": "2/2018"}, {"body": "use imperative api", "d": "2/2018"}, {"body": "imperative api called lifecycle hook degree defies point watch simple semantic convenience layer internal api course could use watch api craft solution way think worthwhile give users watch syntax track multiple dependencies beginning least leaving considerationdiscussion vs closing prematurely", "d": "2/2018"}, {"body": "thought bit build pluginmixin concerning quickly closing issues practically api freeze add things large usability impact lot people order keep size api surface small enough useful lot people come wo nt probably nt invest limited resources", "d": "2/2018"}, {"body": "linusborg thought end number priority keep components clean possible also consistent documentation others reuse edit yes could add code component even fork vue code mentioned every component soon cross line code longer consistent understandable also know internals well yet lot easier yell guys", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "documentation mention lazy evaluation reported documentation linked disclose lazy evaluation misleading documentation", "d": "2/2018"}, {"body": "described computed properties often reevaluated underlying data changes bug aware situations case need provide bug report reproductions", "d": "2/2018"}, {"body": "true false computed property used dom anywhere else reevaluate even data changes", "d": "2/2018"}, {"body": "long discussion forums mainly refers computed props evaluated accessed access directly indirectly render function example wo nt value devtools example think mention docs would fine since otherwise people confused computed prop nt update even though one dependencies changed reason might part render tree using next rerender skipped conditional people using computed prop might confused nothing logging console documentation issues opened vuejsvuejsorg repository", "d": "2/2018"}, {"body": "linusborg thanks translating apologize posting wrong repo nt see one initially thanks tip", "d": "2/2018"}, {"body": "related issue mentioned well user understand computed props updated accessed think critical point otherwise mistaken bug source frustration", "d": "2/2018"}, {"body": "since works makes sense also support checkbox", "d": "2/2018"}, {"body": "looks like bug probably check replaced", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "translate may good job looks want way abort transition", "d": "2/2018"}, {"body": "\u4f60\u7684\u65b9\u6cd5\u4e2d\u6a21\u7248\u5b57\u7b26\u4e32\u6f0f\u4e86", "d": "2/2018"}, {"body": "\u540c", "d": "2/2018"}, {"body": "feel free submit pr feature request", "d": "2/2018"}, {"body": "actually already done", "d": "2/2018"}, {"body": "accepted", "d": "2/2018"}, {"body": "would reallife scenario useful trying yo bff earns situation would apply listener child component later upfront", "d": "2/2018"}, {"body": "nt think good idea replay previously cached events whenever attach event listener looks like specific use case implemented userland replacing custom implementation call original one", "d": "2/2018"}, {"body": "usage sound like good idea slots definition indeterministic may single component may also multiple components single element multiple elements ref behavior really ambiguous directly calling methods ref component code smell use events state management pattern", "d": "2/2018"}, {"body": "agreed", "d": "2/2018"}, {"body": "wip translation effort nt know active suggest get touch anyway correct repo discussing documentation including translations vuejsvuejsorg", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "hello intentionally removed see details", "d": "2/2018"}, {"body": "asking coerce come back intentionally removed favour computed properties", "d": "2/2018"}, {"body": "problem computed properties nt replace functionality creating unwanted aliases need one variable", "d": "2/2018"}, {"body": "point method manually implementing coerce vue via plugins essential use case", "d": "2/2018"}, {"body": "may able use prop read value coerce removed basically computed property realiased better values explicit approach", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "duplicate may want enable", "d": "2/2018"}, {"body": "note double single quotes vue directive values javascript expression recommended way represent string literal compiles plain javascript see directive literal modifier removed", "d": "2/2018"}, {"body": "thanks replies know singledouble quotes trick still looks ugly easy miss make typo different solution mentioned solution appropriate", "d": "2/2018"}, {"body": "quote another api change occur think reasoning proposal might rejected similar issue proposal syntax eg prop result different values based component prop type expectations consumer component need understand complex conversion rules gets casted b props expects type amp b together order infer eventual value something casted comparison simpler rule set prop xxx always string prop xxx always expression true false use well prop true type boolean special case makes sense easy tell", "d": "2/2018"}, {"body": "sirlancelot said", "d": "2/2018"}, {"body": "like idea since getting common would probably nice thing", "d": "2/2018"}, {"body": "pass without curlies vue nt magic interpolation javascript expression", "d": "2/2018"}, {"body": "use button android event something vue fix need site work mobile avoid relying keyup events submit logic", "d": "2/2018"}, {"body": "looks like firefox selecting value vue rerenders happens timestamp updating every second vue needs rerender case renders whole template solution actually quite simple isolating select component nt rerender outer content rerenders", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "duplicate need things booleans set different type prop reality booleans", "d": "2/2018"}, {"body": "whenever call set array whole array flagged dirty track array index access expected behavior trade prioritize correctness improved switch proxies", "d": "2/2018"}, {"body": "expected behavior router view functional component registers route dependency component using", "d": "2/2018"}, {"body": "need add nested one appearing nt apply transition first time rendered", "d": "2/2018"}, {"body": "posva thanks working used inside single file component code ideas", "d": "2/2018"}, {"body": "work well create reprodiuction open issue reproduce", "d": "2/2018"}, {"body": "would mean check properties accept units opposite checking unit provided unit provided many possible units em rem px ms well people probably expect check validity units prevent typos like pb depends keyboard try plain page set style element number see browser nt print warning error nt even add element ignores browser problem frontend libraries suffer rather see warning browser console warning emitted different frontend frameworks imo belong vue", "d": "2/2018"}, {"body": "true also good alternate behavior would least lead tohint path discovering working vue converted number without unit simple invalid value", "d": "2/2018"}, {"body": "vue converted number without unit simple would strange afaik vue nt mess strings style bindings way", "d": "2/2018"}, {"body": "vue nt convert unit absolute works units nt need one try console see nothing happens", "d": "2/2018"}, {"body": "following example updating input width correctly stuck unless specifically add px unit style binding", "d": "2/2018"}, {"body": "think warn styles frontend framework good idea style behaviors defined specific platform put warnings plugin appropriate way css length could number without unit weex seen taking default unit another word pass number could valid using vue weex", "d": "2/2018"}, {"body": "spacemon ys expected behaviour like guide shows vue doesnt add add posva explained validating css syntax even development surely complex integrate", "d": "2/2018"}, {"body": "alright seeing mentions even feature weex guide section must missed fine asis guess something put nt work check list", "d": "2/2018"}, {"body": "believe bug typescript cast ts import vue propoptions vue vueextend props myprop type array propoptions", "d": "2/2018"}, {"body": "herringtondarkholme know specific issue track related", "d": "2/2018"}, {"body": "\u8fd9\u662f element ui vue \u8fd9\u91cc\u6765\u62a5", "d": "2/2018"}, {"body": "got thx", "d": "2/2018"}, {"body": "like", "d": "2/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "2/2018"}, {"body": "jounqin thank help dll bundle prebuilt uploaded cdn later think may necessary write dll file webpack mfs use dllplugin webpack server build require statement built app bundle like normal node require statement fine", "d": "2/2018"}, {"body": "sharing codes development simply add dll script template html like", "d": "2/2018"}, {"body": "yeah script necessary", "d": "2/2018"}, {"body": "hi thanks filling issue due fact javascript object literals key please quote key instead", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "use vue expecting valid javascript expression attribute value neither values js expressions want surround value single quotes like since providing static string better remove entirely vbind documentation", "d": "2/2018"}, {"body": "ok thanks", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "oops sorry thought posted somewhere else", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "fiddle nt params actually pass params way want please next time consider using forum discord server stackoverflow questions first feel free come back open issue vuerouter repository turns bug", "d": "2/2018"}, {"body": "js common pitfall beginners vue said editor linter", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "\u8fd9\u4e2a\u5230", "d": "2/2018"}, {"body": "think better explicit magical imo easily made painless editor snippet", "d": "2/2018"}, {"body": "see", "d": "2/2018"}, {"body": "coolzjy thanks response think issue regarding unless failing see connecting dots agree comments nt want propagate return values saying expected return value handlers exactly method returns unexpected apparent called inline handler wo nt return result case specifically", "d": "2/2018"}, {"body": "think makes sense behaviour consistent", "d": "2/2018"}, {"body": "nothing prevents using getelementbyid code also pass elements around dispatching actions closing since nothing vue preventing access html elements looks like question check forum discord server stackoverflow questions", "d": "2/2018"}, {"body": "come ask question nt answer forum chat keep issues bug reports feature request please respect maybetry sharing code forum question likely people help provide code", "d": "2/2018"}, {"body": "already think share code forum help element problem really really need help people known vuejs well", "d": "2/2018"}, {"body": "template add tag name need send somewhere pass argument usual ref documentation", "d": "2/2018"}, {"body": "pass function missing need put everything yes xxx please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "2/2018"}, {"body": "staticrenderfns vuecompile yes xxx staticrenderfns add correct thanks", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "need change bind method copy example reference", "d": "2/2018"}, {"body": "thanks gotraveltoworld taking time reply works expected still considering behaviour example buggy api docs states used without argument used bind object containing attribute namevalue pairs note mode class style support array objects example mentioned whats wrong use case note set attribute wanted take advantage gon na try set explicitly rest argument", "d": "2/2018"}, {"body": "altered example surprise solution bind argument specifically use bind rest arguments dont understand behavior updated example", "d": "2/2018"}, {"body": "probably creating component named could nt reproduce jsfiddle next time please take time provide proper repro using one links provided vue issue helper thanks", "d": "2/2018"}, {"body": "posva mistake component named thanks much", "d": "2/2018"}, {"body": "\u76d1\u542c\u4e2d\u6587\u6587\u672c\u8f93\u5165\u4e0d\u80fd\u7528 input", "d": "2/2018"}, {"body": "get value composition ends please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "2/2018"}, {"body": "handled", "d": "2/2018"}, {"body": "used development runtime faster building also using ts", "d": "2/2018"}, {"body": "sorry bug report nt help debug apps", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow discord chat happy help", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "make sure include css libraries first js mainjs import vue vue import bootstrapcssbootstrapcss nt know import app app rest code please next time consider using forum discord server stackoverflow questions first feel free come back open issue relevant repository template vueloader case turns bug", "d": "2/2018"}, {"body": "thanks comment fixed way already used write css component scope overridden global css component level css priority right wrong please correct", "d": "2/2018"}, {"body": "also depends css rule specificity completely different topic unrelated vue", "d": "2/2018"}, {"body": "arrow functions nt please refer updated demo", "d": "2/2018"}, {"body": "also directives longer instances means inside directive hooks instead receive everything might need arguments really must persist state across hooks el", "d": "2/2018"}, {"body": "sqal know used nt think good way child els may removed must write another data container saved child els status avoid conflict container connected parent made redundance associatefor example destroy container destroy directive manually", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "consistent happens expands onto something reconsider next version change breaking change feel free improve section docs could definitely small example instead would great could submit pr", "d": "2/2018"}, {"body": "posva sure glad open pr get chance another approach instead breaking change would slowly introduce eg start printing console warning event names emitted snake case deprecated transition period several versions snake case camel case event names could supported eventually snake case would phased", "d": "2/2018"}, {"body": "hhm usually goes header outside nt think use content use browser detection include scripts want even better serve different page based browser using useragent using vue inside ie comment looks like overkill", "d": "2/2018"}, {"body": "also conditional comments nt go inside head example outlook use case could email editor ui", "d": "2/2018"}, {"body": "hi thanks filling issue conditional comments gets translated ie soon html parsed elements therefore manipulated meant static manipulated javascript verify behavior going open example ie say open inspector wo nt see conditional comments dom tree even add one manually editing html comment gets transformed real html elements comment seen edited", "d": "2/2018"}, {"body": "easier use package like browser detect toggle content", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "component exported property input looks like might eg nt able change componentsinputsinput file could override name using vueextend", "d": "2/2018"}, {"body": "hi thanks filling issue repro ca nt put jsfiddle try using github repo thanks", "d": "2/2018"}, {"body": "thank right changed name", "d": "2/2018"}, {"body": "also getting warning using name marked reserved tag name html tags transformed lower case svg tags fnlctrl consistent", "d": "2/2018"}, {"body": "hi thanks reporting however elements teated component vue compiler generates different code component native element kind issue guess please use directly", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "actually add directly like besides already working like react fragment", "d": "2/2018"}, {"body": "jzking emits errors use component root element may contain multiple nodes", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "requirement add quotes around class using render functions hu would news elaborate", "d": "2/2018"}, {"body": "nt keyword used property key identifier also code goes compiler like babel quote wo nt break even obsolete browsers", "d": "2/2018"}, {"body": "ah thanks linusborg docs led astray", "d": "2/2018"}, {"body": "actually valid point docs would open issue vuejsorg repository", "d": "2/2018"}, {"body": "check implies define reactive property using keywords including computed properties adding extra check comouted seems redundant", "d": "2/2018"}, {"body": "user defines computed prop allowed expect use template ca nt inconsistent behavior", "d": "2/2018"}, {"body": "use objectdefineproperty prevent vue picking reactivity large datasets", "d": "2/2018"}, {"body": "need matters actual value data", "d": "2/2018"}, {"body": "agree value important however case trying dynamically generate nested subcomponents based toplevel json schema json schema lets describe generated ui using richer metadata eg required fields alternate label texts etc important understand path eg foobarbaz original expression navigate path json schema", "d": "2/2018"}, {"body": "could something like job", "d": "2/2018"}, {"body": "understand fiddle passing original expression via second parameter nt seem dry nt relying second parameter exactly mirroring first without enforcement would seem prone copypaste errors", "d": "2/2018"}, {"body": "actually custom directives provide less functionality want con nt know bug feature element ca nt twice directive arguments fiddle notice using arbitrary arguments", "d": "2/2018"}, {"body": "already vue working demo wonder done frameworks feature highly reflective nature like asking source string arguments parameters passed function", "d": "2/2018"}, {"body": "leopiccionia like custom directives approach however componentlevel custom directives used child components seems way use toplevel component", "d": "2/2018"}, {"body": "think kennardconsulting problem probably solved stated reading prop expression highly reflective use case mentioned probably nt weigh performance overhead would incur", "d": "2/2018"}, {"body": "modifying active array nt work vue reactivity must use vueset one vueset thistabs idx active true", "d": "2/2018"}, {"body": "please fork test solution first switching tabs works fine problem related code breaks works think something wrong vue reactivity thinks need rerendered fact necessary", "d": "2/2018"}, {"body": "hi thanks filling issue direct reason updated child component render function call modified demo demonstrate behavior due vue updates view render function gets called parent child example updated root render function called first render function calls tab slotsinput outdated finally render function updates slotsinput therefore nothing vue could code actually working vue fundamental update logic trying get child render result inside parent child rendered please consider changing implementation", "d": "2/2018"}, {"body": "nice sample", "d": "2/2018"}, {"body": "hi thanks filling issue loops accesses properties prototype need hasownproperty check related vue common javascript pitfall", "d": "2/2018"}, {"body": "hi fact vue property computed property run twice forloop yes may vue changed property doubt way vue doest similar performance common js add demo common js see", "d": "2/2018"}, {"body": "may reopen", "d": "2/2018"}, {"body": "old issue rejected heavy example", "d": "2/2018"}, {"body": "nt think ssr cache behavior expected either however component cache also needs cache component lifecycle rendering type definition documentation outdated", "d": "2/2018"}, {"body": "actually nt see cache component lifecycle rendering component rendered template cached string html part currently stored object component get fetched cache template static depend store nt see register child components course browser takes back hand make dynamic like every components miss something", "d": "2/2018"}, {"body": "tried remove component registration see breaks inline styles cached version still looking solution store cache external data store", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "\u0441\u043e\u0432\u0435\u0442\u0443\u044e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c angular js \u043c\u044b \u0447\u0435\u043c vue \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u043e\u0447\u043d\u0443\u044e \u043e\u0441\u043d\u043e\u0432\u0443 \u0434\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 \u043c\u043e\u0441\u043a\u0432\u0435 \u5728 notifications githubcom receiving subscribed thread reply email directly view github mute thread", "d": "2/2018"}, {"body": "\u8fd9\u79cd\u8c04\u5a9a\u7684\u6807\u9898\u8ba9\u4eba\u770b\u7740\u5c31\u6765\u6c14 \u8fd8\u6307\u671b\u6709\u4eba\u613f\u610f\u5e2e\u4f60", "d": "2/2018"}, {"body": "please provide minimal repro opening issue example redis nuxt redis example working docs please open pr instead", "d": "2/2018"}, {"body": "expected vfor higher priority conditionals like vif vshow put one element executed item vfor loop use template tag", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "hello achieved userland component similar untested", "d": "2/2018"}, {"body": "thank u", "d": "2/2018"}, {"body": "added fontsize vleave vleaveto result expect transition fontsize", "d": "2/2018"}, {"body": "relevant vue try fiddle removes vue dependency use web transition need specify fontsize explicitly like", "d": "2/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow maybe want repro issue talking properties", "d": "2/2018"}, {"body": "hey thanks opening issue actually expected behaviour functional components get rendered parent component passed component however simple trick using function example scopedslots make sure functional component rendered call course also use function prop", "d": "2/2018"}, {"body": "happens functional component taking named slot nothing need pass child using expect would quite problematic could produce unexpected side effects slots leaking descendant children specific example functional component look like", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "wait component fully patched use nexttick", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "made mistake code complex event listeningbinding place forgot unregister event listeners beforedestroy hook hence still old context empty refs working thanks much help", "d": "2/2018"}, {"body": "think set path object case stuff like following elements js elrotation elrotationy following could convenient template", "d": "2/2018"}, {"body": "anything shorthand beyond original scope proposal nt think magic path extensions good idea like reaching child component private state", "d": "2/2018"}, {"body": "interesting suggest refactor custom elements attributes properties like following makes javascript api less clean live could even automatically map etc", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "yeah easy work around concerned performance like follows adding properties custom elements plus makes clear attributes map directly properties without reaching places represented attributes maybe good thing looking forward prefix notation", "d": "2/2018"}, {"body": "plus makes clear attributes map directly properties without reaching places represented attributes maybe good thing well maybe moot also possible exists custom element instance without attribute part element html api example ssr would send data client attribute js hydration send data element instance property case notation like would work", "d": "2/2018"}, {"body": "posva make sense way get rid things make wrapper lighter weight like react", "d": "2/2018"}, {"body": "akryum make lot vue files really nt want", "d": "2/2018"}, {"body": "ok lot html files smile", "d": "2/2018"}, {"body": "javoski think would best data whole child component initialization think reactive dependency child component", "d": "2/2018"}, {"body": "xiaodemen sorry ambiguity pr title component props reactive nt collect dependencies initialization data option", "d": "2/2018"}, {"body": "javoski know data option case nt collect dependencies eg component created hook mount hook immediate watch many cases think better pause dependency collection restart perspective lifecycle rather simply reseting case occuring", "d": "2/2018"}, {"body": "xiaodemen yes right nt aware try figure better solution", "d": "2/2018"}, {"body": "public option vue components yet see vuejsvuejsorg might problematic use outside vue core atm suggest give details current use case help core team consider thoroughly behavior finally make public", "d": "2/2018"}, {"body": "closing due inactivity", "d": "2/2018"}, {"body": "work though maybe talking checkbox appearing checked", "d": "2/2018"}, {"body": "posva main idea create component state could driven without provided uses falls back internal state providing way react state changes", "d": "2/2018"}, {"body": "thanks answering really appreciate", "d": "2/2018"}, {"body": "working expected according tests", "d": "2/2018"}, {"body": "verified yes seems work intended think typo javoski pointed recommend closing issue", "d": "2/2018"}, {"body": "nt typo still destroyed even empty forgot leave comment last time tried dig issue", "d": "2/2018"}, {"body": "fnlctrl tried fiddle posted saw digging little deeper keeping clear watch array issue actually related vue click multiple times multiple cached versions cache vue actually tracks element still completely destroyed screenshot see multiple versions living array try empty cache repeatedly till gone also throws function accordingly might want use set instead array prevents duplicates", "d": "2/2018"}, {"body": "ca nt find way stop production tip directly change vuejs file", "d": "2/2018"}, {"body": "shepelevstas", "d": "2/2018"}, {"body": "codepen demo show", "d": "2/2018"}, {"body": "fixed", "d": "2/2018"}, {"body": "hi iphone se ios vue transitions seems work like final state displayed short time transition plays expected maybe bit faster played transitions official vuejs transition site play strange way animation animatecss velocity plays expected ios pc vuejs version edit updated device latest ios version seems animations work properly", "d": "2/2018"}, {"body": "tested nt reproduce issue guess appears ios", "d": "2/2018"}, {"body": "think classes correctly applied original video showing custom application thanks checking jkzing", "d": "2/2018"}, {"body": "hi thanks filling issue able get results latest chrome vue vue following logs seen either vue version vue version nt matter watcher watcher closing simply race condition caused implementation whether move mouse immediately clicking nothing oschromevue version", "d": "2/2018"}, {"body": "easy way intelligently merge classes way docs mention normal components", "d": "2/2018"}, {"body": "sure vue issue ios really terrible detecting show onscreen keyboard web browsers times likely ios bug could reproduce simple vanilla javascript showhide", "d": "2/2018"}, {"body": "giwayume exact code showing keyboard focus vue vue show keyboard ios device try links edit using vanilla js thing keyboard shown", "d": "2/2018"}, {"body": "arnesten understand nt change code pointing vue would coding workarounds ios bugs phone responsibility show keyboard since javascript api tell", "d": "2/2018"}, {"body": "giwayume nt know classified bug ios since specification onscreen keyboard behave think problem much delay user click vue updating dom setting focus input vue delay shorter worked fine ios quite common search icon mobile web app click show focus search input opening keyboard instead requiring second click relatively big ux issue case hopefully fix least workaround downgrading vue found situation", "d": "2/2018"}, {"body": "guess another issue micromacro task introduced ios requires user input showing keyboard vue uses micro task user click counts valid trigger keyboard however uses macro task ios longer treats trigger", "d": "2/2018"}, {"body": "see point implementing thing dedicated devtools unit tests useless one testing everything executed anyway", "d": "2/2018"}, {"body": "hi thanks filling issue works vue template compiler special logic taking first argument input handler like manually nt work functional components case compiler could nt know whether use input handler since impossible know render function would return runtime therefore always uses default generating input handler instead way make work linusborg said though entirely correct add native html elements nt use manually call demo cc shameleo closing nothing vue without putting great effort trying analyze arbitrary runtime behavior manually written render functions", "d": "2/2018"}, {"body": "ran exact issue nice workaround", "d": "2/2018"}, {"body": "learning vue struggling past hours thanks bringing", "d": "2/2018"}, {"body": "reopening kingwl probably closed accidentally pr fork", "d": "2/2018"}, {"body": "fujisunny investigation found get work simply replace vue patch mechanism caused root cause different behavior chrome see fiddle sure need improvement wontfix", "d": "2/2018"}, {"body": "jkzing much thanks investigation scenario would like use solution hope would happen situation", "d": "2/2018"}, {"body": "use method work", "d": "2/2018"}, {"body": "posva reason put two options", "d": "2/2018"}, {"body": "worth aforementioned typescript issue fixed requires one add make things work done however run another roadblock error message raised idea possible use build contains compiler typescript tired trying get work go back react", "d": "2/2018"}, {"body": "issue got gulpfile transpile typescript bundle browserify app bundles one vendor bundle got working mostly however followed code results tried setting flag nt work dependencies ideas resolve", "d": "2/2018"}, {"body": "managed get working using plugin flag transform rather using passing result", "d": "2/2018"}, {"body": "thank explanation", "d": "2/2018"}, {"body": "tested realized last night vue existing attributes used set custom css properties reactively properties used child pseudoelement selectors one would expect thought autowiring css variables block compilation match hyphenatedprefixed propdatacomputed element feels bit conventionbased could cause issues variable intended defined modified child component root tag since vue compiler would naive regex search since reasonable solution already go ahead close issue thanks everyone making vue awesome", "d": "2/2018"}, {"body": "posva thx reply hard find mistake", "d": "2/2018"}, {"body": "multiple root elements template would nice js libraries ui frameworks seems necessary far reached workaround like defining dummy component export default data function return parent null children null beforemount function thisparent elparentelement thischildren elchildnodes thisparentremovechild el jquery thisparent append jquery thischildren mounted function consolelog dummy thischildren test import header componentsheader import nav componentsnav import dummy componentsdummy export default components dummy header nav mounted function consolelog index mounted way could nt manage fix without using jquery", "d": "2/2018"}, {"body": "another use case struggling parent component defines grid multiple named templateareas ideally child component would since child component single wrapping element nt work work around causes problems", "d": "2/2018"}, {"body": "could someone open issue vueloader", "d": "2/2018"}, {"body": "also struggling lack support multiple root elements components reviewed comments issue written problem layout uses css grid css grid grid areas apply direct child element since vue component must single root element possible component represent multiple grid areas eg multiple rows columns essentially problem tochoromero raised single component represent multiple elements use case best workaround found forgo component use instead second example trusktr mentioned coming soon used imperfect workaround problem css grids say imperfect semantically equivalent replacing parent div children dom seen first example selector applies div children response sirlancelot created fiddles show issue keen see sirlancelot would work around issue problem since useful range options available example using single root div component example workaround tables want component represent multiple possible using root element discussed possible component represent multiple nt think help us linusborg permit meta question best place continue discussion implementation feature", "d": "2/2018"}, {"body": "euoia real place yet middle setting seperate repository rfcs suggested discussed community would probably best place available soon properly announced time come", "d": "2/2018"}, {"body": "pretty compelling realworld case sure proceed without access multiple root nodes developing essentially tableaccordion table adds rows click show details entry table located researcher groups component subcomponent appresearchergroupentry researchergroupentry using vuematerial problem would using plain anyway structure kind like researchergroupentryvue keyboardarrowdown keyboardarrowright indexvalue groupdatalabel group addbox add client client type settings settings problem comes want able expand clients like mockup would trivially easy could add another researchergroupentry component unfortunately wrapping div span tag wo nt work messes table wasnt using vue material might considered using jsx component could simply use map parent create array components based two variables might still able vfor directives sure may create props crazy pseudo array merging parents children uuuuugly code", "d": "2/2018"}, {"body": "ktsn vue util contains useful outside internal api maybe move somewhere else", "d": "2/2018"}, {"body": "also would like able use mentioned syntax resulta resultb able access deep properties without use long names like", "d": "2/2018"}, {"body": "sort style notation like javascript thoughts javascript keyword blockscoped consistent ed values accessible child nodes", "d": "2/2018"}, {"body": "declare nt", "d": "2/2018"}, {"body": "alexandrebonneau nt make sense", "d": "2/2018"}, {"body": "thoughts would still need computed property method cases data coming api bc possibility nullundefined keeping separation template presenting data marginally verbose gains clarity also reduction size vue core", "d": "2/2018"}, {"body": "userland solution works highly recommend use may useful move logic separate component make template cleaner", "d": "2/2018"}, {"body": "oevgeny nice workaround thanks however simpler directive could prevent cluttering template additional tags think feature request still valid", "d": "2/2018"}, {"body": "nt looked deeply whole updaterender pipeline speaking conceptually curious dependency changes alone ca nt determine componentslot rerender", "d": "2/2018"}, {"body": "plans ahead supporting local directives functional components would allow among others convert advanced components functional features could replaced directives assume technical limitations would like know planned requires etc least know must keep using normal components", "d": "2/2018"}, {"body": "looks like warning possible solve cases see", "d": "2/2018"}, {"body": "herringtondarkholme undesirable add functionality universal behavior would possible add explicit operation instead something like instance counterpart would called working something quite similar mokkabonna library representing async action function invoke action properties representing state approach option vue reactivity system lends really clean way represent state async behavior ui opinion anyway may pure way go packaging state invocation single entity keeps things nice clean concise selfcontained end something like html fetchcommentsisloading loading fetch comments commentbody fetchcommentserrormessage", "d": "2/2018"}, {"body": "add able make work manually calling property want reactive", "d": "2/2018"}, {"body": "listeners intervalstimeouts state need store somehow could cleared unbind", "d": "2/2018"}, {"body": "either store directly element save using element key", "d": "2/2018"}, {"body": "cztomsik still cleanup code sample provided describes share common state different hook calls want add cleanup", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "sorry replying closed issue think belongs get plenty warnings come kind iterations key could use warnings dont add value instead clutter console mean dom content simple live warnings", "d": "2/2018"}, {"body": "changed mind regarding suggested signature callback function think would better make callback signature somehow compatible react make easy wrapper whatsoever libraries provide something could used react vue instead would suggest means myrefcallback either called rendering removing react second argument ref callbacks first argument would behave exactly like react", "d": "2/2018"}, {"body": "example using vbind", "d": "2/2018"}, {"body": "another use refactoring component order make easier maintain form various parts fall css grid extra wrapper required group several related elements component causing grid treat whole component one griditem sure work around hope end fragment syntax like react nt already thing", "d": "2/2018"}, {"body": "marktnoonan point looked issue begin trying solve css grid end use vue could nt achieve without either nested elements creating big giant vue file", "d": "2/2018"}, {"body": "curious tools using profile vue dave", "d": "2/2018"}, {"body": "hi guys might seems nowhere write vue component inside tsx file", "d": "2/2018"}, {"body": "right coming nowhere forum chat questions encourage ask forum stack overflow discord chat happy help", "d": "2/2018"}, {"body": "issue ie without event expected behavior", "d": "2/2018"}, {"body": "issue css selector work", "d": "2/2018"}, {"body": "possible put exemple correct code", "d": "2/2018"}, {"body": "magicdawn found solution example common pattern would say seems quite tricky accomplish lot custom handling render method", "d": "2/2018"}, {"body": "esbenam yet templates tired writing function try vue jsx supports object spread pattern express vue terminologies eg directives events prop way", "d": "2/2018"}, {"body": "magicdawn yeah ended", "d": "2/2018"}, {"body": "try javascript vuecomponent fo template fo new vue el svg", "d": "2/2018"}, {"body": "nt work import materializecss question", "d": "2/2018"}, {"body": "bhoop try input events input event nt supported ie however textinput event supported also thinking nicely provide alternative facade within vuejs eventing core permission", "d": "2/2018"}, {"body": "paulredmond thank seeing strange async issues ie could recreate chromeedge etc using loaded truefalse check form executing vfor fixed", "d": "2/2018"}, {"body": "got answer use plugins vueheadful prerenderspaplugin troxler sorry downvote man information provided already vueheadful plugin problem rendering spas crawlers please check", "d": "2/2018"}, {"body": "downvoting post first asking help seems rather impolite even invest time help get return downvote anyway vueheadful sets title javascript google search engines support running scripts indexing page caveats google crawl tool mean fetch google part google search console yes button click fetch fetch render might want look help article use fetch google websites fetch fetches specified url site displays http response request run associated resources images scripts page fetch render fetches specified url site displays http response also renders page according specified platform desktop smartphone operation requests runs resources page images scripts", "d": "2/2018"}, {"body": "heyup want able codepen popup test asked react developers stack overflow rather giving sort direction go say noo ca nt think like jquery anymore well let tell thinking like javascript want able put element anywhere page want nicer version script site code github account vhtml look like shows promise thank advance vue type people", "d": "2/2018"}, {"body": "better way vue deal possible provide better kind error handling instead dumping half dom inside console happens", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "implemented template compiler options trim whitespaces around text nodes collapse sequences whitespace characters within text nodes production build sizes reduced different projects absolute terms please look pr", "d": "2/2018"}, {"body": "thank cerlestes good work excited see feature vue wondering difficulties find topic explain activate neat feature pr accepted", "d": "2/2018"}, {"body": "davidrot sadly bit tricky vue devs completely integrated currently generic way specify option parameters outside manually calling template compiler pr added vueloader would least make possible change values webpack configuration file similiar could toggled far quickest way manually patch vuetemplatecompiler package actually need patch buildjs patch forcefully set option constants desired values within project nodemodules directory also created another commit like push vueloader would allow disable enable whitespacerelevant options attribute inside sfc like useful turning options globally disabling components example require due elements wait actions devs push sure changes imho long run ideally options turned default nt make sense send compiled template like network note patch disables optimizations within elements default browser strip away anyway adds overhead bundle size lowers performance popularity vue probably amounts megabits junk whitespaces transferred internet given time edit talking vuerouter obviously meant vueloader", "d": "2/2018"}, {"body": "hi expression attribute require reactivity computed something else internal vue logic always child undefined html child typeof refsmychild thank", "d": "2/2018"}, {"body": "fwiw running exact problem vue anybody else coming google solution wrap element vuecomponent maincomponent template edit may ramifications relative positioning", "d": "2/2018"}, {"body": "current problem vueset method plain object triggers way many subscribers property added object actually subscribers properties triggered one property added performance view badly impacted map like collection contains hundredth keys example project thousands subscribers triggered one element added map using vueset operation look deeply vuejs code see problem comes dependencies triggered object means object one property key dependencies keys triggered adding one key using plain objects mimic map look right solution therefore support map vue welcomed large collections items", "d": "2/2018"}, {"body": "native app webview app like react native", "d": "2/2018"}, {"body": "guys forget mobile app development solution uses js lot experience cordova reactnative even recently made app ios using vue result pretty unreliable piece garbage really must using common language use xamarin otherwise go kotlin android swift ios", "d": "2/2018"}, {"body": "agree today think pwa recommended want hibrid app hibrid go kotlin swift", "d": "2/2018"}, {"body": "weex based webview rendered native components mobile however weex also downgraded web render pages webview", "d": "2/2018"}, {"body": "thanks say see compatibility lol ca nt complete hybrid app pwa actually", "d": "2/2018"}, {"body": "one says pwa native hybrid", "d": "2/2018"}, {"body": "another resource says soon weex", "d": "2/2018"}, {"body": "nativescriptvue looks amazing", "d": "2/2018"}, {"body": "passing object directly vbind might readable using object shorthand make look nice imo instead", "d": "2/2018"}, {"body": "boolean modifier would great", "d": "2/2018"}, {"body": "given base component possible extendmixin component custom options case instead explicitly like export default name implementation extends base privates objectassign privatesecond override baseprivates", "d": "2/2018"}, {"body": "fnlctrl need change", "d": "2/2018"}, {"body": "hey pablohpsilva ro listen width child component pass parent component element", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "mapssets useful stuctures urgent support vue otherwise inefficient use vue apps", "d": "2/2018"}, {"body": "really struggled trying function invoked find value example trying build date range picker looks like presets coming array looks like also two dates input fields component amp really want compare date user selected dates passed preset configuration set value either unable nt accept conditions ca nt nt allow alias passed function ca nt something like allowing conditional statements least solve problem easily also may something fundamentally wrong please point could achieve different way", "d": "2/2018"}, {"body": "currently solved problem exploiting fact computed properties function calls script template really seems like hack sure please suggest", "d": "2/2018"}, {"body": "ended looking object looks like take note brackets", "d": "2/2018"}, {"body": "think sirlancelot solutions pose risks performance construct entirely new object sake hashing multiple watchers particularly dangerous want hash large number watchers together wouldnt safer define watchers beginning component constructed spread operator simple reducer done relatively little clutter guess pretty similar vuex would nice utility function map watchers provided allowing something like even want provide access key allowing programmatic generation watchers", "d": "2/2018"}, {"body": "bummer", "d": "2/2018"}, {"body": "want ask add upload file used change event uploaded file also tried von change thanks", "d": "2/2018"}, {"title": "call aswell", "body": "discovers actually clears child listeners view listens objects ie modelscollections would cleared custom controller listens view listener would cleaned intended behaviour js function foocontroller options thisinit options foocontrollerprototypeinit function options thislistento optionsview foo stuff objectassign foocontrollerprototype backboneevents var view new backboneview var ctrl new foocontroller view view viewremove point still references somehow call manually view get destroyed sure one advantages using automatic cleaning listeners object gets removed oo", "num": "4187", "d": "2/2018"}, {"title": "model change event triggered exception", "body": "steps reproduce add change event handler backbone model instance make change model attribute change event handler called exception occurs handler make change model attribute change event handlers called code demonstrate javascript var model new backbonemodel var changehandler function consolelog name changed modelget name backboneeventslistento model change changehandler modelset name sachin prints name changed sachin console modelset name virat prints name changed virat console var new backbonemodel var changehandler function consolelog name changed name alog model changed throw exception defined backboneeventslistento change changehandler name sachin prints name changed sachin console also exception occurs inside change handler name virat nothing printed model change handler called name rohit nothing printed model change handler called analysis inside model set function thistrigger called exception thrown handlers thischanging never set false subsequent model changes change event triggered developer code never break behaviour framwork smilarly subsequent changes model trigger change event model solution wrap trigger logic around tryfinally block ensuring thischanging thispending set false", "num": "4185", "d": "2/2018"}, {"title": "find module jquery", "body": "following discussion jquery require trycatch statement probably fine node fails bundle would suggest add dependencies backbone understand want sure", "num": "4184", "d": "2/2018"}, {"title": "unexpected behavior please doc fix", "body": "", "num": "4183", "d": "2/2018"}, {"body": "controller called automatically views lifecycle know stop listening view explicitly calls destroyed controller thing", "d": "2/2018"}, {"body": "updated example make clear question removed object nt clean listeners parent object thought work way clean listeners objects listen", "d": "2/2018"}, {"body": "removes event listeners view made event listeners objects made view want remove event listeners attached controller need call", "d": "2/2018"}, {"body": "correct properly documented first case getting last call nt change anything second case getting call made changed words provides changes last call clearly documented", "d": "2/2018"}, {"body": "right documentation russian language delayed moment incorrectly translated look original source created issue nice day", "d": "2/2018"}, {"body": "fiddle updated working one", "d": "2/2018"}, {"title": "missing changelog", "body": "title says", "num": "16304", "d": "2/2018"}, {"title": "quest glimmer components ember", "body": "quest issue tracks implementation glimmer components emberjs plan glimmerjs components following features outer html templates etc arguments templates prefixed like arguments set component component classes use javascript class syntax mutable component state annotated properties components invoked via syntax attributes splatted via keeping ember spirit incrementalism want land functionality piece piece via addon allows community start using features providing feedback early process fact already started road glimmer components ember first two features already started land templateonly components templates outer html assuming optional feature enabled arguments accessed template via prefix eg issue proposes finishing process bringing glimmer components ember allowing addons provide alternate component implementations transforming package ember addon implements glimmerjs component api break work phases one unlocking benefits existing ember apps addons phase adding necessary primitives emberjs support alternate component implementations phases incrementally enabling glimmerjs component api go depth phases defer exploring technical details later phases first phases closer completion phase customizing component behavior tl dr add customcomponentmanager api emberjs allow addons implement custom component api currently components ember app assumed subclasses order support alternate component apis ember need way tell ember component behavior change say custom component behavior specifically mean component instances created component instances destroyed arguments provided component instance component notified lifecycle changes glimmer vm introduces concept component manager object makes decisions api low level would premature adopt directly public api ember difficult write easy author way breaks components yet stable instead propose new ember api called implements delegate pattern provides smaller api surface area fullfledged glimmer vm api allows addon authors fall pit success ember know component manager use given component original iteration custom components rfc introduced concept data structure eagerly registered ember specified component manager use one major benefits approach component manager resolution happen build time unfortunately means design api exactly get registered likely means sort integration build pipeline instead propose api setting component manager runtime via annotation component class incremental step allows work custom component managers continue longer term solution designed custom component manager discovery iteration components must explicitly optin alternate component managers via special function exported ember annotates runtime component manager used particular component class js import componentmanager embercustomcomponentmanager import emberobject emberobject export default componentmanager emberobjectextend glimmer eventually could become class decorator js import componentmanager embercustomcomponentmanager export default componentmanager glimmer class first time component invoked ember inspects class see custom component manager annotation uses string value perform lookup container example ember would ask container object container key addons thus use normal resolution semantics provide custom component managers glimmer component addon export component manager get automatically discovered normal resolution rules api verbose particularly ergonomic apps addons abstract away introducing base class annotation example addon called wanted provide custom component manager could export base class like js addonindexjs import emberobject emberobject import componentmanager embercustomcomponentmanager export default componentmanager emberobjectextend turbo users addon could subclass base class define components use correct component manager import turbocomponent turbocomponent export default turbocomponentextend didinsertelementquickly custom component api component island backwards compatibility reasons important introduction new component api break existing components one example existing view hierarchy api ember components inspect parent component via property even parent child ember components still nonnull property currently ember responsible maintaining state well ambient scope state like target actions prevent poorly implemented component managers violating invariants existing system use compositional pattern customize behavior hiding sharp corners underlying api js import customcomponentmanager embercustomcomponentmanager export default new customcomponentmanager major minor ember version manager targets version create componentclass args responsible instantiating component class passing provided component arguments value returned passed hooks getcontext component returns object serves root scope component template implementations return component properties looked curly expressions update component args called whenever arguments component change destroy component phase ember object glimmer components base class ember supports long list features many longer heavily used features impose performance cost even unused first step want provide way opt simplified glimmerjs component api via package ease migration provide implementation glimmer base class inherits example emberglimmer component looks like js srcuicomponentsuserprofilecomponentjs import component glimmercomponentcompat import computed emberobject export default component fullname computed argsfirstname argslastname function let firstname lastname thisargs return isadmin false toggleadmin thisset isadmin thisisadmin hbs srcuicomponentsuserprofiletemplatehbs fullname welcome back firstname isadmin admin notable characteristics components templates outer html example template single root element renders tagless component actions functions component need nested hash arguments set property rather setting individual properties component directly use ember object model means tools like computed properties mixins ember developers already familiar continue work important included properties supported phase properties component methods properties relating view hierarchy etc custom javascript dsl modifying root element dispatching events mandatory class autogenerated guid element id manual method property use instead passed arguments unidirectional create twoway bindings passed arguments set properties component instance avoiding possibility hardtodebug naming collisions create jquery object component element manual components dom support following lifecycle events event listener component lifecycle events hooks must implemented methods one interesting side effect set features dovetails effort enable javascript classes conjunction design proposed es classes rfc provide alternate implementation component js srcuicomponentsuserprofilecomponentjs import component glimmercomponentcompat import computed emberdecoratorsobject export default class extends component isadmin false computed argsfirstname argslastname get fullname let firstname lastname thisargs return toggleadmin thisset isadmin thisisadmin phase angle bracket syntax phase enables invoking components via angle brackets addition curlies syntax disambiguates component arguments html attributes feature also enables splatting passed attributes component template via hbs srcuicomponentsuseravatartemplatehbs lt attributes inserted hello firstname would render output similar following html hello steven phase tracked properties phase enables tracked properties via decorator ember details interop ember object model tracked properties worked tracked properties land users able drop module use normal nonemberobject component base class tandem recentlymerged autotrack feature infers computed property dependencies automatically result simplification application code js import component tracked glimmercomponent export default class extends component tracked isadmin false tracked get fullname let firstname lastname thisargs return toggleadmin thisisadmin thisisadmin q amp add back things like class name autogenerated attribute glimmer components compatibility existing css yes example hbs component content goes js import component glimmercomponent import guidfor emberobjectinternals export default class extends component get uniqueid return guidfor resources stglimmercomponents channel ember community slack coordinating work custom component rfc customcomponentmanager branch inprogress branch emberjs implementation behind feature flag tracked branch inprogress branch emberjs work interop properties ember objects tasks use lists track ongoing work learn implementation add remove items list custom component manager api x update custom component rfc reflect changes chancancode x add feature flag implement function expose resolver needs detect annotated classes resolver needs look specified component manager guidance addon authors put component managers discovered work module unification mixonic implement api define interface validate property upon creation internals preserve existing components instrument rendering performance instrument compatibility ember inspector glimmer component addon todo break separate quest issue glimmerjs repo support using ember addon preserve existing behavior consumed glimmerjs provides plain javascript base class provides base class base classes import add annotation consumed ember implementation discoverable via ember container lookup lifecycle hooks static event delegationinvoked methods etc triggered element access computed property alias arguments available constructor updated called trigger infinite rerender cycle documentation install caveats canaryonly emberglimmer compat components outer html templates lifecycle hooks defining computed properties depend migration guide glimmer components guides writing effective glimmer components people familiar libraries glimmer components ember developers glimmer components react developers glimmer components angular developers glimmer components cobol developers open questions best practices actions something need allow component managers hook use bare javascript classes static method component classes protocol initializing component seems simple surprisingly tricky best place document addon apis like handle versioning", "num": "16301", "d": "2/2018"}, {"title": "public api needed support ember inspector", "body": "working going ember inspector updating encountered several things far support due lack public api things need expose relied find booted applications page like deprecate calling reopen instantiation done given object inspector uses reopen add custom logic think destroy sure atm within initializer expose public way finding descriptors", "num": "16298", "d": "2/2018"}, {"title": "runloop drop events", "body": "hello fans timing bugs today fun one new microtaskbased autorun architecture drop scheduled events see action run following beta js import controller embercontroller import schedule emberrunloop export default controllerextend actions testit deliberately escaping run loop use autoruns instead promiseresolve gt schedules autorun schedule render gt consolelog schedule microtask ahead runloop next flush promiseresolve gt consolelog return promiseresolve gt runs fine consolelog scheduled event never fires schedule actions gt consolelog never runs return runloop goes back first queue start flushing promise stack interleaving runloop onemicrotaskperqueue fire event console logs number layers promises required experience bug depends queue trying schedule runloop spends one microtask per queue stack promise resolutions interleaved queue flush example schedule queue immediately queue flushed runloop never notices make drop events queue varying number promises resolve time first trigger autorun time schedule doomed event published working example bug", "num": "16296", "d": "2/2018"}, {"title": "observers nt trigger complex app", "body": "ok really weird complex app lots addons involved observers triggering create simple test route simple observer watching plain string property nt fire put code new application works every time using change commenting else fixes symptoms function notifyobservers obj keyname meta meta return could broken code would cause fix work uncovered edge case around ember observers", "num": "16292", "d": "2/2018"}, {"title": "meta issue routing fails identify willbeactive paramonly changes", "body": "numerous issues reported topic going fix need work correctly simplified reproduction twiddle instructions one piece new information fails async transitions line triggers bug existing since least related cc topaxi bgentry", "num": "16275", "d": "2/2018"}, {"title": "possible memory leak", "body": "seeing potential memory leak ember beta running acceptance test would expect instance garbage collected afterwards teared however case simple reproduction see readme steps reproduce see instance left object retainer path downgrade ember app container correctly gced", "num": "16273", "d": "2/2018"}, {"title": "operand got", "body": "using latest beta version seeing error operand got one tests seems maximum value literal numbers decreased significantly might also related", "num": "16269", "d": "2/2018"}, {"title": "usage testemjs emberjs two different environments ci dev", "body": "hello thank awesome project please correct testemjs issue using embercli macos sierra testemjs run tests development mode chromium installed macos yes gitlabci zsh dash git enhancementupgradeemberversion ember test cleaning built project successfully stored ok error message gt launcher chromium found installed tests pass skip fail launcher chromium found installed stack trace error report dash git enhancementupgradeemberversion today need run tests passing flags command kind usage seems tricky correct missing something ps gitlab ci use normally wich resolves", "num": "16267", "d": "2/2018"}, {"title": "router service transitionto aborted current route", "body": "calling component router router service get called current route however aborting transition parameter hook abort transition router still transition specified route transition parameter another transition edit transition aborted calling", "num": "16266", "d": "2/2018"}, {"title": "attempted access property", "body": "related service injected route extending authenticatedroutemixin use case nt know error coming route accessing service route service let need information try revert ember seems problems ie cc wycats maybe issue embersimpleauth kindly cc marcoow", "num": "16263", "d": "2/2018"}, {"title": "replace router service transition adds history entry", "body": "hi think may discovered bug transitions circunstances involving routes query params happening ember code traced cause bug currently broken created repo illustrate issue structure could possibly simplified closely resembles real life scenario route links routes using method routes dynamic part one breaks also query param templates let transition next using turns access page press broken link gets added history thats ok transitioning replacing press next link get second unwanted history entry investigating issue case side finally discovered culprit condition system router transitioning service preventing query params correctly pruned value getting saved library router property cause problems line future transitions query params change list reflects query params change previous state reality checks previous state object property keys new one nt triggers event base causes turn creates new transition somehow hijacks original one finalizes original could set route exactly works nt query params event nt get triggered workaround issue stop using instead use internal private one gets solved nt really know aforementioned condition makes transition different things coming service although sure reason behind discouraging coworkers using service additionally speculation say race condition happening within event transition spawned nt able finalize original one sets urlmethod thanks", "num": "16262", "d": "2/2018"}, {"title": "assertion failed attempted access property", "body": "ember assertion failed attempted access property since ember usually fine longer need use access computed properties however case object question special kind ember object proxy therefore still necessary use case encountered error thirdparty code nt control information help us improve error message telling us happened situation seems caused ember data using object since checks unconditionally causing error", "num": "16259", "d": "2/2018"}, {"title": "computed properties relationships nt update model saves", "body": "ember also canary ember lt relationship nt recomputed property changes one underlying models reproduced simple new app app consists two one displaying saved models displaying pending models button creates new model saves saving appear pending section completes gets sets false model appear saved section ember gt newlycreated thing never moves pending lt works expected logging like see new task changed expected returns", "num": "16258", "d": "2/2018"}, {"title": "uncaught typeerror rsvpcast function", "body": "seems ember silently updated rsvp version longer includes unfortunately deprecation warning prior seems use function internally though broke tests cc jasonmit", "num": "16257", "d": "2/2018"}, {"title": "input helper passed type work ember beta", "body": "working updating apps addons beta noticed strange behavior components wrap helper first one rendering input created reproduction played around appears issue passing argument chokes also tested seem difference", "num": "16256", "d": "2/2018"}, {"title": "computed value nt get properly updated input element", "body": "looks like edge use case valid one nonetheless please correct wrong twiddle reproduce user steps reproduce input character input element value gets coerced expected value world input element reflects input get coerced expected however controller property gets correct value expected behavior input element value reflect bound property value input key factors bug computed value whose setter function returns value twice consecutively regardless function argument input element bound computed property user input triggers setter function possible cause guessing stop condition prevent infinite loop propagating binding events checks whether value changed stop condition also stopping update event dom something like possible fix guessing input element bound property triggers change event since property may computed alter original value compare dom element value vs property value decide update needed dom regardless property value changed real case scenario trying define custom user input user value gets corrected special characters cleaned changed alternative twiddle using ember", "num": "16255", "d": "2/2018"}, {"title": "partial application argument order", "body": "begun using following pattern inputs see backstory ember adding additional arguments helper invoked pattern behave expect example passed first argument others seem transposed one would expect argument order respected reproduction steps clone following dummy ember app see compare logged output entering text inputs", "num": "16248", "d": "2/2018"}, {"title": "transitiontoroute gone api documentation", "body": "happens api documentation anymore", "num": "16247", "d": "2/2018"}, {"title": "oneway binding ca nt rerendered coexisting twoway binding", "body": "reproduction twiddle demo shows bug component takes oneway binding value twoway binding value time trying mutate twoway binding value updated rerendered oneway binding value updated logged console rerendered properly however trying mutate oneway binding value nt problem ps like send pr provide test case sure kind tests write would helpful someone show example", "num": "16236", "d": "2/2018"}, {"title": "rfc deprecation emberlogger", "body": "rfc rfc merged yet recently moved final comment period general support land feel confident work commence preparation tasks x deprecate apis emberjs pr develop publish codemod write deprecation guide x emberjswebsite pr x emberlearndeprecationapp pr x review api docs x review guides pr review top addons x ember data pr x emberresolver pr", "num": "16231", "d": "2/2018"}, {"title": "embersimpleauth demo working", "body": "hi yesterday spent hours trying install embersimpleauth want see demo works using following versions ember node npm git version eslint current versions qunit mocha yarn etc etc followed instruction beginning output c yarn install yarn install validating packagejson resolving packages fetching packages info fsevents platform incompatible module info fsevents optional dependency failed compatibility check excluding installation linking dependencies warning gt eslintconfigsimplabs unmet peer dependency eslint gt warning gt eslintpluginmocha unmet peer dependency eslint warning gt sinonchai unmet peer dependency sinon building fresh packages success saved lockfile tried ember serve got c ember deprecation addon trying access projectnodemodulespath reliable way discover npm modules instead consider require resolve sync something basedir projectroot accessed new npmdependencyversionchecker c warning emberdecorators used emberpopper installed emberdecoratorsbabeltransforms extracted separate addon see instructions installation embergetownerpolyfill required ember later please remove group options used testgenerator option qunit mocha error group options used testgenerator option qunit mocha functioneslintvalidationfiltercreate c classlinttree c projectaddonsreduce c arrayreduce classeachprojectaddoninvoke c classjshintaddontree c classtreefor c projectaddonsreduce c arrayreduce emberaddonaddontreesfor c since tried installing emberdecoratorsbabeltransforms eslint qunit mocha broccoli also attempts install emberdecoratorsbabeltransforms fail regard whether use option tried several times warning emberdecorators used emberpopper installed emberdecoratorsbabeltransforms extracted separate addon see instructions installation updating everything latest output c ember deprecation addon trying access projectnodemodulespath reliable way discover npm modules instead consider require resolve sync something basedir projectroot accessed new npmdependencyversionchecker c warning emberdecorators used emberpopper installed emberdecoratorsbabeltransforms extracted separate addon see instructions installation group options used testgenerator option qunit mocha error group options used testgenerator option qunit mocha functioneslintvalidationfiltercreate c classlinttree c projectaddonsreduce c arrayreduce classeachprojectaddoninvoke c classjshintaddontree c classtreefor c projectaddonsreduce c arrayreduce emberaddonaddontreesfor c nt feel like getting anywhere appreciate advice thank", "num": "16219", "d": "2/2018"}, {"title": "ember possible test instanceinitializers", "body": "hey possible test instance initializers using current blueprint errors creating application booting application built app instance automatically boots app fires tested instanceinitializer able prepare test eg registering containers running initializer", "num": "16216", "d": "2/2018"}, {"title": "dom state nt respect bound property values select", "body": "following twiddle shows couple ways select element get sync bound properties first example shows value property select element seems overridden render process value bound property nt correctly reflected unless incidentally first option additional examples show selected property option elements used select element initialize correctly unless bound property value actually changes dom gets sync selecting new option may poor taste mention seems work react seen similar issues form elements eg input typeradio", "num": "16213", "d": "2/2018"}, {"body": "coordinating work stglimmercomponents channel ember community slack interested helping lurkers welcome curious sausage gets made", "d": "2/2018"}, {"body": "regarding hbs srcuicomponentsuseravatartemplatehbs lt attributes inserted hello firstname nt understand curly brackets used denote dynamic variables splatted attributes visually looks like going rendered consistency would nt better", "d": "2/2018"}, {"body": "rfcs glimmer components discuss look work", "d": "2/2018"}, {"body": "tomdale issue mentions documenting component compat mode seem mention documenting migration guide example quite surprised thing anymore would great documentation shows migrate common use cases new best practice patterns", "d": "2/2018"}, {"body": "dbbk biggest reason nt require syntactically ambiguous normal attribute like cases require curlies four fewer characters seemed easier type less visually noisy think may also cause people assume property scope ca nt example syntax would suggest also strongly implies spread syntax works positions nt suggestion adopting special template binding adding spread syntax handlebars needs design implementation immediate roadmap would nt totally surprised future replaced something like glimmer component api would go rfc process enabled default ember apps ever want one nice thing custom component manager approach nt canonize next generation api let different designs compete merits via addon ecosystem great suggestion add migration guide list show existing patterns approach solving problem new api address case specifically since brought usually people use hook initialization component state based passed arguments practice means fair bit unnecessary hooks eg initialize values never end getting used course people end shocking things hooks rendering hot path alternative switch pushbased initialization pullbased initialization example wanted computation generate initialize value component property would instead use tracked computed property ensures work done values actually get used example instead js import component embercomponent import computed emberobject export default componentextend didreceiveattrs thisset firstname thisattrsfirstname tobias thisset lastname thisattrslastname bieniek fullname computed firstname lastname function return js import component tracked glimmercomponent export default class extends component tracked get firstname return thisargsfirstname tobias tracked get lastname return thisargslastname bieniek tracked get fullname return admit skeptical first wycats persuaded experience building big glimmerjs app last year never ran use case could nt modeled moreefficient computed properties", "d": "2/2018"}, {"body": "tomdale agree nt necessary things sometimes saved needing write observer one attributes passed parent example wanted kick ajax request one attributes changed hate add kind side effect getter", "d": "2/2018"}, {"body": "yep thinking similar use cases one example animation say want kick animation changes different one direction would work glimmer components", "d": "2/2018"}, {"body": "ah okay system working performance foot guns performed synchronous anything side effects like animations network requests scheduled async hooks like", "d": "2/2018"}, {"body": "nt seem fit well example case seems trigger component rerendered correct nt actually use property rendering component would nt rerender changing argument would never called", "d": "2/2018"}, {"body": "also throws hard error glimmer set anything cause rerender", "d": "2/2018"}, {"body": "might misconception around called hook invoked tracked property used template passed argument changes see example parent component passes argument child component gets hook called even never used argument moving goalposts example kicking ajax request response argument change would cause error thrown happened want synchronously set property time able model behavior lazy getters need set property asynchronously ajax example wo nt trigger error happen different event loop", "d": "2/2018"}, {"body": "alright seems good enough nt want expand specific thing anyway wanted highlight thorough migration guides needed", "d": "2/2018"}, {"body": "thank detailed write start digging first via failing test cases back burner meantime revert back burner update ensure let door issue", "d": "2/2018"}, {"body": "copied writeup tracking upstream fix", "d": "2/2018"}, {"body": "rwjblue cibernox thoughts", "d": "2/2018"}, {"body": "see pr", "d": "2/2018"}, {"body": "rwjblue mmun suspected app something break framework eg deferring would surprised found bug something fundamental however app huge addons ca nt reproduce anywhere else brand new ember app nt suffer problem pr tell us app broken looking app addons like find pattern search source find way alert dev broken framework way add warning appropriate docs", "d": "2/2018"}, {"body": "deferring done appear global forgetting call would seem break observers application wide ways defer", "d": "2/2018"}, {"body": "guess unbalanced call add logging around variable incremented decremented thing identify gets unbalanced dig things wrong", "d": "2/2018"}, {"body": "bryancrotaz right put logging statements eg put conditional breakpoint contains", "d": "2/2018"}, {"body": "also able put debugger look callstack see requesting deferral", "d": "2/2018"}, {"body": "always write", "d": "2/2018"}, {"body": "saying app throwing errors would definitely assume related addressed likely related", "d": "2/2018"}, {"body": "bryancrotaz conceptually yes nt use functions private using tryfinally hmm unfortunately looks like accidentally marked private", "d": "2/2018"}, {"body": "looks like code using example emberdata", "d": "2/2018"}, {"body": "documentation beginpropertychanges nt jibe private method begins grouping property changes use method group property changes notifications sent changes finished plan make large number changes object one time call method beginning changes begin deferring change notifications done making changes call endpropertychanges deliver deferred change notifications end deferring perhaps documentation point devs public method", "d": "2/2018"}, {"body": "probably also include changeproperties", "d": "2/2018"}, {"body": "changeproperties needs promise aware code setup authenticator authenticatedcontent trigger trigger boolean trigger amp amp thisget isauthenticated thisbeginpropertychanges thissetproperties isauthenticated true authenticator set thiscontent authenticated authenticatedcontent thisbindtoauthenticatorevents going cause problems deferral global overlapping promises could mean deferral count never goes zero fact could explain symptoms", "d": "2/2018"}, {"body": "bryancrotaz seems fine update docs however major part programming model nt belong guides", "d": "2/2018"}, {"body": "mmun nt sit alongside make multiple changes without triggering lots redraws", "d": "2/2018"}, {"body": "bryancrotaz nope redraws scheduled run loop redraw amount without deferred observers", "d": "2/2018"}, {"body": "ok fewer computed property calculations tldr efficiency", "d": "2/2018"}, {"body": "even", "d": "2/2018"}, {"body": "beginpropertieschange etc runloop magic us", "d": "2/2018"}, {"body": "bryancrotaz anyways absolutely nt need made promiseaware seeing embersimpleauth invalid usage private api", "d": "2/2018"}, {"body": "begin end need embersimpleauth providing value", "d": "2/2018"}, {"body": "generally speaking simple auth example using finally end property changes", "d": "2/2018"}, {"body": "begin end need embersimpleauth providing value dunno dig added personally started used begin end propertychanges suspect digging issue tracker shed light edge case satisfies", "d": "2/2018"}, {"body": "bryancrotaz nt code also years old may factor p", "d": "2/2018"}, {"body": "api surface used public perhaps", "d": "2/2018"}, {"body": "almost surely public least unmarked time", "d": "2/2018"}, {"body": "ok dig experiment submit docs prs worked issue submit prs addons", "d": "2/2018"}, {"body": "bryancrotaz regarding actually ensures key object changes multiple times single observer call occurs finished calling callback", "d": "2/2018"}, {"body": "indeed problem unbalanced beginendpropertieschange private api one using would right add deprecation recommendation use instead", "d": "2/2018"}, {"body": "bryancrotaz awesome unbalancing seems ok deprecate think rwjblue worried introducing extra churn intend make observers async case deferral functions nooped deprecate observers entirely", "d": "2/2018"}, {"body": "agreed think changeproperrties reasonable replacement scenarios furthermore think introduce churn also intend significantly change internals observer system work underway much better picture best direction ultimately type issue actually pretty uncommon sorry ran bryancrotaz", "d": "2/2018"}, {"body": "end similar mechanism new design please try make global return handle passed would much easier debug looking misuse especially defer counter global though pig implement", "d": "2/2018"}, {"body": "strongly agree", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "module", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "fwiw ultimately glimmervm issue", "d": "2/2018"}, {"body": "still needs release update right", "d": "2/2018"}, {"body": "yes close intentionally", "d": "2/2018"}, {"body": "fixed", "d": "2/2018"}, {"body": "generally reserve issue tracker bugs ember seems like qa x type thing better served stack overflow slack going close please cross link post update thread answer find future searchers", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "service yes function actually merely copypaste code also function", "d": "2/2018"}, {"body": "paste whole error message including details properties involved", "d": "2/2018"}, {"body": "descriptorget get descriptor case encountered error thirdparty code nt control information help us improve error message telling us happened situation error assertion failed attempted access property since ember usually fine longer need use access computed properties however case object question special kind ember object proxy therefore still necessary use case encountered error thirdparty code nt control information help us improve error message telling us happened situation new embererror assert objectget isdescriptortrap get classget trycatcher invokecallback publish concerning involved properties hard say error thrown access prototypes service aftermodel hook route make app crash code service helps btw thanks kategengler addon import camelize emberstring import keys emberpolyfills import emberobject emberobject import service emberservice export default serviceextend flags emberobjectcreate setup flags var normalizedflags var flag flags flagshasownproperty flag normalizedflags thisnormalizeflag flag flags flag thisset flags emberobjectcreate normalizedflags showall return thisget flags getproperties keys thisget flags enable flag var normalizedflag thisnormalizeflag flag thisget flags set normalizedflag true thisnotifypropertychange normalizedflag enableall keys thisget flags foreach function flag thisenable flag disable flag var normalizedflag thisnormalizeflag flag thisget flags set normalizedflag false thisnotifypropertychange normalizedflag disableall keys thisget flags foreach function flag thisdisable flag unknownproperty key return thisenabled key enabled flag var normalizedflag thisnormalizeflag flag return thisget flags get normalizedflag normalizeflag flag return camelize flag", "d": "2/2018"}, {"body": "case proxy always returns value either true false afaict always trigger proxy assertion accessing properties properties proxy", "d": "2/2018"}, {"body": "submitted fix", "d": "2/2018"}, {"body": "thanks lot rwjblue heart", "d": "2/2018"}, {"body": "condition system router part rfc looks like able compare without default values maybe intelligent different way nt know enough router triage wihtout help maybe rwjblue locks help us bit", "d": "2/2018"}, {"body": "forked repo", "d": "2/2018"}, {"body": "seems related cc mixonic", "d": "2/2018"}, {"body": "fixed issue dserrors unknownproperty returned null instead undefined proxy assertion allows undefined", "d": "2/2018"}, {"body": "noticing thing ember models example variables renamed protect innocent persistedthings computed things eachisnew function let things thisget things toarray code nt running saving new thing nt even run reloading parent model hasmany another model code run first createrecord called also gets run thing deleted maybe equal check returning wrong value hasmany arrays updated save case", "d": "2/2018"}, {"body": "issue workaround set relationship calling", "d": "2/2018"}, {"body": "thanks original issue already fixed could still use sort deprecation warning", "d": "2/2018"}, {"body": "thanks reporting seems weird rsvp removed cast released minor version bump even though clearly breaking change cc stefanpenner", "d": "2/2018"}, {"body": "submitted bring back", "d": "2/2018"}, {"body": "awesome thank reproduction", "d": "2/2018"}, {"body": "forked repo investigating since two changes related input type one ember one glimmer", "d": "2/2018"}, {"body": "seems bizarre indeed", "d": "2/2018"}, {"body": "let write findings far quite strange background neither component helper referred macro closer explanation work like lowlevel helper case important understand code input look like anything familiar users ember requires template compiler plugin transforms inputtype internal helpers basically checks given parameters returns name component based checking bug first thing noticed error console rendering working past first breaking input looking deeply changing order types would keep result first input would rendered also input inside component required add three inputs directly would work invalidates theory problem handled moreover add input failing component work happening checking devtools execution input macro saw params different length first execution rest rest missing first param one added compiler plugin summary problem input macro handling type problem params passed input macro fails directly", "d": "2/2018"}, {"body": "thanks fix", "d": "2/2018"}, {"body": "sure typo positional parameters named arguments strings never get passed", "d": "2/2018"}, {"body": "somewhat surprised nt result build time error imho", "d": "2/2018"}, {"body": "ah interesting typo updated", "d": "2/2018"}, {"body": "thing observing replaces first argument seems like expected though bizarre behavior", "d": "2/2018"}, {"body": "huh thanks explanation wish work like standard helpers realize would need discussion something parsing error invalid usage helpers would nice concrete create separate issue track progress look help", "d": "2/2018"}, {"body": "expected behaviour oneway binding given changing external value internal one overwritten looking local writes shadow external attributes need internal variable like comes still external value would nt overwritten", "d": "2/2018"}, {"body": "closing", "d": "2/2018"}, {"body": "serabe understand described internally expected behaviour please look reproduction demo especially example explain theory oneway binding two properties oneway binding changing external value well got updated correctly compare example difference two oneway binding props vs one oneway one twoway expect oneway binding props behave equally actually btw open console see logging play example bound value actually changed however got updated rendered dom issue nt questioning oneway binding works internally reveals inconsistency twoway oneway mixed together", "d": "2/2018"}, {"body": "nt really happening given change external state component rerendering shadowing works long external state change see twiddle component lifecicle update part logged", "d": "2/2018"}, {"body": "observing life cycles examples finally understand whats going hood thank much patience clearer explanation makes us feels warm ember community also give us confident use ember", "d": "2/2018"}, {"body": "locally last weekend currently two passing references emberlogger guides could probably go pull request without rfc draft entry deprecation guide written final details depend release timing also coded change emberdebug use emberlogger coded deprecation although think may need go back wrap feature flag reworked tests intercepted emberlogger intercept console instead maybe four router tests never set back exit calling run transition two concerns little existing tests passing due issue router tests need verify whether test leakage browser console identical change get busy elsewhere week hoping deprecation completed feature flag weekend rfc exits fcp sure comprehensive way review api docs besides bulk searches source anyway think done right things code comments properly mark deprecation idea build api docs see final effect leaves codemod review addons need little help", "d": "2/2018"}, {"body": "far following prs couple logger references merged closed already deprecation code one reference logger merged closed already corresponding deprecation page corresponding deprecation page", "d": "2/2018"}, {"body": "encountered couple unexpected speedbumps using console edge simple page attachment used easily observe console uses pose problem easy workarounds try edge without developer tools try browsers tryconsolezip", "d": "2/2018"}, {"body": "uhoh realized walking emberobserver emberresolver list many projects", "d": "2/2018"}, {"body": "lupestro sure understand", "d": "2/2018"}, {"body": "wake discussion locks issue emberresolver", "d": "2/2018"}, {"body": "running yarn results c yarn install yarn install validating packagejson resolving packages fetching packages info fsevents platform incompatible module info fsevents optional dependency failed compatibility check excluding installation linking dependencies warning gt eslintconfigsimplabs unmet peer dependency eslint gt warning gt eslintpluginmocha unmet peer dependency eslint warning gt sinonchai unmet peer dependency sinon building fresh packages success saved lockfile done seemed complaining eslint installed decided address eslint warnings installing eslint used one bc good reputation top addins readmemd file says install thus ember install emberclieslint project installing asked wanted overwrite two files embersimpleauth said yes think said program still runs albeit error show bottom post keep reading tried reinstall emberdecoratorsbabeltransforms seemed install ok c ember install emberdecoratorsbabeltransforms deprecation addon trying access projectnodemodulespath reliable way discover npm modules instead consider require resolve sync something basedir projectroot accessed new npmdependencyversionchecker c yarn installed emberdecoratorsbabeltransforms installed addon package question work correctly show auth app answer couple glitches yes c ember deprecation addon trying access projectnodemodulespath reliable way discover npm modules instead consider require resolve sync something basedir projectroot accessed new npmdependencyversionchecker c warning emberdecorators used emberpopper installed emberdecoratorsbabeltransforms extracted separate addon see instructions installation notice still complaining emberdecorators wait c error aftereach defined noundef problem error warnings c error aftereach defined noundef problem error warnings c error aftereach defined noundef problem error warnings build successful serving app served fastboot author note shows auth demo despite errors hurrah follows trying app able login view protected page logout protected page redirected login page expected ok get ms get emberclilivereloadjs ms avg get assetsdummycss ms get assetsdummyjs ms ms get assetsvendorcss ms ms get assetsvendorjs ms ms get faviconico ms ms post token ms get ms get posts ms get ms post revoke ms ok get ms get emberclilivereloadjs ms get assetsvendorcss ms get assetsdummycss ms get assetsdummyjs ms get assetsvendorjs ms post token ms get posts ms get ms get posts ms get posts ms get posts ms post revoke ms ok get ms get emberclilivereloadjs ms get assetsvendorcss ms get assetsdummycss ms get assetsvendorjs ms get assetsdummyjs ms post token ms get posts ms get ms get posts ms get posts ms post revoke ms ok get ms get emberclilivereloadjs ms get assetsvendorcss ms get assetsdummycss ms get assetsdummyjs ms get assetsvendorjs ms", "d": "2/2018"}, {"body": "ps conclusions test shortly download embersimpleauto demo app run yarn yet install eslint perhaps cause warnings saw occur bc eslint present run yarn run yarn point install asked want overwrite two files auth code two files eslint suggest either compare files andor choose overwrite two files seem specific auth testing", "d": "2/2018"}, {"body": "please provide reproduction absolutely possible maybe error specific test question", "d": "2/2018"}, {"body": "code js export function initialize appinstance let loggerservice appinstancelookup service logger return loggerserviceget enabled export default initialize test js import application emberapplication import run emberrunloop import initialize dummyinstanceinitializersmyinit import module test qunit import destroyapp helpersdestroyapp import emberobject emberobject module unit instance initializer init beforeeach run gt thisapplication applicationcreate thisappinstance thisapplicationbuildinstance aftereach run thisappinstance destroy destroyapp thisapplication test return true function assert thisappinstanceregister service logger emberobjectextend enabled true assertok initialize thisappinstance error happened booted app tests possible mock service first real issue", "d": "2/2018"}, {"body": "yes see need use service register service closing thank", "d": "2/2018"}, {"body": "serabe could try latest ember works perfectly change im still getting error also forgot mention happening addon project", "d": "2/2018"}, {"body": "think related new rfc", "d": "2/2018"}, {"body": "tested bug still present", "d": "2/2018"}, {"body": "hmm set meta property always use weakmap", "d": "2/2018"}, {"body": "exactly error get ie see error refresh error dutch ie error believe english translation error shown nt use object freeze test something", "d": "2/2018"}, {"body": "rwjblue fixed ember see ie", "d": "2/2018"}, {"body": "thank testing reporting back", "d": "2/2018"}, {"body": "closed pr merged", "d": "2/2018"}, {"body": "would mind updating demo use may addressed glimmervm update", "d": "2/2018"}, {"body": "hi rwjblue created temporary repo emberjs installed bug still present", "d": "2/2018"}, {"body": "thank sorry delays try carve time dig least figure things going wrong", "d": "2/2018"}, {"body": "good thanks wrote failing test well push next couple minutes", "d": "2/2018"}, {"body": "ran probably issue component trigger component tagless htmlsafe empty string start template component used block includes least one newline", "d": "2/2018"}, {"body": "thank", "d": "2/2018"}, {"body": "skwai reproduce issue please provide one", "d": "2/2018"}, {"body": "skwai ping", "d": "2/2018"}, {"body": "olo main ember app loc dir contextscale", "d": "2/2018"}, {"body": "thank lt", "d": "2/2018"}, {"body": "think close believe folks aware working issue much end", "d": "2/2018"}, {"body": "believe docs wrong would love pr fixing", "d": "2/2018"}, {"body": "seems fixed", "d": "2/2018"}, {"body": "closing seems gone stale happy reopen still issue", "d": "2/2018"}, {"body": "whoops sorry", "d": "2/2018"}, {"body": "closing fix current lts", "d": "2/2018"}, {"body": "gon na assume safe close", "d": "2/2018"}, {"body": "gschulze seeing", "d": "2/2018"}, {"body": "documentation updated reflect array proxy special behavior", "d": "2/2018"}, {"body": "think likely add functionality embercopy ways address issue eg buffered proxy likely serve better long run thank pushing forward going close mostly wontfix", "d": "2/2018"}, {"body": "glimmer using directly longer issue", "d": "2/2018"}, {"body": "enumerable events removed still around add deprecation separately", "d": "2/2018"}, {"body": "initial post hooks mentioned pretty extreme example illustrates problem besides init didinitattrs didreceiveattrs willinsertelement willrender also happens synchronously rendering process additionally backtracking often issue arising behavior twoway bound properties hooks working like charm hooks fail error", "d": "2/2018"}, {"body": "fixed", "d": "2/2018"}, {"body": "closing issue clear error ember please chime like us reopen issue", "d": "2/2018"}, {"body": "closed", "d": "2/2018"}, {"body": "locks link pr incorrect reverted pr introduced another issue perhaps issue fixed another pr perhaps issue still open", "d": "2/2018"}, {"body": "oops someone posted triage channel reopening", "d": "2/2018"}, {"body": "still bug ember fixes horizon", "d": "2/2018"}, {"body": "hi facing issue ember method nt trigger hook kindly assist get", "d": "2/2018"}, {"body": "rwjblue would copying docs router microlib repo embersource acceptable way get documented", "d": "2/2018"}, {"body": "ya want make sure understand disappeared begin first suspect gone due refactors eg path changes micro lib perhaps yuidoc config needs updated match new paths", "d": "2/2018"}, {"body": "rwjblue yes probably suggested would nt happen", "d": "2/2018"}, {"body": "rwjblue maybe removed class marked private something weed classes", "d": "2/2018"}, {"body": "since private would improvement declare documented transition methods interface ember documentation mark parameter interface instead fact parameter instance private class routerjs feels like realm intimate api", "d": "2/2018"}, {"body": "fullsailor good way create interfaces ember docs", "d": "2/2018"}, {"body": "wycats limited knowledge scanning ember docs examples interface ember though least one similar bit api marked private methods documented guides therefore actually public like saying one objects allowed call methods nt go instantiate redefine transition public class private constructor though speculating marked private removed docs first place", "d": "2/2018"}, {"body": "fullsailor wycats transition marked private still docs would click privatedeprecated checkbox think happened change configuration like rwjblue said wacky things get documented first place nt want docs imported think copy transition docs wo nt happen", "d": "2/2018"}, {"body": "encountered well surprised learn nt implement reasonable default two proxy objects class content considered equal imo", "d": "2/2018"}, {"body": "modelfactoryinjections removed", "d": "2/2018"}, {"body": "emberjs might think property changed fact might say bound normal javascript array change field somewhere within able say trust ember changed update", "d": "2/2018"}, {"title": "widthheight css set hook causes forced reflows", "body": "description started invoking test time instead necessary case causes series calls cause forced reflow chrome terminology performance tool updating widthheight avoid computing unless necessary fixes locally makes code bit uglier lt isborderbox jquerycss elem boxsizing false styles borderbox lt isborderbox lt isborderbox amp amp supportscrollboxsize stylesposition however far unable reproduce jsbin must another condition understanding specific position type element parent element example series angularjs causes jquery cause link test case todo", "num": "3991", "d": "2/2018"}, {"title": "keyup event alt key working properly", "body": "used work nt windows firefox quantum edge chrome works try press keys press nt release keep pressing releasing want stop release usually release releasing time like windows right nothing happens upon releasing able capture moment key released way capture release pressing release first fiddle test", "num": "3989", "d": "2/2018"}, {"title": "height return edge elements table", "body": "description jquery version browser edge sample code html actual bug height return expected height return proper valaue jquery chrome ff link test case note use edge", "num": "3988", "d": "2/2018"}, {"title": "jquery issue autocomplete", "body": "hi working mvc project come across situation use textbox autocomplete feature included ajax call retrieve data database used following jquery scripts requirement everything seems fine writing code intellisense automatically shows autocomplete feature visual studio executing facing exception states autocomplete function additional information placed scripts layout page tried placing views well facing issue placed scripts order mentioned swapped scripts fix nothing worked case browsers please help fix issue thanks advance", "num": "3987", "d": "2/2018"}, {"title": "nt fill jquerycssprops mapping nt needed", "body": "working tests failed indicating using still somewhat insidious way time someone accesses css property populating properties like makes hard migrate warn since anything end fault external code wo nt land warning leave open change logic populate needs actually change property name", "num": "3986", "d": "2/2018"}, {"title": "jquery function position returning wrong values properties left top", "body": "hi scenario got aware following issue much complex post moreover company property extent highly reduced example reproduce least jquery function position returns different values properties left top version html document ready function var id alert idposition top idposition top idposition left idposition left tablecell borderwidth borderstyle solid bordercolor padding cell cell tested jquery versions except get result idposition top idposition left exclusively jquery get idposition top idposition left divergences still much bigger business code values fall zero container lands longer actually belongs tell css property relation plays central role jquery version although find note seen amp fixed bug version bye mf", "num": "3984", "d": "2/2018"}, {"title": "feature support colon character event namespaces", "body": "description issue unbind event created component colon character id colon character used separator jsf api event bind like function unbing event issue appear function line regex pattern failed test expression escape character change line escaping character seem works chrome debugger expect happen event must unbind actually happens event unbind browsers affected browsers link test case", "num": "3983", "d": "2/2018"}, {"title": "outerheight true handle negative margins properly starting release", "body": "hello outerheight true handle negative margins properly starting release working fine", "num": "3982", "d": "2/2018"}, {"title": "element lifecycle new event afterloaded beforeunloaded dom elements", "body": "description far option react removal element also react elements added something like lifecycle dom elements would great mutation observer could come handy maybe example javascriptts create couple elements like point added dom would come really handy could react give element properties impossible assign loaded dom example calculate elements width could nt right creation element javascript since dom yet furthermore would powerful think following many use cases would come handy let know nt make sense think would great would start building concept", "num": "3981", "d": "2/2018"}, {"title": "svg data uri breaks jquery", "body": "description following code breaks data uri jquery src uri breaks data imagesvgxml link test case", "num": "3980", "d": "2/2018"}, {"title": "jquery nodejs ca nt used dependency", "body": "status jquery nodejs environment one modules nodejs project imports jquery plugin requires jquery dependency try initialize get error thus plugin ca nt attach turns jquery ca nt properly initialize without object returns ca nt initialize manually passing object substitute executed plugin code ca nt modify stackoverflow question overwhelmingly large number recent answers suppose many people recently encountered similar problem thank boris", "num": "3979", "d": "2/2018"}, {"title": "expose keyboardeventcode jquery event", "body": "background keyboard events introduce new properties latter especially useful normalizes keyboard layouts eg dvorak different locales description register keydown event listener using addeventlistener event code property present however thing using jquery code property absent presumably removed key property curiously present documentaddeventlistener keydown function e consolelog etype ecode ekey ekeycode document keydown function e consolelog jquery etype ecode ekey ekeycode results jquery keydown undefined arrowright keydown arrowright arrowright link test case see ie implemented older spec use left right versus arrowleft arrowright arrowup arrowdown may differences still consider abstraction library would love could help pull ie hill", "num": "3978", "d": "2/2018"}, {"title": "jquery vs change behavior appending rows table", "body": "following code append appendto body results slightly different dom structures get get one tbody one causes problems later selectors like id tbody tr get body rows header rows reviewed jquery core upgrade guide ca nt see anything might related question expected behaviour bug jquery stackoverflow question forum question", "num": "3976", "d": "2/2018"}, {"title": "synchronous xmlhttprequest warn jqueryfnload jqueryhtml jqueryparsehtml", "body": "version tested dev description try load external document like indexhtml loading container load contenthtml contenthtml javascript foo bar get warning trackback load scripts link test case deprecationsynchronousxmlhttprequestzip", "num": "3975", "d": "2/2018"}, {"title": "ajax response empty body runs error function instead success function", "body": "given following ajax request encountered returning empty body rest api seems like legitimate scenario appears body treated error case since json process given errorthrown also occurs xml however perhaps case root element actually valid jsonxml parsing held case current workarounds return empty object rest api success block hit expected change datatype expected text automatic parsing done manually handle body empty using pattern error situations thus handled error function", "num": "3973", "d": "2/2018"}, {"title": "edge fails manipulation tests", "body": "fail manipulation html script type module expected assertions run jan fail jan fail jan last pass last pass manipulation html script type module evaluated module evaluated inner module evaluated module src evaluated inner module src", "num": "3971", "d": "2/2018"}, {"title": "working correctly radio buttons", "body": "listening changes radio buttons seems fully working expect event triggered also radio gets unchecked event listener works pretty fine checkboxes user click uncheck reason radio buttons works differently user selects radio button afterwards selects radio button b part group event triggered try code never able log unchecked console edit tested firefox chrome mac os option option option option function change function let prop id let checked prop checked checked unchecked consolelog checked", "num": "3970", "d": "2/2018"}, {"title": "getscript requires unsafeinline csp rule", "body": "jquery able load scripts via without causing csp violations look following test case indexhtml html consolelog start btnjquery click function getscript payloadjs btnscripttag click function let scriptel documentcreateelement script scriptelonload function consolelog onload arguments scriptelonerror function consolelog onerror arguments scriptelsrc payloadjs documentheadappendchild scriptel payloadjs click button following error shown browser console chrome case refused execute inline script violates following content security policy directive scriptsrc self either unsafeinline keyword hash nonce nonce required enable inline execution hand click button script loaded without issues text shown console note reporting issue thirdparty libraries use consider jquery issue rightly wo nt fix expect fix jquery example see issue security considerations using constructs require generally recommended security community considers bad practice mozilla mdn states following disallowing inline styles inline scripts one biggest security wins csp provides google recommends web fundamentals guide must inline script style enable adding unsafeinline allowed source scriptsrc stylesrc directive also use nonce hash see really nt banning inline script biggest security win csp provides banning inline style likewise hardens application enable adding unsafeeval allowed source scriptsrc directive strongly discourage hope consider changing current behavior sake safer web taking account widespread library", "num": "3969", "d": "2/2018"}, {"title": "jqueryeach generating bug string parameter", "body": "jquery version description jqueryeach generating bug string parameter reproduce var jeach function jqueryeach function consolelog jeach null jeach jeach jeach string", "num": "3966", "d": "2/2018"}, {"title": "faster dom element creation", "body": "description understanding use either create new attributes set use would expect bit faster either currently valid approaches reason latter approach supported look code see reason could supported looks like would minimal code size impact maybe missing something thanks link test case", "num": "3965", "d": "2/2018"}, {"title": "outerwidth svg yields nanpx previously yielded number", "body": "description yields expected number prior versions eg yielded number issue reproduces osbrowser combo tried mac chrome firefox safari windows edge firefox chrome link test case yields yields number", "num": "3964", "d": "2/2018"}, {"title": "feature adding key code filter directly keyboard events", "body": "cases whenever keyboard events like used devs write single inside handlers work inside often seen idea would really helpful nicer write would optional parameter events could single integer array integers representing used filter event trigger example could look somehow like example key codes js input keyup function eventwhich eventwhich eventwhich something input keyup function something would produce way less code write often used easy understand would compatible current api wrong", "num": "3963", "d": "2/2018"}, {"title": "closest unrelated work", "body": "code closest runs loop iteration checks array length always hidden reason js closest function selectors context var cur l thislength matched targets typeof selectors string amp amp jquery selectors", "num": "3960", "d": "2/2018"}, {"title": "css relative modifiers work expected", "body": "description calling css using relative syntax twice row second call ignored different behaviour using normal absolute notation observed safari ios safari chrome jquery jquery slim link test case", "num": "3959", "d": "2/2018"}, {"body": "thanks opening issue checked weekly meeting people check ff edge ff checked mac windows worked us check browser extensions global keyboard shortcuts nt interfering nt think anything", "d": "2/2018"}, {"body": "apparently shortcuts use see adblock plus installed remove browser issue persist try press keep way press release release message combitation stop fiddle doe nt show", "d": "2/2018"}, {"body": "problem occur jquery page led conclude jquery cause", "d": "2/2018"}, {"body": "mcanepa followed directions message shows even nt jquery might able anything browser send events", "d": "2/2018"}, {"body": "dmethvin right issue persist even jquery involved timmywil nt know see message nt coworker exact behaviour maybe report ff sorry bad issue report", "d": "2/2018"}, {"body": "even edge dev tools report even though highlights correct area quote sure standards require case like report edge bug might get fixed soon wo nt help ie", "d": "2/2018"}, {"body": "hate say nt know anything old code used getboundingclientrect wrong cf microsoft user agents giving us information go best bet probably sub use gbcr using jquerycsshooks really need", "d": "2/2018"}, {"body": "closing based analysis anyone time probably worth opening ticket edge", "d": "2/2018"}, {"body": "stackoverflow thing bug report", "d": "2/2018"}, {"body": "fixing messier like unit test making pretty crazy assertions certain aliasing one standard css property another intended use case thought even need mapping vendorspecific properties point", "d": "2/2018"}, {"body": "dmethvin unit test checking mapping would nt expect anyone real life aliasing need mapping cache vendor prefixed values still used browsers although really new apis lots prefixed properties ie think useful handle users could introduce another internal object would consulted match write vendorprop resolved values separate object would influence size slightly negatively hopefully much another solution iirc migrate used differentiate user calls amp jquery internal ones setting certain flag beginning method uses deprecated thing resetting end nt remember would nt something like work", "d": "2/2018"}, {"body": "thanks opening issue prefer see reduced test cases rather whole applications worries seen bug fix match native behavior spec defines offsetparent closest element nonstatic position table td th element case table native offsetparent issue track update docs else fails get offset ancestor desire offset td element subtract eg", "d": "2/2018"}, {"body": "thanks report id element nt matter issue caused namespace working well special chars see test case problem lies line constructs regexp namespaces without escaping special characters nt sure support nonalphanumeric namespaces docs nt mention restrictions unfortunately generic regexp escape function", "d": "2/2018"}, {"body": "discussions rejected proposal", "d": "2/2018"}, {"body": "see would still prefer keep namespaces alphanumeric rather allowing anything period space already meanings", "d": "2/2018"}, {"body": "per meeting keep namespaces strictly alphanumeric document strip colon character selector constructing namespaces well", "d": "2/2018"}, {"body": "problem seems nt affected negative margins able account", "d": "2/2018"}, {"body": "best way would use mutation observers modeling events nt really work mutation notifications batched asynchronous actual insertremove operation used nonstandard mutation events browsers describing horrible performance drag specifically synchronous peraction", "d": "2/2018"}, {"body": "ahh okay thanks use could achieve described without events mutation observer", "d": "2/2018"}, {"body": "probably exactly described code unrelated caller wants catch something inserted document mess opposed modifying soon inserted would need synchronous interface think design needs good design welcome experiment", "d": "2/2018"}, {"body": "attribute chars example seems work identically bare dom one reason jquery changes html sees nested new tag tries change per documentation disable modify changing method seems easier correct change string", "d": "2/2018"}, {"body": "using plugin code snippets shown please provide complete test case asked issue template", "d": "2/2018"}, {"body": "dmethvin minimal complete isolated test case reproduce issue sample jquery plugin try execute nodejs umd wrapper tries require jquery jquery initialization fails due absence object nodejs js function global factory umd wrapper around plugin typeof define function amp amp defineamd define jquery factory else typeof exports undefined factory require jquery else var mod exports factory globaljquery function jquery use strict var interoprequiredefault jquery interop assume function interoprequiredefault obj return obj amp amp objesmodule obj default obj var typeof typeof symbol function amp amp typeof symboliterator symbol function obj return typeof obj function obj return obj amp amp typeof symbol function amp amp objconstructor symbol amp amp obj symbolprototype symbol typeof obj function classcallcheck instance constructor instance instanceof constructor throw new typeerror call class function var testjqueryplugin function code plugin consolelog require jquery tostring try importing jquery printing results run naturally get function w wdocument throw new error jquery requires window document return factory w fn testjqueryplugin testjqueryplugin typeerror set property testjqueryplugin undefined object modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerunmain", "d": "2/2018"}, {"body": "sure got code also seems like sure based assume comment problem begins looks like assuming babel compilation run able step code see fails command print url explains attach debugger", "d": "2/2018"}, {"body": "dmethvin hi dave thank link node debugger code babel umd preset generates debugger get error jquery fails initialize lack window object node inspectbrk testjqueryjs debugger listening ws help see debugger attached function w wdocument throw new error jquery requires window document return factory w fn testjqueryplugin testjqueryplugin typeerror set property testjqueryplugin undefined slightly modified running handle variable instead browser environments js function global factory typeof define function amp amp defineamd define jquery factory else typeof exports undefined factory require jquery else var mod exports factory globaljquery globalmetismenu modexports function jquery use strict var interoprequiredefault jquery function interoprequiredefault obj return obj amp amp objesmodule obj default obj var typeof typeof symbol function amp amp typeof symboliterator symbol function obj return typeof obj function obj return obj amp amp typeof symbol function amp amp objconstructor symbol amp amp obj symbolprototype symbol typeof obj function classcallcheck instance constructor instance instanceof constructor throw new typeerror call class function var testjqueryplugin function consolelog require jquery tostring", "d": "2/2018"}, {"body": "think safe say point debugging something issue jquery would agree plumbing around javascript pain get right many cases commonjs native es modules babel webpack loading amd script tags sympathy time help remotely debug stackoverflow probably good place ask provide complete example including build steps required", "d": "2/2018"}, {"body": "dmethvin dave solved practical issues nt need jquery nodejs please take note jquery fails initialize nodejs take note people run problem stackoverflow jquery ca nt used nodejs side dependency explicitly initialize pass upon initialization thank time efforts maintain jquery sympathy", "d": "2/2018"}, {"body": "yep definitely need mentioned original issue part missed executed plugin code ca nt modify would probably true using babel turn es module declarations cjs requires would need require", "d": "2/2018"}, {"body": "agreed thinking typo char key nt even see listed anywhere specs jbedard know around since jquery recent know specs changed several times years keycodecharcode keychar problem trying normalize names especially bloating put comprehensive mapping like jquery every person ever used jquery needed might make sense people need one two keys also mention get property raw properties", "d": "2/2018"}, {"body": "nt think jquery ever supported default standard property add list", "d": "2/2018"}, {"body": "appreciate feedback understand bloat argument use regex make arrow bit optional use multiple case statements satisfy implementations slightly odd abstraction library abstract away differences hopefully prioritize standards compliance lost bet step getting code back event object cheers feb dave methvin notifications githubcom wrote agreed thinking typo char key code nt even see char listed anywhere specs jbedard know around since jquery recent know specs changed several times years keycodecharcode keychar problem trying normalize names especially bloating put comprehensive mapping like jquery every person ever used jquery needed might make sense people need one two keys receiving authored thread reply email directly view github mute thread", "d": "2/2018"}, {"body": "behavior expected included fix failed mention upgrade guide probably fix first included immediately reverted accidental breaking change disrupting milestone tracking", "d": "2/2018"}, {"body": "see problem adds tbody", "d": "2/2018"}, {"body": "jakecigar browser behavior jquery adding", "d": "2/2018"}, {"body": "know browser think jquery lots people use tbody css", "d": "2/2018"}, {"body": "might expected append children either tbody node special ways", "d": "2/2018"}, {"body": "fix failed mention upgrade guide thoughts else might affected breaking change howwhere refile issue upgrade guide gets updated breaking change", "d": "2/2018"}, {"body": "rmacfadyen upgrade guide file ticket pr repo would great jakecigar could propose description would new item manipulation near generally want succinctly describe change propose alternate solution behavior tbody tables always strange browsers multiple tbody elements table makes even stranger already tbody select one insert rows create new one jquery bunch fiddly logic wanted remove person inserting markup knows best go", "d": "2/2018"}, {"body": "want document jquery broken regard tbody tag even native code like gives table jquery code one child table think get rid manipulationtarget match rest behavior jquery", "d": "2/2018"}, {"body": "maybe say sometimes jquery running browsers give tbody times care getting tbody make sure code followed ways make sure get tbody", "d": "2/2018"}, {"body": "dmethvin added issue thanks pointing right spot nt done pr pretty uncertain understand scope breaking change really sure document say either", "d": "2/2018"}, {"body": "jakecigar example invalid specifically valid insert elements siblings elements per spec fortunately jquery prevents creating invalid table adds element sure seeking errors counting elements css adding explicitly much better way go readable prevents confusion sometimes jquery running browsers give tbody times care getting tbody make sure code jquery longer involved autoinsertion agree useful users know browsers automatically insert tbody something useful docs upgrade guide", "d": "2/2018"}, {"body": "timmywil jquery involved manipulationtarget appends tbody user specifically asks append table tbody present could happy completely one way like idea less kind", "d": "2/2018"}, {"body": "jakecigar meant longer insert tbody browser natively help prevent creation invalid tables example actually demonstrates argument rather", "d": "2/2018"}, {"body": "far tell reason nt come across difference code write inject html expect see seems like long problems appending tr table nt done completely agree behavior change mentioned upgrade guide", "d": "2/2018"}, {"body": "request says describes value must returned request empty body valid json", "d": "2/2018"}, {"body": "disagree scenario one two things happen hitting api endpoint post request generates resource server side responds containing proper location header identifying url resource body none necessary post generates error case json object containing error information returned required send back empty object get jquery post process successful request handling error case manually using datatype text doable requires much work handle endpoints potentially return multiple data formats ie xml json", "d": "2/2018"}, {"body": "asked json nt get request failed http status may constraint put request met endpoint consistently return json client expects nt control endpoint sometimes returns json sometimes nt getting data text sniffing type probably best bet", "d": "2/2018"}, {"body": "jhorvathmaxetatech server well behaving always returns data correct may omit option jquery listen server claims returns may eg responses data responses empty bodies server returns empty body json broken rely manual parsing", "d": "2/2018"}, {"body": "edge passes browserstack looks like test flakey", "d": "2/2018"}, {"body": "yeah restarting manually testswarm succeeds well sounds like flake still make less flakey", "d": "2/2018"}, {"body": "thank opening issue however default browser behavior unrelated jquery note bind radio inputs one checked gets change event please refer stackoverflowcom support", "d": "2/2018"}, {"body": "thanks report looks like duplicate closing", "d": "2/2018"}, {"body": "sure linked pr resolves problem similar problem sure opened issue", "d": "2/2018"}, {"body": "yeah nt think avoid problem adding nonce hash discuss whether always inject script tag external files", "d": "2/2018"}, {"body": "would great workaround could add global flag jquery setting enabled jquery would use method every request could disabled default course afais could workaround disabled usage csp", "d": "2/2018"}, {"body": "ideally suggested feature detect support use approach supported possible feature detect though maybe introduce flag enables csp support avoid stuff violates even makes old browsers unusable feature detection ideas welcome", "d": "2/2018"}, {"body": "add milestone sounds like something resolve", "d": "2/2018"}, {"body": "hmm instead detecting support could detect csp enabled similar eg angularjs think", "d": "2/2018"}, {"body": "agreed landing would nice order deal csp issues one release think would better consistent always use script tag regardless csp make exception android work geteval koczkatamas general sworn global flags make difficult large page full plugins written different times different people depend consistent behavior documentation already pretty difficult understand options way interact changing rules retroactively makes worse subtle behavior changes like also difficult jquery migrate detect warn keep mind wo nt help original case linked since using jquery maintained would need update get fix", "d": "2/2018"}, {"body": "dmethvin autodetect support consider superior solution feel free forget global flag idea issue linked opened somebody else using jquery prepared switch latest jquery time especially csp fix lands mgol please note technically tests afaik send warning endpoint configured csp cause unnecessary traffic sure think angular least latest versions solves otherwise use angular nt get errors", "d": "2/2018"}, {"body": "think would better consistent always use script tag regardless csp make exception android work geteval dmethvin android lt would make exception android browsers without uasniffing", "d": "2/2018"}, {"body": "mgol yeah looks like although android sets property function create attribute nt run function maybe script error nt try", "d": "2/2018"}, {"body": "document discussed meeting today support restrictive csp configuration must break currentlyworking strict ordering script evaluation property proper fix probably adopt script elements even samesite content also implement manual serialization similar suggestion leveraging something like relpreload performance issue", "d": "2/2018"}, {"body": "per last meeting workaround set options force script tag may get changed behavior change switching sync async", "d": "2/2018"}, {"body": "strings supported parameters objects arrays may pass parameters documented eg", "d": "2/2018"}, {"body": "thanks quick response know supporting array array objects accident instead using proper parameter array case used string guess nothing instead firing error message thanks", "d": "2/2018"}, {"body": "jquery general nt validate inputs relies correct adding consistent validation would increase library size lot want validation consider using typescript contains jquery type definitions typesjquery package", "d": "2/2018"}, {"body": "case convoluted way call jquery methods plainobject methods set attributes documentation explains actually prefer deprecate makes think would faster speed causing issues code", "d": "2/2018"}, {"body": "thank opening issue however looks like microperformance optimization existing api fast enough yes always make things faster going native lose convenience without actually making difference speed noticeable humans", "d": "2/2018"}, {"body": "hmm interesting svg elements nt gets nan trying calculate scroll gutters fixed adding final adjustment covering svg dimension getters unit tests would like contribute pr alexedgcomb", "d": "2/2018"}, {"body": "appreciate offer pass round thanks", "d": "2/2018"}, {"body": "like give shot could assigned", "d": "2/2018"}, {"body": "github nt allow assign issues people without commit access repo ca nt set feel free take shot pr", "d": "2/2018"}, {"body": "thank opening issue bad idea moving away event aliases promoting closely match native possibly take advantage new event apis think best implemented plugin", "d": "2/2018"}, {"body": "selects closest div paragraphs document incoming set length certainly something", "d": "2/2018"}, {"body": "understood thanks", "d": "2/2018"}, {"body": "extra space makes value invalid use instead", "d": "2/2018"}, {"body": "thanks correction instead ignoring second command ignores first div shrinks instead increasing would make sense dealing absolute values would overwrite previous one would expect adding subtracting would end net increase", "d": "2/2018"}, {"body": "thanks updated reproduction reopening", "d": "2/2018"}, {"body": "behavior caused css transition would say expected target value relative adjustment determined right away set css stretch height adjustments time set height immediately adjust first animation completes makes adjustment relative intermediate value", "d": "2/2018"}, {"body": "ok think get transition property property wo nt change instantly aiming target solve could wait transition finishes set second value although think would make sense operators read target instead current value", "d": "2/2018"}, {"body": "although think would make sense operators read target instead current value api read final value nt really choice", "d": "2/2018"}, {"body": "generally also miss changes big breaking change currently revisitng issue trying fix parts foundationsites still confusing one mentioned code part affects", "d": "2/2018"}, {"body": "also imo deprecation still directly change code part warning console deprecated feature used one step much think never saw solutions introducing deprecations broke production code threw warnings especially comes node modules see different", "d": "2/2018"}, {"body": "time also change code move deprecated apis module excluded custom build deprecation unrelated issue though still need test case", "d": "2/2018"}, {"body": "reproducible testcase try ok test results issue starts method short test yields use contains javascript var length obj amp amp length obj amp amp objlength type totype obj isfunction obj iswindow obj return false results reverting javascript var length obj amp amp length obj amp amp objlength type totype obj type function iswindow obj return false fixes move deprecated apis deprecated module excluded custom build deprecation unrelated issue though still need test case see change module also nt jquerymigrate meant misinterpret mission upgrading libraries jquery lot work breaking changes introduced jquery migrate makes easier restoring apis removed additionally shows warnings browser console development version jquery migrate removed andor deprecated apis used", "d": "2/2018"}, {"body": "cc ncoden guess issue sure another testrunner testframework headless browser testing framework would solution many still use mochajs phantomjs", "d": "2/2018"}, {"body": "thank much finally providing test case issue mochaphantomjs dependency depends upon ancient version phantomjs instead latest version suffers bug nodelist objects functions thus causing iterate objects rather arrays catastrophic results observe proof run following invocations free equivalents root directory mochajquerytest repository nt support ancient versions phantomjs correct fix get dependency updated mochaphantomjs", "d": "2/2018"}, {"body": "understandable see big reason change internal check thing changed commit case documented support phantomjs anymore sure caught like parts jquery fixes phantomjs specific browsers", "d": "2/2018"}, {"body": "point longer sure asking behavior change necessary fix already could know function really nodelist environments fully support listed although could add note describing besteffort support others prs welcome", "d": "2/2018"}, {"body": "issue timmy said complete rewrite using next generation javascript want use modules would make sense remove support browsers nt implement latest web features let continue using jquery way huge amount cruft removed old dated browsers", "d": "2/2018"}, {"body": "thecodingdude still support ie foreseeable future least ie currently ie nt change much ca nt unfortunately", "d": "2/2018"}, {"body": "mean already president removing browsers blog post mentions need support older browsers like internet explorer opera safari use jquery would different right want ie use jquery ie literally supports modern web platform features plan using next generation js like modules supporting mystery starting modern foundation ie would much easier attract pull requests rather working old codebase conceivable reason think support ie capacity version require people use want support idea let go browsers time ie certainly day thoughts", "d": "2/2018"}, {"body": "plan using next generation js like modules supporting mystery use modules development transpile using something like rollup final bundle one js script nt use modules conceivable reason think support ie capacity version require people use want support work latest version jquery releasing version nt support ie would mean users would nt upgrade version would nt get new features amp bug fixes worth basically every library world supports ie way many users browser", "d": "2/2018"}, {"body": "makes sense thanks clarification imagine case would able make builds config want removing code designed could satisfy best worlds", "d": "2/2018"}, {"body": "ie still popular edge desktop marketshare safari ref available microsoft browser windows still supported microsoft really early think dropping support imho back topic think makes sense support last versions ios ios combined less market share ios according", "d": "2/2018"}, {"body": "timmywil thanks explanation future jquery appreciate efforts especially full time jobs terms jquery release thinking end year", "d": "2/2018"}, {"body": "dotnetshadow yep thinking least getting beta end year", "d": "2/2018"}, {"body": "wondering error caused us manually evaling downloaded script cross domain already differently via script tag src attribute set see reason restricted crossdomain", "d": "2/2018"}, {"body": "loooong time think onerror event scripts relatively recent supported everywhere avoid silent failures script errors grabbed source evaled", "d": "2/2018"}, {"body": "dmethvin tested test case nt work ie works ie also works ios support unfortunately also nt work android browser fortunately android browser nt seem support csp perhaps work extend crossdomain way loading scripts modern browsers sure check though android browser satisfies even though unknown attributes value", "d": "2/2018"}, {"body": "hi using jquery version trying implement content security policy webpage getting following error refused execute inline script violates following content security policy directive scriptsrc self error produced line jqueryminjs script file content line function e n var ttr createelement script way around problem without use unsafeinline looking internet desperate solution tried brian suggested avail", "d": "2/2018"}, {"body": "hi aimeekatherine following comments assume dynamically generating script tags issue related could try adding hash script csp although nt something tested dynamically generated script tags tested attributes tag stripped alternatively patched work dynamically generated tags work fine tag generated using jquery nonce possibly hash applied comments nt help example creating script tags test case would help immensely", "d": "2/2018"}, {"body": "code mentioned sergiorighi working direct event binding example indirect event binding like seems working idea indirect event binding", "d": "2/2018"}, {"body": "would need attach event handler delegation seeing elements path class", "d": "2/2018"}, {"body": "dmethvin thank suggestion trying create custom event delegation ca nt really close jquery made plunker demo also post question stackoverflow regarding please give light jquery event delegation thanks advance", "d": "2/2018"}, {"body": "bayucandra stackoverflow right place discussions ticket tracking feature", "d": "2/2018"}, {"body": "oriadam websites deep tree native closest much times faster jquery see gmail example try dev console", "d": "2/2018"}, {"body": "need find closest ancestor nodes short period time would definitely recommend using native method directly would good optimization case like would nt profiler shows actual bottleneck code suspect rarely case", "d": "2/2018"}, {"body": "real problem ie works significantly slower chrome nt support native optimization", "d": "2/2018"}]