[{"title": "viewinitialize called mobile safari ios", "body": "mobile safari method never called instantiating subclasses happening since least nt happen latest release", "num": "1684", "d": "9/2012"}, {"title": "multiple backbone file", "body": "maybe question maybe silly million pages views site possibility create backbone hub backbone childs", "num": "1680", "d": "9/2012"}, {"title": "bind delegate deprecated zepto", "body": "noticed attach events views via events hash safari os x triggers warning eventlayerx eventlayery broken deprecated webkit removed engine near future debugging issue noticed internally uses dependent selector changing lines following solves issue also removes deprecated function calls also line changed call", "num": "1679", "d": "9/2012"}, {"title": "router interface relies javascript implementation defined behaviour", "body": "router takes javascript object containing mappings route patterns handler function names uses mapping select handler given path unfortunetely promises always use first matching entry mapping order undefined javascript specification code depending route precedence quite common backbone tutorial default route many stackoverflow answers search backbone default route promise comments routerbindroutes bind defined routes backbonehistory reverse order routes support behavior general routes defined bottom route map relevant bug report keeping insertion order object", "num": "1678", "d": "9/2012"}, {"title": "xss todos example", "body": "todos example j\u00e9r\u00f4me gravelniquet data escaped therefore possible execute javascript code entering following text reproduced online version would nice example showed handle correctly personally nt know yet best way deal opened stackoverflow question", "num": "1677", "d": "9/2012"}, {"title": "cache event hash selectors", "body": "hi way cache selector within events hash example currently following events hash selector jspickdate already code pass elem events hash instead worry jquery two elementselector lookups one required able cache lookup thanks help give", "num": "1676", "d": "9/2012"}, {"title": "inconsistent handling query strings push state", "body": "run problem backbone nt consistent handling query string routes seems depending whether push state browser hash enabled browser depending whether call navigate vs checkurl get different routes presented urls query strings solution quite simple getfragment needs tack query string thislocationsearch picking current url attaching pull request tests", "num": "1672", "d": "9/2012"}, {"title": "docs ambiguous add event", "body": "according docs catalog events add event triggered collection model added collection add model collection model added collection collectioncreate docs says collections add evetn fired creating model cause immediate add event triggered collection seems latter true set demo test", "num": "1671", "d": "9/2012"}, {"title": "calling thischange nothing", "body": "hello setup reduced test case demonstrate issue validating need manually trigger event using validation succeeds manual trigger nt working look reduced test case follow instructions reproduce issue notice amountchanged method called first enter valid amount nt get called entered invalid amount entered makes sense technically nothing changed error meant value nt set model still value enter another valid amount amountchanged method correctly called need amountchanged method triggered user valid amount invalid amount valid amount step calling nt work else also could nt find much info told something try using method accept string like model initialize method eg could trigger change event specific attribute thanks help give", "num": "1670", "d": "9/2012"}, {"title": "model triggers change event unique values", "body": "hi note model view code set value amount attribute change event model fires relevant change method called reset attribute value event model fires relevant method called change amount attribute back nothing happens change event triggered happens value already set attribute expected behaviour ideas thanks model js define backbone function first parse amount comes string converted number check value nan also check amount entered fits within allowed range isnan amount amount lt min amount gt max errorspush field amount error amount invalid view js define utilstemplatinghogan utilsdatepickerkalendae modelsloanapplication utilsdomgetel backbone function hogan kalendae loanapplication getelement", "num": "1666", "d": "9/2012"}, {"title": "model default attribute changed set", "body": "expected behaviour would assume create new object model class get exact default attributes always something wrong example run using nodejs javascript var backbone require backbone var mymodel backbonemodelextend defaults original data original var new mymodel changed data changed var new mymodel consolelog original ok consolelog data data changed ok", "num": "1665", "d": "9/2012"}, {"title": "change attribute unchanged attribute philosophic", "body": "javascript var new backbonemodel mod mon change mod function model mod consolelog mod changed mprevious mod mod mset mod silent true mset mod mod changed expected behaviour better event triggered unchanged resulting attributes", "num": "1664", "d": "9/2012"}, {"title": "update modelvalidate documentation", "body": "current documentation confusing especially people learning backbone coffeescript docs say since coffeescript methods return value confusing update explicitly indicates types values indicate success would helpful", "num": "1662", "d": "9/2012"}, {"title": "problems understandingusing modelsave", "body": "hi started using backbone thought would take test spin basic login form login form consists username password using backbone hijax form submit event validate fields send data php script currently nothing check whether http request message relevant request type hoping get message back javascript much like would standard ajax request act upon response php code looks like following currently php server requestmethod case get echo get request break javascript using requirejs split separate modules like view file js define modelscustomerlogin backbone function customerlogin model file js define backbone function happening validation working fine validation passes call method firebug console showing post ok jqueryjs line readystate customerloginjs line function setrequestheader customerloginjs line function getallresponseheaders customerloginjs line function getresponseheader customerloginjs line function overridemimetype customerloginjs line function abort customerloginjs line function done customerloginjs line function fail customerloginjs line function progress customerloginjs line function state customerloginjs line function isresolved customerloginjs line function isrejected customerloginjs line function customerloginjs line function always customerloginjs line function pipe customerloginjs line function promise customerloginjs line function success customerloginjs line function error customerloginjs line function complete customerloginjs line function statuscode customerloginjs line post request responsetext customerloginjs line status customerloginjs line ok statustext customerloginjs line looking seems post successful eg response functions displayed sure happening line model error handler look view file see confusing reading documentation nt clear work whether arguments optional seen used multiple different ways js addy osmani backbone book thissave done thisget done also addy osmani backbone book todosave function err err return consolelog created backbone documentation booksave backbone documentation booksave author teddy backbone documentation booksave author fdr error function last backbone documentation example object properties seen version passed attribute associated value left blank would problem allow addy osmani versions calls passes data changed second example different syntax calling attributes handling errors right way confused thanks", "num": "1661", "d": "9/2012"}, {"title": "rest post location header", "body": "creating new item via rest backbonejs expects body containing new model data api utilize different approach sending empty body accompanied location header containing path newly created resource backbonejs take account possibility", "num": "1660", "d": "9/2012"}, {"title": "model children collections", "body": "suppose children collection every zero children basic structure parent would proper way viewtemplate backbonejs building top rails app makes difference think requires recursive template sure thanks", "num": "1659", "d": "9/2012"}, {"title": "discussion bindings backbone", "body": "extracted opened project stickit highly configurable model binding plugin backbone goal stickit wasis conform backbone style fit naturally within backbone core functionality read following github respect backbone community jeremy worldview prizes minimalism uniformity high threshold users wo nt use feature feature feels place wo nt consider model binding popular feature hard envision would fit backbone handsoff approach rendering librariesframeworks plugins failed moving model binding configuration dompresentation layer stickit designed keep configuration place javascript context view controller encapsulates element model thinking drawing pull backbone included model binding implementation like stickit would like get opinions ideas community first thoughts", "num": "1657", "d": "9/2012"}, {"title": "underscore functions collections string attribute parameters working", "body": "hi call something like get object returned models rather object models grouped attributename looking code underscore groupby method calling thought could access model attributes using square brackets nt appear work seen ca nt overload operators javascript unlikely work seen examples suggesting calling methods like groupby pluck string work like another issue nt work either course get round passing function retrieves attribute eg major issue would great able use shortcut string version bug something wrong thanks paul", "num": "1655", "d": "9/2012"}, {"title": "method chainability obvious", "body": "trying chain following methods avail online documentation nt explicitly state method returns well whether chainable", "num": "1654", "d": "9/2012"}, {"title": "fallback rootlocation roothistory window", "body": "backbone called different context fail issue encounter trying use backbone browserify fixed purposes caused failing tests due would ok something like next definition", "num": "1653", "d": "9/2012"}, {"title": "modifying collection iterating need little explanation please", "body": "hello foremost read totally agree jashkenas arguments strange fact nt understand models collection iterate models deleted iterate model deleted last model deleted change destroy save models saved runs fetch understand ca nt delete models ca nt undersand models please tell code works thank fiddle", "num": "1652", "d": "9/2012"}, {"title": "hashtag urls nonpushstate browsers generated route exists", "body": "using etc works fine pages served backbone however pages serverrendered hashtag url causes page break words route exist page say wwwfuncommonkeys skip hashtag load page normally summary push state fallback hashtags works fine single page apps mixing backbone server rendered pages supporting ie currently possible thanks", "num": "1651", "d": "9/2012"}, {"title": "historyupdatehash crossbrowser friendly", "body": "following code called modify windowlocationhash backbone passes stripped fragment without leading hash relies browser add words expects browser behaviour add leading hash hash property stores connections connections two problems far tell behaviour standard far tell checked window object working draft latest doc could find browsers implement behaviour particular blackberry os admittedly great browser add leading hash breaks things routernavigate work expected instance code perhaps changed something along lines locationhash fragment work cross browser alternatively fragment passed update function stripped character", "num": "1649", "d": "9/2012"}, {"title": "possible extend extended view", "body": "common view want extend code javascript var fb backboneviewextend id fbroot setup function id var wp fbextend initialize function ops thissetup opsid something like", "num": "1648", "d": "9/2012"}, {"title": "event triggered model also fired collection", "body": "hallo reproduce js bug feature", "num": "1646", "d": "9/2012"}, {"title": "annotated source code typo", "body": "second paragraph backboneevents includes word ing leading apostrophe missing reads trigger ing wrong place posting issue please forward wherever thanks", "num": "1643", "d": "9/2012"}, {"title": "byid updated saving silent true", "body": "using collectioncreate model silent true collection relies change idattribute event update byid nt get triggered silent true presumably collection use internal event gets triggered irrespective silent flag", "num": "1640", "d": "9/2012"}, {"title": "setelement replace element dom new element", "body": "seems lot confusion dom rendering related templates backbone expecting element creation example question two previous issues currently calling setelement nt change dom el associated backbone view instead could call jquery replacewith element would also cause dom update correctly works well want metadata top level template items change one call setelement renderedtemplate change necessary call big deal highly confuse new users happy issue pull request oneline addition setelement nt sure automatic functionality would desired everyone ca nt think downside perhaps ones performance thoughts", "num": "1639", "d": "9/2012"}, {"title": "resorting collection add event causes duplicate add events fired", "body": "changes collection event change sort order use resort everything unfortunately causes duplicate add events fired understood loop backbonecollection add source array order changes one triggers ends triggering items twice one solution would make copy id list prior triggering allow resorting callback option would iterate saved id hash find index inserted model trigger time would send correct indexes resort", "num": "1638", "d": "9/2012"}, {"title": "allow fallback modelget", "body": "allow fallback modelget would happen attribute undefined null", "num": "1633", "d": "9/2012"}, {"title": "unroute method", "body": "would great would possibility define unroute method clean resources exiting route think would great could return callback function route event would called another route activated", "num": "1632", "d": "9/2012"}, {"title": "viewunbind", "body": "keep reading reference method said able remove events tied view across various sources ca nt find anything official site documenting oversight", "num": "1631", "d": "9/2012"}, {"title": "history root option respected", "body": "backbone code coffeescript class router extends backbonerouter routes entries id showentry showentry id gt alert showing entry id new router backbonehistorystart root richapplication pushstate true two links page one another want backbone router catch first one nothing second since href history root currently backbone catches behaves way intended behavior", "num": "1625", "d": "9/2012"}, {"title": "router query string gets ignored pushstate", "body": "commit appending locationsearch fragment removed backbonehistorygetfragment gets appended pushstate disabled using pushstate routes query string get ignored query string url fragment nt see appending locationsearch fragment backbonehistorygetfragment removed added back", "num": "1624", "d": "9/2012"}, {"title": "documentation inaccurate", "body": "documentation explains generates urls form collectionurl id falling back urlroot id model part collection code however opposite falling back defined documentation amended consistent code", "num": "1622", "d": "9/2012"}, {"title": "pushstatereplacestate takes relative url patch broke navigation root empty", "body": "steps reproduce start backbone history empty root backbonehistorystart root navigate route backbonehistorynavigate anyroute expected result location bar change anyroute actual result location bar nt change analysis started empty root patch normalize root fragment anyroute never matches", "num": "1619", "d": "9/2012"}, {"title": "create backbonelocalstorage", "body": "use backbonelocalstorage call pass model attributes hash gets polluted model toplevel hash nt works fine edit reworded", "num": "1615", "d": "9/2012"}, {"title": "docs alphabetize", "body": "find hard navigate docs sidebar alphabetized even know method name scan entire list methods listed particular heading perhaps methods could exempted extend constructor initialize part everything else alphabetized imo", "num": "1613", "d": "9/2012"}, {"title": "api concern", "body": "api standpoint think specialbase values like urlroot id could use special setters strange passed like normal instance variable nt draw distinction special part backbone framework", "num": "1609", "d": "9/2012"}, {"body": "hi amirrajan definitely function need parse hope helps", "d": "9/2012"}, {"body": "looks like offending commit refactor extend", "d": "9/2012"}, {"body": "hi matthewwithanm thanks pointing nt quite understand mean though subclasses calling nt would mind providing code snippet illustrating problem js var view backboneviewextend initialize function knowledge always called constructor", "d": "9/2012"}, {"body": "hi problem nt subclasses calling calling believe subclass overridden noop version line nt really dug see problem need make subclass javascript var k backboneviewextend initialize function alert worked new k el whatevs get alert normally including ios safari mobile safari edit forgot mention see issue ios simulator hardware gt version well", "d": "9/2012"}, {"body": "thanks matthewwithanm reproduce check get chance", "d": "9/2012"}, {"body": "clarify mean backbone hub backbone childs", "d": "9/2012"}, {"body": "tree backbonehubjs main query main index backbonechildjs rest notice main sites use individual js like em main db table childs childs say could silly question coz db cloud opt js", "d": "9/2012"}, {"body": "investigated little bit code removes deprecated function calls issue seems zepto delegate implementation safari issue remains", "d": "9/2012"}, {"body": "created pr couple hours ago aimed fixing couple issues related zepto delegate implementation see maybe give spin see fixes issues stated also fixes bug whereby blur focus events used backbone event hash nt trigger using zepto", "d": "9/2012"}, {"body": "hi jachor thanks pointing run case causes issue practice general futureproofing type discussion experience fairly common code rely insertion order particularly worried browser vendors changing near future issue linked suggests router would fall given numeric routes never encountered realworld code", "d": "9/2012"}, {"body": "yeah general futureproofing believe need depend beahaviour subject change future optimisations js engines could completely disregard insertion order fine long one uses numeric routes opera browsers", "d": "9/2012"}, {"body": "right engines could change behavior future however doubt happen without advance warning kind backbone certainly would nt codebase affected always define routes instead object think safely leave time though definitely good food thought thanks bringing jachor", "d": "9/2012"}, {"body": "yep actually conscious choice ordering objects nt actually undefined unspecified major browsers agreed keep insertion order exception numeric keys route ordering work fine", "d": "9/2012"}, {"body": "quite right value attribute needs escaped via fixed thanks hupf", "d": "9/2012"}, {"body": "mornin integralist backbone views use fndelegate handle events specified property means selector actually used event happens point matched element used find short nt need worry caching selector", "d": "9/2012"}, {"body": "braddunbar thank feedback good news side note probably worth setting another issue way remove single event events hash see backbone method removes events want remove event predetermined point application ideas possible workarounds thanks", "d": "9/2012"}, {"body": "way remove single event events hash support however accomplish effect easily often setting flag checking handler js var view backboneviewextend events click function e thisdisabled return disable function thisdisabled true enable function thisdisabled false hope helps", "d": "9/2012"}, {"body": "braddunbar hmm could work ok probs thanks", "d": "9/2012"}, {"body": "fix tests", "d": "9/2012"}, {"body": "hi fracmak thanks issue already discussed several places including also may want take look commit history concerning removal query string fragment", "d": "9/2012"}, {"body": "case stripping query strings navigate calls think bug still valid easy call navigate user hits back button url requested nt match came shall update pull request handled somewhere else", "d": "9/2012"}, {"body": "good point nt think anyone addressed stripping query string fragment", "d": "9/2012"}, {"body": "pull request updated reverting getfragment change favor sanitizer regex run fragment passed navigate tests also updated", "d": "9/2012"}, {"body": "closing favor existing discussions mentioned", "d": "9/2012"}, {"body": "hi geon actually assertions true add event first fired model collection proxies would rather documentation say", "d": "9/2012"}, {"body": "would rather documentation say would nice mention model well creating model cause immediate add event triggered collection model mostly confused trying find add event firing model must done something really stupid code sample linked change event fires model add event fires collection model see line event triggered model well proxied collection completely missed something obvious", "d": "9/2012"}, {"body": "see mean add event firing model listening time model event fires collection event time start listening model add event already fired run debugger modified version fiddle see add event triggered", "d": "9/2012"}, {"body": "ah get bound event handler view created collections addhandler fired thanks ton", "d": "9/2012"}, {"body": "sure thing glad could help nt think issue documentation related please let know reopen", "d": "9/2012"}, {"body": "mornin integralist thanks posting nt get called entered invalid amount entered makes sense technically nothing changed error meant value nt set model still value precisely triggers events actually pending changes need event every change input trigger one need amountchanged method triggered user would say call method need using model validate form validation usually nt turn terribly well much better implemented view concern opinion", "d": "9/2012"}, {"body": "always helpful try reduce problem simplified version code exhibits problem runnable jsfiddle", "d": "9/2012"}, {"body": "philfreo help gfranko figure attribute nt actually changing apologies rookie mistake", "d": "9/2012"}, {"body": "mornin jonilappalainen yes expected behavior since prototype property shared instances return new object using function instead", "d": "9/2012"}, {"body": "exactly expected noted documentation remember javascript objects passed reference include object default value shared among instances defaults structure offers shallow copy items new model object acts exactly like prototype braddunbars advice right one case thanks braddunbar new", "d": "9/2012"}, {"body": "glad could help", "d": "9/2012"}, {"body": "thanks read small print", "d": "9/2012"}, {"body": "hi stegrams right unexpected actually discussed already would mind taking discussion", "d": "9/2012"}, {"body": "sorry totally forgot pull requests created issues", "d": "9/2012"}, {"body": "update went back changed method logged model error object error object showing ok exactly expecting everything coming back successful model seeing error reason", "d": "9/2012"}, {"body": "default backbone expects correctly formatted json response server jquery interprets error json received regardless status code sending json back response", "d": "9/2012"}, {"body": "caseywebdev thanks feedback updated php return json data avoided model triggering still ca nt see get success callback fire method called looks succeed getting ok response nt fire success callback side note seems odd backbone fails nt return json object data send back literally following php", "d": "9/2012"}, {"body": "backbone failing per se jquery function considers getting correct data type back error response look like", "d": "9/2012"}, {"body": "caseywebdev php looks like valid json data", "d": "9/2012"}, {"body": "first argument attributes second options something like log error description error function", "d": "9/2012"}, {"body": "felixhorro thanks felix advise helped resolve issue working code simplified save method var fields account thisform elements value password thisform elements value", "d": "9/2012"}, {"body": "mornin thanks pointing fairly certain already work without issue assuming sent correct status code ajax post follow redirect receive resultant resource", "d": "9/2012"}, {"body": "hi mgiraldo yes pretty easily create template similar following assuming array example reference compiled template function lt modelget name gt lt modelchildren function child gt lt template model model gt lt gt hope helps", "d": "9/2012"}, {"body": "thanks ended using something similar described basically thing mention manually put template function template view need one odd thing view reason gets drawn first pass array end foo foo foo foo foo solved passing parameter increasing every iteration checking means draw opening closing seems much hack view rendered way render gt collectioneach appendfoo appendfoo component gt view new siteviewsfoo model component myfoos append viewrender el right works fine sure proper way thanks", "d": "9/2012"}, {"body": "looks like nt get takers comments looking code bit think best leave stickit nice plugin still agnosticism like backbone core basic concerns two way binding makes sense basic form elements lot modern ui elements sophisticated javascript widgets form serialization json nt hard folks want inputs twoway bound folks want inputs twoway bound folks want inputs twoway bound click form", "d": "9/2012"}, {"body": "yeah fence current state stickit feels better plugin thanks consideration jeremyall", "d": "9/2012"}, {"body": "bug betting specialcasing along lines", "d": "9/2012"}, {"body": "also applies addressed", "d": "9/2012"}, {"body": "also generalize fix", "d": "9/2012"}, {"body": "give shot seems handle well", "d": "9/2012"}, {"body": "wow speedy fix cheers", "d": "9/2012"}, {"body": "backbone proxies underscorejs provide iteration functions backbonecollection nt documented take look underscore documentation full calling chain wrapped object cause future method calls return wrapped objects well finished computation use value retrieve final value backbone example none methods chained", "d": "9/2012"}, {"body": "requires function native array method returns array assumptions completely valid gsklee one problem nt passing function try note know sort objects need pass custom function well however would like chain use underscore method quite easy", "d": "9/2012"}, {"body": "use backbone shortcut", "d": "9/2012"}, {"body": "guess thanks pointing", "d": "9/2012"}, {"body": "would using backbone browserify backbone already works browser", "d": "9/2012"}, {"body": "browserify much requirejs alternative node browser converter code shared browser node made easy browserify simply expose module browserify also lets specify dependencies updates via npm", "d": "9/2012"}, {"body": "jacobrask addressed please let us know nt work", "d": "9/2012"}, {"body": "works fine thanks lot", "d": "9/2012"}, {"body": "mornin reason two models destroyed length collection changes destroy model removed collection loop used iterate models nt know therefore uses incorrect indices quick demonstration happens js var collection new backbonecollection id id id id id var models id id id id id collectionmodels destroy models id id id id collectionmodels destroy models id id id collectionmodels destroy models id id hope helps", "d": "9/2012"}, {"body": "braddunbar big thank yes helps presented logical merci", "d": "9/2012"}, {"body": "hi cknoxrun thanks posting seen several issues concerning lately like come solution nt quite understand getting though seems provide root url ask suppress hashchange issue instance perhaps could post information call get better picture going", "d": "9/2012"}, {"body": "hi braddunbar thanks reply tried suggested luck problem root url root site since adding backbone select pages right move towards single page app pages backbone routes site talking currently pages like screenshot show page example using backbone rest site say straight rails server side pages works fine pushstate enabled browsers server rendered pages work fine backbone ones work fine however page like converted backbone course goes home page implemented work around basically adding filter rails notifies whether page backbone picking layout start looks like", "d": "9/2012"}, {"body": "use good go remembering may need try latest version backbone work correctly", "d": "9/2012"}, {"body": "hi ryanthegiantlion thanks pointing seem logical would prepend assigning since one retrieved nt blackberry test fairly sure prepending fragment assignment would nt cause issues since leading always stripped observed failing blackberry verified change fixes issue", "d": "9/2012"}, {"body": "hi braddunbar verified issue bb os verified change would fix issue actually came across issue trying get backbone app working platform btw also checked browsers check change nt cause new issues doubt issue os upwards browser much improved devices instance os uses webkit layout engine os uses something called mango source tested using one bb simulators nt much terms debugging forced use alerts custom consolelog", "d": "9/2012"}, {"body": "awesome addressed browsers access strip leading assigning change fairly low risk thanks bug report subsequent responses ryanthegiantlion", "d": "9/2012"}, {"body": "cool prob btw saw browsers nt strip assigning locationhash rather kept assigned value added assigned value working draft windowlocation actually states value attribute must string concatenation hash mark fragment identifier see window object working draft anyway quick fyi case interested", "d": "9/2012"}, {"body": "certainly fixing bugs learning things morning thinking fragment identifier hash exluding semantics degree think important make terminological distinctions like especially communicating text", "d": "9/2012"}, {"body": "mornin mirodil thanks posting certainly extend extended views call child view js var view backboneviewextend tagname span var viewextend var b viewextend span span consolelog new tagname new b tagname hope helps", "d": "9/2012"}, {"body": "feature event triggered model collection also triggered collection directly convenience", "d": "9/2012"}, {"body": "hey oleics philfreo right feature hope enjoy", "d": "9/2012"}, {"body": "thanx quick reply nt want complain making fat bold documentation", "d": "9/2012"}, {"body": "problem minimalist documentation good argument made making docs fat bold", "d": "9/2012"}, {"body": "caps lock things trollface", "d": "9/2012"}, {"body": "mornin tenedor thanks pointing fixed live next release", "d": "9/2012"}, {"body": "mornin mikesperanza thanks pointing interesting issue think current behavior master correct change queued next time called model collection updated", "d": "9/2012"}, {"body": "hi brad appreciate events triggered next change main problem consistency data model affected meantime events postponed fine collections incorrect behaving correctly get functionality relying byid collection user code behave correctly also internal features like detection dups collectionadd work data model inconsistency issue introduce sorts issues difficult debug experienced saving silent true avoid triggering update model simply updated id server upon save arguable really change sync triggered nt update byid later sync whole collection server add detect duplicates end lot duplicate records workarounds moment use silent true saving hack client side update byid collection sync still convinced indeed problem continue using number works extremely horrible regards mike regards mike", "d": "9/2012"}, {"body": "experienced issue also hard debug aware caused byid normally guess silenttrue avoid trigger events many years experience server side programming think silenttrue works likely event level byid works data level ensure data consistency collection xiaoli", "d": "9/2012"}, {"body": "mornin wshaver thanks opening issue meant flexible regard element replacing think stick proposal would fail least add benefit following situations previous element equally nonreplaceable element replacing element case would productive previous element inserted dom replacing would effect possibly throw", "d": "9/2012"}, {"body": "thanks quick thoughtful reply", "d": "9/2012"}, {"body": "issue submit pr", "d": "9/2012"}, {"body": "check", "d": "9/2012"}, {"body": "hi moll tried address would mind giving try", "d": "9/2012"}, {"body": "braddunbar umm guessing might indeed solve issue changes api removing index nt immediately think good idea commented", "d": "9/2012"}, {"body": "whether bad idea merged solving issue", "d": "9/2012"}, {"body": "already global event whenever route matched feel free use cleanup", "d": "9/2012"}, {"body": "whomever might useful could unroute using following technique unrouter function router route vars thislastroute amp amp unroutemethod routerunroutes thislastroute router unroutemethod apply thislastvars thislastroute route thislastvars vars backbonehistoryon route unrouter declaring unroutes app backbonerouterextend routes welcome view id view unroutes welcome unwelcome view unview", "d": "9/2012"}, {"body": "hey gsklee find documentation unbind backboneeventsoff alias mixed backbone objects models collections views routers", "d": "9/2012"}, {"body": "personally think router react urls", "d": "9/2012"}, {"body": "yep nt want use router certain page nt turn", "d": "9/2012"}, {"body": "want use router want handle everything inside namespace time want urls outside handled way achieve behavior without internal backbone hacking would nt natural router react urls option provided", "d": "9/2012"}, {"body": "find default intended behavior counterintuitive declare backbone app root myroot define backbone routes router usual expect routes resolved relatively root example route document id router handle route location path defined route relatively root location path router ignore path well nt match route defined relatively root router", "d": "9/2012"}, {"body": "grin describing exactly works js var router backbonerouterextend routes path id path path function id consolelog id var router new router backbonehistorystart root root pushstate true navigates logs nothing backbonehistorynavigate true navigates logs backbonehistorynavigate true using pushstate urls handled completely user", "d": "9/2012"}, {"body": "braddunbar know works nt work javascript var router backbonerouterextend routes path id path path function id consolelog id var router new router backbonehistorystart root root pushstate true changing location path outside backbone router logs shouldnt historypushstate null null also logs expecting historypushstate null null running issue backbone app part larger app location path changes originate outside backbone app believe proper fix would involve adding condition check pathname contains root path inside checkurl method", "d": "9/2012"}, {"body": "hmm wo nt anything change url right trigger event therefore never logs anything example", "d": "9/2012"}, {"body": "braddunbar right realized whole issue comes historyjs use parts app rather backbonejs specifically historyjs artificially trigger onpopstate pushstate thanks help", "d": "9/2012"}, {"body": "hi mikep main reason including search string fragment cross browser consistency since search string part hash browsers without pushstate support use meaningful way search string usually used modifiers often contains information pertinent route need include search parameters url use router would suggest put pathname instead instance become find user friendly well nicely semantic", "d": "9/2012"}, {"body": "addressed master fixed next website push", "d": "9/2012"}, {"body": "true thanks caseywebdev", "d": "9/2012"}, {"body": "mornin aeosynth already fixed latest master grab copy set", "d": "9/2012"}, {"body": "updated fiddle use latest master underscore still result json parsing errors sometimes appear clearing iframe localstorage fiddlejshellnet clears", "d": "9/2012"}, {"body": "hmm fiddle results error tried latest master appeared work", "d": "9/2012"}, {"body": "yeah reason errors appear maybe another issue works clearing localstorage tested chrome firefox show output displaying tons keys instead", "d": "9/2012"}, {"body": "", "d": "9/2012"}, {"body": "one works fine hm", "d": "9/2012"}, {"body": "localstorage script examples directory causes problem script backbonelocalstorage repo nt", "d": "9/2012"}, {"body": "todo example app sources updated backbonejs unupdated backbonelocalstoragejs would much trouble set git submodule check node module", "d": "9/2012"}, {"body": "aeosynth nt think submodule necessary updated code", "d": "9/2012"}, {"body": "thanks", "d": "9/2012"}, {"body": "ca nt cmdctrlf get sidebar first html document able jump right whatever method need", "d": "9/2012"}, {"body": "end still think request valid", "d": "9/2012"}, {"body": "apparently alphabetization nt norm todomvc stable apps alphabetized docs google emberjs yui angularjs closure gwt", "d": "9/2012"}, {"body": "hi aeosynth think much nicer things organized logically instance near clustered together right alongside knowtheory cmdctlf way go", "d": "9/2012"}, {"body": "hi prettymuchbryce thanks issue think suggesting provide something along lines right actually think rather nice nt require method call set plain properties less functions better think misconstrued request let know reopen discussion", "d": "9/2012"}, {"body": "braddunbar documentcloud fix seem correct suggest workaround", "d": "9/2012"}, {"body": "hi guys addressed would mind giving spin", "d": "9/2012"}, {"body": "would great", "d": "9/2012"}, {"body": "interested modularized backbonejs codebase check custombuild folder inside backbone fork keep mind backbone unit tests still pass successfully also example custom build ui would work finally blog post wrote discuss potentially using parts backbone", "d": "9/2012"}, {"body": "really appreciate idea especially part ruby dependencies gone amp grunt comes play alos situations need backbonerouter cause smth route still like use backbone organize javascript plus goes really well lodash uh hopefully one feels pissed custom builds", "d": "9/2012"}, {"body": "asciidisco nt done work integrate custom builds grunt yet idea would approach", "d": "9/2012"}, {"body": "gfranko would like see jquery like implementation since custom builds maybe fork project amp give spin weekend entirely sure enough time", "d": "9/2012"}, {"body": "asciidisco nt worry look jquery grunt file weekend see", "d": "9/2012"}, {"body": "modularizing codebase", "d": "9/2012"}, {"body": "multiple files often useful nt think backbone would benefit splitting source library rather small custom builds save kilobytes best added complexity would significant worth discussed least previously", "d": "9/2012"}, {"body": "use cases example user using jquery mobile backbonejs want include backbone routes agree default backbone source stay one file suggesting splitting source multiple files realize work maintain could also added case user want particular feature also suggested blog post allowing users include every feature backbone would make backbone even easier use corporate environment curious would added complexity", "d": "9/2012"}, {"body": "use cases example user using jquery mobile backbonejs want include backbone routes delete source rather clearly labeled quite easy curious would added complexity referring complexity new existing contributors writing code new project always daunting want encourage much possible currently backbone requires browser serve local files text editor requiring build systemtool big step said opposed custom builds general rather like tool introduce blog post", "d": "9/2012"}, {"body": "right backbone class object clearly labeled easy split codebase said nt think developers want touch source library using look requirejs nonamd compatible scripts example easy enough wrap lib inside define method wants yes hear saying trying introduce many dependenciescomplexities guess keep separate project keep code date backbone source", "d": "9/2012"}, {"body": "yep think really neat project backbone benefits simple single script backbone installed got period rely everything provides available", "d": "9/2012"}, {"body": "braddunbar delete source rather clearly labeled quite easy gah trap official build system ensure quality compatibility functionality better jashkenas yep think really neat project backbone benefits simple single script ya dig single files lodash single file still supports custom builds though jquery makes work individual files repo custom builds great give devs control lodash jquery supporting custom builds thing missing backbone", "d": "9/2012"}, {"body": "yep", "d": "9/2012"}, {"body": "tada", "d": "9/2012"}, {"body": "time scale release reason ask embark week high scale potentially high profile application would love able utilise release new tweaks fixes features", "d": "9/2012"}, {"body": "get chance run open tickets past changes round testing documentcloudorg least feel free use meantime like essentially thing", "d": "9/2012"}, {"body": "starting go open tickets", "d": "9/2012"}, {"body": "wish luck endeavor jashkenas much cake metal", "d": "9/2012"}, {"body": "thanks lot", "d": "9/2012"}, {"body": "give version master try see suits", "d": "9/2012"}, {"body": "nope nt work likely description issue starts firefox lot stuff including webkit", "d": "9/2012"}, {"body": "hi bodokaiser thanks issue definitely would nt recommend fiddling internal implementation detail subject change collections already proxy events models listen collection model events quite speed check onmodelevent method collections think probably customize needs hope helps", "d": "9/2012"}, {"body": "comming bit late ended recommendation thanks try", "d": "9/2012"}, {"body": "apologies wait glad found solution", "d": "9/2012"}, {"body": "mind look helps may helpful use case fails", "d": "9/2012"}, {"body": "already passing test performing within event save within change event natch feel free send us failing test case reopen", "d": "9/2012"}, {"body": "think depicted test assumptions believe every event raised different value imediate previous one case expected changes", "d": "9/2012"}, {"body": "braddunbar another idea could refactored working came across test case could nt figure would desired behavior unset would nt change correct", "d": "9/2012"}, {"body": "tgriesser test may exists attribute deletion unnotified matter contains", "d": "9/2012"}, {"body": "stegrams correct idea attribute addition deletion always generates change event", "d": "9/2012"}, {"body": "like share test issue everyone finds helpful", "d": "9/2012"}, {"body": "news ca nt imagine persons cares", "d": "9/2012"}, {"body": "one really easy change backward compatibility problems", "d": "9/2012"}, {"body": "mornin kof interested also discussed since either pattern acceptable nt saveclone best backbone leave user especially since easy add", "d": "9/2012"}, {"body": "strange sure add backbone remains inconsistent leaving fix", "d": "9/2012"}, {"body": "similar problem backbone functions expected modern browsers gt including chrome safari firefox however bombs reliably backbonehistorystart placed code follows tag code failing gethash function called navigate called start bug reintroduced lately", "d": "9/2012"}, {"body": "issue bookmarked page note learn anything edit started using backbone cause issue improper use set wrote mymodelset myfield correct usage mymodelset myfield", "d": "9/2012"}, {"body": "braddunbar question find back forward router callback trigger callback undecoded", "d": "9/2012"}, {"body": "anyone found solution", "d": "9/2012"}, {"body": "picked one back nt see issue firefox using code current master used code gist saw route triggered anyone else seeing something different get test page wrong", "d": "9/2012"}, {"body": "braddunbar triggered twice use routernavigate ones click link", "d": "9/2012"}, {"body": "future reference ca nt retrieve model using using id key different eg need set model like", "d": "9/2012"}, {"body": "anyway check whether function bound event rather way check event bindings context case", "d": "9/2012"}, {"body": "gsklee backboneevent nt really geared providing list places callback set called check code looks removes particular callback context scanning callback list event asked unbind authoritatively know callback called need scan events object", "d": "9/2012"}, {"body": "knowtheory correct would add even though probably nt inspect internals runtime change rather dramatically release release last months nt cases unsure particular listener registered probably reexamine code things differently", "d": "9/2012"}, {"body": "phleet commit", "d": "9/2012"}, {"body": "reference wrong pull request instead commit", "d": "9/2012"}, {"body": "thanks chiming think folks correct mixing query strings backbone app usually undesirable sneak accidentally best thing us router always ignore cases app cares query use access current value", "d": "9/2012"}, {"body": "unless reading tests wrong may looks like already behavior backbone performing route checks always based either fragment transitions real url hashchangebased browser already ignore forward query string test anyone still running problems query strings master let know ideally send failing test case", "d": "9/2012"}, {"body": "well problem collection attribute model belongs one collection gets destroyed last referenced collection gets removed think could fixed tracking collections model added calling modeldestroy collections remove item also", "d": "9/2012"}, {"body": "mateusmaso try backbonerels project depends feature well master collection model caching models added collection collection binds listener models events nt matter collection property model", "d": "9/2012"}, {"body": "think simple solution like one suggested would ideal imho default backbone behaviour", "d": "9/2012"}, {"body": "amccloud plugin abort pending requests perfectly valid different behavior deferred requests also valid solution recommended zawaideh tend lean toward abort behavior certain either solid default work cases preferably", "d": "9/2012"}, {"body": "jsoncorwin nothing strange problem original code meleyal returns new debounced function time though technically debounced new one createdcalled keyup defeating point debouncing call merely delayed since called waits never called executes right solution call use return value every time accomplish calling modeldefinition time hopefully brings clarity happeningwhy solutions work", "d": "9/2012"}, {"body": "implementation probably nt safe kind operation happens lot lists implementations every language framework review data structure notes", "d": "9/2012"}, {"body": "thank eordano instructive got answer", "d": "9/2012"}, {"body": "cervantesvive attempted thing issue intended work think object passed extend become prototype properties seeing behavior end something like following", "d": "9/2012"}, {"body": "know old kidkarolis thanks suggestion also nt create new instance model use", "d": "9/2012"}]