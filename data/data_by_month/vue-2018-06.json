[{"title": "vhtml replace containing element", "body": "problem feature solve redundant element dom proposed api look like right vhtml appends rawhtml container like renders gt option replace container instead appending looks like thoughts", "num": "8437", "d": "6/2018"}, {"title": "functional component wrapping contextdata causes vmodel update twice", "body": "version reproduction link steps reproduce type input expected logged actually happening logged twice uncomment works fine original pen using vuetify", "num": "8436", "d": "6/2018"}, {"title": "little problem vuecli", "body": "vuecli comes sassloader default simple mode nt complex mode disappear", "num": "8435", "d": "6/2018"}, {"title": "transition tutorial unit jumping till animating", "body": "try running last example see jumping button faders moving", "num": "8434", "d": "6/2018"}, {"title": "allow call original custom one defined", "body": "problem feature solve custom defined user stop firing original logerror problem straight way recreate behavior custom without requiring vue internals issue partially related ravenjs defines custom prevents vue login errors console proposed api look like think vue default expose original words nt default user would like override reassign otherwise would possible save original variable call within custom", "num": "8433", "d": "6/2018"}, {"title": "private properties prefixed dollar underscore available inside component", "body": "version reproduction link steps reproduce prefix property try reference within component template expected prefixed properties rendered template available within component actually happening props undefined rendered template component logic private property names described vue style guide form officially recommended first noticed project built vuecli", "num": "8432", "d": "6/2018"}, {"title": "vmodeltrim custom components removes whitespaces text edited", "body": "version reproduction link steps reproduce write text aa b custom input component delete b expected whitespace aa remains intact actually happening whitespace removed similar test done regular input working expected custom inputs usable remove whitespaces text edited", "num": "8431", "d": "6/2018"}, {"title": "attrs missing property used vmodel", "body": "version reproduction link steps reproduce component testa value passed prop gt key value present attrs variable component testb value passed vmodel gt attrs empty expected key value present attrs variable actually happening attrs empty", "num": "8430", "d": "6/2018"}, {"title": "keep alive component vfor directive", "body": "version nuxt version reproduction link steps reproduce want render component computed value array length different previous length keepalive nt work expected coption component created hook fired actually happening keepalive coption nt work always log coption created message toggle status", "num": "8429", "d": "6/2018"}, {"title": "vmodel text input nt work reliably phones", "body": "version reproduction link steps reproduce type two words chrome android phone emulator pixel pixel images work expected click create todo validateform reads formtodo unfortunately updates every space bar press actually happening vmodel contains everything last word tried vmodellazy initializing form issue", "num": "8428", "d": "6/2018"}, {"title": "vue sibling component communication via vuex", "body": "implemented sibling component communication via global state using vuex would like review architecture pattern vuex store state componentsdata actions adddata getdata adding data order add data store declare object structured like componentname componenta componentdata getting data another component get data using getdata method providing component name", "num": "8427", "d": "6/2018"}, {"title": "vhtml alters given content", "body": "version reproduction link steps reproduce want method render incomplete html used inner html existing dom element using directive due validation magic vue renders many dom elements given snippet shows code renders expected result also shows actual rendering vue expected actually happening", "num": "8426", "d": "6/2018"}, {"title": "working expected page scroll", "body": "version reproduction link steps reproduce create list using put list end long page scroll bottom page trigger change page height reduced force viewport scroll upwards little bit expected existing items stick container instantly appear final position without transitions actually happening existing items jump container sudden change vertical position slowly move back expected position internally using track positions transition items works fine page scroll introduced browsers force page scroll certain situations container rest page flashed final position transition items stuck old position based viewport makes look like suddenly jump document start performing unexpected transitions maybe provide new prop say optionally calculate positions based canvas origin instead viewport fyi forced page scroll triggered triggered", "num": "8424", "d": "6/2018"}, {"title": "dynamically setting wrapping element tag", "body": "situation must pick one two options component contents entirely made html source external app eg user input meaning wrapping tag around component seem possible component template consisting simply uninterpreted possible somehow component wrapping tag gets dynamically set something like seems maybe doable custom render function though know implement pretty much like set contents component dynamically including tags wrap component attributes tags possible thanks", "num": "8423", "d": "6/2018"}, {"title": "computed properties context broken prop type array exist typescript", "body": "version reproduction link steps reproduce create new project vue cli add typescript open vs code create property data appvue access property computed method works add prop type array computed property context broken work change prop type example object works expected computed property context even prop type array presented actually happening computed property context missing", "num": "8421", "d": "6/2018"}, {"title": "\u5bf9\u5b58\u50a8\u4e86\u5bf9\u8c61\u7684\u6570\u7ec4\u4f7f\u7528 filter", "body": "version reproduction link steps reproduce storestateitems name name b name c dispatch pop item \u662f\u4f7f\u7528 splice \u65b9\u6cd5\u5c06 storestateitems \u5f39\u51fa\u4e00\u4e2a item \u5143\u7d20 expected \u5f53dispatch pop item storestateitems thisitems \u6ca1\u6709\u5f39\u51fa\u5143\u7d20 actually happening \u5728\u7ec4\u4ef6\u5185\u7684 thisitems \u4f46\u662f\u5f53\u5bf9\u6570\u636e\u5c5e\u6027 items \u4e0d\u4f7f\u7528 filter element gt true \u800c\u662f\u76f4\u63a5\u8d4b\u503c\u65f6 storestateitems \u7684\u64cd\u4f5c\u5bf9\u7ec4\u4ef6\u5185\u7684 thisitems", "num": "8420", "d": "6/2018"}, {"title": "workaround attach listener vhtml used", "body": "workaround attach listener elements passed vhtml found include von directive content variable include element event bind sample code snippet html script methods menubuilder function modules loop thisbuild modules end loop dynamic way using vfor sample json passed vfor used vfor sample json format define vfors based json sample modulemodulename modulechildmodulename modulesubchildmodulename dynamic since supports levels parent child subchild expected multiple levels please see image reference trying achieve using json provided", "num": "8419", "d": "6/2018"}, {"title": "sizechange triggered change pagesize manually", "body": "use pagination component found could trigger sizechange event currentchange maybe optimized next modified version", "num": "8418", "d": "6/2018"}, {"title": "use loop instead foreach maybe better performance", "body": "problem feature solve increase performance one order magnitude see proposed api look like none new api better performance", "num": "8417", "d": "6/2018"}, {"title": "updating docs around scoped slots render function", "body": "problem feature solve using scoped slots development lot lately noticed lot missing documentation regarding example immediately obvious name scoped slots also like add working render function go ahead make pr proposed api look like well update docs", "num": "8416", "d": "6/2018"}, {"title": "style bindings important nt work properly ie", "body": "version reproduction link steps reproduce seen occur ie browserstack issue present ie click toggle button surprise show click toggle button surprise still visible expected clicking toggle hide message works properly chrome probably browsers well actually happening message still visible styling applied causes problems modals semantic ui vue see semanticuivuesemanticuivue", "num": "8415", "d": "6/2018"}, {"title": "\u63d0\u4e2a\u610f\u89c1", "body": "", "num": "8414", "d": "6/2018"}, {"title": "transitions classes added", "body": "version reproduction link steps reproduce open browser console trigger debugger click page inspect elements inside gt expected two children supposed transitions classes actually happening two children already added without transition class added next tick new visible top old one frame causing flickering effect remove fix navigate app see flicker effect", "num": "8413", "d": "6/2018"}, {"title": "event hooks components inside transitions", "body": "problem feature solve please look jsfiddle project components inside transitions need know inside component transition done read somewhere else reusable transitions might help actually working event approach implemented fiddle yet directly mutating prop would less code gives warning try directly access prop slot meh anyway approaches nt look nice wonder best way achieve would nt nice dedicated hooks already inside children components proposed api look like inside mycomponent fire transition events direct parent transition use", "num": "8412", "d": "6/2018"}, {"title": "vif syntax enhancement", "body": "problem feature solve add different events attributes etc based conditions element instead writing multiple elements proposed api look like html", "num": "8411", "d": "6/2018"}, {"title": "bindg working terniary operatewr", "body": "", "num": "8410", "d": "6/2018"}, {"title": "computed watchers firing", "body": "version reproduction link steps reproduce use demo entering question docs page using amazon kindle android tablet used lenovo tab version expected typing field value evaluated letter tapped using browser tablet per demo instructions actually happening nothing evaluated space bar tapped question mark exclamation mark selected keyboard use create drop list options user starts typing text field using android tablet specifically amazon fire user starts typing letters entered list shown updating list shown user taps space bar enter key screen keyboard works expected using browser computer tested code mac using safari chrome firefox errors console amazon fire works expected version updating vuejs version stops working tablet requires space key exclamation mark question mark enter key tapped evaluation firerun using tablet device", "num": "8409", "d": "6/2018"}, {"title": "vue development stale", "body": "problem feature solve last beta version released months ago using production project ever since encounter issue thus far however seems like development vue js become stale proposed api look like would like know roadmap future great project", "num": "8407", "d": "6/2018"}, {"title": "typescript component error property exist type vue", "body": "version reproduction link steps reproduce uses vuecli build project configuration uses typescript however process using access construction exist type vue vue item import vue vue export default vueextend name picker props columns type array default show type boolean default false computed pickerlist array const arr const columns thiscolumns const item columns arrpush itemtitle return arr pickermap map const map new map const columns thiscolumns const item columns mapset itemtitle itemid return map methods onconfirm value string void const resumeid thispickermapget value property pickermap exist type vue emit confirm resumeid expected nt know writing configuration caused error wrote code based official document believe build successfully actually happening run error property pickermap exist type vue complete prompt follows know reason error imperative friend help solve error hope official speed improvement typescript documentation believe typescript become popular thank", "num": "8406", "d": "6/2018"}, {"title": "prop data set updates template component", "body": "version reproduction link steps reproduce click either table headers expected list says time sort produces list saying order rows sorted however wrapped component passed data actually happening prop updates component template bug present twice mwe datatableheadercell also dynamic class add arrow data set class", "num": "8404", "d": "6/2018"}, {"title": "vmodelsync automatically emit prop changes event", "body": "problem feature solve vmodel helpful tool nt work nested components instead supposed use vmodel parent component manually bind props manually emit change event within child component verbose instead proposing option vmodel automatically emits change event proposed api look like template parent component template child component alternative template parent component template child component", "num": "8403", "d": "6/2018"}, {"title": "vuecliserviceglobal binaries", "body": "version windows node reproduction link steps reproduce npm install g vue yarn global add vuecliserviceglobal vue serve expected vue serve serve localhost actually happening c usersaarontestsvuejsinfinitescrollvuejs npm install g vue vue updated package c usersaarontestsvuejsinfinitescrollvuejs yarn global add vuecliserviceglobal yarn global resolving packages fetching packages info fsevents platform incompatible module info fsevents optional dependency failed compatibility check excluding installation linking dependencies warning vuecliserviceglobal gt eslintpluginvue unmet peer dependency eslint warning vuecliserviceglobal gt eslintpluginvue gt vueeslintparser unmet peer dependency eslint gt warning vuecliserviceglobal gt vueclipluginbabel gt babelloader unmet peer dependency webpack gt warning vuecliserviceglobal gt vuecliplugineslint gt eslintloader unmet peer dependency webpack gt lt building fresh packages warning vuecliserviceglobal binaries done c usersaarontestsvuejsinfinitescrollvuejs vue serve command vue serve requires global addon installed please run yarn global add vuecliserviceglobal try vue serve working effectively stuck loop message command vue serve requires global addon installed please run yarn global add vuecliserviceglobal try", "num": "8402", "d": "6/2018"}, {"title": "coding ist possible separate javascript component like instead one vue file", "body": "coding ist possible separate javascript component like instead one vue file", "num": "8401", "d": "6/2018"}, {"title": "read property install undefined", "body": "version reproduction link steps reproduce expected error actually happening error sentry \u62a5\u9519\u7684\u90fd\u662f android ios \u8bbe\u5907 crash \u540e\u65e0\u6cd5\u4e0a\u62a5\u7684\u60c5\u51b5", "num": "8399", "d": "6/2018"}, {"title": "read property options undefined", "body": "version reproduction link steps reproduce expected error actually happening error ps sentry \u62a5\u9519\u7684\u90fd\u662f android ios \u8bbe\u5907 crash \u540e\u65e0\u6cd5\u4e0a\u62a5\u7684\u60c5\u51b5", "num": "8398", "d": "6/2018"}, {"title": "unchanged prop validated every time parent updated", "body": "version reproduction link steps reproduce open console log expected console log display validating foo actually happening logged validated time parent data updated validator heavy trigered multiple times considerably slowdown whole execution", "num": "8397", "d": "6/2018"}, {"title": "ie wants eliminate memory leak", "body": "version reproduction link steps reproduce continue typing appropriate input tag display memory usage continue increase expected difficult avoid improve actually happening actual operation screen complicated configuration reach gb immediately solved memory status input memory status input input status", "num": "8396", "d": "6/2018"}, {"title": "", "body": "", "num": "8393", "d": "6/2018"}, {"title": "bubbled event", "body": "problem feature solve think good idea many choices separate method maybe parameter emit method generate bubbled events simple amp quick example see code modified emit include code javascript file amp work think good idea method vue sorry bad english proposed api look like vueprototype bubbleemit function event", "num": "8392", "d": "6/2018"}, {"title": "support custom prop validation errors", "body": "problem feature solve sometimes prop validation error messages vague one would like specify custom error message instead default invalid prop custom validator check failed prop message proposed api look like suggest supporting validator object instead following", "num": "8391", "d": "6/2018"}, {"title": "ternary operator misinterpretation vmodel attribute", "body": "version reproduction link steps reproduce see ternary operator evaluates false value vmodel attribute rendering checkboxes unwired models true cases evaluating elsewhere different attribute inline see checkbox labels bottom iteration proves issue vmodel parser expected checkboxes represent model actually happening true evaluations return model entity managed insert console logging true evaluation returns ternary operands object keyvalue pair example returns something like case string types also previous stage actual code could bypass issue varying boolean expression like checking existence property instead type verification heavy restructuring ca nt reproduce already went separating cases vif time whatever certain case true operands returned referenced correctly", "num": "8390", "d": "6/2018"}, {"title": "improve document deploy vuejs", "body": "problem feature solve step step guide deploy vuejs properly proposed api look like api document change", "num": "8389", "d": "6/2018"}, {"title": "watch add two arguments handler", "body": "version reproduction link steps reproduce data items watch items handler newvalue oldvalue deep true expected suggest add two arguments handler like handler newvalue oldvalue propertyname changeditemobject actually happening item property changed get notify handler nt know property changed item property changed", "num": "8388", "d": "6/2018"}, {"title": "bound data value update expected", "body": "version reproduction link steps reproduce create new component expects single property example create property based bound property create property based bound property note values correct component first loaded update bound property value note value updates expected value update expected value change bound property upon based changes described documentation every time parent component updated props child component refreshed latest value actually happening value change", "num": "8387", "d": "6/2018"}, {"title": "reactivity problem", "body": "version reproduction link steps reproduce data somevar mounter thissomevar expected reactive remove even put solves problem actually happening variable non reactive", "num": "8386", "d": "6/2018"}, {"title": "reactivity problem", "body": "version reproduction link steps reproduce data somevar mounter thissomevar expected reactive remove even put solves problem actually happening variable non reactive", "num": "8385", "d": "6/2018"}, {"title": "difference vuejs vueminjs inline statement event", "body": "version reproduction link steps reproduce click test expected expect vuejs vueminjs behavior expect see alert window actually happening use development version inline statement produce warning", "num": "8384", "d": "6/2018"}, {"title": "\u4f7f\u7528vfor\u914d\u5408\u7ec4\u4ef6\u6765\u6784\u5efabootstrap\u7684\u4e00\u4e2atable\u5bfc\u81f4table\u6837\u5f0f\u4e0d\u6b63\u786e", "body": "version reproduction link steps reproduce \u4e0b\u8f7dhtml\u4ee3\u7801 wget \u7136\u540e\u7528\u6d4f\u89c8\u5668\u6253\u5f00 vuebootstraptablehtml expected actually happening", "num": "8383", "d": "6/2018"}, {"title": "handle global filter error", "body": "problem feature solve global filter process url want track error running filter notice optionserrorcaptured function fired error happened global filter proposed api look like new api", "num": "8382", "d": "6/2018"}, {"title": "ca nt pass named slots via functional component", "body": "version reproduction link steps reproduce open link expected actually happening almost document says delegate responsibility slot system child component pass named slot work expected intentional bihaviour way pass named slots child component mycomponent without changing code mycomponent solution suggested work case", "num": "8380", "d": "6/2018"}, {"title": "dynamic input field type renders invalid code", "body": "version reproduction link steps reproduce open inspect dev tools line find duplicated key expected valid output vuetemplatecompiler without duplicated value props least warning usage dynamic input field types prohibited certain cases actually happening blank page rendered using centralized component radio checkbox input fields markup switched webpack webpack also upgrade vueloader version introduced bug prior version vuetemplaterenderer enforcing strict mode rendered templates case introducing critical bug references", "num": "8379", "d": "6/2018"}, {"title": "add jsfilter option context object used server renderer", "body": "problem feature solve option would allow user override filter determines js files get automatically injected generated html presently think achieved manual asset injection thing user wants control bundle gets injected multicompiler webpack setup creates lot extra work try duplicate things vueserverrenderer would default specific use case generating js bundle language want application support using using vueserverrenderer last language bundle generated automatically injected feature would allow instead add logic looks request locale header generates filter function based header uses filter function assure matching default bundle injected returned page proposed api look like adding variable method passing filter calls method instead default", "num": "8378", "d": "6/2018"}, {"title": "updated hook working multiple check boxes", "body": "", "num": "8377", "d": "6/2018"}, {"title": "updated hook working using multiple checkboxes", "body": "hi issue say bug small component holding dynamic form inputs values means used show value user trying fill form everything working fine except multiple checkboxes nt know updated computed functionality working update component user click first array check box code atname export default props optionid components data function return attribute attributelist mounted thisoptionid thisshowmultipleselect updated consolelog thisoptionid thisoptionid consolelog thisat consolelog thisatattributoptions thisoptionid var lt thisatattributoptionslength thisoptionid thisatattributoptions id consolelog thisat thisattype multipleselect consolelog thisattype thisattributelistpush thisatattributoptions optionname consolelog thisattributelist return false else thisattribute thisatattributoptions optionname thisattributelistpush thisatattributoptions optionname consolelog thisattributelist computed multipleoptions function thisoptionid consolelog thisat consolelog thisatattributoptions thisoptionid var lt thisatattributoptionslength thisoptionid thisatattributoptions id thisattributelistpush thisatattributoptions optionname consolelog thisattributelist return thisattributelist component registered like thanks help appreciated", "num": "8375", "d": "6/2018"}, {"title": "sync modifier nt work deeply nested object vfor", "body": "version reproduction link steps reproduce using sync modifier array objects vfor loop expected sync modifier update parent data actually happening sync modifier nt update parent data manually adding events handler works sync modifier nt", "num": "8373", "d": "6/2018"}, {"title": "vfor documentation conflicts warnings", "body": "version reproduction link steps reproduce intentionally include vfor key per documentation expected warning shown actually happening warning shown indicating mistake include key problem actually documentation documentation indicates sometimes including key fine build warning nt include key appears system fine key undefined clarifies considered would include key intentional included code seems work expected warning suppressed everyone happy request docs get updated warning gets updated clue people solution warning really nt want include separate key", "num": "8372", "d": "6/2018"}, {"title": "add keepchildren argument vif", "body": "problem feature solve imagine component wrapping input like case several others would like make container enclosing tag conditionally visible keeping input would depending certain condition know possible achieve using render function hard maintain big case components without really viewing template html proposed api look like suggestion add argument vif directive like keepchildren way could something like export default props showcontainer", "num": "8370", "d": "6/2018"}, {"title": "npm vue node module work standardized way", "body": "version reproduction link steps reproduce js const vue require vue const app new vue el app data message hello vue expected native node module work browserside javascript code electron environment actually happening vue warn using runtimeonly build vue template compiler available either precompile templates render functions use compilerincluded build found warn hello vue work reason issue obviously module follows workaround change clientjs code unserstand due commonjs commonjs builds intended use older bundlers like browserify webpack default file bundlers pkgmain runtime commonjs build vueruntimecommonjs however think standarized behavior npm package run without browserify webpack strange distvueruntimecommonjs default module npm package distvuejs", "num": "8369", "d": "6/2018"}, {"title": "vue becomes really slow large data even using pagination", "body": "hello guys building social media website imagine facebook currently supported feature website basic things like posting commenting replying etc use ajax load contents website surely data paginated oh btw use laravel backend lets say post comments database paginating comments time first comments load fast like problem click view comments another comments loaded bit slower third becomes even slower lets say comments loaded rendering becomes really slow action manipulate dom takes ages vue limitation missing something please help thanks advance", "num": "8368", "d": "6/2018"}, {"title": "doubts vue source code", "body": "nt class used sorry nt follow rules issue currently reading vue source code however confusion found suitable place ask author opened issue sorry behavior", "num": "8367", "d": "6/2018"}, {"title": "strange computed property cache", "body": "version reproduction link steps reproduce could reproduce link attempt code store namespaced js computed human return storestatehuman object hold return thishumanhold property object initial state fetch data human server code console output one place consolelog hold thishold undefined consolelog hold thishuman object hold consolelog hold thishumanhold consolelog hold storestatehuman object hold consolelog hold storestatehumanhold expected undefined expected value actually happening mystic oo temporarily returned use record humanhold instead directly hold", "num": "8366", "d": "6/2018"}, {"title": "\u8bf7\u95eevue \u4ec0\u4e48\u65f6\u5019\u80fd\u51fa\u4e00\u4e2a\u7c7b\u4f3creactnative \u539f\u751f\u7684\u89e3\u51b3\u65b9\u6848 \u867d\u7136\u76ee\u524d\u80fd\u5b9e\u73b0\u6253\u5305 \u4f46\u662f\u611f\u89c9\u6709\u4e9b\u5730\u65b9\u8fd8\u662f\u6ca1\u6709\u539f\u751fapp\u4f53\u9a8c\u90a3\u4e48\u6d41\u7545", "body": "problem feature solve \u4e00\u76f4\u90fd\u662fvue\u6846\u67b6\u7684\u652f\u6301\u8005 \u4f46\u662f\u5e0c\u671bvue \u80fd\u5426\u6709\u4e2a\u539f\u751f\u7684\u89e3\u51b3\u65b9\u6848 \u76ee\u524d\u7528hbuild \u6253\u5305vue \u7684apk \u53d1\u73b0vuex \u6709\u65f6\u5019\u4f1a\u51fa\u73b0\u4e00\u4e9b\u95ee\u9898 \u6709\u65f6\u5019 \u70b9\u51fb\u65e0\u6cd5\u751f\u6548 \u5728 apk \u91cc\u9762 \u8fdb\u800c\u5e0c\u671bvue \u793e\u533a\u80fd\u5426\u6765\u4e2a\u7c7b\u4f3creactnative \u7684\u89e3\u51b3\u65b9\u6848 \u73b0\u5728\u963f\u91cc\u51fa\u4e86weex \u6211\u5728\u793e\u533a\u770b\u5230\u53d1\u73b0\u5f88\u591a\u95ee\u9898 \u4e0d\u77e5\u9053\u4ee5\u540e\u80fd\u5426\u6709\u4e2a\u66f4\u597d\u7684\u539f\u751f\u65b9\u6848\u7684\u51fa\u53f0 proposed api look like vue \u7684\u539f\u751f\u89e3\u51b3\u65b9\u6848", "num": "8365", "d": "6/2018"}, {"title": "happen stars increased today", "body": "happen stars increased today", "num": "8363", "d": "6/2018"}, {"title": "vue error safari", "body": "version reproduction link steps reproduce open link safari expected language box rendered top like older versions safari basically browsers actually happening see statements section error thrown console git repo", "num": "8362", "d": "6/2018"}, {"title": "congratulations", "body": "good job", "num": "8361", "d": "6/2018"}, {"title": "vuejs going abandoned", "body": "version reproduction link steps reproduce github profile vuejs getting less less activity expected look contributors section see commits chart poor lately actually happening use projects", "num": "8360", "d": "6/2018"}, {"title": "issue templates", "body": "version reproduction link steps reproduce npm run dev open removed cert forgot change port expected website look like test hello world actually happening website looks like hello world overallheadervue found indexvue found files contain nearly exact code", "num": "8358", "d": "6/2018"}, {"title": "issue ssr server", "body": "version reproduction link steps reproduce followed documentation got issue expected server side rendered pages work fine actually happening works first refreshes gives stack overflow srcentrymainvue err server rangeerror maximum call stack size exceeded think issue refresh creates new instance remains memory somehow created detailed post issue stackoverflow", "num": "8355", "d": "6/2018"}, {"title": "proxyvalueobserver", "body": "problem feature solve api openlayers vue data selectedfeature olfeature selectedfeatures olfeature observer creates deep observation sometimes unnecessary frozenlag application proposed api look like solution may proxy observe changes first value simple example", "num": "8354", "d": "6/2018"}, {"title": "preserving multiple white spaces", "body": "problem feature solve data multiple white spaces sometimes user copies data one element uses paste another textbox searching time source tag multiple spaces browser makes single search used exact comparison avoid give something like data imho data bound sort syntax found replace white spaces within data look exactly someone copypastes data one spaces preserved know done using manual replacement styling whitespace pre pre tag would much maintenance places proposed api look like message msg u l p l e white spaces", "num": "8353", "d": "6/2018"}, {"title": "hi came across new old problem using vm refs", "body": "hi using vm refssomename displayed consolelog vm refssomename get vm refssomenamestylewidth js file know confused two days resdatadata data structure like title title list subtitle subtitle title title list subtitle subtitle title title list subtitle subtitle initscroll js code pic image image image plugins betterscroller problem hard longing help longing solutions", "num": "8352", "d": "6/2018"}, {"title": "hi came across new old problem using vm refs", "body": "hi using vm refssomename displayed consolelog vm refssomename get vm refssomenamestylewidth js file know confused two days longing help cutted pics codes console alert pic code pic js code pic resdatadata data structure like title title list subtitle subtitle title title list subtitle subtitle title title list subtitle subtitle initscroll js code pic plugins betterscroller problem hard longing help longing solutions", "num": "8351", "d": "6/2018"}, {"title": "vnodecomponentinstance undefined rendered functional component", "body": "version reproduction link steps reproduce open console expected instance logged actually happening logged worked also works change nonfunctional guessing caused nt include property", "num": "8350", "d": "6/2018"}, {"title": "vue set css animation", "body": "version reproduction link steps reproduce jsfiddle example expected set style animation dom actually happening attr render dom see dom style animation also render dom style", "num": "8349", "d": "6/2018"}, {"title": "combination inputs lazy model disabled causes odd behaviour", "body": "version reproduction link steps reproduce create two inputs lazy models set nulls add input key attribute first input function makes specific variable truefalse depending live content field set disabled attribute second input variable mentioned expected normal behaviour second input keeping settings enlisted reproduction jsfiddle actually happening combining mentioned options causes weird behaviour second input first typed character gets erased removing either disabled lazy making data empty string instead null makes problem go away please note removing one options matter fixes issue still need use particular scenario context use vuelidate plugin form validation want validation happen blur use lazy model time want disableenable field based first input content since models lazy use keyup input check current value otherwise requires taking focus enable second input note issue occurs without vuelidate plugin mentioned show background ran", "num": "8347", "d": "6/2018"}, {"title": "vmodellazy updating value input focus", "body": "version reproduction link steps reproduce type jacob input hit enter expected value property input element changed joseph value name property vue instance actually happening value property input element changed value input correctly updated using vmodel without lazy modifier", "num": "8346", "d": "6/2018"}, {"title": "", "body": "bind attribute vue custom directive use eventutil listen resize event want remove resize event unbind attribute however place place function custom directive", "num": "8343", "d": "6/2018"}, {"title": "content default slot causes component rerender parent rerenders", "body": "version reproduction link description passing content slot causes component rerender parent rerenders even component data nt changed steps reproduce create simple component shows amount times rendered use component twice content default slot without component mounted trigger update data html updatetrigger content default slot causes rerender export default data gt updatetrigger false async mounted await nexttick thisupdatetrigger true expected would expect instance component render actually happening component content slot renders twice actually sure whether bug feature request maybe expected behavior currently guess would better classified feature request", "num": "8342", "d": "6/2018"}, {"title": "", "body": "version reproduction link steps reproduce expected \u6bcf\u6b21 click text actually happening text \u7684 data", "num": "8341", "d": "6/2018"}, {"title": "inputs checkbox radio toggle using checked input click together", "body": "version reproduction link steps reproduce clicking input checkbox radio toggle status remove either checked input would solved problem need click thing expected checkbox radio toggled clicked actually happening checkbox raido toggle clicking", "num": "8340", "d": "6/2018"}, {"title": "", "body": "problem feature solve proposed api look like \u6211\u6ca1\u6709\u60f3\u5230\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898", "num": "8339", "d": "6/2018"}, {"title": "component status ca nt updated latest chrome browser", "body": "version reproduction link steps reproduce click button name button ca nt changed modify cancel expected works chromium firefox ca nt work latest chrome official build actually happening name button ca nt changed click sure misuse vue command vif velse wrong please correct please take look issue", "num": "8338", "d": "6/2018"}, {"title": "nested component vmodel nt trigger updated lifecycle method parent dynamic component updated provideinject", "body": "version reproduction link steps reproduce click working checkbox vmodel value updates updated lifecycle event fires console log click busted checkbox markup working checkbox wrapped within div inside dynamicwrap component notice checkbox appears checked vmodel nt update updated lifecycle event checkbox never fires expected second checkbox vmodel updates correctly actually happening updated lifecycle event fires vmodel updated happening dynamicwrapper rerendered mount unwrappedcheckbox created inside default slot unwrappedcheckbox uses provideinject update dynamicwrap component wrap div instead label element clones content inside checkbox nested layer deeper stops behaving expected sorry monster title complex replication let know anything clarify context purpose dynamicwrapper act type formitem component wraps element placed inside component case checkbox label element unless something like checkbox radio checkbox radio like tell formitem unwrap label checkbox placed inside also tested beta prerelease issue remains possible related previous issues", "num": "8337", "d": "6/2018"}, {"title": "vue init template cli error", "body": "version reproduction link steps reproduce vue init webapck demo expected work normally actually happening vuecli failed download repo vuejstemplateswebapck response code found", "num": "8336", "d": "6/2018"}, {"title": "different syntax multi argument filters", "body": "problem feature solve currently create multi argument filters writing function takes value template first argument unintuitive think would simpler cleaner approach could write functions return functions would also allow curryingmethod chaining opinion please let know would like discussed already could nt find discussion proposed api look like javascript current syntax const format value currency gt new intlnumberformat dede style currency currency format value new syntax const format currency gt value gt new intlnumberformat dede style currency currency format value", "num": "8335", "d": "6/2018"}, {"title": "vue create project error", "body": "version reproduction link steps reproduce vue init webpack expected throw err error find module rc functionmoduleresolvefilename functionmoduleload modulerequire require object c modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload actually happening create project fail", "num": "8333", "d": "6/2018"}, {"title": "\u7236\u7ec4\u4ef6\u5411\u5b50\u7ec4\u4ef6\u4f20\u503c\u4f7f\u7528watch\u76d1\u542cprop\u65e0\u54cd\u5e94", "body": "version reproduction link steps reproduce \u56e0\u4e3a\u5f02\u6b65\u7684\u5173\u7cfb\u6ca1\u6709\u4f7f\u7528\u8ba1\u7b97\u5c5e\u6027\u4ece\u800c\u4f7f\u7528watch\u4f46\u662f\u6ca1\u6709\u54cd\u5e94 expected actually happening", "num": "8332", "d": "6/2018"}, {"title": "works fine windows run mac gives import error ie resolve component vue webpacksimple template", "body": "", "num": "8331", "d": "6/2018"}, {"title": "keydown shift enter nt able update vmodel", "body": "version reproduction link steps reproduce open link first pointer focus second input area press shift enter time input area supposed reset second one nt get reset pointer focus first input area press shift enter time work expected thought keydown mostly keyup except timing thing actually happening keydown nt enable vmodel synch data thanks reading", "num": "8330", "d": "6/2018"}, {"title": "sponsor links work", "body": "version reproduction link steps reproduce open readmemd expected corporate websites shown click sponsor links actually happening sponsors via open collective gold links readmemd show found page also happens backersmd", "num": "8329", "d": "6/2018"}, {"title": "nested slot become plain element", "body": "version reproduction link steps reproduce execute jsfiddle expected nested named slot recognized rendered inside end actually happening nested named slot rendered plain element default slot basically slot needs defined root level maybe possible current design workaround define slot root level", "num": "8328", "d": "6/2018"}, {"title": "custom directive hook gets called inserted", "body": "version reproduction link steps reproduce please take look code key things attribute element dom manipulations hook expected expected element mounted least parent node actually happening parent node documentation says parent node guaranteed", "num": "8327", "d": "6/2018"}, {"title": "", "body": "error could load e vs codevue\u9879\u76eevuedevsrccoreconfig imported b e vs codevue\u9879\u76eevuedevsrcplatformswebentryruntimewithcompilerjs enoent file directory open e vs codevue\u9879\u76eevuedevsrccorecon fig", "num": "8326", "d": "6/2018"}, {"title": "localized warning errors development", "body": "", "num": "8325", "d": "6/2018"}, {"title": "feature request add event modifier distinguishes click drag", "body": "problem feature solve allows highlighting text inside elements without triggering function called click common situation would trying highlight copy text inside table row clicking row shows dialog information entry suggested modifier dialog would open row clicked without moving mouse proposed api look like text want copy another text", "num": "8324", "d": "6/2018"}, {"title": "plan switch vuejs vuets", "body": "problem feature solve thinking ts strict security haveing code hints proposed api look like haveing code hints", "num": "8323", "d": "6/2018"}, {"title": "plan switch vuejs vuets", "body": "think ts strict security", "num": "8322", "d": "6/2018"}, {"title": "jsx", "body": "problem feature solve following selectedvalue renderitem option export default name vuedropdown props options type array default new array selectedvalue type string default renderitem function renderitem method parent component looks like possible basically want call method want return element jsx would rendered inside place function called could nt find resource online opened issue proposed api look like", "num": "8321", "d": "6/2018"}, {"title": "updated hook triggered data change", "body": "version reproduction link steps reproduce waitting show alert dialog expected updated hook triggered actually happening updated hook triggered", "num": "8320", "d": "6/2018"}, {"title": "vue vuerouter vuex \u7248\u672c\u5bf9\u5e94\u5173\u7cfb", "body": "version reproduction link steps reproduce none expected vue vuerouter vuex eg vuerouter vuex actually happening vuerouter", "num": "8319", "d": "6/2018"}, {"title": "babel promise chrome", "body": "version reproduction link steps reproduce npm g vuecli vue create testpromise cd testpromise npm run serve open helloworld file use promise js let async gt consolelog instanceof promise false open project chrome chrome fixed bug check bad expected consolelog instanceof promise true actually happening consolelog instanceof promise false", "num": "8318", "d": "6/2018"}, {"title": "possible use variable name prefix mixin", "body": "version reproduction link steps reproduce create mixin add variable illustrated reproduction link properties without rendered throw error expected expect able use options prefix variables least one suggested documentation actually happening application throwing vue warn undefined property render", "num": "8317", "d": "6/2018"}, {"title": "vue spa", "body": "version reproduction link steps reproduce router \u7528 history \u6a21\u5f0f chunkhash \u65b9\u5f0f \u6253\u5305 nginx \u4e0b output path configbuildassetsroot filename utilsassetspath js name chunkhash js chunkfilename utilsassetspath js id chunkhash js location \u8bbe\u7f6e\u6d4f\u89c8\u5668\u7f13\u5b58 \u80fd\u4fdd\u8bc1 indexhtml \u65f6\u523b\u4fdd\u6301\u6700\u65b0\u7684\u6587\u4ef6\u5185\u5bb9 addheader cachecontrol nocache addheader cachecontrol private tryfiles uri uri router index indexhtml location router rewrite indexhtml last expected actually happening", "num": "8316", "d": "6/2018"}, {"title": "scoped slot use successful function props slot name default slot work", "body": "", "num": "8315", "d": "6/2018"}, {"title": "web transitiongroup warn convert r gi delay object android opera", "body": "version reproduction link steps reproduce use transitiongroup android opera android opera u zh use css transition expected animation correct actually happening warn convert r gi delay object", "num": "8314", "d": "6/2018"}, {"title": "ca nt work similarly removeeventlistener", "body": "version reproduction link vue event listener removin native event listener removin expected expected delete listeners function actually happening listeners deleted function compare function names important", "num": "8313", "d": "6/2018"}, {"title": "async function instanceof promise false", "body": "version reproduction link steps reproduce expected use vuecli install initial version project actually happening", "num": "8311", "d": "6/2018"}, {"title": "", "body": "problem feature solve component currenttabcomponent key moduleid gt \u7136\u540e\u6211\u7528 proposed api look like", "num": "8310", "d": "6/2018"}, {"title": "render function behavior", "body": "h div slotsdefault different h div slotsdefault", "num": "8309", "d": "6/2018"}, {"title": "vdom warn innerhtml watch string escaped chars", "body": "version reproduction link steps reproduce using vhtml string ssr warn match hybrating browser expected warn clientside rendered virtual dom tree matching serverrendered content actually happening warn clientside rendered virtual dom tree matching serverrendered content", "num": "8308", "d": "6/2018"}, {"title": "\u6ca1\u6709\u7528nmp", "body": "\u767e\u6613select\u7ec4\u4ef6 \u8c03\u7528\u6807\u7b7e function var selectdata null var selecttemplate selectvalue item valuename \u6682\u65e0\u5185\u5bb9", "num": "8307", "d": "6/2018"}, {"title": "key working functional component", "body": "version reproduction link steps reproduce type something input distinguish input click third remove button gif expected keep fourth input actually happening third input keep", "num": "8306", "d": "6/2018"}, {"title": "scoped slot always present scopedslots even vif away", "body": "version reproduction link steps reproduce note scoped slot seems never appear press run button trigger initial render expected console print slot missing default slot content appear rendered div actually happening console prints slot present nothing appears rendered div seems like moved slot slot contents executing slot returns nothing rather custom slot contents consumers component may want customize particular piece rendered using toggle always results slot defined based commit would seem putting scoped slot valid usage could theory check see provided slot nt allow determine whether user provided slot intentionally provided empty slot", "num": "8305", "d": "6/2018"}, {"title": "allow bitwise template expressions numbers", "body": "version reproduction link steps reproduce pipes used bitwise operator already noted wanted quickly round number found nt work knowledge rather unpopular filters feature vue helped realize work expected suggestion would detect numbers bitwise operations strings functionsfilters since numbers ca nt used functions anyway since filters defined properties within object could least scan filter exists vuejs actually supports full power javascript expressions inside data bindings part documentation would lie otherwise agree proposed change would least document exceptions since bitwise operator nt big popularity may seem unconsiderable bloat documentation edgecase actually happening bitwise operator get rendered", "num": "8304", "d": "6/2018"}, {"title": "changing parent data nt change component props", "body": "hi new vue problem update parent data child props updated code click save button element parent updated new value test check child prop nt updated work update want change element whole array", "num": "8303", "d": "6/2018"}, {"title": "inconsistent behavior using deep objects vuex ssr", "body": "version reproduction link steps reproduce install node modules run open reload page page expected class divs reflect value variables actually happening classes elements wrong class true despite changed false issue gone navigate page b page issue occurs reloading browser page inital state variables true set false entryclientjs file method", "num": "8302", "d": "6/2018"}, {"title": "ref property registered properly electron environment", "body": "version reproduction link steps reproduce clone electron project run tooltip wo nt pop popper right side compare jsfiddle identical code expected tooltip pop popper right side electron app actually happening tooltip nt pop popper right side electron app investigated issue found line render function passed function tooltip instance get ref vnode use line normal browser setting breakpoint line see exactly one call equals calls function electron environment setting breakpoint line never see call calls seems electron environment ref registered properly", "num": "8300", "d": "6/2018"}, {"title": "watch prevent data change", "body": "problem feature solve return false proposed api look like like", "num": "8298", "d": "6/2018"}, {"title": "css injection work funcational component andor undefined context", "body": "version reproduction link steps reproduce expected server render html block tests pass actually happening tests cases injected styles", "num": "8296", "d": "6/2018"}, {"title": "children component update change array props parent", "body": "version reproduction link steps reproduce click children component update click children component update expected click children component update actually happening children component update maybe bug test work version bug thanks time", "num": "8295", "d": "6/2018"}, {"title": "", "body": "set thisbusinesslist hahaha", "num": "8294", "d": "6/2018"}, {"title": "component destroyed mounted", "body": "version reproduction link steps reproduce run provided jsfiddle expected component slot moved table div element new one created old one destoryed actually happening slot moved table div using vif directive slot ist recreated new component mounted vuejs picks wrong component destroy destoyes new component instead old one", "num": "8293", "d": "6/2018"}, {"title": "transitiongroup breaks user styles moved elements", "body": "hello want remove element drag tolerance distance dynamic set style updated transitiongroup first set style children reset recovery style help fix please", "num": "8291", "d": "6/2018"}, {"title": "ui dom updating vif vshow unnecessary thing works ui update", "body": "version reproduction link steps reproduce create admins roles permissions click view admins link assign roles admin created button unassign assign expected progress bar appear button unassigned assign clicked value vshow changed true actually happening role object name admin displayame admin description description isrequesting false isassigned false changed isrequesting true progress bar appear ui updating progress bar appearing button clicked instead manipulate value displaying ui progress bar ui updated adding space removing space role object name attribute laravel project vuejs frontend following command installation packages composer install npm install installation following commands php artisan migrate fresh php artisan passport install npm run watch file located resourcesassetsjsadminsviewsadminsassignrolevue please comment line gt thisroles index displayname thisroles index displayname gt thisroles index displaynametrim currently working trick vuejs unnecessary thing make progress bar appear manipulating object value adding space removing space role object name attribute make progress bar appear please comment lines reproduce bug", "num": "8290", "d": "6/2018"}, {"title": "passing values vue template component", "body": "pass values dynamically added component appjs file example scenario user clicks button makes ajax request get id message object added one type component template need pass values component template selected user add sample appjs file vuecomponent sendsms require componentssmsvue const app new vue el app data return cards fields supportedcards cardtype getfields function sample template look like smsvue enter message vmodel newmessage export default data return newmessage methods mention thismention also get fields appjs file postsmstext thisid axiospost apicreatesms textmessage thisnewmessage function response consolelog response catch function error consolelog error", "num": "8289", "d": "6/2018"}, {"title": "hookcomponentupdated vue directive seems called correctly", "body": "version reproduction link steps reproduce demo reproduction link hit click button see hookcomponentupdated called click change data execute similar behavior click difference changes data parent component trigger correctly expected hook componentupdated custome directive called containing component vnode vnodes children updated seems actually happening one child component update data trigger hookcomponentupdated directive parent component", "num": "8288", "d": "6/2018"}, {"title": "vpre still parsingcompiling custom components", "body": "version reproduction link steps reproduce see element still rendered element rendered test expected actually happening hello world", "num": "8286", "d": "6/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "6/2018"}, {"body": "behaviour vhtml setting replacing whole node could problematic regarding current vue limitation one single root node doable userland though reactive though", "d": "6/2018"}, {"body": "yeah nt passed maybe remove dompropsvalue oninput model context need pass data", "d": "6/2018"}, {"body": "thought vmodel supposed syntactic sugar separate undocumented property vnodedata make difference pass instead using calls exist way see nonfunctional components example intended native elements clearly nt work components", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "able recreate easily apart looks reasonable", "d": "6/2018"}, {"body": "expected access", "d": "6/2018"}, {"body": "chrisvfritz think add note proxied style guide", "d": "6/2018"}, {"body": "definitely think mentioned style guide using vue six months nt know never needed ca nt recall place documentation actually used either wager people forgot ever read edit thanks quick help though much appreciated", "d": "6/2018"}, {"body": "actually since property names recommended least according style guide guaranteed conflict vue nt make sense proxy", "d": "6/2018"}, {"body": "discussion pr unfortunately nt remember pr remember final outcome", "d": "6/2018"}, {"body": "similar issue type", "d": "6/2018"}, {"body": "vmodel components know value bound input text type apply behaviour input would implemented userland ideally think could solved custom modifiers closed moment may rediscussed moment best approach prop instead modifier since right accessible component handle logic component", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "made slightly reduced case lul works thinking probably vuematerial", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "maybe could add something like force unaltered rendering", "d": "6/2018"}, {"body": "additional test show plain javascript behaves vue issue sorry close", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "trick second capitalized tag names interpreted variables see demo", "d": "6/2018"}, {"body": "duplicate please keep eye start merging pull requests soon", "d": "6/2018"}, {"body": "\u91cd\u73b0\u7684\u8981\u6c42\u662f", "d": "6/2018"}, {"body": "\u70b9\u51fb li \u5220\u9664 storestate \u7684 \u53ea\u6709\u5f53\u70b9\u51fb update storestateitems \u8d4b\u503c\u7ed9 vmitems \u65f6\u624d\u66f4\u65b0\u89c6\u56fe", "d": "6/2018"}, {"body": "corrected link", "d": "6/2018"}, {"body": "\u5c06 \u6539\u4e3a", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "6/2018"}, {"body": "starstaysky please report issues component library repo related vue", "d": "6/2018"}, {"body": "use loops places specially perf critical places find anywhere switching loop would increase performance happy review pr corresponding perf benchmarks comparison", "d": "6/2018"}, {"body": "check prs first create pr start discussion possible improvements right repository", "d": "6/2018"}, {"body": "oh right bad thanks", "d": "6/2018"}, {"body": "workaround change new style apply", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "6/2018"}, {"body": "doable userland reusable transition providing state transition scoped slot end writing something like", "d": "6/2018"}, {"body": "thanks lot works", "d": "6/2018"}, {"body": "thanks proposal rely attribute order instead use computed property bind events object events bound", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "6/2018"}, {"body": "see vuejsroadmap", "d": "6/2018"}, {"body": "see also", "d": "6/2018"}, {"body": "noted thanks", "d": "6/2018"}, {"body": "duplicate think need address issue docs nt going released time soon", "d": "6/2018"}, {"body": "official documentation really little typescript", "d": "6/2018"}, {"body": "bug local state defined component reference props directly modify headercellclick method equivalent directly modified props words modified local state parent component datatable solution modify method component btw parent component collects parent component local state dependency parent component data changes trigger rerender child component collects prop dependency reference prop change child component trigger rerender", "d": "6/2018"}, {"body": "hcysunyang foremost thank much time effort apologies catching mistake realizing mutating prop apologies consuming time", "d": "6/2018"}, {"body": "child component input tag may vmode binding according idea sync modifier seems emit input events", "d": "6/2018"}, {"body": "hoping suggest clean way extend vmodel connection parent without manually write emitter apologies example implementation nt perfect idea vmodelsync variable set prop got passed parent could nt local vmodel binding name", "d": "6/2018"}, {"body": "although feature interesting still convenience thing already made convenience also major flaw would mean vmodel could modify component used creating watcher something similar currently possible looks like want easy way setup prop meant used v model sync recommend give look computed setters", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "bug", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "sodatea", "d": "6/2018"}, {"body": "bug", "d": "6/2018"}, {"body": "expected behavior validators designed make sure always valid prop values want validate props hook", "d": "6/2018"}, {"body": "yes point validating value", "d": "6/2018"}, {"body": "oh sorry seems nt quite understand issue correctly earlier unchanged prop validated every time parent updated think investigate see make improvement", "d": "6/2018"}, {"body": "exactly updated title resume thanks", "d": "6/2018"}, {"body": "validator heavy trigered multiple times considerably slowdown whole execution validator nt heavy keep mind run development mode help developers provide correct data components make clear prop incorrect instead seeing nonreadable js errors", "d": "6/2018"}, {"body": "right posva already fixed validator bottle neck thought report issue anyway good point though far concerned consider issue solved", "d": "6/2018"}, {"body": "know open issues good intentions thanks helping us", "d": "6/2018"}, {"body": "thank reporting could try check using windows performance analyzer two cases windows performance analyzer english article japanses article cases invoke developer tools invoke developer tools breaking issue tiny parts order find ie developer tools causing memory leak", "d": "6/2018"}, {"body": "installed windows performance analyzer know analyze first try use look source url presented memory leak reproduced merely increasing number items following minimum configuration thinking manage somehow", "d": "6/2018"}, {"body": "leak demo maybe ie waiting long release memory", "d": "6/2018"}, {"body": "thank confirmation continued identify leak points modified vuejs body ie able fix suppress memory expansion problem write vuejs seems missing recognized bug ie issue pullrequest first time organize send request since would like use vuejs good integrate get confirmation", "d": "6/2018"}, {"body": "ryutayamaguchi thank efforts waiting pr", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "6/2018"}, {"body": "ryutayamaguchi", "d": "6/2018"}, {"body": "ryutayamaguchi", "d": "6/2018"}, {"body": "removed purpose makes things harder track doable user land seen library ca nt find right post find", "d": "6/2018"}, {"body": "strange emit make one step amp ca nt method make steps much developer want dont need library make include example post", "d": "6/2018"}, {"body": "also message functions supported", "d": "6/2018"}, {"body": "duplicate", "d": "6/2018"}, {"body": "hmm would imply complexifying lot function usage specific use case readability readable version would use create component using render function handle correctly", "d": "6/2018"}, {"body": "znck told assignment ternary leftside forbidden makes sense disallow well", "d": "6/2018"}, {"body": "official guide step step guide deploy vuejs vps like ucloud aws alibaba cloud digital ocean linode currently helpful step step information google someone blog also helpful forum post helpful question deploy receive comment", "d": "6/2018"}, {"body": "first time open issue vuejs follow guide using format somehow still wrong let know thanks", "d": "6/2018"}, {"body": "forum post helpful receive comment receive comment", "d": "6/2018"}, {"body": "hi think question could answered search engine like deploy use static web assets mainstream cdn services actually nt need special things vuejs thanks", "d": "6/2018"}, {"body": "deploying vue app deploying static website node app ssr nt need anything specific vue duplicate", "d": "6/2018"}, {"body": "thanks posva jinjiang", "d": "6/2018"}, {"body": "see", "d": "6/2018"}, {"body": "datacolor synchronized propcolor", "d": "6/2018"}, {"body": "values specified initial data expected value automatically updated always use manually update ing value", "d": "6/2018"}, {"body": "ktsn thank clarification may worth updating documentation explicit regarding limitation", "d": "6/2018"}, {"body": "seems work move watcher instance array changing sure trying please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "6/2018"}, {"body": "duplicated", "d": "6/2018"}, {"body": "use globals templates put warning rely always accessible", "d": "6/2018"}, {"body": "development builds case vue use native detect datamethods defined component instance call intercepted production builds case validation logic removed call finally fallbacks validation requires runtime check relies ca nt compilation keep runtime check experience browser compatibility issues kind bloat code size think better remember caveat avoid using global functions inside templates thanks", "d": "6/2018"}, {"body": "\u5b9e\u9645\u7684\u6548\u679c", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "sorry find error captured call render close issue", "d": "6/2018"}, {"body": "problem always false", "d": "6/2018"}, {"body": "sorry reproduction link wrong", "d": "6/2018"}, {"body": "said issue need explicitly pass slot", "d": "6/2018"}, {"body": "thank advice", "d": "6/2018"}, {"body": "see discussions case likely patch code generation suppress value emission type dynamic vmodel set thanks pointing", "d": "6/2018"}, {"body": "sodatea thanks clarification agree suppression would right way go", "d": "6/2018"}, {"body": "upon inspection proposed api sufficient sure look like yet solution problem still needed", "d": "6/2018"}, {"body": "closing realized nt really necessary vueserverrenderer handle solve downstream appjumpstartmercuryvue", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "see", "d": "6/2018"}, {"body": "javoski please consider reopening official guide section sync documented states recommend always use kebabcase event names bitten well either docs needs fixing code", "d": "6/2018"}, {"body": "feliperaul", "d": "6/2018"}, {"body": "documentation says including key fine list render output rely child component state temporary dom state eg form input values warning rather error vdom algorithm could deal expense considerable performance deterioration using without still considered antipattern chose keep warning escape hatch intentional requirevforkey rule eslintpluginvue available detect use case might consider adding check core", "d": "6/2018"}, {"body": "simple example could verbose imagining big content inside container code would duplicated", "d": "6/2018"}, {"body": "yes currently use function implement conditional wrapper lot content instead introducing modifier maybe would rather use something like", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "achieve creating really simple component", "d": "6/2018"}, {"body": "sqal said feasible userland functional component", "d": "6/2018"}, {"body": "googd", "d": "6/2018"}, {"body": "tried apply component functional nt achieve desired result multiple elements inside container render function ca nt return multiple root node elements add div", "d": "6/2018"}, {"body": "functional component check jsfiddle akryum", "d": "6/2018"}, {"body": "yes want template compilation need use version want template compiler node dedicated package case would breaking change", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "guess need something like", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "looks like misunderstood purpose actionsmutations vuex never update state inside action function need commiting mutation instead state action readonly fixed reproduction", "d": "6/2018"}, {"body": "sqal feng shui request server data associated bug computed human hold return different data time mystery", "d": "6/2018"}, {"body": "bug report clear sqal pointed need use mutation change state", "d": "6/2018"}, {"body": "\u4e00\u76f4\u90fd\u5728\u7528vue \u91cc\u6784\u5efa\u5546\u57ce\u9879\u76ee \u6548\u679c\u5f88\u597d \u800c\u4e14\u6211\u4eec\u4e09\u4e2a\u5e73\u53f0\u7684\u7ad9\u70b9\u90fd\u5728\u7528 \u73b0\u5728\u968f\u7740js \u5728\u539f\u751f\u6253\u5305\u4e0a\u7684\u5e94\u7528\u8d8a\u6765\u8d8a\u591a \u60f3\u77e5\u9053\u80fd\u5426\u540e\u671f\u51fa\u4e00\u4e2a\u7c7b\u4f3creactnative \u8fd9\u6837\u7684\u89e3\u51b3\u65b9\u6848 \u5168\u9762\u652f\u6301\u539f\u751f\u8fd9\u4e2a\u65b9\u5411 \u8c22\u8c22", "d": "6/2018"}, {"body": "\u8bf7\u53c2\u89c1weex", "d": "6/2018"}, {"body": "vue", "d": "6/2018"}, {"body": "\u8c22\u8c22", "d": "6/2018"}, {"body": "\u53c3\u898b", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "ca nt reproduce problem safari btw reproduction concise possible helpful much irrelevant code", "d": "6/2018"}, {"body": "able reproduce safari", "d": "6/2018"}, {"body": "jonaskress tried using latest minor version see fixed later version", "d": "6/2018"}, {"body": "nt think vue issue root cause two functions chrome returns safari returns application set default language safari however api response contain key thus leading error", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "today surpassed react", "d": "6/2018"}, {"body": "hi thanks interest definitely going abandon vuejs feel free use projects vuejs working quite stably healthy ecosystem critical bug core pick time without worrying maintenance active development actually commits chart nt reflect developments done open pull requests nt merged base branch yet vuejs large ecosystem companion libraries including vuecli vueloader etc core team major focus vue cli aims standard tooling baseline vue ecosystem brings whole new developer experience reached release candidate phase check released stable version vue cli expected done coming weeks come back core start merging pull requests actually already reviewed approved lot prs expecting new version stay tuned production usage nt wait", "d": "6/2018"}, {"body": "nt named export", "d": "6/2018"}, {"body": "thanks report would please reduce issue small reproducible example eg github repository together instructions get problem without runnable example would difficult us find going wrong", "d": "6/2018"}, {"body": "hello thanks reply project bit big uploaded google drive please download files run refresh page using several times quickly times see happens files", "d": "6/2018"}, {"body": "looks like called twice lodash appjs entrymixinsjs", "d": "6/2018"}, {"body": "omg stupid trying solve issue week thank much", "d": "6/2018"}, {"body": "need stop vue observing deep nested data objects much easier", "d": "6/2018"}, {"body": "posva ok check", "d": "6/2018"}, {"body": "posva checked works partial version gives example create able important add element intact form later able get element change object frozen way unfreeze possibile added new fields raises reconsideration", "d": "6/2018"}, {"body": "yeah point preventing vue observing changes limitation able add anything freeze nested objects though everything left unchangeable", "d": "6/2018"}, {"body": "current behavior html deals white spaces using filter something like would better instead inventing new syntax", "d": "6/2018"}, {"body": "thanks interest issue raised several times generally nt add features easily achieved userland avoid code bloat use cases custom filter would sufficient", "d": "6/2018"}, {"body": "oh great didnt know filter works", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "6/2018"}, {"body": "imho private apis may best idea rely always subject change", "d": "6/2018"}, {"body": "yeah probably would nice usable though functional components nt reliable way access far know", "d": "6/2018"}, {"body": "ok figured bit workaround using fills parent rerenders anything like tell functional components apart private interfaces", "d": "6/2018"}, {"body": "also even really private api nt prefix pretty common see working directly vnodes", "d": "6/2018"}, {"body": "duplicated key object", "d": "6/2018"}, {"body": "justineo fix attr nt work", "d": "6/2018"}, {"body": "style binding worked expected animation showing referenced keyframe exist yet need define css markup first", "d": "6/2018"}, {"body": "sodatea solve yet close animatecss project work", "d": "6/2018"}, {"body": "works provided jsfiddle snippet", "d": "6/2018"}, {"body": "sodatea ok works thanks great help", "d": "6/2018"}, {"body": "expected triggering rerender value saved lazy vue applies old value", "d": "6/2018"}, {"body": "explain fact changing initial values empty strings instead nulls changes behaviour one expect reapply empty string plus rerender connected second input edit checked one thing removing second input without modifying first one changes behaviour either", "d": "6/2018"}, {"body": "posva", "d": "6/2018"}, {"body": "vmodel making things easier initialise value empty string btw", "d": "6/2018"}, {"body": "reproduce macos chrome safari could update issue description include operating system browser version misunderstood issue first glance bug", "d": "6/2018"}, {"body": "temporal workaround blur input focus used ref input", "d": "6/2018"}, {"body": "another workaround suited replace vmodel appropiate", "d": "6/2018"}, {"body": "worked think bug", "d": "6/2018"}, {"body": "according comment sourcecode focused element never updated bug seems like update function called unless user press enter blur anyways seems redundant", "d": "6/2018"}, {"body": "well worked without changes fixes", "d": "6/2018"}, {"body": "works well", "d": "6/2018"}, {"body": "bug introduced commit reverting reopen fix solve bugs revert commit along nexttick implementation adding nexttick related label", "d": "6/2018"}, {"body": "sodatea please review pr need revert entire commit restriction updating lazy elements focused", "d": "6/2018"}, {"body": "tonyraoul remove restriction cause another issue described", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "duplicate", "d": "6/2018"}, {"body": "rerender happens whole template renders let mark duplicate", "d": "6/2018"}, {"body": "\u8fd9\u4e2a\u73af\u5883 jsfiddle \u662f run \u4e0d\u8d77\u6765\u7684", "d": "6/2018"}, {"body": "fnlctrl \u6211\u53ef\u80fd\u6ca1\u6709\u8be6\u7ec6\u7684\u8bb2\u6e05\u695a\u95ee\u9898 work \u8fd9\u4e2a\u73af\u5883 jsfiddle \u662f run \u4e0d\u8d77\u6765\u7684 server \u6253\u5f00\u9759\u6001\u9875\u9762\u53bb\u590d\u73b0 \u6bcf\u6b21 click work \u80fd reopen", "d": "6/2018"}, {"body": "\u8fd9\u4e2a\u771f\u4e0d\u662f vue jsfiddle tbsstudioexe \u539f\u8c05\u6211\u4f7f\u7528\u4e86 ts \u8bed\u6cd5 let arrayprototype arrayprototype typeof arrayprototypefind function typeof arrayprototypefindindex function let stringprototype stringprototype typeof stringprototypeendswith function typeof stringprototypestartwith function", "d": "6/2018"}, {"body": "\u7ec8\u4e8e\u627e\u5230\u4e86\u4e00\u53f0 android \u7528\u7684\u534e\u4e3a mate \u4e3a linux android wv khtml like gecko mobile nettypewifi languagezhcn \u65e0\u6cd5\u590d\u73b0 \u4f60\u8bd5\u8fc7\u5176\u4ed6 android", "d": "6/2018"}, {"body": "sodatea \u6211\u4eca\u5929\u6765\u5c1d\u8bd5\u4e00\u4e0b", "d": "6/2018"}, {"body": "run \u5c31\u662f ok \u7684 \u7ebf\u4e0a\u7684\u4ea7\u54c1\u4e5f\u80fd\u6b63\u5e38\u4f7f\u7528\u4e86", "d": "6/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server stackoverflow toggle click handler use instead add directive markup create onetime binding detailed explanation", "d": "6/2018"}, {"body": "issues bug reports feature requests maybe discuss forum discord", "d": "6/2018"}, {"body": "also works chromium", "d": "6/2018"}, {"body": "using chrome fiddle working expected", "d": "6/2018"}, {"body": "justineo ok think need try restart browser macos really strange sigh", "d": "6/2018"}, {"body": "justineo tried macos latest chrome still problem restart system browser anyone help double check try imac tonight btw found chrome updated official build", "d": "6/2018"}, {"body": "anyway guess caused chrome extensions close try incognito mode works sorry bothering everyone", "d": "6/2018"}, {"body": "typo webapck webpack", "d": "6/2018"}, {"body": "sorry subjective best adding alternative syntax creates extra api surface learning cost maintenance cost documentation complexity nt think worth adding", "d": "6/2018"}, {"body": "perhaps issue transferred vuecli furthermore please provide version vuecli os thanks", "d": "6/2018"}, {"body": "closed due wrong repository lack necessary information btw could network problem initialization based experience", "d": "6/2018"}, {"body": "please provide executable reproduction thanks", "d": "6/2018"}, {"body": "many things involved easy copy wonder solution problem namely watch value heard parent component thanks justineo", "d": "6/2018"}, {"body": "many things involved easy copy since even nt willing copy want others help solve problem", "d": "6/2018"}, {"body": "justineo ulivz", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "6/2018"}, {"body": "add prevent input also adding newline modifies value well", "d": "6/2018"}, {"body": "kind hack lol long works", "d": "6/2018"}, {"body": "might bug open collective", "d": "6/2018"}, {"body": "closing resolved upstream", "d": "6/2018"}, {"body": "expected behavior slots inside component exposed parent want specify slot content outside parent define named slot parent rendered corresponding child slot", "d": "6/2018"}, {"body": "shoul nt manually move content dom handled vue relies perform updates moving", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "6/2018"}, {"body": "sorry use template correctly recreate issue", "d": "6/2018"}, {"body": "think since specific one combination events solved userland", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "know typescript supporti mean idea create vuets write", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "use equivalent passed", "d": "6/2018"}, {"body": "believe intended would nt beneficial enough check everything set updating hand something expensive every update prevent setting variable really changed", "d": "6/2018"}, {"body": "vuevuexvuerouter \u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5404\u79cd\u62a5\u9519", "d": "6/2018"}, {"body": "hi anything vuejs seems code posted vuejs", "d": "6/2018"}, {"body": "code probably adds babel applies everyone writes vue", "d": "6/2018"}, {"body": "put additional packages started project vuecli", "d": "6/2018"}, {"body": "valid repro use forum discord server ask questions", "d": "6/2018"}, {"body": "exactly expected behavior babel corejs native promise implementation absent buggy polyfill projects utilizing babel transpile code async functions transpiled regeneratorruntime abovementioned promise polyfill corejs case check pass bad case import babelpolyfill project choose transpile async functions imported thirdparty untranspiled codebase execute untranspiled code devtools would nt think issue worth fixing", "d": "6/2018"}, {"body": "use ssr bundle nodejs use native async syntax nodejs use babel node js run vue ssr", "d": "6/2018"}, {"body": "time move react", "d": "6/2018"}, {"body": "moving react nt solve problem feel free though may want learn provide reproduction specified issue requirements learn post issues correct repo help regardless framework work", "d": "6/2018"}, {"body": "properties start proxied vue instance may conflict vue internal properties api methods access please check official guide use prefixes behind", "d": "6/2018"}, {"body": "hi justineo thanks suggestion nt bit weird properties coming mixin proxied documentation says create mixin variable names less prone conflicting vue api component properties", "d": "6/2018"}, {"body": "nt bit weird properties coming mixin proxied documentation says rule limited mixins understand", "d": "6/2018"}, {"body": "found works explicitly define property nt work box component either try use naming convention thanks", "d": "6/2018"}, {"body": "properties defined manually reactive", "d": "6/2018"}, {"body": "\u751f\u4ea7\u73af\u5883\u7684 spa \u8f6e\u8be2 websocket reload \u7684 issues \u53ea\u7528\u4e8e bug", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "according use opera mini support css transitions cases opera mini processing done via opera servers often prevents js working correctly btw error message seems raised thirdparty js file imported codepen", "d": "6/2018"}, {"body": "using variable template twice", "d": "6/2018"}, {"body": "ouph real thx notice big mistake code send undefined method", "d": "6/2018"}, {"body": "valid reproduction", "d": "6/2018"}, {"body": "open project vue run code console global promise polyfill work async await promise async functions global promise", "d": "6/2018"}, {"body": "sorry babel use vue create testpromise use new promise helloworld file open chrome", "d": "6/2018"}, {"body": "problem solved babel use custom promise", "d": "6/2018"}, {"body": "duplicate", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "6/2018"}, {"body": "functional components nt instance ca nt key component rather functional component key element could potentially return multiple elements vue ca nt reliably decide apply key one provided", "d": "6/2018"}, {"body": "saw scoped slot still passed invoking since function give undefined user nt provide slot actually get still call function check user provided scoped slot content", "d": "6/2018"}, {"body": "also important note working standard implement filters javascript standard adopt since seems exactly filters context see clear documentation benefits filters serve way different methods applied new pipeline operator", "d": "6/2018"}, {"body": "see clear documentation benefits filters serve way different methods applied capitalize value new pipeline operator value gt capitalize benefit normal methods mainly nt pollute component app instance namespace formatter methods end quite number formattersfilters need everywhere main benefit pipeline operator pipeline operator nt exist yet p also using pipeline operator would also mean filter present instance method certainly reevaluate assessement piplelineoperators done start working vue", "d": "6/2018"}, {"body": "proposed change would breaking change land codebase agree documentation could improved addressing filter bitwise issue open issue submit pr", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "6/2018"}, {"body": "ooops duplicate see answer", "d": "6/2018"}, {"body": "bug code fixed made appear like deepness issue nt updated reproduction link issue description accordingly also forgot mention outputting value variables correct using class work see reproduction", "d": "6/2018"}, {"body": "application elementui referencing different versions vue fault", "d": "6/2018"}, {"body": "would invalid first place validate watcher set invalid value back", "d": "6/2018"}, {"body": "validate data actually mutate target", "d": "6/2018"}, {"body": "\u542f\u52a8\u7684\u65f6\u5019\u5148 validate \u4e00\u904d", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "gu yiling notifications githubcom sent wednesday june vuejsvue cc nicefan author subject vuejsvue watch prevent data change receiving authored thread reply email directly view github mute thread", "d": "6/2018"}, {"body": "equal already discussed guide instead", "d": "6/2018"}, {"body": "justineo thanks", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "6/2018"}, {"body": "bug seems caused slot caching mechanism vdom algorithm new vnode tree old one despite different roots share reference named slot thus leading confusion patching process", "d": "6/2018"}, {"body": "workaround attach attribute element instead", "d": "6/2018"}, {"body": "marking duplicate reflect underlying issue", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "please provide boiled repros vue without external libraries backends reporting bugs", "d": "6/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "6/2018"}, {"body": "notice sentence wo nt trigger child updated", "d": "6/2018"}, {"body": "posva right got build observer dom change containing component possible vue support one hook like support child component update based current one way flow possible", "d": "6/2018"}, {"body": "nt observing dom updates scenarios data instead possible using bus store may better solution", "d": "6/2018"}, {"body": "got error transitiongroup customcomponent ca nt reproduce quite random transition group triggered socketio sometimes call fast crash error basically client wait request customcomponent take name parameter request sometimes request sent fast customcomponent crash refuse change investigate", "d": "6/2018"}, {"body": "azurons want reproduce reliably add artificial timeout like pseudo code", "d": "6/2018"}, {"body": "done callback optional used combination css optional mean optional call optional add add argument however call nt add vue knows wait css finish behaviour parameter similar libraries provide done callbacks testing frameworks like mocha jasmine jest ava etc pp", "d": "6/2018"}, {"body": "expected behavior arguments length must call callback", "d": "6/2018"}, {"body": "linusborg using css transition provide call make work example trying use css transition supposed work check originally intended accidental discovery provide using css transition working unexpectedly tend think browser limitation event looping css transition code run transition", "d": "6/2018"}, {"body": "doc says providing means intend explicitly control end timing transition eventually calling point disables cssbased auto transition end timing detection rule thumb listed arguments must call regardless type transition using", "d": "6/2018"}, {"body": "think making clear css transition working parameter css slidedownenteractive slidedownleaveactive transition ease overflow hidden js beforeenter el elstylemaxheight enter el elstylemaxheight afterenter el elstylemaxheight beforeleave el elstylemaxheight leave el elstylemaxheight afterleave el elstylemaxheight file another issue sorry description confusing", "d": "6/2018"}, {"body": "yeah would helpful current errors nt really indicate actually going well current setup likely problem vuetestutils though vuejsvuetestutils seems similar one", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "think liximomo right problem explained comment see code looks like transpiling plain js edit actually fixed time ago commit published version codesanbox uses version plugin upgrade dependencies project", "d": "6/2018"}, {"body": "thanks sqal also works raw render functions", "d": "6/2018"}, {"body": "see also", "d": "6/2018"}, {"body": "fyi bug introduced amp appears specific scenario root node conditional rendering expression reused new root sets prop reused dom nodes vue calls patch real dom abovementioned commits set children gets cleared immediately descendent element hook gets called corresponding dom node detached already therefore error would thrown line dom node reused returns true since given reproduction second attribute returns true first gets binding eg etc returns true", "d": "6/2018"}, {"body": "cases extreme performance requirement skilled programming language ecology important fragmentation technology avoided use performancerelated attempts", "d": "6/2018"}, {"body": "would breaking change vue required specific version typescript nt considered breaking happy help implement", "d": "6/2018"}, {"body": "workaround simply avoid using indom templates use string templates precompiled templates instead", "d": "6/2018"}, {"body": "easier workaround add vue attribute", "d": "6/2018"}, {"body": "using vuejs laravel also noticed problem php environment avoid using indom templates acceptable solution working could avoid using vuejs kind things better", "d": "6/2018"}, {"body": "suppose use php also valid workaround nt indom template", "d": "6/2018"}, {"body": "goodqd \u8fd9\u4e2a const asynccomponent gt \u9700\u8981\u52a0\u8f7d\u7684\u7ec4\u4ef6 \u5e94\u8be5\u662f\u4e00\u4e2a promise \u5bf9\u8c61 component import mycomponentvue \u5f02\u6b65\u7ec4\u4ef6\u52a0\u8f7d\u65f6\u4f7f\u7528\u7684\u7ec4\u4ef6 loading loadingcomponent \u52a0\u8f7d\u5931\u8d25\u65f6\u4f7f\u7528\u7684\u7ec4\u4ef6 error errorcomponent \u6beb\u79d2 delay timeout", "d": "6/2018"}, {"body": "able find error coming vue function errors always link instead error coming", "d": "6/2018"}, {"body": "ok working browser default setting tag names lowercase vue still looking elements upper case letters resulting working proof need replace everything else stay", "d": "6/2018"}, {"body": "workaround attach slot attribute element instead", "d": "6/2018"}, {"body": "way suggested jacekkarczmarczyk work numbers since converted strings way", "d": "6/2018"}, {"body": "numbers numbers strings means strings instead numbers", "d": "6/2018"}, {"body": "nt side effect vuenosideeffectsincomputedproperties vueset inside computed mutate data property vuex state", "d": "6/2018"}, {"body": "reproduction link broken due several failing resources hosted unknown maybe internal domain please provide valid reproduction described problem might related workaround subsequent discussions event loop issue likely revert always using microtasks evan stated", "d": "6/2018"}, {"body": "vue mixin including series useful enhancements vue components props transform props enumtype props numerictype props listen receiving props twoway data binding props hope helps", "d": "6/2018"}, {"body": "sodatea willing work however need small amount guidance core team wants see high level opinion incorrect reverted however suspect well received", "d": "6/2018"}, {"body": "likely reverted according discussion several related issues", "d": "6/2018"}, {"body": "justineo specific issue tracking discussion also could label nexttick related label make sure considered alongside nexttick issues", "d": "6/2018"}, {"body": "think syntax would better object embedding", "d": "6/2018"}, {"body": "going wontfix behavior difference functional normal components explicit since beginning functional components eagerly rendered parent context stateful ones passed placeholder node instantiated patch likely change behavior make consistent ie making functional components behave like normal stateful components however requires significant changes functional components work would breaking change", "d": "6/2018"}, {"body": "also related regression found bootstrapvue", "d": "6/2018"}, {"body": "closed wontfix rely current behavior feature request stably worked aroud userland though still feels hacky close gon na implement core", "d": "6/2018"}, {"body": "heads likely going revert change commit led regression revisiting change believe technically incorrect support passing raw array mean discarding named slots information use case creating transparent wrappers pass named slots asis work around js helper explicitly passes named slots passed function mapslots h slots return objectkeys slots map name gt return h template slot name slots name const compa functional true render h slots return h compb mapslots h slots obviously verbose workaround necessary ensure correct behavior common use case also consider easier way pass named slots render functions pretty much like", "d": "6/2018"}, {"body": "ok thanks warning", "d": "6/2018"}, {"body": "approach use method first import class definition implements method test use", "d": "6/2018"}, {"body": "think comfortable vuex actions wish implemented asap vuexactionsjs javascript async postsomething commit params await requireauthaction mainjs", "d": "6/2018"}, {"body": "\u5e94\u8be5\u662f vbind props", "d": "6/2018"}, {"body": "may want wrap inline function calling handler custom data something like", "d": "6/2018"}, {"body": "correct points input nt work even polyfilled problem hit replacing change solves issue issue saved ton time thanks", "d": "6/2018"}, {"body": "getting error line fix use typescript path mapping exactly use", "d": "6/2018"}, {"body": "thing yet", "d": "6/2018"}, {"body": "another possible workaround besides using using grid could set something like html child content child content child content render following html child content child content child content", "d": "6/2018"}, {"body": "yes solution still ends parent element whole point able render without parent aka fragment", "d": "6/2018"}, {"body": "parent element virtual one confused mean render element shouldnt could like fragment absolutely whole issue rendering extra element necessarily using another component wrapper", "d": "6/2018"}, {"body": "elements example render parent element sure mean top hit google posting example nt mentioned work around actual fragments example posted works use case", "d": "6/2018"}, {"body": "wo nt work sense portal component adds wrapper element stateful component still constrained solution good case used definitely really need parent elements stuck vue actually adds functionality checking hack maybe suffice time", "d": "6/2018"}, {"body": "sorry posting stupid answer still rookie vuejs think kinda found suitable solution supports requirements fragment root functional guys check experimental jsfiddle", "d": "6/2018"}, {"body": "understanding vdom nt allow ssr main problem finding parent fragment enabled node seems impossible find exact place inserted nt know mystery mesmerizing anybody help would welcome", "d": "6/2018"}, {"body": "ynk done adjustments solution allowed fix breakpoint component nothing rendered elements add ssr known issues unless fix one well", "d": "6/2018"}, {"body": "thanks lot feedbackscorrections trying hard work ssr case really crack yet", "d": "6/2018"}, {"body": "added totally transparent within tree parent children linked correctly without vfragment node anyone reviewcorrectcontributetossr", "d": "6/2018"}, {"body": "hit trying use spinner component look greensock", "d": "6/2018"}, {"body": "faragos accomplished passing slots grandchild uses slotscope", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "shameless copypaste comment issue mentioned currently running kind issue extending component purpose render something canvas parent component component called canvasbox want extend component add separate logic specific use case use case also need add elements canvasbox slots extending template least filling slots without proxying props events etc like justineo said introducing another language like pug able looks overkill introducing native vuejs way filling slots would amazing btw ca nt include canvasbox component new component template logic canvasbox created hook rendering canvas using canvasbox component template would cause run logic twice last least would also love easy way extending template least filling slots component extended", "d": "6/2018"}, {"body": "also want make proposal eyes better syntax follows html default header html import base basevue export default name somecomponent extends base", "d": "6/2018"}, {"body": "dvdbot straightforward obvious remains problem default slot though fact currently multiple template blocks nt make sense vue related note feature wanted could define subcomponents locally eg html import thing thing import subthing subthing export default thingextend components subthing subthingextend template subthingtpl currently running kind issue extending component purpose render something canvas incidentally encountered similar scenario using rendering vue datahandling backbone", "d": "6/2018"}, {"body": "default slot gt", "d": "6/2018"}, {"body": "currently using cheaty workaround p works p", "d": "6/2018"}, {"body": "understand arguments actual extend template built language using parent version template initializes another extra unnecessary component nt optimal performance agree weird nt built language avoid extra component simplify props passing however pattern using parent element slot quite easy since one first google results topic clean solution worked well us vue base component special label export default name basecomponent props label type string required true vue inheriting component extraprop extraprop import basecomponent basecomponent export default name inheritingcomponent components basecomponent extends basecomponent inheritattrs false props extraprop type string default goodbye data return somemodel test usage output html special hello world extraprop nevermind", "d": "6/2018"}, {"body": "problem running using example bbugh got logic created hook draws something canvas using example created hook called base extending component want drawing done twice also ca nt override created hook without adding custom merge logic adding custom merge logic global local component far know adding custom merge logic may cause unfurseen side effects", "d": "6/2018"}, {"body": "cheated props part using following using vbind props", "d": "6/2018"}, {"body": "also extending basecomponent", "d": "6/2018"}, {"body": "bbugh covered approach initial rebuttal rejection called big bug waiting happen reason dvdbot hooks watchers nt aware still nt solve problem", "d": "6/2018"}, {"body": "comment block code vuejs", "d": "6/2018"}, {"body": "realize properly tracking nested substructure required convert however nt really understand overwriting whole prop object instance inside component still cause reactive changes changing property nt question stackoverflow example", "d": "6/2018"}, {"body": "thanks", "d": "6/2018"}, {"body": "hi sqal problem fiddle amp solution fiddle components names sure say happens given home component name kindly clarify thanks", "d": "6/2018"}, {"body": "built message would far useful told prop value passed obvious information include imo would fulfill probably people need custom message indicated", "d": "6/2018"}, {"body": "although behaviour worked around agree would useful allow directives access providers use case wizard component component trigger instructional animation presents hints tooltips point could achieved wrapping component instruction component verbose unnecessary would easily allow contextual help opinion instance component responsible describing help information rather instruction wrapper written library sidesteps shortcomings work described ideally would like use regular vue logic accomplish results", "d": "6/2018"}, {"body": "current behaviour goes directly docs bug ask see event names sync modifier sections docs state exact opposite shortdiv made pr could released running bug large client would great could remove custom event patches go production", "d": "6/2018"}, {"body": "linusborg everytime diffing slot content find changes slot content would diffing slot content twice render function child run new vdom diffed would possible introduce new watcher boundary api would internal implementation template slot content would compile way slot content would nt even rerender data depends nt change since nt rerender nt need diffed", "d": "6/2018"}, {"body": "show another usecase bumped vue computed properties currently ca nt take arguments instead want use calculated data loop generally need pass data computed resort one using regular method however using regular method means data recomputed every render bad performance create separate functional component list item create instance component item list component rerender data passed changed want however putting template component ideal usually small snippets nt really warrant template b component uses template needs file makes solution feel even heavier already solution came component calculate data render html via default slot thereby forgoing template altogether get crux issue pass content slot child component always rerender along parent means data also recalculated every single totally negates benefit got using regular method demo action potential solution would property within child component component longer functional rendering big list using functional components makes huge difference", "d": "6/2018"}, {"body": "create computed prop returns array total order values orders", "d": "6/2018"}, {"body": "jacekkarczmarczyk problem orders changes order totals recalculated", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "also interested vue implementing callback refs much powerful opinion situation workaround resorted storing reference whose component instance want ref delegating get ref later time unfortunately way knowing instance createdmounted undefined pulling instance instead relying push framework", "d": "6/2018"}, {"body": "hi understand reason refuse change detect way simulating nt providing necessary properties problematic still think code robust always detect right env matter variables users simulate always special ones follow rule great framework tolerant", "d": "6/2018"}, {"body": "error annoying white hole fooder template", "d": "6/2018"}, {"body": "handle problem way barvue common cols special col export default props value name bar computed get return set val emit input thisvalue val provide provide return bar slotvmodel extends component make contain define components special dirty export default name inject bar created set thisbarvalue dirty last use slot contains col wrapper element problem define multi col components compose meet different requirement method somehow dirty help hope help someone still struggling problem", "d": "6/2018"}, {"body": "justineo worked thanks", "d": "6/2018"}, {"body": "zerogog arguments\u662f\u4f5c\u7528\u57df\u5185\u53ef\u8bbf\u95ee\u7684\u53d8\u91cf", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "reading fix issue thanks sethdorris", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "solution bug", "d": "6/2018"}, {"body": "seconding steffende question say following template want form transition vuex state changes add computed property retrieve use computed property key form like changes form transition like want data components b reset elements destroyed rerendered way trigger transition form without destroying data child components possible without moving data vuex state", "d": "6/2018"}, {"body": "salomoneb tried keepalive", "d": "6/2018"}, {"body": "ayzagen since form nt bound state data example wrapper reactive elements inside placing around nt work also nt work internal components form created destroyed happens children also remounted", "d": "6/2018"}, {"body": "currently running kind issue extending component purpose render something canvas parent component component called canvasbox want extend component add separate logic specific use case use case also need add elements canvasbox slots extending template least filling slots without proxying props events etc like justineo said introducing another language like pug able looks overkill introducing native vuejs way filling slots would amazing btw ca nt include canvasbox component new component template logic canvasbox created hook rendering canvas using canvasbox component template would cause run logic twice last least would also love easy way extending template least filling slots component extended", "d": "6/2018"}, {"body": "also want make proposal eyes better syntax follows html default header html import base basevue export default name somecomponent extends base", "d": "6/2018"}, {"body": "eink device doc pdf epub would much appreciated though know requested many", "d": "6/2018"}, {"body": "google brought relevant stack overflow thread thought share workaround implied thread vbind data attribute format javascript string afraid understanding vue internals works single file components alterations webpack setup", "d": "6/2018"}, {"body": "used still trigger changes", "d": "6/2018"}, {"body": "oh made mistake actually works", "d": "6/2018"}, {"body": "\u73af\u5883\u9047\u5230\u8fd9\u4e2a\u95ee\u9898\u4e86", "d": "6/2018"}, {"body": "got problem using props rended attributes directives seems jsx work", "d": "6/2018"}, {"body": "fuck painful", "d": "6/2018"}, {"body": "dimitrikoenig also similar requirement want easy customization template modifications needed override templates tried solution given dimitrikoenig somehomw working dimitrikoenig one quick question solution file need add override id added contents indexhtml work please explain bit relatively new vuejs vue finds xtemplate dom override id take example", "d": "6/2018"}, {"body": "workaround used numbers empty string cleared following work like default maybe help someone else property cast tostring typescript", "d": "6/2018"}, {"body": "would love null would make consistent return string bound create problems projects one wants workaround instead fix consistent type empty models null best suited", "d": "6/2018"}, {"body": "returning mentioned fergaldoyle modifier would cool", "d": "6/2018"}, {"body": "case anyone else comes wanting ended using lodash lodash get function lets things like make get function available vue entryjs vue template use want lodash available vue templates use vuelodash understand evan want vue templating morph mutant language nt agree nullable properties subproperties code smell especially way design vuex state lookups id additional information record may may exist luckily vue seems flexible enough anything js within template good get hang", "d": "6/2018"}, {"body": "still problem first load basically made wrapper component select uses value input instead vmodel first load wrapper component random chance whether correct value displayed select whether empty know value displays put value wrapper component right next also change value vmodel works every time must still sort race condition going using vue", "d": "6/2018"}, {"body": "hi arrived exact problem think cases like listening events slot could good solution", "d": "6/2018"}, {"body": "could also use use case trying use one date picker components within data table component like date picker able emit event keyvalue pair data table update date pickers get slotted appropriate places data table component slot render anything restrict event listeners", "d": "6/2018"}, {"body": "exactly problem scoped slots help case modal parent get scoped slot closehandler property kind method close modal please adapt needs usecase uses uiv bootstrap modal javascript buttontext import modal btn uiv export default name modalbutton components modal btn props buttontext string title string data return open false methods closehandler function thisopen false form whatever inner container dispatch event handle outside close event case mine called productselected use component following allow wire parentchild components without unneeded coupling", "d": "6/2018"}, {"body": "solution similar aggrosoft vue expects child accepts patchild prop function", "d": "6/2018"}, {"body": "workaround nt work well without ie vertical lists", "d": "6/2018"}, {"body": "rezapouya commented jan exactly pita", "d": "6/2018"}, {"body": "type error please help trouble guyz", "d": "6/2018"}, {"body": "closed issue different problem use forumvuejsorg questions please", "d": "6/2018"}, {"body": "yes problem understand means nt know fix going components find issues kind lot work", "d": "6/2018"}, {"body": "bbugh totally agree similar case formatting ibans would nice declerative way simply put franciscolourenco maybe someone could put reasoning behind supported framework becomes obvious", "d": "6/2018"}, {"body": "tomkaltz iva similar issue manage solve issue endup acheive going", "d": "6/2018"}, {"body": "fnlctrl thank much looking kebab notation workaround last hours need docs think", "d": "6/2018"}, {"body": "fnlctrl thank people wondering object data looks like like", "d": "6/2018"}, {"body": "thanks simplesmiler work", "d": "6/2018"}, {"body": "garethtigfreight golly g man saved night ddd", "d": "6/2018"}, {"body": "wanted chime similar solution using nuxt framework vue setting mediastream thru vuex nt work using state webcam initiated thru button click nonchild component needed set mediastream video object component method runs click button toggle view well kick ended probably cleanest let constraints windowconstraints audio false video facingmode user since component need set source already createdmounted fired usual worked like wanted", "d": "6/2018"}, {"body": "zhangquxi \u6211\u8bd5\u8fc7\u8fd9\u6837\u53ef\u4ee5\u66f4\u4f18\u96c5\u4e00\u70b9clone prop", "d": "6/2018"}, {"body": "support officially using large object nt need reactivity component disabling unused reactvity reduced memory object size using magicdawn solution compatibility issue mechazawa best solution think solution setting false works makes vue crash tries set real", "d": "6/2018"}, {"body": "style backgroundimage url imgurl hotelimagename define imgurl data function", "d": "6/2018"}, {"body": "using still get error creating standalon custom component webpack nt know may causing problem prop parsing", "d": "6/2018"}, {"body": "link page nt work anymore", "d": "6/2018"}, {"body": "unofficial nt endorsed vue team give full disclaimer coauthored clean fast stable truly native transpiles react native", "d": "6/2018"}, {"body": "sanketsahusoft compiling react native feels kinda dirty would rather prefer nativescriptvue compiling native code without need involve react middleman", "d": "6/2018"}, {"body": "andrewbogdanovtss yeah may sound dirty nativescriptvue exact thing instead using react native bridge using nativescript bridge though also boils personal choice writing styling", "d": "6/2018"}, {"body": "seems still issue usually checkboxes dont send data empty serialized send run example check checkbox requred pass actually value even jordanlev tbh nt understand workaround hidden input", "d": "6/2018"}, {"body": "jossnaz seeing false value sent part actual submitted form data browser mean json data serialized vue component workaround hidden input opposite situation describe want browser send false value form data checkbox unchecked wanting value sent use technique", "d": "6/2018"}, {"body": "would useful want refer member string key eg perhaps using loop generate string keys", "d": "6/2018"}, {"body": "huge problem needs addressed somehow im using laravel needed infinite scrolling table load rows per batch ive using vue entire project using vfor table quickly noticed couldnt handle large amount rows without slowing entire page also scrolling becomes laggy sticky workaround dynamically create table html insert using vhtml terrible workaround code extremely messy hard work absolutely love using vuejs massive setback need interactivity every single cell scrap vfor write custom directive simply renders table innerhtml nt someone vuejs team written us big deal", "d": "6/2018"}, {"body": "soletiq really need display thousands rows time get much better performance using tables", "d": "6/2018"}, {"body": "works slightly better even rows start notice lag scrolling one else find gigantic issue one build application infinite scrolling like feed posts similar facebook twitter scrolling behavior would feel terrible hundred posts solution found generate html application uses vuejs entirely terrible solution", "d": "6/2018"}, {"body": "soletiq seen", "d": "6/2018"}, {"body": "works slightly better even rows start notice lag scrolling rows nothing thousands div elements penalty performance sure issue somewhere else", "d": "6/2018"}, {"body": "extremely simple table certainly advanced either columns use vif else elements number conversions small logoicon images removing images nt help equally significant problem using vfor scroll bottom load rows takes time batch insert rows table since handle increasing amount rows get hundred rows actually take seconds insert next batch whereas generating html load new rows half time soletiq seen try thank", "d": "6/2018"}, {"body": "could post simplified reproducible use case", "d": "6/2018"}, {"body": "gif scrolling first batch scrolling much smoother gif scrolling batches rows rows look closely scrolling glitchy smooth gets worse load rows also really important mention changing state values extremely slow example click button brings modal simply changes state open false open true takes amount rows table furthermore loading batches takes increasingly longer loading times example loading next batch amount rows takes almost would take maybe changed table elements divs little performance impact im using vue material currently tables code im using vfor still switched datalength instead data stored storing index im retrieving value column im using vueperfectscrollbar scrolling main content done everything think solution terrible solution generating html javascript", "d": "6/2018"}, {"body": "soletiq could post reproducible example", "d": "6/2018"}, {"body": "using declare static data vuetify datatable headers used templates change nt need reactive vue typescript declarations changed account theses cases adding additional properties component declaration triggers unkown property error would try nt know exactly theses declarations work yet", "d": "6/2018"}, {"body": "actually possible ams documented", "d": "6/2018"}, {"body": "combo key", "d": "6/2018"}, {"body": "got problem actually using object confirm passed string", "d": "6/2018"}, {"body": "create array like data ab abc abcd datta qweqweqwe datta qweqweqwe datta qweqweqwe", "d": "6/2018"}, {"body": "try bind array variable might need uses spread syntax", "d": "6/2018"}, {"body": "", "d": "6/2018"}, {"body": "simply use work", "d": "6/2018"}, {"body": "found way solve problem maybe try", "d": "6/2018"}, {"body": "maoxiaoke fyi answer vuejs compliant", "d": "6/2018"}, {"body": "nexttick called dom changed correct ok use nexttick settimeout ok case", "d": "6/2018"}, {"body": "frizar well according doc correct defer callback executed next dom update cycle think seems much like idea works since least documented somewhere anyway last months nt deal kind hack except unit tests may useful dealing asynchronous stuff think use hacks wrong", "d": "6/2018"}, {"body": "similar usecase benjarwar also want position element based offset another element currently retrieving element via inside computed property vue seems pick update changes probably sure goes behind scenes call returns new object way around nwaughachukwuma also favor way think would practical realize could retrieve data interval update component data instead using computed property however seems computationally expensive since would also reretrieve data nt explicitly need since use component question many times per site potentially hundreds nt want recollect often necessary edit meantime recommend dirty hack opinion relatively little boilerplate although said dirty let recompute demand", "d": "6/2018"}, {"body": "get reconsideration functionality think several use cases outlined would provide less hacky way getting values especially dealing responsiveness needing calculate layout styles across multiple dom elements get could ripe abuse unintended side effects current workarounds feel antipatterny providing explicit method", "d": "6/2018"}]