[{"title": "uncaught typeerror read property enter undefined using transitiontoroute", "body": "getting uncaught typeerror read property enter undefined using transitiontoroute controller transitiontoroute function controller transitiontoroute function target may either another controller router var target get target var method targettransitiontoroute targettransitionto return methodapply target arguments target variable assigned view instead controller router nt know issue using transitiontoroute wrong way need help edit function found edit function calls get function controller object looking target key log thistarget transitiontoroute prints route class log variable get function get view class clue happening", "num": "12251", "d": "8/2015"}, {"title": "remove unwatchkeys", "body": "hello closed possible remove function", "num": "12249", "d": "8/2015"}, {"title": "setupcontroller called route refresh", "body": "hello sure related based documentation thought setupcontroller get called route refresh calls given following example nt appear case import ember ember export default emberrouteextend model function params gets called initial load refresh return thisstorefind mymodel paramsmymodelid setupcontroller function controller model gets called initial load refresh thissuper controller model actions refreshroute function thisrefresh insight thanks", "num": "12244", "d": "8/2015"}, {"title": "bad error closure actions wrapping missing functions", "body": "using closure actions wrap function current context function provide undefined receive nonhelpful error message time invoke closure wrapped action ie example snippet invoking via throws following error demo", "num": "12240", "d": "8/2015"}, {"title": "aliasmethod marked private", "body": "emberaliasmethod marked private without notice remove fact private", "num": "12238", "d": "8/2015"}, {"title": "alias property returns initial value source property even source property updated", "body": "good bug report unsuccessfully spent many hours prepare jsbin decided open issue private app computed alias always returns undefined regardless value source property initial source property value instead current value jsbin unsuccessfully tried create demonstrate problem app always null jsbin works could timing issue already workaround mentioned jsbin would really like avoid committing bisected problem pr ideas", "num": "12234", "d": "8/2015"}, {"title": "reregistration initializers", "body": "looking using acceptance tests stumbled onto error seems root cause use routing service eg gets cached application registry restart picked initializer running throws error worked around particular instance similar issue crop registration transforms ember data wondering rerunning initializers part resetting application feel like semantically instance initializer reran thoughts seems like could get faster test times without completely recreate application time blocks us able use new instances right super simple repro case jsbin", "num": "12231", "d": "8/2015"}, {"title": "problem view deprecation", "body": "possible add class binding div element route inserts eg without using routed view understand guide suggests binding attribute inside template nt work div automatically inserted ember using", "num": "12225", "d": "8/2015"}, {"title": "may want multiple symbol implementations", "body": "likely purposes fast access fast creation slightly slower access use native possible quick r amp function intern str var obj obj str var key obj key str return key return str function symbol debug return intern debug id guidkey mathfloor mathrandom new date var id var guidkey intern ember new date new date gettime function debug return debug id id guidkey function debug return intern debug id id guidkey function debug return intern debug id id guidkey function debug return debug id id guidkey function debug return debug id id guidkey var zeroa symbol bye var zerob symbol bye var onea symbol bye var oneb symbol bye var twoa bye var twob bye var threea bye var threeb bye var foura bye var fourb bye var fivea bye var fiveb bye require bench name symbol fn function return symbol bye name symbol fn function return symbol bye name fn function return bye name fn function return bye name fn function return bye name fn function return bye name compare symbol fn function return symbol bye symbol bye name compare symbol fn function return symbol bye symbol bye name compare fn function return bye bye name compare fn function return bye bye name compare fn function return bye bye name compare fn function return bye bye name compare existing symbol fn function return zeroa zerob name compare existing symbol fn function return onea oneb name compare existing fn function return twoa twob name compare existing fn function return threea threeb name compare existing fn function return foura fourb name compare existing fn function return fivea fiveb results note internal usages easily possible create faster symbol replacements cross platform faster etc ultimately would prefer symbols uniform experience also important still need add lookup hit lookup miss benchmarks", "num": "12223", "d": "8/2015"}, {"title": "canary actions nt bubble route using rendertemplate", "body": "following setup render content modal outlet javascript rendertemplate controller model thisrender actions actionname something template found errors requested action nt found inside controller either autogenerated created manually", "num": "12217", "d": "8/2015"}, {"title": "rerendering based layoutname broken", "body": "component renders number different layouts based certain conditions flows ember accomplishing updating calling updated app old template still rendered even though layoutname updated created jsbins illustrating approximate issue seeing difference examples attributes seem updating properly whereas app seeing update correctly changed either case examples app fail render properly hoping solution working example broken example", "num": "12216", "d": "8/2015"}, {"title": "embercomputedsort serious flaw", "body": "spending entire morning finally figure kind hard explain let start demo notice component uses two instances component dom clicking button move item causes one component instances update understand look implementation first important computed macro creates new computed property declaration component instance see reducecomputedmacrosjs means every component instance type ultimately share computed property next every time value computed clears prior observers rebuilds see reducecomputedmacrosjs inlies problem since computed property lives class clears observers instances component make sense anyone", "num": "12212", "d": "8/2015"}, {"title": "embercomputedmap issues", "body": "see jsbin clicking change color causes version add duplicate values observe value change actually changes four times", "num": "12210", "d": "8/2015"}, {"title": "embercomputedsort fails null list worked", "body": "target null causes crash branch worked ember branch ember ember", "num": "12207", "d": "8/2015"}, {"title": "switch assert deprecate etc internal api modules", "body": "x packages x container x ember x emberapplication x emberdebug x emberextensionsupport x emberhtmlbars x embermetal x embermetalviews x emberrouting x emberroutinghtmlbars x emberroutingviews x emberruntime x embertemplatecompiler x embertesting x emberviews x switch defeatureify babelpluginfilterimports x remove emberjsbuild x audit production build output confirm debug statements properly stripped", "num": "12204", "d": "8/2015"}, {"title": "override ember provided helpers", "body": "versions prior defined new helpers registered ember provided helpers like similar approach nt seem working exporting implementation seen bug possible register new helpers ember reserved ones longer allowed", "num": "12201", "d": "8/2015"}, {"title": "discussion reopen classes instance initializers easily lead memory leaks", "body": "joshvfleming recently ran across several cases developers reopening classes within instance initializers retaining application instance per initialization retaining look obvious cases cases obvious reveals self tests fastboot environments lead something looked like following know past talks allowing classes reopened initialized actually working rewriting coreobject throw class reopened post initialization know series path adopting classes wondering prevent footgun existing core object feature flag", "num": "12200", "d": "8/2015"}, {"title": "possible windows ember cli conflict evident loading css assets", "body": "making notable changes css stylesheets longer loading receive following error reverted code back previously working version throwing error run cli problem persisits also longer create new project totally different directory bowerjson emberclibuildjs var emberapp require emberclilibbroccoliemberapp moduleexports function defaults var app new emberapp defaults lessoptions paths bowercomponentssemanticui return apptotree sure related run ccleaner registry morning error appeared", "num": "12199", "d": "8/2015"}, {"title": "ca nt opt properties shadowed attributes", "body": "undertstand intention move parameters separate namespace internal component state currently separation triggered invoking component angle brackets however separation attrs properties much component design whether shadowing happens nt depend component user invokes component currently trying take advantage split attrs properties proving hard way like property even mixin signal want attrs separate properties code looks like didreceiveattrs thissuper var columns thisgetattr columns check columns translating necessary internal format thisset columns columns unfortunately didreceiveattrs run property columns set original unprocessed value tried inside several attempted hacks ca nt seem shake shadowing", "num": "12196", "d": "8/2015"}, {"title": "uncaught typeerror read property sendevent undefined", "body": "getting following error upgrade also verified happens later versions ember well nt tracked causing issue yet nt able create jsbin shows behavior come across piece code backburner let see bit state app happening help would greatly appreciated thanks", "num": "12195", "d": "8/2015"}, {"title": "emberrunlater halting certain circumstances", "body": "twiddle demoing also tested gist found demonstration timer value updated via continuously running calls halt update value full duration expired replaced simple halting experience problem assist way please let know heart", "num": "12193", "d": "8/2015"}, {"title": "spurious misleading using deprecated template property view warning printed", "body": "see sample bin enablelegacyviewsupport true set two views toggled button views except withlayoutview layout property set every time withlayoutview displayed using deprecated template property view deprecation warning printed console notably views render templates set via xhandlebars script tags instead via template properties layout property makes difference warning printed actually sure desired behaviour seems one way another nt driven presence layout", "num": "12191", "d": "8/2015"}, {"title": "missing controller keyword deprecation", "body": "template using keyword functions correctly without deprecation warning causes assertion compile time canary", "num": "12189", "d": "8/2015"}, {"title": "esperanto deprecated", "body": "starting new ember project get following warning", "num": "12185", "d": "8/2015"}, {"title": "tagname application template", "body": "application template adds div page ends looking like want set tagname application template nothing nt want content wrapped div messes css previously done creating viewsapplicationjs setting tagname views deprecated without views", "num": "12183", "d": "8/2015"}, {"title": "query params reset default values initial render transitionto called beforemodel", "body": "hopefully title js bin say tl dr call beforemodel initial load hitting refresh button query params reset default state", "num": "12169", "d": "8/2015"}, {"title": "render docs lost rewrite", "body": "see original docs docs added", "num": "12168", "d": "8/2015"}, {"title": "error event substate", "body": "way handle errors include action route errors generic unauthorized forbidden etc handled application route used work perfectly exactly sure broke probably documentation following example actions error function error transition error amp amp errorstatus error substate parent routes handle error return thistransitionto modelnotfound statuserrorerrorerrorserrorerrors thistransitionto login occasion error still logged return true error gets logged twice first two could submit pull request update documentation third one seems possibly issue also change number string intended", "num": "12166", "d": "8/2015"}, {"title": "multilevel aliases nt work", "body": "working embertwiddle", "num": "12165", "d": "8/2015"}, {"title": "wrong convention event names", "body": "documentation ember written necessery use dashed name convention events see actually still uses old convention listed see example bug mistake docs ember", "num": "12162", "d": "8/2015"}, {"title": "property nt access synced dependencies", "body": "code ember js assignedbundles embercomputedreadonly controllerspatientassignedbundles allassessments embercomputedreadonly controllersapplicationallassessments otherassessments function var bundleassessments thisget assignedbundles mapby assessment return thisget allassessments reject function assessment return bundleassessmentscontains assessmentget id property allassessments assignedbundles get error check afterwards ember inspector correctly array something seems computed anyone else seen", "num": "12161", "d": "8/2015"}, {"title": "replaces sortablemixin ember", "body": "embersortablemixin use etc", "num": "12160", "d": "8/2015"}, {"title": "variable helper shares name helper always wins", "body": "calling helpers unambiguous template hash positional parameter call helper otherwise lookup variable see tracking issue cross posted cc stefanpenner", "num": "12155", "d": "8/2015"}, {"title": "pod routable component ignored next routejs directory", "body": "using pods routable components thanks pr application would love definition routable component sit next component like controllers example structure routable component follows map route render component using however component object never actually created conditional entered defined route template path template rendered without using would thought defined options passed render method component exists satisfies requirements glimmer component prefer component fallback template suggest removed conditional statement least ignored defined options component matches routable component requirements", "num": "12154", "d": "8/2015"}, {"title": "read property foreach undefined", "body": "upgrading ember version console show error first thought problem vendor js could deprecated code something one library vendorsjs nt work created new clean ember app also changed version ember console still showing error even clean bootstrapped application guess problem lays emberdata console shows", "num": "12153", "d": "8/2015"}, {"title": "stack overflow controller action sends action w name", "body": "action handler call controller handler order invoke route handler instead invoking action route controller action reinvoked stack overflows twiddle illustration courtesy locks trying use pattern pass componenttriggered action route without use two different action names seems confusing", "num": "12152", "d": "8/2015"}, {"title": "glimmer errors lifecycle hooks leave app unrecoverable state", "body": "glimmer runtime error occurred ember able continue properly executing clean going routes appears original exception constantly thrown code executed", "num": "12150", "d": "8/2015"}, {"title": "routeintermediatetransitionto public", "body": "routeintermediatetransitionto function currently marked private unfortunately way manually transition error state attempt straight url changed pretty gross error template error event handler pretty much forced pattern see", "num": "12149", "d": "8/2015"}, {"title": "template value updated value alias aliased property", "body": "reproduces error occur version bound template updated template value changes however controller properties updated correctly specific case seems problem affects rendering engine however experienced similar error aliased properties depends cps still investigating", "num": "12148", "d": "8/2015"}, {"title": "really slow hanging behaviour transitioning away route", "body": "nt really able create smaller app reproduce yet started working gui rewrite prototype internal open sourced point application work currently running random data using emberclimirage repo transition away anywhere else really browser hangs bit get reaaally big flamegraphs jquery events backburner stuff overall screenshot bit zoomed reproduce behavior firefox chrome maybe something terribly evil wrong", "num": "12147", "d": "8/2015"}, {"title": "classnames components output class twice dom", "body": "set classnames component output twice dom jsbin example expected dom generated dom", "num": "12146", "d": "8/2015"}, {"title": "documentation route transition object", "body": "mentioned several times doucumentation since defined tildeiorouterjs nt documentation ember brief documentation route beforemodel however everything particular looking error mentioned nt even know available cc locks", "num": "12142", "d": "8/2015"}, {"title": "bug emberselect longer defaults first option value undefined", "body": "jsbin illustrates issue change ember version longer see red show", "num": "12141", "d": "8/2015"}, {"title": "documentation languages", "body": "brazilian wonder initiative translate documentation something useful could translate portuguese translator english would good increase size community brazil could help", "num": "12140", "d": "8/2015"}, {"title": "refreshmodel config property nt work properly safari", "body": "seems issue using queryparams setting refreshmodel property true safari investigation appears refreshes page quickly new query params lost seemed fixed issue adding timeout millisecond sure better solution issue temporary fix queryparamsdidchange function changed totalpresent removed var qpmap propertygetget qp map", "num": "12139", "d": "8/2015"}, {"title": "bound style attribute warnings", "body": "sure bug upgrading app noticed lot following warnings warning binding style attributes may introduce crosssite scripting vulnerabilities please ensure values bound properly escaped release blog post ember seemed suggest used could avoid warnings see ember released escaping content built quick jsbin isolate attribute binding question seems like anytime style binding utilizes string interpolation template eg receive warning workaround interpolation computed property bind style looking guidance bug", "num": "12137", "d": "8/2015"}, {"title": "logic determine local lookup incorrect", "body": "property present component component invoked without block present completely ignore layout demos also taking looked container via consideration thanks reporting", "num": "12134", "d": "8/2015"}, {"title": "glimmer component quotedunquoted attributes", "body": "appears glimmer components issue quoted vs unquoted attributes toplevel elements", "num": "12133", "d": "8/2015"}, {"title": "canary throws stack overflow minified", "body": "introduced demo using believe krisselden fix submitting pr soonish", "num": "12131", "d": "8/2015"}, {"title": "glimmer components checklist", "body": "post merge pending items fix toplevel case make sure people nt accidentally use oldstyle apis toplevel elements glimmercomponent refactor separate conceptually different code paths happen share code buildcomponenttemplate component node manager make recursive invocation work component toplevel element inside layout discuss path properties vs attributes plausibly aligned normal elements components make sure set glimmercomponent fix skipped tests make glimmercomponent export module add flag allow component author use newsemantics provide deprecation component invoked curlies providing bridge", "num": "12129", "d": "8/2015"}, {"title": "computed properties getting property changes components didreceiveattrs defined", "body": "title says remove didreceiveattrs computed properties able detect changes fire another workaround really need didreceiveattrs defined explicitly set property component rather passed templates guessing somehow related entirely sure yet expected behavior using ember embertwiddle", "num": "12127", "d": "8/2015"}, {"title": "display api ember lt", "body": "since released ca nt change api version api links previous advance", "num": "12126", "d": "8/2015"}, {"title": "updated value set substring typed value", "body": "js bin type input see happens cut characters possibly glimmer sees value chars nt think needs update input", "num": "12125", "d": "8/2015"}, {"title": "documentation code example match description", "body": "description example states action called upon blur example uses", "num": "12122", "d": "8/2015"}, {"title": "difference way binding behaviour", "body": "upgrading app noticed following difference way binding behaviour ember application template following gist prints shanya followed deepan however gist prints shanya followed shanya difference expected versions", "num": "12119", "d": "8/2015"}, {"title": "startup container service integration tests", "body": "need integration testing service depends another service requires app initializers run starting essentially want start app visit views problem unless visit route instance initializers nt run could throw visit start integration test ideal force instance initializers run run setup code service test triggers changes view things get messy start app fully without visiting view perhaps better way perform service integration test", "num": "12114", "d": "8/2015"}, {"title": "nearestoftype marked private", "body": "marked quick search could find anything internal ember accessing beyond tests explicitly testing seems go desire components encapsulated however run across addons use seems like either marked public become deprecated future method", "num": "12110", "d": "8/2015"}, {"title": "ember error string key calling use keys", "body": "receiving error seemingly random interactions googling could come error related using helper without key checked every single use code key set debug stacktrace lead code either idea keep digging using release ember ember data", "num": "12109", "d": "8/2015"}, {"title": "emberviewviews nt include components", "body": "contains component instances know nt really public recommended use one valuable debugging tools style views able grab instance view poke state via console helped solve hundreds bugs sure glimmer complicates beyond really nice mechanism easily access component instances debugging", "num": "12108", "d": "8/2015"}, {"title": "sticky query params broken loading substate", "body": "related route dynamic segment query parameter child route slowloading model loading template query parameter longer sticky fixed js error occurring nt fix underlying problem far trace back transition inside setup route null nt fiddle ember canary loading substate correct sticky query params fiddle loading substate added query params longer sticky", "num": "12107", "d": "8/2015"}, {"title": "feature request promise willdestroyelement", "body": "currently way animating component away component closed seems something like indeed clone element put correct place animate would really nice could promise could stop element destroyed resolve passed react something similar possible way internals works atm", "num": "12105", "d": "8/2015"}, {"title": "possible regression query params alias behavior changed", "body": "following code js controllerjs queryparams displaymode mode routejs queryparams mode replace true however started giving error allowed one controller property map query param key map fix mapping one controller properties different query param key via config option eg changing route following solved issue", "num": "12102", "d": "8/2015"}, {"title": "missnaming filenames", "body": "situation reproducing mdnworldclock view select depreciated solution use ember serve gives livereload server serving deprecation helper deprecated favor htmlbarsstyle bound attributes isbindattrmodifier userslodocumentsember wc userslodocumentsember wc head search file deprecerrors using cli", "num": "12101", "d": "8/2015"}, {"title": "concatenatedproperties works obliged", "body": "issue seen toggle emberjs version string see starts fail set component bar equals equals entirely certain correct behavior missing documentation somewhere exposed began digging", "num": "12099", "d": "8/2015"}, {"title": "using fails development builds", "body": "jsbin calling methods trigger deprecation warnings currently", "num": "12097", "d": "8/2015"}, {"title": "regression embercomputedsum null", "body": "working believe correct js coerces likely applies computed array macros", "num": "12096", "d": "8/2015"}, {"title": "emberobjectset longer allows chaining", "body": "objetset changed return value passed set rather object acted upon broke chaining following code works fine ember emberdata throws exception ember data exception going change would expected deprecation", "num": "12095", "d": "8/2015"}, {"title": "isarray returns true objects property length", "body": "includes models contain property called simple fix involves changing", "num": "12094", "d": "8/2015"}, {"title": "", "body": "upgraded ember ember seems regression slipped hacking away internals without knowing failing test tiny example project shows break actual stack shows addon use issue exact line strange ember parent component name dynamiceachattrs addition child component also using mixin suddenly attr data causing line execute non array model context ember dynamiceachattrs array empty save funny part save first child context clicked button parent list component showing validateeach used next child component showing use validate validateeach detail hbs actionbutton setup save js code go totally clear parent hbs save action w diff name help provedisprove true regression would much much appreciated broke literally every app work", "num": "12091", "d": "8/2015"}, {"title": "refactoring emberhtmlbarsmakeboundhelper bound change", "body": "trying fix deprecation warnings ember application currently hung refactoring helpers appears new helpers bound change example following works deprecated following formats first render nt change value changes missing si way specify helper bound", "num": "12085", "d": "8/2015"}, {"title": "ember upgrade leads blank page", "body": "revisiting series early versions seemed difficult upgrade gone process embercli tested package upgrade one time make sure app still worked everything upgraded latest version except ember emberdata still respectively flip switch ember running leaves blank screen console errors expected deprecations since using outdated patterns still need update expect since ember following semver deprecated features would removed sure page failing sudden repository pretty small app wanted get upgrade working something simple tackling larger apps proving difficult expected anyone idea going", "num": "12084", "d": "8/2015"}, {"title": "arrayproxy mutation longer notifying dependent keys", "body": "ember final broken ember works", "num": "12083", "d": "8/2015"}, {"title": "containerhas behavior changed without deprecations warning", "body": "used return false preember throws error deprecation warnings previously logged", "num": "12082", "d": "8/2015"}, {"title": "broken query params ember", "body": "following implementation route controller template linkto installationstep queryparams previous linkto linkto installationstep queryparams next linkto clicking links nt change query param also changing query param adress bar anything something wrong according ember standards regression", "num": "12081", "d": "8/2015"}, {"title": "parentview undefined willdestroyelement", "body": "happens least since changing older assert never fails jsbin would make sense parentview still present since event called element gets destroyed work intended", "num": "12080", "d": "8/2015"}, {"title": "docs opening subpage breaks version chooser", "body": "using guides emberjscom one switch back versions guides probably failes match correct item steps reproduce open try switch another version trys open", "num": "12079", "d": "8/2015"}, {"title": "thislookup function release", "body": "firing ember twiddle release branch moment nt load error might twiddle related maybe file", "num": "12077", "d": "8/2015"}, {"title": "remove legacy hooks", "body": "specifically ones labeled remove legacy hooks", "num": "12076", "d": "8/2015"}, {"title": "cant set attributes component test anglebracket components", "body": "using ember addon generated ember component import ember ember import layout template export default embercomponentextend layout layout didreceiveattrs consolelog didreceiveattrs foo thisgetattr foo willrender consolelog willrender foo thisgetattr foo instantiate test using anglebracket notation feature flags turned ca nt set attributes using following test didreceiveattrs willrender never called import moduleforcomponent test emberqunit import hbs htmlbarsinlineprecompile moduleforcomponent xfoo integration component x foo integration true test renders function assert assertexpect set properties thisset myproperty value handle actions thison myaction function val thisset foo bar thisrender hbs thisset foo baz called run following render instead case output console", "num": "12072", "d": "8/2015"}, {"title": "twoway binding aliased properties nt work components", "body": "see application hierarchy date time picker components subclasses alias properties superclass clarity binding think datepicker datefoo vs timepicker timefoo components broken us possibly earlier versions ember due behaviour shown js bin updates context side bound values communicated components updates component side bound values communicated back context", "num": "12069", "d": "8/2015"}, {"title": "bug release ddau controllers routes consistent", "body": "obvious ddau controllers routes general expected behavior component sends action mutate data case existing model changes propagate downwards however depends handle mutation instance jsbin shows action handled controller ui rerenders new items however hook called even odder thing happens action handled route wholesale replace existing model new copy essentially glimmer engine care old model new model efficiently update dom based new attrs example hooks fire new items appended list suspect bugs current experience wildly different based upon action handled cc petethepete wycats chancancode", "num": "12068", "d": "8/2015"}, {"title": "observers view broken since", "body": "since ember controller property views gets changed called ember change called problem facing observer view listens property controller gets fired controller property gets changed observer gets called controller property changes instead property controller jsbin showing problem note problem occurs without emberlegacyviews addon", "num": "12064", "d": "8/2015"}, {"title": "ember click events components triggered", "body": "export default emcomponentextend tagname classnames btn btnprimary classnamebindings disabled click function thissendaction click triggered clicking component works", "num": "12063", "d": "8/2015"}, {"title": "acceptance tests failing ember must global obj given", "body": "upgrading ember ember acceptance tests began fail following error downgrading back ember removes issue like better isolate provide better bug report unsure even begin someone point right direction may able put together js bin example", "num": "12055", "d": "8/2015"}, {"title": "emberjs truck factor", "body": "part phd research code authorship calculated truck factor tf popular github repositories probably know truck bus factor designates minimal number developers hit truck quit project incapacitated work consider system trouble files become orphan ie without main author details work preprint calculated tf emberjs obtained value developers responsible tf robert jackson author files peter wagenet author files charles jolley author files tomhuda author files stefan penner author files martin munoz author files validate results would like ask emberjs developers following three brief questions agree listed developers main developers emberjs b agree emberjs trouble listed developers leave project eg win lottery less morbid c emberjs characteristics would attenuate loss listed developers eg detailed documentation thanks advance collaboration guilherme avelino phd student applied software engineering group aserg ufmg brazil", "num": "12054", "d": "8/2015"}, {"title": "didinsertelement route refreshing", "body": "prior ember didinsertelement called route refreshed ember route refreshing triggers didrender intentional", "num": "12053", "d": "8/2015"}, {"title": "uncaught typeerror read property hasroute undefined", "body": "auth service trying write unit test nt previous transition stored auth service redirects specific route app works expected however tests service give following error nt know debug solve going auth service import ember ember import config configenvironment export default emberserviceextend routing emberinjectservice routing logincapable true localstoragekey configlocalstoragekeysuser router import ember ember import config configenvironment var router emberrouterextend location configlocationtype routermap function thisroute authenticated path function thisroute index resetnamespace true thisroute login export default router test service import modulefor test emberqunit import ember ember import startapp recruiteradmintestshelpersstartapp import pretender pretender var server application var user adid uniqueid firstname first name lastname last name employeetype regular employeeid manager cnmanagerid ouemployees oucompany users dccompany dccom success true function jsonresponse json status return status contenttype applicationjson jsonstringify json modulefor service auth unit service auth unit true needs router main beforeeach application startapp replace real tests test exists function assert var service thissubject assertok service test isloggedin testing function assert var service thissubject assertok serviceget isloggedin false logged test login function assert assertexpect using ember", "num": "12052", "d": "8/2015"}, {"title": "binding variable template controller seems broken", "body": "updating seems break binding variables template controller example templatehbs declaring property email controller nt update email property controller typing worked fine versions", "num": "12047", "d": "8/2015"}, {"title": "input value binding working", "body": "following works update identification property controller code nt work something wrong", "num": "12044", "d": "8/2015"}, {"title": "willdestroyelement always called", "body": "seeing problem app matching willdestroyelement call missing", "num": "12042", "d": "8/2015"}, {"title": "initial build due babel jshint htmlbars slow", "body": "focus large rebuild time caches lost rebuilds mitigate created work works quite well still needs windows support fixed one large ember apps took babel time initial build persist caches likely make babel nonoptional yes optout support coffeescript fans", "num": "12041", "d": "8/2015"}, {"title": "vendorcssapp trees invalidate", "body": "causes trees invalidate even stale post details shortly", "num": "12040", "d": "8/2015"}, {"title": "classnames linkto cause full app refresh", "body": "linkto classnames passed linkto libraryupdate classnames btn btnprimary btnxs cause full app refresh removing classnames linkto trigger bug appears bug seen", "num": "12039", "d": "8/2015"}, {"title": "add documentation linkto currentwhen attribute public documentation", "body": "get currentwhen linkto documented linkto component examples", "num": "12038", "d": "8/2015"}, {"title": "didinitattrs see bound values unless explicitly defined component class", "body": "noticed property nt explicitly defined component class value never seen didinitattrs method even though bound template defining property value null work nt required sure bug previous behavior incorrect fixed embertwiddle", "num": "12035", "d": "8/2015"}, {"title": "linkto queryparams always points route created", "body": "made small embercli app reproduce bug steps reproduce expected behaviour go paginate good click link open child route exit pagination works good reproduce buggy behaviour go reload browser close form note href pagination links try paginate instead going app transitions apparently rendered sub route active link point route even transition back parent one expected behaviour may may time fix week try anyone knows exact point failing go ahead beat", "num": "12033", "d": "8/2015"}, {"title": "pathological view teardown performance", "body": "started investigating last night nt chance finish posting issue case anybody else sees wants dig chadhietala created repo reproduces issue toggle routes see massive delay problem somewhere legacy childviews support controller controller actions firing million times render", "num": "12016", "d": "8/2015"}, {"title": "glimmer confused changes made dom via jquery", "body": "using jquerysortable modifies dom lists drag drop dragging lists glimmer seems become confused fails render items list item dragged didrender hook list items binding nt match list items dom detect happens didrender hook call thisrerender nt appear clean problem way tell glimmer dom modified tell fresh render", "num": "12015", "d": "8/2015"}, {"title": "documentation positional params", "body": "twiddle example working another one questions expected usage possible bug hard address issues without documented behavior positionalparams used embercomponent source packagesemberhtmlbarstestsintegrationcomponentinvocationtestjs packagesemberhtmlbarslibnodemanagerscomponentnodemanagerjs also see related issue", "num": "12012", "d": "8/2015"}, {"title": "classnames incorrectly split letter letter input helper", "body": "using beta specify generated dom contains problem twofold first split one css class letter probably treated array string secondly classes get missing way causes eg value bindings malfunction change use instead works ca nt find mention whatsoever property smile broken elsewhere supposed use", "num": "12008", "d": "8/2015"}, {"title": "ie edge tests pass saucelabs build label added", "body": "would possible use emberjs ie edge browser tests pass saucelabs test label added show current status", "num": "12007", "d": "8/2015"}, {"title": "creation bindings bindingnamed properties broken release branch", "body": "textbinding works appropriately sets text property component content text working release broken", "num": "12006", "d": "8/2015"}, {"title": "array methods marked private", "body": "marks lots array methods eg foreach sortby private surely ca nt correct rwjblue intentional", "num": "12004", "d": "8/2015"}, {"title": "emberarray methods return array rather emberarray", "body": "emberarray methods return array like return bare js array rather emberarray makes chaining emberarray methods impossible prototype extensions disabled example javascript prototype extensions embera somearray filterby property mapby otherproperty gt prototype extensions embera somearray filterby property mapby otherproperty gt undefined function embera embera somearray filterby property mapby otherproperty gt ca nt find discussion documentation opening issue seems like would make sense emberarray methods return array return emberarray chaining emberarray methods becomes possible", "num": "12003", "d": "8/2015"}, {"title": "viewcontroller streams still created even without viewlegacy addons present", "body": "results quite large number extra work alloc", "num": "12002", "d": "8/2015"}, {"title": "incorrect order inserting dom nested routesviews", "body": "hello nested routes ember loads routes correct order parent child insert dom fires didinsertelement reverse order child parent could nt use example modal dialogs parent dialog would top instead child", "num": "11998", "d": "8/2015"}, {"title": "controller needs deprecations", "body": "question needs going removed release later viewscontrollers removed reason asking lot needs app replacing real pain stay views controllers removed stick deprecations", "num": "11997", "d": "8/2015"}, {"title": "deprecation needs controller issue", "body": "upgrading removing controller includes replacing reason still get needs required message error confusing since removed needs missing applicationneeds", "num": "11996", "d": "8/2015"}, {"title": "bug rendertemplate cause new controller instance instantiated", "body": "issue pass instance controller causes generate new instance controller note issue case register controller singleton proposal pass inside demo undefined view original post suspect perhaps turned due focus move away controllers send pr thumbs otherwise please close", "num": "11995", "d": "8/2015"}, {"title": "requires call", "body": "didreceiveattrs fires first render thisget value thisgetattr value didreceiveattrs fires rerenders thisget value previous value thisgetattr value current value", "num": "11992", "d": "8/2015"}, {"title": "document", "body": "changes behavior made helper docs add roughly sane", "num": "11989", "d": "8/2015"}, {"title": "collisions helpers properties name", "body": "upgrading addon maintain changed use single word helper fairly common word applications title found trying render property name app results page simply load lookup error ideas way forward see original issue see reproduction", "num": "11987", "d": "8/2015"}, {"title": "classnamebindings toggling classes components", "body": "using global event bus pattern components classnamebindings classes seem obey setter functions component classnamebinding attribute toggle properly classes bindings nt toggle accordingly funky behaviour ensues created example demo highlights issue jsbin", "num": "11980", "d": "8/2015"}, {"title": "positionalparams nt override default values", "body": "appears latest ember version attributes passed values via use positionalparams default value defined component nt override defaults new value however named assignment override example twiddle notice component default value set like two instances first passing attribute value via positionalparam second using named assignment named assignment version successfully overrides original default value", "num": "11979", "d": "8/2015"}, {"title": "transitionto queryparams fails renamed params", "body": "calling passing queryparams one queryparams renamed destination controller eg application fail load errors witnessed fiddle showing behavior fiddle setup work default includes instructions triggering issue change queryparam property name renamed controller property names provided place url query parameter names call works properly eg instead perhaps intended behavior behavior seen ember", "num": "11977", "d": "8/2015"}, {"title": "parent route model reloaded contains hasmany relation", "body": "trying refresh parent route model loaded remove relationships model reloaded another related issue able reproduce moment project parent model reloaded know makes reloaded jsbin quite similar use case resolved model ignored set controller somewhere read model changed ignored case changed new relationships added like jsbin cars added parent model ideas going wrong", "num": "11976", "d": "8/2015"}, {"title": "partial template using leading dash file name", "body": "ie partial template formhbs using vim edit file need escape first really confusing inconvenient", "num": "11973", "d": "8/2015"}, {"title": "component integration test helper rendering correctly select tag", "body": "hi component based consider following template snippet uiselecthbs integration test would call var options value label option value label option thisset options options thisset myselectedid assertequal val selected value correct fail selected attribute never rendered change selected attribute template anything random add option tag like compiler stripping selected attribute affects test devprod build select component works expected remembers current selection initialized current selection correctly edit inspected html dev build selected attribute missing option tag previously selected option selected latest chrome passes figured one issue selected attribute true isequal helper set right option optionselectedtrue simply using wrong way retrieve selected value select bad", "num": "11971", "d": "8/2015"}, {"title": "updating bound properties component init hook notify parent view", "body": "change bound property observer triggered parentview appcontrollersmycontrollerjs propertychanged function triggered consolelog changed observes property dosomething function thisset property false init bound controller updated component updates tried use component hooks worked examples ember outputs changed ember", "num": "11967", "d": "8/2015"}, {"title": "make linkto pure component", "body": "x use new arbitrarylength positional params feature x expose components privately x use nested helper avoid exposing", "num": "11962", "d": "8/2015"}, {"title": "setting adapter property route", "body": "hi ember setting property adapter inside model hook nt work anymore ember intended property simply nt get set buildurl function using property build correct url api backend thanks", "num": "11954", "d": "8/2015"}, {"title": "emberdateparse interpret iso strings without time zone offset local time", "body": "currently interprets iso strings without time zone offset utc time correct following ecmascript specification date time string format value absent time zone offset z changed ecmascript date time string format time zone offset absent datetime interpreted local time follow ecmascript aspect especially import dealing dateonly iso strings current implementation results unexpected behaviour like one js new date emberdateparse tolocaledatestring new date gettimezoneoffset", "num": "11951", "d": "8/2015"}, {"title": "instance initializers read property register undefined", "body": "hello trying update ember getting lot went docs read instance initializers really understand migrate initializers embercli environment nt undefined example deprecation docs sample initializer migrate using instance initializers nt get errors anymore thanks import ember ember export function initialize container application export default name myinit otherinit initialize initialize", "num": "11950", "d": "8/2015"}, {"title": "canary computed properties working anglebracked component", "body": "sure whether implemented yet missing something works javascript template mycomponent namename componentjs someprop embercomputedalias name nt javascript template componentjs someprop embercomputedalias attrsname accessing component template works fine", "num": "11948", "d": "8/2015"}, {"title": "pinterest style routes", "body": "like implement pinterest style modal page items imagesitemspostsetc whichever page click item modal item details pops page feed still sits background url address bar changes link item sites share friends close item modal still feed ember support type routing know reactrouter support imagine ember would well heavily inspired emberrouter source url pictures id potentially match two routes depends url navigated feed click item feed see opens overlay copypaste different browser window like chrome firefox see image render inside overlay one url two session dependent routes ui", "num": "11947", "d": "8/2015"}, {"title": "unlock simpledom dependency", "body": "something broke node tests cleared travis cache get tests started failing locked dep issue exists place track unlocking dep fixing underlying issue diff cc krisselden", "num": "11943", "d": "8/2015"}, {"body": "going pretty hard us help could provide jsbin embertwiddlecom example help us narrow going", "d": "8/2015"}, {"body": "think comment referring semicolon entire function", "d": "8/2015"}, {"body": "correct semicolon comment removed function", "d": "8/2015"}, {"body": "lessless mind submitting pr remove comment extra semicolon", "d": "8/2015"}, {"body": "think model nt changing", "d": "8/2015"}, {"body": "app noticed problem happening template component js code alias correct value still nt able create jsbin minimal app demonstrate probably close issue soon nt make progress", "d": "8/2015"}, {"body": "least one issue related changes length property arrayproxy update properly quite possible issue related would extremely helpful reproduction help us ensure right track definitely understand repros sometimes difficult part fixing bug thanks working please keep us updated", "d": "8/2015"}, {"body": "feel like semantically instance initializer reran agree", "d": "8/2015"}, {"body": "app instances appreset two different things older less meant rebuild everything preserving namespace support globals used namespace store various factories world modules namespace nt need perserved work exists replace ssr testing world appinstances instance vs non instance initializers actually meaning trying make tests faster fixing path going best path forward actually intended design also important ssr usecases general app testing close possible testing use path net positive", "d": "8/2015"}, {"body": "believe acceptance test helpers embertesting need significant work make compatible living instances likely best path forward imho aka stef said smileycat", "d": "8/2015"}, {"body": "said work blow away rebuild original registry worth noting likely wont give perf want appinstances work may regression dgeb anything come mind", "d": "8/2015"}, {"body": "stefanpenner fix bit basically need using initializers internally incoming", "d": "8/2015"}, {"body": "rwjblue", "d": "8/2015"}, {"body": "thanks clarification everyone glad issue getting addressed look approach test perf improvement instead rwjblue thoughts refactor test helpers support using instances took look seem fairly bound application happy pursue whatever work needs done get working", "d": "8/2015"}, {"body": "trentmwillis sorry upfront confusion hope explanation made sense gladly provide context interested would love see efforts aligned", "d": "8/2015"}, {"body": "would generally suggest use emberlegacyviews addon nonhacky way without addon routable components land future version", "d": "8/2015"}, {"body": "cc mmun", "d": "8/2015"}, {"body": "likely still ned prop lookup propmiss examples", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "provide runnable demo jsbin embertwiddlecom", "d": "8/2015"}, {"body": "fully willing admit may taking best approach method using would love find better way", "d": "8/2015"}, {"body": "duplicate comment", "d": "8/2015"}, {"body": "small mockup using provided jsbin showing might helper", "d": "8/2015"}, {"body": "one possible solution would filter foreign observers calling resetting list time example said current implementation feels tad bit dangerous memory wise class ends potentially dangling references instances looking advice best way fix blocking us moving moment", "d": "8/2015"}, {"body": "ah crap ya bad fault believe storing observers cp omission really complex relationship workmanw provide failing test likely work afternoon tomorrow morning", "d": "8/2015"}, {"body": "stefanpenner yea nt problem", "d": "8/2015"}, {"body": "stefanpenner yea nt problem thanks", "d": "8/2015"}, {"body": "stefanpenner added demonstrate validity test comment definition see test passes thanks lot", "d": "8/2015"}, {"body": "jskeate issues resolved whole internals array computed macros lazy simplified world unlikely backported change quite involved many apps depend todays spurious change events theory someone could extract macros provide addon older systems unlikely time support provide due time constraints unless misunderstood issue believe fixed likely closed", "d": "8/2015"}, {"body": "ah ok nt sure known issue quick scan nt find anything", "d": "8/2015"}, {"body": "demo duplicate items", "d": "8/2015"}, {"body": "fixed master", "d": "8/2015"}, {"body": "stefanpenner still present master", "d": "8/2015"}, {"body": "stefanpenner fivetanley seems like easiest solution check null bail early submit pull think way go really ember style guide anymore", "d": "8/2015"}, {"body": "similar fix seems like need add similar guard workmanw take look pr submit pr", "d": "8/2015"}, {"body": "ah sort map", "d": "8/2015"}, {"body": "rwjblue stefanpenner yea make", "d": "8/2015"}, {"body": "rfc related", "d": "8/2015"}, {"body": "btecu nt believe public api", "d": "8/2015"}, {"body": "wanted know leading future feature needs changes", "d": "8/2015"}, {"body": "tidbits internally removing dependency globals use babel defeaturify rather two passes", "d": "8/2015"}, {"body": "btecu stefanpenner exactly right", "d": "8/2015"}, {"body": "packages done ready work babel plugin", "d": "8/2015"}, {"body": "babel plugin done added two items checklist nearly done", "d": "8/2015"}, {"body": "intentional internal helperskeywords overridden nt think really bug even though annoying yall", "d": "8/2015"}, {"body": "thanks rwjblue needed know intentional", "d": "8/2015"}, {"body": "favor preventing reopen instantiation seems like bug fix think probably needs behind feature flag initially allow us easy way back negatively affects bunch apps", "d": "8/2015"}, {"body": "fyi fix following locations unsure first ran prior instantiation vaguely think router instantiated runs second definitely reopening current instance add", "d": "8/2015"}, {"body": "biggest effort likely refactoring embers tests maybe env boot typically concerned long running flags like especially since may bifurcate addon community let careful", "d": "8/2015"}, {"body": "generally keep repo issues dedicated bugs ember looks like embercli related issue would mind reopening", "d": "8/2015"}, {"body": "current semantics components access passed attribute values changed internally representing passed attributes continue mirror attributes component root likely current lifespan theory possible prevent mirroring would strongly suggest would require overriding private internal behavior brittle changes throughout versions", "d": "8/2015"}, {"body": "transition blog described conflating attributes values provided component caller component state cause confusion especially combined mutable attributes beginning anglebracket components ember component attributes available thisattrs rather component least seems like encouraging developers transition separate namespaces least writing anglebracket components already available question addon developer write anglebracket component addon user free invoke however want imho need flag component say anglebracket component however invoked", "d": "8/2015"}, {"body": "quoted blog post written time angle bracket components enabled default feature subsequently disabled numerous issues addon developer write anglebracket component addon user free invoke however want assertion angle bracket component extend invoked curly brackets imho need flag component say anglebracket component however invoked yep likely also way optinto allowing invoked via curly brackets deprecation allow authors provide way forward existing components", "d": "8/2015"}, {"body": "awesome expected resolved private embergrid targeting see glimmercomponent pops view enable slated release", "d": "8/2015"}, {"body": "still number issues ironed see list", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "ok found culprit idea line seems cause error edit link nt working click right click open new tab github go correct line", "d": "8/2015"}, {"body": "general line appropriate please share reproduction showing error help track", "d": "8/2015"}, {"body": "work putting together simple example tomorrow know root put debug statements determined one views failing render upgrading old version ember nt even components app", "d": "8/2015"}, {"body": "defined job initialize attributes viewcomponent primary job copy attributes object observation starts fire hooks default noop", "d": "8/2015"}, {"body": "way functions fired via comes mixin using defined", "d": "8/2015"}, {"body": "complete guess based error message reason undefined inside put conditional breakpoint see", "d": "8/2015"}, {"body": "like might guessed wound bug side issue migrating app embercli using script assumes classes named ie issue wound mixins nt given names fine current version app using requirejs script translate modules wound exporting mixin file view blowing wound trying use mixin anyway thanks help", "d": "8/2015"}, {"body": "awesome glad got figured", "d": "8/2015"}, {"body": "glance sounds like duplicate turn upstream bug", "d": "8/2015"}, {"body": "dtetto yes came conclusion thank linking", "d": "8/2015"}, {"body": "consolidated related pr together", "d": "8/2015"}, {"body": "yes deprecation example views", "d": "8/2015"}, {"body": "moved helper function triggered layout present", "d": "8/2015"}, {"body": "someone wants tackle target branch since code path longer present commit prefix", "d": "8/2015"}, {"body": "hmmm view controller based paths triggered deprecation", "d": "8/2015"}, {"body": "rwjblue may looked usage value hash argument mustache", "d": "8/2015"}, {"body": "given deprecation properly printed", "d": "8/2015"}, {"body": "deprecation done", "d": "8/2015"}, {"body": "unsure related emberclitemplatelint propertly handle considers function truthy working fix though", "d": "8/2015"}, {"body": "ooh using emberclitemplatelint problem", "d": "8/2015"}, {"body": "yep working fixingupdating please track", "d": "8/2015"}, {"body": "dupe please see embercli repo", "d": "8/2015"}, {"body": "ah sorry", "d": "8/2015"}, {"body": "see ugly know javascript appviewsapplicationjs appapplicationviewjs import ember ember export default embercomponentextend tagname", "d": "8/2015"}, {"body": "know question without using views views deprecated", "d": "8/2015"}, {"body": "code use extends", "d": "8/2015"}, {"body": "quaertym suggestion also mentioned issuescommentsetc works fine generally want encourage folks components feels weird might future refactoring hazard would use addon need root level view like exactly", "d": "8/2015"}, {"body": "quaertym sorry nt see part code interesting solution agree ugly take look legacy views addon rwjblue future feature without using components views legacy addon routable components address", "d": "8/2015"}, {"body": "yes routable components land actual component customize tag attributes classes etc", "d": "8/2015"}, {"body": "raytiley wondering bug exists also example work prior version ember ie", "d": "8/2015"}, {"body": "raytiley think related root issue wise", "d": "8/2015"}, {"body": "rwjblue might really need dig little bit deeper understand desired behavior happening underlying issue handler nt updated new transition starts happens event gets triggered router basic understanding without writing test initially enter route url query params creates new transition never calls interrupted call one routes hooks new transition prepares queryparams since qpmeta never updated original transition uses default values therefore stuck default values", "d": "8/2015"}, {"body": "pixelhandler nt tested versions yet nt think area code changed drastically except trek recent work moving queryparam config router nt believe landed yet might nice place change behavior ideally think need finalize queryparam changes current transition calling active transition since pass queryparams still gives new transition way override queryparam changes previous transition call anyone following along workaround able schedule transitionto onto run loop order keep queryparams get annoying flash undesired route better loosing incoming state places app huge priority get fixed soon wanted report", "d": "8/2015"}, {"body": "raytiley tried workaround queryparams still getting stripped like correct syntax yes", "d": "8/2015"}, {"body": "using ember time start contributing add submit pr", "d": "8/2015"}, {"body": "btecu yeah perhaps docs improved handling error think example exists docs would open creating branch pull request guides project see", "d": "8/2015"}, {"body": "provide reproduction demonstrating", "d": "8/2015"}, {"body": "pixelhandler yes stated pull request clear change rwjblue see thanks looking", "d": "8/2015"}, {"body": "works get rid use", "d": "8/2015"}, {"body": "ember way", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "bratukham yeah cloned twiddle example see using event nt work nt work", "d": "8/2015"}, {"body": "prototype extensions enabled disabled", "d": "8/2015"}, {"body": "stefanpenner would find", "d": "8/2015"}, {"body": "think working used whenever get nothing", "d": "8/2015"}, {"body": "ok found commit changelog", "d": "8/2015"}, {"body": "nevermind looks like supposed use", "d": "8/2015"}, {"body": "lookup variable check variable ideally could used unfortunately nt work userland proxies especially proxies content comes async", "d": "8/2015"}, {"body": "think variable always displayed even undefined ambiguity changes context weird use case helpers requires parameters kind foresee cases case think ambiguity supporting makes semantics helpers much confusing", "d": "8/2015"}, {"body": "timevans detect variable exists second part comment describe problem see comes detecting existence property", "d": "8/2015"}, {"body": "nt seem like bug helpers always win historically intentional", "d": "8/2015"}, {"body": "nt bug could documented new helpers allowing dashless helpers common words cause problems encountered", "d": "8/2015"}, {"body": "timevans discussed bit slack helpers win case actually fairly important document api docs writing helpers guide nt think changed easily actually rely ambiguous able helper call specifically case", "d": "8/2015"}, {"body": "timevans handled ambiguity addon adding ast transform detected usages rewrote commit going go ahead close annoying behavior think change without majorly breaking things rely today happy merge pr making clear api docs guides helpers always used first even local property exists name", "d": "8/2015"}, {"body": "think also document workaround future travelers", "d": "8/2015"}, {"body": "always downside allowing dashes helpers", "d": "8/2015"}, {"body": "unsure reasoning behind conditional assigning ebryn review", "d": "8/2015"}, {"body": "case useful jsbin demonstrating issue jsbin using ember build conditional removed branch happy raise pr", "d": "8/2015"}, {"body": "must use ember data canary ember ember data compatible ember", "d": "8/2015"}, {"body": "bridge gap closure actions amp route explicitly calling controller router trick", "d": "8/2015"}, {"body": "adamesque right suggest using stated docs closure actions like bubble second version work thus suggest going first option sends action thus infinite loop calling adamesque going close let know missed something", "d": "8/2015"}, {"body": "thanks yall helpful private property though recently got pr merged make public perhaps open similar pr also especially closure actions available directly getting confused properties need accessed via days one would okay case calling", "d": "8/2015"}, {"body": "seem like regression cloned example used release version ember happens unrecoverable route stuck bad route seems like workaround would use trycatch around code expected throw error potential throw error", "d": "8/2015"}, {"body": "mikepost yeah seems regression true ember cloned example seems like workaround catch code expected return error", "d": "8/2015"}, {"body": "pretty sure pixelhandler comment meant", "d": "8/2015"}, {"body": "fixed release channel canary beta released next days working jsbin using release channel build", "d": "8/2015"}, {"body": "topaxi quick read issue description without reading example app code running imo issue sounds big like really need broken actionable solution discovered think problem framework issue could optimization issue maybe backburner jquery issue perhaps ask someone pair embercommunityslackcom chat room maybe second set eyes issue may identified", "d": "8/2015"}, {"body": "versions stuff seems related something digging", "d": "8/2015"}, {"body": "possibly", "d": "8/2015"}, {"body": "stefanpenner ember jquery emberdata liquidfire", "d": "8/2015"}, {"body": "tested without liquidfire get fast instant transitions", "d": "8/2015"}, {"body": "switch transition also get fast nt use transitions anything template even sure put issue might liquidfire related", "d": "8/2015"}, {"body": "issue might liquidfire related believe issue ember liquid fire exposes", "d": "8/2015"}, {"body": "duplicate maybe reopen failing test", "d": "8/2015"}, {"body": "fpauser thanks linking going take look failing test", "d": "8/2015"}, {"body": "would correct way document something without code ember codebase file documentation comments", "d": "8/2015"}, {"body": "transition comes documentation needs cleanup properly parseable yuidoc move declarations description ensure every documented block ensure documentation blocks andor statements confirm listed every param expected method also need update include similar include rsvp", "d": "8/2015"}, {"body": "think issues motivation fixed since use deprecated write component use addon", "d": "8/2015"}, {"body": "rondalesc ultimately duplicate btecu correct deprecated", "d": "8/2015"}, {"body": "rondalesc tried xselect component see emberaddonscom", "d": "8/2015"}, {"body": "chatted rondalesc bit agree regression related glimmer work unlikely addressed would happily review pr release another version someone wants tackle though", "d": "8/2015"}, {"body": "rwjblue pixelhandler thanks look one decided roll", "d": "8/2015"}, {"body": "josenberg perhaps join embercommunityslackcom chat room join documentation channel think could let know plans exist multilanguage best guess team translators would needed ensure timely delivery docs", "d": "8/2015"}, {"body": "coleythebest perhaps instead using settimeout use allow current run queue processed handle refresh next queue also perhaps try putting simple example using jsbin embertwiddle show problem action", "d": "8/2015"}, {"body": "definitely annoying nt bug eventually would like remove need warning proper css sanitization also definitely see blog post confusing sorry", "d": "8/2015"}, {"body": "demo without warning", "d": "8/2015"}, {"body": "worries thanks clearing", "d": "8/2015"}, {"body": "jonathankingston teasing plan attack style sanitization basically making accept object would make valid safe sanitizing actual css instead styles harder given enough time possible", "d": "8/2015"}, {"body": "mixonic jonathankingston sounds good one initial piece feedback looks bit verbose app supports lot custom sizing positioning things normally style bindings maybe edge case area using cp better us wanted provide feedback", "d": "8/2015"}, {"body": "workmanw hash nt focus certainly style usage common within ember addons react basically advocating good thing lets get fight goberserk providing security works restrictive csp policies main aim yeah working rfc however would rather get right headaches core ember developers currently working talk next week security however free give real focus needs get correct", "d": "8/2015"}, {"body": "rwjblue pr one submitted since code longer exists sure right branch point correct branch merge target thanks", "d": "8/2015"}, {"body": "correct branch target", "d": "8/2015"}, {"body": "pr", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "cc wycats", "d": "8/2015"}, {"body": "chadhietala sure proper use unquoted use curly braces attribute component seems curly braces inside quotes found odd see would expected instead unquoted curlies however look proper recall blog post announcing glimmer release example attribute used curlies inside quotes", "d": "8/2015"}, {"body": "closed", "d": "8/2015"}, {"body": "cc wycats chancancode", "d": "8/2015"}, {"body": "need call working", "d": "8/2015"}, {"body": "thanks got confused bug since lifecycle hooks nt need get work", "d": "8/2015"}, {"body": "totally understood agree nt call generally always best practice call framework hooks", "d": "8/2015"}, {"body": "definitely annoying nt bug latest release version api documentation online emberjscomapi generally working versioned api documentation browser project emberjsapi ready yet options want older versions api docs build website locally prior api docs update use app like dash allows multiple documentation versions locally use yuidoc browser along autopublished yuidoc json output found sorry troubles", "d": "8/2015"}, {"body": "issue morph cache gets sync currently displayed value input box example always reset unique value input text updated properly", "d": "8/2015"}, {"body": "need dig around bit see solution bare case use component mechanism builtin via take look onewayinput component using also supports sanitization seems somewhat related trying", "d": "8/2015"}, {"body": "fyi use onewayinput", "d": "8/2015"}, {"body": "rwjblue thanks came something looks", "d": "8/2015"}, {"body": "great catch would mind updating submitting pull request commit pr title prefixed", "d": "8/2015"}, {"body": "sure difference expected seem odd use init event app controller component property seems like ripe sort race condition", "d": "8/2015"}, {"body": "integration tests boot application need run use acceptance test boots application initializers setup way allow import function embercli sets default could import function execute component integration test block seems like question try reserve issue tracker bugs could instead open stack overflow question ask slack", "d": "8/2015"}, {"body": "would much prefer contextual componenthelpers rfc concepts allow nested components access relative parents vs traversing tree find nearest given type example would prefer something like following invoked aware instance belongs anyways nt really point issue maybe show potential future make happen ok marked goal ultimately make useless sometime cycle deprecate", "d": "8/2015"}, {"body": "referring somewhat ideas", "d": "8/2015"}, {"body": "still useful things discussed rfc", "d": "8/2015"}, {"body": "mmun indeed use helpful composable components neat traverse parent component type instead manualy recursing little code quite usefull", "d": "8/2015"}, {"body": "steffenbrem think find rwjblue suggested even better almost cases", "d": "8/2015"}, {"body": "nt nice contextual components rfc associating parent child components emitting parent passing example ember sortable uses approach rather", "d": "8/2015"}, {"body": "raycohen yep great solution little verbose lands still marking public would merge", "d": "8/2015"}, {"body": "closed", "d": "8/2015"}, {"body": "maybe sparse list kind", "d": "8/2015"}, {"body": "list types calls iterate nonmodels potentially items", "d": "8/2015"}, {"body": "wo nt sparse list foreach skips sparse entries must null entries would guess render normal row let get thing would null streams key think null becomes valid key dupes one null key handled way dupes currently handled important part entry null key also null entry null key also null phone sharing thoughts", "d": "8/2015"}, {"body": "vaguely thought coerce keys string default would become already handle duplicates fine multiple times would fine edit coerce see", "d": "8/2015"}, {"body": "assuming caused iterating array contains item tested seems work fine tpitale definitely need sort repro help one", "d": "8/2015"}, {"body": "else looking debugging nt help level knowledge assume something code working series ember going try updating emberdata beta see changes anything", "d": "8/2015"}, {"body": "tpitale definitely saying nt something simple array", "d": "8/2015"}, {"body": "ahh replicated error specifying manual path resolves clue hitting though using anywhere", "d": "8/2015"}, {"body": "using every thought deprecated warnings told", "d": "8/2015"}, {"body": "tpitale yeah early cycle printed deprecation used without key mostly due bug htmlbars fixed later versions generally required specify key pretty edgy cases might still make sense specify scenarios nt need", "d": "8/2015"}, {"body": "sorry confusion thing caused", "d": "8/2015"}, {"body": "okay let try deleting smile", "d": "8/2015"}, {"body": "yep deleting works", "d": "8/2015"}, {"body": "still private get access view registry container", "d": "8/2015"}, {"body": "know emberviewviews nt really public recommended use one valuable debugging tools style views able grab instance view poke state via console helped solve hundreds bugs ember inspector also works pretty well", "d": "8/2015"}, {"body": "rlivsey yeap looking thanks stefanpenner took bit longer figure looked bit assumed could nt checkbox kind hiding trick thanks", "d": "8/2015"}, {"body": "seems related", "d": "8/2015"}, {"body": "possible way internals works atm would recommend taking look liquid fire using liquid fire directly", "d": "8/2015"}, {"body": "provide reproduction embertwiddle jsbin", "d": "8/2015"}, {"body": "reproduction jsbin change input cause error jsbin identical code older ember version error", "d": "8/2015"}, {"body": "sure something different twiddle showing queryparams alias nt work maybe error never used", "d": "8/2015"}, {"body": "definitely seems like report deprecated folks recommend approach embermodaldialog using solution", "d": "8/2015"}, {"body": "nt seem like ember bug though", "d": "8/2015"}, {"body": "ember bug file pathname said title", "d": "8/2015"}, {"body": "somewhat fundamental way addons work anything addons app directory merged application code error path indicating sorry confusing nt really bug hop embercli channel community slack ask stackoverflow sure folks help explain better done", "d": "8/2015"}, {"body": "ugh mixonic told", "d": "8/2015"}, {"body": "rwjblue time help nt really know begin", "d": "8/2015"}, {"body": "rondalesc ping hour pair", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "looks like deprecation wrong place", "d": "8/2015"}, {"body": "fix likely need need add sufficient tests ensure deprecation correctly triggered", "d": "8/2015"}, {"body": "instances need audited replaced less tricky mechanism saladfork grep various usage came following list", "d": "8/2015"}, {"body": "js export function map obj callback thisarg return objmap objmap callback thisarg mapcall obj callback thisarg var deprecatedmap map emberrunindebug function deprecatedmap function emberdeprecate emberenumberableutilsmap deprecated please refactor use arrayprototypemap return mapapply arguments \u30c4", "d": "8/2015"}, {"body": "sadly ca nt nest matching debug statements sadly limitation working replacing anyways something little crazier javascript export function map obj callback thisarg return objmap objmap callback thisarg mapcall obj callback thisarg var deprecatedmap map emberrunindebug function deprecatedmap function var deprecate emberdeprecate stashing prevent nested defefeatureify errors deprecate emberenumberableutilsmap deprecated please refactor use arrayprototypemap return mapapply arguments", "d": "8/2015"}, {"body": "looks like emberenumerableutils methods affected", "d": "8/2015"}, {"body": "working example", "d": "8/2015"}, {"body": "looks like number undefined nan believe existing ember behavior worth maintaining", "d": "8/2015"}, {"body": "also verify behavior methods operate arrays numbers", "d": "8/2015"}, {"body": "going change would expected deprecation unfortunately nt obvious deprecation maybe returning proxy sounded like massive worms listed somewhere cibernox remember documented mixonic may need amendment blogpost worth noting align ember getset getterssetters without change hope migrating seamlessly", "d": "8/2015"}, {"body": "looks like intended documented never happened", "d": "8/2015"}, {"body": "looks like intended documented never happened emberjswebsite thanks catching looks like slipped cracks", "d": "8/2015"}, {"body": "create pr updating deprecations guide nobody already", "d": "8/2015"}, {"body": "create pr updating deprecations guide nobody already would great nt believe anyone else yet", "d": "8/2015"}, {"body": "breaking apps wild think revert change benefits worth pain", "d": "8/2015"}, {"body": "tomdale agree", "d": "8/2015"}, {"body": "options end bet aligned regular setters non breaking way advertise breaking change release notes explicit enough", "d": "8/2015"}, {"body": "cibernox aligning regular setters strong enough benefit end users justify breaking things apps without deprecations strong sacrifice marginal improvement", "d": "8/2015"}, {"body": "also confusion super cp setter take account cibernox mind sharing example help enumerate rationale tomdale wycats discussed explained meeting acknowledged caveats confirmed acceptable want backtrack fine means way ever deprecate functionality also note less breaking things deemed acceptable also suspect relevant differences would hate set precedence also break apps beta began rely js aligned semantics", "d": "8/2015"}, {"body": "think main problem missed release notes think advertised people would understand one breaking change ca nt done otherwise acceptable major version ok reverting change saves real pain wild unused feature tho nt see way ever deprecatable way", "d": "8/2015"}, {"body": "stefanpenner sure example mean one comes mind cps people keeps bitted fact computed properties cache return value seen many people mistake caching seen tens times", "d": "8/2015"}, {"body": "possibility revert infavor fix landing hope sufficient community mass embercli enalbing static analysis based deprecation able cover sufficient usecases still would prefer see change accept major concern potentially community pain whatever choice made must happen next", "d": "8/2015"}, {"body": "meanwhile example confusing use case confuses devs using super computed properties js var twitteruser emberobjectextend handler tomster aka embercomputed handler get return thisget handler set v return thisset handler v var twittertroll twitteruserextend aka embercomputed handler get return thisget handler lol set k v return thissuper arguments var troll twittertrollcreate trollget aka tomster trollset aka horsejs ember returns instance ember returns horsejs trollget aka also since return value call cached ember cached instance ember returns horsejs", "d": "8/2015"}, {"body": "maybe way deprecated long new function used property returns get chaining effect warning return value get new effect cover cases guess could go well remember old return value cached nt seem work new one", "d": "8/2015"}, {"body": "orisomething caching policy cp setters nt changed afaik however linting mechanism mmun proposing may catch almost usages", "d": "8/2015"}, {"body": "recommendation people use wanting know something actual array said fix looks reasonable would likely consider pr", "d": "8/2015"}, {"body": "issue manifesting inside using serializer model attribute named see put together pr weekend", "d": "8/2015"}, {"body": "appears explicitly shared instances scoped module root used", "d": "8/2015"}, {"body": "idea worked looked changelog nt seem show anything would alter behavior", "d": "8/2015"}, {"body": "also clarify using var like shared across mixin singleton", "d": "8/2015"}, {"body": "correct var module root essentially singleton", "d": "8/2015"}, {"body": "funny nt see months ago see eventually grok worked", "d": "8/2015"}, {"body": "suspect timing related change merely exposed preexisting issue validation code ideas may would consider regressions ember rather luck manifest sooner course singleton source problem merely scanned available code potential singleton leaks could possible account behavior explained", "d": "8/2015"}, {"body": "likely ordertiming change results global singleton related methods interleaving slightly differently", "d": "8/2015"}, {"body": "agreed rework flow avoid stateful interaction like today thanks quick scan labeled much appreciated", "d": "8/2015"}, {"body": "anyone following along fixed released patch weekend", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "arenoir new style helpers return array params first argument instead spreading try destructure", "d": "8/2015"}, {"body": "thanks mmun", "d": "8/2015"}, {"body": "suggest updating ember data well similar problem", "d": "8/2015"}, {"body": "hoping upgrade ember emberdata bigger issues emberdata series wanted address separately ember upgrade rather tackle simultaneously way use older ed versions ember", "d": "8/2015"}, {"body": "thanks submission quick look reveals app appears functioningloadingrunning correctly merely visible bumping liquidfire latest version addresses moments may worth taking look something appears gone sideways error failure occurred maybe exists way message specific failure", "d": "8/2015"}, {"body": "confirm liquidfire culprit though using karat liquidfire version nt know would nt picked latest version fresh install", "d": "8/2015"}, {"body": "going close since remaining issue pertains liquidfire rather ember stef mentioned", "d": "8/2015"}, {"body": "based diff versions seems likely caused issue krisselden stefanpenner would one yall able take look", "d": "8/2015"}, {"body": "ill look", "d": "8/2015"}, {"body": "created relatively thorough failing test case", "d": "8/2015"}, {"body": "appears issue originated yet clear commit question actually caused issue merely exposed underlying issue investigation needed", "d": "8/2015"}, {"body": "cc dgeb", "d": "8/2015"}, {"body": "looks like passing validatefullname check see also calls normalize turn calls normalizefullname set registry built see looks breaking change resolver probably embercli container registry think might appropriate throw error situation surprised could valid route name sure exactly characters restricted stefanpenner thoughts", "d": "8/2015"}, {"body": "throws error tell us version ember provide error stack trace provide reproduction isolated repo bin would ideal", "d": "8/2015"}, {"body": "definitely private api would kinda expect throw wacky route name", "d": "8/2015"}, {"body": "feeling well nt think getting past currently trick ensure accounts wacky right error thrown", "d": "8/2015"}, {"body": "would love see issue reproduction make sure nothing else funky going", "d": "8/2015"}, {"body": "tricky one reproduce seems error thrown running tests please see test originally written emberjs integration tests landed", "d": "8/2015"}, {"body": "stefanpenner got chance look reproduction", "d": "8/2015"}, {"body": "sorry nt notice look get work", "d": "8/2015"}, {"body": "dgeb assertion im sure think fine tradeoff provide good errors people provide something clearly invalid opt said one option make assert invalid names likely satisfies constraints", "d": "8/2015"}, {"body": "throwing error think point around fact breaking change introduced without proper preceding deprecation warning refactored usage function catch errors", "d": "8/2015"}, {"body": "container always private api generally clear use risk definitely try deprecate much intentional change behavior possible case added helpful error message method used incorrect arguments fact previously worked intentional though perhaps make always return also aside dgeb wonderful work lately expose parts folks need containerregistry public api", "d": "8/2015"}, {"body": "hey thanks rwjblue still think catching good come letting propagate downstream although glad assertion place catch let try beef regex currently", "d": "8/2015"}, {"body": "though perhaps make always return true false think like let try beef regex currently", "d": "8/2015"}, {"body": "although private api think really binary w nonexceptional errors", "d": "8/2015"}, {"body": "controller looks route subclass jsbin example would better reproduction create one via also nt need anything defined route nt actually valid configuration please see guide", "d": "8/2015"}, {"body": "whoops ie check thanks met vriendelijke groet kind regards dennis tel thu aug pm erik bryn notifications githubcom wrote controller looks route subclass jsbin example would better reproduction create one via reply email directly view github", "d": "8/2015"}, {"body": "fyi updated original comment", "d": "8/2015"}, {"body": "ok changed according docs still issue would want create jsbin illustrate query params route controller template linkto installationstep queryparams previous linkto linkto installationstep queryparams next linkto", "d": "8/2015"}, {"body": "also tried replacing linkto helpers actions setting param also update queryparam address bar", "d": "8/2015"}, {"body": "ok bad nt notice deprecation warning ember inspector emberdocumenttitle plugin still using closed", "d": "8/2015"}, {"body": "symptom root cause emberclidocumenttitle could nt figure deprecation coming significance thanks properly tracked emberclidocumenttitle", "d": "8/2015"}, {"body": "correct deprecation warning query params nt update nt think discarded issue", "d": "8/2015"}, {"body": "talked rwjblue twiddle demonstrating issue adding removing breaks fixes links", "d": "8/2015"}, {"body": "investigating feels like something going", "d": "8/2015"}, {"body": "seems related", "d": "8/2015"}, {"body": "good catch opened guides repo emberjsguides might want close one hop", "d": "8/2015"}, {"body": "fixed sorry", "d": "8/2015"}, {"body": "remove comments hooks stick around", "d": "8/2015"}, {"body": "seems like issue closed rwjblue", "d": "8/2015"}, {"body": "submit failing test case pull ensure fixed may already fixed though", "d": "8/2015"}, {"body": "little bit lost source code checked glimmercomponent branch looking try find add test found tests glimmer components invoked curly braces legacy components invoked angle brackets hit bug used ember g component xfoo pod generate component gives default template yield nt change make legacy component glimmer component one triggered user code also want put test packagesemberhtmlbarstestsintegrationcomponentinvocationtestjs", "d": "8/2015"}, {"body": "unsupported default latest versions", "d": "8/2015"}, {"body": "ember per example nt work mut either", "d": "8/2015"}, {"body": "believe default binding deprecated ember documentation seems incorrect many areas implement mut helper push changes parent explicitly call jsbin examples", "d": "8/2015"}, {"body": "daveduchene jsbin provided uses believe bindings still supported works", "d": "8/2015"}, {"body": "examples working using aliased property everything works fine unaliased properties initial js bin includes demonstration problem usage mut helper said", "d": "8/2015"}, {"body": "orkon seeing behaviour bad js bin update use latest build", "d": "8/2015"}, {"body": "dylanmensaert sorry misread bin see binding aliased property wonder real problem relying legacy behaviour vis attrs hash", "d": "8/2015"}, {"body": "daveduchene using legacy behaviour seem problem use observers check bar changed still push parent using set seems broken compared earlier versions tried works mentioned updates aliased property trigger update parent solution seems use works expected jsbin", "d": "8/2015"}, {"body": "dylanmensaert thanks suggestions updated bin original bug report use use either observer workaround computed property emulates emcomputedalias", "d": "8/2015"}, {"body": "daveduchene advice use mut helper works", "d": "8/2015"}, {"body": "thought needed mut helper invoking component via angle brackets one way another nt think mut helper making difference observer", "d": "8/2015"}, {"body": "documentation states call push changes parent also good explanation one agree implemented using observer work twoway binding longer supported use combination make work long run", "d": "8/2015"}, {"body": "ok hold worked curly bracket invocation two way binding still work without major refactoring angle bracket components definitely require one way bindings mut et al curly invocation ultimately believe duplicate daveduchene could double check failing test pr see think issue yes comment also affects setter cp crosslink issue", "d": "8/2015"}, {"body": "rwjblue apologies cp nt know enough ember internals really judge issue fwiw problem reporting occurs property defined emcomputedalias bound properties including static computed properties emulate emcomputedalias work fine exhibit expected twoway binding behaviour", "d": "8/2015"}, {"body": "cp computed property fairly sure issue failing test pr demonstrating", "d": "8/2015"}, {"body": "rwjblue looking unit test pr really sure issue implement computed property emulates emcomputedalias component two way bindings work fine would last workaround demonstrated js bin linked initial bug report defer judgement though", "d": "8/2015"}, {"body": "rwjblue another case demonstrate similar andor related problem mixonic described possible cause however failing example work version version issue likely different reported version also wonder anybody also reported issue probably common case version note seems rendering problem controller properties updated alias works correctly however template output updated moving separate issue", "d": "8/2015"}, {"body": "chadhietala issues definitely seem like bugs", "d": "8/2015"}, {"body": "setting thiscurrentmodel using set model new data seems work renders new items calls attrs events building chadhietala jsbin", "d": "8/2015"}, {"body": "seems working invoking component", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "nt work classnames problem", "d": "8/2015"}, {"body": "gotcha nt declaration component invocation switching instead work", "d": "8/2015"}, {"body": "duplicate", "d": "8/2015"}, {"body": "exact error message getting stack point anything useful reproduction would really make easier track work", "d": "8/2015"}, {"body": "yes thats get test full output acceptance tests report working slimmed reproduction share stack trace note see error running tests application seems performing normally otherwise", "d": "8/2015"}, {"body": "comes triggered calling system model attribute model put break point line linked see calling", "d": "8/2015"}, {"body": "model attribute break returned following given code think tracked set occurring specifically function component declared like run inside function debugging receive model passed component run inside get key value shippingaccount", "d": "8/2015"}, {"body": "move super call first thing", "d": "8/2015"}, {"body": "rwjblue", "d": "8/2015"}, {"body": "general init javascript constructor calling super shouldmust happen touching reasons otherwise object correctly initialized actually enforces static error believe solution correct approach unlikely encourage patterns deviate think issue closed docsblogpost entry created discuss calling correctly", "d": "8/2015"}, {"body": "stefanpenner certainly makes sense surprised see failure part update make sure communicate peers init rule thumb thank rwjblue stefanpenner prompt response course thank ember", "d": "8/2015"}, {"body": "agree listed developers main developers emberjs really charles jolley nt actively involved long time last person touch many stable parts infrastructure slowchanging tomhuda really two people wycats tomdale everyone else listed definitely main developer quite people enough knowledge navigate maintain codebase risk forgetting someone point krisselden ebryn machty mixonic trek b agree emberjs trouble listed developers leave project eg win lottery less morbid addition half core team listed large set contributors scattered across many companies many could step keep project alive think methodology overweighting edits understandable since measurable truck factor really depends reads need people read code understand sometimes people may reached make small targeted changes reading time allows add truck factor", "d": "8/2015"}, {"body": "eg win lottery less morbid open source somebody wins lottery expect see contributions fewer p", "d": "8/2015"}, {"body": "depends wifi new yacht", "d": "8/2015"}, {"body": "depends wifi new yacht sort lottery would buy yacht without wifi trollface", "d": "8/2015"}, {"body": "b agree emberjs trouble listed developers leave project eg win lottery less morbid nt believe project would fail healthy distributed vibrant community suspect short term loss context would cause pain believe community would adapt biggest lose may measured vast amounts issue triage release related work rwjblue krisselden deep problem solving skills wifelette ability organize promote community conferences etc list important maybe directly visible via gh commits contributors goes gavelino may interesting attempt take measure contributions dimensions issue tracker related projects core team minute meetings rfc submissions addon maintainership measuring dimensions would likely costly possible may yield interesting pieces", "d": "8/2015"}, {"body": "open source somebody wins lottery expect see contributions fewer p agree someone would pay lottery pretty much thing os", "d": "8/2015"}, {"body": "also argument reads strong ember source readable contributed know way around decently well reliably familiar many parts entire core team suddenly abandoned project go live big island sun would nt think hard deciding start working", "d": "8/2015"}, {"body": "sake risk mitigation discuss codifying rules specifically ember core team members forbidden buying lottery tickets trollface thus continuity assured", "d": "8/2015"}, {"body": "obviously irb give permission test experimentally although sake science us would dutifully accept winning lottery ticket might interesting track examples main primary authors left past year josscrowcroft floating river somewhere world jashkenas away quite time backbone seems well many underscore users shifted two projects merging authors stopped work two years ago despite still listed recommendation state machines ruby toolbox project essentially lives new set authors", "d": "8/2015"}, {"body": "thank answers really appreciate feedback research development answers receiving survey help better interpret results improve approach", "d": "8/2015"}, {"body": "gavelino awesome best luck", "d": "8/2015"}, {"body": "fired viewcomponent initially inserted dom prior versions ember route cause existing dom elements removed new ones created ember properly preserves dom reason rerendering much faster called intentional yes", "d": "8/2015"}, {"body": "closing question answered", "d": "8/2015"}, {"body": "using private service expects instance initialized setup test either mock setup router opposed tweaking bit prevent error ultimately return false falsey want submit pr using private api nonsupported way nt bug", "d": "8/2015"}, {"body": "closing issue happily review pr", "d": "8/2015"}, {"body": "post reproduction using", "d": "8/2015"}, {"body": "seems working", "d": "8/2015"}, {"body": "also hit issue believe shows toggle back label updates", "d": "8/2015"}, {"body": "changing classnames class fix issue likely duplicate", "d": "8/2015"}, {"body": "still regression though saying good smilecat", "d": "8/2015"}, {"body": "able repro twiddle rwjblue suggests changing fixes problem", "d": "8/2015"}, {"body": "nt work likely going", "d": "8/2015"}, {"body": "also using paths template deprecated work though unsure work finished", "d": "8/2015"}, {"body": "swapped template code following still get value input field typing also heck tried luck console errors deprecation warnings ember inspector chrome", "d": "8/2015"}, {"body": "sake complete code context code entire template recruiter admin authlogincapable unless loginprocessing continue else iconspinner unless error errortitle errordescription component controller code import ember ember export default embercomponentextend auth emberinjectservice classnames logincontainer containerfluid bowerjson file packagejson file", "d": "8/2015"}, {"body": "ok see mean works sans classnames attribute hrmmmmm", "d": "8/2015"}, {"body": "ok mistake changed classnames class solved world continue spinning", "d": "8/2015"}, {"body": "multiple button clicks example seem cause also memory leak", "d": "8/2015"}, {"body": "looks like works expected nt dispatch hook", "d": "8/2015"}, {"body": "seems related", "d": "8/2015"}, {"body": "omg wrong repo", "d": "8/2015"}, {"body": "sure nt embercli issue", "d": "8/2015"}, {"body": "omg wrong repo", "d": "8/2015"}, {"body": "believe related basically specifying today class removed click event nt properly handled browser full refresh", "d": "8/2015"}, {"body": "faced today basically changed templates work afaik", "d": "8/2015"}, {"body": "gladly accept pr adding documentation", "d": "8/2015"}, {"body": "confirm bug immediately upgrading seeing attribute passed component component following assert throws would correctly bound also confirm defining attribute component fixes issue experience pretty common see attributes passed component nt explicitly defined regardless people feel practice nonexplicit attributes", "d": "8/2015"}, {"body": "bumped declare object things work jsbin edit work", "d": "8/2015"}, {"body": "think fix writing test verify unless one breaking test already", "d": "8/2015"}, {"body": "great hear though", "d": "8/2015"}, {"body": "nt breaking test breaking app", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "soonish", "d": "8/2015"}, {"body": "times oo scale used hearing", "d": "8/2015"}, {"body": "worst case special case teardown legacy stuff may causing grief areas well", "d": "8/2015"}, {"body": "digging nt think two functions coexist least current state repro repo get rid notifycontrollerchange nt million function calls trying figure axe one", "d": "8/2015"}, {"body": "think ca nt axe answer wrapping method clause possible seems like dependent event would nt present legacy case", "d": "8/2015"}, {"body": "runspired yea separately tried function check make sure nt exist nt found anything still passes test first assertions fine last nt pass yo tomdale git blame implicates code tests got ideas", "d": "8/2015"}, {"body": "thanks documenting positionalparams would great actually looking something contribute perhaps help", "d": "8/2015"}, {"body": "awesome love help", "d": "8/2015"}, {"body": "rwjblue alright assume contributing guidelines need read first go documenting positionalparams anything need know wherehow write documentation core ember functionality", "d": "8/2015"}, {"body": "classnames array", "d": "8/2015"}, {"body": "perlun guide page advocates use also found similar question stack overflow seem use instead may need assign array input helper closely resembles normal html input believe preferred way add class name use", "d": "8/2015"}, {"body": "reproduce one could use x classnames hello seems one must refactor x class hello", "d": "8/2015"}, {"body": "reproduce one could use x classnames hello seems one must refactor x class hello may regression nt believe intended used way nontheless people appear use decide want case", "d": "8/2015"}, {"body": "seem use classnames instead class may need assign array input helper closely resembles normal html input believe preferred way add class name use class possibly used work w ember similar indeed change sense stefanpenner live us changing definitely add list breaking changes case", "d": "8/2015"}, {"body": "breaking behavior appears upgrading", "d": "8/2015"}, {"body": "may regression ya regression", "d": "8/2015"}, {"body": "work fine last time checked saucelabs yet support ie edge add ci run look", "d": "8/2015"}, {"body": "checked windows edge support yet", "d": "8/2015"}, {"body": "michaelvdheeren issue adding sauce support please update title description stands ticket pretty vague sure actionable steps could take close", "d": "8/2015"}, {"body": "mixonic run tests edge green close michaelvdheeren sure soon aware sauce supports edge enable", "d": "8/2015"}, {"body": "mixonic question workshas validated badge could added last one nono saucelabs nt support yet verifying green would already help stefanpenner agreed verifying test would already help us thanks help", "d": "8/2015"}, {"body": "yup seems good", "d": "8/2015"}, {"body": "michaelvdheeren channel pages emberjscombuilds site include link run full test suite allows run test suite browser available helpful various mobile platforms please report issues supported browsers test", "d": "8/2015"}, {"body": "rwjblue thanks tip nt know", "d": "8/2015"}, {"body": "general syntax avoided deprecatedremoved template usage likely deprecated objectjs usage sometime cycle agree definitely intended change point look figuring going work around likely already thought use instead demo", "d": "8/2015"}, {"body": "yeah addon code definitely ways around glance debugging shows release also seems method never gets called release relying observer never gets triggered compared", "d": "8/2015"}, {"body": "interestingly seems happens passing property routecontroller component gt still works controllersapplicationjs still works export default embercomponentextend foo hello textbinding foo", "d": "8/2015"}, {"body": "release branch working closed believe", "d": "8/2015"}, {"body": "thanks checking confirming", "d": "8/2015"}, {"body": "alexspeller goal making doc privacy settings explicit seem like public api pr would welcome marking public beta", "d": "8/2015"}, {"body": "subclass natives nt reasonable amp performant way two potential ideas use lodash unlock efficient treeshaking builds lodash transition embers helpers follow adapter similar lodash pattern suspect using lodash may better option believe making work wontfix issue please note nt meant chainable helpers rather quirk todays internals require prototype extensions observability sideaffect friends available via method began working alleviate internal dependency making redundant nt bring completion", "d": "8/2015"}, {"body": "okay using want use prototype extensions turned true see lodash seems like better option way get propertybased ease via lodash luck", "d": "8/2015"}, {"body": "way get propertybased ease filterby propname wantedvalue via lodash luck unsure know mappers support deep properties lodash using emberenumerablefilterbyapply array function want use filterby prototype extensions turned missing feature think might make good addon territory set helpers similar following might interesting", "d": "8/2015"}, {"body": "exists however work days ago", "d": "8/2015"}, {"body": "stefanpenner said use lodash embercliembercli unlock efficient treeshaking builds lodash mean ember version lodash included think perhaps context confusion ran problem chaining using everywhere maintaining embercli addon design prototype extensions turned means addon significant amount data manipulation one perform large bit heavy lifting deep dive enumerable mixin force inclusion third party library like lodash first one seems like disservice ember addon authors second seems like insidious expectation consumers addon advice also managed handle array manipulation ember addon side could find way accomplish described redundent probubly slated go away coldsweat", "d": "8/2015"}, {"body": "mean ember version lodash included means using lodash pay go pr explains", "d": "8/2015"}, {"body": "final solution two fold remove internal dependencies second allow people use something like lodash without addon include embercliembercli", "d": "8/2015"}, {"body": "mean creating streams local keywords", "d": "8/2015"}, {"body": "yes", "d": "8/2015"}, {"body": "dmagunov create jsbin jsfiddle embertwiddle example issue", "d": "8/2015"}, {"body": "app example please look console output correct order index sub happens views didinsertelement event use emberlegacyviews addon git", "d": "8/2015"}, {"body": "believe krisselden reasonrationale", "d": "8/2015"}, {"body": "insert dom fires didinsertelement reverse order child parent nt actually happening insertion event ordering happen different phases", "d": "8/2015"}, {"body": "stefanpenner correct ordering correct dom rendered top bottom hooks called bottom precisely seeing", "d": "8/2015"}, {"body": "believe idea calling hooks reverse order allows leafy parts size selves parent ultimately order one wants likely depends usecase suspect someday may support multiple passes allow forms", "d": "8/2015"}, {"body": "rwjblue components didinsertelement events fires correct order parent child", "d": "8/2015"}, {"body": "specifying controller removed", "d": "8/2015"}, {"body": "likely either stray one sitting around repo using addon using take look stack deprecation trace object triggering", "d": "8/2015"}, {"body": "linearza also may help isolate issue creating code example jsbin jsfiddle embertwiddle", "d": "8/2015"}, {"body": "going close happy reopen provide details", "d": "8/2015"}, {"body": "yes sorry havent gotten around yet search complete repo node modules bower components included instance could find liquidfire addonjs containing modals dont use anyway uninstalling liquidfire didnt effect current upgrade rather major postponed deprecation fixes ill reopen issue things clearer thanks anyway", "d": "8/2015"}, {"body": "linearza understood please let us know track need additional help", "d": "8/2015"}, {"body": "jasonmit think example embertwiddle code uses also include method route see added render template method example like use something nonstandard like controller singleton app need define render template well nt think default make implementation choices automatically could seem intention rendertemplate method seems like plan customization wiring controller works also need define behavior method also great provided thorough example links source code think feel strongly changing default implementation method would great idea create issue ember rfc repo discuss see think plan going forward discuss issues proposals api changes using rfc process creating issue rfc repo also could create pull request go proposal issue demonstrate implementation maybe merged also title issue reads bug think proposal feature bug case controller singleton current behavior seems accurate container asked lookup controller provides new instance default using seem odd controller already setup route second instance would used render think container works nonsingleton factories whenever container asked instance may create new one issue illustrates change behavior route default implementation would need changed pass default options render method well template name pass controller instance see", "d": "8/2015"}, {"body": "pixelhandler disputing fact entirely unconventional something question asked debugging saw nt pass instance controller receives argument onward instead attempts container lookup based routename triggers new instance controller generated seems unnecessary since already instance pass explicitly nt believe changes behavior existing implementation eliminates unnecessary lookup sideeffect eliminates problem", "d": "8/2015"}, {"body": "provide jsbin embertwiddle reproduction", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "page seems place documented nt see listed api docs seem like bug though however since nt seem documented api docs confused expect seems guides api docs lack explanation lifecycle hooks curious landed release without docs aside blog post announcing maybe supposed use see blog post mentions expected accurate opinion seem bug sure finished ready primetime curious find documentation must missed somehow", "d": "8/2015"}, {"body": "pixelhandler seems guides api docs lack explanation lifecycle hooks curious landed release without docs aside blog post announcing miss adding docs features added work working updated guides api docs correct mistake also discussed decided landing new featuresapi without docs future rule existed series feel important usage various hooks nt really promoted yet definitely important work significant portions functionality still landed likely time indeed bug firing new attributes set prior values proxied back root component likely ordering problem sure yet", "d": "8/2015"}, {"body": "believe fixed double check mobile atm", "d": "8/2015"}, {"body": "confirmed works properly call absolutely suggest whenever implement framework hook call requirement", "d": "8/2015"}, {"body": "updating title issue track requirement", "d": "8/2015"}, {"body": "ah good mmun take original pull request embercollection confirm always call hooks great could said firmly docs true", "d": "8/2015"}, {"body": "tl dr robert right adding fine nice avoid possible small performance implication creates weird thing hooks supposed contract necessary super", "d": "8/2015"}, {"body": "ok understand new title suggests still bug one elegantly avoided via ugly hack", "d": "8/2015"}, {"body": "issue ultimately embercli resolver tracking issue basically happening use dashless helper without ordered hash arguments end trying look deep inside htmlbars embercli resolver updated use namespace separator expects format using regexp match need fix parsename function deal properly", "d": "8/2015"}, {"body": "also error occurs without shadowing property demo", "d": "8/2015"}, {"body": "timevans rwjblue issue closed since issue tracked embercliemberresolver project", "d": "8/2015"}, {"body": "still changes make ember stable branch like land changes ember changes resolver required", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "rwjblue heart thanks handling quick responsive manner", "d": "8/2015"}, {"body": "second interesting scenario remove default value positionalparam sets value fine however named assignment work", "d": "8/2015"}, {"body": "mmun positional params overwriting properties component appear", "d": "8/2015"}, {"body": "miracleblue updated embertwiddle example using release channel ember see noticed positional params seem work passing named param assigning value longer works appears using positional params property eg thing allow thing assignment component work use thing defined component prototype way documentation positional params first time heard", "d": "8/2015"}, {"body": "interesting seen different examples specifying positionalparams class property seems different effects sat aug bill heaton notifications githubcom wrote miracleblue update embertwiddle example using release channel ember see noticed positional params seem work passing named param assigning value longer works way documentation positional params first time heard reply email directly view github", "d": "8/2015"}, {"body": "way documentation positional params pixelhandler please create new issue document positional params nt lose track first time heard discussed slack showing examples avoid helper deprecations app days ago", "d": "8/2015"}, {"body": "rwjblue created oh yeah remember undocumented features stable branch must live twiddle somewhere lol", "d": "8/2015"}, {"body": "use case trying perform conditional redirect app loads persist query params grabbing query params transition argument trying pass along current workaround rename query params modified controller property names example javascript beforemodel function transition transitionqueryparamsfooter transitionqueryparamsisfootervisible transitionqueryparamsfooter delete transitionqueryparamsfooter thistransitionto test queryparams transitionqueryparams", "d": "8/2015"}, {"body": "ismyrnow nt think bug instead try variation strategy solve use case see testcontroller added computed property query param value controller javascript import ember ember export default embercontrollerextend queryparams sidebar footer sidebar false footer false isfootervisible embercomputedalias footer instead swapping queryparams transition use computed property", "d": "8/2015"}, {"body": "sort question generally better suited stack overflow discussemberjscom community slack ember ember data prefer track bugs via issue tracker nt seem like bug please explain think actually bug going close issue please link discussso post issue folks coming across issue future see resolution", "d": "8/2015"}, {"body": "well think bug reload true seems working fire reloading model store even route model hook called", "d": "8/2015"}, {"body": "question embercli ember", "d": "8/2015"}, {"body": "question embercli ember historically emberjs choice partials disambiguate nonpartials prefixed embercli dasherized became", "d": "8/2015"}, {"body": "yeah make partials differ nonpartials add leading would okay style ruby rails leading dash really good edit operate people work system gui could open editor like sub lime text mate edit terminal really inconvenient anyway thoughts", "d": "8/2015"}, {"body": "believe dash optional choose use work embercli dasherize things rule simplify naming collisions unlikely change", "d": "8/2015"}, {"body": "seems related", "d": "8/2015"}, {"body": "tehmaestro guess maybe something plan move toward data bindings actions methodology setting component value nt mutate value suspicious example good use observers count value magically observed declared template likely evaluates undefined property controller least nt see prototype controller property", "d": "8/2015"}, {"body": "tehmaestro perhaps would better implementation example data bindings actions methodology get works lot happening well slowly updating code following deprecation suggestions could make update apps perhaps worth updating implementation depended observer update", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "hi mmun explain mean say things exposed privately currently trying build reusable component used block form run assertion init currently checks wanted make check since template deprecated according api docs always comes back undefined exposing privately solve would need exposed privately", "d": "8/2015"}, {"body": "turned htmlbars keyword instead property component means available javascriptland", "d": "8/2015"}, {"body": "probably make public requires feature flag orthogonal issue", "d": "8/2015"}, {"body": "pretty dubious specifically escapedness apply first argument add subexpression write ast transform rewrites would remove one impurities", "d": "8/2015"}, {"body": "subexpression public needed internally nt time rfc documentation process docs transform support also could likely take care", "d": "8/2015"}, {"body": "rwjblue oh sweet", "d": "8/2015"}, {"body": "htmlunsafe feels bad", "d": "8/2015"}, {"body": "questions want pure component would want live assign knows everything unsure setting properties notes required js code need identify passed first argument block content specified block", "d": "8/2015"}, {"body": "implemented", "d": "8/2015"}, {"body": "public api suggest using app config sort thing generally work nt think regressions around getset ember might want ask sort question stack overflow community slack going close happily reopen reproduction jsbin embertwiddle vs", "d": "8/2015"}, {"body": "believe ember data thing confirm reopen ember data repo", "d": "8/2015"}, {"body": "yes emberdata", "d": "8/2015"}, {"body": "jelhan open emberdata", "d": "8/2015"}, {"body": "yeah right sorry already ongoing debate emberdata could found", "d": "8/2015"}, {"body": "provide runnable reproduction embertwiddlecom might easier since closer normal ember cli structure trouble spotting issue bat", "d": "8/2015"}, {"body": "also bit background instanceinitializers called single argument two format initializers instanceinitializers general initializers good registering scheduling injections instanceinitializers good looking things registrationsinjections done example nt really seem like needs look things actually registering new thing setting injection belongs initializer instanceinitializer describe specific errors getting assuming initializer pasted using initializer definitely function", "d": "8/2015"}, {"body": "going go ahead close happy reopen answer questions last comment", "d": "8/2015"}, {"body": "yes would expect work though using seems like better choice vs using alias", "d": "8/2015"}, {"body": "course example happens computed property", "d": "8/2015"}, {"body": "funtusov understood definitely seems like bug would mind submitting failing test case", "d": "8/2015"}, {"body": "following code worked couple days ago canary build morning still working template component", "d": "8/2015"}, {"body": "yep known issue fixed glimmercomponent branch set changes landing shortly ships week", "d": "8/2015"}, {"body": "seems issue close", "d": "8/2015"}, {"body": "funtusov might issue unsure though love pr failing test case though way ensure get exact scenario nailed", "d": "8/2015"}, {"body": "goes", "d": "8/2015"}, {"body": "awesome thanks submitting failing test pr going close issue track", "d": "8/2015"}, {"body": "try reserve issue tracker bugs framework seems like style question better suited stack overflow community slack needhelp channel please feel free cross post issue anyone might stumble upon issue future", "d": "8/2015"}, {"body": "create public fyi deprecated", "d": "8/2015"}, {"body": "stefanpenner deprecated favor objectassign add deprection log", "d": "8/2015"}, {"body": "stefanpenner saying deprecated generally would like deprecate favor new another story smilecat", "d": "8/2015"}, {"body": "likely merge", "d": "8/2015"}, {"body": "ya nt pr definitely accept pr making public", "d": "8/2015"}, {"body": "rwjblue stefanpenner seems marked public think issue closed api pr", "d": "8/2015"}, {"body": "duggiefresh thank saving us", "d": "8/2015"}, {"body": "anything two rose bouquet tulip", "d": "8/2015"}, {"body": "sure one api method missing warrants rfc issue ya nt think needs rfc feels like omissionbugfix would submit bugfix beta release maybe pr emberjsowners get confirmation", "d": "8/2015"}, {"body": "afaik conform completely native array imo intentionally emberspecific mutation methods proxied like etc notice nt proxied reason nt nt cause cp invalidationobserver notification embersortable array proxy needs sorting behavior otherwise obviously implement necessary notification hooks roll", "d": "8/2015"}, {"body": "satchmorun yes behavior describing correct sounds like want something like one way still listens upstream changes implement totally agree info deprecations page website repo nt really bug going go ahead close issue love pr website repo adding wonderful details", "d": "8/2015"}, {"body": "wonderfully detailed question thank really sure bug ember use issue tracker top head know trying possible generally transitioning provide dynamic segment values models thing often requested call relative linkto confirmed indeed possible today could create new issue emberjsrfcs repo detailed problem explanation request new public api added handle scenario", "d": "8/2015"}, {"body": "rwjblue maybe bug using routes without dynamic segments nt throw error strange works certain circumstances others making strict parameter requirements might help avoid type problem future", "d": "8/2015"}, {"body": "rwjblue semirelated note considered valid use case use linkto without route name specified example use case use linkto like open liquidfire modal nav bar application level worked fine us would trigger query param change without changing route linkview linkcomponent change behavior substantially different outlined", "d": "8/2015"}, {"body": "chbonser yes query params changing perfectly valid use case", "d": "8/2015"}, {"body": "ksnyde oh totally agree wonderful detail mostly asking thought similar issue reviewed struck may underlying issue", "d": "8/2015"}, {"body": "suspect feel free close rather track id long place radar", "d": "8/2015"}, {"body": "hi similar issue reduced test case set radio input components rendered loop ids determined index values computed inventory controller value enumerable used loop changes components rerendered issue comes values shared rendered outputs hunch glimmer optimizing rerenders looking coming keeps items dom overlap happening", "d": "8/2015"}, {"body": "fwiw error messages ember still errors", "d": "8/2015"}, {"body": "mixonic inputs needing known ids problem ember right bump lots scenarios like input unique explicit id needed labels throws error block changes transition occurs usually always liquidfire involved never actually instanced id present one instance torn nt removed yet another activated something thought trying build template helpers generating unique ids form inputs something like given id consumed assigned new feels heavy solution avoiding teardown animationif block switching cases", "d": "8/2015"}, {"body": "sberan working well chrome firefox", "d": "8/2015"}, {"body": "also modifying property within didinsertelement hook deprecated stated lot deprecation warnings", "d": "8/2015"}, {"body": "ca nt reproduce anymore either strange closing", "d": "8/2015"}, {"body": "locks close going add things done checklist", "d": "8/2015"}, {"body": "rwjblue still coordinating saladfork resolved either way end week", "d": "8/2015"}, {"body": "going go ahead close keep eye details angle bracket component changes enabled changing meaning quoted vs nonquoted attributes", "d": "8/2015"}, {"body": "default actions call preventdefault event triggered result invoking action disable setting action docs templates section views gone ca nt remember history around opt vs opt maybe behave possibly something discussed changed runup make less surprising obviously changing default would breaking change series", "d": "8/2015"}, {"body": "rlivsey correct change somecomponenthbs fires documented however feel like example like included docs people nt confused working multiple events", "d": "8/2015"}, {"body": "tsteuwer rlivsey awesome nt know passing take back comments breaking web seem easy actions events miguelcobain updated twiddle solution using see", "d": "8/2015"}, {"body": "yes solved problem thanks everyone", "d": "8/2015"}, {"body": "browser issue behavior different browsers made video illustrate issue", "d": "8/2015"}, {"body": "dmagunov provide sample code showing mean sounds like sorting query parameters aware possible want sorting array cause difference unless saying emberitself sorting differently still need example code show reproduce thanks", "d": "8/2015"}, {"body": "similar issue seems previously reported fixed ago nt seem probable changes routerecognizer quite time would seem impact either still sure experiencing still digging provide example code reproduce", "d": "8/2015"}, {"body": "ca nt create fully functional example via embertwiddle jsbin shows linkto issue maybe related query parameters sort order", "d": "8/2015"}, {"body": "created sample application git", "d": "8/2015"}, {"body": "fyi merged adding helpful warning use route named", "d": "8/2015"}, {"body": "sort obvious case one could also work around naming route something different keep path needed", "d": "8/2015"}, {"body": "jayphelps confirm warning helpful least folks know may issue", "d": "8/2015"}, {"body": "thanks jul pm bill heaton notifications githubcom wrote marksalpeter think issue ran documented well instead routermap function thisroute foo function thisroute bar function thisroute baz use function thisroute use index loading templates routermap function thisroute foo function thisroute bar function thisroute baz function reply email directly view github", "d": "8/2015"}, {"body": "abfx noticed jsbin crashes browser tried running locally problematic well gist work locally work previous release ember", "d": "8/2015"}, {"body": "pixelhandler nt work recreated issue new fiddle apparently works remove target action", "d": "8/2015"}, {"body": "passing something intended work likely continue work strongly suggest use improved actions much easier reason uncertain intended future abfx going close believe found problem please reopen let know missed something", "d": "8/2015"}, {"body": "mixonic thanks improved actions safe way go ember road", "d": "8/2015"}, {"body": "abfx yes absolutely", "d": "8/2015"}, {"body": "uncertain intended future viewname mixonic deprecated think appropriate primarily component world", "d": "8/2015"}, {"body": "mixonic rwjblue improved actions inside main controller ca nt pass component parent action", "d": "8/2015"}, {"body": "stefanpenner news", "d": "8/2015"}, {"body": "sure issue helper inside loop helper nt seem fire update one properties thoughts", "d": "8/2015"}, {"body": "also experiencing issue maybe way manually trigger helper refresh", "d": "8/2015"}, {"body": "sloppy got work wrapping component block forcing block compute false true immediately secession adding code else block causes blip sortable disappears updated twiddle", "d": "8/2015"}, {"body": "stevehanson thanks example case ember rerenders whole list focus selection lost", "d": "8/2015"}, {"body": "dmagunov yeah definitely ideal scenario focus selection would like preserve since list rerendered dropping sortable element new position nt seem like would focus selection worry", "d": "8/2015"}, {"body": "stevehanson case", "d": "8/2015"}, {"body": "dmagunov oh see thought problem jquery ui sortable case seems little trickier", "d": "8/2015"}, {"body": "see developers forgotten us", "d": "8/2015"}, {"body": "ran issue jrjohnson twiddle similar code however issue click checkbox longer responds changes things noticed helper recomputing checked attribute set dom whether seem matter", "d": "8/2015"}, {"body": "jrjohnson poking around fixed problem twiddle specifying action mystery still remains try build twiddle replicate", "d": "8/2015"}, {"body": "trying disentangle issue seems couple different things going jrjohnson aldhsu two issues twiddle helper automatically observer items array automatically prevents default events handles prevents checkbox showing checked property changes fixed example main issue related using jquery sortable experienced quantumking dmagunov stevehanson see issue sure actually going yet work quick switch twiddle seems show even issues", "d": "8/2015"}, {"body": "rwjblue nt work properly either latest versions issues differs main problem glimmer engine tell content dom changed refresh sort finished model updated", "d": "8/2015"}, {"body": "rwjblue thanks quick reply apologies nt understand helpers analogs computed properties dom would recomputed unless observe changed forced recomputes helpers observed arrays passing add observers", "d": "8/2015"}, {"body": "aldhsu yep definitely works way", "d": "8/2015"}, {"body": "rwjblue nt know either things thanks", "d": "8/2015"}, {"body": "experiencing issue", "d": "8/2015"}, {"body": "seems working properly demo closing issue happily reopen reproduction", "d": "8/2015"}, {"body": "sorry pixelhandler nt get chance create twiddle thanks rwjblue investigation code seems problem caused component includes internal dependency embercliautoregisterhelpers removed error went away everything continued work fine sheldonnbbaker might worth trawl see also problem whilst latest version embercliautoregisterhelpers code disable behaviour ember things remain broken ember", "d": "8/2015"}, {"body": "whilst latest version embercliautoregisterhelpers code disable behaviour ember things remain broken ember stevesims fixed nt seem like released yet maybe create issue asking release", "d": "8/2015"}, {"body": "really feels like browser bug sure", "d": "8/2015"}, {"body": "stefanpenner think rfc needed expose additional public api", "d": "8/2015"}, {"body": "btw small note promises tab ember inspector seems cases information would needed debug exception model id etc label column would nt easy add label promise id error message occuring inside promise like cases example right read property internalmodel undefined exception staging environment development ca nt explain trying check findfindrecords methods ca nt see anything wrong checking promises tab see lots promises rejected label fetching frontend model relationshipelement id may lead understand exception thousands promises inspector tab easy understand except exact id promise failed edit got one promises inspector tab fulfillment rejection value typeerror read property internalmodel undefined one label fetching frontend model id know coming nt seem possible search fullfilment value ember inspector tab least look rejected promises isolate one caused exception useful future think whole process least explained debugging docs ember", "d": "8/2015"}, {"body": "hey sounds like great little improvement inspector open issue also nt forget", "d": "8/2015"}, {"body": "done thanks stefan", "d": "8/2015"}, {"body": "adding feature request would ember inspector team add promise labels second argument error event", "d": "8/2015"}, {"body": "leooo might best place report", "d": "8/2015"}, {"body": "hmm point ember inspector team nt managing error event right mean nt know guys split work still posting threads suppose part request adding promise labels error event would nt", "d": "8/2015"}, {"body": "team need cross post easier track issues level used", "d": "8/2015"}, {"body": "stefanpenner think leooo proposing users access promise labels failed promises without look inspector", "d": "8/2015"}, {"body": "exactly sorry clear", "d": "8/2015"}, {"body": "ah get easy adding", "d": "8/2015"}, {"body": "teddyzeenny leooo", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "jmurphyau happen little time look one", "d": "8/2015"}, {"body": "yep", "d": "8/2015"}, {"body": "hit snag well way help expedite fix", "d": "8/2015"}, {"body": "mikenorth start along lines failing test case understand failing try fixing items would super helpful", "d": "8/2015"}, {"body": "seen issue first instinct check object fix problem wanted investigate null valid behaviour nt want chuck check potentially hiding actual problem nt chance yet get next days", "d": "8/2015"}, {"body": "nt think actually null value wow scenariocode path complex decided solve issue hand rather trying troubleshootdebug null see pr", "d": "8/2015"}, {"body": "result null query params longer sticky far trace back transition inside setup route null nt", "d": "8/2015"}, {"body": "pixelhandler problem build workaround point core feature set readonly attribute programatically want know proper way", "d": "8/2015"}, {"body": "stefanpenner specialcasing seems like good idea btw broken also noticed especially awkward making components wrap ca nt really expose attribute component since mere presence make input always disabled", "d": "8/2015"}, {"body": "definitely seems bad emberselect removed would love review pr fixing nt bug framework closing issue", "d": "8/2015"}, {"body": "rwjblue bug framework goal get people first upgrading latest fixing deprecations seems like built needs work people get around removing", "d": "8/2015"}, {"body": "raytiley nt bug framework available ember therefore bugs nt part framework saying would love entertain pr fixes nt something ember needs go forward since train moving tldr unlikely work sorry confusing", "d": "8/2015"}, {"body": "would still call bug though perhaps nt really discussed view bugs tracked rwjblue going reopen pending conversation offline", "d": "8/2015"}, {"body": "using inbrowser datastore setup start test seems like valid way set things unless suggesting even initial test state created using ux also seems reasonable expect startapp helper actually starts app way kick instanceinitializers without first visit page", "d": "8/2015"}, {"body": "swamped perf stuff hopefully get soon turned tricky transpose test suite invest time soon", "d": "8/2015"}, {"body": "think explains pretty gnarly leak app sorry plus one comment want follow along", "d": "8/2015"}, {"body": "came across problem traced problem found exactly problem us active class nt applied correctly reused template linkto helper linkcomponent solution us could used follows search emberjs emberdebugjs replaced line reads targetroutename wrapper fixes problem commented line line might need elsewhere javascript function computeactive view routerstate embermetalpropertygetget view loading return false currentwhen currentwhen embermetalpropertygetget view targetroutename currentwhen currentwhen viewhandleonlyqueryparamssupplied embermetalpropertygetget view targetroutename currentwhen currentwhensplit var len currentwhenlength lt len isactiveforroute view currentwhen iscurrentwhenspecified routerstate return embermetalpropertygetget view activeclass", "d": "8/2015"}, {"body": "update seems bug still", "d": "8/2015"}, {"body": "closing favor trying consolidate", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "going take additional approach fix issue qunit release modules force people var related issue w cibernox", "d": "8/2015"}, {"body": "think make sense expose component well need set class depending presence block root element nt think possible components tagless components course", "d": "8/2015"}, {"body": "chadhietala submit failing test pr add checklist", "d": "8/2015"}, {"body": "rwjblue branch addressing exactly case happens class becomes overridden inner template really special case much larger problem", "d": "8/2015"}, {"body": "wycats awesome branch make requested failing test pass wink", "d": "8/2015"}, {"body": "confirmed fixed", "d": "8/2015"}, {"body": "hated implemented happy see go", "d": "8/2015"}, {"body": "nice summary issues aortbals nt appear affect components component see seems affect bound attributes issues", "d": "8/2015"}, {"body": "seems fixed", "d": "8/2015"}, {"body": "yeah sorry fixed via build system updates thanks commenting", "d": "8/2015"}, {"body": "issue useful reuse common nested route different contexts guide documentation implies behavior", "d": "8/2015"}, {"body": "twiddle demonstrating bug wrote finding issue see linkto apples index route take fruitdetail route oranges", "d": "8/2015"}, {"body": "happy review entertain pr since emberselect removed public api closing issue", "d": "8/2015"}, {"body": "really annoying acceptance tests helper wo nt trigger keyup event want events properly fire since ca nt use change event probably would triggered", "d": "8/2015"}, {"body": "fryie unrelated issue reported seems similar though", "d": "8/2015"}, {"body": "apologies wanted point keyup feasible workaround sense related", "d": "8/2015"}, {"body": "stefanpenner jkgisme recently discovered using helper trigger actions specified events detailed example twiddle jkgisme", "d": "8/2015"}, {"body": "actually lot events nt work input helper right including anything mouse related", "d": "8/2015"}, {"body": "ya tracking try fill happening mobile", "d": "8/2015"}, {"body": "serious problem setting two actions ca nt nt input helper ca nt believe ember still nt attributes like oninput onchange hope fixed asap", "d": "8/2015"}, {"body": "nt tested actions successfully used also use old fashioned html version hbs actions achieve", "d": "8/2015"}, {"body": "right supports", "d": "8/2015"}, {"body": "ya thought issue reporting regression aliased mistaken works properly events listed specifically using certain something intend support moment", "d": "8/2015"}, {"body": "ok yes add action change html input version leads wonder point ca nt really use feels like flawed ca nt easily way binding hbs time somewhat unusable event handling restrictions would nt better confuse things", "d": "8/2015"}, {"body": "jkgisme huh flawed works used huge majority ember applications without incident", "d": "8/2015"}, {"body": "twiddle linked would work project inadvertently ended using html way input boxes got brought wondering bc ton actions attached events worked way p bad dev nt actually remember", "d": "8/2015"}, {"body": "rwjblue expectation using helper syntactical sugar creating html input twoway binding value binding events onetoone binding events use bind directly actions must use one documented events reading guide misleading mention use input especially actions section gives link events tells dasherize nt dig finally reach page starting statement helper allows user events send actions realize nt going crazy nt going work saying wrong unexpected caused jump slack ask greeted people perplexed", "d": "8/2015"}, {"body": "seem fixed canaryrelease", "d": "8/2015"}, {"body": "confirm fixed thanks", "d": "8/2015"}, {"body": "rwjblue still problem fixed canary hit next release", "d": "8/2015"}, {"body": "already pulled stable branch confirm queued release released", "d": "8/2015"}, {"body": "idea bug introduced", "d": "8/2015"}, {"body": "miguelcobain introduced part rendering engine rewrite glimmer specifically related implementation attrs proxy preanglebracket component support every version since", "d": "8/2015"}, {"body": "using seeing class output twice output space every letter jsbin reference would also expect specialclass case include emberview nt additive completely replace expected dom generated dom", "d": "8/2015"}, {"body": "fixed released", "d": "8/2015"}, {"body": "thanks updated jsbin point issue spaces letters fixed well class names additive however specialclass still output twice", "d": "8/2015"}, {"body": "vaguely think another open issue duplicated classes ca nt search atm double check open one ca nt find", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "nt see anything looked related opened", "d": "8/2015"}, {"body": "reason ca nt used adding onclick example", "d": "8/2015"}, {"body": "burned release well revert back lot sort thing going", "d": "8/2015"}, {"body": "thought mention ran similar story rlivsey", "d": "8/2015"}, {"body": "ran day similar usecase want query string reflect current selected person list straightforward approach simply alias query param selected person id nt work forced make complex also leave comment make sure colleague nt try refactor back simpler version javascript export default embercontrollerextend queryparams selectedid selected selectedid null query params nt support computed properties set id manually see issue details selected embercomputed set person thisset selectedid person personget id null return person", "d": "8/2015"}, {"body": "politely poking would like users deal understand", "d": "8/2015"}, {"body": "latest release three channels seem working properly understanding actual bug stuckouttongue canary reopen someone explains missing smilingimp", "d": "8/2015"}, {"body": "tests pass thanks confirmation still fail need check going beta", "d": "8/2015"}, {"body": "please let know think reopened", "d": "8/2015"}, {"body": "things needed fix deprecations etc seemed missed getting", "d": "8/2015"}, {"body": "thanks quick feedback", "d": "8/2015"}, {"body": "timevans sure deprecated possible happened late version", "d": "8/2015"}, {"body": "perf testing using mechanism would allow us maintain ember current eventing mechanics moment without changing expected behavior tl dr performance boost across board", "d": "8/2015"}, {"body": "rwjblue closed favor rfcimplementation", "d": "8/2015"}, {"body": "commit nt fix run loop join ability turn mousemove", "d": "8/2015"}, {"body": "rwjblue", "d": "8/2015"}, {"body": "maybe need bundle talking points push work capture phase improved event dispatcher vague hard action issues annoying", "d": "8/2015"}, {"body": "stefanpenner branch working actually think added friday schedule talking point", "d": "8/2015"}, {"body": "awesome link submit wip review", "d": "8/2015"}, {"body": "pr coming soon finish walker also adding second flag resolution caching eg element handler repeated firing super fast", "d": "8/2015"}, {"body": "stefanpenner also agenda friday", "d": "8/2015"}, {"body": "sorry trying reference issue close", "d": "8/2015"}, {"body": "update many thanks", "d": "8/2015"}, {"body": "look api docs obliterated without deprecation warnings notices weirdly still mentions", "d": "8/2015"}, {"body": "kanongil darn definititely missed adding deprecation demo jsbin sorry function view component absolutely print deprecation working adding proper deprecation", "d": "8/2015"}, {"body": "rwjblue right breaking component functionality anything work around make futureproof", "d": "8/2015"}, {"body": "render complex list results ember took ember took tests", "d": "8/2015"}, {"body": "another related pr nice improvements", "d": "8/2015"}, {"body": "something interest added ghetto instrumentation get picture new code utilized following likely worse offender interms performance", "d": "8/2015"}, {"body": "another interesting set data seeing gets common also annotated actually descriptors note removed small n interestingly identical gets descriptor ones interesting typically cp set watchers often something totally static", "d": "8/2015"}, {"body": "another interesting thing mutabledependencies proxystream viewviewcontext viewcontroller providing value right still created inaddition even provide value enumeration gets unique object allocations add", "d": "8/2015"}, {"body": "bet gets template defaultlayout defaulttemplate layout layoutname templatename template returned niche features vast majority components nt use would suggest anyone using new app", "d": "8/2015"}, {"body": "yup ideas make cp faster also nt use speculatively like", "d": "8/2015"}, {"body": "gets removed canary", "d": "8/2015"}, {"body": "rwjblue nice", "d": "8/2015"}, {"body": "performance initial component render times seems significantly slower ember ember updated jsbin appears initial render performance legacy components apposed angle brackets perform better near parity machine latast release machine although approaching parity going forward still work todo legacy style components getting better place focus performance likely continue focused angle bracket components exist shed handcuffs legacy components htmlbars blazingly fast goal continue make ember portions close zerocost abstractions possible thanks patiences rwjblue helping drive patches", "d": "8/2015"}, {"body": "super awesome thanks lot work going performance issues", "d": "8/2015"}, {"body": "super awesome thanks lot work going performance issues sandstrom example still near parity although original jsbin example involves nested likely factors", "d": "8/2015"}, {"body": "complex list rendering performance continues improve beers", "d": "8/2015"}, {"body": "seeing issue components dynamically changing templatelayoutname calling rerender suggestion hotfix behaviour workaround", "d": "8/2015"}, {"body": "changing template layout initial render currently supported bug tracked issue submitted failing test case", "d": "8/2015"}, {"body": "original issue partially linked te deprecation mentions didinsertelement instead didrender", "d": "8/2015"}, {"body": "hi noticed also hook component seems change bound property observer triggered parentview could related appcontrollersmycontrollerjs propertychanged function triggered consolelog changed observes property dosomething function thisset property false init bound controller updated component updates tried use component hooks worked examples ember outputs changed ember", "d": "8/2015"}, {"body": "thanks providing demosexamples definitely made easy confirm things fixed double observer firing issue resolved rounders updated jsbin current release branch double firing observers solved tehmaestro example seems unrelated issue since double firing observers seem legitimate issue report separately vvisheshd jsbin works properly fires latest release builds laynegt jsbin works properly latest release builds", "d": "8/2015"}, {"body": "thanks fix opened issue", "d": "8/2015"}, {"body": "rwjblue thanks", "d": "8/2015"}, {"body": "mixonic looks like indeed possible could please comment serve solution avoided", "d": "8/2015"}, {"body": "using component applicationview allow customization classnames whatnot definitely going number negative results well example controller correct definitely go forward solution nothing wrong using addon require functionality", "d": "8/2015"}, {"body": "rwjblue thanks comment mean controller incorrect tried access controller properties looks ok anyway updated answer comment", "d": "8/2015"}, {"body": "update jsbin see issue fixed canary", "d": "8/2015"}, {"body": "ported canary still seeing issue", "d": "8/2015"}, {"body": "believe done closing please reopen checklist something misunderstood", "d": "8/2015"}, {"body": "set right", "d": "8/2015"}, {"body": "thanks yall", "d": "8/2015"}, {"body": "seems working properly closing reopen fuller reproduction current versions", "d": "8/2015"}, {"body": "get problem use return type refresh model function replace promise object like return ajax xxxxx setupcontroller called nt know reason code model function model function params return type refresh return ajax xxxx", "d": "8/2015"}, {"body": "jslippy poplark similar problem code nt triggering injected service would job return would cause promise nt go along thus would nt called promises better return either another promise synchronous value switched order functions inside worked info", "d": "8/2015"}, {"body": "versions ember ie tested provide jsbin demo aid tracking", "d": "8/2015"}, {"body": "rwjblue sure problem still present since know avoid report back make demo", "d": "8/2015"}, {"body": "nt appear affect components component see seems affect bound attributes issues", "d": "8/2015"}, {"body": "thanks aortbals research closing favor updating summary issues", "d": "8/2015"}, {"body": "issue", "d": "8/2015"}, {"body": "closing favor trying consolidate", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "nt think bug bindings really work things mutable boolean values array nt fit bill issue exists array strings", "d": "8/2015"}, {"body": "shipped closing", "d": "8/2015"}, {"body": "sadly missed work ember updated internals move reserved word flagged deprecation removed next lts release", "d": "8/2015"}, {"body": "forked example repo peec needed mods", "d": "8/2015"}, {"body": "still seem issues elements paperradiobutton papercheckbox think issue polymer side ember see", "d": "8/2015"}, {"body": "polymer elements nt use works paperradiobutton checkbox drawer panel others use work see", "d": "8/2015"}, {"body": "confirm matheusdavidson reports chrome however seems work firefox suspect ember js andor polymer incompatibilities involving built shadow dom chrome uneducated guess though", "d": "8/2015"}, {"body": "tried browsers none works depending config shadow shady dom look like working transition routes see bug browsers tried use ember polymer month success told polymer members trying create interop get things working take time", "d": "8/2015"}, {"body": "able see main issue related polymer ready callback fires basically polymer element getting generated dynamically say glimmer ready fire content available able work around issue monkey patching broken components use attached callback instead ready fires element actually inserted page dom", "d": "8/2015"}, {"body": "thanks insight dnegstad", "d": "8/2015"}, {"body": "currently workaround use instance element polymer inside ember dark", "d": "8/2015"}, {"body": "concluded use emberpaper addon instead uses css angular material goes though googles ux team validation aug skrev steffen brem notifications githubcom currently workaround use instance paperinput element polymer inside ember dark reply email directly view github", "d": "8/2015"}, {"body": "finally solved", "d": "8/2015"}, {"body": "looking", "d": "8/2015"}, {"body": "think issue closed option documented", "d": "8/2015"}, {"body": "thanks diogomafra", "d": "8/2015"}, {"body": "tomdale told solution fair say never really understood get working way deferreadiness really think deserves separate blogpost least shed light proper way thanks short awesome description solve", "d": "8/2015"}, {"body": "tomdale threw one together someone issue would mind correcting something wrong feel free reuse anything makes sense put ember context could take post", "d": "8/2015"}, {"body": "spree ember lib array promises service spreeember addons push promises initializers host app initializes waits promises resolve application beforemodel hook rsvp super clean", "d": "8/2015"}, {"body": "hhff sounds promising could extrapolate code", "d": "8/2015"}, {"body": "actually still working local branch post ready", "d": "8/2015"}, {"body": "rwjblue admit pretty stupid ca nt figure simple way set attribute integer using vmalloc set property observe property cast integer set value could check input type number attribute parseint", "d": "8/2015"}, {"body": "totally one current behavior nt make sense \u05d9\u05d5\u05dd ben borowski notifications githubcom wrote rwjblue admit pretty stupid ca nt figure simple way set attribute integer using input vmalloc set property observe property cast integer set value attr could check input type number attribute parseint reply email directly view github", "d": "8/2015"}, {"body": "vmalloc quick hacky workaround set input valuemodelordinal case component also need set initial value ordinal think must better way", "d": "8/2015"}, {"body": "tracking failing test pr", "d": "8/2015"}, {"body": "still kinda fuzzy bug needs happen igort put together runnable demo jsbin something dgeb addressed yet know bunch work done already", "d": "8/2015"}, {"body": "rwjblue nt addressed yet complexity registry container relationships registry multiple containers registry fallback registry course recursive communication possible chain related registries containers straightforward instance container might received registration fallback registry registration reset fallback registry would expected container entries cleared new registration added key container direct registry fallback registry would replace fallback registry entry unclear whether previously instantiated objects cleared look problem registry container notifications murkier seems simple alternative call force reset entry container igort although nt automatic work", "d": "8/2015"}, {"body": "shim threw together nearestwithproperty works ember", "d": "8/2015"}, {"body": "suffers problem nt use custom ids possibly relevant code js graphhasgraphparentjs init thissuper arguments var graph thisnearestwithproperty isgraph thisset graph graph nfgraphjs init thissuper arguments var graph thisget graph graph graphregistergraphic graphregisteredgraphicjs init thissuper arguments var graph thisget graph graph graphregistergraphic", "d": "8/2015"}, {"body": "im also getting trouble trying set aria values input fields guess setting default value getting changes model values flow cause issue case nt runloop ensure final value used rendering", "d": "8/2015"}, {"body": "closing longer exposed externally without addon", "d": "8/2015"}, {"body": "submitted update seems still issue swapping location fixes issue likely means another case tag messing things changes url functions css based solution prevent tag used use something element id also embercli issue ember one see closing favor", "d": "8/2015"}, {"body": "ok pretty stale solution call overriding hooks case private one going close nt really see way forward happy reopen others better idea", "d": "8/2015"}, {"body": "joshforisha mean using fetch instance instead using also pass directly think would work purposes test", "d": "8/2015"}, {"body": "sorry super long delay seems working", "d": "8/2015"}, {"body": "lol problem thanks follow feeling working since series sam tue aug pm robert jackson notifications githubcom wrote closed reply email directly view github", "d": "8/2015"}, {"body": "changed way deal propsattributes may fixed nt setup locally test", "d": "8/2015"}, {"body": "services documented current guides gladly help review pr changestweaks guide api docs closing since guide exists", "d": "8/2015"}, {"body": "underlying code different iterations believe working properly closing let know still broken jsbin would helpful reopen", "d": "8/2015"}, {"body": "someone confirm still issue", "d": "8/2015"}, {"body": "deprecation removed guess nt get fixed sorry folks", "d": "8/2015"}, {"body": "provide jsbinembertwiddle certain understand", "d": "8/2015"}, {"body": "fixed context switching case removed codebase part efforts closing", "d": "8/2015"}, {"body": "updated jsbin canary still seems funky", "d": "8/2015"}, {"body": "emberselect deprecated removed closing", "d": "8/2015"}, {"body": "believe working intended currently using prevents setting attribute similar worked previously using coerced string means demo using", "d": "8/2015"}, {"body": "global integer tracks given transition amongst transitions entire system code manages see reason fails second test actually getting third transition first test initial visit first test redirection second test initial visit nt think bug perse though definitely understand confusion hit", "d": "8/2015"}, {"body": "emberselect deprecated removed closing", "d": "8/2015"}, {"body": "path mentioned used internally represent errorloading routes every route transitioned must url chosen prevent naming conflicts end user applications pretty unlikely route actual app behavior seeing would expect call inside error route ultimately nt bug going clsoe issue happy reopen explaination nt address issue properly", "d": "8/2015"}, {"body": "hi rwjblue thanks explanation since unuseddummyerrorpathroute used internally basically hidden outside world would expect remain hidden calling public method route calling refresh case akin setting godzilla loose tokyo lose model url get raw javascript thrown via location bar inconsistent refresh behaves everywhere else could least added documentation supported error routes realize use case described probably quite rare even case expect pop often production would still like understand anything side mitigate problem make error routes behave nicely refresh calls known issues like live application makes sad panda ideas cheers michal", "d": "8/2015"}, {"body": "calling refresh case akin setting godzilla loose tokyo smilingimp sure error route gets model generally folks nt put hook calling nt really know would expect trying error route", "d": "8/2015"}, {"body": "well long really quite sad story short ish version implement language switching nontrivial web application way works gets json language file via rest based global variable indicating current language switch language call force refresh model get new language file since call level propagate downwards child routes error route switch language also get called error route fact directly calling error route even know call somewhere higher ends error route customized way standard builtin ember error route like example obviously switching languages way far optimal argument said quite sad story regarding would expect typing kind realized really easy way looks like error route tries get model serializing original reason url use kills everything reason apparently function failed promise based see url might wrong ideally guess error route able use original reason refresh model without whole serialization shebang completely misunderstanding everything", "d": "8/2015"}, {"body": "sorry super delayed response type question better suited stack overflow irc needhelp community slack room please link back find solution help anyone comes via search", "d": "8/2015"}, {"body": "deprecated ember removed ember closing", "d": "8/2015"}, {"body": "run issue well especially frustrating since breaks example provided guides", "d": "8/2015"}, {"body": "believe fixed", "d": "8/2015"}, {"body": "closing favor", "d": "8/2015"}, {"body": "believe fix landed jsbin issue description nt runnable due ember data canary longer fixture adapter mikenorth update jsbin andor test see fixed", "d": "8/2015"}, {"body": "really sure progress generally suggesting acceptance tests use artificial means visit specific url closing happy entertain pr consensus found", "d": "8/2015"}, {"body": "closing favor", "d": "8/2015"}, {"body": "happy review merge feature adding nt seem issue framework closing issue", "d": "8/2015"}, {"body": "simonjefford would mind checking canary", "d": "8/2015"}, {"body": "seems like browser bug nt really think much end also test url works properly current chrome closing happy reopen something side", "d": "8/2015"}, {"body": "guess using would mean case actually instance sorry sat long without comment removed codebase efforts going close reevaluate comment nt help", "d": "8/2015"}, {"body": "agreed stefanpenner", "d": "8/2015"}, {"body": "hello warning nt bind style attribute template registration form loading mdloader controller set loading true controller get warning warning binding style attributes may introduce crosssite scripting vulnerabilities", "d": "8/2015"}, {"body": "definitely agree guides testing need updated issues open guides repo seems might want another one overhaul testing guide something closing issue favor issues guides repo since nt really bug ember", "d": "8/2015"}, {"body": "anything come trying upgrade numerous components tests project seeing numerous instances seems hopelessly vague seems one pr attempt made closed reasons clear wycats higher level issue going thanks", "d": "8/2015"}, {"body": "due way resolver looks template names route driven template looked attempts render component named agree trigger assertion due lack dash name looking checks first found used causing loop nt plan leverage routable components future versions unsure type another type close", "d": "8/2015"}, {"body": "closing see conversation details", "d": "8/2015"}, {"body": "nope using like perfectly fine", "d": "8/2015"}, {"body": "firstly sorry delay responding bit swamped lately something dockyardemberdataroute created make simple think documenting pattern guides would good unsure belongs one existing guides one yet written might want check folks documentation channel community slack", "d": "8/2015"}, {"body": "please provide demo jsbin embertwiddle", "d": "8/2015"}, {"body": "hard create demo requesting supported yet therefore allow explain situation providing clear example currently template contains map country divided province polygons looks like course would prefer hard code link point instead something like work linkto support least originally created issue looking documentation find", "d": "8/2015"}, {"body": "seems generally work could also use something like emberhrefto set attribute needed instead using", "d": "8/2015"}, {"body": "sorry lack response nt really seem like bug ember happy reopen issue provide reproduction dig", "d": "8/2015"}, {"body": "sorry delayed response double checked jsbin seems update value position properly upon update closing issue happy reopen misinterpreting jsbin", "d": "8/2015"}, {"body": "referenced chrome bug marked fixed closing nt think much", "d": "8/2015"}, {"body": "martndemus still issue looking code see solution fix document", "d": "8/2015"}, {"body": "updated includes changes made ksol", "d": "8/2015"}, {"body": "may stumble across deprecation point page tells use return new emberhandlebarssafestring get rid deprecation still work least looking jsbin noticed solution use return new emberhandlebarssafestring rather use htmlsafe return", "d": "8/2015"}, {"body": "chriscareycode believe best thing use without prototype extensions deprecation guide date written things changed", "d": "8/2015"}, {"body": "property private accessing things initialized generally supported", "d": "8/2015"}, {"body": "drobannx update jsbin confirm still issue", "d": "8/2015"}, {"body": "rwjblue made bin still get issue ember working ember get error", "d": "8/2015"}, {"body": "build assets working properly pack gem assets published closing", "d": "8/2015"}, {"body": "agree teddyzeenny wycats objections", "d": "8/2015"}, {"body": "favor mind making public api fleshed", "d": "8/2015"}, {"body": "", "d": "8/2015"}, {"body": "fixed test passing glimmer restructuring happy reopen still issue", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "introduced official public api types helpers take look documentation rfc", "d": "8/2015"}, {"body": "generally track feature requests emberjsrfcs would please reopen", "d": "8/2015"}, {"body": "deprecation guides include context switching information", "d": "8/2015"}, {"body": "ever changed pods need two additional routes routenameloading routenameerror route", "d": "8/2015"}, {"body": "sure theory could add debug test checks modules resolver repo ensure compliant dashes rule world mentality closing happy reopen make bit actionable", "d": "8/2015"}, {"body": "fixed upstream guides repo", "d": "8/2015"}, {"body": "shows browser listing tested sauce labs", "d": "8/2015"}, {"body": "thanks", "d": "8/2015"}, {"body": "think fix via much discussed routing service going close need keep bug tracker focused issues", "d": "8/2015"}, {"body": "theory possible update event dispatcher capture additional arguments pass familiar many popular use cases setup though know", "d": "8/2015"}, {"body": "use case third party first party uses jquery extra params similar perhaps ddau friendly motivation time opened issue trying make ember component encapsulates typeaheadjs respond typeahead select event asks handler like autocomplete library fires event something gets selected passes selection data event know hard justify change popular approach fire event inside handler hunt information need like wrapper zurb foundation range sliders dealing extra parameters got make proxy call handler function actions attribute guess could like ember supporting custom parameters could cleaner code always love ember every time something ember code gets smaller particular case gets uglier still make sense today using finding easier reimplement everything emberland integrate third parties components gets center attentions wo nt go direction isolation wildcard nature integrations need", "d": "8/2015"}, {"body": "thank detailed reply think would possible thread extra arguments system gladly review pr updating code nt sure actual need runspired working event related things lately capture work gesture support thoughts thread extra arguments", "d": "8/2015"}, {"body": "updated demo canary still seems issue safari chrome works fine sure ember bug though mixonic thoughts", "d": "8/2015"}, {"body": "dollar shave club tshirt whomever fixes bug tweet claim", "d": "8/2015"}, {"body": "fixed", "d": "8/2015"}, {"body": "longer supported gladly accept pr fixing issues going keep issues open issue tracker", "d": "8/2015"}, {"body": "generate controller mentioned nt think something change trivially also convinced bug truest sense closing seems resolution mentioned happy reopen needed", "d": "8/2015"}, {"body": "deprecated longer ships ember default closing", "d": "8/2015"}, {"body": "looks like issue open upstream sure anyone time dig though", "d": "8/2015"}, {"body": "emberrunnext functionname callbacks inconsistent", "d": "8/2015"}, {"body": "reemasaluja sure related issue", "d": "8/2015"}, {"body": "still need determine handled anglebracket land wycats ping", "d": "8/2015"}, {"body": "talking krisselden day recent refactor unlock ability support", "d": "8/2015"}, {"body": "mixonic ton work close due timing rebase issues anyone care handle rebase us get documented", "d": "8/2015"}, {"body": "knownasilya commented maybe time", "d": "8/2015"}, {"body": "look later today", "d": "8/2015"}, {"body": "still broken canary become weeks", "d": "8/2015"}, {"body": "going go ahead close happy reopen reproduction", "d": "8/2015"}, {"body": "apparently gone wonder replaces stuckouttongue", "d": "8/2015"}, {"body": "things seem work properly using ember ember data jsbin using ember ember data throws error mutewinter mentioned jsbin", "d": "8/2015"}, {"body": "fix issue ember data unsure want release change potential interim work around would adding initializer like following demo", "d": "8/2015"}, {"body": "closing believe work around pr ember data solve issue everyone sorry long delay please let know additional errorsissues reopen related", "d": "8/2015"}, {"body": "closing favor know newer idea path forward made think", "d": "8/2015"}, {"body": "part dealing proxied things deprecated removed going close still problem happy reopen", "d": "8/2015"}, {"body": "nested helperscomponents definitely supported ember upgraded handlebars still quite sure api nested angle bracket components likely syntax specified since important issue closing issue somewhat old nt really describing bug would gladly accept pr adding documentation", "d": "8/2015"}, {"body": "general transition discussion rfcs repo", "d": "8/2015"}, {"body": "closing since fixed work around", "d": "8/2015"}, {"body": "tomdale believe issue completed checklist items seem done waiting go feature hopefully confirm close", "d": "8/2015"}, {"body": "make actionable close", "d": "8/2015"}, {"body": "need made performant", "d": "8/2015"}, {"body": "moved esperanto option babel afaik ability replace relative imports stefanpenner aware option babel", "d": "8/2015"}, {"body": "stefanpenner aware option babel unfortunately babel support box expose function us implement userland babel used everything relatively painless someone implement without mega legwork required previously", "d": "8/2015"}, {"body": "gotcha time could drop link reference aid researching", "d": "8/2015"}, {"body": "test babel demonstrates usage also", "d": "8/2015"}, {"body": "longer present", "d": "8/2015"}, {"body": "status qps seem work one cps second one depends array nt updated subsequent changes array", "d": "8/2015"}, {"body": "many changes naming structure ed landed likely resolved please provide checklist something actionable closing reopen still issue", "d": "8/2015"}, {"body": "think avoid changing support suggest folks deal api structure use transformation layer convert source format something works", "d": "8/2015"}, {"body": "closing issue favor stef wip pr", "d": "8/2015"}, {"body": "updated jsbin work canary seems working properly misunderstand bug happy reopen misunderstood broke jsbin updating", "d": "8/2015"}, {"body": "gone gone referenced issue closed working well latest versions closing think moved reopen folks disagree", "d": "8/2015"}, {"body": "stefanpenner correct think embercli drop baseurl entirely merely rewrite asset urls needed right rooturl ember cares case seems work case agreed believe embercli issue though ember one", "d": "8/2015"}, {"body": "reduce computed removed observers believe issue likely resolved", "d": "8/2015"}, {"body": "still issue need reproduction able track happy reopen reproduction current versions", "d": "8/2015"}, {"body": "thanks explaining thriqon", "d": "8/2015"}, {"body": "think came agreement mergeassign would fine would welcome pr tests closing issue since bit like feature requestproposal", "d": "8/2015"}, {"body": "closing bit old another issue tracking perf issues", "d": "8/2015"}, {"body": "seems resolved already", "d": "8/2015"}, {"body": "jsbin provided using redirect instead manually checking transition current routes name index reworked jsbin work properly", "d": "8/2015"}, {"body": "really sure bug would happen time review much tune support outlets", "d": "8/2015"}, {"body": "thar dragons corner cases old named outlet semantics nt know bug issue silent months close people reopen current examples overall takeaway stop using named outlets give benefits services components creating massive hidden pitfalls", "d": "8/2015"}, {"body": "tracking array scenarios still need deprecate usage various function prototype extensions relatively simple need supported throughout timeframe though", "d": "8/2015"}, {"body": "easier less cost people optin even strongly encourage", "d": "8/2015"}, {"body": "closing issue happily reopen reproduction current versions ed ember", "d": "8/2015"}, {"body": "closing happy reopen reproduction", "d": "8/2015"}, {"body": "hook seems reasonable kanongil happily review pr implementing new api need feature flagged", "d": "8/2015"}, {"body": "works without error", "d": "8/2015"}, {"body": "needs turned rfc expose routing service instead folks grabbing application controller going away anyways closing favor future routing service rfc", "d": "8/2015"}, {"body": "issue around deferred setting router first call demo current release branch", "d": "8/2015"}, {"body": "rewritten avoid usage reduce computed array computed likely fixed refactor closing reopen failing jsbinembertwiddle shared", "d": "8/2015"}, {"body": "specifying way forward etc going much less common enable angle bracket components default closing suggestion use update original demo using", "d": "8/2015"}, {"body": "updated provided jsbin seems properly using error template query param used closing", "d": "8/2015"}, {"body": "ancient seems like still problem figure circumstances periodically try set query parameter controller propagate url check value property controller correctly set url changed tried using avail woe", "d": "8/2015"}, {"body": "experiencing issue", "d": "8/2015"}, {"body": "rwjblue update", "d": "8/2015"}, {"body": "fixed demo", "d": "8/2015"}, {"body": "closed", "d": "8/2015"}, {"body": "moves", "d": "8/2015"}, {"body": "nt really seem actionable reopen inspector repo needwant work still", "d": "8/2015"}, {"body": "jayphelps jamesarosen still issue chance one would try whipping pr", "d": "8/2015"}, {"body": "rwjblue nt cycles dig right disappointed", "d": "8/2015"}, {"body": "yes take next sprint starts next monday try slate", "d": "8/2015"}, {"body": "ok plan autolocation add change return emit deprecation warning change rest use instead historylocation keep use always full url add change return emit deprecation warning change rest use instead tests quite sure yet", "d": "8/2015"}, {"body": "repro jsbin seem demonstrate issue please open new issue still applicable", "d": "8/2015"}, {"body": "significant refactoring occurred think closed", "d": "8/2015"}, {"body": "think documented work way ie document calling agree would nice actually work would happily accept pr fixing nt seem much activity going close", "d": "8/2015"}, {"body": "branch become time reduces", "d": "8/2015"}, {"body": "closing likely going completely deprecated point cycle mostly avoided today closure actions", "d": "8/2015"}, {"body": "seems working properly demo", "d": "8/2015"}, {"body": "going close believe asyncawait best path forward want something without asyncawait need rfc proposalissue track tomdale please reopen rfcs still interseted pushing forward", "d": "8/2015"}, {"body": "ran basically exact issue today capybarawebkit ember solution use computed property instead template eg instead component filename emcomputed file function return thisget file name template filename", "d": "8/2015"}, {"body": "happily review pr nt seem likely point closing", "d": "8/2015"}, {"body": "wow old issue nicely closed rwjblue", "d": "8/2015"}, {"body": "nt believe supported longer exposed part happy reopen still issue idiomatic style ember", "d": "8/2015"}, {"body": "updated provided jsbin current canary setup reported issue clicking encoded transitioned raw refresh remains", "d": "8/2015"}, {"body": "nt really think direction want go also open pr rfcs cibernox sorry sitting long", "d": "8/2015"}, {"body": "neither mostly motivated arrayreduce computed black magic never felt need", "d": "8/2015"}, {"body": "closing gone stale", "d": "8/2015"}, {"body": "possible", "d": "8/2015"}, {"body": "manuelmitasch thanks taking time submit see nt terribly good handling feature requests main repo issues due created repo track proposals pr requests features issues still interested pushing forward could reopen", "d": "8/2015"}, {"body": "seems working correctly demo closing open new issue reproduction steps", "d": "8/2015"}, {"body": "rfc would nearly remove reliance jquery eventing current implementation used normalize event something could pulled microlib exposing needed jquery amd module", "d": "8/2015"}, {"body": "issue fixed point seems like might regression run behavior described transitionto login page application route model hook conditionally fires ajax request says user unauthenticated fairly simple scenario without query params anything page load application route hooks get called twice initial transition first transition aborted redirecting login page transition log looks like", "d": "8/2015"}, {"body": "issue related model routes nt working trying return model data store without hitting db filtering manually model function return thisstorefind business id bid found different ember inspector views model column blank even though model returned fashion illustrated", "d": "8/2015"}, {"body": "emberview deprecated", "d": "8/2015"}, {"body": "caffinatedmonkey sure looking section view documentation still applies components handle event method", "d": "8/2015"}, {"body": "caffinatedmonkey mixonic may able explain use case component dataset use loop click one datum want send action component need specific element clicked perform logic say hiding masking rest dataset inside standard template able something like older app still may new way expected inside component writing app actual dom element item iterated however component writing today referring component ember way nested components things clicked update able get work making element want click sub component inside components controller implemented click event like still nt seem like ember way issues hopefully helps someone googling future", "d": "8/2015"}]