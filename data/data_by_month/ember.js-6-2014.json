[{"title": "views created extended", "body": "states var view emberviewcreate templatename sayhello name bob following page appuserview emberviewextend templatename user firstname albert lastname hofmann", "num": "5092", "d": "6/2014"}, {"title": "todo mvc tutorial error", "body": "going emberjs turtorial building todo mvc getting following error get found following code appjs var todos emberapplicationcreate todosstore dsstoreextend todosapplicationadapter dsfixtureadapterextend git repo help would greatly appreciated", "num": "5090", "d": "6/2014"}, {"title": "documentbodycontains supported old ff", "body": "hi upgrading ember got errors ff know old least throw errors using unsupported method using documentbodycontains method supported old browser support matrix nodecontains method", "num": "5088", "d": "6/2014"}, {"title": "publishing tagged builds incorrectly", "body": "looks like new publishing needs tweaks publishing even though tagged cc rondalesc", "num": "5085", "d": "6/2014"}, {"title": "query params causes maximum call stack size exceeded error", "body": "query params seem getting stuck infinite refresh loop changing machty guessing wink", "num": "5081", "d": "6/2014"}, {"title": "eachview read property parentnode null", "body": "bug change templatename call rerender application breaks isolated issue seems happen event triggered despite called triggered views set could filter jsfiddle isolating bug workaround", "num": "5080", "d": "6/2014"}, {"title": "feature queryparams breaks tests read stash undefined", "body": "made jsbin demonstrating testing bug believe found queryparams canary changing query parameterized attribute programmatically test environment test runner dies says", "num": "5078", "d": "6/2014"}, {"title": "create rss feed emberjs blog", "body": "would nice add emberjs updates blog rss reader", "num": "5075", "d": "6/2014"}, {"title": "align", "body": "sorting ember works really well however would neat api controllers aligned currently possible pass sort properties sort function second argument takes either specifically equivalent current solution pass custom function also specifies sorted properties doable course semantics similar would neat hjdivad hero everything computed ember thoughts source", "num": "5072", "d": "6/2014"}, {"title": "debugger helper nt work intended", "body": "expectation user expect handlebars helper drop context template used actuality handlebars helper drops context debugger method steps duplicate open jsbin open browser console change context js bin output frame click run js button output frame pertinent details", "num": "5071", "d": "6/2014"}, {"title": "feature queryparams nested routes throws error latest canary", "body": "currently stackoverflow realized misconfiguring side possible bug queryparamsnew read story link explain happening steps error articles route defined two category searchterm app transitiontoroute articles directly transitiontoroute article article object called error appears think bug ember however someone explain error", "num": "5070", "d": "6/2014"}, {"title": "emberbinding allow bind dynamic object another dynamic object", "body": "request linked question according examples bind static property dynamically created object property property dynamically created object property another dynamically created object example var emberobjectcreate test var emberobjectcreate prototype emberdynamicbind frompath topath emberdynamicbind code basically two way binding run setting binding set think thing would accurate maybe optimized edit change terminology clarify", "num": "5066", "d": "6/2014"}, {"title": "better document component action stuff", "body": "like trips often enough", "num": "5065", "d": "6/2014"}, {"title": "relying promise returned transitionto", "body": "hi whenever transition however fails someroute redirects somewhere else using hook promise internal use need way know transition complete", "num": "5064", "d": "6/2014"}, {"title": "allow initializers time", "body": "case need initializer run certain initializer also yet another initializer missing something makes supporting impossible left nt needed far", "num": "5061", "d": "6/2014"}, {"title": "bug emberselect throw error ember inspector", "body": "hi notice inspect emberselect ember inspector research seems linked fact nt define optiongrouppath simple fix would protect line simple test follow better fix", "num": "5059", "d": "6/2014"}, {"title": "test env makes many requests appdestroy fails", "body": "trying set simple async tests get started testing ember whenever teardown runs simple get index range exception telling store members remove possible causes problem stepped stack far enough look full store number items duplicate ids could cause nt know test environment would generate multiple entries object noticed since started using test environment ember app making way requests load index page ever normal practice rather accepting sideloaded relationships store making request related object maybe doubleentered objects would ember run emberqunit suddenly make extra requests per related item might heart matter", "num": "5054", "d": "6/2014"}, {"title": "container validatename development assertion", "body": "usage validatename development assertions quick patch someone wants grab trouble let know gladly provide guidance cc bfbriggs maybe guys interested", "num": "5051", "d": "6/2014"}, {"title": "container cache resolves resolve undefined", "body": "turns something missing helper controller template take rather slow path gets annoying costly many misses would like propose provide mechanism also cache misses factorycache expire cache module users new things added registry global users maybe provide hook expires cache userinvocation likely usecase cache expiry lazy loading code", "num": "5050", "d": "6/2014"}, {"title": "queryparamsnew queryparams mapping objectarraycontroller broke since", "body": "using property mapping syntax queryparams like javascript appindexcontroller emberobjectcontrollerextend queryparams startdate startdate enddate enddate startdate null enddate null results far tell things broke guessing nt account property mapping syntax documented yet machty", "num": "5049", "d": "6/2014"}, {"title": "canary view using view default breaks existing code", "body": "ironically author offending commit switched using global lookup container resolution issue resolves metamorphview many attributes used able use like longer affect addition providing throws deprecation warning simple example large apps relied completely blows things place easiest possible solution use instead simply cool pr along bunch tests nt regress", "num": "5048", "d": "6/2014"}, {"title": "input type dynamic", "body": "ran helping emergentbehavior troubleshoot irc type attribute dynamic checkbox checkbox works unexpected ways think actually textfield example would possible detect type bound attribute offer warning raise error cc alexspeller emergentbehavior", "num": "5047", "d": "6/2014"}, {"title": "eventmanager stops propagation", "body": "using eventmanager view handle events wo nt propagate example causes bootstrap dropdown stop working seems strange eventmanager would stop propagation manner bug could someone explain intended behaviuor searching initially could find issue jsbin demonstrate problem", "num": "5046", "d": "6/2014"}, {"title": "indexof use map rebuild cache route change", "body": "looking pathlogical issue turns majority wait time inefficient search performed called target method since specific removeobserver exist triggering ever growing search event list instead cache hash handle method entity good enough bypass issue noticing discourse huge amount cost around observing binding fixing issue great help", "num": "5045", "d": "6/2014"}, {"title": "feature queryparams linkto helper active class added active", "body": "originally upgraded canary emberjs yesterday upgrade ember app old query params new making changes get mostly working state left links active time could nt figure going talking machty irc dove deeper emberjs canary create jsbin actually demonstrates confusion router handlers used linkview determine activeness changes issue code previously worked needed use jsbin reverse true ca nt even use resourceindex since unknown reason problems resource getting thought default index tried jsbin add template problemsindex thinking route controller view etc would generated required ca nt seem trigger happening tipped attempt use based comment left source code seems indicate computed value handle nt believe actually case least jsbin code switching use fixed problem would really nice either handle warn user using wrong", "num": "5044", "d": "6/2014"}, {"title": "computed property observers firing eachproperty", "body": "missing something fundamental work js var foo emberobjectextend friends function consolelog friends return thisget groups reduce function acc group return accconcat groupget accountscontent property groups eachaccounts foo function consolelog foo observes groups eachaccounts windowfoo foocreate groups embera emberobjectcreate accounts embera foo bar baz fooget friends fooget groups get accounts pushobject asdf", "num": "5043", "d": "6/2014"}, {"title": "queryparamsnew queryparamsdidchange triggered recursively refresh", "body": "latest changes queryparamsnew call within event route fires least second time multiple query params compounded event fire application becomes unresponsive see example reproduce issue see triggered twice testing links click various combinations see hit count jump much higher application become unresponsive", "num": "5037", "d": "6/2014"}, {"title": "deferred listener called suspended listener already added observerset", "body": "see scenario understanding buttons exhibit behavior increment counter exactly one reason deferred button follows first call propertydidchange within suspendobserver adds listener observerset suspended flag second call sees listener already present observer set nothing disregarding suspended flag observerset later flushed sendevent sees suspended ignores fixed issue temporarily modifying listenersunion add suspended listeners observer set since listenersunion internal modified place terrible solution", "num": "5034", "d": "6/2014"}, {"title": "route redirect method documentation incomplete", "body": "api docs incomplete regarding route redirect method says parameter received model give transition parameter right model one filled current transition useful order decide actually perform redirect si think described api docs", "num": "5031", "d": "6/2014"}, {"title": "firefox console nt show error message", "body": "problem chrome console show helpful error messages eg however console firefox nt show", "num": "5030", "d": "6/2014"}, {"title": "propsoal deprecate viewtransitionto", "body": "consider deprecating favor really low level private view concern", "num": "5026", "d": "6/2014"}, {"title": "emberdefaultresolver undefined mornings upgrade", "body": "upgrading ember canary morning getting following error currently setup", "num": "5024", "d": "6/2014"}, {"title": "ember nt support svg", "body": "problem ember creates dom elements html partials wrapping getting firstchildelement problem svg nodes must created function properly different name space ember relies jquery class name changes binding jquery uses set classes internally nt work svg elements property behaves differently proposed solution expose allow external scripts add appropriate mappings svg elements create third second party script adds appropriate mappings patches jquery properly support svg current workarounds manually updating emberjs support proper svg element mappings using plugins support svg jquery note jquerysvgjs jquerysvgdomjs seemed break jquery updated recently seems suboptimal fix", "num": "5021", "d": "6/2014"}, {"title": "promises missing finally handler", "body": "ember documentation states finally handler available promises however using finally promise yields uncaught typeerror undefined function current documentation wrong missing something", "num": "5018", "d": "6/2014"}, {"title": "queryparamsnew failed model refresh enter error state", "body": "scenario fairly simple got global queryparameter kept application controller subroutes inherit property use contextually aware model subroutes watch changes queryparams refresh model one results error error substate never successfully entered issue reproduced error occurs appears application route attempting run event entering substate changed produces error undefined scenario error occurs", "num": "5017", "d": "6/2014"}, {"title": "sending messages inner controller outer controller different outlet", "body": "ember application outer controller template rendered standard outlet template contains named outlet outlet details one actions controller transitiontoroute renders inside details outlet inner controller handles nested template need action inner templatecontroller trigger action outer controller seems ember break outlet barrier events bubble within outlet parent outlets things tried tried thissend thissendaction tried injecting outer controller inner controller needs main main embercomputedalias controllersmain results undefined function error using action tag nested template sending action exists parent controller results nothing handled action selecttab handle action error caused returning true action handler controller causing action bubble error trying even possible know could simulate using jquery rather prefer ember way one", "num": "5015", "d": "6/2014"}, {"title": "fastboot proof concept", "body": "hey spent time working proof concept getting fastboot working ember today know htmlbars future make much easier wanted see possible handlebars world got simple proof concept seems working nt feel terribly hacky judge lem know think happy make pull request sorts open discussion discuss think appropriate", "num": "5013", "d": "6/2014"}, {"title": "consider component helper dynamic component loading", "body": "would quite handy building dynamic pages generate various components based dynamic data may addon material", "num": "5007", "d": "6/2014"}, {"title": "uncaught rejected promises prevent run loop completing", "body": "working code catches rejected promise modifies observable state rethrows error dom updated reflect changed state rejected promise catch handler example jsbin previously pattern worked ember broken ember git bisect suggests change introduced regression limited understanding problem appears rsvponerrordefault function breaking runloop preventing tasks completing example tasks render queue ember data example realworld example using behavior application crud route creating new records user successfully saves record wish update url reflect new id record however save fails wantneed anything ember data automatically sets property record property observable thus simply reference template user see errors reported server save fails hbs name input valuename name name errorsname message save workarounds one workaround always including callback rejected promise stefanpenner mentioned workaround irc defining function receive error uncaught rejected promises next steps opened issue better understand regression requires fixing anti pattern discouraged thanks", "num": "5006", "d": "6/2014"}, {"title": "embernoop non feature request", "body": "would nice convenience dirt pounding necessary already present missing something could considered future happy toil away pr", "num": "5003", "d": "6/2014"}, {"title": "utility functions improved source readability", "body": "update closed favor consideration given creating ember utilities package similar something like lodash underscore ember microlibraries depend would dry lot common functionality packages ensure common interfaces utility functions make much readable code could even lodash underscore ca nt think good reason use either long something clean boiler plate loops recently utility file added backburner wasteful library implementation although would better utility funcitons within package might spots need harder read performance reasons fine still plenty room increased readability cc tonycoco", "num": "5001", "d": "6/2014"}, {"title": "active states linktos working expected", "body": "presentation using ember mockup tool noticed linktos nt proper active states clicking allergies would expect links stay active nested route hierarchy actually unsure one works tried reordering routes one ever works ideas router template", "num": "4999", "d": "6/2014"}, {"title": "feature queryparams error refreshing page query param containing encoded symbol", "body": "jsbin steps reproduce click query parameter added refresh page get error problem seems doubledecoding query string turns called", "num": "4998", "d": "6/2014"}, {"title": "make sortablemixinorderby overridable", "body": "ghost list blog post models relevant properties date date drafts null published dates like sort list way returned server represented drafts sorted published posts published posts sorted bottom list discussion making overridable seemed people favored compare two values property thing two date props ca nt compared without knowing property dealing models relevant properties nt say also nt seem way sort properties managed get working override", "num": "4997", "d": "6/2014"}, {"title": "updates packaging break bundled application builds", "body": "details ember far tell screws result shimming ember optimized build changed updated everything bundled properly", "num": "4994", "d": "6/2014"}, {"title": "checkbox truefalse customization", "body": "checkboxes use tinyint instead bool easy enough add initiliazer think implementation might helpful core addition start working pr anyone implementation suggestions reasons nt done please let know", "num": "4992", "d": "6/2014"}, {"title": "unable pass objects arguments render view helpers", "body": "following jsbin illustrate issue passing primitives works objects result nothing set supposed supported hope many use cases would possible work patch please let know jsbin info object defined globally contains property data inside view template use display value works fine inside template use render similar view property view remains null arguments set primitive values correctly set point since definitely available context nt able pass view jsbin illustrates situation comment render call viewc see renders fine template use case maybe feature request nt seem like one since data binding passing arguments widespread ember bad things supported places others specially data binding ember secret sauce add use case want build grid view use render associate view controller need pass config object order configure columns etc complex settings nt fit primitives", "num": "4989", "d": "6/2014"}, {"title": "access component properties template", "body": "sometimes useful access properties components within template either exposing component otherwise exposing explicit block params two examples suggestions ideas much appreciated wycats mentions related issue seems relevant reprint may want eventually provide ways block arguments component send information back explicitly way work think template contextcontroller layout contextcontroller helper would switch template context component template internally called layout would use layout contextcontroller source js alternative ability specify specific block params properties component made available template yield function context options var view optionsdataview parentview thisparentview template get template template emberassert component must parent view order yield parentview alternative expose keyword yield function context options var view optionsdataview parentview thisparentview template get template template emberassert component must parent view order yield parentview", "num": "4985", "d": "6/2014"}, {"title": "queryparamsnew bug press back button make whole page refreshes", "body": "given set query params route change query params click back button whole page refreshes like press cmdr jsbin example try chrome inspector opened workflow like open jsbin index page click posts link redirect posts page click set page button change query params click back button browser whole page refreshes redirect back index page see chrome inspector redisplays ember information expect behavior leave postsroute enter indexroute", "num": "4984", "d": "6/2014"}, {"title": "childviews state never updates", "body": "matters building components keyboard accessibility need know order child views able focusselect next item list two sane approaches use unfortunately unreliable register child views parent mange list problem nt know position array insert new item since neither work bail ember use dom find items get ids map back ember components", "num": "4981", "d": "6/2014"}, {"title": "ui loading soon controller actions responding ui", "body": "issue testing wondered possible bug ember sets controller actions respond ui events see description symptom may related testing perhaps possibility bug", "num": "4980", "d": "6/2014"}, {"title": "keep file naming consistent across builds", "body": "using embercli using canary build ember found built file would possible us keep across builds", "num": "4976", "d": "6/2014"}, {"body": "setting something instead observing something nonobservable", "d": "6/2014"}, {"body": "actually think error line linked looks like happening hook hook maybe misunderstanding saying using somewhere somehow creating condition throws error route transition abbreviated stack trace possibly related ca nt figure happened commit branch", "d": "6/2014"}, {"body": "atonparker appears observing routecontroller currently meant observable", "d": "6/2014"}, {"body": "first one creating instance second defining new class view", "d": "6/2014"}, {"body": "first one creating instance rather defining class defining view page understand defining view defining new class view might two different things kinda confusing page supposed explain basic usage views expect mention extend method uses difference create method", "d": "6/2014"}, {"body": "need create store since happens automatically also nt call passing anything enough also get better debugging", "d": "6/2014"}, {"body": "thanks lot turns using incorrect versions ember ember data conflicted way tutorial built youre correct nt include store although tutorial say use extend try removing see effects anything adversely thanks lot input mon jun pm ilya radchenko notifications githubcom wrote need create store since happens automatically also dont call extend passing anything enough var todos emberapplicationcreate todosapplicationadapter dsfixtureadapter reply email directly view github drew botka hellodrewbot gmailcom", "d": "6/2014"}, {"body": "drewbot could close issue thanks", "d": "6/2014"}, {"body": "thanks robert mon jun pm robert jackson notifications githubcom wrote closed reply email directly view github drew botka hellodrewbot gmailcom", "d": "6/2014"}, {"body": "dup fixing today lest murdered pitchforks", "d": "6/2014"}, {"body": "lol thanks nt mean hassle", "d": "6/2014"}, {"body": "closin dup", "d": "6/2014"}, {"body": "hmm yes query params expecting application cache stashing modeldependent state think make option whether making optional makes sense purpose testing", "d": "6/2014"}, {"body": "awesome thanks much", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "loostro believe request go emberjswebsite repo", "d": "6/2014"}, {"body": "oh nt aware repo browsed found issue tried link mentioned work", "d": "6/2014"}, {"body": "closeing continue emberjswebsite", "d": "6/2014"}, {"body": "actually works", "d": "6/2014"}, {"body": "selvagsz thanks works tried http nt work", "d": "6/2014"}, {"body": "commadelimited context template makes quite handy debugging although would unsure feasible actually allow stepping templates suspect would push source maps limit beyond open suggestions", "d": "6/2014"}, {"body": "stefan could swear used drop method instead context template", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "confirm though correct context perhaps directly debugger statement helper method add consolelog statement", "d": "6/2014"}, {"body": "provide quick jsbin", "d": "6/2014"}, {"body": "stefanpenner thanks response took hours fiddling reproduce error explained maybe strange app code comments also setup redirect error happens elsewhere app", "d": "6/2014"}, {"body": "think fixed local ember build confirm jsbin working", "d": "6/2014"}, {"body": "hi machty thanks works could say error lies also next canery update take place thanks", "d": "6/2014"}, {"body": "cannect canary updates whenever pushed master broke something else made change fix jsbin need rethink approach updated canary today tomorrow", "d": "6/2014"}, {"body": "perfect machty wait update", "d": "6/2014"}, {"body": "trouble understanding request dynamic object unfamiliar terminology", "d": "6/2014"}, {"body": "using right terminology could explain get object definition dynamic property change fact talking dynamically created object uptade issue objects create initialization number object determine advance example backed data db however migth need bind objects property objects case way bind property runtime think achieve dynamicbind talking", "d": "6/2014"}, {"body": "believe redirecting actual rejects promise want fire every time would need success failure handlers", "d": "6/2014"}, {"body": "think reasonable let know redirecting give way access promise redirection method would nice well", "d": "6/2014"}, {"body": "sneaky internal method causes transition promise follow redirects rather treat aborts undocumented going changing redirects nt treated aborts unless original transition explicitly ed", "d": "6/2014"}, {"body": "salazarm rsvp promise behavior need always process use although machty planned refactor make moot point", "d": "6/2014"}, {"body": "rjackson oh thanks info thanks everyone help", "d": "6/2014"}, {"body": "supported box locks added ton documentation describing ordering works see published docs released", "d": "6/2014"}, {"body": "assertion checking still place would need though", "d": "6/2014"}, {"body": "ahh see mean sorry confusion", "d": "6/2014"}, {"body": "would sth accept pr", "d": "6/2014"}, {"body": "assuming implementation supports fine removing assertion would like see tests confirm though straightforward add think meantime could use three ensure done right order", "d": "6/2014"}, {"body": "rjackson fairly certain assert existed prior safely removed", "d": "6/2014"}, {"body": "krisselden awesome thanks chiming marcoow would please work pr", "d": "6/2014"}, {"body": "rjackson marcoow sent pr", "d": "6/2014"}, {"body": "igort seems somewhat related black holing idea", "d": "6/2014"}, {"body": "black holing idea", "d": "6/2014"}, {"body": "update able get ember accept sideloaded models cause bug receiving one response model per desired model instead pretty sure testsuitebreakingbug coming computed property enumerating models remove calls function one times calls indices already reset searching nonexistent index", "d": "6/2014"}, {"body": "looking change commit message pr otherwise dev assertions project", "d": "6/2014"}, {"body": "updating docs weekend wan na", "d": "6/2014"}, {"body": "machty ahh okay care shed light ditched previous familiar form maybe discussed somewhere", "d": "6/2014"}, {"body": "new syntax much flexible syntax potentially many options many colons add", "d": "6/2014"}, {"body": "rjackson", "d": "6/2014"}, {"body": "also shorter form neglected mention", "d": "6/2014"}, {"body": "mix", "d": "6/2014"}, {"body": "machty", "d": "6/2014"}, {"body": "sounds like fixed", "d": "6/2014"}, {"body": "jayphelps brighten ever issue thread", "d": "6/2014"}, {"body": "think fine using still provides flexibility originally intended", "d": "6/2014"}, {"body": "thanks cc amiel warning would saved quite bit time yesterday", "d": "6/2014"}, {"body": "hey guys let know pr worthwhile using warning blow anything assert could work guess edit oops remake pr address silliness sorry spam", "d": "6/2014"}, {"body": "kimagure personally think pr would good especially small assert correct way think asserts compiled production builds commonly used throughout codebase kind issue", "d": "6/2014"}, {"body": "alexspeller pr ah nt know asserts compiled prod builds guess nt issue turn assert think stringnull checking id change also pretty new gh prs nt know process ideally editing commits prs", "d": "6/2014"}, {"body": "looking eventdispatcherjs seems intentional stoppropagation downside example accessing private method eventmanagers able capture", "d": "6/2014"}, {"body": "planned dual strategy take advantage cases string method names provided nt gotten around happy help someone implement", "d": "6/2014"}, {"body": "ha simple idea reserve entry target null store maps method work", "d": "6/2014"}, {"body": "yes plan addobserver null method", "d": "6/2014"}, {"body": "cases plans example divide listeners target problem maps anything large listener lists defineproperty fn far exceeds cost indexof benchmarks net win targets hand almost always guid property already listener list grows beyond threshold could start guidfor function arguably nt need care enumerability comes typeof function use plain property assignment likely could use internal guidfor takes functions argument", "d": "6/2014"}, {"body": "wish browsers gave us cheap way inheritable nonenumerable", "d": "6/2014"}, {"body": "typical numbers discourse session without triggering horrible cases calling null target number times non null target", "d": "6/2014"}, {"body": "samsaffron excited looking us super pegged time something interested available helping", "d": "6/2014"}, {"body": "gave shot local took obscene case seconds getting magic number right take work thoughts note updated link reapply manually cause made original changes dev file", "d": "6/2014"}, {"body": "null string common internal observers use null target declarative form since nt yet", "d": "6/2014"}, {"body": "samsaffron modify code attempt cache methods strings", "d": "6/2014"}, {"body": "ebryn avoid full crawl case non string methods passed also want get rid splicing delete make holes array empty list try add today", "d": "6/2014"}, {"body": "samsaffron ca nt without something like js object keys strings", "d": "6/2014"}, {"body": "see js simply converting strings values closure preserved let think fri jun erik bryn notifications githubcom wrote samsaffron ca nt without something like guidfor js object keys strings reply email directly view github", "d": "6/2014"}, {"body": "ebryn still want measuring get rid splice work", "d": "6/2014"}, {"body": "ebryn profiled locally seems like nothing improve discourse regular usage fixes huge action list", "d": "6/2014"}, {"body": "think run practical instance nt working would expect want links match routes example nested shows list left column right shows individually selected resource share wireframe something helps visualize", "d": "6/2014"}, {"body": "looks like bug work around javascript var foo emberobjectextend friends function return thisget groups reduce function acc group return accconcat groupget accounts property groups eachaccountschanged windowfoo foocreate groups embera emberobjectextend accountschanged emcomputedalias accounts init function thisget accountschanged create accounts embera foo bar baz consolelog fooget friends fooget groups get accounts pushobject asdf consolelog fooget friends", "d": "6/2014"}, {"body": "duplicate path observers require previous part resolve obj observe property take abc example would expect get ab return object observe c example path parts groups accounts get groups eachaccounts returns array watches array nt maintained built one proxy needs happen work path observer special cases end observes remaining path creating another path observer would result path observer groups installs path observer accounts", "d": "6/2014"}, {"body": "one issue though groups fires change per array mutation despite array proxy changing would constantly rebuilding path observer nt know changed behave like makes fixing unreasonable without ton scenario solving without regressing interchangeable essentially node path chain would need unwatched could still fire change event groups part knowing remain constant unless groups changes", "d": "6/2014"}, {"body": "actually eacharray eachproxy returned extended eachproxy get eachbar returned new eachproxy bar path observers would work without special casing", "d": "6/2014"}, {"body": "use case actually trying implement dynamically updating query params dependent change another query param", "d": "6/2014"}, {"body": "use case specifically query params application controller query params one sub controllers model sub route depends query parameters application controller sub controller sub route case data visualization number settings type graph data show etc working previously know guide nt updated yet sure exactly changed would cause break app", "d": "6/2014"}, {"body": "modifying hits use case", "d": "6/2014"}, {"body": "sorry nothing way show many times action firing often could nt open console debugging due freezing", "d": "6/2014"}, {"body": "oh bad glossed thought query param take look closely tomorrow", "d": "6/2014"}, {"body": "danke", "d": "6/2014"}, {"body": "also issue need another use case someone test thanks machty", "d": "6/2014"}, {"body": "issue trying use multiple query params model change like commented part jsbin", "d": "6/2014"}, {"body": "using refreshmodel true multiple query params case search facets also experiencing thing", "d": "6/2014"}, {"body": "yup hitting well wasted hours trying figure issue glad see one eta fix app ship", "d": "6/2014"}, {"body": "really sorry everyone qp api finalized definitely let regressions last one everything fixed weekend", "d": "6/2014"}, {"body": "machty good going work stuff meantime documentation new api trouble getting params removed url used pass false remove param", "d": "6/2014"}, {"body": "emerson set controller prop default value removed", "d": "6/2014"}, {"body": "always hate ask updates issues relating open source projects wondering movement eta changed significantly would try fix little beyond current understanding ember core new api looks nice looking forward outside canary greenheart", "d": "6/2014"}, {"body": "blocked necessary routerjs work address issues right nt possible squeeze fix issue alone hope update shortly sorry still blocking", "d": "6/2014"}, {"body": "amazing pulled canary everything working well thanks hard work", "d": "6/2014"}, {"body": "yes suspend listener supposed affect change events making listener listeners thought tested case guess current implementation less ideal nt time revisit union intersection code reuse sendevent code ideal way sendevent go everything put queue listener deferred specific listener suspended nt enqueue schedule flush", "d": "6/2014"}, {"body": "thanks confirmation assuming wo nt able rewrite next release would able oneline fix similar done", "d": "6/2014"}, {"body": "could put jsbin something like try work", "d": "6/2014"}, {"body": "rename nt documented surprised used wild", "d": "6/2014"}, {"body": "krisselden used mistake deprecated nicely libraries use", "d": "6/2014"}, {"body": "stefanpenner fire invoking invoke automatically cd", "d": "6/2014"}, {"body": "rjackson ya exactly", "d": "6/2014"}, {"body": "caused looking", "d": "6/2014"}, {"body": "rjackson thanks quick response guys rock always", "d": "6/2014"}, {"body": "fixed updated canary build published shortly", "d": "6/2014"}, {"body": "rjackson thanks sir", "d": "6/2014"}, {"body": "paging mixonic", "d": "6/2014"}, {"body": "believe something wont consider supporting htmlbars lands", "d": "6/2014"}, {"body": "stefanpenner wo nt consider supporting svg htmlbars either way need netflix needs reusable ember components rely svg must maintain forks must guess", "d": "6/2014"}, {"body": "believe meant", "d": "6/2014"}, {"body": "blesh bug erik get htmlbars land lt lots availability see trollface", "d": "6/2014"}, {"body": "well world keeps turning nt want add svg nodes wrapmap ember directly think invasive bloat like way extend wrapmappings somehow either exposing wrapmap global like emberwrapmappings metamorph look configuration object window mixin existing wrapmap", "d": "6/2014"}, {"body": "blesh believe path result improvements would hate see duplicate efforts hence stance community member timeenergy nt interested helping push htmlbars finish line welcome persue", "d": "6/2014"}, {"body": "blesh got svg working htmlbars pr holding merge take stab issues support similar issues covered confidently say support svg htmlbars nt see great flexible support svg handlebars surely way hack think worth turning public api support interim", "d": "6/2014"}, {"body": "mixonic make private api expose hacking provide interim solution adventurous need feature throw many underscores", "d": "6/2014"}, {"body": "example accidentally uses native promises", "d": "6/2014"}, {"body": "appears issue fixed", "d": "6/2014"}, {"body": "woot thanks following", "d": "6/2014"}, {"body": "seems like stackoverflow question bug recommend cross linking future searches find", "d": "6/2014"}, {"body": "post stackoverflow also find ember community github bit robust", "d": "6/2014"}, {"body": "dgtman unfortunately due number issues size community need keep issue tracker focused possible emberjs freenode might another good place ask", "d": "6/2014"}, {"body": "awesome", "d": "6/2014"}, {"body": "eoneill exactly fast boot basically allowing server render html ember using getgo instead generating scratch", "d": "6/2014"}, {"body": "knownasilya pretty muchby something like essentially get isomorphic ember app extremely helpful things like supporting underpowered mobile devices example coming email phone transactional page nt want user wait seconds see anything instead ssr requested route ember enhances initial static html everything rendered client", "d": "6/2014"}, {"body": "knownasilya thanks asking probably explained basically chadhietala said discussion concept well tomdale coined concept fast would use something like emberprerender serverside render ember app initial state send html client client would receive initial view pure html ember would hydrate client state rendered server synchronize existing view poc ember still rerendering everything client think necessary get bindings metamorphs hooked correctly though probably room improvement user get initial visual feedback ember app still initializing", "d": "6/2014"}, {"body": "using componentlookup main along view helper downside view torn dynamic property changed local branch work making view helper handle properly", "d": "6/2014"}, {"body": "seems like view bound tore would great component helpers dedicated component lookups would also good", "d": "6/2014"}, {"body": "rjackson fix workaround view torn downreset property change bunch us set upon one day irc wrap view", "d": "6/2014"}, {"body": "kinda feel like nt addon material enables better core composition", "d": "6/2014"}, {"body": "would pretty happy someone time implement gladly provided feedback advocate", "d": "6/2014"}, {"body": "seems related stuff wanted helper right halfass support dynamically linking controller property contains changing link name unfortunately stuck using fixed number contextsmodels pass target route way elegantly dynamically switching bw link dynamic route nondynamic route one expects model perhaps better overall primitive consider something like render descriptor best described example somecontrollerextend thingtorender function thisget wat return params linkto articles else return params linkto property wat somethinghbs dynamicrender thingtorender course would extend free dynamic component renderings possible render anything helper component view link", "d": "6/2014"}, {"body": "used something like dynamic input elements observer call bound property changed", "d": "6/2014"}, {"body": "igort tell curious", "d": "6/2014"}, {"body": "want something like ember one exists angular one thing missing easily swappable render parameters overriding certain fields", "d": "6/2014"}, {"body": "nt access code anymore basically wrapper component property would instantiate correct components inside rerender whenever changed", "d": "6/2014"}, {"body": "could elaborate one thing missing easily swappable render parameters overriding certain fields machty dynamic components codebase using slightly different techniques could explain better knew use case", "d": "6/2014"}, {"body": "saying even made xfoo swappable nt want forced always provide value every last hash option case linkto want make possible swap bw nt doable present day one invocation provides model nt", "d": "6/2014"}, {"body": "would love something like hacked around extends discussed discourse thread", "d": "6/2014"}, {"body": "rjackson branch using views somewhere tonycoco nt want get deep legwork already done attached jsbin trying ember view note work yet", "d": "6/2014"}, {"body": "ca nt fix without hurting developer ergonomics something super crazy wrap dev code trycatch hurt break usage break error ideally browser tooling better would nt problem production maybe enable trycatch per task default onerror happens", "d": "6/2014"}, {"body": "", "d": "6/2014"}, {"body": "think marking mistake", "d": "6/2014"}, {"body": "agreed", "d": "6/2014"}, {"body": "ask suspect reference understand sadly nt also would possible method alias selfdocumenting", "d": "6/2014"}, {"body": "adaptation k combinator gives monadic noop k applied argument x yields oneargument constant function kx applied argument returns x", "d": "6/2014"}, {"body": "got thanks clarification link", "d": "6/2014"}, {"body": "would self documenting require past experience libraries use either terms could actually see us currently returns truthy value sometimes want nonoperation returns falsy value probably", "d": "6/2014"}, {"body": "comparable char length", "d": "6/2014"}, {"body": "also would", "d": "6/2014"}, {"body": "falsy return value originally requesting", "d": "6/2014"}, {"body": "although knowledge also works currrent needs client coder", "d": "6/2014"}, {"body": "crismali ember core actually agreement time ago wanted transition actually utilize lodash custom build within ember never got around jdalton actually offered help lodash side needed someone else interested likely chat confirm core still something want pursue", "d": "6/2014"}, {"body": "stefanpenner would awesome crismali looking contribute could work get internally packages create conventions", "d": "6/2014"}, {"body": "tonycoco fantastic use help get", "d": "6/2014"}, {"body": "tonycoco looking wondering dependency like jquery shimmed referenced something take amd import specific functions different modules", "d": "6/2014"}, {"body": "crismali inlined dependency like rsvp backburner jdalton suggested custom build exactly need", "d": "6/2014"}, {"body": "stefanpenner think headed anyway cool put wip branch soon implementation working end cc crismali", "d": "6/2014"}, {"body": "nice", "d": "6/2014"}, {"body": "lurking hit w questions grinning", "d": "6/2014"}, {"body": "jdalton build amd single mainjs file like dist got lodash cli basically running", "d": "6/2014"}, {"body": "build amd single mainjs file like dist mean like monolithic build mainjs file got lodash cli basically running fine create compat mainjs category modules amp individual modules next bump build flavors repos like different branches amd commonjs node amp npm", "d": "6/2014"}, {"body": "jdalton like amded amp concated mainjs file instead needing mainjs rip directories get pieces relative requiresdefines make sense", "d": "6/2014"}, {"body": "like amded amp concated mainjs file instead needing mainjs rip directories get pieces relative requiresdefines make sense moment nt provide prebuildoptimized version lodashamd builds default normal monolithic build works amd loaders", "d": "6/2014"}, {"body": "ok perfect", "d": "6/2014"}, {"body": "got version working way jquery works ember definitely seems like path least resistance", "d": "6/2014"}, {"body": "overlap try get land tonight nearing point want use modules core allow new transpiler correctly parseminifydeloaderify project", "d": "6/2014"}, {"body": "works shrinking emberjs file someone writing ember app wants use something lodash compiled ember instance ember never uses want duplicate bunch lodash application end code overall", "d": "6/2014"}, {"body": "crismali wont really drop anything reexporting global shims going forward idea build app ember together drop features lodash ember based app needs theory gives us custom ember builds optimized specifically app nt use array computed noproblem removed dead code etc", "d": "6/2014"}, {"body": "okay makes sense", "d": "6/2014"}, {"body": "least dream cc ebryn eventualbuddha", "d": "6/2014"}, {"body": "reference", "d": "6/2014"}, {"body": "crismali commits working", "d": "6/2014"}, {"body": "close favor crismali", "d": "6/2014"}, {"body": "one cases need use option see weather linkto links specifically different route default going show active unless exactly change nav bar linkto following expect please close addresses issue nt think bug edit forgot actually update linkto w suggestion", "d": "6/2014"}, {"body": "fixed thanks fast reply able fix presentation really appreciate", "d": "6/2014"}, {"body": "module inside closure accessed without much hoop jumping causing problem publish sample repo andor assets", "d": "6/2014"}, {"body": "nt spend lot time looking exactly happening know fixed case almond require though rjs bundling application app works unbundled via require fine suspect may secret combo rjs configuration options get work without change ember source person two helping debug came simple solution everything set", "d": "6/2014"}, {"body": "take look sample repo definitely issue way determines modules defined using esprima scan source file determine andor called case called externally check given call embedded closure relatively shortterm problem planning remove loader including calls releasing meantime mimosa shim essentially using regex findreplace seems like good work around sorry troubles thank reporting", "d": "6/2014"}, {"body": "ya reason mimosa shim place tend update ember often nt team keep going back make change best let tool startup good know wo nt problem road leave want keep open feel removal road fix happy thanks looking", "d": "6/2014"}, {"body": "like idea exposing component keyword use case using", "d": "6/2014"}, {"body": "seeing well chrome seems browser affected seeing issue chrome mac", "d": "6/2014"}, {"body": "isolates issue gon na post chromium bug url works correctly chrome canary nt think anything want fix emberland closing issue", "d": "6/2014"}, {"body": "ran exact issue today reason navigating list keyboard hacky fix describe coffeescript reason viewget childviews sometimes contains stale data end operating destroyingdestroyed items go via dom childviewsfromdom view gt view children emberview toarray map node gt emberviewviews nodeid using found stale data contained views previously destroyed states nt updated entries outdated", "d": "6/2014"}, {"body": "childviews filtered view actual childviews hold onto reference currently get date since rebuilt invalidated gotten childviews invalidated another get childviews return stale data said expensive maintain filtered view nt needed views", "d": "6/2014"}, {"body": "seeing return stale data appears invalidated situations invalidate recursively iirc goes virtual views gets nonvirtual views maybe layer nt invalidated", "d": "6/2014"}, {"body": "krisselden code jsbin changed get childviews action time data stale", "d": "6/2014"}, {"body": "definitely bug nt great answer doubt fixed without performance cost mark bug likely wait cause middle refactor view layer search unfiltered viewchildviews", "d": "6/2014"}, {"body": "rpflorence childviews invalidated removechild check current view virtual walk concrete view notifying childviews didchange", "d": "6/2014"}, {"body": "cc fivetanley rjackson", "d": "6/2014"}, {"body": "issue bower follow get working ember cli", "d": "6/2014"}, {"body": "hmm installed project nt seem working get following debug console thinking broccolifilemover may working", "d": "6/2014"}, {"body": "rjackson stefanpenner thanks help order get working change config may understanding trying achieve", "d": "6/2014"}, {"body": "rjackson make work cli", "d": "6/2014"}, {"body": "stefanpenner issue support live reload changes vendor must folder using fine least folder spent tracking thinking fix likely involve guard properly handle folder nt available disk", "d": "6/2014"}, {"body": "tldr essentially find folder disk location call simply able watch changes since nt know watch", "d": "6/2014"}, {"body": "cc mixonic", "d": "6/2014"}, {"body": "digging understand issue little bit better change property shared object like clock filtercriteria example jsbin going loop chainwatchers call observers invalidate cps everyone depends property shared object issue case reducecomputeds start notifying observers element whose item property reduce computed terminology watched property item invalidate reduced cp changed reducecp itempropertydidchange fire calls array eagerly flush changes queued reducecp ends calling items whose itemproperties changed problem embermetal currently middle invalidating dependencies one items remaining items also changed nt cp caches cleared happens cpdidchange cached values used rather recomputing chain nodes nt rebuiltup recomputation took place future changes sharedglobal object property wo nt detected remaining elements phew sounds like need devise solution get arraycp better adhere embermetal contract ideally event happen lazily except cases user explicitly calls get remember correctly used scheduled run loop valid cases wanting call reducedcp eagerly flush yield uptodate valuearray cc hjdivad krisselden", "d": "6/2014"}, {"body": "note issue also goes away wrap update shared global obj", "d": "6/2014"}, {"body": "looking see actually access current url even router set would nice could access controllerfor better yet ember decided throw application controller sibling next example useful say want share link running within phonegapcordova wrapper would easy", "d": "6/2014"}, {"body": "machty thoughts one seems like straightforward change point three props set maybe missing higher abstract piece", "d": "6/2014"}, {"body": "understand wanting give access entire router controllers things router controllers may need access", "d": "6/2014"}, {"body": "guess", "d": "6/2014"}, {"body": "work", "d": "6/2014"}, {"body": "hacks done netflix worked use cases proper bound svg support nt likely going thing htmlbars", "d": "6/2014"}, {"body": "nods waiting h l b r", "d": "6/2014"}, {"body": "ebryn yea heard mention svg work guys netflix js jabber podcast love hear howwhat fwiw works well angular p", "d": "6/2014"}, {"body": "jquery error", "d": "6/2014"}, {"body": "little surprised find works well angular unlike nt think support comes directly templating approach must built specific support handling svg class objects", "d": "6/2014"}, {"body": "send pull request", "d": "6/2014"}, {"body": "fixed pr example note share query param value want use alias rather try reuse query param name intentionally treat query params separate params closing part pr", "d": "6/2014"}, {"body": "machty awesome thanks", "d": "6/2014"}, {"body": "use colon syntax change property name url key mapping whatever want eg like idea expose method route override make possible want everywhere", "d": "6/2014"}, {"body": "ask ye shall receive closing incorporated latest pr getting overwhelming keeping track myriad fixes making pr thanks good idea", "d": "6/2014"}, {"body": "hero actually ship", "d": "6/2014"}, {"body": "wonderful sailboat think good idea make dasherized default similar change", "d": "6/2014"}, {"body": "ask gang push dasherizing templates mostly web components based rather something trying ember", "d": "6/2014"}, {"body": "yes please ask would great love camelcase argued camelcase instead snakecase ember data json serialization previously dasherized better fit query params lowercase caseinsensitive dash separator since standard domains paths", "d": "6/2014"}, {"body": "tried ember inspector plugin chrome may help find problem", "d": "6/2014"}, {"body": "seems fixed pr closing tracking pr", "d": "6/2014"}, {"body": "machty great work thanks", "d": "6/2014"}, {"body": "html id tags meant interpreted strings spec even required id tags start alphabetic character although particular requirement dropped basically everything behaving expected workaround seems acceptable exactly sort thing sortfunction meant handle reading", "d": "6/2014"}, {"body": "spruce models emberdata handrolled something else completely correct ids sorted strings guarantee stored strings whatever persistence library using know emberdata actually stores ids strings internally helps workaround actually great way solve issue alternatively using emberdata know ids system always going numeric could add something like use sort key", "d": "6/2014"}, {"body": "fixed pr closing track pr note may one final change pr support use case would require configure stickiness query param stickiness behavior qp values remembered routes exited reentered happens example jsbin", "d": "6/2014"}, {"body": "gets applied one models passed linkto undefined intended use cases want link something still loading finally loads controller set link become nonloading one uses dumb idea year ago think got snuck async router stuff without much review bad fwiw twitter likely accidental halfass version first time click nav tab eager active class applied fully route leave come back route link become immediately active like twitter approach right answer anything food thought would loading class applied links presently active active post transition would applied links fit category one clicked currently active links wo nt active post transition lose active class transition one thing keep mind today ui mismatch bw url active classes fix active classes issue might still ui mismatch properlybehaving active classes pretransition rendered content nt torn yet", "d": "6/2014"}, {"body": "add new properties addition existing allow current behaviour default eager links style links either without eager links deactivating styling also style links indicate transitioning away would nt modifying could depreciated separately", "d": "6/2014"}, {"body": "interested first release documentation tests still learning use mocha comprehensive example docs tests coming soon", "d": "6/2014"}, {"body": "marinho curiousity kind usage aiming authorization thing think sensible approach ab testing could also consider creating different builds app pattern ember using features", "d": "6/2014"}, {"body": "zonak give realworld example trying hard know whether handle use case knowing actually use case", "d": "6/2014"}, {"body": "try make simplified cms example let say list posts following route list clicking post see details post details link following route obviously see list comments aside complete list filter comments lets say date range configured qps well going back route list posts selecting different post allow us reset date qps comments route active would resetting parameters may perfect example think gets point across", "d": "6/2014"}, {"body": "zonak ah see thanks writing related another final api consideration general ability reset query param values leave route also way track model dependent state right nt automatically work case since l", "d": "6/2014"}, {"body": "premature post nt automatically work case comments route dynamic segment therefore shares qp state comments arrays posts need fix things end nt think api use setting properties controller transitioning route rather better defaults values reset post model changes sorry hard explain give jsbin play around fix ready tell good", "d": "6/2014"}, {"body": "closing since api support use cases tons examples", "d": "6/2014"}, {"body": "hope changes become clearer get docs mean time attempt run another example let use cms example say posts route means comments route inactive qps defined would way provide reset functionality end users navigate back comments route filters reflected qps gone apologies somehow obvious example provided missed somehow", "d": "6/2014"}, {"body": "zonak worries super obvious exactly handled articlesroute resetcontroller hook demoable bottom page", "d": "6/2014"}, {"body": "specifically go comments article change article reset comments page article resetcontroller hook transitioned links go back page", "d": "6/2014"}, {"body": "want make action initiated end user say reset button", "d": "6/2014"}, {"body": "sure possible present api use case seems different ones described", "d": "6/2014"}, {"body": "app selects products big list allows end users filter thought list via series filters usually implemented pulldowns home route app offers ability select imperial metric measurement system affects options available mentioned set filters end user navigates list route makes selections pulldowns serializing state persisting qp navigate back list route way recreating state point time end user go back home route change selected measurement system results change sets options pulldowns list route practically invalidating state reflected qp idea reset qp list route home route upon change measurement system end users visiting list route subsequent measurement system change come back clean state pulldowns different options nt want bother specific case guess point offers best example", "d": "6/2014"}, {"body": "zonak lot take believe case make work dig internals make work probably wo nt first class api information similar use cases", "d": "6/2014"}, {"body": "thanks listening hope give pointers achieving imho nt think rare case would like reset qps respective controller properties different route lot scenarios like state reset possible routes upon user action qps perfect retaining state way reset remove would make even better thank time attention", "d": "6/2014"}, {"body": "ftokarev perhaps could clone entire dom subsection cloned dom elements would tied ember perform sorting throw away finished guessing something like button called reorder clicked setup detached dom would affected incoming server pushes used dragdrop would work", "d": "6/2014"}, {"body": "sandstrom thanks suggestion ended using private methods reorder button nt think good solution usability point view users expect lists sortable right away", "d": "6/2014"}, {"body": "digging found section packagesemberhandlebarslibhelperscollectionjs causes difference context using helper alias changing lines simply would solve problem case would break several test cases yet figure solve problem without breaking existing test cases", "d": "6/2014"}, {"body": "unfortunately nt done likely wo nt time near future someone else wants tackle guest", "d": "6/2014"}, {"body": "mixonic got time look one", "d": "6/2014"}, {"body": "cc pixelhandler", "d": "6/2014"}, {"body": "notes chat irc containerresolve validation calls function resolve call inner resolve functions similar patterns basically costly validation parsing external methods internal often recurse need things", "d": "6/2014"}, {"body": "stefanpenner read container code couple questions point example container functions handle internals without normalize links lines code container think said irc containerresolve validation external methods correct sure meant inner resolve mentioned functions similar patterns one specifically reading container code nt obvious distinguish internal vs external methods mentioned think get identify internals work sorry noob questions need clarity", "d": "6/2014"}, {"body": "point example container functions handle internals without normalize links lines code container inner assertion normalization outer assumes already normalized think said irc containerresolve validation external methods correct correct sure meant inner resolve mentioned functions similar patterns one specifically innerouter example may provide enough context let know", "d": "6/2014"}, {"body": "problem error page apparently defining route nt work", "d": "6/2014"}, {"body": "fixed closing tracking pr", "d": "6/2014"}, {"body": "machty addressed", "d": "6/2014"}, {"body": "stefanpenner missed hard piece together going without jsbin also possible caused provided thisroute error leaving dynamic path error substates models internally dynamic path", "d": "6/2014"}, {"body": "ill give u example app", "d": "6/2014"}, {"body": "seems fixed canary", "d": "6/2014"}, {"body": "yeah fixed basically swallowing errors one specific name something", "d": "6/2014"}, {"body": "progress encountering issue calling thissuper within promise code question silently failed upgrading late game", "d": "6/2014"}, {"body": "encountered problem appears must add attribute helper without get error described uncaught error set readonly property accounts object thinking data types assigned ember data array vs single value could way helper built", "d": "6/2014"}, {"body": "cc machty", "d": "6/2014"}, {"body": "stefanpenner ebryn mentioned emberfacing transition object fuller control apiwise perhaps routerjs matter seems like something consider", "d": "6/2014"}, {"body": "think date reopen someone demonstrate issue jsbin uses following emberjs", "d": "6/2014"}, {"body": "ran today component bound property within component turn set property controller well however attempt within handler controller altered makes difficult determine component property set static content consider valid case value seeing leftovers failed attempt clearing controller property invalid case since would reflash message already shown previously", "d": "6/2014"}, {"body": "expand updated jsbin latest ember release couple things removedchanged simplicity thisset commands seem work fine wondering willdestroyelement running late run loop observers pickup", "d": "6/2014"}, {"body": "closing tracking pr", "d": "6/2014"}, {"body": "closing part", "d": "6/2014"}, {"body": "closing api support use case master discuss feature proposal discussemberjscom makes sense example ways configure qps", "d": "6/2014"}, {"body": "thanks hard work much appreciated", "d": "6/2014"}, {"body": "hi would great amd wrapper amd support", "d": "6/2014"}, {"body": "one simply add environmentjs file using embercli enable queryparamsnew still need make sure link canary build", "d": "6/2014"}, {"body": "anyone know available stable yet sure go find list currently available features like", "d": "6/2014"}, {"body": "available stable enabled default new canary builds ready hopefully couple weeks", "d": "6/2014"}, {"body": "ppcano like proposal got extra time", "d": "6/2014"}, {"body": "stefanpenner create pr find time", "d": "6/2014"}, {"body": "ppcano understood im boat", "d": "6/2014"}, {"body": "thank discussion really helped solve tests nt work agree toranb example would good add ember testing guides problem similar xhr code application initializer tests run init completed knew breaks run loop emberrun within code without help finally reading conversation added wait test module setup everything seems go smoothly test setup waits application initialization running test case", "d": "6/2014"}, {"body": "pretty sure fixed canary please reopen case", "d": "6/2014"}, {"body": "issue ember emberdata fwoeck changes embercomputedsort initially resolve issue cause cascade issues updates hjdivad", "d": "6/2014"}, {"body": "potential workaround initially used sorting functions like places tests replaced removed problem changed different things time ca nt really say related", "d": "6/2014"}, {"body": "thanks update fwoeck actually currently", "d": "6/2014"}, {"body": "issue single route multiple nested views inside containerviews page instantiated using views created pushing onto containerview manually obviously link controller link controller manually view init works fine try using extended applicationcontroller utilise authorization functions throws error controller using", "d": "6/2014"}, {"body": "would definitely useful", "d": "6/2014"}, {"body": "unfortunately quite busy things keeps slipping away", "d": "6/2014"}, {"body": "updates one", "d": "6/2014"}, {"body": "would benefit loading bookmarked url jump anchor point route view template loaded", "d": "6/2014"}, {"body": "status updates adding model programmatically best current approach wrap", "d": "6/2014"}, {"body": "still experiencing ember however happens go back static route using helper least going straight url works seems like content outlet dynamic segment remains go level another static route added dynamic route luck", "d": "6/2014"}, {"body": "extracted emberobjectproxy mixin works great components always felt weird components lose syntactic sugar implicit context components mixin coffeescript", "d": "6/2014"}, {"body": "potentially related embertextfield seem work components possibly elsewhere", "d": "6/2014"}, {"body": "confirm working firefox case anyone cares ie seems working fine", "d": "6/2014"}, {"body": "thank answer jonni really helped thank", "d": "6/2014"}, {"body": "terribly motivated hack solution new module world everything works wonderfully point sort nt time fix someone time give advice", "d": "6/2014"}, {"body": "bug still exists update", "d": "6/2014"}, {"body": "follow managed address another bug eachview helper rerender called entirely sure correct solution since issue idle bit post temporary work around", "d": "6/2014"}, {"body": "manoharank question fixing style selectors fixed changing selector", "d": "6/2014"}, {"body": "maxgabriel nice", "d": "6/2014"}, {"body": "raisedhands", "d": "6/2014"}, {"body": "suggest using need dynamic computed property implementation uses executed init really unreadable hard work would much nicer could pass list dynamic properties property instead strings lancejpollard suggested", "d": "6/2014"}]