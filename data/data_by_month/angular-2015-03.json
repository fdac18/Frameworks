[{"title": "jsonld", "body": "would great always used jsonld format understand search bots external services", "num": "1176", "d": "3/2015"}, {"title": "using di super constructors", "body": "possible component superclass use di like child component ideally could something like js class base constructor parent parent parentcomponent component selector child class child extends base constructor injector componentinjector injectorrun super", "num": "1174", "d": "3/2015"}, {"title": "instrument change detection", "body": "would great able get information cd run total number records number checked records number changed records number change components information could used tests described cc vsavkin yjbanov matanlurey mhevery", "num": "1172", "d": "3/2015"}, {"title": "working styles templates generated api docs", "body": "", "num": "1171", "d": "3/2015"}, {"title": "identify public classes angular code doc generation", "body": "", "num": "1170", "d": "3/2015"}, {"title": "shadow dom emulation correctly retarget events", "body": "shadow dom spec details event retargeting basically means event propagation hits shadow root boundary keeps propagating event target changed host element also important note event types never propagated outside shadow root angular shadow dom emulation currently nt makes confusing try add listeners events like use syntax see", "num": "1168", "d": "3/2015"}, {"title": "set nonstandard attributes dom element", "body": "know inject property setter constructor use update property able get property propagate dom nonstandard properties role aria properties may missing something please point correct direction", "num": "1167", "d": "3/2015"}, {"title": "swap widget gallery router angular router", "body": "first test run new router matanlurey please spec possible blockers", "num": "1164", "d": "3/2015"}, {"title": "dealing disabled binding confusing", "body": "say component needs know disabled state event work fine something like however instead code work empty string would update value always use method tl dr change detection set disabled empty string falsy still implies disabled state", "num": "1162", "d": "3/2015"}, {"title": "benchpress auto wait end rendering every iteration", "body": "benchpress metric however need make sure browser really finished rendering continue next iteration otherwise browser might squash multiple changes one metric would report wrong value note waiting next turn ie probably good enough implementation idea also read browser perf log poll new frame need also creating frames per second metric work wait via browser", "num": "1161", "d": "3/2015"}, {"title": "support bindings camelcased svg attributes", "body": "certain svg attributes camelcased however would recognized browsers since standard svg attribute important camelcasing information lost convention angular supporting bindings svg attributes", "num": "1159", "d": "3/2015"}, {"title": "annotations fails abstract error using traceur forgoing zone system", "body": "trying create angular project using traceur everything seems load ok add component blows unexpected token warning nonerror used loading jade greeterapp script src googlegithubiotraceurcompilerbintraceurjs script src googlegithubiotraceurcompilersrcbootstrapjs script src script systempaths greeter componentsgreetergreeterjs systempaths angular systempaths rttsassert rttsassertjs runtime assertions systemimport greeter component import mathwiz componentsmathwizmathwiz import component template bootstrap foreach import bind component selector greeterapp class greeter constructor message thiswiz new mathwiz greet var element documentqueryselector message elementinnerhtml thiswizwelcometext bootstrap greeter", "num": "1156", "d": "3/2015"}, {"title": "reload initial variable empty", "body": "noticed must loaded page load call reload element seems ignore request example example initial variable element load empty array might reason failure tried reload element process data general process id load data iframephp insert data invisible div tag jquery map data html format json format save json data variable called use push data code var app angularmodule rabbit ngmaterial ngmessages ngmdicons apiurl iframephp tableobject ajax url iframephp crossdomain true datatype html success function data var json datasubstring dataindexof json jsonsubstring jsonindexof json jsonsubstring jsonlastindexof function widthchange jsonindexof amp json jsonreplace amp amp widthchange else consolelog json json html json var headers name kind type age size thumb link tableobject json tr map function var row find td function var rowname headers row rowname text trim find tdlegacy img function var rowname headers row rowname attr src find tdlegacy function var rowname headers row rowname attr href return row get consoletable tableobject json html var scope angularelement content scope scope apply scopeshowcards widthchange error function consolelog error appcontroller cardctrl function scope log mddialog var showcards function scopecardspush tableobject scopecards tableobject element html", "num": "1154", "d": "3/2015"}, {"title": "proposal support style binding", "body": "sometimes absolute positioning must used accomplish building ui components color theming necessary would hugely convenient cases support binding via bind style attribute similar fashion implemented classes ie", "num": "1153", "d": "3/2015"}, {"title": "remove pipes bindings", "body": "looks like consensus pipes bindings harm good see proposed design", "num": "1152", "d": "3/2015"}, {"title": "docs explain properties vs attributes bind", "body": "angular supports property bindings use property binding bind attributes also literal attributes however property actually passes value setter also retains attribute html docs clear nuances syntax", "num": "1147", "d": "3/2015"}, {"title": "strawman componentlevel testbed", "body": "common application developers test components templates internally call tests component tests opposed unit integrationtests tests unit tests exercise component class integration tests far application concerned term reserved testing crosscomponent interactions full application tests tests involve backend requirements instantiate component test along template child components replace child components mocks pass bound values component trigger change detection fake event loop la fakeasync verify component implement change detection correctly eg via observables immutables access underlying dom trigger user events click buttons usually done assistance page objects framework strawman dart annotation tells angular testspecific dependency overrides componenttest component mycomponent dependencyoverrides const childcomponent mockchildcomponent realgooglemap mockgooglemap main describe mycomponent testbed testbed", "num": "1146", "d": "3/2015"}, {"title": "proposal rename facades shorter", "body": "proposal rename etc etc naming idea comes guava thoughts note affects codebase exposed framework consumers", "num": "1145", "d": "3/2015"}, {"title": "test bed user story angular", "body": "handful tests angular code base nothing really good job giving nonangularcore developers way test components see angular dart examples", "num": "1144", "d": "3/2015"}, {"title": "setting default value attribute property painful", "body": "say component focusable like radiobutton since real input got set manually default normal document flow however user set tabindex nt want overwrite let take look amount code takes js component selector mdradio lifecycle onchange bind tabindex tabindex template class mdradio tabindex number tabindexsetter function constructor attribute tabindex statictabindex propertysetter tabindex tabindexsetter thistabindexsetter tabindexsetter statictabindex tabindexsetter onchange thistabindex tabindexsetter check set tabindex two places nt called instances without bindings bindings nt resolved yet constructor requires two class properties binding two injections one method also clear one could encapsulate behavior compose multiple components", "num": "1143", "d": "3/2015"}, {"title": "support binding attribute map similar classfoo", "body": "web components style react based existence attribute example make following possible work similar class syntax", "num": "1140", "d": "3/2015"}, {"title": "directives field template annotation optional checkedmode enforcement", "body": "assume component represented parent component forget pass would helpful development mode could receive warnings whenif unregistered selectors used template dart could done something like assume something similar available tstranspilation layer", "num": "1138", "d": "3/2015"}, {"title": "reenable naive infinite scrolling benchmark", "body": "causing timeout issues since element never appears", "num": "1137", "d": "3/2015"}, {"title": "gulp builddart errors", "body": "local machine master branch fresh generates errors ie could format source could parsed line column multiple groups positional parameters single parameter list reason works ci cc mprobst alexeagle", "num": "1134", "d": "3/2015"}, {"title": "add destroyaware onchangeaware", "body": "add destroyaware onchangeaware interfaces interfaces get compiletime checking lifecycle methods missing", "num": "1132", "d": "3/2015"}, {"title": "form api allow simple binding single control", "body": "simplest case component author may want bind single input create control group something equivalent desired dart class mycomponent final control inputcontrol mycomponent thisinputcontrol control initialvalue hello world inputcontrolonchangedlisten newvalue print hello newvalue api suggestion freebie vastly ease migration", "num": "1131", "d": "3/2015"}, {"title": "cachingcodegen story css needed", "body": "spoke briefly jelbourn looks like angular way use css component html import stylecss templates use annotation advantage precompile step static analysis convert urls inline html reducing number http requests files needed statically generated application angular called official stance angular using something also scanned inlined applications use static analysis kegluneq mhevery yjbanov", "num": "1124", "d": "3/2015"}, {"title": "events work content positioned absolute", "body": "given following code import component template bootstrap ngelement component selector eventelement events click onclick event template inline class eventelement constructor el ngelement eldomelementaddeventlistener click function e consolelog native click false onclick e consolelog events click component selector eventapp template inline directives eventelement class myapp bootstrap myapp following html file event binding loading", "num": "1121", "d": "3/2015"}, {"title": "ngif directive throws protoview instantiation", "body": "html import materialbuttonscsscss component boolean using dart clear", "num": "1120", "d": "3/2015"}, {"title": "ca nt access values kvchangerecord", "body": "working binding classlist shaping directive follows works fine js looks like accessing private variable seems public otherwise ca nt really access values individual change records vicb seems like written part request make sense sth wrong", "num": "1118", "d": "3/2015"}, {"title": "zones", "body": "questions remarks come working async tests zones dart current setup vmturnzonedart inner zone overrides function execution wrapped executes wrapped function potential issue wrapped function enqueues microtask future obervable objects sequence fn enqueues microtasks triggers change detection drain microtask queue change detection triggered turns current code fine actual sequence fn enqueues microtasks drain microtask queue triggers change detection overridden test code sequence wrong refs zonejs current setup called hook called hook issue hooks called every single function executed zone microtask macrotask queue check details microtasks pending change detection triggered fix come way detect vm turns currently possible zonejs vm turn consist one macrotask many microtasks resources interesting links last page update issue progress cc mhevery vsavkin btford yjbanov feel free comment chat hangout", "num": "1116", "d": "3/2015"}, {"title": "async binding onto async dependency throw error regardless dependency resolution", "body": "following pattern applicationjs js bind appviewtoken toasyncfactory change detector bound sync dependency root view root view async works root view instantiated change detector instantiated demonstrated test added js expect behavior throw instantiating sync binding async dependency function var injector new injector bind userlist toasyncfactory fetchusers usercontroller demonstrated tests di config behavior different according order classes instantiated easy understand simple example like one believe could source interim hard debug bugs dependency graph gets complex could error gets triggered depending timing async function vsavkin throwing error case would make behavior reproducible avoid potential errors cc juliemr", "num": "1111", "d": "3/2015"}, {"title": "angular changes bindings camelcase", "body": "set class button true false depending upon value know dashcase camelcase conversion actually feature built attribute parser exceptions cases like last thing would expect angular camel classnames", "num": "1109", "d": "3/2015"}, {"title": "investigate issues travis ci", "body": "coming lot recently type error happens selenium standalone server shuts middle run tests todo x update protractor get selenium standalone v see helps x start capturing selenium standalone server logs", "num": "1102", "d": "3/2015"}, {"title": "bug dashed class name propertysetter causes error", "body": "soon set nondashedcase works fine", "num": "1099", "d": "3/2015"}, {"title": "need way directives react global events", "body": "needs way directives react things like event window event document body", "num": "1098", "d": "3/2015"}, {"title": "factorize common util code dash lt camel", "body": "duplicated amp move short support fns general cc pkozlowskiopensource mlaval", "num": "1097", "d": "3/2015"}, {"title": "syntax staticatconstructiontime bindings", "body": "assume directive called hello would used something like issue add gettersetter something never change want wait set use setter following possible dart class hellodirective final string name hellodirective bind name thisname creation time attribute would read passed nt available could either default null flexible throw stricter would make directives lighter weight less code could possibly even understood change detector future iterations", "num": "1095", "d": "3/2015"}, {"title": "component inheritance", "body": "hi going way component inheritance polymer currently support custom native components could nice feature imo cheers", "num": "1093", "d": "3/2015"}, {"title": "review render shadow dom code amp tests", "body": "tbosch added unittests shadow dom strategy plus minor fixes one tests code adds attribute parent gone assuming removed intentionally let figure want test tests passing", "num": "1090", "d": "3/2015"}, {"title": "service querying positionalsize information", "body": "service given directiveref return position information component api see", "num": "1089", "d": "3/2015"}, {"title": "components imperative views", "body": "component responsible rendering shadow dom rather loading template mental model component responsible rendering content reproject light dom add tag component inject dom manipulation webworkers addressed seperatly single thread model participates full di like inject special abstraction described later abstraction angular runs emulated native shadow dom mode important abstract api shadow dom angular emulation mode know nodes redistribute javascript dom contain component tags class componentdom dom manipulation show right place root node component componentref redistribute createcontent selector string content types declared viewdirectives used createcomponent type type node node componentdom class content destroy order insertions must match order creation content tag must inserted logical location created insertbefore node node append parentnode node webworkers model see", "num": "1088", "d": "3/2015"}, {"title": "introduce concept directiveref", "body": "represents internal reference directive application get hold interact subclassed match directive concepts api class directiveref injector injector used setting public property processes pipes setproperty name string value getevents array class componentref extends directiveref dispose componentdirective refs return includes api allows setting properties events disposing reference bootstrap given component may wish bootstrap application bind properties well bindings dynamiccomponent dynamiccomponent selector dynamiccomp class dynamiccomp hellocmp hellocmp constructor loader privatecomponentloader location privatecomponentlocation loaderload hellocmp location hellocmpref componentref gt thishellocmp hellocmpinstance component selector hellocmp template inline greeting class hellocmp greeting string constructor thisgreeting hello overlays code generation code generation create concrete class directive would also would contain public facing api processing would include pipe processing event listening injection injectable directive special object used services form reference note reference contains location visual reference well logical location tree reference service chose either aspect ref", "num": "1087", "d": "3/2015"}, {"title": "publish atscript transpiled files js suffix", "body": "currently npmpublished files got extension complicates build process strong technical reasons naming stick js btw correct use part build packaging discussion cc rkirov", "num": "1085", "d": "3/2015"}, {"title": "proposal assertion api", "body": "idea write assertions components applied dev mode stripped production mode similar type assertions general example say component either given name attribute component author could write assertion gives component user meaningful error development mode add extra weight final output prior art closure compiler implements concept closure library googasserts module notes similar approach could also applied logging", "num": "1084", "d": "3/2015"}, {"title": "problem socketio", "body": "building little test app using node socketio originally angularjs socket calls worked fine getting uncaught rangeerror maximum call stack size exceeded run zoneboundfn fnnamesmapforeachzone anonymous function arguments anonymous function anonymous function run zoneboundfn fnnamesmapforeachzone anonymous function arguments anonymous function anonymous function run zoneboundfn code imports let socket io component selector myapp template url myapphtml directives class myappcomponent commenting socket definition eliminates error call stack error happens whether problem zones socketio something wrong", "num": "1083", "d": "3/2015"}, {"title": "resource interceptor actually interceptor function returns becomes result resource promise", "body": "see behaviour interceptor added completely different interceptor declared resource methods think need update documentation reflect changing behaviour might break apps people adapted behaviour found bug behaviour app different stopped needing resource interceptor removing app stopped working properly leaving nothing shown section interceptors kept app working properly", "num": "1082", "d": "3/2015"}, {"title": "contribute angular docs development", "body": "really need use angular much todo app works improve idea syntax", "num": "1080", "d": "3/2015"}, {"title": "wrong path source map rttsassertjs", "body": "pulled npm", "num": "1079", "d": "3/2015"}, {"title": "support creating new factories different dependencies", "body": "angular source factory provider follows enforcereturnvalue shadows factoryfn exposed prevents something like like factory passed something like get factoryfn factoryfn provider acceptable change happy submit pull request thanks", "num": "1078", "d": "3/2015"}, {"title": "privatecomponent amp shadow dom", "body": "vsavkin sure dynamic components supposed work imo honor tags nt supposed work get work might follow issue scoped shadow dom mode class component tag must set according loaded component uid css shim work seems like done right following code js import bootstrap dynamiccomponent component decorator template ngelement import injectable import privatecomponentloader import privatecomponentlocation component selector helloapp template inline directives dyn stat class hellocmp dynamiccomponent selector dyn class dyn constructor loader privatecomponentloader location privatecomponentlocation loaderload stat location component selector stat template inline static component class stat export function main bootstrap hellocmp expect output", "num": "1077", "d": "3/2015"}, {"title": "api docs missed text nt show output", "body": "see doc content constructor exists doc comment generated possibly todo next petebacondarwin something dgeni tolerant issue doc comment", "num": "1072", "d": "3/2015"}, {"title": "api docs path shown instead var name", "body": "see doc variables ondestroy onchange show path instead name top page petebacondarwin easy dgeni fix perhaps", "num": "1071", "d": "3/2015"}, {"title": "zonejs included dependency import", "body": "throws error included angular example", "num": "1070", "d": "3/2015"}, {"title": "building grunttraceur", "body": "attempting build angular grunttraceur project errors arise seem like legitimate errors easily fixed submit pull request like errors super call allowed derived constructor errors allowed super errors super call allowed derived constructor errors super call allowed derived constructor errors super call allowed derived constructor super call allowed derived constructor super call allowed derived constructor errors super call allowed derived constructor", "num": "1069", "d": "3/2015"}, {"title": "forms support asynchronous validation", "body": "saw demos new forms api angular wondered asynchronous validation supported common usecase asynchronous validation would user registration form user name validated server need new state indicate forma particular field currently validating enables us show kind loading spinner form field pending validation asynchronous validation implemented angular would great angular forms great example functionality angular pending state particular fields shown topic already discussed angular forms design doc suggestions regarding implementation maybe discuss feature laid", "num": "1068", "d": "3/2015"}, {"title": "authentication authorization module", "body": "angular going provide official authentication authorization module box think would pretty relevant feature see thread quora example thoughts cheers", "num": "1067", "d": "3/2015"}, {"title": "bug privatecomponentloader privatecomponentlocation must listed services work", "body": "works js dynamiccomponent selector dynamiccomponent services privatecomponentloader privatecomponentlocation class mydynamic constructor loader privatecomponentloader location privatecomponentlocation fails js dynamiccomponent selector dynamiccomponent services privatecomponentloader privatecomponentlocation class mydynamic constructor loader privatecomponentloader location privatecomponentlocation", "num": "1063", "d": "3/2015"}, {"title": "bug privatecomponentloader add decorators dynamiccomponent", "body": "add decorator component privatecomponentloader errors tells nt template nt adding decorators dynamically add temlpate decorator privatecomponentloader lets add js dynamiccomponent selector dynamiccomponent services privatecomponentloader privatecomponentlocation class mydynamic constructor loader privatecomponentloader location privatecomponentlocation loaderload testreddecorator location decorator selector red template inline test export class testreddecorator constructor element ngelement elementdomelementstylebackground red", "num": "1062", "d": "3/2015"}, {"title": "shadow dom emulation two components template second get content projection", "body": "two components selectors respectively use template demo render buttons anchors looks something like whichever component second page receive content projection instead placeholder tags still see issue locally visit see anchors content projected buttons remove buttons leave anchors work fine readd another button anchors button problem", "num": "1058", "d": "3/2015"}, {"title": "class bindings nt camelcase normalize css class names", "body": "binding html class name added element currently", "num": "1057", "d": "3/2015"}, {"title": "browser adapter domon cancelable", "body": "", "num": "1056", "d": "3/2015"}, {"title": "component lifecycle needs documentation interfaces", "body": "right see use within angular code base seem like angular dart case made clear additionally would useful provide interfacesabstract classes destroyaware attachaware get compiletime checking lifecycle methods missing", "num": "1055", "d": "3/2015"}, {"title": "form api lacks type annotations", "body": "almost every method return types dynamic important constructors eg controlgroup type annotations would nice add whatever possible make consuming easier lower bugs refactorfinish api", "num": "1054", "d": "3/2015"}, {"title": "serverside rendering isomorphic javascript", "body": "angular going provide serverside rendering isomorphic javascript features impression pretty relevant theme folks ember getting mostly right thoughts cheers edit meteor also providing", "num": "1053", "d": "3/2015"}, {"title": "calling settimeout throws maximum call stack exception", "body": "load angular application open chrome developer tools switch console enter note exception reproduced maximum stack exception simply easy way reproduce problem occurs real applicationscomponents need use timeouts inside event handlers needs fixed", "num": "1050", "d": "3/2015"}, {"title": "controller ngmessages required directive ngmessagesinclude ca nt found", "body": "work directive ngmessagesinclude", "num": "1048", "d": "3/2015"}, {"title": "form controls model field annotations suggestion", "body": "one concept available frameworks ability apply annotations directly fieldsproperties way model used multiple viewsapps ready go without much work situations requirements stay view view app app optional approach one liked situations since makes things easier maintain imo allows individual fieldproperty describe individual requirements nt seen typescript annotations applied yet may even possible thought throw pseudocode class address field required twoway street string field required twoway city string field required twoway state string field required zipcodevalidator twoway zip string field required oneway residential boolean twoway oneway options totally made could used control binding occurs field line could eliminated potentially people nt like type information model heard many times frameworks nice thing approach whatever way like using formbuildergroup technique shown annotating model assuming typescript annotations allow nt seen restrictions yet formbuildergroup might look like model annotated thisaddress new address formbuilder injected constructor fb thisform thisaddress model defines annotations fbgroup also defined individual form control fields local field definitions would win used instead model annotations would allow flexibility use either approach even override default model annotations needed people nt want model annotations would simply use standard fbgroup technique", "num": "1047", "d": "3/2015"}, {"title": "change detection referenced input fields", "body": "really nt know bug missingforgotten feature choice however think html toggled work changedetection nt kick change needs possibly empty eventlistener like html toggled thoughts", "num": "1046", "d": "3/2015"}, {"title": "rendering using emulated shadow dom order magnitude slower native", "body": "written simple angular application simply displays list custom components screen using using native shadow dom application render messages screen second however switching emulated mode default rendering mode takes upwards seconds render list possible something component causing slowdown difference rendering pretty stark project found get running clone repo directions readme well want switch modes line bottom uncommented switch javascript var shadowdombindings bind shadowdomstrategy toclass nativeshadowdomstrategy bootstrap myappcomponent shadowdombindings lt uncomment line use shadow dom", "num": "1044", "d": "3/2015"}, {"title": "reduce forms boilerplate code", "body": "finished reading victor savkin blog post angular forms general idea spot code required make work looks much could nt help implement last demo angular lot shorter nt code setting form controller hard thing creating custom directive zip code validation angular version requires code bind model fields controls one line code wires twoway data binding first thing occurred saw people keep forgetting line already see stackoverflow questions reduce boilerplate somehow use attributes type information create form mean javascript class address tells form builder street field required required street string required message city required city string required state string custom validation custom validator zipcodevalidator zip string checkbox residential boolean component selector formexample template bind form address field form builder uses address type information get validation rules inline street required class formexample annotate form builder knows type address address constructor thisaddress new address nt need anything else", "num": "1043", "d": "3/2015"}, {"title": "form collection type new api", "body": "hello end reading post new form api think awesome great expectations new form api seems powerful much like know possible better api collections within form could mark entire form invalid validators greaterthanx lessthanx equalstox return false validation trying say model object contains array objects like collection least item form gets marked invalid condition fulfilled impossible least afaik really useful included new api need guidance popular php framework symfony form component already contains control named collection specifically designed use case works really fine maybe could something like forms keep hard work thanks amazin tool", "num": "1042", "d": "3/2015"}, {"title": "need way manage focus", "body": "goals different templates may different ways invoking bahavior example tag mobile may method desktop template may method invoking commands marshal events across uiwebworker boundries assume tha subexpressions start must avaluated ui thread everything else evaluated webworker thread copmonent selector mycomponent template platform mobile url mycomponentmobilehtml template platform desktop url mycomponentdesktophtml template platform native renderer foorenderer class mycomponent items array strength string constructor view view items name name b viewdo focus username viewdo focus username viewdo play viewdo select items viewdo select itemname itemname action syntax proposal syntax considered", "num": "1041", "d": "3/2015"}, {"title": "swap default behavior event propagation", "body": "right anything propagated events argument swapping say component template simple great pass component along user put app user writes alas party click handler wo nt fire template user knows nothing far user concerned total leaf get work user would write alternatively could change button js component selector mdbutton href template url buttonhtml export class mdbutton clickemitter function constructor eventemitter click clickemitter function thisclickemitter clickemitter click event event thisclickemitter event adding click handler event emitter propagate event happens default dom boilerplate get", "num": "1040", "d": "3/2015"}, {"title": "framework form submit events", "body": "directive angular automatically form submit events since people nt wanted behavior decade angular probably thing update event handling seems broken template tried method component interacting either button causes full form submit event handler never executed errors thrown rkirov ideas", "num": "1039", "d": "3/2015"}, {"title": "component testing isolation", "body": "components basic building blocks angular applications important solid testing story user component important able mock stub testing template since template annotation static need new mechanism dynamically rewiring template directives list support suggest following api mocks nt need template skip component template class mockb inject templatemodifier tm gt tmfor mockdirectives mockb mockc var rootel testbedcompiler tools generating setting expectations provided", "num": "1036", "d": "3/2015"}, {"title": "transform values templates", "body": "per yjbanov recommendation avoids unnecessary deployed application", "num": "1035", "d": "3/2015"}, {"title": "data driven forms", "body": "goals able generate form dynamical based specified structure allow marshaling data fromto form model support layout strategies support selecting right component type things consider impedance mismatch model vs form control implementation note need develop component look generate dynamic component type load private component based type import forms required materialdesign model class address street string city string state string zip string residential boolean component selector formexample template form layout automatic structure inline directives forms class formexample constructor fb formbuilder thisaddress new address function zipcodevalidator control controlvaluematch ddddd dddd return invalidzipcode true", "num": "1034", "d": "3/2015"}, {"title": "create haserror api forms", "body": "", "num": "1033", "d": "3/2015"}, {"title": "compiler support selectors multiple attributes", "body": "currently compiler match", "num": "1025", "d": "3/2015"}, {"title": "support ngoptions", "body": "currently way use select generate list options manually follows san fran new york city might good idea support something like implementation notes one way implement define new component used follows", "num": "1022", "d": "3/2015"}, {"title": "actual multiple statements", "body": "multiple statements ok statements composed one statement ie doa dob matter fact angular allow multiple statements mean ie doa dob", "num": "1016", "d": "3/2015"}, {"title": "developermd contains misinformation", "body": "x dart dependencies required order build angular however currently require dart dependencies run tests see x instructions state either dev stable version downloaded archive currently true since stable dart version supported really encourage people install nt suffer problems caused global dependencies juliemr please confirm protractor really ca nt run local mode via global launcher like gulpcli karma work ca nt fix installing npm packages sudo dangerous strongly discouraged people use ways installing node npm nt require", "num": "1013", "d": "3/2015"}, {"title": "skip dart tests issue warning dart environment setup", "body": "currently skip dart related tasks building angular dart environment setup tests justification someone familiar dart wants contribute small fix asking setup dart environment reasonable", "num": "1012", "d": "3/2015"}, {"title": "contributingmd contains lot misinformation", "body": "looks like file compied angular repo superficial changes concrete problems section points people gitter angualar mailing list nt actively monitor section mostly obsolete section references steps signcla launch", "num": "1011", "d": "3/2015"}, {"title": "ability set attrsproperties root element component", "body": "component currently set class side menu showhide manually manipulate dom element like able setup binding component element instead mhevery suggested injecting constructor errors used actual function tries set exist", "num": "1009", "d": "3/2015"}, {"title": "add support setting attributes component host element", "body": "currently set properties component host element way set attributes specifically aria purposes would useful things like etc", "num": "1008", "d": "3/2015"}, {"title": "preventing duplicate ids emulating shadow dom", "body": "problem say component template html ariaowns autocompletemenu gt alpha example use id necessary attribute current shadow dom emulation work multiple instances component page time ids would duplicated use cases include possible solutions different ways could handle put burden user people would done angular adopting matter documentation automatically recognize id attributes shim id isolation user writes angular recognize standard attributes use id reference list id references automatically convert documentunique ids add syntax identify ids unique conversion specific syntax aside something like benefit hardcode list idreference attributes still incurs performance cost previous solution", "num": "1007", "d": "3/2015"}, {"title": "fails safari", "body": "error line code error looks like mapwrapper createfromstringmap illegal strict mode operation safari first line loop weird might traceur problem", "num": "1006", "d": "3/2015"}, {"title": "remove library directives", "body": "per discussion done ts", "num": "1005", "d": "3/2015"}, {"title": "feature request provide getter component template", "body": "ionic need able change template component runtime based combination factors current device screen size userset configuration attributes user puts element could angular angular ca nt mhevery mentioned proposed syntax different templates could set based upon conditions still limiting still ca nt button instance potentially use different template need something dynamic simplest way fix problem would allow getter template", "num": "1002", "d": "3/2015"}, {"title": "binding regexp liberal", "body": "get processed way first one ignored", "num": "1001", "d": "3/2015"}, {"title": "typeerror exception using foreach inside switch", "body": "exception happens value directive changes way hide nested template component html suggestion loading suggestions suggestion cf full file steps reproduce reproduce issue git clone b switchissue npm install amp amp gulp play type something field typing second char exception raised exception prevents list suggestions disappearing reappearing stack trace exception angular version tested version", "num": "997", "d": "3/2015"}, {"title": "add directive lifecycle hook called children directive checked", "body": "hook implement called change detection checks implementation notes one way implement walk list directives reversed order every directive supports hook invoke", "num": "995", "d": "3/2015"}, {"title": "elementinjector throw find required prebuild objects", "body": "following throw viewport directive following inject null", "num": "994", "d": "3/2015"}, {"title": "missing git tags", "body": "without tags supposed see state repo version", "num": "993", "d": "3/2015"}, {"title": "template local variable value updated user types", "body": "illustrate problem setup angular quickstart example dart named changed template html hello nmvalue nothing launch app see hello al expected type new input text browser greeting update click nothing link invokes noop event handler greeting updates match input text value nt greeting update type extension add noop event handler element update input text gets propagated type way go note example deliberately trying avoid using model field intermediary transport input value thinking might consequence new angular digest phase vs digest cycle wanted double check nt bug eg uses timer delay change model field change detected ca nt nm considered template local model field hence updates picked automatically btw note tested current head angular ie", "num": "992", "d": "3/2015"}, {"title": "support gt gt gt shadow dom polyfill css", "body": "new name css deep combinator see mostly note self back feel free tackle would nice update webcomponentsjs time", "num": "990", "d": "3/2015"}, {"title": "ref binding attribute components", "body": "hi examples see element components like ngconf misko show get hold component api using ref binding happens attribute components like coexisting element one get reference following api exposes methods like tooltip component methods like would accesible binding think two possibilities either merging components api could cause lot trouble maybe adding different syntax could", "num": "985", "d": "3/2015"}, {"title": "event bindings allow assignments", "body": "code throws work since assignments supported event binding data binding", "num": "981", "d": "3/2015"}, {"title": "add support overriding shadowdomstrategy per component", "body": "use case angular material directive called lets user embed svg content via url component exists give people easy way insert svg content document easy way load svg document url loading content document directly instead using something like backgroundimage gives user power style svg svg content shadow root however point component lost fix mdicon component able specify always use emulated mode even time browsers support shadow roots", "num": "979", "d": "3/2015"}, {"title": "add support directives insert arbitrary content dom", "body": "use case angular material directive called lets user embed svg content via url need able build directive angular directly embeds content way using binding innerhtml possible susceptible xss would require ugly string manipulation domlike content", "num": "978", "d": "3/2015"}, {"title": "rename directiveservices directiveinjectables", "body": "please leave comment vote foragainst change suggest better name proposing change make language specific actually align better existing di vocabulary pkozlowskiopensource assigning make change input", "num": "973", "d": "3/2015"}, {"title": "typeerror gulptraceur angularbuild windows", "body": "hello tried build current sources following given steps unfortunately error destroyabletransformtransform gulptraceur run visualstudio toolchain therefore always use npm install encountered problems downloadingbuilding npm needed prerequisites place gulp protractor webdrivermanager etc using dart sdk js posting tried find similar issues luck complete error output", "num": "972", "d": "3/2015"}, {"title": "ngmouseleave triggers mouse rightclick", "body": "latest version chrome behavior happens previous versions right click elements perform different actions without triggering ngmouseleave affected scenarios header menus contains hyperlinks element dependent ngif updated ngmouseleave one good example issue replicated chrome version higher right click button increment counter thanks keep", "num": "971", "d": "3/2015"}, {"title": "eventemitter requires type", "body": "sure bug component called picklist nt type eventemitter get error javascript works constructor eventemitter changed changer function breaks shows error constructor eventemitter changed changer", "num": "965", "d": "3/2015"}, {"title": "subcomponent changes binded value", "body": "hi written simple webcompontant directive binds passed value und provides mehtod changes import component decorator template component selector bindsample bind value value template url bindsamplehtml directives export class bindsample template looks like click directive used way click like dostuff called updates bound value unfortunatelly binding somevalue updated wondering bug b implemented c due new concept onewaydatabinding", "num": "962", "d": "3/2015"}, {"title": "update polymer tree benchmark released version polymer", "body": "right using preview version following effects yet use shadowdom use builtin conditional like uses temporary bower repository polymer released limitations removed", "num": "960", "d": "3/2015"}, {"title": "bootstrapping noncomponent give better error message", "body": "import decorator bootstrap ngelement decorator selector input class extendedinput el constructor el ngelement thisel el consolelog alert hi bootstrap extendedinput results erro ands probably say", "num": "951", "d": "3/2015"}, {"title": "issue dart transformer", "body": "master open gives following error cc tbosch add", "num": "950", "d": "3/2015"}, {"title": "dgeni harsh", "body": "background broken build adding documentation think dgeni harsh think encourage adding documentation may dgeni help error could make error message clearer making explicit wrong amp could warning rather error documentation expected format ie contributingmd edit way issue probably fixed nicer way", "num": "949", "d": "3/2015"}, {"title": "js tests testunitjsci use dartium cli travis rather chrome", "body": "putting together developer notes following came gulp target makes use chrome canary understandably use dartium far good surprise gulp target launches dartium command line travis eg excerpt travis angular build around line developer run tests command line want ensure using browser ci travis inconsistency use browsers really want way want inconsistency fixed ie use dartium across board dart js tests b use chrome canary chrome js tests make fix one needed need someone angular core team indicate option preferable", "num": "945", "d": "3/2015"}, {"title": "angularbower projects nt specify dependencies packagejson", "body": "installing packages using jspm via npm example dependency specified bowerjson file specified packagejson causes issues loading modules jspm systemjs would much ask also specify dependencies", "num": "944", "d": "3/2015"}, {"title": "need way parent component know children ready", "body": "use case parent container component responsible performing layout number children parent unable know layout children bindings resolved however would nt work fired child components static attributes specific example material design gridlist responsible layout contained parent layout tile nt know sibling order perform layout needs know tile either static set via binding right good way know notified ready sizepositioned injections implemented would solve problem constructor still early properties set", "num": "934", "d": "3/2015"}, {"title": "overlay service", "body": "goal allow developers build overlays popups dialog boxes toasters etc without access native dom basic idea service allows developer load overplayed components service manages size position event handling api class overlay component instance component object closes overlay close class overlaymanager open type type component type load overlay position position overlay placed width string height string glasspane boolean events map", "num": "932", "d": "3/2015"}, {"title": "transpiler use traceur implementation parseobjecttype", "body": "right implementing needed upstream traceur supports although different implementation remove hack rewrite places use object types format traceur uses list types instead object hash", "num": "929", "d": "3/2015"}, {"title": "share angular google groups create new ones", "body": "currently following google groups angulardart forumangulardart angularjs forumangular angulardev js forumangulardev mhevery et al contributions angular picking suggest direct user developer questions see three options reuse groups posts create single angular group though seems go contrary igor guidelines acg create two angular groups one js one dart option seems reasonable flip side angularjs already generates quite traffic issues question discussion groups came editing contributingmd nt big issue new groups created might well done sooner later either way tweak contributingmd based answer acg angular communication guidelines section communicating js dart igor writes javascript developers usually nt care dart dart developers usually nt care javascript support javascript dart better tailor communication two groups practice means separate docs js dart", "num": "928", "d": "3/2015"}, {"title": "add support component children injection", "body": "nicetohave container components responsible configuring interacting contained components currently child component inject registerderegister manually", "num": "927", "d": "3/2015"}, {"title": "provide promise list foreach", "body": "would possible provide list promises transclude use tell rendering complete tend use automated testing without information revert using something like ngclass last actual ngrepeat div collection promises would help know individual objects rendered", "num": "923", "d": "3/2015"}, {"title": "proposal promises templates", "body": "line going support async operators stuff wondering support async templates way resolve promise template example would like propose makes possible handle array promises right template like stretching far", "num": "917", "d": "3/2015"}, {"title": "support overriding selectors directives import", "body": "possible override selector component import decorator selector someselector class directive component template directives new directivebinding key directive selector otherselector problems would make hard know selectors statically requires execution code know selector", "num": "915", "d": "3/2015"}, {"title": "throw error template declared viewport directive match", "body": "code throw error compilation subtemplate syntaxes ref directive viewport directive matched general error subtemplate without viewport", "num": "914", "d": "3/2015"}, {"title": "add facade windowmatchmedia", "body": "windowmatchmedia used determine current window matches given media query material design components use order responsive rendering", "num": "913", "d": "3/2015"}, {"title": "extend foreach syntax support data structures", "body": "might pedantic request nt microsyntax use instead since forin loop iterates array keys rather values issue expanded include array iteration one comments thread describes one possibility making syntax flexible", "num": "909", "d": "3/2015"}, {"title": "error benchpress output", "body": "see output", "num": "908", "d": "3/2015"}, {"title": "confused angular microsoft typescript traceur rttsassert", "body": "im confused see news libs typescript announced angular use typescript cant find anything typescript angular team really want use typescript means removekick traceur angular team want use typescript gt see like lib sync repro things right announcements well roadmap used removed", "num": "907", "d": "3/2015"}, {"title": "reflectortypeinfo object map", "body": "always made factory parameters annotations reason making object would speed instantiation type info lookup", "num": "906", "d": "3/2015"}, {"title": "dynamic loading components", "body": "problem order support lazy loading components select components based runtime value need way selecting component runtime rather template compile time mental model place component loaded contain headless component ie component headless component inject api allow headless component bootstrap child component location private component bring serve shadow dom view private component regular component annotation way special used locations normally headless component created synchronously private component created asynchronously headless component act proxy private component headless component instance injected light dom private component injected shadow dom example component selector car bind template url class car component selector vehicle bind class vehicle constructor pc privatecomponent thispc pc loadcar somelibraryload var childinjector pcload somelibrarycar open questions merge api", "num": "904", "d": "3/2015"}, {"title": "selectors decorators shadow dom", "body": "code work way would expect work specifically want write component uses decorator applied content included template instantiating document use element illustrate one decorator two components code one works expected one import component template decorator ngelement bootstrap annotation section component selector myshadowapp template inline directives shadowselector component controller class myshadowappcomponent constructor component selector mylightapp template inline directives shadowselector component controller class mylightappcomponent constructor decorator selector target class shadowselector ngelement always injectable wraps element directive found compiler constructor el ngelement eldomelementinnerhtml yo bootstrap mylightappcomponent bootstrap myshadowappcomponent html content second one gets decorator applied wrong apply decorators content included shadow dom way", "num": "903", "d": "3/2015"}, {"title": "declarative property initialization", "body": "angular paradigm shift became componentoriented taken fresh look would natural treat html markup serialized hierarchy objects type components particular case objects objects could properties complex types right setting component properties limited done using json inserts html attributes sometimes difficult especially type lot json code consider adding declarative way property initialization instead markup could write declarative counterpart like layout layout layout complex property panel component instance tablelayout class set property describe markup instance class want instantiate possible json unless trick like first example easily set complex propertiesarray properties like defining columns grid component example columns column definitions would hard describe json columns column element instance appropriate class grid component array property stores columns important angular act like serialization format take look xaml specification example decide property value go property value added array user could specify array property constructor method understand epic story think enhancement fits architecture could implemented least next version framework", "num": "902", "d": "3/2015"}, {"title": "", "body": "pr add new annotation used way js class needspropertysetter propsetter constructor propertysetter title propsetter function thispropsetter propsetter setprop value set value current element thispropsetter value internally need setter set property kegluneq could please update dart transformers generate setters thanks", "num": "901", "d": "3/2015"}, {"title": "element injector amp parent ancestor optional annotations", "body": "working identified potential issue let say directive injects parent directive binddirectiveproperty setup bindings annotation bind property however something want binding already set also probably issue verified verify directive exists setting prop value add nullcheck yet clear could places changes cc mhevery rkirov vsavkin", "num": "896", "d": "3/2015"}, {"title": "annotations looks dangerously big", "body": "line db binding bothers constructor move di constructors annotations usually nt hardcode path db controller look analogue", "num": "895", "d": "3/2015"}, {"title": "component transcluded content nt compiled", "body": "nt know duplicate figured post anyway case component never compiled js tabsjs import component template import tab tab component selector iontabs template inline directives tab export class tabs js tabjs import component template component selector iontab template inline export class tab constructor alert compiled alert never fires played awhile convinced bug end content", "num": "894", "d": "3/2015"}, {"title": "directive transclude element working", "body": "wondering discovered problem transclude element directive definition whether confused specifically appears way replace transcluded element dom angular", "num": "891", "d": "3/2015"}, {"title": "website missing view source improve doc", "body": "would nice buttons back could nt find angulario located github since githubcomangularangulario seems empty", "num": "890", "d": "3/2015"}, {"title": "flexible templating dom", "body": "built several components directives angular used transclusion flexible powerful way pulling transcluded html dom using templating feature possible angular seemed slightly working way angular wanted work chose way allowed us define templates right html tree without build code include html files first example generic container slightly similar ngswitch container takes one templates displays template based selector binding example consuming component content display somepropertypath selector value content display somepropertypath different value compile link processing component build transcluded content parse templates bind actual dom component run time also built another container control resembles ng repeat uses internally footers content item allows user specify templates example consuming control seems fairly unique use case wanted bring angular team attention case nt seen thoughts kind flexible templating reusable components could accomplished angular", "num": "889", "d": "3/2015"}, {"title": "failure", "body": "v node tmp throw er unhandled error event error super call allowed derived constructor nt know getting rid super call legit", "num": "887", "d": "3/2015"}, {"title": "fix darttransform merge setter registrations name", "body": "currently generate one setter registration per value example annotation attached two classes would generate instead need generate single setter registration using common parent class would tough without resolving transformer would like avoid first approximation omit parameter type interpreted need global knowledge setters would registered modify transformer primary inputs files generated app entry points parse files gathering information setters generated also parse files imported primary inputs multiple setters single property remove type information registered setter output file method registers setters generate code import call app setup", "num": "886", "d": "3/2015"}, {"title": "angulario header wrong color firefox ubuntu", "body": "colors angulario home page broken firefox l ubuntu repo pr fix", "num": "879", "d": "3/2015"}, {"title": "input number step", "body": "test validation pass", "num": "877", "d": "3/2015"}, {"title": "unable set property classlist element", "body": "needs implemented decorator selector class bind classchanges class keyvaluediff class classdecorator element ngelement constructor element ngelement thiselement element classchanges changes keyvaluechanges changesforeachchangeditem decorator selector classlist bind classchanges classlist iterablediff class classdecorator element ngelement constructor element ngelement thiselement element classchanges changes arraychanges changesforeachchangeditem original text tried html html first example checking property classlist js element second example checking property classlist would expect set property classlist dart release", "num": "876", "d": "3/2015"}, {"title": "story accessing dom components", "body": "need solid story accessing manipulating dom right appears rough complete single getattribute method particular use case want query elements component shadow dom manipulate attributes element", "num": "873", "d": "3/2015"}, {"title": "support absolute paths component urls", "body": "currently component templates accept absolute paths ie first support absolute paths component templates yes resolve think yes resolve like anchor tag would resolve path note agree filerelative paths better component reuse question user writes absolute path reword error thrown explicit support", "num": "872", "d": "3/2015"}, {"title": "fix names dart libraries remove dart name", "body": "", "num": "871", "d": "3/2015"}, {"title": "selectors allowed prefix", "body": "possible import directive way prefix selector html could write open questions compilex css selectors know part needs prefixed idea css selector would mean would get prefix exactly would work directive imports", "num": "868", "d": "3/2015"}, {"title": "selectors support multiple targets", "body": "currently support specify multiple selector targets need add", "num": "867", "d": "3/2015"}, {"title": "dash case camel case conversion html attributes", "body": "html attributes lowercased per html spec means convert dash case camel case gt see", "num": "866", "d": "3/2015"}, {"title": "viewpool configurable", "body": "view viewpool one riskiest features take plunge enable viewpool application need extensive testing therefore would like disable viewpool right hardcodes item cache number configurable b enable percomponent basis ie intend testing component promoting cachable component", "num": "856", "d": "3/2015"}, {"title": "limit binding prop", "body": "recently found seems limit bindings property strange nt case foreach known side effect missing something html component selector todoapp template inline template class todoapp constructor thisstate sametypeofbinding correctly binding", "num": "852", "d": "3/2015"}, {"title": "importnode wrapper needs special case htmltemplateelement webkit", "body": "webkit bug appears fixed however workaround needed order support devices ios safari nt look like using much cloning maybe quick hack good enough", "num": "851", "d": "3/2015"}, {"title": "gulp gives horrible errors", "body": "build failed reported errors like error help debug issue improved", "num": "850", "d": "3/2015"}, {"title": "better documentation", "body": "angular project write documentation spec implement throughout codebase would propose minimum exported classes documentation comment describing class public methods exported classes also documentation comment", "num": "849", "d": "3/2015"}, {"title": "include external html template examples", "body": "trying create example aria menu able see include html template using url attribute see support copying template css files dist directories gulp script may missing something case please point missing anything add wanted see whether preferences added gulp script see support cjs files copied renamed js create similar capabilities chtml files", "num": "848", "d": "3/2015"}, {"title": "use super subclasses use", "body": "blocks traceur enforcing rules correctly", "num": "844", "d": "3/2015"}, {"title": "create cssadapter like domadapter", "body": "methods current domadapter deal style probably extract use something like css parser js ccslib dart", "num": "843", "d": "3/2015"}, {"body": "would useful view creationhydration", "d": "3/2015"}, {"body": "jelbourn", "d": "3/2015"}, {"body": "greentea using native shadow dom mode would nt affect easy workaround", "d": "3/2015"}, {"body": "use property setters set attributes classes styles syntax square brackets templates see spec", "d": "3/2015"}, {"body": "yep properties attributes set attribute html prop setter maybe rename sth else", "d": "3/2015"}, {"body": "using following pattern experiments dart", "d": "3/2015"}, {"body": "also investigate auto waiting asynchronous script execution", "d": "3/2015"}, {"body": "micro metrics", "d": "3/2015"}, {"body": "think animations well rendering might multiple paints measured least provide easy way tell benchpress script execution animation done maybe via special call", "d": "3/2015"}, {"body": "looks like example using atscript either", "d": "3/2015"}, {"body": "dynamically loading atscriptnonstandard js need set configuration js systemconfig traceuroptions annotations true types true membervariables true systemimport whatever", "d": "3/2015"}, {"body": "thanks tried getting", "d": "3/2015"}, {"body": "jrgleason thoughts component needs template component annotation probably complaining looking paste sure trying accomplish exactly got element indexhtml template replace check basic demo future might try asking gitter room help review figure opening issue", "d": "3/2015"}, {"body": "take look actually put template inline nt add code got error either way added since main branch issues assumed something track figured worst case scenario someone closes demo code currently using uses instead traceur take look plunker see might missed", "d": "3/2015"}, {"body": "ah ha miss something original post update actual code looked like apparently happens accidently include semi end misleading message mixed adding zonejs makes work thanks help convey information masses still curious plunker created single js file gulp option", "d": "3/2015"}, {"body": "resolved using q promise factory", "d": "3/2015"}, {"body": "wesleycho yes happen waiting review", "d": "3/2015"}, {"body": "could please make document public", "d": "3/2015"}, {"body": "ca nt access doc yjbanov vsavkin would mind summarising like sentences harm done pipes bindings alternative mechanism directives like new opened pr", "d": "3/2015"}, {"body": "moving private component pipe binding way get pipe blocking", "d": "3/2015"}, {"body": "vsavkin could share proposal pls pkozlowskiopensource short already pipes plain jsdart want postprocess incoming value setter want customize postprocessing inject something outside use setter pipes require lot plumbing core concepts developers learn us document whole concept seems exist support binding pipes", "d": "3/2015"}, {"body": "create new doc", "d": "3/2015"}, {"body": "specifically want documentation lifecycle attributes set component controller", "d": "3/2015"}, {"body": "covered guide davideast kwalrath working", "d": "3/2015"}, {"body": "cc matanlurey jbdeboer tbosch mhevery juliemr", "d": "3/2015"}, {"body": "apparently may partially covered like keep open possible strawman would ease migration", "d": "3/2015"}, {"body": "cc vsavkin", "d": "3/2015"}, {"body": "related", "d": "3/2015"}, {"body": "vicb resolve along", "d": "3/2015"}, {"body": "yes shorter names would sweet", "d": "3/2015"}, {"body": "", "d": "3/2015"}, {"body": "duplicate google doc early stage attached issue feel free comment", "d": "3/2015"}, {"body": "possible js constructor attribute tabindex statictabindex propertysetter tabindex tabindexsetter thistabindex statictabindex thistabindexsetter tabindexsetter onchange thistabindex tabindexsetter", "d": "3/2015"}, {"body": "essentially want prepare default value property use undefined null js template class mdradio defaultvalue fires check construction onchange tabindex number tabindexsetter function constructor attribute tabindex statictabindex propertysetter tabindex tabindexsetter thistabindex statictabindex thistabindexsetter tabindexsetter", "d": "3/2015"}, {"body": "use would also great tailhook intercepter also prepared setter function value set default value would auto override", "d": "3/2015"}, {"body": "matanlurey nt implementing looking syntax", "d": "3/2015"}, {"body": "said would cool web components got properties well", "d": "3/2015"}, {"body": "let verify nt aware already completed", "d": "3/2015"}, {"body": "pkozlowskiopensource attributes used match css selectors css support matching properties btw also support binding maps attributes", "d": "3/2015"}, {"body": "yjbanov sure got comment got currently specialcasing compiler allows bind attributes top standard binding properties using special syntax see sure css selectors coming play yjbanov could please elaborate", "d": "3/2015"}, {"body": "pkozlowskiopensource example using attribute drive css style html materialbutton materialbutton raised ok cancel supporting properties sufficient express", "d": "3/2015"}, {"body": "would tell angular component web component biggest question think able tell runtime element none following standard html element eg angular directive web component could log warning harder statically unless app developer also provides whitelist web components use app", "d": "3/2015"}, {"body": "ok automagic standard elements optional mode used web components whitelisted", "d": "3/2015"}, {"body": "seems like ed solve errors", "d": "3/2015"}, {"body": "alexeagle points answer required might need get latest version check", "d": "3/2015"}, {"body": "yes similar problem fri mar victor berchet notifications githubcom wrote alexeagle points answer required might need npm update get latest version check npm ls grep reply email directly view github", "d": "3/2015"}, {"body": "way solve fri mar tobias bosch tbosch googlecom wrote yes similar problem fri mar victor berchet notifications githubcom wrote alexeagle points answer required might need npm update get latest version check npm ls grep reply email directly view github", "d": "3/2015"}, {"body": "closed via", "d": "3/2015"}, {"body": "yes want inline templates styles production deployment", "d": "3/2015"}, {"body": "story templates processed compiler run browser well outside transformer production deployment compiler runs part pub transformer inlines everything well turns expressions templates plain dart code links directives etc little template interpretation done runtime", "d": "3/2015"}, {"body": "thanks make note continue using feel free close tracked elsewhere", "d": "3/2015"}, {"body": "additional complexity current applications components optimize unless tag supports sort custom property lose ability strawman jbdeboer", "d": "3/2015"}, {"body": "preliminary decision add css template definition matan write actual implementation defer", "d": "3/2015"}, {"body": "work change", "d": "3/2015"}, {"body": "ok looked semantics supposed indicator support event bubbling confuses position absolute change behavior regards event bubbling still looks like bug one way", "d": "3/2015"}, {"body": "sure click actually element click handler child", "d": "3/2015"}, {"body": "instances clicking element instances native handler always gets called angular events attribute component callback get called position absolute styling applied child makes sense yes actual element getting click inside child correct behavior bug gets called position absolute applied either way bug", "d": "3/2015"}, {"body": "wait minute bad looks like mixing two changes fact look like working properly apologies", "d": "3/2015"}, {"body": "encountered one liner might fix needs proper integration test", "d": "3/2015"}, {"body": "rkirov bandwidth close one", "d": "3/2015"}, {"body": "reassigned tbosch looks like shadow dom emulation problem messed", "d": "3/2015"}, {"body": "yep leading removed want able access values dart", "d": "3/2015"}, {"body": "ok thnx send pr", "d": "3/2015"}, {"body": "duplicate pr already mhevery jelbourn vicb could one guys please review gets second person bumping issue last couple days", "d": "3/2015"}, {"body": "output selenium logs captured relevant section failure another", "d": "3/2015"}, {"body": "always happens benchmark seem occur run ngtree benchmarks reproduce locally linux machine tried running one expensive benchmark got different error browser crashed tried adding debug seleniumstandalone options output big travis stopped build", "d": "3/2015"}, {"body": "ok switching dartium chromium seems resolve issue running get little data edit nevermind got lucky switching chromium resolve issue", "d": "3/2015"}, {"body": "see potential workaround forcing performance tests use fresh instance browser whenever run", "d": "3/2015"}, {"body": "workaround commit merged hopefully solved moment like leave issue open since still nt know actually causes problem tobias suspect kind memory issue fetching lots massive performance logs", "d": "3/2015"}, {"body": "ajoslin latest master nt fixing", "d": "3/2015"}, {"body": "actually class binding works fails run setter", "d": "3/2015"}, {"body": "yes latest master verify", "d": "3/2015"}, {"body": "call setter function", "d": "3/2015"}, {"body": "boolean", "d": "3/2015"}, {"body": "temp fix", "d": "3/2015"}, {"body": "pkozlowskiopensource add use case test demonstrate works expected", "d": "3/2015"}, {"body": "apparently mlaval checked latest master things seem work going add test prove", "d": "3/2015"}, {"body": "sorry guys bad call found bug update script nt actually updating master ill close confirm later today get work thanks", "d": "3/2015"}, {"body": "could handled event manager binding events something along lines want make sure clean events component destroyed pkozlowskiopensource would like take crack", "d": "3/2015"}, {"body": "oh surprised got duplicated talk mlaval send pr tomorrow think keep compilerprivate example create sth like stringutilsjs compiler dir suggestions", "d": "3/2015"}, {"body": "keep compilerprivate first thought make available outside compiler together general purpose util functions come future strong opinion", "d": "3/2015"}, {"body": "would prefer keep part compiler due bad memories ng opened helpers public api helpers expanding allpurpose monsters wayyy much ng internals would prefer play safe side time open things gradually needed nt feel strong others think makes sense open general api cool long exposed public outside world", "d": "3/2015"}, {"body": "oups intention keep functions file fix following ouput discussion would favor private solution pkozlowskiopensource", "d": "3/2015"}, {"body": "sounds lot like issues got pr already would proposed solution work", "d": "3/2015"}, {"body": "nice catch thanks", "d": "3/2015"}, {"body": "", "d": "3/2015"}, {"body": "supports inheritance inheritance hierarchies angular favor composition inheritance base class extend", "d": "3/2015"}, {"body": "yes purpose looks good added new test captures content disabled tests", "d": "3/2015"}, {"body": "make sense allow user specify properties querying might check performance cost pulling everything measurements would also give scroll info scrolltop scrollwidth scrollheight also probably need give clientheight offsetheight width lastly limited user power arbitrarily select part component template measure figuring wide specific input web platform would done selector could abstract kind locator specifier", "d": "3/2015"}, {"body": "pkozlowskiopensource one", "d": "3/2015"}, {"body": "use ready", "d": "3/2015"}, {"body": "give example api moving child elements would look like", "d": "3/2015"}, {"body": "say child elements moved simulate reprojection mean support projection tags components able receive injection element app services databinding within component work normally leaf", "d": "3/2015"}, {"body": "sounds like tbosch calling render directive think directives access platformspecific apis participate data binding di view hierarchy anything else lives application layer according new rendering architecture directives would live render layer api available type directive sufficient implement binding data native properties binding data web components alone would already enable svg canvas webgl implement animations implement overlays", "d": "3/2015"}, {"body": "type directive participate di lose ability make directive uses something like consumes builtin defined services yjbanov suggesting directive uses canvas would nt able define custom property bindings", "d": "3/2015"}, {"body": "use case might inform material directive called directive lets user load svg icon either directly url alias alias concerned icons configured provider referenced name angular two analog provider would creating service root level app component directive would need consume service look svg content name append content dom specific icon set directive could also determined binding", "d": "3/2015"}, {"body": "jelbourn render directives participate di still databind example would normal component participates di user still however internally would use render directive pass data eg way binds svg data custom data render directive", "d": "3/2015"}, {"body": "", "d": "3/2015"}, {"body": "latest thinking output limited value converge output obviously pure source", "d": "3/2015"}, {"body": "rkirov true provided migration ts done referring current atscript situation depending timeframe ts migration tackling item might might make sense time extension name figured worth make people live easier today", "d": "3/2015"}, {"body": "naming convention makes sense since typescript stay angular rkirov", "d": "3/2015"}, {"body": "similar", "d": "3/2015"}, {"body": "close dupe", "d": "3/2015"}, {"body": "could happen executed", "d": "3/2015"}, {"body": "line executes upon module import", "d": "3/2015"}, {"body": "stack trace issue", "d": "3/2015"}, {"body": "wrong repo guess looking", "d": "3/2015"}, {"body": "yup sorry thanks pointing right direction", "d": "3/2015"}, {"body": "best way send pullrequests see", "d": "3/2015"}, {"body": "expect", "d": "3/2015"}, {"body": "well absolute path better would admit real issue", "d": "3/2015"}, {"body": "actually issue close", "d": "3/2015"}, {"body": "repo could please reopen", "d": "3/2015"}, {"body": "yes issue emulated mode reason done refactoring compilerview basically splitting half refactoring shadow dom emulation pushed render view decided wait done", "d": "3/2015"}, {"body": "thanks clarification live issue opened code merged", "d": "3/2015"}, {"body": "yes let leave open", "d": "3/2015"}, {"body": "hmm dgeni taking first preceding come problematic changed last instead use fix", "d": "3/2015"}, {"body": "easy", "d": "3/2015"}, {"body": "must way zonejs must first thing intercept calls requires better errordocumentation", "d": "3/2015"}, {"body": "right rkirov also need take account preparing onefilethathasthemall build", "d": "3/2015"}, {"body": "better error message must however sure module import right solution import guarantee zone runs angular fact might need run every js page includes systemjs pkozlowskiopensource systemjs commonjs bundle zonejs however consumable selfexecuting bundle prepended zonejs", "d": "3/2015"}, {"body": "see please also note intend switch typescript traceur shortly", "d": "3/2015"}, {"body": "try pending issues resolved", "d": "3/2015"}, {"body": "would cool validator could return promise", "d": "3/2015"}, {"body": "removed blocker", "d": "3/2015"}, {"body": "sure yet closing issue", "d": "3/2015"}, {"body": "hi mhevery instead closing possible label feature request far understand generally feature requests get closed two ways feature implemented team community behind project discussing feature decide implemented think would make sense thanks", "d": "3/2015"}, {"body": "retrieved prebuilt object element injectors need add service think added app injector open pr", "d": "3/2015"}, {"body": "think since tbosch yjbanov movedmoving shadow dom emulation render module one take look", "d": "3/2015"}, {"body": "oh fix asap", "d": "3/2015"}, {"body": "jelbourn", "d": "3/2015"}, {"body": "tell expect use case", "d": "3/2015"}, {"body": "updated docs w use interfaces switch typescript use abstract classes one superclass lot places code need introduce interfaces", "d": "3/2015"}, {"body": "added separate issue add missing interfaces", "d": "3/2015"}, {"body": "", "d": "3/2015"}, {"body": "pensierinmusica thoughts", "d": "3/2015"}, {"body": "short answer yes", "d": "3/2015"}, {"body": "decided yet closing since issue question", "d": "3/2015"}, {"body": "mhevery shall keep open feature request instead", "d": "3/2015"}, {"body": "starting initiative support server sider rendering see design doc still work progress", "d": "3/2015"}, {"body": "issue", "d": "3/2015"}, {"body": "load zonejs angular occur still", "d": "3/2015"}, {"body": "wesleycho tried figure load zonejs using quickstart repo seems like pulls bunch dependencies along test zone code", "d": "3/2015"}, {"body": "sure fiddle correct seems like using zonejs triggering error", "d": "3/2015"}, {"body": "looks like correct", "d": "3/2015"}, {"body": "wrong repo one angular guess looking said nt think anyone able help based info provided enough context put together minimal reproduce scenario using plunker similar opening new issue", "d": "3/2015"}, {"body": "think good idea many scenarios spike top core forms module thinking separate module following reason core forms module compiled js dart want reduce boilerplate minimum may take advantage language features available ts dart", "d": "3/2015"}, {"body": "fyi might related though response yet issue either", "d": "3/2015"}, {"body": "filipbech really related see comment code work declare change event binding needs initialize empty string js toggled", "d": "3/2015"}, {"body": "agreed dublicate ill close issue", "d": "3/2015"}, {"body": "tests show otherwise sure running dev mode kinds assertions make code slow", "d": "3/2015"}, {"body": "sure know dev mode", "d": "3/2015"}, {"body": "looks like prod investigate", "d": "3/2015"}, {"body": "saw adding form suggestion similar suggested total agreement posted", "d": "3/2015"}, {"body": "needs design spec please", "d": "3/2015"}, {"body": "almost event shadowdom component body wo nt work without", "d": "3/2015"}, {"body": "every developer expects events bubble able delegate however bring question get ahold directive associated element event targeted perhaps intended comment", "d": "3/2015"}, {"body": "clarifying question proposing default functionality change bubble cases case nested elements template put another way change would top level template element still default bubble would stop component boundary", "d": "3/2015"}, {"body": "always bubble shadow dom spec event target changed whenever event crosses component boundary", "d": "3/2015"}, {"body": "great thanks clarifying", "d": "3/2015"}, {"body": "assigning jelbourn test native mode", "d": "3/2015"}, {"body": "mhevery tested native mode found button usecase actually works expected without marker filed track done still feel swapping default would expected behavior people used web development", "d": "3/2015"}, {"body": "decision return value event handler control whether happens pkozlowskiopensource", "d": "3/2015"}, {"body": "thanks rado let suggest tweak idea component uses directives want mock would need import test write repetitiously mockdirectives list since number things want mock probably small compared number want leave use map instead let also mention related problem whose solution may bit challenging better start thinking early look production directives list uses controller classes di keys angulardart selector strings di keys guessing uses controller classes di keys solve following problem forcing importing directive names local meaning thus avoiding global variable soup directives cause angulardart cause problems probably ca nt components different libraries mutually use would cause circular dependency even dart allowed build system might forces unit test depend entire transitive closure component dependencies even though may using perhaps nt care corner case seems significant think problem analogous happens guice try declare module bindings site consuming classes say fancy annotations instead using separate module problem consuming class nt declaring assumptions reconfigurable dependencies configured use di keys declare depends keys bound production config binding module unit test depend upon declare di keys bound solved simultaneously simply making local uses short selector strings map longer aliases mapping applies locally eg template use controller declare shorthand say aliasing param minor variant could use mean import libraryimportpath component selector since library import paths strings anyway lose ability locally alias unless came weird notation like guys like importing actual classes see feature instead restriction still solve together making di key object production controller class object production version dependedupon component library eg b akeydart library akey const akey const key adart library import akey component tempate injectedwith akey honestly much simpler even allows aliasing libraries use short selector alias different values use together anyway", "d": "3/2015"}, {"body": "rkirov mocking children components big design decision could link doc discuss rational evaluate alternatives", "d": "3/2015"}, {"body": "vicb mentions capability doc", "d": "3/2015"}, {"body": "early proto needs work wanted test would look like keep working coming days", "d": "3/2015"}, {"body": "trinarytree vicb proposed api solves issue concerning keeping old dependencies concerns go beyond testing component test would also importing real dependencies whether used annotation would require major rethinking di support stringbased approach suggesting maybe discuss separately testing btw dart support cyclical imports concern circumstances", "d": "3/2015"}, {"body": "sounds right", "d": "3/2015"}, {"body": "prior arts considered provide real world use cases believe real world use case provide ability test form business logic independent controller essence testing formschema isolated controller ideally new forms able fully test forms way control generated schema independent controller another use case prior arts demonstrate ability set element attributes probably want set element properties instead required minlenth maxlength pattern placeholder form schema", "d": "3/2015"}, {"body": "really nice reduce amount code required annotating model something would optional suggested saw someone else well reduce amount boilerplate code", "d": "3/2015"}, {"body": "danwahlin like similar attributes aspnet mvc model use attributes annotations typescript provide field metadata generating form still see valid use cases field metadata form schema would come seperate datasource property annotations example use case single model use multiple message form schemas depending state user user details form backed userdetails model containing name address phone etc initially new user use form schema named userdetailsnew allows user enter details user longer new state use schema userdetailsexisting schema first last name fields disabled user change name would allow us use model controller view would use separate form schema dynamically also use case able change schema fly following last use case generated form schemas country pattern phone number userschemaus declares pattern phone userschemagb declared pattern phone user us address phone number set user changes country gb controller replace form schema userschemagb player get validation error phone field", "d": "3/2015"}, {"body": "one common use case datadriven forms generating forms based json schema backend api developers love give frontend developers json schema tell model look like submitting makes lot sense use schema build form please take look jsoneditor great job generating forms json schema main challenges generating forms json schema json schema validation rules like forms generated json schema validation logic json schema supports arrays forms support mechanism adding new items array removing items sorting items array required items array complex schemas json schema property means model unlimited number keyvalue pairs json schema recursive base case means object base cases json schema supports learn makes json schema powerful time hard generate forms validators would love see angular forms module supports json schema box aligned project goals please consider making easy developers build forms json schema", "d": "3/2015"}, {"body": "agree json schema already large ecosystem serverside apis would great starting point nothing else create reusable component schemas via ref definitions keywords", "d": "3/2015"}, {"body": "mlaval saying seems work test let add one see", "d": "3/2015"}, {"body": "tests passing successfully vsavkin please clarify issue", "d": "3/2015"}, {"body": "mlaval maybe open pr tests got future", "d": "3/2015"}, {"body": "done", "d": "3/2015"}, {"body": "dropped angulardart went reason ca nt", "d": "3/2015"}, {"body": "really actually use ngoptions even angular always found confusing created issue talk", "d": "3/2015"}, {"body": "removed blocker", "d": "3/2015"}, {"body": "depending context described use event handlers binding expressions example perfectly fine would error makes perfect sense since binding expressions need return value one used binding would nt clear returned value taken account first fast hand nt care event handlers return values side effects hope clarifies believe docs could improved prs welcomed", "d": "3/2015"}, {"body": "see thank", "d": "3/2015"}, {"body": "also simplify dart installation instruction tell people install dart via brew mac point mac users path recommended option brew installed one get dart going environmental variable setup necessary", "d": "3/2015"}, {"body": "blocked js tests testunitjsci use dartium cli travis rather chrome someone angular team confirm use dartium js tests mistake please respond fix addressing issue mostly done source problem currently makes use dartium hence invokes dart environment variable setup exit error dart env", "d": "3/2015"}, {"body": "first cut workinprogress feedback welcome got question problem section points people gitter angualar mailing list nt actively monitor right issue raised decision made gladly update docs new groups created decided similar topic someone might want give though stackoverflow tags want standardize angular fyi far coding rules section mostly obsolete first two bullets say write tests exercise code changes document public apis seems generally applicable third bullet js style guide wrap probably ok typescript style guide comes find obsolete glad update maybe referring obsolete folks seem following nonetheless maybe habit section cut edited needed signing cla section references steps signcla launch angularjscontributingmd angulardartcontributingmd setup seemed acceptable note second step submitting pull request asks please sign contributor license agreement cla forward link signing cla section looks like file compied angular repo superficial changes carefully edited best knowledge decisional powers eg core team decide want new google group", "d": "3/2015"}, {"body": "duplicate", "d": "3/2015"}, {"body": "pkozlowskiopensource think go code path since already straight forward", "d": "3/2015"}, {"body": "pkozlowskiopensource think go code path since already straight forward", "d": "3/2015"}, {"body": "yeah indeed issue traceur fixed fixed temporarily perhaps dirtiest hack ever done ever", "d": "3/2015"}, {"body": "issue also happens different directives html suggestion loading suggestions list template directly inside another one seems trigger exception child view detached equivalent directly inside another tag", "d": "3/2015"}, {"body": "see", "d": "3/2015"}, {"body": "change release process tag git repo cut release", "d": "3/2015"}, {"body": "started using tags referring", "d": "3/2015"}, {"body": "chalin understand correctly nm variable local input field need handler propagates changes ngmodel us binding manually played data binding help community need another example", "d": "3/2015"}, {"body": "sekibomazic far know local template aware achieve equivalent result using model field since templatelocal variables new angular mainly wondering expected behavior angular case mention", "d": "3/2015"}, {"body": "chalin seem right local template hmm also wondering needed propagate changes within template", "d": "3/2015"}, {"body": "chalin sekibomazic think problem change detection fired async actions happened bindings declared user example binding click declare empty input event binding working fine js hello nmvalue nothing nt know whether feature bug feature think must documented well", "d": "3/2015"}, {"body": "nt know whether feature bug feature think must documented well", "d": "3/2015"}, {"body": "works intended must listener trigger change detection document", "d": "3/2015"}, {"body": "thanks confirming mhevery", "d": "3/2015"}, {"body": "ref", "d": "3/2015"}, {"body": "used kind support core discussion mhevery tbosch vsavkin decided drop functionality support html worked support decided drop support rationale would need insert tag emulated components closest enclosing shadow root vs emulated mode exclusive would need able insert arbitrary dom ref support might also able insert tag would go shadow dom native amp head emulated think could alternative", "d": "3/2015"}, {"body": "vicb nt quite follow issue svg content added needs affected style rules live lightdom outside component example html class changes icon red appending elements inside icon shadow dom would nt really help", "d": "3/2015"}, {"body": "shadow dom decoupled light dom also styles want use styles light dom either use shadow pseudo selector deep combiner light dom css", "d": "3/2015"}, {"body": "jelbourn trying understand really needed hostcontext selector might able help use case flexible emulated strategy though", "d": "3/2015"}, {"body": "vicb benefit using shadow dom encapsulation styles events queries etc case using shadow dom would makes things harder user without adding benefits many cases shadow dom good tool solve problem nt appropriate use case", "d": "3/2015"}, {"body": "reason made strategy global perf emulated mode exclusive insert styles compile time modes mixed check styles inserted closest shadow root insert otherwise time emulated component rendered", "d": "3/2015"}, {"body": "usecase issue would probably addressed decoratorlike directive shadow dom instead component append arbitrary content resolution", "d": "3/2015"}, {"body": "closing issue thought things like would work would bad", "d": "3/2015"}, {"body": "duplicate", "d": "3/2015"}, {"body": "directivethings directivestuff jk different types injectables guess main reason would good idea something outside consider injectables would able injected point probably makes sense would vote", "d": "3/2015"}, {"body": "plenty objects allow inject need explicitly listed annotation eventemitters propertysetters parent directives broad liking", "d": "3/2015"}, {"body": "prefer services injectables mostly reasons rado gave also services terminology part angular describes well services really liked change componentservices services though", "d": "3/2015"}, {"body": "knee jerk reaction vote feels little much like pushing framework terminology onto developer instead way around sufficiently ambiguous see leading really big source confusion lot people", "d": "3/2015"}, {"body": "think like lot clear looking code nt think would read documentation know injectables property agree might broad unless plans limit someone inject component think works", "d": "3/2015"}, {"body": "line domain dependency inversion principle dependency injection injecting dependencies class service directive etc think term going widely recognized otherwise see conversation teaching people angular dev injectables dependencies get injected like services stuff", "d": "3/2015"}, {"body": "", "d": "3/2015"}, {"body": "like dependencies well", "d": "3/2015"}, {"body": "dependencies injectables dependencies accepted", "d": "3/2015"}, {"body": "might crazy idea removing creating new annotation nt already one way clean api injecting class", "d": "3/2015"}, {"body": "xesued maybe", "d": "3/2015"}, {"body": "oooooh like well want please smiley", "d": "3/2015"}, {"body": "xesued sekibomazic semantic existing annotation means inject something previously declared injector one parents injectables means configure child injector new items injected directive children sekibomazic proposing already exists looking construct different semantic", "d": "3/2015"}, {"body": "unaware existing current configures existing di container injector items injected di container created makes lot sense property still think option like suggested would nice maybe named might discussion somewhere else case naming", "d": "3/2015"}, {"body": "yes directive kind child injector see yes configure injector express injected directive", "d": "3/2015"}, {"body": "hmm bit different imagined working means necessarily set dependencies directive way configuring things could injected component children accurate case take back vote dependencies sure would make explicit though tue mar pm pawel kozlowski notifications githubcom wrote yes directive kind child injector see yes services configure injector express injected directive reply email directly view github", "d": "3/2015"}, {"body": "nt hear reason rename nt like remainder configures injector gets injected constructor component", "d": "3/2015"}, {"body": "ok reading comments extract following proposals think proposal coming misunderstanding currently think finally one discarded proposal issue criticism hear one rkirov raises points broad things injectable nt explicitly listed ones coming element injector keep nt seen particular arguments keeping given term overloaded use imo summary looks like best proposal although issues throwing ideas boy long proposals objections shell go", "d": "3/2015"}, {"body": "let rename pkozlowskiopensource make", "d": "3/2015"}, {"body": "ok", "d": "3/2015"}, {"body": "changed indexjs gulptraceur use errobject proper function join attached know ugly hack wanted know built indexjs get build files course many warnings errsobject empty smile shell error gulptraceur errsobject empty error gulptraceur errsobject empty error gulptraceur errsobject empty error gulptraceur errsobject empty error gulptraceur errsobject empty error gulptraceur errsobject empty error gulptraceur errsobject empty finished finished buildtranspilejsprod finished buildjsprod finished finished buildtranspilejsdev finished buildjsdev starting buildjs finished buildjs \u03bcs starting build finished build \u03bcs", "d": "3/2015"}, {"body": "repo please use", "d": "3/2015"}, {"body": "error happening type set", "d": "3/2015"}, {"body": "yeh see latest master well looking", "d": "3/2015"}, {"body": "believe due c list want component propagate state changes outside world custom event ex onvaluechange", "d": "3/2015"}, {"body": "thx information already mechanism angular fire custom event like valuechanged polymer seem call something like thisfire valuechanged found something like", "d": "3/2015"}, {"body": "oh digged around code issues list found one accompish using eventemitter import component decorator template import eventemitter component template export class bindsample constructor eventemitter changed changed function thischanged changed", "d": "3/2015"}, {"body": "due use benchpress test code package analyzer problems parsing prior solution bump version however package angular package di place constraints package analyzer need change first put together prs meantime errors safely ignored", "d": "3/2015"}, {"body": "waiting prs pull changes pub errors go away angulardart x angulardi", "d": "3/2015"}, {"body": "vicb sorry chat dgeni softskills working less harsh turns problem bug jsdoc type parser jsdoc dgeni package uses extract type information tags case got confused line saw word functionwithparamtokens nt realise real people sometimes give types names start word function hence error message look fixing also finding way express errors clearly easier debug future", "d": "3/2015"}, {"body": "great thanks quick reply could find information expected doc format thanks", "d": "3/2015"}, {"body": "turns actually bug catharsis jsdoc parser dgenipackagesjsdoc using upgrading latest version seems solve fix push new version dgenipackages using new catharsis better errors", "d": "3/2015"}, {"body": "since unable run without errors clean checkout fsevents install userschalingitangularnodemodulesdgenipackagesnodemodulesnunjucksnodemoduleschokidarnodemodulesfsevents nodegyp rebuild childprocess customfds option deprecated use stdio instead cxx target releaseobjtargetfsefseventso file included error member named new string return nanerror exception error errmsg tried clean get errors", "d": "3/2015"}, {"body": "actually reverted nt help idea might problem", "d": "3/2015"}, {"body": "errors appear run npm install nt prevent installation completing successfully", "d": "3/2015"}, {"body": "thanks confirming get errors could nt tell sure completed successfully suggest ignore errors", "d": "3/2015"}, {"body": "problem version nunjucks dgenipackages using appears date version fsevents think might benefit upgrading nunjucks dgenipackages version", "d": "3/2015"}, {"body": "pushed new version dgenipackages uses newer version nunjucks clean install angular longer errors", "d": "3/2015"}, {"body": "great thanks pete looking forward trying also pushing update", "d": "3/2015"}, {"body": "automatically update since angular dependent upon compatible version", "d": "3/2015"}, {"body": "confirm fresh ran smoothly thanks", "d": "3/2015"}, {"body": "magic march patrice chalin notifications githubcom wrote confirm fresh npm install ran smoothly thanks reply email directly view github", "d": "3/2015"}, {"body": "petebacondarwin thanks", "d": "3/2015"}, {"body": "going close found discrepancy jspm dependencies installed github pay attention bowerjson dependencies installed npm would nice could solved adding dependencies packagejson nt think required angular project sorry trouble", "d": "3/2015"}, {"body": "mhevery vsavkin another use case something like js component selector mdbutton href bind disabled disabled lifecycle onchange template url buttonhtml export class mdanchor tabindexsetter function whether component disabled disabled boolean constructor propertysetter tabindex tabindexsetter function thistabindexsetter tabindexsetter consolelog thisdisabled invoked change detected onchange disabled anchor tab flow thistabindexsetter thisdisabled want set host element based whether anchor disabled stands static template way ever figuring component disabled resolving would give way would boilerplate would check static value constructor bound value", "d": "3/2015"}, {"body": "would like claim example example notification would good access implementation enough information becomes difficult determine whether would suffice however mentioned example one plan refactor become available ideas might", "d": "3/2015"}, {"body": "already works inprogress presently", "d": "3/2015"}, {"body": "naomiblack implementation children notify child components ready", "d": "3/2015"}, {"body": "dylanb separate issue see", "d": "3/2015"}, {"body": "jelbourn know thought issue parent getting notified children ready part standard implementation fine close issue thats asking otherwise question whether issue closed", "d": "3/2015"}, {"body": "oh commit nt get associated issue new lifecycle event added called fired data binding children completed", "d": "3/2015"}, {"body": "jelbourn excellent see new code", "d": "3/2015"}, {"body": "previously filed biggest unknown position time want position relative element special handling around preventing overlay offscreen api also nt best ideally component inside overlay would responsible closing makes sense encapsulate logic would also need support animation potentially draganddrop", "d": "3/2015"}, {"body": "jelbourn cases want external service close dialog eg pressing esc text box close autocomplete popup component definitely access api though many usecases need considered popups top popups multiple persistent popups relative absolute positioning", "d": "3/2015"}, {"body": "jbdeboer definitely examples include multiple panelcreating components say like etc enforcing one panel open time api like able inject something like component use close return value invoking site component instantiated outside dialog context would null", "d": "3/2015"}, {"body": "also accessibility considerations including trapping focusscreen reader interaction modal dialog exact aria attributes required depend component eg toast different alertdialog terms purpose interaction", "d": "3/2015"}, {"body": "thinking wonder belongs angular proper instead might useful simple component injection system sort like different ui kits implement overlay style systems worry overlay service might generic enough ionic example would code around much like ngrouter vs uirouter", "d": "3/2015"}, {"body": "implementation traceur implementation", "d": "3/2015"}, {"body": "note already possible traceur version using need upgrade traceur solve", "d": "3/2015"}, {"body": "ahhh ran trying get bundling working maybe note correct syntax nt know still applies moving ts might back fix anyway bundle meantime", "d": "3/2015"}, {"body": "join gitterangular get questions answered realtime like slack github repos", "d": "3/2015"}, {"body": "thanks gitter imho replacement discussion list misko opinion cc mhevery", "d": "3/2015"}, {"body": "github discussion list", "d": "3/2015"}, {"body": "naomiblack sounds like another google group think", "d": "3/2015"}, {"body": "dup rkirov", "d": "3/2015"}, {"body": "yes closing dup pending pr waiting rendering rewrite land", "d": "3/2015"}, {"body": "repo probably looking", "d": "3/2015"}, {"body": "actually thinking ahead handle transclusion differant way nt look differant code reason say said ngrepeat see title", "d": "3/2015"}, {"body": "sorry transclude ngrepeat ngclass make think referring btw become", "d": "3/2015"}, {"body": "similar use new pipeline api update bindings example ca nt define components like easier look html user username component selector useritem bind value value async control bindings template directives class useritem value object constructor component selector userlist template directives useritem class userlist value object constructor thisarrayofasyncpromises promisewrapper name patrickjs delay", "d": "3/2015"}, {"body": "thanks take look yes bit feat able remember terms version", "d": "3/2015"}, {"body": "jrgleason make version async like keep mind api nt finalized yet may change", "d": "3/2015"}, {"body": "sure give branch info might least help get grasp things working stuff would nt push forward till august trying get jump start compare need", "d": "3/2015"}, {"body": "jrgleason nt really recommend production helps play around nt want hold state filter taking advantage interval state promise example repo start playing around", "d": "3/2015"}, {"body": "check talk falcorjs basically pipe resolve promise write logic html username falcor case observables observables something like html usermodelgetvalue name async", "d": "3/2015"}, {"body": "keep mind nt moment lives branch vsavkin finalized", "d": "3/2015"}, {"body": "seen talk talk observables coming looking intostarted using observables happy announcement would full support however observable promise promises grasped mainstream developer feel support template stuff comes wrapped promise needs displayed without processing thing might belong template sidenode also explains beginners handle promise", "d": "3/2015"}, {"body": "sanderelias path declared bad idea might due impl details promises handled reducing flexibility service cases wanted get promise instance expression arguments impossible handle promise rejection errors magical argument largely depending personal taste suppose", "d": "3/2015"}, {"body": "pkozlowskiopensource know promises handled background visible declared template magic anymore takes care magical part rejections thought let write full form bit like mhevery foreach directive hmm hard type ngshow may seem strange converts negates js value boolean entirely sure correct pseudo code essential promise directive decorators one decorates fulfilled handles reject feed trough process might end like looks like coherent utterly amagical interface miss something obvious know tend miss elephants rooms", "d": "3/2015"}, {"body": "something declarative something like define overwrites prototype create container container needs know types annotations annotate container overwrite directive even sure possible even something people want since even code pretty simple reason works perhaps way define suite directives least best practice import component template directiveprefixer import button materialdirectivessuite prefix helper suite angular import ngmaterial prefix materialdirectivessuite component template directives prefix ng ngmaterial built helper directiveprefixer export class cmp", "d": "3/2015"}, {"body": "examples nt work practice types objects need created satisfy dart js prefix idea work selectors example exactly prefixed going replacing selector outright", "d": "3/2015"}, {"body": "oh right still thinking selectors element worries probably learn bit dart figure something works totally fine", "d": "3/2015"}, {"body": "", "d": "3/2015"}, {"body": "mhevery version tested think checks already see tests different condition different error looking", "d": "3/2015"}, {"body": "must old version closing", "d": "3/2015"}, {"body": "tell use case planning information", "d": "3/2015"}, {"body": "used programmatically check media queries order use different layout different behavior based window size material library also ability set callback result query changes layout component change used gridlist component presently", "d": "3/2015"}, {"body": "hmm uses", "d": "3/2015"}, {"body": "pkozlowskiopensource designed forof loops nt exist javascript maybe would make sense adopt", "d": "3/2015"}, {"body": "tylereich sure comments note self take historical reasons account ease migration", "d": "3/2015"}, {"body": "personally love closer language people actually writing", "d": "3/2015"}, {"body": "could go either way point us prior art showing foreachof common", "d": "3/2015"}, {"body": "also thinking way would also mean switching implies providing functor iterable objects aka use map filter etc js introduced include arrays objects limited since provide functors example angular pipes filters item class cmp constructor thisitems new websocket wss urlcomrealtime understanding pipeline correctly problem interface angular pipes need know type object always creating adapter pipe adapter rather assuming functor rather assuming interface always may actually case nt much fan pipe observables integration", "d": "3/2015"}, {"body": "sounds like choices nothing switch switch selector supports anyone want vote", "d": "3/2015"}, {"body": "like idea using unfortunately html uses attribute elements might great thing use prefer supporting though", "d": "3/2015"}, {"body": "providing keeping foreach alpha since js community trying convert everyone use sadly perf problems atm js would inline original principles angular using future jshtml today may may need work rework patterns codebase minimal amount work leaving everything way adding experiments decision reached attribute may taken already accounts using template prevent conflicts", "d": "3/2015"}, {"body": "aware workarounds expressed pretty loud clear workarounds bad ideas wider api surface good reason higher learning curve new users cases test maintain real benefit etc lets turn though said piece", "d": "3/2015"}, {"body": "haha nt trying bikeshed see point best names case point username could nt say qualified suggest one replace keeping difference", "d": "3/2015"}, {"body": "far know pullbased mechanism given javascript support async sync execution blocking using aggregate event stream like websocket make sense", "d": "3/2015"}, {"body": "would nice", "d": "3/2015"}, {"body": "argument trying provide concepts trying pushed future javascript framework today jhusain better suited articulate reason behind example using may also wrong assessment sure missing keyword would inline pipe solution also begs question directive vs pipe html await item class cmp constructor thisitems new websocket wss urlcomrealtime", "d": "3/2015"}, {"body": "would love see something like share caitp concern attribute already defined html standard maybe prefix removes also believe place alongside possibly follows reserved keyword javascript meaning flex angular purposes prototype method set map array angular might able internally allow make transition easier", "d": "3/2015"}, {"body": "sounds like people voting existing property issue", "d": "3/2015"}, {"body": "mhevery merit expanding syntax replace ca nt recall internal variable anymore gone way assign index variable well", "d": "3/2015"}, {"body": "nicely aligning new syntax clearly stating demands iterator nt need take special care objects however brings new question destructuring usecase objectentries mymodel substitute something controller produces iterator objectmodel", "d": "3/2015"}, {"body": "order keep helper make sense keep want use old style everything may come maybe even way users define helpers create might asking much deconstructing good point since introduced lot sugar template syntax nt really support sidenote returns array deconstructing type example link object iterator unless use look like", "d": "3/2015"}, {"body": "replacement move existing features settle basics", "d": "3/2015"}, {"body": "proposal fallow microsyntax expansion rules see", "d": "3/2015"}, {"body": "mhevery reread microsyntax see prevent destructuring usecase supporting would make microsyntax line quite nicely", "d": "3/2015"}, {"body": "yeah nt work haha suggesting could probably add deconstructing probably much template microsyntax might good idea consider wrong place", "d": "3/2015"}, {"body": "double checking microsyntax order exporting internal variables would use mean something like nt far fetched deconstructing limited microsyntax detect deconstructing limited element conflicting bind unless ask bind check proceeding assuming probably nt want check elements would mean order support feature deconstructing would happen export", "d": "3/2015"}, {"body": "sure understand goal think iterating maps bad idea nt want support instead pipe convent map iterable nt want special variables instead", "d": "3/2015"}, {"body": "goal trying bring imperative features declarative template world probably defeating purpose writing declaratively template js converts object iterable time invoke get preserve key providing key value object providing pipe assuming create pipe using something like internally html class cmp constructor thisobjectlists mykey myvalue converts via entries thisobjectlists mykey myvalue symboliterator key val key val declarative even deconstructing point deconstructing imperative actually nt fit templates means nt need support template syntax", "d": "3/2015"}, {"body": "item iterable syntax alignment good idea", "d": "3/2015"}, {"body": "writing think confusing loop asynchronous generators implement iterable interface least become asynchronous generator decide", "d": "3/2015"}, {"body": "trying push js towards unified method dealing async iterable websocket ideal solution since example code figured might well get wrong", "d": "3/2015"}, {"body": "problem nt opposed behaves differently", "d": "3/2015"}, {"body": "oh right totally overlooked subtle detail wrong sure support viewport unless allowed", "d": "3/2015"}, {"body": "since voting big", "d": "3/2015"}, {"body": "also", "d": "3/2015"}, {"body": "angular learning question prefix solving problem specific naming collision mentioned saw ngconf reading still nt found reasoning prefixing came googling foreach nt bringing explanations clarified update label", "d": "3/2015"}, {"body": "krimple nope avoid naming collisions sugar top full form see", "d": "3/2015"}, {"body": "announced typescript released switch yes drop traceur still use rttsassert", "d": "3/2015"}, {"body": "mhevery traceur dropped tool handling typescript dart transpiling driving continued development functionality asking would like contribute thanks", "d": "3/2015"}, {"body": "mhevery rttsassert part angular system loader use angular team remove systemjs", "d": "3/2015"}, {"body": "alimd deleted comment violates", "d": "3/2015"}, {"body": "vsavkin mhevery make sense", "d": "3/2015"}, {"body": "makes sense", "d": "3/2015"}, {"body": "yjbanov vicb rkirov comment please iterate", "d": "3/2015"}, {"body": "conceptually like idea much need spec things component injector contain extra field instance stored accessible injection shadowdom note injectors dynamic bindings would need temporary injector build instance stored back injector dom reference private component shadow dom example syntaxwise would prefer introduce new directive type viewport decorator one inject dynamiccomponent component one inject privatecomponent current proposal easy new user forget add template decoration prefer use throw nice descriptive error versus assuming wanted dynamiccomponent likely case", "d": "3/2015"}, {"body": "hello created insertcomponent directive easily insert dynamic components template time changes component referenced compiled corresponding view instantiated inserted hydrated given properties assigned interested look code component see used currently limited way properties set could worked want play git clone b insertcomponent npm install amp amp gulp play ability dynamically choose component display powerful feature could used many use cases router example autocomplete component could passed property component use display suggestion template autocomplete would use insertcomponent directive suggestion think directive insertcomponent integrated think", "d": "3/2015"}, {"body": "implemented", "d": "3/2015"}, {"body": "dylanb component template shadow dom div light dom templates directives apply shadow dom code work way would expect work way work shadow dom might easier reason think complete app directives must declared app template makes sense", "d": "3/2015"}, {"body": "make sure understand want set dom element within component could instead want syntactic sugar transform create code additional consideration property one known dart html go pain faster use available convenience methods correct", "d": "3/2015"}, {"body": "kegluneq correct goal could executed element proxy run ui thread mhevery considering setter look like dart", "d": "3/2015"}, {"body": "think nt think need property name matching", "d": "3/2015"}, {"body": "mhevery correct code generated instead wrote framework automagically transform passed dart js", "d": "3/2015"}, {"body": "actually pb bind properties deps directive closing", "d": "3/2015"}, {"body": "understand correctly avoid via moving di app level import bootstrap import bind import angularfire firebasearray firebaseangularfire import app componentsappapp export function main return bootstrap tabs bind firebase tovalue new firebase components need use constructor token understanding correctly think avoid", "d": "3/2015"}, {"body": "thanks", "d": "3/2015"}, {"body": "repo github easier env since api changes lot", "d": "3/2015"}, {"body": "closing david east proved wrong", "d": "3/2015"}, {"body": "put github soon", "d": "3/2015"}, {"body": "yeah got working backticks", "d": "3/2015"}, {"body": "appears use elementreplacewith apologies closing issue perhaps nt best place post", "d": "3/2015"}, {"body": "hey patrick working getting code repo soon", "d": "3/2015"}, {"body": "looks like specification shadow dom actually handles nicely guys stick spec work beautifully loving everything see angular far keep great work", "d": "3/2015"}, {"body": "lot incorrect uses super tree especially transpiler basically never valid use base class totally safe remove base classes", "d": "3/2015"}, {"body": "thanks maybe original atscript files directly transpiled instead nt really want handedit autogenerated files get", "d": "3/2015"}, {"body": "source files wrong", "d": "3/2015"}, {"body": "last time counted less instances error project week ago knows anyone added news ones anyways cleaned next week hopefully", "d": "3/2015"}, {"body": "ah right see atscript ok someone cleaning nt make pr", "d": "3/2015"}, {"body": "one open blocked fixes traceur need ship first", "d": "3/2015"}, {"body": "great thank follow", "d": "3/2015"}, {"body": "spending time thinking method work longer safe use file file need generate setters single file nt spent much time thinking since passed untyped perhaps would easiest generate gathers setters files registers appropriate setter", "d": "3/2015"}, {"body": "looks somebody fix", "d": "3/2015"}, {"body": "jbdeboer ca nt really write browser see lowercasing html case sensitive possible soon fixed said binding property directly would mean overriding css classes set example attribute going class binding described short usecase covered soon fixed", "d": "3/2015"}, {"body": "ok possible bind classname nt think binding classlist work mutable structure problem binding though override class names set using attribute something aware careful mhevery shell come back idea morelike behaviour people could write could evaluate object sure supporting strings arrays want", "d": "3/2015"}, {"body": "pkozlowskiopensource yes bale work make happen", "d": "3/2015"}, {"body": "update also support per mhevery", "d": "3/2015"}, {"body": "one next list", "d": "3/2015"}, {"body": "provide concrete use case current thinking provide special directive would run ui thread would full access dom components need dom access seen", "d": "3/2015"}, {"body": "seeing filed issue seen looking provided list usecases offline two tackle setting attributes component element actual element shadow root integrating component able invoke external renderer fill shadow root", "d": "3/2015"}, {"body": "also way us configure templateresolver urlresolver systemjs mapspathsbaseurl want way explicitly configure independently module system", "d": "3/2015"}, {"body": "background support relative paths makes component reusable need aware urls also easier handle serverside compilation compiler works file paths rather urls think yes resolve like anchor tag would resolve path currentdomain absolute path probably best thing nobody would expect absolute url resolve currenturl absolute path otoh application served would prefix urls need thinking discussion selecting solution", "d": "3/2015"}, {"body": "planned upcoming milestone places use angular change urls support angular right", "d": "3/2015"}, {"body": "matanlurey links code docs related", "d": "3/2015"}, {"body": "best example give template cache generatortransformer works", "d": "3/2015"}, {"body": "added directive named naively transpile dart barfs keyword added library names would better keep list forbidden library names append", "d": "3/2015"}, {"body": "rkirov sounds great could ponder changing name library", "d": "3/2015"}, {"body": "pkozlowskiopensource prioritize close milestone thanks advance", "d": "3/2015"}, {"body": "mhevery sure submit pr tomorrow", "d": "3/2015"}, {"body": "mhevery rkirov moment changing compiler wondering want see dashcased cammelcased property names compiler pipeline words either normalise property name either step pretty early next steps need aware mapping ex selector matching would small simple change want additional mappings future ex stripping prefixes like might want normalized property names inside compiler thoughts dealing compiler pipeline original property names vs normalized names", "d": "3/2015"}, {"body": "well sounds nice able safely assume always working camelcase check dashcase camelcase anywhere normalizing asap nt really make sense convert dashcase camelcase back dashcase later certain use cases think best approach leave property names dashcase long still needed selectorsmatchingetc normalize camelcase tue mar pawel kozlowski notifications githubcom wrote mhevery rkirov moment changing compiler wondering want see dashcased cammelcased property names compiler pipeline words either normalise property name either propertybindingparser step pretty early next steps need aware mapping ex directiveparser selector matching elementbinderbuilder would small simple change want additional mappings future ex stripping data prefixes like might want normalized property names inside compiler thoughts dealing compiler pipeline original property names vs normalized names reply email directly view github", "d": "3/2015"}, {"body": "think convert camel case soon read sounds like assume everything camelcase apply transform reading annotation", "d": "3/2015"}, {"body": "mhevery spending time kneedeep compiler code need discuss design rules lowercased becomes problematic want camelcase property attribute names early access camelcased version thing give cssselector let take example steps would gt readonlyreadonly sudden directives directive bindings might start matching attribute intention match see ways moving forward make casesensitive convert back forth camel dash case ugly stick initial proposal personally think reasonable question needs caseinsensitive", "d": "3/2015"}, {"body": "agree configurable work better explain concerns trust angular solely controls dom app ca nt break dom safe reuse", "d": "3/2015"}, {"body": "course even workaround always trying use native shadow dom unimplemented another sidebug either work around lack shadow else use polymerplatform similar polyfill older browsers demos", "d": "3/2015"}, {"body": "supporting shadow dom problematic point correctly implemented anywhere makes impossible support browsers want best case scenario would deferring future version", "d": "3/2015"}, {"body": "hi tried play problem think failing creating symlinks check os later example githubangulartoolsbuildlinknodemodulesjs trycatch statement users get info starting buildlinknodemodulesjscjs creating link distjscjsnodemodulesbenchmarks benchmarks create symlink linkdir distjscjsnodemodulesbenchmarks sourcedir benchmarks gulpdebug output error eperm operation permitted githubangulardistjscjsnodemodulesbenchmarks", "d": "3/2015"}, {"body": "build problems also error different win gulpfilejs pacific standard time c progsjavascriptangularjssrcangular gulp buildjsdev dart sdk available dart tasks skipped assertionerror path must string modulerequire require requirefn c progsjavascriptangularjssrcangularnodemodulesgulplo objectdefinepropertyget c progsjavascriptangularjssrcangularnode object c progsjavascriptangularjssrcangulargulpfilejs modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire line src nodemoduleszonejslongstacktracezonejs mimetype textjavascript copy true looks like string error fri thought might due files nt become nodemodules expected happen amp waited alas difference anyone ideas", "d": "3/2015"}, {"body": "buberdds similar problem windows solved running command prompt administrator launching requires elevated privileges windows platform would agree would nice trap error notify windows users run administrator privileges jbdeboer errors similar ones seeing windows suspect one gulp tasks failed error might able research error buberdds one task fails looks like rest gulp tasks pipeline begin fail pattern posted well instead system halting since looks like unixlike system could try", "d": "3/2015"}, {"body": "think error dart formatter using dart dev able solve", "d": "3/2015"}, {"body": "buberdds yes sorry use linux mac dev environment nt know whether windows broken jbdeboer get error points something like wrong snapshot clean global pub cache ie background using format dart code need install globally however update dart pub cache might outdated get weird error", "d": "3/2015"}, {"body": "tbosch fixed underlying issue environment point issue error gulp gives unhelpful good error message would tell build failed also failed might fix issue", "d": "3/2015"}, {"body": "totally agree would add clear documentation arguments public method takes obviously atscript handling types think documentation well mon mar james deboer notifications githubcom wrote angular project write documentation spec implement throughout codebase would propose minimum exported classes documentation comment describing class public methods exported classes also documentation comment reply email directly view github", "d": "3/2015"}, {"body": "ladyborg understanding types comments eg something like dartdoc", "d": "3/2015"}, {"body": "working progress seen currently ongoing moving later milestone", "d": "3/2015"}, {"body": "bulk work needed scope though mar mi\u0161ko hevery notifications githubcom wrote working progress seen currently ongoing moving later milestone reply email directly view github", "d": "3/2015"}, {"body": "actually guess someone went afaict", "d": "3/2015"}, {"body": "wrong guess nt completely dealt", "d": "3/2015"}, {"body": "caitp current version traceur enforces super calls must present derived class amp first statement strict guess issue closed", "d": "3/2015"}, {"body": "ca nt plenty broken code tree see", "d": "3/2015"}, {"body": "landing fix blocked shipping still working additional fixes needed upgrade", "d": "3/2015"}, {"body": "right check currently active true false transpiler enforce class extends class", "d": "3/2015"}, {"body": "recent changes dom facade longer relevant original issue using annotations dart still exists migration typescript nt think makes much sense keep issue open rkirov recall properly conversation ngconf planning open separate issue dart transpiler moved separate repo anyway nt see point keeping issue open current form closing", "d": "3/2015"}, {"body": "fixed", "d": "3/2015"}, {"body": "optional asi seems feasible using semicolons statements make sense problem return could solved using expression dangerous returns want example via traceur javascript function swag return asi asi function swag return asi", "d": "3/2015"}, {"body": "pascalprecht debugged code could nt reproduce bug looked template found closing element ist wrong missing took time realize hey learned directive", "d": "3/2015"}, {"body": "sekibomazic sorry nt time look stuff yet looks like nailed thank much", "d": "3/2015"}, {"body": "seems like foreach works expected", "d": "3/2015"}, {"body": "vicb right thought issue already closed hey would mind taking look latest snapshot code compiles get error runtime due annotations dunno", "d": "3/2015"}, {"body": "please promote possible", "d": "3/2015"}, {"body": "reasons making default behavior similar angular", "d": "3/2015"}, {"body": "expressive hints reader may lazy loaded may example would say probably async loaded user must", "d": "3/2015"}, {"body": "feels kind weird surprising language extensions within binding expression syntax might also need thinking nt see useful angular defaults gracefully handling null dereferencing expression developer nt care whether something loaded lazy times people care something needs shown place pending data still handled", "d": "3/2015"}, {"body": "yjbanov vsavkin please comment convinced either way", "d": "3/2015"}, {"body": "yeh might used angular ways things much find forgiving evaluation ng expressions quite handy sure like idea forced mark optional parts expressions things obvious laborious well", "d": "3/2015"}, {"body": "think explicitness welcome also actually feel forgiving nature angular bindings useful guess question elvis operator added binding still forgiving accessing prop cause guessing handling might add overhead", "d": "3/2015"}, {"body": "favor safe navigation operator aka elvis operator exists c swift groovy others likely added dart nt think going confusion around also allow us retain js dart semantics expressions without operator finally result smaller efficient change detector code expressions become change detector edit updated post correct references prior art", "d": "3/2015"}, {"body": "yjbanov different nullcoalesce operator though nullcoalesce operator c swift works like already accomplished javascript operator question nullsafe dereference operator would work like righthand expression would evaulate null null instead throwing error searching groovy language found supports operator case scenario explicitly using nullsafe dereference would advantageous making dereferences nullsafe default", "d": "3/2015"}, {"body": "bad meant safe navigation operator aka elvis edit original post point still stands", "d": "3/2015"}, {"body": "advantages operator syntactic extension semantic deviation main language js dart especially dart getting operator future also consistent language results efficient change detector code code size speed serves early warning system developers know handling missing data immediately tells reader template code missing data possible realize disadvantages though different angularjsdart existing developers need adjust requires one extra character per property access believe advantages outweigh disadvantages think include", "d": "3/2015"}, {"body": "see additional disadvantages operator standard javascript would confusing javascript developers would confused saw template already introducing lot new syntax constructs adding increases mental cost getting started deviates template systems handle nulls polymer handlebars also would predict majority developers would want nullsafe behavior default vs throwing error perhaps could kind applicationlevel configuration", "d": "3/2015"}, {"body": "tend side jelbourn angular excellent job making right thing time using felt natural enjoyable start feel like introducing makes framework right thing times makes internal implementation easier better expense developer ergonomics totally agree nullsafe behaviour default creates small sharp edge people might got hurt time time things failing silently though", "d": "3/2015"}, {"body": "jelbourn three points along lines different people used adjust see big problem pretty easy imo get used typing tiny portion template code anyway also saying developers would want nullsafe behavior default thing developers would want nullsafe two ways dereference things neither default discourage writing nullsafe expressions explicit syntax help readers code help tools pkozlowskiopensource hurting developer ergonomics think improves explicit expressive dev mode angular could point exact location expression caused typeerrornosuchmethoderror easy either change deal missing data", "d": "3/2015"}, {"body": "hurting developer ergonomics need think parts optional need type characters proper places coming angular world see unnecessary burden compared listed benefits maybe spent much time writing code objective", "d": "3/2015"}, {"body": "basically either hypothetical performance improvements simplifed code making upgrade path easier would change detector code fastsmall every field expression optional would better easier upgrade path variation evidence early warnings developers get actually useful use mostly oops forgot add extra character field expression somewhere project nt sure even project dependency would make early errors useful lack errors referencing properties undefined values expressions something people actually complain perf improvements hypothetical actual code actually simpler somewhere along way distinguish optional fields vs nonoptional probably means extra ast nodes code visited optional field nodes needs extra logic handle optionalness anyways opportunity making code smaller simpler", "d": "3/2015"}, {"body": "pkozlowskiopensource nt think use everywhere like used everywhere angular already admitted extra character disadvantage however explicitness early warnings advantages terms developer ergonomics web app developers spend lot time trying figure typing code seems like good trade caitp two aspects upgrade mental migration angular concepts new angular concepts discussed detail second aspect actual code migration pretty straightforward replace every sure possible write script automatically given vast differences angular angular probably going drop sea changes make", "d": "3/2015"}, {"body": "yjbanov course thinking part important time consuming typing proposing use everywhere like used would make expressions look really ugly less readable personal opinion would still add selectively comes thinking part maybe applevel global setting way go anyway guess got opinion arguments clear sure could add anything apparently people disagree majority developers want speak", "d": "3/2015"}, {"body": "unfortunately nt think global setting work want able consume thirdparty components without breaking would also kill explicitness proposed syntax something decide", "d": "3/2015"}, {"body": "oh ca nt switch totally right", "d": "3/2015"}, {"body": "way option template annotation optin would allow template authors decide want error catchingoptimized change detection would make migration easier ability upgrade templates piecebypiece thirdparty would fine since componenttemplate tells angular wants cd code nt get complicated since already option null checks option one could complain annoying optin template argue probably annoying stop think every binding also complicate things templates initially something resolving right away binding decide lazy load server code iteration", "d": "3/2015"}, {"body": "almost impact speed reason read field expensive part load register actual cost checking null data register essentially nothing single cpu instruction modern cpus branch prediction cheap would say speed argument foror anything certainly template level switch component chose semantics think template switch make explicit make people happy", "d": "3/2015"}, {"body": "think template switch worse operator aim readability means avoid nonlocally defined semantics reading someone else code nt check options know expressions nullsafe especially code reviews review tools collapse full file contents think options fully defined nullsafe ie status quo still worried code size nullsafe expression generate something like maybe better way js take advantage truthiness make expression shorter would still longer", "d": "3/2015"}, {"body": "agree pkozlowskiopensource forgiving nature angular expressions worked well kept note adding would imply also added", "d": "3/2015"}, {"body": "would fallow proposal", "d": "3/2015"}, {"body": "team bitten refactorings default behavior renamed property get warning rendering template would love see default change way opt back people really need behavior", "d": "3/2015"}, {"body": "ewinslow great point tools able produce static warnings nullsafe strict property access accessing typed objects however pojos maps would still issue", "d": "3/2015"}, {"body": "seems typechecking template linters none exists know yet would easier time behavior think would like ide gulpgrunt linters could plug typescript compiler service validate ie property property would impossible nullawareoperator would easier implement tool without explicit nullawareoperator", "d": "3/2015"}, {"body": "martinmcwhorter ide support general toolability one goals angular also making sure angular compiler works outside web browser means ides would able reuse code angular uses interpret expressions", "d": "3/2015"}, {"body": "yjbanov sounds good bit topic moment right hole using statically typed datamessage contracts templates typescript breaking changes easily detected ci unfortunately falls types expressed templates ability tooling compile expressions validate ts compiler service would fill large gap", "d": "3/2015"}, {"body": "longer relevant recent changes compiler", "d": "3/2015"}, {"body": "additionally dev mode property checks also fail inactive web components check nt see easy solution one suggestion", "d": "3/2015"}, {"body": "rkirov ok looked one bit slightly worried assumption however directive element bound property bind directive understand correctly saying case like template like would bind titledecor property div title property right words directives would eager consuming property bindings sure feel right sounds bit arbitrary especially consider web components top behaviour system would depend presence absence directives witch could confusing surprising times rkirov could discuss one got moment", "d": "3/2015"}, {"body": "problem skipping check altogether dart gets upset setting nonexisting property ex fail runtime caught class divelement instance setter someprop might good thing though depending one perception", "d": "3/2015"}, {"body": "see concern angular components taking binding however consider alternative always binding dom element angular component time developer uses bindings propagate data directives extra work sync dom unnecessary work without cost especially environments like webworkers dom operations brokered across channel dart error inevitable objects sealed dart user would expecting expando properties dom elements begin works magically change small test dart polymer demo indeed polymer runs htmlelement instance gets replaced proper custom element instance use proper setters see another reason bind one object either dom element angular component imho binding one object right thing needs carefully documented explained users", "d": "3/2015"}, {"body": "thinking would like suggest possible solution list elementnames attributes overrides algorithm check check exeception list throw error", "d": "3/2015"}, {"body": "mhevery given component property binding compiler run nt waked web component exception list responsible maintaining exception list", "d": "3/2015"}, {"body": "also using rather waking general problem seems like need delay checking property import exception list something may else fails throwing crazy ideas perhaps disable check", "d": "3/2015"}, {"body": "pkozlowskiopensource disable check figure proper way handle", "d": "3/2015"}, {"body": "fixed via mlaval add something like commit message issue would get closed automatically commit lands", "d": "3/2015"}, {"body": "nodejs dom adapter part could continue adapter used experiments based reason pushing please", "d": "3/2015"}, {"body": "familiar neither downloads hosted github hosted custom server seems", "d": "3/2015"}, {"body": "closed via", "d": "3/2015"}, {"body": "seems resolved", "d": "3/2015"}, {"body": "also fixes bug transpiled invalid occurrences syntax nowhere else another fix change code read", "d": "3/2015"}, {"body": "would also good cache pub dependencies travis build sometimes flakes download pub package", "d": "3/2015"}, {"body": "hi ngteam tried solve issue came following solution since sure good enough nt made pr yet would nice someone could look give feedback ok send pr thanks", "d": "3/2015"}, {"body": "sekibomazic would much simpler discuss pr hesitate send nt afraid wrong learn probably problematic would work dart target would work actually need special case following code might help", "d": "3/2015"}, {"body": "quick look code looks like implementation would require changes compiler internals mhevery something like annotation retrieved want able binding also supported", "d": "3/2015"}, {"body": "vicb thanks feedback tried another test worked still thoroughly tested course could also give hint look dart code please bear dart newbe", "d": "3/2015"}, {"body": "code transpiled either js dart however make sure code work run tests version amp check see execute dart js specific code according target language ie langdart", "d": "3/2015"}, {"body": "vicb actually u wondering motivation behind issue mean directives got selector match occurrences templates", "d": "3/2015"}, {"body": "vicb really seems bigger change compiler needed dart test failed well least learned angular compiler", "d": "3/2015"}, {"body": "sekibomazic updated issue reasoning", "d": "3/2015"}, {"body": "mhevery thanks", "d": "3/2015"}, {"body": "syntax needs slightly different support dart static analysis eg", "d": "3/2015"}, {"body": "pkozlowskiopensource time take one", "d": "3/2015"}, {"body": "pkozlowskiopensource please add list", "d": "3/2015"}, {"body": "moved text closing issue duplicate", "d": "3/2015"}, {"body": "solved", "d": "3/2015"}, {"body": "jelbourn resolved believe", "d": "3/2015"}, {"body": "closed", "d": "3/2015"}, {"body": "moved", "d": "3/2015"}, {"body": "moved", "d": "3/2015"}, {"body": "ref", "d": "3/2015"}, {"body": "moved", "d": "3/2015"}, {"body": "moved", "d": "3/2015"}, {"body": "moved", "d": "3/2015"}, {"body": "moved", "d": "3/2015"}, {"body": "moved", "d": "3/2015"}, {"body": "moved", "d": "3/2015"}, {"body": "closing since duplicate", "d": "3/2015"}, {"body": "thanks doable good enough still need map", "d": "3/2015"}, {"body": "mlaval think good enough move forward might another issue future much boilerplate involved", "d": "3/2015"}, {"body": "true lot boilerplate future happens etc could add sugar option directive configuration sure make annotation complex mhevery thoughts", "d": "3/2015"}, {"body": "agree absolutely need way cut boilerplate sheer number things component needs inject example material gridlist tile would something like", "d": "3/2015"}, {"body": "ca nt inject", "d": "3/2015"}, {"body": "filed could closing", "d": "3/2015"}, {"body": "discussion vsavkin intent access static attributes template fact already doable injecting going replaced soon raises questions mhevery need static yes appropriate name annotation", "d": "3/2015"}, {"body": "mlaval think async resolved compile time hence faster also makes clear change binding proposed syntax know always string attribute found computed compilation phase part", "d": "3/2015"}, {"body": "closed via amp", "d": "3/2015"}, {"body": "closing favor", "d": "3/2015"}, {"body": "considered release blocker dart developers rely autogenerated docs", "d": "3/2015"}, {"body": "high priority us something couple weeks", "d": "3/2015"}, {"body": "", "d": "3/2015"}, {"body": "mhevery could probably land switch ts way introspect type anonymous fn parameters however started work could please give feedback following discuss next sync js describe describe gt beforeeach would executed beforeeachbindings imagine could inject classes cb gotcha nested beforeeachbindings create injector beforeeachbindings executed beforeeach c aclass async asynccompleter gt injectabe imo easier define bindings function rather bind available describe function return list bindings use syntax nontest code beforeeachbindings gt aclass bind router toclass mockrouter possible inject callback asynccompleter allow completing async tests like done jasmine class aclass router router async asynccompleter gt routerroute gt asyncdone describe gt executed beforeeach even parent describe want able inject beforeeach callbacks beforeeachbindings gt bclass", "d": "3/2015"}, {"body": "think close one support role aria attributes master reminds done refactoring would remove special casing going tackle part", "d": "3/2015"}, {"body": "davideast comment planning separate repo part angular would argue part angular run end end tests verify app works keep sync changes true send pr think", "d": "3/2015"}, {"body": "resolved", "d": "3/2015"}, {"body": "misguided issue", "d": "3/2015"}, {"body": "moved", "d": "3/2015"}, {"body": "moving back repo decided job linter transpiler", "d": "3/2015"}, {"body": "moved", "d": "3/2015"}, {"body": "deferring might need", "d": "3/2015"}, {"body": "value since proper import statements separate debate prefix attribute html given component directive registry think would unlikely would collision think better solution would allow specifying prefix directive import", "d": "3/2015"}, {"body": "eta implemented", "d": "3/2015"}, {"body": "closing since covers missing use case rest already", "d": "3/2015"}, {"body": "chatting tbosch agreed proposal outlined angular code anything returned return type lack type assumed matter style course specifying explicitly typescript ok let continue conversation repo closing one", "d": "3/2015"}, {"body": "fixed analyzer running part ci build fails builds unused imports among things", "d": "3/2015"}, {"body": "decided keep test drivers js create custom implementations google internal", "d": "3/2015"}, {"body": "done see", "d": "3/2015"}, {"body": "done become obsolete splitting views", "d": "3/2015"}, {"body": "tbosch sorry nt understood di published install di npm install package name", "d": "3/2015"}, {"body": "djindjic afaik ca nt install di individually point get part module", "d": "3/2015"}, {"body": "forcing gc maybe get somehow", "d": "3/2015"}, {"body": "findings far captured also see sample code", "d": "3/2015"}, {"body": "reading thread favorite suggestions period notation attributes js objectlike expressions complex directives like ngrepeat namespacing prefixing attributes enclosure string interpolation based thinking template property binding repeating event binding etc multiline lovers compatible", "d": "3/2015"}, {"body": "know sensitive topic lot gotten lot good feedback discussion incorporated thinking think thread served purpose retired please watch presentation topic tries answer many questions", "d": "3/2015"}, {"body": "copied duplicate issue idea write assertions components applied dev mode stripped production mode similar type assertions general example say component either given name attribute component author could write assertion gives component user meaningful error development mode add extra weight final output prior art closure compiler implements concept closure library googasserts module notes similar approach could also applied logging", "d": "3/2015"}, {"body": "vicb would equivalent dart code super args probably wo nt work type checked", "d": "3/2015"}, {"body": "js class parent constructor foo foo class child extends parent case dart generate think always access parent class ctor signature ts case traceur", "d": "3/2015"}, {"body": "issue moved", "d": "3/2015"}]