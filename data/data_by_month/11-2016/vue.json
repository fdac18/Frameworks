[{"title": "dynamic image url possible looping object", "body": "vuejs version reproduction link see fiddle expected use system users picture automatically displayed restful format vuejs displaying users picture tedious would rather try hacky work around actually happening following error thrown suggestions would helpful thanks", "num": "4351", "d": "11/2016"}, {"title": "routerview error", "body": "use routerlink anylink tags laravel blade import vuerouter vuerouter showing error uncaught typeerror righthand side instanceof callable mt ne se routerlinktinitprops routerlinktinitstate routerlinktttinit new routerlink eval n", "num": "4350", "d": "11/2016"}, {"title": "font tags stripped vue", "body": "vuejs version reproduction link expected would expect tags left alone vue intentionally stripping invalid html tags expect stripped instead actually happening tags appear stripped hidden although deprecated tag deprecated tags like nt stripped systems sufficiently behind times looking xdebug still render html contains tags digging little remove font tags left alone", "num": "4348", "d": "11/2016"}, {"title": "ctrl modifier enter key working", "body": "vuejs version looks like ctrl modifier enter key working works fires enter key matter ctrl pressed expected expected trigger clear ctrl key pressed hit enter actually happening clear triggered every time enter hit wether ctrl pressed", "num": "4347", "d": "11/2016"}, {"title": "template compilation error style attribute url", "body": "ran issue yesterday working page includes images css shapeoutside flowing text around based shape image include url shape image inline style attribute work stopped working upgraded vue latest earliest reproducible version working html compiled url style attribute string gets broken instead full url end vuejs version reproduction link steps reproduce go jsbin ignore cors error failing load shape image expected inspect html dev console full seen specified html actually happening instead become", "num": "4346", "d": "11/2016"}, {"title": "godawful error messages", "body": "slumps code produces unkown take got two errors originate unkown exceptional sight errors quite possibly nt ever link source stack trace eg commonjs akryum vuecomponents took time time actually improve something breaks actually points line file working point step shaky grounds guessing way away copy paste", "num": "4345", "d": "11/2016"}, {"title": "error parsing regular expression", "body": "error parsing file wireframesnodemodulesvuedistvuecommonjs line invalid regular expression get parse error seem offending lines var defaulttagre n g var regexescapere g var buildregex cached function delimiters var open delimiters replace regexescapere amp var close delimiters replace regexescapere amp return new regexp open n close g", "num": "4344", "d": "11/2016"}, {"title": "uncaught typeerror read property readystate undefined", "body": "randomly getting error uncaught typeerror read property readystate undefined apparent reason updating project v idea causing error", "num": "4343", "d": "11/2016"}, {"title": "get vue object jquery callback function", "body": "wrote code like however want use vm emit onsuccess function get vue object jquery callback function code wrote mounted", "num": "4342", "d": "11/2016"}, {"title": "webpack vue jinja", "body": "use webpackvue use jinja", "num": "4341", "d": "11/2016"}, {"title": "plans native support ideas leverage vuejs native library", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4340", "d": "11/2016"}, {"title": "js transition hooks bug keep alive component", "body": "hi everyone upgrading website vue got issue one questionfeature request website im trying upgrade transitions works follow component transition reacts next route router using keep alive directive unnecessary rendering ommitted trouble vue vuejs version reproduction link steps reproduce navigate router links expected expecting get results vue components animated using js hooks keep alive render properly maybe something wrong vue version actually happening components animated using js hooks animated side note possible use transitionmode example vue easy adding directive routerview thanks", "num": "4339", "d": "11/2016"}, {"title": "unable build vue windows using npmyarn run build", "body": "versions vuejs nodejs npm windows steps reproduce clone repo github npm install npm run build clone repo github yarn install yarn run build expected expected behavior versions vue build dist folder actually happening error could load c developmentgithubvuesrccoreindex imported c developmentgithubvuesrcentrieswebruntimejs enoent file directory open c developmentgithubvuesrccoreindex c processtickcallback modulerunmain run startup workaround appears imports use aliases defined buildaliasjs file work extension js used js added imports build succeeds", "num": "4338", "d": "11/2016"}, {"title": "dynamic template probs class binding working", "body": "try make dynamic template assign class condition base template template call vuejs increase columns get expected props value template variable ex try assign class present text also tried native class cant pass pros blockclass template possible way handle issue using laravel urgent please", "num": "4336", "d": "11/2016"}, {"title": "event handlers capturing mode wo nt removed", "body": "vuejs version reproduction link code pen see handler registered without removed expected second h function ternary statement returns new dom tree remove click event handler registered first h function actually happening click event handler removed bug fixed according mdn removal capturing listener affect noncapturing version listener vice versa bug fixed commit pr please review tell split another pr", "num": "4335", "d": "11/2016"}, {"title": "vmodeltrim bug report", "body": "vuejs version reproduction link steps reproduce expected actually happening sorry english good first bug report ok trim modifier vmode desktop browser ok mobile browser trim modifier remove space sentence mobile browser tested safari chrome mobile browser", "num": "4334", "d": "11/2016"}, {"title": "feature request precomputeprecache computed bindings beforehand determine need render", "body": "sure computed property caching works seems caching done fly render logic cycle render sort like precompute thinking since collect binding dependencies along first render anyway trace enduser developer side determine first properties within computed property methods invalidated needs recalculated already done vuejs next state change render called reexecute precache invalidated computed properties final values determine anything changed computed property changed dependency exists however render skipped entirely one might say howeve r approach includes chance wastefully precomputing computed properties situations might needed particular situation exist different ifelse block within render method precomputing outside ifelse blocks always required part initial scan render logic stated documentation one wishes ensure made invalidation dependencies regardless ifelse state situation short render firsttime boolean parameter flag firsttime renders require reflection property invalidation dependencies vuejs thus case already precomputation invalidated properties render since bound used anyway anyway precomputed computed properties render precondition render would allow better integration replace immutable state atom approaches shown example since replacing root state atom trigger render situations precomputed properties leaf values remain unchanged dependencies invalidated except computed properties also behind scenes means computed properties leaf values always automatically assumed cached default render logic cycle", "num": "4333", "d": "11/2016"}, {"title": "possible emit event component inside slot", "body": "vuejs version reproduction link events emitted component inside slot received emit testevent working parenttest works html methods test alert test ok vuecomponent child template template new vue el app", "num": "4332", "d": "11/2016"}, {"title": "please document using vueserverrenderer vuerouter together", "body": "hey currently really struggling get vueserverrenderer vuerouter work together using basically exactly code minus vuex stuff unable debug nt understand stuff happening code example better nothing nt giving enough information figure going wrong even code provide people help debug nobody currently gitter seems know works either documentation would fantastic figure someone else writes write given stuck right seems unlikely", "num": "4331", "d": "11/2016"}, {"title": "text input binding work correctly korean", "body": "vuejs version reproduction link steps reproduce type korean input ex expected shown input updated data actually happening shown input updated data see logs event show expected result event enough korean react works alright", "num": "4330", "d": "11/2016"}, {"title": "warning properties components props", "body": "vuejs version reproduction link steps reproduce one component similar vue warning expected eliminate vue warning actually happening think prop specified validation requirements respond warning warning occurred migration solve props avoid mutating prop directly since value overwritten whenever parent component rerenders", "num": "4329", "d": "11/2016"}, {"title": "grammar mistake documentation", "body": "okay use conjunction really appropriate instead", "num": "4327", "d": "11/2016"}, {"title": "virtual scroll list feature", "body": "mentioned might work virtual scroll list renders items viewport future wondering could logged feature request would really great solution many use cases thank great work makes vuejs", "num": "4324", "d": "11/2016"}, {"title": "", "body": "vuejs version steps reproduce see link click button sort list result expect consoled vue warn may infinite update loop component render function anyone tell wrong use customized filter correctly", "num": "4323", "d": "11/2016"}, {"title": "please extract vue core smaller modules flexibility", "body": "wondering plans extract vue core individual modules see currently two platforms specific vdom implementation etc mind would make sense modules could includedsubstituted needed perhaps sensible idea vue would submit featuredesign suggestions roadmap thanks", "num": "4321", "d": "11/2016"}, {"title": "suggestion reenable path support vueset", "body": "ability specify path vueset removed allowing object keys passed right running simply adds key object value particular reason functionality removed ca nt find anything documenting change guide api releasemigration notes main usecase form allows user update resource case page user change theme settings using vuex retrieving page data api storing field update form changed using addupdate property object send update request meaning send updated fields though read better practice define reactive data initially update later nt possible case since nt want send empty fields update endpoint seems strange define nested data initially within component ca nt add later shown", "num": "4320", "d": "11/2016"}, {"title": "firefox work", "body": "", "num": "4319", "d": "11/2016"}, {"title": "vue single slot rendering problem", "body": "env node vue vuetemplatecompiler vueloader reproduction link steps reproduce see repository expected expected show actually happening actually shows others related", "num": "4318", "d": "11/2016"}, {"title": "elseblock vuetemplatecompiler", "body": "vuejs version vuetemplatecompiler code result elseblock elseblock expected always able compile elseblock actually happening nt know", "num": "4317", "d": "11/2016"}, {"title": "npm run dev error", "body": "follow steps npm install global vuecli cd myproject npm install npm run dev last windowsnt info worked ends ok verbose cli c program filesnodejsnodeexe verbose cli c usersadminappdataroamingnpmnodemodulesnpmbinnpmclijs verbose cli run verbose cli dev info using npm info using node verbose runscript predev dev postdev info lifecycle myproject myproject silly lifecycle myproject script predev continuing info lifecycle myproject myproject verbose lifecycle myproject unsafeperm lifecycle true verbose lifecycle myproject path c npmbinnodegypbin mytestmyprojectnodemodulesbin c programdataoraclejavajavapath c c windows c c c program files common filesmicrosoft sharedtigerkin c program files bitvise ssh client c program filesnodejs c program filesgitcmd c program files microsoft vs codebin c usersadminappdataroamingnpm verbose lifecycle myproject cwd mytestmyproject silly lifecycle myproject args c node builddevserverjs silly lifecycle myproject returned code signal null info lifecycle myproject failed exec dev script verbose stack error myproject dev verbose stack exit status verbose stack eventemitter c verbose stack emittwo verbose stack eventemitteremit verbose stack childprocess c verbose stack emittwo verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid myproject verbose cwd mytestmyproject error windowsnt error argv c program filesnodejsnodeexe c usersadminappdataroamingnpmnodemodulesnpmbinnpmclijs run dev error node error npm error code elifecycle error myproject dev error exit status error failed myproject dev script node builddevserverjs error make sure latest version nodejs npm installed error likely problem myproject package error npm error tell author fails system error node builddevserverjs error get information open issue project error npm bugs myproject error nt available get info via error npm owner ls myproject error likely additional logging output verbose exit true", "num": "4316", "d": "11/2016"}, {"title": "rerendering functional component renders component slot", "body": "vuejs version reproduction link steps reproduce press run wait second expected see output actually happening shows second indicating component seeing slots", "num": "4315", "d": "11/2016"}, {"title": "documentation click demo button", "body": "picture working padding comes button makes clickable think css look like tested chrome could also mention class makes every demo visible unused scroll simply replacing", "num": "4314", "d": "11/2016"}, {"title": "watch working object prop working string prop", "body": "vuejs version reproduction link steps reproduce expected actually happening watch working object prop working string prop appvue hello app import firstcomponent componentfirstcomponentvue import secondcomponent componentsecondcomponentvue export default data return msg hello vue article components firstcomponent secondcomponent beforemount function headers emulatejson true function response thisarticle responsedatasubjects function response consolelog response firstcomponentvue component written author name article articleobj export default props name article data function return author thisname articleobj thisarticle mounted function watch article function consolelog jsonstringify thisarticle working name function consolelog thisname working author function consolelog lili", "num": "4313", "d": "11/2016"}, {"title": "vue single slot rendering problem", "body": "env vue vuetemplatecompiler vueloader reproduction link seems related vueloader bit difficult reproduce merely jsfiddle describe steps steps reproduce create file called export default snippet html code hello lalala lilili new vue el container components vbox require boxvue expected expected show actually happening actually shows others created related issue though issue proven mistake still nt gotten problem solved ps use vue problem exist", "num": "4312", "d": "11/2016"}, {"title": "improvement allow usage event modifiers functional component events", "body": "stop event propagation functional components include dirty piece code form would really neat could use standard vue event modifiers known standard templates perhaps form keep syntax similar existing syntax", "num": "4311", "d": "11/2016"}, {"title": "add controls attribute video tag programmatically", "body": "vuejs version reproduction link steps reproduce component vue videoresponsivevideo controls source src src type type export default props src type string default type type string default controls type boolean default false computed videocontrols return thiscontrols controls expected add controls attribute video tag actually happening props controls true controlscontrols want controls", "num": "4310", "d": "11/2016"}, {"title": "html codes render inconsistently", "body": "vuejs version reproduction link steps reproduce add template computed property data set renders differently expected render emoticon actually happening string renders emoticon variable renders text", "num": "4309", "d": "11/2016"}, {"title": "vue single slot rendering problem", "body": "vuejs version reproduction link single slot correctly rendered version children elements within vbox component rendered using vue correct version children elements within vbox component rendered though vue nt meaning vue yet steps reproduce see jsfiddle examples expected according single slot feature available vue actually happening seems working properly", "num": "4308", "d": "11/2016"}, {"title": "computed properties ca nt correctly track dependency relationship update", "body": "demo", "num": "4307", "d": "11/2016"}, {"title": "vue removing display block root div", "body": "found vue removing display block root div single page component following code working ver ver removing display block root div automatically export default name modal props size type string default small type type string default closeable type boolean default true isscroll type boolean default false data return id modal mathrandom showbackdrop false showmodal false mounted documentbodyclasslistadd dimmable methods clickcontent event eventstoppropagation open thisshowbackdrop true documentbodyclasslistadd dimmed settimeout gt thisshowmodal true settimeout gt elfirstchildstyletop documentbodyoffsetheight elfirstchildoffsetheight px close thisshowmodal false settimeout gt thisshowbackdrop false documentbodyclasslistremove dimmed closemodal thiscloseable return thisclose modal header background important scaleenteractive animation scalein scaleleaveactive animation scaleout fadeenteractive animation fadein fadeleaveactive animation fadeout", "num": "4306", "d": "11/2016"}, {"title": "ca nt mount jsdom element", "body": "everything works fine upgrade", "num": "4304", "d": "11/2016"}, {"title": "unexpected token importexport", "body": "vuejs version reproduction link packagejson name test version description scripts dev webpackdevserver open inline hot author license isc dependencies vue vuestrap devdependencies babelcore babelloader cssloader htmlwebpackplugin vueloader vuetemplatecompiler webpack webpackdevserver babelrc presets modules false webpackconfigjs var path require path var webpack require webpack moduleexports entry mainjs output path pathjoin dirname dist publicpath dist filename buildjs module loaders test vue loader vueloader test js loader babelloader exclude nodemodules devserver historyapifallback true noinfo true devtool evalsourcemap node v npm v error appear answer google work urgency steps reproduce expected actually happening", "num": "4303", "d": "11/2016"}, {"title": "calling methods inside data allowed", "body": "vuejs version reproduction link steps reproduce call method inside function expected method called like actually happening thrown migrating vue seems behaviour changed info migration guide vuemigrationhelper also says nothing bug possibility calling methods inside removed", "num": "4302", "d": "11/2016"}, {"title": "scopedslots undefined component nt scoped slot", "body": "vuejs version reproduction link steps reproduce check console expected think would nice empty object match component nt scoped slot would easier use condition instead", "num": "4301", "d": "11/2016"}, {"title": "regression", "body": "upgrading got following warning vuejs vue warn property method leaving defined instance referenced render make sure declare reactive data properties data option found component live demonstration look console clic toggle component button live demonstration warning", "num": "4300", "d": "11/2016"}, {"title": "overwrite child components ccs scoped styles feature", "body": "parent component ability overwrite child components style components styles currently way overwrite child components css style scoped styling selecor called would nice similar feature vue deep component styles normally apply html component template use deep selector force style child component tree child component views deep selector works depth nested components applies view children content children component example target elements host element component child elements dom copy code host deep fontstyle italic deep selector also alias gt gt gt use either two interchangeably deep gt gt gt selectors used emulated view encapsulation default use time see controlling view encapsulation section details", "num": "4298", "d": "11/2016"}, {"title": "computed properties ca nt correctly track dependency relationship update", "body": "demo update move loadp mounted created expected behavior information", "num": "4296", "d": "11/2016"}, {"title": "vue js type error vnode undefined", "body": "trying delete element list throws error vuejs typeerror vnonde undefined causes try delete element list objects clean entire list data structure array array objects item want delete ara childs another child item anyone help please", "num": "4295", "d": "11/2016"}, {"title": "update missed dependency", "body": "originally created test app vuecli ran project directory appeared ok ran console see error manually update vuetemplatecompiler well something wrong trigger first place", "num": "4294", "d": "11/2016"}, {"title": "vue work vue ok", "body": "bind vue link href show vue ok work use", "num": "4293", "d": "11/2016"}, {"title": "complex nested objects reactive", "body": "first post mistaken let say thank amazing framework inspires us maintain package called contextablejs uses schemabased objects describe application data model primary focus simplify serverside clientside data validation using expressjs graphql resolvers recently also started using vuejs vuecontextable plugin sure bug report feature request kindly ask directions handle reactivity complex object arrays class instances used suspect vuejs ca nt track changes arrays class instance objects though sure would difference case compare created example try vuejs version reproduction link steps reproduce run example play provided form expected model updated input changes actually happening model updated", "num": "4292", "d": "11/2016"}, {"title": "single file component conditional templates malfunctionning", "body": "hi sure vue subproject issue refers conditional templates started malfunction single file component since simple reproduction shown whereas note remove outer div class leave inner text indeed shown happen single file component eg jsfiddle works edit fix wrong jsfiddle link", "num": "4291", "d": "11/2016"}, {"title": "templatecompiler throw error upgrade vue", "body": "templatecompiler throw template syntax error component template contain exactly one root element use vueloader webpack upgrade vue today template vue component journeytitle authorname exactly component contain one root element really nt know wrong vuejs version demo simple demo", "num": "4289", "d": "11/2016"}, {"title": "vonce throwing error destroy custom component", "body": "version os vue webpack google chrome problem following html use vonce directive console throws error using vuerouter try change url following error occours looking vue source code devtools found problem occuring following function property undefined case throwing error tests static without vfor happens html tag like worked without vonce remove vonce code problem stops bug", "num": "4288", "d": "11/2016"}, {"title": "computed property got data property increment operator keep update", "body": "yesterday occasionally found discussion copy follow last line supposed got instead also created live demo jsfiddle exists digged code found reason solution maybe give pull request nt know whether need fix", "num": "4286", "d": "11/2016"}, {"title": "computed properties ca nt correctly track dependency relationship", "body": "demo properties p amp demo loadp methods load new data p found p index p index bug vm created call loadp modify new members p p new sval corresponding p new val nt reference elder member p p old sval computed properties based ca nt correctly track dependency relationship p sval cause error log working index p index index p index vue\u5bf9 p sval", "num": "4285", "d": "11/2016"}, {"title": "component root node changing broken", "body": "reproduction link", "num": "4284", "d": "11/2016"}, {"title": "custom render treenode scopedslot", "body": "ctxnodetitle result root node get rendered customed template tree component template datatitle vuejs version reproduction link steps reproduce expected actually happening", "num": "4283", "d": "11/2016"}, {"title": "found vue transition component ca nt nested elements solve problem", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4282", "d": "11/2016"}, {"title": "allow change delimiters browser build", "body": "hello currently change delimiters standalone build really annoying vuejs use delimiters twig mustache operators would like add vuejs twig template could allow change delimiters browser build anyway congratz awesome work max", "num": "4281", "d": "11/2016"}, {"title": "documentation extension needed dynamic components", "body": "vuejs version reproduction link steps reproduce sure chosen right solution guide lacks information dynamic components could nt produce result fiddle following guide could nt find anywhere properly catch event emitted dynamic component explicitly defined instance examples expected extend guide documentation topic actually happening hack proper solution tell", "num": "4280", "d": "11/2016"}, {"title": "virtual dom style problem", "body": "vfor render template array delete splice one virtual dom delete last elememt causing css chaos \u590d\u6742\u7ed3\u6784\u7684\u7ec4\u4ef6\u7528vfor eg var arr object object two \u4f1a\u6709display none \u51fa\u73b0", "num": "4279", "d": "11/2016"}, {"title": "virtual dom style problem", "body": "vfor render template array delete splice one virtual dom delete last elememt causing css chaos \u590d\u6742\u7ed3\u6784\u7684\u7ec4\u4ef6\u7528vfor eg var arr object object two \u4f1a\u6709display none \u51fa\u73b0", "num": "4278", "d": "11/2016"}, {"title": "list items delete refresh virtual dom", "body": "vue version list fetched ajax server page looks like generated using vfor last one item hidden try using documentgetelementbyid b delete item still using remove new last one also removed try hide items delete one itemthen fetch new data build list cames new items hidden confused", "num": "4277", "d": "11/2016"}, {"title": "vue vfor getting property method defined instance referenced render error", "body": "getting property method defined error using lt div class gt lt article vfor genre index formfielddataoptions gt lt span gt genrekey lt span gt lt article gt lt div gt var musicgenreid template musicgenreid data function return formfielddata id musicgenreid value null type select options key value latina img imgmusicgenreslatinojpg key value pop img imgmusicgenrespopjpg ready function methods vuecomponent musicgenreid musicgenreid var vuejs new vue el vuewrapper data ready function methods thing used kind code vuejs lt worked except course solve need formfielddata part component belong parentroot instance fyi lt div class gt lt article vfor genre index formfielddataoptions gt lt span gt genre lt span gt lt article gt lt div gt browser displays getting property jsfiddle check consolelogs look error chrome devtools vue tab shows instance child component component actually displays data", "num": "4276", "d": "11/2016"}, {"title": "keepalive\u4e0b\u56de\u9000\u5bfc\u81f4\u9875\u9762\u4e0d\u663e\u793a", "body": "\u6253\u5f00\u8be5\u9875\u9762 \u540e\u9000 \u518d\u6b21\u6253\u5f00\u8be5\u9875\u9762 \u540e\u9000 \u4e0a\u4e00\u4e2a\u9875\u9762\u6d88\u5931", "num": "4275", "d": "11/2016"}, {"title": "slot rendering checking needed", "body": "vuejs version reproduction link steps reproduce using vif slots full content slot rendered evaluating slot rendered causes errors data ready slot expected example data nt set stop attempts render actually happening slots rendered error nothing put page following dumped console worked", "num": "4273", "d": "11/2016"}, {"title": "ahead time aot compilation", "body": "people asking vuejs aot information forecast support aot future aor perhaps technical explanation shows vue need would good information references", "num": "4272", "d": "11/2016"}, {"title": "feature request use props flags", "body": "would nice allowed use custom props flags even properties value present values set component", "num": "4269", "d": "11/2016"}, {"title": "unicode character crashing vue", "body": "vuejs version reproduction link steps reproduce run jsfiddle see content visible expected would expect app run regardless unicode characters without errors actually happening vue character dom element attribute creating new vue instance found root instance warn mount index vue warn error rendering root instance warn anonymous function mount mount index typeerror set property isstatic undefined related", "num": "4268", "d": "11/2016"}, {"title": "vuetemplatecompiler breaks scoped css", "body": "using vueclasscomponent library vuerouter dom elements id therefore scoped css broken replicate simply install vuerouter test project exports using js like hellovue import component vueclasscomponent component export default class login name hello msg welcome vuejs app appjs import vue vue import app app import vuerouter vuerouter vueuse vuerouter eslintdisable nonew new vue el app template components app vue vueclasscomponent vuerouter also find impossible roll back vue want roll back vueloader library dependancy vue subdependancy vuetemplatecompiler install latest throw version mismatch error would nice able lock older version", "num": "4266", "d": "11/2016"}, {"title": "vbind without argument expects object array value", "body": "version initprops\u662f\u5728computed \u540e\u6539\u6210 router view gt articlecard gt card", "num": "4265", "d": "11/2016"}, {"title": "feature request destructuring template", "body": "use template works well try use object directive works good environment falls build example using html id name compiles sth like throw error compiling", "num": "4264", "d": "11/2016"}, {"title": "", "body": "html vuejs version", "num": "4263", "d": "11/2016"}, {"title": "use parent register event issue", "body": "use parent register event component event callback change component data component data changed include velse component trigger parent jsfiddle demo demo", "num": "4262", "d": "11/2016"}, {"title": "vuecli \u4e2d\u7684vue \u5347\u5230 vueloader\u5df2\u7ecf\u662f\u6700\u65b0\u7684\u4e86", "body": "error vue packages version mismatch vue vuetemplatecompiler may cause things work incorrectly make sure use version using vueloader vueify reinstalling bump vuetemplatecompiler latest", "num": "4261", "d": "11/2016"}, {"title": "bug bus", "body": "event placed created method method executed event component invoked time called mounted put", "num": "4260", "d": "11/2016"}, {"title": "", "body": "vuejs version steps reproduce expected working actually happening hi list elements want go edit clicked similar solution component working perfectly fine new one ca nt find component rendered got list annttitle js click got announcement edit snf div form shown use save ajax cancel set inedit null etc soon touch input inside edit div got soon get errors button edition working full error stack div used newedit working perfectly fine new annoucement ideas nt think error code really exactly logic another component working perfectly fine whole jshtml inside vue file", "num": "4259", "d": "11/2016"}, {"title": "cross browser issue vue api docs sidebar", "body": "viewing vue api docs safari sidebar seem render works chrome however chrome version safari version", "num": "4258", "d": "11/2016"}, {"title": "feature request react like hook shouldcomponentupdate vue lifecycle", "body": "think would useful hook like react shouldcomponentupdate vue lifecycle idea behind hook would dynamically prevent dom refreshing component data change use case attempting build component uses contenteditable text editor interface updates keyup dom refresh lifecycle results caret cursor resetting refreshed component option define component update would allow use contenteditable continuing update state vuex keep component references template reactive understanding react ability make rerender conditional would also big performance booster components lots dom refreshes like example big fan vue think adding lifecycle hook would open lot doors", "num": "4255", "d": "11/2016"}, {"title": "directive application structure", "body": "looking far wide could nt find suggestions wherehow structure directives vue project since directives defined even sure define outside file suggestions", "num": "4254", "d": "11/2016"}, {"title": "error occured refs webpack loading components asynchronously", "body": "\u5728 webpack \u5f02\u6b65\u52a0\u8f7d\u7ec4\u4ef6\u65f6 refs \u51fa\u9519 vuejs version reproduction link steps reproduce npm install npm run dev src \u4e0b\u7684 cardvue \u662f cardlistvue \u7684\u5b59\u7ec4\u4ef6 \u7236\u7ec4\u4ef6 cardlist \u6a21\u62df\u7684\u662f\u4f20\u7edf\u7684 feed situation infinite scroll \u6211\u7ed9\u5faa\u73af\u8f93\u51fa\u7684 card \u5b9a\u4e49\u4e86\u4e00\u4e2a expected refsfoo \u9879\u5bf9\u5e94\u7684 dom actually happening \u9879\u5bf9\u5e94\u7684 dom \u4e5f\u5c31\u662f\u8bf4\u7b2c n \u4e2a dom \u7528 \u672c\u4f8b\u4e2d\u4f7f\u7528 dom \u4e0b\u7ed3\u679c\u662f ps \u4e0d\u786e\u5b9a\u662f webpack \u7684\u8fd8\u662f vue sure blame webpack vue \u6bcf\u6b21\u60f3\u63d0 issue", "num": "4253", "d": "11/2016"}, {"title": "vbind style written style nt compile", "body": "minor issue nt compile get error raised", "num": "4252", "d": "11/2016"}, {"title": "\u5931\u6548\u4e86 \u52a0\u4e86webkit\u4e5f\u4e0d\u884c", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4250", "d": "11/2016"}, {"title": "test confusion", "body": "js key modifier function done new vue el el template data methods test function thisa var elfirstchild trigger keyup function e ekeycode nexttick function expect atextcontent tobe done ekeycode keycode represent enter key right ask gitter sorry disrupting", "num": "4249", "d": "11/2016"}, {"title": "feature request allow acess modifier von bound functional component", "body": "would nice share modifier functional components add ability extend standard modifiers simple cases work around adding additional props functional component cases difficult way believe feature help example feature create something like component handles input event focus", "num": "4248", "d": "11/2016"}, {"title": "vhtml gets completely refreshed rather patched rerendered", "body": "vuejs version reproduction link steps reproduce look moving html animation run seconds also check element tab developer tools visible elements representing vhtml changed expected animation complete dom element nt get reinserted actually happening guess html vhtml gets removed reinserted style changed", "num": "4247", "d": "11/2016"}, {"title": "undefined computed classname keys", "body": "vuejs version reproduction link classname generator outputs string undefined instead empty string computed key course possible avoid issue userland would nice handled core issue happens mainly combination cssmodules thing happens repo check issue details necessary", "num": "4246", "d": "11/2016"}, {"title": "vfor syntax suggesition", "body": "think ok omit", "num": "4245", "d": "11/2016"}, {"title": "feature request eval", "body": "consider jsfiddle vue imagine actually component table configurable columns achieved vue without fiddle using vue replaced wo nt work", "num": "4244", "d": "11/2016"}, {"title": "vhtml binding working", "body": "vuejs version reproduction link", "num": "4243", "d": "11/2016"}, {"title": "keepalive activated deactivated hooks trigger recursively toggled", "body": "", "num": "4242", "d": "11/2016"}, {"title": "warn key ref slot declared props", "body": "import vue vue import demo demovue new vue el app components demo demo components test demo export default props key string created consolelog thiskey print undefined", "num": "4241", "d": "11/2016"}, {"title": "props component watched properties render directives", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4240", "d": "11/2016"}, {"title": "directives vshow vif overriding class", "body": "", "num": "4238", "d": "11/2016"}, {"title": "props get sync dynamic components keepalive", "body": "sure bug intended behavior maybe could clarified documentation go getting fresh values passed coming back inactive state vuejs version reproduction link steps reproduce click switch component click increase value click switch component expected component prop updated coming back inactive state actually happening prop component sync parent data", "num": "4237", "d": "11/2016"}, {"title": "watch triggered unchanged nan value", "body": "watched object property nan value set nan watch callback incorrectly triggered application results infinite loop watch callback calculations object sets nan back nan issue reactive setter comparison old new value since one many js quirks nan nan always false changing solves issue", "num": "4236", "d": "11/2016"}, {"title": "vuefunctionalcompoent", "body": "import vue vue import functionalcomponentfactory vuefunctionalcomponent const makefunctionalcomponent functionalcomponentfactory vue make sure component declared global makefunctionalcomponent name config working vue vue thank much", "num": "4234", "d": "11/2016"}, {"title": "attribute nt update binded property called", "body": "element binded attribute called wo nt update dom example note template works fine variable updates well attribute nt update codepen reproduces problem problem occurs vue example works fine", "num": "4233", "d": "11/2016"}, {"title": "use bootstrapdatepicker use vmodel get date value", "body": "", "num": "4231", "d": "11/2016"}, {"title": "vue bootstrapdatepicker \u4f7f\u7528vmodel\u53d6\u503c\u4e3a\u7a7a\u5b57\u7b26\u4e32", "body": "get var app new vue el app data startdate mounted startdate datepicker methods getdate consolelog thisstartdate \u7a7a\u5b57\u7b26\u4e32", "num": "4230", "d": "11/2016"}, {"title": "hot module replacement chrome apps", "body": "hey perform hot module replacement using webpack vueloader developing chrome application chrome extension", "num": "4229", "d": "11/2016"}, {"title": "emit ca nt bubbling parents module", "body": "three vue file avue bvue cvue avue template bvue template cvue template cvue script click div cvue avue closehandle ca nt trigger must write medium method bvue trigger closehandle avue necessary write medium bvue way trigger closehandle vuejs version reproduction link steps reproduce expected actually happening", "num": "4228", "d": "11/2016"}, {"title": "patched elements keep inline styles old vnodes", "body": "vuejs version reproduction link steps reproduce vue centered centered export default name app data return loading true mounted function settimeout gt thisloading false expected patched elements keep inline styles old vnodes actually happening update operation patched elements retain styles vnodes longer exist dom temporarily solution endusers changing inline styles classes choosing different tag names adding directive fix issue thanks linusborg latter looks like pr introduced regression opened pull request failing test confirms issue", "num": "4227", "d": "11/2016"}, {"title": "provide method focusing custom form components", "body": "one powerful features components able create custom form elements however easy way set focus mockup steps required props events pretty complicated emit even child parent nt see sane way focus reactive data property one possible way handling special directive occur component inputs textareas set form element supposed receive focus vue also handles focus event emitted custom component focus set input directive another way vue handles event left developer receive set focus appropriately realize creates special case scenario vue form elements special case scenarios feel would really help make programming much natural", "num": "4225", "d": "11/2016"}, {"title": "disable interpolation mustachestyle directives vue unusable apps user content", "body": "vuejs version reproduction link steps reproduce app built around user content vue instance bound app container user content contains curly braces expected curly braces nonapp user content ignored especially encoded actually happening user crash vue thus application simply using curly braces syntax anywhere input rendered ie solutions work encoding curly braces creating several vue instances binding nonuser content whenever vue component needs render user content use viable solution would require developer create vue instance per vue component seperately component would also use syntax prevents using thirdparty nonvue code access changing delimiters problem remains user still crash app disabling delimiters interpolation supported tried causes vue render every single element propositions bring back nonglobal option per vue instance new tag eg disable rendering inside html tag still allow altered using vue act vue component related issues original question similar request vue similar request languages also related laravel blade discussion syntax ignore braces render without parsing perhaps completely missing point moment prevents using vue app nt think would major issue yet proven quite cumbersome fix bypass sure others handle situation would love get feedback able continue development using vue", "num": "4223", "d": "11/2016"}, {"title": "dynamic props update using keepalive", "body": "vuejs version reproduction link steps reproduce switch components amp increment number multiple times expected prop stay consistent components actually happening component stays stale reflect parent although dynamic prop", "num": "4222", "d": "11/2016"}, {"title": "list instance referred link list cleared", "body": "list instance referred link ca nt clear list vuejs version reproduction link steps reproduce click clear button expected list cleared actually happening list nt cleared", "num": "4221", "d": "11/2016"}, {"title": "template event handler bind vue prototype method", "body": "try bind event handler template without using vue prototype method handler scope valid vue instant instant method ok vue example see", "num": "4220", "d": "11/2016"}, {"title": "\u4e3a\u4ec0\u4e48vuejs \u9879\u76ee\u4e2d\u7684input\u6846\u5728\u82f9\u679c\u624b\u673a\u4e0a\u65e0\u6cd5\u8f93\u5165", "body": "\u4e5f\u6ca1\u6cd5\u8f93\u5165 \u4f7f\u7528vuecli \u4f46\u662f\u53bb\u6389\u6240\u6709js\u5355\u7eaf\u4e00\u4e2ahtml", "num": "4219", "d": "11/2016"}, {"title": "request add scopeid type definition componentoptions", "body": "using precompiled templates csp compatible like segment ts code vue template files result precompiling templates webpack importing typescript using pattern basically copying render functions injecting new ts component components using scoped scss logic though would like pass scopeid well like version working fine working due missing scopeid type property vue type definition found would possible add scopeid componentoptions definition interface vuejs", "num": "4218", "d": "11/2016"}, {"title": "use vue browserify regression", "body": "vuejs version reproduction link files simple steps reproduce clone repo npm install gulp expected build app correctly actually happening commit requires package ca nt found", "num": "4217", "d": "11/2016"}, {"title": "repeated inlinetemplate within vif wrongfully reused", "body": "vuejs version latest reproduction link steps reproduce repeat conditional vif vshow check component inside expected changing value conditional check display right child component turn displays unique value actually happening first time value vif selected right used change value afterwards inlinetemplate first value reused time additional info none conditional checks hit selecting value state reset next matching value selected display correct value long one conditional checks matches template reset", "num": "4216", "d": "11/2016"}, {"title": "inputing anything input managed via computed property makes lose focus inputs generated", "body": "using two inputs enter number one input one gets calculated automatically works great using one property js data return dataobj months computed years get let unroundedresult thisdataobjmonths return number unroundedresulttofixed set newvalue thisdataobjmonths mathround newvalue html see action working correctly codepen however encounter problem generate inputs via loop case whenever enter number input lose focus need click back input continue editing cf codepen annoying behavior happening using loop tend think bug wrong would see focus lost note use mouse wheel change input values note mouse wheel events works chrome unknown reasons everything works intended also modify decimal part year calculated value months change lose focus note question first asked gitter forum", "num": "4215", "d": "11/2016"}, {"title": "vuefilter ca nt work", "body": "hello vuefilter params work vue example", "num": "4214", "d": "11/2016"}, {"title": "vmodel doesnt bind data component used routerview", "body": "code login form doesnt work vmodel directive login export default data return errors email password methods submitform thisaxiospost login thisemail thispassword response gt consolelog responsedata catch response gt consolelog responsedata", "num": "4213", "d": "11/2016"}, {"title": "casesensitive attribute names nt work vbind", "body": "vuejs version reproduction link expected vue create attributes case consistent template actually happening vue creates attributes lowercased version template problem noticeable using subset tags casesensitive like tag example consider viewbox attribute demo linked vue produces attribute viewbox instead viewbox causing svg rendered incorrectly tested firefox chrome", "num": "4212", "d": "11/2016"}, {"title": "", "body": "", "num": "4211", "d": "11/2016"}, {"title": "vbind style condition stylea styleb use inside vfor unexpected", "body": "want add inlinestyle every img label need judge data structure like result unexpected", "num": "4210", "d": "11/2016"}, {"title": "use render function strange slot template", "body": "vuejs version reproduction link steps reproduce actually happening different b c buttons two dom node click b c button normal others duplice text", "num": "4209", "d": "11/2016"}, {"title": "vue graphql", "body": "hello working graphql client called greed nt open sourced yet frameworklibrary agnostic wanted create vue bindings want base bindings signature got working react js container greed defaults queries mutations component using decorator container greed defaults queries mutations somecomponent greed greedinstance greed instance want use defaults function default data component render queries function queries run user input occurs mutations function mutations run user input occurs component component component enhance container essentially enhances whatever component receives data needed render methods executed run queries mutations user input occurs application however given different types templates vs components vue sure go injectingenhancing vue componentstemplates familiar vue wanted feedback direction best accomplish vue help guidance would really appreciated", "num": "4208", "d": "11/2016"}, {"title": "documentation suggestion", "body": "greetings first foremost believe vue revolutionary framework started working vue see great potential way build applications future said believed one many things helped frameworks like react angular polymer grow rapidly clear concise direction build publish distribute components component libraries necessarily applications spas although webpack setup great configuration distributing application able find seamless webpack setup offers publishingtesting capabilities vue templates believe clear directions vuejsorg andor configuration settings webpackbrowserify templates also included publishing single component component library could igniter rocket set vue even higher level frameworks kind regards ryan w", "num": "4206", "d": "11/2016"}, {"title": "lifecycle hooks triggered component wrapped element vif directive", "body": "vuejs version reproduction link steps reproduce open browser console run jsfiddle code deselect checkbox trigger expected mounted printed time trigger changes actually happening mounted printed parent component rendered case several sibling elements render one depending vif condition element different markup one child component expect element contained directives components destroyed reconstructed toggles stated docs however content conditional elements changed hooks child components called", "num": "4205", "d": "11/2016"}, {"title": "component vmodel modifiers working", "body": "hi simple component export default props placeholder value methods change e emit change etargetvalue trimhassuccessvalue contains spaces", "num": "4204", "d": "11/2016"}, {"title": "strange default props objectarray behavior watcher", "body": "vuejs version reproduction link steps reproduce actually happening refresh window click button alert refresh window click button alert refresh window click button alert refresh window click button alert \u4e2d\u6587", "num": "4203", "d": "11/2016"}, {"title": "android wechat throw uncaught referenceerror defined exception", "body": "vue version explorer useragent linux android khtml like gecko mobile nettypewifi languagezhcn steps reproduce expected actually happening", "num": "4202", "d": "11/2016"}, {"title": "velse issue", "body": "vuejs version reproduction link steps reproduce run jsbin expected expecting see html conten hello content html content hello content actually happening soon velse hit put terminated eg move hello content block top list shows terminates", "num": "4201", "d": "11/2016"}, {"title": "parent component class attributes subcomponents", "body": "example react reactchildrenmap", "num": "4199", "d": "11/2016"}, {"title": "merging default html class class value results duplicate class", "body": "vuejs version reproduction link steps reproduce click expected link active class thus red color reason want combine class vbind class active class initial active class added jsp code second vue nt initial class logic button gets vue active class late causes nice jump page actually happening active class red clicking inspect element active classes instead one works bit different clicking links active class clicking test test works correct point use wrong bug", "num": "4198", "d": "11/2016"}, {"title": "url", "body": "bhtml \u5982\u4f55\u5c06ahtml\u7684\u4fe1\u606f\u4f20\u9012\u5230bhtml", "num": "4197", "d": "11/2016"}, {"title": "von keyupenter working korean character", "body": "vuejs version reproduction link steps reproduce input field enter korean character example \uc548\ub155 enter key invoked enter english words hello enter key works expected inputenter function invoked actually happening nothing run env firefox ubuntu", "num": "4196", "d": "11/2016"}, {"title": "error mismatching childnodes vs vnodes svg element camelcase tag name animatetransform animatemotion lineargradient template", "body": "version vue vueserverrenderer reproduction link demo steps reproduce follow guidelines serversiderendering establish whole serversiderendering workflow replace template svg elements actually copied svg mdn animatetransform animatemotion restart service browse rendered page expected vnodes actual childnodes matching actually happening warning error occered mismatching childnodes vs vnodes animatetransform seems use instead rendered tag still everything goes right tags camelcase name animatemotion lineargradiant behave", "num": "4195", "d": "11/2016"}, {"title": "", "body": "\u8bc4\u8bba \u8bc4\u8bba \u6c42\u89e3\u51b3 vuejs version", "num": "4194", "d": "11/2016"}, {"title": "emit inline style", "body": "trying communicate parent component instead js register button buttonfluidbasicinverted click switchscreen methods switchscreen emit switchscreen register something like perhaps", "num": "4193", "d": "11/2016"}, {"title": "inline style vshow compability", "body": "vuejs version reproduction link steps reproduce run demo expected nothing displayed actually happening red false displayed something inline style remove problem goes away", "num": "4192", "d": "11/2016"}, {"title": "mergedata works properly array", "body": "vuejs version reproduction link steps reproduce create array add something arrayprototype add property array obj use array data trigger mergedata expected array merged withou error without keyvalues prototype actually happening typeerror keyvalues prototype copy array", "num": "4191", "d": "11/2016"}, {"title": "filter image src binding", "body": "possible filter image source data binding realise could make computed property feel like missing trick", "num": "4190", "d": "11/2016"}, {"title": "wrong warning", "body": "hi want use component reactivity simple code vuecomponent inputtext template tpl props date data return val thisdate new vue el main vmval null", "num": "4189", "d": "11/2016"}, {"title": "recusive local components uncaught rangeerror maximum call stack size exceeded", "body": "vuejs version reproduction link steps reproduce run new vue let app demo app load expected app loads expected btw work vue quite ready migrate rest app actually happening js error uncaught rangeerror maximum call stack size exceeded new function createclass functionvueextend guardcomponents mergeoptions functionvueextend guardcomponents mergeoptions functionvueextend guardcomponents", "num": "4187", "d": "11/2016"}, {"title": "style blink issue ssr", "body": "vue version server side rendering ssr great feature vue however found issue ssr output styles vue file first screen page though extract styles vue files one external large size css file large spa suitable way large size css file block assets page downloading solution issue", "num": "4186", "d": "11/2016"}, {"title": "problem vmodel vuejs", "body": "vuejs version reproduction link steps reproduce switch versions vuejs enter text input expected property update input like vuejs actually happening using vuejs field changes empty input event key", "num": "4185", "d": "11/2016"}, {"title": "kebabcase css property names nt work vbind style", "body": "vuejs version reproduction link steps reproduce use following syntax vue documentation says kebabcase working style binding camelcase works see fiddle expected margintop style element contain proper value actually happening vue throwing error", "num": "4184", "d": "11/2016"}, {"title": "ios render issue", "body": "vuejs version reproduction link vue example project steps reproduce building single page application live translation using vue works ok desktop browsers android issue ios rendering implemented fiddle navbar blocks page seems ios nt support tried chrome safari iphone ios also searched stackoverflow vue forum issue could nt find answer expected render vue show text objects actually happening shows pagecontent pagetitle", "num": "4183", "d": "11/2016"}, {"title": "velse vonce custom component inside vfor", "body": "list rendering using custom component directive jsfiddle using vue note work using vue unless remove directive let add conditional rendering jsfiddle using vue jsfiddle using vue fails using vue error property method item defined instance referenced render works failed", "num": "4182", "d": "11/2016"}, {"title": "compile component template incorrectly", "body": "vuejs version reproduction link steps reproduce open console expected page works days ago actually happening declared console error sorry bit mess source code vue export default data return activecoachid null activedate thisdate translatex translatestart translating false panning false scrolling false compiled code template js moduleexports render function var vmthis return vmh div class vm styleschedulecalendar vmh div staticclass panel class vm stylecoursetypepanel vmh div staticclass panelbody vmh div class vmmonth vms vmf formatdate vmactivedate mm \u6708 vmh div vmt default vmh div staticclass panel vmh div ref calendar staticclass panelbody vmmode vmh calendar directives name touch rawname vtouch panstart value vmonpanstart expression onpanstart arg panstart name touch rawname vtouch pan value vmonpan expression onpan arg pan name touch rawname vtouch panend value vmonpanend expression onpanend arg panend attrs calendar vmcalendar activeindex vmactiveindex translatex vmtranslatex toggleactivedate vmtoggleactivedate nativeon transitionend function event eventtarget eventcurrenttarget return vmontransitionend event vmh calendar attrs calendar vmcalendar activeindex vmactiveindex translatex vmtranslatex toggleactivedate vmtoggleactivedate vmh div ref schedules class vm stylecontent style vmcontentstyle scroll vmonscroll objectkeys vmactiveitems length vmh ol staticclass listunstyled vml vmactiveitems function scheduleitems date index return vmsubscribetype vmh scheduleitems key date index ref date refinfor true class vm stylescheduleitems attrs date date last index objectkeys vmactiveitems length itemsheight vmitemsheight scheduleitems scheduleitems vme vml vmactiveitems activedate function coachitem return vmsubscribetype vmh coachitem key coachitemcoachid ref date refinfor true attrs coachitem coachitem activecoachid vmactivecoachid toggleactivecoach vmtoggleactivecoach vme vmh noitem attrs text \u672c\u5468\u6ca1\u6709\u5b89\u6392\u4efb\u4f55\u8bfe\u7a0b staticrenderfns true modulehotaccept modulehotdata webpackrequire rerender moduleexports webpack footer vueloaderlibtemplatecompilerjs vueloaderlibselectorjs typetemplate amp srccomponentsschedulecalendarindexvue module id module chunks notice code actually", "num": "4181", "d": "11/2016"}, {"title": "add new lifecycle hooks components", "body": "hello would like propose add new lifecycle hooks components including async ones difficult know async components loaded need add wrappers would nice use built lifecycle hooks instead js import vue vue const vm new vue components resolve gt require resolve resolve gt require resolve resolve gt require resolve etc ready consolelog components loaded components instance may use tests vm mount", "num": "4179", "d": "11/2016"}, {"title": "longer use jqgrid vue", "body": "title data data new vue el nav data test false document ready function jqgrid jqgrid url mtype get datatype jsonp colmodel label orderid name orderid key true width label customer id name customerid width label order date name orderdate width label freight name freight width label ship name name shipname width page width height rownum scrollpopup true scrollleftoffset viewrecords true scroll set scroll property enable paging scrollbar virtual loading records emptyrecords scroll bottom retrieve new page message displayed bottom pager jqgridpager", "num": "4177", "d": "11/2016"}, {"title": "using vuejs use jqgrid reported wrong", "body": "", "num": "4176", "d": "11/2016"}, {"title": "feature request support yarn", "body": "would interesting support yarn dependency manager able easily install dependencies different projects", "num": "4175", "d": "11/2016"}, {"title": "feature request vempty vfor", "body": "common issue rendering lists show message case list empty django example template tag supports probably could benefit similar feature vue cases list contained inside element hidden list empty works fine vue want hide whole container html itemmessage empty list case however syntax getting little verbose emulating django example mentioned could benefit simplification getting rid expicit upd could form nice name well case like avoid conflicts existing implementation", "num": "4174", "d": "11/2016"}, {"title": "", "body": "know piece syntax sugar support directive", "num": "4173", "d": "11/2016"}, {"title": "filters bind", "body": "vue filters bind work working example using binds plain simple element adding filters bind via result also tried adding filters via result use filters bind documentation reads vue filters used inside mustache bindings mustache bindings use case quite simple output would something like input output", "num": "4172", "d": "11/2016"}, {"title": "standalone build encounters missing templaterenderfn misleading warning use runtimeonly build logged", "body": "vuejs version reproduction link steps reproduce newbie accidentally creates empty template template fails compile using compilerincluded build expected vue warning similar actually happening vue warning warning message misleading compilerincluded build defined differently two builds would solve issue", "num": "4171", "d": "11/2016"}, {"title": "vmodel \u5904\u7406\u65b9\u5f0f\u4e0d\u4e00\u81f4\u6027\u95ee\u9898", "body": "vuejs version reproduction link expected \u81ea\u5b9a\u4e49\u7ec4\u4ef6\u5904\u7406vmodel\u548cvalue\u5e94\u8be5\u548cinput\u5904\u7406\u65b9\u5f0f\u662f\u4fdd\u6301\u4e00\u81f4\u7684 actually happening \u65e0\u6548\u4e86 \u540c\u65f6\u8bbe\u5b9avalue \u548cvmodel \u56e0\u4e3a\u6211\u8fd8\u5728\u6bd4\u8f83\u591a\u7684\u4f7f\u7528\u540e\u7aef\u6a21\u677f", "num": "4170", "d": "11/2016"}, {"title": "redistribute content given", "body": "experienced real trouble migrating vue duplicate slots removed works vue consider must api method way clone slotsdefault", "num": "4169", "d": "11/2016"}, {"title": "sortable vuejs works nt work", "body": "trying make sortable list twoway bound example html array elements vue see works expected example ported vue looks broken think way vue handles dom diffing bug way work around", "num": "4168", "d": "11/2016"}, {"title": "intercepting checkbox values", "body": "trying intercept checkbox value order save vuex store using nt make difference underlying model component matter get truefalse value passed never full dom event would expect docs something changed regard please update official guide still almost half", "num": "4167", "d": "11/2016"}, {"title": "feature request list rendering first last option", "body": "would like suggest feature could manage first last pointer looping object using array regular field listed would nice thing like order identify loop starts ends would result idea sure would better loopfirstlast even authorfirstlast thanks", "num": "4166", "d": "11/2016"}, {"title": "tapmode attribute work", "body": "code use tapmode attribute eliminate delay using vue work", "num": "4164", "d": "11/2016"}, {"title": "possible still render serverside using vuerouter", "body": "hello app renders serverside routing using vue decided add vuerouter use component render app works fine lost serverside rendering example lt template lt div class page lt routerview gt lt routerview gt lt div lt template main header renders fine page content fits routerview show view source browser even though app works fine expected behavior also bear mind initial page load talking moving one page another browser load typing url", "num": "4163", "d": "11/2016"}, {"title": "multiple components dynamic components ca nt call hook detached", "body": "vuejs version reproduction link steps reproduce dynamic component two dynamic components called b also define common component called c connections root c b expected component hooks attached detached called proper way actually happening connection root c never called bug kind rules missed", "num": "4162", "d": "11/2016"}, {"title": "render functional\u6a21\u5f0f\u4e0bslot\u88ab\u91cd\u7f6e", "body": "export default", "num": "4161", "d": "11/2016"}, {"title": "asynchronous updates inside component reset input value", "body": "vuejs version reproduction link steps reproduce choose basic color dropdown start typing different color textbox time changes still typing reset previous color expected input value left way update happens actually happening value input reset user input removed background previously submitted bug may clearly stated inside component component advice using even possible idea user convenience multiple ways user input value", "num": "4158", "d": "11/2016"}, {"title": "typescript types included vue still require installation typesvue module resolution work", "body": "modules still resolving compilation even types renamed moved folder terminalapp appjs tsconfigjson", "num": "4156", "d": "11/2016"}, {"title": "multiple vif work root template tag", "body": "code test hello world var testcomponent vueextend template templatetestcomponent props type lt p gt var app new vue el app components testcomponent testcomponent work plunk real project code work vif work div wrapper example wrapper screws layout", "num": "4155", "d": "11/2016"}, {"title": "transition behave different writing enter leaveactive single rule", "body": "vuejs version reproduction link steps reproduce left accordion behaves normally however write enter leaveactive single rule lost enter transition expected left right behaves actually happening right one leave transition", "num": "4154", "d": "11/2016"}, {"title": "feature request \u63d0\u4f9bfreemarker\u6a21\u677fnested\u8bed\u6cd5\u7c7b\u4f3c\u7684\u529f\u80fd", "body": "\u4f8b\u5982list\u7ec4\u4ef6render child parent", "num": "4153", "d": "11/2016"}, {"title": "bug custom component vmodel bug", "body": "tested versions custom component bind computed properties called every time value changed open jsfiddle link click console print every click even worse text input relationship component component would still echo consolelog nt tag consolelog", "num": "4152", "d": "11/2016"}, {"title": "element set vbind style backfroundcolor configbackgroundcolor active style nt work deal", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4151", "d": "11/2016"}, {"title": "asynchronous actions reset value input unrelated data properties", "body": "vuejs version reproduction link steps reproduce click test button immediately select text input change something wait seconds expected nothing input box change method tester changing property test value left alone actually happening value input reset whatever last saved value realize used value would change type desirable situation using input part larger component also updating nice side effect limiting related operations done completed values instead every keystroke background something closer real problem ran thought something done wrong feel simplifying actually bug", "num": "4150", "d": "11/2016"}, {"title": "link characters especial show image style background image", "body": "vuejs version one question link characters especial type image show image show link image link text wrong bug wrong thanks", "num": "4149", "d": "11/2016"}, {"title": "emit nt fire callback", "body": "hello new vue ca nt seem find answers anywhere got state work perhaps bug repo comments code notevue notetitle notecontent remove edit import noterepo datanoterepo export default props note methods remove consolelog vue instance one put emit works fine callback notereporemove thisnote err gt err consolelog fire get echoed console consolelog vue instance one event nt get emitted emit alerted type error message failed remove note selectnote key title content event works fine like moving callback emit selected key title content notesvie import note note import noterepo datanoterepo export default components note data return notes methods emitnote key title content emit selected key title content emitalert alert consolelog recieved never fired inside callback emit alerted alert unfortunately able reproduce fiddle pen require codebase let know hope comments make sense", "num": "4148", "d": "11/2016"}, {"title": "rendertostream data event called", "body": "hi trying add ssr vue project problem rendertostream const context url requrl const renderstream rendererrendertostream context consolelog work fine reswrite htmlhead renderstreamon data chunk gt consolelog logged reswrite chunk renderstreamon end gt resend htmltail consolelog renderstreamon error err gt render error page redirect resstatus end internal error consoleerror consoleerror err code none callbacks called open page title page rendered nothing else shown none console commands called either browser shows loading logo top page nothing happens", "num": "4147", "d": "11/2016"}, {"title": "questions spa", "body": "hello new vuejs vuex development precisso develop spa communicate api done lumen like material videos assist building des beginning end spa portuguese language en best english", "num": "4145", "d": "11/2016"}, {"title": "vue stripping styles inline svg", "body": "vuejs version reproduction link steps reproduce include inline svg styles within vue instance init vue instance expected svg styled according style element actually happening vue giving warning vue warn templates responsible mapping state ui avoid placing tags sideeffects templates", "num": "4144", "d": "11/2016"}, {"title": "using ssr defined dynamic components rendered classes tag component", "body": "vuejs version steps reproduce create component use components within parent component template classname expected expected render server side similarly clientside actually happening server side renders classes dynamically generated components time client side renders everything classes behavior causes twitch interface due belated addition classes styles also incorrect display js file load slow internet", "num": "4143", "d": "11/2016"}, {"title": "internal method overriding detection", "body": "introduced feature vue warns user trying override internal method good thing though think current detecting implementation debatable according commit every method vue prototype checked everything necessarily internal method example manually add method try manipulate method later get warning thing happens third party package adds method cases confusing method gets warned actually shipped vue chance get improved", "num": "4142", "d": "11/2016"}, {"title": "invalid varibal", "body": "vuejs version reproduction link problem issue steps reproduce please see result amp dealed string html expected actually happening invalid deal string parsed html", "num": "4141", "d": "11/2016"}, {"title": "gt data show safari", "body": "like thought inconvenient", "num": "4140", "d": "11/2016"}, {"title": "props seems reserved undocumented", "body": "vuejs version hi tried set prop component lot troubles vue keeping telling prop filled obviously took long time figure finally changed prop name everything worked without modifying code anywhere else seems reserved prop name used although sure also case others keywords looking doc could find list reserved error error message generic missing required prop make think thing would really helpful either list reserved prop names explicit error message think thanks", "num": "4139", "d": "11/2016"}, {"title": "mixin support route hook", "body": "javascript const mixin beforerouteleave next consolelog mixin router dot work created consolelog mixin created work export default mixin want mixin route hook function options find vue ignore route hook buildin options like ok", "num": "4137", "d": "11/2016"}, {"title": "select input default option binded", "body": "sure bug wonder second select input example blank change vuejs version reproduction link expected default option selected first option selected bby default actually happening change second select blank", "num": "4136", "d": "11/2016"}, {"title": "using vuejs electron state changes wrapped settimeout", "body": "vuejs version expected nt update state unless wrap state change actually happening code import ipcrenderer electron export default data return formdata username password authcode authcoderequired false submitted false showformscreen true showwelcomescreen false state value message computed statemessageshow return thisstatevalue thisstatevalue mounted let context ipcrendereron loginresponse e gt thisformdatasubmitted false switch astate login successful case thisformdatashowformscreen false settimeout gt contextstate value contextshowwelcomescreen true break invalid form data case contextstate value message incorrect email password break auth code required case case contextstate value message contextformdataauthcoderequired true break thisformdatasubmitted false ipcrendereron loginattemptupdate e gt switch astate case thisstate value astate message connecting servers break case thisstate value astate message connected servers break case thisstate value astate message logging servers break case thisstate value astate message logged successfully break case thisstate value astate message login attempt failed break default thisstate value message break methods onsubmit thisformdatasubmitted true storestateuserisloggedin return ipcrenderersend clientlogin thisformdata absolutely idea works wrap like suggestions", "num": "4134", "d": "11/2016"}, {"title": "inconsistent documentation behaviour vm watch", "body": "vuejs version following code produces following error console otoh documentation explicitely states valid syntax even example", "num": "4133", "d": "11/2016"}, {"title": "src set filter error", "body": "like register filter appendparams error property method appendparams defined instance referenced render want change image url deal", "num": "4132", "d": "11/2016"}, {"title": "transitions also emit animationend event", "body": "uipopup amp amp uipopupanimate animationend event also fired", "num": "4130", "d": "11/2016"}, {"title": "oppo xiaomi phone thrown directly", "body": "vuejs version actually happening phone thrown directly use keyword native syntaxerror unexpected token native class uncaught syntaxerror unexpected token class", "num": "4129", "d": "11/2016"}, {"title": "actually one root template warned", "body": "vuejs version reproduction link steps reproduce expected warning generate one element actually happening warning component template contain exactly one root element", "num": "4128", "d": "11/2016"}, {"title": "vuetemplatecompiler upgrading vuejs freezes build process using vueloader", "body": "vuejs version reproduction link happening big complex project see shrink reproduceable scenario steps reproduce upgrade vue run build process expected build process finish normally actually happening freezes interrupting ctrlc returns cli prompt scenario complex uses gulp webpack babel vueloader etc updated vuejs build task stucks revert runs fine trimmed issue manually switch back vuetemplatecompiler folder version inside nodemodules run everything else exactly vuejs nothing else changed gives warning error message telling bump latest go force run mismatching versions changing line vuetemplatecompiler build completes short issue freezing compilation template project note nt try run compiled result believe result unpredictable fact codebase compiles fine vuetemplatecompiler build process freezes vuetemplatecompiler try get info eventually something reproduce thank", "num": "4127", "d": "11/2016"}, {"title": "feature request expose createelement vue object", "body": "feature request one simple expose createelement object omitted function jsx typed lower error margin excluding one step", "num": "4126", "d": "11/2016"}, {"title": "breaks ie conditional statements", "body": "vuejs version works reproduction link steps reproduce add ie conditional comments html inside expected stay hidden unless version ie matched thus hidden nonie browsers actually happening ie conditional comments removed thus content inside conditional always displayed html content hidden", "num": "4125", "d": "11/2016"}, {"title": "error read property null", "body": "render deep property one object one part chain null whole project suspended break reproduce follows jsfiddle list rendered one name null see error console using angular null result empty vue handle expression solution pretty tried vueconfigsilent supposed solve problem better way render deep object", "num": "4123", "d": "11/2016"}, {"title": "svg foreignobject working vue", "body": "vuejs version reproduction link steps reproduce run without var vue new vue el body version instead expected version see text inside rectangle run without vue text work fine version text also fine actually happening nt know resulting html stays whether text seen", "num": "4122", "d": "11/2016"}, {"title": "event nested component since", "body": "hello notice possible bug since nt nested component works click test fiddle nt work click test fiddle normal really bug thanks html title titlechildren js var comp template test methods toggle function alert ok nt fire var child new vue el children components comp comp data titlechildren test children var parent new vue el parent data title test parent", "num": "4121", "d": "11/2016"}, {"title": "seem set properties vm directive vue", "body": "vue possible set data vm component calling directive useful example pagination directives would set current page number number pages vue functionality seems nt work intentional send pr failing test case misunderstanding something", "num": "4120", "d": "11/2016"}, {"title": "vif possible inpatch strategy issue", "body": "vuejs version reproduction link steps reproduce increase counter increase counter b click toggle view counter c expected c counter created instantiated new unique uid counter value set actually happening seems vue reusing dom elements possibly inpatch strategy expect components destroyed hook never called vif false recreated new example shows happen destroy method happens b counter never c put key attribute vif velse solves issue mentioned anywhere docs feel like expected behavior", "num": "4119", "d": "11/2016"}, {"title": "recursive single file components rendering functions defined", "body": "vuejs version reproduction link steps reproduce run build check browser console log expected blocks render normally least give another warn actually happening vue says template render function defined", "num": "4117", "d": "11/2016"}, {"title": "iphone vif", "body": "html registered properly converted boolean string even registered false still", "num": "4116", "d": "11/2016"}, {"title": "use keyword vuetemplatecompiler prevents use imports", "body": "compiled vue file source required via module system causes strict mode error thrown team developing interface module goal consolidate vue components across several projects vue components defined vue files precompile files easily exported interface module plain javascript strict mode fun arrises go require interface module application code applications use style imports render function created vuetemplatecompiler contains keyword library required seems decent barrer developing vue ui kit modules precompiled vue files imported via imports", "num": "4115", "d": "11/2016"}, {"title": "vue bootstrap templating issue creating vue instance showbsmodal", "body": "vuejs version reproduction link steps reproduce create bootstrap modal window attach function showbsmodal event function creates new vue app instance modal window root element add button page show modal inside bootstrap modal input field bound vue data expected data bound input field rendered first opening modal window exchange vue vue inside jsbin example see expected behaviour actually happening open modal via clicking button input field filled data close modal open second time data properly shown", "num": "4114", "d": "11/2016"}, {"title": "input lose focus list rendering use vmodel key", "body": "example item plus use input item input lose focus keyup resolve problem thanks", "num": "4113", "d": "11/2016"}, {"title": "", "body": "my\u7684\u503c\u7684\u7c7b\u578b\u5e76\u4e0d\u662fnumber \u800c\u662f\u5b57\u7b26\u4e32", "num": "4112", "d": "11/2016"}, {"title": "\u6d4b\u8bd5", "body": "\u667a\u7f8e\u65b0\u7164\u5f00\u53d1\u7ec4\u6d4b\u8bd5", "num": "4110", "d": "11/2016"}, {"title": "flow type declarations missing npm package", "body": "git repo flow type declarations besides typescript ones present npm package unlike typescript ones makes impossible use flow vuejs project note might obstacles tried manually copy flow directory contents project add flowconfig still getting errors imports vuejs source files ie lib code seems problem relative imports eg may new flow", "num": "4109", "d": "11/2016"}, {"title": "two pages use vue pass information", "body": "triggers click event go vue listen page like click new vue el methods showinfo function todo receive event vue", "num": "4108", "d": "11/2016"}, {"title": "vue renders unexpected undefined vif condition changes", "body": "vue renders text node undefined first child element appears changed vif condition applies vshow replaces element uses vhtml vuejs version versions tested reproduction link steps reproduce jsfiddle click text click see unexpected text undefined using template like one html deleted changes instead showing velse part template unexpected undefined rendered expected nodes template html deleted rendered actually happening nodes equivalent html undefined deleted rendered", "num": "4107", "d": "11/2016"}, {"title": "exptrim function happens props set numeric values", "body": "vuejs version reproduction link steps reproduce vuecomponent bootselect template removed brevity props value label options placeholder order model ready function thisorder thisorder numeric value triggers error expected parseexpression cast value string calling trim guarantee string assigning directly js actually happening", "num": "4106", "d": "11/2016"}, {"title": "overwrite vueutilisobject catch error", "body": "using babel javascript import vue vue const isobject vueutilisobject vueutilisobject function obj objisvueclassic return true return isobject obj ca nt overwrite", "num": "4104", "d": "11/2016"}, {"title": "support multiple keys single modifier", "body": "vuejs version reproduction link steps reproduce focus input try using w trigger key instead right left expected expected able hit w trigger left trigger trigger right trigger actually happening nothing thought would work line source nt also kind side note overwrite default keycodes rather name custom alias instead", "num": "4102", "d": "11/2016"}, {"title": "serverside rendering php without nodejs", "body": "feature description php allows execute js server side sort alternative nodejs currently possible execute vuejs way complains settimeout amp document defined vuejs running fine server side nodejs possible run php code sample vuesource filegetcontents new result gt executestring vuesource gt result executestring referenceerror document defined", "num": "4101", "d": "11/2016"}, {"title": "get built directives using vuedirective directivename vue", "body": "sure bug report feature request possible vue nt seem vue vue could get object representing builtin directive using useful extending built directives example js const fordirective vuedirective const forpaginateddirective objectassign fordirective bind const inmatch thisexpressionmatch inof vuedirective paginatedfor forpaginateddirective untested minimal code sample vue returns undefined possible vue case whywouldyouevendothat", "num": "4100", "d": "11/2016"}, {"title": "textarea placeholder set textarea value", "body": "vuejs version reproduction link", "num": "4098", "d": "11/2016"}, {"title": "unexpected recalculation computed property", "body": "vuejs version reproduction link steps reproduce click times button expected would expect computed property bar nt update second click button value foo nt change actually happening computed property bar recalculated foo recalculated even computed value foo nt change behavior intended missing something", "num": "4097", "d": "11/2016"}, {"title": "method expression called unlimited", "body": "vuejs version reproduction link steps reproduce according document described computedcachingvsmethods methods defined methods called template expression found method called unlimited something return page crash expected method called actually happening method called unlimited", "num": "4096", "d": "11/2016"}, {"title": "selection restore fails content nontext elements rendered via", "body": "problems something gets dirty trying make tiny rich text editor app use render content edited followings select text save selection focus receive user input get back content restore selection works content pure text ie something like content contains nontext elements like even simple fails nt think save restore function problems nontext elements tried remove add directly element works use pure text works use pure text fails use pure text works environments windows chrome code samples fullversion code actions performed select content element mouse ie one word letters click button click button html vhtml selection", "num": "4095", "d": "11/2016"}, {"title": "vue add support checkbox indeterminate state", "body": "vuejs version expected checkboxes binded vuejs three states true false indeterminate example binded checkbox value indeterminate checkbox indeterminate property set true actually happening checkboxes binded vuejs got two states true false", "num": "4094", "d": "11/2016"}, {"title": "vuejs nt render pushed value", "body": "indexjs var vm new vue data headers method onclicked function thisheaderspush indexhtml add expected clicked button add one empty element associated vmheaders element result first element added added clicked console explore vmheaders one empty element seem vuejs nt render value", "num": "4092", "d": "11/2016"}, {"title": "watch fired different property value changed", "body": "hi come across strange issue watch property called property default value empty object value property changed makes sense created js fiddle demonstrate", "num": "4090", "d": "11/2016"}, {"title": "error devtools disconncted page", "body": "vuejs version steps reproduce make component name module name used component debuging code javascript import notice componentsnoticevue export default name notice components notice actually happening chrome page crashes error devtools disconncted page page reloaded devtools automatically reconnect", "num": "4089", "d": "11/2016"}, {"title": "nt ajax", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4088", "d": "11/2016"}, {"title": "vuemin prop validator nt work", "body": "vuejs version reproduction link uncompressed compressed", "num": "4087", "d": "11/2016"}, {"title": "odd datadom syncing bug", "body": "reordering changes dom state reorder method nothing add logic reordering changes state dom goes previous state", "num": "4085", "d": "11/2016"}, {"title": "asynccomputed", "body": "tried vueasynccomputed incredibly awesome allows asynchronous computed properties among things makes incredibly easy source vue data ajax calls try convince feature good worthy including vue core instead relegated lowly plugin code sample example application uses two properties seamlessly interact server actions dispatched setting properties clump mine object called active flags dirty causing vue automatically recompute async properties depend property readwrite property containing current language property contains strings changing causes vue pull appropriate language file server update text page simple vue currentusername const ajax url opts gt windowfetch url opts response gt responsejson let app new vue el app data return active lang en asynccomputed return ajax lang thisactivelang currentuser return ajax loggedinuserjson credentials include also left code fetches current user server greet user name make current workarounds straightforward right requires conceiving idea async properties searching web see someone done using plugin really think extremely elegant intuitive baked vue core documented vue guide would encourage people think oh really great way get data server vue would simplify lot people spaghetti code would make world better place potential bugs edge cases help avoid many beginners even experts still fully committed using fluxarchitecture framework dealing horrendous legacy applications vueifying pieces go well established unidirectional data flow server client great idea simplifies state management reduces spaghetti code adding native support asynchronous properties would enable promotes simple declarative unidirectional servertoclient data flow advantage easily injected existing legacy code without learn new framework sure uses asynchronous computed properties dispatching longrunning task webworker comes mind used ajax example used", "num": "4083", "d": "11/2016"}, {"title": "rerender elements used arrayunshift", "body": "issue make rerender template unshift vuejs version steps reproduce open devtools find list ul click button rerender elements used unshift use push good add new element open devtools see rerender items reproduction link know unsift used array indices shifted angular rerender elements question since list lot data would nt expensive redraw elements", "num": "4082", "d": "11/2016"}, {"title": "geojson object", "body": "vuejs version reproduction link steps reproduce change values latitude longitude reactivity expected geolocation fields update data object actually happening array deals geolocation information mongodb geojson object reactive note following example fields reactives based internal array geolocation object note nome endere\u00e7o n\u00famero geolocaliza\u00e7\u00e3o long geolocaliza\u00e7\u00e3o lat geolocaliza\u00e7\u00e3o type", "num": "4081", "d": "11/2016"}, {"title": "using filters inside attributes vue", "body": "following work vue neither work vue use filters inside interpolations ca nt use interpolations attributes anymore way around", "num": "4080", "d": "11/2016"}, {"title": "installing standalone version via npm", "body": "vuejs version instructions install vue standalone version via npm clear nt seem possible think possible clear install vue standalone version via npm specailly rise popularity installing front end dependecies via npm", "num": "4079", "d": "11/2016"}, {"title": "using scoped css vhtml generated elements", "body": "first aware filed closed would like elaborate special case would actually needed tools actually accomplish along suggestions get done scenario first case trying style elements generated markdown parser would nt want styles particular component mess styles components would really prefer using css sample code javascript import marked marked export default name story data return value hello world methods marked value return marked value somecomponent color could used bem approaches believe vue feature intended bem much cleaner elegant source code least unfortunately would nt work since generated html element wo nt unique identifier attribute vue would append elements whilst generated css would append unique identifier style tools compare tool ever used using another view layer library css modules sample code stylus somecomponent color code would work properly without styling mess global styles even another component probably made someone else classname would nt still get style since css modules would replaceappend unique strings class name time would nt add anything vue scoped approach vue seems append unique attribute even element styles classes ids style would suggestion ie expected behavior vue scoped feature append unique datavidentifier root element component since vue requires one root element component believe best place append unique identifier attribute css transpiled way would append attribute selectors rather would prepend parent element example somecomponent color transpiled way would still behave way right plus side would still able style element added child element attribute would also mimic css modules works extra plus people coming libraries expecting certain behavior expected behavior well behavior makes sense would love know others would think obviously since believe us uses vue concerned behavior would fine someone point workaround matter without using bem requiring name classes funny cryptic class names thanks sorry advance ever worded sentences rude way", "num": "4078", "d": "11/2016"}, {"body": "filters work mustache tags vbind", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "11/2016"}, {"body": "valid svg tag created svg namespace still rendered visible want explicitly mark ignored use", "d": "11/2016"}, {"body": "people still use element deprecated", "d": "11/2016"}, {"body": "part elements php xdebug uses markup would avoided thanks", "d": "11/2016"}, {"body": "related commit maybe limited mouse events common usage keyboard events handling cc", "d": "11/2016"}, {"body": "primary reason allowing key events would break following although usage seems rare would still technically breaking change", "d": "11/2016"}, {"body": "may need document update doc", "d": "11/2016"}, {"body": "alternatively add deprecation warning user attempts define builtin modifier custom keycode alias", "d": "11/2016"}, {"body": "think would better considering common usage keyboad event try make update", "d": "11/2016"}, {"body": "allesan currently might need deal special key event handle like vue internally", "d": "11/2016"}, {"body": "nt noticed limitation accidentally modified events document adding keyboard events note meta key samples studied codes release commit list modifying document feel sorry", "d": "11/2016"}, {"body": "thanks mottokrosh looking current parses backgroundimage make pr fix", "d": "11/2016"}, {"body": "godawful report honest could please take time make usable reproduction actually demonstrates issue instead hoping someone", "d": "11/2016"}, {"body": "error report lacks basic information actual error messages thrown vue version node version webpack version version official cli template also pasted info actually runnable fails comply issue reporting guidelines might well add appropriate way open issues want issue respected please respect time maintainers well", "d": "11/2016"}, {"body": "thanks welovedesign seems set custome delimiters could please provide information issue", "d": "11/2016"}, {"body": "code using working without issue using ssr created windoweventsource windowesource new eventsource streamurl", "d": "11/2016"}, {"body": "sorry ca nt really tell much given current information especially error seems mostly code logic possible please provide reproduction", "d": "11/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests encourage use dedicated gitter forum ask questions discussion thanks", "d": "11/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests encourage use dedicated gitter forum ask questions discussion thanks", "d": "11/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests encourage use dedicated gitter forum ask questions discussion thanks one engineers alibaba biggest ecommerce company china working project called weex renders components written vueinspired syntax native mobile ui soon vueinspired become vuepowered started official collaboration make vue actual javascript runtime framework weex enable users write universal vue components reused across web ios android collaboration still early stages big focus us stay tuned yes native like reactnative nativescript cordova", "d": "11/2016"}, {"body": "seems bug", "d": "11/2016"}, {"body": "closing since source issue dependency bug framework", "d": "11/2016"}, {"body": "use class blockclass implement dynamic classes thank", "d": "11/2016"}, {"body": "sqal vue differentiate problem registered event handlers capturing mode removed mode meanwhile treat issue new feature rendering function enhancement since currently events like encouraged use rendering function seems necessity remove capturing listener virtual dom diff", "d": "11/2016"}, {"body": "kingmario yeah sorry deleted answer realized nt proper solution", "d": "11/2016"}, {"body": "sqal problem", "d": "11/2016"}, {"body": "fixed merging", "d": "11/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "11/2016"}, {"body": "listen events end rendering anything text plain element multiple nodes behavior unpredictable seems trying make slot container communicate slot child cases means two components coupled bydesign something like child listen event parent still open ideas improving ways slot parent child communicate events nt really sound like right direction", "d": "11/2016"}, {"body": "thanks callumacrae trace issue documentation issue", "d": "11/2016"}, {"body": "expecting binding updated composition intentional decision update state end composition languages like chinese people composing pinyin fill input lot useless text particularly important update state composition doubt makes big difference ux perspective", "d": "11/2016"}, {"body": "prefer updating composition korean understand design decision react opposite issue change event fires many times inputing chinese characters important change guide inform binding update composition guide default syncs input data event people wants update composition use event without", "d": "11/2016"}, {"body": "choyongjoon makes sense tracking thanks suggestion", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted gitter chat room forum stackoverflow thanks props mutated inside components", "d": "11/2016"}, {"body": "may related vueclasscomponent cc ktsn mon nov eduardo san martin morote lt notifications githubcom wrote please make sure read issue reporting guidelines opening new issues questions posted gitter chat room forum stackoverflow thanks props mutated inside components receiving subscribed thread reply email directly view github mute thread", "d": "11/2016"}, {"body": "hmm reproduce herozzsage please provide reproduction warning persists even actually nt mutate props", "d": "11/2016"}, {"body": "paragraph provide link also please file documentation issues vuejsvuejsorg repo instead", "d": "11/2016"}, {"body": "example complete guess use slice make sure working copy original array explained", "d": "11/2016"}, {"body": "sqal thank much slice worked like charm thank", "d": "11/2016"}, {"body": "exact flexibility thinking please read tl dr extracting smaller modules come cost nontrivial one may sound right please think carefully implications time nt see clear benefits even significant enough justify cost", "d": "11/2016"}, {"body": "fair enough overcome cost community main issue sharing dev environment across multiple repos anyways interested trying integrate cyclejs look like good fit think already found way simply use function within cyclejs interact vdom vue first thought substituting vdom vue would easier reason separate module", "d": "11/2016"}, {"body": "create components via", "d": "11/2016"}, {"body": "well say unlikely ever go level modularity vue simply designed type use case also using cyclejs vue together nt seem sound right cycle snabbdom custom dom driver sounds like right match simply want use rx vue vuerx allows write pretty cyclelike code", "d": "11/2016"}, {"body": "hi thanks filling issue seems strange define nested data initially within component ca nt add later shown since already defined initial nested data proper way setting property example would reason removing path support requires proper path parser support things like bloats code rare use case also really avoided simply using example", "d": "11/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "11/2016"}, {"body": "nt use runtime build time full build import vue vuedistvuejs since tools party libraries may import vue well may cause app load runtime standalone builds time lead errors warning official doc effectively means adding lien webpack config resolve vue full build change require vuedistvuejs vue adding render function entry component", "d": "11/2016"}, {"body": "condition branches moved array however codegen mutated array generating branches ended empty renamed avoided mutation cc defcc future avoid mutating ast codegen", "d": "11/2016"}, {"body": "ok got", "d": "11/2016"}, {"body": "try using npm issue belongs believe template using please see error persists open issue cleaner output possible thanks", "d": "11/2016"}, {"body": "posva sorry late installed although still problem resolved thanks much", "d": "11/2016"}, {"body": "jsfiddle link seems wrong", "d": "11/2016"}, {"body": "thu nov evan notifications githubcom wrote jsfiddle link seems wrong receiving authored thread reply email directly view github mute thread", "d": "11/2016"}, {"body": "wrong repository already told forum open issue githubcomvuejsvuejsorg", "d": "11/2016"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described", "d": "11/2016"}, {"body": "name literal never changes watcher called", "d": "11/2016"}, {"body": "would possible create littel repository us clone would helpful", "d": "11/2016"}, {"body": "reproduce exact setup please reopen actual reproduction", "d": "11/2016"}, {"body": "created repository successfully reproduced issue machine really weird ps use node nt know matters information", "d": "11/2016"}, {"body": "click function control adding attrs magically feature implemented", "d": "11/2016"}, {"body": "wow wow trapped inside particular way thinking missed obvious solution thank posva", "d": "11/2016"}, {"body": "pug expands", "d": "11/2016"}, {"body": "fact working correctly dom gets parsed browser literal emoji vue access thus vue sees literal emoji template outputs emoji also entity encoding change anything case script parsed browser thus vue sees literal template outputs entity encoding becomes literal would displayed parsed browser", "d": "11/2016"}, {"body": "component multiple root element vue requires exactly one root element component use development build minified build get error messages", "d": "11/2016"}, {"body": "working expected case need set whole object ready", "d": "11/2016"}, {"body": "provide repro", "d": "11/2016"}, {"body": "vue vue node pass pass node pass get warn fail travisci log log strange maybe jsdom problem", "d": "11/2016"}, {"body": "one thing noticed jsdom node instead node makes vue think node rather browser sure tests passing though adjusted browser detection could try building branch see tests would pass node", "d": "11/2016"}, {"body": "detection working great tests would passed node thanks evan", "d": "11/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "11/2016"}, {"body": "thanks known issue working", "d": "11/2016"}, {"body": "confirm warnings gone", "d": "11/2016"}, {"body": "vue packages version mismatch vue vueserverrenderer build vue publishing npm", "d": "11/2016"}, {"body": "see", "d": "11/2016"}, {"body": "version mismatch", "d": "11/2016"}, {"body": "version mistmatch error vue vuetemplatecompiler", "d": "11/2016"}, {"body": "ah saucelabs keeps disconnecting today push manual release missed part", "d": "11/2016"}, {"body": "version mismatch fix", "d": "11/2016"}, {"body": "working perfectly rock", "d": "11/2016"}, {"body": "elaborate bit case curious main case think subcomponents like menu gt menuitem although apply bem methodology situation stopping using css methodology like bem specific case", "d": "11/2016"}, {"body": "components one prefer passing props change component behavior third party component guess could see use case since ca nt edit source intuitively", "d": "11/2016"}, {"body": "lets take example menu list child menuitem components see code snippet different components use menuitem components page want style menuitems differently page using global styles scoped menu component parent also change style menu item page unless unique identifier used scope styles nothing stopping using bem use scoped styles solve problem vmenumain parent component import vmenuitem menuitem export default name vmenumain components vmenuitem data return menulist home menu location menu border solid black overwrite child component css menuitem background red important child component vmenuitem name export default name menuitem props name menuitem background blue", "d": "11/2016"}, {"body": "going example would also like avoid using rule vue allowed declare child component style want overwrite injected specific block child components style became important order parent component parent styles injected child component styles head document allow easily overwrite child components style styles overwrite child component", "d": "11/2016"}, {"body": "nothing stopping using bem use scoped styles solve problem bem scoped style solve different problems scoped allows style encapsulation bem methodology would preferred another example menumenuitem using classes override style works fine need use vue menuitemvue item color blue vue menuvue red item color red course add rule component using menu instead menu", "d": "11/2016"}, {"body": "yes example work first child component menuitem another component inside called ca nt modify style menu since contain menu unique id attribute vue style matches button component style thats declared button component angular using deep selector menu component scoped styles parent menu component buttoncolor selector matches top parent menu used", "d": "11/2016"}, {"body": "tested worked well curious different case solved css methodology", "d": "11/2016"}, {"body": "try components posted example components wanted style button component deeply nested component could nt overwrite scoped style root component maybe something wrong using scoped styles avoiding global styles purpose", "d": "11/2016"}, {"body": "agaripian yes tested", "d": "11/2016"}, {"body": "posva example working using component importing button root component example button imported component nested inside level component example", "d": "11/2016"}, {"body": "still works case adding without making sure specificity selector higher adding one class enough letting menu items aside interested different case solved css methodology", "d": "11/2016"}, {"body": "working example put together existing websites functionality converted vue components used global style root component work scoped styles uses global styles overwrite children overwrites styles overwrite background color overwrite background color adds unique id attribute selector component using manually added unique id attribute style selector solved problem well scoped properly also automatically makes selector specific avoid important see blue highlight want avoid using global styles truly scope css probably find another way adding specific css selector complicates development debugging", "d": "11/2016"}, {"body": "error console nt working", "d": "11/2016"}, {"body": "closed favour nt open new issue time please update existing one instead", "d": "11/2016"}, {"body": "image example error consolelog item delete whe delete item throws error", "d": "11/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "11/2016"}, {"body": "dont know live repro issue due especific env dev project tell options show", "d": "11/2016"}, {"body": "sorry need code look nt need include everything project minimum code needed reproduce error case sample list data procedures used remove item etc", "d": "11/2016"}, {"body": "ok post data structure methods data object title go shopping items object title go read object title go vacations inside items object item diet coke object item coke", "d": "11/2016"}, {"body": "delete method", "d": "11/2016"}, {"body": "view", "d": "11/2016"}, {"body": "im using laravel blade template vuejs vueresponse", "d": "11/2016"}, {"body": "sorry ca nt really deduce going snippets like show error expanded stack trace show line vue source code error thrown click line number right", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "deletes first time rerenders view delete second time throws error wil test complex data", "d": "11/2016"}, {"body": "chrome throws", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "krsrk something like jsfiddle something missing could update details", "d": "11/2016"}, {"body": "theory error means returned array contains value sure could possibly happen though", "d": "11/2016"}, {"body": "weird dont know data structure technologies used like laravel materialize css already run jsfiddle todos data works great project fails error im trying delete", "d": "11/2016"}, {"body": "notice delete items outside collapsible plugin materialize css doesnt throw error", "d": "11/2016"}, {"body": "inside collapsible plugin", "d": "11/2016"}, {"body": "diggin issue found trouble getting data plugin autocomplete", "d": "11/2016"}, {"body": "krsrk found trouble trouble second close issue", "d": "11/2016"}, {"body": "kind wrapped vue component doesnt work well adds data vue instance prop delete throws vnode undefined solution wrapp plugin", "d": "11/2016"}, {"body": "sorry seen template compiler regression issue guess could caught someone midst fixing", "d": "11/2016"}, {"body": "likely bump nested dependency anyway long make sure version fine", "d": "11/2016"}, {"body": "unfortunately guarantee compatibility arbitrary party frameworks regardless ca nt really help without information fails errors get", "d": "11/2016"}, {"body": "entirely sure cause likely vue observer converts object properties reactive ones ie ignores prototype properties technically data properties model objects properties able work", "d": "11/2016"}, {"body": "thanks went documentation found paragraph sometimes may want assign number properties existing object example using objectassign extend however new properties added object trigger changes cases create fresh object properties original object mixin object exactly problem close issue since see solve thanks", "d": "11/2016"}, {"body": "confirm exactly issue since update yesterday also happens", "d": "11/2016"}, {"body": "confirmed spending afternoon find bug get vue amp vuetemplatecompiler reverted order work", "d": "11/2016"}, {"body": "thanks looking", "d": "11/2016"}, {"body": "also seeing strange behavior updating dialog component working code working previous version export default name modal props size type string default small type type string default closeable type boolean default true isscroll type boolean default false data return id modal mathrandom showbackdrop false showmodal false mounted documentbodyclasslistadd dimmable methods clickcontent event eventstoppropagation open thisshowbackdrop true documentbodyclasslistadd dimmed settimeout gt thisshowmodal true settimeout gt elfirstchildstyletop documentbodyoffsetheight elfirstchildoffsetheight px close thisshowmodal false settimeout gt thisshowbackdrop false documentbodyclasslistremove dimmed closemodal thiscloseable return thisclose modal header background important scaleenteractive animation scalein scaleleaveactive animation scaleout fadeenteractive animation fadein fadeleaveactive animation fadeout", "d": "11/2016"}, {"body": "ansarizafar roll back previous vue version moment looking fixing release patch asap", "d": "11/2016"}, {"body": "posva already done thanks", "d": "11/2016"}, {"body": "closing favor since seem issue", "d": "11/2016"}, {"body": "seems problem looking", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "believe problem original author understand vue reactivity system one wants update property heshe must assign new value increment operator simply supported vue code problem author change side side effect getter bad practice thanks effort fix discussed pull request might introduce unpredictable breaking change user code roll migration guide breaking change", "d": "11/2016"}, {"body": "yes think scenario bad usage one use following code keep call anywhere else", "d": "11/2016"}, {"body": "stated elsewhere computed getters produce side effects", "d": "11/2016"}, {"body": "p sval empty vue inits app causes error update data mounted method displays correctly could take look lifecycle diagram", "d": "11/2016"}, {"body": "expected behavior template rendered first called p still empty array", "d": "11/2016"}, {"body": "update demo initial p created mounted nothing different expected behavior create new issues", "d": "11/2016"}, {"body": "thanks vue repository question react please go", "d": "11/2016"}, {"body": "herringtondarkholme issue nt care correct behavior vue may ignore issue", "d": "11/2016"}, {"body": "cc check almost virtual dom implementations issue", "d": "11/2016"}, {"body": "sorry misread link reopened would clearer paste direct link vue reproduction rather adding react entry point", "d": "11/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks course recursion scoped template", "d": "11/2016"}, {"body": "many thanks", "d": "11/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "11/2016"}, {"body": "future closing issues lack even basic information immediately please make sure actually read issue template opening one", "d": "11/2016"}, {"body": "standalone build browser build work expected", "d": "11/2016"}, {"body": "found error set delimiter main view components sorry mistake last question set delimiters components amp main vue thanks advance best regards max", "d": "11/2016"}, {"body": "use create new constructor desired options example historical context see", "d": "11/2016"}, {"body": "use global mixin", "d": "11/2016"}, {"body": "use global mixin would nt affect party components component expects default delimiter would nt break", "d": "11/2016"}, {"body": "yes would asked", "d": "11/2016"}, {"body": "thanks replies agree could lead potential issues external components another project example", "d": "11/2016"}, {"body": "updated fiddle need add von parent template", "d": "11/2016"}, {"body": "great thanks lot still think really clear guide new vue", "d": "11/2016"}, {"body": "close issue maybe could make improvement dynamic component docs follow", "d": "11/2016"}, {"body": "reproduce latest version think fixed ago likely using old version", "d": "11/2016"}, {"body": "use vue always concerned vue fix today update new still problem", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "11/2016"}, {"body": "put tages inside element mount main instance vue read content try use template main instance vue virtualdom treats scriptxtemplate like normal dom screws everthing simply moving template main element solved problem", "d": "11/2016"}, {"body": "reproduce latest version please upgrade vue version", "d": "11/2016"}, {"body": "hi thanks filling issue anything parent template case evaluated immediately parent scope accessing would throw error need add parent template", "d": "11/2016"}, {"body": "supports aot box means project scaffolded already using aot", "d": "11/2016"}, {"body": "thanks", "d": "11/2016"}, {"body": "possible mention documentation find reference", "d": "11/2016"}, {"body": "happens already specify type boolean closing supposing fr vue please tell otherwise reopen", "d": "11/2016"}, {"body": "thanks attrs fix", "d": "11/2016"}, {"body": "happens vueclasscomponent please open issue repo also please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem nessessary create repository us clone minimal reproduction repositories actual projects generally accepted thank", "d": "11/2016"}, {"body": "issue viewtemplatecompiler tho moved bug also caused vuerouter present obv move want tho", "d": "11/2016"}, {"body": "example repo", "d": "11/2016"}, {"body": "nt looked details suspect may handling properly nt see anything could cause problem cc ktsn", "d": "11/2016"}, {"body": "look", "d": "11/2016"}, {"body": "\u7528\u4e00\u4e2a function", "d": "11/2016"}, {"body": "\u6539\u6210initprops", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "yep supported next release actually depends changes core", "d": "11/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "11/2016"}, {"body": "closing due inactivity", "d": "11/2016"}, {"body": "hi thanks filling issue never using register events callback contains reference component instance prevents destroyed vue callback run instances including ones supposed destroyed", "d": "11/2016"}, {"body": "fnlctrl first thank still ca nt understand according answer component data include velse component change use position component data changed new demo demo addition broadcast something child component parent issue", "d": "11/2016"}, {"body": "according answer component data include velse component change use parent said said callback holds reference component instance prevent destroyed vue cause memory leak see fiddle swap components twice change data notice callback run one time supposedtobedestroyed components addition broadcast something use event hub use vuex usage questions please use dedicated gitter forum thanks", "d": "11/2016"}, {"body": "\u9519\u8bef\u4e0d\u662f\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\u5417 vue\u548cvuetemplatecompiler\u7684\u7248\u672c\u4e0d\u5339\u914d \u628a\u8fd9\u4e24\u4e2a\u7248\u672c\u6539\u6210\u4e00\u6837", "d": "11/2016"}, {"body": "\u95ee\u9898\u662f\u6211\u6ca1\u4f7f\u7528\u8fd9\u4e2a\u53ebvuetemplatecompiler\u7684\u4e1c\u897f \u540c\u6837\u7684\u7248\u672c vuetemplatecompiler", "d": "11/2016"}, {"body": "using vueloader vueify reinstalling bump vuetemplatecompiler latest", "d": "11/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "11/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "11/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "11/2016"}, {"body": "got top level function click click element becoming rendered top level click invoked misspelling function name unfortunately vue throwing name missing function reason could find looking wrong place maybe improved somehow", "d": "11/2016"}, {"body": "closing since original issue resolved afaik vue warn von expression references method exist using browser supports proxy hard improve without seeing real reproduction issue", "d": "11/2016"}, {"body": "see errors console works fine safari even ie nt safari test anyway please open corresponding issue console information instead", "d": "11/2016"}, {"body": "sounds good", "d": "11/2016"}, {"body": "sure right solution problem maybe provide jsfiddle better illustrate trying achieve vue nt exactly vue nt need vue reactivity system ensures right components get rerendered state changes think react already implemented", "d": "11/2016"}, {"body": "thanks reply put together jsfiddle contains two components first shows contenteditable updating caret jump html changes state vue rerender component second contenteditable component contains html editing displays behavior described dom refreshes caret jumps beginning right vue correctly determining components rerender rerendering contenteditable div state changes however use case need option stop automated behavior would like state continue updating component wait rerender want refresh hook would useful like vue automates rendering correct components believe makes sense option circumvent behavior desired believe exposing optionhook would open vue use contenteditable provide potential performance boosts solve headache", "d": "11/2016"}, {"body": "hi vonce might helpful still need fine grained control rendition one computed getter might helpful example updates cursor contenteditable general cases computed properties gets selectively updated might enough implementing case conceive needs many interlaced state changes manually implementing computed cumbersome wonder cases common", "d": "11/2016"}, {"body": "herringtondarkholme thanks direction correct indeed resolve issue use case original jsfiddle updated work correctly using older versions vue vuex created another jsfiddle vue vuex demonstrates updated functionality suggestion computed property makes sense intended display content separately template however part jsfiddle example purposes still believe option would necessary contenteditable component also acts display basically anything acts text editor solution works long ok rerendering component however could see use cases one might wish rerender component currently working adding watcher trigger component rerender success would still interested seeing hook macro scale option end lifecycle point without causing errors", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks directives objects functions generally organize normal javascript modules import register entry file", "d": "11/2016"}, {"body": "shortcut read guide really helpful", "d": "11/2016"}, {"body": "yeah realised sorry night mistake", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "thanks supporting vue rather gitter might ask bing google mocks event mocked event supposed stand pressing enter key vue instance test execute callback", "d": "11/2016"}, {"body": "mean nt get", "d": "11/2016"}, {"body": "test name", "d": "11/2016"}, {"body": "give example would actually extend events passed function real interesting part method passed bound depending modifiers", "d": "11/2016"}, {"body": "posva see von docs component modifiers contain modifier case produces bindings native events work way component events simply modify patch see example probably decide pass modifier component modifiers processing step", "d": "11/2016"}, {"body": "fixed example fiddle", "d": "11/2016"}, {"body": "sorry nt get needing modifiers information code snippet", "d": "11/2016"}, {"body": "posva snippet shows patch component event without changing something vue way get modifier component take look first message get example feature used", "d": "11/2016"}, {"body": "makes fundamentally different", "d": "11/2016"}, {"body": "hmm right probably nothing looks different default syntax definitely used define handler component modifier silently ignored event without modifier fired may pass raw string modifier eg component event native event warn dev mode dot notation supported component events think", "d": "11/2016"}, {"body": "computed style change data changed vue rerender app according strategies maybe could apply diff nodes generated vhtml rather reset", "d": "11/2016"}, {"body": "expected alias want patch behavior write markup vue templates wontfix imo already escape hatch use absolute patching content involves way many edge cases little gain", "d": "11/2016"}, {"body": "actually case overwritten cache previous innerhtml avoid setting stays", "d": "11/2016"}, {"body": "could check oldprop value new one make patch", "d": "11/2016"}, {"body": "sounds good however undefined valid class name add check impossible add undefined class maybe better avoid userland", "d": "11/2016"}, {"body": "think better left userland really way tell whether really want workaround complicated either", "d": "11/2016"}, {"body": "problem specifically key string undefined still work agree fix simple might worth implementing anyway since might pop cssmodules users future", "d": "11/2016"}, {"body": "problem comouted property names vue mechanism js language feature result evaluating code always going end string undefined vue even anything", "d": "11/2016"}, {"body": "shorthand", "d": "11/2016"}, {"body": "sorry mean okay kind like feature request xd fnlctrl", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "11/2016"}, {"body": "use functions html columncolumn columnfield item", "d": "11/2016"}, {"body": "thanks example justnobody", "d": "11/2016"}, {"body": "sounds good thanks updated fiddle vue", "d": "11/2016"}, {"body": "element special semantics used vue templates eg used slot container use case", "d": "11/2016"}, {"body": "wanted output html without wrapping extra div structure something like html", "d": "11/2016"}, {"body": "unfortunately supported must used normal element alias nt make sense abstract container like", "d": "11/2016"}, {"body": "please specific think work like use case running needs single title nt qualify feature request", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "issue activateddeactivated called components registered router children components benefit activateddeactivated lifecycle hooks think next releases", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "kinglion \u65b9\u6cd5", "d": "11/2016"}, {"body": "nothinggift", "d": "11/2016"}, {"body": "key special attribute along ref slot use prop names however think vue give warning try declare", "d": "11/2016"}, {"body": "simplesmiler thanks", "d": "11/2016"}, {"body": "take example props data pretend part data every component assume access props data using thispropertyname like normal scope data props update every change variable even vuedevtools update new value dom render changes guess happen props watched properties solution found assign props real watched data property mounted method employee descripcion fecha de inicio fecha de fin generar boleta index export default props propstickets data function return tickets ticket description startedat finishedat employeeid employee computed methods retriveemployee response gt thisemployee responsebody response gt consolelog responsebody generateticket response gt thisticketspush responsebody response gt consolelog responsebody mounted thistickets thispropstickets", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted gitter chat room forum stackoverflow thanks", "d": "11/2016"}, {"body": "thanks inventtileonardo expected behavior vif vif directive checks expression conditional rendering vshow current behavior toggles styledisplay property maybe improvement", "d": "11/2016"}, {"body": "reason need class element time want element visibility controlled let job nt see point class", "d": "11/2016"}, {"body": "bit confused thinking behavior vshow equivalent css ensure elements show initial load using libs vue migrating vue right", "d": "11/2016"}, {"body": "depending different elements could different default properly possible value simply set empty value value true also take account inline display properties like use case probably use vcloak instead gets removed vue finishes rendering", "d": "11/2016"}, {"body": "want keep switchedout components memory preserve state avoid rerendering wrap dynamic component element according docs expected behavior keepalive", "d": "11/2016"}, {"body": "understand state preserved like data component feels bit unintuitive addition dynamically bound props breaks circumstances edit expected behavior nt least away force dynamically bound props update keptalive component appears", "d": "11/2016"}, {"body": "looks like bug expect component updated switched", "d": "11/2016"}, {"body": "thanks really quick response fix", "d": "11/2016"}, {"body": "please open issue repo instead", "d": "11/2016"}, {"body": "found mainvue requires components code throw exceptions components correctlly rendered make code run mainvue requires components thank yyx", "d": "11/2016"}, {"body": "thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "11/2016"}, {"body": "selected bound property instead attribute tags nt selected attribute would want bind styling purposes using class instead", "d": "11/2016"}, {"body": "indeed styling purposes using class attributes styled css sometimes useful classes", "d": "11/2016"}, {"body": "checked patch release fixed thanks much", "d": "11/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "11/2016"}, {"body": "fiddle nt working likely due triggering jquery change event instead real event", "d": "11/2016"}, {"body": "use bootstrap datepicker vue like", "d": "11/2016"}, {"body": "wontfix although catered nt think makes sense us cater behavior arbitrary party libraries especially workaround like xelia", "d": "11/2016"}, {"body": "sorry tack onto closed issue context related using optimal way target element within using something similar like react example", "d": "11/2016"}, {"body": "granda ref exactly purpose sufficient time always", "d": "11/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "11/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests please use dedicated gitter forum ask questions thanks", "d": "11/2016"}, {"body": "hi thanks filling issue event nt bubble vue manually reemit way use vuex event hub pattern may also help case", "d": "11/2016"}, {"body": "might related sure try adding key property section online repro", "d": "11/2016"}, {"body": "herringtondarkholme definitely related still little annoying deal adding tag worked would nice mention something docs diffing", "d": "11/2016"}, {"body": "igdexter would nice mention something docs diffing vuejsvuejsorg", "d": "11/2016"}, {"body": "linusborg cool thanks quick response quite shock staging environment today", "d": "11/2016"}, {"body": "quite shock staging environment today intended breaking change mind generally expected behaviour many situations already mentioned documentation still lacking assume worked accidentally recent fixes bugs amongst things related handling style class bindings might changed", "d": "11/2016"}, {"body": "linusborg wonder whether correct behavior example diffed solely vdom style attribute considered vdom construct comparison consider example inner text class updated class merged style merged note issue different since lifecycle managed virtual dom also different since inlinetemplate speaking implementation different slot vnode representation cc defcc", "d": "11/2016"}, {"body": "linusborg guessing improvement preserve static inline styles dynamic inline styles per made issue apparent wondering correct behavior comparing old node new node applying necessary style changes code seems merging reusing node fine think keep styles active node needs represented dom edited op light new info", "d": "11/2016"}, {"body": "hm might right", "d": "11/2016"}, {"body": "seems something wrong static style style binding merge looking", "d": "11/2016"}, {"body": "style holds style binding removed next render static style style binding removed reusing node", "d": "11/2016"}, {"body": "make pr fix", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "nt seem work", "d": "11/2016"}, {"body": "also personally like idea directive added kind component also directive could listen focus events initiated component interfere native focus events perhaps custom name distinguish", "d": "11/2016"}, {"body": "seems working focus custom input button clicked", "d": "11/2016"}, {"body": "ok must done something wrong works feel sufficient work around think directive would helpful", "d": "11/2016"}, {"body": "sure directive would help situation think calling method ref seems straightforward enough closing feel free expand think would help", "d": "11/2016"}, {"body": "basically would provide standardized way setting focus adding every methods property nt huge would add idea might look parent could think main benefits would would bit intuitive since native inputs already functionality provides standard way way using someone else component since official directive may likely add functionality", "d": "11/2016"}, {"body": "nt think want directive could component mixin though", "d": "11/2016"}, {"body": "added suggestion top head could possibly taking far multiple vfocus directives could also used place tabindex would encourage component creators add support things like tab navigation thinking mainly terms writing components shareable reusable since feel component authors nt going thinking adding support focus events tab navigation maybe something like could help guiding authors create accessible components well", "d": "11/2016"}, {"body": "actually even nt control party component still", "d": "11/2016"}, {"body": "yes could dependent first input one want eg nt add checkbox hidden input first markup sorry going long maybe give consideration vue could promote fully functional accessible components box great accessibility anything could help remember add better support think good thing", "d": "11/2016"}, {"body": "regarding focus reactive attribute give vuefocus whirl components would pass prop use directive within component", "d": "11/2016"}, {"body": "simplesmiler pretty cool try nov denis karabaza notifications githubcom wrote regarding focus reactive prop give vuefocus whirl components would pass focused prop use directive within component receiving mentionedreply email directly view github mute thread", "d": "11/2016"}, {"body": "using vue nt loading user content vue place curly braces inside data property output problems", "d": "11/2016"}, {"body": "content loaded rendered serverside using laravel blade templates single page application built entirely js nt even load data using js merely using vue awesome components optimize user experience clientside", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "feel like dumbass spent hours looking around docs thank", "d": "11/2016"}, {"body": "ugh incrementing number nexttick fixes closing", "d": "11/2016"}, {"body": "thanks maksimskomorokh expected behavior component list data changed make assignment list inside another function", "d": "11/2016"}, {"body": "nt anything local variable binding reference", "d": "11/2016"}, {"body": "interesting delete item list updated item removed", "d": "11/2016"}, {"body": "well may scope new javascript looks like call simply foo return functionmethod string called really belong connection instance anymore works perhaps handled internally hood vue proved fiddle call alerts function assign foohello bar call bar see returns undefined could maybe solved conditionally check exists vue instance call naive example would needed handled hood vuejs leave someone else answer conclude guess would need put parenthesis need able call extended function vue object", "d": "11/2016"}, {"body": "deohnas thanks new javascript example perfectly clear think using object method event handler terrible way", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "\u800c\u662f\u6837\u5f0f\u8868\u4e2d\u52a0\u4e86 webkituserselect none", "d": "11/2016"}, {"body": "scopid implementation detail documented official doc either wonder whether rely private api always augment typescript definitioin though", "d": "11/2016"}, {"body": "thank augment definition resolved issue us agreed ideal use private api would great find better way precompile templates include component jsts us mainly want jsts code leading prevent mixed imports js vue template js", "d": "11/2016"}, {"body": "closing since issue resolved userland yeah probably nt want expose private apis official type definitions", "d": "11/2016"}, {"body": "issue webpacksimple steps reproduce following issue", "d": "11/2016"}, {"body": "somewhat difficult workaround bug use old version easily npm resolves vueify vuetemplatecompiler using always even want use different version need add yarn shrinkwrap project", "d": "11/2016"}, {"body": "ernestoalejo works well computer according steps anything else missed", "d": "11/2016"}, {"body": "workaround parse requires browserify flag webpack option fix next release", "d": "11/2016"}, {"body": "issue using jspm vue rolling back vue solves", "d": "11/2016"}, {"body": "unrelated tried quick inside babel code says file filtered correctly stills throws error though files pass filter probably option consider", "d": "11/2016"}, {"body": "workaround webpack add", "d": "11/2016"}, {"body": "revertedfixed", "d": "11/2016"}, {"body": "temporary workaround js export default props subject data return subjectproxy thissubject computed selectedsubject get return thissubjectproxy set value thissubjectproxy value return", "d": "11/2016"}, {"body": "thanks guidobouman take look", "d": "11/2016"}, {"body": "key dynamic components accordingly unfortunately docs clear currently expected behaviour stated somewhere else switching elements toggling elements tag name must tell vue distinct elements giving unique key attributes otherwise vue compiler replace content element efficiency works similary dynamic components chrisvfritz think better place docs mention expand", "d": "11/2016"}, {"body": "linusborg thanks getting back work even using think explained conditionality section docs", "d": "11/2016"}, {"body": "api reference section adding reference addition guide would make even clearer", "d": "11/2016"}, {"body": "guidobouman yep working thanks suggestion", "d": "11/2016"}, {"body": "discussion docs improvement topic vuejsvuejsorg", "d": "11/2016"}, {"body": "confirmed adding input reproduce problem problem always changing component means every component changed inputing component identifier list rendering vue need rerender component identity changed focus lost please read related doc fixed version", "d": "11/2016"}, {"body": "totally missed key prop good eye herringtondarkholme thanks", "d": "11/2016"}, {"body": "thank herringtondarkholme missed obviously", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "hi please open issue vuerouter repo reproduction jsfiddlecodepenetc thanks", "d": "11/2016"}, {"body": "happens browser mangles casing vue chance thing modifier introduced address issue appear made way another semiworkaround template comes string dom vue able process browser", "d": "11/2016"}, {"body": "thanks quick reply workaround", "d": "11/2016"}, {"body": "back still recommended use string templates", "d": "11/2016"}, {"body": "vue input \u6846\u7684 input", "d": "11/2016"}, {"body": "width height strings", "d": "11/2016"}, {"body": "stuq \u5927\u795e\u76f4\u64ad\u4f1a \u8fd8\u6709\u90a3\u4e2a\u77e5\u4e4e live", "d": "11/2016"}, {"body": "nt need worry templates template basically render function vue component cases defined plain object basically modifypatch options object enhancer function alternatively vue plugins apply global mixin injects lifecycle hooks components lifecycle hooks check custom options field eg js const greedplugin vue gt vuemixin beforecreate optionsgreed initialize stuff vueuse greedplugin new vue greed queries mutations consult vuerx implemented way closing since question continue discussion thread", "d": "11/2016"}, {"body": "thank much get started tomorrow morning", "d": "11/2016"}, {"body": "thanks suggestion moved", "d": "11/2016"}, {"body": "thank evan apologies nt realize repo site tue nov evan notifications githubcom wrote closed receiving authored thread reply email directly view github mute thread", "d": "11/2016"}, {"body": "expected behavior vdom diffing finds component tree position reuses existing component instance want fully teardown recreate component give different keys", "d": "11/2016"}, {"body": "hi thanks filling issue supposed return already created object props shared across instances", "d": "11/2016"}, {"body": "fnlctrl", "d": "11/2016"}, {"body": "already fixed fiddle using version", "d": "11/2016"}, {"body": "uncaught referenceerror defined vuejs anonymous function vuejs anonymous function vuejs anonymous function vuejs", "d": "11/2016"}, {"body": "hi thanks filling issue please provide minimum example cause problem jsfiddle github repo link provided minified bundled code could nt help", "d": "11/2016"}, {"body": "reproduce android wechat browser vue make sure using correct build closing evidence caused vue please reopen follow information", "d": "11/2016"}, {"body": "bryonliu also problem maybe devtool option webpack get error option contains eval try removing eval option configuration", "d": "11/2016"}, {"body": "something wrong template", "d": "11/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests encourage use dedicated gitter forum ask questions discussion thanks use render functions access children via", "d": "11/2016"}, {"body": "hi thanks filling issue vue keep static classes templates asis please define default class vue data", "d": "11/2016"}, {"body": "mean please define default class vue data nt see going fix problem active class button vue loaded yet still correct logic vue loaded", "d": "11/2016"}, {"body": "others stumble upon issue fixed little nasty css workaround see", "d": "11/2016"}, {"body": "class attribute staticclass class binding class merged together runtime", "d": "11/2016"}, {"body": "\u8de8\u9875\u9762\u4f20\u53c2\u662f\u6846\u67b6\u65e0\u5173\u7684", "d": "11/2016"}, {"body": "hi thanks filling issue mean copy korean characters input field press enter key method called please check custom ime programs interfering keyboard input", "d": "11/2016"}, {"body": "fnlctrl right changed thanks", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "hi thanks filling issue simply use emit templates", "d": "11/2016"}, {"body": "found used root element visible typeof visible var app vueextend new app el app data return visible false template working", "d": "11/2016"}, {"body": "already fixed pr", "d": "11/2016"}, {"body": "seems let go", "d": "11/2016"}, {"body": "throw typeerror array properties think better merge elems properties array", "d": "11/2016"}, {"body": "seems bug vuecharts library never called arrays means library somehow passing array option supported", "d": "11/2016"}, {"body": "vuecharts library pass array called recursively function called arrays data include array properties another example without vuecharts think copy properties object prototype object design", "d": "11/2016"}, {"body": "indeed bug usage incorrect declaring prop data property using key fix see warning message telling", "d": "11/2016"}, {"body": "maybe de maybe ugly useful course tell issue ask question gitter", "d": "11/2016"}, {"body": "thanks daryl could use computed property way jounqin mentioned", "d": "11/2016"}, {"body": "using extraction way nt styles inlined strings javascript payloadblocking factor btw nt think large css blocks downloading assets blocks rendering concern solved code splitting fallback loader extract text plugin additional style chunks would inserted dynamically async chunks loaded moment best practices ssr code splitting something still needs worked updating demo future settle good solution", "d": "11/2016"}, {"body": "thanks reply actually project large spa based vue code splitting neccesary best practice every page vue file downloaded demand using code splitting works well browser stylesheets parts vue file compiled js file ssr nt first screen render blink styles currently extract styles pages one large css file include html file solve problem", "d": "11/2016"}, {"body": "seems regression working fine defcc", "d": "11/2016"}, {"body": "thanks looking bug caused model parser fix soon", "d": "11/2016"}, {"body": "using hyphen object key key put quotes javascript restriction vue", "d": "11/2016"}, {"body": "hi thanks filling issue javascript code nt executed probably browser using nt support please see fiddle working still get errors changing please switch nonminified version vue post error log thanks", "d": "11/2016"}, {"body": "fnlctrl used const page let errors chrome shows everything ok even switch mobile inspect iphone ipad reality nt work", "d": "11/2016"}, {"body": "please use nonminified version vue since minified one wo nt log errors runtime also side note using inspect ios safari chrome please try using osx safari inspect ios safari", "d": "11/2016"}, {"body": "added regular version vue installed ioswebkitdebugproxy says need plug phone computer idea using linux btw", "d": "11/2016"}, {"body": "ran fiddle ios chromesafari working fine", "d": "11/2016"}, {"body": "chrome mobile emulator emulates screen resolution real environment ios safari really inspecting web pages iphoneipad problem fiddle think usage nt work ios please try changing", "d": "11/2016"}, {"body": "switched var works iphone tested browserstack nt work iphone lumia devices think iphone uses old ios version lumia win sure problem", "d": "11/2016"}, {"body": "ios render issue caused vue please check application code used javascript features nt supported target environments believe vue issue please follow actual error logs thanks", "d": "11/2016"}, {"body": "thanks helping", "d": "11/2016"}, {"body": "thanks reporting meantime workaround would move inside component", "d": "11/2016"}, {"body": "elseblock walked markstaticroots func make pr fix", "d": "11/2016"}, {"body": "big bunch code please isolate minimal code jsfiddle", "d": "11/2016"}, {"body": "posva compiled code generated maybe reproduce jsfiddle", "d": "11/2016"}, {"body": "fixed reinstall get latest fix", "d": "11/2016"}, {"body": "jounqin ooh see included much code xd last line issue important one", "d": "11/2016"}, {"body": "posva sorry", "d": "11/2016"}, {"body": "jounqin nt worry also bit faulty less code include easier us help", "d": "11/2016"}, {"body": "maybe hook time component resolved currently achieve using mixin emitting events use cases testing thinking lazy loadin components allowing parent component know whether loaded display different content waiting", "d": "11/2016"}, {"body": "posva thanks response currently using mixin workaround uses different approach js export default beforecreate function const promises js async done gt const vm new maincomponent ready expect elqueryselector nottobenull dirty going try different approaches including main purpose ability know async component loadedresolved main component includes async ones know loaded resolved difficult test main component create additional behavior instance showhide waiting content need create additional wrappersmixins would nice functionality box", "d": "11/2016"}, {"body": "posva one async component easy handle one async components difficult", "d": "11/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests encourage use dedicated gitter forum ask questions discussion thanks", "d": "11/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "11/2016"}, {"body": "yarn nt need changes vue part use", "d": "11/2016"}, {"body": "nice", "d": "11/2016"}, {"body": "prefer explicit ways especially depends upon another condition rather create another directive handle syntactic sugar", "d": "11/2016"}, {"body": "posva vote", "d": "11/2016"}, {"body": "gbezyuk however suggesting create separate package imo benefits enough include core", "d": "11/2016"}, {"body": "posva well right sorta raise idea discussion agree something really important currently tasks maybe somebody else would like implement feature", "d": "11/2016"}, {"body": "would rather use velse vif vempty velse vfor easy understand keep simple stupid", "d": "11/2016"}, {"body": "agree dsonet fond idea introducing special behavior directives simply dedicated directive may save keystrokes cost explicitness requires backtrack corresponding sure", "d": "11/2016"}, {"body": "like idea also som reservations considering explicitness behaviour two different results directive used vif velse would insertremove element used vshow velse would showhide element since vif vshow operate fundamentally different would essence need two implementations mirror behaviour conjunction proposal would different directives look order understand particular situation oh vshow determines weither oh vfor actually", "d": "11/2016"}, {"body": "obviously true nt seem real issue always continuation previously defined elementdirective anyway could use different name case come better one", "d": "11/2016"}, {"body": "removed vue could nt find thread discussed cost maintaining extra logic enough simple syntactic sugar vs maybe blakenewman recall bit better reasons", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks ca nt", "d": "11/2016"}, {"body": "nt also written somewhere close filters instead migration", "d": "11/2016"}, {"body": "nt think belongs migration absent vue docs nt exist anymore", "d": "11/2016"}, {"body": "havent used filters vue im still pretty new filters used writing binds thats confusing point view would expect also could use binds everywhere else maybe thats properly reason working", "d": "11/2016"}, {"body": "looks pretty clear reason bindings content jslike filters common practice interpolation", "d": "11/2016"}, {"body": "mikeralphson thanks filing issue warning appear using compilerinlcuded build need reproduction repo please", "d": "11/2016"}, {"body": "linusborg thank prompt response issue updated repro fiddle see console output run", "d": "11/2016"}, {"body": "mikeralphson logs", "d": "11/2016"}, {"body": "linusborg posva apologies nt realise fiddle autosave updated", "d": "11/2016"}, {"body": "mikeralphson sorry nt updated link still points basic starter code", "d": "11/2016"}, {"body": "linusborg sincere apologies jsfiddle nt give updated link created account please try", "d": "11/2016"}, {"body": "thanks seems indeed bug edit label improvement bug sense vue functionality broken bettercorrect warning would improve developer experience though also edited issues title reflect intended improvement", "d": "11/2016"}, {"body": "please read doc prop emit event try", "d": "11/2016"}, {"body": "thanks answer", "d": "11/2016"}, {"body": "hello skykilla thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "11/2016"}, {"body": "however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide feature request exact api method way clone", "d": "11/2016"}, {"body": "sorry twosentence issue could easily mistaken question asked vue must missed post forum please refer hint answer might clone vnodes slot render function actually want request feature please open another issue describe general usecase want wo nt digg loc jsfiddle find exactly feature look like", "d": "11/2016"}, {"body": "please refer discussion update thanks patien\u0441e good day", "d": "11/2016"}, {"body": "could add unique key list item take look list rendering doc updated fiddle", "d": "11/2016"}, {"body": "sortable works dom place vue needs hint keep track dom elements", "d": "11/2016"}, {"body": "hi thanks filling issue nt make difference yes author wanted pass value ing nt get full dom event event serves interface full dom events guaranteed available directly listening event native", "d": "11/2016"}, {"body": "work listen native input event root element component even div input element able catch event bubbles unless author component called never", "d": "11/2016"}, {"body": "kristianmandrup docs fully updated parts still changed please open corresponding issue vuejsorg repo", "d": "11/2016"}, {"body": "fnlctrl noticed much looked code filed issue made pr however trying change nt work either tried linusborg approach also native event even triggered attempt fix still getting nowhere still many inconsistencies docs post issues docs future html choicelabel export default props prompt data return mounted watch promptchoices newchoices old gt consolelog newchoices newchoices methods onchosen e consolelog e", "d": "11/2016"}, {"body": "create method", "d": "11/2016"}, {"body": "thanks", "d": "11/2016"}, {"body": "hello kwalker thank filing issue please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem thank", "d": "11/2016"}, {"body": "ok linusborg changed trouble give answer thank", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted gitter chat room forum stackoverflow thanks find useful", "d": "11/2016"}, {"body": "thanks post", "d": "11/2016"}, {"body": "actually looking lifecycle hooks like hook nt lifecycle hook triggered ing component problem detached hook called parent component children vm nt anymore therefore hook called first level children detached component everything else vm null foreach called parent", "d": "11/2016"}, {"body": "thanks reply think solved problem perfectly", "d": "11/2016"}, {"body": "hi thanks filling issue seems problem event nt fired loses focus browser behavior ca nt really help workaround simple explicitly bind listener immediately fired whenever user types", "d": "11/2016"}, {"body": "fnlctrl thanks help definitely let work around something nt understand even necessary value thing updated trigger update values component words seems function affecting one variable worry updating thought reactivity supposed efficiently update variables changed case", "d": "11/2016"}, {"body": "simply put event fired temporary state different app overridden app state render function called triggered update render function called whenever anything reactive changed", "d": "11/2016"}, {"body": "notice allowing user create dom state typing input oneway bound value disconnected underlying application state whenever component updates application state force dom state sync throw away temporary input state precisely control want need represent temporary state application state creating separate local property use", "d": "11/2016"}, {"body": "think may need follow react take warning usage freezing input altogether", "d": "11/2016"}, {"body": "thank response spent several hours trying figure happening perhaps think frameworks tend naturally black box combined misconception render function loss retrospect makes much sense happening work around running edge cases would nice type error warning thrown alert developer happening know nt easy solution since edge cases definition something run time", "d": "11/2016"}, {"body": "yeah likely add warning oneway value bind future", "d": "11/2016"}, {"body": "seems fixed issue", "d": "11/2016"}, {"body": "one issue vueminjs getting included build", "d": "11/2016"}, {"body": "component required one root element looks like actually want two different components like wo nt needed one root element dynamic use actual component used whatever", "d": "11/2016"}, {"body": "crswll views one component different component therefore way best two element root works plunker", "d": "11/2016"}, {"body": "closing ita duplicate quote evan problem without code analysis vif expressions fact near impossible depends component runtime state way tell whether really return one element get around either using dynamic component turning conditional branches components use render function instead", "d": "11/2016"}, {"body": "might improved future compile everything warn runtime root node returned", "d": "11/2016"}, {"body": "thx wait", "d": "11/2016"}, {"body": "wait", "d": "11/2016"}, {"body": "expected behavior according doc venter removed one frame venteractive removed transitionanimation finishes two classes applied time defined applied time enteractive wins css rule kept begin end transition course fixed", "d": "11/2016"}, {"body": "something similar roadmap scoped slots doubt includes loop scoping fyi already achieve render functions functions return vdom props", "d": "11/2016"}, {"body": "tracked use inlinetemplate hacks", "d": "11/2016"}, {"body": "herringtondarkholme hack work updated latest version", "d": "11/2016"}, {"body": "please file issue related repo", "d": "11/2016"}, {"body": "herringtondarkholme sorry works bug", "d": "11/2016"}, {"body": "herringtondarkholme use voutlet amp vtemplate recursive treenode root node get rendered template vue datatitle", "d": "11/2016"}, {"body": "ask question original repo vue issue list bug report feature request thanks", "d": "11/2016"}, {"body": "closing implemented scoped slots", "d": "11/2016"}, {"body": "thanks lepture simliar could define b c data workaround updated fiddle", "d": "11/2016"}, {"body": "technically expected behavior due way templates compiled render functions essentially passing fresh array every time parent component rerenders thus triggering child props considered changed finally causing computed property computed happens use inline literal values props template defcc suggested would recalculation remains exact array across rerenders prop always static ie care initial value intend mutate prop set local data variable finally apart computed called child rerender ux behavior correct downside probably unnecessary computation practice fairly cheap would nt worry much unless ends causing noticeable performance issues", "d": "11/2016"}, {"body": "see link u use question", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted gitter chat room forum stackoverflow thanks", "d": "11/2016"}, {"body": "binding basically creating oneway bind makes value input box constant binding default value either using make value sync input use create binding default value", "d": "11/2016"}, {"body": "neither solutions work nt default values part simple example perhaps gone detail placing component set inside component restrictions mutating props kick following example linus borg gave page javascript parent child export default props value special prop received vmodel example closer trying imagine instead packaged component props instead data variables problem like said dynamically update quicklist bottom component resets text input would completely frustrating enduser making whole thing unusable feels like rock hard place since supposed mutate props vmodel yet telling use vmodel", "d": "11/2016"}, {"body": "value inside contain parens need wrap quotes", "d": "11/2016"}, {"body": "comments make sense repro would make things faster someone else trying isolate code took look could nt find anything wrong may get help forums also please follow issue reporting guidelines next time", "d": "11/2016"}, {"body": "repo think everything anything wrong let know tried forums glitter luck unfortunately", "d": "11/2016"}, {"body": "repro repo", "d": "11/2016"}, {"body": "ah haha ca nt first fall unable recreate jsfiddle etc afraid quite new vue using single file component method far repo provide working example least need click remove button understand whole npm install thing unfortunately", "d": "11/2016"}, {"body": "nt others fallen give shot", "d": "11/2016"}, {"body": "evu tried works nicely edits got error red message appears top problem seems appear weird character appvue template line looks like simple tab nt make sense look deeper edit actually happens second note edit strange behaviour hot reload happens actual element removed somehow guess noterepo event bubbling may want take look vuex looks like may fit better way using events", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks looks like piping stream response", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "11/2016"}, {"body": "ok", "d": "11/2016"}, {"body": "workaround give duplicate namespace use explicitly style declaration", "d": "11/2016"}, {"body": "warning said please nt put styling logic components style tags svg putting style tag headbody sideeffect want scoped modularized styling look vue single file component", "d": "11/2016"}, {"body": "hello powerfulpony thank filing issue please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem thank", "d": "11/2016"}, {"body": "hi linusborg understand demonstrate server render jsfiddle", "d": "11/2016"}, {"body": "case repository would better option oviously", "d": "11/2016"}, {"body": "linusborg said would better provide repository case seems bug similar", "d": "11/2016"}, {"body": "hi considered case commit opinion third library added method vue prototype library author probably nt want get changed end users elaborate situation long migrate forum", "d": "11/2016"}, {"body": "opinion third library added method vue prototype library author probably nt want get changed end users agreed see discussion think detecting methods starts good approach closing issue", "d": "11/2016"}, {"body": "solve vhtml direcive error", "d": "11/2016"}, {"body": "must click eyebutton see data", "d": "11/2016"}, {"body": "converted getters setters use jsonparse jsonstringify data normalize", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "indeed thanks link maybe adding link section section would give visibility", "d": "11/2016"}, {"body": "please open issue repo", "d": "11/2016"}, {"body": "selected option always reflect value vmodel value switch options nt change nothing new options selected probably want explicit set", "d": "11/2016"}, {"body": "context event ipcrenderer triggered would spontanously assume state changed undone piece code running event trigger", "d": "11/2016"}, {"body": "file emits event helps currently mobile ca nt really format well let know need information", "d": "11/2016"}, {"body": "figured sending events one overlapping manual hiding state fixed wrapping event appropriate statement", "d": "11/2016"}, {"body": "thanks atleta document needs updated", "d": "11/2016"}, {"body": "moved vuejsorg", "d": "11/2016"}, {"body": "pr created", "d": "11/2016"}, {"body": "could ask question forum gitter try use issue tracker bug reports feature requests problem could use computed properties could take look doc", "d": "11/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "11/2016"}, {"body": "thanks example", "d": "11/2016"}, {"body": "please specific expected behavior think wrong", "d": "11/2016"}, {"body": "example use cont divuipopup animationend event cont number executions click animate button result ok count plus see count plus twicebecause divuipopupanimate also listen animationend event see eventtarget element divuipopup listen animationend event", "d": "11/2016"}, {"body": "nt expected behavior controls outer transition inner transition makes sense fire two events", "d": "11/2016"}, {"body": "animationend bind divuipopup", "d": "11/2016"}, {"body": "seemingly problem", "d": "11/2016"}, {"body": "vue nt use keywords sure vue code error stack trace look like", "d": "11/2016"}, {"body": "rambopanda need change babel config", "d": "11/2016"}, {"body": "shusiwei using code directly dist folder error location", "d": "11/2016"}, {"body": "sigh browsers use phones tests pass stock android browser even", "d": "11/2016"}, {"body": "unfortunately wontfix phones listed years old nt seen android browsers demonstrate behavior vue support list browsers conform spec spec presence variable name use property identifier cause parsing errors", "d": "11/2016"}, {"body": "bug wrap content within div", "d": "11/2016"}, {"body": "anishdcruz ok closing issue difficult one root rule nt ban reactjs way like", "d": "11/2016"}, {"body": "blog might help", "d": "11/2016"}, {"body": "issued similar situation fixed anyway difficult considered bug feel free close", "d": "11/2016"}, {"body": "case since velse vif conditions false", "d": "11/2016"}, {"body": "problem without code analysis expressions fact near impossible depends component runtime state way tell whether really return one element get around either using dynamic component turning conditional branches components use render function instead", "d": "11/2016"}, {"body": "webpack freezes run using yarn tried reinstall dependencies without success back worked thanks", "d": "11/2016"}, {"body": "jbruni try build vue latest source see resolves issue", "d": "11/2016"}, {"body": "ok think know problem fix soon", "d": "11/2016"}, {"body": "jbruni pushed fix please try build dev branch source let know", "d": "11/2016"}, {"body": "thanks evan home back office tomorrow test first thing morning", "d": "11/2016"}, {"body": "tested using release works thanks lot amazing work sincerely got curious know edge case case templates got caught issue", "d": "11/2016"}, {"body": "passed render functions bound instance rendered required vue vnodes correct render context exposed global need every component fact verbose", "d": "11/2016"}, {"body": "maybe trying hard make similar react", "d": "11/2016"}, {"body": "fyi vue removes comments template parsing supposedly conditional content would show either probably nt want use vue compile conditional comments", "d": "11/2016"}, {"body": "well good know thanks fix", "d": "11/2016"}, {"body": "hi thanks filling issue vue nt angular magics writing executed plain javascript errors thrown trying access properties nullundefined therefore solution simply would javascript translated like try jsx instead templates easily use party libs get deep object property namely lodash get written", "d": "11/2016"}, {"body": "use get templates import get lodashget vueprototype get get get people namefirstname", "d": "11/2016"}, {"body": "happening consistently across browsers chromeffsafari really weird", "d": "11/2016"}, {"body": "reason vue parses indom template asis everything already correct namespace vue parses template string regenerates dom based generated virtual dom special treatment svg namespace embedded xhtml elements inside foreignobject generated svg namespace instead xhtml fixable adding detection parser", "d": "11/2016"}, {"body": "thanks fix works makes happy", "d": "11/2016"}, {"body": "hmm supposed manually mount inside another alreadymounted vue instance incorrect usage fact happens work vue coincidence support register child proper child component parent use parent template", "d": "11/2016"}, {"body": "vue instance root level reactive properties static declared component option add dynamically runtime fact see warning console second example case directive require user declare property needs access modify", "d": "11/2016"}, {"body": "unfortunately expected behavior due patch works simply add key ifelse blocks differentiate", "d": "11/2016"}, {"body": "possible could also mentioned docs vif know key caveat listed list rendering specifically mentioned vfor came across solution using key attribute thinking list rendering case thought probably patch strategy turns right mentioned vif docs", "d": "11/2016"}, {"body": "yes absolutely", "d": "11/2016"}, {"body": "due nature cyclic dependencies module system diagrampath imports block block nt finished evaluating yet turn depends diagrampath gets empty object instead using dynamic lazyload block diagrampath", "d": "11/2016"}, {"body": "would nt nice put note", "d": "11/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "11/2016"}, {"body": "please check link issue reporting guidelines", "d": "11/2016"}, {"body": "nvkhai fixed link", "d": "11/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "11/2016"}, {"body": "see update code gen work without statement successful happy quality create pr", "d": "11/2016"}, {"body": "robertwhurst thanks might prove difficult would require decent rewrite current compiler implementation said module system bundler using application assume webpack reason directly importing files else webpack use plain syntax avoid forcing component module strict mode", "d": "11/2016"}, {"body": "understand experience working codegen know lot work might worth us solution work aim follow coding standards much possible avoid performance penalties removing good start believe always deoptimizes code inside statement track sources variables within block using webpack moment want avoid exporting vue files ui shared parties want able share components easily possible also wrap compiled vue templates umd wrappers using babel idea allow parties without build system simply add components need via script tags import statements provided vue page", "d": "11/2016"}, {"body": "robertwhurst yes would definitely great get rid appreciate willingness work let outline reasons first place use primarily gets rid need parsing scope analysis javascript expressions embedded inside templates thus greatly reducing size complexity codegen since template compiler included standalone build runs browser payload size still important concern course achieve removal employ proper ast analysis expressions would entail full sized javascript parser would bloat compiler size significantly one option would ship current compiler using standalone build use separate compiler build tools however would result two parallel compiler implementations greatly increase maintenance cost surface potential bugs probably better option would create postcompiler alreadygenerated render function code essentially optional phase turns code contains code nt rewriting identifiers makes decoupled base compiler use build phases without worrying size could also turned improve compilation performance concern implementation wise could technically achieved via babel plugin open alternatives familiar ideally standalone npm package since purely code transform hard coupling vue source code", "d": "11/2016"}, {"body": "digging working around currently seeing problem looking issue vuejsvueloader far luck situation webpack bundling librarytarget yet still added bundled code idea", "d": "11/2016"}, {"body": "linusborg strange looking forward possibility clearing whole class error sounds good going try babel plugin approach first back soon", "d": "11/2016"}, {"body": "made quick test see perf implications result would like least option decide whether run vue code strict mode", "d": "11/2016"}, {"body": "vuetemplaecompiler package uses strict mode could lead exports precompiled components strict mode desribed experience even build setup edit disclaimer far mostly guessing part vue uses rollup build process rollup adds strict mode imports like webpack according rollup docs disabled nt current build config entry web compiler uses imports would suspect create problems templatecompiler could disable strict mode rollup", "d": "11/2016"}, {"body": "made bit progress last light post demo next days decided go standalone module idea used alone wrapped module use babelwebpackbrowserifyetc", "d": "11/2016"}, {"body": "robertwhurst happened realize could done efficiently hacking buble since already using custom build buble able implement removal today dependency fresh install get render functions without default still thanks interest contributing", "d": "11/2016"}, {"body": "ah cool cheers", "d": "11/2016"}, {"body": "amazing work", "d": "11/2016"}, {"body": "vue replaces target element use indom templates may conflicting bootstrap handles modal element although case nt need nt bootstrap vue app everytime modal opens call directly everything works fine", "d": "11/2016"}, {"body": "thanks quick response change code accordingly", "d": "11/2016"}, {"body": "hello usage question encourage ask forum gitter try use issue tracker bug reports feature requests question literally recreating input every time text changed give items identifiers key using instead alternative could track items reference", "d": "11/2016"}, {"body": "fixed already", "d": "11/2016"}, {"body": "\u554a\u8fd8\u662f\u7a7a\u95f4\u5f88\u5927", "d": "11/2016"}, {"body": "hi elaborate use case seems using compiler nt type definition use compiler package vue work flow nt know whether flow support reading typing packagejson doc says might need submit pull request flowtyped official repo", "d": "11/2016"}, {"body": "vue internal flow annotation intended public consumption relies alias configured vue may submit public flow definition flowtyped future currently available yet", "d": "11/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests encourage use dedicated gitter forum ask questions discussion thanks", "d": "11/2016"}, {"body": "using first element seems play important role issue sufficient set remove directive though everything rendered fine", "d": "11/2016"}, {"body": "seems bug first glance thanks pvorb reporting", "d": "11/2016"}, {"body": "calling exptostring trim vuecommonjs parseexpression trick case", "d": "11/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "11/2016"}, {"body": "closing due inactivity edit btw tried repro luck", "d": "11/2016"}, {"body": "internal util bindings immutable design messing vue internal utils anyway", "d": "11/2016"}, {"body": "current public api nt support array yet could useful", "d": "11/2016"}, {"body": "agree app set top box remote nt always line computer", "d": "11/2016"}, {"body": "file importing standalone build assumes browser environment regardless nt think possible involves nontrivial effort vue ssr php package node package dependencies eg solved bundling whole package dependencies one file features rely nodejs native modules like even get normal ssr working would nt able use stream mode basically something planning work definitely open community contributions anyone wants make work", "d": "11/2016"}, {"body": "true possible compiled javascript loop render function runtime definition usage posted seems bit hacky sure equivalent achieved datadriven approach rather patching builtin directives another topic feel free open discussion forum", "d": "11/2016"}, {"body": "seems result bug reading vue parsing indom template returns placeholder string textarea empty instead empty stringnull see way work around bug", "d": "11/2016"}, {"body": "bug webruntimewithcompilerjs directly use", "d": "11/2016"}, {"body": "ie bug happens innerhtml outerhtml use outerhtml get indom template really functionality replace", "d": "11/2016"}, {"body": "linusborg know need find core members confirm fix", "d": "11/2016"}, {"body": "believe intended behavior computed property bar dependency computed property foo foo dependency test therefore whenever button clicked test updated anything dependency updated chain", "d": "11/2016"}, {"body": "dstrang pointed expected correct behavior", "d": "11/2016"}, {"body": "expected state change method state change triggers rerender ends infinite loop method calls templates render functions pure produce side effects state changes", "d": "11/2016"}, {"body": "twoway binding component rerenders things changed overwritten data nt change need set adding link", "d": "11/2016"}, {"body": "nt dom attribute equivalent mind nt think really vue concern could write directive handle quite easily though", "d": "11/2016"}, {"body": "saw requesting vue made oneline directive example also added untested commented vue version", "d": "11/2016"}, {"body": "problem value js used represent visual state may totally depend use case app logic probably better handle code sirlancelot suggested", "d": "11/2016"}, {"body": "fair checkboxes already support binding maybe worth adding", "d": "11/2016"}, {"body": "according indeterminate distinct state checked unchecked instead obscures actual state checkbox without changing thus candidate rather things consider bindings bind attribute attribute represents default value current value default value attribute would hijacking bind default value attribute dom rehydration ssr may awkward final word proceed core userland", "d": "11/2016"}, {"body": "simplesmiler still think belongs userland fact simply simple custom directive would", "d": "11/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "11/2016"}, {"body": "linvar works correctly vuejs new vue el test data headers methods onclicked function thisheaderspush html", "d": "11/2016"}, {"body": "luventa sorry mention version used used csp version vuejs chrome extension failed find get csp version vuejs vuejsorg installation guide use npm install vue trying get runtime version nodemodulesvuedist directory also tried git clone vue wan na build src npm install dependencies failed link issue reporting guidelines provided try use insert code syntax", "d": "11/2016"}, {"body": "linvar use element case", "d": "11/2016"}, {"body": "simplesmiler works thanks", "d": "11/2016"}, {"body": "rerender default function nuts returns object literal", "d": "11/2016"}, {"body": "hi nt think two issues changing nuts property watch still fired", "d": "11/2016"}, {"body": "doonetheprune nuts prop default function return fresh object time changed internally", "d": "11/2016"}, {"body": "defcc agree default function return fresh object however nt think return new object every time value property changed component created look fiddle nuts property affected value property please could reopen", "d": "11/2016"}, {"body": "caused render system input value changed app rerenders top bottom bla component also affected add updated function demo better understanding", "d": "11/2016"}, {"body": "defcc come nuts property string watch fired", "d": "11/2016"}, {"body": "explained could take look", "d": "11/2016"}, {"body": "defcc looked fiddle see similar underlying issue might issue however highlights problem scenario lot likely occur also reading comments issue makes really worried dont plan fixing issue without trying harsh vue think great basic bug like means looses lot credibility came across first started using vue would stopped using", "d": "11/2016"}, {"body": "component name notice conflicts causes infinite render loop", "d": "11/2016"}, {"body": "bug vue ok know close", "d": "11/2016"}, {"body": "behavior design could got warning dev mode", "d": "11/2016"}, {"body": "read key correct behavior proper key usage", "d": "11/2016"}, {"body": "thanks dealing bug like whole weekend look keys", "d": "11/2016"}, {"body": "like idea maybe simply make normal accept returning promise", "d": "11/2016"}, {"body": "long nt break existing code fewer keywordsnames remember", "d": "11/2016"}, {"body": "several quick thoughts user declare default value promise resolved vue support builtin throttle promise handle events like keychange mousemove vue support builtin callback certain promise resolved inspect whether async property resolving resolved might need proposal", "d": "11/2016"}, {"body": "herringtondarkholme good points thinking almost think issues mentioned would better solved rx vuerx original example written simplified sake discussion rx version obviously verbose simple promise version get almost everything herringtondarkholme listed default value throttling sideeffect subscriptions cases eliminate need detecting promise resolves fetching commonly used little helper simplified js long name precisely describe vueprototype reactivelyfetchasobservable function urlorgetter return watchasobservable urlorgetter switchmap url gt rxobservablefrompromise fetch url new vue data lang en subscriptions return reactivelyfetchasobservable gt return lang thislang startwith default settings sum think async computed pattern simple elegant basic use case may sufficient deal full scale complexity async operations shoehorn async computed pattern deal cases one one stage probably better going rx unfortunately closing note saying bad idea think still good idea let library evolve maybe land good balance probably best idea core", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "11/2016"}, {"body": "ok thank maybe bug think need rerender entire list", "d": "11/2016"}, {"body": "use property vue tracks unique keys rerendering lists nt provide keys complete rerender", "d": "11/2016"}, {"body": "please check think issue fixed pr", "d": "11/2016"}, {"body": "related geojson duplicate amp fixed", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "could use computed property", "d": "11/2016"}, {"body": "kinda defeats point using filter though nt want declare computed properties nt want declare duplicate methods across multiple components", "d": "11/2016"}, {"body": "callumacrae declare method mixin use vueprototype like vueprototype linkhandler function value use", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "iagafonov workaround filters suggest either able able use filters would mean allowing interpolations attributes filters removed current behaviour confusing", "d": "11/2016"}, {"body": "discussed extensively api design thread please read thread arguments raised already filters originally removed added back common use case due community request going change foreseeable future", "d": "11/2016"}, {"body": "work", "d": "11/2016"}, {"body": "thank changing mind", "d": "11/2016"}, {"body": "edit anyone simply could nt nt bother click link read docs", "d": "11/2016"}, {"body": "hi thanks filling issue first scoped css css related thing nt vue concern would vue feature reactangular etc supposed part build process currently scoped css vueloader feature like framework build tool requires compilation suggesting adding css scope runtime nt possible vue never aware css files therefore suggestion remains", "d": "11/2016"}, {"body": "see thanks reply could possible vueloader go take look source code suggesting adding css scope runtime believe case done compiletranspiling css code way done right right vueloader appends unique attribute append prepend parent element selector anyways since regardless would done would likely low prio issue team considering much important featureissues would work forking loader look thanks reply", "d": "11/2016"}, {"body": "believe case done compiletranspiling css code way done right sorry misunderstood feature request would mind opening issue vueloader repo", "d": "11/2016"}, {"body": "sure thing thanks", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "wanted add html attributes placeholder input box without adding placeholder new prop wanted bind keypress event input box without adding emit keypress component basic ideas component properties parentchild communication please explicitly declare props need events emit", "d": "11/2016"}, {"body": "fnlctrl found readme babelplugintransformvuejsx note builtin vue directives supported using jsx never use vshow jsx guess builtin directives supported jsx update readme", "d": "11/2016"}, {"body": "actually builtin directive works jsx make pr repo", "d": "11/2016"}, {"body": "good", "d": "11/2016"}, {"body": "closing original issue seems resolved reproduction general bug provided", "d": "11/2016"}, {"body": "could achieved directives decision remove intentional directives meant used lowlevel dom access things like meddling vmodel functionality explicitly job anymore cases want directive rather use component instead specific situation need help happy help forumvuejsorg", "d": "11/2016"}, {"body": "well components powerful indeed lacks one thing entirely modularity instance want add multiple behaviors element ie select focus select escape value nt changed call function change amp blur make input cancellable manage input mask via third party plugin etc using component mix logic behavior callbacks gets messy quickly repeat another element needs subset behaviors components understood correctly recreate handlers slight variations keeping dry hand directives tag element gets desired behavior way keep logic one place html template semantic readable hence maintainable sounds good think feature request still valid since unsuccessfully fail see advantage components directives kind uses perhaps wrong possible glad corrected indepth explanation directives evil want different angular lastly since possibility changing directive still exists albeit bit convoluted add additional parameter would break legacy code save us hassle side note unfortunately forumvuejsorg helpful cf question subject eight days ago remains without answers day perhaps use cases edge cases", "d": "11/2016"}, {"body": "pretty lowlevel feature demonstrated already working code achieves want general philosophy leaving cases userland unless extremely common use case", "d": "11/2016"}, {"body": "adding many usecases mentioned done directives mentioned would require kind reference asked would rather think would oddproblematic one directive writing model anyway unless different events eg cancelable example could ever use one directive accesses model otherwise would get way point behaviour requires access model make custom component add directives eg something like vfocus component need", "d": "11/2016"}, {"body": "alexandrebonneau another note even provided official api set value vmodel expression references would mean directive uses method would dependent vmodel present problem many cases want ca nt use vmodel eg custom input components using vuex use pluginlib works input conflicts vmodel sure many cases would rather add event listener expression set value directives would break lowlevel functionality examples might better solve low level dom methods eg writing value input manually triggering input dom event concerned browser compatibility wo nt work ie lt couple npm packages provide compatibilty older ie versions", "d": "11/2016"}, {"body": "thank input pun intended see update code use way lowlevel inputs also reference directive hook signatures imagine could set default attached element directive declared though remaining problem maintainability still able make sure multiple directives play well together access", "d": "11/2016"}, {"body": "also vmodel reference directive hook signatures imagine could set vmodel null default vmodel attached element directive declared though thinking redusability compatibility would often situation start using vmodel later refactor use event instead point directives relying vmodel expression would stop working", "d": "11/2016"}, {"body": "nt think way prevent happening original fiddle expected behavior given render system works warning literal objectarrays tricky thing could valid usage long user nt attempt mutate value believe already warned docs", "d": "11/2016"}, {"body": "also encountered problem code spend lots time debugging without help warning also search docs keyword got two results one even give example using object literals html think static prop useful many conditions static props action vue line expectations little confusing vue although know works also noticed modifier removed vue nt think modifier breaks oneway binding contrary think helpful vue perform static prop idea bringing back", "d": "11/2016"}, {"body": "advice replace export default moduleexports fixing issue", "d": "11/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "11/2016"}, {"body": "mean cancel trying interrupt ongoing animation make snap end state turn transition nt trigger anymore either case setting bound class empty string wrong way way interrupt already triggered transition revert toggling state controlling element inside turning could probably add prop transition components workaround using toggle transitionwrapped nontransitionwrapped version element", "d": "11/2016"}, {"body": "case turn transition effect point instead remove entire effect use vif may remove one enter leave effect", "d": "11/2016"}, {"body": "limitation using indom template string templates subject", "d": "11/2016"}, {"body": "yes pr welcome", "d": "11/2016"}, {"body": "fyi functional components vue eager means render function gets called directly parent render cycle without allocating instance child instance associated easy way perform memoization previous render results desired optimization easily obtainable ensuring correctness possible cases said lack instance functional components pretty big perf win cases especially leaf components used large numbers may best choice complex oneoff components presence instance allows take advantage static optimization reactivity boundary react functional components also always rerendered open suggestions achieved nt see actionable path forward", "d": "11/2016"}, {"body": "context convenient construct library author coupled components example tabs tabpanes library quite strange lame encapsulate library local context separate global store library author might able take burden passing props components may also interface end users ktsn good example good arguments context feature questions reading react context document disclaimer react user seems cooperation problem vue context also reactive need workaround context update described article still questions context found example context found child parent ancestors closest ancestor resolve context ancestors handle context key conflict seems react context implementation chooses closest ancestor example easily cause problem multiple libraries provide different contexts name say one component receives context another library component collect context properties ancestors pack properties array map also context parent component visible children templates slots children template children slots provide option users choose", "d": "11/2016"}, {"body": "tried toy implementation seems fully doable user land without touching vue core working example source requires token expose injection avoid conflict parts look like api suggested simplesmiler sebastiandedeyne context visibility fully controlled token parent component expose token context visible child another helper method let children decide inject closest context inject contexts ancestors way root agree posva context delicate replaced passing props including default promotes bad practice beginner advanced users need library code implementation overhead lines code", "d": "11/2016"}, {"body": "doubts token understand useful avoid conflicts object needs passed around throughout exactly trying avoid would look like assuming components live separate files ca nt declare token variable top need pass around somehow token required", "d": "11/2016"}, {"body": "token primitive value symbol environment string otherwise declared outside component imported component used context feature need import token intermediate components agnostic token context need passing around token example man middle component refer token component still get user info importing token token globally unique context object retrieved token component specific stored relevant components", "d": "11/2016"}, {"body": "makes sense still believe strings good enough situations though compatible symbols good addition want something strict working package use throughout projects open sourced still prefer see something official either core official package", "d": "11/2016"}, {"body": "think excellent proposal course something like used caution believe deem necessary additional package part core vue", "d": "11/2016"}, {"body": "addition example ktsn approach useful act similar service locator decouple components services avoid require service instance read solution examples using approach herringtondarkholme actually solved issue proof concept implementation beside implementation plugin uses awful global container defining services key value pairs remind data props definition open complex features like querying feature interface", "d": "11/2016"}, {"body": "case anyone interested mean time created package based discussed projects", "d": "11/2016"}, {"body": "closing due inactivity", "d": "11/2016"}, {"body": "fixed", "d": "11/2016"}, {"body": "linusborg repopen one per response vuejsvuerouter", "d": "11/2016"}, {"body": "behavior early version changed general rule thumb able locate child components used component looking component code implicitly inheriting components matter done break dependency tree lucidity look component code sure child component used came explicitly importing child components sure leads repetition opinion contrary argument rises possibility errors makes app support harder makes code robust easier readfollowmaintain fact approach collecting components single file good middleground would probably run similar situations", "d": "11/2016"}, {"body": "u use vfor like", "d": "11/2016"}, {"body": "index removed vue want use index change vue version", "d": "11/2016"}, {"body": "jarodrigues simple change code like index", "d": "11/2016"}, {"body": "like class module think style also behavior consistency try make pr", "d": "11/2016"}, {"body": "defcc yeah probably need treat separately need parse static style strings objects", "d": "11/2016"}, {"body": "ok take look", "d": "11/2016"}, {"body": "almost done make pr later", "d": "11/2016"}, {"body": "change merge styles case textelementvue js export default render createelement return createelement input attrs type text style textalign right", "d": "11/2016"}, {"body": "update hook nt get triggered call custom directive otherwise would end infinite loop triggers value programmatically changed app code", "d": "11/2016"}, {"body": "yes please looking exactly render functions overwhelming feels disjointed overall feel single file component", "d": "11/2016"}, {"body": "would useful would scope css functional components", "d": "11/2016"}, {"body": "got warning transitiongroup warning add key child item actually key already meet problems code picture warning", "d": "11/2016"}, {"body": "came across issue really stumped initially props local data state getting mixed list item components especially filtering refreshing list searching lead issue thread eventually stumbled across page docs issue caused default inplace patch strategy uses updating list components docs linked explain really well essentially recommended provide whenever possible unless iterated dom content simple intentionally relying default behaviour performance gains hope helps someone else may come across issue", "d": "11/2016"}, {"body": "next release use umd runtime build via", "d": "11/2016"}, {"body": "fixed", "d": "11/2016"}, {"body": "able repro simplified test case show attributes list edge amp chrome", "d": "11/2016"}, {"body": "phoenixgao using rollup think somewhere investigated bublebabel inject processed js files", "d": "11/2016"}, {"body": "limitation going fixed workaround painfulunmaintenable vif branches", "d": "11/2016"}, {"body": "akryum feature introduced commit seems check skipped production perhaps bypass check defining separately instead though may discouraged", "d": "11/2016"}, {"body": "better implementation would create dynamic input type component vue attach custom components get twoway data binding", "d": "11/2016"}, {"body": "sirlancelot component would still need dynamically bind type could limitation circumvented using custom model would mean duplicated code every type want cover get quite messy especially generic components change quite often get less stable version", "d": "11/2016"}, {"body": "gwildu yes encountered issue trying use input component development version keen ui recent update vuejs make work workaround would always set input type validate value require work every similar component", "d": "11/2016"}, {"body": "sirlancelot sure possible could nt old behavior hidden attribute flag like generictype dynamictype guess new behavior positive performance impact might issue projects", "d": "11/2016"}, {"body": "implementing render function javascript look elegant probably powerful enough almost anything actually way components implemented", "d": "11/2016"}, {"body": "thanks sharing akirak nt personally read far docs yet outlines exactly mind op dynamic input component suggested earlier create component many hardcoded inputs desired wrap abstracting functionality away component allows reusability nt think implementation written", "d": "11/2016"}, {"body": "render functions nt support vmodel reimplement vmodel essentially nt look simple", "d": "11/2016"}, {"body": "vue character dom element attribute creating new vue instance", "d": "11/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "11/2016"}, {"body": "envomer inside vfor column columns new vue data return columns key opt title options html myhtml partials myhtml edit methods edititem xxx", "d": "11/2016"}, {"body": "kenberkeley partials deprecated nt", "d": "11/2016"}, {"body": "envomer use slot dynamic component instead vue", "d": "11/2016"}, {"body": "declare component template may want set initial value attributes bind parent variablecan vuejs support proponce much convenient set initial value template js code", "d": "11/2016"}, {"body": "closed issue also issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "11/2016"}, {"body": "also concerned turn security features use vue could deal breaker casually cruising code nt come across anything necessitates like know technical reason nt seem replaced also replacing lines like lines like furthermore nt understand purpose building strings rather using actual functions replacing dynamic closure variables templates like create closure easy replace name value var foo elvalue create function regular javascript string function var x foo tostring replace foog elvalue usable function standalone mode easy template prebuilt mode believe pattern would make possible violate csp still build tools get strings need export could get help someone little familiar code pretty confident could get converted insecure nonstandard proper secure something missing nt possible way", "d": "11/2016"}, {"body": "resolved issue modifying compiler way simple modification let compile templates strict mode difference approach every expression references view model variables must prefixed example xx becomes xx think could avoided introducing expression parser logic determine expression variable view model variable could slow compilation easy patch would great option instruct vueloader vueify compile templates strictmode think users need functionality could accept prefix vm variables code better switch another framework", "d": "11/2016"}, {"body": "really nt even get fancy check add prefix key functions tested simple demo perhaps test help find missing fix beyond strict mode nt see reason yet needs created insecure strings run eval easy create functions stringify later", "d": "11/2016"}, {"body": "see reasons explained", "d": "11/2016"}, {"body": "modified compiler strict mode compliant changing lines code saying solution fancy agree pr trying address issue clean way careful could lot edge cases address maybe would change something different could value vm could use loop variable think prefix vm variables case anyway seems trying exactly thing using two different approaches maybe approach could easier want modify compiler additional option", "d": "11/2016"}, {"body": "micheletriaca sorry looking phone looked like lot lot extensive line wrapping see browser see two agree think controlleras syntax angular basically idea intemplate prefix saying honestly would prefer think mix two approaches could keep api compat break existing apps", "d": "11/2016"}, {"body": "using example approach users could compile templates strict mode case would need write expressions referencing also scope jsx example seems solution unlikely accepted reason nt created pr want break existing apps think correct approach address issue one suggested babel plugin postprocess templates use full javascript parser assign correct scope variables expressions", "d": "11/2016"}, {"body": "import libary get error ssr nt want change code", "d": "11/2016"}, {"body": "facesea import get error ssr", "d": "11/2016"}, {"body": "dualwield stop ssr waiting update used inject object nt know", "d": "11/2016"}, {"body": "fyi something vue fix instead libraries prevent accessing directly without checking environment first opening issues libraries want use regarding", "d": "11/2016"}, {"body": "thank much", "d": "11/2016"}, {"body": "seems bug android webview still", "d": "11/2016"}, {"body": "chrisvfritz updates either way moved vuejsorg repo", "d": "11/2016"}, {"body": "done sorry forgot come back close", "d": "11/2016"}, {"body": "ie nt currently support innerhtml method svg elements alternative solutions innersvg polyfill allegedly works internet explorer newer", "d": "11/2016"}, {"body": "customized use cases builtin modifiers support ecmel mentioned recommended approach document details official guide", "d": "11/2016"}, {"body": "idea feature proposal take advantage existing directive already works every element save work writing inputcustomjs every project done already write equivalent inputtextjs custom modifier contains logic needs modified times fact already ships modifiers proves intuitive desirable pattern natural facilitate creation custom modifiers save work creating custom elements implement dommodel binding manually makes sense api perspective would interesting know technical limitations driving decision implementing feature", "d": "11/2016"}, {"body": "thanks linusborg save time", "d": "11/2016"}, {"body": "vmodel directive reset input value blur give number param always change value number see", "d": "11/2016"}, {"body": "buwder simply copied comment going add anything delete comment", "d": "11/2016"}, {"body": "linusborg issue seems fixed", "d": "11/2016"}, {"body": "may case ca nt verify issue tagged p", "d": "11/2016"}, {"body": "sorry guys seen many answers actual answer show one simple example use delimiters components mean vue files", "d": "11/2016"}, {"body": "component script nt recognize delimiters export default delimiters", "d": "11/2016"}, {"body": "hello isaevbehruz issue tracker reserved exclusively bug reports feature requests encourage ask forum stack overflow gitter happy help", "d": "11/2016"}, {"body": "linusborg using like says bug report though probably another issue details isaevbehruz would mind providing jsfiddle reproducing issue would good start", "d": "11/2016"}, {"body": "bug report open separate issue recycle old closed slightly related issue also initially asking use claiming work fiddle works expected", "d": "11/2016"}, {"body": "linusborg alrighty", "d": "11/2016"}, {"body": "sorry linusborg bad asking tribex also tried example yes works mentioned question delimiters nt work vue files iv put delimiters option iv compiled nt work", "d": "11/2016"}, {"body": "oh may right sorry need check remember correctly changing delemiters may available standalone build indom templates reasoning templatws files precompiled ca nt conflict servetside template system custom delimiters existed first place", "d": "11/2016"}, {"body": "actually docs available standalone build using", "d": "11/2016"}, {"body": "thanks linusborg right need custom delimiters files", "d": "11/2016"}, {"body": "experiencing github autorized forum rejecting issues redirecturimismatch parameter url", "d": "11/2016"}, {"body": "vmodel since empty inputs reset zero according description", "d": "11/2016"}, {"body": "thanks missed documentation would agree clegendre could added", "d": "11/2016"}, {"body": "would also helpful add vuemigrationhelper possible nt required", "d": "11/2016"}, {"body": "chrisvfritz could added vuemigrationhelper maybe could try ship", "d": "11/2016"}, {"body": "unfortunately nt something migration helper catch look adding second reference guide", "d": "11/2016"}, {"body": "reasoning behind works fine custom components seems quite bit almost seems like punishment actually like jsx", "d": "11/2016"}, {"body": "honestly perspective jsx firstclass citizen development added later babel transform designed jsx mind specifically directives compiled normal javascript inserted render function template compilation far nt time felt pressure replicate delicate piece code jsx compiler compiler code templates really reusable would recreated pretty much scratch including things like parsing modifiers jsx know etc", "d": "11/2016"}, {"body": "bit easier using though still requires top level element transition know max delay sliderenteractive sliderleaveactive transition trick sliderenter sliderleaveactive sliderbackdrop opacity slidercontent transform translatex calc demo", "d": "11/2016"}, {"body": "still problem tested ios", "d": "11/2016"}, {"body": "question eirikb", "d": "11/2016"}, {"body": "gongph real solution remove dependency vue might gone nt checked need hack right away evaluating code runtime plausible horrible workaround made small library fun", "d": "11/2016"}, {"body": "fyi latest versions generate render functions nt use", "d": "11/2016"}, {"body": "problem solved", "d": "11/2016"}, {"body": "nt problem since repro provided confirm tue nov pm stoneyong notifications githubcom wrote problem solved receiving subscribed thread reply email directly view github mute thread", "d": "11/2016"}, {"body": "\u4f7f\u7528watch\u5c31\u53ef\u4ee5\u89e3\u51b3", "d": "11/2016"}, {"body": "rayrutjes used tsalkakisd solution actually quite elegant simple component pass list users created slot like userid id user currently loop parent component simply specify voila done", "d": "11/2016"}, {"body": "implemented need bespoke solutions nov pm savas vedova notifications githubcom wrote rayrutjes used tsalkakisd solution actually quite elegant simple component pass list users created slot like userid id user currently loop parent component simply specify data voila done receiving commented reply email directly view github mute thread", "d": "11/2016"}, {"body": "oh apparently scoped slots good everyday new feature vue", "d": "11/2016"}, {"body": "vue removes way filters adds scoped slots curious decisions", "d": "11/2016"}, {"body": "implemented need bespoke solutions blocka saying loop non named slots", "d": "11/2016"}, {"body": "come ca nt one non named slot definition sun nov raymond rutjes notifications githubcom wrote implemented need bespoke solutions blocka saying loop non named slots receiving mentioned reply email directly view github mute thread", "d": "11/2016"}, {"body": "work help thx", "d": "11/2016"}, {"body": "little offtopic since filters supported expressions version issue need revisited maybe syntax improvement could distinguish actual filters bitwise operations hand migration guide filters directives including deprecated objectives still done computed properties wondering whether adding feature back original idea insights share", "d": "11/2016"}, {"body": "elif", "d": "11/2016"}, {"body": "vuejs \u6c92\u6709\u63d0\u4f9b \u5047\u8a2d\u6709\u4e86 use elseif vue js elseif vuejs \u5e0c\u671b\u652f\u6301elseif\u8bed\u53e5 \u8bf7\u95ee\u5982\u4f55\u5b9e\u73b0 elseif feature request velseif", "d": "11/2016"}, {"body": "div class swiperslide vfor slide fieldsslides err vuejs vue warn failed compile template", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "\u8fd9\u6837\u6210\u529f\u4e86", "d": "11/2016"}, {"body": "row \u8fd9\u6837 \u4e5f\u662f\u663e\u793a\u4e0d\u51fa\u6765\u7684 ndcontent", "d": "11/2016"}, {"body": "\u5728data\u91cc\u628arow\u521d\u59cb\u5316\u8fdb\u53bb", "d": "11/2016"}, {"body": "ways detect part object changed inside watch real target path like third param useful option", "d": "11/2016"}, {"body": "also use twig tag wrapped around blocks nt want twig interpret", "d": "11/2016"}, {"body": "jordanramstad trying achieve result textarea markdown editor yet solution nt work anymore vue searching ages result noted nt work way go would create custom prop update following snippet seems work get default text tags used view template vue", "d": "11/2016"}, {"body": "transfer dom like", "d": "11/2016"}, {"body": "onsen ui vuejs like react native", "d": "11/2016"}, {"body": "feature works vue latest today even documented see fiddle try changing library top html code ca nt switch vue today backward compatibility primary vmodel support dynamic input types error many dynamic components need feature thanks", "d": "11/2016"}, {"body": "straps code issue helps", "d": "11/2016"}, {"body": "reference vue", "d": "11/2016"}, {"body": "note necessary binding native events components", "d": "11/2016"}, {"body": "supported props", "d": "11/2016"}, {"body": "store target boundingclientrect anything else use common resize event window loop request resize compare current size stored size callback needed", "d": "11/2016"}, {"body": "hello guess understand issue dalanmiller fact stuck similar issue fact nt want watcher trigger callback every time manually decide affect value somewhere instance got data rest api call async way decide affect data component watcher detect change trigger callback notice update changes rest api data change got api set call issue codepen explain vuejs want fire change manually change value textarea code variable call onupdatecode sync change every time gt want coder variable call onupdatecoder add dirty silence mechanism onupdatecoder called change text coder textarea coder want tried better solution vuenexttick fail think could worked vuenexttick dispatch setting priority parameter come code somehow got similar issue integrating acejs vuejs component ace team got issue resolved comment nightwing next comment davidthornton notice logic already answered issue really case think design pattern issue nt know write smart code idea", "d": "11/2016"}, {"body": "addressed however difficult backport similar api unfortunately going land", "d": "11/2016"}, {"body": "use component opinion item separated component", "d": "11/2016"}, {"body": "fyi already shipped new nt know evan wants back port though", "d": "11/2016"}, {"body": "implemented prop although like backport noncritical change requires nontrivial effort given bandwidth reducing scope number critical features low hanging fruits unfortunately implemented", "d": "11/2016"}, {"body": "outlined behavior original request actually conflicts slot usage unlikely implemented consider handle async components pending state separately", "d": "11/2016"}, {"body": "best see corresponding implementation code", "d": "11/2016"}, {"body": "implemented vue computed properties nt updating shared store updated computed properties needed vmodel attribute situation shared store contains root node render pipeline manager render function creates new elements passing previous element pipeline slot essentially nested components referencing store property computed property referenced vmodel attribute updates root node data via store trickles render pipeline exactly expected however computed properties child nodes remain value sure bug vue good use case computed property cache busting update issue also exists root node computed properties made methods avoid issue however child nodes still rely computed property described", "d": "11/2016"}, {"body": "later reverted caching enabled default computed properties behavior describing mostly like shared store nt made reactive description still vague determine real cause think bug opening separate issue proper reproduction", "d": "11/2016"}, {"body": "thinks tolerious", "d": "11/2016"}, {"body": "implemented although like backport noncritical change requires nontrivial effort given bandwidth reducing scope number critical features low hanging fruits unfortunately implemented", "d": "11/2016"}, {"body": "seen problem well safari mobile desktop code looks like timeout occur reason happens occasionally around frustratingly also means ca nt reliably repeat bug see nothing weird console except mixedcontent warnings http https suppose culprit code works fine firefox chrome", "d": "11/2016"}, {"body": "vue reference", "d": "11/2016"}, {"body": "works thx", "d": "11/2016"}, {"body": "item array detailrowid contains dynamic data getting referenceerror detailrowid defined possible handle kind access", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "curious people thread interested type safety vue component ide features autocompletion eg prompt feel ts vue nt prerequisite implementing ide features writing projects using vue component ts everything else far feeling type vuex store great never found needing much type vue component hooking data actionsgetters store template although appreciate itsfrank herringtondarkholme work would nt use vuetypescript keeping templatestylescript visual proximity file important avts looks promising find benefit brings nt outweigh complexity brings", "d": "11/2016"}, {"body": "understand arguments regarding hard time making ts vuejs work fully together pragmatic approach may seem sensible like autocomplete feature working building production code pure ts makes sleep really good night seems like close could get class back could become beatiful maybe would help correct med wrong templates like could show boot project using vuetsloader using vuets files maybe merge tsloader using within vue files vanilla ts use far understand biggest unresolved issue use tsx file via tsc support pass react hand core component ts support close able make ts integration nearly painless hope next project make use ar ts goodies", "d": "11/2016"}, {"body": "druppy gotten spread operator work jsx running issue posted", "d": "11/2016"}, {"body": "might quirky found setting vue sfc file type typescript enough editors give semantic completion though highlighting lost works vscode vim", "d": "11/2016"}, {"body": "herringtondarkholme would mind sharing screenshot vscode", "d": "11/2016"}, {"body": "vim vscode usefule comment mhegazy guess ts service robust enough ignore html tags editors sending service", "d": "11/2016"}, {"body": "well salsa giving best guess novdec vscode plans restore js support html write vue language server based vscode html language server leverage salsa enable intellisense language features jsts vue sfc would nt go details digress topic interested open issue continue discussion", "d": "11/2016"}, {"body": "seanjm nope bit turned fact need use ts babel hope new feature ts bring focus able use different code models vue really good performance low footprint really makes vue solid choice", "d": "11/2016"}, {"body": "druppy debugged posted working configuration gist", "d": "11/2016"}, {"body": "use following approach", "d": "11/2016"}, {"body": "note difference valid html syntax vs fullyvalid html spec makes distinction one conforming class documents conforming documents comply conformance criteria documents one conformance criteria authors must use elements attributes attribute values permitted specification means documents using attribute nonconforming also note conformance checkers must check input document conforms parsed without browsing context meaning scripts run parser scripting flag disabled however may matter conforming useragents still required parse attribute intended", "d": "11/2016"}, {"body": "maybe would good idea document designdecision somewhere inside vuedocumentation attributes xmlattribute compatible containing colon sign must decided sometime past relation specs would nice seems lot confusion whole data thing nt get wrong used understand html differently seems work inside browsers fails syntaxchecker even like checker tried dummy website mine syntax checker sees attributes fails errors like evaluation used webframeworks customer requires website syntaxcheckercompliant vue ca nt used could developers please references designdecision coming yes feels bit odd discuss closed issue", "d": "11/2016"}, {"body": "template syntax error invalid expression vattr src image", "d": "11/2016"}]