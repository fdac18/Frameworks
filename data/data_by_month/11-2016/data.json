[{"title": "shallow compare amp test renderer strict dependencies", "body": "using multiple libraries call various versions react react native npm tries find common compatible version everything warnings persist npm warn reactaddonsshallowcompare requires peer react none installed npm warn reacttestrenderer requires peer react none installed necessary tightly couple versions would beneficial loosen dependencies let consumer library choose version use", "num": "8468", "d": "11/2016"}, {"title": "reacttestrenderer install dependencies npm", "body": "currently using reacttestrenderer version npm version jest version running tests use reacttestrenderer seeing error find module objectassign reacttestrendererjs resolverresolvemodule object object issue npm", "num": "8466", "d": "11/2016"}, {"title": "onpaste triggered using html svg elements google chrome", "body": "following react component classes js const somesvg reactcreateclass displayname somesvg render return reactcreateelement svg null const somediv reactcreateclass displayname somediv render return reactcreateelement div tabindex style height onpaste event gt event listener triggered google chrome consolelog eventclipboarddatagetdata text reactcreateelement somesvg unable listen paste event google chrome firefox works fine interesting thing add html element content without content paste child paste event triggered checked developer tools browser paste event triggered always stopped somewhere react code svg child element svg child element html child element without content open following examples google chrome firefox comparison example working paste listener example working paste listener instructions use examples copy something clipboard click blue area focus div element paste clipboard using ctrlv see console logged", "num": "8461", "d": "11/2016"}, {"title": "reacttestrenderer componentwillunmount called inner component instance", "body": "want request feature report bug bug current behavior componentwillunmount inner instances never called jest tests first works second js import react react import renderer reacttestrenderer test top level componentwillunmount works gt let count class extends reactcomponent componentwillunmount count render return const inst renderercreate instunmount expect count toequal test inner componentwillunmount works gt let count class extends reactcomponent componentwillunmount count render return const inst renderercreate instunmount expect count toequal expected behavior two test pass component unmounted proper lifecycle whatever nesting versions react browser os affected issue work previous versions react react", "num": "8459", "d": "11/2016"}, {"title": "fullscreen onmouseout listener", "body": "container moved fullscreen mode listener nt triggered children components move mouse exampledemo use example demo chrome open console click button try nt move cursor fullscreen move cursor expected behavior assume mouse listener triggered mouse leaves component", "num": "8456", "d": "11/2016"}, {"title": "questions unstablecreateportal", "body": "talking vjeux whether remain around pointed newupcoming unstablecreateportal api using former render subtrees move atom panes panels since control node rendering subtree move around see fit two questions continue able move dom node wherever want eg attached document like people modals continue retain context subtree", "num": "8455", "d": "11/2016"}, {"title": "read property purgeunmountedcomponents undefined", "body": "getting error trying render component read property purgeunmountedcomponents undefined mean fix", "num": "8454", "d": "11/2016"}, {"title": "document componentdidupdate happens paint", "body": "docs componentdidupdate invoked immediately updating occurs method called initial render use opportunity operate dom component updated please correct wrong last component large sequence nested component changes cdu last child parent called sequence last cdu called flushbatchedupdates run turn calls runbatchedupdates read comment sebmarkbage context correct docs say something like use opportunity enqueue dom operations next execution thread edit guess issue also related new hooks proposal componentwasmounted componentwasupdated meanwhile would great docs specified componentdidmountupdate use requestanimationframesettimeout access rendered dom", "num": "8452", "d": "11/2016"}, {"title": "objects valid react child error occurring update", "body": "bug updating error showing previously working code app fails load win following error app continues work fine browsers thanks", "num": "8449", "d": "11/2016"}, {"title": "expose root ref default allow automatic forwarding setnativeprops", "body": "react native touchablehighlight requires children forward setnativeprops implemented builtin components must manually implemented custom components causes big incompatibilities library like native base mention custom components developer creates apparently preferred pattern theming projects create common directory inside main js directory folder houses commonlyreused components throughout app example declare common text header components could remedied making available default ref points root node would allow generic forwarding written base class components could inherit would essentially forward props chain hit concrete builtin component arguments making ref available default", "num": "8447", "d": "11/2016"}, {"title": "developing packages invalid manually calling reactproptypes warnings logged", "body": "want request feature report bug current behavior developing react component package common practice local copy project work need copy react installed directores otherwise node browserify nt tested webkit able find results ton warnings manually calling reactproptypes validation function current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior assuming means two copies react page preferably first class support developers working methodology barring ability test condition directly would nice disable warnings fashion versions react browser os affected issue work previous versions react currently testing react", "num": "8445", "d": "11/2016"}, {"title": "production build broken nodehaste since", "body": "issue tighly coupled issue jest comment explanation related react dupe info current issue version update dissapeared production code production mean code ships npm jest tests became broken way fix version tags latest version ca nt used workaround git tags compare shows interesting commit see commit comes pull request", "num": "8442", "d": "11/2016"}, {"title": "npm install microtime problem", "body": "bug want install reactdom docker ubuntu environment got error microtime install varwwwnodemodulesmicrotime nodegyp rebuild gyp info worked ends ok gyp info using nodegyp gyp info using node linux gyp http get gyp http gyp http get gyp http gyp info spawn gyp info spawn args usrlocallibnodemodulesnpmnodemodulesnodegypgypgypmainpy gyp info spawn args bindinggyp gyp info spawn args f gyp info spawn args make gyp info spawn args gyp info spawn args varwwwnodemodulesmicrotimebuildconfiggypi gyp info spawn args gyp info spawn args usrlocallibnodemodulesnpmnodemodulesnodegypaddongypi gyp info spawn args gyp info spawn args gyp info spawn args dlibrarysharedlibrary gyp info spawn args dvisibilitydefault gyp info spawn args gyp info spawn args dnodegypdirusrlocallibnodemodulesnpmnodemodulesnodegyp gyp info spawn args dnodelibfilenodelib gyp info spawn args dmodulerootdirvarwwwnodemodulesmicrotime gyp info spawn args depth gyp info spawn args noparallel gyp info spawn args generatoroutput gyp info spawn args build gyp info spawn args goutputdir gyp info spawn make gyp info spawn args buildtyperelease c build make entering directory varwwwnodemodulesmicrotimebuild make warning file microtimetargetmk modification time future cxx target releaseobjtargetmicrotimesrcmicrotimeo file included error variable field addgcepiloguecallback declared void isolate gcepiloguecallback callback error gcepiloguecallback member isolate isolate gcepiloguecallback callback error expected primaryexpression gctypefilter gctype gctypefilter kgctypeall error variable field removegcepiloguecallback declared void isolate gcepiloguecallback callback error gcepiloguecallback member isolate isolate gcepiloguecallback callback error variable field addgcprologuecallback declared void isolate gcprologuecallback callback error gcprologuecallback member isolate isolate gcprologuecallback callback error expected primaryexpression gctypefilter gctype gctypefilter kgctypeall error variable field removegcprologuecallback declared void isolate gcprologuecallback callback error gcprologuecallback member isolate isolate gcprologuecallback callback recipe target releaseobjtargetmicrotimesrcmicrotimeo failed make releaseobjtargetmicrotimesrcmicrotimeo error make leaving directory varwwwnodemodulesmicrotimebuild gyp err build error gyp err stack error failed exit code gyp err stack childprocessonexit gyp err stack emittwo gyp err stack childprocessemit gyp err stack processchildprocesshandleonexit gyp err system linux gyp err command usrlocalbinnode usrlocallibnodemodulesnpmnodemodulesnodegypbinnodegypjs rebuild gyp err cwd varwwwnodemodulesmicrotime gyp err node v gyp err nodegyp v gyp err ok npm info lifecycle microtime failed exec install script npm warn install microtime microtime install npm warn install microtime exit status npm info lifecycle reactdom reactdom npm info lifecycle reactdom reactdom asap nodemodulesreactdomnodemodulesasap corejs nodemodulesreactdomnodemodulescorejs promise nodemodulesreactdomnodemodulespromise whatwgfetch nodemodulesreactdomnodemoduleswhatwgfetch fbjs nodemodulesreactdomnodemodulesfbjs react nodemodulesreactdomnodemodulesreact holdshort varwww possible solution bump microtime", "num": "8435", "d": "11/2016"}, {"title": "optimized build", "body": "target newer browsers chrome firefox ms edge without supporting internet explorer build optimizes output scenario excluding code deals internet explorer quirks also possible es output minimize size output", "num": "8434", "d": "11/2016"}, {"title": "consider exposing reactelement factory function", "body": "currently react exposes outside world internally calls function create actual element instance performs copy create extract clojurescript world many libraries wrap react provide cljsidiomatic interface using cljs persistent maps props hiccup syntax popular convenient far ideal since first allocate cljs data structures addition particular inconvenient convert props data react would safe lot overhead could call directly saving whole lot work would nice others would anyways maybe obscure name discourage use fine marked experimental otherwise officially supported happy create matching pr folks agree expose somewhere", "num": "8431", "d": "11/2016"}, {"title": "error messages swallowed certain edge cases", "body": "would like report bug currently certain cases like one reproduced critical error messages displayed developer console sometimes view render left guesswork identify culprit relevant jsfiddle see error thrown one deliberately put line blocks proper rendering view yet trace show developer console expected behaviour would catch error show developer console current workaround wrap calls ugly works suppose design react usually excellent error reporting capabilities aware issue might caused imperfections code way improve maintaining functionality ears struggling issue quite time jsfiddle see error reproduced react", "num": "8430", "d": "11/2016"}, {"title": "issue collaboration react reactdom", "body": "want request feature report bug yes wan na report bug current behavior u install react reactdom last version intellij window npm react reactdom nodemodules reactdom indexjs found file moduleexports require reactlibreactdom nodemodules reactlibreactdom havent got file nodemodules reactlibreactdomfactory wont use reactdom import reactdom reactdom find error error reactdomindexjs module found error resolve file directory u install react reactdom havent got problems current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "8429", "d": "11/2016"}, {"title": "onchange work well japanese ime react", "body": "trying make simple text box component suggestion feature however ie event japanese ime conversion arbitrarily decides press enter key examined little seems occurred ie seems occurred browsers chrome old ver ie react version seemed similar issues bug already fixed another bug maybe like make", "num": "8423", "d": "11/2016"}, {"title": "classname nt work attribute present", "body": "want request feature report bug report bug current behavior pass attribute nt work output instead dom current behavior bug please provide steps reproduce possible minimal demo problem demo expected behavior render instead versions react browser os affected issue work previous versions react", "num": "8419", "d": "11/2016"}, {"title": "\u663e\u793a\u9875\u9762\u63cf\u8ff0", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "8418", "d": "11/2016"}, {"title": "component keys array index", "body": "question hope someone provide information following statements nt recommend using indexes keys items reorder would slow may read indepth explanation keys necessary interested last resort pass item index array key work well items never reordered reorders slow anyone provide explanation references links docs subject number items talking rendering slow sort", "num": "8410", "d": "11/2016"}, {"title": "react devtools download appear chromeextension", "body": "bug report expected behavior react suggest download devtools extension page extension permission inject devtool actual behavior reproducing create chrome extension page uses react load extension chrome open page observe console version google chrome react", "num": "8409", "d": "11/2016"}, {"title": "include polyfillio html", "body": "considered earlier settled shipping objectassign promise fetch polyfills default like reconsider adding polyfillio scripts html many people rely features without realizing need polyfills using polyfillio means easy opt know include polyfills specifically exclude objectassign promise fetch already", "num": "8397", "d": "11/2016"}, {"title": "firefox validation triggers input component render", "body": "using native form validation loading page form containing input prop set triggers browser validation immediately produces firefox native error highlighting firefox appears run validation dom used set value existing input component behavior seen angular run already", "num": "8395", "d": "11/2016"}, {"title": "facebook", "body": "notice facebook services nearest time open account mobile phone safari tried see message transfer install messenger app also notice sometime messages come inbox message come different messages like filters request archive message", "num": "8393", "d": "11/2016"}, {"title": "use addonsperf addonsreacttransitiongroup amd environment", "body": "use requirejs enviroment try use get regression", "num": "8392", "d": "11/2016"}, {"title": "warnning encountered two children key", "body": "sure key unique also print warning error react version thank", "num": "8390", "d": "11/2016"}, {"title": "documentation missing mention refs", "body": "want request feature report bug bug current behavior thinking react document quickstart section documentation contains code uses refs refs mentioned text refs used js code pen lines expected behavior refs explained thinking react earlier section quickstart section documentation reader able follow along versions react browser os affected issue work previous versions react react issue live url", "num": "8382", "d": "11/2016"}, {"title": "react app rendering", "body": "want request feature report bug bug current behavior app nt render current behavior bug please provide steps reproduce possible minimal demo problem via similar template build react app webpack launch emulator see blank screen halfcompiled react app following error expected behavior render chrome firefox etc versions react browser os affected issue work previous versions react temporarily shrinkwrapped dependencies continue serve app starting believe coming dependency may relying shrinkwrapped versions dependencies left new one broken right one old one continues work across browsers", "num": "8379", "d": "11/2016"}, {"title": "documentcaretpositionfrompoint caretrangefrompoint typecheck", "body": "want request feature report bug bug current behavior neither documentcaretpositionfrompoint standards track documentcaretrangefrompoint old syntax typecheck producing following flow error versions react browser os affected issue react flow", "num": "8377", "d": "11/2016"}, {"title": "classname named active invaild rerender", "body": "", "num": "8376", "d": "11/2016"}, {"title": "incorrect warning link", "body": "want request feature report bug bug current behavior link provided warning shown invalid aria prop redirects facebookcom current behavior bug please provide steps reproduce possible minimal demo problem via similar template fiddle reproduce check console use invalid aria prop name component click link shown console expected behavior go link versions react browser os affected issue work previous versions react", "num": "8373", "d": "11/2016"}, {"title": "respondereventplugin regression react", "body": "want request feature report bug report bug current behavior longer recognizes start dom events current behavior bug please provide steps reproduce possible minimal demo problem via similar template helper checks mousetouch start events section code used react react means event plugin longer recognize start events pr exposes issue uses expected behavior behaviour exhibited react versions react browser os affected issue work previous versions react works react nt work react", "num": "8370", "d": "11/2016"}, {"title": "reactcsstransitionsgroup nt execute enter animation properly cases", "body": "trying build nifty animation launching dialogs running snag reactcsstransitionsgroup goal ensure dialog looks like zooming button launched sample shows working demo unexpected behavior unexpected behavior exhibited following click first button either one works perfectly click second button enter animation play nt matter many buttons add first works expected additional buttons wo nt show enter animation properly leave animation works buttons reproduced glamor aphrodite feels good rule css library culprit trying figure something wrong code unintended usage reactcsstransitionsgroup bug thanks also posted", "num": "8369", "d": "11/2016"}, {"title": "production mode results everchanging generated keys", "body": "seeing mysterious behaviour regards generated keys production mode note keys relayadhocquery tabpanel components bottom also note parent hierarchy nt change forced update parent keys question simply append loosing state everything works expected development mode component instances reused based reuse keys unfortunately despite best efforts unable isolate exactly happens ie simply reproducible test case maybe someone knowledge key generating algorithms points us towards solution react seeing evergreen browsers", "num": "8367", "d": "11/2016"}, {"title": "firefox blocks react dev addon csp set regardless whitelisted", "body": "want request feature report bug bug current behavior firefox blocks dev addon message despite csp section believe subbed firefox since csp setting works chromium addon tries load loads opposed shows policy look headers request tells got csp serving correctly ff react start dev tools never connect react web app says looking react current behavior bug please provide steps reproduce possible minimal demo problem via similar install firefox react dev plugin visit left development machine running note csp violation dev console expected behavior addon work allowed scriptsrc indeed work whatever csp versions react browser os affected issue work previous versions react react plugin firefox affected os debian", "num": "8366", "d": "11/2016"}, {"title": "fail update dom style attribute", "body": "want request feature report bug bug current behavior style attribute updated correctly set time rerender issue suppose would tested example expected behavior dom element style last rendered one affected previous style value versions react browser os affected issue work previous versions react tested chrome react", "num": "8362", "d": "11/2016"}, {"title": "breaking feature request make jsx even like js", "body": "think time make jsx even like js less like html consider following jsx writing like main subjective reason looks right objective reason would could introduce javascript comment syntax similar things could done jsx attributes instead would like even better nt put much thought generally inspiration comes", "num": "8360", "d": "11/2016"}, {"title": "ref callback argument null", "body": "want request feature report bug bug current behavior ref callback gets called argument instead instance component occurs write component name starting uppercase character pascalcase write component starting lowercase character camelcase everything works expected jsfiddle demonstrates get argument demonstrates get correct reference see renamed expected behavior always pass component instance argument callback versions react browser os affected issue work previous versions react occurs nt tested versions", "num": "8359", "d": "11/2016"}, {"title": "overridingextending reacthostcomponentcreateinternalcomponent", "body": "would nice able override extend reacthostcomponentcreateinternalcomponent expand set elements rendered beyond html extjsreactor patching createinternalcomponent function tag starts specified prefix default x creates ext js component love stable way looks like something along lines originally considered never fully implemented recently removed advice sustainable approach would consider api", "num": "8358", "d": "11/2016"}, {"title": "react unable fully removing select mobile browsers", "body": "want request feature report bug bug current behavior please refer fiddle goal select onchange event select removed however unexpected thing occurs mobile tested latest ios latest mobile chrome safari select value select replaced standard button nothing tap button browser brings select menu even though select element look dom select element expected behavior select removed via onchange button shows tapping button nothing versions react browser os affected issue work previous versions react browsers latest mobile chrome amp safari os latest ios", "num": "8357", "d": "11/2016"}, {"title": "undocumented alteration arguments", "body": "upgrading reactreactdom noticed synthetic event possibly others receiving arguments differently event without custom arguments passed receives arguments observed console jsfiddle arguments look like viewable console ended causing problems application passing additional argument click handler expecting received second argument upgraded argument received third sure considered issue react nt see anything release notes way event handling thought would raise case way ended adjusting using spreadrest operator passingreceiving arguments event handler function may approach taken begin ps thank hard work guys put super excited fiber rock", "num": "8354", "d": "11/2016"}, {"title": "reactdom typeerror consoledebug function", "body": "experiencing following bug using react reactdom run team test suite uses mocha following exception thrown mocha crashes without running tests looking stack trace error coming line code surrounding line code calls exception message makes seem like function nodejs believes exists fact documentation nodejs console shows debug function interestingly running team project works fine time see exception try run test suite", "num": "8352", "d": "11/2016"}, {"title": "turn strict eslint rule back", "body": "upgrading eslint latest version turn strict rule conflicts combined flow statements opening issue track turning strict back either change eslint new custom rule use strict means", "num": "8344", "d": "11/2016"}, {"title": "issue still happening ie reactcloneelement handles props differently reactcreateelement", "body": "know issue addressed previously still seems happening ie browsers use cloneelement defaultprops values come undefined explicitly sent prop", "num": "8343", "d": "11/2016"}, {"title": "error find module reactlibreactperf", "body": "bug report current behavior importing throws following error checked file nt exist directory expected behavior nt throw error versions react browser os affected issue work previous versions react latest version using issue updating may introduced two", "num": "8342", "d": "11/2016"}, {"title": "error message stack trace still useless time possible solution enclosed", "body": "using react reasonably sure behaviour seen anything release notes regarding improved error messages render problem course source stacktrace simply originating call certain occasions error messages includes name component class whose method check even terribly useful larger components understand limitations much debug information tag along element creation code normal operation might practical simply rerender recheck using heavyweight tracing faulty call error already happened proof concept works great helpful path idx path consolewarn type eltype childcontextmaphas el ctx childcontextmapget el typeof eltype function eltypeprototype instanceof reactcomponent let element new eltype elprops ctx let childcontext typeof elementgetchildcontext function childcontext objectassign ctx elementgetchildcontext reactchildrenforeach elpropschildren child gt childcontextmapset child childcontext findinvalidelement elementrender ctx else findinvalidelement eltype elprops ctx ctx else elprops amp amp elpropschildren let idx reactchildrenforeach elpropschildren child gt quick kludgedtogether elementtree renderer tracks path individual node tree thus able report type incorrect together stack trace allows exact identification faulty node example path though verbose followed without ambiguity starting stacktrace ends method method method second child first child method method first child method first child first child get idea", "num": "8340", "d": "11/2016"}, {"title": "unable find element id undefined", "body": "react well invariant unable find element id undefined error happens specific yet special kind component update triggered using mobx state management latest webpack guess nt qualify proper issue report could localize issue specific component removed solves completely nothing special component working sidenote app rendered server successfully crash happens client move cursor particular component crash error constantly consoleloged move cursor outside nothing gets logged attaching listeners cursor movements", "num": "8338", "d": "11/2016"}, {"title": "nbsp renders differently production", "body": "using render method like renders expected dev mode production renders strange see attacked images dev mode prod mode notice strange using react", "num": "8336", "d": "11/2016"}, {"title": "hard dependency reacthotloader gt", "body": "tried uprev version react every major release since often help us perf core issues addressing updated yesterday however seems though breaking change comes development process although apps build successfully break try dev using webpackhotreloading process wepback spits following error file creating react component believe upgrading newest prerelease reacthotloader would completely fix issue sure proceed since documentation points fairly experimental think going stay react since nt require us update hotreloader configured webpackbabel assume nt oversight removal many lib files correct path wondering another work around switching prerelease hotreloader thanks", "num": "8330", "d": "11/2016"}, {"title": "false positive warning manually calling reactproptypes validation function", "body": "os macos node npm react getting warning inherited codebase interesting setup uses npm package therefore different react instance render dom details comment makes wonder could cause issue package using component defined react test copied code straight docs quite sure warning nt warranted jsx class greeting extends reactcomponent render return hello thispropsname greetingproptypes name reactproptypesstring still getting head around architecture codebase something like node server waits requests imports component say defined react instance imports internal library npm package request comes passes instance imports guess react instance uses render passed component returns rendered html take render logic package bring app nt get warning", "num": "8326", "d": "11/2016"}, {"title": "reactjs page android webview communication", "body": "want request feature report bug current behavior didnt find good way communicate android webview reactjs page problem im facing landing page written reactjs loaded webview backbutton want close webview activity click backbutton versions react browser os affected issue work previous versions react", "num": "8325", "d": "11/2016"}, {"title": "reacttestrenderer invariant violation getnodefrominstance invalid argument", "body": "following example order use snapshots jest run bug within seems fail whenever finddomnode used component instance minimal code replicate bug js import react component react import finddomnode reactdom import renderer reacttestrenderer class mycomp extends component componentdidmount finddomnode render return renderercreate error js invariant violation getnodefrominstance invalid argument react versions react reactdom reacttestrenderer", "num": "8324", "d": "11/2016"}, {"title": "delete examples except fiber amp basicjsx", "body": "many people understand something new reading docsarticles good practice explore examples parallel current examples issues depends babel deprecated wait dom outdated libraries like webcomponentsjs generally must parse mind whole file understand small component works possible solution could rewriting examples separate modules readme etc simple scripts useful could make pr days", "num": "8321", "d": "11/2016"}, {"title": "isinjected proptypes", "body": "would like propose small addition proptypes others encountered issues using redux connect inject information store see wandering maybe adding isinjected proptype would make sense could work similar isrequired chained datatype however isrequired validates value passed isinjected validates value passed example mycomponentproptypes optionalbool reactproptypesbool requiredbool reactproptypesboolisrequired injectedbool reactproptypesboolisinjected wanted vet idea bothering pull request", "num": "8320", "d": "11/2016"}, {"title": "getrootids defined reactcomponenttreehookjs", "body": "started running bug today everything going smoothly started happening updated error gets thrown page try use reactdom render something dom code import react react import reactdom reactdom import app mainapp reactdomrender documentqueryselector wrapper using react reactdom bundling everything rollup buble screenshot chrome tells happening", "num": "8318", "d": "11/2016"}, {"title": "react dom server nt contain separate copy reconciler", "body": "want request feature report bug nt know technically bug certainly regression inflates size reactdomserver package used client current behavior might best quote release announcement react another thing watch react dom server size react dom since contains copy react reconciler nt recommend using react dom server client cases expected behavior like react one copy reconciler needed using react dom react dom server use case using react dom server client example selectivityjs allows developers specify custom templates customize rendering ui component selectivity core nonreact library accepts templates either strings functions returning strings manually inserted dom selectivity react api also includes plugin wraps templates specified functions returning react elements see source code details plugin relies reactdomserver transform react elements string understood selectivity core example rather specific single library think use case specifying templates nonreact libraries jsx might widely applicable", "num": "8316", "d": "11/2016"}, {"title": "reactaddonstestutils depends reactdom instead react", "body": "want request feature report bug report bug current behavior reactaddonstestutils peer dependency uses peer dependency reactaddonstestutilsindexjs reactaddonstestutilsindexjs code contains fail given current dependencies reactdom dependencies previously needed break code breaking change leads errors like current workaround", "num": "8314", "d": "11/2016"}, {"title": "reacttestrenderer reactmount gone", "body": "updating react facing issues missing reacttestrenderer reactmount tried look release notes could see anything regarding reacttestrenderer gone calling directly using ideas nt change anything code rollback everything works fine", "num": "8312", "d": "11/2016"}, {"title": "feature request proptype name", "body": "feature request fill name attribute add static tostring method proptypes example js const stringproptype proptypesstring expect stringproptypename toequal checktype string const arrayofbooltype proptypesarrayof proptypesbool expect arrayofbooltypename toequal bound checktype array bool const shapetype proptypesshape foo proptypesbool bar proptypesnumber expect shapetypename toequal bound checktype shape foo bool bar number maybe useful debugging case need equal components prop types throw exception props generate names prop types could compared current behaviour primitive types could compared string bool number complex types shape arrayof time returns new bound function could compared value problems custom prop types generate undefined name custom prop like fixed adding function name btw feature implemented tcomb lib", "num": "8310", "d": "11/2016"}, {"title": "onclick firing disabled buttons", "body": "latest reactjs release firing disabled elements child html elements previous reactjs version onclick handler would called note onclick called remove button", "num": "8308", "d": "11/2016"}, {"title": "negitive consequences licence", "body": "take repost chatter internally", "num": "8307", "d": "11/2016"}, {"title": "reacttestutilssimulate longer works expected", "body": "firstly congrats release update couple projects tests failing given changes discussed workaround use however still entirely clear difference one used feels like docs updated reflect change finally reason appear docs concerned others going caught change also", "num": "8305", "d": "11/2016"}, {"title": "minor nt supposed break much stuff", "body": "packages broke due missing stuffs seems like nt happen even build process broke suddenly due react update react packages set thanks", "num": "8303", "d": "11/2016"}, {"title": "problems updating react", "body": "getting error files using latest version react webpack help", "num": "8302", "d": "11/2016"}, {"title": "reactdom work amd enviroment", "body": "try load reactdom requirejs get error mismatched anonymous define looking reactdom distribution notice seem two umd wrappers top probably related change packaging structure", "num": "8301", "d": "11/2016"}, {"title": "npm access request tomocchino", "body": "order publish react npm need access following repositories reactaddonscreatefragment reactaddonscsstransitiongroup reactaddonslinkedstatemixin reactaddonsperf reactaddonspurerendermixin reactaddonsshallowcompare reactaddonstestutils reactaddonstransitiongroup reactaddonsupdate reactdom reactnativerenderer reacttestrenderer react", "num": "8300", "d": "11/2016"}, {"title": "firefox invalid", "body": "want report code follow js var textarea reactcreateclass handledrop function e e e event epreventdefault epreventdefault else ereturnvalue false estoppropagation estoppropagation else ecancelbubble true return false handledragover function e e e event epreventdefault epreventdefault else ereturnvalue false return false render function return drag amp drop docx file firefox browser trigger default behavior help", "num": "8296", "d": "11/2016"}, {"title": "way judge instance component child another", "body": "hello team writing framework react system facing problem judge instance component child another may deep layer parent instance think function resolve problems cound find need help thanks lot", "num": "8295", "d": "11/2016"}, {"title": "react distribution", "body": "react amazing library literally changed way get develop applications job made pleasant experience day day however absolutely hate many legacy things affect react way react built terrible issues seen seems legacy build system monstrosity could never fixed internal facebook reliance things major part community suffers one way react extremely large despite react clones like preact inferno popular alternatives react distributed size well large comparison vue angular react compiled googles closure compiler start change could switching modern build system like webpack rollup create smaller library output particularly rollup smaller bundles people use react web applications much people would love contribute change way react built someone familiar react current build system tightly coupled facebooks usage able get pr successfully merged hoping rewrite release react fiber fixed new found performance movement going javascript community team facebook behind react accept call action make change better reliant react well shit luck", "num": "8294", "d": "11/2016"}, {"title": "expose rendersubtreeintocontainer react native", "body": "never built react native use cases layers react native basically need port reactnativemount", "num": "8289", "d": "11/2016"}, {"title": "immutable html elements react", "body": "hi everyone first report please bear nt make much sense facing issue interoperability webcomponents work proprietary library dom nodes custom webcomponent element frozen ie extensible get error console upon inspecting seems thrown following snippet react seems adding new property dom node precaching things fail case helps also pasted entire stack trace question valid react assume dom node mutable precaching omit nodes able attach reproducible test case due proprietary nature custom webcomponent nt seem able reproduce issue simple webcomponents try really required however stacktrace let know something obvious missing", "num": "8288", "d": "11/2016"}, {"title": "feature request add errorshaped proptype option", "body": "want request feature report bug request feature current behavior currently errorshaped proptype option minimal use case js class myimage extends component async fetchurl try const src await requrl fid thissetstate src catch error thissetstate error throw error render const src error thisstate return class image extends component static proptypes src proptypesstring error proptypeserror lt requested feature render const src error thisprops const src error errorsrc src return", "num": "8286", "d": "11/2016"}, {"title": "feature reactcsstransitiongroup delays", "body": "hi want make feature request adding way delay enterappearleave component propose adding new props transitionenterdelay delay element begins transition defaults transitionappeardelay delay element begins transition defaults transitionleavedelay delay element begins transition defaults defaults proposed props wouldt add breaking changes existing users example describes reasons behind request use case currently creating project contains navigable subpages subpage unique enter leave animation unique enterleave duration possible change subpage another order changing new page previous subpage leave must end new page begins entering need delay entering new subpage old one leaves currently object defines enterleave durations subpages helper function calculates correct timeouts delays current subpage component depending current state subpage contains multiple different elements combination creates enterleave animation sequences enterleave transitions css class based possible add additional parent element add needed behaviour would need entirely manage enterleave stuff javascript rather css adding class", "num": "8280", "d": "11/2016"}, {"title": "future refs", "body": "hi writting use refs pilot tests would love able uniformise tests right pr achieve pretty well string refs since string refs considered legacy since still seems problems refs wondering plan concerning refs moreover would possible support shallow rendering looked think possible return mount given element instead aware breaking change make like understand plan andor logic behind returning maybe could help oh since much trouble interested reason changing string refs callback refs thank help", "num": "8275", "d": "11/2016"}, {"title": "add reactjs irc note support page", "body": "want request feature report bug docs change think used pointer freenode reactjs channel support page reactiflux linked could note added back channel still users hours day several us frequently answer questions pretty good flow conversation questions throughout day", "num": "8268", "d": "11/2016"}, {"title": "add debug info error typeerror read property gethostnode null", "body": "want request feature report bug feature current behavior undefined component somewhere deep hierarchy react throws message typeerror read property gethostnode null objectgethostnode webpack reactlibreactreconcilerjs expected behavior please add debugging information place happens least name current parent node versions react browser os affected issue work previous versions react", "num": "8267", "d": "11/2016"}, {"title": "function returns incorrect checksum opera presto browser", "body": "discovered seems like platform bug opera browser presto engine causing server side rendered components always rerendered client checksum match server rendered checksum addition assignment expressions single statement results incorrect checksum function called test case used reproduce bug download link opera mac could install run test see fail old browser fix extremely unlikely still used many embedded devices tivo one finding however react work around bug splitting line function multiple statements", "num": "8264", "d": "11/2016"}, {"title": "need way receive pass context regardless contexttypeschildcontexttypes", "body": "want request feature report bug feature current behavior component access via thiscontext anything defined childcontexttypes parent contexttypes child current behavior bug please provide steps reproduce possible minimal demo problem via similar template na expected behavior would like way take context available regardless contexttypes also pass via context variables defined childcontexttypes similar proptypes validation versions react browser os affected issue work previous versions react use case portal component renders child div end body using reactdomuseful fixed positioned components nt want stacking context parent works well pass context context comes owner component rendered new html element import react children purecomponent proptypes react import unmountcomponentatnode render reactdom renders children end body export default class portal extends purecomponent static proptypes children proptypesnodeisrequired componentdidmount thisel documentcreateelement div documentbodyappendchild thisel renderintoel gt const children thisprops render childrenonly children thisel componentdidupdate children children thispropschildren thisrenderintoel componentwillunmount unmountcomponentatnode thisel documentbodyremovechild thisel render return null would like able pass context available portal tree rendered body tag something like import react children purecomponent proptypes react import unmountcomponentatnode render reactdom class contextprovider extends purecomponent static proptypes context proptypesobject children proptypesnodeisrequired getchildcontext return thispropscontext render return childrenonly thispropschildren renders children end body export default class portal extends purecomponent static proptypes children proptypesnodeisrequired need receive context static contexttypes componentdidmount thisel documentcreateelement div documentbodyappendchild thisel renderintoel children context gt render thisel componentwillreceiveprops children nextcontext children thispropschildren nextcontext thiscontext thisrenderintoel children nextcontext componentwillunmount unmountcomponentatnode thisel documentbodyremovechild thisel render return null", "num": "8262", "d": "11/2016"}, {"title": "make sure jest tests fail error thrown within jsdom event handler", "body": "situations unit tests use dispatchevent jsdom dom node order use jsdom event system appears event handler throws ex change onchange handler test throw error silently ignored cause test fail jsdom make attempt report error hook jest config scriptsjesttestframeworksetupjs see fail test triggers exception behavior implementation reportexception looks like might able onerror handler nt work hooking virtual console may possible", "num": "8260", "d": "11/2016"}, {"title": "documentation examples purecomponent vs component", "body": "think would nice examples comparing purecomponent component", "num": "8255", "d": "11/2016"}, {"title": "awkward output shallow rendering snapshots components nodemodules", "body": "want request feature report bug bug current behavior experiencing awkward output shallow rendering snapshots components imported via nodemodules renders expected behavior extra closing tag contain component name", "num": "8253", "d": "11/2016"}, {"title": "using webcomponentcustomelement react", "body": "want request feature report bug bug current behavior js class orionnotificationelement extends htmlelement constructor super windowcustomelementsdefine orionnotification orionnotificationelement export default orionnotificationelement import react component react import default orionnotificationelement webcomponentsorionnotification class orionnotification extends component render return using component causes following error uncaught typeerror failed construct htmlelement please use new operator dom object constructor called function pasting customelement definition console calling documentcreateelement orionnotification creates element loading react seems error occurs current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior able instantiate web component versions react browser os affected issue work previous versions react current react current chrome", "num": "8249", "d": "11/2016"}, {"title": "component model", "body": "react one javascript libraries use componentbased software engineering approach cbse component models ejb model com model net model etc want know component model react use react using different kind component model research react behaviour based componentbased software engineering want ask help documentations react component model anything help research thank willing help please send email randichil gmailcom", "num": "8246", "d": "11/2016"}, {"title": "render nt called inside hoc component passing children", "body": "hi writing custom datatable component want add support rich cells example desirable usage used pass props datatable rendering replaced header cells body cells make rich cells working trying save children column rendering cell inject actual rowdata hoc cell rendering class tablecell extends purecomponent renderrichcell const rowdata columndescription thisprops return reactchildrenmap columndescriptioncellchildren cellcomponent gt withrowdata cellcomponent rowdata problem render method column children fakeid example nt called debugger result renderrichcell looks ok provide snapshot needed errors console maybe valid use reactchildrenmap tablecell transform elements another parent", "num": "8245", "d": "11/2016"}, {"title": "fiber handle errors callbacks", "body": "commit phase updates flushed dom errors thrown inside trapped handled later tree committed error thrown callback trapped handled way relevant section code calls callbacks part update queue linked list updates callbacks throw error catch error continue calling rest callbacks good first issue someone interested contributing reactreact fiber please read fiber principles contributing fiber submitting pr", "num": "8238", "d": "11/2016"}, {"title": "fiber fiber root field", "body": "problem component calls must update fiber ancestor fibers root get root ensure root scheduled called multiple times consecutively walk path time callback passed requires additional walk priority child always greater equal priority parent nice optimize stopping whenever condition step fails problem step ca nt assume root tree scheduled pending work roots unscheduled uncaught error thrown tree ensure root scheduled every update one idea would use field fiberroot eg rather unschedule field would still need cleared every update requires access root nt solve problem possible solution could solve adding field fiber always update quickly question whether extra memory usage worth performance gain", "num": "8222", "d": "11/2016"}, {"title": "referenceerror defined calling reactdomrender", "body": "kinda bug ca nt use react way frowningman using nwjs end backend uses nodejs installed npm running application tag include features ecmascript class definition example pointing script javascript use strict anyways const controllername mainwindow const controllerclass require controllername controllerjs var controller new controllerclass loads javascript use strict const react require react const reactdom require reactdom moduleexports class mainwindowcontroller constructor thisview require mainwindowjs thisviewcomponent reactcreateelement thisview null error occurs prevents component javascript use strict const react require react moduleexports class mainwindow extends reactcomponent constructor props works dependencies used nwjs react reactdom time nt access developer console nwjs minimal build flavor nt download sdk deeper look issue browsers without nodejs backend", "num": "8217", "d": "11/2016"}, {"title": "number input defaultvalue accept decimal input", "body": "want request feature report bug report bug current behavior using number input defaultvalue enter decimal value attempting type decimal cursor moved beginning input behavior observed defaultvalue given current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior input allow type decimal versions react browser os affected issue work previous versions react happening react happen", "num": "8211", "d": "11/2016"}, {"title": "documentation sample still using string refs", "body": "sample code step add inverse data flow quick startthinking react still using old string refs handlechange thispropsonuserinput thisrefsfiltertextinputvalue thisrefsinstockonlyinputchecked render return show products stock think better easier understand use new syntax handlechange thispropsonuserinput thisfiltertextinputvalue thisinstockonlyinputchecked ref input gt thisfiltertextinput input ref input gt thisinstockonlyinput input", "num": "8209", "d": "11/2016"}, {"title": "reactcloneelement gives precedence child component props", "body": "want request feature report bug feature would like version gives precedence props already component cloned passed ignoring ones provided default order precedence props provided child component props provided parent used override child component ones default props child component ie prop provided parent child example use case behavior would like achieve red button amp blue idea provide single prop parent sort default individual components override default choose tried manually merging props default value already supplied nt really reliable way thank", "num": "8205", "d": "11/2016"}, {"title": "reactcsstransitiongroup work", "body": "want fade animation code import react proptype react import browserrouter router link match miss reactrouter import jsondata subtitlejson import reactcsstransitiongroup reactaddonscsstransitiongroup import styles letterboxcss export default class letterbox extends reac tcomponent constructor props super props render var boxstyle background black padding borderwidth bordercolor white borderstyle solid location absolute var letterstyle fontfamily \ub9d1\uc740 \uace0\ub515 fontsize color white textalign center var buttonstyleright float right background white marginright fontsize bordercolor black var buttonstyleleft background white float right fontsize bordercolor black changes anyone help", "num": "8203", "d": "11/2016"}, {"title": "react component sending wrong content type multipart form", "body": "want request feature report bug bug current behavior form multipart sending current behavior bug please provide steps reproduce possible minimal demo problem via similar template submit form existing action url expected behavior content type sent versions react browser os affected issue work previous versions react latest", "num": "8197", "d": "11/2016"}, {"title": "purecomponent respond context changes", "body": "want request feature report bug bug current behavior extend purecomponent context component changes props rerender triggered current behavior bug please provide steps reproduce possible minimal demo problem via similar template see bug reproduced expected behavior expect click increment context button would see updated view doenst happen change props see context instantly update actual value view versions react browser os affected issue work previous versions react react chrome fixing reasonably simple think need add shallow comparing context stand purecomponent meantime", "num": "8184", "d": "11/2016"}, {"title": "warn invalid css propertyvalue stripped react", "body": "want request feature report bug feature current behavior react strips invalid css properties nt throw warning expected behavior react strip invalid css properties example throw warning let developer know something wrong passed values versions react browser os affected issue work previous versions react guess versions", "num": "8182", "d": "11/2016"}, {"title": "fiber error handling", "body": "filing todo list x scheduling tests place add tests uncaught errors different roots x remove recursion choose implement sensible behavior fataled roots eg look", "num": "8181", "d": "11/2016"}, {"title": "invalid version installing react", "body": "got following error installing react step reproduce create new project using npm init add dependencies packagejson react npm install expected behavior able install react versions react browser os react windows os notes detected issue starting monday october project dependencies issue present issue reproduced react", "num": "8180", "d": "11/2016"}, {"title": "search broken docs page", "body": "want request feature report bug bug current behavior search input docs page nothing seems firing click handler search iconmagnifying glass current behavior bug please provide steps reproduce possible minimal demo problem via similar template try use search bar expected behavior search docs react index docs internal search engineservice search curious versions react browser os affected issue work previous versions react versions react docs page likely worked never actually tried use search", "num": "8178", "d": "11/2016"}, {"title": "tutorial please clarify use spread properties", "body": "part tutorial confusing data change without mutation end result mutating changing underlying data directly added benefit help us increase component overall application performance appear match either jsx spread operator js spread operator closest match find shallow clone excluding prototype", "num": "8177", "d": "11/2016"}, {"title": "onchange triggered autocomplete chrome ios", "body": "want request feature report bug bug current behavior chrom ios onchange triggered inputs choosing option autocomplete suggestion current behavior bug please provide steps reproduce possible minimal demo problem via similar template smth autofill data chrome try fill form suggested autocomplete option first case onchange handler wo nt triggered expected behavior onchange triggered autocomplete versions react browser os affected issue work previous versions react chrome ios least", "num": "8174", "d": "11/2016"}, {"title": "onchange", "body": "verify works mentioned recently", "num": "8168", "d": "11/2016"}, {"body": "thanks issue kevinzwhuang issue passing event handler nt actually update state react calls internally constructing initial state calling update state want revert back initial state call return value see jsfiddle", "d": "11/2016"}, {"body": "install version corresponding version know depend packages often depend react internals especially means always paired version react reactdom mixing versions likely result undefined behavior", "d": "11/2016"}, {"body": "fair nt depend internals much since likely stick current strategy least", "d": "11/2016"}, {"body": "true better even small dependency internal state module enough avoid mismatching versions think close expected behavior revisit situation changes", "d": "11/2016"}, {"body": "good catch think need add add section wan na make pr technically addon packages also get think", "d": "11/2016"}, {"body": "thanks response yes make pr", "d": "11/2016"}, {"body": "gaearon pr fix issue though unsure addons needs well", "d": "11/2016"}, {"body": "micnic thanks report able verify issue occurs chrome occur firefox appears bug chrome case reproducing issue using plain javascript issue occur removed able reproduce recent versions chrome well safari edge works could webkit issue", "d": "11/2016"}, {"body": "continue able move dom node wherever want eg attached document like people modals stay mounted long node reference node reference changes old portal gets unmounted new one gets mounted continue retain context subtree yes primary purpose api like note available fiber see", "d": "11/2016"}, {"body": "note createportal available fiber see gon na remove unstablerendersubtreeintocontainer though need", "d": "11/2016"}, {"body": "stay mounted long node reference node reference changes old portal gets unmounted new one gets mounted gaearon understand correctly reactdom method return dom node put wherever want even better may eliminate extra container node", "d": "11/2016"}, {"body": "would still create pass container would able move container", "d": "11/2016"}, {"body": "close since nt actionable us hope answered questions please comment best clarify", "d": "11/2016"}, {"body": "load minified reactminjs unminified reactdomjs get error using version fix use unminified copy files minified copy files nt mix match likely change behavior nt get cryptic error", "d": "11/2016"}, {"body": "provide project reproducing", "d": "11/2016"}, {"body": "sure would happen versions match however using multiple reacts nt supported anyway could react back instead eg cd myapp npm link mycomponent cd mycomponent npm link myappnodemodulesreact npm link myappnodemodulesreactdom way using one copy one app", "d": "11/2016"}, {"body": "versions match sure check posting totally understand supporting multiple reacts complete application production since development warning seems reasonable something dev mode try think rather unintuitive typical developer workflow even works might better think way actually support workflow believe simple solution would suppress warning one warning multiple versions loaded version one simple way would set global variable react version number flip switch turn messages reference reason warning specifically logged inside tracks calls proptypes methods run development mode", "d": "11/2016"}, {"body": "even fix particular warnings important things likely break example string refs nt work across reacts best knowledge understand developer warning nt see sense fixing things still broken fundamental ways workaround may unintuitive matches react supposed used one copy fix issues multiple reacts could try fix well nt see valuable given workaround exists fix issues well", "d": "11/2016"}, {"body": "nt know plans fix issues related multiple reacts long longer term plans happy close issue happen links related issues look thanks", "d": "11/2016"}, {"body": "one problems", "d": "11/2016"}, {"body": "providesmodule system never supported way consume react modules recommended way still work lower case commonjs issue using jest reactnative depending code", "d": "11/2016"}, {"body": "issue using jest reactnative depending require react code personally nt use mixedcase commonjs lowercase hase casesensitive fs reactnative project builds successfully may bug somewhere jest internally", "d": "11/2016"}, {"body": "cc yungsters", "d": "11/2016"}, {"body": "cc cpojer", "d": "11/2016"}, {"body": "sebmarkbage nt think saying true used haste modules react previously also fbjs npm package reactnativepackager jest whitelisting package jestreactnative preset well getting back trip bit unsure happened recently seems like reactnative needs haste module proxy", "d": "11/2016"}, {"body": "colch reactnative help curious", "d": "11/2016"}, {"body": "odd case jest definitely knows react module proxy using things work", "d": "11/2016"}, {"body": "hmm actually updated reactnative issue added entry config fully merged reactnative simply changing jest config using rn work nt forwarded jestreactnative reactnative yet unfortunately cc kentaromiura", "d": "11/2016"}, {"body": "sebmarkbage helps simple grep shows nodehaste comment time file actually see import ca nt resolved cpojer seems simple change resolved hm seems finally started work nicely diffs snapshots handle thanks", "d": "11/2016"}, {"body": "update jestreactnative today forward reactnative also updating jest documentation hint wo nt need longer default setup includes working jest configuration see", "d": "11/2016"}, {"body": "nt think related run nt get likely dependency bringing", "d": "11/2016"}, {"body": "might good look preact", "d": "11/2016"}, {"body": "also possible es output minimize size output nt expect substantial size changes react source nt use heavily could try building react source disable babel transforms check build optimizes output scenario excluding code deals internet explorer quirks build nt think small blocks code dealing specifically internet explorer nt seem worth terms complexity", "d": "11/2016"}, {"body": "build without stuff could useful", "d": "11/2016"}, {"body": "yaycmyk experiment get bit savings sure nothing crazy also aware party deps may use reactjs build without savings raw gzip buildreactjs buildreactminjs", "d": "11/2016"}, {"body": "optimizing production would make sense skip react altogether generate plain objects like babel plugin see also", "d": "11/2016"}, {"body": "yes would solution well however given already function thought ask make accessible", "d": "11/2016"}, {"body": "oh available creating element manually sure relevant seems required refs", "d": "11/2016"}, {"body": "also noticed error", "d": "11/2016"}, {"body": "might wrong think problem library using nt seem report unhandled rejections maybe uses pinkyswear hood probably nt support feature switch native promise implementation like fiddle wrap pinky promise native promise see error console browsers log unhandled rejections nothing advice use promises pick library supports printing unhandled rejections development least pick library uses native promises available one using facebook also included default create react app hope helps", "d": "11/2016"}, {"body": "understand thank response time review way ajax requests", "d": "11/2016"}, {"body": "install latest version see line different try setting problem persists try deleting nodemodules clearing npm cache", "d": "11/2016"}, {"body": "special dom attribute opting using web components documentation page mentions issue one common confusion web components use class instead classname issue discussed detail refer discussion hope helps", "d": "11/2016"}, {"body": "closing nt look like bug report wish report bug please help us filling fields thanks", "d": "11/2016"}, {"body": "bondarewicz would say slow clumsy explanation keying allows component instances correctly associated renders correctly retaining state rendered dom key say numerical index array reorder array rendered dom need partially rerendered rather simply moved component state also mixed serious issue also affects focus input undo history etc short unless know good reason always key dynamic children something uniquely identifies source ie kind id", "d": "11/2016"}, {"body": "help link chapters prominently", "d": "11/2016"}, {"body": "gaearon thanks already went links imho clearly least communicate information keys identity items nt think explain well enough using index array potentially issue maybe kind example would convey message better syranide thanks found explanation component state giving bit hint might expect also found following fiddle original source comment think missing actual example orand explanation behind performance issues drawbacks potentially related keys", "d": "11/2016"}, {"body": "bondarewicz would like work since learned fresh mind necessary explain well", "d": "11/2016"}, {"body": "gaearon pick", "d": "11/2016"}, {"body": "sure", "d": "11/2016"}, {"body": "sorry fro delayed response since laumair already picked would like peek pr ping", "d": "11/2016"}, {"body": "bondarewicz nt really started working atm stuck stuff probably start tomorrow means want work let know otherwise happy ping submit pr", "d": "11/2016"}, {"body": "oops meant file create react app", "d": "11/2016"}, {"body": "hi issue tracker react javascript library developed used facebook unfortunately ca nt help facebook products use appropriate venues reporting issues", "d": "11/2016"}, {"body": "see", "d": "11/2016"}, {"body": "duplicate fixed fix soon", "d": "11/2016"}, {"body": "leaving open need confirm fix actually fixes issue well", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "oh nt realize already bad work", "d": "11/2016"}, {"body": "worked also related change packaging", "d": "11/2016"}, {"body": "perf depending reactdom used work reactnative context longer case", "d": "11/2016"}, {"body": "gre whole concept addons reach internals mess imo think react native reactperf copy sure exposed probably get maybe sure haste works rn projects probably expose renderers since copied like something", "d": "11/2016"}, {"body": "broken calls ends undefined", "d": "11/2016"}, {"body": "also using requirejs fixed ability use reactdom unable use probably reasons renderintodocument makes use looks undefined reactdom variable reactperf addons looking believe thanks getting fix quickly way", "d": "11/2016"}, {"body": "would really help somebody could experiment bundle like try figure fix get chance look", "d": "11/2016"}, {"body": "adding require line reactaddonsdomdependenciesumdshimjs seems fix nt know correct way gist", "d": "11/2016"}, {"body": "would break singlefile bundles far tell", "d": "11/2016"}, {"body": "mean seems fix tried build umd distribution including change", "d": "11/2016"}, {"body": "change would include probably want add reactdom dependency amd would create circular dependency guess could use requirejs return loaded instance within shim following patch makes work inside requirejs nt know breaks environments turn could still patch reactwithaddons reactjs react addons function f typeof exports object amp amp typeof module undefined moduleexportsf else typeof define function amp amp defineamd define f else var g typeof window undefined gwindow else typeof global undefined gglobal else typeof self undefined gself else gthis greact f function var define module exports return function e n r function u n var atypeof require function amp amp requireif u amp amp return return var fnew error find module throw fcode modulenotfound f var ln exports call lexports function e var nt e return n n e l lexports e n r return n exports var itypeof require function amp amp requirefor var lt rlength r return function dereq module exports function f typeof exports object amp amp amp amp typeof module undefined moduleexportsf else typeof define function amp amp amp amp defineamd define require f else var g typeof window undefined gwindow else typeof global undefined gglobal else typeof self undefined gself else gthis greact f function require var define module exports return function e n r function u n var atypeof require function amp amp amp require u amp amp amp amp return return var fnew error find module throw fcode modulenotfound f var ln exports call lexports function e var nt e return n n e l lexports e n r return n exports var itypeof require function amp amp amp require var lt rlength r return function dereq module exports lt em gt copyright facebook inc rights reserved use strict exportsgetreactdom function return reactdom var getreactdom exportsgetreactdom function return require reactdom exportsgetreactinstancemap function return reactdomsecretinternalsdonotuseoryouwillbefiredreactinstancemap return getreactdom secretinternalsdonotuseoryouwillbefiredreactinstancemap development production exportsgetreactperf function return reactdomsecretinternalsdonotuseoryouwillbefiredreactperf return getreactdom secretinternalsdonotuseoryouwillbefiredreactperf exportsgetreacttestutils function return reactdomsecretinternalsdonotuseoryouwillbefiredreacttestutils return getreactdom secretinternalsdonotuseoryouwillbefiredreacttestutils function dereq module exports maybe need pass accessor function umd callback something like", "d": "11/2016"}, {"body": "yes accessor pattern might work pretty ugly though nt adapted commonjs part would require reactdom commonjs patch reactwithaddons reactjs react addons function f typeof exports object amp amp typeof module undefined moduleexportsf else typeof define function amp amp defineamd define f else var g typeof window undefined gwindow else typeof global undefined gglobal else typeof self undefined gself else gthis greact f function var define module exports return function e n r function u n var atypeof require function amp amp requireif u amp amp return return var fnew error find module throw fcode modulenotfound f var ln exports call lexports function e var nt e return n n e l lexports e n r return n exports var itypeof require function amp amp requirefor var lt rlength r return function dereq module exports function f typeof exports object amp amp amp amp typeof module undefined moduleexportsf else typeof define function amp amp amp amp defineamd define require function require return f function return require reactdom else var g typeof window undefined gwindow else typeof global undefined gglobal else typeof self undefined gself else gthis greact f function return reactdom function reactdomaccessor var define module exports return function e n r function u n var atypeof require function amp amp amp require u amp amp amp amp return return var fnew error find module throw fcode modulenotfound f var ln exports call lexports function e var nt e return n n e l lexports e n r return n exports var itypeof require function amp amp amp require var lt rlength r return function dereq module exports lt em gt copyright facebook inc rights reserved use strict exportsgetreactdom function return reactdom var getreactdom exportsgetreactdom function return reactdomaccessor exportsgetreactinstancemap function return reactdomsecretinternalsdonotuseoryouwillbefiredreactinstancemap return reactdomaccessor secretinternalsdonotuseoryouwillbefiredreactinstancemap development production exportsgetreactperf function return reactdomsecretinternalsdonotuseoryouwillbefiredreactperf return reactdomaccessor secretinternalsdonotuseoryouwillbefiredreactperf exportsgetreacttestutils function return reactdomsecretinternalsdonotuseoryouwillbefiredreacttestutils return reactdomaccessor secretinternalsdonotuseoryouwillbefiredreacttestutils function dereq module exports", "d": "11/2016"}, {"body": "full call stack one like warning flattenchildren encountered two children key child keys must unique two children share key first child usedwarning anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function warning flattenchildren encountered two children key child keys must unique two children share key first child usedwarning anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function", "d": "11/2016"}, {"body": "sorry mistake", "d": "11/2016"}, {"body": "good point", "d": "11/2016"}, {"body": "maybe link right around code first uses refs pointing document explains", "d": "11/2016"}, {"body": "farhadg thanks report try reproduce error dev diff dependencies nt useful alone unfortunatelywe need reproducible test case stack trace try narrow root cause", "d": "11/2016"}, {"body": "thanks quick response aweary want compile app mode test start webpack server mode ie hot reloading etc", "d": "11/2016"}, {"body": "see blank screen halfcompiled react app following error tried following link error include information explaining error happened", "d": "11/2016"}, {"body": "gaearon nt make sense would work chrome firefox thoughts", "d": "11/2016"}, {"body": "maybe enabled requires symbol polyfill wo nt work without see", "d": "11/2016"}, {"body": "going give try gaearon however baffling working along days ago", "d": "11/2016"}, {"body": "want compile app development mode test start webpack server dev mode ie hot reloading etc either way long react built production least give us better idea issue occurring", "d": "11/2016"}, {"body": "looked codebase explicitly using configurations thanks suggestion gaearon", "d": "11/2016"}, {"body": "served app appears work consistently yet bundle see result let know information would useful us help track issue aweary", "d": "11/2016"}, {"body": "farhadg absolutely confident like maybe use preset optimizes react might include another preset might ultimately include plugin", "d": "11/2016"}, {"body": "farhadg hit current project include symbol polyfill adding entry point looks like javascript place polyfills project uses corejs need symbol support react optimizations require edit use package", "d": "11/2016"}, {"body": "original idea suggestion gaearon followed particular presets nt see requiring anything plugins gave try trying sake nhunzaker issue persists", "d": "11/2016"}, {"body": "issue however two apps one running one running recent update path case exception outputs however happening deployed production production build locally serve python simplehttpserver exception trigger want report tomorrow rolling project starting new job new year wo nt access source code babel plugins used www config admin slightly different update ie getting exception box dev environment production full text production one without mention corelayout app wrapper called reactdomrender update done polyfill checked console available however still getting error update checked nodemodules folder included anywhere linked update one project causing bit red herring project currently running react dependency updates since october packagejson file however packages marked caret symbol running ci means updating major version anyway changed tilde version locking ie versions resolved issue project rolled back second project also working fine", "d": "11/2016"}, {"body": "need complete project reproducing investigate", "d": "11/2016"}, {"body": "thanks including debugging strategies tanepiper trying figure problem disabled removed reverted launched app mode realized something webpack building react app production mode installed dependencies built app various node versions rolled back many weeks helped us understand nt something introduced rather dependency locked ensure something one building dependencies locked ensure one explicit dependencies disabled locked accordance successful helped us understand sub dependency shrinkwrapped set knew work diffed broken ones help us understand dependencies could potentially noted issues shrinkwrapped showed us likely issue one ete environments successful installing contained locked tried several suggestions issues noted ensuring using ensuring using tried polyfill", "d": "11/2016"}, {"body": "gaearon see updates rolled back working recent change also turns ci pulling react anyway instead due incorrect config attempt see draw reproducible case digging little bit looks like whatever generates children passing object array triggering exception", "d": "11/2016"}, {"body": "problem react nt recognize element likely happens failed check somehow longer agree value might mean somehow get different results testing polyfill example load polyfill initializes might get issue debug recommend finding fragment bundle see two times try adding logs value see different need figure get different values checking existence reason new used one version code packages intentionally", "d": "11/2016"}, {"body": "meleyal thanks issue react nt part type checking application flow maintains type declarations dom internally either redeclare type method using see flow team open adding dom lib", "d": "11/2016"}, {"body": "problem attach component code", "d": "11/2016"}, {"body": "oops think forgot set mapping", "d": "11/2016"}, {"body": "add react dom node tree affect behavior", "d": "11/2016"}, {"body": "yes appears touchable panresponder examples work mouse touch page also includes", "d": "11/2016"}, {"body": "cc jquense taion", "d": "11/2016"}, {"body": "feel free close one bug reference confusion part amp active styles applied one rewriting css rules fixes things", "d": "11/2016"}, {"body": "also note parent hierarchy nt change forced update parent keys question simply append loosing state seems every update nesting children one level deeper every time empty string key see key increasing every time ie equivalent time gets deeper deeper thus increasingchanging key doubt problem react seems far likely something unintentional bug relay whatever else using anyway debug log actual children value provided highlighted div gif probably find something strange going", "d": "11/2016"}, {"body": "thanks quick response two things seeing production mode react component code exactly proddev specifically isolated issue swapping react dev bundle production mode bundle also would nt additional nesting shown react dev tools", "d": "11/2016"}, {"body": "nesting arrays elements would nt shown example would look devtools", "d": "11/2016"}, {"body": "please provide reproducing code behaves differently development production", "d": "11/2016"}, {"body": "thanks gaearon tried could nt isolate test case think info nesting arrays enough us investigate close", "d": "11/2016"}, {"body": "others encounter issue indeed wrapping issue appears caused difference dev production mode use objectfreeze elements affects transformation performs elements tree", "d": "11/2016"}, {"body": "curious though part react codebase react behavior dev prod freeze", "d": "11/2016"}, {"body": "basing top comment familiar react internals could make sense skip objectfreeze production due improved performance", "d": "11/2016"}, {"body": "oh yeah interesting seems react uses freeze dev yes", "d": "11/2016"}, {"body": "think way project operates react elements supported way using react react elements treated immutable also rather inefficient seems want use css modules either embrace fact class names generated interpolate write static transform rewrite class names compilation", "d": "11/2016"}, {"body": "thanks taking time report could please report instead issue tracker react issue would get lost thanks", "d": "11/2016"}, {"body": "issue reported several times currently perfect solution latest discussion", "d": "11/2016"}, {"body": "ok thanks reply", "d": "11/2016"}, {"body": "thanks linmic closing duplicate try direct future discussion", "d": "11/2016"}, {"body": "nevermind probably facebookjsx", "d": "11/2016"}, {"body": "moved", "d": "11/2016"}, {"body": "example nt use component please read relevant documentation components always start upper case letter use jsx example also works correctly ref docs may use attribute functional components nt instances want use refs need define class", "d": "11/2016"}, {"body": "warn way track", "d": "11/2016"}, {"body": "hi dan thank quick response know components start upper case read docs opened issue example illustrate issue callback null believe misunderstood something know ca nt use syntax stateless components like written example ref docs nt know also ca nt use consume stateless components workaround something else want callback stateless components nt ability change modify component consume example import third party library style external npm packages", "d": "11/2016"}, {"body": "know ca nt use syntax stateless components like written example ref docs example referring think ref docs actually show example using stateless components supported however use ref attribute inside render function functional component js function customtextinput props textinput must declared ref callback refer let textinput null function handleclick textinputfocus return nt know also ca nt use consume stateless components think also docs say explicitly may use ref attribute functional components nt instances maybe rephrase make clearer workaround something else want ref callback stateless components nt ability change modify component consume explain expect get ref class components get instance could call methods functional components instances methods expect get ref", "d": "11/2016"}, {"body": "ok give realistic example current problem write react component different conditions return depending returned something js import mycomponent mycomponent import mysecondcomponent mysecondcomponent import thirdpartycomponent somenpmpackage class container extends reactcomponent componentdidmount thismycomponent something else thismysecondcomponent something else thisthirdpartycomponent something render foo return bar return return case always null stateless component nt knew stateless component found looking source code third party library current workaround set boolean flag instead setting ref instance nt need instance need know component rendered workaround right way accomplish", "d": "11/2016"}, {"body": "looks bit like using react backwards really look like normally would repeat conditions reason expensive compute put something like state recompute necessary use methods either way refs seem wrong solution nt really need reference", "d": "11/2016"}, {"body": "really expensive compute takes lot time circumstances make sense thing reason expensive compute put something like visiblecomponent first state first thought like put state means call method allowed thought workaround checking component rendered either way refs seem wrong solution nt really need reference yes think thought mistake nt know elegant solution moment", "d": "11/2016"}, {"body": "means call setstate render method allowed compute constructor initialize state depend props also recompute componentwillreceiveprops", "d": "11/2016"}, {"body": "ah see thank dan think got", "d": "11/2016"}, {"body": "anything documentation missing make click", "d": "11/2016"}, {"body": "well first least clear enough ca nt use stateless components clear stateless components ca nt use thought consume stateless components like following example clear js function customtextinput props textinput must declared ref callback refer let textinput null function handleclick textinputfocus return thought use outside nt know misunderstood oversight second think little example conditional rendering would great explains check components rendered like issue moment heavy calculation decides component rendered", "d": "11/2016"}, {"body": "second part something conditional rendering page missing think includes similar examples", "d": "11/2016"}, {"body": "think includes similar examples right read twice times think clear enough", "d": "11/2016"}, {"body": "working reimplementation react search fiber issues particular internal api definitely removed project using break instead fiber eventually provide official way create custom renderers projects like use api instead current one could use custom renderer particular reason implement internal components instead using react public api clear", "d": "11/2016"}, {"body": "thank reviewing dan great news official way create custom renderers would nice able extend augment built html renderer rather reimplementing rendering scratch reactart requires specific root element context rendering art element prefer able render ext js html components interchangeably rather manually switching contexts root element ask consider use case implementing custom renderer api chose use internal components rather using public api reasons probably important ext js codebase nt currently organized commonjs modules users ca nt import component classes way would component libraries probably safe say ext js components library prefer create reactspecific wrapper components ext js components would lot code would bloat builds said nothing set stone published package last week still fairly early certainly open suggestions improve futureproof implementation think using higher order component wrap ext js components would sustainable solution example user code would look something like javascript import reactify extjsreactor const grid reactify extgridpanel export default function mycomponent return", "d": "11/2016"}, {"body": "yes would better solution longer term think internals break every versions really rely", "d": "11/2016"}, {"body": "going close actionable us right seems like way forward", "d": "11/2016"}, {"body": "gaearon estimate fiberbased reimplementation react released version number best way track progress thank help switching higher order component turned fairly simple change little impact existing code", "d": "11/2016"}, {"body": "track progress hope react use fiber also likely provide optin months", "d": "11/2016"}, {"body": "works fine latest ios safari", "d": "11/2016"}, {"body": "yaycmyk select value tap button phone bring back native browser selector", "d": "11/2016"}, {"body": "yaycmyk ended figuring select removed dom still therefore tap button brings back menu make sense blur selects removed dom", "d": "11/2016"}, {"body": "wlingke seeing behavior see tap one options select switched button selection popover remains tap back original option nothing happens looks like webkit bug something react concerned imo", "d": "11/2016"}, {"body": "yaycmyk yea one manifestation behavior seems like component still focus blur removes problem sure webkit bug kind feels like react cleaning blurring component removing dom", "d": "11/2016"}, {"body": "nt believe still focus see webkit bug", "d": "11/2016"}, {"body": "hmm look focus directly render", "d": "11/2016"}, {"body": "dom replacement nt happened yet code see example render vdom generated guarantee replacement actually happened yet important use react lifecycle methods test appropriate times", "d": "11/2016"}, {"body": "fair enough ca nt argue thing know solves unexpected behavior blur select unmounts blurs unmount unexpected behaviors nothing unmount unexpected behaviors think something related focus element causing issues", "d": "11/2016"}, {"body": "thanks issue wikiwong read additional arguments arewhere issue basically additional argument ended bound event handler fixed really ignore argument coming ended causing problems application passing additional argument click handler expecting received second argument upgraded argument received third proxy event way pass additional arguments bind passing event handler way arguments come way nt affected order number arguments passed event handler long still passed first react since essentially bug fix going close thanks taking time fill", "d": "11/2016"}, {"body": "even second argument", "d": "11/2016"}, {"body": "gaearon call bound event handler dispatching custom event using fake node second argument ends fake event", "d": "11/2016"}, {"body": "make closure omits argument number arguments match dev prod", "d": "11/2016"}, {"body": "make closure omits argument number arguments match dev prod would mean extra function call every event dispatch dev yeah", "d": "11/2016"}, {"body": "nt costly browser events nt come enormous speeds wan na make pr", "d": "11/2016"}, {"body": "pr opened", "d": "11/2016"}, {"body": "thanks gaearon aweary", "d": "11/2016"}, {"body": "aweary fyi went route binding event handler render linter yelled reasoning found pretty interesting", "d": "11/2016"}, {"body": "would also like know answer", "d": "11/2016"}, {"body": "think changing line would enough resolve issue", "d": "11/2016"}, {"body": "could change still see message tests question think test suite pretend chromefirefox tried jsdom default intentionally set chromefirefox", "d": "11/2016"}, {"body": "right changing user agent pretending chrome test suite workaround radium suppress warning showing test output code run tests added removing lines cleared exception getting another solution found define code ran test suite adding supresses warning radium see globalnavigator useragent windows nt khtml like gecko globalconsoledebug gt also got rid exception thank response appreciate help working issue", "d": "11/2016"}, {"body": "think adding seems reasonable since pretend browser supports going close feel free continue discussion", "d": "11/2016"}, {"body": "advice solved problem nt think need discuss issue thanks help", "d": "11/2016"}, {"body": "cc zpao zertosh", "d": "11/2016"}, {"body": "legit options passed config babylon parse unfortunately craps def bug assert ignore types worked able set get effect want", "d": "11/2016"}, {"body": "update reactaddonsperf well reactperf moved", "d": "11/2016"}, {"body": "weird actually old version nt showing needing bump try", "d": "11/2016"}, {"body": "please keep version sync causing issue", "d": "11/2016"}, {"body": "thanks guys case anyone else comes across issue specifically demanding right raised issue repo", "d": "11/2016"}, {"body": "recommend using jest testing react native instead use fb maintain", "d": "11/2016"}, {"body": "gaearon cheers personally dislike jest thanks advice thinking moving tap point nt think jest would step right direction anyway", "d": "11/2016"}, {"body": "fyi last tried jest year ago give another try changed lot thing common previous project name", "d": "11/2016"}, {"body": "ago maybe six months think try soon trying move away tools much really difficult decouple dependency later line", "d": "11/2016"}, {"body": "anyone comes across trying update update tools reporting latest version fact exist right try explicitly installing instead works fine versions note experienced thing", "d": "11/2016"}, {"body": "weird using custom npm registry checked", "d": "11/2016"}, {"body": "gaearon using custom npm registry correct indeed npm may something fact package installed exact version trying update exact version auto updater failed however installing latest version used instead working fine everything working certain gotten invalid package upon using updater perhaps false positive dependency conflict wish information share case easy resolve others able find discussion really even need future readers please ignore comment", "d": "11/2016"}, {"body": "help", "d": "11/2016"}, {"body": "artursgirons share test case reproducing issue", "d": "11/2016"}, {"body": "aweary tight schedule one else experience reproduciblesharable bits try time moved back", "d": "11/2016"}, {"body": "would definitely need reproducing example investigate", "d": "11/2016"}, {"body": "sorry related", "d": "11/2016"}, {"body": "narrowed problem bit build option set renders fine render instead adds extra funky character mean web pack bug say sometimes hard determine react ends web pack starts", "d": "11/2016"}, {"body": "mean web pack bug reproduce issue without react changing causes issue likely webpack issue always verify creating small bundle plain javascript files see occurs well", "d": "11/2016"}, {"body": "looks like someone reported issue webpack", "d": "11/2016"}, {"body": "looks like nt react issue closing feel free reopen wrong", "d": "11/2016"}, {"body": "yes agree though never quite solved webpack side bottom line webpack spitting something different dev mode prod mode ended fixing issue adding charset script tag also wrote blog post", "d": "11/2016"}, {"body": "please refer thread branch unmaintained many months beta stable already", "d": "11/2016"}, {"body": "using different versions react define render components project supported ca nt really help compatible", "d": "11/2016"}, {"body": "nt think anything specific react general usage question would encourage determine make work button js see works react", "d": "11/2016"}, {"body": "nevermind found supported", "d": "11/2016"}, {"body": "yea sorry refs work ca nt tried", "d": "11/2016"}, {"body": "think vast majority content folder either useless outdated replace completely something useful nt time work assigning lacker figure", "d": "11/2016"}, {"body": "err yeah realize examples directory existed whole lot examples inline documentation like nt every codepen basically example looked basically seem like valuable exception fiber example seems much example place people stash code small oneoff tool fine suppose proposal remove except fiber curious anyone objects perhaps jqueryspecific webcomponentsspecific examples imo better example something elsewhere internet value us providing worse one pretty much everything falls category", "d": "11/2016"}, {"body": "fine removing except basicjsx fiber useful testing need renamed fixtures something people nt look", "d": "11/2016"}, {"body": "feature keeping examples project directory sandbox purposes many different build setups like createreactapp try react fastest way comfortable environment really reasonable idea remove", "d": "11/2016"}, {"body": "nt currently plan make changes proptypes welcome create package implementing something like personally would suggest defining common proptypes separately injected ones use js const proptypes foo proptypesstring const injectedproptypes bar proptypesstring commentproptypes proptypes injectedproptypes const connectedcomment connect mapstatetoprops comment connectedcommentproptypes proptypes export default connectedcomment hope helps", "d": "11/2016"}, {"body": "reproduce without rollup", "d": "11/2016"}, {"body": "easily sure know code playgrounds module ideas fwiw obviously works possible sideeffect module bundling tried replacing buble babel problem", "d": "11/2016"}, {"body": "might rollup bug", "d": "11/2016"}, {"body": "seeing rollup believe rollup bug trimming much code output opened issue", "d": "11/2016"}, {"body": "ah sweet closing", "d": "11/2016"}, {"body": "could fixed well though declaring variable multiple times scope nt seem clean fix", "d": "11/2016"}, {"body": "use case specifying templates nonreact libraries jsx might widely applicable templates known statically server could turn html could render dom empty element read inner html", "d": "11/2016"}, {"body": "different usecase using rendertostring save svg clientside suppose using inner html dom element would sufficient well", "d": "11/2016"}, {"body": "guess update selectivity also render outofdom use", "d": "11/2016"}, {"body": "worth even nt technically case thinking separating dom renderer server renderer anyway future", "d": "11/2016"}, {"body": "saying nt rely dom server able share code react dom anyway right close issue agree seems using dom server client dead end anyway least selectivity patched longer rely", "d": "11/2016"}, {"body": "yea right separating useful speeding server rendering skips unnecessary clientonly code paths making client rendering code thinner", "d": "11/2016"}, {"body": "seriously breaking change take ci systems documented somewhere", "d": "11/2016"}, {"body": "take ci systems", "d": "11/2016"}, {"body": "think various experiences bug let keep constructive see something focus positive negative comments", "d": "11/2016"}, {"body": "indeed frustrating ship sailed sorry screwed released rc month ago publicly asked feedback unfortunately nobody reported issue even discovered stable release sorry breaking cis hopefully fix nt complex", "d": "11/2016"}, {"body": "im experiencing integrating mocha typescript", "d": "11/2016"}, {"body": "need add dependency unless new information issue think comments helpful sorry", "d": "11/2016"}, {"body": "work around make ci work make sure app contains follow dependencies version reactaddonstestutils react reactdom", "d": "11/2016"}, {"body": "version using know called reactmount directly updating v fixed issue", "d": "11/2016"}, {"body": "thanks roccoc using let test v still curious understand reacttestrenderer gone", "d": "11/2016"}, {"body": "reacttestrenderer gone npm package importing officially supported implementation detail reactmount moved internal module removed eventually nt rely tools relying internal modules rhl maintained supported long time", "d": "11/2016"}, {"body": "thanks clarifying got jest documentation checked documentation date make sure update code well", "d": "11/2016"}, {"body": "ok make pr", "d": "11/2016"}, {"body": "please explain testing presence proptypes helping examples product code would helpful", "d": "11/2016"}, {"body": "cc spicyj nhunzaker", "d": "11/2016"}, {"body": "target element take deeper look later tonight first hunch need look way filters disabled elements bails target element disabled nt know account cases target element lives inside disabled element target wonder skipping past disabled element filter leading two phased dispatch bubbling capturing bubbles result would event dispatch button span purely speculative maybe help spicyj look hours", "d": "11/2016"}, {"body": "target element without works expected dispatch event", "d": "11/2016"}, {"body": "roccoc react manipulates field bubbles events component tree wonder performantly crawl tree see element disabled", "d": "11/2016"}, {"body": "see function seems handle whether mouse event prevented based component instance tag prop simpleeventplugin function passing event target case actual dispatch target listener assigned eg adding end fixes probably cleaner way", "d": "11/2016"}, {"body": "traversetwophase ends calling every element target element parent tree eventually finding disabled button listener thanks listeneratphase listener later executed point step check see instance listener disabled maybe early", "d": "11/2016"}, {"body": "adding end extractevents fixes probably cleaner way roccoc one issue arrays may cases listeners dispatched nt introduce logic make polymorphic result nt ideal think would better could prevent listener registered event first place", "d": "11/2016"}, {"body": "think would better could prevent listener registered event first place aweary aye happy dig unless someone already taken test case", "d": "11/2016"}, {"body": "following aweary thoughts first looked avoiding subscription together however turns additional things figure react updates component addsremoves event listeners based whether changed problematic disabling events changing prop separate operation attachingremoving listeners prevent disabled elements attaching mouse events need make sure attached element stops disabled simplest solution appear making smarter modifying javascript function shouldpreventmouseevent inst inst var focus inst return false basically bubble tree see child within disabled parent return truefalse element interactive side note looks like substantial difference event implementation master might need implement different versions think solution could principle", "d": "11/2016"}, {"body": "sent pr discussion", "d": "11/2016"}, {"body": "reason facebook decides companies product infringed ip moment facebook decides enter litigation company company longer license use react think part incorrect patent grant specifically mentions nt terminate facebook sues patents first additional patent grant facebook bsdpatents license terminate facebook sues patent infringement first respond patent counterclaim facebook unless patent counterclaim related facebook software licensed facebook bsdpatents license", "d": "11/2016"}, {"body": "cc spicyj", "d": "11/2016"}, {"body": "hi thanks report rely packages rely undocumented private apis consider keeping react version pinned never safe rely internal apis never supported officially ca nt consider private apis part semver way tell particular change internals would break library reaching unsupported way using react asked people test rc month unfortunately nothing force libraries using private apis stop start using flat bundles please reach maintainers ask get merged might break later reaching internal apis supported never", "d": "11/2016"}, {"body": "authors draftjsexporthtml facebookowned module", "d": "11/2016"}, {"body": "hi thanks report need find library imports file issue never officially supported noted release notes however possibility imported private apis package rely might use would like remind never supported apps rely internal apis react internals keep changing work make react better warned change month ago libraries reached internal apis could updated issue actionable us close webpack print name module tried import able tell library fault file issue temporary fix library could start importing instead also guaranteed break future never supported support reaching internal modules", "d": "11/2016"}, {"body": "never supported support reaching internal modules gaearon tell require coming latest nonbeta release according javascript prependtext react hot loader modulehot function var reacthotapi require jsonstringify requireresolve reacthotapi rootinstanceprovider require jsonstringify requireresolve rootinstanceprovider reactmount require reactlibreactmount react require react join", "d": "11/2016"}, {"body": "react hot loader unsupported year please use work without reaching internal modules", "d": "11/2016"}, {"body": "hey gaearon fair enough thanks might offtopic official stable release near future fair miss documentation mentioned requirement use still feels bit unintuitive forced use prereleasebeta version", "d": "11/2016"}, {"body": "please reach project maintainers ca nt say actively involved right", "d": "11/2016"}, {"body": "trouble getting reproduce like say however issue minimal setup getting undefined help clarify case investigate better", "d": "11/2016"}, {"body": "fiddle demonstrating broken module reactdom change path reactdom work", "d": "11/2016"}, {"body": "zpao change appjs get exactly behaviour described", "d": "11/2016"}, {"body": "zpao think different behavior comes different requirejs setups get error java library integrates react apache tapestry framework specific problem seems anonymous define inner wrapper change error goes away problem probably caused double wrappers spent time trying get work nt succeed", "d": "11/2016"}, {"body": "today encountered error using loader load reactdom nt know error issue specific error message", "d": "11/2016"}, {"body": "seem exact issue upgrade newest version reactdom undefined switch back every thing works fine without changing line source code currently changed back course best solution long term solution", "d": "11/2016"}, {"body": "joesky", "d": "11/2016"}, {"body": "looks like define require wrong way round possibly nt even need require return result f define callback even swap around would never get reactdom object require scripts", "d": "11/2016"}, {"body": "ah could nt get work yesterday gist broken read instead make work applying diff reactdom reactdomjs requirejs else typeof define function amp amp defineamd require react f define react f", "d": "11/2016"}, {"body": "try submitting fix", "d": "11/2016"}, {"body": "nt want sign cla", "d": "11/2016"}, {"body": "unrelated issue particular reason nt want sign reading cla basically says actually wrote code give us copyright patent rights contribution necessary us safely include open source project anything controversial", "d": "11/2016"}, {"body": "confirm fixes issue", "d": "11/2016"}, {"body": "ca nt easily reverse order require amp define internal one one generated part browserifying might write umd wrapper piece instead try things need make sure continues working webpack globals", "d": "11/2016"}, {"body": "umd output created via babel", "d": "11/2016"}, {"body": "nope internal umd created browserify outer one handrolled", "d": "11/2016"}, {"body": "ouch see problem", "d": "11/2016"}, {"body": "unrelated issue particular reason nt want sign yes lawyer nt necessary knowledge things sure exact consequences sign cla actually nt want bothered things like help make hard nt", "d": "11/2016"}, {"body": "hit error systemjs", "d": "11/2016"}, {"body": "react still works reactdom seems broken indeed gt looking trying lot things shims everything without luck hardcode react sake deploy scheme", "d": "11/2016"}, {"body": "somebody please point failing systemjs example seem find one", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "confirm requirejs works fine unfortunately ca nt say", "d": "11/2016"}, {"body": "thanks aware issue exists working fix", "d": "11/2016"}, {"body": "run issue well systemjs solution explicitly tell systemjs format reactdom meta", "d": "11/2016"}, {"body": "alexisvincent released fixes amd support confirm works", "d": "11/2016"}, {"body": "thanks zpao", "d": "11/2016"}, {"body": "try use", "d": "11/2016"}, {"body": "usually type comparison tagging things ids using dom api little inelegant aware nontest tooling use case", "d": "11/2016"}, {"body": "could explain use case detail", "d": "11/2016"}, {"body": "yaycmyk yeah finally find way may probably effect property trying", "d": "11/2016"}, {"body": "please nt rely implementation detail might change behavior future releases generally anything underscores nt documented public api docs nt public api", "d": "11/2016"}, {"body": "gaearon hello defined component instance reactcomponent used merging components html tag named want find group instance named chind named obviously isnot", "d": "11/2016"}, {"body": "gaearon yeah thanks reply could nt find another way resolve problems", "d": "11/2016"}, {"body": "vifird seen context feature js class group extends component getchildcontext return group thispropsname render const parentgroup thiscontextgroup undefined roots consolelog parentgroup parentgroup groupcontexttypes group proptypesstring groupchildcontexttypes group proptypesstring", "d": "11/2016"}, {"body": "eliseumds thanks advice really good idea scene", "d": "11/2016"}, {"body": "yaycmyk gaearon eliseumds thanks found way finally used common solution problems resolved open apis nt matter us share code main function javascript judg parentcomponent contains childcomponent export function reactcontains parentcomponent childcomponent parentcomponent childcomponent parentcomponent instanceof reactcomponent childcomponent instanceof reactcomponent return false const parentself parentcomponentreactinternalinstance const childself childcomponentreactinternalinstance const parentowner parentselfcurrentelementowner let childowner childselfcurrentelementowner childowner amp amp childowner parentself amp amp childowner parentowner childowner childownercurrentelementowner childowner return false childowner parentself return true childowner parentowner return ischild parentselfcurrentelement childselfcurrentelement judge childelement child parentelement export const ischild parentelement childelement gt parentelement childelement return false parentelement childelement return true parentelementprops parentelementpropschildren typeof parentelementpropschildren string return false let children parentelementpropschildren instanceof array parentelementpropschildren parentelementpropschildren reactchildrentoarray parentelementpropschildren let return false", "d": "11/2016"}, {"body": "note code extremely fragile likely break patch version react without warning also confusing anyone used react nt seen project please consider longer term maintainability", "d": "11/2016"}, {"body": "please back claim react size large compared angular curious stats saying true first time heard comparing minified size production version gzip well aware react larger libraries like preact also different feature sets example react supports fully controlled inputs batching across subtrees normalization events features found useful using production several years large products different reactinspired projects pick different sets tradeoffs think fine wo nt spending effort optimizing build size fiber ready think fiber easier optimize later step unlike smaller libraries nt luxury throwing away legacy apis every month move slowly big products move together us means innovations deprecations lag behind leaner libraries also ensures healthy ecosystem smoothly move whole close specific actionable issue find issues pull requests specific points mentioned reasons nt moving forward address fiber work done cheers", "d": "11/2016"}, {"body": "nt think currently way make new container short making new root view native land starts new tree automatically", "d": "11/2016"}, {"body": "think generally valid assumption dom nodes mutable extensible react certainly alone comes said extending nodes done careful consideration necessary case used associate dom nodes internal instances far know required want able get closest instance given node", "d": "11/2016"}, {"body": "could fall back using map nonextensible complexity code performance cost would negligible case zero nonextensible dom elements exist", "d": "11/2016"}, {"body": "changed use prop pass error bottomup instead topdown wo nt need feature joy", "d": "11/2016"}, {"body": "please use proptypesinstanceof error", "d": "11/2016"}, {"body": "anyone interested made component tries allow delayed mounting unmounting components", "d": "11/2016"}, {"body": "help give instance rather element", "d": "11/2016"}, {"body": "gaearon exactly needed thanks ok let say getting instance access elements way would access ref element instances normal rendering question elements enough instances since shallow rendering point render layer think elements would enough even though completely consistent normal rendering getting late try get first draft done tomorrow", "d": "11/2016"}, {"body": "ok another question guys necessary shallow render without owner context yes quick explaination would nice nt get would solve problem facing right string refs currently throw unmounting nt owner", "d": "11/2016"}, {"body": "nevermind answer owner ca nt assert result jsx", "d": "11/2016"}, {"body": "took bit time expected followup", "d": "11/2016"}, {"body": "seems like fine idea want send pull request tag", "d": "11/2016"}, {"body": "undefined component mean please provide example code", "d": "11/2016"}, {"body": "able reproduce error clean app created createreactapp try explain found app uses reactrouter requires login placed logic shows login popup app component render method like javascript thispropstoken amp amp thispropschildren navigating page method property someundefinedfield undefined accidentially click login button token props updated string value point react crashes error piece code react following found iterates elements already unmounted added method saw react tries call gethostnode component already unmounted object empty moment found two ways prevent react crashing first replace second replace corrections react nt crash error calling undefined function shown console", "d": "11/2016"}, {"body": "dema confident nt promise swallowing original error like catch block nt handle network request also setstate call common mistake people use promises react original error gets swallowed react inconsistent state next errors cryptic", "d": "11/2016"}, {"body": "yeah actually could case fails error even make mistake render function try investigate thank much", "d": "11/2016"}, {"body": "yep absolutely right exactly scenario described likely error reduxform package using forms added bug report spent three hours debugging", "d": "11/2016"}, {"body": "suggestions apply monkey patch similar work around app would greatly appreciated forking building npm package seems like pita", "d": "11/2016"}, {"body": "apsoto curious mean say react work around bug splitting line function multiple statements show exact code used see two potential culprits one opera may using floats instead doubles numbers incorrectly converting function would allow result fit within floats thus become deterministic compute poor checksum opera bug executed wrong order monkeypatching using nonbundled npm version able either substitute module via bundler simply physically replace file bundling", "d": "11/2016"}, {"body": "wrt multiple statements diff tried locally works testing far lt b datacharcodeat datacharcodeat datacharcodeat datacharcodeat wrt monkey patching able vendor react app use webpack alias build issues heroku expand comments monkey patching thanks", "d": "11/2016"}, {"body": "apsoto syranide ran opera definitely browser bug clauses every clause calculated properly second clause always returning old rather new value apsoto check try adding clauses change increments set second one zero see value agrees get engines suggested changes apsoto seem reasonable probably would increments directly skip intermediate variables", "d": "11/2016"}, {"body": "thanks debugging interesting bug reason done way begin performance reasons specific path really really hot sure much really care still probably phased future possibility feature test provide workaround implementation broken browsers go general workaround understand following three work benchmarking probably reveal one faster care much cc jimfb", "d": "11/2016"}, {"body": "syranide last one original sheetjs version nt suffer sauce labs browser test badge shows opera part test suite looking original code decided unroll part assume bug", "d": "11/2016"}, {"body": "nesting said clause also shows test may quirk bug pretty sure nt pretty much ca nt due handling version significantly faster heavily optimized simply became apparent contributing significant running time server rendering specific statement also constitutes majority running time implementation unrolling makes fast anyway let wait see devs feel", "d": "11/2016"}, {"body": "syranide splitting first comment lines would help clarify think best approach unroll steps fix effectively noop second block sure whether using dummy step faster slower using increment steps specific statement also constitutes majority running time implementation unrolling makes fast sure nt mask removed sheetjs picks low byte character code whereas nt assume removed performance reasons nb nt understand chosen looking back root sheetjs code readme explains magic number magic numbers chosen overflow integer subtract elements unicode case since version nt conversion equivalent would bstr version use", "d": "11/2016"}, {"body": "good point realistically less two steps faster seems less hacky sure whether using dummy step faster slower using increment steps positive faster sure much matters way benchmarked fastest sure nt mask removed matters obviously time spent specific loop every little bit big impact nb nt understand chosen benchmarked every possible combination back try lower values intentionally stay within integers found nt actually improve performance also overflow quicker due using mask end simply chosen seemed sweetspot benchmarking wo nt overflow floating point integers lower higher generally reduced performance", "d": "11/2016"}, {"body": "easy access opera mac desktop embedded device need check anything otherwise assume good hands fyi although old browser decent footprint tivo half deployed set tops know devices nt know installed base since older probably widely distributed embedded devices nt move fast like desktops", "d": "11/2016"}, {"body": "want js import unmountcomponentatnode render unstablerendersubtreeintocontainer reactdom export default class portal extends purecomponent static proptypes children proptypesnodeisrequired note need receive context componentdidmount thisel documentcreateelement div documentbodyappendchild thisel renderintoel children context gt unstablerendersubtreeintocontainer lt nt forget first argument thisel stable api keep offer better way", "d": "11/2016"}, {"body": "gaearon worked thank reason contexttypes treated differently proptypes regard portal longer receiving context react still know rerender context changes", "d": "11/2016"}, {"body": "portal longer receiving context react still know rerender context changes yes general relying context updates recommended significant problems current implementation reason contexttypes treated differently proptypes regard adhoc api nt really thought idea limit damage encapsulation posed context indeed relying like api bit weird nt forget context called experimental documentation recommends use unless really know", "d": "11/2016"}, {"body": "read thread linked bit might little naive posting main thread issue would nt access context regardless contexttypes childcontexttypes resolve issue middle component blocking render bottom component due knowing context used children way onus person defines custom shouldcomponentupdate determine whether children using context", "d": "11/2016"}, {"body": "tried playing around catching error event jsdom dispatches window kind going fine conflicts tests ideas might getting wrong", "d": "11/2016"}, {"body": "got working using onerror suggestion added pr edit low behold issue franciscofsales good catch closing pr", "d": "11/2016"}, {"body": "exactly done apart naming comment sure trigger issue", "d": "11/2016"}, {"body": "got added thanks", "d": "11/2016"}, {"body": "franciscofsales ah indeed rad fb confirm probably never problem nt listened hence issue good stuff", "d": "11/2016"}, {"body": "yeah think got answer commit actually spying turns thanks", "d": "11/2016"}, {"body": "think examples good enough perhaps could link reference docs", "d": "11/2016"}, {"body": "yes wanted show purecomponents coworker found hard understand bc nt examples page sent link think would nice link pure component page", "d": "11/2016"}, {"body": "discouraged use pure component also agree documentation little scattered", "d": "11/2016"}, {"body": "lucasaragno ok want send pr adding line linking examples mmdonaldson nt discouraged", "d": "11/2016"}, {"body": "issue react issue jest specifically prettyformat fixed please make sure using latest version jest", "d": "11/2016"}, {"body": "nice thanks", "d": "11/2016"}, {"body": "followed examples pointed page anyone know page date accurate", "d": "11/2016"}, {"body": "issue react appears problem babel transpiles tried using classes like example linked example notice js define webcomponent var proto objectcreate htmlelementprototype attachedcallback value function var mountpoint documentcreateelement span thiscreateshadowroot appendchild mountpoint closing actionable react team might want report babel", "d": "11/2016"}, {"body": "babel class transform support extending native types", "d": "11/2016"}, {"body": "also following examples using syntax extending native types maybe need newer version babel example snippet article", "d": "11/2016"}, {"body": "burtonsamogradadsk kovensky wrote babel class transform nt support extending builtins either disable class transform thus give older browsers use shown", "d": "11/2016"}, {"body": "react component model relation ejbcomnet components react sense stateful pieces ui arbitrary packages like systems react component model influenced functional programming learn reading react docs closing issue actionable us use issue tracker bugs feature requests", "d": "11/2016"}, {"body": "founded workaround case use reactcloneelement instead hoc works ok complicated logic prop injecting needed instead", "d": "11/2016"}, {"body": "anyone wants claim please comment everyone knows", "d": "11/2016"}, {"body": "would nt mind giving go please nt let stop anyone else trying either", "d": "11/2016"}, {"body": "peterp sure nt want people work really hard pr find end someone else already submitted fix please comment ifwhen willing commit finishing pr", "d": "11/2016"}, {"body": "look either afraid work really hard someone else instead also known learning awesome stuff", "d": "11/2016"}, {"body": "would love take look", "d": "11/2016"}, {"body": "take look sure able something may helps undestand anyway", "d": "11/2016"}, {"body": "another option since needed class components could add root field class instead", "d": "11/2016"}, {"body": "intuitively feels problem scheduling root fiber", "d": "11/2016"}, {"body": "need extra work purpose satisfying scheduling problems error scenario done wrong tradeoff imo error handling bonus", "d": "11/2016"}, {"body": "mean part ca nt assume root tree scheduled pending work", "d": "11/2016"}, {"body": "yea", "d": "11/2016"}, {"body": "agree tradeoff analysis sure solve though", "d": "11/2016"}, {"body": "roots unscheduled uncaught error thrown tree help understand happens conceptually work invalidated clear priority flag entire tree get consistent state", "d": "11/2016"}, {"body": "gaearon probably explain better uncaught error need avoid pending work tree another update work invalidated clear priority flag entire tree get consistent state seems like viable option", "d": "11/2016"}, {"body": "pending updates queue clear priority flag dropped completely", "d": "11/2016"}, {"body": "nt know nt understand case quite however currently seem breaking one invariant model priority levels pending root scheduled need understand allowed diverge", "d": "11/2016"}, {"body": "diverge master mostly hack think totally right though important invariant think clearing entire tree would also fix issue dan found never mind unrelated previous question dropping updates uncaught error makes sense conceptually think", "d": "11/2016"}, {"body": "closing favor", "d": "11/2016"}, {"body": "gosh brilliant nonsense missed add component went wrong problem solved ca nt access browser context module simply touching pass parent node documentgetelementsbytagname main constructor argument sorry disturbing issue may closed", "d": "11/2016"}, {"body": "hey fixed however looks like nt made way release yet", "d": "11/2016"}, {"body": "included release far tell point might late include since rcs change likely want tested rcs releasing", "d": "11/2016"}, {"body": "totally understandable please let know help way", "d": "11/2016"}, {"body": "think gaearon managing releases sure recent roster changes going close well since essentially duplicate fix already merged master", "d": "11/2016"}, {"body": "snakajima good catch cc lacker codepen updated", "d": "11/2016"}, {"body": "seems like good idea general update codepen fork switch link new one anyone submit new codepen submit pr linking new one snakajima aweary either interested fixing", "d": "11/2016"}, {"body": "sent pull request lacker aweary", "d": "11/2016"}, {"body": "please provide full project fiddle reproducing problem thanks", "d": "11/2016"}, {"body": "umm change code simply import react react import reactcsstransitiongroup reactaddonscsstransitiongroup import styles letterboxcss class app extends reactcomponent export default app first view project packagejson name reacttutorial version description main indexjs scripts start webpackdevserver hot host test eslint src author license isc devdependencies babelcore babelloader babelpresetreact cssloader eslint eslintconfigairbnb eslintpluginimport eslintpluginreact jsonloader styleloader webpack webpackdevserver dependencies react reactaddonscsstransitiongroup reactdom reactrouter css file exampleenter opacity exampleenterexampleenteractive opacity transition opacity easein exampleleave opacity exampleleaveexampleleaveactive opacity transition opacity easein exampleappear opacity exampleappearexampleappearactive opacity transition opacity easein nt work without error plz help", "d": "11/2016"}, {"body": "noticed forgotten provide key element note must provide key attribute children reactcsstransitiongroup even rendering single item react determine children entered left stayed", "d": "11/2016"}, {"body": "even without key code seems work", "d": "11/2016"}, {"body": "well working example animating dynamically added elements based mikedklein pen loops stateitems like renarsvilnis said key prop essential without work also nt know trying achieve nt need animate element removal suggest use css keyframes", "d": "11/2016"}, {"body": "khovanskyal good point demoing key necessary trying get failing", "d": "11/2016"}, {"body": "okay seems like root cause write camelcase took hours figure", "d": "11/2016"}, {"body": "xhallix future reference get warning console using wrong casing attribute", "d": "11/2016"}, {"body": "hm get warnung would saved", "d": "11/2016"}, {"body": "would solve case immediate parent soon put one another would break anyway please nt rely context updates broken known issue see nt", "d": "11/2016"}, {"body": "good point would wise simply start referring context antipattern definitely overused lot libraries example reactrouter bugs like seem indicate never fit quite right react set ideals", "d": "11/2016"}, {"body": "useful feature projects treat static thing nt change work well react router also uses correctly latest versions far know antipattern experimental api known issues libraries need authors familiar problems", "d": "11/2016"}, {"body": "react nt strip invalid values browser ignores invalid values styles would also rather counterproductive throw warning lot code relies gracefully degrading properties nt supported browser ie infeasible react understand full specification regardless browser support actually validate values", "d": "11/2016"}, {"body": "nt think get react render instead create html element manually define properties get", "d": "11/2016"}, {"body": "sorry got using define property invalid ones automatically stripped thanks clarification example", "d": "11/2016"}, {"body": "sorry finally looks like issue internal private npm repository using directly official npm registry able install fine react", "d": "11/2016"}, {"body": "tested appears work searched events jsx search terms dropdown appeared relevant documentation suggestions suggested doc pages could selected via keys pressing enter navigates pages clicking suggested document page navigates page correct saying clicking magnifying glass anything suspect working expected", "d": "11/2016"}, {"body": "see type magnifying glass nt anything maybe could hide searching make clearer nt seem important", "d": "11/2016"}, {"body": "interesting reason confusing nothing populated dropdowns seems like small window algolia search nt firing keydown checked console errors either magnifying glass seems important dropdowns really focus looks good thanks", "d": "11/2016"}, {"body": "ah cool maybe kind network server issue glad resolved", "d": "11/2016"}, {"body": "part object restspread properties proposal ecmascript yet finalized currently stage example given operator copies keyvalue pairs onto new object overrides value cloning process rewritten use objectassign method currently spec requires polyfill updating tutorial think like docs aim use standards proposed language features however proposed features popular like object spread added afterthought indicating clearly needs polyfilltranspileretc case however might suffice link docs since covered quite well", "d": "11/2016"}, {"body": "tutorial adapted facebook internal tutorial feature enabled default needs fixed docs rthor would like submit doc pr fixing", "d": "11/2016"}, {"body": "sure write later week", "d": "11/2016"}, {"body": "seems resolved", "d": "11/2016"}, {"body": "looks like", "d": "11/2016"}, {"body": "think fixed master maybe", "d": "11/2016"}, {"body": "believe resolves issue code supposed released confirm still problem", "d": "11/2016"}, {"body": "breaking change cases waiting", "d": "11/2016"}, {"body": "long time browsers considerable marketshare react launched would nt allowed jsx transform work consistently would get transformed time specifically use key like valid would throw error could write work around also access property way nt like inconsistency potential fixes transforming prop jsx would issues inconsistency violate principle least surprise reason dom api nt valid use keywords property names without quotes situation better today use perhaps consider idea migration something would invasive lot changes made last years would harder supporting would exist intermediate state gets really tricky composite components api manipulating classname going close talked ad nauseam last years say change wo nt happen point nt need keep issues open topic", "d": "11/2016"}, {"body": "sure late mention squarespace version transition group essentially uses approach fork reacttransitiongroup planning open sourcing library near future go appropriate compliance open source something use pretty heavily platform bugs found already straightened gaearon interested favoring", "d": "11/2016"}, {"body": "think probably room end helping folding would great im sure best way split code feasible solution keeping current git history", "d": "11/2016"}, {"body": "would nt worry keeping history", "d": "11/2016"}, {"body": "sounds good keep updated", "d": "11/2016"}, {"body": "gaearon works want add organization move code bug taion p", "d": "11/2016"}, {"body": "gaearon think react adds ability return promise componentwillunmount hook delay unmount stuff needs use reactcsstransitiongroup uses internal react api anyway", "d": "11/2016"}, {"body": "bgnorlov react adds ability return promise componentwillunmount hook delay unmount stuff sure tangential thread discuss deferred unmounting uses internal react api anyway case far know", "d": "11/2016"}, {"body": "starting", "d": "11/2016"}, {"body": "someone access add jquense reactjs org", "d": "11/2016"}, {"body": "added taion jquense beckiechoi new react addons team admin access", "d": "11/2016"}, {"body": "could also create proptypes demand example", "d": "11/2016"}, {"body": "would defeat point including even code rather making production bundle smaller", "d": "11/2016"}, {"body": "going take look also noticed handling events doc could use formatting make easier read things like headers indicating topic discussed", "d": "11/2016"}, {"body": "way frazer alternative extra param approach could use attribute trying identify clicked element js function openslideshow e consolelog etargetname", "d": "11/2016"}, {"body": "hey lacker taking look issue suggestions revisions event handling documentation submitted pr wanted discuss section binding class syntax perhaps could turn issue general event handling changes issue regarding class section feel goes little deep whole issue event handling document covering stuff like property initializers whatnot think better separate document deep diving issue could briefly reference event handling doc", "d": "11/2016"}, {"body": "think adding content eventhandling doc account common cases would useful long document right lines structurally nt think time split multiple documents wish go deep binding nt think really handle events using best practices without learning everything document goal doc explain eventhandling best practices annoying truth need learn binding handle events well react", "d": "11/2016"}, {"body": "thanks suggestion hedgerh back original question openslideshow viewingwhat thispropstoggleslideview viewingwhat wanted handle event openslideshow nt clear perhaps openslideshow viewingwhat event consolelog viewingwhat consolelog etargetname clear put event parameter", "d": "11/2016"}, {"body": "mobile ca nt code blocks used thisopenslideshowbind due handler second param would event prefer handler dan mentioned onclick e gt thisopenslideshow e due make e first param method wed nov pm frazer kirkman notifications githubcom wrote thanks suggestion hedgerh back original question openslideshow viewingwhat thispropstoggleslideview viewingwhat wanted handle event openslideshow nt clear perhaps openslideshow viewingwhat event consolelog viewingwhat consolelog etargetname clear put event parameter receiving mentioned reply email directly view github mute thread", "d": "11/2016"}, {"body": "frazer hey home computer let know answered question bc sure", "d": "11/2016"}, {"body": "hedgerh yes answered perfectly guess think examples documentation", "d": "11/2016"}, {"body": "frazer yeah add curious think using attribute element instead using extra param identify button clicked js openslideshow e thispropstoggleslideview etargetname", "d": "11/2016"}, {"body": "seem like handy tricks rather necessary thing learn example knowledge docs could make shim function like openslideshow opendueslideshow thisopenslideshow due openallslideshow thisopenslideshow later render wrong well couple extra lines code totally works suggestions nice know pretty noncritical ca nt figure knowledge binding basically include example something something people need learn either using best practices get feature work small improvement ok leave docs", "d": "11/2016"}, {"body": "lacker consider instead static buttons buttons created dynamically think worth documenting section use technique past think use cases require identifying child clickedchanged", "d": "11/2016"}, {"body": "ehhhhhh ok guess fair advantage arrow functions ca nt think would rather nudge people away bind", "d": "11/2016"}, {"body": "ca nt think either think way go wed nov pm kevin lacker notifications githubcom wrote ehhhhhh ok guess fair bind advantage arrow functions ca nt think would rather nudge people away bind receiving mentioned reply email directly view github mute thread", "d": "11/2016"}, {"body": "showing pass parameters function essential way thinking functions true e gt somefunc e x creates copy somefunc time bind one advantage bind", "d": "11/2016"}, {"body": "hmm think may actually opposite bind function executes every render returning new context bound first param applied arrow function nt evaluated button clicked nt think issue someone correct im wrong", "d": "11/2016"}, {"body": "bind arrowfunction ways binding parameter create new function every time repetitive shim function basically call every use creates new function way around still binding callback calling constructor thinking crisp clear pattern right thing suggest different patterns without strong recommendation muddling issue think punt advocate one particular way docs", "d": "11/2016"}, {"body": "hmm nt cover different approaches dealing binding issues using classes", "d": "11/2016"}, {"body": "yeah definitely grey area feel like really clarifying add examples ways bind morecomplex scenarios though point need tell people need learn binding build complicated things think point going past scenarios docs read binding think", "d": "11/2016"}, {"body": "honestly board mentioning arrow approach calling day nt necessarily saying better way someone knows partially apply extra param approach already nt really thrown loop could even say need pass extra parameter event handler one way suggest method nt necessarily advocating", "d": "11/2016"}, {"body": "anyone working like take might questions though getting started", "d": "11/2016"}, {"body": "yeah working awaiting final review news getting merged gaearon p", "d": "11/2016"}, {"body": "rthor ah okay stuff left checklist", "d": "11/2016"}, {"body": "maintain catalog componentslibraries brilloutawesomereactcomponents devarchycomreactcomponents maybe could make sense mention catalog doc", "d": "11/2016"}, {"body": "gaearon item checklist nt occupied atm", "d": "11/2016"}, {"body": "created pull request glossary terms would love feedback", "d": "11/2016"}, {"body": "take reactperf include basic usage example reference anybody already", "d": "11/2016"}, {"body": "laumair think animation react motion last two snapshot publishing yet taken comments", "d": "11/2016"}, {"body": "think take publishing", "d": "11/2016"}, {"body": "thoughts regarding community resources section document think compile resources newcomers nt going already come across couple random google searches rather getting started react tutorials react video courses like point people communities like reactiflux reactjs irc invaluable like point people blog postsarticles cause light bulbs go read dan post smartdumb containers pretty quintessential reading newcomers point also resources cover things like better pattern pass prop component needs individually pass whole data object single prop beyond think guide places community find good resources", "d": "11/2016"}, {"body": "hedgerh sounds good overall although think really remove stuff believe lower quality random google search therefore recommend rather removing stuff theorize newcomers come across googling still helpful say believe best video courses", "d": "11/2016"}, {"body": "lacker good point totally cool long nt become link dump", "d": "11/2016"}, {"body": "working publishing component", "d": "11/2016"}, {"body": "hello new react feel could contribute accessibility guide tell roughly would like see accessibility guide gaearon", "d": "11/2016"}, {"body": "would love finally contribute seems portals snapshot testing available recently delving portals modals reactoverlays love jump snapshot testing want talk", "d": "11/2016"}, {"body": "julen valuable tips integrated relevant content nt many antipatterns react despite people say something bad try disallow api level", "d": "11/2016"}, {"body": "tiny possible typo referencereactmd code omits could slightly confusing newcomers", "d": "11/2016"}, {"body": "happening also someone confirm without updating chrome prod version react run smooth aweary moesattler", "d": "11/2016"}, {"body": "encountered problem look code gulptaskseslintjs find following code spawns new process using command node nodemodulesbineslintcmd command tries interpret batch file using node however node interpret js files syntaxerror change like work expected", "d": "11/2016"}, {"body": "jddxf would like send pr working fix", "d": "11/2016"}, {"body": "gaearon sure fix problem gulp flow task", "d": "11/2016"}, {"body": "hi thanks writing thoughts great realize weeks since wrote one bit nt quite understand may misreading missing something generator functions section say biggest reason however generators stateful ca nt resume middle want execute across multiple time slices step however get update b already completed way reuse value x ie skip ahead different value b still reuse result important react since lot memoization would nt memoization actually make nonissue assuming memoized function calling value would fast effectively allowing skip heavy work continue nt know functions represent maybe possible memoize way", "d": "11/2016"}, {"body": "really placeholder work within generator may expensive problem memoization doexpensiveworka react nt opportunity inject memoization including local memoization strategy using parent context keys could use global memoization method end cache invalidation problems instead", "d": "11/2016"}, {"body": "makes sense thanks clarifying", "d": "11/2016"}, {"body": "help watch intro fiber read clone react repo run run unit tests fiber pick failing test try fix unless fits broader group claimed someone first comment run verify tests passing fiber submit pr note contributing hard right get easier pieces eg dom attributes events place long trail issues community really help feeling adventurous give go check older fiber prs inspiration pieces information example fiber easy pr", "d": "11/2016"}, {"body": "believe close thanks", "d": "11/2016"}, {"body": "supportive effort property makes sense accomodate react model go route things define different prop wc listener button element payload event calling callback main concern shape event object potential confusions around today based example robdodson events custom events object arbitrary shape differ existing practices knowledge base fight eg click event always comes target reference think bikeshed around name property really collection events break past call event handlers", "d": "11/2016"}, {"body": "think bikeshed around name property really collection events break past call event handlers let put neutral support generic coopting property name apply every custom element created anyone cooperation react name generic could easily used say web component accept list calendar events display", "d": "11/2016"}, {"body": "name generic events could easily used say web component accept list calendar events display exactly discussing using specific syntax ie prefix events attributes skate though would specific skate virtual dom allows consumer choose exactly prevents clashes one thing react could would like originally proposed web components could expose properties add remove event listeners class mycomponent extends htmlelement set onsomeevent handler thisaddeventlistener someevent handler customelementsdefine mycomponent mycomponent const elem new mycomponent elemonsomeevent consolelog elemdispatchevent new event someevent think like proposal purposes instead using specific syntax", "d": "11/2016"}, {"body": "one thing react could would objectassign like originally proposed web components could expose properties add remove event listeners nt like either using properties forces web components frameworks implement extra code dictated react order users able use simple event syntax react instead react declarative syntax interact standardized dom events api want completely avoid possibility property name collision use symbol property react uses internally personally speaking though react devs accept official interface parties inject custom event implementations kind like current unofficial interface better party event modules using symbols rather string property names collision would nt mind alternative anyone write module register custom events react whatever pattern used various web component implementations", "d": "11/2016"}, {"body": "treshugart think putting burden writing event handler properties custom elements author wrong approach extra code wo nt always implemented basically impossible emulate platform using properties nt support bubbling capturing event handlers unless add property would problematic easy binding library offer syntax differentiates attributes properties events canonical api adding handlers imo libraries support", "d": "11/2016"}, {"body": "dantman good point like symbol suggestion justinfagnani agree extra code dislike given nt think method could emulate setting via symbol via react using custom syntax would nt either right reason proposing much inline original proposal actually would nt mind convention web components build expose properties corresponding custom events supported component enables declarative api without leaving templating engine custom semantics around binds events templating engine needs something like incremental dom default function set prop anything else set attribute wish prop time though edit clear prefer using symbol approach proposal", "d": "11/2016"}, {"body": "treshugart curious though react decide set props element opposed attributes could troublesome custom elements needing things set attributes aria good question may case attributes still require special case either using special syntax react set attribute react could set using kind heuristic property beginning aria gets set attribute instead worth effort underway allow set accessibility properties javascript future one piece could nonissue caridy main concern shape event object potential confusions around today based example robdodson events custom events detail object arbitrary shape differ existing practices knowledge base fight eg click event always comes target reference understand customevent inherits event therefore properties calling implicitly set target element event dispatch main unique point object hold extra data treshugart setting events via symbol via react using custom syntax would nt either right think idea would calling hood would support bubbling least component decides event dispatching bubbles actually would nt mind convention web components build expose properties corresponding custom events supported component enables declarative api without leaving templating engine custom semantics around binds events standards based way cool instance array easy way custom elements observe attribute mutations could imagine something similar like somehow would automagically generate properties", "d": "11/2016"}, {"body": "kevinsuttle updates end take", "d": "11/2016"}, {"body": "go ahead laumair got busy thanks", "d": "11/2016"}, {"body": "kevinsuttle right thanks gon na start useful resourcessuggestions mind regarding appreciate share would good starting point well", "d": "11/2016"}, {"body": "eventually figured problem two components first one prop called set prop passed children element inside compared previous next version prop lifecycle hook changed called thing focus input either inside stack props propagated still use lifecycle hook focusing way works fine fiddle case", "d": "11/2016"}, {"body": "fixed", "d": "11/2016"}, {"body": "gaearon aweary much love help think likely issue way head take look aweary though try gain better understanding problem", "d": "11/2016"}, {"body": "thisbejim case missed ended concluding supporting test renderer nt good idea see", "d": "11/2016"}, {"body": "thanks update aweary much appreciated update anyone else error solution use enzyme enzymetojson compatible snapshot testing", "d": "11/2016"}, {"body": "encountering issues react project using trying setup jest enzyme details stackoverflow question edit fixed mostly merely dependency issues", "d": "11/2016"}, {"body": "however found issue library chaienzyme requires reactlibreacttestutils moved chaienzyme html typedarray react isobject react reactaddonstestutils sortobject isregexp traverse", "d": "11/2016"}, {"body": "however found issue library chaienzyme please file library", "d": "11/2016"}, {"body": "reminder whoever releases error code process", "d": "11/2016"}, {"body": "cc aweary bgnorlov chenglou gaearon goatslacker hkal jessebeach keyanzhang mnpenner nhunzaker sebmarkbage changes shipped react", "d": "11/2016"}, {"body": "using rc release great createnodemock feature also falled error seem happen cases", "d": "11/2016"}, {"body": "simple example breaks think even different bug tested js test works gt class foo extends reactcomponent render return const inst renderercreate createnodemock gt whatever instunmount test doesnt gt class foo extends reactcomponent render return const inst renderercreate createnodemock gt whatever instunmount produce doesnt works doesnt weird refs working cases like usecases specific cases definitely break let know want investigation", "d": "11/2016"}, {"body": "guys plan fix bug makes unreliable write advanced tests", "d": "11/2016"}, {"body": "unfortunately nt lot time work react lately try make effort tonight work fix", "d": "11/2016"}, {"body": "try another look starting simple test want resolve add end suit reacttestrenderer js dynamic ref gt const onref jestfn", "d": "11/2016"}, {"body": "thanks lot providing repro cases aweary fixing", "d": "11/2016"}, {"body": "works great thanks guys fixing", "d": "11/2016"}, {"body": "sebmarkbage example use reactcreateclass use componentwillmount fetch data call setstate inside better use getinitialstate inside getinitialstate", "d": "11/2016"}, {"body": "wsite see componentdidmount docs", "d": "11/2016"}, {"body": "better use getinitialstate inside getinitialstate ca nt use fetching data synchronous", "d": "11/2016"}, {"body": "created simple vanilla js repro code js var form documentgetelementbyid form formaddeventlistener submit e gt epreventdefault var select documentcreateelement select selectrequired true var documentcreateelement option one true formappendchild select selectappendchild appending option select problem swapping avoids issue", "d": "11/2016"}, {"body": "gaearon catch handler going catch error thrown chain including one caused render due setstate call though setstate asynchronous could work like edit ahh may asynchronous goddamn scratch question", "d": "11/2016"}, {"body": "likely almostalways async future cases ca nt eg inside input event handler", "d": "11/2016"}, {"body": "issue fixed react today mocking unsupported please remove changes work", "d": "11/2016"}, {"body": "hey guys current status", "d": "11/2016"}, {"body": "going fixed soon", "d": "11/2016"}, {"body": "nt work workarounds fixed import react react import reactdom reactdom import inputswitch main import testutils reactaddonstestutils import renderer reacttestrenderer test default value comes checked prop gt const component renderercreate expect componenttojson tomatchsnapshot test onchange prop triggered checkbox value gt let onchange jestfn const component testutilsrenderintodocument testutilssimulatechange testutilsfindrendereddomcomponentwithtag component input target checked false expect onchange tobecalledwith false test suite failed run", "d": "11/2016"}, {"body": "resolved react", "d": "11/2016"}, {"body": "fixed react today", "d": "11/2016"}, {"body": "refs work test renderer master even mock return something else instead null js import react react export default class myinput extends reactcomponent componentdidmount thisinputfocus render return js import react react import myinput myinput import renderer reacttestrenderer function createnodemock element elementtype input return focus return null renders correctly gt const tree renderercreate createnodemock tojson expect tree tomatchsnapshot plans support test renderer agnostic react dom way implement way wo nt break future", "d": "11/2016"}, {"body": "reason still ca nt use jest tests details", "d": "11/2016"}, {"body": "romanoff react test renderer coupled react dom ca nt guess dom apis component relies need mock nodes noted release notes hope helps", "d": "11/2016"}, {"body": "closed fix given workaround given response validate closed state still issue", "d": "11/2016"}, {"body": "phunky closed react bug ie bug fix see", "d": "11/2016"}, {"body": "thanks quick reply", "d": "11/2016"}, {"body": "doc wrote zpao", "d": "11/2016"}, {"body": "issue caused commit changed looks like key bit changing value even identical existing value knocks browser helpers edge see removed later version something account related cc jimfb", "d": "11/2016"}, {"body": "lpadier opened pr", "d": "11/2016"}, {"body": "react except worked linux mac nt tried windows code switching following works", "d": "11/2016"}, {"body": "basically facebook steals idea sue better hope idea nt built ideas", "d": "11/2016"}, {"body": "clear nothing ideas software patents never went nt plan go process none considerations relevant business however choose use software patents offensively prepared others return", "d": "11/2016"}, {"body": "software patents patents business anything yes happy someone using ip nt go process patenting work well software seen open source projects patented something probably good reason also understand software patents bit gray area covers patents patents exist reason troll terms penalize defensive use much offensive use patents problem nt protect patent trolling patents relative react understand perfectly nt patent someone else work could argue seems far far wider say business patented widget took years develop well ca nt use react company website seems need pretty certain facebook nt going start producing widgets dump website moment rebuild without react protect business ca nt take risk seems bit pointless", "d": "11/2016"}, {"body": "want clarify two conflicting posts encompass software patents also cover hardware patents types patents example robotics company owns several hardware patents decided use react code billing web app dashboard facebook infringes robotics patents rewrite billing dashboard without react", "d": "11/2016"}, {"body": "adeelzaman lawyer patents settlements exists facebook infringes one robotics patents unlikely would throw arms air give would work agreement goes way give take also let forget react super simple core technologically revolutionary plenty alternatives facebook went warpath assuming even applicable patents absolutely sure noninfringing dropin replacement would appear healthy discussion degree also seems like people generally blowing proportion society ripe abuse easily picked locks dark alleyways dangerous people think one could safe whole plan suing facebook well taking every precaution quite sure problem anyone steal idea anyone might find way sue matter framework use even written google wrote nt mean others nt looking sue using google backing imho good thing interested defending ensure becomes widely used goes react facebook pr attracting talent", "d": "11/2016"}, {"body": "syranide thanks explanation agree lot sentiments post", "d": "11/2016"}, {"body": "ca nt repro insider preview edge", "d": "11/2016"}, {"body": "current state issue", "d": "11/2016"}, {"body": "outstanding pr looks like conflict master address conflicts update sorry looks like something ci upstreamed anyway", "d": "11/2016"}, {"body": "spam seen lot lately nov pm qagiux notifications githubcom wrote gon na first half receiving mentioned reply email directly view github mute thread", "d": "11/2016"}, {"body": "responding questions completeness superconcerned issue plugin meant reusable thirdparty mixin use cases use context ui theming sidechannel communicating reusable parent components children passed parameters eg toggle reusable component interface might look like child components need behave differently entire toggle hovered undergoing animation would use context communicate child components without polluting public api", "d": "11/2016"}, {"body": "still able reproduce issue keyboard ctrl v triggers event however rightclick mouse paste trigger reading thread seems like fixed though still nt seem stable release update thanks", "d": "11/2016"}, {"body": "hi trying use snapshot shallow works pretty cool", "d": "11/2016"}, {"body": "please provide example reproducing", "d": "11/2016"}, {"body": "thing going converting react backbone nested contexts noticed issue adding onmouseenter handlers elements event triggered twice entering element react context notice onmouseenter fires correctly fires entering pink rectangle using react karczk", "d": "11/2016"}, {"body": "root cause cases appears exception occurred component method eg exception swallowed higher exception swallowed see console identify root cause see followup errors react code already operating inconsistent state consider innocuous example imagine part login form rendered react component trycatch block prevent default behavior however calls point render throws exception get unhelpful exceptions solution particular case call inside generally entry points react like called clean call stack without trycatch blocks make sense modify defer state changes", "d": "11/2016"}, {"body": "getting bug using draftjs ca nt wrap code", "d": "11/2016"}, {"body": "explained would fix underlying problem crash somewhere code nt see first underlying error likely code swallowing check handlers especially promises people often misunderstand use direct errors react blocks react already inconsistent state without surfacing would nt help add defensive programming break somewhere later line even cryptic errors need fix errors code instead future versions react hopefully avoid problem aggressive failing fast well letting catch errors components please find errors components eg use break exceptions chrome", "d": "11/2016"}, {"body": "error use ref method batch component update like fixed scrollintoview longer raise exception maybe error issue cause exception render", "d": "11/2016"}, {"body": "fwiw got error tried override like javascript export default class extends purecomponent shouldcomponentupdate nextprops nextstate consolelog typeof supershouldcomponentupdate gt undefined user code return supershouldcomponentupdate nextprops nextstate render probably optimal allowed working right would appreciate helphint cc spicyj", "d": "11/2016"}, {"body": "also get batch error typing input field got error trying access event bubbles input element custom element time want consume event already reset null solved calling input element", "d": "11/2016"}, {"body": "mgnrsb everyone else saw error nt see original error example mgnrsb case would something like read target property null still problem part code swallows exceptions common way get problem use promises catch block attempting update ui component throws error due mistake code catch handler gets error tries render error ui assuming network error however ui already broken point earlier error never surface get confusing second error careful catching errors especially dealing promises easy accidentally catch errors code", "d": "11/2016"}, {"body": "seeing seems related reduxform interaction react current versions reduxform react seems like problem started occurring upgrading reduxform", "d": "11/2016"}, {"body": "afraid additional comments thread wo nt helpful without examples reproducing issue", "d": "11/2016"}, {"body": "viz using reduxform react issues moment also using reduxform since alpha issues react would go try identify exact source issue try removing components narrow advise checking variables using component making sure passing around anywhere gaearon suggested provide easy follow example reproducing issue", "d": "11/2016"}, {"body": "fairly minimal project reproduces error test suite shortly test legitimately errors node version npm version git clone git githubcomwkingperformupdateifnecessarybuggit bug cd bug npm install npm warn optional dep failed continuing fsevents react nodemodulesreact objectassign looseenvify jstokens fbjs uaparserjs promise isomorphicfetch corejs reactdom nodemodulesreactdom objectassign looseenvify jstokens fbjs uaparserjs promise isomorphicfetch corejs reactscripts nodemodulesreactscripts npm test consoleerror warning performupdateifnecessary unexpected batch number current pending", "d": "11/2016"}, {"body": "reproducing code bit convoluted nt seem like good reason fail reopening tagging bug help investigating error happens welcome note error relaxed warning still weird happens", "d": "11/2016"}, {"body": "thu nov dan abramov wrote reproducing code bit makes bit sense boil far full version code graph issues requested slug recursive slugfetcher nested atomic state pivots allow avoid duplicate parallel calls", "d": "11/2016"}, {"body": "error solved create class table named mftbale used pagelike render time need hide mftable guess react remove got misttake changed render well done", "d": "11/2016"}, {"body": "adding note thread workaround poscar workaround requires update release account formal split", "d": "11/2016"}, {"body": "pgoldrbx thanks advice great help despite almost beginner node ssr wrote small library facilitated well partners work proud helped anyone else", "d": "11/2016"}, {"body": "zpao ohai also seems mobile safari uses video muted attribute determine video autoplay nt enough", "d": "11/2016"}, {"body": "argue needs reopened breaks autoplay support", "d": "11/2016"}, {"body": "elements also allowed autoplay without user gesture elements allowed without user gesture source media contains audio tracks property set conflicting statements lead believe probably continue using property might need ensure set somebody issue share code issue hi aza ca nt repro problem could looking wrong thing rendering video autoplaying inline without issue ios simulator react leave autoplay", "d": "11/2016"}, {"body": "issue happening running andor params", "d": "11/2016"}, {"body": "react browsers google chrome firefox cause uncaught exception inside lot scenarios never printed console nt repro bug think everything working happens easily reproduce bug image load tag produces event since using babel browser see exception lot cases nt see", "d": "11/2016"}, {"body": "fairly new react working common dialog modal request ajax response needs displayed created component dialogmodal used bootstrap modal able get error happened removing modal onhide line number dialogmodal component changing hide error gone actually committing transaction deleted node dom hope helps one", "d": "11/2016"}, {"body": "render stream important cache server otherwise cache component memory", "d": "11/2016"}, {"body": "aickin goatslacker spicyj sebmarkbage lencioni update feature interested would like move forward anything help feature", "d": "11/2016"}, {"body": "currently working fiber complete reimplementation react core means nt seem make sense spend effort trying shoehorn streaming existing reconciler replaced fiber make easier create separate streaming server renderer would focused performance wo nt initial focus fiber becomes stable sure lot space community contributions", "d": "11/2016"}, {"body": "thanks lot update gaearon migrate markojs react nt feasible isomorphic definitely check fiber comes", "d": "11/2016"}, {"body": "documentation nt specifically say ca nt string must object null expected behavior say bug docs however also created pr fixes issue", "d": "11/2016"}, {"body": "hitting issue mnpenner", "d": "11/2016"}, {"body": "ended working around wrapping code", "d": "11/2016"}, {"body": "mhuggins work around helped", "d": "11/2016"}, {"body": "problem reading comments understood problem modal closed clicking dark background overlay clicking close button inside modal content container clicking overlay fine clicking button would cause error since also triggering event overlay adding event handler fixed issue", "d": "11/2016"}, {"body": "aweary merged conflicts issues resolved", "d": "11/2016"}, {"body": "handled packaging reconcilers", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "interested could please send pr yes think right place", "d": "11/2016"}, {"body": "browser plugin support jsx syntax natively would useful development able skip transpiling every change code moment using", "d": "11/2016"}, {"body": "misterfresh try", "d": "11/2016"}, {"body": "strange behavior bug using valueseq update react iterating twice immutablemap whereas iterating using toarray testing code anyone behavior", "d": "11/2016"}, {"body": "also tried one worked fyi part code connect get propsitems render using map part always warns", "d": "11/2016"}, {"body": "react iterating twice immutablemap valueseq", "d": "11/2016"}, {"body": "skatejs interesting opinion enclosed docs skate written top standards react authors vocal however response issue incorrect web components nature declarative html web components also completely solve integration problems libraries frameworks due nature custom elements shadow dom work custom elements provide declarative api shadow dom hides implementation details integrating frameworks writing html terms problems imperative apis fault web components force user call method fault design web component nothing stopping web component completely declarative especially written skate information web component design would interesting see react teams opinion", "d": "11/2016"}, {"body": "way worded feels like trying stir pot may may worth revising quite old interested iterating anyone input worth arguing fri nov adam thomas notifications githubcom wrote skatejs interesting opinion enclosed docs skate written top standards react authors vocal however response issue incorrect web components nature declarative html web components also completely solve integration problems libraries frameworks due nature custom elements shadow dom work custom elements provide declarative api shadow dom hides implementation details integrating frameworks writing html terms problems imperative apis fault web components force user call method fault design web component nothing stopping web component completely declarative especially written skate information web component design would interesting see react teams opinion receiving commented reply email directly view github mute thread", "d": "11/2016"}, {"body": "sorry came across way opinion crowd wisdom nt seem pointing either way argument debate", "d": "11/2016"}, {"body": "worries overly defensive comes two communities seen unfortunately participated several divisive subjective conversations privately publicly never resulted positive outcome parties dropped bias worked toward common goal interested discuss etc sat nov adam thomas notifications githubcom wrote sorry came across way opinion crowd wisdom nt seem pointing either way argument debate receiving commented reply email directly view github mute thread", "d": "11/2016"}, {"body": "chrome edge insider preview seem log", "d": "11/2016"}, {"body": "spicyj function instance different pass null old one component new one reflected documentation", "d": "11/2016"}, {"body": "unel function instance different every render react nt know function conceptually maybe passing pass needs reset ref since might never get called set ref since new one could added documentation sure matters help understand set field ref callback nt think", "d": "11/2016"}, {"body": "gaearon think important clarification cases conceptually nt expects behaviour render callback called null component unmounted second reason count calls calls whole child component lifecycle obviously less calls count heavy handlers may critical", "d": "11/2016"}, {"body": "calls whole child component lifecycle sure mean ref calls cheap typically set reference bottleneck likely wo nt think important clarification please feel free send doc pr", "d": "11/2016"}, {"body": "gaearon please feel free send doc pr", "d": "11/2016"}, {"body": "believe typo example gajus second bullet point original post say instead htmlforbar able use foobar say forbar wrong sorry distraction confusing realized though", "d": "11/2016"}, {"body": "drewwarrentiy standard placeholders things code order foo bar baz quux corge grault flarp", "d": "11/2016"}, {"body": "stonecypher feel free correct wrong example first post conversation gajus gives us two examples plugin used simplify writing jsx code instead type classname code plugin simply type class instead type htmlfor code plugin simply type however example shortens htmlfor foo believe supposed thanks reply", "d": "11/2016"}, {"body": "however example shortens htmlfor foo believe supposed typo record like withdraw support proposal working react couple years hardly ever use case practice", "d": "11/2016"}, {"body": "thank gajus coding bootcamp learning basics react helpful glad found article even deprecated helped beginner exercises appreciate response", "d": "11/2016"}, {"body": "interestingly enough continues one first installs convert project react apparently adding divisive", "d": "11/2016"}, {"body": "hurrtz currently experiencing silent errors suspect might webpack config chance webpack config files care share changed webpack", "d": "11/2016"}, {"body": "turn promise eating error flux store triggered parent", "d": "11/2016"}, {"body": "someone pass select placeholder gt empty string could also write nt recommend stay instead validation attribute works value first option element select element list options empty string visually since user select nt want displayed list used hidden attribute works perfectly chrome firefox notpartially ie edge safari", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "guys activity issue currently trouble test infinite scroll component", "d": "11/2016"}, {"body": "barsukov find way without real dom without mocking please share", "d": "11/2016"}, {"body": "tried mounting simulating events working approach one popular common another example test infinite scroll lib looks like opinion bit inconvenient perfect way probably wil bel helpful somebody", "d": "11/2016"}, {"body": "activity would see issue issue like best way fix dive happens send pr project", "d": "11/2016"}, {"body": "zpao reason nt work purpose figured would nice since would nt return anything implied would save line code", "d": "11/2016"}, {"body": "spicyj gaearon would like take bug fix", "d": "11/2016"}, {"body": "reznord cool please give try", "d": "11/2016"}, {"body": "gaearon tests failing try running npm test tell going wrong log", "d": "11/2016"}, {"body": "reznord little digging around want add comment case still interested feature code running already pr code example given works correctly detecting valid element default namespace svg however nt play nicely using check svg namespace nt work expected used since testing modern version chrome firefox safari would replaced also support old browsers searching answers correcty handle checked docs avail tried scan source see handling invalid svg elements meaningful way found nothing gaearon information think would useful see tracked property mainly knowing domnamespace test nt help us since condition still return false another closely related point would question attempt detect correct custom elements even even try detect since additional feature enabled development help developers spot tiny mistakes typo like example handle common case add check using default namespace overlooked something please let know never attempted verify valid svg tags browser interested know stable solution", "d": "11/2016"}, {"body": "think fine nt warn inside svg long nt false positives", "d": "11/2016"}, {"body": "connoratherton working made progress sending pr soon feel free send pr already worked", "d": "11/2016"}, {"body": "hollandben could give test case guess reason concurrency see", "d": "11/2016"}, {"body": "company longer work unfortunately ca nt provide code", "d": "11/2016"}, {"body": "would made thinks easier react components could accept pojos long observables props possible shown way chose observable props sense long run sense context actually", "d": "11/2016"}, {"body": "jimfb think synchronous use case think would perfect componentdidmount thisselectall componentdidupdate prevprops let shouldupdateselected prevpropsrecordtypefilter thispropsrecordtypefilter prevpropsstatusfilter thispropsstatusfilter prevpropslist thispropslist selectall thissetstate selectedids thisgetfilteredorders map order gt orderid getfilteredorders let filteredorders thispropslist", "d": "11/2016"}, {"body": "chanakasan example lacks method essential understanding example suggesting better solution second code connected custom business logic nt easy read nt hesitate explain throw copypaste others read example however would like share following thoughts use case switch component would rerender twice less preserving logic year since left discussion still see zero use case except reacting dom changes much better however would avoiding hooks moving logic method migrating stateless component nt actually state purely computed props", "d": "11/2016"}, {"body": "hi meandre thanks taking time reply read discussion page like thank participating yes needed things seems mysterious without said use still mystery think try two things suggested failed componentwillreceiveprops wo nt work function called needs newprops could nt think way derive without storing state created complete example use case made easy understand much possible could please look point right direction able understand properly share example blog post help others well", "d": "11/2016"}, {"body": "chanakasan come looks like production code gon na read help project free however point right direction access prev next props clearly seen official react docs complete copypaste code obvious use state storing selected ids user toggle fine use state still would trigger rerender twice less render gon na happen anyway would update state upcoming render please take look docs save time respect others", "d": "11/2016"}, {"body": "meandre think understand point using line docs componentwillreceiveprops invoked call thissetstate caveat using pass along nextprops functions try follow advice thanks appreciate btw nt intention help production project free full example previous short example fill blanks use case", "d": "11/2016"}, {"body": "chance revisiting issue feature would extremely useful instead manipulate classes beforehand also noticed strange behaviour compiles invalid class definition feature considered future releases cc spicyj", "d": "11/2016"}, {"body": "completely agree pgom array stringify dividing items comma ca nt bit rectify behavior use space delimiter", "d": "11/2016"}, {"body": "bit inaccurate walking code react learned property ai nt processed via custom logic strange behavior pgom mentioned could described construction react nt additional logic implementation could lead performance leaks might need checks array items allow cases like instance spicyj said solution propose", "d": "11/2016"}, {"body": "root issue fixed pull request suggested workarounds dodging real problem", "d": "11/2016"}, {"body": "etc also become controllable nt standard declarative api nt mean ca nt make one think action create completely controllable implementations see surface area way big probably would nt want bundle default small perhaps logic unified forms generic way might worth", "d": "11/2016"}, {"body": "remember declarative wrapper around audio one problem nt expect prop changes would nt get reflected ios cases turned ios ignores calls outside clicktouch event handlers something keep mind", "d": "11/2016"}, {"body": "wandered thread looking info lifecycle fire order order manage obnoxious focus stuff itemsjsx componentdidmount patentjsx componentdidmount focused right \u30c4 case including party child component focus chicanery didmount solution probably involve defer parent work fine illustrate fun times fuzzy edge react browser first guess mount order would somehow deterministic", "d": "11/2016"}, {"body": "pr related issue", "d": "11/2016"}, {"body": "use ipod render time one secondbut use android takes seven seconds android configuration ram cpu frequency gpu imagination powervr enhance user experience virtualized lists mobx solve", "d": "11/2016"}, {"body": "aldredcz really great work thanks", "d": "11/2016"}, {"body": "hi like take look", "d": "11/2016"}, {"body": "would really nice overlapping styles working hoc footer would like pass elements place according needs inside wrote following code reactbootstrap got applied would convinient point working", "d": "11/2016"}, {"body": "mere fact element render certain elements reason enough add feature order compatible web apis edit ah fragments looking forward", "d": "11/2016"}, {"body": "trusktr noted first post thread note maintainers know issue know exactly set problem solved want hard problem current architecture additional comments expressing desire feature helpful", "d": "11/2016"}, {"body": "gosh dang got ta stop", "d": "11/2016"}, {"body": "plz add", "d": "11/2016"}, {"body": "agreed fixed meantime hacked ref callback node nodestylesetproperty float right important gt", "d": "11/2016"}, {"body": "ca nt believe nt supported", "d": "11/2016"}, {"body": "rricard man", "d": "11/2016"}, {"body": "dannyleiton get breakpoint want start popup observe stack stack goes back original click fill bug report normal however case probably case stack stopping return async action graphql query apollo case finally find way prefetch query showing clickable button button could hit apollo cache get result stack", "d": "11/2016"}, {"body": "concise manner avoid network async calls click event popup creation", "d": "11/2016"}, {"body": "also think would important able load data within components sort lazy render method maybe make sides happy create new method called asyncrendertostring add new lifecycle event called something like called call asyncrender method terms code duplication server client side fixed developers moving common loading code separate method call method detecting asynconload done probably use returned promise undefined returnedmethod defined directly call applicable lifecycle events render otherwise waits promise resolves think solution like would solve hacky ways use moment proper server side rendering including example allow easy server side rendering react applications react router longer uses centralized route config right way get isomorphic applications working", "d": "11/2016"}, {"body": "solved called stream check react stream thursday november florian krauthan notifications githubcom wrote also think would important able load data within components sort lazy render method maybe make sides happy create new method called asyncrendertostring add new lifecycle event called asynconload something like called call asyncrender method terms code duplication server client side fixed developers moving common loading code separate method call method asynconload componentmount detecting asynconload done probably use returned promise undefined returnedmethod defined directly call applicable lifecycle events render otherwise waits promise resolves think solution like would solve hacky ways use moment proper server side rendering including example allow easy server side rendering react applications react router longer uses centralized route config right way get isomorphic applications working receiving subscribed thread reply email directly view github mute thread", "d": "11/2016"}, {"body": "search react stream find project least based documentation way lifecycle event preloading data delays next render call subchilds promise resolved talking something else", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "hacky ways requires routing independent component tree main component route includes know data needs loaded works time always would obsolete react delayed component render", "d": "11/2016"}, {"body": "agree probably thing hate right react hate people try defend framework feature saying done manually course like everything related software development nt mean fact tons modules taking care precise thing make point something solved within framework", "d": "11/2016"}, {"body": "nextjs serverside rendering unfortunately still need call child parents way back root apollo graphql client also allows traverse tree gather data requirements serverside sending everything back example next apollo would great async react component lifecycle methods combine things together learned ssr week hope write makes sense cc nkzawa stubailo", "d": "11/2016"}, {"body": "btw already async help", "d": "11/2016"}, {"body": "sedubois react wait promise resolve rendering otherwise nt really help", "d": "11/2016"}, {"body": "olalonde seems", "d": "11/2016"}, {"body": "sedubois note example returns promise screenshots show react nt wait could nt promise renders text edit corrected", "d": "11/2016"}, {"body": "sedubois polytypic also cause errors thrown within function silently ignored since promise nt handled", "d": "11/2016"}, {"body": "polytypic dantman quite sure meant promise nt handled awaited operator need trycatch error updated example using loadingerror signature similar apollo render", "d": "11/2016"}, {"body": "sedubois function implicitly returns promise function implicitly turns rejection promise instead throw stack means returning promise caller react anything return value function returning promise expecting someone something tossed instead nt handled means rejection promise caught code react unhandled error show console even trycatch wo nt perfectly protect throws error catch make typo catch error silently disappear wo nt aware something broken", "d": "11/2016"}, {"body": "sedubois actually async method always seem return promise javascript well future javascript confused thinking issues asyncawait c apologies noise nevertheless screenshots clearly show react wait promise resolved calls immediately calling renders text calls call react wait promise resolve would nt render text instead would wait promise resolves would call kind behaviour issue able perform async io server side rendering", "d": "11/2016"}, {"body": "dantman polytypic thanks yes sure changes needed inside react wait response handle errors properly maybe adding code could", "d": "11/2016"}, {"body": "personally using web workers store application state emit props change completely detached data storage fetching react components treat react renderer preserve unidirectional flow principle waits message expected requirements specific property true render way even first message intermediary loading states used static serverside renders without need async component methods", "d": "11/2016"}, {"body": "sedubois would different stack methods breaking change react current render methods sync need different server render method returns promise", "d": "11/2016"}, {"body": "dantman nt want give opinion waters deep initial aim point vjeux async componentwillmount hack hmm ca nt react look type object returned lifecycle methods promise handle async otherwise handle sync like currently ie backwardscompatible manner", "d": "11/2016"}, {"body": "like fkrauthan proposed lifecycle method return promise additional async function always called client server use returned promise ignored match behavior today use returns promise promise resolved rendering", "d": "11/2016"}, {"body": "like nextjs add react lifecycle function gets called constructor method call constructor directly looks like nextjs manages job except hooked react component lifecycle called toplevel component ideas could joined together", "d": "11/2016"}, {"body": "sedubois nt think getinitialprops correct place first people using nt haveuse method second nt wan na work initalprops defaults wan na work ontop merge initalprops passed props therefor suggestion new lifecycle event gets dispatched think idea could cause problems people might relay lifecycle events promise already resolved two different behaviours lifecycle event makes bit tricky therefor server client one sync render method calls new lifecycle async version calls lifecycle always waits promise gets resolved proceeding would opinion give greatest flexibility decide need lifecycle client render server render", "d": "11/2016"}, {"body": "people using nt haveuse method fkrauthan maybe refer talking new one name used nextjs second point yes might better new lifecycle method rather guess way next luxury tweak react lifecycle mentioned earlier hence would great bring ideas within react", "d": "11/2016"}, {"body": "sedubois even one use example feature define class body makes code way nicer read opinion sure people going switch soon official released", "d": "11/2016"}, {"body": "note class properties feature already finalized new language feature exponentiation operator referring stage class properties proposal part language yet might change get dropped", "d": "11/2016"}, {"body": "nt see need async functions react fetching data instead happy virtual renderer would rendertostring demand could set actions virtual tree would update accordingly rendering string think would ideal achieve good ssr react leaves developer fetch data mentioned good api would something like following little update suggested js const virtualtree reactdomrendervirtual rootele get bundled query redux store example const bundle storegetstate bundle fetch data according bundle const data await fetchdatasomehow bundle hydrate store set updates virtual tree storedispatch type hydrate data final result const domstring virtualtreerendertostring would avoid problem graphql client apollo enforces make double rendertostring first fetch data dependencies second render data populated think quite waste processing since rendertostring quite expensive", "d": "11/2016"}, {"body": "see point amount libraries try simulate solution still thousands libraries sign maybe core feature rather something build top solution would still require way render calls virtual still render calls get output", "d": "11/2016"}, {"body": "fkrauthan yes virtual renders far performant make two renders string main issue opinion performance ssr weak part react experiments improve react real advance matter react team criticizing amazing job", "d": "11/2016"}, {"body": "agree also deliberated issue simplest approach leaves freedom developer determine render flush", "d": "11/2016"}, {"body": "makes everything lot complicated code point view looked thru code making render async way easier creating renderer uses vdom dumped one point reconsider unmount events makes custom code way complicated needed eg loading data might result rendering new component also needs load data sudden lib needs figure component position already loaded data component contains new data loading things", "d": "11/2016"}, {"body": "vdom arguably low level solution would probably easier react developers implement would nt backward compatibility issues could allow community experiment different higher level solutions example one higher level solution could higher level component wraps async methods waits pending promises fire everything resolved using sort strategy ssr app though unfortunately lot fetching right vdom", "d": "11/2016"}, {"body": "think best way would change functions currently means making getinitialstate componentwillmount rendertostring behave differently instead add new functions solve problem discussed like functions get called client could functions get called server think could add function rendertostringasync reactdomserver difference normal rendertostring would returns promise implementation side difference would async version would whenever creates component instance call amp await initialize first calls render component initialize method could call render immediately following example app structure process would basically need new function rendertostringasync makes use new optional function initialize would hard", "d": "11/2016"}, {"body": "vancoding idea thinking wondering initialize could also called automatically componentdidmount client server would client would", "d": "11/2016"}, {"body": "working implementation react server rendering reactrouter reactapollo graphql inspired serversiderenderingcodesplittingandhotreloadingwithreactrouter basically server rendering use synchronized component client rendering use asynchronized component webpack async loading executing module javascript way server rendering implemented nashorn script engine jvm branch apollo client rendering code server rendering code one important place distinguish synchronized asynchronized component route synchroized comonent route asynchronized component routeasync noted file name must routejs routeasyncjs code always import routeasyncjs webpack replace routejs built server rendering two version build client server two chunks vendor app store state exported embedded indexhtml reason two versions build support async component yet issue twoversionsbuild approach warning dev mode since difference client server version routejs routeasyncjs warning ignored warning show production mode async data fetching component rendering server side rest api added static loaddata component use probe execute matchedroutes array matched routes parent index executed sequence parallel graphql query simply use execute graphql query", "d": "11/2016"}, {"body": "btw using nashorn script engine one performance optimization opportunity since vendor contains library code polyfills executed reused later requests app chunk executed since libraries moved vendor chunk app contains javascript code src small performance boost comparing evaluating vendor chunk every time javascript compiled cached executed every request lied app chunk contains src code also contains duplicated referenced ca nt moved vendor chunk due indexjs main entry webpack could recognize module code size small", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "syranide gaearon think react needs make work expected usecases even vast majority people using lot example implementing powerful tooltip react user hovers tooltipable element display tooltip content would useful tooltip know react elementcomponent targets least props accessible point yet react way user get react element htmlelement reference without ref okay least could access props user put even put react element user hovers html element tooltip target could take make contents tooltip currently support inject tooltip html could make tooltip read object aware could break context could starting point think", "d": "11/2016"}, {"body": "radubrehar implement tooltip react instead also store objects using trying attaching data dom nodes even reference react component use however want would nt recommend certainly possible", "d": "11/2016"}, {"body": "syranide thanks quick update try briefly explain scenario want implement tooltip users render somewhere react component tree forget jsx targetnode gt return render tooltip content based current targetnode want tooltip displayed htmlelements match selector elements share tooltip two rendering strategies function child tooltip configured single child function call whenever want make tooltip visible certain htmlelement inject value innerhtml tooltip flexible simple tooltips job nt want force users tooltip add code use first rendering strategy even using want call function tooltip target node htmlelement reference possible react elementcomponent behind public apireliable way get htmlelement reference point thought use react implement properly way users could something like jsx gt tooltip target gt tooltip target targetnode gt return targetnodedatasettooltip would trick would nice also following issue cant get underlying react element behind htmlelement without work expected hope long specific react gets real benefits implementing update syranide code assumptions based ability storing value inside thanks eye opening digging right definitely option", "d": "11/2016"}, {"body": "think possible whenif custom attributes land react", "d": "11/2016"}, {"body": "radubrehar without special handling comment stating ca nt directly provide object", "d": "11/2016"}, {"body": "react appears checked attribute checkbox input fields set actual html checked attribute javascript checked property element causes issues css selectors depending checked selector take example css selector see first element checked create checkbox react attribute missing even though jsx set", "d": "11/2016"}, {"body": "problem based solution called element already document tree unfortunately sometimes need set attributes element document tree behavior going different", "d": "11/2016"}, {"body": "note since part react anymore reactdom", "d": "11/2016"}, {"body": "still opened understand nt think property attribute thing treat custom attribute native element legal treat unknown property react element property ca nt catch needs new attributes time afraid open developers makes feel react telling us using custom attribute guilty web standards telling us nt use indeed real requirement", "d": "11/2016"}, {"title": "event propagation error platformwebworker caused routerlink nested within element click handler registered", "body": "submitting check one x current behavior nest routerlink inside div click handler running platformwebworker expected behavior navigation without typeerror akin platformbrowsernowebworker believe adding check element null line platformwebworkerumdjs would fix unless determined event bubble prior navigation sure intuitive minimal reproduction problem instructions nest routerlink inside div click handler running platformwebworker motivation use case changing behavior running webworker clicking routerlink nested within parent element click event registered causes error platformwebworker looks like trying bubble click event element click event registered gone due navigation main thread please tell us environment windows chrome systemjs dotnetcore angular version angular yes browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13171", "d": "11/2016"}, {"title": "router navigate option trigger params subscription navigating required parameters", "body": "submitting check one x scenario parent child routing configuration child loaded based id required parameter parent path parent id component parentcomponent children path child component component navigating state thisrouternavigate parent child thisrouteparentparamssubscribe params gt thisdataservicegetbysomechildentitybyparentid params id subscribe model gt thismodel model parentcomponent problem able trigger reload model childcomponent navigating stateroute thisrouternavigate parent child way required parameter id value workaround add optional parameter navigation parent trigger params change subscription child thisrouternavigate parent version thismodelversion child required new behavior optional parameter extras trigger subscription params change even parameter value stays thisrouternavigate parent child extras forceparamschange true note know components nt going recreated using parameters subscription nt want force components recreated know could use shared service scenario nt want know something rxjs yet proficient", "num": "13166", "d": "11/2016"}, {"title": "write framework version number dom track application deployments", "body": "package shall version platform bundle write version dom format interface version full string major number minor number patch numberstring codename string export const version version full major minor patch codename icemanipulation imports dom note write version", "num": "13162", "d": "11/2016"}, {"title": "animating height setting height start callback", "body": "submitting current behavior currently setting height animated area animating height start callback nt seem take effect height nt get applied done callback sure bugdesign flaw intended appropriate workaround seems like behaving right also extra clarification nt set height animation want height dynamic want dev able pass height otherwise use auto height expected behavior height set start minimal reproduction problem instructions plunkr click button see animation note jumps finishes nt appear animate edge use chrome sure motivation use case changing behavior motivation control element animated angular version browser chrome", "num": "13160", "d": "11/2016"}, {"title": "default errorhandler stops working first error handled", "body": "submitting check one x current behavior default error handler processes first error longer processes future errors expected behavior every error happens processed error handler minimal reproduction problem instructions simple example adds button calls function throw error first time button click error logged console clicks button throw error error handler capture error handle see error plnkr example clicking throw error button watching console log first occurrence logs future occurrences error thrown nt go errorhandler error handler constructor rethrow error works expected appears error rethrown gets error subscriberts line theory unsubscribes error handler future errors processed error handler code private tryorunsub fn function value void try fncall thiscontext value catch err thisunsubscribe throw err code motivation use case changing behavior error handler always handle error please tell us environment windows bit webstorm npm webpack angular cli spring boot tomcat angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview likely chrome firefox sure language typescript xx typescript targeting node aot issues", "num": "13159", "d": "11/2016"}, {"title": "focus method formcontrol access native html element", "body": "submitting check one x current behavior seems way focus formcontrol expected behavior formcontrol provides focus instance method access native html element motivation use case changing behavior give input focus control invalid following example please tell us environment angular version browser na language typescript", "num": "13158", "d": "11/2016"}, {"title": "aot throwing compile error relating getanimationentrymetadata", "body": "submitting check one x current behavior followed cookbook guide aot app ripping lazy loaded modules nt work rollup getting different error running nodemodulesbinngc p tsconfigaotjson stack trace \u03bb nodemodulesbinngc p tsconfigaotjson typeerror read property map undefined compilemetadataresolvergetanimationentrymetadata c projectsitelatestwhitepondfarmnodemodules c projectsitelatestwhitepondfarmnodemodules arraymap native compilemetadataresolvergetnonnormalizeddirectivemetadata c projectsitelatestwhitepondfarmnodemodules compilemetadataresolverloaddirectivemetadata c projectsitelatestwhitepondfarmnodemodules c projectsitelatestwhitepondfarmnodemodules c projectsitelatestwhitepondfarmnodemodules arraymap native c projectsitelatestwhitepondfarmnodemodules arraymap native compilation failed noticed error referring getanimationentrymetadata animation code route change animations component ts import component hostbinding trigger transition animate style state angularcore import routeanimationcomponent sharedrouteanimationcomponent import routeanimations sharedrouteanimation component moduleid moduleid selector home templateurl homecomponenthtml animations routeanimationsfadeanimation export class homecomponent extends routeanimationcomponent extends ts import hostbinding angularcore export class routeanimationcomponent hostbinding routeanimation get routeanimation return true hostbinding styledisplay get display return block routeanimations ts import trigger transition animate style state angularcore export class routeanimations expected behavior sure app nt compiling works fine jit minimal reproduction problem instructions ca nt really demo aot plunker take component code compile basic aot app cookbook motivation use case changing behavior compile please tell us environment windows npm angular version browser na language typescript node aot issues", "num": "13157", "d": "11/2016"}, {"title": "replaceulr skiplocationchange nt work routerlink angularrouter", "body": "submitting check one x current behavior pr fix actually nt work passing replaceurl skiplocationchange routerlink take affect expected behavior behave passed routernavigate request minimal reproduction problem instructions see plunkr open popup see url change history entry motivation use case changing behavior please tell us environment na angular version router browser language node aot issues", "num": "13156", "d": "11/2016"}, {"title": "lazy loading module injected service behaviour", "body": "submitting check one x current behavior service instance created whenever lazy module loaded created module loaded preserved di context even service instance preserved component time lazy module loaded component path service instance would created service instance shared components lazy module even service instance preserved single component reuse expected behavior service instance created whenever eager module initially loaded instance would shared among components module expect behaviour lazy module service created lazy module loaded remain di context module available components module minimal reproduction problem instructions code please clone run want code create lazy module create two component module create service provided module see service instance created time try load lazy module including two component putting little code snippet well const routerconfig path component lazycomponent path otherlazy component otherlazycomponent ngmodule imports routermoduleforchild routerconfig declarations lazycomponent otherlazycomponent exports lazycomponent otherlazycomponent providers privateservice export class lazymodule component selector lazy template export class lazycomponent constructor private ps privateservice incr thispsincr component selector otherlazy template export class otherlazycomponent constructor private ps privateservice incr thispsincr injectable export class privateservice id incr thisid getid return thisid lazyother lazy click hit see value would increment go get increment go back get motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13155", "d": "11/2016"}, {"title": "able get templateurl property component dynamically way", "body": "able get templateurl property component dynamically way component definition along class component moduleid moduleid selector contactstate templateurl want get template path input component export class contactstatecomponent feasible angularjs", "num": "13153", "d": "11/2016"}, {"title": "meta plunker suggested issue template work using internet explorer", "body": "submitting check one x current behavior plunker suggested reproduce issues contain corejs shim therefore sample even boot internet explorer plunk referenced expected behavior add line make sure ie bugs also reproduced minimal reproduction problem instructions open plunk internet explorer see error message console browser ie language", "num": "13152", "d": "11/2016"}, {"title": "reference local template variable model controller input attribute", "body": "submitting check one x current behavior line reference local template variable model controller input attribute error expected behavior errors warnings minimal reproduction problem instructions open open console devtools errors line motivation use case changing behavior purpose create short ref use instead angular version browser language typescript", "num": "13151", "d": "11/2016"}, {"title": "router ca nt parse optional parameter refresh page", "body": "current behavior expected behavior without bug minimal reproduction problem instructions pass optional parameter form listcomponent detailcomponent code listcomponent detailcomponent routermodulets export const adminroutes routes path admin component admincomponent children path order children path detail component orderdetailcomponent path component ordermanagecomponent path redirectto order canactivate authguard canactivatechild authguard ngmodule imports routermoduleforchild adminroutes exports routermodule export class adminroutingmodule work fine refresh detail page get errorso mistake bug motivation use case changing behavior please tell us environment vscode webpack angular version browser electron language typescript node aot issues node npm", "num": "13150", "d": "11/2016"}, {"title": "incorrect decimal separator currencypipe brl", "body": "submitting check one x current behavior using currencypipe currencycode brl decimal separator incorrect showing minimal reproduction problem instructions preco currency brl true show r corret r please tell us environment chrome windows angular version angular ionic angular browser tested chrome language tested typescript node aot issues", "num": "13149", "d": "11/2016"}, {"title": "compiler performance regression", "body": "submitting check one x current behavior updating midsized app loc takes seconds bootstrap app bootstraps seconds expected behavior time bootstrap take long minimal reproduction problem instructions app using jit compiler includes approximately app ngmodules built webpack sizable enough codebase makes reproducing small difficult captured cpu profile chrome screenshot attached green lines angular profile runs seconds motivation use case changing behavior please tell us environment angular version browser tested latest chrome firefox safari across different operating systems tested devtools open closed language typescript node aot issues", "num": "13146", "d": "11/2016"}, {"title": "ngoninit execute exception thrown", "body": "", "num": "13145", "d": "11/2016"}, {"title": "feature request good documentation debugging performance issues using angular", "body": "submitting check one x current behavior easy find basic angular tutorials blogs basics change detection little resources debugging issues angular find components marking check expected behavior resources available debugging purposes motivation use case changing behavior users say things ui nice love use daily basis performance terrible done lot profiling fixed many performance issues right biggest cpu hogger change detector already updated components use onpush fixed many places knew components rerendering needlessly hit point nt sure marking components check triggering change detector opened issue stackoverflow nobody answered someone wants respond question would awesome would much better information readily available online", "num": "13144", "d": "11/2016"}, {"title": "angular webpack find name set", "body": "submitting check one x current behavior build process fails due dependency resolution error within angular code js files produced expected behavior expect build complete successfully leave js files dist folder minimal reproduction problem instructions following guide leaves project pushed invoking npm install guide says invoke get output build usersthetravprojectsangularwebpack rimraf dist amp amp webpack config configwebpackprodjs progress profile bail build modules seal optimize build modules hashing create chunk assets additional chunk assets optimize chunk assets optimize assetserror bail mode default usersthetravprojectsangularwebpacknodemodules find name set motivation use case changing behavior basic get started stuff delivering angular app web clients connections suffer loading many small files bundling hard requirement please tell us environment osx sierra sublime text editor http server used angular version per guide angular packages listed browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browser used language typescript xx per guide node aot issues", "num": "13142", "d": "11/2016"}, {"title": "compilercli use ngstyle generated style files", "body": "feature request bug report currently compiler host compilercli detects file generated using regex urlpath see problematic component uses output may extension necessarily css shim even file generated might contain file could overwritten nt documentation indicating behaviour cli projects using projects using styles nt extension styles problems cli monkey patches compilerhost see would like see code goes proper solution core problem templates automatically added every generated files templates problem solved simply generating style files adding extension similar templates way regex simply looks extension instead original stylelike extensions recommendation least contain point protected using proper solution templates styles might base name", "num": "13141", "d": "11/2016"}, {"title": "feat form apply pipe display value input field", "body": "submitting check one x current behavior apply pipe display value input field desired behavior like able apply pipe display value input suppose pipe converts whole number cents dollars adds dollar sign eg gt user typing like apply pipe displayed value value input field remains ie apply pipe display field value plnkr shows input field value input run pipe like actual displayed value input field look like content input field question feature demonstrated angular material motivation use case changing behavior specific scenario common usecase financerelated applications scenario general date formats etc please tell us environment opensuse linux emacs na angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13140", "d": "11/2016"}, {"title": "feat elementref provide option make generic", "body": "submitting check one x current behavior want get hold custom element assigning via property typed instead custom element type expected behavior since typescript nt support default generic types see discussion would require type provided every time used type annotation since would breaking change propose subclassing typing property generic type motivation use case changing behavior type information available using custom elements code completion refactoring usual goodies language typescript xx typescript cc robdodson", "num": "13139", "d": "11/2016"}, {"title": "pull export lambdas annotations aot compiler reference", "body": "depends rewrite tsickle use typescript transforms api see angulartsickle jit mode code works aot needs written like export factoryforsomesymbol gt iget somesymbol ngmodule providers provide somesymbol usefactor factoryforsomesymbol deps injector export class mymodule smart enough together perform operation automatically developer", "num": "13138", "d": "11/2016"}, {"title": "upgrademodule staticjs file gets included instead module file webpack", "body": "submitting check one x current behavior strictly angular issue issue way module structured importing upgrademodule webpack using statement webpack actually ends including file staticjs root directory actually makes perfect sense would expect changing name root folder seems like would safer choice possible expected behavior expect statement import umd module file module root minimal reproduction problem instructions appts javascript import ngmodule angularcore import browsermodule angularplatformbrowser import upgrademodule angularupgradestatic import platformbrowserdynamic angularplatformbrowserdynamic ngmodule imports browsermodule upgrademodule export class appmodule ngdobootstrap javascript var path require path var webpack require webpack var htmlwebpackplugin require htmlwebpackplugin var copywebpackplugin require copywebpackplugin moduleexports devtool sourcemap entry app clientappappjs target electronrenderer module resolve extensions ts tsx js jsx root pathresolve dirname alias uirouter nodemodulesuirouter loaders test ts exclude applib nodemodules loaders awesometypescriptloader test js exclude applib nodemodules loader ngannotate babel test html loader raw test scss loader style css sass test css loader style css test woff v loader urlloader amp minetypeapplicationfontwoff test ttfeotsvgpng v loader fileloader important needed bootstrap js file required bootstrapwebpack access jquery object test bootstrapjs loader imports jqueryjquery plugins injects bundles indexhtml instead wiring manually also adds hash injected assets nt problems cache purging deployment new htmlwebpackplugin template clientindexhtml inject body hash true motivation use case changing behavior make module work webpack default behaviour like angular modules please tell us environment windows webpack angular typescript angular version browser language typescript node aot issues", "num": "13137", "d": "11/2016"}, {"title": "import angularupgradestatic webpack", "body": "submitting check one x current behavior import angularupgradestatic using webpack however manually delete file works fine since delete file picks file minimal reproduction problem instructions add maints import upgrademodule angularupgradestatic please tell us environment webpack angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript", "num": "13136", "d": "11/2016"}, {"title": "using template substitution function silently makes unusable annotation", "body": "submitting check one x current behavior following function library causes error indication used macro function subtle change works expected behavior either template substitution supported clear error message ca nt supported reported", "num": "13132", "d": "11/2016"}, {"title": "support component input values", "body": "submitting current behavior component selector mycomponent template export class mycomponent input label string currently possible translate label know fixed ts translation available somehow feels like limitation", "num": "13130", "d": "11/2016"}, {"title": "valuechanges observable abstractcontrol emits events parent value changed", "body": "submitting check one x current behavior subscribing valuechanges changing value via ui form control parent value date example form control starts value input expected behavior expect emit event occur value control propagated ancestors interestingly enough adding debouncetime fixes problem feel necessary minimal reproduction problem instructions plunker shows demo problem notice forms value always one step behind child control motivation use case changing behavior want access form group value places valuechanges event occurs without passing emitted value around besides form whole always sync please tell us environment mac os x el capitan vs code npm angular version browser language", "num": "13129", "d": "11/2016"}, {"title": "formarray insert setcontrol insert items wrong index", "body": "submitting check one x current behavior documentation insert says item inserted given index insert new abstractcontrol given index array however collection empty item always inserted first position issue due inappropriate usage splice expected behavior always insert item given index minimal reproduction problem instructions motivation use case changing behavior need add formgroups dynamically formarray based relative index later retrieve back index angular version", "num": "13128", "d": "11/2016"}, {"title": "change publishbuildartifactssh publish nonmaster branch builds custom branch", "body": "currently publishes build artifacts upstream travis builds friends always uses master branch repos even builds originate patch branches docs team needs able pull master soon builds separately currently possible modify script publish branch matches current branch branch nt exist angularcorebuilds friends branch created automatically wardbell", "num": "13126", "d": "11/2016"}, {"title": "update rxjs peer dependency", "body": "currently depending significant breaking change seems removal thecache operator either upgrade get feature freeze wednesday wait next major release due march prefer operator removal significant breaking change list things x update main packagejson shrinkwrap files x update package specific packagejson files x upgrade currently alexeagle working already eta tomorrow x figure operator people depend one option create gist people could paste apps create npm package nt want maintain create umd bundle addition dts stuff gt gist much better option imo go gist create ts version cover pretty much scenarios x ping angularcli make sure aware change hansl x ping docs team make sure aware change wardbell believe", "num": "13125", "d": "11/2016"}, {"title": "tscwrapped fail run ngc noemitonerror true", "body": "current behavior compilation failed found module metadatajson gendir outdir path expected behavior compilation succeded minimal reproduction problem instructions turn noemitonerror option true tsconfigjson please tell us environment windows angular version language typescript node aot issues", "num": "13120", "d": "11/2016"}, {"title": "router routernavigateback routerprevouspath attribute directive similar routerlink", "body": "submitting check one x nice able navigate back directly template without adding method component using click binding something like clicking router navigate previous active pathstate proposed name directive routernavigateback routergoback routerback navigateback routerprevouspath etc", "num": "13119", "d": "11/2016"}, {"title": "contentchild templateref descendants working init phase", "body": "submitting check one x current behavior currently working correctly init get different templateref object get another contentcheck following html component method use template element used use template method call get template pretty awfull bug thanks help expected behavior return template init phase also another check content also explaination set means correct template case div init phase considered minimal reproduction problem instructions plunker see problem described add another template see element motivation use case changing behavior please tell us environment windows visual studio code npm connect server angular version gt browser language typescript", "num": "13118", "d": "11/2016"}, {"title": "passing date instance formcontrol nt work", "body": "submitting check one x current behavior passing formcontrol nt work meaning reflected form works expected behavior expect date parsed shown form motivation use case changing behavior please tell us environment windows vscode angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "13117", "d": "11/2016"}, {"title": "input control value change modifies succeeding control value control binding array", "body": "current behavior change value date input control created using ngfor bound item array modifies value succeeding control expected behavior modification date input control value applied selected date input control minimal reproduction problem instructions steps reproduce chrome use plnkr link wait app load click button next first date input control modify notice first second date input control values changed also notice focus changed second date input control click button next first date input control notice time first date input control value changed firefox use plnkr link wait app load click first date input control set focus press backspace key notice first second date input control value changed also notice focus changed second date input control click first date input control set focus press backspace key notice time first date input control value changed edge use plnkr link wait app load click first date input control select new date value press checkmark button apply notice first second date input control value changed click first date input control select new date value press checkmark button apply notice time first date input control value changed please tell us environment windows angular version browser chrome edge edge firefox language typescript node aot issues", "num": "13116", "d": "11/2016"}, {"title": "installing angularcompilercli angulartscwrapped breaks karmajasmine test", "body": "submitting x bug report feature request support request warn webserver basetypescriptjs warn webserver basetypescriptjs warn webserver basefsjs warn webserver basepathjs systemjs xhr error found loading error loading typescript dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularupgrade angularrouter corejs reflectmetadata rxjs systemjs zonejs bootstrap devdependencies angularcompilercli jasminecore karma karmachromelauncher karmacoverage karmajasmine karmaphantomjslauncher karmasourcemaploader karmaspecreporter node", "num": "13115", "d": "11/2016"}, {"title": "ignore leading trailing spaces", "body": "submitting check one x current behavior generate xliff including spaces example element generate really weak rely spaces since could changed unintentionally even ide reformat code expected behavior ignore leading tailing spaces", "num": "13114", "d": "11/2016"}, {"title": "array ngmodel binded input ngfor loop acts strange", "body": "inputs linked somehow", "num": "13113", "d": "11/2016"}, {"title": "modals broken updating", "body": "middle project updated current angularcli multiple lazy loaded modiles used modals inside component updating modals working got following error another seen hack website nt work problem nt idea put put appcomponent module main component component call modal component lastly component", "num": "13112", "d": "11/2016"}, {"title": "import enums static fields classes functions etc template", "body": "general problem need somehow exportexpose enums static fields classes functions etc template without abusing class fields maybe component add key metadata briefly feature used like providers", "num": "13111", "d": "11/2016"}, {"title": "chrome workspace angular component styling", "body": "submitting x feature request current behavior using styles styleurls arrays component decorators include css files styling rules inlined inside shadow dom root web designer find extremely efficient use chrome workspaces make permanent changes css files served locally times sure right style check chrome dev tools instead coping manually code fastest way save would workspaces feature far know possible right angular expected behavior would inline styling inside dom sourcemapped local css files enabling google chrome workspace ie adding local folder mapping resources would able edit local css files browser dev tools motivation use case changing behavior ability edit css files directly browser dev tools take advantage isolated shadow dom components angular browser chrome language", "num": "13109", "d": "11/2016"}, {"title": "setter input binding working upgrading", "body": "submitting check one x current behavior component class import component eventemitter input output oninit angularcore component selector navigationsections template require navigationsectionstemplatehtml styles require navigationsectionsstylescss export class navigationsectionscomponent implements oninit input sections array private selectedsection number output onselectsection new eventemitter using component like following error thrown use annotation directly property component class looks follows error property bound successfully import component eventemitter input output oninit angularcore component selector navigationsections template require navigationsectionstemplatehtml styles require navigationsectionsstylescss export class navigationsectionscomponent implements oninit input sections array private selectedsection number input private selectedsection number output onselectsection new eventemitter expected behavior setter binding work per minimal reproduction problem instructions please tell us environment os package manager yarn npm angular version browser language typescript node aot issues", "num": "13108", "d": "11/2016"}, {"title": "ngclass conditional formatting multiple classnames ommits first class first condition", "body": "submitting check one x current behavior using ngclass conditional formatting based boolean results actual applied class missing one element first condition first condition true expected behavior full class value presented actual html cases minimal reproduction problem instructions plnkr template code first second first div get green bold classes gets green second div get red italic classes gets actual div ngreflectngclass object object class green first div ngreflectngclass object object class red italic second motivation use case changing behavior seems bug specific code styles table td according boolean value underlying object please tell us environment windows centos node angular version browser language typescript node aot issues", "num": "13107", "d": "11/2016"}, {"title": "datepipe applying time zone offset even expression iso string without time", "body": "submitting check one x current behavior datepipe applying time zone offset even expression iso string without time eg expected behavior according official documentation expression iso string without time eg time zone offset applied formatted text day month year expression minimal reproduction problem instructions motivation use case changing behavior current time zone brst please tell us environment macos el capitain vscode npm ionicangular angular version browser chrome canary language typescript node aot issues", "num": "13102", "d": "11/2016"}, {"title": "pass data one component another using router angular", "body": "", "num": "13100", "d": "11/2016"}, {"title": "routerlinkactive queryparams broken worked", "body": "submitting check one x current behavior routerlinkactive child route queryparams working reloading page params working click link element nt receive class provided routerlinkactive route match worked version broken version version expected behavior route match element receive class provided routerlinkactive minimal reproduction problem instructions link following route match routerlinkactive please tell us environment tested chrome mac os sierra angular version first spotted issue angular worked older version also broken latest", "num": "13098", "d": "11/2016"}, {"title": "ngc nt compile default template imports used", "body": "submitting check one x current behavior fails compile component imports default template another module example throws exception time works fine const default export stacktrace shows exception raised staticreflector expected behavior minimal reproduction problem instructions run motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13097", "d": "11/2016"}, {"title": "radio button disabled property binding reenable", "body": "submitting check one x current behavior radio buttons disabled booleanprop really disable radio buttons booleanprop true property changed false radio buttons still disabled expected behavior radio buttons disabled property binding behave using input textbox minimal reproduction problem instructions html form add following two radio buttons textbox initially myrdodisabled false page loaded radio buttons clickable textbox disabled normally change myrdodisabled true event handler like button click radio buttons disabled disabled attribute seen browser dev tool textbox disabled expected behavior afterwards myrdodisabled changed false radio buttons still disabled unexpectedly textbox enabled expected motivation use case changing behavior please tell us environment windows visual studio npm iis angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "13096", "d": "11/2016"}, {"title": "routerlinkactiveoptions nt exactly match matrix url notation parameters", "body": "submitting check one x current behavior setting routerlinkactiveoptions exact true nt match matrix url notation parameters exactly three routerlinks active three routes expected behavior one route active route minimal reproduction problem instructions click links get green background active angular version whatever version recommended plunker template uses browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview firefox language typescript xx typescript", "num": "13093", "d": "11/2016"}, {"title": "animation working properly first trigger", "body": "submitting bug report current behavior animation works first trigger animation snaps animation proper transitions triggers fired mouseover mouseleave events expected behavior animation transition first time triggered minimal reproduction problem instructions stop run code regenerate issue appears first time triggered motivation use case changing behavior improve animation transition please tell us environment ubuntu php storm angular version latest browser chrome latest language typescript", "num": "13091", "d": "11/2016"}, {"title": "validatorsminlength x nt work formarray", "body": "current behavior adding validate error also contains instead actual number controls array validator works see pr breaking change expected behavior validator validate number controls works angular lower minimal reproduction problem instructions initial add remove change angular version angular browser language", "num": "13089", "d": "11/2016"}, {"title": "anuglar zonedelegate prototype error", "body": "trying configure code local machine getting following error reinstallupdate dependencies like npm node using npm version node packagejson file code running machines machine specifically", "num": "13088", "d": "11/2016"}, {"title": "angular unit testing component dependent component gives error saying ca nt resolve parameters componentname", "body": "getting error unit test case particular component depends upon another components constructor components node aot ionicangular angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularcompilercli angularplatformserver error getting error ca nt resolve parameters navparams file contents xyzts import component input output eventemitter inject angularcore import navparams ionicangular import viewcontroller ionicangular component templateurl xyzhtml export class xyzclass implements oninit constructor inject navparams protected navparams navparams thisxyz navparamsdataxyz xyzspects import inject testbed angularcoretesting import http baserequestoptions response responseoptions angular import component oninit inject input ngzone output eventemitter angularcore import navcontroller navparams actionsheetcontroller alertcontroller platform viewcontroller ionicangular import xyzclass xyzts beforeeach gt testbedconfiguretestingmodule providers xyzclass navparams describe xyzclass gt expected result described angular docs unit testing anything dependent component needs provided providers list testbedconfiguretestingmodule unit test spec work show error like ca nt resolve parameters navparams", "num": "13087", "d": "11/2016"}, {"title": "feat export contenttype angularhttp", "body": "submitting check one x current behavior exported though public returns value type expected behavior able use importing minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript node aot issues", "num": "13086", "d": "11/2016"}, {"title": "providerusefactory called multiple times", "body": "submitting check one x current behavior upgrading angular current semantics ngmodule provider changed using usefactory property factory method called effectively gave singleton injection point within ngmodule called multiple times injection point expected expected behavior providerusefactory called one time per ngmodule injection points components injected please tell us environment os windows ide intellij idea ultimate package manager npm typescript angular version browser chrome language typescript", "num": "13085", "d": "11/2016"}, {"title": "runtime error error permission denied access property rejection mishandled", "body": "nt know source error self see error console error permission denied access property rejection opening found following function causing error function consoleerror e row casuing runtime error developer need understand e utility function causing error instead simply logging source error sorry idea piece angular node js module parent snippet code", "num": "13084", "d": "11/2016"}, {"title": "runtime compiler loaded works aot", "body": "decide improve site performance angular aot compiler requirements issue need loading components dynamically app start build app aot compiler everythings goes well open url got error runtime compiler loaded researches internet look like aot could works runtime compiler defaultly workaround input appreciated thanks", "num": "13083", "d": "11/2016"}, {"title": "router lazy load module childroute", "body": "submitting bug report feature request support request sure bug feature nt supported current behavior ca nt lazyload module childroute expected behavior lazy load module childroute desired minimal reproduction problem instructions plunker click lazylink maincomponent replaced lazycomponent expected lazycomponent inside maincomponent motivation use case changing behavior lazy load childroutes angular version", "num": "13082", "d": "11/2016"}, {"title": "unable reuse templateref different containers", "body": "submitting check one x current behavior currently try reuse instance multiple items renders wrong view expected behavior render separate view inside view container minimal reproduction problem instructions currently see words enabled enabled true enabled enabled false disabled motivation use case changing behavior slider hundreds slides want optimise dom using lazy dom creation need use template reference eventually something like using put template first items user slides change references inside array please tell us environment npm osx ei capitan atom chrome angular version reproducible starting works properly older browser chrome language", "num": "13080", "d": "11/2016"}, {"title": "router route multiple required params optional causes router extract track optional params", "body": "submitting check one x current behavior route configuration like path mypath component mycomponent navigate optional parameter matrix notation thisrouternavigate mypath optionalparam foo thisrouteparamssubscribe params gt params contain contain optionalparam property expected behavior thisrouteparamssubscribe params gt params optionalparam foo required behavior please document case semantically correct optional parameter minimal reproduction problem instructions motivation use case changing behavior parent route two id parameters multiple child routes child routes subscribing changes parent params parent state changes id param change need add optional parameter version track changes could refresh child routes please tell us environment win vscode npm lightserver angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "13079", "d": "11/2016"}, {"title": "sibling component interaction component ui changing fetching flag", "body": "sibling component interaction amp sending flag one finishes data fetching display data whatever component fetched amp asynchronous calling ps web api calls first component success first redirecting component amp binding data component api submitting check one x current behavior sibling component interaction amp sending flag one finishes data fetching display data whatever component fetched amp asynchronous calling ps web api calls first component success first redirecting component amp binding data component api expected behavior since angular supports way data binding reflect data second component minimal reproduction problem instructions motivation use case changing behavior please tell us environment windows viisual studio code iis angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "13078", "d": "11/2016"}, {"title": "urlsearchparams breaks date strings", "body": "submitting check one x current behavior encoding plus signs correctly encoded remain instead leads plus signs transmitted space chars example typescript let params new urlsearchparams paramsset date paramstostring gt example date param would contain invalid date string plus interpreted space expected behavior plus signs replaced remain plus signs minimal reproduction problem instructions motivation use case changing behavior minimal use case transfer encoded date objects please tell us environment macos google chrome angular version latest language typescript", "num": "13077", "d": "11/2016"}, {"title": "appending extra folder assets due base href", "body": "submitting check one x current behavior compiling assets using webpack rendering js using bundle extra folder attached want eliminate assets path stop angular manipulations expected behavior want angular manipulate assets path folder structure public css js assets fontawesomewoff imagepng vendorbundlejs polyfillsbundlejs mainbundlejs two separate entry point admin user assets maintained separately user admin common dependencies like fonts bootstrap admin user angular nt add admin prefix assets added inside vendorbundlejs minimal reproduction problem instructions already stated problem stack overflow link motivation use case changing behavior want seperate user admin part using common assets like bootstrap fontawesome etc please tell us environment operating system windows ide phpstorm package manager npm used framework laravel compilation using webpack http server apache php artisan angular version angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript compiled node aot issues node version npm version", "num": "13076", "d": "11/2016"}, {"title": "routerlinkactive nt work properly children routes", "body": "x bug report gt search github similar issue pr submitting feature request support request gt please submit support request instead see current behavior look plunker choose one four heroes herocomponent loaded inside templete another navigate beetween herodetailcomponent heronamecomponent components herodetailcomponent loaded default routing configuration link details nt mark active navigate name back details clicking details link active class starts added also heronamecomponent choose active hero list curently active hero details button shown acivated correctly seems nt work especially component reused without creating new instance expected behavior clicking one heroses details button marked active angular version also browser language typescript", "num": "13075", "d": "11/2016"}, {"title": "route thisrouternavigate work child module", "body": "submitting check one x current behavior im using child module child router child router parent routings view app component within child routings view parents components im trying navigate parent routings one html attribute routerlinkwow works well try code like thisrouternavigate wow router route correct page second jump immidiatly home page need navigate code becose want send dinamic parameters dynamic urls expected behavior navigate also code alsoneeded log navigation minimal reproduction problem instructions create app module root router create child module imports app module child module create child router child router create routings root childs routings root router components declared child module try navigate code one root compnonet root component link example try real source cant motivation use case changing behavior need navigate code becose want send dinamic parameters dynamic urls please tell us environment kendo ui angularrouter node js typescript angular version angularrouter browser chrome xx language typescript node aot issues", "num": "13073", "d": "11/2016"}, {"title": "use types ambient modules aot compiled providers", "body": "assume ambient typescript declarations eg like use type declared ambient module provider ts import ambientclass somemodule ngmodule error unable resolve somemodule mymodulets resolving symbol providers provide ambientclass usefactory fails class mymodule", "num": "13072", "d": "11/2016"}, {"title": "candeactivate breaks route navigation", "body": "submitting check one x current behavior go new route current route uses candeactivate candeactovate returns false route change good try navigate route navigation events fired routernavigate function called code promise returned navigation events fired navigationstart end etc candeactivate condition never reevaluated expected behavior navigation events fired candeactivate reevaluated shit work minimal reproduction problem instructions issue outlined plunkr found motivation use case changing behavior huh please tell us environment angular version issue specific angularrouter version angular version browser language typescript node aot issues", "num": "13071", "d": "11/2016"}, {"title": "router ability intercept back button tab close would terminate app", "body": "current behavior intercept back button closing current browser tab close app wo warning expected behavior able detect actions take appropriate actions could done router hook means understand browsers differ handle router way cope barring need documentation cope minimal reproduction problem instructions launch routing app running localhost eg paste another site address bar eg googlecom paste locally running app address bar eg hit back button taken wo interruption motivation use case changing behavior nt lose work context accidental overclicking back button closing tab please tell us environment angular version browser language", "num": "13070", "d": "11/2016"}, {"title": "debugelementqueryall return results different order dom", "body": "submitting check one x current behavior debugelements returned order first created regardless moved structural directive like moved order sync dom expected behavior debugelements returned query order appear within dom order updated underlying moved around minimal reproduction problem instructions plunker reproducing issue running plunker run tests almost identical unit tests tests illustrate adding removing work expected two tests illustrate moving using debugelement query moved items fails two tests illustrate dom correct order using native method motivation use case changing behavior debugelements returned order appear dom queried please tell us environment windows angular version angularcli plunker version browser language typescript node aot issues", "num": "13066", "d": "11/2016"}, {"title": "checkbox ngmodel reflect model value updated onmodelchange", "body": "submitting check one x current behavior behaves exactly like checkbox reflects model value first rendered becomes functionally equivalent checkbox without binding manually detecting changes using inside work around issue workarounds work used voids use expected behavior logic run view updated reflect model current value minimal reproduction problem instructions motivation use case changing behavior always reflect model value please tell us environment mac os x sierra intellij idea angular version browser language typescript xx typescript", "num": "13063", "d": "11/2016"}, {"title": "embeddedview destroy issue", "body": "discussed tbosch seems issue internal data structures component created dynamically embeddedview created dynamically nodes used fill hole component given conditions possible properly destroy embeddedview read property indexof undefined error thrown appview detatch method plunker illustrates open modal close see error console angular version pinned plunker", "num": "13062", "d": "11/2016"}, {"title": "ngif improvements rx", "body": "goals writing rx style code often necessary write code like issue every creates listener need use makes coding cumbersome needed able subscribe observable refer subsequent location additionally need way display alternative template observable yet yielded value proposal allow assign data local value add feature alternative template shown observable yields value userlastname userfirstname loading note microsyntax consistent existing implementation microsyntax expanded form see", "num": "13061", "d": "11/2016"}, {"title": "hybrid apps using routers instantiate components twice breaking change detection", "body": "submitting check one x current behavior bootstrapping hybrid app uses routers routing components selectors downgraded selector navigating one component component instantiated twice leads constructor logic ran twice also seems break change detection async conditions upon nonreload navigation expected behavior components instantiated twice change detection stop working minimal reproduction problem instructions browser opens page also open browser console notice twice console click inside changed via notice page shows console also says click anywhere page show message inside changed via click link top notice page console refresh page notice page says console shows constructor called twice second time step change detection needed triggered via click page detect message changed step instantiated component nt show correct content cases seem triggered component instantiated twice hence double constructor calls bootstrapping application motivation use case changing behavior components instantiated twice change detection stop working please tell us environment windows vscode npm liteserver angular quickstart angular version browser chrome language typescript cc petebacondarwin vsavkin wardbell naomiblack", "num": "13060", "d": "11/2016"}, {"title": "content lifecycle conditional transclusion", "body": "submitting current behavior use conditional directive content component correctly addedremoved dom depending condition weird lifecycle lifecyle parent meaning removed dom component instance kept reuse added dom expected behavior content component lifecycle corresponding conditional instantiate adding dom destroyed removed dom minimal reproduction problem instructions component using transclusion like let say lifecycle plunker example motivation use case changing behavior content component rely becomes null component removed dom angular version browser language", "num": "13059", "d": "11/2016"}, {"title": "router provide option inherit data params", "body": "submitting check one x current behavior current behavior inheriting route data params clear afaik inherits route path empty parent path nt component set expected behavior please provide option always inherit params data course would best default behavior understand default possible make default suggest options one possibility could add parameter inheritparams route definition routes would like accessing url would return second think better option would add additional fields would contain inherited data something like would contain parameters current route inherited parameters third possibility would add configuration option routermodule similar could something like boolean variable options motivation use case changing behavior currently clear parameters data inheritance works nt documented properly already issues people expect working also workaround get described behavior complicated", "num": "13058", "d": "11/2016"}, {"title": "metadata version changed breaking consumers older versions", "body": "submitting current behavior metadata built angular gt comes version due application angular lt wo nt able consume metadata throwing following error expected behavior metadata version nt change patch minor releases minimal reproduction problem instructions try consum\u0435 dummy package built project see metadata set version motivation use case changing behavior avoiding breaking changes please tell us environment angular version browser language typescript node aot issues", "num": "13057", "d": "11/2016"}, {"title": "router resolver canceled change route", "body": "submitting check one x minimal reproduction problem instructions parent home immediately sec cancel route console see disposing function called resolving process completed expected resolver canceled immediately change route motivation simply motivation use rxjs unsubscribe observable dispose rxjs time unlike promises cancel example backend requests unnecessary processing nt know exactly bug design choices think important opportunity", "num": "13056", "d": "11/2016"}, {"title": "ca nt initial ngvalue object", "body": "component selector myapp templateurl appcomponenthtml styleurls appcomponentscss export class appcomponent selected id name datas name name b kkname initial set selecteddatas ok hope like use trackby kkid resolve angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter bootstrapmaterialdesign corejs rxjs zonejs", "num": "13053", "d": "11/2016"}, {"title": "ca nt initial ngvalue object", "body": "object ngvalue object b aidbid instance ca nt correctly initial", "num": "13052", "d": "11/2016"}, {"title": "update dependencies devdependencies", "body": "submitting check one x bug report gt search github similar issue pr submitting x feature request support request gt please submit support request instead see current behavior lot outdated devdependencies dependencies also uptodate expected behavior update dependencies much possible motivation use case changing behavior keep updating dependencies could improve dev performance code quality updating dependencies incrementally avoid big changes code base angular version tested locally safe updated latest failed test case nt know context knowledge test case ca nt help", "num": "13051", "d": "11/2016"}, {"title": "lazy loading complex module makes app unresponsive time", "body": "submitting check one x current behavior lazy loading complex module browser hangs web app freezes module finished bootstrapping worst case could last seconds expected behavior would like events lazy loading process display waiting message explain going module bootstrapping make whole web app non responsive minimal reproduction problem instructions lazy load complexe module ex components html template lines motivation use case changing behavior user feels like application crashed please tell us environment os x angularcli angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "13049", "d": "11/2016"}, {"title": "add scroll events angular", "body": "bug report x feature request support request current behavior done research find functionality within angular framework detect vertical position scroll bar trigger animations certain breakpoints helpful solution work around using renderer class code toggle shrink variable active scrolled problem built functions scroll events moreover code trick firefox web browser pagey attribute contains vertical position scroll bar pixels different name scroll object given browsers firefox undefined chromeedge expected behavior provide functionalities dedicated scroll events works majority web browsers motivation use case changing behavior scroll events useful especially comes animations sticky headers environment operating system windows ide vs code package manager npmyarn http server liteserver angular version language typescript node aot issues", "num": "13048", "d": "11/2016"}, {"title": "renderersettext platformbrowser broken", "body": "submitting check one x current behavior renderersettext function nt update element text content expected behavior renderersettext function update element text content minimal reproduction problem instructions working version broken version please tell us environment angular version browser language typescript", "num": "13047", "d": "11/2016"}, {"title": "appbasehref hashlocationstrategy breaks hybrid router setup", "body": "submitting check one x current behavior using upgraded app using angular angular routers produces incorrect urls example generated instead changing makes route generation work correctly cost different urls app expected behavior options work upgraded app since works pure angular app minimal reproduction problem instructions git clone cd hybridrouterbug npm install npm start browser open auto redirect work stop process git checkout commit app pure angular npm start browser open auto redirect works motivation use case changing behavior seems like unintended bug additionally two options hash location prefix commonly used angular apps please tell us environment windows vscode npm liteserver angular quickstart angular version browser chrome language typescript cc vsavkin wardbell naomiblack", "num": "13046", "d": "11/2016"}, {"title": "angularcompilercli source maps leak username", "body": "see example whatever developer npm publishing release ends username sourcemaps entire world", "num": "13040", "d": "11/2016"}, {"title": "update version bundles", "body": "submitting check one x current behavior executing update version bundles expected behavior bundles would correct version numbers minimal reproduction problem instructions run inspect header comment", "num": "13037", "d": "11/2016"}, {"title": "support variable number root components bootstrapping module", "body": "submitting check one x current behavior currently angular expects exactly one instance root level component specified bootstrapping module expected behavior able bootstrap zero instances declared root component module root component still share injector etc minimal reproduction problem instructions essentially create two components add bootstrap property appmodule create two pages one one components one multiple instances component found users similar issues stack overflow question similar well described motivation use case changing behavior support integration widgets integrating cms system sitecore content editors dynamically add instances widget various placeholders various combinations means page could possibly contain widget multiples widget sharing module components discover via di mechanism communicate enabling cms managed multistep customisable workflows current workaround supporting fact component may appear page hard code default instances shared master page run bespoke code remove default one element tag name page also add shared bespoke code root module accept config parameters attributes root element work around root component limitations around directives content ideal allow us use aot compilation avoid dynamic component creation nt support multiple instances widget please tell us environment angular version browser language node aot issues", "num": "13035", "d": "11/2016"}, {"title": "transition nt fire changing state animation callback without manual change detection", "body": "submitting check one x current behavior changing property animation trigger bound animation done callback expected subsequent animation trigger bound property fire response new property value workaround manually trigger change detection expected behavior subsequent animation trigger fire state changed animation callback without need invoke change detection minimal reproduction problem instructions full minimal repro available run code see text text fade fade text text fade appear comment line fires manual change detection text line fade bug exhibited commenting line appcomponentts motivation use case changing behavior possibly bug nontrivial step fire changedetection nt documented please tell us environment windows chrome vs code npm angular version browser chrome firefox ie edge suspect affected language typescript node aot issues", "num": "13034", "d": "11/2016"}, {"title": "sends two requests instead one", "body": "angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularupgrade try send request json data api server see browser requests instead one one data empty way responses one response errors empty data valid response correct reaction data sent bag plunker luck chrome devtools network see two requests one respons true false", "num": "13033", "d": "11/2016"}, {"title": "afterviewchecked aftercontentchecked fired many times http get", "body": "submitting current behavior hooks seems executed twice much using http request populate component field opposite example used guess something http implementation make zone ticks expected behavior trigger hooks request processed minimal reproduction problem instructions minimal demo please take look console output angular version", "num": "13030", "d": "11/2016"}, {"title": "observabletimeout zone interference", "body": "submitting check one x current behavior using inherent subscription caught angularzone nt cleaned original source closed result timeout observable chain app marked untestable period regardless wether observable resolved finished time expected behavior original source closes application stable regardless timeout status minimal reproduction problem instructions plunkr showing problem tick see happening subscription second timer timeout seconds motivation use case changing behavior timeout used frequently asynchronous calls behaviour prevents proper testing due protractor timeouts nt easily solvable source observable often intended run within app please tell us environment macos tested chrome angular version browser presumed tested chrome browserspecific language typescript notes due rxjs currently works operator starts subscription cancels original source closed resolves tested angular required version upon looking source still issue latest rc candidate", "num": "13029", "d": "11/2016"}, {"title": "templates supported angular", "body": "submitting check one x current behavior html supported angular template urls expected behavior angular supporting templates like jsp thmeleaf minimal reproduction problem instructions motivation use case changing behavior please tell us environment windows tomcat angular version browser ie chrome language node aot issues", "num": "13028", "d": "11/2016"}, {"title": "validators take value entire abstractcontrol", "body": "submitting check one x current behavior right abstractcontrol validatorfn validatorfn takes abstractcontrol validate bit circular ok problem attempt validation without actually writing model abstractcontrol lets say want instance assert construction time validators consistent accept basic business values way believe shouldnt validatorfn validate value expected behavior validators linked abstractcontrol reused outside", "num": "13025", "d": "11/2016"}, {"title": "plunker throws zone defined", "body": "submitting check one x current behavior open plunker link provided issue template check browser console expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome linux language typescript xx tested typescript node aot issues", "num": "13024", "d": "11/2016"}, {"title": "upgrade tests flaky", "body": "submitting check one x current behavior upgrade tests flaky browserstack due use expected behavior upgrade tests flaky minimal reproduction problem instructions see test fails periodically succeed test rerun", "num": "13019", "d": "11/2016"}, {"title": "nt allow consoleout angular codebase", "body": "generally leftover debugging statement however breaks bazel worker mode stdout reserved protocol buffer communication bazel server host existing tslint check enable use case existing ones preserved", "num": "13018", "d": "11/2016"}, {"title": "throws exception using full path templateurl", "body": "components use full path templateurl aware use moduleid moduleid want keep full path html file deployment purpose run getting error way solve issue without using moduleid moduleid thanks", "num": "13016", "d": "11/2016"}, {"title": "styles passed next animation cancelled web animations", "body": "animation like animation goes animates fine cancelled midway state changing animation done style still need animated value since used followup animation animation ignored webanimations", "num": "13013", "d": "11/2016"}, {"title": "routerlink incorrect relative link defined component empty path", "body": "submitting check one x current behavior case router config containercomponent consuming empty path containercomponent relative links children template routerlink directive generates incorrect links user navigated one child component fe user went route links would like expected behavior relative links generated properly minimal reproduction problem instructions click link could see links rendered appcomponent correct ones containercomponent look like motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "13011", "d": "11/2016"}, {"title": "testbed use overridecomponent component class uses custom annotation", "body": "submitting check one x current behavior use custom annotation component class use testbedoverridecomponent since overridecomponent uses component annotation expected behavior able override property even using different component annotation minimal reproduction problem instructions code customcomponent selector approot templateurl appcomponenthtml rootcssurl ifebeaglecss export class appcomponent title app works import component angularcore import appcomponent appcomponent const url require urlurl export interface icomponent selector string template string templateurl string styles string rootcssurl string styleurls string directives providers encapsulation number export function customcomponent properties icomponent function try propertiesrootcssurl null return component properties propertiesstyleurlspush foocss catch err consolewarn err return component properties motivation use case changing behavior want run test testbed fails push custom css onto styleurls property want override appcomponent ca nt since uses custom annotation please tell us environment windows npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browsers language typescript xx typescript node aot issues", "num": "13010", "d": "11/2016"}, {"title": "componentfactoryresolver errors testbed", "body": "submitting check one x current behavior injecting componentfactoryresolver modal service dynamically create modal components testing service discovered create second test modal service different module created entry components instance componentfactoryresolver previous test still used recognizes entry components previous test throws errors component factory found error note using beforeeach inject componentfactoryresolver manually test calling instantiates correct instance componentfactoryresolver expected behavior updated componentfactoryresolver injected modal service subsequent tests minimal reproduction problem instructions pared repository files necessary run modal tests second test file displays strange behavior inserted couple console logs show injected componentfactoryresolver working test working modal service call immediately browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues thanks help let know offer information", "num": "13009", "d": "11/2016"}, {"title": "aot compiler nt recognize compileroptions paths tsconfig", "body": "submitting check one x current behavior running aot compiler valid typescript code fails aot compiler nt know honor tsconfigjson example project get expected behavior aot produce valid output change imports use relative paths everything works fine minimal reproduction problem instructions minimal starter project bug repro branch reproduce clone project check branch compile scss css components reference css file complain missing nt run aot compiler get appmodulets imports appcomponent componentsappcomponent components mapped inside tsconfig aotjson compileroptionspaths app builds without aot see valid code tswebpack knows deal motivation use case changing behavior use paths alias folders project using relative imports really messy deep nesting eg import serviceslogging vs import serviceslogging etc need use aot localization right hacking away code converting everything relative paths hopefully fix temporary workaround please tell us environment windows angular version language typescript node aot issues", "num": "13008", "d": "11/2016"}, {"title": "title service modify dom directly", "body": "submitting current behavior expectation bug service never modify dom directly titleservice expected behavior service hold page title dom updated component directive maybe find another name titleservice without service course angular version", "num": "13007", "d": "11/2016"}, {"title": "nearly impossible get correct url routerlink aux siblings", "body": "submitting check one x current behavior way get correct url routerlink aux sibling components defining whole absolute path practicable since feature module components mounted ancestors path let assume searchviewcomponent contains sibling routeroutlets search nav main within searchview dialog flows follows search nav main order control access searchviewcomponent mounted child canactivate controlled path named router config looks follows routermoduleforroot path user canactivate authguard children path searchview component searchviewcomponent children path find keyword component searchcomponent outlet search path obj id component navcomponent outlet nav path obj id component maincomponent outlet main following routerlink examples shows applied routerlink corresponding url obtained search findn component routerlink usersearchview outlets nav usersearchview nav note version produces valid url impracticable since whole absolute path usersearchview defined feature module component note outlet nav appended child outlet search possible improvement routerlink could analyze router config find nav outlet sibling search outlet produce url usersearchview nav note causes nav outlet applied one level within search outlet produced url ca nt used nt exists config note causes nav outlet additionally applied root sibling current path produced url ca nt used nt exists config expected behavior must way obtain correct aux sibling urls routerlink without without defining absolute path minimal reproduction problem instructions see motivation use case changing behavior please tell us environment windows angular version angularcommon browser chrome version language typescript compileroptions baseurl declaration false emitdecoratormetadata true experimentaldecorators true lib dom maproot module moduleresolution node outdir distouttsc sourcemap true target typeroots nodemodules types node aot issues", "num": "13006", "d": "11/2016"}, {"title": "aot compiler breaks dependent lib contains nodemodules", "body": "submitting check one x current behavior app aotready library correct metadata run ngc compiler lib nt contains dir nodemodules compilation ends successfully lib contains dir nodemodules compilation fails example second case may occur linking library via npm link library app different angular versions dependencies expected behavior compiler must works cases minimal reproduction problem instructions see please tell us environment macos sierra angular version language typescript node aot issues", "num": "13005", "d": "11/2016"}, {"title": "angular moving shadowpiercing descendant combinator deep", "body": "hi seen following notice first heard seen today deep combinator deprecated see details best practise moment angular team better reccomendation going foward going removed going forward current version many thanks", "num": "13004", "d": "11/2016"}, {"title": "angular cli aot skip tests", "body": "submitting current behavior angular aot compiler nt detect test host components module module configured testbed expected behavior maybe tests skipped aot compiler process minimal reproduction problem instructions ng build prod environmentdev aot compiling determine module class testcomponent switchcomponentspects determine module class switchcomponentspects determine module class switchcomponentspects motivation use case changing behavior improve angularcli please tell us environment dev angular version browser chrome ubuntu language typescript node aot issues", "num": "13003", "d": "11/2016"}, {"title": "contentchild contentchildren inconsistent", "body": "submitting check one x current behavior contentchild queries descendants contentchildren commit changed behavior expected behavior contentchild behave like contentchildren better page author decide option like descendats truefalse need new decorators like contentdescendant contentdescendants note guys also decide change contentchildren descendants true sudden break whole lot apps even need way customize default behavior restore order back motivation use case changing behavior lack support customize querying angular version", "num": "13002", "d": "11/2016"}, {"title": "angular enable multiple components view one path state", "body": "angular enable multiple components view one path state", "num": "13001", "d": "11/2016"}, {"title": "aot compilation fails using new make object instance component decorator", "body": "submitting check one x current behavior following code let carouselanimates new carouselanimatesservice component selector appcarousel templateurl carouselcomponenthtml styleurls carouselcomponentcss animations trigger datasourcestate carouselanimatesdatasourceanimate trigger partnerstate carouselanimatespartneranimate trigger customerstate carouselanimatescustomeranimate export class carouselcomponent implements oninit ourdatastyle ourpartnerstyle ourclientstyle datasourcestate string customerstate string partnerstate string datasourceimg partnerimg customerimg constructor ngoninit thisdatasourceimg carouselanimatesgetdatasourceimg thispartnerimg carouselanimatesgetpartnerimg thiscustomerimg carouselanimatesgetcustomerimg thisdatasourcestate carouselanimatesdatasourcestates thiscustomerstate carouselanimatescustomerstates thispartnerstate carouselanimatespartnerstates running command ng build prod aot true error occurs error encountered resolving symbol values statically function calls supported consider replacing function lambda reference exported function resolving symbol carouselcomponent resolving symbol carouselcomponent resolving symbol carouselcomponent expected behavior want know solve problem using aot compile code minimal reproduction problem instructions motivation use case changing behavior want use aot compile code improve running speed please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12998", "d": "11/2016"}, {"title": "feature request link unlink implementation", "body": "submitting feature request current behavior considering expected behavior file add link unlink enum requestmethod additional enum could implement function methods link unlink file way implement thank motivation use case changing behavior please tell us environment angular version browser language", "num": "12997", "d": "11/2016"}, {"title": "router resolver inject root providers", "body": "resolver injects custom providers application root better resolver see providers instantiated components path route resolve section minimal reproduction child console", "num": "12995", "d": "11/2016"}, {"title": "please update router changelog", "body": "submitting check one x current behavior clear list changes expected behavior able see list changed since", "num": "12994", "d": "11/2016"}, {"title": "expose ngforrow provider", "body": "submitting check one x current behavior import ngforrow angularcommonsrcdirectivesngfor objectdefineproperties ngforrowprototype expected behavior import ngforrow angularcommon class customngforrow extends ngforrow ngmodule providers provide ngforrow usevalue customngforrow class appmodule minimal reproduction problem instructions imported order modified yet changes wo nt applied prebundled modules used eg plunker import ngforrow angularcommonsrcdirectivesngfor objectdefineproperties ngforrowprototype key get function return implicit value get function return implicit pipe name entries class entriespipe implements pipetransform transform value return objectentries value component selector app template appcomponent motivation use case changing behavior currently modification results hacking class nt injectable imported internals order provide extended behaviour directive class prototype modified prebundled umd angular modules wo nt affected hacky approach responsible behaviour used add new local variables eg order addressed limited mentioned use case introduction custom local variables allows bring functionality plain objects cases iteration order nt matter considering deep object array remapping may impractical snippet without custom locals results less readable template may eventually worsen nested iterated objects angular version browser language", "num": "12993", "d": "11/2016"}, {"title": "bug loading router condition fails", "body": "submitting check one x current behavior router view error changing route using routerlink shows right component error uncaught promise error find primary outlet load profilecomponent error find primary outlet load profilecomponent getoutlet activateroutesactivateroutes arrayforeach native activateroutesactivatechildroutes activateroutesactivate safesubscribernext safesubscribertryorseterror safesubscribernext stacktrace errorhandlerhandleerror uncaught promise error find primary outlet load profilecomponent error find primary outlet load profilecomponent getoutlet activateroutesactivateroutes arrayforeach native activateroutesactivatechildroutes activateroutesactivate safesubscribernext safesubscribertryorseterror safesubscribernext resolvepromise resolvepromise zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue promise rejection find primary outlet load profilecomponent zone angular task promisethen value error find primary outlet load profilecomponent error find primary outlet load profilecomponent getoutlet activateroutesactivateroutes arrayforeach native activateroutesactivatechildroutes activateroutesactivate safesubscribernext safesubscribertryorseterror safesubscribernext uncaught promise error find primary outlet load profilecomponent expected behavior work condition minimal reproduction problem instructions super simple motivation use case changing behavior example loading router module logged behaviours depend user logged please tell us environment windows phpstorm npm nodejshttp angular version browser language html bug node aot issues", "num": "12988", "d": "11/2016"}, {"title": "upgradeadapter hybrid app zones performance", "body": "x bug report current behavior running hybrid app primarily components states uirouter services stuff apparently executed context zone http calls taking much longer see options call network tab stuck zonejs around per http call see screenshots expected behavior expect perform well app way bypass zones stuff minimal reproduction problem instructions set hybrid app components make http calls see zonejs options call network tab browser dev tools see zonejs calls profiling chrome dev tools motivation use case changing behavior performance please tell us environment windows vs code npm angularcli angular version hybrid browser chrome language typescript node aot issues", "num": "12983", "d": "11/2016"}, {"title": "component methods must public aot work accessed template", "body": "component methods must public aot work accessed template imo wrong component able mark properties methods private still allow template full access aot remember pure class component view part prove point refer template component class would mark methods controller component public make things worse webstorm following pattern allow refactorting helper intelisence per pr beg reevaluate forcing public members component expose view template add uncertainty oop core concept encapsulation forgone regards sean", "num": "12981", "d": "11/2016"}, {"title": "validation classes added using type attribute", "body": "submitting check one x current behavior using validation offered type attribute input element angular add proper nginvalid class browser sees input invalid expected behavior nginvalid ngvalid classes added appropriately user input match pattern defined type attribute minimal reproduction problem instructions motivation use case changing behavior believe best practice use type attributes offered validate user input submission please tell us environment osx brackets ide angular cli angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browsers language typescript xx typescript node aot issues", "num": "12980", "d": "11/2016"}, {"title": "best practices creating components", "body": "beginner angular reading angular tutorial cookbook try creating one application angular server side aspnet core question best practices instantiation components using routing write custom component factory use existing component factory want create component without route", "num": "12978", "d": "11/2016"}, {"title": "router child routes loading parent route empty path", "body": "submitting check one x current behavior setting routes empty paths load child routes expected behavior expect routes work router minimal reproduction problem instructions reproduction version angularcore angularrouter notice child route appears able click button shows reproduction latest version angular router child route load motivation use case changing behavior expected minor upgrade angular would cause breaking change like please tell us environment windows angular version browser language typescript node aot issues", "num": "12976", "d": "11/2016"}, {"title": "keypress click events triggered ngmodel changes value", "body": "feature request currently using angular trying respond input field change event like problem keypress username yet contain recent value dosomething method fired events keypress click triggered ngmodel changes value therefore recommended use ngmodelchange instead dilemma ngmodelchange method dosomething get triggered user typing input field also whenever changes made model programmatically wanted something like keypress event triggered ngmodel changes value yet understand nt default behavior alternatively way know within ngmodelchange whether event triggered response user interaction input field opposed programmatic change model workaround see similar closed issue click event triggers ngmodel changes value", "num": "12975", "d": "11/2016"}, {"title": "request feat create angularframework module", "body": "submitting check one x motivation use case changing behavior asking new developers angular install angular install angularcore angularcommon angularforms angularhttp angularrouter angularcompiler angularplatformbrowser angularplatformbrowserdynamic everyone always asks always prune packages later build systems like webpack manually remove packages need idea lowering barrier entry angular right really high hello world typescript import corejs import zonejs import platformbrowserdynamic angularplatformbrowserdynamic import browsermodule angularplatformbrowser import ngmodule component angularcore import httpmodule angular import routermodule angularrouter import formsmodule angularforms component selector app template export class appcomponent ngmodule bootstrap appcomponent declarations appcomponent imports browsermodule httpmodule routermodule formsmodule export class mainmodule platformbrowserdynamic bootstrapmodule mainmodule typescript import corejs import zonejs import platformbrowserdynamic browsermodule httpmodule routermodule formsmodule ngmodule component angularframework component selector app template export class appcomponent ngmodule bootstrap appcomponent declarations appcomponent imports browsermodule httpmodule routermodule formsmodule export class mainmodule platformbrowserdynamic bootstrapmodule mainmodule would also suggest recommending applications party modules", "num": "12974", "d": "11/2016"}, {"title": "aot compiler ignore nodemodules ts imports", "body": "submitting check one x current behavior including library installed file aot compiler ignore file even specified ignored get error looks like error error file rootdir app rootdir expected contain source files expected behavior files either ignored part compilation way handle special case minimal reproduction problem instructions install nodemodule main file component file example files reproduction motivation use case changing behavior allow aot compilation including typescript libraries nodemodules please tell us environment os x angular version browser na language typescript node aot issues", "num": "12973", "d": "11/2016"}, {"title": "router using urlmatcher function throws error path defined", "body": "submitting check one x current behavior using matcher function routes throws error path defined sample config according source code typescript function matcherfunction url urlsegment urllength amp amp url pathstartswith sampleurl return consumed url return null const routes routes matcher matcherfunction component componenttouse issue error messages error messages corrected consider existing matcher function omitting errors works intended expected behavior execute matcher function route correct component given url minimal reproduction problem instructions add provided function omit property given route plnkr motivation use case changing behavior usecase matcher route optional id routes newsarticles newsarticles id one route component get initialised navigating newsarticles newsarticles id please tell us environment mac os sierra vscode angular version router version browser language typescript node aot issues", "num": "12972", "d": "11/2016"}, {"title": "system undefined", "body": "system undefined still facing issue tried including whatever told indexhtml rportal loading systemimport mainjs vendorsminjs bundled polyfills please help please let know information needed", "num": "12971", "d": "11/2016"}, {"title": "system undefined", "body": "system undefined still facing issue tried including whatever told indexhtml rportal loading systemimport mainjs vendorsminjs bundled polyfills please help please let know information needed", "num": "12970", "d": "11/2016"}, {"title": "supporting trackby", "body": "submitting check one x angular version motivation use case changing behavior related discussion like propose supporting stating property name alternatively inline function trackby use case common current requirement specify function confusing terse arguably worse angular thus wish something like work andor", "num": "12969", "d": "11/2016"}, {"title": "version breaks something createembededview template variables", "body": "submitting check one x current behavior upgraded version primeng datatable rowexpansion working expansion template contains content utilizes templates eg structural directives still working try plunkr nt think related primeng source primeng component sorry nt time strip problem plunkr without primeng expected behavior rowexpansion correct template variables set render template content every time correctly minimal reproduction problem instructions check plunkr expand first row content shown correctly expand second row content something different reflecting data content anymore subsequent expansion working expected motivation use case changing behavior please tell us environment angular version latest version fails works browser chrome assume related browser language typescript", "num": "12968", "d": "11/2016"}, {"title": "muliline comment", "body": "trying routing feature guide issue propped approutingmodulets file guide changed follows import ngmodule angularcore import routermodule routes angularrouter import import import crisislistcomponent crisislistcomponent import herolistcomponent herolistcomponent const approutes routes path crisiscenter component path heroes component ngmodule imports routermoduleforroot approutes exports routermodule export class approutingmodule error systemjs xhr error found loading error xhr error found loading xmlhttprequestwrapfn onreadystatechange zonedelegateinvoketask zoneruntask xmlhttprequestzonetaskinvoke error loading unable load transpiler transpile error loading approutingmodule xmlhttprequestwrapfn onreadystatechange zonedelegateinvoketask zoneruntask xmlhttprequestzonetaskinvoke error loading unable load transpiler transpile error loading approutingmodule changing multiline comment single line comment worked asked question stackoverflow one experts said seems like bug systemjs please check thanks development environments follow os windows ide visual studio update http server visual studio builtin one angular version browser chrome language typescript infact setup using quickstart guide", "num": "12967", "d": "11/2016"}, {"title": "aot typescript fails", "body": "submitting check one x current behavior compiling project ngc typescript compilation fails downgrading typescript compilation successful expected behavior ngc compile project typescript minimal reproduction problem instructions motivation use case changing behavior please tell us environment macos node angular typescript angular version yes browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "12966", "d": "11/2016"}, {"title": "upgradecomponent missing injector", "body": "submitting current behavior following upgrade documentation upgrade component using gives error saying injector found upon closer inspection line minimal reproduction problem instructions minimal demo created using one filed added corresponding file motivation use case changing behavior need upgrade old existing code please tell us environment angular version browser chrome language typescript node aot issues", "num": "12965", "d": "11/2016"}, {"title": "getrawvalue return raw value nested controls", "body": "submitting check one x current behavior formgroup nested formgroup b agetrawvalue takes value b meaning values disabled controls within b returned expected behavior expect agetrawvalue return values within form minimal reproduction problem instructions values missing output updated version formgroup formarray motivation use case changing behavior current behaviour unexpected angular version code looks latest version though language typescript", "num": "12963", "d": "11/2016"}, {"title": "angular child routes lost data", "body": "child route navigate lost input data first child finance second child asset tired fix issue going finance fill data field going asset going back finance data lost finance", "num": "12962", "d": "11/2016"}, {"title": "angular documentation css property backgroundcolor wrong", "body": "submitting check one x angular doc heading declare directives components example file apphighlightdirectivets sets background color element using renderersetelementstyle elnativeelement backgroundcolor gold problem nt property known backgroundcolor actually backgroundcolor please correct documentation please tell us environment angular version", "num": "12960", "d": "11/2016"}, {"title": "reference error ca nt find variable symbol langts ios safari", "body": "submitting bug report current behavior run application ios safari browser get following error referenceerror ca nt find variable symbol function getsymboliterator langts source path line shows blank white screen load app expected behavior resolve issue work around please tell us environment os mac os x el capitan node version angular version browser ios xx safari ios xx uiwebview language typescript node aot issues", "num": "12959", "d": "11/2016"}, {"title": "aot upgradestatic depends eval", "body": "submitting check one x current behavior default application uses new static upgrade module works expected however deployed environment strict csp complains lack permission dies expected behavior environment strict csp also functional minimal reproduction problem instructions navigate js console open motivation use case changing behavior ca nt move forward angular requires weak content security policy us primary benefit using aot unblock us please tell us environment os x el capitan compilation taking place debian jessie docker angular version browser chrome language typescript node aot issues", "num": "12958", "d": "11/2016"}, {"title": "unable use lazy loading wildcard route", "body": "submitting check one x current behavior add wildcard route handling described documentation works change pagenotfoundcomponent lazy loaded exactly lazy loaded component working application instead navigation get error unmatched route making changes changing route path foo navigating foo component lazy loads expected wildcard path causing issue expected behavior page navigate correct lazy loaded component minimal reproduction problem instructions simple reproduce see nt even add separate component reused one lazy loaded component start lazy loaded component shows default route click foo instead loading exact lazy component wildcard route get error described motivation use case changing behavior want keep app small possible nt expect want component available lazy loaded case please tell us environment windows visual studio code node angularcli ng serve angular version router browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tried chrome language typescript xx typescript node aot issues", "num": "12955", "d": "11/2016"}, {"title": "allow disabling ngcontrolstatus", "body": "submitting current behavior applied automatically form controlgroup expected behavior able opt directive maybe simple adding selector minimal reproduction problem instructions motivation use case changing behavior nt use default status classes nice disable associated pointless dom changes bring please tell us environment angular version pretty sure current behavior browser language na node aot issues na", "num": "12953", "d": "11/2016"}, {"title": "webpack work nodemodules", "body": "submitting check one x current behavior building component using npm work webpack build finishes fine gives error browser expected behavior error browser minimal reproduction problem instructions add component npm dependency try import build webpack motivation use case changing behavior please tell us environment mac osx angular version browser language typescript xx node aot issues", "num": "12952", "d": "11/2016"}, {"title": "prerendering lazy loading friction", "body": "submitting check one x current behavior context spa uses serverside prerendering implemented dotnet generator see guide also lazyloaded routes moment app bootstrapped lazyloaded module downloaded downloading neither module prerendered content visible jarring enough make prerendering detrimental rather beneficial user loads app lazyloaded route prerendered content loaded user starts reading app core content loaded bootstrapped app renders without lazy route prerendered content disappears without replacement app starts downloading lazy route lazy route finishes loading rendered content reappears expected behavior handover seamless maybe could configuration angular rendering happens lazy loading finished minimal reproduction problem instructions create new project prerendering substantial placeholder content create lazyloaded route corresponding router configuration load corresponding route directly repro uses alerts illustrate pain points remove see issue action motivation use case changing behavior reap benefits lazy loading serverside prerendering please tell us environment essentially dotnet generator see repro agnostic example angular version working copy amp repro browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome firefox edge language typescript node aot issues", "num": "12951", "d": "11/2016"}, {"title": "valid css selector results parsing error", "body": "submitting check one x current behavior template calling template expected behavior template render instead line throws undefined unhandled promise rejection read property concat undefined zone task promisethen value typeerror read property concat undefined typeerror read property concat undefined selectormatchermatchterminal selectormatchermatch elementcontextfindngcontentindex templateparsevisitorvisitelement elementvisit eval arrayforeach native visitall templateparsevisitorvisitelement elementvisit eval minimal reproduction problem instructions plunker added motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language node aot issues", "num": "12949", "d": "11/2016"}, {"title": "property binding recognize value change promise", "body": "submitting check one x current behavior property binding value showresetpasswordmodal recognize value change promise expected behavior property binding value showresetpasswordmodal update value changed promise minimal reproduction problem instructions html typescript motivation use case changing behavior value showresetpasswordmodal set false reset password email sent successfully however sitepasswordreset always visible addition place thisshowresetpasswordmodal false outside callback everything works thisfirebaseauth sendpasswordresetemail thisemail gt thisloading false catch err gt thisloading false consolelog err gt please tell us environment windows visualstudio npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browsers language typescript xx typescript node aot issues", "num": "12948", "d": "11/2016"}, {"title": "unable bind value component input property value number", "body": "submitting check one x current behavior module takes number input input numdays number passing values dom values work except value nt even pass number numdays property property initialized null passing value still null number passed fine expected behavior pass value numdays property minimal reproduction problem instructions motivation use case changing behavior number able passed input please tell us environment nt matter angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12947", "d": "11/2016"}, {"title": "nt work expected upgrading angular", "body": "submitting current behavior upgrading angular angular following issue clicking navigates user away current page expected behavior previously clicking link nothing expected behavior expected motivation use case changing behavior upgrading new version angular nt introduce breaking changes application workaround adding prevents incorrect navigation third party components makes us unable fix issue every place please tell us environment windows visual studio npm node angular version browser chrome language typescript", "num": "12945", "d": "11/2016"}, {"title": "responsearraybuffer undecodable", "body": "submitting check one x current behavior works pure javascript xmlhttprequest nt work httpmodule check plnkr minimal reproduction problem instructions use chrome sure browser support firefox nt seem machine wo nt work play arrbf consolelog arrbf thisaudiocontextdecodeaudiodata arrbf buffer gt let source thisaudiocontextcreatebuffersource sourcebuffer buffer sourceconnect thisaudiocontextdestination sourcestart loadsoundsng let options new requestoptions responsetype responsecontenttypearraybuffer gt rarraybuffer subscribe gt thisplay works play arrbf consolelog arrbf thisaudiocontextdecodeaudiodata arrbf buffer gt let source thisaudiocontextcreatebuffersource sourcebuffer buffer sourceconnect thisaudiocontextdestination sourcestart loadsounds let request new xmlhttprequest requestopen get true requestresponsetype arraybuffer decode asynchronously requestonload gt thisplay requestresponse requestsend please tell us environment angularcli angular version browser chrome language typescript", "num": "12944", "d": "11/2016"}, {"title": "resolver called upstream params change", "body": "submitting check one x current behavior resolvers called upstream route param changes wrong parent route param may obviously significance eg employee employee even though param cases expected behavior resolver would called could fetch proper data would made available component route data minimal reproduction problem instructions see run app ng serve click links navigate going either others results resolver called message logged console going resolver never called component would updated motivation use case changing behavior currently broken cant keep component current route using resolver routedata thinking bit design resolvers meant called component shown first time prevent blank component component showing resolver routedata never meant called updated even route changes case need handle exact thing getting route params fetching appropriate data two places first get params fetch data resolver subscribe activatedroutedata first update thing whenever route changes bigger problem way knowing route changed activatedrouteparams updated either suppose could subscribe router events get snapshot something navigationend things getting messy multiple paths instead one cut pasted code etc hope bug plus seem called route segments parameters change things really getting strange lots different scenarios exactly instead different please tell us environment windows visual studio code angularcli angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tried chrome language typescript xx typescript node aot issues", "num": "12942", "d": "11/2016"}, {"title": "enable control translation message id", "body": "submitting check one x current behavior currently traduction id created hashing node content traduction meaning value eg html fragment html car car vehicule fixing typo html tag content example removing two spaces car create new id translation change id xliff xtb files despite fact nt know id hash expected behavior would useful option disable message id generation use meaning value translation id example option script disable hashing add new provider app motivation use case changing behavior feature avoid fact minimal changes original content without affecting meaning word sentence produce crash app message id changes words developper adds meaning attribute must choice change translation changing id currently impossible change something original content without fixing id every translation files angular version browser language typescript node aot issues", "num": "12941", "d": "11/2016"}, {"title": "angular aot support typescript", "body": "typescript currently supported angular aot typescript rc weeks brings asyncawait spread along many features please add support", "num": "12940", "d": "11/2016"}, {"title": "alternative solution nginclude angular", "body": "project online elearning interactive gui hundreds type questions created components going becomes complex looking dynamic rendering like nginclude angular want load particular template per user select type question ui things common question question type like question title description answer choices component multiselect option timer etc could someone help resolve problem redundancy code component", "num": "12939", "d": "11/2016"}, {"title": "router issues relative navigation working called via service activatedroute provided incorrectly", "body": "submitting check one x problem recently ran following scenario service executing logic service would navigate user page relative current one example appheroes appheroesedit said attempting perform relative navigation using routernavigate edit relativeto thisactivatedroute lt notice route appheroesedit rather edit noticed already issue recently regarding see closed due insufficient replication steps see plunkr issue current behavior relative navigation service navigate relative current path defined url relative app component expected behavior navigation would occur path relative current active path defined browser url minimal reproduction problem instructions plunkr issue clicking relative navigation via component would perform relative navigation using activatedroute provided within component url changes clicking relative navigation via service would perform relative navigation using activatedroute provided within service url changes please tell us environment windows webpack angular version", "num": "12938", "d": "11/2016"}, {"title": "custom selector", "body": "submitting check one x current behavior want add custom selector myselector routed component mycomponent need wrap one depth like html expected behavior inject selector routed component inject component routeroutlet contents motivation use case changing behavior increase readability productivity", "num": "12937", "d": "11/2016"}, {"title": "route matcher issues leading slashes queryparams", "body": "submitting check one x current behavior loading application using leading slash query parameters route matcher misbehaves following routes requesting sitecoma sitecoma return correct route requesting sitecoma returns correct route requesting sitecoma returns route edge case routerlink elements handle correctly loading routes directly problem observed expected behavior requesting sitecoma return route query parameters nt influence route matching minimal reproduction problem instructions demo nt possible plunkr direct links testable create app routes defined load links directly manifests first loads edit simplest way reproduce clone running load verify work load verify match routes error thrown motivation use case changing behavior found creating email links account verification edge case specified still possible may implications nt considered please tell us environment tested using typescript webpack angular version browser tested chrome language typescript", "num": "12936", "d": "11/2016"}, {"title": "cache ngfactory files disk case jit compilation", "body": "hi per understanding case jit compilation angular jit compiler generates ngfactory files run time store memory make minor change file large project test change refresh browser angular jit compiler performs compilation complete application even change affected file possible first time user runs application browser angular jit compiler generate ngfactory files store cache disk cache user refreshed page angular jit compiler check files modified may hash remove ngfactory file files cache recompile otherwise use copy ngfactory file cache possible would improve load time subsequent refreshes", "num": "12935", "d": "11/2016"}, {"title": "feature request set max depth angular error json stringify", "body": "submitting current behavior currently deep object thrown part error error message attempts stringify object freezes browsers significant period time produces error message many thousands lines long see screenshot expected behavior default max depth stringify produced error message would stringify depth original object minimal reproduction problem instructions object references many child objects key called child references parent object key called error thrown child object say error entire structure stringified error section motivation use case changing behavior speedier error messages allow quicker debugging please tell us environment osx sublime text breezejs angular version browser language far im aware", "num": "12932", "d": "11/2016"}, {"title": "selective content projection working component used inside another component", "body": "submitting check one x current behavior selective content projection using works fine component used nt work expected component enclosed another component expected behavior selective content projection work manner irrespective whether component used included another component minimal reproduction problem instructions explanation direct content projection component component template follows apptoolbarcomponentts plunker html used follows appappcomponentts template plunker basically uses pick render last separately rendered markup looks follows direct content projection header preview note first two sibling elements expected behaviour content projection component used inside another component wrap component another component template like appbannercomponentts file plunker html used following fashion appappcomponentts plunker basically content first projected component projected component since used internally resultant markup looks follows content projection component header plunker preview note first one element instead two element child instead sibling indicating projection done motivation use case changing behavior selective content projection behaviour consistent cases mentioned please tell us environment angular version browser language node aot issues", "num": "12930", "d": "11/2016"}, {"title": "subscribe change detection", "body": "submitting check one x description add ability subscribe change detector dirty changes view emit finishing render amount time milliseconds took current behavior currently want check performance nt really idea going wrong expected behavior possibility know performance motivation use case changing behavior better performance please tell us environment angularcli angular version browser language", "num": "12929", "d": "11/2016"}, {"title": "using along ie broken prod mode w version", "body": "submitting check one x current behavior using attach views conjunction prodmode throws error typeerror read property appendchild null appendchild platformbrowserumdjs viewcontainerattachview viewcontainerrefinsert viewcontainerrefcreateembeddedview ngifset ngif wrapperngifcheckngif expected behavior attach views without breaking everything minimal reproduction problem instructions motivation use case changing behavior able upgrade vs still able use prod mode please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12928", "d": "11/2016"}, {"title": "add animation query functionality", "body": "go header body footer export class app public exp false", "num": "12924", "d": "11/2016"}, {"title": "router throws illegal invocation error enabletracing true", "body": "submitting x bug report gt search github similar issue pr submitting current behavior set router enabletracing option true soon hte app loads begins route illegal invocation error thrown brand new app created angularcli added one test component create default route loaded fine set enabletracing true started throwing error expected behavior error thrown shows router trace occurring ng router found upgrading app worked fine link error thrown errorpng", "num": "12923", "d": "11/2016"}, {"title": "aot compiled components call inherited lifecycle hooks", "body": "submitting check one x current behavior aot compiler look inheritance tree checking lifecycle hooks results different behaviour compiling jit expected behavior aot compiler search super classes component implementation lifecycle hooks minimal reproduction problem instructions class basecomponent implements oninit ngoninit something important component class concretecomponent extends basecomponent running jit mode method called instantiated aot mode function called currently workaround explicitly implement super class hooks case lifecycle hooks motivation use case changing behavior especially important library base class angular components used upgrade angular components angular version lt master time writing", "num": "12922", "d": "11/2016"}, {"title": "inherit routleroutlet directive", "body": "submitting check one x current behavior want create custom routeroutlet create new directive inherit routeroutlet define new selector import directive app module use template app component application fail load error occurs unhandled promise rejection template parse errors customrouteroutlet known element customrouteroutlet angular component verify part module customrouteroutlet web component add customelementsschema ngmoduleschemas component suppress message change selector customrouteroutlet set routeroutlet use template application load succesfully custom routeroutlet well used message constructor appears console add template variable outlet application fails message indicating directive exportas customrouteroulet seems angular use directive annotation parent directive child directive problem routeroutlet directive may problem global occurs inherited directives expected behavior application work display components custom router outlet minimal reproduction problem instructions plunker showing problem motivation use case changing behavior able use custom router outlet please tell us environment angular version problem used angular beta sorry use intermediate versions like rc seems severe regression browser tested firefox internet explorer surely browsers language tested typescript node aot issues aot used", "num": "12920", "d": "11/2016"}, {"title": "aotcompatible way reuse animation definitions", "body": "submitting check one x current behavior far tell currently way reuse angular animations way compatible aot compiler using jit could export static objects reference component decorators eg nt work aot animations state metadata generated correctly nt want redeclare animation full every component decorator lines across app expected behavior aot compiler allow reuse animation metadata minimal reproduction problem instructions create aot project create static animation definitions export one file import component definition reference one animations compiler metadata aot compilation fail motivation use case changing behavior dry principles maintainability desire make reusable animation libraries please tell us environment windows webstorm angular version browser language node aot issues", "num": "12917", "d": "11/2016"}, {"title": "templates erroring", "body": "submitting check one x x bug report current behavior submitting x bug report modules related issue x universal current behavior unable serverrender code placed parser nt sure handle error outputed unhandled promise rejection template parse errors unexpected character eof unescaped template use escape error gt app invalid icu message missing error gt app zone task promisethen value error template parse errors error template parse errors unexpected character eof unescaped template use escape error gt app invalid icu message missing error gt app templateparserparse runtimecompilercompiletemplate eval setforeach native runtimecompilercompilecomponents createresult zonedelegateinvoke zonerun zonedelegateinvoketask expected behavior able drop regular code tags without special preparation code template parser handle positive possible minimal reproduction problem instructions plunkr demo please tell us environment os angular version happens latest well browser language typescript", "num": "12916", "d": "11/2016"}, {"title": "platformbrowser convert undefined null object", "body": "current behavior throws error minimal reproduction problem instructions", "num": "12915", "d": "11/2016"}, {"title": "feature request use template literals html templates possible", "body": "submitting check one x current behavior currently get template parse errors try use template literals html templates expected behavior would expect use template literals html templates motivation use case changing behavior feature get rid string concatenation template please tell us environment windows vscode npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "12914", "d": "11/2016"}, {"title": "error messages validate input output", "body": "ref people seem misunderstand input output lead invalid code generation fail runtime generated code validate users inputs soon possible compilation phase report clear errors", "num": "12913", "d": "11/2016"}, {"title": "activatedroutesnapshot old data route changes", "body": "submitting check one x current behavior activatedroutesnapshot old data route changes activatedroutesnapshot data previous route expected behavior documentation states snapshot current snapshot route minimal reproduction problem instructions click first component menu click increment self several times motivation use case changing behavior activatedroutesnapshot current data even route changes delayed step angular version browser chrome firefox probably language typescript", "num": "12912", "d": "11/2016"}, {"title": "using structural directive ngfor ngtemplateoutlet causes runtime error production mode", "body": "submitting check one x current behavior directive selector template carouselitem export class carouselitem id string component selector carousel template export class carousel component selector myapp template export class app code worked fine version upgrading broken showing error nt know much internal code seems error caused direct renderer newly introduced minimal reproduction problem instructions working version angular broken version angular please tell us environment macos angular version browser language typescript", "num": "12911", "d": "11/2016"}, {"title": "removereplace component selector tag html", "body": "makes css working expected", "num": "12909", "d": "11/2016"}, {"title": "aot animations working well closure compiler", "body": "internal issue matsko update bit context filing tracking purposes", "num": "12906", "d": "11/2016"}, {"title": "nt navigate child route empty path defined another route common ancestor path", "body": "submitting check one x current behavior upgrading router version router appear find activate correct route case two toplevel routes defined path whose child routes define unique paths one child routes empty path route empty path defined example define routes follows able navigate still navigate issue occur log output router indicate problem navigation however flip order definitions navigation routes works expected expected behavior case would expect routes function properly regardless order loaded minimal reproduction problem instructions behavior observed plunkr default route attempts redirect never completes flip order routes defined see load expected motivation use case changing behavior app several feature modules want keep separate rely similar route parameters guards keep separate module defines route path example adds featurespecific children please tell us environment problem observed following versions observed browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx ts node aot issues", "num": "12904", "d": "11/2016"}, {"title": "ability wrap existing services", "body": "often desirable wrap existing service purposes decoration currently possible assume exist coremodule services developer control source ngmodule provides provide myservice usefactory somecomplexfactory class coremodule application code one would like decorate like ngmodule provides provide myservice usefactory howtogetaholdofwrappedmyservice gt return new wrappedmyservice howtogetaholdofwrappedmyservice class coremodule", "num": "12900", "d": "11/2016"}, {"title": "make decorators treeshake rollup", "body": "tracking issue design discussion settled approach yet ngc use angulartsickle downlevel decorators annotations static properties assigned static data structure closure compiler treeshake unused components however rollup sufficiently advanced remove unused members class way production apps larger due decorator metadata especially inline preserved js could remove altogether resulting js longer compatible jit mode since metadata completely erased also breaks augury depends runtime metadata reflection understand app structure cc robwormald chuckjaz tbosch", "num": "12898", "d": "11/2016"}, {"title": "add task autoapply tslint clangformat fixes", "body": "release tslint especially useful turn aggressive checks like novarkeyword already implemented autofixes cc vicb", "num": "12897", "d": "11/2016"}, {"title": "router version peer dependency angularupgrade", "body": "submitting current behavior updated angular router warning saying unmet peer dependency missing router running fine without warning prevents using npm shrinkwrap dependency defined expected behavior nt hard peer dependency since needed hybrid applications minimal reproduction problem instructions install angular application router without upgrade package motivation use case changing behavior nt force people install libs nt use nt required make router work angular version", "num": "12895", "d": "11/2016"}, {"title": "patching null value disabled form group makes whole form invalid", "body": "submitting check one x current behavior currently valuechanges subscription patching null value disabled form group makes form invalid even controls group disabled null value patched valuechanges subscription form validity expected please see example plunker expected behavior example form valid minimal reproduction problem instructions try changing see difference null value patch makes form invalid form valid null value makes form valid expected motivation use case changing behavior disabled form group make whole form invalid either null null value patched please tell us environment angular version issue probably exists versions checked browser chrome version language typescript xx node aot issues", "num": "12894", "d": "11/2016"}, {"title": "firefox dropdown bug", "body": "submitting check one x current behavior experience issue firefox latest updated version breaks creating dropdown sure possibly code issue googled heavily see many people problems angular playing nicely firefox expected behavior bug would fully populated drop minimal reproduction problem instructions following code application breaks assuming maybe subscribe function sure motivation use case changing behavior motivation get drop populate list departments please tell us environment visual studio angular version name angularquickstart version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browser error occurs firefox latest updated version language typescript xx c typescript node aot issues", "num": "12893", "d": "11/2016"}, {"title": "please create simplified aot build", "body": "aot lots missing features runtime compiler runs fine thought would nice aot compiler could run mode similar runtime version understand run amount optimizations current app takes seconds start want least optimizations get features complete", "num": "12891", "d": "11/2016"}, {"title": "aot runtime error thrown navigation queryparams", "body": "upgrading router getting runtime error navigation queryparams weird thing error occur development mode aot compiler throw error angular angular router example routernavigate home queryparams test test anyone got error well angular works fine precisely code update tried update angular keep angularrouter issue remains", "num": "12890", "d": "11/2016"}, {"title": "dependency injection creates new instance time used router submodule", "body": "submitting check one x current behavior application divided modules router navigates modules child modules providers components expect application reuse services injected components within one module however navigate service constructor called time component loaded rootmodule submodule routermoduleforchild path component path component providers testservice time navigate testservice constructor called expected behavior defined routes rootmodule one instance testservice created expect submodule inject instance testservice navigate components move testservice provider rootmodule works expected minimal reproduction problem instructions motivation use case changing behavior components one modules uses service opens maintains websocket connection time service spawned new connection opened definitely want reuse component keep single connection open close reopen every time user navigates pages please tell us environment everything date browser chrome angular version latest almost everything packagejson angularcore browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12889", "d": "11/2016"}, {"title": "docs modules routing lazy loaded modules webpack", "body": "explanation documentation use order use lazy loaded modules configured routing least webpack page think link could also modules page faq", "num": "12888", "d": "11/2016"}, {"title": "running throws typeerror thisdirectivenormalizernormalizetemplate function", "body": "submitting check one x current behavior running following error thrown typeerror thisdirectivenormalizernormalizetemplate function compilemetadataresolverloaddirectivemetadata c c arrayforeach native compilemetadataresolverloadngmodulemetadata c compilemetadataresolverloadngmodulemetadata c addngmodule c c arrayforeach native loadngmodules c objectanalyzengmodules c extraction failed expected behavior running work throw errors minimal reproduction problem instructions checkout run run downgrade version works motivation use case changing behavior please tell us environment windows angularcli angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12887", "d": "11/2016"}, {"title": "http headers acceptlanguage gets overridden android browser", "body": "submitting check one x current behavior setting accept language header use ex android browser overrides mobiles default language expected behavior explicitely given accept language header overtake minimal reproduction problem instructions add custom headers http calls use fiddler investigate headers headers overriden instead taking explicitely given one motivation use case changing behavior controlling language app please tell us environment android device samsung default browser installed angular version browser android web browser language node aot issues", "num": "12886", "d": "11/2016"}, {"title": "runtime compiler loaded aot service", "body": "submitting check one x current behavior appjs error runtime compiler loaded appjs ecompilemoduleandallcomponentsasync appjs ecompilecomponent appjs expected behavior compiler minimal reproduction problem instructions file servicets import injectable applicationref injector viewcontainerref componentref modulewithcomponentfactories compiler inject angularcore injectable export class componentloaderservice public dynamicloadmodule provide shared module export class sharedmodule static forroot modulewithproviders return ngmodule sharedmodule providers provide componentloaderservice useclass componentloaderservice use service import injectable inject angularcore injectable export class dialogservice file dynamicloadmodulets import ngmodule modulewithproviders angularcore import formsmodule angularforms import dialogcomponent sharedcomponentspagedialogcomponent ngmodule imports sharedmodule formsmodule declarations dialogcomponent export class dynamicloadmodule import dynamicloadmodule appcomponentts import dynamicloadmodule commondynamicloadmodule set dynamicloadmodule appcomponent thiscomponentloaderservicesetdynamicloadmodule dynamicloadmodule please tell us environment mac phpstorm angular version browser chrome language typescript node aot issues", "num": "12885", "d": "11/2016"}, {"title": "activatedroute different service component", "body": "statement route try access component ngoninit using resolved data inject component service try get resolved data using service empty bug", "num": "12884", "d": "11/2016"}, {"title": "minification amp bundling", "body": "need tools minification amp bundling check one x current behavior loading mb files loginpage expected behavior load fast minimize max language typescript xx", "num": "12883", "d": "11/2016"}, {"title": "component styleurls referred css files relative loading background image", "body": "submitting check one x current behavior component styleurls referred css files relative loading background image expected behavior component styleurls referred css files load relative loading background image according css file path minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "12881", "d": "11/2016"}, {"title": "unhandled promise rejection set property customproperty undefined", "body": "upgrade angular application getting console error custom component", "num": "12880", "d": "11/2016"}, {"title": "docs use routing amp navigation guide create memory leak", "body": "submitting current behavior documentation defect use routing amp navigation guide seems though create memory leak understand expected behavior docs use instead unsubscribe alternatively use plus pipe forgive got wrong end stick seems important clear point docs actually need unsubscribe would good explain docs", "num": "12879", "d": "11/2016"}, {"title": "mouseleavemouseout mouseovermouseenter called multiple times using ngfor", "body": "submitting check one x current behavior using ngfor generate li elements mouseout mouseenter events keep moving mouse pointer inside one li element mouseout mouseenter handlers get fired multiple times plunkr expected behavior keep moving mouse pointer inside one li element expect mouseenter gets called first time enter element mouseout called leave element workaround right use ngfor list li elements manually angular version browser chrome language typescript", "num": "12874", "d": "11/2016"}, {"title": "debugging angular app upgradeadapter", "body": "working augury team noticed windowng variable defined debugging angular app using upgradeadapter possible make ng variable available calls ngprobe work submitting check one x current behavior using devtools amp augury unable inspect angular app expected behavior expecting see angular app properties devtools augury write angular app use upgradeadaptor use devtools inspect app using ngprobe install augury open augury tab devtools motivation use case changing behavior allow developers debug inspect app upgrade angular please tell us environment mac os angular angular angular version verified browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues node", "num": "12873", "d": "11/2016"}, {"title": "trying compile angular aot running typeerror compilercli", "body": "submitting check one x current behavior following aot tutorials configuring run get following error expected behavior aot compiles minimal reproduction problem instructions motivation use case changing behavior please tell us environment windows node os npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview command line running command language typescript xx typescript node aot issues", "num": "12872", "d": "11/2016"}, {"title": "router providers instantiated twice", "body": "submitting check one x current behavior upgrading router services provided component module instantiated twice resolver run last place router preactivationprototypegettoken later activation last place router routeroutletprototypeactivate upgrading rest angular leaving router works used looking debugger see service instantiated preactivationprototypegettoken expected behavior providers instantiated using router version minimal reproduction problem instructions nt yet reproduced plnkr use case lazy loaded component sub components lazy loaded sub component resolver uses service sub component uses service service included lazy loaded components module providers list instantiated twice apparently router working resolve component activated motivation use case changing behavior wrong service fetches data initialization extra instance causes extra fetch happen router never tried deactivate guards nt work correctly version please tell us environment windows visual studio code angularcli ng serve angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tried chrome language typescript xx typescript node aot issues", "num": "12869", "d": "11/2016"}, {"title": "tracking watch mode aot compiler", "body": "", "num": "12867", "d": "11/2016"}, {"title": "access ngmodel formcontrol directivecomponent", "body": "talking value ngmodel rather associated model want add entry typescript directive selector input export class inputdirective implements oninit constructor private element elementref debugger", "num": "12866", "d": "11/2016"}, {"title": "docs components changedetectionstrategyonpush marked check events well", "body": "submitting check one x current behavior listening native event component marked check expected behavior using onpush detectors framework check onpush component input properties changes fires event observable fires event note says angular check input changes fires output observable fires output see could considered would nt think native event minimal reproduction problem instructions motivation use case changing behavior component wants listen native event manually listen event using browser apis wants avoid change detector nt great please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12865", "d": "11/2016"}, {"title": "appviewdetectchanges time", "body": "submitting check one x current behavior page forms inputs per forms page displayed appviewdetectchanges go time freezes tab chrome expected behavior using much cpu minimal reproduction problem instructions template html lines sure simply reproduce motivation use case changing behavior issue makes web app usable please tell us environment os x computer macbook pro angular version version packagejson browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "12864", "d": "11/2016"}, {"title": "extract icu message", "body": "submitting check one x current behavior extract icu message expected behavior extract icu message messagesxlf minimal reproduction problem instructions motivation use case changing behavior bug fix please tell us environment macos sierra webstorm angularcli npm node angular version browser na language typescript node aot issues", "num": "12863", "d": "11/2016"}, {"title": "dynamic templateurl", "body": "example render different template single component based certain conditions fulfilled given route app want render componenttemplate user logged render componenttemplate b user b logged", "num": "12862", "d": "11/2016"}, {"title": "navigator back button wrong work", "body": "submitting check one x current behavior pressing back button change url saved single step history expected behavior pressing changes view url buttons back saved entire history transitions minimal reproduction problem instructions three links localhost events localhost systems localhost requests sequential switching first third pressing back button view changing remains url press returns view url motivation use case changing behavior three links localhost events localhost systems localhost requests sequential switching first third pressing back button change view url becomes press returns view url please tell us environment os windows ide intellij idea package manager npm http server webpack dev server nodejs angular version version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome firefox opera language typescript xx typescript node aot issues node version", "num": "12861", "d": "11/2016"}, {"title": "error encountered resolving symbol values statically", "body": "submitting check one x current behavior compiling hybrid application created using trying use angular type annotation component constructor error displayed line col shown expected behavior error present minimal reproduction problem instructions install annotate injectable please tell us environment windows vs code npm ngc angular version browser chrome language typescript node aot issues cc tbosch petebacondarwin", "num": "12860", "d": "11/2016"}, {"title": "onpush triggers ngafterviewchecked component input change", "body": "current behavior according victor savkin article using onpush strategy component input change need check component template example clicking trigger button input change ngafterviewchecked hook still running expected behavior ngafterviewchecked component run minimal reproduction problem instructions working plunker", "num": "12859", "d": "11/2016"}, {"title": "exception expression changed checked previous value current value undefined", "body": "getting errors dynamic input fields error expression changed checked previous value input current value undefined html ts thisinputs new array", "num": "12858", "d": "11/2016"}, {"title": "problems mocking mockconnection error response", "body": "submitting check one x current behavior test repo unable test predicted http error responses mockbackend either send response error code app treats successful response test environment error real world unable send status codes error response tests test error handling application might implements expected behavior least one defined test cases passes minimal reproduction problem instructions test repo reopening issue closed due lack repro steps motivation use case changing behavior able test responses please tell us environment osx angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript node aot issues", "num": "12857", "d": "11/2016"}, {"title": "observer displayed ngfor nested ngif display right value", "body": "plnkr observer used display list via ngfor ngfor nested ngif always sync one outside ngif list display thing moment object", "num": "12856", "d": "11/2016"}, {"title": "change detection issue implementing controlvalueaccessor along ngoninit", "body": "submitting check one x current behavior implementing component longer set default value matter update component view notify outside components change expected behavior would update view notify outside components change minimal reproduction problem instructions open console check message default model set check elements template see component template outside one display demo motivation use case changing behavior needed writing custom form elements want default value without set default value outside model component take care please tell us environment os x sierra using latest angular cli version angular version fails browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "12855", "d": "11/2016"}, {"title": "resolve working correctly nt navigate", "body": "submitting current behavior resolve returns observable nonfalse value resolved navigation continue nt expected behavior navigation proceed resolved data passed activatedroutedata field minimal reproduction problem instructions menu click second link correct using resolve please tell us environment fedora angular version browser chrome firefox language typescript", "num": "12854", "d": "11/2016"}, {"title": "dynamic css loading throws error child components browserdomadapterappendchild", "body": "submitting check one x current behavior rendering child component routing dynamically appending css throws error works production builds css prebundled really strange issue totally lost message error uncaught promise error error searchdetails class searchdetails inline caused thisappendchild function note template location location child component starts child component remove styleurls attribute styles loaded get error next component rendered requires style element appended head document stack patching browserdomadapterprototypeappendchild helps demonstrate weird error thrown line browserdomadaptercreatestyleelement pause exception use console invoke functions throws error like stack trace thisappendchild function js pls see function logs started browserdomadapterappendchild inside function function throws native error calling elementappendchild missing second arg logs started browserdomadapterappendchild logs finished browserdomadapterappendchild works makes sense see difference calls thin wrappers around code nt understand howwhy function disappears expected behavior append css head without throwing minimal reproduction problem instructions nt minimal demo provide one needed provide small app working exhibits behaviour necessary hoping sticks someone something obvious magic black kind motivation use case changing behavior please tell us environment using webpack extracttextplugin get css shown angular quick start demo official site using webpack webdev server angular version browser chrome latest language typescript feel free ask questions working hours trying understand happens covered quite lot ground got nowhere workaround patching browserdomadapter start import platformbrowserprivate angularplatformbrowser const browserdomadapter platformbrowserprivatebrowserdomadapter browserdomadapterprototypecreatestyleelement function css string doc document const style doccreateelement style thisappendchild style doccreatetextnode css return style", "num": "12853", "d": "11/2016"}, {"title": "include bootstrap globally", "body": "apply bootstrap globally components tried including bootstrap indexhtml components nt render bootstrap effect", "num": "12852", "d": "11/2016"}, {"title": "router candeactivate runs", "body": "let say confirmation dialog candeactivate user refuses leave form clicks dialog closes promise resolved false user thing candeactivate nt fire anymore nt happen", "num": "12851", "d": "11/2016"}, {"title": "router feat add navigationextras input routerlink", "body": "submitting check one x current behavior routerlink directive accepts input expected behavior accept inputs routerlink minimal reproduction problem instructions motivation use case changing behavior want use router tabs without location change modal popups wo replacing url please tell us environment angular version browser language node aot issues", "num": "12849", "d": "11/2016"}, {"title": "property binding object work", "body": "described issue stackoverflow post hope violating rules linking seems either significant bug significant documentation issue behavior expected documented angularcli angular", "num": "12848", "d": "11/2016"}, {"title": "unable create custom decorator using angularcli aot compiler", "body": "submitting bug report current behavior unable create custom typescript decorators using aot compiler reproduce steps create new angularcli project run project using serve without aot create new decorator use one ts function test props return function target consolelog running decorator props target component template hello test class mycomponent ng serve aot port serve aot decorator stripped component logic decorator executed generated factory file contain actual decorator logic execute creating component tried change change still running jit compiler works aot compiler causes problems expected behavior decorator execute using aot compiler minimal reproduction problem instructions description motivation use case changing behavior compiler behavior aot regular compiler please tell us environment angular version browser language typescript node aot issues", "num": "12846", "d": "11/2016"}, {"title": "load twice expressjs render", "body": "following server using expressjs angular router index problem whenever go loads app twice server renders angular router routes component angular detect initial load therefore nt load page server might misunderstand something router works sorry advance", "num": "12844", "d": "11/2016"}, {"title": "hierarchic json data displayed correctly need help", "body": "submitting check one x current behavior test displaying repodetail pure json string table appending following code repodetailcomponenthtml repodetailsid repodetailsownerlogin data correctly displayed console got unhandled promise rejection error repodetailcomponent class repodetailcomponent inline caused read property login undefined zone angular task promisethen value viewwrappederror nativeerror error error repodetailcomponent class repodetailcomponent inline caused originalerror typeerror read property login undefined context debugcontext typeerror read property login undefined debugappviewappviewdetectchanges debugappviewdetectchanges debugappviewappviewdetectviewchildrenchanges debugappviewappviewdetectchanges debugappviewdetectchanges viewrefdetectchanges routeroutletactivate activateroutesplacecomponentintooutlet expected behavior display data page way angular minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "12843", "d": "11/2016"}, {"title": "lazy loaded module named outlet throws error", "body": "x bug report feature request support request current behavior navigating route lazy loaded module named outlet throws error uncaught promise typeerror read property routes undefined expected behavior navigating route lazy loaded module named outlet without errors minimal reproduction problem instructions configured routes named outlet want lazy loaded module outlet plnkr demonstrate behavior anything displayed error motivation use case changing behavior using lazy loaded modules named outlets please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues node version", "num": "12842", "d": "11/2016"}, {"title": "allow customizing safeurlpattern urlsanitizerts", "body": "submitting check one x current behavior possible customize urls considered safe expected behavior user could customize regex used match safe urls minimal reproduction problem instructions na motivation use case changing behavior using ionic android usually return urls begin explicitly call able show angular could customize injecting calling convenience alternative angular please tell us environment na angular version browser language node aot issues", "num": "12840", "d": "11/2016"}, {"title": "router swallows consoleerror match found", "body": "submitting check one x current behavior navigating incorrect url handled router error swallowed navigated back root expected behavior core router navigating incorrect route getting error like seems zonepromise issue sent back console minimal reproduction problem instructions motivation use case changing behavior really hard figure error caused router plnkr handle routing error return found please tell us environment visual studio iis express npm angular version angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularupgrade browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tried chrome language typescript node aot issues", "num": "12839", "d": "11/2016"}, {"title": "upgradeadapter change detection issue emitting events ngoninit object construction", "body": "submitting check one x current behavior emit event child component ngoninit set flag parent result event use ngif evaluate flag template unable render ngif element secondary bug using upgradeadapter exception swallowed using upgradeadapter following error occurs error featurecomponent class featurecomponent inline caused expression changed checked previous value undefined current value true expected behavior able emit events ngoninit documented ca nt meaningful exception thrown whether using upgradeadapter minimal reproduction problem instructions run plnkr click hardcoded employee notice nt use ngif works ngif nt evaluated change option option click http employee notice ngif fails go maints comment following code angularmodule myapp directive root root upgradeadapterbootstrap documentdocumentelement myapp strictdi true uncomment following code platformbrowserdynamic bootstrapmodule appmodule repeat steps behavior see template exceptions motivation use case changing behavior change detection fails could common occurance difficult troubleshoot took long time find root cause please tell us environment plnkr angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues na", "num": "12838", "d": "11/2016"}, {"title": "router preloadallmodules subscription callback lifecycle", "body": "submitting check one x current behavior currently way know preloading done tried inject router get config need add otherwise config outdated expected behavior need promiseobservablelifecycle preloading done minimal reproduction problem instructions repro feature request motivation use case changing behavior use case build menu registered routes please tell us environment os angular version router version browser language node aot issues", "num": "12836", "d": "11/2016"}, {"title": "compilercli never compile ngfactory nt exist", "body": "submitting check one x current behavior according compiler docs angulario order ahead time compilation file like typescript import mainmodulengfactory aotappmainmodulengfactory import platformbrowser angularplatformbrowser platformbrowser bootstrapmodulefactory mainmodulengfactory however never work get following error tried many different paths alternatives give result compiler docs sanity check suggested indeed run get exactly error nt happen point typescript compiler jit main file compiles fine expected behavior gather ngfactory module created dynamically compilation however seen suggests typescript transpiler generates blocking error compilation nt happen import referenced bootstrap file nt exist guess behaviour expected would expect angular typescript compilation wrapper able step deal otherwise constant error typescript transpiler please tell us environment angular version language typescript node aot issues", "num": "12835", "d": "11/2016"}, {"title": "asyncawait", "body": "submitting check one x hello since typescript finally seems support asyncawait targeting would time take adavantage right plans support typescript near future", "num": "12834", "d": "11/2016"}, {"title": "template perth error", "body": "ok error", "num": "12828", "d": "11/2016"}, {"title": "routing route different parameters fails child component router", "body": "submitting check one x current behavior routing child component different parameters fails due primary outlet available expected behavior routing work minimal reproduction problem instructions click sub motivation use case changing behavior would like change parameters current route please tell us environment ubuntu angularcli angular version browser chrome language typescript node aot issues", "num": "12827", "d": "11/2016"}, {"title": "fix router candeactivate change url returns false skiplocationchange set true", "body": "submitting check one x current behavior leftover following routes navigate route like using navigate away return creeps url expected behavior url change edit minimal reproduction problem instructions steps pop preview window see address bar click crisis center click dragon burning cities url stays crisiscenter skiplocationchange edit text use browser back commands go back actual url goes expected url stay crisiscenter motivation use case changing behavior causes problem using relative routing please tell us environment visual studio iis express npm angular version angularcommon angularcompiler angularcompilercli angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularupgrade browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tried chrome language typescript node aot issues", "num": "12825", "d": "11/2016"}, {"title": "resource text attributes", "body": "submitting check one x current behavior text html attribute like following placeholder attribute resource attribute seems tell extract element text attributes expected behavior way mark attribute extracted something like minimal reproduction problem instructions import component angularcore component selector myapp template export class appcomponent motivation use case changing behavior make localization possible please tell us environment windows vs code npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "12820", "d": "11/2016"}, {"title": "interpolated strings", "body": "submitting check one x current behavior strings uses interpolation extracts hello two problems variable names gone generated syntax hard localziation tools expected behavior important information lost translator sees two meaninsless strings interpolation would better hello localziation tool actually undestand notation likely th text gets translated incorrectly better choise woul leave placeholds angular style like hello ownername sellername minimal reproduction problem instructions component selector myapp template export class appcomponent sellername string ownername string constructor thissellername bill thisownername jill motivation use case changing behavior make localization easier eliminate issues translator get meaning string localization tools better cope angular resources please tell us environment windows nodejs npm vs code angular version nt know find created project must pretty new browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tested chrome browser related happed language typescript xx typescriot node aot issues", "num": "12819", "d": "11/2016"}, {"title": "cleanup queries breaking changes", "body": "change semantics queries following way properties query decorator eg filled called right view queries set first calculated eg view queries see replay changes happened change detection cycle eg queries already filled statically calculated user need know fact see view queries updated dirty check nested components way users could still query change nested components without getting dirty checking error would require views dirty checking methods probably also new lifecycle callback allow users listen event directly make exact right call bit late ie elements view nested view containers checked", "num": "12818", "d": "11/2016"}, {"title": "directive ca nt inject host changedetectorref", "body": "submitting check one x current behavior directive injects changedetectorref receives parent element instance rather one host element sure intentional seems like way directive use host element changedetectorref expected behavior directive able inject host element changedetectorref minimal reproduction problem instructions created directive called renderonce detaches change detector ngafterviewinit two elements increment number interval one add directive one nt directive detaches parent component change detector render", "num": "12816", "d": "11/2016"}, {"title": "issues using third party translation tools", "body": "submitting check one x current behavior use wwwtransifexcom pull translations platform build breaks generates error manually create translated file build works correctly plunkr translation files messagesxlf messagesdexlf manually created messagesdedexlf transifex generated angular version language typescript node aot issues", "num": "12815", "d": "11/2016"}, {"title": "feature request creating template variable contexts", "body": "would nice core directive create generic variable contexts template example implementation benefits like shortcuts long data structures andor constant use pipes html username userage useremail avoid multiple observer subscriptions template html username userage useremail", "num": "12813", "d": "11/2016"}, {"title": "parent form become invalid child component formcontrol invalid", "body": "expecting child component becomes invalid parent component become invalid parent form valid even child component invalid parent form become invalid well way react parent form unless separate output emitter windows liteserver angular browser chrome language typescript", "num": "12812", "d": "11/2016"}, {"title": "read property clicked null error", "body": "submitting check one x current behavior google chrome extension retrieving getelementbyid send clicked error uncaught typeerror read property clicked null running latest google chrome version expected behavior expect program read properties three input tags issue currently return url minimal reproduction problem instructions motivation use case changing behavior please tell us environment windows google chrome browser google chrome language javascript html", "num": "12811", "d": "11/2016"}, {"title": "control instance error addingremoving multiple dynamic controls formgroup", "body": "submitting check one x current behavior creating editable table add remove row feature formgroup validation table works rows add remove last row removed middle table angular throw error formcontrol instance attached form control element name adding row used addcontrol method add control group removal row using removecontrol method expected behavior error whichever place remove add row minimal reproduction problem instructions motivation use case changing behavior please tell us environment windows iis server angular angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome version language typescript xx typescript node aot issues node", "num": "12810", "d": "11/2016"}, {"title": "error lazyloading module uses core module", "body": "submitting check one x current behavior lets say homemodule uses component coremodule topnav component example set router lazy load homemodule try access module lets say home always says topnav component defined even coremodule imported appmodule like style guide says expected behavior lazyload homemodule work already imported coremodule without need importing goes style guide minimal reproduction problem instructions create homemodule lazyload routes loadchildren apphomehomemodule homemodule go route motivation use case changing behavior behavior going style guide please tell us environment webpack windows angular version browser language typescript xx node aot issues", "num": "12809", "d": "11/2016"}, {"title": "ngsubmit nt propagated subgroups", "body": "submitting current behavior listening subgroup nt fire form submit expected behavior emit parent group gets submitted minimal reproduction problem instructions create form template html submit ts constructor formgroup formgroupdirective nt get fired formgroupngsubmitsubscribe gt consolelog works motivation use case changing behavior creating directive show form controls errors submit nt possible current behavior angular version browser language", "num": "12808", "d": "11/2016"}, {"title": "", "body": "submitting check one x current behavior currently get access lazy loaded config children routes also use expected behavior access lazyloaded routes even children minimal reproduction problem instructions wip need create lazy module loadchildren route inside getting result see root route get child motivation use case changing behavior get routes generate menu please tell us environment ubuntu angular version browser language typescript node aot issues", "num": "12807", "d": "11/2016"}, {"title": "ngmodel value initilize properlly", "body": "blockcharwithdot amount let rr thiscommonblockcharwithdot amount block alphabet let result thiscommongetvaliddata rr rr consolelog input data gt prosessing model value init gt amount result return result current behavior input data gt prosessing model value init gt input data gt prosessing model value init gt input data gt prosessing model value init gt view input data gt prosessing model value init gt view input data gt prosessing model value init gt view input data gt prosessing model value init gt view coming correct input data gt prosessing model value init gt view input data gt prosessing model value init gt view input data gt prosessing model value init gt view input data gt prosessing model value init gt view coming correct input data gt prosessing model value init gt view entering text field numeric value working entring alphabet controller change views change initilize model enter numeric work removes alphabet add numeric data binding view also per already added console message one thing enter first time alphabet time working binding view add second time alphabet working binding view done os ubuntu angular version browser", "num": "12806", "d": "11/2016"}, {"title": "ng nt use existing ng serve session", "body": "submitting check one x current behavior opens new session everytime test slow expected behavior expects use existing sessions minimal reproduction problem instructions try run ng serve run ng motivation use case changing behavior test faster please tell us environment mac os sierra angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx na node aot issues", "num": "12805", "d": "11/2016"}, {"title": "ng error directive exportas set ngmodel", "body": "submitting check one x current behavior latest stable version forms module loaded error thrown attempting use ngmodel odd ngform found works fine attempt use ngmodel variable error get thrown expected behavior error thrown ngmodel work normally minimal reproduction problem instructions put together example easy get running steps reproduce git clone cd ngmodelissueexample npm install npm run build npm run serve motivation use case changing behavior example put together best reference please tell us environment angular version browser ubuntu chrome version ubuntu firefox version language typescript node aot issues", "num": "12796", "d": "11/2016"}, {"title": "code generated work strict null checking", "body": "submitting check one x current behavior code generated conditional property defeats typescript type narrowing generates error object could null expected behavior code generated correctly narrow type minimal reproduction problem instructions new project change ts import component angularcore export interface issue getinfo string export interface myelement issue issue null component selector approot templateurl appcomponenthtml styleurls appcomponentcss export class appcomponent title app works element myelement html elementissue getinfo invoke app directory see error motivation use case changing behavior correct typing usage", "num": "12795", "d": "11/2016"}, {"title": "bootstrapmodule nt catch compilation errors", "body": "submitting check one x current behavior compilation errors thrown promise returned export class app constructor baddependency try platformbrowserdynamic bootstrapmodule appmodule catch e gt consolelog bootstrap error e catch e logs consolelog bootstrap error e expected behavior compilation errors handled result returning rejected promise minimal reproduction problem instructions plunk demonstrates issue motivation use case changing behavior currently method inconsistent catching errors fact returns promise suggests uses promise rejection handle errors compilation errors may thrown promise returned results counterintuitive undocumented behaviour please tell us environment angular version browser language", "num": "12791", "d": "11/2016"}, {"title": "datepipetransform produces incorrect string ie", "body": "submitting check one x current behavior datepipetransform produces incorrect string ie instead getting correct formatted string get correct formatted string followed whole date expected behavior datepipetransform return result browsers minimal reproduction problem instructions see plunker example motivation use case changing behavior current behavior impossible get correct formatted string using datepipe inside component please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx typescript node aot issues", "num": "12790", "d": "11/2016"}, {"title": "inconsistent behavior ngclass class bindings onpush cd", "body": "submitting check one x current behavior see plunker sure async binding triggers cd one form control events whatever seems miss regular binding otoh work seem work default cd expected behavior expect consistent minimal reproduction problem instructions motivation use case changing behavior consistency behavior please tell us environment angular version browser chrome language ts", "num": "12789", "d": "11/2016"}, {"title": "tracking ngmodule summaries", "body": "", "num": "12787", "d": "11/2016"}, {"title": "api reference missing http body documentation base classes implemented methods", "body": "directed issue correspond angualr itselt api reference available many http examples users use text json method directly httpresponse object tried find least basic information methods api reference luck single word methods except example showing usage found source response class response class derives body class provides text json methods however api reference information body also information base classes implemented interfaces probably classes response", "num": "12784", "d": "11/2016"}, {"title": "really need document explaining underline render concepts components", "body": "really need document explaining underline render concepts components spoke guys gitter many agreed missing piece puzzle really need document effort gain deeper knowledge angular wish someone would create depth explanation tutorial underlying structure components directives containers views per docs component container contain two kinds views host views created instantiating component via createcomponent embedded views created instantiating embedded template via createembeddedview location view container within containing view specified anchor element view container one anchor element anchor element single view container root elements views attached container become siblings anchor element rendered view leaves many open questions host view referring element component resides embedded view referring component template true cases created manually via createcomponent well created declaratively via another hosting component parent case directives well template thus view works shadow dom environment browser actually support component host vs emulated environment angular lot magic effort become expert wish better understand maybe via visual diagram entire relationship viewcontainerref host views templates embedded template viewchild viewcontainer hierarchy components directives consider extremely well versed delivered huge project already still feel holes understand underline internal workings sure need know car works drive one handle much better thanks always sean also posted", "num": "12780", "d": "11/2016"}, {"title": "angularcorebundlescoreumdjs", "body": "trying explore angular decorators declared found file function defined thinking could debug file using browser supported source maps however browser nt load file loads seems include files including file bundle files", "num": "12779", "d": "11/2016"}, {"title": "form validation field valid disabled attribute truthy", "body": "per plunker select disabled dropdown valid field name shown invalid", "num": "12778", "d": "11/2016"}, {"title": "find outlet lazy loaded components modules", "body": "submitting check one x current behavior trying make routeroutlet work lazy loaded component receive following error message expected behavior find routeroutle lazy loaded components modules minimal reproduction problem instructions repo created cli ng serve navigate click outlet test link error appear console motivation use case changing behavior would like lazy loaded module routing concrete project loading module lazy module menu bar load components based route trying make work receiving error mentioned please tell us environment opensuse angularcli vscode angular version angular version browser language typescript", "num": "12777", "d": "11/2016"}, {"title": "activatedroute wrong rejecting candeactivate", "body": "submitting check one x current behavior given navigation using routernavigate activated route candeactivate routeguard defined candeactivate guard returns promise resolved false ie route deactivated activatedroutefirstchild injectable parent route points route navigated rather route could deactivated expected behavior would better update activatedroute current route deactivated remain current route candeactivate route guards fail minimal reproduction problem instructions deactivate due routeguard click button twice look difference activatedroutefirstchild main component activatedroute childcomponent motivation use case changing behavior feel current value activatedroute please tell us environment macos webstorm webpack angular version angular router browser language node aot issues", "num": "12776", "d": "11/2016"}, {"title": "aot stylecompiler runtime error viewencapsulationnone", "body": "submitting current behavior using aot compilation particular plugin using component stylesheets error raised runtime since component styles always accessed styles exported member exists set function received array items tries run method expected behavior regardless used compiled styles imports break runtime minimal reproduction problem instructions clone setup delete ngfactory folder files add homecomponents run motivation use case changing behavior take look source code component context variable named styles used get exported value however variable exists shim used happens please tell us environment windows build angular version browser language typescript node aot issues", "num": "12775", "d": "11/2016"}, {"title": "custom validator getting called onblur", "body": "modelformzip custom validator getting called page load getting called onblur could one tell custom validator getting called user leaves input filed typing anything", "num": "12770", "d": "11/2016"}, {"title": "incorrect error message empty href bindings ie href", "body": "submitting check one x current behavior console error bootstrap error message error shown components empty href binding code ie error message expected behavior either better error message like empty href bindings allowed update code allow reference line angular compilerumdjs function throwing error minimal reproduction problem instructions motivation use case changing behavior incorrect error message took ages work upgraded previous version angular please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12768", "d": "11/2016"}, {"title": "router data always available children components", "body": "submitting check one x current behavior route empty path shares data children data inherited access data resolver data route route path children nt access route data params looks like data consumed parents parent see data children better understand mean please look plunkers provided issue expected behavior parent component consume data children get data minimal reproduction problem instructions vs motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12767", "d": "11/2016"}, {"title": "angular attribute centric component module fail render", "body": "submitting bug report check one x current behavior componenta decorator selector compa componentb decorator selector compb declared exported feature module mymodule template componenta div element render componentb eg problem componentb rendered render selector decorator element selectorcompb componenta template contains note using lazy loading modulescomponents expected behavior expect componentb rendered componenta regardless whether element attribute directive please tell us environment aspnet rendered html visual studio typescript generated javascript files configured amd angular angular version behavior occurring version browser chrome language typescript", "num": "12766", "d": "11/2016"}, {"title": "touch change event propagated ngmodelgroup ngform using separate component", "body": "submitting check one x current behavior form control marked touched changed expected behavior complete hierarchy informed minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome language typescript", "num": "12765", "d": "11/2016"}, {"title": "allow multiple formgroupformarray validators asyncvalidators", "body": "submitting check one x current behavior formgroup constructor formarray constructor take single validators following parameters hand formcontrol constructor takes composes validator arrays single validator expected behavior also able take arrays validators like motivation use case changing behavior useful multiple group validators example one validator check password confirm password another validator make one field required optional based value another field angular version", "num": "12763", "d": "11/2016"}, {"title": "angular chinese community", "body": "hello today writting article want publish angular chinese community tell error error dont know mistake please help thanks", "num": "12762", "d": "11/2016"}, {"title": "relative imports working", "body": "submitting check one x current behavior added baseurl relative imports set shared module appshared root module add project works fine jit using angular cli running change import sharedsharedmodule works fine expected behavior relative imports work minimal reproduction problem instructions ca nt put plunkr requires run motivation use case changing behavior relative imports supported jit make code cleaner please tell us environment windows node npm angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview na language typescript xx typescript node aot issues", "num": "12760", "d": "11/2016"}, {"title": "ca nt bind list since nt known property input using html datalist", "body": "submitting check one x current behavior error template parse errors ca nt bind list since nt known property input expected behavior minimal reproduction problem instructions option motivation use case changing behavior want use html datalist please tell us environment macos sierra angular version browser chrome language typescript node aot issues", "num": "12759", "d": "11/2016"}, {"title": "accessing instances dynamic components ngcontent", "body": "submitting current behavior querying ngcontent superclass nt work expected behavior querying ngcontent superclass work minimal reproduction problem instructions currently component uses ngcontent inside template render whatever pass ie component html however referencing component possible know exactly component case nt know ca nt select request would select components super class say select instances like motivation use case changing behavior motivation behind allowing dynamic components injected yet allow instance referenced parent component particular usecase allowing developer build pages wizard containing whatever component need assume class interface share call functions like say move forward wizard please tell us environment windows angular webstorm webpackgulp additional notes workaround currently instead pass components config say array components refer way however would nice able reference instances components injected dynamically via ngcontent would also think may related sense would expect two scenarios work linked issues mentions super class selectors work least components nt dynamically defined", "num": "12758", "d": "11/2016"}, {"title": "ngsubmit submit prevent default form submit causing page reload", "body": "submitting check one x x bug report current behavior currently create form submit handler either submit handler called form also continues regular submit set method action values reloads page data form url query worked around calling handler expected behavior would argue angular developers expect handled ngform directive think behaviour potentially surprising likely cause pause googlestackoverflow see done something wrong minimal reproduction problem instructions motivation use case changing behavior primarily developer productivity ensure things work default angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12757", "d": "11/2016"}, {"title": "aot ca nt add upgradecomponent ngmoduleentrycomponents", "body": "submitting check one x current behavior upgradecomponent added entrycomponents ngmodule jit compiles ok upgraded component render console error uncaught error could compile forupgradedirective component b aot compile failed compile error error aotmodulengfactoryts error find name forupgradedirectivengfactory remove forupgradedirective entrycomponents srcmodulets c jit compiles ok displays ok browser shows hello hello aot compiles ok display ok browser shows hello expected behavior compile amp render upgradecomponent added ngmoduleentrycomponents minimal reproduction problem instructions testupgradezip amp b npm run jit b npm run aot c amp remove forupgradedirective entrycomponents run c npm run jit npm run aot motivation use case changing behavior ca nt upgrade components use aot time please tell us environment angular version browser language typescript node aot issues", "num": "12756", "d": "11/2016"}, {"title": "pattern validation ngmodel causes browser freeze repeated input", "body": "submitting check one x current behavior text input bound ngmodel pattern validation hold letter key focusing input enter long string aaaaaaaaaaaaa characters browser freezes respond anymore expected behavior angular prevent browser freeze spamming input field complex validation minimal reproduction problem instructions see motivation use case changing behavior nt want browser freeze crash angular please tell us environment windows bit angular version browser chrome language node aot issues", "num": "12753", "d": "11/2016"}, {"title": "rendererlisten supported multiple dom events", "body": "submitting check one x current behavior supporting multiple events methos listener applies expected behavior expected listener apply events string space separation second parameter motivation use case changing behavior think useful feature cases ca nt specify events via", "num": "12751", "d": "11/2016"}, {"title": "reflectiveinjector resolving aot mode bootstrapping", "body": "submitting check one x current behavior injector resolves configservice jit aot receive following error resolve parameters configservice make sure parameters decorated inject valid type annotations configservice decorated injectable expected behavior reflectiveinjector resolve configservice jit aot compilation minimal reproduction problem instructions ts import reflectiveinjector inject injectable opaquetoken angularcore import platformbrowserdynamic angularplatformbrowserdynamic import appmodule appmodule export const configtoken opaquetoken new opaquetoken configtoken const config format mmddyyyy environment prod injectable export class configservice format string environment string let injector reflectiveinjectorresolveandcreate provide configtoken usevalue format mmddyyyy environment test provide configservice useclass configservice var configservice injectorget configservice platformbrowserdynamic bootstrapmodule appmodule also attached app demonstrating issue ngappzip motivation use case changing behavior reflectiveinjector work compilation modes please tell us environment osdev environment windows pro webpack angular version using angular browser applicable language typescript xx typescript node aot issues", "num": "12750", "d": "11/2016"}, {"title": "extracting message project using sass", "body": "submitting check one x current behavior complier cli command wo nt extract message project uses saas expected behavior extract message regardless components use css scss minimal reproduction problem instructions reproduce steps create new project using angularcli change angularclijson file use scss style extension instead css create file srcappvariablesscss change appcomponent style file appcomponentscss import variables file import variables color color change appcomponent styleurls decorator property import component angularcore component selector approot templateurl appcomponenthtml styleurls appcomponentscss export class appcomponent title app works execute message extractor command throw error motivation use case changing behavior using saas pretty common besides angularcli supports therefore compliercli work please tell us environment os macossierra angularcli version angular version using angular browser applicable language typescript node aot issues", "num": "12749", "d": "11/2016"}, {"title": "lazy loading route causing issue bundle", "body": "hi bundled code systemjsbuilder routing causing issue routing file looks like import ngmodule angularcore import routermodule routes angularrouter const routes routes path redirectto dashboard pathmatch full path dashboard loadchildren appdashboarddashboardmodule dashboardmodule ngmodule imports routermoduleforroot routes exports routermodule export class approutingmodule error please help fix issue", "num": "12748", "d": "11/2016"}, {"title": "provide addcontrols formgroup conveniently add multiple controls", "body": "submitting check one x current behavior currently want add lot controls form group use addcontrol multiple times expected behavior provide property formgroup following signature motivation use case changing behavior instead write could write think would actually helpful worth implement aware convenience seems quite small easy change would give try work pr best", "num": "12747", "d": "11/2016"}, {"title": "host selector nt work standard view encapsulation", "body": "submitting check one x current behavior rules rewritten never matches anything note without selector fixed issue rewritten expected behavior match matches plunkr contains working example native shadowdom case expect rule rewritten minimal reproduction problem instructions use css selector example found slightly modified plunkr krassx posted motivation use case changing behavior please tell us environment angular version next browser language", "num": "12746", "d": "11/2016"}, {"title": "add feature injector makes classes injectable default", "body": "submitting check one x current behavior currently add decorator every class want params constructor automatically resolved class instantiated injector problem crazy annoying bought idea everything class ultimate used singleton nt use classes anything defining type vehicle di therefore literally need every one custom classes expected behavior desired behavior set flag create main injector makes classes injectable nt need actually put decorator perhaps safety net add decorator prevents injection flag turned though second part unnecessary particular use case ngmodule used able set flag within ngmodule decorator minimal reproduction problem instructions na motivation use case changing behavior besides use case know truly want every class injectable would remove common pitfall see many newbies run first start trying angular also really nice aspect able write service code without reference angular code used angular apps please tell us environment na angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx na language typescript xx typescript node aot issues na", "num": "12745", "d": "11/2016"}, {"title": "host metadata bindings longer work root components", "body": "submitting check one x current behavior specify host binding via metadata rather decorator nt seem get applied component question root component still seems work pretty sure worked properly expected behavior bindings specified metadata applied minimal reproduction problem instructions motivation use case changing behavior worked work nt need app component thrown wrench component unit tests use since component created root thus tests bindings fail please tell us environment angular version browser chrome language ts", "num": "12744", "d": "11/2016"}, {"title": "import modules template level ie enums static variables etc", "body": "submitting check one x current behavior currently define class fields make enum component available template component selector button template type export buttoncomponent input public type buttontype buttontypeok export enum buttontype ok cancel component template export component public buttontype buttontype gets annoying quickly could use custom decorator aottreeshake friendly expected behavior provide way either reexport symbols component import symbols template level motivation use case changing behavior usually ui components enumlike input parameters allow compiletime checking refactoring clean way use also purely template level helpers problem need injected somehow template context", "num": "12743", "d": "11/2016"}, {"title": "form select box showing current value", "body": "using array objects rendering option values select dropdown broken andor intuitive updating existing record current value selected form appears ngvalue demanding equivalence terms object reference set selected value submitting current behavior form select box showing current value option tags created via object expected behavior form select box shows current value objectrecord able specify logic selected option minimal reproduction problem instructions motivation use case changing behavior see plunker please tell us environment mac os x visual studio code project setup angular version", "num": "12742", "d": "11/2016"}, {"title": "named outlet nt work", "body": "submitting check one x current behavior gives unpkgcom exception uncaught promise error match routes url segment list full expected behavior navigate minimal reproduction problem instructions replace current default route commented get exception navigating works click button motivation use case changing behavior please tell us environment tried plunker chrome angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "12740", "d": "11/2016"}, {"title": "candiactivate guard gets null component", "body": "submitting check one x minimal reproduction problem instructions click parentchild click home see console see null candeactivate guard receives null component expected real reference remove repo segment routes good think cause componentless parent node export const routes routes path component main path repo children path parent component parent children path child candeactivate candeactivateguard component child", "num": "12739", "d": "11/2016"}, {"title": "compatible stock browser android", "body": "submitting check one x current behavior try load website public yet stock browser android system site finishing loading even better browser crashing visiting selecting features menu item expected behavior sites loads fine minimal reproduction problem instructions open kind example plunker using stock browser run open stock browser select features menu item please tell us environment android running genymotion android running genymotion android running genymotion android running genymotion angular version recent stable version browser android web browser android web browser android web browser", "num": "12737", "d": "11/2016"}, {"title": "rxjs rc final upgrade", "body": "issue track upgrade rxjs final release today packages angularcore angularrouter angular require rxjs prevents us using current version rxjs projects", "num": "12735", "d": "11/2016"}, {"title": "bug change detection nt kick ngfor array data change", "body": "issue relates toastcontainer template new object added array template nt reflect changes manually call used working version earlier", "num": "12733", "d": "11/2016"}, {"title": "animation callback affecting animation performance", "body": "submitting check one x current behavior constructed simple route animation one component next fades one component reveals implemented simple animation callbacks fire user component animation starts also ends callbacks work expected report console fired implementation causes animation delay start expecting element see might causing piece code expected behavior actually behaviour simply remove routeanimation prefixes reference functions calls notice seamless transition one component next minimal reproduction problem instructions please follow link motivation use case changing behavior method callback impact performance animation wanting make callbacks every animation effect could problematic please tell us environment phpstorm osx el capitain angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues npm", "num": "12732", "d": "11/2016"}, {"title": "pseudo classes selectors host element nt works correctly angular updating", "body": "bug discussion submitting check one x current behavior component active class host mycomponent styles css host content component active color red hostactive content component active color green angular component shows wrong result expected behavior angular ok minimal reproduction problem instructions please tell us environment macosx node angular version browser language typescript node aot issues", "num": "12730", "d": "11/2016"}, {"title": "routing canactivate canactivate calls stop first child canactivate false", "body": "submitting check one x trying make inheritance router define several children route one canactivate guard one canactivate guard returns true current behavior canactivate guard child returns false canactivate gaurds following children wo nt examined considered false expected behavior canactivate guards examined independently different children minimal reproduction problem instructions created angularcli based project demonstrating problem motivation use case changing behavior please tell us environment os linux angular version angularcli angular router browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript node aot issues", "num": "12729", "d": "11/2016"}, {"title": "defined primeng", "body": "", "num": "12727", "d": "11/2016"}, {"title": "ngc work include", "body": "original title ngc ignores exclude option tsconfig compiles nodemodules submitting check one x current behavior ngc ignores option tsconfig compiles dirrectory including everything expected behavior tsconfig contains option taken account minimal reproduction problem instructions see aot directory compilation result motivation use case changing behavior aot compilation takes many time contents nodemodules scanned compiled specify gendir content nodemodules changes added ngfactoryts files referneces compiled ngfactoryts classes project source created files ca nt removed included compilation typescript compilation get errors like please tell us environment windows git bash npm angular version language typescript node aot issues", "num": "12725", "d": "11/2016"}, {"title": "eventemitter execution losing focus html interactive element", "body": "eventemitter execution making interactive element focus lost would work explicitly setting focus element begun using attraria attributes screen readability event emitter seems break flow tabbing elements events like blur keyup angular version", "num": "12723", "d": "11/2016"}, {"title": "whenstable throw exception called outside async fakeasynczone", "body": "submitting check one x current behavior developer writes synchronous test without whenstable realizes need whenstable exception thrown detectchanges see adds whenstable forgets update test method wrapper use async fakeasync really want test would complete whenstable completed expected behavior whenstable throws exception invoked asynctestzone fakeasynctestzone cc juliemr wardbell", "num": "12721", "d": "11/2016"}, {"title": "add componentfixturedetectchangeswhenstable api", "body": "submitting check one x current behavior testing something asynchronous like ngmodel repeated pattern expected behavior would easier api bundled detectchanges whenstable something like detectchangeswhenstable call detectchanges fixture already stable fixture unstable return promise resolves fixture stable detectchanges called cc juliemr wardbell related", "num": "12720", "d": "11/2016"}, {"title": "throw exception fixturedetectchanges called fixture pending microtasks", "body": "submitting check one x current behavior developers writing unit tests might operation like triggering event immediately follow fixturedetectchanges confused expected result rendered dom problem fixture might unstable outstanding macromicrotasks need waited using whenstable continuing detectchanges expected behavior detectchanges assert fixture actually stable throw exception helpful message use whenstable motivation use case changing behavior easier developers understand wenwhy need use whenstable", "num": "12718", "d": "11/2016"}, {"title": "allow hexadecimal octal binary literals templates", "body": "submitting check one x current behavior trying bind hexadecimal literal breaks compiler expected behavior able would still print decimal counterpart course expected repl course also things like since also supports binary octal also nice minimal reproduction problem instructions plunker motivation use case changing behavior perfectly normal thing eg building memory simulatorvisualisations angular version browser language", "num": "12716", "d": "11/2016"}, {"title": "formgroup controls hashmap map", "body": "submitting check one x current behavior extending functionality formgroup type reusability problems right constructor formgroup like allow delegate functions like insert get iterate derived class receiving map instead since operators overloads declined typescript nice way instance keep formgroup children formcontrol different objects submit pr think makes sense chance", "num": "12715", "d": "11/2016"}, {"title": "calling thisrouternavigate nothing coming child component eventemitter", "body": "submitting check one x current behavior calling thisrouternavigate nothing coming child component eventemitter expected behavior thisrouternavigate navigate given url minimal reproduction problem instructions extracted impacted code html public back event event thisrouternavigate home component moduleid moduleid selector personcard export class personcardcomponent output public clickevent new eventemitter input public id string see call back function twice html click first div back called routing works perfectly click personcard component div back called routing nt anything error console guess bug maybe something wrong motivation use case changing behavior please tell us environment angular version", "num": "12714", "d": "11/2016"}, {"title": "native supports angular work angular", "body": "hi using angular need translated version fairly soon ready nt enough time migrate yet wondering native angular tools used angular migrate wo nt massive change translation part thanks", "num": "12711", "d": "11/2016"}, {"title": "async validation sets formcontrol valid even sync validation invalid", "body": "submitting current behavior sync async validation formcontrol async validation overwrites sync validation comes back even value changed put something field passes sync validation async validation triggers however change value field last async validation come back something nt pass sync validation last value async validation becomes winning one expected behavior probably async validation ignored value changed since request minimal reproduction problem instructions fill whatever whatevercom input field within seconds change value field asdf wait second two control valid asdf valid according sync validation angular version browser tested latest chrome safari language typescript", "num": "12709", "d": "11/2016"}, {"title": "allow use ngmodel input value using reactiveformsmodule", "body": "submitting check one x current behavior importing reactiveformsmodule app still use ngmodel value input even using formcontrol setting value even worse overrides value input expected behavior ngmodel input definitely override value input already set formcontrol component class even think ngmodel input allowed inside input using reactiveformsmodule minimal reproduction problem instructions motivation use case changing behavior cause weird behavior hard debug things since places set value seem like wanted behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12708", "d": "11/2016"}, {"title": "binding refresh animation done", "body": "submitting check one x current behavior using animation component animation done call function using name animation trigger function updates component variable bind corresponding template component template problem end animation even variable changed view updated ie apply expected behavior binding updated applied minimal reproduction problem instructions plunkr reproducing bug plunkr use popin example reproduce bug need click link opens popin click anywhere overlay close see closing animation correctly trigger opacity overlay goes back closing animation variable updated false callback apply overlay case nt illustrate behavior put cursor hover link see css applied overlay still click another time remaining visible opacity overlay binding refreshed overlay goes away motivation use case changing behavior mentioned popin example ca nt interact interface behind overlay even overlay visible please tell us environment browser google chrome os mac os", "num": "12707", "d": "11/2016"}, {"title": "ngmodel value accessor nt play well onpush change detection", "body": "submitting check one x current behavior given component correctly uses onpush change detection since renders based inputs try communicate component using ngmodel controlvalueaccessor component fails respond change detection never triggers ngonchanges lifecycle method expected behavior controlvalueaccessor writes component inputs trigger change detection ngonchanges lifecycle method way components ownership integrated ngmodel controlflow minimal reproduction problem instructions plunkr demo see two components stay sync first one uses input second one uses ngmodel motivation use case changing behavior believe bug inhibits ability consume components write please tell us environment chrome plunkr angular version whatever plunkr currently using angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome firefox language node aot issues", "num": "12706", "d": "11/2016"}, {"title": "location locationstrategy appbasehref ca nt injected anymore without explicitly providing", "body": "submitting check one x current behavior provider found one injected without explicitly providing expected behavior default values angular uses injected minimal reproduction problem instructions commenting line makes work default used provided default motivation use case changing behavior please tell us environment tried plunker chrome version beta angular version version plunker fetches nt know browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tried plunker chrome version beta language typescript xx ts node aot issues", "num": "12704", "d": "11/2016"}, {"title": "help valname", "body": "help valname valid", "num": "12703", "d": "11/2016"}, {"title": "change detection falls behind", "body": "submitting check one x current behavior multiple inputs page using formcontrolname directives output value view changes reflected certain circumstances walkthrough plunker expected behavior view correctly shows values text boxes minimal reproduction problem instructions motivation use case changing behavior broken please tell us environment windows free vm microsoft gives browser testing angular version browser language typescript", "num": "12701", "d": "11/2016"}, {"title": "templates unnecessarily transform", "body": "submitting check one x current behavior template eg compiler seems silently transform breaks template fact expected behavior translated stay minimal reproduction problem instructions thanks template helpful motivation use case changing behavior javascript always separate objects makes sense combine template language unnecessarily please tell us environment fails plnkr angular version browser language", "num": "12700", "d": "11/2016"}, {"title": "angular app error firefox", "body": "angular version browser firefox problem angular application firefox problems internet explorer chrome page problem enter click next step debug point appservicesjs function apirequestserviceprototypegetprice posted question answer problems ie chrome stack trace firefox error occurred syntaxerror jsonparse unexpected character line column json data stack trace jsonmodules angular bodymodules angular apirequestserviceprototypeextractdata zonedelegateprototypeinvoke ngzoneimplthisinner lt oninvoke zonedelegateprototypeinvoke zoneprototyperun scheduleresolveorreject lt zonedelegateprototypeinvoketask ngzoneimplthisinner lt oninvoketask zonedelegateprototypeinvoketask zoneprototyperuntask drainmicrotaskqueue zonetaskthisinvoke", "num": "12695", "d": "11/2016"}, {"title": "locationgo nt notify locationsubscribe subject", "body": "submitting check one x current behavior nt print anything windowlocation changed expected behavior consolelog appear console minimal reproduction problem instructions angular version browser chrome", "num": "12691", "d": "11/2016"}, {"title": "dual router setup properly transition pages navigation enabled", "body": "current angular build using routers together via ngupgrade support page transitions urls enabled pages always work pages work loaded directly navigating pages moving page however url results blank page code work using hashbased urls inspecting dom appears element appears page never expanded also observed hashbased urls router events fired page transitions even including transitions navigation router events fired loading page directly navigating pages seems likely source empty blank page repro instructions check npm install npm start visit click teams observe content appears page constrast loading directly using link branch github project", "num": "12690", "d": "11/2016"}, {"title": "feature request move components also viewcontainer", "body": "submitting check one x motivation use case changing behavior creating complex ui end user configure sees part screen example resize components drag drop different locations want able move component another parent dropped already create components dynamically nested grids according saved configuration json format far good whenever try move component always fails probably component hostview gets destroyed detach viewref old viewcontainer componentref constructed dynamically get reference new viewcontainer tying together possible current angular", "num": "12689", "d": "11/2016"}, {"title": "component specific renderers", "body": "submitting check one x motivation use case changing behavior sometimes written components directives update canvas elements example written tells mapping library draw map canvas element template may add inside map subsequently draw markers canvas element although made creating maps easy projects always felt wrong angular browser renderer sometimes creating thousands dom elements eg strictly required wondering would useful element could specify render perhaps simply disable rendering dom example adding new would result updating canvas dom idea could used creating declarative programming styles loads libraries render canvas like openlayers threejs etc", "num": "12688", "d": "11/2016"}, {"title": "angularform controls throw control missing optional", "body": "submitting current behavior formgroupprototypesetvalue throws exception value provided contains fields defined control group expected behavior option either andor preferred allow value inputs extra fields enabled extra fields corresponding control silently ignored minimal reproduction problem instructions throws exception ts let group new formgroup name new formcontrol groupsetvalue id exception name ok motivation use case changing behavior working data backend rarely case get data exactly match field code like following required many cases due restriction please tell us environment angular version browser language", "num": "12686", "d": "11/2016"}, {"title": "error trying directly access route lazy loaded module", "body": "submitting check one x current behavior get js error console trying directly access route lazy loaded module expected behavior js error minimal reproduction problem instructions plunker demo directly access url browser clone repo go url type url browser see following error console angular version browser chrome language typescript", "num": "12682", "d": "11/2016"}, {"title": "testing entrycomponents", "body": "see use test", "num": "12681", "d": "11/2016"}, {"title": "angularform abstractcontrol build misses abstract method declarations", "body": "submitting current behavior npm build others checked miss abstract method declarations abstractcontrol implementing abstract methods provided inside declaration build still leads errors like implementing missing undeclared abstract methods fixed issues made custom control work expected behavior abstract methods declared build minimal reproduction problem instructions install npm package check abstract method declarations check source version missing npm available source please tell us environment angular version browser language typescript", "num": "12680", "d": "11/2016"}, {"title": "router redirect working", "body": "submitting check one x current behavior request redirected login approutingmodulets get error error uncaught promise error match routes url segment login expected behavior able find login path improve error message default path required child level minimal reproduction problem instructions get work following change made go loginroutingmodulets modify children default path empty string example changing angular version browser chrome ie language typescript thanks advance", "num": "12679", "d": "11/2016"}, {"title": "aot component factory error message helpful", "body": "submitting check one x current behavior using aot compiler one forgets specify given component get error runtime looks something like following expected behavior ideally error message would point possible causes issue add", "num": "12678", "d": "11/2016"}, {"title": "upon refreshing browser urls containing hypen going angular routeprovider directly requesting server", "body": "submitting check one x current behavior using mean stack jade html templating developing project since using jade routeprovider goes server rendered things absolutely fine recently added authenticating request basically started using jwt token based authentication requesting anything server interceptor attaching authorization header first middleware protected apis verifying token present authorization header present proceed else send authorization error mentioned title question urls containing hypen two words increase readability eg templateurl pathtofile url working fine user going normal flow getting url problem arises user comes page hits browser refresh button gets error authorization header set research happening found answer angularjs intercepting direct requests address bar according answer others understood refreshing browser makes direct request server nt go angular routes thus interceptor attaching authorization header request header getting called suggested link workaround auth verification fails make call donot wish user refreshed page ideally get back page pressed refreshed stuck also another thing ie remove hyphen make one word ie templateurl pathtofile everything works expected even user hits refresh button first going angular router interceptor attaches authorization header goes make get request template wondering problem using hyphen urls however wish remove hyphens already used many places also feel good two words needs displayed together url making camel cased finally two questions load page user hit refresh instead redirecting login url problem explained occurs hyphenated urls problem url expected behavior refreshing browser request go authinterceptor minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12677", "d": "11/2016"}, {"title": "tour heroes tutorial appcomponentts moduleid property requirement", "body": "submitting check one x current behavior tutorial app displays loading message moduleid property missing expected behavior documentation would instruct student add moduleid property app would load correctly minimal reproduction problem instructions adding styleurls property described routerlinkactive directive section app displays loading message see two problems first tutorial corrected second way diagnosing problem presented motivation use case changing behavior tutorial problems make harder learn angular please tell us environment nodejs npm angular version browser chrome xx ie xx language typescript xx node aot issues", "num": "12673", "d": "11/2016"}, {"title": "dynamically add controls reactive forms", "body": "bug report gt search github similar issue pr submitting feature request support request gt please submit support request instead see current behavior dynamically added controls responsive expected behavior dynamically added controls behave like regular controls minimal reproduction problem instructions order dynamically create form unknown objects trying solve limitation created following recursive function basically going patched object create controls form nt exist working plunker see name created beginning works well see changes however address controls created dynamically try changing see changes recorded motivation use case changing behavior need dynamically add controls reactive form angular version browser chrome nt test others language typescript", "num": "12672", "d": "11/2016"}, {"title": "async host binding longer works", "body": "submitting check one x current behavior angular defining async host binding component throws directive parse error saying async pipe found expected behavior async host binding work normally minimal reproduction problem instructions following definition component behavior occurs import component angularcore import observable rxjsobservable import select import fadeout loadinganimations component selector loading templateurl loadingcomponenthtml styleurls loadingcomponentscss animations fadeout host fadeout iscomplete async export class loading select loading complete private iscomplete observable motivation use case changing behavior behavior changed previous version please tell us environment windows webpack build process angular version browser chrome language", "num": "12671", "d": "11/2016"}, {"title": "select amp amp support", "body": "submitting check one x current behavior nt take nothing matches expected behavior something like trigger motivation use case changing behavior things right p cc vicb", "num": "12670", "d": "11/2016"}, {"title": "aot compilation fail upgrading angular", "body": "current behavior angular using dev build npm run build prod build npm run prod build prod build npm run ngc amp amp nodeenvproduction npm run build ngc ngc p tsconfigaotjson build gulp build using gulpfile starting build tsloader using typescript asset size chunks chunk names appjs kb emitted app vendorjs kb emitted vendor error ngfactory angularcommonsrcdirectivesngswitchngfactoryts module parse failed angularcommonsrcdirectivesngswitchngfactoryts unexpected token may need appropriate loader handle file type import angularcoresrclinkerview export class wrapperngswitch context changed boolean private ngfactoryappcomponentshomehomengfactoryts ngfactoryappmainngfactoryts appappprodts expected behavior angular using dev build npm run build prod build npm run prod build prod build npm run ngc amp amp nodeenvproduction npm run build ngc ngc p tsconfigaotjson build gulp build using gulpfile starting build tsloader using typescript asset size chunks chunk names appjs kb emitted app vendorjs kb emitted vendor finished build minimal reproduction problem instructions provided url repo steps reproduce bug change angular version packagejson ii yarn iii npm run prod build github repo issue motivation use case changing behavior building angular production please tell us environment macosmacbook pro mid angular version angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12669", "d": "11/2016"}, {"title": "rangeerror maximum call stack size exceeded caused adding table", "body": "submitting current behavior introducing table causes application crash showing uncaught rangeerror maximum call stack size exceeded expected behavior component display table without issue minimal reproduction problem instructions tested times using visual studio quickstart found using web api template running app aspnet mvc razor view rather blank project nt think related simply created new app checked working added table firstname lastname age jill smith eve jackson removing table restabalizes app adding back crashes app way move forward boss angry gt lt motivation use case changing behavior need able display basic tables web applications please tell us environment windows visual studio update node npm typescript visual stodio nothing else special except jetbrains resharper installed using web api template running app aspnet mvc razor view rather blank project nt think related angular version browser chrome edge language typescript", "num": "12668", "d": "11/2016"}, {"title": "profiler make easier access profile debug mode", "body": "ref profiler enabled via probably available right away ng namespace app component", "num": "12667", "d": "11/2016"}, {"title": "allow router configuration preservequeryparams true default", "body": "currently router allows individual navigation preserve query params eg google common query param feature request allow router configured behavior takes place navigation", "num": "12664", "d": "11/2016"}, {"title": "aot fails using interpolation values pug", "body": "compiling project using pug template engine fails following error interpolation values note unlike angularangular separate html elements reproduce fork adds aot replaces home html template pug template run edit note works perfectly fine browser using", "num": "12663", "d": "11/2016"}, {"title": "errors running", "body": "submitting current behavior running command encounter two different problems appmodulets file contains couple function calls relating redux process chokes following error error error encountered resolving symbol values statically function calls supported consider replacing function lambda reference exported function resolving symbol appmodule c srcappappmodulets resolving symbol appmodule c srcappappmodulets error circumvented commenting function lines appmodulets using sass process errors following error import statements error compilation failed resource file found c srcappstylescommon error circumvented commenting css import statements across application situations corrected indicated process runs intended expected behavior would expect process able handle situations without causing fatal error neither corrected causes resulting xlf file different seems process would far useful swallowed errors maybe warned minimal reproduction problem instructions put function call appmodulets import statement scss file using sass see errors motivation use case changing behavior really change behaviour improvement useful feature please tell us environment windows cygwin visual studio code npm angularcli webpack project everything current angular version browser relevant language typescript node aot issues", "num": "12661", "d": "11/2016"}, {"title": "viewcontainerref createcomponent fails certain conditions", "body": "submitting check one x current behavior inserting component dynamically viewcontainerref createcomponent fail following conditions embedded view created given argument specified nodes embedded view used fill hole dynamically loaded component minimal reproduction problem instructions click fail button observe logs console also notice changing makes error go away also inserting another component makes error go away really looks like internal data structure corruption motivation use case changing behavior code similar one plunker user create modals users reporting errors angular version latest browser", "num": "12660", "d": "11/2016"}, {"title": "angular use", "body": "submitting check one x current behavior expected behavior minimal reproduction problem instructions motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx node aot issues", "num": "12659", "d": "11/2016"}, {"title": "error syntaxerror unexpected strict mode reserved word", "body": "hi guyz getting error creating build application using rollupjs tree shaking sure im wrong kindly help error", "num": "12657", "d": "11/2016"}, {"title": "accessing url attribute router class directly gives incorrect path", "body": "submitting check one x current behavior seems accessing router class url properly output actual url page however logging whole router object shows proper url code importing angular router class import component input oninit angularcore import router angularrouter private router router input toggle toggle constructor router router thisrouter router ngoninit void consolelog thisrouterurl consolelog thisrouter url path following logging thisrouter gives following notice expansion url attribute however logging thisrouterurl outputs expected behavior thisrouterurl output case minimal reproduction problem instructions motivation use case changing behavior right dirty workaround using windowlocationpathname ideal please tell us environment angular chrome version typescript", "num": "12649", "d": "11/2016"}, {"title": "imported forchild routes overrides forroot routes depends order imports", "body": "submitting current behavior import module overrides equal eg small example following module loaded needs module could using avoids conflicts prefixed defined trouble starts want use app must import whole oh imported overriden change order imports survive expected behavior order imports make difference minimal reproduction problem instructions right order wrong order motivation use case changing behavior never override please tell us environment linux angular version browser language typescript node aot issues", "num": "12648", "d": "11/2016"}, {"title": "add ability add parameters route route created", "body": "submitting check one x add ability manually add parameters route motivation use case changing behavior route config tenantid needs routes would like subscribe navigatestart event add id every route eliminates need manually every time routernavigate routerlink used since always makes sense place", "num": "12645", "d": "11/2016"}, {"title": "activatedroutesnapshotqueryparams undefined", "body": "submitting check one x current behavior url statement results undefined console expected behavior console display querystring parameter motivation use case changing behavior using azure active directory uses qs pass authentication token back referrer need capture route accordingly please tell us environment windows anniversary update visual studio development angular version", "num": "12644", "d": "11/2016"}, {"title": "pressing enter key input focused clicks first button form", "body": "submitting check one x current behavior form element several inputs buttons input focused press enter key first button form clicked expected behavior pressing enter click first button minimal reproduction problem instructions motivation use case changing behavior form something like chips component allows adding token pressing enter input field please tell us environment mac webstorm webpack node angular version browser chrome firefox safari latest language typescript xx typescript node aot issues", "num": "12643", "d": "11/2016"}, {"title": "unit test ngfor rendered child components templates register changes", "body": "submitting check one x x bug report current behavior ngfor rendered child component templates change something clicked template change unit test expected behavior ngfor rendered child components templates would change something clicked template unit test minimal reproduction problem instructions test expectation pass nt indeed see order child components template test finished second value initial value instead initial value second value plunkr motivation use case changing behavior well sure child components templates always register changes unit tests whether initially rendered ngfor please tell us environment seems environmentindependent angular version", "num": "12642", "d": "11/2016"}, {"title": "router breaks referencing constant within component", "body": "submitting check one x current behavior constant defined parent directory application import constant try reference component router fails create component treats like invalid even though fine import constant file within component directory define within component file everything fine seems purely constant imported outside component directory running production router simply populate routeroutlet instead navigating away location causes router throw error outlet activated running attached plnkr error evident claiming component invalid route expected behavior would expect location constant declaration within filesystem bearing whether component valid according router words would expected router instantiate component define everything folder hierarchy component minimal reproduction problem instructions plnkr example open file see comment block different importdeclaration methods tried uncommenting either first two work expected direct declaration import file hierarchy trying use last one importing parent directory cause component get flagged error console indicates router sees invalid component motivation use case changing behavior nt change behavior much making behavior consistent attempted correct problem using opaquetoken also defined parent directory populated module providers component subdirectory still results behavior treating component invalid please tell us environment centos npm angular version angular router browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome safari language typescript xx typescript node aot issues", "num": "12641", "d": "11/2016"}, {"title": "ngcontent viewencapsulationemulated prevents styling child component", "body": "submitting check one x current behavior using component elements transcluded ngcontent styled component css file reproduced jit aot instance following button component used like template uibuttoncomponenthtml uibuttoncomponentcss styled element compiled like dom inspecting compiled declaration found button furthermore declaration compiled id parent component styled child component expected behavior template transcluded expected elements classed styled within context child component minimal reproduction problem instructions motivation use case changing behavior native shadow dom styling would work emulation provide close api possible native implementation please tell us environment macos atom npm liveserver angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview browsers language typescript xx ts node aot issues", "num": "12639", "d": "11/2016"}, {"title": "proposal new http apis whatwg fetch spec compatibility", "body": "submitting check one x problem hereinafter called angular http designed polyfill fetch api example documentation class currently angular http playing role polyfill spec class type definitions compatible spec major web browsers api angular users confused differences current behavior angular http fetch api polyfill proposal even nt match spec course think future apis aligned latest fetch api spec transparent polyfill since type definitions maintained typeswhatwgfetch package angular http use standard interface types eg class ngheaders implements headers ambient type implementations export ngheaders headers angular http protected semver proposal focuses next major version btw caretaker http cc robwormald", "num": "12638", "d": "11/2016"}, {"title": "incorrect encoding url path", "body": "submitting check one x current behavior colon url encoded expected behavior colon allowed unescaped url path makes url readable changed motivation use case changing behavior making url readable userfriendly angular version angularrouter browser chrome firefox language", "num": "12637", "d": "11/2016"}, {"body": "pls add repro", "d": "11/2016"}, {"body": "sorry sure ticket omitted updated", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "fixed", "d": "11/2016"}, {"body": "duplicate", "d": "11/2016"}, {"body": "chuckjaz everything look correct aot", "d": "11/2016"}, {"body": "dup", "d": "11/2016"}, {"body": "possible like see", "d": "11/2016"}, {"body": "ngtemplateoutlet provide similar kind feature able explore due proper documentation", "d": "11/2016"}, {"body": "templateurl want get template path input component nt work like u get template input component compiled template ans styles input resolved", "d": "11/2016"}, {"body": "said known compile time use", "d": "11/2016"}, {"body": "also related question formcontrol exported nt export formcontrolformcontrolname", "d": "11/2016"}, {"body": "problem number formatting depends currency locale let say locale default happen use want display r ie number formatting depend currency could please reopen issue angularangulario document better part note override locale add provider token", "d": "11/2016"}, {"body": "looking changelog sure may interest chuckjaz via", "d": "11/2016"}, {"body": "doxavore could give crack coming repository could clone see difference", "d": "11/2016"}, {"body": "attempting reproduce smaller sample much luck nt cyclical dependencies codebase aware many files import root module eventually around files count something terribly easy reproduce gt", "d": "11/2016"}, {"body": "cli webpack setup trace looks pretty suspicious appears repeatedly bootstrapping modules would point wackiness webpack build", "d": "11/2016"}, {"body": "custom webpack configuration webpack could certainly something wonky config see vs lt times change angular packages", "d": "11/2016"}, {"body": "robwormald sorry confusion sure happened profile one representative nt show code running multiple times taking minutes", "d": "11/2016"}, {"body": "hello exact way doxavore encoutered exact issue seeing screenshot performance issue aot compiler almost instant minutes using chrome timeline tool looks like time lost listwrapperflatten something changed tried remove metadataresolverjs angularcompilersrc replace empty array performance boost big even two custom directives entire app angularmaterial app chrome profiler", "d": "11/2016"}, {"body": "simplifia would mind sharing using modified angularcompiler packages project tried npm linking angularcompiler seem missing something", "d": "11/2016"}, {"body": "aleksclark edited nodemodules compiler file metadataresolverjs angularcompilersrc replaced edit debug purpose use customised version compiler question", "d": "11/2016"}, {"body": "seen app big modules nt know many components anymore open source unfortunately show plunker etc bootstrap latest working version stuck seems like infinite loop inside listwrapperflatten chrome dies prove infinite told pkozlowskiopensource gitter told reproduce via plunker open issue happy someone else facing track fix happy help testing possible fixes large scale app btw medical imaging workstation interested", "d": "11/2016"}, {"body": "simplifia thanks looking way directly test commits question lot managed get working screenshot preceding commit looks like definitely culprit hopefully chuckjaz give us insight work around perhaps patch", "d": "11/2016"}, {"body": "doxavore aleksclark able reproduce regression locally theory might causing one look try changes implied following diff changes makes branch lt var thisdirectivenormalizernormalizetemplate lt lt createdirectivemetadata lt return function return createdirectivemetadata lt var loader thisloaddirectivemetadata declaredtype issync lt loader lt transitivemoduledirectiveloaderspush loader let know change helps", "d": "11/2016"}, {"body": "chuckjaz yes takes call machine made changes directly local released", "d": "11/2016"}, {"body": "thanks move master get", "d": "11/2016"}, {"body": "excellent thanks quick help chuckjaz nt suppose insight release timeline may look like need also released versions painful us work", "d": "11/2016"}, {"body": "released today tomorrow", "d": "11/2016"}, {"body": "doxavore could help us create reproduction able detect regressions future would nee following directive component pipes need template class mydirective nt need body pipe name somename class mypipe nt need body ie need structure implementation code enough know regression book keeping code collect metadata ngmodules", "d": "11/2016"}, {"body": "tbosch terribly easy thing since combing cleaning outrenaming files may easier us script something generates representative set files test would caused issue open either take assuming want separate physical files appropriately simulate", "d": "11/2016"}, {"body": "doxavore care reproduces issue steps tbosch describes enough reproduce issue generating similarly shaped set modules also reproduce issue repro nt match project set files demonstrate issue sufficient easier generate one small number files start physical location module declaration nt matter shape number declarations imports exports even though issue resolved reported want make sure nt regress making substantial changes area also believe might indicative underlying issue fix reduces impact fix previous change nt gone exponential", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "davityle closing issue really actionable please reopen doc repo angularangulario could help narrow issue please reopen issue details time said still struggle use profiler please ping issue angularangulario best help", "d": "11/2016"}, {"body": "find name set u need types issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2016"}, {"body": "addressed anywhere official guide linked searching types nt mention say anything types missing something docs something nt docs repost stackoverflow question however guide published nt mention types least documentation bug correcting would probably help new users", "d": "11/2016"}, {"body": "find configuration typescript", "d": "11/2016"}, {"body": "ok looks like tsconfigjson angularwebpack guide linked missing least compiler options differences play around report breaking changes find anyone able update guide probably help new users lot", "d": "11/2016"}, {"body": "duplicate", "d": "11/2016"}, {"body": "try replacing input element", "d": "11/2016"}, {"body": "sure chuckjaz address issue", "d": "11/2016"}, {"body": "sorry", "d": "11/2016"}, {"body": "even better would could work custom element types parameters would return element instance instead wrapped would require thoughtful design would significant work internally typescript import somecustomelement somecustomelement import othercustomelement othercustomelement export class angularcomponent viewchild somecustomelement somecustomelement viewchildren othercustomelement others othercustomelement ngafterviewinit thissomecustommethod thisothersforeach gt owhatever", "d": "11/2016"}, {"body": "note many workarounds get type information without generic little verbose create alternate interface cast inline accessing inline custom interface", "d": "11/2016"}, {"body": "cc chuckjaz", "d": "11/2016"}, {"body": "webpack bug currently something like work around mention workaround docs issue fixed", "d": "11/2016"}, {"body": "dup", "d": "11/2016"}, {"body": "ca nt u use pipe", "d": "11/2016"}, {"body": "point support extracting string ts js code ie note feature still runtime near future plan support dynamic translations near future check ocombe", "d": "11/2016"}, {"body": "issue due inappropriate usage splice appropriate usage value index example undefined", "d": "11/2016"}, {"body": "valid formgroup index", "d": "11/2016"}, {"body": "nt think bug standard method insert items specific index index greater array length insert position responsibility ensure array appropriate length", "d": "11/2016"}, {"body": "indeed standard method however discrepancy written documentation actual behavior documentation explicit intended behavior expectation insert item position x able get position x later means insert new abstractcontrol given index array", "d": "11/2016"}, {"body": "expect", "d": "11/2016"}, {"body": "ok got", "d": "11/2016"}, {"body": "pretty easy implement difference former case override value index latter case insert value change breaking change think docs issue", "d": "11/2016"}, {"body": "replace existing control setcontrol make sense", "d": "11/2016"}, {"body": "mhevery robwormald asked could unpin version currently require change would require think risky unpin right rxjs stable following semver unpin require exact version angularangular use", "d": "11/2016"}, {"body": "igorminar going unpin next angular major planned done soon rxjs final", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "hansl understanding unpin soon rxjs final", "d": "11/2016"}, {"body": "master npm implies everyone using angular stuck march even upgrade angular major version means angular forever stuck rxjs correct think makes greater case loose versioning andor released rxjs final unreasonable deny every angular apps use final version rxjs", "d": "11/2016"}, {"body": "like concerns addressed least person issue closed talk misko tomorrow reopening", "d": "11/2016"}, {"body": "pls add repro", "d": "11/2016"}, {"body": "dzmitryshylovich reproduction clone repository run run see differs flag run works", "d": "11/2016"}, {"body": "easily create directive", "d": "11/2016"}, {"body": "thanks implemented way thought useful inside angular framework", "d": "11/2016"}, {"body": "found even interesting behavior see clear template changes add add clear add add see strange behavior instance changing depending number rendered items think top one time", "d": "11/2016"}, {"body": "duplicate", "d": "11/2016"}, {"body": "thanks reporting continue track existing issue closing duplicate", "d": "11/2016"}, {"body": "need use u inputs inside explanation", "d": "11/2016"}, {"body": "duplicate indeed thnx dzmitryshylovich", "d": "11/2016"}, {"body": "pls provide repo reproduction", "d": "11/2016"}, {"body": "dzmitryshylovich remove run tests run", "d": "11/2016"}, {"body": "issue angulartscwrapped related karma settings rearranging library loading excluding trick also updated plinkr repo new settings", "d": "11/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2016"}, {"body": "dzmitryshylovich solved problem dummyarray length", "d": "11/2016"}, {"body": "apologizies please find dependencies application structure based lazy loaded issue tickets module lazy loaded ticketlistcomponenthtml component holds modal printpopcomponenthtml printpopcomponentts import component oninit viewchild output input eventemitter angularcore import modaldirective import ticket ticket component selector ksprintpop templateurl printpopcomponenthtml styleurls printpopcomponentcss export class printpopcomponent implements oninit private printtitle string private balance number private taxparts number constructor ngoninit partially resolved following comment backdrop", "d": "11/2016"}, {"body": "duplicate", "d": "11/2016"}, {"body": "please fix selector customcomponent", "d": "11/2016"}, {"body": "also first propery occurance input get selectedsection number return thisselectedsection set selectedsection value number consolelog setter called thisselectedsectionvalue", "d": "11/2016"}, {"body": "dzmitryshylovich interesting found removing getter also fixed nt expect getter work", "d": "11/2016"}, {"body": "zoechi decorators attach metadata property given name nt really matter setter getter", "d": "11/2016"}, {"body": "fixed selector plunker placing setter getter code works also original project however old code worked upgrade angular possible something could changed versions started require declared first occurence rather occurence case suggest changing cookbook page imho way described suggest annotation needs setter", "d": "11/2016"}, {"body": "please open issue cookbook", "d": "11/2016"}, {"body": "old code worked upgrade angular u reproduce older version might regression", "d": "11/2016"}, {"body": "error reproduced code works even place annotated setter unannotated getter", "d": "11/2016"}, {"body": "code works even place annotated setter unannotated getter update title description attach repro pls thx", "d": "11/2016"}, {"body": "ca nt get work plunker configjs systemconfig use typescript compilation transpiler typescript typescript compiler options typescriptoptions emitdecoratormetadata true paths npm map tells system loader look things map packages defines app package packages app main maints defaultextension ts rxjs defaultextension js seems files unpkg get forbidden", "d": "11/2016"}, {"body": "nt think anything angular think fact using typescript prerelease appears regression surprising since appear lot work getterssetters switch latest current release write nov ts original code works plunker stripped plunker example closely reveal problem follow readme see changing typescript version controls outcome open toggle typescript version see code works fine decorator second property method treating typescript bug angular angular documentation error filed typescript issue", "d": "11/2016"}, {"body": "right nt noticed still stable published npm normally downloaded without actually enabling prerelease options thanks creating issue typescript", "d": "11/2016"}, {"body": "actually u saying u want true false time nt make much sense correct usage", "d": "11/2016"}, {"body": "thnx dzmitryshylovich totally right closing since works expected", "d": "11/2016"}, {"body": "wait issue real fix example pkozlowskiopensource", "d": "11/2016"}, {"body": "issue ngclass works extended explanation", "d": "11/2016"}, {"body": "yes see bad got around issue extracting common component class switching conditionally parts nov eric martinez notifications githubcom wrote issue ngclass works extended explanation comment receiving authored thread reply email directly view github mute thread", "d": "11/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2016"}, {"body": "ddint get stackoverflow", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "pls add repro plunkr ca nt reproduce", "d": "11/2016"}, {"body": "seems navigating using code routernavigate trying change queryparam dynamically might something wrong however approach worked older versions way tell routerlinkactive ignore queryparams", "d": "11/2016"}, {"body": "guess introduced way tell routerlinkactive ignore queryparams nope might something wrong however approach worked older versions worked nt compare query params similar", "d": "11/2016"}, {"body": "dzmitryshylovich works also metadata typescript statically analyzable", "d": "11/2016"}, {"body": "nvm sorry past midnight already known issue default imports fixed soon", "d": "11/2016"}, {"body": "ok thx closing", "d": "11/2016"}, {"body": "missed important part issue minimal reproduction problem instructions plnkr", "d": "11/2016"}, {"body": "unable reproduce issue plunker need test office environment next week", "d": "11/2016"}, {"body": "sorry issue typo initiating variable state class contained typo", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "dzmitryshylovich guess plunkr start new repo already built project cant add files", "d": "11/2016"}, {"body": "sorry nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information", "d": "11/2016"}, {"body": "pls add repro use starting point", "d": "11/2016"}, {"body": "problem normal webpack builds run fine test run karmajasmine exits thats directive remove completly everything runs fine directive created new upgradecomponent import helppopovercontroller helppopovercomponentctrl import directive elementref injector input angularcore import upgradecomponent angularupgradestatic component export class helppopover implements ngicomponentoptions public template require helppopovertemplatehtml public controller helppopovercontroller public controlleras vm public bindings redhelppopoverpageid lt upgrade directive selector redhelppopover export class helppopoverdirective extends upgradecomponent input redhelppopoverpageid string constructor elementref elementref injector injector super redhelppopover elementref injector angular", "d": "11/2016"}, {"body": "okay got least running changed specs green another exception thrown test run ignore moment unhandled promise rejection could compile helppopoverdirective component zone task promisethen value error error could compile helppopoverdirective component assertcomponent runtimecompilercreatecompiledhosttemplate arrayforeach native arrayforeach native runtimecompilercompilecomponents createresult zonedelegateinvoke zonerun zonedelegateinvoketask zoneruntask drainmicrotaskqueue error rejection error promise zoneawarepromise zonesymbolstate zonesymbolvalue error zone zone properties object parent null name zonedelegate zonedelegate taskcounts zone parentdelegate forkzs forkdlgt interceptzs interceptdlgt invokezs invokedlgt handleerrorzs handleerrordlgt scheduletaskzs scheduletaskdlgt invoketaskzs invoketaskdlgt canceltaskzs canceltaskdlgt hastaskzs hastaskdlgt task zonetask runcount type microtask zone zone properties parent name zonedelegate source promisethen data undefined schedulefn undefined cancelfn null callback function invoke function newterminal object headid newheadid detailsheadid newdetailsheadid result contact patientid undefined type undefined id could save item location ismainlocation undefined abbr undefined name undefined desc undefined customkvdt false episodetypes object false false false false kvsection undefined id test", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "yes rather big application digging deeper issue looks whole ngmodule created multiple times probably something lazyroaded routes checking", "d": "11/2016"}, {"body": "closing since seems issue elsewhere", "d": "11/2016"}, {"body": "looks like bitten upgrading angular router", "d": "11/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information", "d": "11/2016"}, {"body": "dzmitryshylovich understand newbie ask help understand source code open issue patch pr right github repodeveloper", "d": "11/2016"}, {"body": "ok understand related zonejs close issue open right repo", "d": "11/2016"}, {"body": "see isse", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "dzmitryshylovich thanks want know workaround ever follow workaround get error resourceloader implementation provided would like provide suggestions guidances", "d": "11/2016"}, {"body": "issue tracker suitable support requests please repost issue stackoverflow using tag", "d": "11/2016"}, {"body": "ok thanks", "d": "11/2016"}, {"body": "duplicate", "d": "11/2016"}, {"body": "point aot compilation runtime compiler shipped browser thus works intended lazy load precompiled modules retrieve components", "d": "11/2016"}, {"body": "fault", "d": "11/2016"}, {"body": "looks like ribizli provided workaround may help updated plnkr", "d": "11/2016"}, {"body": "thanks vinckobb works", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information", "d": "11/2016"}, {"body": "without reproduction impossible us troubleshoot additionally sounds like howto question rather issue framework please take howto questions suggest provide plunker starter", "d": "11/2016"}, {"body": "suppose culprit line function returns desired string line omitted function standardencoding v return encodeuricomponent v replace replace replace replace replace replace replace replace replace standardencoding", "d": "11/2016"}, {"body": "set allowed query characters acceptable particular backend subclassed provided argument urlsearchparams docs intentionally un encode chrome encode everything example using native urlsearchparams", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "solved using webpack configuration works perfectly fine", "d": "11/2016"}, {"body": "close issue thx", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "nt load", "d": "11/2016"}, {"body": "understand details dont time handle want show im", "d": "11/2016"}, {"body": "workaround typescript file reexports ambient type must separate file reference update reference use reexport", "d": "11/2016"}, {"body": "worked seems totally unintelligible aot behaves like first time creates problems", "d": "11/2016"}, {"body": "see issue one", "d": "11/2016"}, {"body": "yes issue thought one closed though", "d": "11/2016"}, {"body": "closed angular router see following problem router navigate called deactivate guard returns false user fixed data guard return true router navigate called time guard called router navigation finished exception console", "d": "11/2016"}, {"body": "closed reopened case see top issue says open would choose issue since already comments explaining wrong see", "d": "11/2016"}, {"body": "closing dup", "d": "11/2016"}, {"body": "windowonbeforeunload used", "d": "11/2016"}, {"body": "issue using angular also wrong order using property", "d": "11/2016"}, {"body": "believe may following line map debug nodes element nodes kept may updated nodes moved around", "d": "11/2016"}, {"body": "would useful many places would nt limit ngif", "d": "11/2016"}, {"body": "allow ngif assign data local value think would better allow assign result async pipe local var", "d": "11/2016"}, {"body": "dzmitryshylovich think would better allow assign result async pipe local var pipes allowed would fit mental model", "d": "11/2016"}, {"body": "huge fan proposal encourages logic templates imho think logic resolved code better testabilityreusability cases think better use object default value manual rx subscription async pipe also think better remove repeated moving wrapping ngif rather putting individual bound field", "d": "11/2016"}, {"body": "imho enough agree thelgevold directive requires something existing inside templates source common pitfalls way feature helpful", "d": "11/2016"}, {"body": "structural directives", "d": "11/2016"}, {"body": "write ambiguous thing could happen use user userobs async correlates letit also source common pitfalls", "d": "11/2016"}, {"body": "olegdunkan", "d": "11/2016"}, {"body": "dzmitryshylovich ok aka alias stay ambiguous", "d": "11/2016"}, {"body": "possible work around issue deferring initial navigation angular bootstrapped change line manually initialise navigation", "d": "11/2016"}, {"body": "clear problem angular router initial navigation angular module bootstrapped following repercussions upgraded angular services available initial route navigation components created angular router may get recompiled angular bootstrap", "d": "11/2016"}, {"body": "tried deferring navigation slightly complicated repro actually causes another problem router url seems bouncingflickering back every time url changes repro steps click notice routed page blank click anywhere page triggering change detection component contents appear appapproutingmodulets change line appmaints manually initialise navigation import platformbrowserdynamic angularplatformbrowserdynamic import upgrademodule angularupgradestatic import router angularrouter import appmodule appmodule platformbrowserdynamic bootstrapmodule appmodule platformref gt const upgrade platformrefinjectorget upgrademodule upgrademodule upgradebootstrap documentdocumentelement phonecatapp platformrefinjectorget router initialnavigation wifi notice url flicker moment solution found remove angular component selectors thus angular angular component name", "d": "11/2016"}, {"body": "nt know related ca nt use animation inside conditional transclusion run plunker example freeze death nt really know causing change parameters make work special combinaison nt", "d": "11/2016"}, {"body": "transcluded component created part parent displayed element placed please elaborate bit content component rely elementref becomes null component removed dom nt get problem actually trying solve change would help", "d": "11/2016"}, {"body": "docs component lifecycle managed angular angular creates renders creates renders children checks databound properties change destroys removing dom understanding nt expect component instance exist part dom component using elementref face null initial condition false even initial condition true listen event condition turn false wo nt listen anymore event component element removed even condition becomes true wo nt never listen event anymore none called took elementref example guess could find scenarios", "d": "11/2016"}, {"body": "already explained", "d": "11/2016"}, {"body": "know following thread fact already explained github issue comment think still explained documentation nt change anything main motivation proposal get inherited parameters data routes", "d": "11/2016"}, {"body": "yes changed metadata version version automatically update version problem seeing produce version try use older angular version assumes version problem angular packages need updated time eg individually get issue using angularcli", "d": "11/2016"}, {"body": "tbosch issue trying use angular", "d": "11/2016"}, {"body": "bahodirk install globally could use one", "d": "11/2016"}, {"body": "general note readers metadata files nt commit metadata files public api see using directly might break future well using directly ie importing directly see linked doc", "d": "11/2016"}, {"body": "tbosch yes using one following steps described angulario cookbook packagejson", "d": "11/2016"}, {"body": "nt know even related version mismatches different modules project uses module getting ts file project contains interfaces nothing ng related certainly metadata files project compiled fine morning angular references locked nt guessing build server pulled clean npm install locally local builds started breaking well downgrading angular works fine try create repro think something broke agree op kinds changes nt feel like done patch level change", "d": "11/2016"}, {"body": "apparently referencing even working get error pull break everything updating fixes things causes regressions ca nt handle barrel files able previous version overall satisfied fact patch update causes many breaking changes guess fault shrinkwrapping", "d": "11/2016"}, {"body": "rubberduck thanks yes locked version therefore even old version compilercli pulls new version regarding issue described could file separate issue sorry errors create fix release hopefully today", "d": "11/2016"}, {"body": "package publisher nt know version angular consumer using yet ship metadata part packages make usable aot compilation makes metadata part public api albeit indirectly thus two choices lock packages order produce metadata usable consumers build latest stable release break users earlier semver way address situation introduce breaking change package angular peer dependency set gt see going version angular forces us introduce breaking change must breaking change welcome world thirdparty vendors", "d": "11/2016"}, {"body": "ca nt seem get builds work exact versions work together", "d": "11/2016"}, {"body": "update downgrading everything seemed work", "d": "11/2016"}, {"body": "victormejia give us hours process fixing", "d": "11/2016"}, {"body": "thanks much tbosch", "d": "11/2016"}, {"body": "strange note working projects identical settings error one", "d": "11/2016"}, {"body": "bahodirk problem nt pin version fyi revert pr become part", "d": "11/2016"}, {"body": "tbosch thanks", "d": "11/2016"}, {"body": "confirm produces metadata version thanks tbosch quick reaction", "d": "11/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem actually think bug required issue template filled", "d": "11/2016"}, {"body": "lonyel angular uses function", "d": "11/2016"}, {"body": "please fill issue template provide reproduction", "d": "11/2016"}, {"body": "see pr vs issue", "d": "11/2016"}, {"body": "williamkoza solves part issue", "d": "11/2016"}, {"body": "stated issue template please provide reproduction issue unable help provide code runnable fashion likely dynamic compiler running compile components generally nonissue aot mode suggest moving aot mode already additionally exactly got line template", "d": "11/2016"}, {"body": "thanks explanation using angularcli build project far cli fully support aot understand wait cli aot support lines building configurable form auto saving input single value input take lines error message valid message saving progress message", "d": "11/2016"}, {"body": "problem built functions scroll events kind functions would expect see scroll basically events listened global level declaratively see beyond sure else could provide core library generally feel like kind thing better left party opensource libraries handle unlikely cover every single use case one might want quick google search reveals libraries exactly sort thing building extensions angular", "d": "11/2016"}, {"body": "scroll events useful comes animations including framework natively great thing scroll detection widely used many web developers uiux projects comparably important click keypress events", "d": "11/2016"}, {"body": "nt know mean natively angular already supports native scroll events like natively supports every browser event like click keypress specifically asking", "d": "11/2016"}, {"body": "keypress click events work every browser expected without including external library scroll event compatibility issue comes attribute names example case tried retrieve variable content worked firefox web browser chrome edge gt undefined", "d": "11/2016"}, {"body": "standardized", "d": "11/2016"}, {"body": "supported angular applications require hooking scroll event difficult create custom mechanism listens appropriate events", "d": "11/2016"}, {"body": "workaround patch released", "d": "11/2016"}, {"body": "never meant used elements text nodes ie still works update text nodes replace text content elements works intended use directly wo nt work webworkers webworker story complete yet also experimental important part custom render services still missing allow split services ui worker part see", "d": "11/2016"}, {"body": "tbosch renderersettext never meant used elements text nodes ie still works update text nodes replace text content elements works intended dom adapter use elementrefnativeelementtextcontent directly universal", "d": "11/2016"}, {"body": "browseradapter public api universal reaching private api space known issue working fixing universal vikerman jeffbcross", "d": "11/2016"}, {"body": "change introduced however already somehow nt update bundles correctly", "d": "11/2016"}, {"body": "worked another complex example seems problem goes away angular router also configured correct prefix makes think nt bug rather effect bad user configuration", "d": "11/2016"}, {"body": "implement applicationfactory create dynamic selector like typescript modulefactory selector string childmodule modulewithproviders componentfactoryresolver ideal solutions works", "d": "11/2016"}, {"body": "thanks suggestion certainly give try question allow widgets share di injector understanding bootstrapmodule created distinct branch injectors", "d": "11/2016"}, {"body": "sample implementation may add providers applications startup", "d": "11/2016"}, {"body": "fixed may try upgrading latest according changelog fix landed", "d": "11/2016"}, {"body": "yes confirm fixed thanks", "d": "11/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information", "d": "11/2016"}, {"body": "first one preflight request", "d": "11/2016"}, {"body": "thanks shame", "d": "11/2016"}, {"body": "zone likely needs patch moment http request fired response received whereas observabletimer trigger might worthwhile gate usage actual state changes avoid unnecessary logic evaluation result triggers situations like imo nt library bug", "d": "11/2016"}, {"body": "indeed ok ticks start end middle request still progress seems bit odd achieve expected behavior running request outside angular however running default checks entire component tree nothing happening seems bit wasteful case", "d": "11/2016"}, {"body": "please follow issue", "d": "11/2016"}, {"body": "cheers make sense keep tabs issue otherwise close issue", "d": "11/2016"}, {"body": "close issue rxjs issue", "d": "11/2016"}, {"body": "actually wo nt fixed rxjs releases fix angular updates peer dep mention another issue", "d": "11/2016"}, {"body": "u see angularcli projects use sass less instead css thing configuring webpack course also write custom template compiler service use instead current compiler bootstrapping modules platform little bit complex", "d": "11/2016"}, {"body": "able replace html jsp working templateurl supported angular cause issue near future", "d": "11/2016"}, {"body": "jsp thymeleaf serverside templating load templates demand runtime onebyone generate however want text file text file cutting lot optimization bundling including angular aheadoftime compilation angular philosophy heavily geared towards bundling compiling minifying everything single block deliver browser data bind need data services", "d": "11/2016"}, {"body": "wulfsberg said absolutely cause issues aheadoftime compilation strongly suggest", "d": "11/2016"}, {"body": "thank", "d": "11/2016"}, {"body": "stated issue template plunker reproduce required", "d": "11/2016"}, {"body": "plunker reproduce missing feature want plunkr", "d": "11/2016"}, {"body": "demonstrate problem try solve", "d": "11/2016"}, {"body": "lqbweb really issue define type use wherever want validate models outside form wrapper function added small virtue running validators unnecessarily change detection", "d": "11/2016"}, {"body": "seems like linked new zonejs release", "d": "11/2016"}, {"body": "ahh post issue", "d": "11/2016"}, {"body": "ok fixed using previous zonejs release anyone need one use zonejs bug resolved", "d": "11/2016"}, {"body": "workaround use previous version zonejs", "d": "11/2016"}, {"body": "released", "d": "11/2016"}, {"body": "works", "d": "11/2016"}, {"body": "pr introduced flaky tests bradyisom andor petebacondarwin look tests determine tests flaky come fix", "d": "11/2016"}, {"body": "fixed", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "dzmitryshylovich yeah absolute paths work fine problem comes used relative path necessary use relative path example case reusable module navigation bar connected components tree quite deep level handy provide variable path root", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "seems everything right according docs maybe missed something dzmitryshylovich manage see links look like", "d": "11/2016"}, {"body": "want use relative path change router configuration", "d": "11/2016"}, {"body": "think maybe missed somethingread docs get", "d": "11/2016"}, {"body": "duplicate", "d": "11/2016"}, {"body": "nt believe tests importing modules entry components attempting resolve works first time use modal service problem second time instantiate modal service old componentfactoryresolver still injected modal service", "d": "11/2016"}, {"body": "service never modify dom directly titleservice angular dom interactions uses renderer service also proposal use decorator", "d": "11/2016"}, {"body": "nt understand talk titleservice name title", "d": "11/2016"}, {"body": "yes true seen named titleservice article nevermind name titleservice still service talking already title tag hold page name nt find strange service modifying content tag without attribute append nt tag expected behavior case angular add tag behave without find cleaner something like ngtitle attribute tag calling service answer question leaving choice user", "d": "11/2016"}, {"body": "outside angular app u use directives", "d": "11/2016"}, {"body": "nt present angular create tag", "d": "11/2016"}, {"body": "existing service coming browserspecific platform freely dom manipulation assumes running browser access dom also need pedantic services touching dom feature might generic service operate higher abstraction level closing one nothing immediately actionable", "d": "11/2016"}, {"body": "bug reports plunker required minimal example reproduce issue stated issue template", "d": "11/2016"}, {"body": "ok", "d": "11/2016"}, {"body": "updated issue description provided plunker", "d": "11/2016"}, {"body": "chance get answer issue", "d": "11/2016"}, {"body": "via npm link known issue", "d": "11/2016"}, {"body": "dzmitryshylovich also may occurs different dependencies app lib example even deps versions lib inner nodemodules directory compilation still crashes updated repo see case case", "d": "11/2016"}, {"body": "also problem using di depends js reference using internally one reference angular codebase using ca nt use umd bundles use bundler force resolve correct references", "d": "11/2016"}, {"body": "supported least angular breaking change", "d": "11/2016"}, {"body": "known alternative way achieving thing exist", "d": "11/2016"}, {"body": "yet", "d": "11/2016"}, {"body": "dzmitryshylovich think refactoring code using later change code pointless anyone angular core chime depreciation notice", "d": "11/2016"}, {"body": "point talking deprecation long alternative sight guess least required supported browsers support css variables would nt consider good enough replacement still limiting", "d": "11/2016"}, {"body": "also deprecated chrome irrelevant emulates behavior nt depend browser support browsers chrome never supported", "d": "11/2016"}, {"body": "also deep deprecated chrome irrelevant emulates behavior nt depend browser support browsers chrome never supported confirm angular respect enforce constant browser behaviour regardless browser support", "d": "11/2016"}, {"body": "already try ie edge firefox never supported", "d": "11/2016"}, {"body": "hmm interensting thing tried change descendants false change changed behavior contentchild templateref looks like using try changing", "d": "11/2016"}, {"body": "yes aware inconsistency intention reason children descend default imagine querying one happens include probably want hand child query looking specific child descending useful nesting issue works intended fix", "d": "11/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2016"}, {"body": "case nt seen aot currently known limitations nt seen case explicitly mentioned might still relevant", "d": "11/2016"}, {"body": "could build failing object nt exported would work changed export const carouselanimates new carouselanimatesservice", "d": "11/2016"}, {"body": "worked put strings meta info", "d": "11/2016"}, {"body": "anyone help thanks", "d": "11/2016"}, {"body": "metadata statically analyzable call functions create objects etc", "d": "11/2016"}, {"body": "kevinlot nt think done never made http specification far concerned", "d": "11/2016"}, {"body": "left coment router lazy loaded module nt honor component provider list simmilar issue think", "d": "11/2016"}, {"body": "candeactivatedguard receives component instance maybe possibly resolver link resolver injector last parent component injector course necessary consider lazy modules", "d": "11/2016"}, {"body": "router changes tracked everything else regular changelog something else specifically missing", "d": "11/2016"}, {"body": "ah see works note anyone else comes across version numbers angularrouter things like angularcore bumped eg using angularcore use angularrouter look changelog comment thanks rob", "d": "11/2016"}, {"body": "worries indeed bit confusing pondering various solutions", "d": "11/2016"}, {"body": "tricky problem small help note top router changelog would helpful created pull request", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "dzmitryshylovich correct found boat async iterated objects though believe may valid cases subject see problems approach shown looks like like workaround rather solution less expressive got addition cluttering component instance temporary pairs nt look tidy async item provided input wrapped another observable pipe cleaner job applicable manually subscribed observables unsubscribed destroy something pipe takes care", "d": "11/2016"}, {"body": "sorry really clear useful thing expose internal implementation detail ngfor adding complexity ngfor case keyvalue iteration already deemed something nt really want support allows bring ngrepeat functionality plain objects cases iteration order nt matter feel like supporting destructuring expressions would solve case cleaner way argue going kind transform something observable far efficient component reaches template", "d": "11/2016"}, {"body": "robwormald understand official position support object iteration nt necessarily mean developers restrained implementing without total directive rewrite pipe explicitness obviously practical totally agree destructuring would look better context would require work parser hindrance destructuring syntax translate guess extensible would allow limited customization zero effort hand even export noninjectable may help nt feel comfortable adding new accessors nt break anything per se", "d": "11/2016"}, {"body": "internally nt use provider exactly zero effort provided provider get instance actually need refactor ngfor accept ngforrowfactory need call bunch times hindrance destructuring syntax translate template guess good point needs considering mhevery", "d": "11/2016"}, {"body": "perhaps refactoring use ngforrowfactory reasonable middle ground could provide whatever implementation like said likely introduce typesafe ngfor chuckjaz input would needed", "d": "11/2016"}, {"body": "wrong ngforrowfactory would great since using differs allows manage template think pipes would better stateful pipes expose properties template developer access model viewmodel created pipe guess falls apart multiple stateful pipes point developer losing predictability code since managing state template", "d": "11/2016"}, {"body": "would trick first thought available expression actually local variables available sure design error", "d": "11/2016"}, {"body": "extending way quite awkward since unclear could way report errors correctly example would expect accessing extended would legal nonarray passed expressing constraint typescript bit challenging since way overload type traits also nt need modify class extend selector syntax consider creating class instead different context object expects object directive selected present class could selector would allow something like allows reuse object differ perform special optimizations applicable object mode iteration", "d": "11/2016"}, {"body": "intentional behavior", "d": "11/2016"}, {"body": "dzmitryshylovich thanks post could nt find one", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "ericmartinezr thanks closed", "d": "11/2016"}, {"body": "already discussed times pls see technical details", "d": "11/2016"}, {"body": "technical data issue remains", "d": "11/2016"}, {"body": "remember pure class component view part incorrect important understand angular modify behavior component class angular creates host element represents templateview accesses component instance context also typechecking templates works", "d": "11/2016"}, {"body": "rob sure answer side think members component controller set private public accessed template view", "d": "11/2016"}, {"body": "definition must public nt angular opinion anything psuedocode version happening looks like ts component class mycomponent name string rob generated hostcomponent class generatedhostcomponentmycomponent context mycomponent new mycomponent detectchangesinternal thisrenderersettext thiscontextname generated hostcomponent hosts component instance accesses properties outside regular typescript semantics", "d": "11/2016"}, {"body": "ok tx clearing design perspective really hate expose class members public view accessing resort hack convention naming methods something like seems like back old days js named privates prefix underscore class mycomponent public tname string rob really private view need go convention anything private really public yachhhiiiii wo nt get help typescript accessing members", "d": "11/2016"}, {"body": "note nt explicitly mark anything public implied nt define something private prefixed conventions sort unnecessary entire point keyword typescript", "d": "11/2016"}, {"body": "yes know need public tx thing huge project today look component see bunch private methods members right away confidence control refactor delete go crazy becuase know everything accessing private method close within view controller public marked private worried touch break something else depending encapsulation kind gone public big contract world private well private longer case aot mark everything non private understand way seems technical limitation design feature would hope maybe decorator help", "d": "11/2016"}, {"body": "public marked private worried touch break something else depending encapsulation kind gone way think exactly thing changing public property indicator going update component template well contract component class controller template expressed fact public", "d": "11/2016"}, {"body": "guess need new decorator viewaccessible mymember typescript allow access template", "d": "11/2016"}, {"body": "adds huge amount complexity would require changes typescript basically wontfixworks intended final answer sorry", "d": "11/2016"}, {"body": "use rather nvm wrapper component nt extend user created component", "d": "11/2016"}, {"body": "protected wo nt fix aot issue", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "hauntedsmores clear describing please add minimal reproduce scenario using plunker otherwise issue report actionable closed", "d": "11/2016"}, {"body": "pkozlowskiopensource sorry havnt time make reproduction really simple though angular puts classes form input elements based validity ngprestine ngvalid nginvalid etc works set things like required pattern attributes recently confirmed dev google gitter server angular consider type attribute type email tel etc adds validation classes put input element type email enter email browser sees invalid angular add nginvalid class correctly", "d": "11/2016"}, {"body": "case duplicate", "d": "11/2016"}, {"body": "read angulario fisrt step", "d": "11/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2016"}, {"body": "access target property eventobject target htmlinputelement value property able following way always get eventobject always contain targetproperty nt think angularteam change current behavior would breaking change events need thrown value changed case want maybe manipulate value updated cancel whole event", "d": "11/2016"}, {"body": "thank feedback kevinglier unfortunately suggestion nt quite address issue eventtargetvalue still holds old value pointed scenario need new value obtain key pressed eventkey eventkeycode way obtain complete projected value target use adding eventkey end eventtargetvalue nt know user entering characters end input field inserting elsewhere input field p agree angular team nt make breaking change current behavior agree also benefits handling event model updated manipulate value updated cancel whole event good design way hook user input events knowledge projected value input field baffled finding good workaround without resorting jquery something like eventprojectedtargetvalue available keypress alternate keypressaftermodelchange event hook flip side ngmodelchange event object available way keypress alternative work ngmodelchange instead keypress allow way know whether essentially keyboardevent triggered otherwise programmatically somehow", "d": "11/2016"}, {"body": "oh thought targetvalue would contain new value found topic stackoverflow could use settimeout get new value inside keypressevent trying use input dosomething eventtargetvalue currently able test another way could formsmodule think callbacks get old new values still nt work need new feature guess", "d": "11/2016"}, {"body": "please provide plunker reproduce also think work", "d": "11/2016"}, {"body": "resolved solution use input instead keypress ngmodelchange pitfall nt know input nt see mentioned docs marking issue closed thanks help one", "d": "11/2016"}, {"body": "angularcli good client lowering barrier", "d": "11/2016"}, {"body": "related", "d": "11/2016"}, {"body": "bontscho please add plunker reproduces problem team capacity reproduce every issue based instructions", "d": "11/2016"}, {"body": "added plnkr hope helps", "d": "11/2016"}, {"body": "function replacement", "d": "11/2016"}, {"body": "corresponding error code use time matcher custom function define path route match optional parameters like described use case", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "duplicate", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "referenced references still could nt fix", "d": "11/2016"}, {"body": "use ionic currently works box bundling", "d": "11/2016"}, {"body": "closing x deleted issue template x provide reproduction issue x support question", "d": "11/2016"}, {"body": "think closest get supporting support closureslambdas bindings assign core common", "d": "11/2016"}, {"body": "pls add steps reproduce expected behavior", "d": "11/2016"}, {"body": "managed strip problem eliminate primeng game issue problem happening queried template template via structural directive workaround", "d": "11/2016"}, {"body": "anybody angular team looking update application angular bug thanks help", "d": "11/2016"}, {"body": "please least tell whether even considered bug feature vicb would like know whether wait fix announcement intentional change right find workaround make working workaround mentioned ribizli completely working case think reference problem thank", "d": "11/2016"}, {"body": "closing duplicate", "d": "11/2016"}, {"body": "bug systemjs file issue systemjs repo", "d": "11/2016"}, {"body": "oh ok", "d": "11/2016"}, {"body": "pls provide minimal repo reproduction", "d": "11/2016"}, {"body": "repo two branches checkout branch run run compiles fine gives mentioned error", "d": "11/2016"}, {"body": "case running ngc fail error output directory contains aot files nodemodules using typescript produces correctexpected output check project create correct output folder upgrade typescript retry see would really like get babel build process ts finally implements asyncawait emit blocking issue upgrading also seen closed issues reporting problem without solution eg", "d": "11/2016"}, {"body": "rubberduck repo reference uses passes since compiler never tries emit metadata see non projects factories", "d": "11/2016"}, {"body": "blaugold tried removing line see could reproduce posted could nt get error windows btw either case aot nt work ts", "d": "11/2016"}, {"body": "case similar rubberduck aot output folder contained folders folder", "d": "11/2016"}, {"body": "little debugging rubberduck problem one reasons seems line tscwrapped collectorjs tsnodeflagsexport undefined typescript corresponds line source", "d": "11/2016"}, {"body": "jimmytheneutrino thank hint made digging turns ts use instead opened pr first step migration goes merged could easily make final change showed draft pr imcottonangular", "d": "11/2016"}, {"body": "problem", "d": "11/2016"}, {"body": "dolanmiu would helpful reproduce plunker getting similar issue unsure related one", "d": "11/2016"}, {"body": "want nt know make plunkr", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "sorry added plunkr", "d": "11/2016"}, {"body": "tried looking getrawvalue formarray seems behave way", "d": "11/2016"}, {"body": "repro pls", "d": "11/2016"}, {"body": "updated plunkr", "d": "11/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information", "d": "11/2016"}, {"body": "hi must add issue angulario github project", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "williamkoza clicked link report issues footer website angulario", "d": "11/2016"}, {"body": "dzmitryshylovich ran sample code unfortunately javascript based syntax ie backgroundcolor nt working change backgroundcolor", "d": "11/2016"}, {"body": "ran sample code unfortunately javascript based syntax ie backgroundcolor nt working pls provide reproduction plunkr", "d": "11/2016"}, {"body": "angular write different work cases element div information", "d": "11/2016"}, {"body": "see", "d": "11/2016"}, {"body": "appears safari support symbol natively want polyfill corejs similar", "d": "11/2016"}, {"body": "error console indicates using runtime compiler eg angularplatformbrowserdynamic therefore actually using aot aot mode use platformbrowser call", "d": "11/2016"}, {"body": "ah okay got thought needing use quirk used example new docs apparently missed line would clarified anyway got working thanks", "d": "11/2016"}, {"body": "semirelated expected aot compilation require compiling code twice get working project make run run commands typescript file compiling big deal since least working would expected automatically done equivalent replacements first pass", "d": "11/2016"}, {"body": "bug lazy load page module use wildcard route say happen firefox webstorm angularcli node os angularrouter typescript", "d": "11/2016"}, {"body": "try adding webpack config", "d": "11/2016"}, {"body": "thanks prompt reply pringshia seen advice tried many proposed solutions perhaps path wrong breaks things add demo project clone reproduce issue clone load browser see issue ca nt seem get library repository rather included npm works fine clone one run go error", "d": "11/2016"}, {"body": "problem angular version work upgrade got error", "d": "11/2016"}, {"body": "component using peer dependencies angular", "d": "11/2016"}, {"body": "clydin could elaborate mean", "d": "11/2016"}, {"body": "possibly related", "d": "11/2016"}, {"body": "problem lazy loading designed split code fix easy since preload lazy routes bootstrap see fix would great could pass option allow preloading block bootstrap lone would return promiseall routes option set real fix better way bundle code lazy load pages rendering right everything hardcoded index page initial rendered page everything else split build system would create bundlessplits page also change values child module path parent module path", "d": "11/2016"}, {"body": "anyone else stumbles needs quick fix resolved stopgap guesses loads route based windowlocation would fleshed bit complex routing situation eg multiple outlets handles nested lazy routes single route param redirectto", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "sure go", "d": "11/2016"}, {"body": "pls add repro plunkr also see", "d": "11/2016"}, {"body": "evaluates false u see works expected", "d": "11/2016"}, {"body": "noticed however since input property number nt able pass nt want pass value simply would nt bind property case need pass value", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "okay understand issue thank help", "d": "11/2016"}, {"body": "typo forgot put options get method ca nt believe spent hours", "d": "11/2016"}, {"body": "similar problem try reuse translation key example translate monday ok cancel every time occurs template", "d": "11/2016"}, {"body": "similar issue existing translation keys would like reuse", "d": "11/2016"}, {"body": "maximeallex something thinking time implement seems restrictive sense applies globally may something like proposal better idea similar problem try reuse translation key nt point similar issue existing translation keys would like reuse nt get either", "d": "11/2016"}, {"body": "vicb existing application translations form ability enforce id would perfectly fit need would allow mapping existing ids vote solution", "d": "11/2016"}, {"body": "olemerdyfa understand use case typos amp local changes use case different sounds would abuse translation system whatever text template would taken account big picture problem proposed syntax would support use case", "d": "11/2016"}, {"body": "vicb detail understand well solution propose add another parameter prefixed parser take translation id react bit meaningasid seems restrictive sense applies globally agree purpose meaning translation id nt think good idea use two different compilation strategies project let angular generate ids templates give explicit ids others going complicate development maintainability global configurations perhaps global configuration check attributes warn developer one missing somewhere however ok kind things templates html car car car third example important implemented use case nt always need description meaning like close save button ok submit pull request feature", "d": "11/2016"}, {"body": "maximeallex ok would nice submit pr common use case excluding want fix typo source message", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "thnx ericmartinezr jamespacileo might use ts application restricted ts version using", "d": "11/2016"}, {"body": "thanks pkozlowskiopensource ericmartinezr mean ts version including supported raising apparently ionic framework stuck lt angular aot adds support thanks time", "d": "11/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2016"}, {"body": "also find hacks", "d": "11/2016"}, {"body": "activatedroute provided incorrectly yeap see", "d": "11/2016"}, {"body": "exact problem right", "d": "11/2016"}, {"body": "would want add selector routed component nt get problem trying solve", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "plunkr nt reproduce problem direct links views possible", "d": "11/2016"}, {"body": "add repro reference display de bug might useful copypasting", "d": "11/2016"}, {"body": "updated description describe minimal steps required reproduce easily reproducible repo uses angular version consistent verified", "d": "11/2016"}, {"body": "related", "d": "11/2016"}, {"body": "dzmitryshylovich close duplicate exactly issue", "d": "11/2016"}, {"body": "ngc offline compiler nt actually run browser sure anything actionable issue sure practical benefit change make code likely invalidate cached ngfactory files", "d": "11/2016"}, {"body": "robwormald sorry mistake referring angular jit compiler", "d": "11/2016"}, {"body": "repo angularangularjs", "d": "11/2016"}, {"body": "issue probably toolbar selector match ngcontent tags banner template vs original node thought matching original nodes would complex came override selector seen projection site html issue opened docs repo nt chance get yet would nice someone community could help us note ngproject could applied node would also get project controls area example", "d": "11/2016"}, {"body": "great thank much quick reply happy take documentation issue coming weekend provided someone nt beat", "d": "11/2016"}, {"body": "use case covered sure docs please check angulario well covered please open issue repo angularangulario thanks", "d": "11/2016"}, {"body": "check case", "d": "11/2016"}, {"body": "fix merged morning part next release", "d": "11/2016"}, {"body": "yep looks like issue", "d": "11/2016"}, {"body": "nice feature could possible also delay property query function delay property could added incremental staggering func example item query li style opacity animate style opacity add delay matching element pd perhaps asking current implementation way without touching func signature anyway using current implementation animations found missing part something like working lists things common case acutally less workaround something like feels like proper way also thank implementing async pipe extension also nt fit understanding animations life another domain", "d": "11/2016"}, {"body": "new method call way easier handle preparation styles site outside stagger used query place basic staggering support super tiny feature add likely go within release", "d": "11/2016"}, {"body": "eagerly waiting stagger method workaround currently using wait", "d": "11/2016"}, {"body": "u pls add repro plunkr", "d": "11/2016"}, {"body": "create new project ngcli add following approuting along creating dummy test component replace one created modify appmodule import routing module import testcomponentcomponent testcomponenttestcomponenttestcomponentcomponent import ngmodule angularcore import routermodule angularrouter ngmodule imports routermoduleforroot path component testcomponentcomponent enabletracing true exports routermodule export class approutingmodule", "d": "11/2016"}, {"body": "ref", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "cripes honestly search issue covered already miraculously nt find either two", "d": "11/2016"}, {"body": "see", "d": "11/2016"}, {"body": "read issue carrefully sure thing issue problem merged inputs available via decorators according cases inputs parent component present child component two components usable selector problem diffrent would almost reverse decorator child directive never available child directive inaccessible hand child directive accessible using selector parent directive worst completely remove directive decorator child directive still accessible template using selector parent directive case different merging inherited decoartors decorator child routeroutlet completely ignored worked beta versions know feel reason different issue may specific router outlet ideas explanations", "d": "11/2016"}, {"body": "issue issues related inheritance component recognized inherits another component addressed", "d": "11/2016"}, {"body": "ok seems problem different comment expose case", "d": "11/2016"}, {"body": "tbosch mhevery chuckjaz anything maybe expedite reusable animation plugins feature", "d": "11/2016"}, {"body": "could provide example work think works today import animate keyframes state style transition trigger angularcore export const backgroundanimation trigger backgroundanimation state focus style backgroundcolor white state blur style backgroundcolor grey transition gt animate export function hoveranimation delay return trigger backgroundanimation state focus style backgroundcolor white state blur style backgroundcolor grey transition gt animate delay import component angularcore import backgroundanimation hoveranimation utils component animations backgroundanimation hoveranimation class mycomponent", "d": "11/2016"}, {"body": "writing reusable library exposes animation definitions well components use tried refactoring code look like suggestion previously exporting class static functions run build library fails error animation used component metadata like import animexpandwidth constantsanimations component animations animexpandwidth library built angular", "d": "11/2016"}, {"body": "work improving error reason supported template substitution call line consider changing", "d": "11/2016"}, {"body": "oh thank idea could cause especially since typescript seems compile anyway confirm fixes use case tomorrow", "d": "11/2016"}, {"body": "seem fixed compiler also dislikes statements inside function blocks leave issue open case error message clarified", "d": "11/2016"}, {"body": "function must single statement need", "d": "11/2016"}, {"body": "nope nt linter trying put pointing case helps clarify things anyone else", "d": "11/2016"}, {"body": "created issue error message closing issue favor one", "d": "11/2016"}, {"body": "duplicate solution replace still possible non bindable elements", "d": "11/2016"}, {"body": "vicb thanks victor apologies duplicate nt find one yeah saw wonder someway future flag areas templates search sees initial let stay", "d": "11/2016"}, {"body": "think pr pending nt chance review yet", "d": "11/2016"}, {"body": "seems like root cause ng could please send quick fix pr adding check delete thanks", "d": "11/2016"}, {"body": "rejected would work inline templates", "d": "11/2016"}, {"body": "seems use activatedroutesnapshot freely inside resolve method resolver ngoninit called subscribe data changes transition state route inside handler maybe state route becomes completed imho needs clarification also use snapshot maybe bug", "d": "11/2016"}, {"body": "far know activatedrouteparams indeed changed routing actually complete subscribe actual router events using routerevents wait navigationend seems produce results looking see updated plunker", "d": "11/2016"}, {"body": "interesting documentation order events occur", "d": "11/2016"}, {"body": "klinki none could find might want open issue angulario repository feel like documented", "d": "11/2016"}, {"body": "really seems strange resolve data activated routes routeparams routedata updated new data component route still active case wanted navigate based data made mistake relative navigation processing routedata resulting routes relative old route resolver nt called resulting new routes everything generally messed think documentation really highlight processing activatedroutedata might best time actually update component unlike example since route actually activated yet course wait navigation end lose much advantage resolve component may flash updates cant win current design", "d": "11/2016"}, {"body": "serious mistake reproduction remove worked pls help", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "see similar error message issues one error message similar", "d": "11/2016"}, {"body": "issue building using webpack", "d": "11/2016"}, {"body": "similar error use template removed still got error wonder nesting components using contentchildren querylist thing differs components", "d": "11/2016"}, {"body": "issue", "d": "11/2016"}, {"body": "root cause using template directive like content children component element", "d": "11/2016"}, {"body": "hi next relase", "d": "11/2016"}, {"body": "update", "d": "11/2016"}, {"body": "also", "d": "11/2016"}, {"body": "maybe", "d": "11/2016"}, {"body": "vicb ericcarraway well problem want remove tag", "d": "11/2016"}, {"body": "similar issue empty path redirect basically redirect works display const fallbackroute route path redirectto feature const worksrouter route path feature component children path component one displays empty path const fallbackroute route path redirectto feature const brokenrouter route path component children path feature component", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "closing due missing reproduce scenario", "d": "11/2016"}, {"body": "u see already roadmap", "d": "11/2016"}, {"body": "dzmitryshylovich different referencing meeting notes", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "dzmitryshylovich working wanted know issue already thanks good plunkr bug appears aot compilation pretty difficult reproduce", "d": "11/2016"}, {"body": "exception read property appendchild null sounds similar", "d": "11/2016"}, {"body": "dzmitryshylovich using dynamic styles styleurls anything using alpha could components course", "d": "11/2016"}, {"body": "reason guess", "d": "11/2016"}, {"body": "error aot typeerror read property appendchild null appendchild webpack angularplatformbrowserbundlesplatformbrowserumdjs appviewrenderattach webpack angularcorebundlescoreumdjs appviewattachafter webpack angularcorebundlescoreumdjs viewcontainerattachview webpack angularcorebundlescoreumdjs viewcontainerrefinsert webpack angularcorebundlescoreumdjs viewcontainerrefcreateembeddedview webpack angularcorebundlescoreumdjs ngifset ngif wrapperngifcheckngif", "d": "11/2016"}, {"body": "use alertcomponent ngfor fails", "d": "11/2016"}, {"body": "create plnkr", "d": "11/2016"}, {"body": "prod mode", "d": "11/2016"}, {"body": "root error closing duplicate", "d": "11/2016"}, {"body": "anyone issue using changedetection changedetectionstrategyonpush changedetectorrefdetach detectchanges", "d": "11/2016"}, {"body": "sounds like", "d": "11/2016"}, {"body": "nt think case object created time navigate", "d": "11/2016"}, {"body": "loadchildren creates new di context services want share services across modules need put shared module import root module using forroot static method new sharedmodulets import ngmodule modulewithproviders angularcore import testservice testservice ngmodule export class sharedmodule static forroot modulewithproviders return ngmodule sharedmodule providers testservice rootmodulets", "d": "11/2016"}, {"body": "guojenman know problem di creates multiple objects components inside module", "d": "11/2016"}, {"body": "issue moment edited plunker module implementation example constructor crisis service display alert constructed navigate crisis center alert pops click item list click crisis list bottom alert pops", "d": "11/2016"}, {"body": "also seeing issue using services intercomponent communication lazyloaded modules forcing us stick version time checked version released today confirm issue still exists", "d": "11/2016"}, {"body": "similar issue moment using angular services declared providers root module instantiated components newly created route", "d": "11/2016"}, {"body": "exact issue services keep getting recreated components even though time service providers array root submodule running", "d": "11/2016"}, {"body": "problem everything worked flawlessly angular router upgrading angular router boom added constructor module could confirm even whole module instantiated multiple times provider declared within module module activated lazily inside approutingts included added statement appmodulets ngmodule", "d": "11/2016"}, {"body": "pls submit docs issues", "d": "11/2016"}, {"body": "sorry little bit confused noticed docs tag repository created issue docs repo", "d": "11/2016"}, {"body": "issue angular macos node problem running", "d": "11/2016"}, {"body": "problem works fine", "d": "11/2016"}, {"body": "seems like dep issue help would install", "d": "11/2016"}, {"body": "problem angularcli packagejson spoke hansl fixing need new cli release resolve issue", "d": "11/2016"}, {"body": "enough information provided missing repro fixes made latest release might help please try angular", "d": "11/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2016"}, {"body": "vicb issue aot compile", "d": "11/2016"}, {"body": "compiler available aot see", "d": "11/2016"}, {"body": "dzmitryshylovich solution problem", "d": "11/2016"}, {"body": "sunnylearn using runtimecompiler hacks add import compilerproviders angularcompiler platformbrowser compilerproviders bootstrapmodulefactory appmodulefactory provide standard way please nt forget nobody knows use workaround", "d": "11/2016"}, {"body": "tks", "d": "11/2016"}, {"body": "hi tried ur workaround met exception resourceloader implementation provided ca nt read url xxxx also researches find potential reason answers may works aot neither compiler custom resourceloader would like help thanks advanced", "d": "11/2016"}, {"body": "think design please see docs activatedroute contains information route associated component loaded outlet probably services supposed know anything routing purpose", "d": "11/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2016"}, {"body": "sorry nt understand problem reporting problem still exists please open new issue provide plunker reproducing problem describing difference expected current behavior use plunker template", "d": "11/2016"}, {"body": "nothing without repro please attach minimal one", "d": "11/2016"}, {"body": "hi vicb try duplicate issue plunker seems styleurls worked try explain code component loading styles stylesurl componentts dddddddd heroname details id heroid name export class herodetailcomponent input hero hero stylescss code folder structure", "d": "11/2016"}, {"body": "vicb", "d": "11/2016"}, {"body": "vicb css ca nt load testjpg according module path moduleid", "d": "11/2016"}, {"body": "vicb suggestions issue", "d": "11/2016"}, {"body": "vicb", "d": "11/2016"}, {"body": "abinayasubbiah added rendering file could post codes", "d": "11/2016"}, {"body": "yes added zonejs file appmodulets code import ngmodule enableprodmode errorhandler angularcore import browsermodule angularplatformbrowser import routermodule angularrouter import formsmodule angularforms import httpmodule angular import customcomponent customcomponentcomponent import appcomponent appcomponent ngmodule imports browsermodule formsmodule httpmodule declarations appcomponent customcomponent bootstrap appcomponent export class appmodule", "d": "11/2016"}, {"body": "abinayasubbiah nt provides details could post", "d": "11/2016"}, {"body": "indexhtml essential javascript angular systemjs seed maints import platformbrowserdynamic angularplatformbrowserdynamic import appmodule appmodule platformbrowserdynamic bootstrapmodule appmodule systemjsconfigjs system configuration angular samples adjust necessary application needs function global systemconfig paths paths serve alias npm nodemodules map tells system loader look things map app within app folder app src angular bundles angularcore npm angularcorebundlescoreumdjs angularcommon npm angularcommonbundlescommonumdjs angularcompiler npm angularcompilerbundlescompilerumdjs angularplatformbrowser npm angularplatformbrowserbundlesplatformbrowserumdjs angularplatformbrowserdynamic npm angularplatformbrowserdynamicbundlesplatformbrowserdynamicumdjs angular npm angular angularrouter npm angularrouterbundlesrouterumdjs angularforms npm angularformsbundlesformsumdjs libraries rxjs npm rxjs npm packages tells system loader load filename andor extension packages app main mainjs defaultextension js rxjs defaultextension js main indexjs defaultextension js", "d": "11/2016"}, {"body": "abinayasubbiah nt find codes posted use simpler implementation removing adding codes check issue import component angularcore component selector myapp template export class appcomponent hopefully work issue dependencies", "d": "11/2016"}, {"body": "please provide minimal repo plunker", "d": "11/2016"}, {"body": "vicb find plnkr link getting script error unhandled promise rejection set property customproperty undefined please refer screenshot", "d": "11/2016"}, {"body": "pb returns inpputs rename property binding name class field name used traverse path", "d": "11/2016"}, {"body": "vicb worked previous versions angular", "d": "11/2016"}, {"body": "abinayasubbiah coincidence never intended work", "d": "11/2016"}, {"body": "could please reopen issue docs repo thanks", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "chance array new array cd cycle", "d": "11/2016"}, {"body": "array updated mouseovermouseleave added plunkr", "d": "11/2016"}, {"body": "vicb indeed new array cycle changing nt help ejaury think root problem one thing another pretty much conflict easy solution problem would set element like case sounds like support request rather bug let redirect appropriate channel need assistance still believe bug please let us know", "d": "11/2016"}, {"body": "thanks skreborn", "d": "11/2016"}, {"body": "downgraded compilercli everything instead compileranimationparser error getting error", "d": "11/2016"}, {"body": "please add quick repro leave code necessary reproduce issue otherwise close issue thanks", "d": "11/2016"}, {"body": "ok large project working since april would relevant code looking", "d": "11/2016"}, {"body": "fwiw got issue project trying downgrade everything see dig info going", "d": "11/2016"}, {"body": "actually think got passed issue cloned angular quickstart tried building aot latest versions angular cli everything worked went back code removed nodemodules reinstalled everyting latest angular versions got passed issue think point versions different angular versions compilercli versions etc resulting communicating eachother one else error", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "modified existing simple repo made different issue run app ng serve click lazy link see fooservice constructor called twice nt change router rerun constructor called", "d": "11/2016"}, {"body": "could reduce repo things required demonstrating issue", "d": "11/2016"}, {"body": "ok deleted nt much pretty bare bones top level app component one lazy loaded child child default route loaded startup see consolelog message service constructor twice change router appears", "d": "11/2016"}, {"body": "seems running providers starting twice times times etc time go lazy loaded route started seeing effect watch network requests soon updated router version problems", "d": "11/2016"}, {"body": "got problem module constructor executed twice lazy loaded route plunker example console see log executed twice", "d": "11/2016"}, {"body": "exact problem described serhiisol upgrading angular router angular router", "d": "11/2016"}, {"body": "hi guys need start using new features formgroup blocked issue someone angular team advise resolved issue appears exist latest beta known workarounds something need change code regards tarek", "d": "11/2016"}, {"body": "attached angularcli project exactly reproduces bug see lazy route loaded leads module loaded twice shown consolelog file routerbugzip order run use npm install angularcli g npm install ng serve goto click call lazy link strongly depend angular team fixing bug quite amazed get response pls add repro plunkr", "d": "11/2016"}, {"body": "problem", "d": "11/2016"}, {"body": "kind bug put high priority think need patch update soon", "d": "11/2016"}, {"body": "thought one issue clearly let hope fix soon btw also another plnkr case modified tour heroes click heroes button see calls console", "d": "11/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2016"}, {"body": "guess could technically filed documentation issue since mention let slide", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "profiler", "d": "11/2016"}, {"body": "plunkr would bit difficult wondering way trace change detection mechanism find problem might come", "d": "11/2016"}, {"body": "plunkr would bit difficult provide minimal repository without repro actionable", "d": "11/2016"}, {"body": "ok understand prepare plunkr let know thanks", "d": "11/2016"}, {"body": "finally find problem came input using mdspinner give user feedback auto saving feature input used hidden smoother fade transition instead ngif mistake use hidden since mdspinner created hidden appears spinners alive cpu goes replace hidden ngif order one spinner time much better cpu almost used displaying forms expected", "d": "11/2016"}, {"body": "known limitation see opened issues work soon", "d": "11/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2016"}, {"body": "pls add repro ensure u call", "d": "11/2016"}, {"body": "similar problem router using back button user presses back view changes previous route url stays another press back updates url view next press back changes view url using router user clicks back router change url location skipped first afterwards behaves described strange edit behavior seems affect forward button well", "d": "11/2016"}, {"body": "actionable without reproduction usually problems back button u call routermoduleforroot time", "d": "11/2016"}, {"body": "dzmitryshylovich one project", "d": "11/2016"}, {"body": "inject routeparams routeparams angularrouteirouteparamsservice", "d": "11/2016"}, {"body": "dzmitryshylovich thank definitely looks like dupe one", "d": "11/2016"}, {"body": "duplicate", "d": "11/2016"}, {"body": "seems like progress issue", "d": "11/2016"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "11/2016"}, {"body": "see issue tracker suitable support requests please use stackoverflow tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2016"}, {"body": "please add support channel support question suspect issue need fully fill issue template use track item id ngfor", "d": "11/2016"}, {"body": "bug works currently everytime use async pipe creating new subscription independent see plnkr using operator see also issue proposes solution", "d": "11/2016"}, {"body": "still problem solution letter appear one time second letter appear ab written twice instance put one letter first change list inside ngif invisible", "d": "11/2016"}, {"body": "another solution using replaysubject case sure many subscriptions probably receiving time want insist bug nt take wrong observables async pipe work confusing sometimes think solved issue referenced first comment case operatorsobservables make magic happen note proficient observables probably someone else come better solution ps think couldshould documented free open issue website repo", "d": "11/2016"}, {"body": "thing came observable formcontrol map value result flatmap replaysubject still problem first time runs first letter input still see sync first time first letter input", "d": "11/2016"}, {"body": "bug support request doubts go gitter chatroom stackoverflow info github best place asking support questions see", "d": "11/2016"}, {"body": "indeed last plunker works well yes change issue support request earlier", "d": "11/2016"}, {"body": "duplicate", "d": "11/2016"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "sure nt navigate missing data", "d": "11/2016"}, {"body": "also wondering current resolve api designed properly understand idea returning promiseobservableany nonfalse value imho would better use promise observable handle errors returning false using promiseobservable way handling errors user wants resolve boolean variable could potentially false think current implementation impossible uses promiseobservable way handling errors would completely fine", "d": "11/2016"}, {"body": "thanks reporting issue however issue duplicate existing issue please subscribe issue future updates klinki design change please open separate issue feature request new design", "d": "11/2016"}, {"body": "chuckjaz already subscribed issue think different problem mean might related problem issue nt navigate issue send link related data propagated child components", "d": "11/2016"}, {"body": "chuckjaz see reason nt navigate nt call complete observable seen issue different one found one", "d": "11/2016"}, {"body": "fixed", "d": "11/2016"}, {"body": "nthcommit u close pls fixed", "d": "11/2016"}, {"body": "hello issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2016"}, {"body": "closing submitter deletedignored provided issue template provide reproduction reopen changes", "d": "11/2016"}, {"body": "code guard dialog component one used component selector ilgdialog templateurl dialoghtml export class ilgdialog implements oninit aftercontentinit onchanges output confirmresult new eventemitter requestconfirmation confirmqtn string promise tried observable first finding bug thisisconfirmation return promiseresolve true routes module standard scenario user edits form clicks cancel candeactivate works first time suppose user wishes stay form edits form tries leave gt time candeactivate nt work works", "d": "11/2016"}, {"body": "please provide plunker", "d": "11/2016"}, {"body": "guys really sure familiar plunkr publish repo github ok btw checked router problem still", "d": "11/2016"}, {"body": "edit since guys know better provide plunker repo app deleted ok repo app running find step repro main page guard implemented consolelog component inside candeactivate really fires see output console routing hopefully helps", "d": "11/2016"}, {"body": "actually encounted similar bug posted question thought guard result caching going issue guard resolves false value called anymore plunker guard evaluated every time plunker guard evaluated", "d": "11/2016"}, {"body": "nt fixing issues fix", "d": "11/2016"}, {"body": "application notice guard called second time try follow route even try execute route second time try follow another route guard called", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "let explain scenario precisely first route try route b causes candeactivate check returns false routing happens try route b action performed candeactivate call routing tot b try route c instead b step step candeactivate check performed", "d": "11/2016"}, {"body": "dzmitryshylovich related bug nt get", "d": "11/2016"}, {"body": "ericmartinezr right following piece code causes kind issues private schedulenavigation rawurl urltree extras navigationextras promise const prevrawurl thisnavigationsvalue thisnavigationsvaluerawurl null prevrawurl amp amp prevrawurltostring rawurltostring behaviorsubject scheduled navigations recent scheduled navigation check take account whether promise resolved false piece code new navigation added scheduled navigations queue", "d": "11/2016"}, {"body": "encountering exact scenario nt broken plunker yet basically looks like promise resolves false inside candeactivate guard runs seems guard returns boolean fine", "d": "11/2016"}, {"body": "problem candeactivate guard runs however issue also exists tour heros live example think additional plunkr really necessary", "d": "11/2016"}, {"body": "issu code understanding specifically related gards navigation scheduling addition comment part code also related private executeschedulednavigation id rawurl prevrawurl extras resolve reject navigationparams void const url thisurlhandlingstrategyextract rawurl const prevurl prevrawurl thisurlhandlingstrategyextract prevrawurl null const urltransition prevurl urltostring prevurltostring behaviour occure navigation triggered browser back button", "d": "11/2016"}, {"body": "ended stack overflow article serious issue brakes people authentication systems", "d": "11/2016"}, {"body": "one walkaround use return false canactivate force navigate came force last navigation router history one canceled therefore router actually try navigate expected", "d": "11/2016"}, {"body": "workaround candeactivate though", "d": "11/2016"}, {"body": "plunkr demonstrates issue click guarded component two dismiss alert click notice alert shown plunkr except router reverted version follow steps notice get alert every time click link", "d": "11/2016"}, {"body": "eeubank perfect demonstration workaround canactivate edit also works candeactivate", "d": "11/2016"}, {"body": "similar adboul workaround canactivate candeactivate worked around also using routestatesnapshot candeactivate component componenttwo route activatedroutesnapshot state routerstatesnapshot let componentcandeactivate alert deactivation blocked", "d": "11/2016"}, {"body": "glad searched issue tracker driving nuts hours problem also traced via breakpoints function referenced hope gets fixed soon seems absolutely simple way retrieve previous route route guard saw previous comment looks like easy way get previousnext route info good know", "d": "11/2016"}, {"body": "deactivate workaround nt seem work case return response prompt dialog via observable instead boolean", "d": "11/2016"}, {"body": "falx seems work promises well observales", "d": "11/2016"}, {"body": "plunkr observable would returned componentcandeactivate function since throw dialog user click unsaved changes wrong edit seems getting somewhere prompt dialog getting fired twice probably mistake code", "d": "11/2016"}, {"body": "falx seems work way", "d": "11/2016"}, {"body": "adboul thanks lot man got working thanks", "d": "11/2016"}, {"body": "unfortunately messing around morning nt found way fix without breaking bunch unit tests initial attempt fix problem patch function basically navigation fails restore previous navigation however said breaks several unit tests sure right solution causes events triggered expected basically creating new navigation event may need complicated also tried keeping string member variable previous url using comparison seems also break bunch tests", "d": "11/2016"}, {"body": "think attempt kind break logic router rejected navigation attempt still navigation attempt kept last navigation also anybody subscribe navigations would think new navigation fired case think solution could keep track resolvedreject navigation return current navigation promise pending something like know ispending promise property wrote logic", "d": "11/2016"}, {"body": "adboul yeah figured feeling really nt proper solution real issue current value really user currently since guard failed looking code sure see easy way work around without causing problems side effects however experienced codebase thought give shot learning experience", "d": "11/2016"}, {"body": "worries exact situation", "d": "11/2016"}, {"body": "note another side effect well page navigating page b guard returns router thinks page b however user still page guard page b user go page since current guard called definitely fact accurate representation user actually current point time", "d": "11/2016"}, {"body": "hope violating rules linking issue tracker suitable support requests try use instead example", "d": "11/2016"}, {"body": "dzmitryshylovich thank ngvalue worked instead value docs find ngvalue vs value differences use tour herous tutorial binding value ngvalue would nt think ngvalue would required think behaviour needs explicitly documented could please point", "d": "11/2016"}, {"body": "feel free file docs issues anything clear", "d": "11/2016"}, {"body": "sure right fix anyway reported issues must provide information asked template reopen still issue", "d": "11/2016"}, {"body": "duplicate", "d": "11/2016"}, {"body": "dzmitryshylovich thanks closing", "d": "11/2016"}, {"body": "issue tracker suitable support requests please use stackoverflow tag", "d": "11/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2016"}, {"body": "maybe relates request sanitization", "d": "11/2016"}, {"body": "cc mprobst rjamet", "d": "11/2016"}, {"body": "hi general case think nt included purpose hard reason locally security code especially thirdparty modules nt look mess global settings said sounds super annoying case specifically could share high level overview code knowledgeable android ionic nt seen content uris ionic doc android doc uris nt make much sense context finally lighter fix current angular recommend simple pipe checks url starts content marks input trusted", "d": "11/2016"}, {"body": "specifically could share high level overview code knowledgeable android ionic nt seen content uris ionic doc android doc uris nt make much sense context sure since android kitkat android apis return uris instance issue person angular ionic still beta hence lot people nt struggling yet go forums version see moderators suggest answer ultimately feel way developer customize urls considered safe specially kind use case angular promises deliver amazing mobile development experience think fairly reasonable expect native mobile integrations return urls might differ every day web urls btw urls consequence mediastore api introduced kitkat ref hear kind thing happens windows phones well", "d": "11/2016"}, {"body": "thanks explanation need assess whether generally trust rjamet week get back time recommend writing pipe write make sure validate url expected format trust url resource url", "d": "11/2016"}, {"body": "could please check latest builds probably already fixed use", "d": "11/2016"}, {"body": "vicb confirmed fixed", "d": "11/2016"}, {"body": "jsgoupil thanks testing reporting", "d": "11/2016"}, {"body": "assume relying loadedconfig private property thus meant used canload prevent preloading single event indicate preloading done different parts configuration preloaded user navigates app preloading supposed transparent emitting events would violate property closing issue implement want provide routerpreloader implement notion completion suitable application extend decorate existing router preloader define provider every lazyloadable module responsible certain part menu modules loaded instantiated providers construct menu think option preferable", "d": "11/2016"}, {"body": "vsavkin thanks explanation", "d": "11/2016"}, {"body": "please include small repro thanks", "d": "11/2016"}, {"body": "generally add maints appmodule tsconfigjson files listing appmodule ensure factory created compileroptions target module moduleresolution node sourcemap true emitdecoratormetadata true experimentaldecorators true removecomments false noimplicitany true suppressimplicitanyindexerrors true files appappmodulets ensure ngfactory created appmaints angularcompileroptions gendir aot skipmetadataemit true", "d": "11/2016"}, {"body": "thanks thelgevold playing order done trick", "d": "11/2016"}, {"body": "plane bump ts requirement next major release beginning next year still probably move bleeding edge note able use version ts gt app", "d": "11/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2016"}, {"body": "invalid according html spec", "d": "11/2016"}, {"body": "issue logged caselit bug case happens using", "d": "11/2016"}, {"body": "maybe reopen issue since commit reverted commit", "d": "11/2016"}, {"body": "extract placeholder text use", "d": "11/2016"}, {"body": "thanks tried foget", "d": "11/2016"}, {"body": "problems answers placeholders names way set placeholder names foxandxss looking use case one however would rather see solved adding description ie tools localziation tool actually undestand notation likely th text gets translated incorrectly better choise woul leave placeholds angular style like probably nt want translator mess html angular markup hopefully translator nt know anything htmlangular happy tools problem open ticket tools said opened ease tool support long stay placeholders", "d": "11/2016"}, {"body": "see point however find hard use comment approach help point translator see hello ownername sellername sees hello localization tool provides interface edit inject placeholder might happen like hello hello interpolation anyay get rid markup either localziation tools markup angular markup essential information lost hard translate even proper description comment reason use variable names xid use interpolationx", "d": "11/2016"}, {"body": "reason use variable names xid use interpolationx could expression variable fyi also plans add exemple interpolation", "d": "11/2016"}, {"body": "thank makes sense instruct developers add comment like interpolation name owner name seller localization tools shows text single line hello interpolation interpolation comment", "d": "11/2016"}, {"body": "maybe put behind flag enable new behavior default flag per component use old behavior", "d": "11/2016"}, {"body": "updates fixing bug uge issue", "d": "11/2016"}, {"body": "soyzamudio could please try check message id processed error thrown", "d": "11/2016"}, {"body": "exactly code throw", "d": "11/2016"}, {"body": "seems like guy missing translation probably root cause could please try add one manually report", "d": "11/2016"}, {"body": "duplicate", "d": "11/2016"}, {"body": "duplicate", "d": "11/2016"}, {"body": "nt issue related form group errors vs status", "d": "11/2016"}, {"body": "status calculated based errors", "d": "11/2016"}, {"body": "even child formcontrol status updated parent still make work even errors child controls merged parent know child control invalid", "d": "11/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "example", "d": "11/2016"}, {"body": "found solution due naming convention dynamic control row removed table table index reinitiated control name bound row nt change new row added name control duplicates caused issue working example", "d": "11/2016"}, {"body": "moizshabbir close issue pls resolved", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "ok upload code github account link kinda hate working plunkr never know import last version angular stuff code reallz simple project using layout core module try use layout home module remove loadchildren statement approuting import home module appmodule work try lazy load home module says layoutcomponent defined think problem tries lazy load coremodule still loaded something like", "d": "11/2016"}, {"body": "use template starting point", "d": "11/2016"}, {"body": "binarious maybe solve want", "d": "11/2016"}, {"body": "great thanks lot shall leave issue open expected behaviour", "d": "11/2016"}, {"body": "think bug creates new form context access think makes sense", "d": "11/2016"}, {"body": "subscribe would assume fire form submission fact stated docs well furthermore listen directive ngsubmit event notified user triggered form submission ngsubmit event emitted original form submission event intended listen root added docs childs groups nt make sense since wo nt fire", "d": "11/2016"}, {"body": "nt think submission propagated subgroups browser construct form element propagated subgroups goes reverse direction standard browser event delegation propagating upwards addition supporting would add additional complexity fairly weak benefits imo also adding bloat", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "looks like cli issue since worked starter sorry trouble", "d": "11/2016"}, {"body": "might ionic issue pls add repro plunker native element", "d": "11/2016"}, {"body": "created plunker native input element see console ever wrote point stisfy problem angular", "d": "11/2016"}, {"body": "please soon possible fix issue becaue able validate", "d": "11/2016"}, {"body": "plunker reproduce contain minimal code ca nt imagine code necessary reproduce issue actually feel safe assume bug code", "d": "11/2016"}, {"body": "zoechi wrote function blockcharwithdoteng contnum block alphabet charcter enter alphabet function block numeric value return binding input element might problem way binding function thing working angular angular broke verify console message enter alphabet block view reflect", "d": "11/2016"}, {"body": "angularcli please reopen repo", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "issue related typo template please reopen plunker", "d": "11/2016"}, {"body": "wow believe spent much time trivial error sorry trouble", "d": "11/2016"}, {"body": "fixed master see change test", "d": "11/2016"}, {"body": "duplicate intl related bugs", "d": "11/2016"}, {"body": "lot going plunker ngmodel async observables async pipe etc observations cd gets kicked async pipe timing issue going make getter return different values check plunker case specific would rather suspect asynchronicity culprit", "d": "11/2016"}, {"body": "plunker timing issue mention correct looks like one posted originally totally open idea blame see possiblyrelated issue sure expression updates correctly yet", "d": "11/2016"}, {"body": "pretty interesting depends position element template move top elements placed receive changes looks like state changed change detection cycle bug heh looks like properties updated compared internal loop seems design flaw loop check validation error gt false class added required set true got new value async pipe violation value changed middle detection interpolation check validation error gt true interpolation shows correct json value get similar result constantly changing property means use pipe fact impure pipe result within declaring component otherwise changes guaranteed propagate likely depend even position within component declaration", "d": "11/2016"}, {"body": "well guess makes sense cd must apply bindings sourcedom order though tbh still nt get second example works difference uses binding vs directive yeah status change midway setter ends calling since control required empty updates status invalid guess nt trigger new cd since dom event play naive approach taking custom validators wrap calls settimeout trigger another cd cycle feels hacky b nt work builtin validators ie typescript registeronvalidatorchange fn gt void thisonchange fn ngonchanges changes simplechanges thisonchange settimeout gt thischangedetectormarkforcheck thisonchange", "d": "11/2016"}, {"body": "processed last main loop directives components", "d": "11/2016"}, {"body": "cc igorminar petebacondarwin", "d": "11/2016"}, {"body": "cc jeffbcross", "d": "11/2016"}, {"body": "petebacondarwin jeffbcross issue merging docs class documented docs get propagated clues response extends body cced dgeni let know bug someone else thanks think dart docs angulardart options showhide inherited members would even better", "d": "11/2016"}, {"body": "oh misunderstood issue thought class documented actual problem appears classes included documentation", "d": "11/2016"}, {"body": "petebacondarwin could close issue create one issue dgeni repo", "d": "11/2016"}, {"body": "ironically correct repo angulario nov pm victor berchet notifications githubcom wrote petebacondarwin could close issue create one issue dgeni repo receiving mentioned reply email directly view github mute thread", "d": "11/2016"}, {"body": "reopen thanks", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "ya saw last night definitely helps txxxxx hopefully docs well soon take credit annoying rob making video lol", "d": "11/2016"}, {"body": "please report docs issue", "d": "11/2016"}, {"body": "tx", "d": "11/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2016"}, {"body": "would nice contributors angular would stack overflow answer support questions sure stack overflow users necessarily level information angular internals way bundling works build process example", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "thnx dzmitryshylovich", "d": "11/2016"}, {"body": "could provide plunkr reproducing issue use template starting point", "d": "11/2016"}, {"body": "vsavkin find plunkr put crisiscenter module clink menu see console says", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "link added original post", "d": "11/2016"}, {"body": "duplicate", "d": "11/2016"}, {"body": "dzmitryshylovich thanks closing one looks like cli problem", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "validators called nt", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "go", "d": "11/2016"}, {"body": "supposed fixed already see try master still throw", "d": "11/2016"}, {"body": "fixed master part next release note empty property bindings ignored throw error stay compatible older releases", "d": "11/2016"}, {"body": "thanks", "d": "11/2016"}, {"body": "error wasted hours working upgraded", "d": "11/2016"}, {"body": "activatedrouteparent allow get data params", "d": "11/2016"}, {"body": "zoechi seem expected behavior able access data without using parent imo", "d": "11/2016"}, {"body": "sounds like want data route specific data name different route levels would expected behavior case", "d": "11/2016"}, {"body": "story repeated one time good description docs router resolved data nt agree michaelchiche rules define get data absent question design design supposes componetless node data share children good whole data coming reached level flattened fashion bug exists new questions accessed risen see zoechi defiantly need api description detailed form", "d": "11/2016"}, {"body": "works intended rules inheriting params data resolved data derived params rules apply params data way emptypath route inherits parent params data params emptypath route result often uses parent params data route inherits parent params data parent componentless route component inject parent activated route nothing else gets inherited update api docs", "d": "11/2016"}, {"body": "thanks vsavkin", "d": "11/2016"}, {"body": "vsavkin thanks clarifications", "d": "11/2016"}, {"body": "vsavkin found rules nt describe access resolved data resolvers different behavior let using routeparentdata access data componentless node consumer resolver say route inherits parent params data parent componentless route try think needs clarification resolver case", "d": "11/2016"}, {"body": "vsavkin using nested routes also layouts maybe correct approach could nt find anything better routes form creates left navigation menu project defines child components displayed possible child components require project instance makes sense load using get child routes well workaround support scenario maybe would nice possible specify route inherit parents data parameters", "d": "11/2016"}, {"body": "klinki use get project children via dataproject leave code untouched simply use dataparentproject", "d": "11/2016"}, {"body": "olegdunkan well thing need data available already right could use cases nt treelevel data guess write tree traversing service would merge parameters data route levels using pattern quite extensively surprised supported angular update experimenting router little bit came conclusion use dataparent suppose mean use activatedroutesnapshot parent right data dataparent activatedroutesnapshot issue stream listen changes subscribe changes params example updated time", "d": "11/2016"}, {"body": "klinki yes pull project level deeper use simply via routedata example", "d": "11/2016"}, {"body": "olegdunkan well playing activatedroutesnapshot reliably used see means would traverse activatedroute parents subscribe parameterdata observables flatten data get need inherited data parent fields seems unreasonably complicated tricky", "d": "11/2016"}, {"body": "please add repro", "d": "11/2016"}, {"body": "sorry although reproduce extremely large project attempts pull specific code provide repro project failed reproduce behavior working would expect repro project closing bug", "d": "11/2016"}, {"body": "cschulz forget save plunker asking since one linked nt illustrate much maybe add info", "d": "11/2016"}, {"body": "updated plunkr example hope better", "d": "11/2016"}, {"body": "workaround could", "d": "11/2016"}, {"body": "cc juleskremer stephenfluin robwormald", "d": "11/2016"}, {"body": "apawn hi aaron zhang xiaofeiz googlecom angular pm china charge site paste errors met please btw angular team bought site long ago program site little bit date going update soon apawn xiaofeiz googlecom", "d": "11/2016"}, {"body": "hi \u6211\u6ce8\u518c\u7684\u90ae\u7bb1 mymeat \u6211\u7684\u6635\u79f0", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "could closed angular core team needs something", "d": "11/2016"}, {"body": "damoqiongqiu apparently everything control closing issue thanks", "d": "11/2016"}, {"body": "vicb thank right issue angular core", "d": "11/2016"}, {"body": "please provide repro ie git repo", "d": "11/2016"}, {"body": "sure vicb see clone run npm install run throws error", "d": "11/2016"}, {"body": "vicb time look alternatively switch back imports minute exercise switched relative imports hope shed light thanks", "d": "11/2016"}, {"body": "run ngc app issue", "d": "11/2016"}, {"body": "using angular cli tried aot compilation ng build aot works without issues vicb", "d": "11/2016"}, {"body": "also encounter problem importing angular component another nodemodule run app fine using imported component failed message github repo reproduce issue clone repo run run got error unexpected value coolcomponent declared module appmodule however running works without warning", "d": "11/2016"}, {"body": "going close issue seems cli issue please reopen notes build app great chances able extract translatable strings code path mostly provided cli provides wrapper around config sure status know supported weeks ago someone opened issue cli repo using cli people finding issue specify path tsconfig", "d": "11/2016"}, {"body": "nt know cli angular code well issue cli stack trace angular code error happens running cli fyi copied tsconfigjson root run tried using got error originally happens project use cli created demo using cli able reproduce error project", "d": "11/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2016"}, {"body": "nt support request list known property input need use html datalist html input needs link datalist id property list", "d": "11/2016"}, {"body": "dzmitryshylovich see judahh meantime probably use syntax", "d": "11/2016"}, {"body": "case attribute see info syntax solution mattdistefano suggested", "d": "11/2016"}, {"body": "list indeed attribute property used", "d": "11/2016"}, {"body": "see understood issue one referenced nt related maybe p anyway useful understand inheritance nt really work far", "d": "11/2016"}, {"body": "already following choices mark element query provide component new token query token eg const mytoken new opaquetoken mytoken component providers provide mytoken useexisting forwardref gt mycomponent class mycomponent", "d": "11/2016"}, {"body": "tbosch first technique nt seem work one things tried attempting use superclass approach selector seems get swallowed comes back undefined placed ngcontent sure second approach looks like define exactly components might expecting define providers rather accept whatever comes", "d": "11/2016"}, {"body": "multiple components provide token ie define token next place query component would like queried provides via token name really work could create example failed look", "d": "11/2016"}, {"body": "able get work providing name say token component would become ngcontent rather ngcontent short nt work nestedcmp replace ngcontent work latter case select tokens using contentchild contentchildren whereas former returned undefined seems appropriate work around nt seem obvious though may lack documentation makes", "d": "11/2016"}, {"body": "may also related closed issue", "d": "11/2016"}, {"body": "regular form angular nt involved need import formsreactiveformsmodule", "d": "11/2016"}, {"body": "hmm weird module component part already imports formsmodule done since created component question issue gone back removed component fact working loss explain happening perhaps worth noting component tested part upgraded angular module angular app however working nt know must still something else missing manage reproduce reopen correct setup apologize wasted time", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "bourey one issues solved", "d": "11/2016"}, {"body": "think either sample app put together one vsavkin recently updated use upgradecomponent", "d": "11/2016"}, {"body": "exactly none upgrades component test case", "d": "11/2016"}, {"body": "tried new release released moments ago still facing issue currently test case running demoapp still wondering whether bug whether guojenman something wrong please anyone elaborate", "d": "11/2016"}, {"body": "tried reproduce problem using get different error related webpack node configbuildaotjs concating libs concating libs hash version webpack time error entry module found error ca nt resolve ts homegkalpakdevtestupgrade", "d": "11/2016"}, {"body": "latest beta webpack longer appends loader loaders updating webpack config zip reuploading stay tuned", "d": "11/2016"}, {"body": "updated original post fixed webpack config also uploading post convenience testupgradezip", "d": "11/2016"}, {"body": "first nt need upgraded component listed entry component ie loaded part another component template still aot wo nt fully work directivewrapperbuilder fails detect presence prototype thus generated code never calls ngoninit links already compiled directive linking inserting compiled template dom disappointed issue affects lifecycle hooks etc easy verbose workaround add lifecycle hooks upgraded component detected aot compilation sure whether possibledesirable metadata collectors used collect metadata directivescomponents detect lifecycle hooks higher prototype chain suspect discussed maybe alexeagle knows", "d": "11/2016"}, {"body": "discussed synced tbosch indeed currently capture superclass code generation know type lifecycle hooks broader problem jit mode understands inherited lifecycle interfaces cases others tobias would like fix consistent way general guidance inheritance components explicit ngoninit workaround", "d": "11/2016"}, {"body": "thanks georgios alex works perfectly reason mentioned test case also work without implementing livecyclehooks", "d": "11/2016"}, {"body": "tl dr hook required ngoninit always ngonchanges bindings rely ngdocheck twoway bindings ngondestroy nt want risk leaky scopes rely technically necessary situations eg scope destroyed higher hierarchy something outside control upgraded component would recommend leaving works component rely hooks eg bindings cleanup destroy etc lifecycle hooks used ngoninit resolve bind required controllers controller instance call lifecycle hook run linking phase compiled template gets bound scope inserted dom call lifecycle hook ngonchanges update bindings controller isolate scope call lifecycle hook ngdocheck propagate changes twoway bindings ngondestroy destroy scope created componentdirective live call lifecycle hook depending features component relies might able get omitting hooks goes without saying info based current implementation may change future want safe implement forward lifecycle hooks components extend run aot mode", "d": "11/2016"}, {"body": "think inefficient regexp reproduce using different email regexps web example", "d": "11/2016"}, {"body": "regex inefficient accurate regex pick validates oddities usual email regexes even complicated", "d": "11/2016"}, {"body": "yeah right probably need debounce input", "d": "11/2016"}, {"body": "regex inefficient regexp inefficient", "d": "11/2016"}, {"body": "okay fine ineficcient nt think still debounce input suboptimal regexp would something else next time", "d": "11/2016"}, {"body": "nt think still debounce input please submit feature request reported yet close one report debouncing", "d": "11/2016"}, {"body": "interface meant angular purposes full fledged web worker support users write render services via rpc mechanism use", "d": "11/2016"}, {"body": "see", "d": "11/2016"}, {"body": "jit mode", "d": "11/2016"}, {"body": "thank clarification documented somewhere comparable solution aot mode posted guess current situation avoid using reflectiveinjector utilizing aot mode want provide good user experience", "d": "11/2016"}, {"body": "workaround simple add extension", "d": "11/2016"}, {"body": "issue cli provide command wrap details cli pass resource loader knows handle sass could please reopen issue cli repo cc hansl", "d": "11/2016"}, {"body": "kemsky thank workaround works include well though", "d": "11/2016"}, {"body": "vicb started implementation extractor angularcli solving issue sass mind behaviour compilercli implemented angularcli command went problem sass learned problem occurs extractor passes path resourceloader result following according sass specification possible import partials ignoring either prefix normally extension cases extractor passes incomplete path resourceloader solution might identify cases make resourceloader complete path prefix extension came big question extractor would need extract messages stylesheet possible mark messages cssscss file translated make sense ignore cssscss files actually made work resourceloader pretty aggressive solution due would affect cases sass imports wonder file exist make extractor stop processing rest solution simple would better fix compilercli project angularcli needs spawn execution", "d": "11/2016"}, {"body": "came big question extractor would need extract messages stylesheet possible mark messages cssscss file translated make sense ignore cssscss files extract anything style files style files loaded use code paths template compiler thinking special casing extraction would make code much complex valid reason extraction speed critical imo issue fix belongs angularcli long app able extract strings configuration make sense issue closed would better continue discussion angularcli issue", "d": "11/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2016"}, {"body": "ok suggested signature make sense since add returned case return value array suggest think", "d": "11/2016"}, {"body": "tried using formbuilder unless type dynamic addition group", "d": "11/2016"}, {"body": "clydin form dynamically build runtime said possible", "d": "11/2016"}, {"body": "figured checking people nt realize looking pr one thing noticed actually due changes control added existing name nothing happens may awkward using new methods controls would added others would nt", "d": "11/2016"}, {"body": "clydin good point suggestions handle scenario", "d": "11/2016"}, {"body": "one option run check first throw error least user feedback would make new method inconsistent existing singular version though changing existing one would cause api incompability issue", "d": "11/2016"}, {"body": "bzums thanks taking time create issue agree relatively common use case however adding multiple controls easy enough accomplish simple loop one line code pr example wanted add functionality api symmetry also add method complementary methods quite bit add public api something simple like keep api surface small possible reason decided add method framework time said certainly add utility method projects like use api ideas happy take look", "d": "11/2016"}, {"body": "duplicate", "d": "11/2016"}, {"body": "huh missed one search thanks", "d": "11/2016"}, {"body": "decorator force typescript emit metadata needed di otherwise types constructor arguments available runtime detail explained article", "d": "11/2016"}, {"body": "yeah pkozlowskiopensource explained details slack get basically decorator needed way typescript emits metadata includes type definition way know type fact suggesting transpiled code nt type thus nt know inject sad go back adding everywhere", "d": "11/2016"}, {"body": "mgechev maybe nice candidate codelyzer warn nt added exported class nt decorator already", "d": "11/2016"}, {"body": "yes thinking similar rule recently issue created markpieszak would open another one exact case", "d": "11/2016"}, {"body": "mgechev sure made one", "d": "11/2016"}, {"body": "confirm one makes test fail well tbosch something changed design sideeffect recent refactorings imo one could qualify regression nt breaking changes breaking changes existing tests", "d": "11/2016"}, {"body": "yes regression need apply attributes also use element provided user", "d": "11/2016"}, {"body": "expose everything want access component class something thinking improving future already pending feature requests repo closing", "d": "11/2016"}, {"body": "looks like", "d": "11/2016"}, {"body": "facing problem want contribute something motivation use case changing behaviour application divided two columns first one contains sidebar beneath action area outlet actions typical actions like save located second one main content area outlet primary actions area depends main content obviously customers pages want different actionscomponent e g customerseditactionscomponent actions outlet settings pages e g settingsactionscomponent user navigates wwwmyappcomsettings actually want router navigate wwwmyappcomsettingscore actions settingsactions per default wo nt work necessary normal users nt type auxroutesbracketstuff know type settings come settings type profile come profile years problem route would open actions outlet would empty application work expected thank", "d": "11/2016"}, {"body": "related", "d": "11/2016"}, {"body": "see", "d": "11/2016"}, {"body": "dzmitryshylovich yes probably connected issue suppose first deactivated segment child case absent", "d": "11/2016"}, {"body": "fixed", "d": "11/2016"}, {"body": "written", "d": "11/2016"}, {"body": "notes could complete list affected android versions probably use almost browser version", "d": "11/2016"}, {"body": "written yet written tests run pass android browsers", "d": "11/2016"}, {"body": "android tests running list afaik run systems described please reopen investigate thank", "d": "11/2016"}, {"body": "mhevery would possible test issue manually others affected platforms see valid issue used genymotion emulator factory state machines result would worth check listed versions market share android ecosystem", "d": "11/2016"}, {"body": "run test inside original android emulator android factory state google apis got exactly result described", "d": "11/2016"}, {"body": "using android emulator reproduce crash please open issue angular fully tested browsers saucelabs websites loads successfully please make sure load right polyfills application", "d": "11/2016"}, {"body": "mlaval thank help angulario issue created checking polyfills", "d": "11/2016"}, {"body": "mlaval checked see missing simple app modules angular indexthtml systemconfig baseurl skins systemimport distappmainjs afaik simple case shimminjs enough run app case something wrong", "d": "11/2016"}, {"body": "maybe found something get back soon", "d": "11/2016"}, {"body": "checked console log inside android browser found following someone idea causing", "d": "11/2016"}, {"body": "issue closed downvoted rxjs version still relies lot code based using observables keeping date bug fixes rxjs good", "d": "11/2016"}, {"body": "maybe waiting final release big headache angular requires specific version instead range suppose breaking changes nt know close rejected issue instead put milestone", "d": "11/2016"}, {"body": "vicb think reasonable issue closing without comment", "d": "11/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2016"}, {"body": "create example want add change detection happening dynamically created component created using must changes happened new release candidate", "d": "11/2016"}, {"body": "please reopen issue repro thanks", "d": "11/2016"}, {"body": "problem similar case host compile", "d": "11/2016"}, {"body": "please note app github repo works default configuration fail change returned type pizzaservice regina", "d": "11/2016"}, {"body": "also tried canactivatechild see branch withcanactivatechild github repo problem occurs canactivatechild guard never called second child path first child", "d": "11/2016"}, {"body": "remembered router stops first definition mathing path behavior normal close issue", "d": "11/2016"}, {"body": "contents nodemodules scanned compiled really contents angular modules referenced application latter case expected libs ship metadata files actual compilation template code done ngc big advantage angular compiler improves term speedsize generated output apps automatically benefits improvements across libs first ngc turns might long subsequent ones recompile needed faster", "d": "11/2016"}, {"body": "yes ones referenced sources strange angular ships ngfactory already compiled user aotcompile angular components distribute components also without ngfactory classes leaving users reasons distribution precompiled ngfactorystuff possible discovered ngc changes contents nodemodules got feeling something going wrong design ok made specifying gendir two folders created ngc containing compiled ngfactory content keeps untouched error also solved", "d": "11/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2016"}, {"body": "gets implemented test complain called jasmine async function eg using instead", "d": "11/2016"}, {"body": "cc juliemr wardbell", "d": "11/2016"}, {"body": "edited throw pending microtasks pending macrotasks ok calling detectchanges", "d": "11/2016"}, {"body": "noted probably breaking change likely users also injecting directivescomponents probably worked around currently creating helper utils working objects switching proper map would nice since gives ability iterate ordered manner free order insertion map ideally would weakmap unfortunately supported browsers support feature polyfilled", "d": "11/2016"}, {"body": "ideally would weakmap unfortunately supported browsers support feature polyfilled", "d": "11/2016"}, {"body": "dzmitryshylovich weakmap feature polyfilled browsers supported natively references held weakly unlike construct javascript minus weakset looking weakmap iterable benefit though perhaps map best construct desired support iteration natively", "d": "11/2016"}, {"body": "worked around using proxy nice say", "d": "11/2016"}, {"body": "pls add repro plunkr", "d": "11/2016"}, {"body": "working plunkr guess problem code sorry please close reopen really bug", "d": "11/2016"}, {"body": "sounds like code emits value runs outside angulars zone way angular nt run change detection afterwards causes effect routernavigate nt properly update page", "d": "11/2016"}, {"body": "first thing tried problem problem div routerlink bound empty array next click event routerlink click set div click callback called routernavigate inside wo nt work reason routerlink another scenario simply used routerlink instead click event removed routerlink works", "d": "11/2016"}, {"body": "meakyl please close issues next time resolved thanks", "d": "11/2016"}, {"body": "wondering native angular tools used angular sorry probably figure way ease transition guess people need please reopen something ready migrated cc petebacondarwin", "d": "11/2016"}, {"body": "still present async validators cancel previous validations input changed", "d": "11/2016"}, {"body": "dzmitryshylovich please read issue commenting saying using template driven form model reactive driven form using ngmodel input works anyway overrides value formcontrol", "d": "11/2016"}, {"body": "wow even trying understand talking ngmodel directive ngmodel input", "d": "11/2016"}, {"body": "likely animations callbacks running outside angular zone see", "d": "11/2016"}, {"body": "duplicate", "d": "11/2016"}, {"body": "snap bad nt realize already", "d": "11/2016"}, {"body": "provided", "d": "11/2016"}, {"body": "dzmitryshylovich thanks going close expected least work without router though", "d": "11/2016"}, {"body": "attrfor valid", "d": "11/2016"}, {"body": "support questions please use channels like ones listed contributing got question problem", "d": "11/2016"}, {"body": "michalstepien correct going close one support request btw another case", "d": "11/2016"}, {"body": "check issue related dup case already fix nt ignore comment", "d": "11/2016"}, {"body": "ah yes find looking exactly issue presumably fix thu nov pm eric martinez notifications githubcom wrote check issue related dup case already fix nt ignore comment receiving authored thread reply email directly view github mute thread", "d": "11/2016"}, {"body": "angular version pls add minimal plunker reproduction", "d": "11/2016"}, {"body": "production local comp problem", "d": "11/2016"}, {"body": "post plunker web api services database involved page problem enter click next step", "d": "11/2016"}, {"body": "elenaorel getting xml server used ffox json used chrome probably difference default headers sent nt sound like angularrelated issue", "d": "11/2016"}, {"body": "see ffox sending different accept headers vs chrome impossible say without code minimal reproduction scenario assume default accept headers different one browser another elenaorel got options specify desired headers change server config responds json case nt think much angular side going close one happy reopen new info surfaces", "d": "11/2016"}, {"body": "import injectable angularcore import travelprice state quotes quotesreturn addmessage sendmessage appmodels import headers http response angular import rxjsaddoperatortopromise import observable rxjsrx injectable export class apirequestservice private apigetprice apigetprice zipcode private apigetquotes apiquotes private headers new headers contenttype applicationjson constructor private http getprice zipcode string promise return zipcode topromise thisextractdata catch thishandleerror getquotes quotes quotes promise let data jsonstringify quotes return thishttp post thisapigetquotes data headers thisheaders topromise thisextractdata catch thishandleerror private extractdata res response let body resjson return body private handleerror error promise consoleerror error occurred error return promisereject errormessage error", "d": "11/2016"}, {"body": "pawel thank much help pointed right direction changed private headers new headers contenttype applicationjson private headers new headers contenttype restricted xml type webapiconfig file var appxmltype configformattersxmlformattersupportedmediatypesfirstordefault gt tmediatype applicationxml configformattersxmlformattersupportedmediatypesremove appxmltype thank", "d": "11/2016"}, {"body": "historypushstate fire onpopstate location object nt detect change workaround attach location change listener call navigate directly bootstrap platformbrowserdynamic appmodule documentbody footballapp ref gt consolelog beginning initial navigation const router refinjectorget router routerinitialnavigation", "d": "11/2016"}, {"body": "think either creating location bridge two location services notify least providing helper function hide workaround", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "iv understood patchvalue could lead undesired behavior formarray inside merging collection checking behavior match requirement case thanks btw looking like crazy issue already existing update yes works switching setvalue patchvalue also works perfectly custom control child formgroup patchvalue implemented thanks", "d": "11/2016"}, {"body": "also without guard", "d": "11/2016"}, {"body": "please provide plunkr reproducing issue use template starting point", "d": "11/2016"}, {"body": "hi vsavkin created plunkr could reproduce issue link anyway nt know related see console files lazy loaded individually plunkr js chunk app compiled via webpack eg angularcli still reproduce issue clone repository gif demo thank help", "d": "11/2016"}, {"body": "simplified example repository please check thanks", "d": "11/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2016"}, {"body": "works see", "d": "11/2016"}, {"body": "iv noticed abstract methods separate visible abstract also checked reason approach provide half contract still design quirks especially inconvenient implementation like want something better suitable fixed group collection methods looks like abstract amp protected abstract amp", "d": "11/2016"}, {"body": "dzmitryshylovich mentioned methods intentionally part public api", "d": "11/2016"}, {"body": "completely bypassed whole point way needed publish beta rc went wrong way handling issues switched another project problems gone mistake pick one anyway jut nt bother anyway", "d": "11/2016"}, {"body": "works intended see", "d": "11/2016"}, {"body": "error message improved", "d": "11/2016"}, {"body": "fix merged part next release", "d": "11/2016"}, {"body": "repo looking", "d": "11/2016"}, {"body": "pls submit docs issues", "d": "11/2016"}, {"body": "fromgroup addcontrol method", "d": "11/2016"}, {"body": "dzmitryshylovich thanks got working like patchvalue form formbuilder object var iterate mform formbuilder mobject gt var key mobject arrayisarray mobject key mform key arrayisarray mformvalue mformpush new formarray else mformaddcontrol key new formarray iterate mformcontrols key mobject key else typeof mobject key string typeof mobject key number typeof mobject key boolean mobject key null mform key arrayisarray mformvalue mformpush new formgroup else mformaddcontrol key new formcontrol else mobject key null amp amp typeof mobject key object mform key arrayisarray mformvalue mformpush new formgroup else mformaddcontrol key new formgroup plunker", "d": "11/2016"}, {"body": "pls add repoplunkr reproduction", "d": "11/2016"}, {"body": "async host binding need put binding component host uses async pipe example gave animation trigger fires based iscomplete observable means needs async pipe work however want animation work host element need add property via host object worked fine throws directive parse exception", "d": "11/2016"}, {"body": "feature never intended work explicitly disabled tbosch expand cc matsko", "d": "11/2016"}, {"body": "path adding animation based async pipe host object light shed technical reason stopped working guess changed due entirely sure change made", "d": "11/2016"}, {"body": "background host bindings component child executed component uses component parent parent component belong different ngmodule use pipe pipe resolved ngmodule parent component however ngmodule declare pipe using component broken reason never wanted pipes host bindings one bigger compiler refactorings final accidentally reintroduced bug feature semantics wrong example could use plain host event instead decorator one angular core decorators probably wo nt work aot either sorry confusion change really fix", "d": "11/2016"}, {"body": "believe similar u try", "d": "11/2016"}, {"body": "dzmitryshylovich prod build still failing updated packagejson dev build prod build tsloader using typescript asset size chunks chunk names appjs kb emitted app vendorjs kb emitted vendor error ngfactory angularcommonsrcdirectivesngswitchngfactoryts module parse failed angularcommonsrcdirectivesngswitchngfactoryts unexpected token may need appropriate loader handle file type import angularcoresrclinkerviewutils export class wrapperngswitch private eventhandler function context private changed boolean ngfactoryappcomponentshomehomengfactoryts ngfactoryappmainngfactoryts appappprodts finished build prod build also failed angular", "d": "11/2016"}, {"body": "problem aot compiler even creating ngfactory files angular sources", "d": "11/2016"}, {"body": "angular also produces files directives error would happened well used external library components ngc works see logs ie need change setup support third party components directives", "d": "11/2016"}, {"body": "pls add minimal repro plunkr", "d": "11/2016"}, {"body": "dzmitryshylovich sure nt done much plunkr understand replicate environment give go error reproduced literally nothing creating new app adding table app given environment process described post unmentioned deviation process perhaps someone help figure possible reproduce error plunkr worth noting completed several applications using process still work recent update angular one dependencies likely culprit also possible recent change visual studio installation configuration blame", "d": "11/2016"}, {"body": "sorry u reproduce plunker angular issue actionable", "d": "11/2016"}, {"body": "reproduce maybe reproducible bug definitely correlates recent iteration angular though means proves causation case impression visual studio aspnet developers mattered angular team never heard plunker developer continue search root problem guess likely either visual studio quickstart guide angular website aware anything unusual end", "d": "11/2016"}, {"body": "fan dzmitry attitude found problem sure enough related angular library turns done one silly thing defined component selector table", "d": "11/2016"}, {"body": "aot specific angular limit interpolation values performance reasons", "d": "11/2016"}, {"body": "aot specific work browser", "d": "11/2016"}, {"body": "yeah nvm nt read full description", "d": "11/2016"}, {"body": "okay see changes made trivial", "d": "11/2016"}, {"body": "aot specific angular limit interpolation values performance reasons true template parser aot jit known limitation check issue tracker similar issues plan handle static text nodes expressions differently might remove limitation", "d": "11/2016"}, {"body": "saying impossible use template engine need expressions entire page", "d": "11/2016"}, {"body": "vicb read whole description case like angularangular solve filter different dom structure means aot basically fails every project using html templating engine webpack risk sounding repetitive would work using jit nt aot issue maybe related template parser urge reconsider closing without aot angular terribly slow load way see around rewriting pug templates html would really suck", "d": "11/2016"}, {"body": "problem follows using reproduction repo aotsrcapphomehomecomponentts refers template angular treats template plain html ie one big chunk text angular complains interpolation values angularangular", "d": "11/2016"}, {"body": "hmm nt webpack supposed care webpack involved aot come across similar problem resolved precompiling pug html launching referring html file instead pug template supposed done elegant workarounds performance problem nt least flag disable check situation nonsense aot", "d": "11/2016"}, {"body": "hmm nt webpack supposed care webpack involved aot sure config error message clearly indicates template parser tries parse untransformed pug elegant workarounds related angular build setup webpack clue sorry f performance problem nt least flag disable check situation nonsense aot runtime performance pb vs compile time perf generates vaguely code generating undefined number args would required loop less perfomant requirement loop obvious pseudo code get idea", "d": "11/2016"}, {"body": "runtime performance pb vs compile time perf yes case nt becomes running pug angular falsely identifies runtime problem nt know yet processed pug hence flag would handy related angular build setup webpack clue sorry well took official seed project reproduce think point safely assume build problem since comes official repo hoping distinguished answer since surely wo nt one stumbling across", "d": "11/2016"}, {"body": "workaround replace anonymousarrow function exported functions workaround fixed", "d": "11/2016"}, {"body": "used use offline compiler case newest releases", "d": "11/2016"}, {"body": "vicb reexported directives fixed", "d": "11/2016"}, {"body": "chatting tobias nt really fix core rather change implementation using closing", "d": "11/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2016"}, {"body": "reproduced issue template nt filled nt fill following information might close issue without investigating", "d": "11/2016"}, {"body": "hello reviewed issue determined nt fall bug report feature request category issue tracker suitable support requests please repost issue stackoverflow using tag wondering nt resolve support issues via issue tracker please check explanation", "d": "11/2016"}, {"body": "works expected", "d": "11/2016"}, {"body": "thanks answer dzmitryshylovich however feel plunkr reflect scenario properly nt allow read url navigation bar way windowlocation plunkr set route link within code component way however try building component locally without plunkr access url path directly using thisrouterurl see error", "d": "11/2016"}, {"body": "sachanacar im exact issue delay like using settimout ngafterviewchecked spit back correct url idk router object would correct value properties oninit return correct value using routerurl", "d": "11/2016"}, {"body": "router always starts blank url navigates url url bar navigation done microtask async root component created first navigation correct value url getter hence evaluated click value see updated consolelog call see value url bar something like closing issue", "d": "11/2016"}, {"body": "ran problem following example brandonroberts however order module imports affect anything getting overridden feature module anyway angular version language typescript", "d": "11/2016"}, {"body": "already navigated app tenantid want navigate forward nt need write path navigation parameter jus relative path children nt navigate already know navigate", "d": "11/2016"}, {"body": "think looking relative navigation use wo nt provide tenantid parameter unless actually change tenant id another option use query parameters instead matrix parameters preserved finally decorate router service implement arbitrary navigation preprocessing closing issue", "d": "11/2016"}, {"body": "pls provide reproduction plunkr also see", "d": "11/2016"}, {"body": "standard html form behaviour nothing angular pressing enter focused text input click first submit button form one way avoid submit button form plunker adding attributes button element prevent clicked user presses enter", "d": "11/2016"}, {"body": "export class mycmp testvars initial value second value private updateme void thistestvars second value initial value index return", "d": "11/2016"}, {"body": "additional example example created component gets instantiated within topb component could instantiated used importedfromparentdirectory constant new component exact thing caused topb fail import constant file parent folder difference router nt creating problem", "d": "11/2016"}, {"body": "cyclic dependencies subtopb depends settings vise versa bad practice", "d": "11/2016"}, {"body": "fair point moving constant separate file importing settings subtopb allows work even conceding point though component instantiation method works allowing router create component means reduce sensitivity router", "d": "11/2016"}, {"body": "router nothing case compiler linker compiler create module factory get hot code objectdefineproperty appmoduleinjectorprototype get function var self null path topa component path topb component null path redirectto topa pathmatch full return see component null cyclic dependencies", "d": "11/2016"}, {"body": "use forwardref topb defined compiler wo nt create factory tobb yo get error try go route tries instantiate tobb", "d": "11/2016"}, {"body": "appreciate workaround suppose closeddeleted given nt actually bug however would nice methods failed reason component instantiation router outlet etc thanks info wednesday november olegdunkan notifications githubcom wrote use forwardref export const routes routes path topa component topa path topb component forwardref gt topb path redirectto topa pathmatch full topb defined compiler wo nt create factory tobb receiving authored thread reply email directly view github mute thread", "d": "11/2016"}, {"body": "perhaps need read documentation little closer", "d": "11/2016"}, {"body": "default url serializer uses separate outlet url segment path hence escape provide url serializer uses different encoding scheme nt escape colons like", "d": "11/2016"}, {"body": "outlet url segment path elaborate segment path understanding abc path b c segments", "d": "11/2016"}, {"body": "related error match routes url segment list full", "d": "11/2016"}, {"body": "good point doubt concern overall state carefully designed work nicely rich template syntax well aot compilation localization formats", "d": "11/2016"}, {"body": "issue yeasterdays update latest angular version", "d": "11/2016"}, {"body": "confirm downgrading router leaving everything else intact ie angular router fixes issue thanks alexmesser hence appears regression fixed asap dzmitryshylovich repro steps click crisis center click login button bottom click heroes gt error logged console issue appears depend presence canactivatechild guard route also able reproduce related issue read property candeactivate null modified tour heroes example steps click crisis center click login select crisis click heroes tab gt error logged console", "d": "11/2016"}, {"body": "commit release u test latest router version", "d": "11/2016"}, {"body": "dzmitryshylovich ca nt test plunkr apparently get cors error github systemjs config need pass case probably trivial try", "d": "11/2016"}, {"body": "could nt get routerbuilds repo work plunkr local code base using packagejson stopped seeing error message missing however longer navigating lazy loaded child route toplevel lazy loaded route error message logged", "d": "11/2016"}, {"body": "forget said using version specified still produces exact error longer log console wtf registering navigation event listener see", "d": "11/2016"}, {"body": "error get error build code productive mode development mode everything works fine", "d": "11/2016"}, {"body": "believe fixed angular router respectively", "d": "11/2016"}, {"body": "also experiencing upgrading app details", "d": "11/2016"}, {"body": "thinking general problem simple way declaratively provide callbackdelegate child component way callback also supplied template variables consider component used inside form html submit form stated earlier easy way get result event calls something like react jsx nt problem arrow function could passed input wo nt work angular arrow functions supported template expressions still ways achieve using existing angular template syntax make property pass callback parameters array ts input public action public onaction let result thisaction apply thisactionslice something result downside approach nonobvious looking template represents call make eventhandler synchronous make parameter function captures result actual handler call makes result available child component ts output public action eventhandler new eventhandler false public onaction let result thisactionemit r gt result r something result downside feels little weird nonobvious using way require consumers component especially writing generalpurpose control distribution parties function parent controller accepts template variables parameters creates callback function bound child component drawback changedetection going keep triggering reevaluation keep creating new functions time possible improvements allow arrow functions expressions nice parity react modern js add new decorator type called something similar statement bound directly property drawback nt obvious looking template whether something bound delegate event", "d": "11/2016"}, {"body": "missing event binding far limited inflexible tied class eventemitter requires rxjs approach precludes returning results handlers let put aside liking liking rxjs approach missing feature able get result actions right", "d": "11/2016"}, {"body": "tbosch yes exactly", "d": "11/2016"}, {"body": "seems notification api covered zonejs use event handler execute inside angulars zone angular know run change detection", "d": "11/2016"}, {"body": "thanks trick", "d": "11/2016"}, {"body": "seems wired otherwise ci would red probably flake", "d": "11/2016"}, {"body": "nit sure problem lab angular however check support result good half android browsers red plus ie", "d": "11/2016"}, {"body": "issue always require primary route present following fix issue", "d": "11/2016"}, {"body": "thank much work way", "d": "11/2016"}, {"body": "tried works", "d": "11/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2016"}, {"body": "thanks thread issue", "d": "11/2016"}, {"body": "pr merged", "d": "11/2016"}, {"body": "using componentless routes null passed", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "hello similar problem candeactivate method always recieving null component parameter value tested fixed works thanks", "d": "11/2016"}, {"body": "fix issue yet", "d": "11/2016"}, {"body": "yes changelog", "d": "11/2016"}, {"body": "behavior expected change detection process options run change detector manually change directly use component methods instead template binding think angular strategy change detection fine dealing jit dynamic templates however aot mode could reactive", "d": "11/2016"}, {"body": "sorry really works designed nt want different behavior jit aot", "d": "11/2016"}, {"body": "plunker two routeroutlet template canactivate outlet left canactivate return false influence routeroutlet think canactivate work routeroutlet name left right play guardcanactivate method change return false return true", "d": "11/2016"}, {"body": "found workaround upgrademodule includes injector providers works", "d": "11/2016"}, {"body": "hi vicb mentioned session observed took gt mins give terminal karma worker possibly exceeded parallel limit time builds travis gets stopped nt output anything minutes crosscheck case also saw sessions getting timedout browser launches suggest increase karma config around help cases keep proactive watch cases please let us know face issues happy help cc naomiblack", "d": "11/2016"}, {"body": "hey vicb naomiblack see still facing issues guys please try browsernoactivitytimeout timeouts parallel runs right leading high queue time runs folks running add runs want sure thats case cc vedharish ankurgel", "d": "11/2016"}, {"body": "nakula parallel runs per pr pr parallel would possible set max thanks much support cc vedharish ankurgel", "d": "11/2016"}, {"body": "nakula got error idea solve oops soory amend pr", "d": "11/2016"}, {"body": "vicb hey increased parallel limit", "d": "11/2016"}, {"body": "ankurgel thanks situation seems improved side however still issues see could solved raising number concurrent build", "d": "11/2016"}, {"body": "issue seems solved thanks help nakula vedharish ankurgel", "d": "11/2016"}, {"body": "thanks vic best tell console errors posted translation process encounters error lines console errors lines starting end messagesesmxxlf file html translation towards end following chunk end html file form page displays documentlocale enus esmx get translated loading console errors code copied cookbook tutorial note console error says mdbutton use mdradiobutton section code know support forum esmx translation loaded last friday translate placeholders mdinputs page load get errors best tell processes end tags xlf file", "d": "11/2016"}, {"body": "noticed console error text complete error text", "d": "11/2016"}, {"body": "vicb removed references html got error closing tags nt figured problem yet problem", "d": "11/2016"}, {"body": "error seems indicate unexpected either unclosed els opening", "d": "11/2016"}, {"body": "vicb reworked entire thing found transunit close mistakenly copied target translation hence double targets transunit close error around line misled console errors talking errors lines ending lines everything works transunits well formed thanks cool", "d": "11/2016"}, {"body": "issue see property fail useful error", "d": "11/2016"}, {"body": "mhevery closed", "d": "11/2016"}, {"body": "mhevery please help understand example see output stack form compilation seems done source code closurecompiler involved version looks like directly extending error closurecompiler used older version recent change fix handling extending error output code predictably nt work correctly fix nt place yet github commit fixes closurecompiler make extending error work would expect official external release comes november please note also line change points problem tracked bug", "d": "11/2016"}, {"body": "ah see suggested temporary fix merged great think issue stay open closurecompiler release includes correct handling extending error eta november release version closurecompiler later used angular whole hack delegating internal error object removed", "d": "11/2016"}, {"body": "mprobst amp mhevery angular always used closurecompiler behavior extending error correctly handled babel traceur", "d": "11/2016"}, {"body": "think people use angular typescript compiler transpiling using webpack uglify bundling minification", "d": "11/2016"}, {"body": "guess question typescript manage transpilation extending error classes wonder even tripped code expected transpiled typescript closurecompiler ever sees wed nov martin probst notifications githubcom wrote think people use angular typescript compiler transpiling using webpack uglify bundling minification receiving mentioned reply email directly view github mute thread", "d": "11/2016"}, {"body": "users within google hope use closure compiler pass closure compiler users outside google mostly nt use cc use ts downtranspile ts emits literal js code writing constructor see", "d": "11/2016"}, {"body": "case hack stay place typescript correctly handle extending error transpiling", "d": "11/2016"}, {"body": "probably know using global events gestures lead jank anyways yes feature request", "d": "11/2016"}, {"body": "yeah aware changed issue feature request thanks", "d": "11/2016"}, {"body": "fixed", "d": "11/2016"}, {"body": "hi dzmitryshylovich vicb currency pipe display sgd thb symbols correct please see enclosed image thanks", "d": "11/2016"}, {"body": "fix implement side set changes happen next event loop run angular zone function combines two possible solution would see working", "d": "11/2016"}, {"body": "souldreamer yeah know nt issue fix workaround timeout delayed time animation set yeah know crazy doable lose control application consider hack issue fix solution", "d": "11/2016"}, {"body": "okay experimented bit found need one hand makes sense called change detection direct response change really ca nt understand run outside angular angular team agrees called asynchronously done within angular zone like take stab fixing", "d": "11/2016"}, {"body": "see related issue", "d": "11/2016"}, {"body": "believe problem executed upgrade adaptor bootstrapped run file gets hold current zone ambient zone upgrade adaptor creates zone upgraded application bootstrap tests executed checks current zone case ambient zone patch executed tried finding way running file adaptor bootstrapped adaptorbootstrapts upgradeadapterbootstrap documentbody ready function ref see led errors anyone zone skills know solution mhevery et al", "d": "11/2016"}, {"body": "pushed new version updated readme also deprecated package", "d": "11/2016"}, {"body": "closed", "d": "11/2016"}, {"body": "thanks reporting issue however nt provide sufficient information us understand reproduce problem please check submission guidelines understand ca nt act issues lacking important information problem still persists please file new issue ensure provide required information filling issue template", "d": "11/2016"}, {"body": "gnoack example expression replaced placeholder sure supported alternative might use name would special case implementation", "d": "11/2016"}, {"body": "quoting another bug context plural messages feasible try pull responsegetitemslist length similar code translated message part otherwise probably trigger retranslation everytime variable method names change", "d": "11/2016"}, {"body": "cause nobody seems care issue gon na close", "d": "11/2016"}, {"body": "also would like hear someone angular team dummy component form elements inside think reusable block form elements registered without need implementing controlvalueaccessor example another strange thing dynamically loaded template custom component able register form example modified bit", "d": "11/2016"}, {"body": "comments", "d": "11/2016"}, {"body": "sounds like support question asked one channels mentioned contributing got question problem", "d": "11/2016"}, {"body": "see critical issue handling forms like angularjs wonder many people trying migrate use forms ngmodel", "d": "11/2016"}, {"body": "pkozlowskiopensource", "d": "11/2016"}, {"body": "vicb tbosch setting styles hyphenated stylename values eg problematic better option think update renderer", "d": "11/2016"}, {"body": "turns bug created issue addresses going workaround use instead hopefully guys fix soon", "d": "11/2016"}, {"body": "jordic know bug fully fixed master need change anything", "d": "11/2016"}, {"body": "ran minimal test final release still reproducing", "d": "11/2016"}, {"body": "use aot case additional form upgrade library available support aot called get umd build npm angularupgradebundlesupgradestaticumdjs one benefit new library nt require use docs angulario week see pr containing api docs example suggest close issue see get library", "d": "11/2016"}, {"body": "got thanks makes lot sense really confused feature nt seem work merged promoted latest release notes see works us new docs live", "d": "11/2016"}, {"body": "turns needs changed anyway make web workers work animations", "d": "11/2016"}, {"body": "issue windows git version node npm angular workaround removing worked fine", "d": "11/2016"}, {"body": "think close one", "d": "11/2016"}, {"body": "mrshaq original issue fixed angular generates please open issues pbs ie nt browse stuff thread original issue", "d": "11/2016"}, {"body": "would mean", "d": "11/2016"}, {"body": "since activated route injected component constructor reuse component instance switching activated routes least without introducing new primitives activated route reuse behind scene thing reuse component impacts whole design app constructor use plain interface invoke method component provide activated route simple thing asking much alter application design paradigms fundamental", "d": "11/2016"}, {"body": "thought activated route could observable like routeparams could still inject watch case changes agreed point number vinaysoni impact whole design app brought read change planning building app move new ui router", "d": "11/2016"}, {"body": "jamesmfriedman serious issue router team mistaking minor one ca nt believe gone complex ca nt provide simple interface invoke active route experienced single page app developer revolted see components destroyed like app creating destroying components time navigate obvious reason framework demands really funny amateurish decision thought activate route could observable like routeparams could still inject watch case changes jamesmfriedman great suggestion thanks mentioning ui router push comes shove glad uirouter project", "d": "11/2016"}, {"body": "easy workarounds use cases therefore need make big deal", "d": "11/2016"}, {"body": "sorry zoechi strongly disagree workarounds keep destroying components work progress fundamental use case point think looking unbiased mind much current design see fundamental ui design use case", "d": "11/2016"}, {"body": "tell ca nt build kind application sounds like using angular like supposed used agree sometimes inconvenient nt make high priority also already confirmed want add eventually nt see point", "d": "11/2016"}, {"body": "sir complex application enterprises invest millions dollars build one build kind application kind people learning proof concepts framework disregards basic tenet needs first realize importance missing missing destroying components applications built today adopting approach destroying expecting developers waste time recreate state unnecessary intrusive ui architecture convenient would cost especially mainstream community finds may use third party uirouter novice developer go work arounds mentioned seasoned ui developers visualize ditch dug question high priority still early stages later people look people mock fundamental survival router absolutely little inconvenience one design every bit application differently serious limitation one may run issues never implemented current approach", "d": "11/2016"}, {"body": "framework disregards basic tenet absolutely case mentioned plan add feature still nt get point seek framework xyz version happy instead complaining first release brandnew framework missing feature besides discussion", "d": "11/2016"}, {"body": "updated comment", "d": "11/2016"}, {"body": "still nt get point seek framework xyz version happy instead complaining first release brandnew framework missing feature besides discussion raised important point without realizing must explain nt pick framework xyz happy instead complaining first release brandnew framework missing feature think revolutionary many ways one limitation screws really really bad hope realize complaining bad help avoid blemish otherwise great framework read high priority would written single time would know worked say high priority see void otherwise great framework framework serious shortcoming inventing many features router admirable ui architect know without feature others glitter", "d": "11/2016"}, {"body": "necessary script change run force installation nevertheless bower part worthy dont refer bin path npm run script automatically add bin path path", "d": "11/2016"}, {"body": "vicb sorry hijacking issue confusing ca nt use xlf using xmb translated online tool got xmb file translations apparently xtb file idea generate xtb file look documentation links xtb files dead convert xmb xtb file ca nt read xmb file help appreciated thanks", "d": "11/2016"}, {"body": "standard sample xtb gt rab easy generate xmb", "d": "11/2016"}, {"body": "also found official documentation xtb bit lacking ready examples hacking looking angular source code found enough understand format sample xmb generated process equivalent exported xtb file loaded app note worked poeditorcom support xmb import xtb export confirm implementation works well messagesxmb use feature please upgrade later android release contact support loading quiz words completed quiz start quiz continue quiz select matching definition question complete got words correct overall grade messagesenxtb use feature please upgrade later android release contact support loading quiz words completed quiz start quiz continue quiz select matching definition complete overall grade question got words correct", "d": "11/2016"}, {"body": "vicb would observe knowledge team acquired xmb xtb represented well documentation links examples official documentation formats broken nt much else took decent amount scavenging web source code figure implement could resolved adding docs give clear recipe format", "d": "11/2016"}, {"body": "marstonstudio xmbxtb primarily used inside google xliff much popular format preferred format community work feature parity documentation", "d": "11/2016"}, {"body": "thanks comments using text united able import xmb files export xmb files xtb looking unit tests able figure format xtb replace msg translation messagebundle translationbundle working indeed bit documentation would great vicb great stuff tried xlf well ran issues big html texts tried lot tools end combination text united xmb worked best html texts", "d": "11/2016"}, {"body": "face problem idea alternative", "d": "11/2016"}, {"body": "submitted pull request adds url segments canload interface activatedroutesnapshot unfortunately available stage routing call url segment array fine common usage eg", "d": "11/2016"}, {"body": "noticed unit test execution performance issues seem directly related issue ionic angular app trying unit test components using testbed componentfixture classes easily seconds spent setup test seems directly related added testing module via method remove import tests run much faster obviously fail component template longer compiles", "d": "11/2016"}, {"body": "vmandy working around one spending time curating need test module mocking component dependencies timeconsuming bootstrap overriding template component testing nt depend much time consuming suboptimal except point view really forced isolate unit testing seems like theoretical optimizations least know components taking secs bootstrap runtime", "d": "11/2016"}, {"body": "confirm currently possible access resources returning using class exception arises accessed case undefined believe done achieve compatibility breaks entire process supposed response body ignored", "d": "11/2016"}, {"body": "hi nothing inherent aot requires build bundle aot compilation creates files references angular src folder like implies rollup bundling step aot compilation way maybe configure generate ngfactory files imports like following instead would allow us use angular umd bundles aotcompiled code accommodate use case described issue", "d": "11/2016"}, {"body": "problem double comma route definition made crazy debug would cool explicit message happen edit plunkr error problem srcappts line nothing explicit console help debug", "d": "11/2016"}, {"body": "nt fixed", "d": "11/2016"}, {"body": "small doubt application path domain path page path case site working working local working path page path difference local server path myapplication add always redirecting login page suggestion", "d": "11/2016"}, {"body": "guess need provide", "d": "11/2016"}, {"body": "fix please", "d": "11/2016"}, {"body": "issue fixed master", "d": "11/2016"}, {"body": "app loaded using services without problems needed initial state example send someone link favorite search result state must serialized url correct load data", "d": "11/2016"}, {"body": "rather serialize pass router deserialize get router usually id value required route get desired behavior instead serializing entire object", "d": "11/2016"}, {"body": "would want use control nt deal data", "d": "11/2016"}, {"body": "may reasons creating custom control whichs main purpose nothing data imagine want group one controls want something dom etc inside custom control may place one input elements need control value accessor imho work like take controles inside component directive register corresponding form", "d": "11/2016"}, {"body": "router notion best match traverses router configuration depth first order trying consume whole url case router deals two url segment groups sidebar segment groups place components sidebar outlet hence error achieve want use following configurations path user id children path component userdetailcomponent path component usersidebarcomponent outlet sidebar path extra component usersidebarcomponent outlet sidebar", "d": "11/2016"}, {"body": "spent morning chasing repro case using angular zonejs came exactly conclusion upgradeadapter child component called zone without upgradeadapter child component called angular zone expected working around wrapping constructor code ngonchanges code plnkr exactly going create thanks saving time", "d": "11/2016"}, {"body": "also experiencing issue assume angular related since works without upgrade", "d": "11/2016"}, {"body": "think trigger updating onpush component changing property parent component workaround try following hack plunker seems looks hackly another way run manually change detection might follows plunker example magic happens testcomponenthostngfactoryjs one option injected test component use component changedetector plunker example", "d": "11/2016"}, {"body": "lqbweb see although would need get tabs", "d": "11/2016"}, {"body": "close", "d": "11/2016"}, {"body": "fix master yet released would say depends project rules close issue fixed fix released", "d": "11/2016"}, {"body": "usually close issues merge", "d": "11/2016"}, {"body": "use flushmicrotasks", "d": "11/2016"}, {"body": "sorry ca nt reproduce problem following instructions provided problem still exists please open new issue plunkr reproducing problem", "d": "11/2016"}, {"body": "meriturva could please give short complete example code loads module components using systemimport compilemoduleandallcomponentsasync yes please add example module loaeded well systemimport modulepath module gt moduletype module moduletypename componenttype module componenttypename return thiscompilercompilemoduleandallcomponentsasync moduletype", "d": "11/2016"}, {"body": "closing see issue", "d": "11/2016"}, {"body": "tbosch work around right problem timeline whenif going rolled", "d": "11/2016"}, {"body": "believe fixed", "d": "11/2016"}, {"body": "dzmitryshylovich interpolations root cause different", "d": "11/2016"}, {"body": "kara would possible also add support unknown object deep iteration example following object would like controls size name", "d": "11/2016"}, {"body": "nt easy enough get data whole form single call initialized assign data back developer want restored", "d": "11/2016"}, {"body": "zoechi nt want restore form data want restore changetracking initial value typed", "d": "11/2016"}, {"body": "using lazy loading since figured ngc ignores lazy loaded modules nt generate aot code sure supposed importing modules appmodule file project nt angular cli based wo nt able actually even problem tool using end ngc compiler nt matter invoke process gon na run memory", "d": "11/2016"}, {"body": "please look repository check production notes also suggests issues ngc using large projects recommends using closure compiler compiling ngc vicb please help", "d": "11/2016"}, {"body": "think closure compiler nt ready yet angular see issue link even closure compiler works still would like ngc entire job supposed demonstrated official tutorials angular nt beta rc anymore still ca nt generate production build waiting month half", "d": "11/2016"}, {"body": "ok folks finally compiled project ngc nt work windows reason worked mac machine first compile maints jit mode change maints aot mode run literally go far run memory goes far project build rollup bundle everything went well production bundle using lazy loading ngc ignores lazy loaded modules generate aot files machine", "d": "11/2016"}, {"body": "great indicate ngc issues needs optimized memory usage windows mean node ignores maxoldspacesize btw size final bundle long takes run app browser", "d": "11/2016"}, {"body": "yes believe ngc memory management issues nt think project huge compiler take ram windows probably path issues command line command errors following node nodemodulesbinngc p tsconfigaotjson c basedir dirname echo sed e g syntaxerror missing argument list exportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload functionmoduleload functionmodulerunmain startup nt think problem windows command line problem guess size final bundle nt small okay build size course would like smaller browser app loads seconds course vary depending upon internet webserver", "d": "11/2016"}, {"body": "mb bundle size seconds load time large live web app maybe aot support lazy loading could give better bundle improve load time", "d": "11/2016"}, {"body": "mb seems wrong use sourcemapexplorer package determine size coming thu nov naveed ahmed notifications githubcom wrote mb bundle size seconds load time large live web app maybe aot support lazy loading could give better bundle improve load time receiving mentioned reply email directly view github mute thread", "d": "11/2016"}, {"body": "using sourcemapexplorer get strangely look top tree size think truely size bundle actual size mb idea rollupjs file import rollup rollup import noderesolve rolluppluginnoderesolve import commonjs rollupplugincommonjs import uglify rolluppluginuglify export default entry appmainjs dest distbuildjs output single application bundle sourcemap true sourcemapfile distbuildjsmap format iife plugins noderesolve jsnext true module true commonjs include nodemodulesrxjs namedexports cookie chartmodule uglify", "d": "11/2016"}, {"body": "lazy loading propose lazy loading give better bundle improve loading time whole concept lazy loading load js html css files lazy loaded modules background demand since entire idea generating rollup bundle pack everything one js file would router lazy load modules everything one file correct wrong lazy loading going work using module loader like systemjs webpack nt think anyway possible achieve rollup bundle", "d": "11/2016"}, {"body": "concept first split code lazy loadable units use tooling create one bundle unit xhr fetch next bundle needed work make convenient discrepancy file size reported sourcemap size try manually inspecting js file see size comes thu nov sukhdeep singh notifications githubcom wrote lazy loading propose lazy loading give better bundle improve loading time whole concept lazy loading load js html css files lazy loaded modules background demand since entire idea generating rollup bundle pack everything one js file would router lazy load modules everything one file correct wrong lazy loading going work using module loader like systemjs webpack nt think anyway possible achieve rollup bundle receiving mentioned reply email directly view github mute thread", "d": "11/2016"}, {"body": "looking js bundle nt seem help one enormous minified file sure would inspect wherewhat look know size coming", "d": "11/2016"}, {"body": "singhsukhdeep find solution windows seems maxoldspacesize nt effect windows", "d": "11/2016"}, {"body": "nt tried windows since let know figure", "d": "11/2016"}, {"body": "one thing noticed correct option specify memory limit maxoldspacesize maxoldspacesize posts see internet mention hyphens actually underscores verified runing command node", "d": "11/2016"}, {"body": "confirm issue also occurs perform manual browser refresh current page surprised apparently people experienced issue seems blocker anyone trying use hash based routing mixed angular non angular app scenario non angular sections page uses anchors change route angular section page hash based location strategy working properly main problem us moving new improved router update testing debugging router code realized manual browser refresh root cause duplicated navigationstart event characteristic original issue reported lorenzodallavecchia caused fact app two separate root components triggered initialrouternavigation method call although one contains actual routes router outlet update found file function called gets called root component gets bootstrapped scenario one root component router outlet ideally point able prevent called point location change listener root component find call function bit weird maybe made ensure nt change root component associated router workaround prevent one location change listener given router", "d": "11/2016"}, {"body": "original issue issue experienced seemed fixed angular think ticket closed", "d": "11/2016"}, {"body": "support questions please use channels like ones listed contributing got question problem", "d": "11/2016"}, {"body": "close", "d": "11/2016"}, {"body": "nt close proposed improve docs", "d": "11/2016"}, {"body": "devs waiting feature since might take time land copy component pr use merged change import statement", "d": "11/2016"}, {"body": "sorry responding late thanks trick kara nt add testing documentation", "d": "11/2016"}, {"body": "necessary create new test module simply override default module used testing like typescript import browserdynamictestingmodule angularplatformbrowserdynamictesting testbedconfiguretestingmodule declarations testcomponent components providers modalservice testbedoverridemodule browserdynamictestingmodule set entrycomponents modalcomponent said think would worth allowing set directly method troublesome implement", "d": "11/2016"}, {"body": "think similar request terms customizable sanitization", "d": "11/2016"}, {"body": "might fixed via needs double checked", "d": "11/2016"}, {"body": "done regular event handlers gestures key events", "d": "11/2016"}, {"body": "one solution may may apply ditch routing system completely use routing logic", "d": "11/2016"}, {"body": "done", "d": "11/2016"}, {"body": "include changedetectionstrategystateful commit", "d": "11/2016"}, {"body": "status request angular still crashes message present translation provider angular reference changelog", "d": "11/2016"}, {"body": "also way softhandle missing translated message error blocking continuous integration translations raisonably committed time add directive", "d": "11/2016"}, {"body": "getting exact behavior ie http post may end following redirects server need able determine url actual response came chrome firefox url comes populated ie variants url field null", "d": "11/2016"}, {"body": "debben workaround write wrapper http rxjs store request url place response override httpbackend", "d": "11/2016"}, {"body": "fixed", "d": "11/2016"}, {"body": "ever find solution issue", "d": "11/2016"}, {"body": "happens click one letters angular dirty checking run click event handler update value bound calls first time causes second change detection run purpose see therefore called second time mymodelvalid ie export element used template normally would result expressions wrong value dirty checked common case added second change detection run please note extra run add per one extra run matter many changed working intended although agree really expected", "d": "11/2016"}, {"body": "cc kara", "d": "11/2016"}, {"body": "tbosch cool thanks explanation", "d": "11/2016"}, {"body": "run problem well trying detect overflow title reduce fontsize overflows ca nt see element scrollheight event fires even nt change font size event keeps firing", "d": "11/2016"}, {"body": "decided", "d": "11/2016"}, {"body": "improve situation could try", "d": "11/2016"}, {"body": "please try", "d": "11/2016"}, {"body": "also help bit", "d": "11/2016"}, {"body": "help instantiation click certainly things improve situation could please describe use case details fail understand would want click anywhere doc trigger handler cells could make sure change detection called executed instead times single still fail understand would need call methods time click occur", "d": "11/2016"}, {"body": "chance get working socketio", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "anyone workaround interested anything however ugly may central build fails compilation changes open trying anything including overwriting nodemodules files builds best would anyone know way silent ts errors specific folder really want use strictnullchecks since starting get quite lot code lot different people first time turned got around errors least half potential bugs fixed errors also seen time fixed least created really want able check", "d": "11/2016"}, {"body": "using use got following errors gone away", "d": "11/2016"}, {"body": "work implement methods correct signature", "d": "11/2016"}, {"body": "akirasosa works perfect situation thanks", "d": "11/2016"}, {"body": "adding roadmap start working implementing change decemberjanuary wed nov rickard staaf notifications githubcom wrote akirasosa works perfect situation thanks receiving commented reply email directly view github mute thread", "d": "11/2016"}, {"body": "works though", "d": "11/2016"}, {"body": "alvipeo robust fix looking forward team addressing root level", "d": "11/2016"}, {"body": "yup ca nt without full upgrade typescript stay tuned coming wed nov pm opensrcken notifications githubcom wrote alvipeo robust fix looking forward team addressing root level receiving commented reply email directly view github mute thread", "d": "11/2016"}, {"body": "sorry ca nt reproduce problem following instructions provided problem still exists please open new issue plunkr reproducing problem", "d": "11/2016"}, {"body": "manklu nt want unique looking plunker way could use nonunique names radio buttons works text inputs separating duplicates expected similar behavior radio buttons", "d": "11/2016"}, {"body": "sounds like issue webpack plugin could open issue link", "d": "11/2016"}, {"body": "error due please reopen however please note could provide either one angular", "d": "11/2016"}, {"body": "got using mentioned code package npm link npm install copy package nodemodules working fine confirm case typescript import http angular import someservice mymodule import config config pathtoconfig let someservicefactory http config config gt return new someservice configsomevariable export let someserviceprovider provide someservice usefactory someservicefactory deps http config error works mymodule installed rather npm link ed", "d": "11/2016"}, {"body": "probably http imported different location indeed using npm link dependency tree looks like solution would add angularhttp peerdependency mymodule developing mymodule intellisense would complain finding angular", "d": "11/2016"}, {"body": "facing issue publish module private npm package manager using sinopia installing module another module shows error", "d": "11/2016"}, {"body": "update bug", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "check webpack issue help getting around error", "d": "11/2016"}, {"body": "hi igorminar anything provide terms repro one built angularcli perhaps one issues", "d": "11/2016"}, {"body": "first fakedirective needs selector one replacing second lets change directive change list declarations want use like", "d": "11/2016"}, {"body": "might want update information documentation spent way much time finding documentation nt apply aot say", "d": "11/2016"}, {"body": "vicb please consider reopening issue seem like bug least silently failing described folder gets created folder contains necessary files files created especially files files tried many configurations starting one could nt get run different typescript versions different compiler versions typings types also tried infinityone solutions output regular files still files case following runs without errors fails create files js tsconfigaotjson compileroptions target module moduleresolution node sourcemap true emitdecoratormetadata true experimentaldecorators true removecomments false noimplicitany true suppressimplicitanyindexerrors true types files appappmodulets typingsindexdts angularcompileroptions gendir aot skipmetadataemit true typings reproduce types repdocue running osx node hope helps", "d": "11/2016"}, {"body": "gruppjo vicb fully agree jonathan real issue typescript rc opened issue problem also ignored would best solve gets released flood issues comes looked compiler src could nt get bottom angular compiler dev would surely able fix much faster", "d": "11/2016"}, {"body": "problem ngfactory files output ngc", "d": "11/2016"}, {"body": "news experiencing problem repro", "d": "11/2016"}, {"body": "proper repro hitting issue loaders order scss files others shimts file generated codegen directory subtree generated directivengfactoryts component trying import original src subtree original directivets component including scss file styleurls hth", "d": "11/2016"}, {"body": "done", "d": "11/2016"}, {"body": "question related behavior even mark parent component default strategy second child component wo nt get updated settimeout", "d": "11/2016"}, {"body": "trying plkr simply changing running plnkr may sometimes need stop run depending fast made change", "d": "11/2016"}, {"body": "guojenman right bad thanks", "d": "11/2016"}, {"body": "also found issue trying work jasmine also noticed issue workaround posted jasmine page might useful people looking", "d": "11/2016"}, {"body": "done remove view factories use view constructors directly", "d": "11/2016"}, {"body": "sorry typo example code update property template use fixed works see", "d": "11/2016"}, {"body": "anyone could nt get work upgrade version version everything ran smoothly packagejson webpackconfigjs", "d": "11/2016"}, {"body": "problem decorator inheritance directive routeroutlet precise problem seems inverse alxhub created new directive inheriting routeroutlet property selector exportas attached ignored fact decoartor parent routeroutlet associated customrouteroutlet use custom directive custom selector template else get message indicating selector unknown use selector parent parent exportas property use variable template reference directive reported issue details issue plunker idea get inverse problem mentionned alxhub misses decorator parent class miss decorator child class sometimes possible get around inheritance composition case need directive child routeroutlet recognized router blocking point", "d": "11/2016"}, {"body": "implement following semantics class decorators inherited never merged parent child class ctor parameters decorators inherited child class define ctor inherit decorators defined parent method property child class child class redefine method property inherit lifecycle methods ie nt define merge operation resulting metadata rather inheritance properties methods mirrors inheritance properties methods reason introducing merging might break users semantics outlined especially one class decorators match way always explained users cc mhevery", "d": "11/2016"}, {"body": "great news aot compiler generate metadata based semantics correct", "d": "11/2016"}, {"body": "yes work jit aot exact semantics follows inheritance semantics decorators list decorators class parents ancestor first order use last decorator kind eg component constructor parameters class inherits parent class declare constructor inherits parent class constructor parameter metadata parent class lifecycle hooks follow normal class inheritance model ie lifecycle hooks parent classes called even method overwritten child class example eg following valid use inheritance also inherit metadata directive selector somedir class parentdirective constructor somedep somedep ngoninit class childdirective extends parentdirective", "d": "11/2016"}, {"body": "hi vsavkin know new release commit released thanks", "d": "11/2016"}, {"body": "xaviergxf currently angular released week see official blog post versioning releasing angular", "d": "11/2016"}, {"body": "glad see great work", "d": "11/2016"}, {"body": "thank much", "d": "11/2016"}, {"body": "implementation hint create elements original place already reference component view know encapsulation id component add attribute convert select elements attribute current component id", "d": "11/2016"}, {"body": "make sense use nt supported using", "d": "11/2016"}, {"body": "oh well html tags got stripped comment let try nt used native view encapsulation spesific version tag formerly known tag reason team choose rename native tag renamed tag", "d": "11/2016"}, {"body": "rvalimaki browser vendors agreed ship shadow dom api would make sense angular api updated reflect rather mangling selector work angular would possible deprecate associated classes gracefully favour keep combinator asis deprecation period named slots distinct advantage ngcontent angular anyway since selects template reference variable selects css selector used template reference variable would determine named slot componentelement distributed", "d": "11/2016"}, {"body": "ovangle fair enough say support selector change developer perspective rather haver either working current situation lack support ways good given already said already deprecated totally removed future without feature could even remotely replace continue using way sadly current status affairs fall back using generic container type components say components use probably big issue", "d": "11/2016"}, {"body": "get following error module build failed error debug failure false expression output generation failed put following packagejson devdependencies awesometypescriptloader uninstalled reinstalled type loader still receive error importing definition import widgetdata interfaceswidgetdatad file complaining simply export class widgetdata title string widget string", "d": "11/2016"}, {"body": "upgradecomponent happens production build error occured migrating new staticupgradecomponent upgradeadapter everything worked fine webpack angular", "d": "11/2016"}, {"body": "problem switch back upgradeadapter works try import upgrademodule angularupgradestatic crashes angular", "d": "11/2016"}, {"body": "similar situation main app hybrid app loads cross origin app using systemjs loader app also individually avaliable browser hybrid app phoneupgrade example github host url build amp run instructions app stocks github host url build amp run instructions able bring top level directives app hybrid app using upgrade adapter however app shows section getting populated missing key information based discussion seems bug working example see stock tracker dashboard manage using ga version angular angular", "d": "11/2016"}, {"body": "updates bug mirkonasato reason happening uncheck checkbox checked assigned ngmodel change value initially start undefined move true checked stay true unchecked additionally value false model ngmodel change value checked additionally checkbox form value false even required renders entire form invalid get proper checkbox functionality must remove formgroup use following code html ts desired behavior ngmodel handle sending either truefalse value model form accept truefalse value valid", "d": "11/2016"}, {"body": "feel like valid use case user might permission edit fields form still wants see validity fields proceeding perhaps consult someone else invalid data form inputs necessarily created scratch might existing object opened editing currently using disabled state user correct permissions readonly seems correct", "d": "11/2016"}, {"body": "copied pasted module include import modalmodule tabsmodule error disappeared appears case major impact", "d": "11/2016"}, {"body": "think close obsolete many patterns examples available angular material repos", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "vicb addition use cases thinking possibility support localization interpolated string ts code however likely needed rewrite ts code support scenario valid approach", "d": "11/2016"}, {"body": "primary feature stopping us using outofthebox approach translation angular offers many metadata driven components whose keys come metadata stored html could translate via pipe programmatically available translations could get components show proper strings mean time limited something like ngtranslate limitation", "d": "11/2016"}, {"body": "way worked around problem adding empty lang object service used throughout application apply directive reads span div store value object place string template bottom page hidden property string reachable template component ugly could easily overwrite entry id better nothing service injectable export class appservice directive directive selector lang export class langdirective implements oninit template applangmybuttontext testing", "d": "11/2016"}, {"body": "question updates default exports supported aot compiler", "d": "11/2016"}, {"body": "done via", "d": "11/2016"}, {"body": "result direct rendering optional feature default behavior", "d": "11/2016"}, {"body": "default debug mode using web workers thu nov pm suguru inatomi notifications githubcom wrote result direct rendering optional feature default behavior receiving modified openclose state reply email directly view github mute thread", "d": "11/2016"}, {"body": "thanks really hope change break next release", "d": "11/2016"}, {"body": "need regard ie inline renderer generated code speed things changes nt speed ng much", "d": "11/2016"}, {"body": "solved different way master generate visitor methods via nt allocate arrays", "d": "11/2016"}, {"body": "anyone found work around", "d": "11/2016"}, {"body": "work around think issue please create new issue provide information allows reproduce fill issue template", "d": "11/2016"}, {"body": "already", "d": "11/2016"}, {"body": "something backported ran problem edit also noticed error thrown changing range input see", "d": "11/2016"}, {"body": "still issue", "d": "11/2016"}, {"body": "dzmitryshylovich applied fix angular use issue track backporting fix create another issue track", "d": "11/2016"}, {"body": "dzmitryshylovich issue closed fixed", "d": "11/2016"}, {"body": "also experiencing issue using jasmine karma webpack add suggested imports get following error originalerr using commonjs affects imports somehow", "d": "11/2016"}, {"body": "switched upgradecomponent", "d": "11/2016"}, {"body": "closed still clear way declaratively disable form control workaround", "d": "11/2016"}, {"body": "seems angular team doesnt want communicate max th\u00e9s still discussing alternatives", "d": "11/2016"}, {"body": "ok best workaround could think create directive dirty job declaretively test boolean condition get forminputformcontrol disabled without need test expressions sometimes nt observables easy know something changed ie depend change detection system even use disable formcontrol use another formcontrolvalue condition disable directive selector disablefc disablecond export class disablefcdirective input disablefc formcontrol constructor get disablecond boolean getter needed completude return thisdisablefc amp amp thisdisablefcdisabled input disablecond set disablecond boolean thisdisablefc return else thisdisablefcdisable else thisdisablefcenable used like", "d": "11/2016"}, {"body": "andrevmatos hi grappling issue tried apply suggested fix without success would mind taking look plunk clarifying going wrong", "d": "11/2016"}, {"body": "raisindetre need set formcontrolname selects use controls inside formgroup formcontrol set control directly use directive enable disable dinamically control changed example demonstrate directive disabling first select based boolean variable toggled button second disable based oh value first", "d": "11/2016"}, {"body": "ah got thanks almost one point wrapping formcontrolname directive square brackets still trying get hang modelreactive driven forms", "d": "11/2016"}, {"body": "problem solution code inside subscribe run enter component first time need get previous url", "d": "11/2016"}, {"body": "code main app component nt child component", "d": "11/2016"}, {"body": "issue shrardmodulets file throw error appmodulets like sharedmodulets like got proper solution please suggest", "d": "11/2016"}, {"body": "enough information example tell wrong hazard guess one methods complicated static reflector resolve runtime full error message give clue one tries give context expression trying resolve", "d": "11/2016"}, {"body": "hi issue singhsukhdeep encountered ngc say unexpected value object object declared module appmodule incase someone issue solve change export components export default class mycomponent export class mycomponent may got different error message ngc say unexpected value object object provided module appmodule need change export way services well hope help", "d": "11/2016"}, {"body": "like need bundling templates single url reduce number template requests support aot underlying aspnet mvc site using proprietary cms enables us edit content templates multilanguage vary depending client type desktopmobile using custom urlresolver nt think sort crazy online process compiles templates every time someone updates content cms would appropriate however able specify multiple component templates single file would useful", "d": "11/2016"}, {"body": "mochapatch available works well test utils like async fakeasync", "d": "11/2016"}, {"body": "cutting release zonejs within next days happens able get patch npm package wed nov nording notifications githubcom wrote mochapatch available works well test utils like async fakeasync receiving commented reply email directly view github mute thread", "d": "11/2016"}, {"body": "confirmed latest zonejs version mocha patch works perfectly nice work nording", "d": "11/2016"}, {"body": "services already hook closed", "d": "11/2016"}, {"body": "never seen mentioned supported services docs say directives pipe destroyed", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "guess docs interface updated", "d": "11/2016"}, {"body": "going work day componentless route named outlet set feature request", "d": "11/2016"}, {"body": "molcik good question tnx opening", "d": "11/2016"}, {"body": "fixed", "d": "11/2016"}, {"body": "boblee plunker nt available reupload", "d": "11/2016"}, {"body": "go plunker also article", "d": "11/2016"}, {"body": "kara please look example boblee template driven variant need another form element seems correct imho want place ngmodelgroup component root", "d": "11/2016"}, {"body": "cschulz took make templatedriven way work still feels like hack hopefully maybe missing something better support templatedriven way comes meanwhile would choose modeldriven way", "d": "11/2016"}, {"body": "interpretation templatedriven way working splitted components", "d": "11/2016"}, {"body": "joelrich agree think able set properties events uncommon use case developing basic masterdetail app ngcomponentoutlet shlomiassaf commited using another way data passed dynamically created component prefer declare properties", "d": "11/2016"}, {"body": "luigidallavalle agree good feature costly lot work implement want land first implement basic features advanced features might come later making complex make pr difficult understand let start simple later add feature", "d": "11/2016"}, {"body": "works aot app impact", "d": "11/2016"}, {"body": "problem encoding migration angularjs angularjs worked fine backend jetty scalatra interpretes angularjs used service post internally uses encodeuriquery function returns angular urlsearchparams internally uses standardencoding function characters encoded returns", "d": "11/2016"}, {"body": "reckon drop type delegate native implementation require polyfilled otherwise currently akin importing something want avoid polyfill", "d": "11/2016"}, {"body": "issue apache server sample configuration get fixed project hosted inside timetrax folder", "d": "11/2016"}, {"body": "almothafar u tried locally", "d": "11/2016"}, {"body": "dzmitryshylovich yet currently working things got chance try try tomorrow", "d": "11/2016"}, {"body": "dzmitryshylovich waste paid hour time trying get work without luck facing stupid cors issue got really anger junk allowed everything server side working angular provide starter working issue thankful otherwise going waste time work angular later specially already late task", "d": "11/2016"}, {"body": "let say sidenav never changed router content dynamically loaded using router sidenav need react router changes update view within sidenav make simple sidenav like able display every route params even child routes possible", "d": "11/2016"}, {"body": "use redux store point coupling components could couple components via events must common parent relay event asking best perform component coupling asking architecture would need notify probably via common parent component via external state knowledge store wan na know get information advancedroute found hacking routers rebuild properly store state always traverse updown routers tree resembles component tree example sample code could show traverse collect params parentsfirst children need think wan na use snapshot play streams information need components happy route hacking", "d": "11/2016"}, {"body": "basically problem want create breadcrumbs component currently possible complicated data gets activatedroutesnapshot depends location component tree guess use workaround similar one suggested wendro", "d": "11/2016"}, {"body": "still broken", "d": "11/2016"}, {"body": "switched upgradecomponent", "d": "11/2016"}, {"body": "solve problem run block also ran issue ca nt use services dependencies run blocks also ca nt use", "d": "11/2016"}, {"body": "necroskillz closed issue opened regards upgradeadapter release upgradecomponent api supports aot doubt much work done upgradeadapter regards using services frameworks found strategic use timeouts manually getting services respective injectors worked fairly large app lines code different module bundles sure cases may work one framework initialized sure easy fix would suggest opening new bug upgradecomponent instead important", "d": "11/2016"}, {"body": "u provide repro latest angular", "d": "11/2016"}, {"body": "run similar issue trying follow routing module pattern advertised guide yet finding possible define route routing module load children parent route using approach work ended still import components parent route define children routes array manually idea would allow us specify property alternative specify parent route children routes instead way around worked really well angular", "d": "11/2016"}, {"body": "hi guys feature nested routes supposed work app routes declared nested routing declared const routes routes path component path component path redirectto pathmatch full ngmodule imports routermoduleforchild routes exports routermodule export class get try get root getting redirect happen declared child module redirects", "d": "11/2016"}, {"body": "evgenykravchenko related issue", "d": "11/2016"}, {"body": "martinwegner maybe sure next imports app module import routing submodule understood workaround nt know structure ps created simple plunker repro defect", "d": "11/2016"}, {"body": "evgenykravchenko example workaround work", "d": "11/2016"}, {"body": "evgenykravchenko routes imported ngmodules merged together host ngmodule true whether using routing module hierarchy routes created importing one module another routes overriding", "d": "11/2016"}, {"body": "brandonroberts yeah realized fixed problem using removing imports child module thought routes attached nt override routes difference", "d": "11/2016"}, {"body": "evgenykravchenko difference adds providers needed service dependencies need provides means register additional routes nt add providers", "d": "11/2016"}, {"body": "issue using systemjs builder help", "d": "11/2016"}, {"body": "afraid ca nt help nt figure yet believe ca nt use anymore get static self executing bundle load bundle configure correctly systemjs aware bundles lazy load although sure", "d": "11/2016"}, {"body": "true still need systemjs production build know create bundles systemjs builder make app lazy load requested module", "d": "11/2016"}, {"body": "look branch", "d": "11/2016"}, {"body": "gomesnazareth apply branch solution gulp configuration figured use main module lazy loads one children modules", "d": "11/2016"}, {"body": "use instead create bundles use bundle arithmetic also include bundle systemjs option setup", "d": "11/2016"}, {"body": "provide example code use case lazy loading modules addition need case thank support", "d": "11/2016"}, {"body": "create bundles feature modules using loaded lazily routes creating systemjs config example bundling gulp task bundle thirdparty libraries bundle app eagerly loaded modules bundle feature lets say heroes feature bundle arithmetic make sure nt common libraries components multiple bundles also use configuration lazy load feature module bundle routes like", "d": "11/2016"}, {"body": "cmayankc thank reply subtracted first bundle seems libraries addition use array first bundle created three bundles add one bundle config property", "d": "11/2016"}, {"body": "subtracted first bundle seems libraries addition use array first bundle order separate thirdparty libs use special systemjs module syntax basically represents single module instead dependencies well subtracting modules found inside dependencies included eventually gives us thirdparty libs created three bundles add one bundle systemjs config property two bundles three included indexhtml since eagerly loaded modules third bundle feature module loaded required hence one pair hope helps", "d": "11/2016"}, {"body": "created following task see create bundle starting folder since run typescript compiler source files move traspiled ones dist folder dist folder files create bundles folder tried solution get following error gulp esecution think referring file figure ca nt load related js file", "d": "11/2016"}, {"body": "try setting systemjs configuration feed systemjs builder nt work please paste systemjs configuration", "d": "11/2016"}, {"body": "file", "d": "11/2016"}, {"body": "try setting", "d": "11/2016"}, {"body": "yes sorry forgot paste previous post get error", "d": "11/2016"}, {"body": "could path problem please check file paths correct also try changing first option constructor", "d": "11/2016"}, {"body": "solved adding property also modified gulp task anyway getting following error gulp task esecution unhandled rejection typeerror expected trace tree object verifytree compiletree trycatcher promisesettlepromisefromhandler promisesettlepromise promisesettlepromises asyncdrainqueue asyncdrainqueues immediateasyncdrainqueues runcallback tryonimmediate processimmediate immediatecallback unhandled rejection error fetch fsjs file homemyusermyprojectfsjs loading buildscriptspolyfillminjs error enoent file directory open homemyusermyprojectfsjs error native", "d": "11/2016"}, {"body": "could last bundle call syntax error one string also bundle calls asynchronous calls make sure previous bundles generated subtract example wait generated subtract create multiple gulp tasks run sequence", "d": "11/2016"}, {"body": "yes syntax error solved error caused removed successfully build app following gulp tasks var builder new builder distsystemjsconfigjs gulptask appbundle function return builderbundle pathspolyfill buildscriptspolyfilljs gulptask function return builderbundle distappmainjs buildscriptspolyfilljs buildscriptsappjs gulptask function return builderbundle distappmodulesfirstsectionfirstsectionmodulejs buildscriptspolyfilljs buildscriptsappjs buildscriptsfirstsectionjs gulptask styles function return gulpsrc semanticdistsemanticmincss pipe concat vendormincss pipe gulpdest buildstyles gulptask injectindex function var target gulpsrc buildindexhtml get following content file project loading run build folder get following error seems still expecting dependencies polyfill library wast expected behaviour would like following file structure production app", "d": "11/2016"}, {"body": "yes need include using gulp included app component references files", "d": "11/2016"}, {"body": "nt first task variable", "d": "11/2016"}, {"body": "sorry remove previous two messages error get execute build task", "d": "11/2016"}, {"body": "guess would would append systemjs format global excerpt systemjs bundle documentation builds commonjs amd globals single file way supports csp systemjs loader well circular references suggest include globals directly bundle stream inject indexhtml", "d": "11/2016"}, {"body": "sorry afraid nt understand inject file make app working mean add globals files gulp inject task files thank advance", "d": "11/2016"}, {"body": "would give bundle rxjs angular libs injecting indexhtml append polyfills like var libstream gulpsrc nodemodulescorejsclientshimminjs nodemoduleszonejsdistzonejs nodemodulesreflectmetadatareflectjs nodemodulessystemjsdistsystemsrcjs buildscriptslibbundlejs pipe concat libbundlejs pipe gulpdest buildscripts gulpsrc buildindexhtml pipe inject libstream name lib ignorepath dist addrootslash false", "d": "11/2016"}, {"body": "please look previous posts nt anyway tried create following tasks var builder new builder distsystemjsconfigjs gulptask function return builderbundle distapp distapp buildscriptslibbundlejs gulptask appbundle function return builderbundle pathspolyfill buildscriptspolyfilljs gulptask function return builderbundle distappmainjs buildscriptspolyfilljs buildscriptsappjs gulptask function return builderbundle distappmodulesfirstsectionfirstsectionmodulejs buildscriptspolyfilljs buildscriptsappjs buildscriptsfirstsectionjs gulptask styles function return gulpsrc semanticdistsemanticmincss pipe concat vendormincss pipe gulpdest buildstyles gulptask injectindex function var target gulpsrc buildindexhtml wrong", "d": "11/2016"}, {"body": "please show complete gulp file", "d": "11/2016"}, {"body": "sure thank", "d": "11/2016"}, {"body": "issue got fixed", "d": "11/2016"}, {"body": "get following build file structure still getting following messages console", "d": "11/2016"}, {"body": "try including systemsrcjs nodemodulessystemjsdist indexhtml see error goes", "d": "11/2016"}, {"body": "nt included anyway folder production build", "d": "11/2016"}, {"body": "u try including file let know fixes worked", "d": "11/2016"}, {"body": "include file folder production", "d": "11/2016"}, {"body": "bundle structure simply add copy systemsrcjs nodemodulessystemjsdist include indexhtml know perfect solution works start writing gulp task remove file something like gulptask injectlibs function var target gulpsrc", "d": "11/2016"}, {"body": "got blank page loading error console oo", "d": "11/2016"}, {"body": "pls show indexhtml", "d": "11/2016"}, {"body": "minification application working bundling worked fine bundled files tried minify minification task looks like gulptask minify function cb pump gulpsrc babel presets compact false error function e consolelog e uglify error function e consolelog e throws uncaught referenceerror curscript defined know error systemsrcjs worked fine minification davidanaya samverschueren cmayankc please help fix", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "getting blank page unable find start fromthis fixed issue got blank page revenue manager portal loading systemimport mainjs following systemconfigjs please see helps", "d": "11/2016"}, {"body": "fixed", "d": "11/2016"}, {"body": "hello submit bug someone confirm mostly likely regression particular problem gt plunker using example built johnpapa open console click vehicles link thanks advance", "d": "11/2016"}, {"body": "disregard seems documented thanks", "d": "11/2016"}, {"body": "updated plunker work angular final old one nt working seems pretty severe use resort avoiding controlvalueaccesor using separate explicit properties different name another good repro available", "d": "11/2016"}, {"body": "would also add explicitly lifecycle event method fired nt see mentioned version ticket", "d": "11/2016"}, {"body": "issue use onpush components use party components value accessors child components pinged outside markforcheck trigger change detection", "d": "11/2016"}, {"body": "tested generated size improvements mentioned changelog since application ngfactory files shrank mb mb new ngfactory files nodemodules angular sum result build exactly big", "d": "11/2016"}, {"body": "news", "d": "11/2016"}, {"body": "problem solved share check version compilercli amp compiler c pathtoyourprojectnodemodules angularcompilerclipackagejson c pathtoyourprojectnodemodules angularcompilerpackagejson match compilercli got different version install specific version think somethimes angularcompilercli installed properly version im using version", "d": "11/2016"}, {"body": "sorry nt seen question workaround", "d": "11/2016"}, {"body": "hi using module getting error code looks like ideas thank", "d": "11/2016"}, {"body": "samiheikki call functions metadata code statically analizable", "d": "11/2016"}, {"body": "chuckjaz export function reference function name ok providers routes decarations ok component metadata good solution thanks code follow import customanimationsservice sharedservicescustomanimationsservice export function customanimations let animations new customanimationsservice return animationsgetanimations component selector apptest templateurl testcomponenthtml styleurls testcomponentcss animations customanimations export class testcomponent implements oninit", "d": "11/2016"}, {"body": "believe related service provided mycomponent testbedconfiguretestingmodule overridden unless use overridecomponent must use thanks chrisjonespixitmedia ashmcconnell", "d": "11/2016"}, {"body": "seems happening us ca nt seem get mock appear class test put consolelog constructor looks like real service tried chrisjonespixitmedia workaround luck", "d": "11/2016"}, {"body": "guess need use want override provider provided component test", "d": "11/2016"}, {"body": "hi zoechi nt seem exist angular", "d": "11/2016"}, {"body": "using overridecomponent worked called wrong setting providers testbedconfiguretestingmodule broken code clarity thanks tip chrisjonespixitmedia", "d": "11/2016"}, {"body": "ashmcconnell nt think broken declare providers provide mock using declare providers provide mock using discussed", "d": "11/2016"}, {"body": "aha course makes sense sorry missed thought providers meant set testbedconfiguretestingmodule thanks help lephyrus", "d": "11/2016"}, {"body": "makes sense official documentation completely missed", "d": "11/2016"}, {"body": "thank chrisjonespixitmedia ashmcconnell believe issue similar quest better success useclass usevalue", "d": "11/2016"}, {"body": "updates blocking us building feature would love see fixed proposed workaround", "d": "11/2016"}, {"body": "duplicate", "d": "11/2016"}, {"body": "would agree big inconvenience create module something trivial one component", "d": "11/2016"}, {"body": "extremely inconvenient well plain ugly really able inherit components parent module think shared module extremely ugly going end one huge shared module components one things hate conventional platforms like net think able least explicitly able share components parentchild modules sense something like child module sure better way nt want ten thousand components shared module", "d": "11/2016"}, {"body": "jcmordan use different selectors sharedcomponenta sharedcomponentb template personmodule different places", "d": "11/2016"}, {"body": "einarvalholl use selector component html tamplate component selector componenta template im componnet class componentb component selector componentb template im componnet b class componentb component selector editperson template im edit person component class editpersoncomponent", "d": "11/2016"}, {"body": "also thinking sharedmodule nearly components need use one component two different modules need import whole sharedmodule twice component use one component big mistake performance happens detailed importing module", "d": "11/2016"}, {"body": "found explanation angular docs import module twice problem three modules import module angular evaluates module first time encounters true whatever level appears hierarchy imported modules module b imports module module c imports b module imports c b triggers evaluation c triggers evaluation b evaluates angular gets b already cached ready go angular like modules circular references nt let module import module b imports module", "d": "11/2016"}, {"body": "using angular aspnet core app means publishing aws involves visual studio mean using visual studio task runner run webpack means locked webpack p command prod builds means uglifyjsplugin runs default settings nt luxury passing parameters keepfnames true way around", "d": "11/2016"}, {"body": "jrood able configure setting webpackprod config file", "d": "11/2016"}, {"body": "machmo unfortunately even explicitly add new webpackoptimizeuglifyjsplugin mangle keepfnames true plugin list overridden one parameters generated p flag", "d": "11/2016"}, {"body": "turns problem actually caused webpackoptimizeoccurrenceorderplugin webpack h says p optimizeminimize online docs confirm also optimizeoccurrenceorder", "d": "11/2016"}, {"body": "anyone managed make work know expected behavior im trying following configuration path abou redirectto home pathmatch prefix path home component homecomponent path component homecomponent actually matter put first pathmatch prefix full behaves following try abou im redirected home try starts abou goes page behavior pathmatch prefix pathmatch full interestingly works empty path really intended im asking found extremely confusing trying make work", "d": "11/2016"}, {"body": "rmnoon figured plunker links nt work", "d": "11/2016"}, {"body": "nope nov canda notifications githubcom wrote rmnoon figured plunker links nt work receiving mentioned reply email directly view github mute thread", "d": "11/2016"}, {"body": "also serious problem design enterprise app grown large lazy loaded modules wellcomed also fact components lazy modules use global providers defined lazy module good component refactored lazy module suddenly ca nt get providers contained injector parent component component defined app module working code suddenly breaks using lazy loaded modules question would nt possible give every router component lazy loaded module injector parents first try lazy module injector like injector inherited parent component new would nt break today running code serious way would gain symmetry lazy loaded eagerly loaded components would help think others lot thanks using angular moment", "d": "11/2016"}, {"body": "idea shared module core module comes play seen ngmodule documentation want services shared app use core module take look design see works", "d": "11/2016"}, {"body": "thank response problem related share kind data service application kind services already working conjunction ngmodules concrete problem finding special marked component component tree case component compa acts scroll container control used sticky header table compb problem compa sit somewhere component tree even multiple times compb find nearest compa even across lazy loaded module boundaries moment using kind hack traversing real dom tree issues related local dom trees bound main dom caused combination ngif ngcontent", "d": "11/2016"}, {"body": "realize original issue describes injector problem first component lazy loaded module problem directly related first lazy loaded component injector possible reopen issue open new issue design bugfeature request", "d": "11/2016"}, {"body": "problem already fixed angular see router provider found using lazy load mode provide component changelog router incorrect injector used instantiating components loaded lazily thanks team sorry noise produced", "d": "11/2016"}, {"body": "believe fixed", "d": "11/2016"}, {"body": "thank findreference dzmitry raised specific issue desired behavior exiting navigation disconnect pattern inmind disconnects handled", "d": "11/2016"}, {"body": "dzmitryshylovich errant discussion looks like although related behavior effect issue pr intended change behavior guards onactivate resolve", "d": "11/2016"}, {"body": "noted dzmitryshylovich issue documentation generation fixed angulario", "d": "11/2016"}, {"body": "bobrosoft working triggers enter thiscontentcmpref thisviewcontainerrefcreatecomponent componentfactory later neither thiscontentcmprefdestroy thisviewcontainerrefremove thisviewcontainerrefdetach triggers animation leave yes display block nt know make difference", "d": "11/2016"}, {"body": "piotrgawlowski thisviewcontainerrefdetach trigger something wrong animation definitions easy mistake especially animation phases recheck debug devtool", "d": "11/2016"}, {"body": "bobrosoft hey include plnk verify know animation leave", "d": "11/2016"}, {"body": "piotrgawlowski nt remember special words official documentation nt use statestrings documentation says", "d": "11/2016"}, {"body": "piotrgawlowski aliases", "d": "11/2016"}, {"body": "matsko thanks answer know btw really appreciate work man bobrosoft right ia using exactly right", "d": "11/2016"}, {"body": "piotrgawlowski sorry friday already bottle good wine check plunker made testing enterleave animation recent project find difference nt forget say issue", "d": "11/2016"}, {"body": "oh noticed based routes dynamic components creation current project dynamic components creation works perfectly anyway check sections use values code think issue somewhere", "d": "11/2016"}, {"body": "bobrosoft thanks example perfect example use animation engine router animate route change nt relates much issue focusing programmatically created components wanted know even possible trigger leave animation component destroy maybe get whole thing wrong guess matsko answer", "d": "11/2016"}, {"body": "ok fixed stuff noticed moved right example meh go drink today", "d": "11/2016"}, {"body": "happening think matsko correct component detaching detached nested animations chance run seems like reasonable use case using host animation binding presumably actually want animate container leaving see", "d": "11/2016"}, {"body": "kamarouski hey close issue starts stackoverflow", "d": "11/2016"}, {"body": "robwormald btw paid write support wondering", "d": "11/2016"}, {"body": "robwormald bobrosoft thanks exactly work appreciated", "d": "11/2016"}, {"body": "closed since correct leaving animation run host otherwise expected", "d": "11/2016"}, {"body": "looks like already fixed", "d": "11/2016"}, {"body": "dzmitryshylovich thanks", "d": "11/2016"}, {"body": "explicitly states fakeasync required wrap inject wont work way around months listed bug result see fakeasync actually supposed used documentation shows way trying indication changelog order changed back breaking way", "d": "11/2016"}, {"body": "pkozlowskiopensource schippie shorter example shows hostbinding input came across wanted input set would change class host component expandablecomp tell nt work angular right nt see easy direct workaround note looking closer syntax work correctly", "d": "11/2016"}, {"body": "abierbaum think workaround quite easy", "d": "11/2016"}, {"body": "abierbaum sadly related problem hostbinding input setting property element tag directive placed", "d": "11/2016"}, {"body": "updates", "d": "11/2016"}, {"body": "still solution creating dynamic svg ng", "d": "11/2016"}, {"body": "seems fixed", "d": "11/2016"}, {"body": "confirm bug appears ie edge amp safari angular plunkr demonstrating issue ie edge amp safari angular select gets default value", "d": "11/2016"}, {"body": "seems like fixed issue restoring valid url navigation denied issue strpipe still stack state maintained anyone confirm", "d": "11/2016"}, {"body": "vsavkin seems still issue first navigated route skiplocationchange true navigate away return creeps url routing path view children want open new bug", "d": "11/2016"}, {"body": "want open new bug please comments closed issue probably get lost", "d": "11/2016"}, {"body": "googled error found still ca nt find solution update typescript compiler may also need gulptypescript andor latest vs tools typescript must manually installed", "d": "11/2016"}, {"body": "issue may helpful", "d": "11/2016"}, {"body": "fix hard please note issue regarding pug templates different ie limitation applies interpolations html text span", "d": "11/2016"}, {"body": "vicb pr submitted smiley", "d": "11/2016"}, {"body": "kara ca nt find function formgroup api", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "guardiannw experienced behavior later versions angular still", "d": "11/2016"}, {"body": "experiencing angular", "d": "11/2016"}, {"body": "news also anyone got workaround tried futurizing solution luck", "d": "11/2016"}, {"body": "tried many workarounds one got work using instead iiuc wardbell suggested typescript instead async gt fixturewhenstable gt test done gt fixturewhenstable gt test done", "d": "11/2016"}, {"body": "well came thing solution found use frompromise way working magically works inside use assume native promise implementation use settimeout setinterval course solve problem intervals etc least http calls could mocked", "d": "11/2016"}, {"body": "someone correct wrong aside angular team big proponent rxjs library despite integration jasmine real root issue actually problem rxjs jasmine correct", "d": "11/2016"}, {"body": "also faced issue came solution monkeypatching required timebased operators rxjs using code test works fine interested testing timewise functionalwise example using debouncetime operator add allow tests pass sync way wanted achieve require code changes might feel bit hacky", "d": "11/2016"}, {"body": "including host intuitive host child breaks recursive templates get stack overflow workaround filter query list itemname directive selector treeitem export class treeitem", "d": "11/2016"}, {"body": "possibly duplicate", "d": "11/2016"}, {"body": "one related bug appears ie edge amp safari pr seems addressing issue", "d": "11/2016"}, {"body": "problems maybe someone create working onlineexample plnkr somewhere else nested routes named outlets", "d": "11/2016"}, {"body": "seems work const routeconfig path redirectto home pathmatch full path home component homecomponent children path component contractscomponent path contracts component contractscomponent path research component researchcomponent routerlink use rightpanel placed template contracts component additionally also allows navigation path import component input angularcore import contract classescontract import router angularrouter component selector contractrow templateurl contractrowcomponenthtml styleurls contractrowcomponentcss export class contractrowcomponent input model contract constructor private router router viewcontract thisrouternavigatebyurl home contractsrightpanel contractthismodelid hopefully helpful serious pain neck actually figure get working really needs documented somewhere official", "d": "11/2016"}, {"body": "working onlinedemo sampleproject execute locally", "d": "11/2016"}, {"body": "seems complete way handle auxroutes look video aux routes start", "d": "11/2016"}, {"body": "able confirm actually works current version angular video year old", "d": "11/2016"}, {"body": "oh sorry thought oct guess outdated", "d": "11/2016"}, {"body": "finally found work outlets children think main problem create template primary childoutlets located attached files route looks like countrycomponent display outlets templatelinks looks like html germany usa example get countryid parent javascript import component oninit injectable viewchild elementref angularcore import activatedroute router angularrouter component export class countrydetailscomponent implements oninit one last thing multiple outlets level want load content another outlet use url parent fe would multiple outlets countries id want load outlets via javascript use countries id load outlets testzip", "d": "11/2016"}, {"body": "forgot mention subscribe changes url within outlets get notified changes put ngoninitmethod outletcontent javascript thisrouteparamssubscribe params id string gt load new data given id", "d": "11/2016"}, {"body": "seems part parameters anymore recommended way encapsulate animation using across multiple components", "d": "11/2016"}, {"body": "tinchou animations directives important components things like svg tables rely parentchild specific dom hierarchy", "d": "11/2016"}, {"body": "still actual new router api", "d": "11/2016"}, {"body": "nt call initial navigation automatically calling initialnavigation appcomponent fixed issue", "d": "11/2016"}, {"body": "interpretation two pages expect ngonchanges called databinding updated angular direct manipulation example test host databinds timepickers input ngonchanges correctly firing input changes due databinding update", "d": "11/2016"}, {"body": "appropriate inject ngzone make change inside ngzonerun call", "d": "11/2016"}, {"body": "ngzonerun probably work basing comments guidance official testing guide", "d": "11/2016"}, {"body": "use case trying preventing navigation form changes unsaved nt want use simple windowconfirm function gives two options user ok cancel instead want user options save discard changes navigates intended route async action requires router guard passes intended route another componentservice returns false since nt possible candeactivate use canactivate guard service routes prevent navigation would optimal add guard route needs", "d": "11/2016"}, {"body": "yeah spending time trying make something similar work found issue case want make sure guard check component actually changes frequently change optional route params would mean every time optional route param changes would ask users sure want discard changes seeing clean way synchronously returning true nt actual component change always allow navigation make work", "d": "11/2016"}, {"body": "matsko know query added ready use missing days days", "d": "11/2016"}, {"body": "news one", "d": "11/2016"}, {"body": "prototype working currently writing tests preparing review next week", "d": "11/2016"}, {"body": "matsko possible detect via callback transition transits enter leave state", "d": "11/2016"}, {"body": "yes query feature following html code run animation parent decides works elements animated within component template plans expand work cross component parent component child think routing could sub animation animation component host binding right component entered page act enter animation way find page entered removed think future lifecycle hook would ideal usecase", "d": "11/2016"}, {"body": "thanks reporting issue issue obsolete due changes recent releases removed please update recent angular version", "d": "11/2016"}, {"body": "router designed third time still failure creates new component every time navigating different component type bad design decision example user may middle filling long form needs lookup verify details comes back everything wiped component reinstantiated implies every time user makes change part ui state ui preserved anticipation unexpected navigation another component coexists ui simply much work nt make sense kind design gives router right destroy component user navigating somewhere perform part work every ui framework worked including swing jsf component tree always sacrosanct default method developing ui assume nodes component tree changed developer explicitly replaces deletes could simple life cycle hook interface developer implements component developer returns true reuse true new component must instantiated existing one reused big deal absence need maintain cache ui state content every component complex ui say graphics multiple open tree controls one would unnecessarily preserve state every bit various widgets graphics component otherwise available without work idea destroying component every time someone navigates different type component pushes even consider projects company someone contributor feel right ask others leave disgusting default design methodology ui world assumption component tree preserved every developer going ask respected developers asking nt mean told leave use know project needed router official router team capable providing simple option end developer told use something official poor guy endure silly design decision design decision places severe limitation developed complex ui components temporary navigation involved point poor design router number reflects badly whole framework", "d": "11/2016"}, {"body": "ghost exactly problem able solve", "d": "11/2016"}, {"body": "still issue final", "d": "11/2016"}, {"body": "probably solved", "d": "11/2016"}, {"body": "waiting hope get resolved soon thanks thread", "d": "11/2016"}, {"body": "manekinekko use turned jit compile aot need set", "d": "11/2016"}, {"body": "closing issue contained", "d": "11/2016"}, {"body": "updates", "d": "11/2016"}, {"body": "let guys work already like feature lock basement bore death subscribe thread receive notifications done team updates", "d": "11/2016"}, {"body": "reopened provided official solution work multiple outlets anything nice use", "d": "11/2016"}, {"body": "might solve issue well case width set media queries bootstrap grid changing width hovering element addingremoving columns going suggest feature styles could use classes instead listing properties animate think might better could use gt tell animation go current width new width also explained open suggestions fix issue current implementation", "d": "11/2016"}, {"body": "feature coming fully automatic waiting web workers pr go first feature web workers", "d": "11/2016"}, {"body": "use still animate something initial state", "d": "11/2016"}, {"body": "delagen happens automatically animation interrupted within trigger change code", "d": "11/2016"}, {"body": "matsko make transition start current styling state last transition", "d": "11/2016"}, {"body": "happens animation interrupted midway take snapshot styles already applied currently animated merge together starting state styles pass styling first frame animation regards asking need clarification asking animate styling present element interruption animation minus starting styles newly assigned starting state asking use applied inline styles element outside animation triggers apply styles", "d": "11/2016"}, {"body": "also work automatically soontocome feature", "d": "11/2016"}, {"body": "ran similar issue nested components modules resolved changing templateurl value mycomponenthtml mycomponenthtml mycomponenthtml located directory mycomponentts file component defined component moduleid moduleid selector myselector templateurl mycomponenthtml note inlining template also worked better option angulario docs show using mycomponenthtml instead mycomponenthtml perhaps update docs accordingly", "d": "11/2016"}, {"body": "real issue templatedriven forms need hack validators", "d": "11/2016"}, {"body": "still issue", "d": "11/2016"}, {"body": "nt want wait pr workaround use following taken js written annotations ts import directive elementref renderer contentchildren angularcore import navigationend router routerlinkwithhref angularrouter directive selector routerlink export class bmrouterlink contentchildren routerlinkwithhref descendants true linkswithhrefs", "d": "11/2016"}, {"body": "mlcmlapis run plunk app find individual request rxjs like miss something important", "d": "11/2016"}, {"body": "jiminsc hi plunk mean", "d": "11/2016"}, {"body": "mlcmlapis tks reply", "d": "11/2016"}, {"body": "jiminsc hi read carefully previous conversation necessary comment lines systemjsconfigjs file eliminate relation rxjs tried plunk works expected", "d": "11/2016"}, {"body": "issue using file combination bundled angular umd modules eg however much dislike reinventing wheel create bundle file prefer stick vendor provided files files presumably tested vendor dug found solution utilizing custom loader rxjs parts files concatenated one file order save additional http request disclaimer yet thoroughly tested yet ready production use though", "d": "11/2016"}, {"body": "hmm sure way better rebundling", "d": "11/2016"}, {"body": "mlcmlapis yes works thank much", "d": "11/2016"}, {"body": "mlcmlapis imho good choice whoever prefers customized build think worth nevertheless using vendor provided files much easier still struggling webpack create custom bundle way want seems easy fulfill requirements", "d": "11/2016"}, {"body": "leave gt void transition ignored ngfor", "d": "11/2016"}, {"body": "vicb curious given question new commit better way address issue hack actually broken well", "d": "11/2016"}, {"body": "amcdnl success following starting", "d": "11/2016"}, {"body": "scttcper ok actually helped able abstract specific logic make work standalone service code others import applicationref componentfactoryresolver componentref injectable injector viewcontainerref embeddedviewref type angularcore injection service helper append components dynamically known location dom noteably dialogstooltips appending body export class injectionservice injectable export class injectionservice private container componentref constructor private applicationref applicationref private componentfactoryresolver componentfactoryresolver private injector injector gets root view container inject component returns componentref memberof injectionservice getrootviewcontainer componentref thiscontainer return thiscontainer overrides default root view container useful things like ngupgrade nt applicationref root param container memberof injectionservice setrootviewcontainer container void thiscontainer container gets html element component ref param componentref componentref returns htmlelement memberof injectionservice getcomponentrootnode componentref componentref htmlelement return componentrefhostview embeddedviewref rootnodes htmlelement gets root component container html element returns htmlelement memberof injectionservice getrootviewcontainernode htmlelement return thisgetcomponentrootnode thisgetrootviewcontainer projects inputs onto component param componentref component param options returns componentref memberof injectionservice projectcomponentinputs component componentref options componentref options const props objectgetownpropertynames options const prop props componentinstance prop options prop appends component adjacent location template param type componentclass param options param element locationthisgetrootviewcontainernode returns componentref memberof injectionservice appendcomponent componentclass type options location element thisgetrootviewcontainernode componentref", "d": "11/2016"}, {"body": "amcdnl seem gotten working code something happening change detection similar issue", "d": "11/2016"}, {"body": "patrickmichalina ran shoot email gmail", "d": "11/2016"}, {"body": "amcdnl appears dynamicly rendered components within dynamically rendered components using older hacky method everything worked fine angular longer available code works first dynamic components failing nested ones nt make sense think using combination methods causing problem investigate post issue persists refactor using newer apprefattachview api", "d": "11/2016"}, {"body": "controlvalueaccessor formgroup formarray implementing controlvalueaccessor child component multiple form controls want apply validators child control pass formgroup input wo nt work ngmodel also possible use formbuilder formgroup inside child component", "d": "11/2016"}, {"body": "would like almost thing salmansgit juste need fields dynamic posted messages stackoverflow would nice answer", "d": "11/2016"}, {"body": "hi igorminar instead using inline html add svg use following code nt get warnings mean secure render svg way another question access add css style thanks", "d": "11/2016"}, {"body": "junjunruan yes form svg rendered browser context like interfere page insecure ways also able use effect less markup", "d": "11/2016"}, {"body": "thanks mprobst works however inspect element nt show svg tag know access dom element change svg colors", "d": "11/2016"}, {"body": "junjunruan ca nt access svg internals embedded element using stuck svg", "d": "11/2016"}, {"body": "thanks skreborn think good way dynamically change style svg tried use svg inside two issues ca nt get inside ngafterviewinit query dom element inside mouse events think overhead ca nt use elementcsslistadd classname whatever way dynamically add css class change style svg plunker built", "d": "11/2016"}, {"body": "junjunruan use viewchild get hold element see updated plunker sadly way change style css svg inlined", "d": "11/2016"}, {"body": "fixed", "d": "11/2016"}, {"body": "hello kara next tutorial please explain access values multiple checkbox radio buttons hit submit button sorry new angular", "d": "11/2016"}, {"body": "updates", "d": "11/2016"}, {"body": "problem", "d": "11/2016"}, {"body": "ran similar issue piece application came use case implementation ts import abstractcontrol asyncvalidatorfn angularforms import observable rxjsobservable import observer rxjsobserver import subject rxjssubject import subscription rxjssubscription export class asyncobservablevalidator static create validator observablevalidatorfn asyncvalidatorfn let sourceobs new subject lt xx subject cause memory issues leaking subscriptions let validatorobs validator sourceobsasobservable params observable observablevalidatorfn takes observable emits form control abstractcontrol validated return observablevalidatorfn returns observable emits validation result export interface observablevalidatorfn observable observable observable", "d": "11/2016"}, {"body": "vicb reading docs excited aot direction one thing find translate attribute text example missed documentation open ticket thanks", "d": "11/2016"}, {"body": "martinmcwhorter think add attribute", "d": "11/2016"}, {"body": "actimeo seems work tried", "d": "11/2016"}, {"body": "documented pending pr push merged soon cc wardbell foxandxss", "d": "11/2016"}, {"body": "closing issue contained", "d": "11/2016"}, {"body": "fixed trying make tour heroes work", "d": "11/2016"}, {"body": "n effort gain deeper knowledge angular wish someone would create depth explanation tutorial underlying structure components directives containers views per docs component container contain two kinds views host views created instantiating component via createcomponent embedded views created instantiating embedded template via createembeddedview location view container within containing view specified anchor element view container one anchor element anchor element single view container root elements views attached container become siblings anchor element rendered view leaves many open questions host view referring element component resides embedded view referring component template true cases created manually via createcomponent well created declaratively via another hosting component parent case directives well template thus view works shadow dom environment browser actually support component host vs emulated environment angular lot magic effort become expert wish better understand maybe via visual diagram entire relationship viewcontainerref host views templates embedded template viewchild viewcontainer hierarchy components directives consider extremely well versed delivered huge project already still feel holes understand underline internal workings sure need know car works drive one handle much better agree sergeykoretsky really need low level well put tutorial angular team better understand relationships thanks always sean", "d": "11/2016"}, {"body": "posted far help", "d": "11/2016"}, {"body": "found better solution problems quick intro concepts overview", "d": "11/2016"}, {"body": "please remove post otherwise marked spam related", "d": "11/2016"}, {"body": "default error handler always rethrows ref imo nt task error handler rethrow custom exception handler would also carry burden situations stated", "d": "11/2016"}, {"body": "kemsky could nt find anything setcontent mentioned workaround could help", "d": "11/2016"}, {"body": "zonejs set peer dependency angular relationship angular zonejs requires peer", "d": "11/2016"}, {"body": "current status news helpful use case would help app would much valuable", "d": "11/2016"}, {"body": "using party library calls seeing cpu usage google chrome helper go roof using anything nt control called", "d": "11/2016"}, {"body": "harryjubb whenever use party module run outside zone", "d": "11/2016"}, {"body": "thank bit nervous trying wondered would break interactions party module ngl app tell far running constructor webgl stage creates outside angular zone works cpu usage much lower events emits still picked app far tell thanks help", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "must agree feature lets us add contributing attribute directives host would great know could use feature right implementing angular like way adding dragdrop functionality ui components creating new tag similar lets apply component template instead metadata property something like indicate directives added host component", "d": "11/2016"}, {"body": "jjstreet proposal sounds similar obviously identical similar deprecated ago perhaps deprecated reason would nt apply pkozlowskiopensource could get response kind team", "d": "11/2016"}, {"body": "game way achieve suggested host property access local scope component already adds attributes component directives seem like natural extension behavior", "d": "11/2016"}, {"body": "feature required clean reusable code ui components", "d": "11/2016"}, {"body": "vicb mhevery pkozlowskiopensource may work first time contributor angular thank", "d": "11/2016"}, {"body": "yep hotlist communityhelp issues usually good start also good think let people know working issue adding comment thanks let us know need directions", "d": "11/2016"}, {"body": "vicb could please provide guidance following issues encountered sure file need edit handle error besides running tests run angular program machine test code modified thank much", "d": "11/2016"}, {"body": "vicb update take", "d": "11/2016"}, {"body": "laumair still working waiting vicb help questions", "d": "11/2016"}, {"body": "bump", "d": "11/2016"}, {"body": "believe fixed", "d": "11/2016"}, {"body": "dabishman work bunch things could wrong see get support", "d": "11/2016"}, {"body": "hi guys status fo mental model creating placing component programatically straight forward quite sure ngcontent resolve component create component viewcontainerref place button container add add content need add button title generic maner thank pointers frank edit temporary solution works nativeelementappendchild ideally supported api", "d": "11/2016"}, {"body": "hey guys difficulty ngtemplateoutlet ngoutletcontext trying get dynamic table component work using templates cells row data applied context template shows parent context template originally created think thought might good use case see well component component selector simpletable template columndisplayname export class simpletablecomponent input data array contentchildren simpletablecolumndirective children querylist data parent component html trying use displayed rows show middle two columns nameenabledtypeother type true data name simple activity enabled true type name complex activity enabled true type true data name simple activity enabled true type name complex activity enabled true type guys thoughts feeling bit lost", "d": "11/2016"}, {"body": "samuelgay github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "alexeagle amazing get jsdoc annotations distributions testing today found tsickle actually already convert format modules great news even better cloned tsickle locally commented conversion goog modules able get tsickle gcc advanced working perfectly webpack build hoped got main bundle full smaller without anything annotated yet looking exciting promising top investigation today see transpile modules none replace googrequire commonjs require calls really good news means projects use tsickle asis already today tools support esmodules like rollup long replace commonjs calls imports fortunately ts made much easier eliminating need use nontypescript code really eager see much save es distributions type annotations tsickle well especially still nt tree shake reexports savings removing lots bundled unused angular corecommonetc code could really big", "d": "11/2016"}, {"body": "decided give try well cloned latest still running issues two categories errors compilation errors closure error described others solution publish angular source without closure keywords angular source code comments causing compilation errors bundling using rollup closure compiler plugin using rxjses instead rxjs since ran issues commonjs conversions curious plan tsickle vs ngc tell run tandem plans combine reduce one step interested seeing far go guess really comes structure code could potential huge code reductions non angular poc closure tell closure enormous potential comes code optimization sample reduced several classes one liner still unclear well translate angular applications hopeful though", "d": "11/2016"}, {"body": "pr use code jsdoc closure thelgevold want try investigate robwormald", "d": "11/2016"}, {"body": "alexeagle awesome trying using versions get error ngc fully sure meaning message thoughts resolve", "d": "11/2016"}, {"body": "tbosch made change subsequent mine updated metadata collector angular expects read version metadata however version metadata encountered upgradeinplace looks like bug let tobias confirm", "d": "11/2016"}, {"body": "commit", "d": "11/2016"}, {"body": "one thing try generated files project try cleaning retry", "d": "11/2016"}, {"body": "alexeagle playing little bit running compilation issues named imports like think read somewhere closure nt currently handle named imports go convert imports absolute paths seems fix compilation errors many errors fix manually though converting references like angularapplication code seems work sample error gave repo try well seems like thing happening wonder something could added closure resolve named import like corresponding physical path", "d": "11/2016"}, {"body": "thelgevold found well problem registered since esmodule semantics undefined spec saying fooindexjs may imported foo since commonjs allows rollup systemjs support unspecified therefore response closure team module loader problem nt support also chat matrixfrog suspect changing solves well though useful workaround since user code would imagine converting module syntax commonjs another approach though adding tool makes build much harder anyone reliably reproduce", "d": "11/2016"}, {"body": "yeah unfortunately issue hung sure really straightforward solution may give tsickle since even imports add end paths imports within libraries eg importing etc also correct paths gcc support give thought meantime sounds like gcc advanced may possibility general user anytime soon unless anyone else ideas", "d": "11/2016"}, {"body": "would possible ngc output js long hand notation imports shield user using typescript code part release angular code basically publish version long form imports", "d": "11/2016"}, {"body": "good idea internally tsickle convert googmodule syntax able use different conversion give explicit imports indexjs wed nov torgeir helgevold notifications githubcom wrote would possible ngc output js long hand notation imports shield user using typescript code part release angular code basically publish version long form imports receiving mentioned reply email directly view github mute thread", "d": "11/2016"}, {"body": "kudorgyozo core nt really angular issue rather tooling needs support scoped modules probably much document issue upgrade registries appropriate folks using nexus version available provides muchneeded upgrade functionality branch", "d": "11/2016"}, {"body": "one work around helped us use dependencies private dependencies hosted nexus create npmrc file content like note hope nexus registry group type npm hosted private deps npm proxy points", "d": "11/2016"}, {"body": "looks like fundamental issue considering using ngupgrade upgrade existing app working convert directives components existing app plan upgrade using ngupgrade module already working setup environment changed plan hold ngupgrade become stable workable seeing issue", "d": "11/2016"}, {"body": "believe longer actual env works fine", "d": "11/2016"}, {"body": "sth ultimatelly get api built browsers try favorite browser chrome firefox saying chrome firefox good thing rather logic currently implemented browsers angular decided use actual work given got options close works designed reconsider usage would substantial change", "d": "11/2016"}, {"body": "hm problem pageformsubmit simply calls register usersregister hitting local unit test database register event eventpreventdefault", "d": "11/2016"}, {"body": "hello mattxo oh normal app making http request ca nt fake mock http backend fun angularjs batteries included pattern typescript", "d": "11/2016"}, {"body": "hey yjaaidi thanks sample code prefer mock backend case though help test performance nt issue local database fakeasync case make work formsubmit tick wait promises resolve really like possible xhr run synchronously called fakeasync register promise returned formsubmit possibly better still pagesubmitbuttonclick nt seem possible either", "d": "11/2016"}, {"body": "news one dqweek approach patched", "d": "11/2016"}, {"body": "dzmitryshylovich nt seem related", "d": "11/2016"}, {"body": "yeah nvm", "d": "11/2016"}, {"body": "issue workaround worked far yet got removed angualr release general think angular provide proper way directives getting reference components attached way directives components interact directly thus allowing directives enhance components like others mentioned news issue unsolved directives powerful thus helpful could", "d": "11/2016"}, {"body": "wrong using base class token component use inject directive like want inject component directive must certainly know something component classinterface wo nt able interact", "d": "11/2016"}, {"body": "thanks much solution work perfectly nt know self decorator angular documentation probably updated include approach", "d": "11/2016"}, {"body": "sorry ca nt reproduce problem following instructions provided problem still exists please open new issue plunkr reproducing problem", "d": "11/2016"}, {"body": "vsavkin still issue angularcli angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter version angular try see resolved thanks", "d": "11/2016"}, {"body": "ok probably fixed newer versions tried works thanks", "d": "11/2016"}, {"body": "produced test case", "d": "11/2016"}, {"body": "newbie angular really confused using net web api server code returns json data client end fetching data using jsonp able see data coming status using inspect element network tab chrome returned observables service flowing error section subscribe method error message please help note function mycallback service errormessage object body jsonp injected script invoke callback status ok true statustext ok type url", "d": "11/2016"}, {"body": "sounds like confusing confused function need called mycallback needs pass back json data function whose name angular passes mycallback case unpacking json angular receives back mystuff yeah possible wrong day banging head wall works", "d": "11/2016"}, {"body": "backend return data must present following form ex php echo get callback jsonencode result", "d": "11/2016"}, {"body": "thanks guys sambanthar nicholaswestley earlier api gives json data instead jsonp reconfigured returns jsonp works", "d": "11/2016"}, {"body": "news regarding issue still experience major performance issues thing helps change detection manually eg every seconds", "d": "11/2016"}, {"body": "people still experiencing issue ie corejs could please provide minimal plunker latest latest corejs reproduce scenario would speed investigation amp resolution", "d": "11/2016"}, {"body": "update initial plnkr lastest angular corejs enableprodmode windows machine measured time display loading app component list items takes chrome profiler nt show anything wrong really definitely need reproducers investigate issue", "d": "11/2016"}, {"body": "mlaval thank much looking would hard reproduce test using document close issue thanks", "d": "11/2016"}, {"body": "scenario latest perf similar profiler thing though perf bad dev mode takes load list items nt happen corejs", "d": "11/2016"}, {"body": "dev mode always slow use debug renderer creates debugelements marc numbers prod dev mode mon nov marc laval notifications githubcom wrote scenario latest perf similar profiler image image thing though perf bad dev mode takes load list items nt happen corejs receiving mentioned reply email directly view github mute thread", "d": "11/2016"}, {"body": "particular scenario dev prod corejs dev mode super slow", "d": "11/2016"}, {"body": "happy help speed things dev mode anyone point specific methods angular using slow", "d": "11/2016"}, {"body": "ljharb culprit seems mlaval thanks perf tests could please attach profile could please create issue angulario warn perfs", "d": "11/2016"}, {"body": "finally found least issue related ngfor applying fix manually zonejs solved problem yes use websocket unfortunately fix part release til", "d": "11/2016"}, {"body": "interested know many items stored map hand looks like hitting slower linear search part map implementation would also make sense corejs faster since uses different implementation avoid linear lookups bolting nonenumerable uid property key objects bolting properties bit gross touching objects nt avoids linear lookups ie actually limited support builtin mapset maybe cases could use internal data store map update nov looks like demo creating maps size maps small highest size setting objects keys hits slower linear search considering setting getting values object keys hit slower linear search makes sense perf issue based numbers update nov opened pr address perf issue see results try ie perf issue nt reproducible edge least perf problem without examples commented", "d": "11/2016"}, {"body": "think face issue trying use element app apphtml lt scope documentgetelementbyid eventscope amp gt lt scopecompleted function toastshow stepper completed amp gt lt scopesaved function toastshow step saved amp gt lt scopeupdated function toastshow step updated amp gt appmodule regards", "d": "11/2016"}, {"body": "cissecedric please wrap code triple backticks make readable", "d": "11/2016"}, {"body": "sorry zoechi thanks know trick previous question found workaround removing template tags used jquery access paperstepper element methods", "d": "11/2016"}, {"body": "think issue theme described nutshell must builtin solution caching reusing every previously rendered one browser session component ideally something like russiandoll caching nested fragmentcomponent caches checking update every showed component background rerendering new data fetched behaviour called reactivity meteor community mistaken heavily used framework outofbox see something immediately action browser get confirmation data server correct dom elements actual data needed suggested components drawn cache prewritten code", "d": "11/2016"}, {"body": "problem solved problem accedentally imported module travelsmodule travelsmodule recursive import results probem removed import problem solved problem related minified files example pasted commented wrong line typescript ngmodule imports commonmodule routermodule travelsmodule lt line causes problem declarations export class travelsmodule", "d": "11/2016"}, {"body": "ten days debugging thing resolved switching inline template templateurl issue occur systemjs webpack build systemjs build following indexejs selector root app component bootstrapped ngmodule root app component template two entries first router outlet chrome components selector chrome component two routerlink entries additional component views first checked unused methods solution per initial comments bvaughn effect also checked component circular references started yanking away functionality trying bootstrap main app component still error started fresh app directory host redeployed case cached value issue throughout webpack building successfully chrome spewed call stack errors firefox said much recursion lines error messages referencing webpack outputted file generally around creating either module app view prototype since occurs webpack logged new issue linking back thread", "d": "11/2016"}, {"body": "currencypipe accept null valid input currencycode argument case behave like decimalpipe ie display number nt think case programmers expect given number represent currentcy tat displayed currency proper currency code currency specified changed converted number going close one wo nt fix going implement configurable default currency code instead see need functionality describing issue could create custom pipe wraps existing currency decimal pipes", "d": "11/2016"}, {"body": "isred elementstylebackground else elementstylecsstext", "d": "11/2016"}, {"body": "click back button app view correct url correct according view works fine click nav links overcome", "d": "11/2016"}, {"body": "hey news workaround", "d": "11/2016"}, {"body": "able test today nt work resulted tried number workarounds including modifying array nothing worked", "d": "11/2016"}, {"body": "case using official quickstart tutorial got error answer helped used cheers", "d": "11/2016"}, {"body": "final situation changed information find seems modules angular final", "d": "11/2016"}, {"body": "also problem implementing custom router outlet cache components route activated many times different parameters usersfoo usersbar problem router automatically reuse active component route users id activate component url usersfoo click link url usersfoo router call activate method custom router outlet update activatedroute active component want tell router reuse components route users id always call deactivate activate methods custom router outlet custom router outlet redisplay component cached else create new component", "d": "11/2016"}, {"body": "hi anilanar isstring removed public libraries use isstring isblank array", "d": "11/2016"}, {"body": "another question regarding dynamic template urls multiple html files different languages component depending users language use correct html file ca nt done way", "d": "11/2016"}, {"body": "hi guys update issue workaround thanks", "d": "11/2016"}, {"body": "using formcontrol formcontrolname nt update model either using backspace getting worked soon making text input users really unreliable", "d": "11/2016"}, {"body": "looks like duplicate issue detailed information issue", "d": "11/2016"}, {"body": "prakashchoudhary figure problem", "d": "11/2016"}, {"body": "chevalierc yes missing two parameters jsonp call wtjson amp jsonwrfjsonpcallback adding parameters request url able get response", "d": "11/2016"}, {"body": "get similar error seems related ngchanges seems affect ios desktop safari", "d": "11/2016"}, {"body": "little demo ngeurope remember someone team panel saying basically ready news", "d": "11/2016"}, {"body": "fxck getting ready add languageservice module repository go sometime week ready delayed pr referenced last change need angular able commit would say basically ready however alpha state checked sources experimental follow semver semantics rest angular experimental exemption deprecation vs code extension probably make next week given short week still significant work extension", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "new working creating large form creating dynamic input types something made lot sense usecase workarounds think something could run lot plunker reproduces simple way", "d": "11/2016"}, {"body": "hey alexeagle dts files spread among many files way create dts files angular bundles javascript files bundles folder combine type def files one dts one desktop applications using wpf ie embedded browsers really nt want create dependency npm add dts files vs project", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "already fixed", "d": "11/2016"}, {"body": "eta might get addressed ideas work around", "d": "11/2016"}, {"body": "supported issue link longer works", "d": "11/2016"}, {"body": "yeap", "d": "11/2016"}, {"body": "still issue final", "d": "11/2016"}, {"body": "duplicate fixed one fixed well verified plunkr", "d": "11/2016"}, {"body": "system undefined still facing issue tried including whatever told indexhtml rportal loading systemimport mainjs vendorsminjs bundled polyfills please help please let know information needed", "d": "11/2016"}, {"body": "already opened separate issue unrelated one please follow ericmartinezr suggestion moving question support channel instead bug report feature request", "d": "11/2016"}, {"body": "plunker shows currently solving issue latest angular", "d": "11/2016"}, {"body": "thanks insight seems like lot boiler plate code single requirement sad angular team removed required label even though effort set easy angular team could give us status update", "d": "11/2016"}, {"body": "agree removed stuff still classes necessary", "d": "11/2016"}, {"body": "roben found time reduce plunker minimum currently think", "d": "11/2016"}, {"body": "thank much work really sleek solution suffices maybe seen solution whole issue", "d": "11/2016"}, {"body": "think accessibility perspective screen reader user typing field hearing repeated alert form field invalid would nightmare screen reader user providing solution validate onblur would helpful update get one", "d": "11/2016"}, {"body": "second scenario fxck cited imo async validation often need fired blur hacked around app async validators return different error focused filtering display logic kind ugly add think setting specified peruse basis rather pervalidatortype perform experience error message announced dom element addedshown assuming using nt hear keystroke", "d": "11/2016"}, {"body": "good morning everyone please need help facing problem witch seem similar one describe able solve error message receive build process error template parse errors one component button item ngc failed ionicappscript task build error error", "d": "11/2016"}, {"body": "stchoukeu contributing got question problem", "d": "11/2016"}, {"body": "please problem ca nt go trought wrote burton item component le nov pm g\u00fcnter z\u00f6chbauer notifications githubcom \u00e9crit stchoukeu contributing got question problem receiving mentioned reply email directly view github mute thread", "d": "11/2016"}, {"body": "brandonroberts got error want inject service directive like example posted question thank", "d": "11/2016"}, {"body": "slimovic chk demo made", "d": "11/2016"}, {"body": "also issues routerlink undefined easily happen instance items routerlink created using ngfor current behavior send user route undefined seems pretty illogical expectation argument routerlink undefined user clicks item nothing happen", "d": "11/2016"}, {"body": "expected behavior emmiters throw error", "d": "11/2016"}, {"body": "solutions", "d": "11/2016"}, {"body": "fixed", "d": "11/2016"}, {"body": "nt support nested selectors really error support remove error", "d": "11/2016"}, {"body": "work around goto scroll page windowlocationhash myanchor", "d": "11/2016"}, {"body": "seems occurring targeting latest", "d": "11/2016"}, {"body": "issue morning turned one libs dependencies instead devdependencies packagejson issue noticeable lib brought angularcli project angularseed worked", "d": "11/2016"}, {"body": "solve commands update typescript adding declare top promisedts file project solution come previous comments issue thanks", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "error message slightly improved reads think far get simple error message changes next big improvement could come dedicated pages error type could list common issues offer alternatives going close issue since error message better dedicated error pages beyond scope issue", "d": "11/2016"}, {"body": "mhevery since post rc fresh look", "d": "11/2016"}, {"body": "could done backward compatible way", "d": "11/2016"}, {"body": "one na\u00efve implementation flags", "d": "11/2016"}, {"body": "idea enable feature", "d": "11/2016"}, {"body": "agree need incrementally add angular older projects would helpful tag prevents certain passed content skipped angular parser assuming ngcontent actually gets implemented root components", "d": "11/2016"}, {"body": "root component planned afaik security reasons", "d": "11/2016"}, {"body": "reference would issue security seems different manually injecting different templateurl component nevermind decided drop angular projects seemingly missing lot features integration frameworks division packages seems odd since ca nt use features isolation guess probably works well silo willing take whole framework specifically spa", "d": "11/2016"}, {"body": "arciisine thanks worked", "d": "11/2016"}, {"body": "litiang still idea indicatorstyle invoked one input changes u give explanation since bound view always invoked change detector runs happen regardless whether inputs actually changed found ngdocheck execution two times know first one executed really confused second ngdocheck likely mentioned earlier thread change detection always runs twice dev mode verify nt code changes bindings change detection might cause difficult bugs production", "d": "11/2016"}, {"body": "variation settimeout update cpu went nuts without companionheightlast comparison afaik updates going recursive plunker example wanted height dynamic block control height bound companionheight evil following works using observable element whose height monitored element controlled component methods interact typescript import component oninit afterviewchecked elementref angularcore redacted import observable rxjs component selector resumetitlelist templateurl titlelistcomponenthtml styleurls titlelistcomponentscss export class titlelistcomponent implements oninit afterviewchecked private error object private companionheight number private companionheightlast number lots irrelevant stuff like nginit redacted simplicity constructor private elementref elementref redacted mine complicated setcompanionheight listelement let clientrect listelementgetboundingclientrect clientrect thiscompanionheight clientrect height window resize happens window resized initialization function sets initial size image without image height initially zero image shown height correct ngafterviewinit used ngafterviewchecked instead ngafterviewchecked let ularray thiselementrefnativeelementgetelementsbyclassname titlelistul ularray amp amp ularraylength gt let h ularray getboundingclientrect height h amp amp h thiscompanionheightlast thiscompanionheightlast h observable h delay subscribe h gt thiscompanionheight h error gt thiserror error", "d": "11/2016"}, {"body": "comments closed issues might read angular team members posting question one channels contributing got question problem plunker reproduce", "d": "11/2016"}, {"body": "ca nt reproduce", "d": "11/2016"}, {"body": "dzmitryshylovich guess people tried including bar never showed based plunk long run everything observable create declaration time onpush works expected", "d": "11/2016"}, {"body": "vicb fixed using latest issue still present simple update model stage still causing error", "d": "11/2016"}, {"body": "issue nothing fix", "d": "11/2016"}, {"body": "change detection error occur stage normal model change", "d": "11/2016"}, {"body": "desugars colon semicolon appended user could write colon nt supported user nt put colon grammar would ambiguous see", "d": "11/2016"}, {"body": "like expand previous comment separate issues ca nt bind bspane since nt known native property parser error unexpected token expected identifier keyword string column bspane title overview pr fixes prevents also fixes desugaring desugaring notation attribute done input string tokenized prepends attribute name followed space tokenizes amp parses moment information directives possibly matched nt see would properly add instead space step goal removing ambiguity grammar support optional everywhere propose revised grammar language composed series tuples every tuple contains components alternatively tuple might composed single component key given true first tuple last tuple succeded character first component tuple key second component tuple expression second component optionally preceded character tuple optionally succeded character item remove ambiguity permit tuple nt see would feasible parse things note assumptions left assignment nt present challenge parse optional delimiters exists support fluent language one tuple composed single component key useful narrow matching elements directives valid input invalid input mhevery like know thoughts agree proceed pr", "d": "11/2016"}, {"body": "difference following", "d": "11/2016"}, {"body": "update petebacondarwin angular version use thanks", "d": "11/2016"}, {"body": "pr follow hope get", "d": "11/2016"}, {"body": "thank petebacondarwin", "d": "11/2016"}, {"body": "wonder example mentioned commented apr working get following compile time error ts property exist type matchers", "d": "11/2016"}, {"body": "necessary create custom typing file content like following custom matcher tohavesamesequences use reference course together matchersmymatcherts matcher tohavesamesequences defined import necessary matchersmymatcherdts matchersmymatcherts let custommatchers jasminecustommatcherfactories tohavesamesequences function util jasminematchersutil customequalitytesters array jasminecustommatcher return compare function actual expected jasminecustommatcherresult const result jasminecustommatcherresult pass false message let export custommatchers", "d": "11/2016"}, {"body": "trick use accesscontrolexposeheaders eg", "d": "11/2016"}, {"body": "know issue closed problem angular socketio using zonerun fixes though", "d": "11/2016"}, {"body": "final release chrisbouchard post led look compilerumdjs discovered make change root url paths seem work styles original changed clear explicit reason logic put place hard time understanding", "d": "11/2016"}, {"body": "need remove trailing slash thing actually also making mistake html page linking css file actually making silly mistake html page css file error getting inspection detects unknown css selectors provides ability declare class id htiong define parameter id class whatever declared html file", "d": "11/2016"}, {"body": "nt satisfied hack mentioned comment submitted change close issue approved merged master change allow declaration web root relative styleurl prefixed ie pull request reviewed please feel free reach questions", "d": "11/2016"}, {"body": "happen style urls put style code inside html file component works", "d": "11/2016"}, {"body": "robwormald would using webpack add script indexhtml somehow add component would like avoid add globally problem script exposing module", "d": "11/2016"}, {"body": "solution output files limiting browser support", "d": "11/2016"}, {"body": "similar problem change select correct value try set default value select empty selected solution", "d": "11/2016"}, {"body": "rkusuma full plunker reproduce required", "d": "11/2016"}, {"body": "zoechi sorry working using redux value passing different reference", "d": "11/2016"}, {"body": "issue still exists use mdinput", "d": "11/2016"}, {"body": "captaincodeman please give example much complex project complex routing view manipulation", "d": "11/2016"}, {"body": "sorry complex project since given angular nt use anymore simpler better frameworks nt require much work provide much nicer dev runtime experience esp without headaches recent webpack breaking changes strongly recommend looking polymer", "d": "11/2016"}, {"body": "fixed link broken", "d": "11/2016"}, {"body": "looks like fixed", "d": "11/2016"}, {"body": "robwormald igorminar status updates spoke w day think got pretty good use case issue discussed ability users reorder table header columns using controls scenario completely decoupled header container column cells code uses subscribe events like unfortunately since column headers draggables change use constantly diff columns unsubscribe old one subscribe new ones like contentchildren draggabledirective descendants true private draggables querylist private differ constructor differs keyvaluediffers thisdiffer differsfind create null ngaftercontentinit thisupdatesubscriptions thisdraggableschangessubscribe thisupdatesubscriptionsbind ngondestroy thisdraggablesforeach gt ddragstartunsubscribe ddragendunsubscribe updatesubscriptions const diffs thisdifferdiff thisdraggablestoarray using approach could clean", "d": "11/2016"}, {"body": "error still comes sometimes seems related router got stray comma end one routes", "d": "11/2016"}, {"body": "arloduff error message nt show anymore component without selector original issue reported new one reproduction issue track one", "d": "11/2016"}, {"body": "ericmartinezr thanks saw nt realize encountered issue thanks followup", "d": "11/2016"}, {"body": "solutions work situation promise resolved momentarily null value causes request triggered anyway solution worked easily cover scenarios", "d": "11/2016"}, {"body": "inject baserequestoptions getting similar issue still could fina soultion", "d": "11/2016"}, {"body": "kapoorruchi please read article topic also plenty examples", "d": "11/2016"}, {"body": "stefanniedermann please create new issue plunker reproduce commenting closed issues usually pointless", "d": "11/2016"}, {"body": "joshgarwood really really urge willing applying temp solution try solution left ugly long number like", "d": "11/2016"}, {"body": "temporary fix created custom pipe uses momentjs format date import pipe pipetransform angularcore import moment moment pipe name customdate export class customdatepipe implements pipetransform transform value string arg string string return moment value format arg use like views", "d": "11/2016"}, {"body": "issue accumulated lot comments thankful inputs getting harder see actionable vicb went entire issue comments short summary real issues raised people thrilled using polyffils understandable even usage polyffils documented inconsistencies intl api implementations across browsers intl api flexible enough cover usecases let tackle points one one ad yeh polyffils pain good news got documentation browsers support polyfill covered alongside deps course documentation one aspect could still argue would better dependency agree reality though either use polyffill roll code even roll code include payload increase even duplicate say browser functionality ad real question api broken beyond repair terms lacking features bugs inconsistency across browsers etc mean broken enough warrant custom angular version nt think got answer question get one making decisions given victor going look broken usages api see fixable either browsers polyfill see api broken point much hope roll angularspecific version focus next days review reallife issues intl api great beginning work going close issue duplicate track reallife issues api decide fixable", "d": "11/2016"}, {"body": "problem still annoying final version able validate input number text field actually possible validator reference abstractcontrol input typenumber user enter non numeric string value abstractcontrol null validator determine user enter anything entered invalid value solve see possibilities add nativeelement property abstractcontrol validator may check input validity add property abstractcontrol contains text effectively entered user validity input change operation numbervalueaccessor returns null user enters nothing returns nan user enters non numeric string easily done adding condition registeronchange function control value different contains numbervalueaccessor consistent behavior later another selector associate input type text like input datatypenumber formcontrolname", "d": "11/2016"}, {"body": "u provide repro plunker return nan non numeric string", "d": "11/2016"}, {"body": "see issue detail problem yes parsefloat return nan non numeric string problem numbervalueaccessor apllied input type number value inputs empty string user entered non numeric string plunker", "d": "11/2016"}, {"body": "add nativeelement property abstractcontrol validator may check input validity add property abstractcontrol contains text effectively entered user validity input solve issue according browser writes empty string value element case non numeric string", "d": "11/2016"}, {"body": "numbervalueaccessor access validity state native element validator cases input invalid return nan input valid value empty string return null input valid value number return number", "d": "11/2016"}, {"body": "may keep null value abstractcontrol model case invalid input add boolean property named abstractcontrol could avoid numbervalueaccesor manipulate native element", "d": "11/2016"}, {"body": "using ngl calls high cpu usage", "d": "11/2016"}, {"body": "run requestanimationframe outside angular zone using ngzonerunoutsidezone sat nov harry jubb notifications githubcom wrote using ngl calls requestanimationframe high cpu usage receiving mentioned reply email directly view github mute thread", "d": "11/2016"}, {"body": "obsolete solution kind interception problem would cool would explain great problem obsolete", "d": "11/2016"}, {"body": "squadwuschel write wrapper service rxjs make easy pipelines", "d": "11/2016"}, {"body": "delagen written http provider extending http problem register one http provider ngmodule around different implementations ca nt implement one place able inject uirouter extended see problems problems ca nt find good solution current solution german blog post rxjs subject", "d": "11/2016"}, {"body": "rxjs lot facilities interception", "d": "11/2016"}, {"body": "issue tracked", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "bastienjs plunker work working demo somewhere", "d": "11/2016"}, {"body": "answer", "d": "11/2016"}, {"body": "angularhttp repo find issue made npm package provides httplike service interceptor registering functionalities", "d": "11/2016"}, {"body": "also looking easy like solution", "d": "11/2016"}, {"body": "box solution interceptors roadmap solve problem solved solution", "d": "11/2016"}, {"body": "solve", "d": "11/2016"}, {"body": "problem diy solutions going compatible", "d": "11/2016"}, {"body": "excellent conversion ben nadel custom http client witoldsz seems like diy solutions supposed compatible part specific project example security config headers tokens differ across projects however somethings could common functions example linked like url path variable parsing adding content type adding xsrf cookie edit able use modified version sam storie typescript http client great advantage simpler first thought especially things like adding http basic auth header", "d": "11/2016"}, {"body": "kentoj tried creating npm package provide interface registering individual interceptors main idea structure would support kind use case interceptors specific project although many could shared looking forward improve solution kind feedback welcome", "d": "11/2016"}, {"body": "markpieszak hey mark wanted bring attention issue nt exists might mainly angularhttp repository nt exist private currently beg please provide kind simple solution andor check going http repository really really nt want rewrite much http class simple functionality dry rule", "d": "11/2016"}, {"body": "went private believe merged main angular repo believe sure least current goal leave user override implement http wrap things way agree would nice keep things consistent amp regard currently achieve lot options online choose well", "d": "11/2016"}, {"body": "liorarbel markpieszak first glance definitely seemed like violation dry implementation http client ended service accessing backend api gateway first implementation done could see valid use case creating custom http client every api gateway application interacts authentication may different content type may different xml json one may implement hypermedia hateoas one may forth creating global http interceptor could make things harder interact multiple apis different requirements could rule though angular apps communicate one backend api global interceptor may bad http interceptor module created seems like module could added used conditionally similar spring java uses annotation conditionally wire configure components based whether present least point official docs example least idea custom http client one mentioned sam storie earlier good candidate", "d": "11/2016"}, {"body": "kentoj much point view better actually special setup global http interceptor would less optimal custom http service wrapper fine option registerpluginto official http service would suit others well would allow party market extensions like angularjs could still choose wrapper solution", "d": "11/2016"}, {"body": "witoldsz propose implement option registering interceptor plugging since op stated angular phases like config run angular currently exists would ensure interceptor registered http calls made could something like voliva ends injection interceptoraware wrapper http without adding something like config run looks like best option interceptors angular http wrapper whether custom http client interceptoraware extension http custom http client either way looks like custom http client sorts way go unless propose adding config phase angular bootstrapper dependency injector", "d": "11/2016"}, {"body": "kentoj let bit rude nt see remotely matters many niche use cases http class would addition optional ability add interceptor even matter contrary would help tons people wrapped http class wrote tons coupled code add simple feature angular involves lines code mean even ended rewriting http class function signatures imagine many angular projects would get invalid one functions would change", "d": "11/2016"}, {"body": "liorarbel appreciate energy make good point coupling http class api make argument adding interceptor furthermore would probably use interceptor functionality existed must coming across interceptors first thing looked beyond simple http angular app first learned would subclass http add functionality displeased added complexity coupling class inheritance avoid classbased inheritance except know sure best tool job seems keep inheritance hierarchy troubles regarding custom http clients acknowledge usefulness custom http client value got write one copy sam storie ben nadel wrote custom http client felt like control understanding underlying process feels like contain leaks network http abstractions one place instead everywhere need make http call additionally implement hateoas since hateoas protocol defining domainspecific languages future see handling protocol custom http client interceptor since scope protocol management goes beyond simple interception since backend microservices may yet using hateoas may need custom http client microservice depending maturity level even still see using http interceptor requests authentication since expect authentication globally one client application comparing coupling custom http client interceptor api makes seem like using interceptor would coupled one method interceptor registration call yet claim previously made still stands would add interceptor functionality angular without adding bootstrap config phases bootstrap config phases could right answer spring similar thing dependency injection spring java app maybe right place add bootstrap config angular dependency injector may may option angular creator injector", "d": "11/2016"}, {"body": "although found http interceptors useful angular also drawbacks using global interceptors example used interceptors manage login status user happened dealing login request trap using global interceptor found complicated apps several types http connections want handle global one break approach instead manipulating http class several backend classes handle http requests one responsible specific task checking login request handling json etc changing http client limit application create different request types", "d": "11/2016"}, {"body": "ideas introduce something like based fetch api add abort async json parsing support interceptors etc problems like nt support progress", "d": "11/2016"}, {"body": "dzmitryshylovich thank much nice know would happy could keep us updated kentoj must initializationbootstrapconfigwe stage http service would stateful service holds interceptors added runtime take example authentication token header case usser logged server push interceptor handles authentication token headers never read single line angular implementation iead actually feasible hope embarrassing", "d": "11/2016"}, {"body": "event bubblingemission solution compatible routed components meaning components placed dom via way emit events routed components far know imo complex applications make heavy use router pages also tabs ideally routed components would use component model custom tags terms input output", "d": "11/2016"}, {"body": "dispatch dom events bubble usual way bubbling events outputs", "d": "11/2016"}, {"body": "let key objectkeys hash", "d": "11/2016"}, {"body": "maps orders keys hence iteration unpredictable set iteration unpredicable java mean nt iterated mistake made design become obvious practice much good angular fix thing please", "d": "11/2016"}, {"body": "also reading guide see accessibility mentioned features angular docs anywhere else", "d": "11/2016"}, {"body": "robwormald could post example multiple bootstrapped angular components page using new module syntax imports example outdated posted similar question alas workable answers since posted", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "thanks obvious solution nt occur staring long could nt see wood trees", "d": "11/2016"}, {"body": "im looking way use razor server side processor outputs html im using umbraco problem root component cant use existing html razor file outputed leading next question came related issues supposed intrigate body existing html used angular ngcontroller possible drop angular complitly edit found hack im using resolved", "d": "11/2016"}, {"body": "ngcontent supported root component short angular designed way experience suggests writing single page app stick choose different framework", "d": "11/2016"}, {"body": "jimmymain really helpfull ya im writing website application need embed serverside template means root component need support allow becuse tell razor output things becuse razor server language used client side meaning knowlage serverside wich see write nonesence clearly dont know im refering website application work real world local html site stick legecy systems recomended everyone follows rule would windows installed computer support users garbage common sense user write dont answer im offended wrote", "d": "11/2016"}, {"body": "wish offensive also build angular applications using c aspnet mvc know referring simply trying point angular built way terribly sorry found response offensive wish could assistance nt think going find angular suit particular albeit common style suspicion need use angular differently happy corrected proven wrong suspicion need embrace angular approach leverage razor views partial views obtained angular controller calls angular directives supported yet root components sorry ca nt help reason responded felt frustration attempting migrate coli said way managed achieve using angular migration components nt give anyone encouragement style around stay worried getting burned going route would concur", "d": "11/2016"}, {"body": "jimmymain guess exploded bit sorry im really frustrated use partials mush implamentation im using cms already il hack way hope head wont explode much left falls appart managed use import component angularcore hack taken param tagname function getexistingcontentbytag tagname var target documentgetelementsbytagname tagname component selector body ensure angular controlls whole page one root component template getexistingcontentbytag body currently way using existing html per use hack export class appcomponent seams work get another error cant figure dont know related follows followed angular guide xd", "d": "11/2016"}, {"body": "problem best luck manage get something working let us know used angular supplement existing application angular seems complete framework designed core application something easily tacked onto existing application let hope changes way still leverage either change approach", "d": "11/2016"}, {"body": "think relates import im really sure", "d": "11/2016"}, {"body": "jimmymain ok managed get working xd guess im new changed constructor everyting triggering way use", "d": "11/2016"}, {"body": "checked everything loaded browser limitations prevent getting rid files never loaded browser dart summit dart release mentioned notably reduced build output size still working improve anyway repo dart", "d": "11/2016"}, {"body": "please feature needed quite often", "d": "11/2016"}, {"body": "suggest", "d": "11/2016"}, {"body": "potential upcoming support svgnamespaced elements ie use case create svg block multiple components paths based component data classic use case svg elements vs x html elements something like returns", "d": "11/2016"}, {"body": "create plunker showing error describing work tue nov pm notifications githubcom wrote potential upcoming support ngforof svgnamespaced elements ie use case create svg block multiple components paths based component data classic use case svg elements vs x html elements something like component selector mycomponent template export class mycomponent data component selector g mysubcomponent template svg path export class mysubcomponent returns ca nt bind ngforof since nt known property svg g receiving mentioned reply email directly view github mute thread", "d": "11/2016"}, {"body": "silly mistake forgot import separate feature module thus directive nt recognized trying find property move along nothing see", "d": "11/2016"}, {"body": "closed", "d": "11/2016"}, {"body": "kind interested became irrelevant non actionable solution understood keep issues clean need close resolution issue least deserve answer", "d": "11/2016"}, {"body": "atom syntax highlighting breaks interpolated expressions use safe navigation operator anyone atom syntax theme package supports correct syntax highlighting safe navigation operator html interpolated expressions", "d": "11/2016"}, {"body": "bump really missing utf support properties templates", "d": "11/2016"}, {"body": "chance reopening issue well since di eventually bundled part angularcore alongside ui related code would really love use nodeserverside projects without depend entire angularcore thanks", "d": "11/2016"}, {"title": "vhtml work filters", "body": "vuejs version reproduction link steps reproduce fiddle added filter two uses one vhtml one mustache interpolations first one vhtml returns throws error console latter prints html code produced filter course rendered html supported mustache interpolations example vhtml hand render html expected rendered html actually happening vue recognize filter using vhtml record thing happens using vtext", "num": "4352", "d": "11/2016"}, {"title": "dynamic image url possible looping object", "body": "vuejs version reproduction link see fiddle expected use system users picture automatically displayed restful format vuejs displaying users picture tedious would rather try hacky work around actually happening following error thrown suggestions would helpful thanks", "num": "4351", "d": "11/2016"}, {"title": "routerview error", "body": "use routerlink anylink tags laravel blade import vuerouter vuerouter showing error uncaught typeerror righthand side instanceof callable mt ne se routerlinktinitprops routerlinktinitstate routerlinktttinit new routerlink eval n", "num": "4350", "d": "11/2016"}, {"title": "font tags stripped vue", "body": "vuejs version reproduction link expected would expect tags left alone vue intentionally stripping invalid html tags expect stripped instead actually happening tags appear stripped hidden although deprecated tag deprecated tags like nt stripped systems sufficiently behind times looking xdebug still render html contains tags digging little remove font tags left alone", "num": "4348", "d": "11/2016"}, {"title": "ctrl modifier enter key working", "body": "vuejs version looks like ctrl modifier enter key working works fires enter key matter ctrl pressed expected expected trigger clear ctrl key pressed hit enter actually happening clear triggered every time enter hit wether ctrl pressed", "num": "4347", "d": "11/2016"}, {"title": "template compilation error style attribute url", "body": "ran issue yesterday working page includes images css shapeoutside flowing text around based shape image include url shape image inline style attribute work stopped working upgraded vue latest earliest reproducible version working html compiled url style attribute string gets broken instead full url end vuejs version reproduction link steps reproduce go jsbin ignore cors error failing load shape image expected inspect html dev console full seen specified html actually happening instead become", "num": "4346", "d": "11/2016"}, {"title": "godawful error messages", "body": "slumps code produces unkown take got two errors originate unkown exceptional sight errors quite possibly nt ever link source stack trace eg commonjs akryum vuecomponents took time time actually improve something breaks actually points line file working point step shaky grounds guessing way away copy paste", "num": "4345", "d": "11/2016"}, {"title": "error parsing regular expression", "body": "error parsing file wireframesnodemodulesvuedistvuecommonjs line invalid regular expression get parse error seem offending lines var defaulttagre n g var regexescapere g var buildregex cached function delimiters var open delimiters replace regexescapere amp var close delimiters replace regexescapere amp return new regexp open n close g", "num": "4344", "d": "11/2016"}, {"title": "uncaught typeerror read property readystate undefined", "body": "randomly getting error uncaught typeerror read property readystate undefined apparent reason updating project v idea causing error", "num": "4343", "d": "11/2016"}, {"title": "get vue object jquery callback function", "body": "wrote code like however want use vm emit onsuccess function get vue object jquery callback function code wrote mounted", "num": "4342", "d": "11/2016"}, {"title": "webpack vue jinja", "body": "use webpackvue use jinja", "num": "4341", "d": "11/2016"}, {"title": "plans native support ideas leverage vuejs native library", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4340", "d": "11/2016"}, {"title": "js transition hooks bug keep alive component", "body": "hi everyone upgrading website vue got issue one questionfeature request website im trying upgrade transitions works follow component transition reacts next route router using keep alive directive unnecessary rendering ommitted trouble vue vuejs version reproduction link steps reproduce navigate router links expected expecting get results vue components animated using js hooks keep alive render properly maybe something wrong vue version actually happening components animated using js hooks animated side note possible use transitionmode example vue easy adding directive routerview thanks", "num": "4339", "d": "11/2016"}, {"title": "unable build vue windows using npmyarn run build", "body": "versions vuejs nodejs npm windows steps reproduce clone repo github npm install npm run build clone repo github yarn install yarn run build expected expected behavior versions vue build dist folder actually happening error could load c developmentgithubvuesrccoreindex imported c developmentgithubvuesrcentrieswebruntimejs enoent file directory open c developmentgithubvuesrccoreindex c processtickcallback modulerunmain run startup workaround appears imports use aliases defined buildaliasjs file work extension js used js added imports build succeeds", "num": "4338", "d": "11/2016"}, {"title": "dynamic template probs class binding working", "body": "try make dynamic template assign class condition base template template call vuejs increase columns get expected props value template variable ex try assign class present text also tried native class cant pass pros blockclass template possible way handle issue using laravel urgent please", "num": "4336", "d": "11/2016"}, {"title": "event handlers capturing mode wo nt removed", "body": "vuejs version reproduction link code pen see handler registered without removed expected second h function ternary statement returns new dom tree remove click event handler registered first h function actually happening click event handler removed bug fixed according mdn removal capturing listener affect noncapturing version listener vice versa bug fixed commit pr please review tell split another pr", "num": "4335", "d": "11/2016"}, {"title": "vmodeltrim bug report", "body": "vuejs version reproduction link steps reproduce expected actually happening sorry english good first bug report ok trim modifier vmode desktop browser ok mobile browser trim modifier remove space sentence mobile browser tested safari chrome mobile browser", "num": "4334", "d": "11/2016"}, {"title": "feature request precomputeprecache computed bindings beforehand determine need render", "body": "sure computed property caching works seems caching done fly render logic cycle render sort like precompute thinking since collect binding dependencies along first render anyway trace enduser developer side determine first properties within computed property methods invalidated needs recalculated already done vuejs next state change render called reexecute precache invalidated computed properties final values determine anything changed computed property changed dependency exists however render skipped entirely one might say howeve r approach includes chance wastefully precomputing computed properties situations might needed particular situation exist different ifelse block within render method precomputing outside ifelse blocks always required part initial scan render logic stated documentation one wishes ensure made invalidation dependencies regardless ifelse state situation short render firsttime boolean parameter flag firsttime renders require reflection property invalidation dependencies vuejs thus case already precomputation invalidated properties render since bound used anyway anyway precomputed computed properties render precondition render would allow better integration replace immutable state atom approaches shown example since replacing root state atom trigger render situations precomputed properties leaf values remain unchanged dependencies invalidated except computed properties also behind scenes means computed properties leaf values always automatically assumed cached default render logic cycle", "num": "4333", "d": "11/2016"}, {"title": "possible emit event component inside slot", "body": "vuejs version reproduction link events emitted component inside slot received emit testevent working parenttest works html methods test alert test ok vuecomponent child template template new vue el app", "num": "4332", "d": "11/2016"}, {"title": "please document using vueserverrenderer vuerouter together", "body": "hey currently really struggling get vueserverrenderer vuerouter work together using basically exactly code minus vuex stuff unable debug nt understand stuff happening code example better nothing nt giving enough information figure going wrong even code provide people help debug nobody currently gitter seems know works either documentation would fantastic figure someone else writes write given stuck right seems unlikely", "num": "4331", "d": "11/2016"}, {"title": "text input binding work correctly korean", "body": "vuejs version reproduction link steps reproduce type korean input ex expected shown input updated data actually happening shown input updated data see logs event show expected result event enough korean react works alright", "num": "4330", "d": "11/2016"}, {"title": "warning properties components props", "body": "vuejs version reproduction link steps reproduce one component similar vue warning expected eliminate vue warning actually happening think prop specified validation requirements respond warning warning occurred migration solve props avoid mutating prop directly since value overwritten whenever parent component rerenders", "num": "4329", "d": "11/2016"}, {"title": "grammar mistake documentation", "body": "okay use conjunction really appropriate instead", "num": "4327", "d": "11/2016"}, {"title": "virtual scroll list feature", "body": "mentioned might work virtual scroll list renders items viewport future wondering could logged feature request would really great solution many use cases thank great work makes vuejs", "num": "4324", "d": "11/2016"}, {"title": "", "body": "vuejs version steps reproduce see link click button sort list result expect consoled vue warn may infinite update loop component render function anyone tell wrong use customized filter correctly", "num": "4323", "d": "11/2016"}, {"title": "please extract vue core smaller modules flexibility", "body": "wondering plans extract vue core individual modules see currently two platforms specific vdom implementation etc mind would make sense modules could includedsubstituted needed perhaps sensible idea vue would submit featuredesign suggestions roadmap thanks", "num": "4321", "d": "11/2016"}, {"title": "suggestion reenable path support vueset", "body": "ability specify path vueset removed allowing object keys passed right running simply adds key object value particular reason functionality removed ca nt find anything documenting change guide api releasemigration notes main usecase form allows user update resource case page user change theme settings using vuex retrieving page data api storing field update form changed using addupdate property object send update request meaning send updated fields though read better practice define reactive data initially update later nt possible case since nt want send empty fields update endpoint seems strange define nested data initially within component ca nt add later shown", "num": "4320", "d": "11/2016"}, {"title": "firefox work", "body": "", "num": "4319", "d": "11/2016"}, {"title": "vue single slot rendering problem", "body": "env node vue vuetemplatecompiler vueloader reproduction link steps reproduce see repository expected expected show actually happening actually shows others related", "num": "4318", "d": "11/2016"}, {"title": "elseblock vuetemplatecompiler", "body": "vuejs version vuetemplatecompiler code result elseblock elseblock expected always able compile elseblock actually happening nt know", "num": "4317", "d": "11/2016"}, {"title": "npm run dev error", "body": "follow steps npm install global vuecli cd myproject npm install npm run dev last windowsnt info worked ends ok verbose cli c program filesnodejsnodeexe verbose cli c usersadminappdataroamingnpmnodemodulesnpmbinnpmclijs verbose cli run verbose cli dev info using npm info using node verbose runscript predev dev postdev info lifecycle myproject myproject silly lifecycle myproject script predev continuing info lifecycle myproject myproject verbose lifecycle myproject unsafeperm lifecycle true verbose lifecycle myproject path c npmbinnodegypbin mytestmyprojectnodemodulesbin c programdataoraclejavajavapath c c windows c c c program files common filesmicrosoft sharedtigerkin c program files bitvise ssh client c program filesnodejs c program filesgitcmd c program files microsoft vs codebin c usersadminappdataroamingnpm verbose lifecycle myproject cwd mytestmyproject silly lifecycle myproject args c node builddevserverjs silly lifecycle myproject returned code signal null info lifecycle myproject failed exec dev script verbose stack error myproject dev verbose stack exit status verbose stack eventemitter c verbose stack emittwo verbose stack eventemitteremit verbose stack childprocess c verbose stack emittwo verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid myproject verbose cwd mytestmyproject error windowsnt error argv c program filesnodejsnodeexe c usersadminappdataroamingnpmnodemodulesnpmbinnpmclijs run dev error node error npm error code elifecycle error myproject dev error exit status error failed myproject dev script node builddevserverjs error make sure latest version nodejs npm installed error likely problem myproject package error npm error tell author fails system error node builddevserverjs error get information open issue project error npm bugs myproject error nt available get info via error npm owner ls myproject error likely additional logging output verbose exit true", "num": "4316", "d": "11/2016"}, {"title": "rerendering functional component renders component slot", "body": "vuejs version reproduction link steps reproduce press run wait second expected see output actually happening shows second indicating component seeing slots", "num": "4315", "d": "11/2016"}, {"title": "documentation click demo button", "body": "picture working padding comes button makes clickable think css look like tested chrome could also mention class makes every demo visible unused scroll simply replacing", "num": "4314", "d": "11/2016"}, {"title": "watch working object prop working string prop", "body": "vuejs version reproduction link steps reproduce expected actually happening watch working object prop working string prop appvue hello app import firstcomponent componentfirstcomponentvue import secondcomponent componentsecondcomponentvue export default data return msg hello vue article components firstcomponent secondcomponent beforemount function headers emulatejson true function response thisarticle responsedatasubjects function response consolelog response firstcomponentvue component written author name article articleobj export default props name article data function return author thisname articleobj thisarticle mounted function watch article function consolelog jsonstringify thisarticle working name function consolelog thisname working author function consolelog lili", "num": "4313", "d": "11/2016"}, {"title": "vue single slot rendering problem", "body": "env vue vuetemplatecompiler vueloader reproduction link seems related vueloader bit difficult reproduce merely jsfiddle describe steps steps reproduce create file called export default snippet html code hello lalala lilili new vue el container components vbox require boxvue expected expected show actually happening actually shows others created related issue though issue proven mistake still nt gotten problem solved ps use vue problem exist", "num": "4312", "d": "11/2016"}, {"title": "improvement allow usage event modifiers functional component events", "body": "stop event propagation functional components include dirty piece code form would really neat could use standard vue event modifiers known standard templates perhaps form keep syntax similar existing syntax", "num": "4311", "d": "11/2016"}, {"title": "add controls attribute video tag programmatically", "body": "vuejs version reproduction link steps reproduce component vue videoresponsivevideo controls source src src type type export default props src type string default type type string default controls type boolean default false computed videocontrols return thiscontrols controls expected add controls attribute video tag actually happening props controls true controlscontrols want controls", "num": "4310", "d": "11/2016"}, {"title": "html codes render inconsistently", "body": "vuejs version reproduction link steps reproduce add template computed property data set renders differently expected render emoticon actually happening string renders emoticon variable renders text", "num": "4309", "d": "11/2016"}, {"title": "vue single slot rendering problem", "body": "vuejs version reproduction link single slot correctly rendered version children elements within vbox component rendered using vue correct version children elements within vbox component rendered though vue nt meaning vue yet steps reproduce see jsfiddle examples expected according single slot feature available vue actually happening seems working properly", "num": "4308", "d": "11/2016"}, {"title": "computed properties ca nt correctly track dependency relationship update", "body": "demo", "num": "4307", "d": "11/2016"}, {"title": "vue removing display block root div", "body": "found vue removing display block root div single page component following code working ver ver removing display block root div automatically export default name modal props size type string default small type type string default closeable type boolean default true isscroll type boolean default false data return id modal mathrandom showbackdrop false showmodal false mounted documentbodyclasslistadd dimmable methods clickcontent event eventstoppropagation open thisshowbackdrop true documentbodyclasslistadd dimmed settimeout gt thisshowmodal true settimeout gt elfirstchildstyletop documentbodyoffsetheight elfirstchildoffsetheight px close thisshowmodal false settimeout gt thisshowbackdrop false documentbodyclasslistremove dimmed closemodal thiscloseable return thisclose modal header background important scaleenteractive animation scalein scaleleaveactive animation scaleout fadeenteractive animation fadein fadeleaveactive animation fadeout", "num": "4306", "d": "11/2016"}, {"title": "ca nt mount jsdom element", "body": "everything works fine upgrade", "num": "4304", "d": "11/2016"}, {"title": "unexpected token importexport", "body": "vuejs version reproduction link packagejson name test version description scripts dev webpackdevserver open inline hot author license isc dependencies vue vuestrap devdependencies babelcore babelloader cssloader htmlwebpackplugin vueloader vuetemplatecompiler webpack webpackdevserver babelrc presets modules false webpackconfigjs var path require path var webpack require webpack moduleexports entry mainjs output path pathjoin dirname dist publicpath dist filename buildjs module loaders test vue loader vueloader test js loader babelloader exclude nodemodules devserver historyapifallback true noinfo true devtool evalsourcemap node v npm v error appear answer google work urgency steps reproduce expected actually happening", "num": "4303", "d": "11/2016"}, {"title": "calling methods inside data allowed", "body": "vuejs version reproduction link steps reproduce call method inside function expected method called like actually happening thrown migrating vue seems behaviour changed info migration guide vuemigrationhelper also says nothing bug possibility calling methods inside removed", "num": "4302", "d": "11/2016"}, {"title": "scopedslots undefined component nt scoped slot", "body": "vuejs version reproduction link steps reproduce check console expected think would nice empty object match component nt scoped slot would easier use condition instead", "num": "4301", "d": "11/2016"}, {"title": "regression", "body": "upgrading got following warning vuejs vue warn property method leaving defined instance referenced render make sure declare reactive data properties data option found component live demonstration look console clic toggle component button live demonstration warning", "num": "4300", "d": "11/2016"}, {"title": "overwrite child components ccs scoped styles feature", "body": "parent component ability overwrite child components style components styles currently way overwrite child components css style scoped styling selecor called would nice similar feature vue deep component styles normally apply html component template use deep selector force style child component tree child component views deep selector works depth nested components applies view children content children component example target elements host element component child elements dom copy code host deep fontstyle italic deep selector also alias gt gt gt use either two interchangeably deep gt gt gt selectors used emulated view encapsulation default use time see controlling view encapsulation section details", "num": "4298", "d": "11/2016"}, {"title": "computed properties ca nt correctly track dependency relationship update", "body": "demo update move loadp mounted created expected behavior information", "num": "4296", "d": "11/2016"}, {"title": "vue js type error vnode undefined", "body": "trying delete element list throws error vuejs typeerror vnonde undefined causes try delete element list objects clean entire list data structure array array objects item want delete ara childs another child item anyone help please", "num": "4295", "d": "11/2016"}, {"title": "update missed dependency", "body": "originally created test app vuecli ran project directory appeared ok ran console see error manually update vuetemplatecompiler well something wrong trigger first place", "num": "4294", "d": "11/2016"}, {"title": "vue work vue ok", "body": "bind vue link href show vue ok work use", "num": "4293", "d": "11/2016"}, {"title": "complex nested objects reactive", "body": "first post mistaken let say thank amazing framework inspires us maintain package called contextablejs uses schemabased objects describe application data model primary focus simplify serverside clientside data validation using expressjs graphql resolvers recently also started using vuejs vuecontextable plugin sure bug report feature request kindly ask directions handle reactivity complex object arrays class instances used suspect vuejs ca nt track changes arrays class instance objects though sure would difference case compare created example try vuejs version reproduction link steps reproduce run example play provided form expected model updated input changes actually happening model updated", "num": "4292", "d": "11/2016"}, {"title": "single file component conditional templates malfunctionning", "body": "hi sure vue subproject issue refers conditional templates started malfunction single file component since simple reproduction shown whereas note remove outer div class leave inner text indeed shown happen single file component eg jsfiddle works edit fix wrong jsfiddle link", "num": "4291", "d": "11/2016"}, {"title": "templatecompiler throw error upgrade vue", "body": "templatecompiler throw template syntax error component template contain exactly one root element use vueloader webpack upgrade vue today template vue component journeytitle authorname exactly component contain one root element really nt know wrong vuejs version demo simple demo", "num": "4289", "d": "11/2016"}, {"title": "vonce throwing error destroy custom component", "body": "version os vue webpack google chrome problem following html use vonce directive console throws error using vuerouter try change url following error occours looking vue source code devtools found problem occuring following function property undefined case throwing error tests static without vfor happens html tag like worked without vonce remove vonce code problem stops bug", "num": "4288", "d": "11/2016"}, {"title": "computed property got data property increment operator keep update", "body": "yesterday occasionally found discussion copy follow last line supposed got instead also created live demo jsfiddle exists digged code found reason solution maybe give pull request nt know whether need fix", "num": "4286", "d": "11/2016"}, {"title": "computed properties ca nt correctly track dependency relationship", "body": "demo properties p amp demo loadp methods load new data p found p index p index bug vm created call loadp modify new members p p new sval corresponding p new val nt reference elder member p p old sval computed properties based ca nt correctly track dependency relationship p sval cause error log working index p index index p index vue\u5bf9 p sval", "num": "4285", "d": "11/2016"}, {"title": "component root node changing broken", "body": "reproduction link", "num": "4284", "d": "11/2016"}, {"title": "custom render treenode scopedslot", "body": "ctxnodetitle result root node get rendered customed template tree component template datatitle vuejs version reproduction link steps reproduce expected actually happening", "num": "4283", "d": "11/2016"}, {"title": "found vue transition component ca nt nested elements solve problem", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4282", "d": "11/2016"}, {"title": "allow change delimiters browser build", "body": "hello currently change delimiters standalone build really annoying vuejs use delimiters twig mustache operators would like add vuejs twig template could allow change delimiters browser build anyway congratz awesome work max", "num": "4281", "d": "11/2016"}, {"title": "documentation extension needed dynamic components", "body": "vuejs version reproduction link steps reproduce sure chosen right solution guide lacks information dynamic components could nt produce result fiddle following guide could nt find anywhere properly catch event emitted dynamic component explicitly defined instance examples expected extend guide documentation topic actually happening hack proper solution tell", "num": "4280", "d": "11/2016"}, {"title": "virtual dom style problem", "body": "vfor render template array delete splice one virtual dom delete last elememt causing css chaos \u590d\u6742\u7ed3\u6784\u7684\u7ec4\u4ef6\u7528vfor eg var arr object object two \u4f1a\u6709display none \u51fa\u73b0", "num": "4279", "d": "11/2016"}, {"title": "virtual dom style problem", "body": "vfor render template array delete splice one virtual dom delete last elememt causing css chaos \u590d\u6742\u7ed3\u6784\u7684\u7ec4\u4ef6\u7528vfor eg var arr object object two \u4f1a\u6709display none \u51fa\u73b0", "num": "4278", "d": "11/2016"}, {"title": "list items delete refresh virtual dom", "body": "vue version list fetched ajax server page looks like generated using vfor last one item hidden try using documentgetelementbyid b delete item still using remove new last one also removed try hide items delete one itemthen fetch new data build list cames new items hidden confused", "num": "4277", "d": "11/2016"}, {"title": "vue vfor getting property method defined instance referenced render error", "body": "getting property method defined error using lt div class gt lt article vfor genre index formfielddataoptions gt lt span gt genrekey lt span gt lt article gt lt div gt var musicgenreid template musicgenreid data function return formfielddata id musicgenreid value null type select options key value latina img imgmusicgenreslatinojpg key value pop img imgmusicgenrespopjpg ready function methods vuecomponent musicgenreid musicgenreid var vuejs new vue el vuewrapper data ready function methods thing used kind code vuejs lt worked except course solve need formfielddata part component belong parentroot instance fyi lt div class gt lt article vfor genre index formfielddataoptions gt lt span gt genre lt span gt lt article gt lt div gt browser displays getting property jsfiddle check consolelogs look error chrome devtools vue tab shows instance child component component actually displays data", "num": "4276", "d": "11/2016"}, {"title": "keepalive\u4e0b\u56de\u9000\u5bfc\u81f4\u9875\u9762\u4e0d\u663e\u793a", "body": "\u6253\u5f00\u8be5\u9875\u9762 \u540e\u9000 \u518d\u6b21\u6253\u5f00\u8be5\u9875\u9762 \u540e\u9000 \u4e0a\u4e00\u4e2a\u9875\u9762\u6d88\u5931", "num": "4275", "d": "11/2016"}, {"title": "slot rendering checking needed", "body": "vuejs version reproduction link steps reproduce using vif slots full content slot rendered evaluating slot rendered causes errors data ready slot expected example data nt set stop attempts render actually happening slots rendered error nothing put page following dumped console worked", "num": "4273", "d": "11/2016"}, {"title": "ahead time aot compilation", "body": "people asking vuejs aot information forecast support aot future aor perhaps technical explanation shows vue need would good information references", "num": "4272", "d": "11/2016"}, {"title": "feature request use props flags", "body": "would nice allowed use custom props flags even properties value present values set component", "num": "4269", "d": "11/2016"}, {"title": "unicode character crashing vue", "body": "vuejs version reproduction link steps reproduce run jsfiddle see content visible expected would expect app run regardless unicode characters without errors actually happening vue character dom element attribute creating new vue instance found root instance warn mount index vue warn error rendering root instance warn anonymous function mount mount index typeerror set property isstatic undefined related", "num": "4268", "d": "11/2016"}, {"title": "vuetemplatecompiler breaks scoped css", "body": "using vueclasscomponent library vuerouter dom elements id therefore scoped css broken replicate simply install vuerouter test project exports using js like hellovue import component vueclasscomponent component export default class login name hello msg welcome vuejs app appjs import vue vue import app app import vuerouter vuerouter vueuse vuerouter eslintdisable nonew new vue el app template components app vue vueclasscomponent vuerouter also find impossible roll back vue want roll back vueloader library dependancy vue subdependancy vuetemplatecompiler install latest throw version mismatch error would nice able lock older version", "num": "4266", "d": "11/2016"}, {"title": "vbind without argument expects object array value", "body": "version initprops\u662f\u5728computed \u540e\u6539\u6210 router view gt articlecard gt card", "num": "4265", "d": "11/2016"}, {"title": "feature request destructuring template", "body": "use template works well try use object directive works good environment falls build example using html id name compiles sth like throw error compiling", "num": "4264", "d": "11/2016"}, {"title": "", "body": "html vuejs version", "num": "4263", "d": "11/2016"}, {"title": "use parent register event issue", "body": "use parent register event component event callback change component data component data changed include velse component trigger parent jsfiddle demo demo", "num": "4262", "d": "11/2016"}, {"title": "vuecli \u4e2d\u7684vue \u5347\u5230 vueloader\u5df2\u7ecf\u662f\u6700\u65b0\u7684\u4e86", "body": "error vue packages version mismatch vue vuetemplatecompiler may cause things work incorrectly make sure use version using vueloader vueify reinstalling bump vuetemplatecompiler latest", "num": "4261", "d": "11/2016"}, {"title": "bug bus", "body": "event placed created method method executed event component invoked time called mounted put", "num": "4260", "d": "11/2016"}, {"title": "", "body": "vuejs version steps reproduce expected working actually happening hi list elements want go edit clicked similar solution component working perfectly fine new one ca nt find component rendered got list annttitle js click got announcement edit snf div form shown use save ajax cancel set inedit null etc soon touch input inside edit div got soon get errors button edition working full error stack div used newedit working perfectly fine new annoucement ideas nt think error code really exactly logic another component working perfectly fine whole jshtml inside vue file", "num": "4259", "d": "11/2016"}, {"title": "cross browser issue vue api docs sidebar", "body": "viewing vue api docs safari sidebar seem render works chrome however chrome version safari version", "num": "4258", "d": "11/2016"}, {"title": "feature request react like hook shouldcomponentupdate vue lifecycle", "body": "think would useful hook like react shouldcomponentupdate vue lifecycle idea behind hook would dynamically prevent dom refreshing component data change use case attempting build component uses contenteditable text editor interface updates keyup dom refresh lifecycle results caret cursor resetting refreshed component option define component update would allow use contenteditable continuing update state vuex keep component references template reactive understanding react ability make rerender conditional would also big performance booster components lots dom refreshes like example big fan vue think adding lifecycle hook would open lot doors", "num": "4255", "d": "11/2016"}, {"title": "directive application structure", "body": "looking far wide could nt find suggestions wherehow structure directives vue project since directives defined even sure define outside file suggestions", "num": "4254", "d": "11/2016"}, {"title": "error occured refs webpack loading components asynchronously", "body": "\u5728 webpack \u5f02\u6b65\u52a0\u8f7d\u7ec4\u4ef6\u65f6 refs \u51fa\u9519 vuejs version reproduction link steps reproduce npm install npm run dev src \u4e0b\u7684 cardvue \u662f cardlistvue \u7684\u5b59\u7ec4\u4ef6 \u7236\u7ec4\u4ef6 cardlist \u6a21\u62df\u7684\u662f\u4f20\u7edf\u7684 feed situation infinite scroll \u6211\u7ed9\u5faa\u73af\u8f93\u51fa\u7684 card \u5b9a\u4e49\u4e86\u4e00\u4e2a expected refsfoo \u9879\u5bf9\u5e94\u7684 dom actually happening \u9879\u5bf9\u5e94\u7684 dom \u4e5f\u5c31\u662f\u8bf4\u7b2c n \u4e2a dom \u7528 \u672c\u4f8b\u4e2d\u4f7f\u7528 dom \u4e0b\u7ed3\u679c\u662f ps \u4e0d\u786e\u5b9a\u662f webpack \u7684\u8fd8\u662f vue sure blame webpack vue \u6bcf\u6b21\u60f3\u63d0 issue", "num": "4253", "d": "11/2016"}, {"title": "vbind style written style nt compile", "body": "minor issue nt compile get error raised", "num": "4252", "d": "11/2016"}, {"title": "\u5931\u6548\u4e86 \u52a0\u4e86webkit\u4e5f\u4e0d\u884c", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4250", "d": "11/2016"}, {"title": "test confusion", "body": "js key modifier function done new vue el el template data methods test function thisa var elfirstchild trigger keyup function e ekeycode nexttick function expect atextcontent tobe done ekeycode keycode represent enter key right ask gitter sorry disrupting", "num": "4249", "d": "11/2016"}, {"title": "feature request allow acess modifier von bound functional component", "body": "would nice share modifier functional components add ability extend standard modifiers simple cases work around adding additional props functional component cases difficult way believe feature help example feature create something like component handles input event focus", "num": "4248", "d": "11/2016"}, {"title": "vhtml gets completely refreshed rather patched rerendered", "body": "vuejs version reproduction link steps reproduce look moving html animation run seconds also check element tab developer tools visible elements representing vhtml changed expected animation complete dom element nt get reinserted actually happening guess html vhtml gets removed reinserted style changed", "num": "4247", "d": "11/2016"}, {"title": "undefined computed classname keys", "body": "vuejs version reproduction link classname generator outputs string undefined instead empty string computed key course possible avoid issue userland would nice handled core issue happens mainly combination cssmodules thing happens repo check issue details necessary", "num": "4246", "d": "11/2016"}, {"title": "vfor syntax suggesition", "body": "think ok omit", "num": "4245", "d": "11/2016"}, {"title": "feature request eval", "body": "consider jsfiddle vue imagine actually component table configurable columns achieved vue without fiddle using vue replaced wo nt work", "num": "4244", "d": "11/2016"}, {"title": "vhtml binding working", "body": "vuejs version reproduction link", "num": "4243", "d": "11/2016"}, {"title": "keepalive activated deactivated hooks trigger recursively toggled", "body": "", "num": "4242", "d": "11/2016"}, {"title": "warn key ref slot declared props", "body": "import vue vue import demo demovue new vue el app components demo demo components test demo export default props key string created consolelog thiskey print undefined", "num": "4241", "d": "11/2016"}, {"title": "props component watched properties render directives", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4240", "d": "11/2016"}, {"title": "directives vshow vif overriding class", "body": "", "num": "4238", "d": "11/2016"}, {"title": "props get sync dynamic components keepalive", "body": "sure bug intended behavior maybe could clarified documentation go getting fresh values passed coming back inactive state vuejs version reproduction link steps reproduce click switch component click increase value click switch component expected component prop updated coming back inactive state actually happening prop component sync parent data", "num": "4237", "d": "11/2016"}, {"title": "watch triggered unchanged nan value", "body": "watched object property nan value set nan watch callback incorrectly triggered application results infinite loop watch callback calculations object sets nan back nan issue reactive setter comparison old new value since one many js quirks nan nan always false changing solves issue", "num": "4236", "d": "11/2016"}, {"title": "vuefunctionalcompoent", "body": "import vue vue import functionalcomponentfactory vuefunctionalcomponent const makefunctionalcomponent functionalcomponentfactory vue make sure component declared global makefunctionalcomponent name config working vue vue thank much", "num": "4234", "d": "11/2016"}, {"title": "attribute nt update binded property called", "body": "element binded attribute called wo nt update dom example note template works fine variable updates well attribute nt update codepen reproduces problem problem occurs vue example works fine", "num": "4233", "d": "11/2016"}, {"title": "use bootstrapdatepicker use vmodel get date value", "body": "", "num": "4231", "d": "11/2016"}, {"title": "vue bootstrapdatepicker \u4f7f\u7528vmodel\u53d6\u503c\u4e3a\u7a7a\u5b57\u7b26\u4e32", "body": "get var app new vue el app data startdate mounted startdate datepicker methods getdate consolelog thisstartdate \u7a7a\u5b57\u7b26\u4e32", "num": "4230", "d": "11/2016"}, {"title": "hot module replacement chrome apps", "body": "hey perform hot module replacement using webpack vueloader developing chrome application chrome extension", "num": "4229", "d": "11/2016"}, {"title": "emit ca nt bubbling parents module", "body": "three vue file avue bvue cvue avue template bvue template cvue template cvue script click div cvue avue closehandle ca nt trigger must write medium method bvue trigger closehandle avue necessary write medium bvue way trigger closehandle vuejs version reproduction link steps reproduce expected actually happening", "num": "4228", "d": "11/2016"}, {"title": "patched elements keep inline styles old vnodes", "body": "vuejs version reproduction link steps reproduce vue centered centered export default name app data return loading true mounted function settimeout gt thisloading false expected patched elements keep inline styles old vnodes actually happening update operation patched elements retain styles vnodes longer exist dom temporarily solution endusers changing inline styles classes choosing different tag names adding directive fix issue thanks linusborg latter looks like pr introduced regression opened pull request failing test confirms issue", "num": "4227", "d": "11/2016"}, {"title": "provide method focusing custom form components", "body": "one powerful features components able create custom form elements however easy way set focus mockup steps required props events pretty complicated emit even child parent nt see sane way focus reactive data property one possible way handling special directive occur component inputs textareas set form element supposed receive focus vue also handles focus event emitted custom component focus set input directive another way vue handles event left developer receive set focus appropriately realize creates special case scenario vue form elements special case scenarios feel would really help make programming much natural", "num": "4225", "d": "11/2016"}, {"title": "disable interpolation mustachestyle directives vue unusable apps user content", "body": "vuejs version reproduction link steps reproduce app built around user content vue instance bound app container user content contains curly braces expected curly braces nonapp user content ignored especially encoded actually happening user crash vue thus application simply using curly braces syntax anywhere input rendered ie solutions work encoding curly braces creating several vue instances binding nonuser content whenever vue component needs render user content use viable solution would require developer create vue instance per vue component seperately component would also use syntax prevents using thirdparty nonvue code access changing delimiters problem remains user still crash app disabling delimiters interpolation supported tried causes vue render every single element propositions bring back nonglobal option per vue instance new tag eg disable rendering inside html tag still allow altered using vue act vue component related issues original question similar request vue similar request languages also related laravel blade discussion syntax ignore braces render without parsing perhaps completely missing point moment prevents using vue app nt think would major issue yet proven quite cumbersome fix bypass sure others handle situation would love get feedback able continue development using vue", "num": "4223", "d": "11/2016"}, {"title": "dynamic props update using keepalive", "body": "vuejs version reproduction link steps reproduce switch components amp increment number multiple times expected prop stay consistent components actually happening component stays stale reflect parent although dynamic prop", "num": "4222", "d": "11/2016"}, {"title": "list instance referred link list cleared", "body": "list instance referred link ca nt clear list vuejs version reproduction link steps reproduce click clear button expected list cleared actually happening list nt cleared", "num": "4221", "d": "11/2016"}, {"title": "template event handler bind vue prototype method", "body": "try bind event handler template without using vue prototype method handler scope valid vue instant instant method ok vue example see", "num": "4220", "d": "11/2016"}, {"title": "\u4e3a\u4ec0\u4e48vuejs \u9879\u76ee\u4e2d\u7684input\u6846\u5728\u82f9\u679c\u624b\u673a\u4e0a\u65e0\u6cd5\u8f93\u5165", "body": "\u4e5f\u6ca1\u6cd5\u8f93\u5165 \u4f7f\u7528vuecli \u4f46\u662f\u53bb\u6389\u6240\u6709js\u5355\u7eaf\u4e00\u4e2ahtml", "num": "4219", "d": "11/2016"}, {"title": "request add scopeid type definition componentoptions", "body": "using precompiled templates csp compatible like segment ts code vue template files result precompiling templates webpack importing typescript using pattern basically copying render functions injecting new ts component components using scoped scss logic though would like pass scopeid well like version working fine working due missing scopeid type property vue type definition found would possible add scopeid componentoptions definition interface vuejs", "num": "4218", "d": "11/2016"}, {"title": "use vue browserify regression", "body": "vuejs version reproduction link files simple steps reproduce clone repo npm install gulp expected build app correctly actually happening commit requires package ca nt found", "num": "4217", "d": "11/2016"}, {"title": "repeated inlinetemplate within vif wrongfully reused", "body": "vuejs version latest reproduction link steps reproduce repeat conditional vif vshow check component inside expected changing value conditional check display right child component turn displays unique value actually happening first time value vif selected right used change value afterwards inlinetemplate first value reused time additional info none conditional checks hit selecting value state reset next matching value selected display correct value long one conditional checks matches template reset", "num": "4216", "d": "11/2016"}, {"title": "inputing anything input managed via computed property makes lose focus inputs generated", "body": "using two inputs enter number one input one gets calculated automatically works great using one property js data return dataobj months computed years get let unroundedresult thisdataobjmonths return number unroundedresulttofixed set newvalue thisdataobjmonths mathround newvalue html see action working correctly codepen however encounter problem generate inputs via loop case whenever enter number input lose focus need click back input continue editing cf codepen annoying behavior happening using loop tend think bug wrong would see focus lost note use mouse wheel change input values note mouse wheel events works chrome unknown reasons everything works intended also modify decimal part year calculated value months change lose focus note question first asked gitter forum", "num": "4215", "d": "11/2016"}, {"title": "vuefilter ca nt work", "body": "hello vuefilter params work vue example", "num": "4214", "d": "11/2016"}, {"title": "vmodel doesnt bind data component used routerview", "body": "code login form doesnt work vmodel directive login export default data return errors email password methods submitform thisaxiospost login thisemail thispassword response gt consolelog responsedata catch response gt consolelog responsedata", "num": "4213", "d": "11/2016"}, {"title": "casesensitive attribute names nt work vbind", "body": "vuejs version reproduction link expected vue create attributes case consistent template actually happening vue creates attributes lowercased version template problem noticeable using subset tags casesensitive like tag example consider viewbox attribute demo linked vue produces attribute viewbox instead viewbox causing svg rendered incorrectly tested firefox chrome", "num": "4212", "d": "11/2016"}, {"title": "", "body": "", "num": "4211", "d": "11/2016"}, {"title": "vbind style condition stylea styleb use inside vfor unexpected", "body": "want add inlinestyle every img label need judge data structure like result unexpected", "num": "4210", "d": "11/2016"}, {"title": "use render function strange slot template", "body": "vuejs version reproduction link steps reproduce actually happening different b c buttons two dom node click b c button normal others duplice text", "num": "4209", "d": "11/2016"}, {"title": "vue graphql", "body": "hello working graphql client called greed nt open sourced yet frameworklibrary agnostic wanted create vue bindings want base bindings signature got working react js container greed defaults queries mutations component using decorator container greed defaults queries mutations somecomponent greed greedinstance greed instance want use defaults function default data component render queries function queries run user input occurs mutations function mutations run user input occurs component component component enhance container essentially enhances whatever component receives data needed render methods executed run queries mutations user input occurs application however given different types templates vs components vue sure go injectingenhancing vue componentstemplates familiar vue wanted feedback direction best accomplish vue help guidance would really appreciated", "num": "4208", "d": "11/2016"}, {"title": "documentation suggestion", "body": "greetings first foremost believe vue revolutionary framework started working vue see great potential way build applications future said believed one many things helped frameworks like react angular polymer grow rapidly clear concise direction build publish distribute components component libraries necessarily applications spas although webpack setup great configuration distributing application able find seamless webpack setup offers publishingtesting capabilities vue templates believe clear directions vuejsorg andor configuration settings webpackbrowserify templates also included publishing single component component library could igniter rocket set vue even higher level frameworks kind regards ryan w", "num": "4206", "d": "11/2016"}, {"title": "lifecycle hooks triggered component wrapped element vif directive", "body": "vuejs version reproduction link steps reproduce open browser console run jsfiddle code deselect checkbox trigger expected mounted printed time trigger changes actually happening mounted printed parent component rendered case several sibling elements render one depending vif condition element different markup one child component expect element contained directives components destroyed reconstructed toggles stated docs however content conditional elements changed hooks child components called", "num": "4205", "d": "11/2016"}, {"title": "component vmodel modifiers working", "body": "hi simple component export default props placeholder value methods change e emit change etargetvalue trimhassuccessvalue contains spaces", "num": "4204", "d": "11/2016"}, {"title": "strange default props objectarray behavior watcher", "body": "vuejs version reproduction link steps reproduce actually happening refresh window click button alert refresh window click button alert refresh window click button alert refresh window click button alert \u4e2d\u6587", "num": "4203", "d": "11/2016"}, {"title": "android wechat throw uncaught referenceerror defined exception", "body": "vue version explorer useragent linux android khtml like gecko mobile nettypewifi languagezhcn steps reproduce expected actually happening", "num": "4202", "d": "11/2016"}, {"title": "velse issue", "body": "vuejs version reproduction link steps reproduce run jsbin expected expecting see html conten hello content html content hello content actually happening soon velse hit put terminated eg move hello content block top list shows terminates", "num": "4201", "d": "11/2016"}, {"title": "parent component class attributes subcomponents", "body": "example react reactchildrenmap", "num": "4199", "d": "11/2016"}, {"title": "merging default html class class value results duplicate class", "body": "vuejs version reproduction link steps reproduce click expected link active class thus red color reason want combine class vbind class active class initial active class added jsp code second vue nt initial class logic button gets vue active class late causes nice jump page actually happening active class red clicking inspect element active classes instead one works bit different clicking links active class clicking test test works correct point use wrong bug", "num": "4198", "d": "11/2016"}, {"title": "url", "body": "bhtml \u5982\u4f55\u5c06ahtml\u7684\u4fe1\u606f\u4f20\u9012\u5230bhtml", "num": "4197", "d": "11/2016"}, {"title": "von keyupenter working korean character", "body": "vuejs version reproduction link steps reproduce input field enter korean character example \uc548\ub155 enter key invoked enter english words hello enter key works expected inputenter function invoked actually happening nothing run env firefox ubuntu", "num": "4196", "d": "11/2016"}, {"title": "error mismatching childnodes vs vnodes svg element camelcase tag name animatetransform animatemotion lineargradient template", "body": "version vue vueserverrenderer reproduction link demo steps reproduce follow guidelines serversiderendering establish whole serversiderendering workflow replace template svg elements actually copied svg mdn animatetransform animatemotion restart service browse rendered page expected vnodes actual childnodes matching actually happening warning error occered mismatching childnodes vs vnodes animatetransform seems use instead rendered tag still everything goes right tags camelcase name animatemotion lineargradiant behave", "num": "4195", "d": "11/2016"}, {"title": "", "body": "\u8bc4\u8bba \u8bc4\u8bba \u6c42\u89e3\u51b3 vuejs version", "num": "4194", "d": "11/2016"}, {"title": "emit inline style", "body": "trying communicate parent component instead js register button buttonfluidbasicinverted click switchscreen methods switchscreen emit switchscreen register something like perhaps", "num": "4193", "d": "11/2016"}, {"title": "inline style vshow compability", "body": "vuejs version reproduction link steps reproduce run demo expected nothing displayed actually happening red false displayed something inline style remove problem goes away", "num": "4192", "d": "11/2016"}, {"title": "mergedata works properly array", "body": "vuejs version reproduction link steps reproduce create array add something arrayprototype add property array obj use array data trigger mergedata expected array merged withou error without keyvalues prototype actually happening typeerror keyvalues prototype copy array", "num": "4191", "d": "11/2016"}, {"title": "filter image src binding", "body": "possible filter image source data binding realise could make computed property feel like missing trick", "num": "4190", "d": "11/2016"}, {"title": "wrong warning", "body": "hi want use component reactivity simple code vuecomponent inputtext template tpl props date data return val thisdate new vue el main vmval null", "num": "4189", "d": "11/2016"}, {"title": "recusive local components uncaught rangeerror maximum call stack size exceeded", "body": "vuejs version reproduction link steps reproduce run new vue let app demo app load expected app loads expected btw work vue quite ready migrate rest app actually happening js error uncaught rangeerror maximum call stack size exceeded new function createclass functionvueextend guardcomponents mergeoptions functionvueextend guardcomponents mergeoptions functionvueextend guardcomponents", "num": "4187", "d": "11/2016"}, {"title": "style blink issue ssr", "body": "vue version server side rendering ssr great feature vue however found issue ssr output styles vue file first screen page though extract styles vue files one external large size css file large spa suitable way large size css file block assets page downloading solution issue", "num": "4186", "d": "11/2016"}, {"title": "problem vmodel vuejs", "body": "vuejs version reproduction link steps reproduce switch versions vuejs enter text input expected property update input like vuejs actually happening using vuejs field changes empty input event key", "num": "4185", "d": "11/2016"}, {"title": "kebabcase css property names nt work vbind style", "body": "vuejs version reproduction link steps reproduce use following syntax vue documentation says kebabcase working style binding camelcase works see fiddle expected margintop style element contain proper value actually happening vue throwing error", "num": "4184", "d": "11/2016"}, {"title": "ios render issue", "body": "vuejs version reproduction link vue example project steps reproduce building single page application live translation using vue works ok desktop browsers android issue ios rendering implemented fiddle navbar blocks page seems ios nt support tried chrome safari iphone ios also searched stackoverflow vue forum issue could nt find answer expected render vue show text objects actually happening shows pagecontent pagetitle", "num": "4183", "d": "11/2016"}, {"title": "velse vonce custom component inside vfor", "body": "list rendering using custom component directive jsfiddle using vue note work using vue unless remove directive let add conditional rendering jsfiddle using vue jsfiddle using vue fails using vue error property method item defined instance referenced render works failed", "num": "4182", "d": "11/2016"}, {"title": "compile component template incorrectly", "body": "vuejs version reproduction link steps reproduce open console expected page works days ago actually happening declared console error sorry bit mess source code vue export default data return activecoachid null activedate thisdate translatex translatestart translating false panning false scrolling false compiled code template js moduleexports render function var vmthis return vmh div class vm styleschedulecalendar vmh div staticclass panel class vm stylecoursetypepanel vmh div staticclass panelbody vmh div class vmmonth vms vmf formatdate vmactivedate mm \u6708 vmh div vmt default vmh div staticclass panel vmh div ref calendar staticclass panelbody vmmode vmh calendar directives name touch rawname vtouch panstart value vmonpanstart expression onpanstart arg panstart name touch rawname vtouch pan value vmonpan expression onpan arg pan name touch rawname vtouch panend value vmonpanend expression onpanend arg panend attrs calendar vmcalendar activeindex vmactiveindex translatex vmtranslatex toggleactivedate vmtoggleactivedate nativeon transitionend function event eventtarget eventcurrenttarget return vmontransitionend event vmh calendar attrs calendar vmcalendar activeindex vmactiveindex translatex vmtranslatex toggleactivedate vmtoggleactivedate vmh div ref schedules class vm stylecontent style vmcontentstyle scroll vmonscroll objectkeys vmactiveitems length vmh ol staticclass listunstyled vml vmactiveitems function scheduleitems date index return vmsubscribetype vmh scheduleitems key date index ref date refinfor true class vm stylescheduleitems attrs date date last index objectkeys vmactiveitems length itemsheight vmitemsheight scheduleitems scheduleitems vme vml vmactiveitems activedate function coachitem return vmsubscribetype vmh coachitem key coachitemcoachid ref date refinfor true attrs coachitem coachitem activecoachid vmactivecoachid toggleactivecoach vmtoggleactivecoach vme vmh noitem attrs text \u672c\u5468\u6ca1\u6709\u5b89\u6392\u4efb\u4f55\u8bfe\u7a0b staticrenderfns true modulehotaccept modulehotdata webpackrequire rerender moduleexports webpack footer vueloaderlibtemplatecompilerjs vueloaderlibselectorjs typetemplate amp srccomponentsschedulecalendarindexvue module id module chunks notice code actually", "num": "4181", "d": "11/2016"}, {"title": "add new lifecycle hooks components", "body": "hello would like propose add new lifecycle hooks components including async ones difficult know async components loaded need add wrappers would nice use built lifecycle hooks instead js import vue vue const vm new vue components resolve gt require resolve resolve gt require resolve resolve gt require resolve etc ready consolelog components loaded components instance may use tests vm mount", "num": "4179", "d": "11/2016"}, {"title": "longer use jqgrid vue", "body": "title data data new vue el nav data test false document ready function jqgrid jqgrid url mtype get datatype jsonp colmodel label orderid name orderid key true width label customer id name customerid width label order date name orderdate width label freight name freight width label ship name name shipname width page width height rownum scrollpopup true scrollleftoffset viewrecords true scroll set scroll property enable paging scrollbar virtual loading records emptyrecords scroll bottom retrieve new page message displayed bottom pager jqgridpager", "num": "4177", "d": "11/2016"}, {"title": "using vuejs use jqgrid reported wrong", "body": "", "num": "4176", "d": "11/2016"}, {"title": "feature request support yarn", "body": "would interesting support yarn dependency manager able easily install dependencies different projects", "num": "4175", "d": "11/2016"}, {"title": "feature request vempty vfor", "body": "common issue rendering lists show message case list empty django example template tag supports probably could benefit similar feature vue cases list contained inside element hidden list empty works fine vue want hide whole container html itemmessage empty list case however syntax getting little verbose emulating django example mentioned could benefit simplification getting rid expicit upd could form nice name well case like avoid conflicts existing implementation", "num": "4174", "d": "11/2016"}, {"title": "", "body": "know piece syntax sugar support directive", "num": "4173", "d": "11/2016"}, {"title": "filters bind", "body": "vue filters bind work working example using binds plain simple element adding filters bind via result also tried adding filters via result use filters bind documentation reads vue filters used inside mustache bindings mustache bindings use case quite simple output would something like input output", "num": "4172", "d": "11/2016"}, {"title": "standalone build encounters missing templaterenderfn misleading warning use runtimeonly build logged", "body": "vuejs version reproduction link steps reproduce newbie accidentally creates empty template template fails compile using compilerincluded build expected vue warning similar actually happening vue warning warning message misleading compilerincluded build defined differently two builds would solve issue", "num": "4171", "d": "11/2016"}, {"title": "vmodel \u5904\u7406\u65b9\u5f0f\u4e0d\u4e00\u81f4\u6027\u95ee\u9898", "body": "vuejs version reproduction link expected \u81ea\u5b9a\u4e49\u7ec4\u4ef6\u5904\u7406vmodel\u548cvalue\u5e94\u8be5\u548cinput\u5904\u7406\u65b9\u5f0f\u662f\u4fdd\u6301\u4e00\u81f4\u7684 actually happening \u65e0\u6548\u4e86 \u540c\u65f6\u8bbe\u5b9avalue \u548cvmodel \u56e0\u4e3a\u6211\u8fd8\u5728\u6bd4\u8f83\u591a\u7684\u4f7f\u7528\u540e\u7aef\u6a21\u677f", "num": "4170", "d": "11/2016"}, {"title": "redistribute content given", "body": "experienced real trouble migrating vue duplicate slots removed works vue consider must api method way clone slotsdefault", "num": "4169", "d": "11/2016"}, {"title": "sortable vuejs works nt work", "body": "trying make sortable list twoway bound example html array elements vue see works expected example ported vue looks broken think way vue handles dom diffing bug way work around", "num": "4168", "d": "11/2016"}, {"title": "intercepting checkbox values", "body": "trying intercept checkbox value order save vuex store using nt make difference underlying model component matter get truefalse value passed never full dom event would expect docs something changed regard please update official guide still almost half", "num": "4167", "d": "11/2016"}, {"title": "feature request list rendering first last option", "body": "would like suggest feature could manage first last pointer looping object using array regular field listed would nice thing like order identify loop starts ends would result idea sure would better loopfirstlast even authorfirstlast thanks", "num": "4166", "d": "11/2016"}, {"title": "tapmode attribute work", "body": "code use tapmode attribute eliminate delay using vue work", "num": "4164", "d": "11/2016"}, {"title": "possible still render serverside using vuerouter", "body": "hello app renders serverside routing using vue decided add vuerouter use component render app works fine lost serverside rendering example lt template lt div class page lt routerview gt lt routerview gt lt div lt template main header renders fine page content fits routerview show view source browser even though app works fine expected behavior also bear mind initial page load talking moving one page another browser load typing url", "num": "4163", "d": "11/2016"}, {"title": "multiple components dynamic components ca nt call hook detached", "body": "vuejs version reproduction link steps reproduce dynamic component two dynamic components called b also define common component called c connections root c b expected component hooks attached detached called proper way actually happening connection root c never called bug kind rules missed", "num": "4162", "d": "11/2016"}, {"title": "render functional\u6a21\u5f0f\u4e0bslot\u88ab\u91cd\u7f6e", "body": "export default", "num": "4161", "d": "11/2016"}, {"title": "asynchronous updates inside component reset input value", "body": "vuejs version reproduction link steps reproduce choose basic color dropdown start typing different color textbox time changes still typing reset previous color expected input value left way update happens actually happening value input reset user input removed background previously submitted bug may clearly stated inside component component advice using even possible idea user convenience multiple ways user input value", "num": "4158", "d": "11/2016"}, {"title": "typescript types included vue still require installation typesvue module resolution work", "body": "modules still resolving compilation even types renamed moved folder terminalapp appjs tsconfigjson", "num": "4156", "d": "11/2016"}, {"title": "multiple vif work root template tag", "body": "code test hello world var testcomponent vueextend template templatetestcomponent props type lt p gt var app new vue el app components testcomponent testcomponent work plunk real project code work vif work div wrapper example wrapper screws layout", "num": "4155", "d": "11/2016"}, {"title": "transition behave different writing enter leaveactive single rule", "body": "vuejs version reproduction link steps reproduce left accordion behaves normally however write enter leaveactive single rule lost enter transition expected left right behaves actually happening right one leave transition", "num": "4154", "d": "11/2016"}, {"title": "feature request \u63d0\u4f9bfreemarker\u6a21\u677fnested\u8bed\u6cd5\u7c7b\u4f3c\u7684\u529f\u80fd", "body": "\u4f8b\u5982list\u7ec4\u4ef6render child parent", "num": "4153", "d": "11/2016"}, {"title": "bug custom component vmodel bug", "body": "tested versions custom component bind computed properties called every time value changed open jsfiddle link click console print every click even worse text input relationship component component would still echo consolelog nt tag consolelog", "num": "4152", "d": "11/2016"}, {"title": "element set vbind style backfroundcolor configbackgroundcolor active style nt work deal", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4151", "d": "11/2016"}, {"title": "asynchronous actions reset value input unrelated data properties", "body": "vuejs version reproduction link steps reproduce click test button immediately select text input change something wait seconds expected nothing input box change method tester changing property test value left alone actually happening value input reset whatever last saved value realize used value would change type desirable situation using input part larger component also updating nice side effect limiting related operations done completed values instead every keystroke background something closer real problem ran thought something done wrong feel simplifying actually bug", "num": "4150", "d": "11/2016"}, {"title": "link characters especial show image style background image", "body": "vuejs version one question link characters especial type image show image show link image link text wrong bug wrong thanks", "num": "4149", "d": "11/2016"}, {"title": "emit nt fire callback", "body": "hello new vue ca nt seem find answers anywhere got state work perhaps bug repo comments code notevue notetitle notecontent remove edit import noterepo datanoterepo export default props note methods remove consolelog vue instance one put emit works fine callback notereporemove thisnote err gt err consolelog fire get echoed console consolelog vue instance one event nt get emitted emit alerted type error message failed remove note selectnote key title content event works fine like moving callback emit selected key title content notesvie import note note import noterepo datanoterepo export default components note data return notes methods emitnote key title content emit selected key title content emitalert alert consolelog recieved never fired inside callback emit alerted alert unfortunately able reproduce fiddle pen require codebase let know hope comments make sense", "num": "4148", "d": "11/2016"}, {"title": "rendertostream data event called", "body": "hi trying add ssr vue project problem rendertostream const context url requrl const renderstream rendererrendertostream context consolelog work fine reswrite htmlhead renderstreamon data chunk gt consolelog logged reswrite chunk renderstreamon end gt resend htmltail consolelog renderstreamon error err gt render error page redirect resstatus end internal error consoleerror consoleerror err code none callbacks called open page title page rendered nothing else shown none console commands called either browser shows loading logo top page nothing happens", "num": "4147", "d": "11/2016"}, {"title": "questions spa", "body": "hello new vuejs vuex development precisso develop spa communicate api done lumen like material videos assist building des beginning end spa portuguese language en best english", "num": "4145", "d": "11/2016"}, {"title": "vue stripping styles inline svg", "body": "vuejs version reproduction link steps reproduce include inline svg styles within vue instance init vue instance expected svg styled according style element actually happening vue giving warning vue warn templates responsible mapping state ui avoid placing tags sideeffects templates", "num": "4144", "d": "11/2016"}, {"title": "using ssr defined dynamic components rendered classes tag component", "body": "vuejs version steps reproduce create component use components within parent component template classname expected expected render server side similarly clientside actually happening server side renders classes dynamically generated components time client side renders everything classes behavior causes twitch interface due belated addition classes styles also incorrect display js file load slow internet", "num": "4143", "d": "11/2016"}, {"title": "internal method overriding detection", "body": "introduced feature vue warns user trying override internal method good thing though think current detecting implementation debatable according commit every method vue prototype checked everything necessarily internal method example manually add method try manipulate method later get warning thing happens third party package adds method cases confusing method gets warned actually shipped vue chance get improved", "num": "4142", "d": "11/2016"}, {"title": "invalid varibal", "body": "vuejs version reproduction link problem issue steps reproduce please see result amp dealed string html expected actually happening invalid deal string parsed html", "num": "4141", "d": "11/2016"}, {"title": "gt data show safari", "body": "like thought inconvenient", "num": "4140", "d": "11/2016"}, {"title": "props seems reserved undocumented", "body": "vuejs version hi tried set prop component lot troubles vue keeping telling prop filled obviously took long time figure finally changed prop name everything worked without modifying code anywhere else seems reserved prop name used although sure also case others keywords looking doc could find list reserved error error message generic missing required prop make think thing would really helpful either list reserved prop names explicit error message think thanks", "num": "4139", "d": "11/2016"}, {"title": "mixin support route hook", "body": "javascript const mixin beforerouteleave next consolelog mixin router dot work created consolelog mixin created work export default mixin want mixin route hook function options find vue ignore route hook buildin options like ok", "num": "4137", "d": "11/2016"}, {"title": "select input default option binded", "body": "sure bug wonder second select input example blank change vuejs version reproduction link expected default option selected first option selected bby default actually happening change second select blank", "num": "4136", "d": "11/2016"}, {"title": "using vuejs electron state changes wrapped settimeout", "body": "vuejs version expected nt update state unless wrap state change actually happening code import ipcrenderer electron export default data return formdata username password authcode authcoderequired false submitted false showformscreen true showwelcomescreen false state value message computed statemessageshow return thisstatevalue thisstatevalue mounted let context ipcrendereron loginresponse e gt thisformdatasubmitted false switch astate login successful case thisformdatashowformscreen false settimeout gt contextstate value contextshowwelcomescreen true break invalid form data case contextstate value message incorrect email password break auth code required case case contextstate value message contextformdataauthcoderequired true break thisformdatasubmitted false ipcrendereron loginattemptupdate e gt switch astate case thisstate value astate message connecting servers break case thisstate value astate message connected servers break case thisstate value astate message logging servers break case thisstate value astate message logged successfully break case thisstate value astate message login attempt failed break default thisstate value message break methods onsubmit thisformdatasubmitted true storestateuserisloggedin return ipcrenderersend clientlogin thisformdata absolutely idea works wrap like suggestions", "num": "4134", "d": "11/2016"}, {"title": "inconsistent documentation behaviour vm watch", "body": "vuejs version following code produces following error console otoh documentation explicitely states valid syntax even example", "num": "4133", "d": "11/2016"}, {"title": "src set filter error", "body": "like register filter appendparams error property method appendparams defined instance referenced render want change image url deal", "num": "4132", "d": "11/2016"}, {"title": "transitions also emit animationend event", "body": "uipopup amp amp uipopupanimate animationend event also fired", "num": "4130", "d": "11/2016"}, {"title": "oppo xiaomi phone thrown directly", "body": "vuejs version actually happening phone thrown directly use keyword native syntaxerror unexpected token native class uncaught syntaxerror unexpected token class", "num": "4129", "d": "11/2016"}, {"title": "actually one root template warned", "body": "vuejs version reproduction link steps reproduce expected warning generate one element actually happening warning component template contain exactly one root element", "num": "4128", "d": "11/2016"}, {"title": "vuetemplatecompiler upgrading vuejs freezes build process using vueloader", "body": "vuejs version reproduction link happening big complex project see shrink reproduceable scenario steps reproduce upgrade vue run build process expected build process finish normally actually happening freezes interrupting ctrlc returns cli prompt scenario complex uses gulp webpack babel vueloader etc updated vuejs build task stucks revert runs fine trimmed issue manually switch back vuetemplatecompiler folder version inside nodemodules run everything else exactly vuejs nothing else changed gives warning error message telling bump latest go force run mismatching versions changing line vuetemplatecompiler build completes short issue freezing compilation template project note nt try run compiled result believe result unpredictable fact codebase compiles fine vuetemplatecompiler build process freezes vuetemplatecompiler try get info eventually something reproduce thank", "num": "4127", "d": "11/2016"}, {"title": "feature request expose createelement vue object", "body": "feature request one simple expose createelement object omitted function jsx typed lower error margin excluding one step", "num": "4126", "d": "11/2016"}, {"title": "breaks ie conditional statements", "body": "vuejs version works reproduction link steps reproduce add ie conditional comments html inside expected stay hidden unless version ie matched thus hidden nonie browsers actually happening ie conditional comments removed thus content inside conditional always displayed html content hidden", "num": "4125", "d": "11/2016"}, {"title": "error read property null", "body": "render deep property one object one part chain null whole project suspended break reproduce follows jsfiddle list rendered one name null see error console using angular null result empty vue handle expression solution pretty tried vueconfigsilent supposed solve problem better way render deep object", "num": "4123", "d": "11/2016"}, {"title": "svg foreignobject working vue", "body": "vuejs version reproduction link steps reproduce run without var vue new vue el body version instead expected version see text inside rectangle run without vue text work fine version text also fine actually happening nt know resulting html stays whether text seen", "num": "4122", "d": "11/2016"}, {"title": "event nested component since", "body": "hello notice possible bug since nt nested component works click test fiddle nt work click test fiddle normal really bug thanks html title titlechildren js var comp template test methods toggle function alert ok nt fire var child new vue el children components comp comp data titlechildren test children var parent new vue el parent data title test parent", "num": "4121", "d": "11/2016"}, {"title": "seem set properties vm directive vue", "body": "vue possible set data vm component calling directive useful example pagination directives would set current page number number pages vue functionality seems nt work intentional send pr failing test case misunderstanding something", "num": "4120", "d": "11/2016"}, {"title": "vif possible inpatch strategy issue", "body": "vuejs version reproduction link steps reproduce increase counter increase counter b click toggle view counter c expected c counter created instantiated new unique uid counter value set actually happening seems vue reusing dom elements possibly inpatch strategy expect components destroyed hook never called vif false recreated new example shows happen destroy method happens b counter never c put key attribute vif velse solves issue mentioned anywhere docs feel like expected behavior", "num": "4119", "d": "11/2016"}, {"title": "recursive single file components rendering functions defined", "body": "vuejs version reproduction link steps reproduce run build check browser console log expected blocks render normally least give another warn actually happening vue says template render function defined", "num": "4117", "d": "11/2016"}, {"title": "iphone vif", "body": "html registered properly converted boolean string even registered false still", "num": "4116", "d": "11/2016"}, {"title": "use keyword vuetemplatecompiler prevents use imports", "body": "compiled vue file source required via module system causes strict mode error thrown team developing interface module goal consolidate vue components across several projects vue components defined vue files precompile files easily exported interface module plain javascript strict mode fun arrises go require interface module application code applications use style imports render function created vuetemplatecompiler contains keyword library required seems decent barrer developing vue ui kit modules precompiled vue files imported via imports", "num": "4115", "d": "11/2016"}, {"title": "vue bootstrap templating issue creating vue instance showbsmodal", "body": "vuejs version reproduction link steps reproduce create bootstrap modal window attach function showbsmodal event function creates new vue app instance modal window root element add button page show modal inside bootstrap modal input field bound vue data expected data bound input field rendered first opening modal window exchange vue vue inside jsbin example see expected behaviour actually happening open modal via clicking button input field filled data close modal open second time data properly shown", "num": "4114", "d": "11/2016"}, {"title": "input lose focus list rendering use vmodel key", "body": "example item plus use input item input lose focus keyup resolve problem thanks", "num": "4113", "d": "11/2016"}, {"title": "", "body": "my\u7684\u503c\u7684\u7c7b\u578b\u5e76\u4e0d\u662fnumber \u800c\u662f\u5b57\u7b26\u4e32", "num": "4112", "d": "11/2016"}, {"title": "\u6d4b\u8bd5", "body": "\u667a\u7f8e\u65b0\u7164\u5f00\u53d1\u7ec4\u6d4b\u8bd5", "num": "4110", "d": "11/2016"}, {"title": "flow type declarations missing npm package", "body": "git repo flow type declarations besides typescript ones present npm package unlike typescript ones makes impossible use flow vuejs project note might obstacles tried manually copy flow directory contents project add flowconfig still getting errors imports vuejs source files ie lib code seems problem relative imports eg may new flow", "num": "4109", "d": "11/2016"}, {"title": "two pages use vue pass information", "body": "triggers click event go vue listen page like click new vue el methods showinfo function todo receive event vue", "num": "4108", "d": "11/2016"}, {"title": "vue renders unexpected undefined vif condition changes", "body": "vue renders text node undefined first child element appears changed vif condition applies vshow replaces element uses vhtml vuejs version versions tested reproduction link steps reproduce jsfiddle click text click see unexpected text undefined using template like one html deleted changes instead showing velse part template unexpected undefined rendered expected nodes template html deleted rendered actually happening nodes equivalent html undefined deleted rendered", "num": "4107", "d": "11/2016"}, {"title": "exptrim function happens props set numeric values", "body": "vuejs version reproduction link steps reproduce vuecomponent bootselect template removed brevity props value label options placeholder order model ready function thisorder thisorder numeric value triggers error expected parseexpression cast value string calling trim guarantee string assigning directly js actually happening", "num": "4106", "d": "11/2016"}, {"title": "overwrite vueutilisobject catch error", "body": "using babel javascript import vue vue const isobject vueutilisobject vueutilisobject function obj objisvueclassic return true return isobject obj ca nt overwrite", "num": "4104", "d": "11/2016"}, {"title": "support multiple keys single modifier", "body": "vuejs version reproduction link steps reproduce focus input try using w trigger key instead right left expected expected able hit w trigger left trigger trigger right trigger actually happening nothing thought would work line source nt also kind side note overwrite default keycodes rather name custom alias instead", "num": "4102", "d": "11/2016"}, {"title": "serverside rendering php without nodejs", "body": "feature description php allows execute js server side sort alternative nodejs currently possible execute vuejs way complains settimeout amp document defined vuejs running fine server side nodejs possible run php code sample vuesource filegetcontents new result gt executestring vuesource gt result executestring referenceerror document defined", "num": "4101", "d": "11/2016"}, {"title": "get built directives using vuedirective directivename vue", "body": "sure bug report feature request possible vue nt seem vue vue could get object representing builtin directive using useful extending built directives example js const fordirective vuedirective const forpaginateddirective objectassign fordirective bind const inmatch thisexpressionmatch inof vuedirective paginatedfor forpaginateddirective untested minimal code sample vue returns undefined possible vue case whywouldyouevendothat", "num": "4100", "d": "11/2016"}, {"title": "textarea placeholder set textarea value", "body": "vuejs version reproduction link", "num": "4098", "d": "11/2016"}, {"title": "unexpected recalculation computed property", "body": "vuejs version reproduction link steps reproduce click times button expected would expect computed property bar nt update second click button value foo nt change actually happening computed property bar recalculated foo recalculated even computed value foo nt change behavior intended missing something", "num": "4097", "d": "11/2016"}, {"title": "method expression called unlimited", "body": "vuejs version reproduction link steps reproduce according document described computedcachingvsmethods methods defined methods called template expression found method called unlimited something return page crash expected method called actually happening method called unlimited", "num": "4096", "d": "11/2016"}, {"title": "selection restore fails content nontext elements rendered via", "body": "problems something gets dirty trying make tiny rich text editor app use render content edited followings select text save selection focus receive user input get back content restore selection works content pure text ie something like content contains nontext elements like even simple fails nt think save restore function problems nontext elements tried remove add directly element works use pure text works use pure text fails use pure text works environments windows chrome code samples fullversion code actions performed select content element mouse ie one word letters click button click button html vhtml selection", "num": "4095", "d": "11/2016"}, {"title": "vue add support checkbox indeterminate state", "body": "vuejs version expected checkboxes binded vuejs three states true false indeterminate example binded checkbox value indeterminate checkbox indeterminate property set true actually happening checkboxes binded vuejs got two states true false", "num": "4094", "d": "11/2016"}, {"title": "vuejs nt render pushed value", "body": "indexjs var vm new vue data headers method onclicked function thisheaderspush indexhtml add expected clicked button add one empty element associated vmheaders element result first element added added clicked console explore vmheaders one empty element seem vuejs nt render value", "num": "4092", "d": "11/2016"}, {"title": "watch fired different property value changed", "body": "hi come across strange issue watch property called property default value empty object value property changed makes sense created js fiddle demonstrate", "num": "4090", "d": "11/2016"}, {"title": "error devtools disconncted page", "body": "vuejs version steps reproduce make component name module name used component debuging code javascript import notice componentsnoticevue export default name notice components notice actually happening chrome page crashes error devtools disconncted page page reloaded devtools automatically reconnect", "num": "4089", "d": "11/2016"}, {"title": "nt ajax", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "4088", "d": "11/2016"}, {"title": "vuemin prop validator nt work", "body": "vuejs version reproduction link uncompressed compressed", "num": "4087", "d": "11/2016"}, {"title": "odd datadom syncing bug", "body": "reordering changes dom state reorder method nothing add logic reordering changes state dom goes previous state", "num": "4085", "d": "11/2016"}, {"title": "asynccomputed", "body": "tried vueasynccomputed incredibly awesome allows asynchronous computed properties among things makes incredibly easy source vue data ajax calls try convince feature good worthy including vue core instead relegated lowly plugin code sample example application uses two properties seamlessly interact server actions dispatched setting properties clump mine object called active flags dirty causing vue automatically recompute async properties depend property readwrite property containing current language property contains strings changing causes vue pull appropriate language file server update text page simple vue currentusername const ajax url opts gt windowfetch url opts response gt responsejson let app new vue el app data return active lang en asynccomputed return ajax lang thisactivelang currentuser return ajax loggedinuserjson credentials include also left code fetches current user server greet user name make current workarounds straightforward right requires conceiving idea async properties searching web see someone done using plugin really think extremely elegant intuitive baked vue core documented vue guide would encourage people think oh really great way get data server vue would simplify lot people spaghetti code would make world better place potential bugs edge cases help avoid many beginners even experts still fully committed using fluxarchitecture framework dealing horrendous legacy applications vueifying pieces go well established unidirectional data flow server client great idea simplifies state management reduces spaghetti code adding native support asynchronous properties would enable promotes simple declarative unidirectional servertoclient data flow advantage easily injected existing legacy code without learn new framework sure uses asynchronous computed properties dispatching longrunning task webworker comes mind used ajax example used", "num": "4083", "d": "11/2016"}, {"title": "rerender elements used arrayunshift", "body": "issue make rerender template unshift vuejs version steps reproduce open devtools find list ul click button rerender elements used unshift use push good add new element open devtools see rerender items reproduction link know unsift used array indices shifted angular rerender elements question since list lot data would nt expensive redraw elements", "num": "4082", "d": "11/2016"}, {"title": "geojson object", "body": "vuejs version reproduction link steps reproduce change values latitude longitude reactivity expected geolocation fields update data object actually happening array deals geolocation information mongodb geojson object reactive note following example fields reactives based internal array geolocation object note nome endere\u00e7o n\u00famero geolocaliza\u00e7\u00e3o long geolocaliza\u00e7\u00e3o lat geolocaliza\u00e7\u00e3o type", "num": "4081", "d": "11/2016"}, {"title": "using filters inside attributes vue", "body": "following work vue neither work vue use filters inside interpolations ca nt use interpolations attributes anymore way around", "num": "4080", "d": "11/2016"}, {"title": "installing standalone version via npm", "body": "vuejs version instructions install vue standalone version via npm clear nt seem possible think possible clear install vue standalone version via npm specailly rise popularity installing front end dependecies via npm", "num": "4079", "d": "11/2016"}, {"title": "using scoped css vhtml generated elements", "body": "first aware filed closed would like elaborate special case would actually needed tools actually accomplish along suggestions get done scenario first case trying style elements generated markdown parser would nt want styles particular component mess styles components would really prefer using css sample code javascript import marked marked export default name story data return value hello world methods marked value return marked value somecomponent color could used bem approaches believe vue feature intended bem much cleaner elegant source code least unfortunately would nt work since generated html element wo nt unique identifier attribute vue would append elements whilst generated css would append unique identifier style tools compare tool ever used using another view layer library css modules sample code stylus somecomponent color code would work properly without styling mess global styles even another component probably made someone else classname would nt still get style since css modules would replaceappend unique strings class name time would nt add anything vue scoped approach vue seems append unique attribute even element styles classes ids style would suggestion ie expected behavior vue scoped feature append unique datavidentifier root element component since vue requires one root element component believe best place append unique identifier attribute css transpiled way would append attribute selectors rather would prepend parent element example somecomponent color transpiled way would still behave way right plus side would still able style element added child element attribute would also mimic css modules works extra plus people coming libraries expecting certain behavior expected behavior well behavior makes sense would love know others would think obviously since believe us uses vue concerned behavior would fine someone point workaround matter without using bem requiring name classes funny cryptic class names thanks sorry advance ever worded sentences rude way", "num": "4078", "d": "11/2016"}, {"body": "filters work mustache tags vbind", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "11/2016"}, {"body": "valid svg tag created svg namespace still rendered visible want explicitly mark ignored use", "d": "11/2016"}, {"body": "people still use element deprecated", "d": "11/2016"}, {"body": "part elements php xdebug uses markup would avoided thanks", "d": "11/2016"}, {"body": "related commit maybe limited mouse events common usage keyboard events handling cc", "d": "11/2016"}, {"body": "primary reason allowing key events would break following although usage seems rare would still technically breaking change", "d": "11/2016"}, {"body": "may need document update doc", "d": "11/2016"}, {"body": "alternatively add deprecation warning user attempts define builtin modifier custom keycode alias", "d": "11/2016"}, {"body": "think would better considering common usage keyboad event try make update", "d": "11/2016"}, {"body": "allesan currently might need deal special key event handle like vue internally", "d": "11/2016"}, {"body": "nt noticed limitation accidentally modified events document adding keyboard events note meta key samples studied codes release commit list modifying document feel sorry", "d": "11/2016"}, {"body": "thanks mottokrosh looking current parses backgroundimage make pr fix", "d": "11/2016"}, {"body": "godawful report honest could please take time make usable reproduction actually demonstrates issue instead hoping someone", "d": "11/2016"}, {"body": "error report lacks basic information actual error messages thrown vue version node version webpack version version official cli template also pasted info actually runnable fails comply issue reporting guidelines might well add appropriate way open issues want issue respected please respect time maintainers well", "d": "11/2016"}, {"body": "thanks welovedesign seems set custome delimiters could please provide information issue", "d": "11/2016"}, {"body": "code using working without issue using ssr created windoweventsource windowesource new eventsource streamurl", "d": "11/2016"}, {"body": "sorry ca nt really tell much given current information especially error seems mostly code logic possible please provide reproduction", "d": "11/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests encourage use dedicated gitter forum ask questions discussion thanks", "d": "11/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests encourage use dedicated gitter forum ask questions discussion thanks", "d": "11/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests encourage use dedicated gitter forum ask questions discussion thanks one engineers alibaba biggest ecommerce company china working project called weex renders components written vueinspired syntax native mobile ui soon vueinspired become vuepowered started official collaboration make vue actual javascript runtime framework weex enable users write universal vue components reused across web ios android collaboration still early stages big focus us stay tuned yes native like reactnative nativescript cordova", "d": "11/2016"}, {"body": "seems bug", "d": "11/2016"}, {"body": "closing since source issue dependency bug framework", "d": "11/2016"}, {"body": "use class blockclass implement dynamic classes thank", "d": "11/2016"}, {"body": "sqal vue differentiate problem registered event handlers capturing mode removed mode meanwhile treat issue new feature rendering function enhancement since currently events like encouraged use rendering function seems necessity remove capturing listener virtual dom diff", "d": "11/2016"}, {"body": "kingmario yeah sorry deleted answer realized nt proper solution", "d": "11/2016"}, {"body": "sqal problem", "d": "11/2016"}, {"body": "fixed merging", "d": "11/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "11/2016"}, {"body": "listen events end rendering anything text plain element multiple nodes behavior unpredictable seems trying make slot container communicate slot child cases means two components coupled bydesign something like child listen event parent still open ideas improving ways slot parent child communicate events nt really sound like right direction", "d": "11/2016"}, {"body": "thanks callumacrae trace issue documentation issue", "d": "11/2016"}, {"body": "expecting binding updated composition intentional decision update state end composition languages like chinese people composing pinyin fill input lot useless text particularly important update state composition doubt makes big difference ux perspective", "d": "11/2016"}, {"body": "prefer updating composition korean understand design decision react opposite issue change event fires many times inputing chinese characters important change guide inform binding update composition guide default syncs input data event people wants update composition use event without", "d": "11/2016"}, {"body": "choyongjoon makes sense tracking thanks suggestion", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted gitter chat room forum stackoverflow thanks props mutated inside components", "d": "11/2016"}, {"body": "may related vueclasscomponent cc ktsn mon nov eduardo san martin morote lt notifications githubcom wrote please make sure read issue reporting guidelines opening new issues questions posted gitter chat room forum stackoverflow thanks props mutated inside components receiving subscribed thread reply email directly view github mute thread", "d": "11/2016"}, {"body": "hmm reproduce herozzsage please provide reproduction warning persists even actually nt mutate props", "d": "11/2016"}, {"body": "paragraph provide link also please file documentation issues vuejsvuejsorg repo instead", "d": "11/2016"}, {"body": "example complete guess use slice make sure working copy original array explained", "d": "11/2016"}, {"body": "sqal thank much slice worked like charm thank", "d": "11/2016"}, {"body": "exact flexibility thinking please read tl dr extracting smaller modules come cost nontrivial one may sound right please think carefully implications time nt see clear benefits even significant enough justify cost", "d": "11/2016"}, {"body": "fair enough overcome cost community main issue sharing dev environment across multiple repos anyways interested trying integrate cyclejs look like good fit think already found way simply use function within cyclejs interact vdom vue first thought substituting vdom vue would easier reason separate module", "d": "11/2016"}, {"body": "create components via", "d": "11/2016"}, {"body": "well say unlikely ever go level modularity vue simply designed type use case also using cyclejs vue together nt seem sound right cycle snabbdom custom dom driver sounds like right match simply want use rx vue vuerx allows write pretty cyclelike code", "d": "11/2016"}, {"body": "hi thanks filling issue seems strange define nested data initially within component ca nt add later shown since already defined initial nested data proper way setting property example would reason removing path support requires proper path parser support things like bloats code rare use case also really avoided simply using example", "d": "11/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "11/2016"}, {"body": "nt use runtime build time full build import vue vuedistvuejs since tools party libraries may import vue well may cause app load runtime standalone builds time lead errors warning official doc effectively means adding lien webpack config resolve vue full build change require vuedistvuejs vue adding render function entry component", "d": "11/2016"}, {"body": "condition branches moved array however codegen mutated array generating branches ended empty renamed avoided mutation cc defcc future avoid mutating ast codegen", "d": "11/2016"}, {"body": "ok got", "d": "11/2016"}, {"body": "try using npm issue belongs believe template using please see error persists open issue cleaner output possible thanks", "d": "11/2016"}, {"body": "posva sorry late installed although still problem resolved thanks much", "d": "11/2016"}, {"body": "jsfiddle link seems wrong", "d": "11/2016"}, {"body": "thu nov evan notifications githubcom wrote jsfiddle link seems wrong receiving authored thread reply email directly view github mute thread", "d": "11/2016"}, {"body": "wrong repository already told forum open issue githubcomvuejsvuejsorg", "d": "11/2016"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behaviour described", "d": "11/2016"}, {"body": "name literal never changes watcher called", "d": "11/2016"}, {"body": "would possible create littel repository us clone would helpful", "d": "11/2016"}, {"body": "reproduce exact setup please reopen actual reproduction", "d": "11/2016"}, {"body": "created repository successfully reproduced issue machine really weird ps use node nt know matters information", "d": "11/2016"}, {"body": "click function control adding attrs magically feature implemented", "d": "11/2016"}, {"body": "wow wow trapped inside particular way thinking missed obvious solution thank posva", "d": "11/2016"}, {"body": "pug expands", "d": "11/2016"}, {"body": "fact working correctly dom gets parsed browser literal emoji vue access thus vue sees literal emoji template outputs emoji also entity encoding change anything case script parsed browser thus vue sees literal template outputs entity encoding becomes literal would displayed parsed browser", "d": "11/2016"}, {"body": "component multiple root element vue requires exactly one root element component use development build minified build get error messages", "d": "11/2016"}, {"body": "working expected case need set whole object ready", "d": "11/2016"}, {"body": "provide repro", "d": "11/2016"}, {"body": "vue vue node pass pass node pass get warn fail travisci log log strange maybe jsdom problem", "d": "11/2016"}, {"body": "one thing noticed jsdom node instead node makes vue think node rather browser sure tests passing though adjusted browser detection could try building branch see tests would pass node", "d": "11/2016"}, {"body": "detection working great tests would passed node thanks evan", "d": "11/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "11/2016"}, {"body": "thanks known issue working", "d": "11/2016"}, {"body": "confirm warnings gone", "d": "11/2016"}, {"body": "vue packages version mismatch vue vueserverrenderer build vue publishing npm", "d": "11/2016"}, {"body": "see", "d": "11/2016"}, {"body": "version mismatch", "d": "11/2016"}, {"body": "version mistmatch error vue vuetemplatecompiler", "d": "11/2016"}, {"body": "ah saucelabs keeps disconnecting today push manual release missed part", "d": "11/2016"}, {"body": "version mismatch fix", "d": "11/2016"}, {"body": "working perfectly rock", "d": "11/2016"}, {"body": "elaborate bit case curious main case think subcomponents like menu gt menuitem although apply bem methodology situation stopping using css methodology like bem specific case", "d": "11/2016"}, {"body": "components one prefer passing props change component behavior third party component guess could see use case since ca nt edit source intuitively", "d": "11/2016"}, {"body": "lets take example menu list child menuitem components see code snippet different components use menuitem components page want style menuitems differently page using global styles scoped menu component parent also change style menu item page unless unique identifier used scope styles nothing stopping using bem use scoped styles solve problem vmenumain parent component import vmenuitem menuitem export default name vmenumain components vmenuitem data return menulist home menu location menu border solid black overwrite child component css menuitem background red important child component vmenuitem name export default name menuitem props name menuitem background blue", "d": "11/2016"}, {"body": "going example would also like avoid using rule vue allowed declare child component style want overwrite injected specific block child components style became important order parent component parent styles injected child component styles head document allow easily overwrite child components style styles overwrite child component", "d": "11/2016"}, {"body": "nothing stopping using bem use scoped styles solve problem bem scoped style solve different problems scoped allows style encapsulation bem methodology would preferred another example menumenuitem using classes override style works fine need use vue menuitemvue item color blue vue menuvue red item color red course add rule component using menu instead menu", "d": "11/2016"}, {"body": "yes example work first child component menuitem another component inside called ca nt modify style menu since contain menu unique id attribute vue style matches button component style thats declared button component angular using deep selector menu component scoped styles parent menu component buttoncolor selector matches top parent menu used", "d": "11/2016"}, {"body": "tested worked well curious different case solved css methodology", "d": "11/2016"}, {"body": "try components posted example components wanted style button component deeply nested component could nt overwrite scoped style root component maybe something wrong using scoped styles avoiding global styles purpose", "d": "11/2016"}, {"body": "agaripian yes tested", "d": "11/2016"}, {"body": "posva example working using component importing button root component example button imported component nested inside level component example", "d": "11/2016"}, {"body": "still works case adding without making sure specificity selector higher adding one class enough letting menu items aside interested different case solved css methodology", "d": "11/2016"}, {"body": "working example put together existing websites functionality converted vue components used global style root component work scoped styles uses global styles overwrite children overwrites styles overwrite background color overwrite background color adds unique id attribute selector component using manually added unique id attribute style selector solved problem well scoped properly also automatically makes selector specific avoid important see blue highlight want avoid using global styles truly scope css probably find another way adding specific css selector complicates development debugging", "d": "11/2016"}, {"body": "error console nt working", "d": "11/2016"}, {"body": "closed favour nt open new issue time please update existing one instead", "d": "11/2016"}, {"body": "image example error consolelog item delete whe delete item throws error", "d": "11/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "11/2016"}, {"body": "dont know live repro issue due especific env dev project tell options show", "d": "11/2016"}, {"body": "sorry need code look nt need include everything project minimum code needed reproduce error case sample list data procedures used remove item etc", "d": "11/2016"}, {"body": "ok post data structure methods data object title go shopping items object title go read object title go vacations inside items object item diet coke object item coke", "d": "11/2016"}, {"body": "delete method", "d": "11/2016"}, {"body": "view", "d": "11/2016"}, {"body": "im using laravel blade template vuejs vueresponse", "d": "11/2016"}, {"body": "sorry ca nt really deduce going snippets like show error expanded stack trace show line vue source code error thrown click line number right", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "deletes first time rerenders view delete second time throws error wil test complex data", "d": "11/2016"}, {"body": "chrome throws", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "krsrk something like jsfiddle something missing could update details", "d": "11/2016"}, {"body": "theory error means returned array contains value sure could possibly happen though", "d": "11/2016"}, {"body": "weird dont know data structure technologies used like laravel materialize css already run jsfiddle todos data works great project fails error im trying delete", "d": "11/2016"}, {"body": "notice delete items outside collapsible plugin materialize css doesnt throw error", "d": "11/2016"}, {"body": "inside collapsible plugin", "d": "11/2016"}, {"body": "diggin issue found trouble getting data plugin autocomplete", "d": "11/2016"}, {"body": "krsrk found trouble trouble second close issue", "d": "11/2016"}, {"body": "kind wrapped vue component doesnt work well adds data vue instance prop delete throws vnode undefined solution wrapp plugin", "d": "11/2016"}, {"body": "sorry seen template compiler regression issue guess could caught someone midst fixing", "d": "11/2016"}, {"body": "likely bump nested dependency anyway long make sure version fine", "d": "11/2016"}, {"body": "unfortunately guarantee compatibility arbitrary party frameworks regardless ca nt really help without information fails errors get", "d": "11/2016"}, {"body": "entirely sure cause likely vue observer converts object properties reactive ones ie ignores prototype properties technically data properties model objects properties able work", "d": "11/2016"}, {"body": "thanks went documentation found paragraph sometimes may want assign number properties existing object example using objectassign extend however new properties added object trigger changes cases create fresh object properties original object mixin object exactly problem close issue since see solve thanks", "d": "11/2016"}, {"body": "confirm exactly issue since update yesterday also happens", "d": "11/2016"}, {"body": "confirmed spending afternoon find bug get vue amp vuetemplatecompiler reverted order work", "d": "11/2016"}, {"body": "thanks looking", "d": "11/2016"}, {"body": "also seeing strange behavior updating dialog component working code working previous version export default name modal props size type string default small type type string default closeable type boolean default true isscroll type boolean default false data return id modal mathrandom showbackdrop false showmodal false mounted documentbodyclasslistadd dimmable methods clickcontent event eventstoppropagation open thisshowbackdrop true documentbodyclasslistadd dimmed settimeout gt thisshowmodal true settimeout gt elfirstchildstyletop documentbodyoffsetheight elfirstchildoffsetheight px close thisshowmodal false settimeout gt thisshowbackdrop false documentbodyclasslistremove dimmed closemodal thiscloseable return thisclose modal header background important scaleenteractive animation scalein scaleleaveactive animation scaleout fadeenteractive animation fadein fadeleaveactive animation fadeout", "d": "11/2016"}, {"body": "ansarizafar roll back previous vue version moment looking fixing release patch asap", "d": "11/2016"}, {"body": "posva already done thanks", "d": "11/2016"}, {"body": "closing favor since seem issue", "d": "11/2016"}, {"body": "seems problem looking", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "believe problem original author understand vue reactivity system one wants update property heshe must assign new value increment operator simply supported vue code problem author change side side effect getter bad practice thanks effort fix discussed pull request might introduce unpredictable breaking change user code roll migration guide breaking change", "d": "11/2016"}, {"body": "yes think scenario bad usage one use following code keep call anywhere else", "d": "11/2016"}, {"body": "stated elsewhere computed getters produce side effects", "d": "11/2016"}, {"body": "p sval empty vue inits app causes error update data mounted method displays correctly could take look lifecycle diagram", "d": "11/2016"}, {"body": "expected behavior template rendered first called p still empty array", "d": "11/2016"}, {"body": "update demo initial p created mounted nothing different expected behavior create new issues", "d": "11/2016"}, {"body": "thanks vue repository question react please go", "d": "11/2016"}, {"body": "herringtondarkholme issue nt care correct behavior vue may ignore issue", "d": "11/2016"}, {"body": "cc check almost virtual dom implementations issue", "d": "11/2016"}, {"body": "sorry misread link reopened would clearer paste direct link vue reproduction rather adding react entry point", "d": "11/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks course recursion scoped template", "d": "11/2016"}, {"body": "many thanks", "d": "11/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "11/2016"}, {"body": "future closing issues lack even basic information immediately please make sure actually read issue template opening one", "d": "11/2016"}, {"body": "standalone build browser build work expected", "d": "11/2016"}, {"body": "found error set delimiter main view components sorry mistake last question set delimiters components amp main vue thanks advance best regards max", "d": "11/2016"}, {"body": "use create new constructor desired options example historical context see", "d": "11/2016"}, {"body": "use global mixin", "d": "11/2016"}, {"body": "use global mixin would nt affect party components component expects default delimiter would nt break", "d": "11/2016"}, {"body": "yes would asked", "d": "11/2016"}, {"body": "thanks replies agree could lead potential issues external components another project example", "d": "11/2016"}, {"body": "updated fiddle need add von parent template", "d": "11/2016"}, {"body": "great thanks lot still think really clear guide new vue", "d": "11/2016"}, {"body": "close issue maybe could make improvement dynamic component docs follow", "d": "11/2016"}, {"body": "reproduce latest version think fixed ago likely using old version", "d": "11/2016"}, {"body": "use vue always concerned vue fix today update new still problem", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "11/2016"}, {"body": "put tages inside element mount main instance vue read content try use template main instance vue virtualdom treats scriptxtemplate like normal dom screws everthing simply moving template main element solved problem", "d": "11/2016"}, {"body": "reproduce latest version please upgrade vue version", "d": "11/2016"}, {"body": "hi thanks filling issue anything parent template case evaluated immediately parent scope accessing would throw error need add parent template", "d": "11/2016"}, {"body": "supports aot box means project scaffolded already using aot", "d": "11/2016"}, {"body": "thanks", "d": "11/2016"}, {"body": "possible mention documentation find reference", "d": "11/2016"}, {"body": "happens already specify type boolean closing supposing fr vue please tell otherwise reopen", "d": "11/2016"}, {"body": "thanks attrs fix", "d": "11/2016"}, {"body": "happens vueclasscomponent please open issue repo also please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem nessessary create repository us clone minimal reproduction repositories actual projects generally accepted thank", "d": "11/2016"}, {"body": "issue viewtemplatecompiler tho moved bug also caused vuerouter present obv move want tho", "d": "11/2016"}, {"body": "example repo", "d": "11/2016"}, {"body": "nt looked details suspect may handling properly nt see anything could cause problem cc ktsn", "d": "11/2016"}, {"body": "look", "d": "11/2016"}, {"body": "\u7528\u4e00\u4e2a function", "d": "11/2016"}, {"body": "\u6539\u6210initprops", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "yep supported next release actually depends changes core", "d": "11/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "11/2016"}, {"body": "closing due inactivity", "d": "11/2016"}, {"body": "hi thanks filling issue never using register events callback contains reference component instance prevents destroyed vue callback run instances including ones supposed destroyed", "d": "11/2016"}, {"body": "fnlctrl first thank still ca nt understand according answer component data include velse component change use position component data changed new demo demo addition broadcast something child component parent issue", "d": "11/2016"}, {"body": "according answer component data include velse component change use parent said said callback holds reference component instance prevent destroyed vue cause memory leak see fiddle swap components twice change data notice callback run one time supposedtobedestroyed components addition broadcast something use event hub use vuex usage questions please use dedicated gitter forum thanks", "d": "11/2016"}, {"body": "\u9519\u8bef\u4e0d\u662f\u8bf4\u7684\u5f88\u6e05\u695a\u4e86\u5417 vue\u548cvuetemplatecompiler\u7684\u7248\u672c\u4e0d\u5339\u914d \u628a\u8fd9\u4e24\u4e2a\u7248\u672c\u6539\u6210\u4e00\u6837", "d": "11/2016"}, {"body": "\u95ee\u9898\u662f\u6211\u6ca1\u4f7f\u7528\u8fd9\u4e2a\u53ebvuetemplatecompiler\u7684\u4e1c\u897f \u540c\u6837\u7684\u7248\u672c vuetemplatecompiler", "d": "11/2016"}, {"body": "using vueloader vueify reinstalling bump vuetemplatecompiler latest", "d": "11/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "11/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "11/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "11/2016"}, {"body": "got top level function click click element becoming rendered top level click invoked misspelling function name unfortunately vue throwing name missing function reason could find looking wrong place maybe improved somehow", "d": "11/2016"}, {"body": "closing since original issue resolved afaik vue warn von expression references method exist using browser supports proxy hard improve without seeing real reproduction issue", "d": "11/2016"}, {"body": "see errors console works fine safari even ie nt safari test anyway please open corresponding issue console information instead", "d": "11/2016"}, {"body": "sounds good", "d": "11/2016"}, {"body": "sure right solution problem maybe provide jsfiddle better illustrate trying achieve vue nt exactly vue nt need vue reactivity system ensures right components get rerendered state changes think react already implemented", "d": "11/2016"}, {"body": "thanks reply put together jsfiddle contains two components first shows contenteditable updating caret jump html changes state vue rerender component second contenteditable component contains html editing displays behavior described dom refreshes caret jumps beginning right vue correctly determining components rerender rerendering contenteditable div state changes however use case need option stop automated behavior would like state continue updating component wait rerender want refresh hook would useful like vue automates rendering correct components believe makes sense option circumvent behavior desired believe exposing optionhook would open vue use contenteditable provide potential performance boosts solve headache", "d": "11/2016"}, {"body": "hi vonce might helpful still need fine grained control rendition one computed getter might helpful example updates cursor contenteditable general cases computed properties gets selectively updated might enough implementing case conceive needs many interlaced state changes manually implementing computed cumbersome wonder cases common", "d": "11/2016"}, {"body": "herringtondarkholme thanks direction correct indeed resolve issue use case original jsfiddle updated work correctly using older versions vue vuex created another jsfiddle vue vuex demonstrates updated functionality suggestion computed property makes sense intended display content separately template however part jsfiddle example purposes still believe option would necessary contenteditable component also acts display basically anything acts text editor solution works long ok rerendering component however could see use cases one might wish rerender component currently working adding watcher trigger component rerender success would still interested seeing hook macro scale option end lifecycle point without causing errors", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks directives objects functions generally organize normal javascript modules import register entry file", "d": "11/2016"}, {"body": "shortcut read guide really helpful", "d": "11/2016"}, {"body": "yeah realised sorry night mistake", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "thanks supporting vue rather gitter might ask bing google mocks event mocked event supposed stand pressing enter key vue instance test execute callback", "d": "11/2016"}, {"body": "mean nt get", "d": "11/2016"}, {"body": "test name", "d": "11/2016"}, {"body": "give example would actually extend events passed function real interesting part method passed bound depending modifiers", "d": "11/2016"}, {"body": "posva see von docs component modifiers contain modifier case produces bindings native events work way component events simply modify patch see example probably decide pass modifier component modifiers processing step", "d": "11/2016"}, {"body": "fixed example fiddle", "d": "11/2016"}, {"body": "sorry nt get needing modifiers information code snippet", "d": "11/2016"}, {"body": "posva snippet shows patch component event without changing something vue way get modifier component take look first message get example feature used", "d": "11/2016"}, {"body": "makes fundamentally different", "d": "11/2016"}, {"body": "hmm right probably nothing looks different default syntax definitely used define handler component modifier silently ignored event without modifier fired may pass raw string modifier eg component event native event warn dev mode dot notation supported component events think", "d": "11/2016"}, {"body": "computed style change data changed vue rerender app according strategies maybe could apply diff nodes generated vhtml rather reset", "d": "11/2016"}, {"body": "expected alias want patch behavior write markup vue templates wontfix imo already escape hatch use absolute patching content involves way many edge cases little gain", "d": "11/2016"}, {"body": "actually case overwritten cache previous innerhtml avoid setting stays", "d": "11/2016"}, {"body": "could check oldprop value new one make patch", "d": "11/2016"}, {"body": "sounds good however undefined valid class name add check impossible add undefined class maybe better avoid userland", "d": "11/2016"}, {"body": "think better left userland really way tell whether really want workaround complicated either", "d": "11/2016"}, {"body": "problem specifically key string undefined still work agree fix simple might worth implementing anyway since might pop cssmodules users future", "d": "11/2016"}, {"body": "problem comouted property names vue mechanism js language feature result evaluating code always going end string undefined vue even anything", "d": "11/2016"}, {"body": "shorthand", "d": "11/2016"}, {"body": "sorry mean okay kind like feature request xd fnlctrl", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "11/2016"}, {"body": "use functions html columncolumn columnfield item", "d": "11/2016"}, {"body": "thanks example justnobody", "d": "11/2016"}, {"body": "sounds good thanks updated fiddle vue", "d": "11/2016"}, {"body": "element special semantics used vue templates eg used slot container use case", "d": "11/2016"}, {"body": "wanted output html without wrapping extra div structure something like html", "d": "11/2016"}, {"body": "unfortunately supported must used normal element alias nt make sense abstract container like", "d": "11/2016"}, {"body": "please specific think work like use case running needs single title nt qualify feature request", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "issue activateddeactivated called components registered router children components benefit activateddeactivated lifecycle hooks think next releases", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "kinglion \u65b9\u6cd5", "d": "11/2016"}, {"body": "nothinggift", "d": "11/2016"}, {"body": "key special attribute along ref slot use prop names however think vue give warning try declare", "d": "11/2016"}, {"body": "simplesmiler thanks", "d": "11/2016"}, {"body": "take example props data pretend part data every component assume access props data using thispropertyname like normal scope data props update every change variable even vuedevtools update new value dom render changes guess happen props watched properties solution found assign props real watched data property mounted method employee descripcion fecha de inicio fecha de fin generar boleta index export default props propstickets data function return tickets ticket description startedat finishedat employeeid employee computed methods retriveemployee response gt thisemployee responsebody response gt consolelog responsebody generateticket response gt thisticketspush responsebody response gt consolelog responsebody mounted thistickets thispropstickets", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted gitter chat room forum stackoverflow thanks", "d": "11/2016"}, {"body": "thanks inventtileonardo expected behavior vif vif directive checks expression conditional rendering vshow current behavior toggles styledisplay property maybe improvement", "d": "11/2016"}, {"body": "reason need class element time want element visibility controlled let job nt see point class", "d": "11/2016"}, {"body": "bit confused thinking behavior vshow equivalent css ensure elements show initial load using libs vue migrating vue right", "d": "11/2016"}, {"body": "depending different elements could different default properly possible value simply set empty value value true also take account inline display properties like use case probably use vcloak instead gets removed vue finishes rendering", "d": "11/2016"}, {"body": "want keep switchedout components memory preserve state avoid rerendering wrap dynamic component element according docs expected behavior keepalive", "d": "11/2016"}, {"body": "understand state preserved like data component feels bit unintuitive addition dynamically bound props breaks circumstances edit expected behavior nt least away force dynamically bound props update keptalive component appears", "d": "11/2016"}, {"body": "looks like bug expect component updated switched", "d": "11/2016"}, {"body": "thanks really quick response fix", "d": "11/2016"}, {"body": "please open issue repo instead", "d": "11/2016"}, {"body": "found mainvue requires components code throw exceptions components correctlly rendered make code run mainvue requires components thank yyx", "d": "11/2016"}, {"body": "thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "11/2016"}, {"body": "selected bound property instead attribute tags nt selected attribute would want bind styling purposes using class instead", "d": "11/2016"}, {"body": "indeed styling purposes using class attributes styled css sometimes useful classes", "d": "11/2016"}, {"body": "checked patch release fixed thanks much", "d": "11/2016"}, {"body": "hi thanks filling issue please follow issue reporting guidelines provide live reproduction jsfiddle codepen etc thanks", "d": "11/2016"}, {"body": "fiddle nt working likely due triggering jquery change event instead real event", "d": "11/2016"}, {"body": "use bootstrap datepicker vue like", "d": "11/2016"}, {"body": "wontfix although catered nt think makes sense us cater behavior arbitrary party libraries especially workaround like xelia", "d": "11/2016"}, {"body": "sorry tack onto closed issue context related using optimal way target element within using something similar like react example", "d": "11/2016"}, {"body": "granda ref exactly purpose sufficient time always", "d": "11/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "11/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests please use dedicated gitter forum ask questions thanks", "d": "11/2016"}, {"body": "hi thanks filling issue event nt bubble vue manually reemit way use vuex event hub pattern may also help case", "d": "11/2016"}, {"body": "might related sure try adding key property section online repro", "d": "11/2016"}, {"body": "herringtondarkholme definitely related still little annoying deal adding tag worked would nice mention something docs diffing", "d": "11/2016"}, {"body": "igdexter would nice mention something docs diffing vuejsvuejsorg", "d": "11/2016"}, {"body": "linusborg cool thanks quick response quite shock staging environment today", "d": "11/2016"}, {"body": "quite shock staging environment today intended breaking change mind generally expected behaviour many situations already mentioned documentation still lacking assume worked accidentally recent fixes bugs amongst things related handling style class bindings might changed", "d": "11/2016"}, {"body": "linusborg wonder whether correct behavior example diffed solely vdom style attribute considered vdom construct comparison consider example inner text class updated class merged style merged note issue different since lifecycle managed virtual dom also different since inlinetemplate speaking implementation different slot vnode representation cc defcc", "d": "11/2016"}, {"body": "linusborg guessing improvement preserve static inline styles dynamic inline styles per made issue apparent wondering correct behavior comparing old node new node applying necessary style changes code seems merging reusing node fine think keep styles active node needs represented dom edited op light new info", "d": "11/2016"}, {"body": "hm might right", "d": "11/2016"}, {"body": "seems something wrong static style style binding merge looking", "d": "11/2016"}, {"body": "style holds style binding removed next render static style style binding removed reusing node", "d": "11/2016"}, {"body": "make pr fix", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "nt seem work", "d": "11/2016"}, {"body": "also personally like idea directive added kind component also directive could listen focus events initiated component interfere native focus events perhaps custom name distinguish", "d": "11/2016"}, {"body": "seems working focus custom input button clicked", "d": "11/2016"}, {"body": "ok must done something wrong works feel sufficient work around think directive would helpful", "d": "11/2016"}, {"body": "sure directive would help situation think calling method ref seems straightforward enough closing feel free expand think would help", "d": "11/2016"}, {"body": "basically would provide standardized way setting focus adding every methods property nt huge would add idea might look parent could think main benefits would would bit intuitive since native inputs already functionality provides standard way way using someone else component since official directive may likely add functionality", "d": "11/2016"}, {"body": "nt think want directive could component mixin though", "d": "11/2016"}, {"body": "added suggestion top head could possibly taking far multiple vfocus directives could also used place tabindex would encourage component creators add support things like tab navigation thinking mainly terms writing components shareable reusable since feel component authors nt going thinking adding support focus events tab navigation maybe something like could help guiding authors create accessible components well", "d": "11/2016"}, {"body": "actually even nt control party component still", "d": "11/2016"}, {"body": "yes could dependent first input one want eg nt add checkbox hidden input first markup sorry going long maybe give consideration vue could promote fully functional accessible components box great accessibility anything could help remember add better support think good thing", "d": "11/2016"}, {"body": "regarding focus reactive attribute give vuefocus whirl components would pass prop use directive within component", "d": "11/2016"}, {"body": "simplesmiler pretty cool try nov denis karabaza notifications githubcom wrote regarding focus reactive prop give vuefocus whirl components would pass focused prop use directive within component receiving mentionedreply email directly view github mute thread", "d": "11/2016"}, {"body": "using vue nt loading user content vue place curly braces inside data property output problems", "d": "11/2016"}, {"body": "content loaded rendered serverside using laravel blade templates single page application built entirely js nt even load data using js merely using vue awesome components optimize user experience clientside", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "feel like dumbass spent hours looking around docs thank", "d": "11/2016"}, {"body": "ugh incrementing number nexttick fixes closing", "d": "11/2016"}, {"body": "thanks maksimskomorokh expected behavior component list data changed make assignment list inside another function", "d": "11/2016"}, {"body": "nt anything local variable binding reference", "d": "11/2016"}, {"body": "interesting delete item list updated item removed", "d": "11/2016"}, {"body": "well may scope new javascript looks like call simply foo return functionmethod string called really belong connection instance anymore works perhaps handled internally hood vue proved fiddle call alerts function assign foohello bar call bar see returns undefined could maybe solved conditionally check exists vue instance call naive example would needed handled hood vuejs leave someone else answer conclude guess would need put parenthesis need able call extended function vue object", "d": "11/2016"}, {"body": "deohnas thanks new javascript example perfectly clear think using object method event handler terrible way", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "\u800c\u662f\u6837\u5f0f\u8868\u4e2d\u52a0\u4e86 webkituserselect none", "d": "11/2016"}, {"body": "scopid implementation detail documented official doc either wonder whether rely private api always augment typescript definitioin though", "d": "11/2016"}, {"body": "thank augment definition resolved issue us agreed ideal use private api would great find better way precompile templates include component jsts us mainly want jsts code leading prevent mixed imports js vue template js", "d": "11/2016"}, {"body": "closing since issue resolved userland yeah probably nt want expose private apis official type definitions", "d": "11/2016"}, {"body": "issue webpacksimple steps reproduce following issue", "d": "11/2016"}, {"body": "somewhat difficult workaround bug use old version easily npm resolves vueify vuetemplatecompiler using always even want use different version need add yarn shrinkwrap project", "d": "11/2016"}, {"body": "ernestoalejo works well computer according steps anything else missed", "d": "11/2016"}, {"body": "workaround parse requires browserify flag webpack option fix next release", "d": "11/2016"}, {"body": "issue using jspm vue rolling back vue solves", "d": "11/2016"}, {"body": "unrelated tried quick inside babel code says file filtered correctly stills throws error though files pass filter probably option consider", "d": "11/2016"}, {"body": "workaround webpack add", "d": "11/2016"}, {"body": "revertedfixed", "d": "11/2016"}, {"body": "temporary workaround js export default props subject data return subjectproxy thissubject computed selectedsubject get return thissubjectproxy set value thissubjectproxy value return", "d": "11/2016"}, {"body": "thanks guidobouman take look", "d": "11/2016"}, {"body": "key dynamic components accordingly unfortunately docs clear currently expected behaviour stated somewhere else switching elements toggling elements tag name must tell vue distinct elements giving unique key attributes otherwise vue compiler replace content element efficiency works similary dynamic components chrisvfritz think better place docs mention expand", "d": "11/2016"}, {"body": "linusborg thanks getting back work even using think explained conditionality section docs", "d": "11/2016"}, {"body": "api reference section adding reference addition guide would make even clearer", "d": "11/2016"}, {"body": "guidobouman yep working thanks suggestion", "d": "11/2016"}, {"body": "discussion docs improvement topic vuejsvuejsorg", "d": "11/2016"}, {"body": "confirmed adding input reproduce problem problem always changing component means every component changed inputing component identifier list rendering vue need rerender component identity changed focus lost please read related doc fixed version", "d": "11/2016"}, {"body": "totally missed key prop good eye herringtondarkholme thanks", "d": "11/2016"}, {"body": "thank herringtondarkholme missed obviously", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "hi please open issue vuerouter repo reproduction jsfiddlecodepenetc thanks", "d": "11/2016"}, {"body": "happens browser mangles casing vue chance thing modifier introduced address issue appear made way another semiworkaround template comes string dom vue able process browser", "d": "11/2016"}, {"body": "thanks quick reply workaround", "d": "11/2016"}, {"body": "back still recommended use string templates", "d": "11/2016"}, {"body": "vue input \u6846\u7684 input", "d": "11/2016"}, {"body": "width height strings", "d": "11/2016"}, {"body": "stuq \u5927\u795e\u76f4\u64ad\u4f1a \u8fd8\u6709\u90a3\u4e2a\u77e5\u4e4e live", "d": "11/2016"}, {"body": "nt need worry templates template basically render function vue component cases defined plain object basically modifypatch options object enhancer function alternatively vue plugins apply global mixin injects lifecycle hooks components lifecycle hooks check custom options field eg js const greedplugin vue gt vuemixin beforecreate optionsgreed initialize stuff vueuse greedplugin new vue greed queries mutations consult vuerx implemented way closing since question continue discussion thread", "d": "11/2016"}, {"body": "thank much get started tomorrow morning", "d": "11/2016"}, {"body": "thanks suggestion moved", "d": "11/2016"}, {"body": "thank evan apologies nt realize repo site tue nov evan notifications githubcom wrote closed receiving authored thread reply email directly view github mute thread", "d": "11/2016"}, {"body": "expected behavior vdom diffing finds component tree position reuses existing component instance want fully teardown recreate component give different keys", "d": "11/2016"}, {"body": "hi thanks filling issue supposed return already created object props shared across instances", "d": "11/2016"}, {"body": "fnlctrl", "d": "11/2016"}, {"body": "already fixed fiddle using version", "d": "11/2016"}, {"body": "uncaught referenceerror defined vuejs anonymous function vuejs anonymous function vuejs anonymous function vuejs", "d": "11/2016"}, {"body": "hi thanks filling issue please provide minimum example cause problem jsfiddle github repo link provided minified bundled code could nt help", "d": "11/2016"}, {"body": "reproduce android wechat browser vue make sure using correct build closing evidence caused vue please reopen follow information", "d": "11/2016"}, {"body": "bryonliu also problem maybe devtool option webpack get error option contains eval try removing eval option configuration", "d": "11/2016"}, {"body": "something wrong template", "d": "11/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests encourage use dedicated gitter forum ask questions discussion thanks use render functions access children via", "d": "11/2016"}, {"body": "hi thanks filling issue vue keep static classes templates asis please define default class vue data", "d": "11/2016"}, {"body": "mean please define default class vue data nt see going fix problem active class button vue loaded yet still correct logic vue loaded", "d": "11/2016"}, {"body": "others stumble upon issue fixed little nasty css workaround see", "d": "11/2016"}, {"body": "class attribute staticclass class binding class merged together runtime", "d": "11/2016"}, {"body": "\u8de8\u9875\u9762\u4f20\u53c2\u662f\u6846\u67b6\u65e0\u5173\u7684", "d": "11/2016"}, {"body": "hi thanks filling issue mean copy korean characters input field press enter key method called please check custom ime programs interfering keyboard input", "d": "11/2016"}, {"body": "fnlctrl right changed thanks", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "hi thanks filling issue simply use emit templates", "d": "11/2016"}, {"body": "found used root element visible typeof visible var app vueextend new app el app data return visible false template working", "d": "11/2016"}, {"body": "already fixed pr", "d": "11/2016"}, {"body": "seems let go", "d": "11/2016"}, {"body": "throw typeerror array properties think better merge elems properties array", "d": "11/2016"}, {"body": "seems bug vuecharts library never called arrays means library somehow passing array option supported", "d": "11/2016"}, {"body": "vuecharts library pass array called recursively function called arrays data include array properties another example without vuecharts think copy properties object prototype object design", "d": "11/2016"}, {"body": "indeed bug usage incorrect declaring prop data property using key fix see warning message telling", "d": "11/2016"}, {"body": "maybe de maybe ugly useful course tell issue ask question gitter", "d": "11/2016"}, {"body": "thanks daryl could use computed property way jounqin mentioned", "d": "11/2016"}, {"body": "using extraction way nt styles inlined strings javascript payloadblocking factor btw nt think large css blocks downloading assets blocks rendering concern solved code splitting fallback loader extract text plugin additional style chunks would inserted dynamically async chunks loaded moment best practices ssr code splitting something still needs worked updating demo future settle good solution", "d": "11/2016"}, {"body": "thanks reply actually project large spa based vue code splitting neccesary best practice every page vue file downloaded demand using code splitting works well browser stylesheets parts vue file compiled js file ssr nt first screen render blink styles currently extract styles pages one large css file include html file solve problem", "d": "11/2016"}, {"body": "seems regression working fine defcc", "d": "11/2016"}, {"body": "thanks looking bug caused model parser fix soon", "d": "11/2016"}, {"body": "using hyphen object key key put quotes javascript restriction vue", "d": "11/2016"}, {"body": "hi thanks filling issue javascript code nt executed probably browser using nt support please see fiddle working still get errors changing please switch nonminified version vue post error log thanks", "d": "11/2016"}, {"body": "fnlctrl used const page let errors chrome shows everything ok even switch mobile inspect iphone ipad reality nt work", "d": "11/2016"}, {"body": "please use nonminified version vue since minified one wo nt log errors runtime also side note using inspect ios safari chrome please try using osx safari inspect ios safari", "d": "11/2016"}, {"body": "added regular version vue installed ioswebkitdebugproxy says need plug phone computer idea using linux btw", "d": "11/2016"}, {"body": "ran fiddle ios chromesafari working fine", "d": "11/2016"}, {"body": "chrome mobile emulator emulates screen resolution real environment ios safari really inspecting web pages iphoneipad problem fiddle think usage nt work ios please try changing", "d": "11/2016"}, {"body": "switched var works iphone tested browserstack nt work iphone lumia devices think iphone uses old ios version lumia win sure problem", "d": "11/2016"}, {"body": "ios render issue caused vue please check application code used javascript features nt supported target environments believe vue issue please follow actual error logs thanks", "d": "11/2016"}, {"body": "thanks helping", "d": "11/2016"}, {"body": "thanks reporting meantime workaround would move inside component", "d": "11/2016"}, {"body": "elseblock walked markstaticroots func make pr fix", "d": "11/2016"}, {"body": "big bunch code please isolate minimal code jsfiddle", "d": "11/2016"}, {"body": "posva compiled code generated maybe reproduce jsfiddle", "d": "11/2016"}, {"body": "fixed reinstall get latest fix", "d": "11/2016"}, {"body": "jounqin ooh see included much code xd last line issue important one", "d": "11/2016"}, {"body": "posva sorry", "d": "11/2016"}, {"body": "jounqin nt worry also bit faulty less code include easier us help", "d": "11/2016"}, {"body": "maybe hook time component resolved currently achieve using mixin emitting events use cases testing thinking lazy loadin components allowing parent component know whether loaded display different content waiting", "d": "11/2016"}, {"body": "posva thanks response currently using mixin workaround uses different approach js export default beforecreate function const promises js async done gt const vm new maincomponent ready expect elqueryselector nottobenull dirty going try different approaches including main purpose ability know async component loadedresolved main component includes async ones know loaded resolved difficult test main component create additional behavior instance showhide waiting content need create additional wrappersmixins would nice functionality box", "d": "11/2016"}, {"body": "posva one async component easy handle one async components difficult", "d": "11/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests encourage use dedicated gitter forum ask questions discussion thanks", "d": "11/2016"}, {"body": "hi please make sure follow issue reporting guidelines opening issue thanks", "d": "11/2016"}, {"body": "yarn nt need changes vue part use", "d": "11/2016"}, {"body": "nice", "d": "11/2016"}, {"body": "prefer explicit ways especially depends upon another condition rather create another directive handle syntactic sugar", "d": "11/2016"}, {"body": "posva vote", "d": "11/2016"}, {"body": "gbezyuk however suggesting create separate package imo benefits enough include core", "d": "11/2016"}, {"body": "posva well right sorta raise idea discussion agree something really important currently tasks maybe somebody else would like implement feature", "d": "11/2016"}, {"body": "would rather use velse vif vempty velse vfor easy understand keep simple stupid", "d": "11/2016"}, {"body": "agree dsonet fond idea introducing special behavior directives simply dedicated directive may save keystrokes cost explicitness requires backtrack corresponding sure", "d": "11/2016"}, {"body": "like idea also som reservations considering explicitness behaviour two different results directive used vif velse would insertremove element used vshow velse would showhide element since vif vshow operate fundamentally different would essence need two implementations mirror behaviour conjunction proposal would different directives look order understand particular situation oh vshow determines weither oh vfor actually", "d": "11/2016"}, {"body": "obviously true nt seem real issue always continuation previously defined elementdirective anyway could use different name case come better one", "d": "11/2016"}, {"body": "removed vue could nt find thread discussed cost maintaining extra logic enough simple syntactic sugar vs maybe blakenewman recall bit better reasons", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks ca nt", "d": "11/2016"}, {"body": "nt also written somewhere close filters instead migration", "d": "11/2016"}, {"body": "nt think belongs migration absent vue docs nt exist anymore", "d": "11/2016"}, {"body": "havent used filters vue im still pretty new filters used writing binds thats confusing point view would expect also could use binds everywhere else maybe thats properly reason working", "d": "11/2016"}, {"body": "looks pretty clear reason bindings content jslike filters common practice interpolation", "d": "11/2016"}, {"body": "mikeralphson thanks filing issue warning appear using compilerinlcuded build need reproduction repo please", "d": "11/2016"}, {"body": "linusborg thank prompt response issue updated repro fiddle see console output run", "d": "11/2016"}, {"body": "mikeralphson logs", "d": "11/2016"}, {"body": "linusborg posva apologies nt realise fiddle autosave updated", "d": "11/2016"}, {"body": "mikeralphson sorry nt updated link still points basic starter code", "d": "11/2016"}, {"body": "linusborg sincere apologies jsfiddle nt give updated link created account please try", "d": "11/2016"}, {"body": "thanks seems indeed bug edit label improvement bug sense vue functionality broken bettercorrect warning would improve developer experience though also edited issues title reflect intended improvement", "d": "11/2016"}, {"body": "please read doc prop emit event try", "d": "11/2016"}, {"body": "thanks answer", "d": "11/2016"}, {"body": "hello skykilla thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "11/2016"}, {"body": "however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide feature request exact api method way clone", "d": "11/2016"}, {"body": "sorry twosentence issue could easily mistaken question asked vue must missed post forum please refer hint answer might clone vnodes slot render function actually want request feature please open another issue describe general usecase want wo nt digg loc jsfiddle find exactly feature look like", "d": "11/2016"}, {"body": "please refer discussion update thanks patien\u0441e good day", "d": "11/2016"}, {"body": "could add unique key list item take look list rendering doc updated fiddle", "d": "11/2016"}, {"body": "sortable works dom place vue needs hint keep track dom elements", "d": "11/2016"}, {"body": "hi thanks filling issue nt make difference yes author wanted pass value ing nt get full dom event event serves interface full dom events guaranteed available directly listening event native", "d": "11/2016"}, {"body": "work listen native input event root element component even div input element able catch event bubbles unless author component called never", "d": "11/2016"}, {"body": "kristianmandrup docs fully updated parts still changed please open corresponding issue vuejsorg repo", "d": "11/2016"}, {"body": "fnlctrl noticed much looked code filed issue made pr however trying change nt work either tried linusborg approach also native event even triggered attempt fix still getting nowhere still many inconsistencies docs post issues docs future html choicelabel export default props prompt data return mounted watch promptchoices newchoices old gt consolelog newchoices newchoices methods onchosen e consolelog e", "d": "11/2016"}, {"body": "create method", "d": "11/2016"}, {"body": "thanks", "d": "11/2016"}, {"body": "hello kwalker thank filing issue please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem thank", "d": "11/2016"}, {"body": "ok linusborg changed trouble give answer thank", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted gitter chat room forum stackoverflow thanks find useful", "d": "11/2016"}, {"body": "thanks post", "d": "11/2016"}, {"body": "actually looking lifecycle hooks like hook nt lifecycle hook triggered ing component problem detached hook called parent component children vm nt anymore therefore hook called first level children detached component everything else vm null foreach called parent", "d": "11/2016"}, {"body": "thanks reply think solved problem perfectly", "d": "11/2016"}, {"body": "hi thanks filling issue seems problem event nt fired loses focus browser behavior ca nt really help workaround simple explicitly bind listener immediately fired whenever user types", "d": "11/2016"}, {"body": "fnlctrl thanks help definitely let work around something nt understand even necessary value thing updated trigger update values component words seems function affecting one variable worry updating thought reactivity supposed efficiently update variables changed case", "d": "11/2016"}, {"body": "simply put event fired temporary state different app overridden app state render function called triggered update render function called whenever anything reactive changed", "d": "11/2016"}, {"body": "notice allowing user create dom state typing input oneway bound value disconnected underlying application state whenever component updates application state force dom state sync throw away temporary input state precisely control want need represent temporary state application state creating separate local property use", "d": "11/2016"}, {"body": "think may need follow react take warning usage freezing input altogether", "d": "11/2016"}, {"body": "thank response spent several hours trying figure happening perhaps think frameworks tend naturally black box combined misconception render function loss retrospect makes much sense happening work around running edge cases would nice type error warning thrown alert developer happening know nt easy solution since edge cases definition something run time", "d": "11/2016"}, {"body": "yeah likely add warning oneway value bind future", "d": "11/2016"}, {"body": "seems fixed issue", "d": "11/2016"}, {"body": "one issue vueminjs getting included build", "d": "11/2016"}, {"body": "component required one root element looks like actually want two different components like wo nt needed one root element dynamic use actual component used whatever", "d": "11/2016"}, {"body": "crswll views one component different component therefore way best two element root works plunker", "d": "11/2016"}, {"body": "closing ita duplicate quote evan problem without code analysis vif expressions fact near impossible depends component runtime state way tell whether really return one element get around either using dynamic component turning conditional branches components use render function instead", "d": "11/2016"}, {"body": "might improved future compile everything warn runtime root node returned", "d": "11/2016"}, {"body": "thx wait", "d": "11/2016"}, {"body": "wait", "d": "11/2016"}, {"body": "expected behavior according doc venter removed one frame venteractive removed transitionanimation finishes two classes applied time defined applied time enteractive wins css rule kept begin end transition course fixed", "d": "11/2016"}, {"body": "something similar roadmap scoped slots doubt includes loop scoping fyi already achieve render functions functions return vdom props", "d": "11/2016"}, {"body": "tracked use inlinetemplate hacks", "d": "11/2016"}, {"body": "herringtondarkholme hack work updated latest version", "d": "11/2016"}, {"body": "please file issue related repo", "d": "11/2016"}, {"body": "herringtondarkholme sorry works bug", "d": "11/2016"}, {"body": "herringtondarkholme use voutlet amp vtemplate recursive treenode root node get rendered template vue datatitle", "d": "11/2016"}, {"body": "ask question original repo vue issue list bug report feature request thanks", "d": "11/2016"}, {"body": "closing implemented scoped slots", "d": "11/2016"}, {"body": "thanks lepture simliar could define b c data workaround updated fiddle", "d": "11/2016"}, {"body": "technically expected behavior due way templates compiled render functions essentially passing fresh array every time parent component rerenders thus triggering child props considered changed finally causing computed property computed happens use inline literal values props template defcc suggested would recalculation remains exact array across rerenders prop always static ie care initial value intend mutate prop set local data variable finally apart computed called child rerender ux behavior correct downside probably unnecessary computation practice fairly cheap would nt worry much unless ends causing noticeable performance issues", "d": "11/2016"}, {"body": "see link u use question", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues questions posted gitter chat room forum stackoverflow thanks", "d": "11/2016"}, {"body": "binding basically creating oneway bind makes value input box constant binding default value either using make value sync input use create binding default value", "d": "11/2016"}, {"body": "neither solutions work nt default values part simple example perhaps gone detail placing component set inside component restrictions mutating props kick following example linus borg gave page javascript parent child export default props value special prop received vmodel example closer trying imagine instead packaged component props instead data variables problem like said dynamically update quicklist bottom component resets text input would completely frustrating enduser making whole thing unusable feels like rock hard place since supposed mutate props vmodel yet telling use vmodel", "d": "11/2016"}, {"body": "value inside contain parens need wrap quotes", "d": "11/2016"}, {"body": "comments make sense repro would make things faster someone else trying isolate code took look could nt find anything wrong may get help forums also please follow issue reporting guidelines next time", "d": "11/2016"}, {"body": "repo think everything anything wrong let know tried forums glitter luck unfortunately", "d": "11/2016"}, {"body": "repro repo", "d": "11/2016"}, {"body": "ah haha ca nt first fall unable recreate jsfiddle etc afraid quite new vue using single file component method far repo provide working example least need click remove button understand whole npm install thing unfortunately", "d": "11/2016"}, {"body": "nt others fallen give shot", "d": "11/2016"}, {"body": "evu tried works nicely edits got error red message appears top problem seems appear weird character appvue template line looks like simple tab nt make sense look deeper edit actually happens second note edit strange behaviour hot reload happens actual element removed somehow guess noterepo event bubbling may want take look vuex looks like may fit better way using events", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks looks like piping stream response", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "11/2016"}, {"body": "ok", "d": "11/2016"}, {"body": "workaround give duplicate namespace use explicitly style declaration", "d": "11/2016"}, {"body": "warning said please nt put styling logic components style tags svg putting style tag headbody sideeffect want scoped modularized styling look vue single file component", "d": "11/2016"}, {"body": "hello powerfulpony thank filing issue please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem thank", "d": "11/2016"}, {"body": "hi linusborg understand demonstrate server render jsfiddle", "d": "11/2016"}, {"body": "case repository would better option oviously", "d": "11/2016"}, {"body": "linusborg said would better provide repository case seems bug similar", "d": "11/2016"}, {"body": "hi considered case commit opinion third library added method vue prototype library author probably nt want get changed end users elaborate situation long migrate forum", "d": "11/2016"}, {"body": "opinion third library added method vue prototype library author probably nt want get changed end users agreed see discussion think detecting methods starts good approach closing issue", "d": "11/2016"}, {"body": "solve vhtml direcive error", "d": "11/2016"}, {"body": "must click eyebutton see data", "d": "11/2016"}, {"body": "converted getters setters use jsonparse jsonstringify data normalize", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "indeed thanks link maybe adding link section section would give visibility", "d": "11/2016"}, {"body": "please open issue repo", "d": "11/2016"}, {"body": "selected option always reflect value vmodel value switch options nt change nothing new options selected probably want explicit set", "d": "11/2016"}, {"body": "context event ipcrenderer triggered would spontanously assume state changed undone piece code running event trigger", "d": "11/2016"}, {"body": "file emits event helps currently mobile ca nt really format well let know need information", "d": "11/2016"}, {"body": "figured sending events one overlapping manual hiding state fixed wrapping event appropriate statement", "d": "11/2016"}, {"body": "thanks atleta document needs updated", "d": "11/2016"}, {"body": "moved vuejsorg", "d": "11/2016"}, {"body": "pr created", "d": "11/2016"}, {"body": "could ask question forum gitter try use issue tracker bug reports feature requests problem could use computed properties could take look doc", "d": "11/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "11/2016"}, {"body": "thanks example", "d": "11/2016"}, {"body": "please specific expected behavior think wrong", "d": "11/2016"}, {"body": "example use cont divuipopup animationend event cont number executions click animate button result ok count plus see count plus twicebecause divuipopupanimate also listen animationend event see eventtarget element divuipopup listen animationend event", "d": "11/2016"}, {"body": "nt expected behavior controls outer transition inner transition makes sense fire two events", "d": "11/2016"}, {"body": "animationend bind divuipopup", "d": "11/2016"}, {"body": "seemingly problem", "d": "11/2016"}, {"body": "vue nt use keywords sure vue code error stack trace look like", "d": "11/2016"}, {"body": "rambopanda need change babel config", "d": "11/2016"}, {"body": "shusiwei using code directly dist folder error location", "d": "11/2016"}, {"body": "sigh browsers use phones tests pass stock android browser even", "d": "11/2016"}, {"body": "unfortunately wontfix phones listed years old nt seen android browsers demonstrate behavior vue support list browsers conform spec spec presence variable name use property identifier cause parsing errors", "d": "11/2016"}, {"body": "bug wrap content within div", "d": "11/2016"}, {"body": "anishdcruz ok closing issue difficult one root rule nt ban reactjs way like", "d": "11/2016"}, {"body": "blog might help", "d": "11/2016"}, {"body": "issued similar situation fixed anyway difficult considered bug feel free close", "d": "11/2016"}, {"body": "case since velse vif conditions false", "d": "11/2016"}, {"body": "problem without code analysis expressions fact near impossible depends component runtime state way tell whether really return one element get around either using dynamic component turning conditional branches components use render function instead", "d": "11/2016"}, {"body": "webpack freezes run using yarn tried reinstall dependencies without success back worked thanks", "d": "11/2016"}, {"body": "jbruni try build vue latest source see resolves issue", "d": "11/2016"}, {"body": "ok think know problem fix soon", "d": "11/2016"}, {"body": "jbruni pushed fix please try build dev branch source let know", "d": "11/2016"}, {"body": "thanks evan home back office tomorrow test first thing morning", "d": "11/2016"}, {"body": "tested using release works thanks lot amazing work sincerely got curious know edge case case templates got caught issue", "d": "11/2016"}, {"body": "passed render functions bound instance rendered required vue vnodes correct render context exposed global need every component fact verbose", "d": "11/2016"}, {"body": "maybe trying hard make similar react", "d": "11/2016"}, {"body": "fyi vue removes comments template parsing supposedly conditional content would show either probably nt want use vue compile conditional comments", "d": "11/2016"}, {"body": "well good know thanks fix", "d": "11/2016"}, {"body": "hi thanks filling issue vue nt angular magics writing executed plain javascript errors thrown trying access properties nullundefined therefore solution simply would javascript translated like try jsx instead templates easily use party libs get deep object property namely lodash get written", "d": "11/2016"}, {"body": "use get templates import get lodashget vueprototype get get get people namefirstname", "d": "11/2016"}, {"body": "happening consistently across browsers chromeffsafari really weird", "d": "11/2016"}, {"body": "reason vue parses indom template asis everything already correct namespace vue parses template string regenerates dom based generated virtual dom special treatment svg namespace embedded xhtml elements inside foreignobject generated svg namespace instead xhtml fixable adding detection parser", "d": "11/2016"}, {"body": "thanks fix works makes happy", "d": "11/2016"}, {"body": "hmm supposed manually mount inside another alreadymounted vue instance incorrect usage fact happens work vue coincidence support register child proper child component parent use parent template", "d": "11/2016"}, {"body": "vue instance root level reactive properties static declared component option add dynamically runtime fact see warning console second example case directive require user declare property needs access modify", "d": "11/2016"}, {"body": "unfortunately expected behavior due patch works simply add key ifelse blocks differentiate", "d": "11/2016"}, {"body": "possible could also mentioned docs vif know key caveat listed list rendering specifically mentioned vfor came across solution using key attribute thinking list rendering case thought probably patch strategy turns right mentioned vif docs", "d": "11/2016"}, {"body": "yes absolutely", "d": "11/2016"}, {"body": "due nature cyclic dependencies module system diagrampath imports block block nt finished evaluating yet turn depends diagrampath gets empty object instead using dynamic lazyload block diagrampath", "d": "11/2016"}, {"body": "would nt nice put note", "d": "11/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "11/2016"}, {"body": "please check link issue reporting guidelines", "d": "11/2016"}, {"body": "nvkhai fixed link", "d": "11/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "11/2016"}, {"body": "see update code gen work without statement successful happy quality create pr", "d": "11/2016"}, {"body": "robertwhurst thanks might prove difficult would require decent rewrite current compiler implementation said module system bundler using application assume webpack reason directly importing files else webpack use plain syntax avoid forcing component module strict mode", "d": "11/2016"}, {"body": "understand experience working codegen know lot work might worth us solution work aim follow coding standards much possible avoid performance penalties removing good start believe always deoptimizes code inside statement track sources variables within block using webpack moment want avoid exporting vue files ui shared parties want able share components easily possible also wrap compiled vue templates umd wrappers using babel idea allow parties without build system simply add components need via script tags import statements provided vue page", "d": "11/2016"}, {"body": "robertwhurst yes would definitely great get rid appreciate willingness work let outline reasons first place use primarily gets rid need parsing scope analysis javascript expressions embedded inside templates thus greatly reducing size complexity codegen since template compiler included standalone build runs browser payload size still important concern course achieve removal employ proper ast analysis expressions would entail full sized javascript parser would bloat compiler size significantly one option would ship current compiler using standalone build use separate compiler build tools however would result two parallel compiler implementations greatly increase maintenance cost surface potential bugs probably better option would create postcompiler alreadygenerated render function code essentially optional phase turns code contains code nt rewriting identifiers makes decoupled base compiler use build phases without worrying size could also turned improve compilation performance concern implementation wise could technically achieved via babel plugin open alternatives familiar ideally standalone npm package since purely code transform hard coupling vue source code", "d": "11/2016"}, {"body": "digging working around currently seeing problem looking issue vuejsvueloader far luck situation webpack bundling librarytarget yet still added bundled code idea", "d": "11/2016"}, {"body": "linusborg strange looking forward possibility clearing whole class error sounds good going try babel plugin approach first back soon", "d": "11/2016"}, {"body": "made quick test see perf implications result would like least option decide whether run vue code strict mode", "d": "11/2016"}, {"body": "vuetemplaecompiler package uses strict mode could lead exports precompiled components strict mode desribed experience even build setup edit disclaimer far mostly guessing part vue uses rollup build process rollup adds strict mode imports like webpack according rollup docs disabled nt current build config entry web compiler uses imports would suspect create problems templatecompiler could disable strict mode rollup", "d": "11/2016"}, {"body": "made bit progress last light post demo next days decided go standalone module idea used alone wrapped module use babelwebpackbrowserifyetc", "d": "11/2016"}, {"body": "robertwhurst happened realize could done efficiently hacking buble since already using custom build buble able implement removal today dependency fresh install get render functions without default still thanks interest contributing", "d": "11/2016"}, {"body": "ah cool cheers", "d": "11/2016"}, {"body": "amazing work", "d": "11/2016"}, {"body": "vue replaces target element use indom templates may conflicting bootstrap handles modal element although case nt need nt bootstrap vue app everytime modal opens call directly everything works fine", "d": "11/2016"}, {"body": "thanks quick response change code accordingly", "d": "11/2016"}, {"body": "hello usage question encourage ask forum gitter try use issue tracker bug reports feature requests question literally recreating input every time text changed give items identifiers key using instead alternative could track items reference", "d": "11/2016"}, {"body": "fixed already", "d": "11/2016"}, {"body": "\u554a\u8fd8\u662f\u7a7a\u95f4\u5f88\u5927", "d": "11/2016"}, {"body": "hi elaborate use case seems using compiler nt type definition use compiler package vue work flow nt know whether flow support reading typing packagejson doc says might need submit pull request flowtyped official repo", "d": "11/2016"}, {"body": "vue internal flow annotation intended public consumption relies alias configured vue may submit public flow definition flowtyped future currently available yet", "d": "11/2016"}, {"body": "hi thanks filling issue however issue tracker reserved bug reports feature requests encourage use dedicated gitter forum ask questions discussion thanks", "d": "11/2016"}, {"body": "using first element seems play important role issue sufficient set remove directive though everything rendered fine", "d": "11/2016"}, {"body": "seems bug first glance thanks pvorb reporting", "d": "11/2016"}, {"body": "calling exptostring trim vuecommonjs parseexpression trick case", "d": "11/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "11/2016"}, {"body": "closing due inactivity edit btw tried repro luck", "d": "11/2016"}, {"body": "internal util bindings immutable design messing vue internal utils anyway", "d": "11/2016"}, {"body": "current public api nt support array yet could useful", "d": "11/2016"}, {"body": "agree app set top box remote nt always line computer", "d": "11/2016"}, {"body": "file importing standalone build assumes browser environment regardless nt think possible involves nontrivial effort vue ssr php package node package dependencies eg solved bundling whole package dependencies one file features rely nodejs native modules like even get normal ssr working would nt able use stream mode basically something planning work definitely open community contributions anyone wants make work", "d": "11/2016"}, {"body": "true possible compiled javascript loop render function runtime definition usage posted seems bit hacky sure equivalent achieved datadriven approach rather patching builtin directives another topic feel free open discussion forum", "d": "11/2016"}, {"body": "seems result bug reading vue parsing indom template returns placeholder string textarea empty instead empty stringnull see way work around bug", "d": "11/2016"}, {"body": "bug webruntimewithcompilerjs directly use", "d": "11/2016"}, {"body": "ie bug happens innerhtml outerhtml use outerhtml get indom template really functionality replace", "d": "11/2016"}, {"body": "linusborg know need find core members confirm fix", "d": "11/2016"}, {"body": "believe intended behavior computed property bar dependency computed property foo foo dependency test therefore whenever button clicked test updated anything dependency updated chain", "d": "11/2016"}, {"body": "dstrang pointed expected correct behavior", "d": "11/2016"}, {"body": "expected state change method state change triggers rerender ends infinite loop method calls templates render functions pure produce side effects state changes", "d": "11/2016"}, {"body": "twoway binding component rerenders things changed overwritten data nt change need set adding link", "d": "11/2016"}, {"body": "nt dom attribute equivalent mind nt think really vue concern could write directive handle quite easily though", "d": "11/2016"}, {"body": "saw requesting vue made oneline directive example also added untested commented vue version", "d": "11/2016"}, {"body": "problem value js used represent visual state may totally depend use case app logic probably better handle code sirlancelot suggested", "d": "11/2016"}, {"body": "fair checkboxes already support binding maybe worth adding", "d": "11/2016"}, {"body": "according indeterminate distinct state checked unchecked instead obscures actual state checkbox without changing thus candidate rather things consider bindings bind attribute attribute represents default value current value default value attribute would hijacking bind default value attribute dom rehydration ssr may awkward final word proceed core userland", "d": "11/2016"}, {"body": "simplesmiler still think belongs userland fact simply simple custom directive would", "d": "11/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "11/2016"}, {"body": "linvar works correctly vuejs new vue el test data headers methods onclicked function thisheaderspush html", "d": "11/2016"}, {"body": "luventa sorry mention version used used csp version vuejs chrome extension failed find get csp version vuejs vuejsorg installation guide use npm install vue trying get runtime version nodemodulesvuedist directory also tried git clone vue wan na build src npm install dependencies failed link issue reporting guidelines provided try use insert code syntax", "d": "11/2016"}, {"body": "linvar use element case", "d": "11/2016"}, {"body": "simplesmiler works thanks", "d": "11/2016"}, {"body": "rerender default function nuts returns object literal", "d": "11/2016"}, {"body": "hi nt think two issues changing nuts property watch still fired", "d": "11/2016"}, {"body": "doonetheprune nuts prop default function return fresh object time changed internally", "d": "11/2016"}, {"body": "defcc agree default function return fresh object however nt think return new object every time value property changed component created look fiddle nuts property affected value property please could reopen", "d": "11/2016"}, {"body": "caused render system input value changed app rerenders top bottom bla component also affected add updated function demo better understanding", "d": "11/2016"}, {"body": "defcc come nuts property string watch fired", "d": "11/2016"}, {"body": "explained could take look", "d": "11/2016"}, {"body": "defcc looked fiddle see similar underlying issue might issue however highlights problem scenario lot likely occur also reading comments issue makes really worried dont plan fixing issue without trying harsh vue think great basic bug like means looses lot credibility came across first started using vue would stopped using", "d": "11/2016"}, {"body": "component name notice conflicts causes infinite render loop", "d": "11/2016"}, {"body": "bug vue ok know close", "d": "11/2016"}, {"body": "behavior design could got warning dev mode", "d": "11/2016"}, {"body": "read key correct behavior proper key usage", "d": "11/2016"}, {"body": "thanks dealing bug like whole weekend look keys", "d": "11/2016"}, {"body": "like idea maybe simply make normal accept returning promise", "d": "11/2016"}, {"body": "long nt break existing code fewer keywordsnames remember", "d": "11/2016"}, {"body": "several quick thoughts user declare default value promise resolved vue support builtin throttle promise handle events like keychange mousemove vue support builtin callback certain promise resolved inspect whether async property resolving resolved might need proposal", "d": "11/2016"}, {"body": "herringtondarkholme good points thinking almost think issues mentioned would better solved rx vuerx original example written simplified sake discussion rx version obviously verbose simple promise version get almost everything herringtondarkholme listed default value throttling sideeffect subscriptions cases eliminate need detecting promise resolves fetching commonly used little helper simplified js long name precisely describe vueprototype reactivelyfetchasobservable function urlorgetter return watchasobservable urlorgetter switchmap url gt rxobservablefrompromise fetch url new vue data lang en subscriptions return reactivelyfetchasobservable gt return lang thislang startwith default settings sum think async computed pattern simple elegant basic use case may sufficient deal full scale complexity async operations shoehorn async computed pattern deal cases one one stage probably better going rx unfortunately closing note saying bad idea think still good idea let library evolve maybe land good balance probably best idea core", "d": "11/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "11/2016"}, {"body": "ok thank maybe bug think need rerender entire list", "d": "11/2016"}, {"body": "use property vue tracks unique keys rerendering lists nt provide keys complete rerender", "d": "11/2016"}, {"body": "please check think issue fixed pr", "d": "11/2016"}, {"body": "related geojson duplicate amp fixed", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "could use computed property", "d": "11/2016"}, {"body": "kinda defeats point using filter though nt want declare computed properties nt want declare duplicate methods across multiple components", "d": "11/2016"}, {"body": "callumacrae declare method mixin use vueprototype like vueprototype linkhandler function value use", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "iagafonov workaround filters suggest either able able use filters would mean allowing interpolations attributes filters removed current behaviour confusing", "d": "11/2016"}, {"body": "discussed extensively api design thread please read thread arguments raised already filters originally removed added back common use case due community request going change foreseeable future", "d": "11/2016"}, {"body": "work", "d": "11/2016"}, {"body": "thank changing mind", "d": "11/2016"}, {"body": "edit anyone simply could nt nt bother click link read docs", "d": "11/2016"}, {"body": "hi thanks filling issue first scoped css css related thing nt vue concern would vue feature reactangular etc supposed part build process currently scoped css vueloader feature like framework build tool requires compilation suggesting adding css scope runtime nt possible vue never aware css files therefore suggestion remains", "d": "11/2016"}, {"body": "see thanks reply could possible vueloader go take look source code suggesting adding css scope runtime believe case done compiletranspiling css code way done right right vueloader appends unique attribute append prepend parent element selector anyways since regardless would done would likely low prio issue team considering much important featureissues would work forking loader look thanks reply", "d": "11/2016"}, {"body": "believe case done compiletranspiling css code way done right sorry misunderstood feature request would mind opening issue vueloader repo", "d": "11/2016"}, {"body": "sure thing thanks", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "wanted add html attributes placeholder input box without adding placeholder new prop wanted bind keypress event input box without adding emit keypress component basic ideas component properties parentchild communication please explicitly declare props need events emit", "d": "11/2016"}, {"body": "fnlctrl found readme babelplugintransformvuejsx note builtin vue directives supported using jsx never use vshow jsx guess builtin directives supported jsx update readme", "d": "11/2016"}, {"body": "actually builtin directive works jsx make pr repo", "d": "11/2016"}, {"body": "good", "d": "11/2016"}, {"body": "closing original issue seems resolved reproduction general bug provided", "d": "11/2016"}, {"body": "could achieved directives decision remove intentional directives meant used lowlevel dom access things like meddling vmodel functionality explicitly job anymore cases want directive rather use component instead specific situation need help happy help forumvuejsorg", "d": "11/2016"}, {"body": "well components powerful indeed lacks one thing entirely modularity instance want add multiple behaviors element ie select focus select escape value nt changed call function change amp blur make input cancellable manage input mask via third party plugin etc using component mix logic behavior callbacks gets messy quickly repeat another element needs subset behaviors components understood correctly recreate handlers slight variations keeping dry hand directives tag element gets desired behavior way keep logic one place html template semantic readable hence maintainable sounds good think feature request still valid since unsuccessfully fail see advantage components directives kind uses perhaps wrong possible glad corrected indepth explanation directives evil want different angular lastly since possibility changing directive still exists albeit bit convoluted add additional parameter would break legacy code save us hassle side note unfortunately forumvuejsorg helpful cf question subject eight days ago remains without answers day perhaps use cases edge cases", "d": "11/2016"}, {"body": "pretty lowlevel feature demonstrated already working code achieves want general philosophy leaving cases userland unless extremely common use case", "d": "11/2016"}, {"body": "adding many usecases mentioned done directives mentioned would require kind reference asked would rather think would oddproblematic one directive writing model anyway unless different events eg cancelable example could ever use one directive accesses model otherwise would get way point behaviour requires access model make custom component add directives eg something like vfocus component need", "d": "11/2016"}, {"body": "alexandrebonneau another note even provided official api set value vmodel expression references would mean directive uses method would dependent vmodel present problem many cases want ca nt use vmodel eg custom input components using vuex use pluginlib works input conflicts vmodel sure many cases would rather add event listener expression set value directives would break lowlevel functionality examples might better solve low level dom methods eg writing value input manually triggering input dom event concerned browser compatibility wo nt work ie lt couple npm packages provide compatibilty older ie versions", "d": "11/2016"}, {"body": "thank input pun intended see update code use way lowlevel inputs also reference directive hook signatures imagine could set default attached element directive declared though remaining problem maintainability still able make sure multiple directives play well together access", "d": "11/2016"}, {"body": "also vmodel reference directive hook signatures imagine could set vmodel null default vmodel attached element directive declared though thinking redusability compatibility would often situation start using vmodel later refactor use event instead point directives relying vmodel expression would stop working", "d": "11/2016"}, {"body": "nt think way prevent happening original fiddle expected behavior given render system works warning literal objectarrays tricky thing could valid usage long user nt attempt mutate value believe already warned docs", "d": "11/2016"}, {"body": "also encountered problem code spend lots time debugging without help warning also search docs keyword got two results one even give example using object literals html think static prop useful many conditions static props action vue line expectations little confusing vue although know works also noticed modifier removed vue nt think modifier breaks oneway binding contrary think helpful vue perform static prop idea bringing back", "d": "11/2016"}, {"body": "advice replace export default moduleexports fixing issue", "d": "11/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "11/2016"}, {"body": "mean cancel trying interrupt ongoing animation make snap end state turn transition nt trigger anymore either case setting bound class empty string wrong way way interrupt already triggered transition revert toggling state controlling element inside turning could probably add prop transition components workaround using toggle transitionwrapped nontransitionwrapped version element", "d": "11/2016"}, {"body": "case turn transition effect point instead remove entire effect use vif may remove one enter leave effect", "d": "11/2016"}, {"body": "limitation using indom template string templates subject", "d": "11/2016"}, {"body": "yes pr welcome", "d": "11/2016"}, {"body": "fyi functional components vue eager means render function gets called directly parent render cycle without allocating instance child instance associated easy way perform memoization previous render results desired optimization easily obtainable ensuring correctness possible cases said lack instance functional components pretty big perf win cases especially leaf components used large numbers may best choice complex oneoff components presence instance allows take advantage static optimization reactivity boundary react functional components also always rerendered open suggestions achieved nt see actionable path forward", "d": "11/2016"}, {"body": "context convenient construct library author coupled components example tabs tabpanes library quite strange lame encapsulate library local context separate global store library author might able take burden passing props components may also interface end users ktsn good example good arguments context feature questions reading react context document disclaimer react user seems cooperation problem vue context also reactive need workaround context update described article still questions context found example context found child parent ancestors closest ancestor resolve context ancestors handle context key conflict seems react context implementation chooses closest ancestor example easily cause problem multiple libraries provide different contexts name say one component receives context another library component collect context properties ancestors pack properties array map also context parent component visible children templates slots children template children slots provide option users choose", "d": "11/2016"}, {"body": "tried toy implementation seems fully doable user land without touching vue core working example source requires token expose injection avoid conflict parts look like api suggested simplesmiler sebastiandedeyne context visibility fully controlled token parent component expose token context visible child another helper method let children decide inject closest context inject contexts ancestors way root agree posva context delicate replaced passing props including default promotes bad practice beginner advanced users need library code implementation overhead lines code", "d": "11/2016"}, {"body": "doubts token understand useful avoid conflicts object needs passed around throughout exactly trying avoid would look like assuming components live separate files ca nt declare token variable top need pass around somehow token required", "d": "11/2016"}, {"body": "token primitive value symbol environment string otherwise declared outside component imported component used context feature need import token intermediate components agnostic token context need passing around token example man middle component refer token component still get user info importing token token globally unique context object retrieved token component specific stored relevant components", "d": "11/2016"}, {"body": "makes sense still believe strings good enough situations though compatible symbols good addition want something strict working package use throughout projects open sourced still prefer see something official either core official package", "d": "11/2016"}, {"body": "think excellent proposal course something like used caution believe deem necessary additional package part core vue", "d": "11/2016"}, {"body": "addition example ktsn approach useful act similar service locator decouple components services avoid require service instance read solution examples using approach herringtondarkholme actually solved issue proof concept implementation beside implementation plugin uses awful global container defining services key value pairs remind data props definition open complex features like querying feature interface", "d": "11/2016"}, {"body": "case anyone interested mean time created package based discussed projects", "d": "11/2016"}, {"body": "closing due inactivity", "d": "11/2016"}, {"body": "fixed", "d": "11/2016"}, {"body": "linusborg repopen one per response vuejsvuerouter", "d": "11/2016"}, {"body": "behavior early version changed general rule thumb able locate child components used component looking component code implicitly inheriting components matter done break dependency tree lucidity look component code sure child component used came explicitly importing child components sure leads repetition opinion contrary argument rises possibility errors makes app support harder makes code robust easier readfollowmaintain fact approach collecting components single file good middleground would probably run similar situations", "d": "11/2016"}, {"body": "u use vfor like", "d": "11/2016"}, {"body": "index removed vue want use index change vue version", "d": "11/2016"}, {"body": "jarodrigues simple change code like index", "d": "11/2016"}, {"body": "like class module think style also behavior consistency try make pr", "d": "11/2016"}, {"body": "defcc yeah probably need treat separately need parse static style strings objects", "d": "11/2016"}, {"body": "ok take look", "d": "11/2016"}, {"body": "almost done make pr later", "d": "11/2016"}, {"body": "change merge styles case textelementvue js export default render createelement return createelement input attrs type text style textalign right", "d": "11/2016"}, {"body": "update hook nt get triggered call custom directive otherwise would end infinite loop triggers value programmatically changed app code", "d": "11/2016"}, {"body": "yes please looking exactly render functions overwhelming feels disjointed overall feel single file component", "d": "11/2016"}, {"body": "would useful would scope css functional components", "d": "11/2016"}, {"body": "got warning transitiongroup warning add key child item actually key already meet problems code picture warning", "d": "11/2016"}, {"body": "came across issue really stumped initially props local data state getting mixed list item components especially filtering refreshing list searching lead issue thread eventually stumbled across page docs issue caused default inplace patch strategy uses updating list components docs linked explain really well essentially recommended provide whenever possible unless iterated dom content simple intentionally relying default behaviour performance gains hope helps someone else may come across issue", "d": "11/2016"}, {"body": "next release use umd runtime build via", "d": "11/2016"}, {"body": "fixed", "d": "11/2016"}, {"body": "able repro simplified test case show attributes list edge amp chrome", "d": "11/2016"}, {"body": "phoenixgao using rollup think somewhere investigated bublebabel inject processed js files", "d": "11/2016"}, {"body": "limitation going fixed workaround painfulunmaintenable vif branches", "d": "11/2016"}, {"body": "akryum feature introduced commit seems check skipped production perhaps bypass check defining separately instead though may discouraged", "d": "11/2016"}, {"body": "better implementation would create dynamic input type component vue attach custom components get twoway data binding", "d": "11/2016"}, {"body": "sirlancelot component would still need dynamically bind type could limitation circumvented using custom model would mean duplicated code every type want cover get quite messy especially generic components change quite often get less stable version", "d": "11/2016"}, {"body": "gwildu yes encountered issue trying use input component development version keen ui recent update vuejs make work workaround would always set input type validate value require work every similar component", "d": "11/2016"}, {"body": "sirlancelot sure possible could nt old behavior hidden attribute flag like generictype dynamictype guess new behavior positive performance impact might issue projects", "d": "11/2016"}, {"body": "implementing render function javascript look elegant probably powerful enough almost anything actually way components implemented", "d": "11/2016"}, {"body": "thanks sharing akirak nt personally read far docs yet outlines exactly mind op dynamic input component suggested earlier create component many hardcoded inputs desired wrap abstracting functionality away component allows reusability nt think implementation written", "d": "11/2016"}, {"body": "render functions nt support vmodel reimplement vmodel essentially nt look simple", "d": "11/2016"}, {"body": "vue character dom element attribute creating new vue instance", "d": "11/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "11/2016"}, {"body": "envomer inside vfor column columns new vue data return columns key opt title options html myhtml partials myhtml edit methods edititem xxx", "d": "11/2016"}, {"body": "kenberkeley partials deprecated nt", "d": "11/2016"}, {"body": "envomer use slot dynamic component instead vue", "d": "11/2016"}, {"body": "declare component template may want set initial value attributes bind parent variablecan vuejs support proponce much convenient set initial value template js code", "d": "11/2016"}, {"body": "closed issue also issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow gitter happy help", "d": "11/2016"}, {"body": "also concerned turn security features use vue could deal breaker casually cruising code nt come across anything necessitates like know technical reason nt seem replaced also replacing lines like lines like furthermore nt understand purpose building strings rather using actual functions replacing dynamic closure variables templates like create closure easy replace name value var foo elvalue create function regular javascript string function var x foo tostring replace foog elvalue usable function standalone mode easy template prebuilt mode believe pattern would make possible violate csp still build tools get strings need export could get help someone little familiar code pretty confident could get converted insecure nonstandard proper secure something missing nt possible way", "d": "11/2016"}, {"body": "resolved issue modifying compiler way simple modification let compile templates strict mode difference approach every expression references view model variables must prefixed example xx becomes xx think could avoided introducing expression parser logic determine expression variable view model variable could slow compilation easy patch would great option instruct vueloader vueify compile templates strictmode think users need functionality could accept prefix vm variables code better switch another framework", "d": "11/2016"}, {"body": "really nt even get fancy check add prefix key functions tested simple demo perhaps test help find missing fix beyond strict mode nt see reason yet needs created insecure strings run eval easy create functions stringify later", "d": "11/2016"}, {"body": "see reasons explained", "d": "11/2016"}, {"body": "modified compiler strict mode compliant changing lines code saying solution fancy agree pr trying address issue clean way careful could lot edge cases address maybe would change something different could value vm could use loop variable think prefix vm variables case anyway seems trying exactly thing using two different approaches maybe approach could easier want modify compiler additional option", "d": "11/2016"}, {"body": "micheletriaca sorry looking phone looked like lot lot extensive line wrapping see browser see two agree think controlleras syntax angular basically idea intemplate prefix saying honestly would prefer think mix two approaches could keep api compat break existing apps", "d": "11/2016"}, {"body": "using example approach users could compile templates strict mode case would need write expressions referencing also scope jsx example seems solution unlikely accepted reason nt created pr want break existing apps think correct approach address issue one suggested babel plugin postprocess templates use full javascript parser assign correct scope variables expressions", "d": "11/2016"}, {"body": "import libary get error ssr nt want change code", "d": "11/2016"}, {"body": "facesea import get error ssr", "d": "11/2016"}, {"body": "dualwield stop ssr waiting update used inject object nt know", "d": "11/2016"}, {"body": "fyi something vue fix instead libraries prevent accessing directly without checking environment first opening issues libraries want use regarding", "d": "11/2016"}, {"body": "thank much", "d": "11/2016"}, {"body": "seems bug android webview still", "d": "11/2016"}, {"body": "chrisvfritz updates either way moved vuejsorg repo", "d": "11/2016"}, {"body": "done sorry forgot come back close", "d": "11/2016"}, {"body": "ie nt currently support innerhtml method svg elements alternative solutions innersvg polyfill allegedly works internet explorer newer", "d": "11/2016"}, {"body": "customized use cases builtin modifiers support ecmel mentioned recommended approach document details official guide", "d": "11/2016"}, {"body": "idea feature proposal take advantage existing directive already works every element save work writing inputcustomjs every project done already write equivalent inputtextjs custom modifier contains logic needs modified times fact already ships modifiers proves intuitive desirable pattern natural facilitate creation custom modifiers save work creating custom elements implement dommodel binding manually makes sense api perspective would interesting know technical limitations driving decision implementing feature", "d": "11/2016"}, {"body": "thanks linusborg save time", "d": "11/2016"}, {"body": "vmodel directive reset input value blur give number param always change value number see", "d": "11/2016"}, {"body": "buwder simply copied comment going add anything delete comment", "d": "11/2016"}, {"body": "linusborg issue seems fixed", "d": "11/2016"}, {"body": "may case ca nt verify issue tagged p", "d": "11/2016"}, {"body": "sorry guys seen many answers actual answer show one simple example use delimiters components mean vue files", "d": "11/2016"}, {"body": "component script nt recognize delimiters export default delimiters", "d": "11/2016"}, {"body": "hello isaevbehruz issue tracker reserved exclusively bug reports feature requests encourage ask forum stack overflow gitter happy help", "d": "11/2016"}, {"body": "linusborg using like says bug report though probably another issue details isaevbehruz would mind providing jsfiddle reproducing issue would good start", "d": "11/2016"}, {"body": "bug report open separate issue recycle old closed slightly related issue also initially asking use claiming work fiddle works expected", "d": "11/2016"}, {"body": "linusborg alrighty", "d": "11/2016"}, {"body": "sorry linusborg bad asking tribex also tried example yes works mentioned question delimiters nt work vue files iv put delimiters option iv compiled nt work", "d": "11/2016"}, {"body": "oh may right sorry need check remember correctly changing delemiters may available standalone build indom templates reasoning templatws files precompiled ca nt conflict servetside template system custom delimiters existed first place", "d": "11/2016"}, {"body": "actually docs available standalone build using", "d": "11/2016"}, {"body": "thanks linusborg right need custom delimiters files", "d": "11/2016"}, {"body": "experiencing github autorized forum rejecting issues redirecturimismatch parameter url", "d": "11/2016"}, {"body": "vmodel since empty inputs reset zero according description", "d": "11/2016"}, {"body": "thanks missed documentation would agree clegendre could added", "d": "11/2016"}, {"body": "would also helpful add vuemigrationhelper possible nt required", "d": "11/2016"}, {"body": "chrisvfritz could added vuemigrationhelper maybe could try ship", "d": "11/2016"}, {"body": "unfortunately nt something migration helper catch look adding second reference guide", "d": "11/2016"}, {"body": "reasoning behind works fine custom components seems quite bit almost seems like punishment actually like jsx", "d": "11/2016"}, {"body": "honestly perspective jsx firstclass citizen development added later babel transform designed jsx mind specifically directives compiled normal javascript inserted render function template compilation far nt time felt pressure replicate delicate piece code jsx compiler compiler code templates really reusable would recreated pretty much scratch including things like parsing modifiers jsx know etc", "d": "11/2016"}, {"body": "bit easier using though still requires top level element transition know max delay sliderenteractive sliderleaveactive transition trick sliderenter sliderleaveactive sliderbackdrop opacity slidercontent transform translatex calc demo", "d": "11/2016"}, {"body": "still problem tested ios", "d": "11/2016"}, {"body": "question eirikb", "d": "11/2016"}, {"body": "gongph real solution remove dependency vue might gone nt checked need hack right away evaluating code runtime plausible horrible workaround made small library fun", "d": "11/2016"}, {"body": "fyi latest versions generate render functions nt use", "d": "11/2016"}, {"body": "problem solved", "d": "11/2016"}, {"body": "nt problem since repro provided confirm tue nov pm stoneyong notifications githubcom wrote problem solved receiving subscribed thread reply email directly view github mute thread", "d": "11/2016"}, {"body": "\u4f7f\u7528watch\u5c31\u53ef\u4ee5\u89e3\u51b3", "d": "11/2016"}, {"body": "rayrutjes used tsalkakisd solution actually quite elegant simple component pass list users created slot like userid id user currently loop parent component simply specify voila done", "d": "11/2016"}, {"body": "implemented need bespoke solutions nov pm savas vedova notifications githubcom wrote rayrutjes used tsalkakisd solution actually quite elegant simple component pass list users created slot like userid id user currently loop parent component simply specify data voila done receiving commented reply email directly view github mute thread", "d": "11/2016"}, {"body": "oh apparently scoped slots good everyday new feature vue", "d": "11/2016"}, {"body": "vue removes way filters adds scoped slots curious decisions", "d": "11/2016"}, {"body": "implemented need bespoke solutions blocka saying loop non named slots", "d": "11/2016"}, {"body": "come ca nt one non named slot definition sun nov raymond rutjes notifications githubcom wrote implemented need bespoke solutions blocka saying loop non named slots receiving mentioned reply email directly view github mute thread", "d": "11/2016"}, {"body": "work help thx", "d": "11/2016"}, {"body": "little offtopic since filters supported expressions version issue need revisited maybe syntax improvement could distinguish actual filters bitwise operations hand migration guide filters directives including deprecated objectives still done computed properties wondering whether adding feature back original idea insights share", "d": "11/2016"}, {"body": "elif", "d": "11/2016"}, {"body": "vuejs \u6c92\u6709\u63d0\u4f9b \u5047\u8a2d\u6709\u4e86 use elseif vue js elseif vuejs \u5e0c\u671b\u652f\u6301elseif\u8bed\u53e5 \u8bf7\u95ee\u5982\u4f55\u5b9e\u73b0 elseif feature request velseif", "d": "11/2016"}, {"body": "div class swiperslide vfor slide fieldsslides err vuejs vue warn failed compile template", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "\u8fd9\u6837\u6210\u529f\u4e86", "d": "11/2016"}, {"body": "row \u8fd9\u6837 \u4e5f\u662f\u663e\u793a\u4e0d\u51fa\u6765\u7684 ndcontent", "d": "11/2016"}, {"body": "\u5728data\u91cc\u628arow\u521d\u59cb\u5316\u8fdb\u53bb", "d": "11/2016"}, {"body": "ways detect part object changed inside watch real target path like third param useful option", "d": "11/2016"}, {"body": "also use twig tag wrapped around blocks nt want twig interpret", "d": "11/2016"}, {"body": "jordanramstad trying achieve result textarea markdown editor yet solution nt work anymore vue searching ages result noted nt work way go would create custom prop update following snippet seems work get default text tags used view template vue", "d": "11/2016"}, {"body": "transfer dom like", "d": "11/2016"}, {"body": "onsen ui vuejs like react native", "d": "11/2016"}, {"body": "feature works vue latest today even documented see fiddle try changing library top html code ca nt switch vue today backward compatibility primary vmodel support dynamic input types error many dynamic components need feature thanks", "d": "11/2016"}, {"body": "straps code issue helps", "d": "11/2016"}, {"body": "reference vue", "d": "11/2016"}, {"body": "note necessary binding native events components", "d": "11/2016"}, {"body": "supported props", "d": "11/2016"}, {"body": "store target boundingclientrect anything else use common resize event window loop request resize compare current size stored size callback needed", "d": "11/2016"}, {"body": "hello guess understand issue dalanmiller fact stuck similar issue fact nt want watcher trigger callback every time manually decide affect value somewhere instance got data rest api call async way decide affect data component watcher detect change trigger callback notice update changes rest api data change got api set call issue codepen explain vuejs want fire change manually change value textarea code variable call onupdatecode sync change every time gt want coder variable call onupdatecoder add dirty silence mechanism onupdatecoder called change text coder textarea coder want tried better solution vuenexttick fail think could worked vuenexttick dispatch setting priority parameter come code somehow got similar issue integrating acejs vuejs component ace team got issue resolved comment nightwing next comment davidthornton notice logic already answered issue really case think design pattern issue nt know write smart code idea", "d": "11/2016"}, {"body": "addressed however difficult backport similar api unfortunately going land", "d": "11/2016"}, {"body": "use component opinion item separated component", "d": "11/2016"}, {"body": "fyi already shipped new nt know evan wants back port though", "d": "11/2016"}, {"body": "implemented prop although like backport noncritical change requires nontrivial effort given bandwidth reducing scope number critical features low hanging fruits unfortunately implemented", "d": "11/2016"}, {"body": "outlined behavior original request actually conflicts slot usage unlikely implemented consider handle async components pending state separately", "d": "11/2016"}, {"body": "best see corresponding implementation code", "d": "11/2016"}, {"body": "implemented vue computed properties nt updating shared store updated computed properties needed vmodel attribute situation shared store contains root node render pipeline manager render function creates new elements passing previous element pipeline slot essentially nested components referencing store property computed property referenced vmodel attribute updates root node data via store trickles render pipeline exactly expected however computed properties child nodes remain value sure bug vue good use case computed property cache busting update issue also exists root node computed properties made methods avoid issue however child nodes still rely computed property described", "d": "11/2016"}, {"body": "later reverted caching enabled default computed properties behavior describing mostly like shared store nt made reactive description still vague determine real cause think bug opening separate issue proper reproduction", "d": "11/2016"}, {"body": "thinks tolerious", "d": "11/2016"}, {"body": "implemented although like backport noncritical change requires nontrivial effort given bandwidth reducing scope number critical features low hanging fruits unfortunately implemented", "d": "11/2016"}, {"body": "seen problem well safari mobile desktop code looks like timeout occur reason happens occasionally around frustratingly also means ca nt reliably repeat bug see nothing weird console except mixedcontent warnings http https suppose culprit code works fine firefox chrome", "d": "11/2016"}, {"body": "vue reference", "d": "11/2016"}, {"body": "works thx", "d": "11/2016"}, {"body": "item array detailrowid contains dynamic data getting referenceerror detailrowid defined possible handle kind access", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "curious people thread interested type safety vue component ide features autocompletion eg prompt feel ts vue nt prerequisite implementing ide features writing projects using vue component ts everything else far feeling type vuex store great never found needing much type vue component hooking data actionsgetters store template although appreciate itsfrank herringtondarkholme work would nt use vuetypescript keeping templatestylescript visual proximity file important avts looks promising find benefit brings nt outweigh complexity brings", "d": "11/2016"}, {"body": "understand arguments regarding hard time making ts vuejs work fully together pragmatic approach may seem sensible like autocomplete feature working building production code pure ts makes sleep really good night seems like close could get class back could become beatiful maybe would help correct med wrong templates like could show boot project using vuetsloader using vuets files maybe merge tsloader using within vue files vanilla ts use far understand biggest unresolved issue use tsx file via tsc support pass react hand core component ts support close able make ts integration nearly painless hope next project make use ar ts goodies", "d": "11/2016"}, {"body": "druppy gotten spread operator work jsx running issue posted", "d": "11/2016"}, {"body": "might quirky found setting vue sfc file type typescript enough editors give semantic completion though highlighting lost works vscode vim", "d": "11/2016"}, {"body": "herringtondarkholme would mind sharing screenshot vscode", "d": "11/2016"}, {"body": "vim vscode usefule comment mhegazy guess ts service robust enough ignore html tags editors sending service", "d": "11/2016"}, {"body": "well salsa giving best guess novdec vscode plans restore js support html write vue language server based vscode html language server leverage salsa enable intellisense language features jsts vue sfc would nt go details digress topic interested open issue continue discussion", "d": "11/2016"}, {"body": "seanjm nope bit turned fact need use ts babel hope new feature ts bring focus able use different code models vue really good performance low footprint really makes vue solid choice", "d": "11/2016"}, {"body": "druppy debugged posted working configuration gist", "d": "11/2016"}, {"body": "use following approach", "d": "11/2016"}, {"body": "note difference valid html syntax vs fullyvalid html spec makes distinction one conforming class documents conforming documents comply conformance criteria documents one conformance criteria authors must use elements attributes attribute values permitted specification means documents using attribute nonconforming also note conformance checkers must check input document conforms parsed without browsing context meaning scripts run parser scripting flag disabled however may matter conforming useragents still required parse attribute intended", "d": "11/2016"}, {"body": "maybe would good idea document designdecision somewhere inside vuedocumentation attributes xmlattribute compatible containing colon sign must decided sometime past relation specs would nice seems lot confusion whole data thing nt get wrong used understand html differently seems work inside browsers fails syntaxchecker even like checker tried dummy website mine syntax checker sees attributes fails errors like evaluation used webframeworks customer requires website syntaxcheckercompliant vue ca nt used could developers please references designdecision coming yes feels bit odd discuss closed issue", "d": "11/2016"}, {"body": "template syntax error invalid expression vattr src image", "d": "11/2016"}, {"title": "call modelparse every page load first", "body": "overrode modelparse sanitise escape html server displaying browser backbone call modelparse first time page loads looked code nothing else overriding parse method nothing caching data happening code javascript backbonemodelprototypeparse function resp options return escapestringsrecursively resp function escapestringsrecursively typeof undefined null return instanceof array var lt olength escapestringsrecursively else typeof object var ohasownproperty escapestringsrecursively else typeof string escape return see gif first load page parse method catches strings escapes screen nice html navigate another page return method never fires page broken script tags run consoleerrors logged question case someone help", "num": "4105", "d": "11/2016"}, {"title": "seeking model key collection", "body": "tried add objects like collection multiple times got many objects collection created models similar discovered happens bit inaccurate method seeks without checking model instance think check added", "num": "4103", "d": "11/2016"}, {"title": "collection byid lookup used inconsistently", "body": "typical behavior store model determined model implementation andor backbone convenience places fine except issue using access effectively bypassing access higher priority considering documented methodology precedent anyone inadvertently implements create collisions may interesting time determining suddenly missing merged models within collections tested willing concede scenario peculiar change small accurate documentation", "num": "4102", "d": "11/2016"}, {"title": "issue question registratorconsul", "body": "makes registrator skip mesosagent consul entry get following output docker ps consul marathon mesosmaster also nt entry weaveworksscope task running nt app listening port", "num": "4100", "d": "11/2016"}, {"title": "broken links", "body": "main page jasmine jquery templates", "num": "4099", "d": "11/2016"}, {"title": "modelfetch", "body": "new thought would reraise needs way use modelfetch fetch server fact merges client already actually nt really true big problem fetch expect model returned model fetched anyone work around like hear", "num": "4098", "d": "11/2016"}, {"title": "collection docs missing note parse option", "body": "model docs note passed option attributes first converted parse set model appears true collections well documented", "num": "4097", "d": "11/2016"}, {"title": "promise argument collection add remove reset set methods", "body": "would say add ability pass collection methods plain objects arrays models also promise add code like method useful decided change methods sync async like javascript user modelextend getproducts function return productswhere userid thisget id become return get products userid thisget id code sync async bagadd usergetproducts", "num": "4096", "d": "11/2016"}, {"title": "webpack babel typeerror undefined", "body": "appjs import marionette backbonemarionette export default marionetteapplicationextend region app initialize var applayoutview marionettelayoutviewextend template layoutviewtemplate el appmodals regions menu menu content content name yourapp description description author name version repository type git url scripts start webpackdevserver prebuild rm rf public build npm run amp amp webpack p lint eslint app test echo test dependencies backbone backbonemarionette bootstrap fileloader handlebars handlebarsloader jquery underscore urlloader devdependencies babelcore babelloader copywebpackplugin cssloader eslint extracttextwebpackplugin styleloader stylus underscoretemplateloader webpack webpackdevserver webpackmerge webpackconfigjs module loaders test js exclude nodemodules loader babel query presets tried possible settings babel conslole typeerror undefined initialize marionetteobject constructor extendchild appjs function module exports webpackrequire use view works appjs console onstart", "num": "4095", "d": "11/2016"}, {"body": "backbone call modelparse first time page loads nt calls parse time called something else funny going app", "d": "11/2016"}, {"body": "noticed problem", "d": "11/2016"}, {"body": "think pr tested type trying use key", "d": "11/2016"}, {"body": "uncertain proceed referenced master pr nt changed anything yet even check would inappropriate use model advance", "d": "11/2016"}, {"body": "sorry wrong place", "d": "11/2016"}, {"body": "thats pretty useful keep local state moving throughout app least apps thats useful already seen examples using way understand idea move models collections models forwards backwards views routers backboneradio window global directly instantiating using instance something could implement fetch method clears model fetching modelclear options keep mind idattribute default id removed also would like keep link preserve clear set right clear thats normally necessary fetch rest api endpoint single modelresource", "d": "11/2016"}, {"body": "think going add promises backbone holistically like fits starts", "d": "11/2016"}, {"body": "looks like issue also nt layoutview itemview anymore merged", "d": "11/2016"}, {"body": "version using layout view", "d": "11/2016"}, {"body": "sorry watched incorrect documentation", "d": "11/2016"}, {"body": "arvara little offtopic also shave chars code instead keep style moving onwards code", "d": "11/2016"}, {"body": "hello reports also seeing issue investigation could replicate using jsfiddle chromewindows safari mac see issue root problem seems webkit replicates issue location hash url encoded chrome replicate url hash encoded attach screenshots showing behaviour causes route fire twice firstly route function fires due jsfiddle code calling routenavigate calls loadurl expected behaviour happens platforms wo nt mention following handling event hash change event fires causes checkurl method fire note value locationhref return value thisgetfragment encoded value thisfragment encoded check line fails causes line thisnavigate causes route function fire second time", "d": "11/2016"}, {"body": "chrome values different note time windowlocationhref thisgetfragment encoded check line succeeds line skipped second route happen", "d": "11/2016"}, {"body": "actually confusing originally thought encoded version href safari nt url encoded version original url value decodes printable value", "d": "11/2016"}, {"body": "information appears straight bug safari set locationhash containing diacriticals seems get corrupted", "d": "11/2016"}, {"body": "latest webkit nightly corruption nt occur behaviour still going different chrome note url remains encoded unlike chrome decodes getting locationhref nt know one correct", "d": "11/2016"}, {"body": "hey megawac far away landing", "d": "11/2016"}, {"body": "would like know far", "d": "11/2016"}, {"title": "regression component rerender", "body": "emberjs guides mention using template keys might change use worked expected however appear rerendered reproduction reproduce issue type something input field hit add button observe nothing changes visually switch ember easiest way dropdown top dependencies gt emberjs gt repeat steps observe template updated expected twiddle uses component loop template loops object displays keyvalue pairs list also button add contents input field next new key object call component would result new keyvalue pair displayed", "num": "14661", "d": "11/2016"}, {"title": "ember route redirect method issue incorrect arguments bug", "body": "hi according doc method args fact serialized eg previous releases returned correct model serialized one bug new feature", "num": "14660", "d": "11/2016"}, {"title": "nested component notation docs", "body": "upgraded ember notation nested components work anymore following notation work reflected docs nt see popping anywhere changelogs possibly mistake made end undocumented change", "num": "14659", "d": "11/2016"}, {"title": "ember undefined route dynamic segment longer working", "body": "looks like unsupported feature bug thought would log upgrading ran following exception approuterjs thisroute timecards path timecards login function thisroute index path thisroute timecardday path day date thisroute payperiod path payperiod date approutestimecardsjs model hook model params let login paramslogin thisget currentuserlogin return thisstorepeekall user findby login login quite handy use optional dynamic segment parent route load default user model rather load individual child routes", "num": "14657", "d": "11/2016"}, {"title": "prevent manual browser unloadrefresh working file filelist", "body": "hi thanks awesome framework ember really appreciate hard work building ember app allows people upload media files eg audio video local computer server manage content metadata order need work html objects since way get access user local files returns objects app allows user multiselect files puts objects queue starts uploading problem user manually reloads web page refreshes using browser controls ember app reloaded lose objects prevent solutions use store local storage files large mb gb encoding string storing local storage wo nt feasible store path name security measure browser sets path way see real path programatically reload file ember app reload know app robust reloads refreshes beyond control html standard prevents cachingstoringprogramatically fetching objects representing local files opaque blob solutions robust way prevent user unloadingreloadingrefreshing tab showing ember app suggestions welcome thanks ps realize nt much bug ember instead drawback js spa compared native apps trying start flame wars need help", "num": "14656", "d": "11/2016"}, {"title": "ember jquery issue", "body": "tried tracking somewhere code think leads issue using jquery ember jquery success ember jquery success ember jquery success ember jquery fail running addon dummy locally console errors addon might guess wraps jquery datepicker plugin inspected sending right options hash plugin init options taking effect datepicker normally would point finger datepicker works fine jquery rollback ember also works fine ember use jquery combo ember jquery seems culprit tried updating jquery plugin recent version change one success cases failure case branch see failing", "num": "14655", "d": "11/2016"}, {"title": "ember didupdateattrs firing incorrectly", "body": "twiddle run twiddle click options notice nothing logged console switch notice called unnecessarily manifests failing test emberselectbox repo", "num": "14654", "d": "11/2016"}, {"title": "log asd breaks ember", "body": "route simple template breaks unfortunately reproduce easily simple application ember twiddle logic nested routes etc however unsure exactly causes problem hope reproduce somehow help way", "num": "14653", "d": "11/2016"}, {"title": "use handlebars comment attribute ember", "body": "following working code ember ember get following javascript error expected", "num": "14652", "d": "11/2016"}, {"title": "bug regression input helper support html types", "body": "ran strange bug updating ember reproduce use somewhere application expected behaviour rendered element type real behaviour helper rendered element type work previous ember versions test case developed simple test case bare embercli application found specific test case found copied import moduleforcomponent test emberqunit import hbs htmlbarsinlineprecompile moduleforcomponent input integration component input integration true base case test text type default function assert thisrender hbs assertequal input attr type text one fails test date type function assert thisrender hbs assertequal input attr type date however one succesfull test number type function assert thisrender hbs assertequal input attr type number think intended test text type type random function assert thisrender hbs assertequal input attr type text test results remarks also seem work datetime datetimelocal however seen testcase random string normalized type think somewhere date types missing valid types another strange observation seems work running tests chrome browser", "num": "14651", "d": "11/2016"}, {"title": "unable set error route", "body": "emberjs setting error route default routerecognizer allow duplicate routes anymore give blank page error console default error routes set test trying handle route using functionality worked fine", "num": "14650", "d": "11/2016"}, {"title": "cleanup remove enabled features", "body": "example emberruntimecomputeduniqby emberruntimeenumerableincludes emberstringishtmlsafe embertestingcheckwaiters", "num": "14647", "d": "11/2016"}, {"title": "using triple braces open close html tags render properly", "body": "controller javascript file following want able use template like result want button instead rendering want run loop inside opentag problem tag always div could span p section ul container tag want dynamic otherwise insert block container twiddle showing issue", "num": "14645", "d": "11/2016"}, {"title": "runtime exception yielding values within partial", "body": "related fixed chancancode recently new error could observed seems much related changes worked started get exception build coming within glimmer seems took quite time isolate seems happens yielding values partial twiddle reproduces", "num": "14642", "d": "11/2016"}, {"title": "ember computed properties nt seem work arrays", "body": "hi ember awesome thanks hard work ember newbie forgive missed something obvious spent time googling issue still ca nt find solution seems ember computed properties nt working documentedintended array properties like length trying build queue js appcustomobjectsprocessingqueueitemjs import ember ember export default emberobjectextend payload null extracontext null processingstate pending pending succeeded failed processingoutcome null null pending result succeeded error failed tostring return appcustomobjectsprocessingqueuejs import ember ember import processingqueueitem processingqueueitem export default emberobjectextend emberenumerable queuename null class incomplete want start displaying queue contents template help debugging ca nt get work controller template js appcontrollersdashboardjs import ember ember import processingqueue customobjectsprocessingqueue export default embercontrollerextend init thissuper arguments thisset processingqueue processingqueuecreate queuename dashboardqueue thisget processingqueue thisget processingqueuelength thisget queuelength queuelength embercomputed processingqueuelength function return thisget processingqueuelength apptemplatesdashboardhbs dashboard queue length queuelength processingqueue queueitem queueitempayload outlet problem queue length always undefined add items queue true queue empty array length using dashboard controller emberinspector see strange soon add items queue queue length becomes defined keeps syncs template add queue items first automagically updates template show queue length undefined though enqueued items tried adding gets place according unconsumed computed properties trigger observers nt seem help ideas entirely possible misunderstand something computed properties nt understand tried ca nt get make difference either something right help would hugely appreciated willing add wiki write blog post maybe release queue open source thank thanks thanks making ember awesome", "num": "14641", "d": "11/2016"}, {"title": "input checkbox component update checked property", "body": "code sample note console output keep printing true instead alternating true false initial value property respected code changed render checkbox initially unchecked appears property value code sample property get updated user interacts checkbox", "num": "14640", "d": "11/2016"}, {"title": "components stronger adherence requirements valid names", "body": "example following disallowed according spec names used component names ember annotationxml colorprofile fontface fontfacesrc fontfaceuri fontfaceformat fontfacename missingglyph rules around naming requirements goal components eventually move would assume full spec would respected", "num": "14635", "d": "11/2016"}, {"title": "add helpful assertion using component helper input textarea", "body": "recreate assuming nonhyphenated ember components", "num": "14632", "d": "11/2016"}, {"title": "passing model queryparams controllerreplaceroute", "body": "ember docs controllerreplaceroute states beside identical transitiontoroute respects noticed controllertransitiontoroute allows passing options object queryparams object specified current use case would like use replaceroute instead pass options object replaceroute seems take route models argument reason omitting options argument replaceroute", "num": "14631", "d": "11/2016"}, {"title": "element property exist tests", "body": "apologies already discussed nt property available contexts integration tests jquery version words happen done integration test", "num": "14630", "d": "11/2016"}, {"title": "deprecate embertestqunitadapter embertestadapter defaulting", "body": "would like propose deprecation class property defaulting instead move implementation project default using empty base implementation since would breaking change copy existing stuff deprecate remove ember released point deprecation warning explicitly set likely replaced default moving", "num": "14628", "d": "11/2016"}, {"title": "ca nt acceptance test error routes", "body": "trying test error route displayed correctly error occurs application like javascript import skip qunit import moduleforacceptance fooapptestshelpersmoduleforacceptance import pretender pretender let server moduleforacceptance acceptance error beforeeach server new pretender function thisget apifoo gt return null aftereach servershutdown skip error function assert assertexpect visit andthen gt ca nt get problem error occurred suite fails regardless sorry submitted wrong repo clear belongs", "num": "14627", "d": "11/2016"}, {"title": "possible memory leak switching routes", "body": "using ember every time switching routes strange detached dom trees inside heap snapshop got small repository two branches master even switch small routes got detached elements since application working much complex simple demo even detached elements causes huge trouble iosdevices since memory limited", "num": "14626", "d": "11/2016"}, {"title": "standardize template error structure", "body": "like begin standardizing template error structure returned various ember components better utilize plethora information known time error thrown one major end results ability generate userfriendly error page developers error structure still discussion documented along work required various parts ember ecosystem notable locations emberjs cc rwjblue stefanpenner", "num": "14625", "d": "11/2016"}, {"title": "routereplacewith support options argument like transitionto", "body": "currently impossible use replacewith query parameters since nt argument supported", "num": "14622", "d": "11/2016"}, {"title": "doc contributingmd building emberjs section missing yarn install step", "body": "building emberjs section currently reads follows follow commands build emberjs bower install yarn run build nt work since also need run yarn install probably read yarn install bower install yarn run build", "num": "14620", "d": "11/2016"}, {"title": "error message error nonrecoverable condition triggered watchman needs help", "body": "hi new emberjs found bug possible reason tried run got following load terminal message repeated around times several paths think following thing wrong watchman tries watch every folder requires watchman trying wath folders inside lot dependencies following added ingore packagefolders error raised hope helped way anything wrong let know greetz bob", "num": "14618", "d": "11/2016"}, {"title": "currentwhen working dynamic segment", "body": "example", "num": "14615", "d": "11/2016"}, {"title": "handles differently", "body": "twiddle twiddle component glimmer passed property set reset value empty case remove attribute element nt effect actual value element technically setting probably advisable seems call handle handled well", "num": "14614", "d": "11/2016"}, {"title": "empty maps nt trigger else clause helper", "body": "seen helper let loop empty clause entered believe due maps using rather happy try work pull request would appreciate steer whether supported way", "num": "14613", "d": "11/2016"}, {"title": "bug beta mut action helper fully propagate changes", "body": "prior glimmer could use helper things like flip booleans forms appears broken prop dom update repro", "num": "14612", "d": "11/2016"}, {"title": "hmr hot reload", "body": "good day ember team building new tool simplify creating ember app without files structure everything write embercli object created json structure fill json functions variables anything json application file javascript convert json functions js functions create amd modules everything working fine want replace controller already cached ca nt remove app load new one used controller still memory ca nt var dataapp embera path appapplicationcontroller import exports ember arrg exports ember functions exports default ember default controllerextend n active function consolelog application controller n editing false n activecomponent nulln n path appindexcontroller import exports ember arrg exports ember functions exports default ember default controllerextend n active function consolelog index controller n editing false n activecomponent nulln n working fine dataappforeach function define ipath iimport new function iarrg ifunctions function problem function hotreload consolelog hotreload var path appapplicationcontroller import exports ember arrg exports ember functions exports default ember default controllerextend n active function consolelog application controller new n editing false n activecomponent nulln n var name controller application appunregister name consolelog testapphasregistration name delete requirejsentries ipath define ipath iimport new function iarrg ifunctions appregister name hotreload", "num": "14608", "d": "11/2016"}, {"title": "replacewith transitionto nt respect query params beforemodel", "body": "described attempting use set default query param value want visible url ember twiddle expected behavior initial load page output query timeframe desired value timeframe query param actual result redirect take place query param set value page instead outputs query timeframe set query param manually output reflects actual value param try changing path box twiddle cc rwjblue", "num": "14606", "d": "11/2016"}, {"title": "ember blog post items", "body": "things call frozen development pr particular means frozen dev deprecated issue pr deprecation guide pr completely deprecated previously model argument deprecated usage without argument also deprecated additionally route deprecated issue pr deprecation guide pr", "num": "14601", "d": "11/2016"}, {"title": "ember blog post items", "body": "things call development arguments frozen issue pr known issue return params passed helper followup fix patch omg backtracking rerender called several qp bugfixes", "num": "14600", "d": "11/2016"}, {"title": "properly serializing nonprimitive array query parameters", "body": "query parameters seems getting lot attention lately wanted chime feature request currently nonprimitive query parameter values passed results rather ugly urls example controller pushes onto original array triggering qp change js export default embercontrollerextend queryparams array array b c init thissuper arguments url would expect however url get twiddle", "num": "14598", "d": "11/2016"}, {"title": "optimization emberrouteactionsqueryparamsdidchange", "body": "hey sorry seeing wrong looking line seems finding one queryparam needs trigger refresh loop break parameters changed need trigger refreshes time right one refresh enough", "num": "14597", "d": "11/2016"}, {"title": "clear", "body": "prior versions ember setting either would clear property given following template setting remove previously set value demo", "num": "14595", "d": "11/2016"}, {"title": "emberset amp embersetproperties fail set properties enumerable", "body": "currently using ember wanted upgrade behaviour onwards seems bit buggy reproduce bad behaviour following javascript const test emberobjectextend myprop null didchangemyprop emberon init emberobserver myprop function consolelog updated const testinstance testcreate embersetproperties testinstance id myprop id would expect get ember ember onwards prints consolelog objectkeys testinstance alternatively property emberset testinstance myprop id console print empty array however nt initialize property call objectkeys set usual seems somewhere deep guts amp amp declaring property enumerable ca nt reproduce bug seems work try steps chrome devtools interesstingly enough prints ember version call console prints", "num": "14594", "d": "11/2016"}, {"title": "controller specialized component documentation issue", "body": "controller object component view controller idea dom elements attached wo nt know example seems also unable process events passed actions big component nt described wrong way please explain fairly new ember", "num": "14589", "d": "11/2016"}, {"title": "issue loading substates canary", "body": "seems change behavior canary loading substates declaring route name twice one nested different route namespace one top level causes error loading substate loads fine canary uncaught error may add duplicate route named may related", "num": "14585", "d": "11/2016"}, {"title": "handle unrecognizedurlerror application level", "body": "trying fresh embercli application version creating sample routes using navigating unknown route yields uncaught attempting catch application route eventaction nt seem work known intended behavior ember way dealing unknown routes thanks advance", "num": "14584", "d": "11/2016"}, {"title": "use template print contexts results", "body": "given following template get following error sure fundamentally public api common debugging technique fix assume string used since represents template context handlebars ast parlance", "num": "14581", "d": "11/2016"}, {"title": "component block nt getting values component scoping issue", "body": "see perhaps assuming much scoping rules around component blocks nt block template component able access values component actually prefer outer scope similarly defined property", "num": "14580", "d": "11/2016"}, {"title": "ember computed mathabs", "body": "tried times create whenever tried find way save emptied code long story short binding edit formatting computed property fires correctly amp b updated return value change b changed may overlooking something obvious wanted create ticket case bug also happy create ember js bin somebody tell save", "num": "14578", "d": "11/2016"}, {"title": "rubygems embersource provides", "body": "think version mismatch unexpected someone publish correct version embersource", "num": "14576", "d": "11/2016"}, {"title": "beta typeerror invalid value used weak map key rootpropertyreferencecompute canary", "body": "hello continuation fixed one error another latest canary previous issue form error happens chrome firefox safari levels stacktrace see references makes think connected rjwblue noted sorry keep bringing issues know help let know way contribute", "num": "14573", "d": "11/2016"}, {"title": "bug emberget empty string path longer returns target object", "body": "previously would return behavior removed caused breakage embercpvalidations relied opinion likely bug people relied could instead marked deprecation", "num": "14572", "d": "11/2016"}, {"title": "better compatibility asyncawait function test", "body": "hi like next asyncawait feature proposed main goal cleaner syntax tried action like actions async clone model const clone await modelclone works test message turned testing mode disabled runloop autorun need wrap code asynchronous sideeffects run described error question know use asyncawait become useless saw set false problems later solution plan thanks", "num": "14569", "d": "11/2016"}, {"body": "data updated also longer needed adding new keys demo without rerendering set", "d": "11/2016"}, {"body": "hmm actual app code quite bit complex also involves removing keys trying approach results error also breaks ability inspect component ember inspector try reproduce embertwiddle reverting result everything working", "d": "11/2016"}, {"body": "saladfork get error console closed incognito suspect inspector might observing private property managing child views", "d": "11/2016"}, {"body": "rwjblue closing ember inspector even console open results everything working expected might move issue longer need call approach recommended one update guides reflect", "d": "11/2016"}, {"body": "might move issue agreed longer need call rerender set approach recommended one update guides reflect yes", "d": "11/2016"}, {"body": "exelord tried recreate issue twiddle nt managed yet perhaps could try modify twiddle demonstrate issue", "d": "11/2016"}, {"body": "correct results compared serialized", "d": "11/2016"}, {"body": "referring embertwiddle url appears url encoded correctly perhaps could modify twiddle demonstrate seeing", "d": "11/2016"}, {"body": "noticed route twiddle url seeing routes linked twiddle may bug ember twiddle saving may fork twiddle save case", "d": "11/2016"}, {"body": "docs linked example dot notation nested component fact nt example invocation nested component regardless notation mixing example use component helper", "d": "11/2016"}, {"body": "sohara ah bad fairly confusing regardless dot notation example invocations nested components reading bit apparently dot notation never properly supported slash used times miss parts documentation specified use dash dealing nested components", "d": "11/2016"}, {"body": "pieterjanvdb actually sure much guides go use nested components could search guides source possibly file issue find documented believe examples nested components wild eg blog posts books etc opposed official documentation said using ember since beginning ca nt remember seeing dot notation invocation nested components see dot notation invocation contextual components still supported", "d": "11/2016"}, {"body": "sort undefined behaviour used work never intended api indeed reserved contextual components mentioned sohara similar issue recently could nt find quick search nt really document nested components gets messy fast personally waiting module unification rfc work get ember", "d": "11/2016"}, {"body": "sohara ah fault came project currently working thought subdirectories components default thing", "d": "11/2016"}, {"body": "fairly sure still passing undefined implementing custom serialize hook error message added pretty big win folks general prefer keep around possible", "d": "11/2016"}, {"body": "rwjblue passing undefined linkto helper throws warning", "d": "11/2016"}, {"body": "also issues ember error told undefined quick fix change router think real fix deserves qualified bug otherwise information changing router behavior", "d": "11/2016"}, {"body": "think better fit stackoverflow since question related bugissue ember may suggest close issue reopen question post link soquestion try answer slack irc would also work", "d": "11/2016"}, {"body": "sandstrom said try leave section bug reports please ask question help channel community slack given broader nature question might likely get great response stackoverflow thank", "d": "11/2016"}, {"body": "good place start would jquery changes page list breaking changes also bit unclear way nt working ran branch although failure case looked like image opens fine click input ie thing see small difference default state input perhaps explain detail image emberbugreport branch", "d": "11/2016"}, {"body": "ie thing see small difference default state input perhaps explain detail correct difference options nt taking good place start would jquery changes nt know true addon works perfectly ember jquery nt know jquery changelog would give answers seems ember using jquery bit differently leading believe intimate knowledge ember inner workings start please correct wrong", "d": "11/2016"}, {"body": "error intended report providing helper already provided ember see twiddle reproduction assertion prevents appsaddons overriding builtin helpers guess", "d": "11/2016"}, {"body": "well nt helper however find results makes problem obvious defines helper reason thanks help marking resolved", "d": "11/2016"}, {"body": "hmm introduced error message case following would rendered seems pretty odd think error actually good welcome input", "d": "11/2016"}, {"body": "mmun mixonic thoughts", "d": "11/2016"}, {"body": "think would useful way comment attributes could make become become generally dislike adding support special cases think ones intuitive might worth", "d": "11/2016"}, {"body": "problem seems related phantomjs since reproduce chrome firefox implement date", "d": "11/2016"}, {"body": "yes worked ember using phantomjs version entirely sure caused ember phantomjs", "d": "11/2016"}, {"body": "think discovered cause function checks type input field set given type done creating dummy input element type set actual type checked given type copied function test case link added input types test case fails also date type conclusion phantomjs support date type however changed type checking new discovered maybe still idea change would expect type input element say independent support browser", "d": "11/2016"}, {"body": "type checking done prior versions also see sure would change type checking code seems identical ember version comparing", "d": "11/2016"}, {"body": "problem jquery takes value collection returns type browser actually rendering take look bin", "d": "11/2016"}, {"body": "hmm function seems identical jquery explantion makes sense however see jquery used apart unit tests created branch repo uses ember found test results show input type set whatever set phantomjs browser still nt support date type", "d": "11/2016"}, {"body": "reproduce twiddle please", "d": "11/2016"}, {"body": "locks", "d": "11/2016"}, {"body": "seeing well nt recall seeing recent beta yesterday", "d": "11/2016"}, {"body": "seems legit virtue change made need lock default creation user already created one know fix get", "d": "11/2016"}, {"body": "working pr", "d": "11/2016"}, {"body": "believe something support plan directly support pre htmlbars would worked", "d": "11/2016"}, {"body": "thanks quick reply way make work could write helper would return whole block loop array helper prefer avoid solution", "d": "11/2016"}, {"body": "defining component passing tagname", "d": "11/2016"}, {"body": "unfortunately twiddle posted working showing content twiddle posted without component", "d": "11/2016"}, {"body": "btw code depends heavily component bit complicated moment using partials replace one partial want render tagname component pass lot parameters", "d": "11/2016"}, {"body": "try", "d": "11/2016"}, {"body": "neat nt aware component could called way solved problem many many thanks", "d": "11/2016"}, {"body": "nice one perhaps close issue", "d": "11/2016"}, {"body": "added failing test", "d": "11/2016"}, {"body": "oops thank reporting looking", "d": "11/2016"}, {"body": "simonihmig fixed", "d": "11/2016"}, {"body": "confirmed finally fixes remaining failing tests emberbootstrap green thanks lot", "d": "11/2016"}, {"body": "seems ember computed properties nt working documentedintended array properties like length something seems strange mind reproducing way easy us see whatsup debug issue", "d": "11/2016"}, {"body": "thanks responding quickly happy setting twiddle right", "d": "11/2016"}, {"body": "ok shared twiddle see queue starts empty length computed property undefined however add items length property goes expected clear queue length goes back tried sorts tricks like put initial item queue remove within init try get computed property run loop etc nothing seems work length always starts undefined also idea nt work would expect work right thanks anything else help please let know happy", "d": "11/2016"}, {"body": "joelpresence iteration counting fine", "d": "11/2016"}, {"body": "problem kinda strange workaround easy end world although improving something result extremely wat simply remove custom going explain whats going nt forget discovered explore fixin invokes overridden following development assertion ember invoked reads reads property process seting since read right accurately right set value ends cached value object considered fully initialized short circuit nt trackbroadcast changes results cache evicted really silly think right solution think several", "d": "11/2016"}, {"body": "notes read schedule required share whenand use often forget calls without object wont initialize properly move classes get syntax error", "d": "11/2016"}, {"body": "smaller reproduction likely write test tomorrow", "d": "11/2016"}, {"body": "less convoluted example demonstrates issue although broadcasting changes init likely continue happen believe may reasonable explore local cache evicted maybe fix making sure nt unexpectedly invoke user code may sideaffects via development assertion", "d": "11/2016"}, {"body": "hi stefanpenner thanks much detailed replies say init often forget thissuper arguments calls without object wont initialize properly move classes get syntax error mean thought according initializing instances necessary extending framework class like invoking super init application controller since latter framework class mind need invoke init even simple subclass emberobject please confirm happy need right removing custom fixes thank much way make custom tostring shows length would cause problem reason added custom tostring custom objects extend issues logging console would print something would also print unknown mixin roll tostring either way remove tostring keep coding thanks careful advice review issue grateful help ember best wishes", "d": "11/2016"}, {"body": "ok mean happens remove maybe process item logs following console maybe process item lt unknown mixin gt tostringprocessingqueue lt unknown mixin tostringemberinspect eprocessingqueue unknown mixin log console something wrong emberinspect maybe", "d": "11/2016"}, {"body": "setting overwriting logic changes property complete list properties pass helper need change event using modern ember gt consider using plain html inputs twiddle thank", "d": "11/2016"}, {"body": "component keyword wrote thank", "d": "11/2016"}, {"body": "future reference solutions sure components private event might helpful people get error try use instructing consider form fwiw obvious developer helpers furthermore implementations buried pretty deep within bowels ember took good long find", "d": "11/2016"}, {"body": "agreed updated title reopening would love someone tackle fairly straightforward think happy help someone implementation", "d": "11/2016"}, {"body": "rwjblue want confirm suggested assertion use private component names", "d": "11/2016"}, {"body": "imho would suggest people use private components case would great know improve documentation input helper make clear helper current api section specifies might place overlooked thank", "d": "11/2016"}, {"body": "would suggest people use private components confirm lean towards well however think experience confusing recommendation use private components would able promote components public would assertion raise give help people improved documentation great think assertion would fastest feedback loop", "d": "11/2016"}, {"body": "well definitely inform folks ca nt use component helper would better today already since today throws bizarre unhelpful errors question suggest people instead think best thing suggest folks make components extend since least already public api realize nt feel super good definitely favor figuring better solution", "d": "11/2016"}, {"body": "thank reporting sivamahadevan since duplicate track issue", "d": "11/2016"}, {"body": "close issue track repo keep open", "d": "11/2016"}, {"body": "serabe yes think would right repo track moved questionrequest", "d": "11/2016"}, {"body": "thank closing track linked issue", "d": "11/2016"}, {"body": "awesome thanks", "d": "11/2016"}, {"body": "slack rwjblue happy change default based presence rwjblue seems like better move anyways tbieniek yeah would probably work", "d": "11/2016"}, {"body": "locks else need verify bug", "d": "11/2016"}, {"body": "even switch small routes got detached elements share screenshots see heap profiler helps makes sure available information shared anyone working confirmdiagnose", "d": "11/2016"}, {"body": "course also added one snapshots repository mentiond switching two routes serval htmldivelement htmlheadingelement visible get cleared garbage collection small scale nt cost much memory content complex dom gets changed footage grows give overview one route huge table dynamically loaded entries use component nested components medium sized grid also gets dynamically loaded try get demo clear reproduce problem better", "d": "11/2016"}, {"body": "vmalloc see also", "d": "11/2016"}, {"body": "nathanhammond sure conclusion end result trying achieve transition route specific query params without pushing another history state item ended messing history api since saw builtin way ember", "d": "11/2016"}, {"body": "merged thank", "d": "11/2016"}, {"body": "thanks locks first pr hopefully start contributing useful code soon well", "d": "11/2016"}, {"body": "bobmulder emberjs bug perhaps reach help channel chat regarding solutions issue experiencing ember cli", "d": "11/2016"}, {"body": "discussing bit slack close", "d": "11/2016"}, {"body": "nt see problem please describe expectation actually happening", "d": "11/2016"}, {"body": "sure hyperlink therefore visit expecting current attribute contains hyperlink active removing dynamic segment linkto makes works expected per docs", "d": "11/2016"}, {"body": "ah recommend p", "d": "11/2016"}, {"body": "couple questions spring mind recommend documented work removing dynamic segment", "d": "11/2016"}, {"body": "recommend documented ideally done via route nestingarchitecture work removing dynamic segment nt know mean", "d": "11/2016"}, {"body": "ideally done via route nestingarchitecture something illadvised link far tell nothing complicated incorrect route architecture work removing dynamic segment nt know mean mean remove number work expected", "d": "11/2016"}, {"body": "oh passing two arguments route one dynamic segment", "d": "11/2016"}, {"body": "nope arguments correct foo fooid foo title text foo route dynamic arg fwiw even though closed still think bug", "d": "11/2016"}, {"body": "thank reporting ultimately issue know seem different working fix tildeioglimmer repo update things resolved", "d": "11/2016"}, {"body": "lllama nt believe maps intended enumerable helper see vs uses enumerable", "d": "11/2016"}, {"body": "thanks pixelhandler would helper appropriate also nt currently work", "d": "11/2016"}, {"body": "hello hamzahio thank writing originally ember apps written similar way using global variables long time ago though still supported discouraged since would losing ecosystem ember cli currently hot reloading supported would require opening issue following rfc process closing since issue thank", "d": "11/2016"}, {"body": "thank serabe want remove controller route update new ones", "d": "11/2016"}, {"body": "nt seem related recent transition work really transitioning query params really need default param serialized url suggest using using requires instead work currently however think real issue fighting design query params explicitly default value nt show url use case explicitly support ember currently whilst workarounds inclined say nt bug query params work", "d": "11/2016"}, {"body": "alexspeller thanks workaround suggestions using inside controller set param also works js import ember ember export default embercontrollerextend queryparams timeframe timeframe null init thissuper arguments however creates useless history item reason want default query param visible might want change default still old urls work way scenario history item query params results redirect breaks back button unless hammer guides api docs suggest transition work work differently place use seems like confusing inconsistency", "d": "11/2016"}, {"body": "hmm yeah thinking transition work totally legit usecases unrelated param defaults would nt advise pretty much anything init methods anywhere ember exception basic object setup guarantees init method would called may point expect due dependency injection laziness", "d": "11/2016"}, {"body": "bgentry seems like bug seems work argument work fine using argument route name docs indicate following work working twiddle", "d": "11/2016"}, {"body": "took look already test javascript test transitionto supports query params thissetsingleqpcontroller index foo lol first last assert appear testing behaviour already missing new contributor apologies obvious", "d": "11/2016"}, {"body": "larowlan seems bug happens specifically done route controller loaded nt think test exercising specific scenario", "d": "11/2016"}, {"body": "thanks bgentry would appreciate tips simulate scenario test", "d": "11/2016"}, {"body": "larowlan would expect issue routerjs library emberjs start looking tackle one", "d": "11/2016"}, {"body": "thanks think worked test", "d": "11/2016"}, {"body": "test gives error seen console ie someone give make sure right path", "d": "11/2016"}, {"body": "ok got point nt error test fails genuinely handlers router early supportedpossible beforemodel hook", "d": "11/2016"}, {"body": "supportedpossible beforemodel hook routing guides state redirection transitioning indeed supported something queryonly case think", "d": "11/2016"}, {"body": "closing favor", "d": "11/2016"}, {"body": "closing favor", "d": "11/2016"}, {"body": "cc nathanhammond", "d": "11/2016"}, {"body": "believe duplicate review confirm", "d": "11/2016"}, {"body": "consider duplicate buschtoens working", "d": "11/2016"}, {"body": "awesome keep eye repo thaks lot smiley", "d": "11/2016"}, {"body": "urbany seems reasonable want early exit right", "d": "11/2016"}, {"body": "sounds like great pr", "d": "11/2016"}, {"body": "rwjblue pr", "d": "11/2016"}, {"body": "likely blocks stable release", "d": "11/2016"}, {"body": "stefanpenner absolutely fixed glimmerengine working pr", "d": "11/2016"}, {"body": "interestingly enough prints ember version call emberversion console prints embertwiddlecom ember app runs ember atm app twiddle creating running iframe asking host application reports asking app running inside iframe report whatever version specified changing console use right context fix", "d": "11/2016"}, {"body": "suspect happening set determines values actually set property work done demo js const foo emberobjectextend null let foo foocreate log keys objectkeys foo fooset null log keys objectkeys foo fooset value log keys objectkeys foo", "d": "11/2016"}, {"body": "believe duplicate review confirm", "d": "11/2016"}, {"body": "thanks lot response rwjblue first also thought may duplicate issue mentionend think slightly different value set enumerable soon declared property see edited demo declared call always return empty array return value set correctly declared set via guess", "d": "11/2016"}, {"body": "herom cloned jsbin set version see output object property available via looks like bug", "d": "11/2016"}, {"body": "thanks lot pixelhandler totally forgot jsbin working solution", "d": "11/2016"}, {"body": "short sumup different code samples order understandreproduce bug better readability working demo without emberobserver ember canary rwjblue working fully reproduce issue lacking failing demo emberobserver ember canary herom working fully reproduces issue working demo emberobserver ember pixelhandler working fully reproduces issue", "d": "11/2016"}, {"body": "moved guides repository", "d": "11/2016"}, {"body": "error message added cc nathanhammond", "d": "11/2016"}, {"body": "easier discussion question js routermap function thisroute posts resetnamespace true function thisroute thisroute users resetnamespace true function thisroute posts resetnamespace true function", "d": "11/2016"}, {"body": "created behavior route map would take answer whichever one defined second though guaranteed implementation detail route map incorrect becomes way get except direct navigation via url something consider obviously wrong want alert users mistake earlier rather later thus addition error", "d": "11/2016"}, {"body": "nathanhammond maybe keep track ie object list seen routes ember side also provide better assertionerror message", "d": "11/2016"}, {"body": "could move gets invoked", "d": "11/2016"}, {"body": "trying postsshow nested users goes userspostsshow postsall goes postsall top level want keep templates posts folder linking postsshow want canary since get resetnamespace error need remove resetnamespace inner posts route nested users longer access showhbs posts folder still route nested users need move postsusersshowhbs need replace instead get similar behavior equivalent changes needed get working canary guess trick basing routes second wins behavior wondering similar way trying achieve mainly keep posts templates posts top level folder nest folders makes easier navigation opinion keep posts link linkto postsshow still url route userspostsshow instead linkto userspostsshow", "d": "11/2016"}, {"body": "agree leveraging hacky behavior previously believe pattern continue supported asking quite seriously curious opinion believe looking address item item nt believe worth trying solve confuses going", "d": "11/2016"}, {"body": "nathanhammond addressing templatename would fix issue could keep templates location would cause route file routesuserspostsshowjs instead routespostsshowjs controller controlleruserspostsshowjs instead controllerpostsshowjs feel little bit downside since like posts folder relevant files instead sprinkling around know could stuff importing exporting get around necessary could live changing linkto fully qualified path name userspostsshow resetnamespace sort nice shorten could go either way previously liked could layer resetnamespaces multiple nested layers act top level linktofile layer uncommon changing apps would interested see others chime next weeks people test canarybeta comes", "d": "11/2016"}, {"body": "monitor pretty strongly opinion combinatorially relying unspecified untested implementation details lessfrequently used features introducing deliberately broken code paths happens application user directly visits presented feature literally works coincidence nt intended one advantages ember brings sit anybody project immediately productive clever abuse ember resolves modules combination handles routing subverts goal except familiar users could also set custom resolver wished", "d": "11/2016"}, {"body": "use route catch note documented", "d": "11/2016"}, {"body": "covered anywhere guides also explanation asteriskcolon syntax mon nov btecu notifications githubcom wrote use route catch thisroute fourohfour path receiving authored thread reply email directly view github mute thread", "d": "11/2016"}, {"body": "nt know guides documented link included nt name see example documentation", "d": "11/2016"}, {"body": "mentioned covered routing section guides questions accomplish good community presence stackoverflow help channel slack group", "d": "11/2016"}, {"body": "oh sorry missed link first comment thanks lot sorry trouble", "d": "11/2016"}, {"body": "problem seems like btecu added link github sent email notification would nt seen visited website", "d": "11/2016"}, {"body": "makes sense indeed read comment email thanks", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "nightire right aware address casebycase basis situations nondeterministic number properties yield", "d": "11/2016"}, {"body": "bcardarella simple answer yield represent whole component recommended component reality component author provide fixed amount properties actions outside world otherwise users know properties actions use users know currently valid value example think", "d": "11/2016"}, {"body": "nightire right issue need pass nondeterministic number properties pass object using helper let control curate public api component thank", "d": "11/2016"}, {"body": "nt believe takes two arguments", "d": "11/2016"}, {"body": "created example using suspect may appropriate given provide appear work maybe example serve starting point reproduction issue", "d": "11/2016"}, {"body": "tried times create whenever tried find way save emptied code strange may bug nt really within control said ember community maintain think works quite nicely", "d": "11/2016"}, {"body": "stefanpenner heh sorry waste time put comma instead apparently need break coding amp cup coffee doh", "d": "11/2016"}, {"body": "apparently need break coding amp cup coffee doh often problem nt caffeinate", "d": "11/2016"}, {"body": "ya likely mucked thank reporting", "d": "11/2016"}, {"body": "released correct assets sorry issue delay", "d": "11/2016"}, {"body": "awesome thanks seems fine", "d": "11/2016"}, {"body": "backspace would mind adding specific steps reproduce bug description", "d": "11/2016"}, {"body": "sure bug happens run travisweb visit", "d": "11/2016"}, {"body": "repro comes two bugs template without controller defined makes ed template since attempts inherit host location generated none found assumes receives object calls unconditionally object passed context triggers calling", "d": "11/2016"}, {"body": "jasonmit see discussion similar issue related change", "d": "11/2016"}, {"body": "thanks close one", "d": "11/2016"}, {"body": "still think make assertion key passed emberget empty string would least made logic issue embercountvalidations easier track", "d": "11/2016"}, {"body": "saw article seems work test code test import destroyapp helpersdestroyapp import describe beforeeach aftereach mocha import expect chai import startapp helpersstartapp import authenticatesession helpersembersimpleauth import page tinytestspagescourses describe acceptance courses gt let application beforeeach function velocitymock true application startapp authenticatesession application data attributes fullaccess true accesstoken aftereach function destroyapp application clone course async function const activity servercreate activity", "d": "11/2016"}, {"body": "hi gcorbel reserve issues bugs ember closing since feature request feature request requires feature go rfc process afaik nothing planned actions currently lucky us rfc testing includes support asyncawait emberjsrfcs change would probably require open rfc might interested ember concurrency well thank", "d": "11/2016"}, {"body": "thanks fast answer already saw emberconcurrency compatible ember hooks", "d": "11/2016"}, {"body": "gcorbel hooks ec incompatible", "d": "11/2016"}, {"body": "dwickern create working code example demonstrate issue perhaps embertwiddle", "d": "11/2016"}, {"body": "jordpo posted repro ember slack jquery ember test filter acceptance ok phantomjs acceptance authlogin visiting authlogin actual gt authlogin expected gt dashboard stack gt andthen isolate trycatch invokecallback publish invoke flush flush end run run log ok phantomjs jshint acceptanceauthlogintestjs pass jshint ok phantomjs jshint helpersmoduleforacceptancejs pass jshint tests pass skip fail jquery bower install jquery amp amp ember test filter acceptance ok phantomjs acceptance authlogin visiting authlogin ok phantomjs jshint acceptanceauthlogintestjs pass jshint ok phantomjs jshint helpersmoduleforacceptancejs pass jshint tests pass skip fail ok", "d": "11/2016"}, {"body": "actually also issue using regular methods since upgrading tests jquery ajax requests cause tests fail either tests failing even though step line debugger conditions visually met getting error weird wrapping ajax request rsvp promise nt incompatibilities know code", "d": "11/2016"}, {"body": "validkeys confused well thought wrapping jquery promises rsvp promises would solve problem nt help nt wait jquery promises rsvp promises resolve fire changed code like would work let isrunning false embertestregisterwaiter gt isrunning", "d": "11/2016"}, {"body": "dwickern current release ember seems indicate jquery supported see however appears jqueryajax may compatible wait test helpers", "d": "11/2016"}, {"body": "dwickern tried make embertwiddle example see ca nt get test feature work acceptance test", "d": "11/2016"}, {"body": "pixelhandler looks like might related twiddle nt updated embercliqunit", "d": "11/2016"}, {"body": "dwickern repo working emberfetchjax uses fetch ajax repo using jquery ajax use wrap jqueryajax promise acceptance tests seem work fine behavior think various options use jquery wrap use addon perhaps migrate fetch polyfill file xhr long nt need cancel request addon example could use progressively migrate use fetch makes sense use ajax still need", "d": "11/2016"}, {"body": "thank feedback jkole moved proper repository", "d": "11/2016"}, {"body": "workmanw find odd using controller routes would possible inject service routes controllers need use route setupcontroller method provide properties various templates need", "d": "11/2016"}, {"body": "pixelhandler yea talked workaround strategy initial report core reason nt done queryparams nt good option service cleaning get set queryparams using controller much natural queryparams involved issue ultimately deemed something wo nt fix switch using service use private apis talk router edit btw clear happy use workaround agree little weird already submitted weird issues like past part comes nearly year old ember app dang years coming soon goal simply report unexpected changes see betacanary builds thanks embertry help get ball going quicker resolutions perfectly understand shedding old crufty apis", "d": "11/2016"}, {"body": "wanted add also seeing main production app moving probably stop sharing controller two routes inject parent controller prop child controller", "d": "11/2016"}, {"body": "quite sure yet running builds get errors due calling calls running builds skip call errors production config quick tour stack embercanarytravisciorg ember codebase makes think related references configenterprise templates nt dug much deeper figure", "d": "11/2016"}, {"body": "hmm well presumably comes faux pas reference config templates like decision predates addition feature flags maybe could used instead see place templates", "d": "11/2016"}, {"body": "yall seems fine brain dump findings debugging session", "d": "11/2016"}, {"body": "backspace fix", "d": "11/2016"}, {"body": "true excellent thank sadly getting another seemingly related different stacktrace open another issue", "d": "11/2016"}, {"body": "nathanhammond wonder go rfc process instead", "d": "11/2016"}, {"body": "thing could simply create new feature flag single line code almost question want", "d": "11/2016"}, {"body": "stefanpenner yes", "d": "11/2016"}, {"body": "sweet", "d": "11/2016"}, {"body": "ah one remaining believe could already global scope", "d": "11/2016"}, {"body": "looks like bunch docs nt moved yet small list likely things though also reviewing seems indeed private ember probably fix change blueprint", "d": "11/2016"}, {"body": "merged", "d": "11/2016"}, {"body": "noticed regression production app well tried moving error still looking right", "d": "11/2016"}, {"body": "adamknights hey adam created pr see", "d": "11/2016"}, {"body": "thanks serenaf hadnt found time yet", "d": "11/2016"}, {"body": "help", "d": "11/2016"}, {"body": "closed", "d": "11/2016"}, {"body": "backspace sorry", "d": "11/2016"}, {"body": "whoops forgot keeping open someone add info docs", "d": "11/2016"}, {"body": "believe krisselden fix inmind", "d": "11/2016"}, {"body": "interchange new create nt know want total interchangeability example many legacy concepts like following code would love consider new start concepts p", "d": "11/2016"}, {"body": "agree zackthehuman last comment", "d": "11/2016"}, {"body": "yup page much zackthehuman pr cleanup think still applied", "d": "11/2016"}, {"body": "yes would work perfectly thank report", "d": "11/2016"}, {"body": "closing according triage policy please provide reproduction follow thank", "d": "11/2016"}, {"body": "helper rerenders dom took look appears issue contains helper looses diffing semantics reason following true although appears fixed beta fixed stable stable unstable", "d": "11/2016"}, {"body": "good news appears fixed current beta released", "d": "11/2016"}, {"body": "unclear fix old versions backporting nt option although may possible separate fix created older versions like lts releases need chat figure", "d": "11/2016"}, {"body": "believe would likely take quite bit effort figure fix htmlbars someone interested absolutely entertain help review pr doubt core team folks much time try figure gut feeling leave open close fixed", "d": "11/2016"}, {"body": "also lts think fixing could break folks unwittingly relying bug way entire cycle ok fix targeting review decided low risk really ok backporting", "d": "11/2016"}, {"body": "alright milestone set close lands", "d": "11/2016"}, {"body": "chancancode running moment users still seem hitting error ca nt reproduce locally unfortunately", "d": "11/2016"}, {"body": "getting error testing ghostadmin tried going well result", "d": "11/2016"}, {"body": "acburdine able reproduce consistently could write instruction reproduce", "d": "11/2016"}, {"body": "yup happens every time render page repro steps get ghost set update ghostadmin visit index page gt post currently drilling cause think got narrowed specific component template", "d": "11/2016"}, {"body": "think figured component mentioned using old code borrowed embercliactivelinkwrapper assuming broke updating use actual embercliactivelinkwrapper addon fixed issue", "d": "11/2016"}, {"body": "hmm using app users still hitting error nt able reproduce possible addon still funky stuff", "d": "11/2016"}, {"body": "krisselden follow issue closed thank", "d": "11/2016"}, {"body": "discussed core team call support reuse view views deprecated moved addon support removed may happened work work support non trivial deprecate private api plans support api ongoing work make first class allows data flow render continue tree even though subtree placed elsewhere believe satisfies use case", "d": "11/2016"}, {"body": "future travelers issue turns affect significant number users consider revisiting decision", "d": "11/2016"}, {"body": "still interested pr", "d": "11/2016"}, {"body": "closing think largest issue fixed continue iterate pain around", "d": "11/2016"}, {"body": "kellyselden going close favor pr reproduction thanks keeping oil burning", "d": "11/2016"}, {"body": "chancancode checked twiddle using partial still seems broken", "d": "11/2016"}, {"body": "checked twiddle using hasblock partial still seems broken using partial also nt work failing test anything help please let know", "d": "11/2016"}, {"body": "simonihmig gavinjoyce sorry delay fixed", "d": "11/2016"}, {"body": "thanks chancancode passing test feel like coverage ember land useful", "d": "11/2016"}, {"body": "thanks chancancode well changes indeed fixed problem first twiddle demonstrated however extracted addon first observed bug running build addon new error appeared time runtime exception within glimmer filed new issue", "d": "11/2016"}, {"body": "closed", "d": "11/2016"}, {"body": "added", "d": "11/2016"}, {"body": "also reported", "d": "11/2016"}, {"body": "closing favor", "d": "11/2016"}, {"body": "sure seems good call happy review pr", "d": "11/2016"}, {"body": "reproduce since notmessenger still issue", "d": "11/2016"}, {"body": "notmessenger upgrading ember work resolve issue", "d": "11/2016"}, {"body": "serabe pixelhandler upgrading resolves issue sorry nt get sooner", "d": "11/2016"}, {"body": "happened upgrading ember replaced working thanks tips cibernox", "d": "11/2016"}, {"body": "fivetanley improving error message sounds good know krisselden stefanpenner workflow tracking issues maybe help give directions", "d": "11/2016"}, {"body": "joukevandermaas runnext great fix error though understand overwhelmed errors would go best try understand back flow data invalidating things already rendered likely set props service could injected onto component increases chances set invalidating something already rendered general pattern set used internal state rendering hooks tied input services set used event input state settled time stuff renders", "d": "11/2016"}, {"body": "joukevandermaas runnext great fix error cause performance issues case informing duplicate work happening really nt want want performant app previously ember would absorb result heft performance penalty knowledge sharing work todo ultimately believe healthy path forward apps need make sure everyone tools knowledge available benefit", "d": "11/2016"}, {"body": "person follows ember goings relatively closely twitter github mailing lists etc issue snuck would suspect might catch others surprise lands part ember particularly deprecation warning associated specifically states behavior supported nt believe seen socialized anywhere behavior work glimmer although may simply missed", "d": "11/2016"}, {"body": "suspect might catch others surprise lands part ember particularly deprecation warning associated specifically states behavior supported nt believe seen socialized anywhere behavior work glimmer although may simply missed yup need improve messaging details", "d": "11/2016"}, {"body": "see made release mentioned release blog post", "d": "11/2016"}, {"body": "chancancode pretty hard time trying fix deprecations app lot deprecations point emberglimmer internals make difficult decipher exactly deprecation triggered screenshot one example debugging curve pretty hard making assertion would prevent us upgrading without someone knows internals ember metalglimmer fairly well agree correct behavior going forward would like help least try make messaging better time provide guidance", "d": "11/2016"}, {"body": "messages also happen rerender queue meaning get scheduled far away property actually changed often removes ability follow stack figure thing changed causing rerender", "d": "11/2016"}, {"body": "bad comments belonged instead", "d": "11/2016"}, {"body": "fivetanley congrats landing job heroku", "d": "11/2016"}, {"body": "jdenly still happening stefanpenner way help thank", "d": "11/2016"}, {"body": "stefanpenner way help well may need get reproduction order see leak work around side honestly bandwidth fairly low especially seems like sort browser bug may want try reach ie team members see lend hand", "d": "11/2016"}, {"body": "flagged", "d": "11/2016"}, {"body": "rwjblue believe allows us close", "d": "11/2016"}, {"body": "sounds good thanks", "d": "11/2016"}, {"body": "done beta shortly", "d": "11/2016"}, {"body": "fixed", "d": "11/2016"}, {"body": "ya prefer static method form public lets pursue rfc though adds new public api closing issue", "d": "11/2016"}, {"body": "perlun anyone else interested came solution using two simple components works ember updates template gist", "d": "11/2016"}, {"body": "repro passing betacanary", "d": "11/2016"}, {"body": "alexspeller think something might still broken attempting set default query param want visible url make call action route works expected sure controller set correctly queryparams work transition elsewhere also tried canary", "d": "11/2016"}, {"body": "bgentry suspect issue seeing query param specific would likely justify separate issue would mind making one", "d": "11/2016"}, {"body": "rwjblue opened", "d": "11/2016"}, {"body": "allowedkeys defaulting tbh nt think valid reason likely added later changing default would breaking change best way add action external link basis updating guides agree amp seem best options going crazy adding actions links nah seems like good thing cases want track given thing reviewed even opened new tab applicable guides api doc updates seems great going close nt think bug unintuitive behaviors need thoughtcare use together", "d": "11/2016"}, {"body": "going close nt really cause problems practice far", "d": "11/2016"}, {"body": "anyone seen reference new api since may", "d": "11/2016"}, {"body": "toobulkeh rfc changes meanwhile recently merged accepted implementation work started", "d": "11/2016"}, {"body": "fyi using cheatyhacky method discovered robbiespeed way successfully use transitionto component context rather route need pass parameter also new api actually come someone teaches better method need used", "d": "11/2016"}, {"body": "cc nathanhammond", "d": "11/2016"}, {"body": "mmun slack expect behaviour different nt consume anything path wrapping set paths behaviour eg authentication user expect able write something like use fooauthbarauth house authentication redirects also expect able define root level indexhbs", "d": "11/2016"}, {"body": "perfect runtime error glimmer much better ember ember", "d": "11/2016"}, {"body": "awesome thanks gavinjoyce", "d": "11/2016"}, {"body": "still happening worked fine failed using method yielded result place order get work set route hash follows painful nt actually want refresh model model perfectly fine change variations code work fine although nt actually replace history item", "d": "11/2016"}, {"body": "think running addon built one components addon property called referenced component template one consuming apps another addon installed defines helper seems like case inconveniently named helper way disambiguate property references template protect problem", "d": "11/2016"}, {"body": "use get local property", "d": "11/2016"}, {"body": "considering afraid usage might go away future bc nt see docs anywhere anymore thanks", "d": "11/2016"}, {"body": "guess global first local second resolution something aware naming properties makes little afraid add libraries like awesome embercomposablehelpers reasonably sized project makes many simple words unavailable presentation components", "d": "11/2016"}, {"body": "tend agree jayphelps happy continue discussion pr someone wants push forward since nt movement interest going go ahead close", "d": "11/2016"}, {"body": "twiddle link twiddle work update btw giving solution whoever comes javascript actions upload function event consolelog upload", "d": "11/2016"}, {"body": "kanongil currently like elaborate directory", "d": "11/2016"}, {"body": "redsandro method nt work", "d": "11/2016"}, {"body": "thank reporting working properly betacanary", "d": "11/2016"}, {"body": "wow ca nt believe missed issue completely terribly sorry novtor pretty good amount cleanup related query params last weeks would able whip embertwiddlecom emberjsjsbincom reproduces see fixed", "d": "11/2016"}, {"body": "working properly betacanary update jsbin", "d": "11/2016"}, {"body": "nt think work though understand confusion look controller specific route jsbins case would determine query param values separate concern templates render going go ahead close think bug still continue conversation like", "d": "11/2016"}, {"body": "future googlers tripped ember make sure remove newlyadded", "d": "11/2016"}, {"body": "fixed ember", "d": "11/2016"}, {"body": "fixed demo", "d": "11/2016"}, {"body": "glennsl still interested think pr small targetted fix would great", "d": "11/2016"}, {"body": "hi raytiley using emberjs experienced bug recently bug triggered bug fixed emberjs", "d": "11/2016"}, {"title": "onhide onshow events", "body": "would convenient jquery onhide onshow events fired element css display changed hide fadeout show fadein even css display none usage javascript hide function element hidden show function element visible hide css display block", "num": "3416", "d": "11/2016"}, {"title": "ca nt put informations woocommerce checkout form cause jquery", "body": "ca nt put informations woocommerce checkout form text number works research find origin bug jqueryjs v code line noglobal windowjquery window jquery comment part work fine", "num": "3415", "d": "11/2016"}, {"title": "shortcut attr id id", "body": "description years keep checking google amp jquery docs jquery created shortcut extracting object attribute jquery lib grows instead writing simply write link test case see many users looking", "num": "3413", "d": "11/2016"}, {"title": "incorrect parsing nested links", "body": "probably feature like need link nested link let split hey nt work like meanwhile works properly", "num": "3411", "d": "11/2016"}, {"title": "feature request allow jqueryparam accept urlsearchparams first argument", "body": "description urlsearchparams whatwg living standard latest ch ff support jqueryparam allow jqueryparam accept urlsearchparams first argument amp link test case patch implementation want express", "num": "3410", "d": "11/2016"}, {"title": "ajax post contenttype applicationjson need process data json string", "body": "jquery ajax data transfered like amp post ajax contenttype equal applicationjson data want transfered like b get ajax still use amp system huge want process one place api", "num": "3408", "d": "11/2016"}, {"title": "one webkitanimationend animationend fires", "body": "element animated twice following code fire twice first time animationend fired second time webkitanimationend fired jsfiddle quick confirmation jquery mobile used approach causing recent webcompatcom report jquery still triggers issue tried chrome firefox likely worth investigating", "num": "3406", "d": "11/2016"}, {"title": "jqxhrgetresponseheader", "body": "description jqxhrgetresponseheader fails combine multiple http headers name instead returns value last http header clashes specification xmlhttprequestgetresponseheader states multiple response headers name values returned single concatenated string value separated previous one pair comma space issue seems occur internet explorer encountered calling ie xmlhttprequestgetrequestheader implementation return correct result tell firefox already combined two headers one calling xmlhttprequest completion callback inadvertently allowing jquery return correct result tested jquery link test case testenvironment easily set multiple headers name unfortunately", "num": "3403", "d": "11/2016"}, {"title": "ajax promises", "body": "see implemented promise ajax promises return one argument prevents using asyncawait since first argument assigned starting use fetch api ajax feels like extra dead wight would love go towards fetchalike api", "num": "3402", "d": "11/2016"}, {"title": "try test", "body": "description link test case", "num": "3401", "d": "11/2016"}, {"title": "jqueryajax cachefalse script jsonp cachefalse inherited parent resource", "body": "description resource fetched using contains subresources fetched cachebuster even textjavascript type sample calls contains actual result foojs given cachebusting suffix fetched expected result given typescript given cachefalse inherited parent call would expect foojs fetched cachetrue ie without querystring least like given control whether sub static resource fetched cached", "num": "3400", "d": "11/2016"}, {"title": "allow custom cache token ajax", "body": "would useful te ability set custom cache token jquery moment set cache false ajax requests jquery appends timestamp request browser nt use cached version file example would like ability set custom value appended instead timestamp example want clear cache every update could use internal version number user would get cached version nothing changed update version number changes user would get new version", "num": "3399", "d": "11/2016"}, {"title": "jqueryui nt recognize hidden attribute", "body": "description using plain javascript easy hide selectmenu option using hidden attribute want stylise selectmenu using jqueryui hidden attribute ignored example define two selectmenus option option hidden option option option option hidden option option javascriptjquery run example third item hidden second selectmenu first seems jqueryui disabled hidden attribute link test case", "num": "3398", "d": "11/2016"}, {"title": "deleted", "body": "deleted", "num": "3397", "d": "11/2016"}, {"title": "jquery outerheight returns undefined instead null", "body": "description jquery returning instead per documentation return value called empty set elements case element passed works desired link test case fiddle jquery example jquery", "num": "3396", "d": "11/2016"}, {"title": "invalid regular expression", "body": "troubles jquery jquery ui jquery ui slider throws happens trying slide bubble sliding error happens fragment code error tags", "num": "3395", "d": "11/2016"}, {"title": "feature request support capturing dom events", "body": "since new versions jquery nt support old ie versions anymore get dom event capturing support jquery", "num": "3394", "d": "11/2016"}, {"title": "hoosstop never called delete", "body": "lastest jqurey find bug though serious code jqueryfndelay function time type time jqueryfx jqueryfxspeeds time time time type type fx hooksstop never called delete hooks", "num": "3393", "d": "11/2016"}, {"title": "function executed calling event clik", "body": "description function executed calling clik event variables passed function aviso mensaje alert mensaje content click aviso holaaa", "num": "3392", "d": "11/2016"}, {"title": "ca nt use function", "body": "use jquery like code segement ca nt use get proper text input element", "num": "3391", "d": "11/2016"}, {"title": "jquery validation plugin considers multiple empty space valid pass required field validation", "body": "bug reports required fields mean user need input something putting spaces pass required validation try demo put name field spaces click submit error message showed thinks input spaces pass required validation believe happens across browser test cases test site provided link test case source code views", "num": "3390", "d": "11/2016"}, {"title": "drop signatures", "body": "evaluate signatures dropped arguments mask bugs first argument inadvertently evaluates results classes removed first time called badly documented probably wellknown way saves data seems like bad practice custom builds creates otherwise unnecessary dependency towards would allow following savings full builds", "num": "3388", "d": "11/2016"}, {"title": "way abort ajax request", "body": "description jqueryajax return jqxhr object anymore way abort ajax request like jquery link test case", "num": "3387", "d": "11/2016"}, {"title": "height amp outerheight returns undefined noresultselectors", "body": "hi team got return value undefined height outerheight noresultselectors returns breaks calculation dynamic heights result nan changed issue feel reasonable return value selects empty result thank", "num": "3386", "d": "11/2016"}, {"title": "deprecate jquerycamelcase", "body": "description hide undocumented private method nt make sense available externally contains cssonly quirk replaces rather fixing better remove theoretically could minor release since semipublic long better wait especially code around change anyway link test case na", "num": "3384", "d": "11/2016"}, {"title": "css margin css padding return empty string firefox", "body": "description return empty string firefox tested nightly chrome returns expected result see test link link test case", "num": "3383", "d": "11/2016"}, {"body": "sounds like issue woocommerce code jquery code mentioned simple better looked solution stack overflow reported issue really something wrong providing concrete test case mentioning problematic line code wo nt help us much doubt would jquery blame", "d": "11/2016"}, {"body": "oh sorry post thank compatibility problem last version woocommerce jquery version wordpress thank comment mgol", "d": "11/2016"}, {"body": "really short already reason another method get one property along code documentation method jquery around time frame removed keep api simple", "d": "11/2016"}, {"body": "actually looks like one browser issue allowing contain one interactive element another", "d": "11/2016"}, {"body": "would useful internally ca nt depend existing adds cases cover note also need pass jquery methods already way", "d": "11/2016"}, {"body": "seems consistent far method jquery event handling concerned browser fires events docs say event handlers trigger per element per event type example one element two event types", "d": "11/2016"}, {"body": "problem seems misimplementation getallresponseheaders rely least otherwise agree assessment pspvz would willing submit pr updating getresponseheader something like", "d": "11/2016"}, {"body": "hello tried create test seen contribute issue", "d": "11/2016"}, {"body": "contribute issue yes", "d": "11/2016"}, {"body": "explore potential simpler replacement called decided nt make sense duplicate fetch api use jquery slim instead full jquery ajax amp effects modules everything else polyfill making specific change would big breaking change would basically break code used ajax amp attached success handlers promise nt think", "d": "11/2016"}, {"body": "need workaround change", "d": "11/2016"}, {"body": "please nt submit issues notified people", "d": "11/2016"}, {"body": "provide complete test case", "d": "11/2016"}, {"body": "rather test case usecase prestashop backoffice product page loads tabs loaded cachefalse avoid outdated data tabs relies upon static assets currently assets forcefully loaded cachebuster querystring", "d": "11/2016"}, {"body": "like see test case using jquery showing described", "d": "11/2016"}, {"body": "get requests adding parameter type request appending url nt lot value providing coding documenting redundant way", "d": "11/2016"}, {"body": "solution errorprone forget add token goes production like would hard fix would nice clean save way control caching", "d": "11/2016"}, {"body": "thenks report however jquery ui bug tracker located one jquery", "d": "11/2016"}, {"body": "correct per update documentation", "d": "11/2016"}, {"body": "please link test case jsbincom jsfiddlenet", "d": "11/2016"}, {"body": "sorry nt think could give test case happening sliders case insert image button inserts image div also panel configuration div change background color etc image inserted div shows option configuration panel execution time enables slider slider introduced execution time failing question noticed something related know could find error probably error code slider code slider spinner codes slider spinner linked configpanel find imageopacityslider slider range min value thiselimageopacity min max step slide function event ui configpanel find input nameopacityspinner spinner value uivalue change function event ui configpanel find input nameopacity val uivalue change configpanel find imageopacityspinner spinner min max page false step stop function event ui configpanel find imageopacityslider slider value spinner value val thisimageopacity unbind keydown bind keydown function e epreventdefault using chrome version need information explain something please let know thanks advance edit firefox giving something related much recursion", "d": "11/2016"}, {"body": "pretty hard debug without test case fix reported bugs ca nt fix unless know bug region code bug occurs indicates delegated event", "d": "11/2016"}, {"body": "basically dup discussion short answer easy exposing flag requires several breaking changes maybe jquery", "d": "11/2016"}, {"body": "could provide test case showing think breaks focused internals need know use jquery seeing error also referrence", "d": "11/2016"}, {"body": "test case di slidedown delay slideup di display div back jquery core api jqueryfndelay line jqueryfndelay function time type time jqueryfx jqueryfxspeeds time time time type type fx know thisqueue push function queue relateted jqueryfn object item pushed second argument theory hooksstop called jquerydequeue delete hooksstop question jquerydequeue function code fn add progress sentinel prevent fx queue automatically dequeued type fx queueunshift inprogress clear last queue stop function delete hooksstop fncall elem next hooks delete hooksstop called hooksstop never called", "d": "11/2016"}, {"body": "purpose using hookstop cleartimeout timeid current item executed finsihed next item start execute think code delete hooksstop called right", "d": "11/2016"}, {"body": "please put test case everyone easily see problem", "d": "11/2016"}, {"body": "saberyjs cleartimeout method hooksstop clears timer set settimeout whereas delete hooksstop clears last queue stop function deletion clear method followed hook given stop gotoend", "d": "11/2016"}, {"body": "bug javascript works please look programming help stack overflow", "d": "11/2016"}, {"body": "arrow functions work nt binding ca nt point current element always use first arrow function parameter code instead case jquery issue please direct queries topics stack overflow jquery forums thanks", "d": "11/2016"}, {"body": "thanks report however code jquery validation plugin maintained please submit issue", "d": "11/2016"}, {"body": "mgol oops sorry wrong place thanks link right repo", "d": "11/2016"}, {"body": "looks like missed boolean signature already deprecated assume means undocumented also included oh target timeframe removal gladly submit pr removal time right", "d": "11/2016"}, {"body": "silverwind yes removal would", "d": "11/2016"}, {"body": "thanks offering", "d": "11/2016"}, {"body": "ok close sure planned want keep reminder removal feel free reopen", "d": "11/2016"}, {"body": "think good reminder already issues created one missing", "d": "11/2016"}, {"body": "thanks report", "d": "11/2016"}, {"body": "still returns object", "d": "11/2016"}, {"body": "returns promise jqxhr abort method missing jquery", "d": "11/2016"}, {"body": "please add link test case", "d": "11/2016"}, {"body": "interesting log ajax see jqxhr ca nt use chain", "d": "11/2016"}, {"body": "saved result returns", "d": "11/2016"}, {"body": "logic offset nothing nothing zero easily add expression want old behavior", "d": "11/2016"}, {"body": "looks consistent docs warn using shortcut properties useful since may wrong", "d": "11/2016"}, {"body": "example seen", "d": "11/2016"}, {"body": "seen promotion behaviour describe following explicit pattern popularised encouraged within wikimedia continue use corsjson modern browsers using jsonp fallback without requiring additional options passed really like avoid also set", "d": "11/2016"}, {"body": "nt think setting required default", "d": "11/2016"}, {"body": "markelog done", "d": "11/2016"}, {"body": "get error", "d": "11/2016"}, {"body": "sessionliang using ajax load event removed precisely people confusing two please read upgrade guide contains info one described", "d": "11/2016"}, {"body": "since nt got specific example breaks going close issue tangrl construct minimal example post amp reopen", "d": "11/2016"}, {"body": "btw release notes section known issues things wanted add syntax probably affected", "d": "11/2016"}, {"body": "use something like", "d": "11/2016"}, {"body": "dmethvin disappointing response places onus every developer search open issues jquery rather including eg breaking changesknown issues section release notes", "d": "11/2016"}, {"body": "craigkovatch think hoped could fixed quickly perhaps need fall back assuming wo nt fixed wait since breaking change would like submit addition document", "d": "11/2016"}, {"body": "dmethvin concerned breaking restoring going make situation even worse really hoping still end release happy document upgradeguide would candidate inclusion migration plugin", "d": "11/2016"}, {"body": "method still described valid jquery docs though repo would open ticket", "d": "11/2016"}, {"body": "hcgernhardtiii every site separate github repo look name github account example learnjquerycom", "d": "11/2016"}, {"body": "thanks", "d": "11/2016"}, {"body": "following use case rather counterintuitive migrate using text initial attempt tried previously believed kept current state nonpromise returned plain value resolved resolved plain value rejected rejected creating explicit deferred needed change type resolved rejected however case following fix needed works recording case helps someone else case documentation improved", "d": "11/2016"}, {"body": "", "d": "11/2016"}, {"body": "moving removal jquerystyle extra safe", "d": "11/2016"}, {"body": "thedavidfactor fix animate issue firefox detect mozilla browser write animate method mozilla almost similar animate method browsers animate method additional css properties elaborate created fiddle please check also please let know case queries concerns", "d": "11/2016"}, {"body": "dealing situation described comment problem using triggerhandler trying avoid running code focus handler setting focus programatically trigger proper way solve", "d": "11/2016"}, {"body": "welp ran tried handle event triggered certain parameter guess nt get passed use case least", "d": "11/2016"}, {"body": "mgol another way show additional data focus event triggered please check fiddle attaching screen shot", "d": "11/2016"}, {"body": "purvaa triggering focus event fiddle nt pass data nt seem relevant issue", "d": "11/2016"}]