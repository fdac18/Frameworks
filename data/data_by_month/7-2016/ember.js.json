[{"title": "glimmer binding text input outputs undefined", "body": "code result demo", "num": "13974", "d": "7/2016"}, {"title": "call order siblings reversed", "body": "example order didinsertelement hooks order embertwiddle output console code depends order still right order", "num": "13972", "d": "7/2016"}, {"title": "viewrendernodelastresult giving uncaught typeerror read property lastresult null", "body": "unsuccessful tracking far days ago canary ticked beta noticed canary whole time beta failing addon one travis build logs tried removing dependencies narrow tests start failing reasons debugging passes first time fails second inspected although nt property property nt know helps", "num": "13968", "d": "7/2016"}, {"title": "glimmer component integration tests", "body": "freshlyminted app using ember alpha released today integration tests fail repo reproducing issue followed steps", "num": "13963", "d": "7/2016"}, {"title": "glimmer read property hascomponentdefinition undefined", "body": "suspect issue using contextual components like problem affecting ember basic dropdown sample app nt render code", "num": "13962", "d": "7/2016"}, {"title": "index route rather route nesting breaks routing ember", "body": "trying update ghost ember ran fairly large issue ember routing breaks application scenario ghost route called path nested route inside path ghost also several routes like path etc nesting without prior ember worked fine trying upgrade explicit route eg etc hitting route treated post id ghost routerjs also built couple twiddles give simpler example ember type route input anything notice alert appears saying post route id whatever entered type route input notice alert appears saying team route ember type route input anything notice alert appears saying post route id whatever entered type route input notice alert appears saying post route id team nt sure unexpected breaking behavior ghost router something wrong ghost router something wrong would awesome figure way fix", "num": "13960", "d": "7/2016"}, {"title": "glimmer action mut nondefinedvalue fails", "body": "error action passed null undefined action reproduction code note twiddle nt type code", "num": "13959", "d": "7/2016"}, {"title": "glimmer uses throw error", "body": "search nodemodules got following files looks like liquid fire already knew loaderjs benchmarks small importance emberwormhole emberclipageobjects tests", "num": "13956", "d": "7/2016"}, {"title": "glimmer invalid inline yields exception", "body": "invalid behaves inconsistently htmlbars glimmer see htmlbars warning follow rendered glimmer exception thrown rendering questions glimmer behave htmlbars issue warning development mode", "num": "13955", "d": "7/2016"}, {"title": "transitions route different model qps throws error", "body": "exact error message nt provide enough stringnumeric parameters satisfy dynamic segments route view able extract failing example big app reduce minimum life demo code raytiley pr related think pr part current beta merged still get error", "num": "13954", "d": "7/2016"}, {"title": "glimmer master issue", "body": "hello welcome glimmer alpha testing worked almost year excited board help us smooth rough edges issue updated discover new problems experienced issues testing alpha builds please check already covered one issues linked relevant information one place help everyone fixing problems well experiencing background glimmer groundup rewrite architecture departs significantly glimmer example old system eagerly registered observers everything get notified things change whereas glimmer pullbased system rely observers tracking changes intercepts instead careful break public apis known intimate apis used popular addons might emergent incidental undocumented behaviors old system simply fallout old implementation details extent possible support without incurring big cost everyone else try address issues discover however please understand always easy possible fully emulate subtle differences sometimes really equivalent concepts new codebase sense something missing sense approaches completely different therefore need decide edgecases casebycase basis would really help provide much details possible trying accomplish made chose path know officially supported alternativesworkarounds easydifficult would migrate supported path current status last months went largescale effort modernize rendering test suite significantly improved coverage importantly allowed tests run new existing rendering engines minor exceptions everything passing continuously tested ci every push separately rest test suite also passing continuously tested ci exceptions reason failing tests incidentally coupled old engine working rewriting tests reenable soon possible ember core semantics covered test suite believed mostly working new engine certain addons might depending internal apis incidental behaviors result addons might working moment one goals alpha testing period get addon authors identify report compatibilities work addressing soon possible installationbuild issues mut helper issue issue fixed ensure getting right versions update require versions js devdependencies emberclihtmlbars emberclihtmlbarsinlineprecompile general caching related issues cases might remove directory changing ember version followed incorrect production builds production minified alpha builds incorrectly included developmentmode assertions debugging aids led bloated file sizes increased parse time significant runtime performance penalty fixed test modules included builds alpha builds incorrectly included tslint test modules led bloated file size increased parse time fixed incorrect version numbers alpha builds incorrect version numbers like opposed fixed notable changes changes natural fallout internal implementation changes believed previous behaviors incidental undocumented inconsistent otherwise unreliable believe breaking app please provide details linked issues rerendering component manually ie calling longer forces everything subtree recompute notably helpers like updated rerendering lifecycle hook called component whenever anything subtree changed backtracking rerender error development mode work production builds updates automatically values added object using tagless components components set empty string used ignore attribute unintentionally allowed users repurpose uses hard error use tagless component missing features features added shipping app depends work moment however still intend support fully need make code changes moment instrumentation support new engine emitting instrumentation events actions instrumentation part feature flag also missing known issues issues fixed shipping app depends might behave strangely edgecases however still intend support fully need make code changes moment currently stubbed implementation lock wycats addonstooling meant exhaustively list general incompatibilities reported addon authors directly status notable addons addon author experienced issues enumerated please open new issue describe needs testing current status acceptance tests working noncomponent integration unit tests working component integration tests working history component unit tests working fastboot working emberclifastboot ember node tests need pass engines working ember needs implement helper liquid fire waiting liquid fire release liquid fire currently work due private api dependencies ember inspector working limitations ember needs implement apis glimmer known issues performance issues one overarching goals glimmer improve performance immediate priority maximal compatibility however noticed certain common patterns become slower please report bugs alpha period always running performance benchmarks please make sure using minified production build debug builds contain lot helpful development aids known impact performance negatively build issues vendorjs byte size regression regression boot time lock rwjblue krisselden initial render compilation cost high lock wycats chancancode rerendering general slowdown big pages validator issues fixed rerender performance regression proxy eg yielded content fixed", "num": "13949", "d": "7/2016"}, {"title": "glimmer backtracking rerender assertion", "body": "backtracking rerender refers scenario middle rendering process modified something already rendered example js appcomponentsfoobarjs export default embercomponentextend init thissuper arguments thisget parent set foo bar see time component instantiated rendered already used value parent context populate curly however constructor trying modify value hence backtracking pretty extreme example illustrates problem besides also happens synchronously rendering process additionally backtracking often issue arising behavior twoway bound properties behavior always unreliable partially supported deprecation since ember since ember supported immediately second rerender backtracking detected repeating system stabilizes strategy could source performance problems extreme cases could cause infinite loop glimmer extra rerender relatively cheap extra bookkeeping detect backtracking one wins glimmer system need eagerly setup observers track changes certain optimizations glimmer allows system skip traversing subtrees knows nothing within changed together factors mean readily detect backtracking whether something already rendered without large amount extra bookkeeping intentionally defeating optimizations already wrote code support due already unreliable nature feature significant bookkeeping costs hesitant automatically enable everyone without knowing whether still needed compromise currently perform detection development mode turned deprecation message developmentmode assertion hard error production mode detection code stripped backtracking work kept facility support feature without assertion codebase behind second feature flag code tested continuously ci however disabled default enough usage information determine next steps believe usage patterns affected please provide much detail scenario possible possible alternatives andor targeted solutions use require wholesale change engine therefore would helpful provide background information context usage instead showing us small code snippets codebase", "num": "13948", "d": "7/2016"}, {"title": "glimmer difference semantics", "body": "previously fire something directly inside component template changed words dynamic content rendered directly component layout glimmer hook fire anything inside template subtree changed regardless depth nesting words dynamic content rendered component layout also child components invoked within layout child components put simply hook called anytime something rerendered anywhere inside component element new implementation rendering engine differenciate whether dynamic content nested directly inside component future optimizations inlining make line even blurry natural place track distinction rely old huristicsemantics knowledge previous behavior guaranteed official documentation since mostly used leaf components believe impact minimal incidentally also enable use cases previously possible component converts content markdown html believe usage patterns affected please provide much detail scenario possible possible alternatives andor targeted solutions use require wholesale change engine therefore would helpful provide background information context usage instead showing us small code snippets codebase", "num": "13947", "d": "7/2016"}, {"title": "glimmer removal always dirty rerendering", "body": "previously calling component would force everything template subtree recompute including helpers like custom helper done walking render nodes alwaysdirty visitor glimmer entire system built avoid unnecessary work equivalent concept render nodes many cases system tell nothing subtree changed without traversing sometimes system even tell certain things like constant values templates going change optimize work aheadoftime therefore nt necessarily equivalent strategy use without defeating optimizations knowledge previous behavior guaranteed official documentation usually used work around issues fixed new system example tracks changes object automatically long added require manual rerender believe usage patterns affected please provide much details scenario possible possible alternatives andor targeted solutions use require wholesale change engine optimization strategies therefore would helpful provide background information context usage instead showing us small code snippets codebase", "num": "13946", "d": "7/2016"}, {"title": "property get set component init breaks computed property", "body": "nt think common pattern initializing properties method component caught surprise today computed property dependency method component anytime component fully initialized value cached invalidated see twiddle three examples would expected three computed properties however one within block nt seem properly recomputed might related certain also seems describe issue however nt affect anymore normal computed properties still impacted", "num": "13945", "d": "7/2016"}, {"title": "internet explorer process memory leak", "body": "sure ember issue internet explorer issue created sample application illustrates problem using ember canary contains ember cli generated application two routes couple links application template loading application either using production build another web server clicking two routes causes process memory leak internet explorer specifically update version using ie developer tools shows objects allocated cleaned clicking routes yet heap size process memory still growing drilling retained objects seems show htmldivelement retained run test chrome version take three snapshots repeating movement routes one see objects allocated snapshot gone also created selenium test clicks two routes using links run iterations internet explorer shows saw tooth growth process memory calling collectgarbage effect process memory use run long enough around iterations internet explorer top memory use crash test run iterations chrome without causing growth process memory reported chrome task manager chrome process memory tab rises stabilises length test test finishes memory drops back unlike ie never drops found reported memory leak internet explorer edge seems relate cleaning application reloaded coincidently ember app also seems affected bug nt know related process memory growth reloading application", "num": "13940", "d": "7/2016"}, {"title": "ember broken", "body": "latest update uglify js longer supports default enabled setting options means default install ember nt work anymore proposed fix would change branch ember default", "num": "13936", "d": "7/2016"}, {"title": "triggering integration tests ember", "body": "noticed test failing ember well current canary build repo traced back line element clicked trigger event component test nt intentional change bug intentional would one define general click handler instead", "num": "13932", "d": "7/2016"}, {"title": "glimmer make node tests pass", "body": "need run tests glimmer", "num": "13930", "d": "7/2016"}, {"title": "glimmer ember inspector", "body": "tests need pass", "num": "13929", "d": "7/2016"}, {"title": "loading states behaviour nt match documentation", "body": "hi understand correctly according documentation file slow models default template better match found seem happening please check example used first route next route used anymore think docs say used", "num": "13922", "d": "7/2016"}, {"title": "update routerecognizer effects wildcard route", "body": "noticed change wildcard route behavior added router map wildcard route nt work expected following condition js thisroute testroute path routeid resetnamespace true function thisroute testsubroute path subrouteid thisroute pagenotfound path wildcard twiddle better illustrate try entering path wildcard route takes priority works expected seems nested route route looking id cc nathanhammond rwjblue per conversation sf ember meetup", "num": "13921", "d": "7/2016"}, {"title": "create embererror chrome canary", "body": "time embererror raised chrome canary canary following error raised tell temporary error object writable stack property whereas error subclass stack property nt cap things reproduction app", "num": "13919", "d": "7/2016"}, {"title": "emberroute thisrender resolve template path pod structure", "body": "template looks like outlet outlet baz try render two templates different outlets hook like works located work nested inside pod structured app like eg maybe possible import template via accepts path imported template", "num": "13918", "d": "7/2016"}, {"title": "change namespace embermetalstreams emberhtmlbarsstreams break compatibility", "body": "streamsstream streamsutils defined embermetal modules moved emberhtmlbars breaking backward compatibility addons apparently marked dying addons never used private modules however existing apps using addons broken migrating even using private modules recommended release ember lib also deprecationmigration path private modules log issues addons however take time addons fix issue even sure fix without breaking backward compatibility may naive", "num": "13917", "d": "7/2016"}, {"title": "array parameters issues", "body": "hi team come across issue url prams array eg etc idea support future", "num": "13916", "d": "7/2016"}, {"title": "deprecation guide addition emberbinding use connect", "body": "today noticed ember deprecation emberbinding curious situation assumed simple defineproperty inside init luck ember find good solution gladly submit pr guides others situation thank advance", "num": "13912", "d": "7/2016"}, {"title": "instrumentation", "body": "failing test nodes without view instances instrumented knowledge requires thought someone knowledge internals efficiently probably required ember inspector", "num": "13910", "d": "7/2016"}, {"title": "better solution readdomattr", "body": "public api currently wrapper around read longer concept knowledge yehuda plan", "num": "13908", "d": "7/2016"}, {"title": "passing attr component template results value beta canary", "body": "rendering template passing attr named result value eg following code applicationhbs mycomponent env foo mycomponenthbs env env mycomponentjs didreceiveattrs consolelog thisenv thisget env logs thisenv null browser logs thisenv null component template renders env env foo reproducible beta canary ember expected behavior occurs logs thisenv foo renders env foo example embertwiddle", "num": "13907", "d": "7/2016"}, {"title": "action instrumentation", "body": "currently feature flagged accounted failing tests closure action improved instrumentation knowledge requires knowledge want instrument", "num": "13905", "d": "7/2016"}, {"title": "implement mount", "body": "since behind feature flag recently implemented glimmer failing tests mount knowledge understanding outlet state reference system", "num": "13903", "d": "7/2016"}, {"title": "emberbinding support", "body": "failing test accept bindings string emberbinding knowledge requires knowledge referencetagging system appears one bug previous expectation becomes current assertion", "num": "13902", "d": "7/2016"}, {"title": "isvisible implemented", "body": "failing tests toggle visibility isvisible isvisible overwrite component style knowledge understanding componentmanager current style attribute merged property component object", "num": "13901", "d": "7/2016"}, {"title": "master issue", "body": "issue serves master issue alphas list know issues links detailed issue going fix issue please leave comment issue number known issues emberbinding support instrumentation known missing features mount helper action instrumentation emberimprovedinstrumentation temporary workarounds wrapper wycats", "num": "13900", "d": "7/2016"}, {"title": "normalize safestrings setting attributes", "body": "failing test set dynamic style htmlsafe knowledge requires understanding glimmer handles attributes currently fails ie adhere protocol", "num": "13899", "d": "7/2016"}, {"title": "feature guard non kvocompliant methods", "body": "searched error code deeply chained computed property updating expected looking everywhere two hours came simple push newobj instead pushobject newobj array constructed using embera also using ton things js ember used methods like push look directly loc gut telling everything ok kind hard notice would wonder one shit happens quesition possible make methods like push work expected sure reason nt possible way log notice assert possible cross browser possible browser debugging would enough think computed property chains one hardest things debug especially ember beginners lot trouble see new programmer join project helpguards errors would great let discuss could done", "num": "13889", "d": "7/2016"}, {"title": "trigger trigger component actions", "body": "test suites pass example failing specifically seem trigger actions components anymore using found commit introduces bug think corresponds commit", "num": "13888", "d": "7/2016"}, {"title": "emberjs nodejs route", "body": "work emberjs realized problem emberjs nodejs route route node like another route emberjs could call emberjs route case host emberjs files static resources nodejs server thank advanced", "num": "13884", "d": "7/2016"}, {"title": "move embertesting helper docs function definition", "body": "currently documentation helpers things like etc file split helpers separate files like helpers documentation moved helpers specific file example would like click documentation moved file", "num": "13862", "d": "7/2016"}, {"title": "ember test building hangup", "body": "exact output running ember test project builds fine right says hangup stack trace nothing running ember node phantomjs ubuntu crouton honestly idea heck going since literally information given try run ember test run ember server runs without issue", "num": "13854", "d": "7/2016"}, {"title": "outdated documentation listing higher search engines", "body": "new user ember find rather annoying googling ember related queries outdated documentation listed higher recent relevant documentation know obviously nt easy fix much control ways consider link outdated documentation new page extra internal links boost pages seo ranking use sitemapxml listing older version documentation lower priority value block old documentation using robotstxt probably terrible idea thanks", "num": "13848", "d": "7/2016"}, {"title": "schedulerevalidate canary causing test failures", "body": "hello recently started failing build canary one errors looks line looking history file see reason recent changes would produced failure wholly unfamiliar code hopefully helpful error report red herring let know need information maybe problem", "num": "13846", "d": "7/2016"}, {"title": "provide readonly access windowlocation", "body": "summary provide embery way read full url contained also supports testable ways changing value context service computes critical branding elements based domain used access app first invocation set window title emberclidocumenttitle routerbased solutions nt sufficient testing naive implementation service would require changing directly undesirable consequences alternatives someone suggested using undefined returns route path someone suggested using access required information private andor undocumented thing goes underlying relies location wrap access memoize way overridden tests feel something embery would general utility understand talking spas protocol domain parts wo nt change app lifetime also suggest readonly external links handled links internal ones handled router changeable testing without side effects get changing thoughts", "num": "13844", "d": "7/2016"}, {"title": "routermap callbacks hung router constructor", "body": "hangs callback functions receives within traditional clientside rendered emberworld harmless however take account fastboot becomes unsafe call multiple times within application functions leak across instances particular usecase registered routes dynamically depending user state inside instanceinitializer nt terribly uncommon pattern example someone wants register routes language user likely place would happen becomes problem fastboot time request made callback pushed property constructor enumerated invoked request new callback pushed array callbacks clean takes place memory leak unsafe functions previous app instances invoked lines question wondering anyone would opened moving callbacks elsewhere application instance larger ramifications would like gather interest feedback first", "num": "13840", "d": "7/2016"}, {"title": "get container initializers", "body": "work", "num": "13828", "d": "7/2016"}, {"title": "read property outlets undefined transitioning setupcontroller application loading", "body": "unable repro jsbin ember twiddle reason created basic app demonstrates issue calling hook child route application model hooks still blocking app fails render route spits moving transitionto earlier model hooks resolves issue side note template render route unspecified route included renders inside application template via outlet wondering create separate issue", "num": "13826", "d": "7/2016"}, {"title": "unable set parent properties initial hooks", "body": "using ember trying update value passed component component rendered tried using hooks make sense none appear able mutate works rerenders initial render works obviously bad practice triggers many deprecations ideas bug something expected twiddle look console log observers never triggered", "num": "13823", "d": "7/2016"}, {"title": "sortby ember array sort asc added", "body": "demo expected able something like seeing different behavior using vs twiddle linked shows issue experiencing", "num": "13822", "d": "7/2016"}, {"title": "add sinks jpurify", "body": "seen", "num": "13821", "d": "7/2016"}, {"title": "map mapwithdefault marked private", "body": "classes currently marked yet exported shims looks like tag added seems inconsistent export classes mark private like propose marking public cc pangratz", "num": "13815", "d": "7/2016"}, {"title": "beforemodel transitionqueryparams always empty", "body": "noticed always empty object twiddle demonstrating issue make sure open console see transition articleid although still able access params beforemodel using transitionsparams routename however believe bug queryparams always empty cheers fred", "num": "13813", "d": "7/2016"}, {"title": "chain embers array functions extendprototypefalse", "body": "disabling array prototype extensions following occurs js var people embera name john age candrive true name jill age candrive true name bob age candrive false var arraymethodsaremissing peoplecompact prevents chaining multiple methods one another means must wrap embera method seems counterintuitive", "num": "13809", "d": "7/2016"}, {"title": "different behavior", "body": "entirely sure expected behavior feels like something either consistent clearly documented reproduction shwoodard reproduction oligriffiths cc locks", "num": "13806", "d": "7/2016"}, {"title": "binding working eachin helper", "body": "see accepted answer stackoverflow normal use get required eachin fixed avoid extra boilerplate", "num": "13805", "d": "7/2016"}, {"title": "glimmer volatile tags play nice skipifnotmodified", "body": "x fix iterators use volatile tags x audit remaining volatile tags maybe remove x potential infinite loop volatile tag involved", "num": "13804", "d": "7/2016"}, {"title": "glimmer refactor references metadata", "body": "remove special const reference flag use identity consttag instead tag dynamically return const value thing think compile time vs runtime analogy refactor ember install metadata references avoid known metadata slots operations drop metadata sometimes would want copy places currently use", "num": "13803", "d": "7/2016"}, {"title": "could helper support object params", "body": "example queryparams objparams think necessary nt know many params thanks", "num": "13802", "d": "7/2016"}, {"title": "get dom component tagname", "body": "hi setting tagname component use tagname else break page style want access dom component using throws error saying object available tagname solution", "num": "13798", "d": "7/2016"}, {"title": "es symbols break classes", "body": "js const sym symbol foo const class emberobjectextend sym bar alert classcreate bar alerts safari web inspector closed function bar web inspector open chrome correctly always alerts function bar", "num": "13796", "d": "7/2016"}, {"title": "bug beta incorrectly set emberroutinglocationhistorylocation", "body": "user adopts version ember cli applies workaround discuss without specifying inside application following breaks us assumes content tag rather trying get application configuration consider blocking release cc martinmalinda", "num": "13795", "d": "7/2016"}, {"title": "fix beta builds", "body": "beta builds failing ms edge error might might bug browser supposedly another pr master fixed issue maybe backport relevant stuff beta", "num": "13794", "d": "7/2016"}, {"title": "embertestwait documentation example outdated", "body": "currently api docs suggest return async test helper according rwjblue guides nt necessary anymore", "num": "13793", "d": "7/2016"}, {"title": "ember generate route working", "body": "hi following document came across section tried command end getting error information using ubuntu intalled nodejs official website aptget remove nodejs first using embercliemblem bowerjson packagejson", "num": "13788", "d": "7/2016"}, {"title": "model found pluralmodelname", "body": "happens sometimes seems like trying singularize type model refresh page nt get sure happening sometimes action triggers request js ideas find info help isolate post", "num": "13786", "d": "7/2016"}, {"title": "ember documentation mess", "body": "uncomfortable work list great see like thanks advance", "num": "13779", "d": "7/2016"}, {"body": "thanks reporting definitely bug canshould fix sun jul pm miguel camba notifications githubcom wrote contextual component data bound data updated instances component gets complete reinitialized like entirely new component clicking causes component hook called creates new component hash ctxcmp component mycomp isopenisopen thing thingctxcmp contextual component thingctxcmp regression since component reused state gets updated live twiddle works stable fails alpha receiving subscribed thread reply email directly view github mute thread", "d": "7/2016"}, {"body": "currently rely componentdefinition internal object stable looks like ones produced component helper either fix component helper produce stable values beef stability check rely currently believe first approach would simplier", "d": "7/2016"}, {"body": "chancancode mind worked already thought reference stable unless first argument component name changes", "d": "7/2016"}, {"body": "cc chadhietala", "d": "7/2016"}, {"body": "chadhietala think want call", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "cibernox confirm fixed smile", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "hmm nt think order siblings really well defined api definitely guarantee child components called parents nt think made guarantees ordering example krisselden likely know area best think consider bug try fix glimmer behavior intentional", "d": "7/2016"}, {"body": "think pass tests actual goal children called parent think would pretty simple instead queuing hooks could move delete patch ember reverses order everything work rules update hooks nt know equivalent place make emit corresponding updating opcode queue hook", "d": "7/2016"}, {"body": "chancancode parentchild ordering correct issue siblings", "d": "7/2016"}, {"body": "yeah basically preorder queueing parent child child child test failed reversed order make pass p actually want postorder queuing p think actually might implications exception cases though since errored appending one children hook queuedcalled whole area needs lot love anyway", "d": "7/2016"}, {"body": "rendernode private part", "d": "7/2016"}, {"body": "ok nt know causing failure using private code addon code maybe one addons using issues glimmer ember debugging skills apparently lacking case", "d": "7/2016"}, {"body": "fixed direct issue reported reproduction steps still issue due way top level outlets used embertesthelpers", "d": "7/2016"}, {"body": "work done switchflyembertesthelpers", "d": "7/2016"}, {"body": "actually able reproduce case component explicitly set rather location discovered resolver", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "dfreeman way bug happening thing emberbasicdropdown", "d": "7/2016"}, {"body": "confirm issue fixed investigating another one", "d": "7/2016"}, {"body": "note believe related pr", "d": "7/2016"}, {"body": "acburdine know problem us release addressing bug nt know tell follow along know ongoing discussion mean time suggest stick", "d": "7/2016"}, {"body": "nathanhammond thank quick reply", "d": "7/2016"}, {"body": "cibernox try latest build", "d": "7/2016"}, {"body": "lunch", "d": "7/2016"}, {"body": "bug fixed another bug open new issue", "d": "7/2016"}, {"body": "thank cibernox", "d": "7/2016"}, {"body": "issue helpful assertion ideally engines", "d": "7/2016"}, {"body": "thanks take", "d": "7/2016"}, {"body": "confirm present", "d": "7/2016"}, {"body": "sorry locked issue earlier intent generally better idea open new issues instead long thread disconnected issues especially since subthreads github ui however things think really belongs unlocked add digression may also periodically delete outdated comments keep thread current happy alpha testing", "d": "7/2016"}, {"body": "think duplicate moved call quick check see related works expected mentioned issue comment explanation init works ok close issue", "d": "7/2016"}, {"body": "thanks serabe looks like probably samesimilar root cause think regular use case even local properties ie trying propagate back parent view also affected think broadly means ca nt reliably property initialization method local computed properties may depend values however glad followup issue close one think sufficiently similar", "d": "7/2016"}, {"body": "jdenly thanks great issue curious see issue versions ie example edge", "d": "7/2016"}, {"body": "stefanpenner nt tested edge get access windows machine check get back", "d": "7/2016"}, {"body": "jdenly would handy additional data point need get windows setup latop try remember dig weekend", "d": "7/2016"}, {"body": "stefanpenner run test edge fine ran iterations without problem process memory never went dropped pressure browser end js heap larger end also tested version ie windows machine update version rather slightly different version windows machine whilst shows process memory growth load test unlike edge nt show heap growing retained objects manually clicking routes unlike windows think internet explorer specific bug rather ember issue", "d": "7/2016"}, {"body": "jdenly interesting may still something ember avoid least attempt confirm w friends ms felixrieseberg bterlson two fine fellows recommendationsthoughts", "d": "7/2016"}, {"body": "nt really insight also add reybango might able get fixed gut feeling leak chrome edge prooooobably edge bug", "d": "7/2016"}, {"body": "felixrieseberg danke", "d": "7/2016"}, {"body": "felixrieseberg looks like edge fine problem seems ie also using remote web driver test using selenium perhaps related", "d": "7/2016"}, {"body": "thank reporting mattbearman sadly longer maintained unlikely new release done point new lts second one months away thank", "d": "7/2016"}, {"body": "believe duplicate nt chance dig confirm", "d": "7/2016"}, {"body": "closing duplicate given internally click calls trigger js jqueryeach blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu split function name", "d": "7/2016"}, {"body": "thanks triaging keep eye issue fix", "d": "7/2016"}, {"body": "think already rendered try access probably wo nt remove already rendered parent show notice see template try access directly homepage try adding link directly", "d": "7/2016"}, {"body": "teddyzeenny thanks quick response tested direct link like suggesting surely worked nt desired outcome display scenarios also seems way works right determines loading page route transitioned seems weird route know display loading page independently route", "d": "7/2016"}, {"body": "urbany really default template route depends routing structure app place templates whether handle event nt desired outcome display templatesloadinghbs scenarios leaf routes children parent route would use loading template parent instead would use loading route sibling think myaccounthbs already rendered try access myaccountservices probably wo nt remove already rendered parent myaccount show loadinghbs teddyzeenny correct parent rendered need replace loading templates since already loaded also seems way works right determines loading page route transitioned seems weird route know display loading page independently route route know display loading template one available seems utilize loading states loading templates needed route hierarchy structure resolution render loading template depends app needs framework simple pattern utilize loading template perhaps example could use myaccountloadinghbs andor myaccountservicesloadinghbs see close since ember bug please reach help channel questions loading template behaviors", "d": "7/2016"}, {"body": "derrickshowers thanks reporting bantic think may time poke", "d": "7/2016"}, {"body": "rwjblue yes take look tonight tomorrow", "d": "7/2016"}, {"body": "bantic derrickshowers rwjblue confirmed work correctly emberrouterecognizer diff diff git atestsacceptanceglobweighttestjs btestsacceptanceglobweighttestjs new file mode index devnull btestsacceptanceglobweighttestjs import test qunit import moduleforacceptance testshelpersmoduleforacceptance moduleforacceptance acceptance glob weight test check glob weight function assert visit someid andthen function assertequal currenturl someid assertequal currentroutename testrouteindex diff git atestsdummyapprouterjs btestsdummyapprouterjs index atestsdummyapprouterjs btestsdummyapprouterjs const router emberrouterextend routermap function thisroute foo thisalias alias elsewhere foo thisroute testroute path routeid resetnamespace true function thisroute testsubroute path subrouteid thisroute pagenotfound path wildcard export default router words fixforward back pocket", "d": "7/2016"}, {"body": "certain routerecognizer bug best guess moment related interaction ember routing dsl routerecognizer ran following test past several versions routerecognizer failed way javascript test support nested route star route function routermap function match match routeid routeid function match match routeidindex match subrouteid subrouteid match wildcard wildcard matchesroute abc handler routeid params routeid abc isdynamic true handler routeidindex params isdynamic false matchesroute abcdef handler routeid params routeid abc isdynamic true handler subrouteid params subrouteid def isdynamic true matchesroute abcdefghi handler wildcard params wildcard abcdefghi isdynamic true abc path matches wildcard handler incorrectly abcdef path matches correctly abcdefghi path fails match anything test output screenshot poke around later hopefully tonight tomorrow", "d": "7/2016"}, {"body": "certain routerecognizer bug clarify new routerecognizer bug fact ember routing issue newer ember probably related interaction ember rr rather rr directly dig update", "d": "7/2016"}, {"body": "sounds good thanks digging", "d": "7/2016"}, {"body": "looking deeply due bug routerecognizer nt realized ember using routerecognizer ember see going back able bisect breaking change landed routerecognizer going read specificitysorting rules work bit fix routerecognizer ping jmeas case thoughts well", "d": "7/2016"}, {"body": "thanks ping bantic look later today v", "d": "7/2016"}, {"body": "surprising dynamic segments specificity always win wildcard specificity hypothesis one two things wrong specificity compared comparing vs would considered wrong occur either dynamic route needs become less specific glob needs become specific nt think anything code make route less specific also nt think anything could cause one route increase specificity separate route think likely logic superseding specificity comparison great could look specificity routes determine would match solely based fix demonstrates nt always case occasionally route recognizer factor things cause less specific routes get matched specific ones time work step figure nt get bantic also surprised tests nt cover derrickshowers bantic one could open simplified failing test case route recognizer would help debugging later nbd nt time tho also emberrouterecognizer rewrite route recognition algorithm awesome spent lot time looking ember routing stuff always felt could implemented straightforward way", "d": "7/2016"}, {"body": "jmeas thanks description failing pr got waylaid things hope chance dig back today update start working fix", "d": "7/2016"}, {"body": "jmeas yes emberrouterecognizer near groundup rewrite routerecognizer currently passes tests include new one added benefit ember addon supporting serialization next steps improve automated serialization add support engines performance tuning landable stefanpenner rwjblue get us emberasanaddon full documentation rr research effort note wrote specificity sections finishing implementation need revise", "d": "7/2016"}, {"body": "jmeas thanks describing may going little digging mixonic specificity added routes seems correct think case logic superseding specificity comparison particular may related adding routes compiling nfa recognition abc eg matched state wildcard state another thing noticed change ordering route mapping test tests pass nt time dig today may look weekend able", "d": "7/2016"}, {"body": "adding wildcard route appears code returns state called instead always creating new state causes wildcard settings basically stomp previously exising segment settings example regex old dynamic segment stomped line executes still investigating seems pretty fatal though flummoxed commit bantic identified caused surface", "d": "7/2016"}, {"body": "see also", "d": "7/2016"}, {"body": "affecting travis ci chrome canary well renders nothing logged", "d": "7/2016"}, {"body": "believe embererror extending native error class however appears chrome made property readonly", "d": "7/2016"}, {"body": "chancancode says probably related", "d": "7/2016"}, {"body": "wagenet makes think issue related", "d": "7/2016"}, {"body": "based quick search things landed chrome recentish errors", "d": "7/2016"}, {"body": "chancancode nt seems related im poking around findings far able reproduce isolation yet error scenario question line stack property get installed writable false relevant code", "d": "7/2016"}, {"body": "appears happen failure failure", "d": "7/2016"}, {"body": "offending commit", "d": "7/2016"}, {"body": "believe primarily stupid ember code also likely web incompatible change", "d": "7/2016"}, {"body": "original source part copy error properties error ancestor believe people required errors circa may introduced position stomping w line original code makes readonly", "d": "7/2016"}, {"body": "quick work around would following", "d": "7/2016"}, {"body": "although strange basically js function e var tmp errorapply arguments embercapturestacktrace e thisstack tmpstack exist people dont nt sets internal slot used display untampered stack console although likely incorrectly stomped intended behavior logged message right thing", "d": "7/2016"}, {"body": "one approach think also open issue aware explore consider web compat issue going get sleep regroup", "d": "7/2016"}, {"body": "going look come reasonable fix soonish", "d": "7/2016"}, {"body": "issue", "d": "7/2016"}, {"body": "think fixed possible verify", "d": "7/2016"}, {"body": "addyosmani give whirl breakfast first gclient sync laptop dont mind building test able find winlinux prebuilds osx ones also exist", "d": "7/2016"}, {"body": "addyosmani verified locally issue longer predictable period time part chrome canary release maybe nightly", "d": "7/2016"}, {"body": "fixed point soon maybe nightly see chrome canary w fix believe closed end thank reporting thanks benedikt rest team fast turn around", "d": "7/2016"}, {"body": "thanks everyone work currently chrome canary tabs crashing immediately upon open check later", "d": "7/2016"}, {"body": "thanks everyone work currently chrome canary tabs crashing immediately upon open check later yes published canary appear fix yet custom build demonstrate fix", "d": "7/2016"}, {"body": "oh see yes recent chrome canary aw snaps constantly random site well", "d": "7/2016"}, {"body": "title issue emberroute thisrender resolve template path pod structure curious embercli issue instead emberjs issue reached embercommunityslackcom channel embercli raise question also would helpful create code example reproduction issue others use example troubleshoot debug issue create reproduction issue using embertwiddlecom", "d": "7/2016"}, {"body": "looking template named placed template also nt valid location pods resolver either want render via would", "d": "7/2016"}, {"body": "ok worked simply missusage bug", "d": "7/2016"}, {"body": "hello ffaubry deprecated one year ago regarding latest commit master already loading streams htmlbars found see please open issue addons working ember internal change previous link shows addon load one depending module available please understand using private apis recommended maintained subject change moment since emberjs bug closing thank report", "d": "7/2016"}, {"body": "thx serabe logged issue see reference", "d": "7/2016"}, {"body": "hello gitneelesh please provide us embertwiddle expected usage way check bug go rfc process thank", "d": "7/2016"}, {"body": "hi serabe getting embertwiddle means expecting print prams parse like req params test amp params test amp params demo abc output params test demo abc", "d": "7/2016"}, {"body": "gitneelesh see great way create example issue find ember app alternative could create repo share well code reproduction issue helps others debug case code example may illustrate use case looking solve array query param sure ember supports query params format asked question embercommunityslackcom help channel", "d": "7/2016"}, {"body": "thanks pixelhandler ask ember community", "d": "7/2016"}, {"body": "gitneelesh nt see example guides using array query param value see close issue since ember bug question community see perhaps followup stack overflow discus forums ember slack channels", "d": "7/2016"}, {"body": "whip embertwiddle jsbin demo issue", "d": "7/2016"}, {"body": "really need indepth material ease deprecationfixing pain error message users get offers clue property component offender one potential approach track set conditional breakpoint assert breakpoint condition matching assert condition breakpoint hit jump couple frames stack find offending property key property key would assume beginnerintermediate developers would immediately realize take approach know approach take matter", "d": "7/2016"}, {"body": "mikenorth great idea regarding giving indication property binding associated deprecation warning message", "d": "7/2016"}, {"body": "toranb regarding nt expect change understand app may using leaning toward upgradable solution makes sense robert mentioned example using embertwiddlecom git repo would great source help working could added guides", "d": "7/2016"}, {"body": "rwjblue pixelhandler agreed planning carve time week create solid twiddle showing action thanks", "d": "7/2016"}, {"body": "submitted make deprecation message helpful tracking binding used", "d": "7/2016"}, {"body": "well good news got twiddle prove identical behavior bad news think found bug code ca nt reproduce issue w twiddle reasons unrelated emberbinding deprecation leave twiddle find something broken sure report near future", "d": "7/2016"}, {"body": "rwjblue pixelhandler got ability see breaking reading older commits ember seems connect able observe changes actual object without connect nt appear fire computed way got public addon anyone willing look nt appear surface problem code actually rely behavior connect w emberbinding", "d": "7/2016"}, {"body": "rwjblue pixelhandler ignore went full landed green build deprecation free", "d": "7/2016"}, {"body": "krisselden figured working nt know enough bindingsrunloop system fix working bindings propagated correctly references pulling right thing setting binding correctly dirty objects working timing issue causing bindings synced late details current strategy capture revision backburnerbegin decide rendering work render queue working bindings synced render queue practice causing us notice change timline events synchronouschronological line reached captured currenttagvalue sync nothing actions nothing routertransitions nothing render currenttagvalidate capturedvalue gt false rerender updatecomponent componentsetproperties namedargsvalue endpropertychanges observersetflush fromdidchange thisschedulesync sync bumped back front set component dirty component sync sure might bug actions nothing routertransitions nothing render nothing time since already drained previously afterrender destroy rsvpafter soo problem binding sync async nt schedule second rerender response hence one otherwise tags etc working fine", "d": "7/2016"}, {"body": "krisselden triage tomorrow mean think problem deeper problem likely affect apps nt use feature former think pretty lowpriority", "d": "7/2016"}, {"body": "closed", "d": "7/2016"}, {"body": "cc chancancode think cause issues csp unless set always wondered stuff needed viewscomponents perhaps skipped deprecated need remain suggest setting property directly dom node instead using attribute since wo nt trip csp saw commit thought drop note feel free ignore correct wrong", "d": "7/2016"}, {"body": "done sandstrom never set nothing added come back rest later", "d": "7/2016"}, {"body": "moved", "d": "7/2016"}, {"body": "closed", "d": "7/2016"}, {"body": "robishere make good point computed properties hard debug differences using require reading docs one might expect behave way would need two necessary use notifying computed properties changes way long time possible make methods like push work expected sure reason nt api design possible way log notice assert sounds like recommendation enhancement api documented using needed notify property changes consider opposing question assert asks developer really wanted ignore property changes use instead possible cross browser possible browser debugging would enough nt method depends browser support think answers questions raised like propose enhancement method best way would via rfc issue pr see create issue like close ember issue tracker mainly tracking bugs", "d": "7/2016"}, {"body": "martndemus curious action named triggered event handler named action thought jquery method fires events", "d": "7/2016"}, {"body": "issue would likely based bisect result event dispatched find component created nt delegate event try dig morning", "d": "7/2016"}, {"body": "worth mentioning seems occurs testing apps run normally everything seems work one would expect", "d": "7/2016"}, {"body": "probable bug test tooling working old view api found commit broken", "d": "7/2016"}, {"body": "martndemus curious post issue", "d": "7/2016"}, {"body": "yes blogpost describes found commit causes bug", "d": "7/2016"}, {"body": "martndemus would possible get twiddle showing reproduction", "d": "7/2016"}, {"body": "tried making twiddle reason whole test thing shows blank \u30c4", "d": "7/2016"}, {"body": "seems bug twiddle", "d": "7/2016"}, {"body": "acorncom reproduction clone run", "d": "7/2016"}, {"body": "see problem branch ember ajax right", "d": "7/2016"}, {"body": "definitely issue interaction change martndemus pointed way embertesthelpers sets event dispatcher ultimately causes event dispatcher gets event ca nt identify view triggering try get fix together time next beta", "d": "7/2016"}, {"body": "hckhanh asked question embercommunityslackcom help channel use emberjsissue tracker mainly reporting bugs get better response questions slack chat room ember forums see slack active typically static indexhtml page ember build routed requests ember router pick location ember app single page applications sometimes use indexhtml page request api request", "d": "7/2016"}, {"body": "hi assign would nice way start understanding emberjs", "d": "7/2016"}, {"body": "hello holtalanm thank reporting seems like embercli problem please move embercliembercli issues please check happening fresh new project try reproduce thank", "d": "7/2016"}, {"body": "thank report think dupicateupdate emberjsguides thank reporting", "d": "7/2016"}, {"body": "thank reporting confirm failing found emberxselect though canary allowed fail therefore noticed line exact whose", "d": "7/2016"}, {"body": "thanks confirmation serabe forked repository built version ember made commit adds guards absence changed travisweb embertry configuration use fork bower dependency tests pass modified version canary know enough know whether type guard truly desirable perhaps deeper fix always present issue", "d": "7/2016"}, {"body": "someone try bisect narrow change caused issue", "d": "7/2016"}, {"body": "try tomorrow rwjblue easier way putting local filesystem path repeatedly running bisection", "d": "7/2016"}, {"body": "backspace yes definitely something like bash one terminal git clone git githubcom componentsembergit componentsember cd componentsember git checkout canary bower link app bower link ember ember serve need restart bisect stage components ember repo though sha slightly different least way every bisect step", "d": "7/2016"}, {"body": "thanks suggestion looks like much faster tried said chose commit think used bisect try figure wrong tomorrow", "d": "7/2016"}, {"body": "never mind think problem ran instead particular sha tried making build set use commit one bower trouble really working right haha edited add got going build last good commit build first bad one let know provide diagnostic information", "d": "7/2016"}, {"body": "ok based bisect looks like introduced failure", "d": "7/2016"}, {"body": "cc krisselden", "d": "7/2016"}, {"body": "rwjblue thank bisecting", "d": "7/2016"}, {"body": "yes thanks backspace tracked ember sha matched componentsember one mentioned", "d": "7/2016"}, {"body": "movement making emberbeta builds fail", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "maybe thread locked contributors stem inevitable tide", "d": "7/2016"}, {"body": "hello srvance given bug feature request please move emberjsrfcs thank", "d": "7/2016"}, {"body": "done nt realize jumped another repo read guidelines", "d": "7/2016"}, {"body": "yep definitely issue made frustrating many layers everything go order function way ember would like come quick patch would happy review would likely land depending upon complexityinvasiveness core team decide branch canary beta release target probably late addition series first one planned next week becomes ridiculous list things rework finishing routerecognizer", "d": "7/2016"}, {"body": "nathanhammond right nt good idea could patch keeping api intact thinking perhaps exposing new api registering callbacks concatted let know ideas feel free ping slack", "d": "7/2016"}, {"body": "everything area considered private api nt believe need maintain api consistency addressing bug somebody else please chime correct wrong addon know really abuses portion router one mine emberroutealias even nt touch", "d": "7/2016"}, {"body": "meant say nt know way resolving without implementing new api registering routes designed used runtime instead going constructor method keep existing api intact new way might look similar exporting function routerjs", "d": "7/2016"}, {"body": "could change way save references captured closure accessible run think possible", "d": "7/2016"}, {"body": "spoke offline outcome spike two possible solutions discuss", "d": "7/2016"}, {"body": "access container using bug", "d": "7/2016"}, {"body": "containerowner intended available initializers registry effectively means initializer need access initialization system would need use instanceinitializer instead note argument initializers instanceinitializers called would call initializer instanceinitializer directly first argument", "d": "7/2016"}, {"body": "closing nt bug framework", "d": "7/2016"}, {"body": "bttf regarding seems like using way go moving transitionto earlier model hooks beforemodel model aftermodel resolves issue would stick instead side note applicationloading template render applicationloading route unspecified route included applicationloading renders inside application template via outlet wondering create separate issue reproducible embertwiddle seems like bug thought applicationloading template would load instead application template", "d": "7/2016"}, {"body": "bttf close since ember bug perhaps like continue discussion use discus forums stack overflow ember slack channel see", "d": "7/2016"}, {"body": "btecu found documentation mutate attributes passed seems would avoid changing attribute passed component typically compute properties component use component setting needs also receives attributes treat separate concerns seems example receives attributes also wants set attributes regardless values received another way could solve use case seems doc example using", "d": "7/2016"}, {"body": "btecu trick see twiddle regarding component setting parent controller value avoided send action want controller change value", "d": "7/2016"}, {"body": "pixelhandler nt example getting changed locally familiar ddau think general best way however cases direct binding obvious cleaner need action setting value fact works subsequent calls makes think bug", "d": "7/2016"}, {"body": "init initializing nt fire events setting values parent rendered already deprecated even fire change event would trigger binding", "d": "7/2016"}, {"body": "btecu believe didreceiveattrs called init event idea code didreceiveattrs work init update called component fully initialized fire events personally consider part bug zalgo even hook one time called different every time need init use init want update code use update code hook work differently first time called", "d": "7/2016"}, {"body": "btecu reopening specific definitely supposed trigger change events absolutely aware overriding works order things initialized calling super etc though bindings parent make sure nt affecting anything already rendered", "d": "7/2016"}, {"body": "krisselden exactly thing tried fix argued strongly override simply wrong stated pr prevents anything flowing upstream component", "d": "7/2016"}, {"body": "rwjblue reread comments concerned observers nt fire upstream flow think dubious especially since done via backdoor thing consider bug didreceiverattrs fires inside ctor leaks partially initialized object nt fire events makes radically different called update", "d": "7/2016"}, {"body": "would ok pr happened post init init event talk removing upstream flow affects already rendered state would issue post init update pr focused", "d": "7/2016"}, {"body": "hello blimmer thank report bug enumerable sortby requires name propertyies accept modifiers want use take look embercomputedsort thank", "d": "7/2016"}, {"body": "sorry created wrong project", "d": "7/2016"}, {"body": "shims nt guaranteed point public things unsure intend public like hear core team members", "d": "7/2016"}, {"body": "like hear core team members interpret stefanpenner acknowledgement", "d": "7/2016"}, {"body": "please add example query parameters needed imho query parameters related model way place use", "d": "7/2016"}, {"body": "freduk serabe curious transition class methods recommended use see nt expected hook access query params hook receive", "d": "7/2016"}, {"body": "freduk bug ember please reach community slack regarding use case working query params perhaps using model hook fine", "d": "7/2016"}, {"body": "thoov expected prototypes turned embera methods return regular arrays", "d": "7/2016"}, {"body": "expected intended provide methods byproduct intended", "d": "7/2016"}, {"body": "stefanpenner guess nt understand docs saying manually coerce native array array implements required interfaces using convenience method embera nt get simply calling one convenience methods removes object expected workflow fastboot users cant use prototype extensions cant rely embera", "d": "7/2016"}, {"body": "nt get simply calling one convenience methods removes object convenience returns fresh array would also need patched slow somewhat brittle leave extendprototypes fastboot believe app run fresh context issue performance hit constantly needing patch array instances", "d": "7/2016"}, {"body": "stefanpenner issue fastboot prototype extensions going rabbit hole converting way ember prototype extensions nt available array created najax response npm packages required root node vm creates new realms prevents requirements extended ember potential fix create require known realm bite people future using prototype extensions looks like heisenbug extensions available time depending origination objectarray better way handling chaining know embera embera embera best", "d": "7/2016"}, {"body": "depending referring behaviour documentation side", "d": "7/2016"}, {"body": "nathanhammond locks think moved guides repo think", "d": "7/2016"}, {"body": "know actual behavior supposed ca nt answer", "d": "7/2016"}, {"body": "current behavior seems make sense element modifier syntax words normal action binds action event basically discards event object calling callback syntax essentially assigning closure action function inline event handler typical dom behavior preserved callback receives event argument nt know intentional makes sense however seen trip lot people maybe add clarity around", "d": "7/2016"}, {"body": "zach would mind detailing implementation approaches clarity want make sure issue within scope thanks oli jul zack notifications githubcom wrote current behavior seems make sense element modifier syntax words normal action binds action event basically discards event object calling callback syntax essentially assigning closure action function inline event handler typical dom behavior preserved callback receives event argument nt know intentional makes sense however seen trip lot people maybe add clarity around receiving subscribed thread reply email directly view github mute thread", "d": "7/2016"}, {"body": "kricket looks like answer stack overflow also includes working example perhaps ask feedback embercommunityslackcom help channel binding nt change template nt update see", "d": "7/2016"}, {"body": "ah ok missed bit may ask specifically nt bind conceptually different", "d": "7/2016"}, {"body": "kricket listens inserts deletes replaces kinda like equivalent would performance sink parallel help", "d": "7/2016"}, {"body": "ok basically javascript makes easier listen en masse addremovemodify operations array elements object properties", "d": "7/2016"}, {"body": "make one flags symbol bit set every ref megamorphic miss starts add", "d": "7/2016"}, {"body": "chyxion feature suggestion question curious asked chat room", "d": "7/2016"}, {"body": "take look implementation queryparams write custom helper construct qp similar way javascript helpersconstructqpjs export function constructqueryparams params return emberobjectcreate isqueryparams true value params export default emberhelperhelper constructqueryparams", "d": "7/2016"}, {"body": "well feature suggestion ask issue know write custom helper think feature necessary thanks", "d": "7/2016"}, {"body": "hello chyxion thank suggestion repo emberjs bugs submit emberjsrfcs community discuss thank much", "d": "7/2016"}, {"body": "related", "d": "7/2016"}, {"body": "sourvb looks like add support looking thanks miguelcobain", "d": "7/2016"}, {"body": "pixelhandler see issue wycats problems adding feature maybe functionality addon cc runspired", "d": "7/2016"}, {"body": "thanks pixelhandler miguelcobain alternative solution", "d": "7/2016"}, {"body": "sourvb personally use would use tag could access dom needed mentioned requires fixing style issues also avoid style libraries prohibit build html apps get always case way use tagname fix style issue", "d": "7/2016"}, {"body": "sourvb see comment answer solution closing", "d": "7/2016"}, {"body": "ummm wat seems like browser bug", "d": "7/2016"}, {"body": "seems like browser bug would good get reduction unfortunately familiar enough ember stack track heisenbug like perhaps someone help", "d": "7/2016"}, {"body": "agreed need figure going randomly poking noticed alert right value js const sym symbol foo const class emberobjectextend alert classcreate sym bar bar", "d": "7/2016"}, {"body": "thanks krisselden minimal reproduction js var sym symbol foo var args sym bar function foo obj var arr return arr alert foo args var c c foo c c alert foo args function jits breaks", "d": "7/2016"}, {"body": "chrisjshull fixed least webkit nightly safari uses year old webkit version seem like something workaround jited code reads objects symbols safari seems fatally buggy nt understand symbol anyway enumerable therefor ignored create", "d": "7/2016"}, {"body": "testing latest safari tech preview still seems issue opening dev tools works went heck tried latest webkit nightly saw fixed nightly regressed", "d": "7/2016"}, {"body": "nt understand symbol anyway enumerable therefor ignored create ah perhaps overreduced problem originally hit reopenclass like since brought though symbols nt work thru create test case working fine chrome documented somewhere nonenumerable types nt supported nt lack support bug plain es classes support js const sym symbol foo class foo sym consolelog hello public thissym new foo public logs hello let know file follow issues", "d": "7/2016"}, {"body": "chrisjshull rwjblue ember specific issue broader issue use correct closed issue opened webkit bug tracker", "d": "7/2016"}, {"body": "safari issue webkit works nothing ember", "d": "7/2016"}, {"body": "thank efforts issue since ember issue closing thank", "d": "7/2016"}, {"body": "understand issue please create repo twiddle shows failure scenario believe linked line code continue exist get bottom things need talking concrete scenarios", "d": "7/2016"}, {"body": "martinmalinda help us create repository runs permutations even ones added comments nobody ever ember cli autopopulated ember cli ember cli manually added set set nobody ever set different deserve get set unset nobody ever set different deserve get unset set one believe may bug unset unset", "d": "7/2016"}, {"body": "note load config values every time believe skirt possibility issue even light comment set different baseurl deserve get problem see rely upon value match value ember cli believe also magically includes things like strange buildtime side effects also know knows way better", "d": "7/2016"}, {"body": "problem see rely upon value match baseurl value ember cli believe also magically includes things like rooturl strange buildtime side effects ember concept embercli thing result specifying versions embercli emit sure mean matching", "d": "7/2016"}, {"body": "looking two places look like thing ember cli", "d": "7/2016"}, {"body": "ya location implementations honoring tag like native asset loading would internal property definitely public api general remove concept reading document starting routing unless want break existing embercli apps ember version break web", "d": "7/2016"}, {"body": "ember concept baseurl embercli thing result specifying baseurl configenvironmentjs versions embercli emit sure mean matching baseurl thought rooturl introduced since set directly router explicit fact router looking dom reading base tag quite counterintuitive thought point deprecating baseurl move gives freedom put assets different path without affecting routing url could break apps removed baseurl config file set base tag manually far know never recommended practice nt see reason anyone would delete baseurl config set base href value directly achieve exact effect nathanhammond try create repo later today place mentioned combinations individual branches since ca nt think different way efficiently atm", "d": "7/2016"}, {"body": "thought point deprecating baseurl move baseurl rooturl rooturl gives freedom put assets different path without affecting routing url remember correctly used primarily app routing much related assets use option assets deployed cdn want adjust paths", "d": "7/2016"}, {"body": "works well know path build time edge case nt know app served anyways repo summary ember cli manually added ember cli autopopulated ember cli ember cli manually added baseurl set rooturl set ca nt find assets baseurl set rooturl unset ok two tags ok ok ok two tags baseurl unset rooturl set error hard refresh ca nt find assets ok error hard refresh baseurl unset rooturl unset ok ok ok ok sure encountered bugs maybe error hard refresh rooturl set probably local server issue nt significant rooturl usually set production builds still think baseurl deprecated embercli reading tag could deprecated ember well could used future adjust path assets without affecting routing url structure previous usecases base used affect routing url format string could moved rooturl instead", "d": "7/2016"}, {"body": "martinmalinda incredibly grateful research done tremendous ever privilege meeting person drinks dive analyze later today", "d": "7/2016"}, {"body": "think need urgency think major bug hope repo useful anyway still skill level contribute core glad could help somehow", "d": "7/2016"}, {"body": "afraid still nt understand actual issue table thanks lot martinmalinda indicates everythings works designed supposed used time using still works ember cli versions using works ember cli using none options explicitly also works works well know path build time edge case nt know app served elaborate use case like understand trying come plan help thanks looking", "d": "7/2016"}, {"body": "yes sorry confusion initially misunderstood deprecating baseurl actually means thought also means reading ember deprecated well apparently believe closed reach slack particular use case later", "d": "7/2016"}, {"body": "imho probably deprecate presents us problem using ember version deprecated version ember cli option fix deprecation updating ember cli might artificial issue though probably relevant reality however wait ember cli stable release see issues come deprecating ember", "d": "7/2016"}, {"body": "however wait ember cli stable release see issues come deprecating ember sounds good", "d": "7/2016"}, {"body": "believe confirmed closed played around permutations going get wonky explain going people weird setups deal", "d": "7/2016"}, {"body": "code change caused looks like error jdalton said issue looks familiar able provide concise repo migrating test new test harness fixed issue", "d": "7/2016"}, {"body": "see repros dev tools open debugger attached", "d": "7/2016"}, {"body": "chancancode given beta time still issue thank", "d": "7/2016"}, {"body": "closed thu jul sergio arbeo notifications githubcom wrote chancancode given beta time still issue thank receiving mentioned reply email directly view github mute thread", "d": "7/2016"}, {"body": "removed call guides", "d": "7/2016"}, {"body": "found installing embercliemblem command lines changes run command changes towards emblem something trying find command ember generate route emblem command", "d": "7/2016"}, {"body": "real bug related embercli ember blush", "d": "7/2016"}, {"body": "hello saimonl thank reporting sadly happens adding even similar issue open repo vestorlyembercliemblem nt see reference embercliemblem linked guide one please let learning team know opening issue emberjsguides closing since bug ember addon thank report", "d": "7/2016"}, {"body": "want leave extra note since core package updates might drag bit using htmlbars recommended", "d": "7/2016"}, {"body": "thank guys yes htmlbars love haml", "d": "7/2016"}, {"body": "hello nullvoxpopuli seems like question emberjs bug please reproduce problem embertwiddle check problem framework twiddle using mockjax mock ajax calls looking help code please go help channel slack registered use slackin app thank", "d": "7/2016"}, {"body": "thanks try recreate twiddle", "d": "7/2016"}, {"body": "twiddle showing error console", "d": "7/2016"}, {"body": "might something polymorphic models", "d": "7/2016"}, {"body": "seems like emberjsdata accepts singularize relationships jsonapi identification might bug since emberjsdata related please move issue thank", "d": "7/2016"}, {"body": "posted", "d": "7/2016"}, {"body": "thank", "d": "7/2016"}, {"body": "hmm sure happened locks guess change caused", "d": "7/2016"}, {"body": "caused next styles api ulindexlist li display inlineblock", "d": "7/2016"}, {"body": "likely related closing one tracking issue", "d": "7/2016"}, {"body": "still issue ensuring latest deployed", "d": "7/2016"}, {"body": "done thanks tip romanperin recent pr introduced bourbon tweaked couple styles include overriding", "d": "7/2016"}, {"body": "oh realized emberjsemberjs repo apologize missing earlier issues website opened emberjswebsite repo instead", "d": "7/2016"}, {"body": "oh sorry mismatch also great thx quick fix", "d": "7/2016"}, {"body": "hallo serabe see first part twiddle reproduction try url unfortunately twiddle display error see console pc proposals avoid transition method application started url including route redirect endredirect", "d": "7/2016"}, {"body": "fknoll route default route could use make", "d": "7/2016"}, {"body": "hello fknoll see twiddle please provide twiddle problem looks like problem second comment different one original post get reproduce twiddle reproduce small project please upload github take look thank", "d": "7/2016"}, {"body": "fknoll reached help channel embercommunityslackcom chatroom curious may support need ember bug", "d": "7/2016"}, {"body": "returned short vacation apologize lack responsiveness insist initial finding using makes ember fail immediately later transition created reproducible scenario ember twiddle look code", "d": "7/2016"}, {"body": "pixelhandler thank much input appreciated understand proposal yes might simple usable workaround avoid default transition default transition including query parameters know handle scenario setting", "d": "7/2016"}, {"body": "fknoll controller set value eg setupcontroller route code ie change thisparamsfor routename routename route previously visited curious perhaps expect params available controller previously visited looking params application route params controller child route visited yet seems like issue subject putting cart horse suspect perhaps different implementation use case model method application route default values two query parameters found saved using hook child route lookup saved properties application route set controller ready", "d": "7/2016"}, {"body": "like submit pr appropriate locks fix made", "d": "7/2016"}, {"body": "lucasqiu documentation source code thanks interest", "d": "7/2016"}, {"body": "issue reopened behavior twiddle op differs slightly array got converted string immediately clicking initial works fine subsequent click transforms array string", "d": "7/2016"}, {"body": "stefanpenner issue done closed", "d": "7/2016"}, {"body": "thanks sukima", "d": "7/2016"}, {"body": "looks like problem nt solved yet asakusuma rwjblue get error log idea", "d": "7/2016"}, {"body": "miguelcobain provide failing test pr test supposed guard problem sounds like missing case", "d": "7/2016"}, {"body": "try come failing test ember meanwhile failing test emberleaflet component tested inherits case spot something odd", "d": "7/2016"}, {"body": "could reproduce problem twiddle click change value see error coming component tagless blockless templateless importance gavinjoyce provide failing test soon", "d": "7/2016"}, {"body": "coming version error consistently reproduce app building able set conditional breakpoint step process immediately error occurs happy screen share krisselden anyone else may input convinced create minimum test case may next best thing try explain problem happens case initially first iteration loop completes becomes therefore bounds second iteration happen let dig deeper toplevel call computed property called references model fragment first chainnode property within calls watched properties first property called calls key kicker within gets parent ie via prior call undefined within call evaluates computed property evaluation causing content change prior long story short object notifies properties observers changes object recomputed changes list observers questions may help us get bottom unexpected behavior chain watchers change due cp evaluation would assume observers determined ahead time cp evaluation would affect seems expecting list change would cause chain watchers change anything explicit calls outside ember internals thanks hope helps help anyone else give greatly appreciated", "d": "7/2016"}, {"body": "quick followup changed loop issue longer occurs may implications though app experience problem always equal see case would cause defect constant evaluation may performance regression would like think modern javascript engines optimized cache value array changed happy submit pr imagine may covering unexpected implementation issue happy help diagnose well even resolve issue maybe least method throw descriptive error understand root cause", "d": "7/2016"}, {"body": "looks like similar issue year ago different file fix similar suggested according conversation couple awesome core team members agreed guarded similarly pr way though sure maintained anymore knownasilya would submitting similar pr", "d": "7/2016"}, {"body": "sure look weekend", "d": "7/2016"}, {"body": "mixonic sethbrasile belive argument due using jquery selectors eg aside client helper would nt test helpers also use", "d": "7/2016"}, {"body": "locks acorncom guides show context arguement helper api docs see perhaps well api docs guides agree", "d": "7/2016"}, {"body": "attempt rwjblue suggestion", "d": "7/2016"}, {"body": "seems finally managed solve problem pointed rwjblue related poor management pattern changing seems fix amazingjaze seems tried without success think related broccolijscs cache leading strange behaviour see kellyseldenbroccolijscs cache also explains function appear running deleting reintalling seems fix maybe touching file enough embercliembercli run force genration containing jscs check results opened update regex pattern fix", "d": "7/2016"}, {"body": "closing merged let know issue persists reopen", "d": "7/2016"}, {"body": "confirmed fix thanks bmeurant rwjblue", "d": "7/2016"}, {"body": "looks like mentioned pr already resolved", "d": "7/2016"}, {"body": "kamilogorek merged concern performance", "d": "7/2016"}, {"body": "cibernox main issue tests passing travis mentioned performance tom already approved small performance decrease tests passing well good merge", "d": "7/2016"}, {"body": "believe may facing issue justinhackin wherein set property component result successfully ca nt get change runtime making computed property thus sure rely property ca nt successfully bound one model values property called case per component using designed support databinding markdown content perlun intending originally well whole larger topic best standardsaware way without creating xss vulnerabilities aside nt seen addressed community yet import ember ember export default embercomponentextend store emberinjectservice layout embercomputed markdown function var converter new showdownconverter var regex az gi var match", "d": "7/2016"}, {"body": "ember later possible change layout component initially renders", "d": "7/2016"}, {"body": "rwjblue thanks clarification although bummer plan reintroduce rationale missing sure regenerate layouts based model data two different blog posts sharing route components example unless blow away previous layouts generate anew krisselden seems laid strategy hard time following sure directly addresses use case start thanks", "d": "7/2016"}, {"body": "perlun bug closing suggest alternative solution perhaps using helper components templates dynamically chosen", "d": "7/2016"}, {"body": "reason happening due interaction case object options passed set passed receives argument uses present possible fix would check clause given change upstream method set passed present", "d": "7/2016"}, {"body": "dguettler amazing decided work bugs today looking came conclusion created pr fix w failing test", "d": "7/2016"}, {"body": "get different label fix merged master", "d": "7/2016"}, {"body": "nope closed forgot thanks yalls hard work", "d": "7/2016"}, {"body": "think done see remaining edgecases", "d": "7/2016"}, {"body": "stefanpenner still reproduce ember report back embertwiddle time", "d": "7/2016"}, {"body": "update blocked embertwiddle issue", "d": "7/2016"}, {"body": "thanks stefanpenner able get twiddle nt able fully init component runtime error module nt time try squash bug today hopefully within next week", "d": "7/2016"}, {"body": "foxnewsnetwork agree rwjblue ember conventions developers count changing way become dynamic sounds like debugging headache making way define routes need associated templates close want continue discussion please create rfc issue pr", "d": "7/2016"}, {"body": "anchor tag nt disabled attribute nt seem disabled even disabled properly added attribute link set open new window target blank nt think anything ember even one workaround add pointerevents none css disabled link", "d": "7/2016"}, {"body": "going close favor using work around", "d": "7/2016"}, {"body": "think done", "d": "7/2016"}, {"body": "thank everyone", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "still reproduce following route hook", "d": "7/2016"}, {"body": "hmm still getting issue", "d": "7/2016"}, {"body": "fixed beta merged", "d": "7/2016"}, {"body": "please test confirm yes believe", "d": "7/2016"}, {"body": "ok test released ca nt upgrade coz project version close release", "d": "7/2016"}, {"body": "added assertions tests added ensure regress future", "d": "7/2016"}, {"body": "even facing issue update", "d": "7/2016"}, {"body": "dhawalbhanushali please take look comment", "d": "7/2016"}, {"body": "krisselden still issue ember long gone", "d": "7/2016"}, {"body": "serabe issue infinite sync loop one run loop suggestion keeping count renders one run loop think still applicable close issue", "d": "7/2016"}, {"body": "beta got press link page two get closing since looks like fixed", "d": "7/2016"}, {"body": "recommendations fixes using remote paginated api", "d": "7/2016"}, {"body": "chancancode please give update close longer needed thank", "d": "7/2016"}, {"body": "chancancode perhaps needs closed reopen necessary work begins", "d": "7/2016"}, {"body": "sorry nt remember context suspect fixed", "d": "7/2016"}, {"body": "seeing something similar different situation ember array qp applicationcontroller certain situations array comes back serialized ie string instead array", "d": "7/2016"}, {"body": "pixelhandler", "d": "7/2016"}, {"body": "danmcclain seems related versions ember close please reopen think still issue", "d": "7/2016"}, {"body": "acorncom mixonic issue leaves us dead water terms upgrading app one cornerstones application view creates dynamic components attributes bound correctly parallel effort upgrade application correct way create components using combination component helper etc given using components slog really like get asap install addons rely blocker us current implementation follows render function buffer var parts get datatorender parts partslength return think way accomplish functionality render function refactored help would much appreciated cheers", "d": "7/2016"}, {"body": "ouch sounds painful familiar older views approach much help code front point core team shifted priorities ember doubt able much far changing code unless mixonic ideas think best bet might ask question ember community slack either get advice folks experience stuff", "d": "7/2016"}, {"body": "issue still happening beta still looks like looked like", "d": "7/2016"}, {"body": "anyone running across warning example deal documentation alludes method think pseudo code ca nt find anywhere image model elementslider component template", "d": "7/2016"}, {"body": "lmcardle merged think help since rsvp separate library nt think api docs publish use emberrsvp rather include rsvp docs instead rsvp shows instead emberrsvp close think could room info using promises guides", "d": "7/2016"}, {"body": "related documentation improvement proposed", "d": "7/2016"}, {"body": "stefanpenner could please elaborate quite frustrating computed property update dependent value changed deprecating entirely", "d": "7/2016"}, {"body": "gregwym file new bug one exists", "d": "7/2016"}, {"body": "flyswatter exact problem also loadinghbs fix", "d": "7/2016"}, {"body": "use local loading hbs files root level one", "d": "7/2016"}, {"body": "flyswatter mean create loading every single route", "d": "7/2016"}, {"body": "want loading appear subroute loading template subfolder global loading template replace whole view loading", "d": "7/2016"}, {"body": "want loading appear routes changing query params", "d": "7/2016"}, {"body": "could ol nt reloaddata route level changing query param hack request controller ember happy path far understand believe may also undocumented router method could override like onqueryparamchange something nt used ember months little hazy dan jul pm williamweckl notifications githubcom wrote want loading appear routes changing query params receiving mentioned reply email directly view github mute thread", "d": "7/2016"}, {"body": "found method basically route refresh trigger loadinghbs clues could change model filter api without calling refresh", "d": "7/2016"}, {"body": "little far behind sorry nt even access code wrote anymore good luck dan jul pm williamweckl notifications githubcom wrote found method queryparamsdidchange basically route refresh trigger loadinghbs clues could change model filter api without calling refresh receiving mentioned reply email directly view github mute thread", "d": "7/2016"}, {"body": "ok thank anyway", "d": "7/2016"}, {"body": "nichoth docs greatly improved since created issue ember data please reopen still issue related docs", "d": "7/2016"}, {"body": "toddjordan locks closing seems relevant", "d": "7/2016"}, {"body": "ember fires multiple time even nothing changed thats additionally compare old new queryparams values js queryparamsdidchange function b compare prevent refresh nothing changed apage bpage amp amp aselectionid bselectionid amp amp asort bsort amp amp asortdirection bsortdirection return", "d": "7/2016"}, {"body": "update still ca nt click link show debbuger chrome", "d": "7/2016"}, {"body": "addressed", "d": "7/2016"}, {"body": "thanks allthesignals helpful solution", "d": "7/2016"}]