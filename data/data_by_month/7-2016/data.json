[{"title": "called twice", "body": "trying test simple react component using materialui jest stuck looks like calls actual application imported somewhere within materialui module turn imported component code may really bug react per se though one could imagine dependencies somehow loading well causing issue created testcase may provide context", "num": "7386", "d": "7/2016"}, {"title": "binding react", "body": "recently read article medium binding react basically explaining bind functions inside constructor stateful components prevent unnecessary rerenders component shows using arrow function causes function creation spot makes seem like new props received continuously even may bad prevents optimizations according article great know bind constructor binding methods parameters calling stateful stateless components say theres something like following js using stateful components class something extends reactcomponent constructor super thisdosomething thisdosomethingbind dosomething take return take using stateless components function something props throws error call evaluates immediately number function makes sense way around able go around using arrow function run cause unnecessary rerenders article explained could better prevent unnecessary rerenders stateless stateful components", "num": "7385", "d": "7/2016"}, {"title": "implicit returns method", "body": "name bos return fullnames return without using return fullnames", "num": "7384", "d": "7/2016"}, {"title": "add text view components", "body": "default rendering span div browser small change enable universal react components badly need next step port stylesheet browser allow style accept need start", "num": "7382", "d": "7/2016"}, {"title": "write docs reactpurecomponent", "body": "need least update top level api page consider writing something cc spicyj", "num": "7379", "d": "7/2016"}, {"title": "investigate ci failed add file ghpages", "body": "reason failed detect commit new file presumably dirtystate detection failed nt happen previous build also changed files added new ones maybe helped trigger done couple builds jekyll amp new travis container could related", "num": "7378", "d": "7/2016"}, {"title": "jsx shorthand property syntax", "body": "hello searched similar issues nt found one sorry duplicate let say following component code forwarding properties could less verbose shortcut syntax aware spread operator comfortable sometime example nt want revalidate property changed", "num": "7376", "d": "7/2016"}, {"title": "ie bug svg", "body": "hi reccently updated project react issue svg use svg sprites get icon like use crossbrowser support updaiting react started throug exception ie x reactid understand exception fires plugin wich replacing inner polyfill page loads react ca nt find use exeption workaround came react dose nt include virtual dom ca nt complaint better way case rewrite whole lot svg icons", "num": "7375", "d": "7/2016"}, {"title": "way return raw html unmounted component", "body": "asked question seems way use must mounted component first like feed raw html plugin like linked question also like avoid jquery way mount component raw html sure called consolelog html element chrome outputs html sort native html object way imagine using element still mounted", "num": "7374", "d": "7/2016"}, {"title": "bound function access thisrefs", "body": "seemed function bound class longer access see following simple case works nt would expect two behave idea javascript import react component proptypes react export default class sample extends component", "num": "7373", "d": "7/2016"}, {"title": "react automatically remove vendor prefix inline style", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior react render css vendor prefix versions react browser os affected issue work previous versions react tried result", "num": "7372", "d": "7/2016"}, {"title": "reacttestrenderer nt work refs reactdomfinddomnode", "body": "jest snapshot testing uses reacttestrenderer component contains ref uses throws component js import react react export default class link extends reactcomponent render return test js use strict import react react import link link import renderer reacttestrenderer describe link gt renders correctly gt const tree renderercreate tojson stack trace", "num": "7371", "d": "7/2016"}, {"title": "data keyed list mangled unpredictably", "body": "going close issue immediately since nt reproducible test case hit issue exactly know code simple suspect react bug may cause hoping documenting might help someone else stumbles across future want request feature report bug report bug reduced code sample javascript const states alabama al alaska ak arizona az arkansas ar etc class extends reactcomponent render return thisrenderregionfields renderregionfields return country objectkeys states map thisrenderregionoptionsbind renderregionoptions key const abbreviation states key referring module anywhere else application ie pretty certain mutated accidentally expected behavior list states list twoletter state abbreviations order al ak az current behavior list states intermixed unknown data ends looking something like notably nt strings allcaps anywhere codebase nt look like react either versions react browser os affected issue work previous versions react react chrome osx", "num": "7370", "d": "7/2016"}, {"title": "allow disable tag prop warnings", "body": "applies curious first would cause problems theres strong reason allowing people disable warnings would disagreeable would open alternative solutions problem props used lifecycles hoc often render class child componentwillmount something thispropsotherprop render const children props thisprops otherprop gets passed causing error destructuring leaves unused variable render nice either initial thought create helper filters event props verbose potentially heavy lots lookups guess second thought could patch reactcreateelement seems bit hacky well nt see much downside passing props elements though guess could see dangers", "num": "7368", "d": "7/2016"}, {"title": "request toplevel api allow context passing", "body": "hi know context flagged experimental feature hence missing toplevel api find pass context legacycompatible component allow context setting causing hack context cases something like mixin something could looked thanks", "num": "7367", "d": "7/2016"}, {"title": "questions movies react help", "body": "use strict var reactnative require reactnative var stylesheet reactnative var maxvalue import type styleobj stylesheettypes question stylesheettypes come question styleobj function getstylefromscore score number styleobj score lt return stylesnoscore var normalizedscore mathround score maxvalue return color rgb maxvalue normalizedscore normalizedscore var styles stylesheetcreate noscore color moduleexports getstylefromscore could help thank much", "num": "7366", "d": "7/2016"}, {"title": "handle externally injected elements replacedelimitedtext", "body": "mostly preemptive talked right render external tool bolds like entire string bolded updated react first element kept called would say makes sense throw elements away case start scratch perhaps check node type also throw away nt textnode", "num": "7363", "d": "7/2016"}, {"title": "inline svgs rendering ie", "body": "process upgrading project react strangely inline svgs stopped rendering ie upgrade screenshots well svg elements example little red alert icon renders fine ie old react missing new react old react svg element alert icon appears html appears html new react got element missing elements want see action put bogus emailpassword following urls ie old react new react ideas could causing note little g icon google button also inline svg yet renders fine versions react", "num": "7358", "d": "7/2016"}, {"title": "electron webview tag throws unknown property warnings", "body": "electron adds new html tag webview since tag registered via internaltoblink methods nt follow standard web component rules ie name must good place add tag properties list valid properties pr maintainers would willing approve gate electron wo nt affect web apps without pr impossible use attribute react", "num": "7357", "d": "7/2016"}, {"title": "becomes unresponsive updating element inside svg", "body": "bug reproduced ui become unresponsive first update element visit clicktoggle button works fine chromefirefox ie browser becomes unresponsive first click error thrown able reproduce versions windows modernie editions", "num": "7355", "d": "7/2016"}, {"title": "possibility return multiple elements render", "body": "seen extension asking light would possible return array multiple elements maybe strings currently already possible return array mix elements amp strings block jsx could commentwrapping method allow also render methods js hello elementsmap elem gt elem hello motivation sometimes hard get layout work expected one wrap list elements element alternative write plain functions instead react components produce expected result would syntactically nice able componentize multipleoutput components", "num": "7354", "d": "7/2016"}, {"title": "possibility return pure text render without wrapping element", "body": "asking light would possible also return plain text alternative current return type one would wrap element could commentwrapping method allow also render methods motivation sometimes hard get layout work expected one introduce span elements alternative write plain functions instead react components produce expected result would syntactically nice able componentize textonly components way htmlenabled components", "num": "7353", "d": "7/2016"}, {"title": "respect autocomplete values", "body": "bug currently react transforms non value given property example jsx rendered html besides obvious case also semantic detail values valid part spec values passed property respected left alone tested react", "num": "7352", "d": "7/2016"}, {"title": "thistransferpropsto function", "body": "hi help uncaught typeerror thistransferpropsto function react", "num": "7351", "d": "7/2016"}, {"title": "babelnode reactcomponenttreedevtooljs causes reactdomserverrendertostring fail", "body": "following serverside react tutorial encountered runtime error caused reactcomponenttreedevtool specifically purgedeep function seems problematic certain conditions reactlibreactcomponenttreedevtooljs line user code stack trace offending code resolution adding check undefined childids traversal reactlibreactcomponenttreedevtooljs line resolves issue see additional os os x yosemite node run babelnode via babelcli let know additional information provide eg dev dependencies thanks", "num": "7350", "d": "7/2016"}, {"title": "expect componentdidmount timer start render timer still progress another instance", "body": "sure filed bug intended behaviour case would feature request something lost since last versions specific error logging since last version error shows many times without usable stacktrace mainly occurs prop state defined would nt big problem could stacktrace case lead back related component go changed last use stacktrace go back createstore connect related since error shows regardless element undefined property also often accompanied debug error plans improve", "num": "7349", "d": "7/2016"}, {"title": "zindex interaction", "body": "say html put targetcomponent top components impossible interact change order implementation like html come top components something like zindex interaction problem way react works", "num": "7346", "d": "7/2016"}, {"title": "higherorder components reacting change props", "body": "trying implement basic filtering functionality using higherorder components hoc looks like filterjs import react component react export default function filter filteredcomponent return class filtercomponent extends component constructor props super props however typing input element generatelist method called tried using get triggered well though happily passing props search component component using props searchresultsjs import react react const searchresults props gt const listdata propsfilteredlistmap item gt item return search results export default searchresults corresponding container searchresultscontainerjs import connect reactredux import searchresults componentssearchresults import actions import filter enhancersfilter const getsearchterm state gt statesearchterm undefined statesearchterm const mapstatetoprops state gt return searchterm getsearchterm state currencylist statecurrencylist const mapdispatchtoprops dispatch gt return setsearchterm e gt dispatch asetsearchterm etargetvalue const searchresultscontainer connect mapstatetoprops mapdispatchtoprops searchresults export default filter searchresultscontainer", "num": "7345", "d": "7/2016"}, {"title": "stop using imgur images blog post", "body": "using imgur image hosting put site like previous posts making sure maintain control also ensure images served https nt currently could fix updating img srcs probably host anyway", "num": "7337", "d": "7/2016"}, {"title": "documentation links documents text wrong", "body": "want request feature report bug bug current behavior error current behavior bug please provide steps reproduce possible minimal demo problem via similar template open page docs like one click link like see error page expected behavior correct link versions react browser os affected issue work previous versions react problem occurs many doc pages since file names changed include numbers guess", "num": "7334", "d": "7/2016"}, {"title": "use testutilssimulate component created testutilsrenderintodocument", "body": "upgraded react existing tests begun failing due issue apparent cause components created testutilsrenderintodocument tagname therefore testutilssimulate recognise components leaves node null jsfiddle repro", "num": "7331", "d": "7/2016"}, {"title": "ie edge longer prompt remember password controlled form", "body": "want request feature report bug bug regression ieedge current behavior react gt edge prompt user save password form steps reproduce react react expected behavior browser prompts user save password form versions react browser os affected issue work previous versions react react gt worked react ie edge", "num": "7328", "d": "7/2016"}, {"title": "svg react component animating", "body": "seeing issue svg inside react class class follows var react require react var headerloader reactcreateclass render function return moduleexports headerloader renders svg fine path elements nt animating react react dom thanks", "num": "7327", "d": "7/2016"}, {"title": "warn someone using shadydom react", "body": "probably emit warning someone using shadydom instead shadowdom react since cause things break subtly", "num": "7325", "d": "7/2016"}, {"title": "optimizing compiler compiling internals", "body": "optimization renderer specific optimization knowing react process particular component internals inlining internal work user code comes two flavors known host component js function foooptimizedmount props propsdatatype img var img documentcreateelement img imgclassname propsclassname imgsrc propsdatasrc return node img listeners reacteventlistenerstrap img error load var span documentcreateelement span spanclassname propsclassname var children reactchildrenmountnestedchildrenintoparent thispropschildren span return node span children function foooptimizedupdate instance oldprops newprops oldpropsdatatype newpropsdatatype foooptimizedunmount instance return foooptimizedmount newprops propsdatatype img imgclassname propsclassname imgsrc propsdatasrc return instance spanclassname propsclassname reactchildrenupdatenestedchildreninparent thispropschildren instance return instance function foooptimizedunmount instance oldpropsdatatype newpropsdatatype foooptimizedunmount instance return foooptimizedmount newprops propsdatatype img reacteventlistenersrelease instancelisteners reactchildrenunmountnestedchildreninparent instance composite components similarly composite components pick different code branches imperatively update children example known constant value would nt considered comparison single property potentially bail tree although unclear significant benefits two optimizations", "num": "7324", "d": "7/2016"}, {"title": "optimizing compiler component folding", "body": "like final frontier react never really wrote anything figured create issue basically idea utilize information react works constant folding inlining components certain conditions example source knowing foo classes made turn bar component deadcode elimination strips bunch different cases needs bail example need know object object immutable need infer immutable using escape analysis classes bail cases even complex problem current js infrastructure particularly bad kind whole program whole package linking node nt notion per package private modules anything mutate anything default transpilers babel set work single file time nt access source files analysis rollup closer limited small set static primitives however smarter compilers become prevalent js world find ways hack around limitations start building smarter compiler optimizations", "num": "7323", "d": "7/2016"}, {"title": "ie member found", "body": "catch member found exception react input onchange syntheticevent eventcancelbubble true line", "num": "7320", "d": "7/2016"}, {"title": "react polymer child properly rendered web component", "body": "want request feature report bug looking report bugclarify following problem upgraded react found web components rely embed html elements working used react component example usage react component test current behavior resulting dom looks followings test problem button getting correctly selected web component embed place problems getting react polymer working jsfiddle together try create demo problem add expected behavior react dom properly rendered looked like following resulting dom looks followings test versions react browser os affected issue work previous versions react worked react work expected react polymer version used versions react", "num": "7318", "d": "7/2016"}, {"title": "reactcsstransitiongroup transitiontimeout props required undocumented", "body": "used without timeout props warns warning failed proptype transitionleavetimeout nt supplied reactcsstransitiongroup cause unreliable animations wo nt supported future version react see information check render method missing timeout prop however url simply points getting started section animation page code listed use timeout props nothing page explains props necessary fact word timeout appears names props code examples could get explanation docs please", "num": "7317", "d": "7/2016"}, {"title": "facing problem react webpack installation", "body": "followed steps npm install save react reactdom babelpresetreact babelloader babelcore webpack mainjs bundlejs modulebind jsbabelloader got error like shared screen please solve proper installation guide react redux amp webpack", "num": "7315", "d": "7/2016"}, {"title": "", "body": "", "num": "7314", "d": "7/2016"}, {"title": "request optional strict validation valid attributes react native renderer", "body": "want request feature report bug feature request current behavior consider code pass invalid properties node simply skipped expected behavior would like warning using illegal property understood would make much easier determine property trying set taking effect eg misspelled property name property actually nt exist type trying set think looking assert check runs dev true would probably configurable support existing code sets invalid properties nodes turn strict attribute validation default happy put pr add nt see configuration react native renderer code could add property eg versions react browser os affected issue work previous versions react", "num": "7310", "d": "7/2016"}, {"title": "make createelement undefined warning descriptive", "body": "update claimed jin see mistype import useful provide better message cases caused invalid import create page explaining common cases could happen eg mismatching defaultnamed export forgetting export component importing nonexisting named export link page warning", "num": "7307", "d": "7/2016"}, {"title": "proptypes informative warning createelementtypechecker", "body": "want request feature report bug enhancement current behavior element type checker informative ones expected behavior would nice provide actual type prop passed similarly type checkers ie instead invalid prop supplied expected single reactelement say invalid prop type supplied expected single reactelement versions react browser os affected issue work previous versions react seeing think also applicable previous versions know general intention move away prop types nt specific reason current behavior look making pretty", "num": "7302", "d": "7/2016"}, {"title": "updating react reactflexboxgrid throwing lots similar warnings", "body": "want request feature report bug unknown props tag current behavior unknown props tag remove props element details see div created col col created index div created row row created index div created index div created index index created connect index connect index created reactrouterproxy reactrouterproxy created routercontext div created template div created template div created template template created reactrouterproxy reactrouterproxy created routercontext routercontext created router router provider current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7301", "d": "7/2016"}, {"title": "highlight element failed checksum", "body": "moment serverrendered markup nt match clientrendered markup big red error shown difficultimpossible locate element occurred would something logged offending element console considered pull request", "num": "7300", "d": "7/2016"}, {"title": "help getting rid use case timermixin react native", "body": "want request feature report bug help request current behavior want replace react native something else given dan talked downsides using mixins still find solution use case", "num": "7298", "d": "7/2016"}, {"title": "working correctly chrome", "body": "work correctly chrome user type decimal point point disappear caret reset beginning input keep typing twice value input disappear however input defaultvalue seems work fine put together fiddle page demo bug think something internal state management uncontrolled component first typed get chrome may trimmed unnecessary value type react pushing back input causing disappear caret position reset two typed value longer valid number chrome may return causing input reset", "num": "7297", "d": "7/2016"}, {"title": "nwjs app file type onchange event nt fire", "body": "use react node webkit application update react reactdom nt changed code onchange event fire error console log help appreciated", "num": "7295", "d": "7/2016"}, {"title": "attributes html element", "body": "hi new react wanted implement simple feature need accesses html element properties rendered example html code want access mydata mycustomobject two instances rendered different data think possible set attributes mycustomobject replacing div found documentation right thank", "num": "7294", "d": "7/2016"}, {"title": "license clarification", "body": "good morning came across blog post says bsd license react terminated react user competes facebook per patent clause addition seems lot confusion around clause actually means wondering might consider adding tl dr summarizing clause motivation readme would clear lot confusion let everyone focus building cool stuff thanks update maintainers worked legal team post faq addressing common misconceptions", "num": "7293", "d": "7/2016"}, {"title": "checkbox attribute unnecessarily removed dom every render", "body": "want request feature report bug bug current behavior rendering list controlled checkboxes causes reconciler unnecessarily update add remove attribute every render regardless whether value changed table rows needs add highlighted class rows based user interaction another part screen expect table renderer would get called every interaction seeing render times perf tool dug looks like every render reconciler removes checked attribute see jsfiddle attribute row datum never changes always false extracting rows component using fixes slowness seems like bug current behavior bug please provide steps reproduce possible minimal demo problem via similar template two jsfiddles demonstrating issue minimal repro full repro expected behavior reconciler nt touching dom attributes nt changed versions react browser os affected issue work previous versions react mac osx chrome safari firefox react version", "num": "7290", "d": "7/2016"}, {"title": "reactdomcomponenttreeprecachenode triggers render", "body": "react trying optimize application serverside rendering using problem react browser always triggers render methods components even root since page quite big results seconds lag javascript arrives scrolling frozen interestingly happens chrome firefox safari tried track react source returns true mounting jumps looks good still getting initial rerenders expected behavior ca nt find detailed explanation works could provide working example tips prevent initial lag thank", "num": "7289", "d": "7/2016"}, {"title": "docs request adding support new html elements", "body": "eg", "num": "7288", "d": "7/2016"}, {"title": "discussion state immutable default", "body": "taking hard perspective redux component state immutable default would much overhead react side note possibly previously addressed topic nt immutable default realize immutability helpers man syntax hard eyes much sugar vinegar also know section immutabilityjs advanced performance page nt address directly clear least setstate docs whether react already handles returns object containing keys update sorry sidebar wanting get confirmation either way", "num": "7287", "d": "7/2016"}, {"title": "pass parameter click event binding constructor", "body": "binding class constructor like class header extends component constructor props super props thisdosometing thisdosometingbind dosometing id consolelog id write code render onclick gt thisdosometing id right", "num": "7285", "d": "7/2016"}, {"title": "input onchange triggered every time epreventdefault used", "body": "input onchange triggered every time epreventdefault called onchange handler occurs typing fast characters lost react amp", "num": "7281", "d": "7/2016"}, {"title": "oninput firing contenteditable div", "body": "using event event fired work chrome microsoft edge also reproduces react nt seem regression see reproduced maybe related jquense", "num": "7280", "d": "7/2016"}, {"title": "todoapp example main page", "body": "main page stands jsx var todolist reactcreateclass render function var createitem function item return return thispropsitemsmap createitem var todoapp reactcreateclass getinitialstate function return items text onchange function e thissetstate text etargetvalue handlesubmit function e epreventdefault var nextitems thisstateitemsconcat text thisstatetext id datenow var nexttext thissetstate items nextitems text nexttext render function return todo add thisstateitemslength reactdomrender mountnode let look element reason declare inside function would suggest declare function inside function suggestion jsx var todolist reactcreateclass createitem function item return render function think ps sorry could nt find better place post idea", "num": "7279", "d": "7/2016"}, {"title": "colors", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7276", "d": "7/2016"}, {"title": "chrome debugger causes event listeners skipped", "body": "browser chrome mac react component includes function component renders among things functions props unexpected behavior without breakpoints chrome debugger functions run correctly however breakpoint introduced method function entirely skipped sure intended consequence synthetic events reused seems unexpected steps reproduce jsfiddle open dev tools note never runs comment note runs", "num": "7271", "d": "7/2016"}, {"title": "microsoft edge textinput event fires twice ctrla selection keypress crashes draftjs", "body": "issue discovered building editor draftjs see original issue filed edge provides textevent still useful disabling canusetextinputevent react edge fixes draftjs issue reproduce bug draftjs go type hit enter type ctrla select everything type j get javascript error editor actually reactdomcomponent confused state dom component react component points prematurely removed", "num": "7269", "d": "7/2016"}, {"title": "improve warnings refs functional components runtime docs", "body": "trouble get working one composite components inline ref function always called mount unmount like thats statelessfunctional component react print warning one tries use stateless components", "num": "7267", "d": "7/2016"}, {"title": "unknown prop warning ignore undefined", "body": "emitted even property value perhaps treated existing perhaps intended afaik", "num": "7266", "d": "7/2016"}, {"title": "support referrerpolicy attribute", "body": "referrerpolicy defined whatwg html eg elements also see", "num": "7263", "d": "7/2016"}, {"title": "react redux sortable problem", "body": "hello trying sort list elements unique key aplication based react redux sorting using works really good save sort order redux store store changes triggers rerendering elements swap back previous positions probalbly react detect sortable already made change dom works well use mathrandom keys really like avoid force react detect keys displayed list already changed order", "num": "7262", "d": "7/2016"}, {"title": "add dependency ci checks", "body": "dependency ci new service checks status projects dependencies post commit able read dependencies packagejson checks dependencies various metrics eg deprecated unmaintained check license current behavior currently adding updating dependencies check manually expected behavior enabling could give additional metrics dependencies project free fast need integration signing github giving access repo enabling switch large open source repositories like mozilla servo already enabled", "num": "7261", "d": "7/2016"}, {"title": "error messages omitting relevant components displayname", "body": "please forgive appears like rant feature request searched ca nt find explanation error messages displayed without component responsible driving insane every component project explicit specified debugging rendering bunch immutable props changed one prop types see warning using maps children yet fully supported experimental feature might removed convert sequence iterable keyed reactelements instead obviously missed something could easily fixed knew even component name message frustrating taunting know problem wo nt tell feel makes infuriating looking stacktrace behind useless well usual neverending list react function calls mention source files spent countless time hunting errors like would taken moments knew name component responsible would infinitely helpful field appeared debug output", "num": "7257", "d": "7/2016"}, {"title": "react state set set object", "body": "like following code want change set use following code change state directly official note", "num": "7256", "d": "7/2016"}, {"title": "bug backspace input type number behaves badly blink", "body": "appears introduced new chrome version ca nt find reference affectedtested browsers os x chrome opera unaffected browsers safari firefox backspacing input element set causes odd behavior decimal point gone ca nt easily readded example example simply backspaced twice second backspace expect showing input instead reads cursor moved beginning next two jumps attempts add another decimal point fiddle tested react notes occurs set neither set input behaves properly currently working around issue unfortunately setting input value via ref", "num": "7253", "d": "7/2016"}, {"title": "attributes properties custom components", "body": "want request feature report bug feature current behavior custom component properties always set attribute expected behavior maybe react watch static property custom elements decide set attribute instance property otherwise objects array could always passed properties order avoid", "num": "7249", "d": "7/2016"}, {"title": "component specs document nextcontext parameters", "body": "including contexttypes adds parameter signature several component lifecycle functions documented two locations anyone attempting implement plugin react nt made use context would unlikely consider extra parameters since documented slightest componentspecs page leading hardtofind bugs please consider updating reference context parameters", "num": "7244", "d": "7/2016"}, {"title": "expand border style property", "body": "current behaviour passedin style property would translated want shorthand style property remained unexpanded outlook dose support style properties like borderwidth bordercolor etc also found expanding operation react done configurable ideas thanks advanced", "num": "7243", "d": "7/2016"}, {"title": "custom properties set style objects", "body": "using css custom properties inline styles react logs following console dev mode demo logged importantly warning though styles applied elements client side dev production applied server rendering maybe initial client render client side elements taken dom put back state changes see info affects chrome react", "num": "7241", "d": "7/2016"}, {"title": "missing react element debugid warning testing components jest", "body": "want request feature report bug report bug current behavior testing components shown calling current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior according internal warning nt displayed versions react browser os affected issue work previous versions react react reactaddonstestutils reactdom nt receive warning", "num": "7240", "d": "7/2016"}, {"title": "page found", "body": "found want use jsx guide shows set compilation", "num": "7239", "d": "7/2016"}, {"title": "hey", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "7237", "d": "7/2016"}, {"title": "date input defaultvalue regression", "body": "chrome browser webview android defaultvalue specified show defaultvalue react works tested multiple devices including tablets phones phone works ok chrome desktop browser react react additionally tap blank date field select date defaultvalue set leaves field blank onchange event triggered test case inspecting elements rendered android device via chrome devtools version renders version renders value element also affects possibly types tested date time", "num": "7233", "d": "7/2016"}, {"title": "unit test failures react", "body": "bug unit tests using shallow rendering fail typeerror read property onsetdisplayname null ca nt seem get testutils jsfiddle build output code snippet import expect expect import testutils reactaddonstestutils import react react import blurinput beforeeach function props value onchange function expectspyon props onchange let renderer testutilscreaterenderer rendererrender instance getinstance renderer componenttree renderergetrenderoutput reflects value underlying input function expect componenttreepropsvalue tobe expect instancestatevalue tobe expected behavior unit test run normally versions react browser os affected issue work previous versions react issue", "num": "7231", "d": "7/2016"}, {"title": "show", "body": "report bug enable react tab developer tools react chrome", "num": "7228", "d": "7/2016"}, {"title": "performance regression removing rows large table", "body": "javascript frameworks benchmark ran performance regression react reproduce open reactjs version open console repeat three times following click create click clear get result like runlots took clear took runlots took clear took runlots took clear took repeat reactjs get something like unlots took clear took runlots took clear took runlots took clear took measurement chrome macos mbp notice clear lot slower first two runs react v third clear run performs react versions source code found repository benchmark", "num": "7227", "d": "7/2016"}, {"title": "deprecation warnings production", "body": "want request feature report bug feature current behavior warnings stripped production build current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior ideally important warnings production namely ones either indicate something broken definitely broken next major version upgrade react react could provide function register callback would called every warning prod callback would responsible whatever wanted eg capturing stack trace amp reporting error server since working react know supported hacked version unfortunately ended split across commits since nt test well pushing implements callback registration main hook next two bugfixes diff got warnings wanted react hack keep stuff debug build really trying use prod exact details nt important give idea flavor things looking broken next version almost certainly bad bug ideally system would also make use new error codes keep warning messages weighing prod build react version since highly selective warnings kept potential save stripping messages anyway might worth effort unless choose keep significantly warnings prod versions react browser os affected issue work previous versions react", "num": "7224", "d": "7/2016"}, {"title": "feature connection react view rctbridgemodule", "body": "connection reactview rctbridgemodule since want create ads like canvas ad facebook find rctbridgemodule callback reactview", "num": "7223", "d": "7/2016"}, {"title": "firefox hack leaky without noop", "body": "want request feature report bug bug current behavior right react provides crossbrowser workaround event firefox selectionchange event nt fire react hacks around evaluating selection smart however nt added handler component part selection listening hack firefox wo nt ever fire means happen something changes selection wo nt caught expected next time fires handler triggered via part hack since react thinks selection changed example place cursor end sentence fires thanks updates selection last character handle deleting character preventing default nt fire change nt taken place yet expected updates selection another character handle deleting another character fires thanks internal state comparing selection updated date expected add noop handler problem goes away since always fire rendering thanks never fire incorrectly due example draftjs onkeyup handler actually nt anything except without handling would nt stay sync firefox expected behavior ideally think event hack would still fire even without developer add noop component versions react browser os affected issue work previous versions react react firefox", "num": "7222", "d": "7/2016"}, {"title": "consider exposing opaque component path somehow", "body": "something thought regard focus hover selection implement hover top level state value currently hovered root component currently focused component anything gets rerendered respond things changing however also means everything gets rerendered previous next path ideal would store path component extract path internal state way quickly rerender previous next path still letting anything react focushover changing maybe generally useful selection bit special might need rerender anything two paths also optimized similarly checking child node corresponds start end path anything selected unselected", "num": "7221", "d": "7/2016"}, {"title": "ship", "body": "estimated date yet wanted make sure something track noncherrypicking actions required set point", "num": "7220", "d": "7/2016"}, {"title": "would like make sure lifecycle react usage jquery datatable react", "body": "hey guys freshman react facing problems like fetch data server show table create features deal loading error statues like render spinner data loading error message error occured datatable everything works perfectly issue place run productrun function initialized datatable tried put componentdidmount componentwillupdate nothing works even trie put render function still got nothing anybody show way let work really appreciate component import react react import contentwrapper componentslayoutcontentwrapper import grid row col panel button table reactbootstrap import productsrun productsrun import link reactrouter import spinner componentswidgetsspinner class products extends reactcomponent componentdidmount thispropsfetchproducts export default products productrun function", "num": "7218", "d": "7/2016"}, {"title": "way let users know invalid type returned", "body": "error message question helpful technically possible show returned", "num": "7215", "d": "7/2016"}, {"title": "feature request merge classname prop outermost container component", "body": "use classname prop html element custom react component requesting support feature simplifies component usage need apply additional styles without wrap component external div mycomponent render return hello expected usage render hello affect achieved mixin nonmounted tests use thispropsclassname find components", "num": "7214", "d": "7/2016"}, {"title": "thisstate constructor thissetstate everywhere else violating uniform access principle", "body": "style creating components react clearly violating uniform access principle general source confusion bugs able set state two different ways must constructor must everywhere else believe much better way set state general universal already accessing state setting state constructor everywhere else behavior could easily replicated proxies", "num": "7212", "d": "7/2016"}, {"title": "onchange firing properly react paste text textarea", "body": "hello copypaste data keyboard textarea onchange firing works fine chrome ff included test link log msg happen copypaste data textarea thanks", "num": "7211", "d": "7/2016"}, {"title": "add afterbatchupdate callback similar", "body": "want request feature report bug feature request discovered would quite useful us able react call userdefined function every batch updates case would like ask datastore remove unneeded data every round updates say user clicks button resulting ui changes done existing lifecycle methods nt seem provide us way achieve behavior currently releasing data datastore unmount components suboptimal new component mount place might ask similar data could react execute callback round updates ui changes quiesce could avoid unnecessary unloadreloads alexcole", "num": "7207", "d": "7/2016"}, {"title": "bot comment prs build size changes threshold", "body": "would nice establish threshold bot comment pr adds number bytes umd build size setup potentially add metrics want track notification", "num": "7205", "d": "7/2016"}, {"title": "reason use null instead undefined default state using default would allow using default values", "body": "really issue reason use null instead undefined default state using default would allow using default values", "num": "7204", "d": "7/2016"}, {"title": "behaviour consistent dom values identical", "body": "created opposite bug react fixed match dom behaviour instead solution proposed see", "num": "7203", "d": "7/2016"}, {"title": "enhancement htmlxml comment support jsx", "body": "feature support xml comments jsx current status currently way insert comments jsx flow wrap js context proposed extension xml like comments would also allow us quickly temporarily comment components jsx flow like", "num": "7201", "d": "7/2016"}, {"title": "weird behaviour prop present", "body": "want request feature report bug bug current behavior example reactdomrender reactcreateelement div key classname foo test documentgetelementbyid container renders test reactdomrender reactcreateelement div key classname foo test documentgetelementbyid renders test see adding prop breaks rendering prop maybe parameters well weird reserved word js got prop another story behaviour definitely weird versions react browser os affected issue work previous versions react chrome tested", "num": "7200", "d": "7/2016"}, {"title": "input elements always rendered attribute", "body": "want request feature report bug bug think current behavior rendering without name attribute render dom current behavior bug please provide steps reproduce possible minimal demo problem via similar template example regression using react expected behavior attribute rendered provided expected behavior react versions react browser os affected issue work previous versions react regression good", "num": "7198", "d": "7/2016"}, {"title": "npm problem", "body": "hello new react testing project whne npm install get lealsmacbookair snapchat manu npm install snapchat usersmanudesktopsnapchat react npm warn reactaddonspurerendermixin requires peer react none installed npm update lealsmacbookair snapchat manu npm update snapchat usersmanudesktopsnapchat reactnativecamera git npm warn reactaddonspurerendermixin requires peer react none installed nt know react packagejson", "num": "7196", "d": "7/2016"}, {"title": "react strips property tag issues warning", "body": "want request feature report bug bug current behavior react flagging warning stripping property tag current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior strip issue warning versions react browser os affected issue work previous versions react chrome", "num": "7192", "d": "7/2016"}, {"title": "bug missing react element debugid triggered reactdomserverrendertostaticmarkup", "body": "react provided fiddle throwing missing react element debugid warning described internal ie userfacing react warning warning present react make claim sane usage pattern exists realworld components unexpected failure case", "num": "7190", "d": "7/2016"}, {"title": "missing react element debugid warning triggering render componentwillmount", "body": "want request feature report bug bug current behavior reported adamryvola react displaying warning another component rendered current behavior bug please provide steps reproduce possible minimal demo problem via similar template js import react component react import reactdom reactdom const container documentgetelementbyid container const menucontainer documentgetelementbyid menucontainer export default class app extends component componentwillmount reactdomrender menucontainer lt trigger warning render return app reactdomrender container jsfiddle expected behavior according gaearon warning internal bugs react meant users source warning triggered versions react browser os affected issue work previous versions react react issue", "num": "7187", "d": "7/2016"}, {"title": "react removes tabindex property", "body": "react removes tabindex property defined like component found working misunderstanding bug update fault proper tabindex property camelcase", "num": "7186", "d": "7/2016"}, {"title": "linkedin react users group proposed angular jobs subcription", "body": "hello subscribed linkedin react users group thought would like know currently administered angular guy proposed look angular jobs subscription really one might expect", "num": "7184", "d": "7/2016"}, {"title": "documentation add schema illustrate component lifecycle", "body": "peter beshai created good cheatsheet illustrate component lifecycle could useful similar schema react documentation page components", "num": "7183", "d": "7/2016"}, {"title": "testutils shallow renderer triggers componentwillreceiveprops nt trigger componentdidupdate", "body": "following test rerender component different props using different methods get different results sure intended behaviour think behaving like expect js import react component react import createrenderer renderintodocument reactaddonstestutils import jsdom mochajsdom import reactdom reactdom class foo extends component componentwillreceiveprops consolelog component receive props describe test gt jsdom triggered triggered shallow renderer sure test feature using think possible would expect triggered shallow renderer well using node react", "num": "7182", "d": "7/2016"}, {"title": "error production devlopment", "body": "idea error occured production version anything wrong many thanks information uncaught invariant violation minified react error visit full message use nonminified dev environment full errors additional helpful warningsreactprodinvariant addcomponentasrefto attachref reactrefattachrefs attachrefs notifyall close closeall perform batchedmountcomponentintonode batchedupdates batchedupdates rendernewrootcomponent rendersubtreeintocontainer render selecthandler firechange onmenuselect onclick onclick invokeguardedcallback executedispatch executedispatchesinorder executedispatchesandrelease executedispatchesandreleasetoplevel foreachaccumulated processeventqueue runeventqueueinbatch handletoplevel handletoplevelimpl perform batchedupdates batchedupdates dispatchevent", "num": "7181", "d": "7/2016"}, {"title": "form submit button empty values", "body": "want request feature report bug bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template using react reactdom expected behavior versions react browser os affected issue work previous versions react extra attributes empty values added submit button form works", "num": "7179", "d": "7/2016"}, {"title": "setstate update existing state transition", "body": "hi guys component count character word component render got lot duplicate warning chrome console tool gt fix problem finally want return states thanks import react react import reactdom reactdom import countable countable class statics extends reactcomponent constructor props super props thisstate paragraphs sentences words characters thiscountercallback thiscountercallbackbind countercallback counter thissetstate paragraphs counterparagraph sentences countersentences words counterwords characters countercharacters counterall render var area documentgetelementbyid editor countablelive area thiscountercallback return thisstatewords words reactdomrender documentgetelementbyid footerstatics", "num": "7177", "d": "7/2016"}, {"title": "svg xmlns attribute", "body": "want request feature report bug bug current behavior following error raised warning unknown prop tag current behavior bug please provide steps reproduce possible minimal demo problem via similar template create component svg tag set xmlns attribute expected behavior warning versions react browser os affected issue work previous versions react", "num": "7176", "d": "7/2016"}, {"title": "range input value set initial render", "body": "want request feature report bug bug current behavior rendering range input element value input nt set initial render call render value get picked current behavior bug please provide steps reproduce possible minimal demo problem via similar template created demo demo includes component called test simply renders range input component passing props update button calls setstate trigger render also consolelog statements show values used render run demo notice click update button twice input value updates strange thing seems something min max attributes input commented line seems work fine initial render references state value nt work expected behavior input value set properly initial render versions react browser os affected issue work previous versions react affects react works fine tested latest chrome", "num": "7170", "d": "7/2016"}, {"title": "run function automatically", "body": "hi guys component proceeded find page render component inner function called wrong tip want search press enter key import react react import reactdom reactdom class quickbar extends reactcomponent constructor props super props thisstate issetfonttoggled false isfindformtoggled false value find type hit enter thistogglefind thistogglefindbind reactdomrender documentgetelementbyid headerquickbar", "num": "7169", "d": "7/2016"}, {"title": "getting warning using reactcsstransitiongroup react", "body": "bug current behavior using reactcsstransitiongroup react warns unknown prop passed dom element created component span demo expected behavior versions react browser os affected issue work previous versions react react v os tested osx el capitan worked previous versions", "num": "7163", "d": "7/2016"}, {"title": "potential issue components imported", "body": "consider following import react react import reactdom reactdom import somecomponent somecomponent export class dashboard extends reactcomponent render return let dashboardelement documentgetelementbyid dashboard dashboardelement null reactdomrender dashboardelement file import react react import reactdom reactdom export class somecomponent extends reactcomponent issue least believe issue nt treated properly react maybe babel get error second import react react import reactdom reactdom class somecomponent extends reactcomponent moduleexports somecomponent everything works unless understanding fundamental level export moduleexports essentially react recognize latter first thing thing", "num": "7162", "d": "7/2016"}, {"title": "language used dangerously set innerhtml document unclear", "body": "document dangerously set innerhtml states intent behind syntax considered typetaint sorts typetaint also like recommend using language nt rely understanding term least supplement definition best create opportunity misunderstanding explaining security measure lest user draw conclusion importance", "num": "7161", "d": "7/2016"}, {"title": "emessagequeuejni javalangoutofmemoryerror", "body": "listview jni leak issue idalvikvmheap forcing collection softreferences allocation idalvikvmheap clamp target gc heap ddalvikvm gcbeforeoom freed free paused total edalvikvmheap memory allocation idalvikvm main runnable idalvikvm group main idalvikvm cgrp idalvikvm schedstat idalvikvm androidutilsparseintarrayput sparseintarrayjava idalvikvm comfacebookreactuimanagereventstoucheventcoalescingkeyhelperaddcoalescingkey idalvikvm comfacebookreactuimanagereventstoucheventinit idalvikvm comfacebookreactuimanagereventstoucheventobtain idalvikvm comfacebookreactuimanagerjstouchdispatcherhandletouchevent idalvikvm comfacebookreactreactrootviewdispatchjstouchevent idalvikvm comfacebookreactreactrootviewonintercepttouchevent idalvikvm androidviewviewgroupdispatchtouchevent idalvikvm androidviewviewgroupdispatchtransformedtouchevent idalvikvm androidviewviewgroupdispatchtouchevent idalvikvm androidviewviewgroupdispatchtransformedtouchevent idalvikvm androidviewviewgroupdispatchtouchevent idalvikvm androidviewviewgroupdispatchtransformedtouchevent idalvikvm androidviewviewgroupdispatchtouchevent idalvikvm comandroidinternalpolicyimplphonewindow decorviewsuperdispatchtouchevent idalvikvm comandroidinternalpolicyimplphonewindowsuperdispatchtouchevent idalvikvm androidappactivitydispatchtouchevent idalvikvm comandroidinternalpolicyimplphonewindow decorviewdispatchtouchevent idalvikvm androidviewviewdispatchpointerevent idalvikvm androidviewviewrootimpldeliverpointerevent idalvikvm androidviewviewrootimpldeliverinputevent idalvikvm androidviewviewrootimpldoprocessinputevents idalvikvm androidviewviewrootimplenqueueinputevent idalvikvm androidviewviewrootimpl windowinputeventreceiveroninputevent idalvikvm androidviewinputeventreceiverdispatchinputevent idalvikvm androidosmessagequeuenativepollonce native method idalvikvm androidosmessagequeuenext idalvikvm androidoslooperloop idalvikvm androidappactivitythreadmain idalvikvm javalangreflectmethodinvokenative native method idalvikvm javalangreflectmethodinvoke idalvikvm comandroidinternaloszygoteinit methodandargscallerrun idalvikvm comandroidinternaloszygoteinitmain idalvikvm dalviksystemnativestartmain native method einputeventreceiver exception dispatching input event emessagequeuejni exception messagequeue callback handlereceivecallback idalvikvmheap clamp target gc heap ddalvikvm gcforalloc freed free paused total idalvikvmheap forcing collection softreferences allocation idalvikvmheap clamp target gc heap ddalvikvm gcbeforeoom freed free paused total edalvikvmheap memory allocation idalvikvm main runnable idalvikvm group main idalvikvm cgrp idalvikvm schedstat idalvikvm javalangabstractstringbuilderenlargebuffer abstractstringbuilderjava idalvikvm idalvikvm javalangstringbufferappend idalvikvm javaiostringwriterwrite idalvikvm javaioprintwriterdowrite idalvikvm javaioprintwriterwrite idalvikvm javaioprintwriterwrite idalvikvm javaioprintwriterwrite idalvikvm javaioprintwriterappend idalvikvm javaioprintwriterappend idalvikvm javaioprintwriterappend idalvikvm javalangthrowableprintstacktrace idalvikvm javalangthrowableprintstacktrace idalvikvm androidosmessagequeuenativepollonce native method idalvikvm androidosmessagequeuenext idalvikvm androidoslooperloop idalvikvm androidappactivitythreadmain idalvikvm javalangreflectmethodinvokenative native method idalvikvm javalangreflectmethodinvoke idalvikvm comandroidinternaloszygoteinit methodandargscallerrun idalvikvm comandroidinternaloszygoteinitmain idalvikvm dalviksystemnativestartmain native method emessagequeuejni javalangoutofmemoryerror dandroidruntime shutting vm wdalvikvm thread exiting uncaught exception idalvikvmheap clamp target gc heap ddalvikvm gcforalloc freed free paused total idalvikvmheap forcing collection softreferences allocation idalvikvmheap clamp target gc heap ddalvikvm gcbeforeoom freed lt free paused total edalvikvmheap memory allocation idalvikvm main runnable idalvikvm group main idalvikvm cgrp idalvikvm schedstat idalvikvm javalangabstractstringbuilderenlargebuffer abstractstringbuilderjava idalvikvm idalvikvm javalangstringbufferappend idalvikvm javaiostringwriterwrite idalvikvm javaioprintwriterdowrite idalvikvm javaioprintwriterwrite idalvikvm javaioprintwriterwrite idalvikvm javaioprintwriterwrite idalvikvm javaioprintwriterappend idalvikvm javaioprintwriterappend idalvikvm javaioprintwriterappend idalvikvm javalangthrowableprintstacktrace idalvikvm javalangthrowableprintstacktrace idalvikvm comumenganalyticsba idalvikvm comumenganalyticsda idalvikvm ualyafa idalvikvm ualyafuncaughtexception idalvikvm javalangthreadgroupuncaughtexception idalvikvm javalangthreadgroupuncaughtexception idalvikvm dalviksystemnativestartmain native method idalvikvm reacting signal idalvikvm wrote stack traces dataanrtracestxt", "num": "7160", "d": "7/2016"}, {"body": "yes please", "d": "7/2016"}, {"body": "bug tracker issues react usage questions please ask stackoverflow irc solution comes mind kind memoization lot ways different trade offs cases memoization could expensive child rerendering", "d": "7/2016"}, {"body": "fun stackoverflow would better place ask thanks", "d": "7/2016"}, {"body": "thank", "d": "7/2016"}, {"body": "went without hitch nt new file actually move git rm amp add keep eye next time add new page docs", "d": "7/2016"}, {"body": "appreciate idea however think point going opt explicitness discussion maintain jsx spec since exists going close", "d": "7/2016"}, {"body": "replace nodes owned react bad idea polyfill must make absolutely sure make react think siblings updated crash still bad idea rely nt recommend either polyfill needs made reactcompatible need way show use still want author react obviously reactive", "d": "7/2016"}, {"body": "binding global assigning property would assume", "d": "7/2016"}, {"body": "confirmed fixed great jobs", "d": "7/2016"}, {"body": "documentbodystylewebkittransform rotate consolelog documentbody lt consolelog documentbodystylewebkittransform lt rotate consolelog documentbodystyletransform lt rotate modern chrome behaves", "d": "7/2016"}, {"body": "thanks well documented issue leave spicyj since hard work", "d": "7/2016"}, {"body": "hm give null ref throw expected reactdomfinddomnode nt work", "d": "7/2016"}, {"body": "definitely let us know hit best guess perhaps something overriding something else modifying dom object obviously replacing values injecting good luck agree nt seem like react", "d": "7/2016"}, {"body": "code smell spread unrelated props dom element better explicit exact use case trying solve spreading", "d": "7/2016"}, {"body": "passing events classname style outer tag", "d": "7/2016"}, {"body": "likely unknown props renderer asis future relying props silently dropped bad idea", "d": "7/2016"}, {"body": "help u need", "d": "7/2016"}, {"body": "might want bring react native repo react one project point", "d": "7/2016"}, {"body": "workaround ux designer create simpler singlepath svg icon new version react rendering without problems still like know wrong original svg however avoid problem future", "d": "7/2016"}, {"body": "svg look like react ie render method looks like might using unnecessary support svg", "d": "7/2016"}, {"body": "indeed using tried switching back original svg without using however getting error using jsx uncaught typeerror reactdomuse function sure enough looks like one supported svg elements still surprising nt working anymore particular svg", "d": "7/2016"}, {"body": "oh yea nt probably wo nt updated might say add want totally agree surprising guessing related way create dom nodes things correctly svg could never worked happened due irregularity", "d": "7/2016"}, {"body": "thanks help prefer less complex svgs anyway reasons like changing fillstroke hover css think continue asking ux designer produce singlepath svgs going forward", "d": "7/2016"}, {"body": "reproduce thing without react think think single call", "d": "7/2016"}, {"body": "zpao totally right one reason love ie trollface thanks quick reply", "d": "7/2016"}, {"body": "planned implemented eventually please see", "d": "7/2016"}, {"body": "think convenient code look like simplify", "d": "7/2016"}, {"body": "disagreeing mindful overusing textonly components components nontrivial overhead could significant performance impact overused", "d": "7/2016"}, {"body": "syranide true benchmark results kinds things inline vs function call vs stateless component vs stateful component", "d": "7/2016"}, {"body": "browser experiencing nt anything special attribute guessing browser might correcting value something confirms spec indicates valid values", "d": "7/2016"}, {"body": "test case appears working expect firefox chrome", "d": "7/2016"}, {"body": "zpao appears right realized noticing setting jsx resulted browser behavior different guess chrome must accepting changing semantic values odd reason think issue closed", "d": "7/2016"}, {"body": "thanks checking", "d": "7/2016"}, {"body": "probably following old tutorial deprecated year half ago since removed instead write", "d": "7/2016"}, {"body": "provide minimal project reproducing thanks", "d": "7/2016"}, {"body": "pulled nodemodules size run npm install npm start navigate reproduce hopefully", "d": "7/2016"}, {"body": "list look fixing week clear warning valuable look earlier error code instead symptom root cause described mainly occurs prop state defined earlier error occurred app scroll console look original error warning", "d": "7/2016"}, {"body": "gaearon scrolling back related error logged react choke strange annoying", "d": "7/2016"}, {"body": "probably means using promise polyfill swallows errors could case", "d": "7/2016"}, {"body": "gaearon might possible sure fix though get occasional errors promise returning anything still find solution", "d": "7/2016"}, {"body": "get exact warning propsstate defined scroll console related error ca nt pin point propstate undefined using bable polyfill asyncawait silly workaround put consoleerror err catch statements least know name propstate undefined", "d": "7/2016"}, {"body": "got error today soon subscribe reducer form different components loaded simultaneously screen trying access reducer throws error using redux", "d": "7/2016"}, {"body": "adityaathavale interesting crossed mind multiple dispatches time nothing might one causes", "d": "7/2016"}, {"body": "got error trying implement dimensional charts using crossfilterjs believe one crossfilter operations causing choke import react react import crossfilter crossfilter import update reactaddonsupdate class dimensionalcharts extends reactcomponent constructor props super props componentwillmount const data range map gt randomgaussian filter crossfilter data index filterdimension gt indexgroup indexgroup reducesum gt value filterdimension gt valuegroup valuegroup reducesum gt filterdimension gt filterall const index value thisstate redrawall storechartsforeach chart gt chartredraw addchart chart const newstate update thisstate charts push chart", "d": "7/2016"}, {"body": "got faulty function", "d": "7/2016"}, {"body": "said warning zero effect errors remove soon absolutely irrelevant ignore nt see real error problem setup adding another comment thread type error caused help us occur error need describe many different ways could cause error javascript specific react redux way help us reproduce warning without error share code trim project publish result instructions reproduce send link take look error swallowed errors swallowed setup us removing warning wo nt fix problem errors keep getting silently swallowed something else hiding nt know please add new comments project showing error gets swallowed thanks", "d": "7/2016"}, {"body": "gaearon sorry posting without info posted getting warning without prior errors thrown issue importing function another file function artifact reference part errors thrown xcode console gist trimmed example code", "d": "7/2016"}, {"body": "browserhtml behavior something react involved also please use github issues react bugsdevelopment use forumstackoverflow general questions", "d": "7/2016"}, {"body": "bug tracker issues react usage questions please ask stackoverflow irc", "d": "7/2016"}, {"body": "indeed show bug react reopen", "d": "7/2016"}, {"body": "actually going fix links", "d": "7/2016"}, {"body": "cc gaearon", "d": "7/2016"}, {"body": "oh sorry brain function well future", "d": "7/2016"}, {"body": "actually big deal shortterm wanted make sure nt lose things ps great work tool post", "d": "7/2016"}, {"body": "thanks", "d": "7/2016"}, {"body": "please read documentation website looking source files relative links nt work written website confusing unfortunately jekyll works", "d": "7/2016"}, {"body": "hey example nt see part specifies animation could explain would animated thanks", "d": "7/2016"}, {"body": "hey keyan adapted svg looks like missing css animations good spot thanks", "d": "7/2016"}, {"body": "actually keyanzhang keyframe animations work react added following sass file outline strokedasharray len strokedashoffset animation anim time linear infinite keyframes anim strokedasharray len strokedashoffset strokedasharray len strokedashoffset strokedasharray len strokedashoffset still nt seem animating", "d": "7/2016"}, {"body": "work could provide jsfiddle good one start demonstrate issue", "d": "7/2016"}, {"body": "hey keyanzhang got working actually total user error part changed attribute bizarre reason lol thanks help", "d": "7/2016"}, {"body": "happy give try", "d": "7/2016"}, {"body": "access files source code established populating full dependency graph tools like browserify webpack systemjs assetgraph give", "d": "7/2016"}, {"body": "munter currently available default set people build systems kind large code base also slow readparse files randomly needs smarter parallelize cache info certainly impossible build nt integrated build get adoption particular transform possible", "d": "7/2016"}, {"body": "illustrate sebmarkbage talking rollup limitations pseudo code example running output rollup thru closure compiler get words precedent certainly rollup treeshaking capabilities improved cover primitives need much optimizations terms react uses components achieve described cc richharris", "d": "7/2016"}, {"body": "reminds bit jeffmo talk using flow treeshaking react europe", "d": "7/2016"}, {"body": "thought lot would probably need sort cursor edit fold fold regarding code size lot folding would logically original component definition could nt fold everything number time folded size folded depending done bundled size could jump lot unless missing something component folding fold one liners webapp high limitations server side rendering build backend desktop apps electron amp stuff", "d": "7/2016"}, {"body": "nt issue master believe change controlled inputs could wrong think avoids creating custom change event really nt know occurs dispatching custom events nt bubble believe ie couple work arounds one perform check like mentioned jquery issue tracker intuition says would hinder bubbling tested chrome firefox safari got pr details", "d": "7/2016"}, {"body": "jimfb know busy things insight", "d": "7/2016"}, {"body": "without looked issue assume used html markup broke switched createelement expect watching changes children probably always brokenunsupported updates anyway think tag removed spec deprecated anyway probably worth effort support", "d": "7/2016"}, {"body": "thanks quick response nt know deprecated since widely used polymer elements", "d": "7/2016"}, {"body": "looks like may replaced may issue maybe want fix anyway mdedys chance using shadydom instead shadowdom experience issue full shadowdom shadydom jsfiddle would next step toward fixing", "d": "7/2016"}, {"body": "would also need know children get added modified via javascript shadow nodes get updated", "d": "7/2016"}, {"body": "yes using shadydom instead standard shadowdom rely polymer takes advantage performance shadydom mentioned blog post experiment", "d": "7/2016"}, {"body": "react specialcased support shadydom likely run lot issues use shadowdom using react probably warn someone using shady dom", "d": "7/2016"}, {"body": "hasanul hoque jim notifications githubcom wrote looks like content may replaced slot may issue maybe want fix anyway mdedys chance using shadydom instead shadowdom experience issue slot full shadowdom shadydom jsfiddle would next step toward fixing receiving subscribed thread reply email directly view github mute thread", "d": "7/2016"}, {"body": "code listed use timeout props hmm think line breaks would help entry explaining added release notes saying easy fault updating docs reflect would like massage doc page send pr", "d": "7/2016"}, {"body": "ah got yeah knowing works thanks", "d": "7/2016"}, {"body": "tried looks like nt even installed take notice error message", "d": "7/2016"}, {"body": "error resolve module means file nt exist folder trying run command could case", "d": "7/2016"}, {"body": "thanks reply milesj amp mxstbr already installed npm install g webpack yes mxstbr add mainjs folder share please proper way installed react reduxwebpack actually new react", "d": "7/2016"}, {"body": "got everything installed perfectly fine add file folder contents work js mainjs var react require react var reactdom require reactdom reactdomrender hello world documentgetelementbyid example", "d": "7/2016"}, {"body": "thanks mxstbr actually get point steps npm init give name package name npm install react reactdom save save dependencys npm install save babelpresetreact babelloader babelcore got error like", "d": "7/2016"}, {"body": "krishbhattacharyya adding local dependency well trick", "d": "7/2016"}, {"body": "thanks usirin npm install webpack savedev supporting operating system vista thanks everybody", "d": "7/2016"}, {"body": "mean supporting webpack works windows", "d": "7/2016"}, {"body": "close", "d": "7/2016"}, {"body": "intend work please write comment change code small effort would spent creating good warning page explaining common problems solutions example warning page one would similar different topic", "d": "7/2016"}, {"body": "look", "d": "7/2016"}, {"body": "sure", "d": "7/2016"}, {"body": "assigning keep track issue", "d": "7/2016"}, {"body": "please include stacktrace worst possible message get big merge absolutely nothing guide problem", "d": "7/2016"}, {"body": "pajn bitten lack information many times especially dealing hoc edit nt manage find time last week work week", "d": "7/2016"}, {"body": "similar", "d": "7/2016"}, {"body": "sounds good", "d": "7/2016"}, {"body": "may take please gaearon except alexzherdev wants tackle course", "d": "7/2016"}, {"body": "yup tuesday july ryan lahfa notifications githubcom wrote may take please gaearon except alexzherdev wants tackle course receiving mentioned reply email directly view github mute thread", "d": "7/2016"}, {"body": "alexzherdev awesome", "d": "7/2016"}, {"body": "react warns unknown properties supplied html tags issue reactflexboxgrid suggest submit issue instead", "d": "7/2016"}, {"body": "indeed bug react would need file issue explains fix problem side cheers", "d": "7/2016"}, {"body": "discussion lets close keep", "d": "7/2016"}, {"body": "use without reactjs behavior similar type dots numbers press updown arrow keys sure handle avoid since natively disapears", "d": "7/2016"}, {"body": "related", "d": "7/2016"}, {"body": "yes duplicate root cause", "d": "7/2016"}, {"body": "zhouce review code created demo onchange event problem javascript indexjs import babelpolyfill import react component react import render reactdom class container extends component constructor super thisonchange thisonchangebind thisstate text onchange e consolelog etargetvalue thissetstate text etargetvalue render return hello react render documentgetelementbyid root packagejson dependencies babelpolyfill react reactdom devdependencies babelcli babelcore babelloader babelplugintransformobjectrestspread babelpresetreact babelregister webpack webpackdevmiddleware", "d": "7/2016"}, {"body": "bug tracker issues react usage questions please ask stackoverflow irc short version already data js need pull dom", "d": "7/2016"}, {"body": "best link post updating open source patent grant ask lawyers anything add cheers", "d": "7/2016"}, {"body": "wonderful thanks quick response", "d": "7/2016"}, {"body": "additional information diff", "d": "7/2016"}, {"body": "reason google microsoft employees allowed use reactjs work according rob eisenberg creator aurelia framework claim false speak author motives simple fact check reveals microsoft recently released actively working react native windows obviously using react developed microsoft employees announced windows blog microsoft allows employees use react also encourages thirdparty developers build apps platform react update new version skype built react google unhappy original patent grant updated response concerns ok apple relevant discussions reddit hn", "d": "7/2016"}, {"body": "indeed lot stupid things said patent grant still nt mean nt couple big issues software patents awfully complex idea would happen court nt want know best solution avoid problems software patents avoid first place developer idea clients business last hour worked large energy provider job make software works usecase something vital many people trust still working next years running proprietary hardware secured locations angularjs imagine chose react knows client subsidiaries going next years nt even work company imagine one bad subsidiary couple years patent troll even hate perfect right business means would lose license use software", "d": "7/2016"}, {"body": "jdubois part facebook entirely private opinion lawyer software patents awfully complex idea would happen court nt want know best solution avoid problems software patents avoid first place industry facebook needs cover asses giving assurance ca nt come even relevant enforceable patents actual nefarious sideeffects extra patent clause fine please bring something concrete actionable interested developers despise patents businesses require means would lose license use software would explicitly license relevant patents facebook even restructure company clever way modify react codebase skirt patents always sue believe end winning hand tallying plus minuses nt bite hand feeds clear would nt even matter used alternative react patents could apply well alternatives decide use frameworks increasingly learn likelihood subset hypothetical patents apply react would likely apply angularjs well framework would implement remotely inspired popular frameworks nt get everyone hung facebook bad guy would much concerned patenttrolls inc vague patent applied react unknown never going get answer show doorstep bsdlicense going protect numerous examples cases involving exactly past right nt mean stir pot business using react extensively tremendous benefit see hundred ways ending shitty legal trouble future suing facebook revoking license patents relevant use react even radar", "d": "7/2016"}, {"body": "nt understand use case let rephrase consultant working big company days month finished work week client supposed use work years maybe part client giant company might sue facebook patent issue point time future probably something totally different react knows giants companies mind case client would nt able use app developed would major issue wo nt able restructure modify react codebase say app deployed secured remote locations would cost insane amount money update think least warn clients delivering app specific license", "d": "7/2016"}, {"body": "think least warn clients delivering app specific license rude nt responsibility license clearly outlined repo client concerns would seem like something discussing legal team starting project understand license confusing developers really meant developers legal document reviewed legal counsel considered case within context companyconsumer legal standings think also important realize clarificationssummarizations license make potentially legally ambiguous understandable facebook might hesitant careful", "d": "7/2016"}, {"body": "rude perfectly agree developer responsibility whole point comment please note reactjs user commented discussion happened retweeted specific blog post matter like people telling read license believe people", "d": "7/2016"}, {"body": "lawyer far see bit article mistaken patent clause allowed anything constitutes competing facebook also seem inaccuracies however bit bold seem true relation patent assertion take legal actions ways challenge facebook license use react immediately revoked extract license pretty easy understand even lawyer license granted hereunder terminate automatically without notice subsidiaries corporate affiliates agents initiate directly indirectly take direct financial interest patent assertion facebook subsidiaries corporate affiliates ii party patent assertion arises whole part software technology product service facebook subsidiaries corporate affiliates iii party relating software long unlikely make patent assertion facebook license unlikely ever revoked least understand", "d": "7/2016"}, {"body": "interpret license hereunder patents file referring license another file", "d": "7/2016"}, {"body": "noob license issues assertions might look dumb crazy react recent license confusions getting infer compete facebook wont terminate use react initiate patent assertion facebook terminate use react confused violate patent facebook terminate use react", "d": "7/2016"}, {"body": "gaearon license hereunder patents refers software turn means react software distributed facebook inc stated sure suggesting otherwise", "d": "7/2016"}, {"body": "nadimtuhin mentioned lawyer understanding opinion compete facebook wont terminate use react correct initiate patent assertion facebook terminate use react correct violate patent facebook terminate use react nt say anywhere seen violate facebook patent loss react license may least problems anyway", "d": "7/2016"}, {"body": "still lawyer clarifications based nadimtuhin initiate patent assertion facebook terminate use react terminating use react discretion point patents license would terminate still completely valid bsd license use react point though patents covered react would exposed counterclaim violate patent facebook terminate use react directly grant notwithstanding foregoing facebook subsidiaries corporate affiliates files lawsuit alleging patent infringement first instance respond filing patent infringement counterclaim lawsuit party unrelated software license granted hereunder terminate section paragraph due counterclaim understanding patent license terminate fb sues also worth noting evolution similar patent license apache license albeit slightly defensive angle going close nothing actionable", "d": "7/2016"}, {"body": "think blog post maybe facebook lawyers clarifications help lot know everyone say im lawyer nt help teaching react friends companies really love react someone ask react patents nt good answer talking lawyers patents conference local meetup scary think topic affects react adoption impact usage gaearon still gon na ask facebook lawyers clarifications react fan seeing post ranting react patents seeing bad responses makes sad clarification fb topic help lot", "d": "7/2016"}, {"body": "watching social network sure trust facebook lawyers", "d": "7/2016"}, {"body": "zpao understand discussion went rails certainly apologize distracting everyone productive work disagree issue nt actionable gaearon going check lawyers tl dr could added readme clarify clause motivation think would help dispel lot confusion around license would consider reopening issue hear back maybe could lock prevent developers driveby lawyering", "d": "7/2016"}, {"body": "talked lawyers zpao clarification best give moment facebook open sourcing many projects last years protection patent trolls one reasons comfortable narrowing protection would make us much cautious releasing something eg react might released lawyers thought risky said major companies like google microsoft apple problems patent grant consider upsides downsides consult lawyers make informed decision refer discussions subject watching social network sure trust facebook lawyers good way make legal decisions", "d": "7/2016"}, {"body": "gaearon thanks getting back appreciate imperfect world live may something developers perennially confused thanks taking issue seriously work entire react team puts project community", "d": "7/2016"}, {"body": "gaearon joke apart trusting another company lawyer nt good way make legal decisions believe lawyers honest neutral", "d": "7/2016"}, {"body": "many questions variety assumptions first would like clarify two questions facebook think solo bsdl grant patent execution additional permissions granted patents", "d": "7/2016"}, {"body": "see jsfiddle thought component look like nt", "d": "7/2016"}, {"body": "ah yeah good catch rush posting fixed link", "d": "7/2016"}, {"body": "ok digging looks like shouldignorevalue setvalueforproperty always true false always false true due line true means value case always deleting attribute seem recall old browsers needing fancy handling around checkboxes maybe true case always tripleequals checking nodechecked property boolean value cast string even check return seems incorrect nt looked yet see logic rewritten", "d": "7/2016"}, {"body": "looks like behavior changed true branch master still wrong branch original change latest change without investigating deeply looks like moving branch guarding extra work sufficient", "d": "7/2016"}, {"body": "order determine checksum well instantiate component set internal state need render whole component tree even nt take actions dom methods called client always happen looks like reuse markup traverse dom populate cache nt looked closely see optimizations make differently defer spicyj wrote", "d": "7/2016"}, {"body": "would likely within scope contributor guide see current discussion", "d": "7/2016"}, {"body": "ok great thanks", "d": "7/2016"}, {"body": "probably much overhead lack immutability also enables potential performance improvements personally inclined say nt thought much sebmarkbage let chime generally want make use immutablejs say store value state eg realize nt actually say explicitly docs intent immutablejs wiki ignore immutability helpers nt belong react interesting used conjunction probably way encourage immutability would use way though field state points result call", "d": "7/2016"}, {"body": "mean react state immutable mean immutable immutablejs record data structure update method nt think ca nt take hard dependency unclear end way treat immutable records anyway could make immutable since react recreates whenever call something would nice clarity worried perf implications perf win get allocating one level negligible however time mutation convenient things like sure worth breaking deep immutability another thing kind tough lots data structures require cyclic dependencies external dependencies currently think early go deep immutability enforce one level deep", "d": "7/2016"}, {"body": "sebmarkbage imho seems could even considered componentinternal implementation detail given right lifecycle methods right ie could implement mutablestatefulreactcomponentimmutablejsstatefulreactcomponentetc base classhelpers reactcomponent provide state use see fit major reason beyond unreasonable complexity state formalized way right possibly overhead degree although imagine would nt issue practice", "d": "7/2016"}, {"body": "sebmarkbage something like nt seem like much overhead already props right", "d": "7/2016"}, {"body": "milesj think issue shallow nt prevent stuff like need recursively deep freeze state object nt really work much overhead state contains circular references", "d": "7/2016"}, {"body": "event handler called argument type nt need value click event need call assume bound variable function yeah fine however need something client event let function take extra parameter write instead use issue tracker bugs feature requests since bug please use stackoverflow discussion forums questions feel free leave link stackoverflow question thread necessary thanks", "d": "7/2016"}, {"body": "thanks feedback common use pass anonymous function slight variation would still created inside honestly think rather write using anonymous function going change today one day nottoodistant future likely update examples use classes refresh", "d": "7/2016"}, {"body": "think tool options unnecessary", "d": "7/2016"}, {"body": "someone mentioned back dan discussed came conclusion current behavior good case could come prop prop specified element trying change undefined prop never specified element first place interested tldr however sounds like antipattern trying remove prop post factum probably means first place use case missing let us know", "d": "7/2016"}, {"body": "best practice would alternate practice would bad practice would assign props undefined", "d": "7/2016"}, {"body": "jimfb exactly usecase reasoning quite expensive faster simply assign doubt measured practice nt really care thought worth bringing generally good idea react agree probably real reason", "d": "7/2016"}, {"body": "along lines way achieve prop deleting behavior", "d": "7/2016"}, {"body": "oztune sort probably bad practice general illegal prop never attached dom node first place thing fix however really need rather using cloneelement would manually pull old element call reactcreateelement new props", "d": "7/2016"}, {"body": "hehe bit logic behind choice makes sense however intuitive given widely used heuristic provided prop even throughout rest react tbf tho syranide point valid slower tho probably prohibitively could even measure thing", "d": "7/2016"}, {"body": "agree syranide issue use case context js class navitem extends reactcomponent onclick gt const onselect eventkey thisprops onselect eventkey render const props thisprops delete propsonselect delete propseventkey eg ideal nt general pass unused variables linting rules preference would exactly avoid deoptimization object away fast mode want avoid using eg lodash specifically one makes bunch extra passes object probably worse using", "d": "7/2016"}, {"body": "taion agreeingdisagreeing think real argument keeping asis think find lot people taking easy route unintentionally passing around rather cases specified invalid prop value thus showing warning need see warning really problem practice rarely guess saying nt suck works would otherwise although rare js", "d": "7/2016"}, {"body": "syranide actually violates lint rule enabled airbnb config use though though comment suggests enabled set nt end world saying rather set much", "d": "7/2016"}, {"body": "like itajaja approach using ignore pattern eslint p", "d": "7/2016"}, {"body": "react another library modify dom element technically could render never changes call custom library lifecycle hooks however case would sidestepping react completely", "d": "7/2016"}, {"body": "wpould possible use reactdnd sortingdraging elements", "d": "7/2016"}, {"body": "nice example", "d": "7/2016"}, {"body": "thanks catching", "d": "7/2016"}, {"body": "way actually nt need set explicitly use jsx", "d": "7/2016"}, {"body": "first sorry sounded angry developer rage time anyway wow nt realise would easy hopefully helps avoid future dev rage still think good idea specify clarity also avoids issues ie check render method mycoolcomponent thanks help", "d": "7/2016"}, {"body": "hey problem recalled ran issue totally feel pain", "d": "7/2016"}, {"body": "js var new set something thissetstate something like want immutable good idea valid mutating object state state need call updating absolutely want go way caveats really recommend sticking immutable edit also libraries provide alternative immutable data structures easier work", "d": "7/2016"}, {"body": "syranide thanks reply got point warning browser console way without call confused whether official allow case thinking", "d": "7/2016"}, {"body": "warning browser console way futurefeeling ca nt detected impossible warn also said valid recommended scenario match warning documentation different ie nt confused whether official allow case thinking allowed generally recommended technically mutating state ok mutable object state ok", "d": "7/2016"}, {"body": "syranide thanks", "d": "7/2016"}, {"body": "thanks filing confirmed still broken likely fallout", "d": "7/2016"}, {"body": "number inputs broken react due filed merged going see problem email inputs per basically issue filed merged entirely possible exposes bug defaultvalue bug always react core always visible controlled inputs broken react long remember var numberinput reactcreateclass getinitialstate function return value render function return reactdomrender documentgetelementbyid container workaround set manual value filtering ensure numbers entered textbox downside nt get numeric keyboard mobile need figure solution handle properly", "d": "7/2016"}, {"body": "jimfb understood frustrating way get raw value think though deserves investigation bug manifest firefox believe still follows spec one", "d": "7/2016"}, {"body": "strml firefox nt fire onchange input value invalid interesting way sidestepping issue common case since onchange behavior presumably undefined input illegal state", "d": "7/2016"}, {"body": "broken react long remember based two codepens bug introduced works nt work", "d": "7/2016"}, {"body": "wow chorme release update positive codepen would worked week two ago looks like chrome retain user fiddles behaving nicer way looks like ball back court much want bet chrome fixed react", "d": "7/2016"}, {"body": "still broken seeing working", "d": "7/2016"}, {"body": "still broken talking fiddles still look broken", "d": "7/2016"}, {"body": "yes chrome edit see mean following sequence behaves properly type calls back type calls back previously type calls back", "d": "7/2016"}, {"body": "confirmed version specifically looks like lopping decimal point reproduce javascript chrome backspace issue backspace clear chrome reporting instead right uncontrolled inputs even assign values begin", "d": "7/2016"}, {"body": "would crazy consider emitting changes invalid input case detailed validation returns", "d": "7/2016"}, {"body": "ahhhh interesting maybe dark assigning causes sideeffects seems trigger validation check codepen covers uncontrolled inputs controlled inputs follow different rules seem rely always reports instead sent pr", "d": "7/2016"}, {"body": "jimfb mentioned firefox nt fire onchange input value invalid interesting way sidestepping issue common case since onchange behavior presumably undefined input illegal state seems ideal trade limiting change exposure sake stable inputs interest moving towards", "d": "7/2016"}, {"body": "nhunzaker sorry hackamonth nt really following threads super closely ca nt mimic firefox behavior differentiate user clearing text input invalid value afaik however think chrome fixed inputs work correctly class issues fixable would almost certainly interested pr pass zpao spicyj gaearon", "d": "7/2016"}, {"body": "worries sounds fun quick reference point could reveal chrome fix actually broken", "d": "7/2016"}, {"body": "nhunzaker nt know quick reference points basic problem could nt get actual input value entered user input invalid state eg user typing illegal intermediate state setting last known legal value would remove decimal point firefox fix fire oninput illegal states chrome fix remove decimal value approximately instead need little digging figure exact behaviors various browsers figure good fix would look like nt know answer top head looks like things sufficiently fixed browser end fixable react fwiw may worth tracking keystrokes cursor events paste events maintain perfect shadow state since nt deal nonnumericish characters nt need worry foreign languages input edge cases come think would allow us simulate browser would allow us know value actually text box sidestep weirdness typenumber spec anyway let guys figure", "d": "7/2016"}, {"body": "okay looks like issue assigned using standard react method updating attributes props get passed logic prevent duplicate values assigned unfortunately new value already assigned first quick hack add exception value assignment never sets value attribute nt changed nt really know works nt think meaningful still fixes issues encountered", "d": "7/2016"}, {"body": "quick gif looks like dumb pushed update uncontrolled input fix sent work getting tests pass figure", "d": "7/2016"}, {"body": "okay polished fixes issues uncontrolled controlled inputs encountered put extra time manually test tomorrow still struggling add automated test coverage quirks", "d": "7/2016"}, {"body": "cases covering using following code test case drop decimal place backspacing happens react sees tries compare since string comparison always different clear bad input sort correct works makes fallback number nt recognized may require documentation updating best practices talk expand values happens parse react comparison based string values always different pretty neat anything else missed", "d": "7/2016"}, {"body": "mean plugin react arguments undocumented context api experimental unstable use case", "d": "7/2016"}, {"body": "expanded bug also breaks unset unexpanded properties however affect rendering static markup unless rendering old browser actually issue another note though guess implementation actually flawed cause checksum mismatch ssr resuming broken browser cc spicyj jimfb", "d": "7/2016"}, {"body": "thx syranide found expanded border styles partially works tags longer problem", "d": "7/2016"}, {"body": "syranide since nt affect createmarkupforstyles", "d": "7/2016"}, {"body": "going close point covering topic discussion", "d": "7/2016"}, {"body": "whoops blatant oversight part thanks link", "d": "7/2016"}, {"body": "could sort jest issue related mocking example put log top level scope see twice sure normal also fix issue moving inside test js jestunmock componentshelloworld describe helloworld gt displays message gt var react require react var reactdom require reactdom var testutils require reactaddonstestutils var helloworld require componentshelloworld default would advise file issue jest executing modules twice", "d": "7/2016"}, {"body": "thanks looking gaearon file issue jest", "d": "7/2016"}, {"body": "reopening jest issue downgrading react makes warning go away angusfretwell example angusfretwell thanks providing repo gaearon look react side", "d": "7/2016"}, {"body": "hmm nt know enough jest solve react related change think inlined requires module inside dev blocks nt get bundled production cause jest execute twice even though worked ca nt quite see module executed twice valid behavior nt happen node browser commonjs allow knowledge ca nt quite see yet react issue", "d": "7/2016"}, {"body": "clarify yes know new react nt mean react issue looks like hit edge case jest nt hit try bisecting helps", "d": "7/2016"}, {"body": "jest resets module registry call quite possible people end two copies react nt careful point change react since last release", "d": "7/2016"}, {"body": "wow thought resetting always explicit probably caused see doctor tests make pass thought caused explicit calls still nt quite understand happening lazy requires unsupported pattern", "d": "7/2016"}, {"body": "oh see happening jest works open source call implicitly every call import toplevel inside call fresh copies times suspect debug module freshly required old version react go require new versions modules requires facebook jest works explicitly call every test every test hoping turn open source behavior internally well use toplevel requires inline removed inlined code together module registry reset works pretty well every call completely isolated previously way required modules tests internally always quite mess fb recommend people however people open source decided want use imports even tests much stop way might end confused state jest sets could leverage react", "d": "7/2016"}, {"body": "ok think understand seems like could force inline requires top file could remove hack start using rollup longer need inline requires", "d": "7/2016"}, {"body": "either fixed depending goes first thank much good repro case", "d": "7/2016"}, {"body": "thanks gaearon", "d": "7/2016"}, {"body": "let keep open either fix gets", "d": "7/2016"}, {"body": "anyway quiet warnings mean time warnings suite makes bit hard look test output", "d": "7/2016"}, {"body": "super temporary fix put top level tests think fix issue sure remove next version tests", "d": "7/2016"}, {"body": "thanks suggestion fwiw nt seem helped much mean time dumping stdout file inspecting works quite well since warnings dumped stderr anyone problem", "d": "7/2016"}, {"body": "along lines could also something like unix environment", "d": "7/2016"}, {"body": "face palm apparently need coffee routing err devnull works perfectly thanks", "d": "7/2016"}, {"body": "also silence console messages", "d": "7/2016"}, {"body": "gaearon put require reactlibreactcomponenttreedevtool top level tests nt work added line top test files still getting error", "d": "7/2016"}, {"body": "using cmderpowershell windows look like two types warnings ones white another red please look screenshot run npm test gt null nt show error warning messages red color anymore", "d": "7/2016"}, {"body": "also running issue karma running latest version proposed temporary workaroundfix requiring reactcomponenttreedevtool nt work either", "d": "7/2016"}, {"body": "fix soon released", "d": "7/2016"}, {"body": "also rcs npm try using", "d": "7/2016"}, {"body": "gaearon test official release warning gone thanks hard work", "d": "7/2016"}, {"body": "great thanks verifying", "d": "7/2016"}, {"body": "versions running still seeing multiple instances react reactdom karma karmamocha karmamochareporter mocha node npm mac os repro steps clone build test mxstbrreactboilerplate tests pass errors seem appear tests testing featurepage produce errors ractaddonstestutils included reactboilerplate project adding remove errors", "d": "7/2016"}, {"body": "please specify exact version boilerplate reproduce git commit hash would fine", "d": "7/2016"}, {"body": "gihrig sorry test personal project still warning gaearon latest commit reproduce travisci result still see warning btw use maybe another problem node npm mac os", "d": "7/2016"}, {"body": "gaearon problem appearing since updating reactreactdom reactboilerplate tested", "d": "7/2016"}, {"body": "sources docs links work read website instead", "d": "7/2016"}, {"body": "cc jimfb", "d": "7/2016"}, {"body": "jim hackamonth perhaps spicyj knows", "d": "7/2016"}, {"body": "similar issue setting value controlled inputs type date type time worked fine desktop chrome nt display value ios chrome safari getting events triggered value seemed set input displayed interestingly page rendered server side using reactdomserver everything worked fine rendered client side dice downgrading fixed problem", "d": "7/2016"}, {"body": "kcraw interesting clue maybe means", "d": "7/2016"}, {"body": "meet mobile browser also default value already set could nt rendered correctly", "d": "7/2016"}, {"body": "downgrade today something similar mobile ios datetimelocal input controlled value basically input would look empty change value manually even putting back value looks like bug initialization", "d": "7/2016"}, {"body": "possible bug chrome android checkout codepen directly assigning date field produce ui update yet value set log get correct date way get display android assign defaultvalue value way around like chrome android trying smart update ui value changes", "d": "7/2016"}, {"body": "think running prod version react tests testutils nt entirely compatible generally expect running dev mode case particular going blame actually removed dead code nt used production builds way removal broke use case though cc gaearon line issue going fail", "d": "7/2016"}, {"body": "oops thought testutils devonly technically supporting running prod", "d": "7/2016"}, {"body": "worked seems reasonable supported production pretty simple adjust build set test run", "d": "7/2016"}, {"body": "using nodeenvproduction avoid warnings guess write better tests code", "d": "7/2016"}, {"body": "include fix next version sorry messed", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "zpao gaearon solution mind going forward ci testing run tests circleci want run production environment representative possible code actually behave production switching test environment dev feels like would defeat one central purposes ci server", "d": "7/2016"}, {"body": "difference except perf warnings dev prod versions react super important us facebook committed keeping way nt think running unit tests prod env would valuable", "d": "7/2016"}, {"body": "end end tests different matter would nt need testutils anyway", "d": "7/2016"}, {"body": "errors developer console", "d": "7/2016"}, {"body": "maxdeviant found cause problem webpackdevserver run app inside iframe react dev tools ca nt load thanks", "d": "7/2016"}, {"body": "general advise render items use something like instead however indeed seems like perf regression appears spending little time per item adds items scratch appear cause", "d": "7/2016"}, {"body": "simple scenario unmounting components bottleneck somewhere reconciliation react reconciling fast right away react reconciling slow first notice long compared applying dom updates warms exactly two mountunmount cycles notice size less relative dom updates", "d": "7/2016"}, {"body": "looks like sort optimization kick unmount lot components able drastically reduce time seconds milliseconds react replacing statements assignment two places simpleeventplugin eventpluginhub probably real solution think leaving means memory keeps growing even property keys still wonder similarly penalized", "d": "7/2016"}, {"body": "replacing objects maps gives similar performance improvements", "d": "7/2016"}, {"body": "fixed thank much caring providing specific instructions", "d": "7/2016"}, {"body": "quick experiment ran benchmarks firefox versions ran speed chrome mean slow surely hope fix would fix firefox", "d": "7/2016"}, {"body": "maybe putting fields internal instances instead global maps help firefox would like investigate slow", "d": "7/2016"}, {"body": "gave look firefox slowness due dom slow think fix", "d": "7/2016"}, {"body": "gave look firefox slowness due dom removechild slow really appreciate firefox bug report testcase", "d": "7/2016"}, {"body": "bzbarsky filed information bug nt time reduced testcase though", "d": "7/2016"}, {"body": "fwiw removechild slow gecko layout idea whether setting display none removal might speed process might help done element removechild called", "d": "7/2016"}, {"body": "julienw thank filing", "d": "7/2016"}, {"body": "btw two motivations request existing codemods nt help us much since react code coffeescript nt great test coverage across frontend finding fixing warnings prod next line defense", "d": "7/2016"}, {"body": "sure issue exactly clear using react native want file issue use something like stack overflow get assistance", "d": "7/2016"}, {"body": "hi update estimated date yet", "d": "7/2016"}, {"body": "rcs available npm final probably tomorrow early next week need check getting react native coverage", "d": "7/2016"}, {"body": "zpao reason rcs nt listed releases", "d": "7/2016"}, {"body": "nt typically make changelogs tag everything rcs also typically nt push bowercdns nt super interesting nt least rcs minor releases nt exactly rcs anyway eg throw new semverminor things rcs still refining process minor amp patch releases room change", "d": "7/2016"}, {"body": "thumbsup", "d": "7/2016"}, {"body": "shipped url set destination document getting built", "d": "7/2016"}, {"body": "unfortunately ca nt really scale providing support via github encourage make use resources like stack overflow let us keep github issues focused bugs enhancements react much possible going close result quick read might typo instead otherwise may run issues jquery plugin looks like going modify dom put react inconsistent state component renders good luck though", "d": "7/2016"}, {"body": "kevinsuttle extent yes look code imagine would quite obvious went wrong render function rather predictable simple especially comes root", "d": "7/2016"}, {"body": "think open fixing specific would like make pr", "d": "7/2016"}, {"body": "would good place start", "d": "7/2016"}, {"body": "would search message part look conditions lead think reactcompositecomponentjs might fire couple places could probably add perfect could potentially object might help understand typical cases leading warning lead people right direction instead showing info thoughts", "d": "7/2016"}, {"body": "yeah usually run things like return wrong type hoc eg object vs react element forget module", "d": "7/2016"}, {"body": "syranide nt think quite obvious receiving larger merge referenced warning reason taken granted get developing personally almost cases receive pull either project one component libraries especially useless get component name real possibility actually finding error without manually checking end every file run ts check half code ts quite risk spend time", "d": "7/2016"}, {"body": "cliren feel added directly component missing anything js import react react import render reactdom const mycomponent props gt let classname otherprops props let classnames message classname join return render documentgetelementbyid app", "d": "7/2016"}, {"body": "appreciate thought nt going conditional merging props composite component decide wants handle props implementation couple examples could implementation works react native nt mean anything sort course scheduling component actually referring course name also case used root node composite child", "d": "7/2016"}, {"body": "historical context helper called years ago exactly thing proved confusing removed", "d": "7/2016"}, {"body": "thanks zpao good reasons use especially needs applied child within composite gaearon nt know existed thanks pointing might little confusing initially said reasons web react felt like perfect jsx convention", "d": "7/2016"}, {"body": "definitely using es proxies production builds new feature supported older browsers generally agree confusing justification heard sebmarkbage constructor runs instance exist yet makes sense constructor finished schedule update like normally however quite see make write map maybe could give try could discuss pr fully understand implications promises merging could starting point discussion think another intention never write constructor logic instead would use property initializer syntax however part language yet know makes", "d": "7/2016"}, {"body": "feel also violates uap essentially equivalent classes initializing property class seems much clearer call constructor general source confusion bugs able set state two different ways maybe allowed update state would confusing imo pretty clear distinction state initialization state updates ca nt update state assignment ca nt initialize state distinct purposes", "d": "7/2016"}, {"body": "technically best way setstate initializer add reducer queue conditionally pass initial state setstate misnomer really enqueuestatetransition nothing transition initially gaearon case would synchronous since want alwaysbatched also store sidetable also need store second argument sidetable kill feature storing global sidetable nt good call component need weakmap sidetable thing violates composition pattern know weird class semantics possible break rules classes weird", "d": "7/2016"}, {"body": "could stupid suggestion could possibly mitigated adding constructing property reactcomponent constructor update reactcomponent setstate check property set thisstate constructing delete property reactcompositecomponent constructcomponentwithoutowner think place component constructed would allow use throughout constructor would equivalent", "d": "7/2016"}, {"body": "cc jquense spicyj jimfb mooore", "d": "7/2016"}, {"body": "found seems keyboard copypaste sometimes trigger event sometimes right click select paste always failed trigger event", "d": "7/2016"}, {"body": "gon na say issue rest without looked work work using master works sometimes suggests itas due polyfill needing focus inputs would think context menu version steals focus", "d": "7/2016"}, {"body": "anggao seen fiddle shared instead use tested working fine", "d": "7/2016"}, {"body": "thanks work according react doc onchange supersedes generally used instead dom builtin oninput event handler", "d": "7/2016"}, {"body": "jquense checked works", "d": "7/2016"}, {"body": "found wo nt work", "d": "7/2016"}, {"body": "issue seems occurs", "d": "7/2016"}, {"body": "works correctly master", "d": "7/2016"}, {"body": "pass callback last argument toplevel get called updates flushed satisfy use case", "d": "7/2016"}, {"body": "want callback called every round updates flushed specific ones", "d": "7/2016"}, {"body": "sounds like bad idea component decides animate end running unrelated clean code every time ca nt queue cleanup relevant components", "d": "7/2016"}, {"body": "vjeux want server wrote pretty similar requirement", "d": "7/2016"}, {"body": "show code clear referring", "d": "7/2016"}, {"body": "wellit would nice write something like var state course definitely issue", "d": "7/2016"}, {"body": "state either ca nt change lifecycle code inside mixin otherwise nt understand need support use cases exists nt", "d": "7/2016"}, {"body": "think ruifortes trying use defaults work value bad example say want log properties general logging function default empty object would log nt use default params would throw error", "d": "7/2016"}, {"body": "kind embarrassed mentioning something like destructuring assignment default values least babel regard null value", "d": "7/2016"}, {"body": "reasonable question though imagine changing would breaking lot users using checks like", "d": "7/2016"}, {"body": "would bad allocate empty objects every component state case somebody decides pass function knowledge current component state close feel free continue discussion please let know missed important common use case understand es default arguments work see pass somewhere know component state", "d": "7/2016"}, {"body": "goes contribution project p", "d": "7/2016"}, {"body": "like contribute watch good first bug issues", "d": "7/2016"}, {"body": "gaearon would bad allocate empty objects every component state think meant allocate instead empty object", "d": "7/2016"}, {"body": "ah sorry right misread one comments still see compelling use case would write class know state exist", "d": "7/2016"}, {"body": "situation nt provide initial state called timeout passing somewhere say logging purposes would timeout resolved could use default argument logger avoid null checking property access probably corner case easy handle recommending supported use case per se trying illustrate users might trying", "d": "7/2016"}, {"body": "situation nt provide initial state setstate called timeout oh see reason thought enforced call unless also provide initial state seems like wrong let keep closed seems like benefit minimal issues much higher priority enough support behind people ask reconsider", "d": "7/2016"}, {"body": "oh see reason thought enforced call setstate unless also provide initial state seems like wrong seems like reasonable assumption good reason possibly require behavior future versions react sure let keep closed seems like benefit minimal issues much higher priority enough support behind people ask reconsider either way nt think changing would worth breaking change check checking would break", "d": "7/2016"}, {"body": "also nt merged reasons given", "d": "7/2016"}, {"body": "exactly think desired behavior far tell react currently behaves reasonably could expected proposal add warning given options selected specified think react", "d": "7/2016"}, {"body": "jimfb example comment mentioned think react select proper option value option", "d": "7/2016"}, {"body": "chicoxyzzy example shows behavior user selects option manually react supposed set someone calls set seems reasonable select first matching warn since likely behavior user wants", "d": "7/2016"}, {"body": "aweary exactly dom", "d": "7/2016"}, {"body": "specifically asking selects first item list equal values rather selecting last item react seems reasonable nt see change would make warning less helpful", "d": "7/2016"}, {"body": "propose add warning continue violate consistency react nt follow spec", "d": "7/2016"}, {"body": "react select valid options mouse keybord events", "d": "7/2016"}, {"body": "propose add warning continue violate consistency react nt follow spec said reasonable react select first item like dom example would inconsistent adding warning using duplicate values controlled component totally reasonable unique case", "d": "7/2016"}, {"body": "aweary try change select mouse keyboard examples", "d": "7/2016"}, {"body": "unique case nt ok nonunique values options markup", "d": "7/2016"}, {"body": "nt ok nonunique values markup talking controlled react components render uncontrolled component multiple duplicate mousebutton events work", "d": "7/2016"}, {"body": "chicoxyzzy think talking past aweary instead trying understand saying everyone agreement html allows nonunique values uncontrolled inputs problem occurs try specify one values using controlled component per comment said think react select proper option value option make sense proper option set possible options specify matching value never actually answered question believe react user specifies value vegetable", "d": "7/2016"}, {"body": "react manage value element javascript think context imagine trying vanilla js event listener supposed identify option right option run example see nt work analogous react controlled component example analogous uncontrolled component", "d": "7/2016"}, {"body": "ok nt warn case controlled element ie prop duplicate options duplicate options could desired business logic cases warning emitted proper uncontrolled select emitted potentially dangerous controlled select warning shown", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "ok makes sense thank close issue", "d": "7/2016"}, {"body": "thanks proposal would right place discuss issue voice support", "d": "7/2016"}, {"body": "ah right sorry", "d": "7/2016"}, {"body": "know well think design prop means declaring custom element example js works thanks var xcomponent documentregisterelement xcomponent extends input prototype objectcreate htmlinputelementprototype react feature people wanted better interoperability react custom elements part web components specs recommend using react components composition welcome try web components like try play nice however web components mode reliably say translated custom web components potentially unrelated attribute called respect specify mode longer becomes read case probably mean use attribute enter web components mode able stop passing prop get regular hope helps", "d": "7/2016"}, {"body": "thanks makes sense", "d": "7/2016"}, {"body": "example regression using react using react showing yes see problem well cc jimfb", "d": "7/2016"}, {"body": "two problems set set actually translates makes still named", "d": "7/2016"}, {"body": "syranide updated first gist proper version sorry messed bit", "d": "7/2016"}, {"body": "objections like try fix one wednesday july andrey okonetchnikov notifications githubcom wrote syranide updated first gist proper version sorry messed bit receiving subscribed thread reply email directly view github mute thread", "d": "7/2016"}, {"body": "already", "d": "7/2016"}, {"body": "k problem", "d": "7/2016"}, {"body": "assume talking issues setup want contact looks like version dep react ok pick react though perhaps reactnative still looking lower version getting used tell versions getting installed result dependencies", "d": "7/2016"}, {"body": "manu npm ls react snapchat usersmanudesktopsnapchat react getting", "d": "7/2016"}, {"body": "hey manulourdes use react issue tracker bugs react since bug recommend open issue repo ask stackoverflow instead repo owner knowledge dependencies thanks", "d": "7/2016"}, {"body": "nigelterry warning states use instead see docs tags attributes supported atrributes", "d": "7/2016"}, {"body": "duh sorry", "d": "7/2016"}, {"body": "thanks yes duplicate", "d": "7/2016"}, {"body": "gaearon nt sure wanted separate issues different causes wanted single issue tracking symptom cheers", "d": "7/2016"}, {"body": "yea thanks filing issue good several test cases", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "interestingly also appears triggered usage inside", "d": "7/2016"}, {"body": "okay fix", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "hello created small project gives warring link smallkit please try tell problem cant find thankful help", "d": "7/2016"}, {"body": "bug react fixed master please wait next release fixed next release please file another issue", "d": "7/2016"}, {"body": "hey still getting warning specifically running tests jest", "d": "7/2016"}, {"body": "file issue code reproducing thank", "d": "7/2016"}, {"body": "gaearon go", "d": "7/2016"}, {"body": "fixes issue", "d": "7/2016"}, {"body": "hi group maintained us nt think help anything considered spam linkedin report maybe fine nt know terms use issue tracker bugs feature requests close actionable us cheers", "d": "7/2016"}, {"body": "thanks report believe message contains link tried following says might adding ref component created inside component method multiple copies react loaded details link details links gist explains fix", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "uhhh seems missed culprit", "d": "7/2016"}, {"body": "think links behavior saved correctly current behavior reactjs reactjs", "d": "7/2016"}, {"body": "thanks catching put something least fixes constant render case think always problem toggled value inputs real value undefined worried trying handle", "d": "7/2016"}, {"body": "using updates component state inside move one react lifecycle methods probably see docs details", "d": "7/2016"}, {"body": "oh right thanks", "d": "7/2016"}, {"body": "duplicate", "d": "7/2016"}, {"body": "symptoms problem warning", "d": "7/2016"}, {"body": "bug per se see warning attribute currently unsupported think solved seems closer zpao wanted", "d": "7/2016"}, {"body": "would", "d": "7/2016"}, {"body": "merged closing", "d": "7/2016"}, {"body": "works fine even log value console shows press button value updated thus prints updates range correctly nt see anything wrong besides jsfiddle edit bad mouse buggy double clicks automatically sometimes gt lt ok see mean yeah something wrong", "d": "7/2016"}, {"body": "duplicate basically range input truncates value according minmax react nt consider apply properties wrong order causing truncated first limits updated", "d": "7/2016"}, {"body": "really kind hacky bad idea cases put minmax key range input always show correctly", "d": "7/2016"}, {"body": "syranide saw fixed fix applied step parameter would fix also work minmax values", "d": "7/2016"}, {"body": "mikecao yeah work", "d": "7/2016"}, {"body": "happens executing function render method lt execution instead bind method constructor pass method input without calling method get value state", "d": "7/2016"}, {"body": "thanks guidance", "d": "7/2016"}, {"body": "yea looks like missed would like send pr fix added yes real prop", "d": "7/2016"}, {"body": "gaearon sure working atm", "d": "7/2016"}, {"body": "gaearon done", "d": "7/2016"}, {"body": "thanks please sign cla amp good go", "d": "7/2016"}, {"body": "gaearon done", "d": "7/2016"}, {"body": "seeing similar errors unknown props div tag remove props element details see would fix resolve warning well", "d": "7/2016"}, {"body": "properties part api likely getting warning somewhere else either need filter component utilizing passing props underlying dom element third party component raise issue maintainer case nt read link warning suggest first explains problem pretty well still confused come join us reactiflux help", "d": "7/2016"}, {"body": "fixed ships might want wait days case extra warnings discovered", "d": "7/2016"}, {"body": "perhaps missing export default class", "d": "7/2016"}, {"body": "thing thought self contained functions jul alex zherdev notifications githubcom wrote perhaps missing export default class receiving authored thread reply email directly view github mute thread", "d": "7/2016"}, {"body": "think leave named export would need import like nt react issue modules going close since discussion going feel free work reopen turns react issue", "d": "7/2016"}, {"body": "see also answer default named imports exports", "d": "7/2016"}, {"body": "hmm taint trackingchecking super common concept security community furthermore nt know means ignore sentence follow practice recommendeddescribed page goodtogo relying user understanding term term super helpful descriptive anyone know means think certainly want leave term immediately clear make documentation better without directly defining term nt want get habit defining every term every page makes documentation far verbose cluttered people nt know word always look", "d": "7/2016"}, {"body": "certainly improve language nt expect everybody reading know also first google result taint nsfw let rely people ability search correctly either leave term clarify intent", "d": "7/2016"}, {"body": "using instead", "d": "7/2016"}, {"body": "know td element attaching onchange handler think passed onchange td code equivalent onchange implicitly transferred spread operator maybe nt notice set props explicitly write sth like", "d": "7/2016"}, {"body": "bubbling intentional imho weird karczk correct even rely components silently dropping unknown properties may change future", "d": "7/2016"}, {"body": "think failed expressing point issue code little misleading agree karczk know intentional need pass props regular know render think weird element firing event consistent intuitive element editable meaning receive user input exception events syranide agree dealing party components rely core lib documentation tell matter fire click event fired one children assuming wo nt happen honest mistake fact see following bin event fire think right even adding element event handler inside really think inconsistent desirable behavior flagged bug happens glad try fix attach pr issue", "d": "7/2016"}, {"body": "simpler reproduction issue", "d": "7/2016"}, {"body": "agree dealing party components rely never rely react may future frontends render properties without whitelist never good idea rely ignoring unsupported properties fact see following bin onchange event fire think right course wo nt fire click event simpler reproduction issue personally think bad feature actively rely tangential discussions surrounding bug", "d": "7/2016"}, {"body": "never rely react may future frontends render properties without whitelist never good idea rely ignoring unsupported properties understand point fairly good one keep mind thanks course onchange wo nt fire click event event checkbox element translated event react makes statement obvious personally think bad feature actively rely tangential discussions surrounding bug feature relies noneditable element firing event checkable element inside could please provide use cases", "d": "7/2016"}, {"body": "onchange checkbox element translated onclick react makes obvious huh checkbox source td click feature relies noneditable element firing onchange could please provide use cases nt agree bunch people large number inputs building forms seem prefer one centralized handler made heard various changes made willhave affected personally think bad idea kinds reasons people rely necessary larger discussion around outright drop", "d": "7/2016"}, {"body": "huh checkbox source td click think missing point behaving differently consistent knowing essencially code knowing react translate checkable elements nt agree bunch people large number inputs building forms seem prefer one centralized handler made heard various changes made willhave affected nt even know possible see somewhat useful still feature documented anywhere assuming case component object react older versions curious know many hidden features depths react thanks enlightenment syranide really helpful", "d": "7/2016"}, {"body": "think weird td element firing onchange event consistent intuitive td element editable meaning receive user input exception onclick events bubbling dom amp triggered input elements triggers amp events dom behaves", "d": "7/2016"}, {"body": "hello please anyone tell disable warning thank", "d": "7/2016"}, {"body": "kennyhk also want disable warning cry", "d": "7/2016"}, {"body": "ca nt disable nt add warnings make life harder warns problematic pattern behave unexpectedly next major version need fix use third party libraries warnings come need file issues libraries get fixed please read warning discussion", "d": "7/2016"}, {"body": "load svg files react components using svgreactloader svgs come illustrator prop react nt recognize opinion library responsibility keep date props react supports responsibility remove props react nt like react support solution", "d": "7/2016"}, {"body": "think support xmlns merged days ago next version", "d": "7/2016"}, {"body": "awesome hear thanks future right solution try keep react list accepted props complete uptodate", "d": "7/2016"}, {"body": "yes however pretty much everything svg html hopefully nt much missed fully expect new specs come us need handle", "d": "7/2016"}, {"body": "would nice able traverse tree", "d": "7/2016"}, {"body": "currently trying use jest snapshot testing component contains ref makes call fails component js import react react export default class link extends reactcomponent render return test js use strict import react react import link link import renderer reactlibreacttestrenderer describe link gt renders correctly gt const tree renderercreate tojson stack trace", "d": "7/2016"}, {"body": "ryanseddon file new issue specific problem issue tracking apis", "d": "7/2016"}, {"body": "apologies done", "d": "7/2016"}, {"body": "zpao yup someone irc channel suggested", "d": "7/2016"}, {"body": "mutating dom react components allowed render hello component child", "d": "7/2016"}, {"body": "karczk nt case application partially uses react marionette migrate react root layout rendered react app component next stuff rendered marionette marionette renders react component hello component case like example", "d": "7/2016"}, {"body": "addition aweary describes ive also reset document stashes state unique react key without document reset thing react remains broken last unmount state thinks already added event listeners removed unmount last component im using simple examples react seems correctly remove global document event listeners last comp unmount add back new component rendered mounted hope bit work soon enuff", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "see ok good know page right workaround come anything post", "d": "7/2016"}, {"body": "going pushing shortly see spicyj send pr update rn additional commits since rc local reactdom final perfectly safe update rn even rc", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "update tutorial repo jsfiddles", "d": "7/2016"}, {"body": "hiya probably wrong place ask particular reason stopped updating blog know read release notes like seeing short summary changes even hey release nothing special also bit discoverable imo", "d": "7/2016"}, {"body": "simenb imo much blog post every minor release", "d": "7/2016"}, {"body": "second simek thoughts ember decent job blogging releases helpful subscribing rss feeders", "d": "7/2016"}, {"body": "selvagsz also subscribe feed releases", "d": "7/2016"}, {"body": "spicyj trying one suggestion seems straight forward fix ironically struggling writing failing test probably unfamiliarity testing utils tried among ton variations could repro issue var hello reactcreateclass getinitialstate function return data onchange function e thissetstate data etargetvalue render function return stub reacttestutilsrenderintodocument var node reactdomfinddomnode stub expect nodevalue tobe thanks", "d": "7/2016"}, {"body": "troydemonbreun thanks possible jsdom nt emulate range behavior properly sure", "d": "7/2016"}, {"body": "case okay taking without unit test long verify fix browser could mock setters make sure called right order", "d": "7/2016"}, {"body": "sure provide test", "d": "7/2016"}, {"body": "andersekdahl getting error server side rendering reduxconect nt anything like code related issue opened reduxconnect happens one props updates causing component rerendered rendered server using react edit investigating found tags server generated html coming twitter following button widget removing longer get error wonder happens done fix solution render twitter button client side causes checksum mismatch client server", "d": "7/2016"}, {"body": "seems disappeared", "d": "7/2016"}, {"body": "fixed thanks", "d": "7/2016"}, {"body": "sweet thanks", "d": "7/2016"}, {"body": "fix landed", "d": "7/2016"}, {"body": "would assume since fix master midjune went ask still seeing problem large form machines sufficient slowness nt go yet estimate go", "d": "7/2016"}, {"body": "hankmccoy master would nt include", "d": "7/2016"}, {"body": "company works construction industry therefore lot clients old machines filling massive forms pretty substantial problem us know codebase fix applied seriously considering temporarily forking order cherrypick fix even remotely feasible thanks ludicrously fast reply jquense", "d": "7/2016"}, {"body": "forget pr number npm install react next might", "d": "7/2016"}, {"body": "sadly react next still fix pr question cherry picked change onto branch locally rebuilt app forked version still seeing problematic behavior perhaps changes contribute fixing missed", "d": "7/2016"}, {"body": "believe one think releases alpha perhaps", "d": "7/2016"}, {"body": "tests react completely breaks total white screen death even using prod builds alarming makes building progressively enhanced web apps cumbersome work ship initial html react destroys including page separate proof concept issue would willing work pr issue confirmed", "d": "7/2016"}, {"body": "nt actively support anymore wo nt taking active measures like fix places including page breaks things consider", "d": "7/2016"}, {"body": "jpdevries might able solve problem calling reactdomrender supported browsers eg checking user agent using ie conditional comments", "d": "7/2016"}, {"body": "brigand tried removing entirely nt even trick react andor reactdom included page maliciously deletes entire body tag", "d": "7/2016"}, {"body": "zpao thanks info see whip something understand support destroy page completely seems aggressive far able feature detection see old browser nt load scripts nt seem like process many web developers would follow", "d": "7/2016"}, {"body": "jpdevries saying good solution behavior acceptable quick fix try wrapping scripts ie conditional comment strangely way say ie ie less far tell might need use documentwrite js function var mynav navigatoruseragenttolowercase mynavindexof msie parseint mynavsplit msie gt documentwrite documentwrite documentwrite", "d": "7/2016"}, {"body": "brigand would something much different use feature detection instead useragent html var doenhancments documentaddeventlistener true false super annoying reactredux bork page turn blank white screen even try load doenhancments documentwrite lt script doenhancments try redux catch e documentwrite lt script doenhancments try react catch e documentwrite lt script load react redux dependencies cdns local fallbacks also tried trick create global variable use ie conditionals set global variable true false prefer feature detection method though", "d": "7/2016"}, {"body": "btw would nt documentwrite defer script think wipe document create script tags append", "d": "7/2016"}, {"body": "good point brigand ok record testing seems local fallback part issue nt able reproduce white screen death ie without local fallbacks good know", "d": "7/2016"}, {"body": "similar issue try render english content components works fine try load hindi get error uncaught promise typeerror read property replacechild null set encoding charset using react", "d": "7/2016"}, {"body": "anshulmalik afraid information enough help small example reproducing issue would helpful", "d": "7/2016"}, {"body": "issue resolved assuming variable array case variable undefined component issues rendering", "d": "7/2016"}, {"body": "created prototype solution problem basic idea render component twice serverside get html get checksum example component want render serverside want send data twice html json solution set always return false server render component props call server render component props call parse attribute value inject basically lying client contents markup send following back client init logic calls props rawhtml rejoice reactdomrender called client think incorrectly good dom matches props gave checksum matches render without props remove serverrendered rawhtml content page give checksum error also shouldcomponentupdate returns false never removes content unless component fully unmounted far see two problems performance overhead doublerendering serverside react team might break relies implementation detail anybody see problems", "d": "7/2016"}, {"body": "understand refs little better", "d": "7/2016"}, {"body": "gaearon interested solution came hoc situation wrapping input provide additional functionality would like still able example", "d": "7/2016"}, {"body": "tommoor asking proposal workarounds existing react versions", "d": "7/2016"}, {"body": "gaearon sorry got impression understood refs better therefore longer needed looking prsissues perhaps nt actually case workaround seamless expose wrapped components ref", "d": "7/2016"}, {"body": "cynicaldevil zeel still working issue could link pr like work bug let know help", "d": "7/2016"}, {"body": "salehhindi zeel working issue think two take", "d": "7/2016"}, {"body": "bug react nt warn fix behaviour eliminate inconsistency cc jimfb", "d": "7/2016"}, {"body": "taking issue start", "d": "7/2016"}, {"body": "zeel sadly already worked", "d": "7/2016"}, {"body": "zeel started working weeks ago sorry forgot mention", "d": "7/2016"}, {"body": "michelgotta become uncontrolled component gitrichard problem go code", "d": "7/2016"}, {"body": "shows warning first time finds element duplicate value following also duplicate values display warning correct behavior show warning duplicates first one finds", "d": "7/2016"}, {"body": "gaearon status getting results back seeing warning crop code fiddle reproduces warning component converted syntax", "d": "7/2016"}, {"body": "interesting generally nt tested reactperf scenario much primarily meant used browser console wrapping component support scenario better fixed probably bug send pr adds similar case failing test test fall expected warning merely triggering behavior enough", "d": "7/2016"}, {"body": "nathanmarks please check works change clone react run copy test effect", "d": "7/2016"}, {"body": "gaearon looks good end warning gone awesome", "d": "7/2016"}, {"body": "think cases related solved please let know case reproducing issue", "d": "7/2016"}, {"body": "nt know issue got happened added minimal code working boilerplate kit import component proptypes react class panel extends component render return export default panel added inside render method another preexisting component edit goes away instead use still error confusing", "d": "7/2016"}, {"body": "jdelafon ton code would rather avoid spending minutes setting discover reproduce issue would mind extracting relevant part produces warning separate github project jsfiddle could inspect", "d": "7/2016"}, {"body": "warning also shown something pretty sure intended behavior", "d": "7/2016"}, {"body": "unfortunately ca nt reproduce minimal case probably something wrong setup", "d": "7/2016"}, {"body": "check duplicate react bundle maybe component contains copy mistake", "d": "7/2016"}, {"body": "experienced issue first thing trying gaearontodos", "d": "7/2016"}, {"body": "experiencing one", "d": "7/2016"}, {"body": "hard us isolate problem without knowing warning comes seems reactdebugtool catching kinds errors especially happens really error case hides real message nt reactaddonsperf packagejson", "d": "7/2016"}, {"body": "hard us isolate problem without knowing warning comes seems reactdebugtool catching kinds errors especially render trycatch statements likely happens might promise polyfill log unhandled rejections therefore errors thrown inside get caught polyfill never reported react gets inconsistent state see warning symptom real problem error thrown method make sure whatever promise polyfill using swallowing experienced issue first thing trying gaearontodos please provide exact steps reproduce cloned project ran see warnings reiterate happy reopen real issue help without project reproducing", "d": "7/2016"}, {"body": "gaearon managed reproduce create typo called result", "d": "7/2016"}, {"body": "additional note realise nt hiding message personally nt able reproduce manner completely hides error message nt got problem application except using hmr react hot loader app create reference error render let get hot reloaded get error hmr gives reference error complete refresh see unhandled promise error console", "d": "7/2016"}, {"body": "yeah sure completely mask error way perf tools warning intended fire circumstances", "d": "7/2016"}, {"body": "gaearon managed reproduce gaearontodos looks like correct behavior error printed gets react inconsistent state probably rephrase include something", "d": "7/2016"}, {"body": "let reopen definitely make userfriendly open suggestions", "d": "7/2016"}, {"body": "rephrasing good option certainly correct behaviour given happens current message could confusing one thing nt able reproduce masking original error jdelafon shed light reproduce", "d": "7/2016"}, {"body": "apparently notice real error warning reproduced example saw fine rephrasing warning fix", "d": "7/2016"}, {"body": "rephrasing seems like good idea started seeing errors like upgrading see thrown anytime error one components happens frequently development thought additional problem due wording message", "d": "7/2016"}, {"body": "got think mistake enable default change active tests get back soon", "d": "7/2016"}, {"body": "considered fixed using warning repeated times console error repeated times console page failed render", "d": "7/2016"}, {"body": "problem using undefined variable errorwarning messages completely misleading defining variable works without warnings errors", "d": "7/2016"}, {"body": "please provide sample reproducing", "d": "7/2016"}, {"body": "thanks quick reply need create one code open source asap", "d": "7/2016"}, {"body": "thanks reopen radar clear likely bug react actual error probably component got react inconsistent state recover errors least spam warnings", "d": "7/2016"}, {"body": "yeah understand bug react produced problem said think could handled better developer could find issue easier spamming warningserrors making tab unresponsive could nt even refresh close chrome tab kill nt nice", "d": "7/2016"}, {"body": "yea totally least make warning warn enough us catch issues tests solves spamming problem relevant code would like send pr fix could keep bool use flag decide whether log warning ignore silently", "d": "7/2016"}, {"body": "sure try manage weekend", "d": "7/2016"}, {"body": "even though manages reduce warnings still problem errors chrome tab getting unresponsive around minute user kill", "d": "7/2016"}, {"body": "errors referring", "d": "7/2016"}, {"body": "look first comment", "d": "7/2016"}, {"body": "errors appear unrelated issue thread general currently support gracefully recovering errors thrown components may come later right yes see many errors thrown recommend scrolling first one fixing usually causes others", "d": "7/2016"}, {"body": "see thanks info guess close", "d": "7/2016"}, {"body": "big bug us know fix released need decide whether revert thanks", "d": "7/2016"}, {"body": "new thinking create new variable stores tag mouse currently mouse two elements detect currently mouse element automatically trigger onmouseout event rest elements onmouseover true also bring another variable involving mouse speed thoughts", "d": "7/2016"}, {"body": "yet would seem falls category well changes around inline amp auto playing videos ios inline auto video playback ios webkitplaysinline property specified safari iphone allows videos play inline videos without property commence playback fullscreen users pinch close video continue playing video inline ios videos without audio tracks disabled audio tracks play automatically webpage loads source", "d": "7/2016"}, {"body": "jimfb guide submitting new elements support tests run etc", "d": "7/2016"}, {"body": "written guide short guide test component render importantly update possible attributes events adding handlers clicking whatever fire events nt really automated process past usually modify one examples run local build", "d": "7/2016"}, {"body": "yeah thinking well thanks", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "changes master fix included new react build", "d": "7/2016"}, {"body": "gaearon zpao news fb approaching proposal made gaearon using array seems promising one one would minor overhead general react rendering cycle make decision may like offer less technical feedback bit confused ambivalence fb dealing css js idea one hand vjeux presentation set world fe development motion around idea hand seems fb committed backingin full support see zpao comment recommending plain old style sheets example team chose go js styles project felt designwise superior choice offer number advantages wanted benefit chose go road knew would hit bumps eg css pseudoclasses threading uncharted waters also thought react project experimenting technology difficulties would hammered community support fb community certainly great job fela radium etc bit taken aback fb recognising importance supporting widely adopted pattern like one described thread true hack right hack allows get job done production various places everybody ventured road using probably fb excellent reasons work community think would helpful guys explicit stance js styling people considering going rabbit hole know", "d": "7/2016"}, {"body": "fela generates stylesheets inline styles radium nt would nt surprised move direction jsxstyle generates stylesheets aphrodite generates stylesheets pushed production people overwhelming solution appears generating stylesheets allows work around issues true inline styles library generates multiple values pseudoclasses fb currently approaching using stylesheets also nt use inline styles much vjeux probably speak experimentation internally think approach also going generate stylesheets advice using js styles nt use pure form entire application fine couple things hit wall pretty quickly apps use helper generates stylesheets", "d": "7/2016"}, {"body": "still figuring properly manage js styles web react native using js styles everywhere working really well us web current strategy generate css reason lot css transforms run bundle time unpractical today reproduce javascript likely fbspecific problem", "d": "7/2016"}, {"body": "thank zpao vjeux got back promptly good important snapshot fb stands right couple clarifications still figuring properly manage js styles web means concretely js styles something fb committed adopt future actively working like people thinking experimenting problem yeah maybe eventually somebody stumble upon genius way support react approaches necessary line fb heading example feature request clearly something fb using planning use either much fb committed serve needs community whose usage patterns may necessarily line corporation sponsoring project guess goal asking two really react end users boldly ventured man gone expect support usage patterns fold back change architectures conform fb uses honest question given last week gaearon surprise something use fb beneficial community", "d": "7/2016"}, {"body": "good opportunity explain current situation regarding styles react started working react native years ago needed figure solution styles time adding styles props thinking point need implement css selector engine right lazy want get started write styles js use inline styles display turns worked really well solved bunch problems css kept going react native going open source react native months super worried unconventional way styles going overshadow launch like jsx react decided talk explain current way write css facebook crazy alternative goal defuse drama around launch also spawned huge field research around different ways writing styles react context absolutely anticipated coming lot people excited writing styles js question facebook thought hard tricky situation current setup cx explain first part presentation complex setup non standard solves large amount problems also solved styles javascript situation changing styles js would mean lot infrastructure work change way every fb engineer write code maybe improvement far conclusion worth effort sad practical realistic response keep evaluating decision ongoing basis cost analysis may change future one promising thing able share components react native web good enough reason investment see hope helps", "d": "7/2016"}, {"body": "hey vjeux thanks lot extensive reply kudos fb recruits engineers engage community imo answer would make core great blog post btw", "d": "7/2016"}, {"body": "simpler case reproducing issue seems happen changing also able reproduce warning safari firefox os x also nt seem occur using", "d": "7/2016"}, {"body": "interesting bug check poking around initial thought assign updatewrapper sane eliminates bug simple feels shallow think", "d": "7/2016"}, {"body": "move calls call splitting getnativeprops calls think best solution looks like work", "d": "7/2016"}, {"body": "yes also able get test coverage value nullified dom type changes value longer valid new value assigned valid unrelated pretty cool jsdom picks done", "d": "7/2016"}, {"body": "possible react one event listener document delegates others sebmarkbage", "d": "7/2016"}, {"body": "mrscobbler spicyj ever decided something still implemented seems like discussion whether added based fact events currently bubble kind ended without consensus willing help decide go", "d": "7/2016"}, {"body": "working app needs compliant flyout menu last inner submenu li element fire focusout event parent li go past however nt fire added onblur event nt work expected take look", "d": "7/2016"}, {"body": "navigation done keyboard", "d": "7/2016"}, {"body": "post code example chance created basic example ul two li inner anchor adding onfocus onblur events li events fire correctly bubble inner anchors", "d": "7/2016"}, {"body": "anthonybarsotti set around following home parent item submenu submenu item submenu item last li another test link tab last li go another test li fire onblur event parent item li post sample get set", "d": "7/2016"}, {"body": "mrscobbler please work together wish contribute", "d": "7/2016"}, {"body": "rishirajsurti yes send email anthonybarsotti spicyj decided whether move forward", "d": "7/2016"}, {"body": "anyone needs insight event code feel free ping experience pr past would also like see also current mouseenterleave logic crazy really nt think emulate new features possible already spoken jimfb bit though insight well outstanding pr simplifies mouse logic might helpful stratgey case well", "d": "7/2016"}, {"body": "wait trying add focusinout analogs mouseenterleave personally rarely want behavior native focusblur events however almost always want focusenterleave like events", "d": "7/2016"}, {"body": "jquense yeah think idea bigger question since current onfocus onblur events bubble events renamed new events implemented onfocus onblur nt bubble", "d": "7/2016"}, {"body": "thats confusion comes mouseenter mouseleave bubble much point also behave like native focusblur fire element attached handle gains focus children gain focus sure need invert behavior unless goal actually add something like focusenterleave", "d": "7/2016"}, {"body": "took made adjustments provide initial web support responder system work spread places injecting plugin normalizing native events intercepting events original handlers called would great eventually official dom support responder system panresponder injectrespondereventplugin normalizenativeevent view event handlers", "d": "7/2016"}, {"body": "want", "d": "7/2016"}, {"body": "started something add content coming days", "d": "7/2016"}, {"body": "proofofconcept implementation anyone curious", "d": "7/2016"}, {"body": "sure relevant might help someone solved reactrouter non redux ssr project switching methods made async calls though project similar components difference components making async call nt necessarily rendered reactdom serves tab switcher nt mount nodes unless state condition met probably handled reactrouter well weird code happens", "d": "7/2016"}, {"body": "nossila issuel also using react list found solution", "d": "7/2016"}, {"body": "missing something longer seems api see object", "d": "7/2016"}, {"body": "nope works ok make sure referencing correct object", "d": "7/2016"}, {"body": "oh mention using version", "d": "7/2016"}, {"body": "missing something longer start stop seems make sure version probably see updated one packages", "d": "7/2016"}, {"body": "enumerated everything support would infinite list would extremely common use case us specifically draw attention ah meant point docs facebook nt plan support transition group component ie wo nt merge prs improve rather enumerating use cases component nt support ya think", "d": "7/2016"}, {"body": "ah well plan start moving addons within month two definitely update docs reflect", "d": "7/2016"}, {"body": "workaround need combination determine whether drop enabled checking property available events call value ok effectively enabling drop operation example allow finishing draganddrop move operation javascript dragstarthandler e edatatransfereffectallowed move dragoverhandler e edatatransfereffectallowed move epreventdefault drophandler e edatatransfereffectallowed move epreventdefault reason works without preventing default event behavior draganddrop operation available least enables possibility realtime visual feedback several distinct dragmodes per application", "d": "7/2016"}, {"body": "zpao ca nt used stack trace available using errors example coming react", "d": "7/2016"}, {"body": "coming react bootstrap next version fix", "d": "7/2016"}, {"body": "gaearon example know error fixed react bootstrap concerns react behavior warnings printed errors makes debugging development hard ca nt filter js console think usage considered", "d": "7/2016"}, {"body": "elijen expected prevent warnings fixing code actionable problem specific warnings warnings general", "d": "7/2016"}, {"body": "adding import react react solved weird", "d": "7/2016"}, {"body": "using inside methods fire likely one still running component instance already gone issue got rid replacing intervals timeouts alternative", "d": "7/2016"}, {"body": "please give short example put settimeout clear", "d": "7/2016"}, {"body": "please give short example put settimeout clear using flash call js recommendation relevant please file new issue example reproducing issue thanks", "d": "7/2016"}, {"body": "using flash call js yes please give example thanks", "d": "7/2016"}, {"body": "mean actionscript externalinterfacecall somefancyjsfunction javascript function somefancyjsfunction settimeout body real thing", "d": "7/2016"}, {"body": "yep", "d": "7/2016"}, {"body": "thank ill try see also", "d": "7/2016"}, {"body": "using webpackconf add following block solve issue", "d": "7/2016"}, {"body": "externals necessary using umd build react separate", "d": "7/2016"}, {"body": "gaearon hello using observables react mutating store exactly done views subscribe changes rerender needed using mobx feel like warning unnecessary case cloning style object store creates boilerplate unnecessary operations view observing changes styles values rerender automatically context moving character screen sometimes reset position two examples mutate styles store one case warning appear case wo nt shows incoherence throw warning action storepositionx storepositiony render const style top left throws warning action storestyletop storestyleleft render mutation occurred cases remember use observables valid expected simply change values instead using immutables simulate cloning creating new objects opinion use case ps nt sure creating new issue felt like continuation last comment create new issue", "d": "7/2016"}, {"body": "thank also worked", "d": "7/2016"}, {"body": "alvarocz using anymore current version exists", "d": "7/2016"}, {"body": "pixelastic take reactjsalgoliacom site add robotstxt disallow crawling getting indexed google", "d": "7/2016"}, {"body": "sure thing added redirect official docs instead", "d": "7/2016"}, {"body": "thank", "d": "7/2016"}, {"body": "spicyj issue addressed stumbled exact issue still legal method create elements provided context", "d": "7/2016"}, {"body": "use unstablerendersubtreeintocontainer inherit parent component", "d": "7/2016"}, {"body": "spicyj time question heavily working glreact yet public question bit indirect anyway glreact needs traverse user vdom retrieve vdom nodes importantly deduplicates nodes gl graph one opengl computation done shared nodes explained way current unfold tree implementing jimfb said one year ago comment bellow thanks notice nt replied time works fine downside nt benefit react lifecycle fine pure function components gl component created function moment bit limited able normal vdom rendering tree wondering libraries like something better like decorate component something like reactredux middle reactart tree generically react since separated multiple implementations implements something allow usecase easily still complex topic like new internal helpers provided cheers", "d": "7/2016"}, {"body": "like decorate component something like reactredux middle reactart tree yes restriction right ca nt swap type element composite returns ex making render return return state update breaks otherwise works fully generically react since separated multiple implementations implements something allow usecase easily still complex topic like new internal helpers provided still unsupported sorry reviewed claims walk building react rendering backend", "d": "7/2016"}, {"body": "thanks answer", "d": "7/2016"}, {"body": "add reactart restriction embeds new type inside dom tree react nt really logic support standalone environments like dom native etc nt problem", "d": "7/2016"}, {"body": "close since decided merge", "d": "7/2016"}, {"body": "also hate magic think could much clean jsx markup magiclike behavior could forgiven muddies otherwise clean jsx markup could otherwise handled like feels gross instead nt think would sort magic someone sits wonders hidden", "d": "7/2016"}, {"body": "updates onmouseleave issue issue almost identical code andykog posted workaround updated component watch native mouseleave event parent disabled element seems work fires expected workaround using code similar edit code events bound directly disabled button native mouseleave event work case either chrome ff", "d": "7/2016"}, {"body": "hey want say also got problem using reactintl like redux connect provide withref true option pass hoc sometimes espace declarative programming reasons provide component imperative api case image cropper component quite annoying someone add component actually leads serious bug", "d": "7/2016"}, {"body": "something wondered workaround use another object store state use update react state far works brilliant cleaned code considerably especially situations async pull data based state result comes back want apply information relevant state nt changed since instance search suggestions multiple things go multiple async jobs needs applied back state afterwards based multiple states still relevant truly mess using", "d": "7/2016"}, {"body": "seems like ca nt get defaultprops instantiated parent class may pass props another child class within standard way methods nt work", "d": "7/2016"}, {"body": "seems like ca nt get defaultprops instantiated parent class may pass props another child class within understand mean show example", "d": "7/2016"}, {"body": "course sorry component import react component proptypes react import timerview timerview class timer extends component constructor props super props componentwillreceiveprops props consolelog receive props render consolelog timer loaded timerproptypes status proptypesstringisrequired timerdefaultprops status timer export default timer run webpackdevserver get error must something wrong", "d": "7/2016"}, {"body": "unbound variable method", "d": "7/2016"}, {"body": "oh totally missed one guess since using stateless components much classes got confused one thank sir", "d": "7/2016"}, {"body": "problem jeanmichelcote happens", "d": "7/2016"}, {"body": "quick update still much radar prs appreciated many competing priorities get back time allows", "d": "7/2016"}, {"body": "thanks gaearon bunch prs pending continue time post start working something", "d": "7/2016"}, {"body": "hi erudinsky think simply use handler using select element prefix fix problem way", "d": "7/2016"}, {"body": "dug ca nt reproduce issue react going trace back see fixed", "d": "7/2016"}, {"body": "yikes wrong broken react appears fixed master", "d": "7/2016"}, {"body": "nhunzaker mind bisecting figure commit fixes needs cherrypicked", "d": "7/2016"}, {"body": "spicyj", "d": "7/2016"}, {"body": "sorry double post looks like awesome work jquense", "d": "7/2016"}, {"body": "helps test script reproduce ran locally android phone", "d": "7/2016"}, {"body": "spicyj went ahead put legwork backport following pr assuming viable would nt mind backporting possible interest", "d": "7/2016"}, {"body": "aweary wonder would true web components brick polymer etc", "d": "7/2016"}, {"body": "kevinsuttle would guess would issue open jsdom regarding web components", "d": "7/2016"}, {"body": "fyi found workaround reactvirtualized using fn form ref rather ref ref idea hopefully helps someone", "d": "7/2016"}, {"body": "syranide jimfb thinkxl either working issue like take crack possible already wrote code made pull request could link", "d": "7/2016"}, {"body": "salehhindi nt time work yet go head curious would approach", "d": "7/2016"}, {"body": "salehhindi aware anyone working sure best way forward implementation feel free write idea comment well", "d": "7/2016"}, {"body": "syranide thanks quick reply sure work tonight write idea anyone else wants help let know", "d": "7/2016"}, {"body": "syranide thinkxl whoops looks like accidentally pushed facebookreact instead local fork understand rookie mistake sorry tried fixing commits looks like pushed exact commit instead reverting earlier commit even tried deleting fork double check facebookreact since master branch wanted know anyone help undo commits nt want error revert back far make permanent change super sorry never happen", "d": "7/2016"}, {"body": "salehhindi made fair share git oopsies nothing worry changes made likely reactmaster branch fork permissions push official repository want fix keep changes best way simply go master branch create new branch reset master branch back commit changes master branch ok makes hard wish submit prs", "d": "7/2016"}, {"body": "attempt trouble couple things created function reactclassjs figured page react element needs call happy answer questions implementation biggest problem although code observes removal react nodes addition nodes react node code nt able determine whether react source mutations means react adds removes node intended would trigger mutation warning additionally means could nt figure place call calls soon react renders elements would trigger mutation test page react elements call render calls another issue observing element delete parent high chain like node trigger mutation change viable workaround observe nodes page mutation check mutated element children react elements ideas fix first issue happy someone could help critique work", "d": "7/2016"}, {"body": "salehhindi nt read code feedback figured page react element needs call createclass incorrect many different ways create classes even pure functional components functions biggest problem although code observes removal react nodes addition nodes react node code nt able determine whether react source mutations solution issue needs move core reactdom essentially wrap startstop observer around domchildrenoperations something bit call chain likely get idea ticket knowing react performing mutation vs user trigger mutation change viable workaround observe nodes page mutation check mutated element children react elements unless mistaken two different scenarios invalid mutation node hierarchies owned react big nono crash react nodes manually discarded rather correctly unmounted bad less important focus pr first imho considering may multiple react trees rendered inside probably makes sense single global observer rather one per tree overlap may become problematic maybe spicyj jimfb good test seeing mutation allowed affected node movedetc owned react target parent owned react target siblings owned react tree error edit rules kind ambigious think get idea", "d": "7/2016"}, {"body": "made module named resolve problem hope resolve problem use search input children", "d": "7/2016"}, {"body": "nt simple way access instances children manually passing refs parent edit halthammerzeit share code create array inputs dynamic way", "d": "7/2016"}, {"body": "pierbover array function coded js", "d": "7/2016"}, {"body": "thanks halthammerzeit nt dynamic way also thought string refs deprecated", "d": "7/2016"}, {"body": "two ios test ipads documented work two ios test ipads work android chrome working ios confirmed discussion reason still using fastclickjs reactjs app see fastclick activates necessary", "d": "7/2016"}, {"body": "react thanks keyanzhang", "d": "7/2016"}, {"body": "gaearon error mapping available somewhere policy future changes", "d": "7/2016"}, {"body": "mitsuhiko automatically extracted build time think plan treat appendonly find latest version error messages link page website decode eg", "d": "7/2016"}, {"body": "mitsuhiko script extracts errors gaearon mentioned appendonly means code already wo nt changed", "d": "7/2016"}, {"body": "append good nice thing meta information exceptions tools access might nice thing future", "d": "7/2016"}, {"body": "question nt react version number error urls least major version nt quite follow append means context thread", "d": "7/2016"}, {"body": "json file website always latest release version appendonly means wo nt modify delete existing error mapping new error existing error gets newly edited appended end file get new number therefore make sure old versions supported", "d": "7/2016"}, {"body": "got nt think helps right looking backporting react doubt errors going come order", "d": "7/2016"}, {"body": "nt use major version urls page nt need nt plans support react official error decoder page could make page error code map motivated custom build may easier delete build code minifies error messages", "d": "7/2016"}, {"body": "already problem though error messages add react minified bit hoping preceding backporting completely understand react unsupported unfortunate reality still deal even done probably deal months finally get", "d": "7/2016"}, {"body": "aware deprecations changes automated update code hand", "d": "7/2016"}, {"body": "yes aware however nt help us much since almost code coffeescript nt start using jsx recently sun jul pm dan abramov notifications githubcom wrote aware deprecations changes automated update code hand receiving mentioned reply email directly view github mute thread", "d": "7/2016"}, {"body": "keyanzhang nt see anything indicates react version error url versioning codesjson managed", "d": "7/2016"}, {"body": "rafayepes", "d": "7/2016"}, {"body": "oh thanks mathieumg totally blind spicyj future versions react let say react react addsdeletesmodifies errors totally completely normal user react could go error url find error message actually error heshe going make sure old error indexes never removedmodified looks like approach never modify old errors still curious ensured scaled across multiple developers seems something fairly easy forget thanks love feature", "d": "7/2016"}, {"body": "rafayepes thought would answered concern stuckouttongue", "d": "7/2016"}, {"body": "rafayepes error list automatically maintained via gulp task forgetting nt concern see", "d": "7/2016"}, {"body": "nt add much bloat", "d": "7/2016"}, {"body": "submitted pull request issue pull request using context propagate locale routing information problem pure components stop subtree rendering context changes pure components check state props problem many people per issue reasoned masking context intermediate components would better masking defined contexttypes would used validating filtering similar proptypes work properties specified validated ones specified still available component updated tests reflect update since components interested context would typically use context argument masking context would cause existing component break unless said components explicitly checking context param undefined would however create opportunity refined pure component say contextawarepurecomponent would compare state props context shouldcomponentupdate allowing context updated cause rerenders pure components currently running development patch using radium reactbootstrap components experience issue", "d": "7/2016"}, {"body": "hello bvella think meant pull request", "d": "7/2016"}, {"body": "darylcantrell right thanks", "d": "7/2016"}, {"body": "event fired submit form click button button form gt", "d": "7/2016"}, {"body": "borm ideally browsers fire event form method called move onsubmit handler method component amp call", "d": "7/2016"}, {"body": "selvagsz idea submit form outside amp fire onsubmit event", "d": "7/2016"}, {"body": "tldr key key ckey ckey react wants build keys use", "d": "7/2016"}, {"body": "given working solution chance part react proper soon waiting new reconciler", "d": "7/2016"}, {"body": "given working solution using successfully real projects mwiencek implementation nt really pretty works people submit pr let react devs tear apart sure please send pr", "d": "7/2016"}, {"body": "submitting pr last heard spicyj wanted finish new core algorithm proper solution since comment nodes nt really make sense react native nt following status nt think plans changed glad people find packages useful meantime", "d": "7/2016"}, {"body": "new algorithm works supports fragments however expect become production ready months come wonder adding first react dom later react native bad downside fragments ecosystem little pun intended may give us time experiment feature team meeting today raise question time get better understanding", "d": "7/2016"}, {"body": "gaearon point supporting fragments super simple sugar currently using way tiny trivial wrapper returning multiple children component root really important", "d": "7/2016"}, {"body": "syranide using custom build frag beta environment however would like use official react build instead provide wrapper thanks", "d": "7/2016"}, {"body": "amertak js import react react import createfragment reactaddonscreatefragment let nativecreateelement reactcreateelement reactcreateelement function arguments frag return nativecreateelementapply arguments let length argumentslength length lt return null let children let lt length children arguments return createfragment children", "d": "7/2016"}, {"body": "talked last team meeting consensus want go particular implementation however feature supported long term core rewrite timeline also consider one things could potentially work second half year rewrite takes long work guarantees make list keep updated comes get better idea work please see meeting notes repo find latest discussion", "d": "7/2016"}, {"body": "gaearon would interesting traction official fragsyntax least", "d": "7/2016"}, {"body": "syranide thanks code unfortunately seems use need root app component renderer method method accept fragment thanks anyway useful people nt need app root", "d": "7/2016"}, {"body": "amertak yes enabling reasonable syntax creating fragments nt add new features", "d": "7/2016"}, {"body": "syranide thinking would possible render comment manually treat another component might necessary internally comments handled type maybe able call idea small workaround key thing missing able render node right", "d": "7/2016"}, {"body": "gaearon bit sad nt coming soon appreciate transparency good write", "d": "7/2016"}, {"body": "hugotox button set default making one submit button pressing enter run first one defined", "d": "7/2016"}, {"body": "spicyj tried example jsbin nt work safari way chrome works perfectly tested ipad", "d": "7/2016"}, {"body": "inserting full working example others reference", "d": "7/2016"}, {"body": "record since longer works even initial render since moving away innerhtml rules important thrown", "d": "7/2016"}, {"body": "record since longer works even initial render since moving away innerhtml rules important thrown actually nt actively care anymore technically solved edit something want look", "d": "7/2016"}, {"body": "hi say still issue find way around using listeners react lifecycle though try get snippet", "d": "7/2016"}, {"body": "never mind popup launched async action", "d": "7/2016"}, {"body": "recently reading source code batching comment really make confused find issue maybe guys delete", "d": "7/2016"}, {"body": "record ran problem without anything exotic got crudstyle entity list table row onclick handler choose entity row represents one row cells control buttons onclick handlers click one buttons table row table row onclick gets triggered button tried circumventing problem setting native browser event button component click anywhere seems trigger everything page even though calling stop propagation methods could find still problem two years react hijack event handling begin", "d": "7/2016"}, {"body": "please nt everyone useslikes prop types least make optin somehow", "d": "7/2016"}, {"body": "tj would assume implementation would warn defined component nt use would fine", "d": "7/2016"}, {"body": "true true though already instead leads warnings props", "d": "7/2016"}, {"body": "please nt everyone useslikes prop types least make optin somehow worry like much either longer term encouraging people use flow typescript instead", "d": "7/2016"}, {"body": "awesome still try flow definitely would prefer use language features even still transpiled nt screwed bad ignoring far haha", "d": "7/2016"}, {"body": "would like add preact already implements feature say leads easy destructuring easy switch stateless stateful component", "d": "7/2016"}, {"body": "spicyj tried react still nt work safari way chrome works perfectly tested ipad", "d": "7/2016"}, {"body": "brunogarcia post jsfiddle jsbin", "d": "7/2016"}, {"body": "spicyj hi made testing safari ios found safari private browsing nt save data localstore react bug sorry mistake", "d": "7/2016"}, {"body": "hi found new method include html comments eg conditional ie comments jsx react components using web component jsx lt ie using outdated browser please upgrade browser improve experience endif", "d": "7/2016"}, {"body": "take point exportmike like", "d": "7/2016"}, {"body": "bitten one would great note behavior present large performance impact hard find issue unless already done investigation work", "d": "7/2016"}, {"body": "would like add issue also affects electron applications work arounds seem include minified version react globally via tag would work electron nt node way one able track every used object seeing also makes difficult switch devprod use proposed hack replace regular object good forced overwrite node api want use react using babel transforminlineenvironmentvariables default babel nt transpile nodemodules configured nt look like work around note replace every nt solution automatically requires root issue closed seems react able initialize configuration using rely objects optionally offer function change value later reason would nt work", "d": "7/2016"}, {"body": "technically could fixed uglifyjs supports annotations may easier still team moves build rollup combination rollup would simple export var constants file effectively tagged uglify dead code elimination production mode", "d": "7/2016"}, {"body": "well reading comments nt know tell know using oop react applications lets forget oop go quoting jordwalke classes simply better syntax react component creation make syntax better possible support inheritance think much cleaner syntax wrappers mixins", "d": "7/2016"}, {"body": "make syntax better possible support inheritance think much cleaner syntax wrappers mixins kind thinking get use affords like balls afford throwing chairs afford sitting thinking leads", "d": "7/2016"}, {"body": "ca nt believe somebody actually written nonsense ca nt believe referenced ca nt usedoes nt know use oop paradigms nt mean write something titled goodbye object oriented programming kind thinking mentioned kind thinking led browser using operating system using one third software written far kind thinking reuse roots modernism even car drive hardware run software airplane travel phone pocket using good human reached level affords like balls afford throwing", "d": "7/2016"}, {"body": "thread validity success oop react classes already support inheritance want nt recommend experience nothing technical address recommend taking philosophical discussion medium twitter nice facebook group", "d": "7/2016"}, {"body": "sorry discussion happened great support inheritance currently works know issues possible plan solve issues support inheritance officially taking much effort result much cleaner code nothing else", "d": "7/2016"}, {"body": "sebmarkbage apologies hopeful move toward functional components future lots react users nt relearn inheritance pitfalls hard way like classes want make best use react gaearon wrote excellent guide use classes sleep night perhaps would useful mention inheritance dan recommendations documentation help guide people paths toward success hoc help avoid pitfalls", "d": "7/2016"}, {"body": "still considered would nice react could somehow encourage users small tasks optimally like changing header background color based scroll position encountered project instinct use ran across issueanswer relating performance component ended also included support passive event listening", "d": "7/2016"}, {"title": "ngfor renders elements", "body": "submitting check one x current behavior ngfor reading data firebase database type time new post pushed posts elements rendered expecteddesired behavior newly pushed post would render please tell us environment angular version", "num": "10417", "d": "7/2016"}, {"title": "angular http promise issue", "body": "hi try create login app using angular http promiseplease find code issue printing response object extractdata function service got response console printing login component please someone help wait till response come webservice login component import component angularcore import router angularrouter import user modeluser import userservice serviceuserservice component selector loginform templateurl apptemplateloginhtml providers userservice export class logincomponent user user constructor private userservice userservice private router router loginuser form void thisuserserviceloginuser formusername formpassword user gt thisuser user consolelog got response consolelog thisuser try consolelog thisuseruserid consolelog thisusername consolelog thisusermobile consolelog thisuseremail thisrouternavigate catch err service import injectable angularcore import headers http response requestoptions angular import rxjsoperators import user modeluser injectable export class userservice private headers new headers contenttype applicationjson constructor private getusers promise loginuser username password promise let body jsonstringify username password let options new requestoptions headers thisheaders return login body options topromise thisextractdata catch thishandleerror registeruser name mobile email password roleid promise let body jsonstringify name mobile email password roleid let options new requestoptions headers thisheaders return register body options topromise thisextractdata catch thishandleerror private extractdata res response let body resjson consolelog body return body private handleerror error consoleerror error occurred error return promisereject errormessage error", "num": "10416", "d": "7/2016"}, {"title": "bug router wildcard working", "body": "submitting check one x current behavior router wildcard recognized expecteddesired behavior reproduction problem click problematic link expected behavior want see please tell us environment angular version angularrouter browser chrome language", "num": "10415", "d": "7/2016"}, {"title": "possible use router module moduleid", "body": "submitting check one x current behavior possible use router module moduleid use ca nt use module defined error referenceerror module defined eval execute error loading use angular ca nt use router routerconfig providerouter aret package angularrouter expecteddesired behavior thought could use using version reason please tell us environment windows angular version browser chrome language typescript", "num": "10413", "d": "7/2016"}, {"title": "request feat provide public api module npm", "body": "array public api module would like array types available per module determine available types auto inject import statements anything related usecase", "num": "10411", "d": "7/2016"}, {"title": "request feat provide ambient type definitions reusing publicapiguard", "body": "would like work environment type definitions api ambient something like valid publicapiguard reused generate ambient type definitions published npm", "num": "10410", "d": "7/2016"}, {"title": "bug animation api error safari undefined", "body": "submitting check one x current behavior animation works ok chrome animation breaks safari mobile pc browser currently using polyfill please tell us environment mac el capitan safari angular version browser safari ios xx safari language", "num": "10407", "d": "7/2016"}, {"title": "feature request pass variable template without letstatement bind context template createembeddedview", "body": "simplified version method arguments bind context template automatically inside method must use statement template html get context nothing context template method must rewrite context template html weird tltr want create clean directive easy use inside write custom template automatically binded without example repeater directive mydirective iterates items applies template inside view directive template looks like directive iam getting though input binding like code creating embedded view use template element first code block ensure repeated template item available way know implement behavior without statement template element would nice context binded template method angular version", "num": "10406", "d": "7/2016"}, {"title": "make resolves router work functions", "body": "submitting check one x current behavior currently use resolve routes declare injectable classresolver method resolve put resolve expecteddesired behavior works good would like like use functions instead classes also mentioned possibility documentation also provide function signature instead class motivation use case changing behavior make resolve usage compact easier angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx typescript", "num": "10405", "d": "7/2016"}, {"title": "problem adding dynamically component g test selector svg", "body": "submitting check one x x bug report feature request support request gt please submit support request instead see current behavior try add dynamically component within svg use approach whereas corresponding content added dom appears host element nt valid svg element perhaps svg namespace nt used prevents displaying svg elements within one expecteddesired behavior able add dynamically components within svg selectors like reproduction problem see plunkr expected behavior expect added host element motivation use case changing behavior please tell us environment angular version browser chrome language typescript", "num": "10404", "d": "7/2016"}, {"title": "problem adding dynamically component g test selector svg", "body": "submitting check one x current behavior try add dynamically component within svg use approach whereas corresponding content added dom appears host element nt valid svg element perhaps svg namespace nt used prevents displaying svg elements within one expecteddesired behavior able add dynamically components within svg selectors like reproduction problem see plunkr expected behavior expect added host element motivation use case changing behavior please tell us environment angular version browser chrome language typescript", "num": "10403", "d": "7/2016"}, {"title": "componentresolver create component targeted viewcontainerref", "body": "submitting check one x current behavior angular something prepend component like jquery prepend try componentresolver create list like directives itemcomponent export class widgetcomponent implements oninit viewchild header read viewcontainerref header viewcontainerref constructor public eleref viewcontainerref private resolver p let lt thisresolverresolvecomponent streamcomponent factory gt thisheadercreatecomponent factory create targeted viewcontainerref append component created resolver already expecteddesired behavior append targeted viewcontainerref motivation use case changing behavior prepend component targeted viewcontainerref please tell us environment angular version browser language typescript", "num": "10401", "d": "7/2016"}, {"title": "router valueempty search param initial navigation", "body": "submitting check one x current behavior url valueempty search param causes unexpected behavior parsed url query occurred initial navigation expecteddesired behavior parsed url keep equal reproduction problem expected behavior links reset link reset location routerlink works well navigate incorrect behavior navigate motivation use case changing behavior current behavior strange pass empty string app app initiation please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "10397", "d": "7/2016"}, {"title": "router add routermoduleappendroutes method", "body": "submitting check one x like factor application submodules organized around feature areas submodules may routes referencing components like load submodules together one flat routespace choose load submodules asynchronously want pool routes routes submodules resulting single consolidated route space entire app samples docs styleguide current behavior syntax use less ideal excerpt styleguide imports submodule imports import import submodule imports const modulemetadata imports submodule imports declarations appcomponent entrycomponents appcomponent import bootstrap angularplatformbrowserdynamic bootstrap appcomponent modulemetadata notice submodule files export add toplevel route configuration hand example submodule file export const route path component subcomponent ngmodule imports browsermodule formsmodule declarations subcomponent heroescomponent moduleprivate components exports subcomponent export class submodule expecteddesired behavior rather submodule could add routes without help parent module imports submodule imports import submodule import submodule submodule imports const modulemetadata imports submodule imports declarations appcomponent entrycomponents appcomponent import bootstrap angularplatformbrowserdynamic bootstrap appcomponent modulemetadata master parent module simpler knows less submodules revised submodule file new routermoduleappendroutes method please tell us environment angular version candidate browser language", "num": "10396", "d": "7/2016"}, {"title": "router fragment last router package nt work totally", "body": "submitting current behavior fragment last router package nt work totally browser needs resfresh go fragment also fragment stay url impossible remove fragment expecteddesired behavior routernavigate fragment gt web navigator go fragment without refresh routernavigate without old fragment gt old fragment remove url reproduction problem crisiscenter page fragment html buttons binding function go fragment one remove fragment url observer routerstatefragment ngoninit show remove problem please tell us environment angular version angularrouter version browser firefox ie language typescript sorry bug already reported thank framework really nice job", "num": "10395", "d": "7/2016"}, {"title": "ngcontent component implemented", "body": "asked question stack overflow ngcontent hoping someone could take peek needs expert eyes think experts thanks", "num": "10394", "d": "7/2016"}, {"title": "support css components backport", "body": "submitting check one x discussion backporting angular component css support emulated view encapsulation support work angular components projects like angularcss provide similar functionality appear solution angular applications provides true viewencapsulation imo one useful underappreciated features angular feature would enormous benefit existing angular applications could provide another tool owners legacy applications gradually adopt angular improving modularity existing applications discussed please feel free close duplicate could nt find previous discussion topic", "num": "10390", "d": "7/2016"}, {"title": "npm package dependencies reflectmetadata amp rxjs packagejson cause unmet peer dependencies", "body": "submitting check one x current behavior currently npm package dependencies relfectmetadata amp rxjs listed thus package dependencies packagejson file name optionaldependencies peerdependencies reflectmetadata rxjs zonejs stored local directoryrepository get many packages listed including mongoose n nodeinspector nodemon npm npmlog protractorcoffeepreprocessor pug unmet peer dependency reflectmetadata require unmet peer dependency rxjs sass socketio syncexec typescript webpack yo zonejs npm err peer dep missing reflectmetadata required npm err peer dep missing rxjs required expecteddesired behavior done version dependencies reflectmetadata amp rsjx packagejson file like thus name optionaldependencies peerdependencies reflectmetadata rxjs zonejs packages give probably pull request fixing reproduction problem install latest nodejs lts current today npm along install npm packages either globally local directoryrepository including npm package dependencies installed run installed package globally installed local directoryrepository see error expected behavior errors compiling running motivation use case changing behavior happening need add please tell us environment angular version browser amp command lineterminal language particularly javascript nodejs npm npm package whatever using command line shell bash tsh etc", "num": "10389", "d": "7/2016"}, {"title": "data binding work cordova plugin response", "body": "x bug report feature request support request use cordovaplugincszbar cordova plugin typescript android device callback response plugin data binding work anymore resume try interact view buttons", "num": "10387", "d": "7/2016"}, {"title": "router history working", "body": "submitting current behavior clicking back page returns previous page url browser remains unchanged also tried latest code master july still get issue please tell us environment running os x el capitan angular version router beta browser chrome chrome canary firefox safari ie ie", "num": "10386", "d": "7/2016"}, {"title": "easy manipulation query parameters queryparams within route", "body": "submitting check one x current behavior nt seem good way interact global perroute query parameters let say search page would like apply filters reflected url eg search fizzbuzz amp foobar search fizzbuzz typebar would like able delete fizz filter remove url result search foobar search foobar currently get behavior perroute parameters similarly global counterparts retrieve parameter object play specifically perroute parameters nt way change queryparams without using followed parameters since current version trying something like throw error though looks explicitly checked disallowed expecteddesired behavior would like able easily manipulate local global query parameters looks like easier global query params though would also like able local query params additionally current need reach routesnapshot object get current path order manipulate query parameters feels unnecessary robust reproduction problem see current behavior motivation use case changing behavior frameworks allow easily perform sort manipulation would able like proper angular way please tell us environment angular version browser chrome language typescript", "num": "10385", "d": "7/2016"}, {"title": "ngmessage", "body": "submitting check one x current behavior bowerangularmessageformat minified version package imported directly indexjs expecteddesired behavior seems like package parity bowerangular packages example angulartouch order play nice clients build processes metamatt", "num": "10384", "d": "7/2016"}, {"title": "router accessing router properties inside component failed", "body": "submitting check one x current behavior invoke routernavigate inside callback function promise request browser console return follow error typeerror read property router undefined use instruction callback works fine inside callback nt work expecteddesired behavior navigate specific route reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point import component angularcore import routerdirectives router angularrouter import utente utente import utenteservice utenteservice component selector login templateurl applogincomponenthtml providers utenteservice directives routerdirectives export class logincomponent public email string public password string public error constructor private router router private utenteservice utenteservice submit let email thisemail let password thispassword var result expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "10381", "d": "7/2016"}, {"title": "core onpush strategy exported components", "body": "submitting check one x current behavior working bootstrappowered directives trying agressivelly use change detection strategy time works pretty well certain situation using leads inconsistent behavior let assume got component uses exported public method called exported instance case possible call method exported instance method call change component state emit events etc changes wo nt picked rendering expecteddesired behavior scenario described component refreshed called methods results custom event emitted would strong indicator state changed ui needs get updated reproduction problem expected behavior using buttons increment counter angular version discussed mhevery", "num": "10380", "d": "7/2016"}, {"title": "router guard return hot cold observable", "body": "", "num": "10378", "d": "7/2016"}, {"title": "router redirecting route lazy loaded children fails", "body": "submitting check one x current behavior given route config navigating error thrown expecteddesired behavior redirecting route lazy loaded children navigate correctly reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "10376", "d": "7/2016"}, {"title": "inject destroy emitter observable teardown", "body": "submitting check one x current behavior store subscriptions unsubscribe destroy typescript component export class mycomponent public data private datasubscription subscription expecteddesired behavior would rather like typescript component export class mycomponent public data avoid additional subscription state manual cleanup code angular version browser language", "num": "10375", "d": "7/2016"}, {"title": "dynamiccomponentloaderloadnexttolocation actually next element", "body": "submitting loadnexttolocation issue current behavior use dynamiccomponentloaderloadnexttolocation make list component append component created dynamiccomponentloader expecteddesired behavior append next targeted location correctly something wrong angular version browser language typescript", "num": "10374", "d": "7/2016"}, {"title": "still seeing resolve parameters using intectable inject", "body": "submitting check one x current behavior get error message given angular ca nt find meta data di karma mocha test error resolve parameters countryandstateservice make sure parameters decorated inject valid type annotations countryandstateservice decorated injectable typescript countryandstateservicets injectable export class countryandstateservice constructor inject http private countryandstateservicespects describe countryandstateservice gt beforeeach gt addproviders httpproviders http countryandstateservice load countryandstateservice inject countryandstateservice svc countryandstateservice gt shouldexist svc notice js output different typescript emitting angular code http js looks like countryandstateservice js looks like inside angular reflectioncapabilitiesjs nt finding even though see class decorated expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point see expected behavior expect class annotate code di knows get http motivation use case changing behavior please tell us environment angular version browser chrome phantomjs language typescript", "num": "10373", "d": "7/2016"}, {"title": "chrome crashes many viewrefdetectchanges calls", "body": "submitting current behavior build big angular application lot components application every component know child components get children one component use following code every component extends basecomponent example inputcomponent component directives providers provide basecomponent useexisting inputcomponent selector ourinputcomponent template export class inputcomponent extends basecomponent viewchildren basecomponent protected viewvalidators querylist contentchildren basecomponent protected contentvalidators querylist add providers viewchildren contentchildren components every component knows children build component tree working fine chrome browser going crashes many viewrefdetectchanges appviewdetectviewchildrenchanges calls go application stress test hold tabkey seconds onblur onfocus fired firefox ie problems chrome crashing seconds remove viewchildren contentchildren components everything working fine component view contentchildren chrome crashing expecteddesired behavior need stable solution get children different component types without crashing browser timeline chrome shows problem reproduction problem application lot components add component fire lot events chrome browser crash expected behavior chrome nt crash idea prevent crash tried add changedetection changedetectionstrategyonpush reduce detectchanges calls nt help chrome needs seconds crash please tell us environment angular version browser chrome language typescript", "num": "10372", "d": "7/2016"}, {"title": "request feat expand buildtime features", "body": "buildtime precompiletime features default selector converting class name dashcase selector since angular html compiler webpack js compiler really something powerful come two work together example determining defaults selectortemplatestylesinputsoutput analysing code base class could remove decorators least provide lot powerful default values ngc wo nt really need decorators compiling template webpack ngc wo nt need reflect since annotate class would much sugar everybody cavities", "num": "10371", "d": "7/2016"}, {"title": "static reflector respect default parameters", "body": "submitting check one x current behavior default parameter simple functions ignored causing evaluated instead default parameter value expecteddesired behavior leaving parameter would use default value parameter", "num": "10369", "d": "7/2016"}, {"title": "static reflection support conditional expressions", "body": "submitting check one x current behavior use conditional expression directly indirectly result unsupported expression form error especially troublesome methods intended called construct providers expecteddesired behavior conditional expressions supported resolved statically", "num": "10365", "d": "7/2016"}, {"title": "appinitializers executed root zone", "body": "bootstrap mycomponent provide appinitialize multi true usevalue myinit function myinit consolelog zonecurrentname print angular prints root", "num": "10363", "d": "7/2016"}, {"title": "tutorial broken", "body": "submitting check one x current behavior last steps within tutorial given futhermore outlines example contents provides bad md file expecteddesired behavior steps shown reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "10361", "d": "7/2016"}, {"title": "router launch indexhtml", "body": "submitting check one x current behavior routed apps work fine web host page named nt know make work file called real world example server serves application web page someplace like ca nt set base href resources including images css served another server location expecteddesired behavior need way tell router base routed components different place base everything else reproduction problem ca nt show plunker allowed tell plunker use anything root folder attached zip file sample code tourofheroes router chapter tohrouternoindexhtmlzip install typings nodemodules make sure nodemodules angular appropriate build launches app confirm works adjust browser bar reference alternative fails please tell us environment angular version candidate july browser chrome language", "num": "10359", "d": "7/2016"}, {"title": "ngswitch async pipe working", "body": "submitting check one x current behavior beats em mr noname produces error original exception typeerror read property name null expecteddesired behavior work used make work using precheck beats em mr noname reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome language typescript", "num": "10358", "d": "7/2016"}, {"title": "bug router nested routes activating", "body": "submitting check one x current behavior navigate subject two subject one route activated navigate subject two navigate case plans takes back subject one visa versa get routing errors console expecteddesired behavior would expect navigate subject two assessments highlighted active class added navigating assessments case plans would context subject two reproduction problem navigate subject one within subject one navigate back forth assessments case plans notice route id always remains navigate subject two within subject two navigate back forth assessments case plans notice route id change back navigate back home try navigating subject two go assessments case plans works try go subject one please tell us environment angular version browser chrome osx el capitan language typescript", "num": "10357", "d": "7/2016"}, {"title": "add internationalization number pipes", "body": "submitting current behavior number pipes decimal date etc provide internationalization hardcoded enus format expecteddesired behavior differences number formatting exist punctuation german users preferred language set dede format function pipes mentioned called locale enus reproduction problem number displayed e g german system currently displayed though conforming us standards expected behavior format function used pipes could possibly called userlocale navigatorlanguage instead hardcoded enus way number displayed user set language perhaps pipes accept another parameter would enable developer set cutom locale influenced user see pull request info pr rejected since solved problem locally motivation use case changing behavior please tell us environment angular version browser firefox language typescript", "num": "10356", "d": "7/2016"}, {"title": "tracking new testing api modules", "body": "", "num": "10354", "d": "7/2016"}, {"title": "request dependency lt opens potential memory exposure vulnerability", "body": "want request feature report bug ticket report potential security vulnerability caused request dependency current behavior various dependencies used angularjs make use vulnerable version request package lt allow potential memory exposure involved dependencies insight fsevents details order address short term fix suggested modify current npm shrinkwrap use", "num": "10352", "d": "7/2016"}, {"title": "bug router unable navigate aux route via router dsl", "body": "submitting check one x current behavior defining aux route nested route way enable auxcomponent config code taskscomponent html enable rightoutlet next tasklist manually entering url nevertheless ca nt find way activate route via routerdsl found commit none provided examples works trying activate auxroute url tried creates following url trying use relative link even worse leads exception one strange fact first activate one aux route manually correct url smth like afterwards versions seem create correct link navigation preview browser clicking link get expecteddesired behavior possible enable auxroutes routerdsl motivation use case changing behavior able use auxroutes please tell us environment angular version browser language ts", "num": "10351", "d": "7/2016"}, {"title": "digesting problem websocket usage", "body": "submitting check one x current behavior websocket calls obsnext various methods cause dom updated remove websocket instead observablecreate timeout emits value like settimeout gt obsnext value things work fine websocket calling obs calling function calls obs expecteddesired behavior expect websocketonmessage cause dom reflect new data reproduction problem plnkr nt load ie link changeset reproduces issue seen expected behavior chrome text show second ie nt show however app something bound form element soon click result shows motivation use case changing behavior trying get shared list items dynamically updated concurrent users user clicks list item user b sees edited please tell us environment ng new brokect currently backend nt matter since reproduce echowebsocketorg angular version browser ie language typescript", "num": "10350", "d": "7/2016"}, {"title": "select option null value", "body": "submitting check one x current behavior set na produce empty string na produce na na produce null expecteddesired behavior able set motivation use case changing behavior nt want clean values manually every nullable field please tell us environment angular version browser language typescript", "num": "10349", "d": "7/2016"}, {"title": "provider newformbuilder", "body": "submitting check one x current behavior trying implement form get error browser chrome maints import appbasehref angularcommon import disabledeprecatedforms provideforms angularformsindex import enableprodmode provide angularcore import bootstrap angularplatformbrowserdynamic import approuterproviders approutes import appcomponent appcomponent lt env gt prod enableprodmode bootstrap appcomponent approuterproviders provide appbasehref usevalue lt appbase gt disabledeprecatedforms provideforms appcomponentts import component angularcore import routerdirectives angularrouter import httpproviders angular import homecomponent homehomecomponent component moduleid moduleid selector facapp viewproviders httpproviders templateurl appcomponenthtml directives routerdirectives homecomponent export class appcomponent homehomecomponentts import component oninit angularcore import formcontrol formgroup formbuilder reactiveformdirectives validators angularforms component moduleid moduleid selector fachome template directives reactiveformdirectives export class homecomponent implements oninit setup form private emailregex applicationform formgroup validationerrors array constructor private formbuilder formbuilder onsubmit ngoninit thisapplicationform thisformbuildergroup firstname validatorsrequired lastname validatorsrequired email validatorsrequired validatorspattern thisemailregex full error message angular version browser language typescript", "num": "10347", "d": "7/2016"}, {"title": "pipes nt work safari browsers", "body": "submitting check one x bug report current behavior expecteddesired behavior reproduction problem number expression display chrome browser correct safari browser expression display empty string throw exception console browser like format formatnumber transform native code detectchangesinternal detectchanges detectviewchildrenchanges detectchangesinternal detectchanges detectcontentchildrenchanges detectchangesinternal detectchanges detectviewchildrenchanges detectchangesinternal detectchanges detectchanges foreach native code tick invoke oninvoke invoke run runinner run tryorunsub next next next finalnext next expected behavior expected expression number output safari browser error motivation use case changing behavior important function nt work safari browser please tell us environment angular version browser safari language typescript", "num": "10345", "d": "7/2016"}, {"title": "restore packages option rightclick required tutorial", "body": "submitting bug report feature request x support reques trying start angular tutorial contains steps step download quickstart files step set visual studio typescript step create visual studio aspnet project step copy quickstart files aspnet project folder step restore required packages done steps step problem restore packages option right click visual studio packagejson file hints", "num": "10344", "d": "7/2016"}, {"title": "http error able access body status code", "body": "submitting check one x current behavior shooting httpcall api following code log error response body networktab chrome also console showing error code expecteddesired behavior tested excact call postman able see body response look like angular version browser language anybody similar issues workaround using", "num": "10343", "d": "7/2016"}, {"title": "page refresh ie type url", "body": "submitting check one x current behavior problem happened ie redirection clicking link page enter url directly address bar browser page refresh however change hashlocationstrategy normal locationstrategy works fine without problem expecteddesired behavior page refresh enter url directly please tell us environment angular version angular router version browser ie language typescript xx", "num": "10342", "d": "7/2016"}, {"title": "mix async validator synchronus validators", "body": "submitting bug report current behavior add async validation nt work expecteddesired behavior would like able mix synchronous async validators reproduction problem see nt works expected behavior work imho motivation use case changing behavior flexibility please tell us environment angular version browser language", "num": "10341", "d": "7/2016"}, {"title": "router flatten configuration array", "body": "submitting check one x appears july master still flattening router configs example works spread operator others similar please tell us environment angular version candidate july browser language", "num": "10340", "d": "7/2016"}, {"title": "async validation dependence required validation", "body": "submitting check one x bug report current behavior nt add async validation nt work expecteddesired behavior needing add reproduction problem see syntax works expected one doent expected behavior work second case first one imho motivation use case changing behavior clarity please tell us environment angular version browser language", "num": "10338", "d": "7/2016"}, {"title": "inconsistency behaviour syntax applied context formbuilder", "body": "submitting check one x bug report current behavior inconsistency behaviour syntax applied context formbuilder expecteddesired behavior consistent syntax behaviour reproduction problem see plnkr syntax works expected one doent expected behavior work second case imho first one motivation use case changing behavior consistency please tell us environment angular version browser language", "num": "10337", "d": "7/2016"}, {"title": "adding ngpending class pending phase input async validation", "body": "submitting feature request current behavior ngpending class pending state input async validation expecteddesired behavior add ngpending class pending state input async validation reproduction problem soon type field get nginvalid state invalid pending expected behavior motivation use case changing behavior would handy differentiate phases inputs via css please tell us environment angular version browser language", "num": "10336", "d": "7/2016"}, {"title": "error find control formarray", "body": "submitting check one x current behavior attempting bind input formcontrol within formarray results error expecteddesired behavior inputs able bound formcontrols within formarray reproduction problem please tell us environment angular version browser language typescript", "num": "10335", "d": "7/2016"}, {"title": "ngfor model driven forms unexpected behavior", "body": "submitting check one x current behavior seeing way use model driven forms ngfor formcontrolname set last item array expecteddesired behavior able bind formcontrolname formbuilder ngfor formgroup reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via expected behavior find way use model driven forms ngfor tried use ngmodeloptions standalone true formgroup need formgroup detect change dirty repeated fields motivation use case changing behavior form list expenses ngfor anytime field changed one repeated lines need notify user line saved using standalone means would look fields instead group please tell us environment angularcore angularforms browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web language typescript xx dart", "num": "10333", "d": "7/2016"}, {"title": "support referencing static variables class static reflector", "body": "submitting check one x current behavior typescript class mycomponent static symbol new opaquesymbol ngmodule providers provide mycomponentsymbol usevalue class mymodule reports error expecteddesired behavior code would resolve declared motivation use case changing behavior new recommended style declaring module specific opaque tokens", "num": "10332", "d": "7/2016"}, {"title": "listen pinchmove pan event simultaneously hammerjs", "body": "submitting check one x current behavior listen pan pinchpinchmove either using template hostlistener listen pinch pan simultaneously following working added hostlistener decorator events firing simultaneously hostlistener pinch event onpinchmove e consoledir e hostlistener pan event onpinchmove e consoledir e expecteddesired behavior add recognizewith support hammerjs fire events simultaneously possible use hostlistener decorator listen events motivation use case changing behavior pinch pan simultaneously web app please tell us environment angular version browser chrome firefox ie safari mobile chrome android web browser ios safari language typescript", "num": "10328", "d": "7/2016"}, {"title": "unpredictable behavior", "body": "works fine errors console maybe properly use ngswitchdefault directive nothing right location ngswitchdefault docs example ngswitchdefault must level nesting like ngswitchcase typescript import component angularcore component selector myapp template export class app box string submitting x bug report reproduction problem", "num": "10327", "d": "7/2016"}, {"title": "behavior like stylepropertyunit ngstyle directive", "body": "possible implement behavior like stylepropertyunit ngstyle directive", "num": "10326", "d": "7/2016"}, {"title": "proposal testing introduce", "body": "works work modules proposal support similar functionality modules could introduce following would use new class called hood semantics recompile components using one methods also called automatically next call used methods recompiling component update references components component componentfactory view factory also works nicely new router even though relies created test injector created ie test starts eg following would work component template original class maincomp component template replacement class replacedcomp ngmodule declarations maincomp somedir imports routermodule proviers provideroutes path main component maincomp class mymodule describe mytest gt beforeeach gt configuremodule imports mymodule able replace directives inject router router router gt overridedeclaration maincomp replacedcomp instantiate replacedcomp instead maincomp routernavigatebyurl main restrictions ca nt overridechange providers module test injector created using modules recreate test injector test running", "num": "10325", "d": "7/2016"}, {"title": "fails follow location header http response design bug", "body": "using typical webpage response http request back end returns header browser follow link frontend app however even though browser receives header seen nt redirect new location result even website back end server redirect destination domain searching around web could nt find reason design anyone lead documentation handles location headers http responses", "num": "10323", "d": "7/2016"}, {"title": "ngmodel select element play well", "body": "x bug report feature request support request current behavior value ngmodel number angular prepend broken expecteddesired behavior find make selected one break reproduction problem check codepen observe difference scopeastring scopeanumber expected behavior check expecteddesired behavior motivation use case changing behavior angular smart enough please tell us environment angular version browser tested firefox chrome ubuntu problem language javascript babel", "num": "10322", "d": "7/2016"}, {"title": "fix router candeactivate change url returns false", "body": "issue closed however problem still remains using browser back forward buttons", "num": "10321", "d": "7/2016"}, {"title": "importing service barrel indexts file got undefined", "body": "following app folder structure app indexts components indexts home homecomponentts login userinfoservicets logindetailsts logincomponentts loginroutests indexts login indexts file exports services components components indexts file exports index files child folders home component trying import userinfoservice login barrel index file import component angularcore import userinfoservice index component moduleid moduleid templateurl homecomponenthtml styleurls homecomponentcss export class homecomponent public username string constructor private userinfo userinfoservice thisusername userinfologindetailsemail got following exception exception error uncaught promise ca nt resolve parameters homecomponent change import statement import directly userinforservicets file works without issues really sure issue try import indexts file systemconfigts file looks like var barrels string app specific barrels app appshared appshareddicore appsharedupgrade appcomponents appcomponentswelcome appcomponentslogin appcomponentshome var clisystemconfigpackages barrelsforeach barrelname string gt clisystemconfigpackages barrelname main index ideas suggestions please", "num": "10320", "d": "7/2016"}, {"title": "ng style doesnt remove old style model object changes", "body": "current behaviour assign object ngstyle div ngstyle doesnt flush style properties older object changes expecteddesired behavior old object style flushed new object style properties applied reproduction problem forked plunkr given ngstyle github page plunkr plunkr click first style object apply give div border click second style give background color also keep border previous style environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language ts", "num": "10315", "d": "7/2016"}, {"title": "provides override modulesproviders", "body": "take configuration routermoduleforroot declares following provider would expect override builtin provider nt repro run buildsh run gulp serve open", "num": "10313", "d": "7/2016"}, {"title": "child routers redirectto amp safari", "body": "submitting check one x current behavior attempt create route array includes something along lines work successfully chrome try exact directions using safari console complains exception error uncaught promise error match routes expecteddesired behavior safari redirect path successfully behavior chrome", "num": "10311", "d": "7/2016"}, {"title": "request refactor compiler context scope", "body": "keyword may may used future ngmodule already known keyword", "num": "10310", "d": "7/2016"}, {"title": "inject global", "body": "submitting check one x current behavior following code nt work works well expecteddesired behavior first example works well second reproduction problem expected behavior works well removing crash motivation use case changing behavior want create mock testing di token intuitive happy please tell us environment angular version browser chrome language typescript", "num": "10309", "d": "7/2016"}, {"title": "hostlistener etc appear generated code", "body": "post ngmodules following component compiled via host listener setup compiled ngfactory typescript import component hostlistener angularcore component selector homeview template export class homeview constructor hostlistener mouseover event onmouseover ev consolelog mouseover compiled via produces typescript file generated angular template compiler edit tslint disable import angularcoresrcrenderapi import angularcoresrclinkerview import angularcoresrclinkerelement import homeview import angularcoresrclinkerviewutils import angularcoresrcdiinjector import angularcoresrclinkerviewtype import angularcoresrcchangedetectionchangedetection import angularcoresrclinkercomponentfactory import angularcoresrcmetadataview var rendertypehomeviewhost null class extends private constructor viewutils parentinjector declarationel super rendertypehomeviewhost viewutils parentinjector declarationel createinternal rootselector string thisselectorcreatehostelement homeview rootselector null new null var thisviewutils thisinjector new thisprojectablenodes null thisinit concat return injectorgetinternal token requestnodeindex number notfoundresult token amp amp requestnodeindex return return notfoundresult function viewutils parentinjector declarationel rendertypehomeviewhost null rendertypehomeviewhost viewutilscreaterendercomponenttype null return new viewutils parentinjector declarationel export const homeviewngfactory new homeview const styleshomeview var rendertypehomeview null class extends constructor viewutils parentinjector declarationel super rendertypehomeview viewutils parentinjector declarationel createinternal rootselector string const parentrendernode thisrenderercreateviewroot thisdeclarationappelementnativeelement thisrenderercreatetext parentrendernode n null thisrenderercreateelement parentrendernode div null thisrenderercreatetext home null thisrenderercreatetext parentrendernode n null thisinit return null export function viewutils parentinjector declarationel rendertypehomeview null rendertypehomeview viewutilscreaterendercomponenttype usersrobwormalddevdemosngmodulesbundlingtestsrccomponentshomeviewts class homeview inline styleshomeview return new viewutils parentinjector declarationel collected metadata however compiling component using syntax typescript import component hostlistener angularcore component selector homeview template host mouseover onmouseover event export class homeview constructor onmouseover ev consolelog mouseover generate appropriate bindings typescript file generated angular template compiler edit tslint disable import angularcoresrcrenderapi import angularcoresrclinkerview import angularcoresrclinkerelement import homeview import angularcoresrclinkerviewutils import angularcoresrcdiinjector import angularcoresrclinkerviewtype import angularcoresrcchangedetectionchangedetection import angularcoresrclinkercomponentfactory import angularcoresrcmetadataview var rendertypehomeviewhost null class extends private constructor viewutils parentinjector declarationel super rendertypehomeviewhost viewutils parentinjector declarationel createinternal rootselector string thisselectorcreatehostelement homeview rootselector null new null var thisviewutils thisinjector new thisprojectablenodes null var function thisrendererlisten mouseover thiseventhandler note generated listener thisinit concat return injectorgetinternal token requestnodeindex number notfoundresult token amp amp requestnodeindex return return notfoundresult private event boolean const event false return true amp amp function viewutils parentinjector declarationel rendertypehomeviewhost null rendertypehomeviewhost viewutilscreaterendercomponenttype null return new viewutils parentinjector declarationel export const homeviewngfactory new homeview const styleshomeview var rendertypehomeview null class extends constructor viewutils parentinjector declarationel super rendertypehomeview viewutils parentinjector declarationel createinternal rootselector string const parentrendernode thisrenderercreateviewroot thisdeclarationappelementnativeelement thisrenderercreatetext parentrendernode n null thisrenderercreateelement parentrendernode div null thisrenderercreatetext home null thisrenderercreatetext parentrendernode n null thisinit return null export function viewutils parentinjector declarationel rendertypehomeview null rendertypehomeview viewutilscreaterendercomponenttype usersrobwormalddevdemosngmodulesbundlingtestsrccomponentshomeviewts class homeview inline styleshomeview return new viewutils parentinjector declarationel currently breaks router etc cc tbosch", "num": "10308", "d": "7/2016"}, {"title": "url params encoded", "body": "submitting check one x current behavior using routerlink variable parameter eg instrumentname paramter encoded scenario param forex instrument name contains slash eg usdgbp routed instrumentusdgbp happens test pass usd amp gbp amp encoded expecteddesired behavior would expect route generated instrumentusd please tell us environment angular version browser language typescript", "num": "10307", "d": "7/2016"}, {"title": "animation ondone callback support missing", "body": "need html", "num": "10304", "d": "7/2016"}, {"title": "visual studio http client unable retrieve data", "body": "submitting check one x current behavior built http client tutorial dev guide visual studio update latest patch setup solution according cookbook visual studio calls getheroes heroservicepromise heroservice services return found errors div herolist component regardless whether set url local heroesjson file memory web api expecteddesired behavior appheroes appheroesjson return list heroes either source heroservice heroservicepromise services reproduction problem repo solution using run please tell us environment visual studio update latest patch net aspnet empty web project quickstart installation typescript angular tested firefox ie edge", "num": "10302", "d": "7/2016"}, {"title": "angular template compiler routerlink supplied parameters match signature call target", "body": "submitting check one x current behavior using angular template compiler templates new router compile routerlink like routerlink instead non e elements constructor routerlinkwithhref routerlink expects parameters resulting supplied parameters match signature call target error expecteddesired behavior supplied parameters match signature call target error using angular template compiler templates use routerlink angular version angular router language typescript", "num": "10301", "d": "7/2016"}, {"title": "calling fakeasync zone call async function", "body": "submitting current behavior trying pollinglike logic test use jasmine test calling resolve asynchronous functions created passage time expecteddesired behavior function also resolve asynchronous functions created executed time reproduction problem sample test test failed errors expected equal error timer still queue expected behavior test passes current workaround use instead seems weird please tell us environment angular version browser firefox chrome language typescript", "num": "10299", "d": "7/2016"}, {"title": "npm install cause unmet peer dependency get error typeerror function objectareiterablesequal", "body": "try install dependencies get error unmet peer dependency angularcommon unmet peer dependency angularcompiler unmet peer dependency angularcore unmet peer dependency angularforms unmet peer dependency angularplatformbrowser unmet peer dependency angularplatformbrowserdynamic linux npm err argv usrbinnodejs usrbinnpm update npm err node npm err npm npm err path npm err code enoent npm err errno npm err syscall rename npm err enoent enoent file directory rename gt homethesamdesktopeveyeveynodemodulesnpmnodemodulesabbrev npm err enoent enoent file directory rename gt homethesamdesktopeveyeveynodemodulesnpmnodemodulesabbrev npm err enoent likely problem npm npm err enoent related npm able find file npm err enoent result get error console screen google chrome exception error class mdsidenavlayout inline original exception typeerror functionbrowserdomadapterlogerror original stacktrace browserdomadapterlogerror typeerror function objectareiterablesequal objectdevmodeequal checkbinding debugappviewappviewdetectchanges debugappviewdetectchanges debugappviewappviewdetectviewchildrenchanges debugappviewappviewdetectchanges debugappviewdetectchanges browserdomadapterlogerror error context browserdomadapterlogerror debugcontextbrowserdomadapterlogerror exception error class mdsidenavlayout inline exception error class mdsidenavlayout inline original exception typeerror functionbrowserdomadapterlogerror original stacktrace browserdomadapterlogerror typeerror function objectareiterablesequal objectdevmodeequal checkbinding debugappviewappviewdetectchanges debugappviewdetectchanges debugappviewappviewdetectviewchildrenchanges debugappviewappviewdetectchanges debugappviewdetectchanges browserdomadapterlogerror error context browserdomadapterlogerror debugcontextbrowserdomadapterlogerror viewwrappedexception anonymous function exception error uncaught promise exception error class mdsidenavlayout inline original exception typeerror function original stacktrace typeerror function objectareiterablesequal objectdevmodeequal checkbinding debugappviewappviewdetectchanges debugappviewdetectchanges debugappviewappviewdetectviewchildrenchanges debugappviewappviewdetectchanges debugappviewdetectchanges error context object object exception error uncaught promise exception error class mdsidenavlayout inline original exception typeerror function original stacktrace typeerror function objectareiterablesequal objectdevmodeequal checkbinding debugappviewappviewdetectchanges debugappviewdetectchanges debugappviewappviewdetectviewchildrenchanges debugappviewappviewdetectchanges debugappviewdetectchanges error context object object browserdomadapterlogerror stacktrace browserdomadapterlogerror error uncaught promise exception error class mdsidenavlayout inline original exception typeerror function original stacktrace typeerror function objectareiterablesequal objectdevmodeequal checkbinding debugappviewappviewdetectchanges debugappviewdetectchanges debugappviewappviewdetectviewchildrenchanges debugappviewappviewdetectchanges debugappviewdetectchanges error context object object resolvepromise zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue xmlhttprequestzonetaskinvoke unhandled promise rejection exception error class mdsidenavlayout inline original exception typeerror function original stacktrace typeerror function objectareiterablesequal objectdevmodeequal checkbinding debugappviewappviewdetectchanges debugappviewdetectchanges debugappviewappviewdetectviewchildrenchanges debugappviewappviewdetectchanges debugappviewdetectchanges error context object object zone angular task promisethen value viewwrappedexceptionconsoleerror error uncaught promise exception error class mdsidenavlayout inline consoleerror auth service constructor auth state undefined looks like using old forms module optin next rc eventually removed favor new forms module information see", "num": "10298", "d": "7/2016"}, {"title": "zone check change router using href safari", "body": "submitting check one x current behavior using href change router safari like safari components router init moving mouse add applicationreftick router changes temporary solution please tell us environment angular version browser safari language typescript", "num": "10297", "d": "7/2016"}, {"title": "routeroutlet takes time render view", "body": "observed loading page first time routeroutlet takes time view rendered secs thinking could show elements time would go view rendered know seconds great time problem emptiness mainview bad user experience looked angularuniversal looking alternate solution maybe something like ngif directive thanks", "num": "10296", "d": "7/2016"}, {"title": "routerevents return proper observable", "body": "current behavior router key type stated documentation however current events type simple ca nt use like get following error expecteddesired behavior key return standard observable documented reproduction problem use implementation described howeever workaround like please tell us environment angular version browser chrome canary language typescript", "num": "10295", "d": "7/2016"}, {"title": "ngmodel forms list nt display correctly", "body": "submitting bug report current behavior got array item displayed input using ngmodel use ngfor directive inside form basic control required list nt display corrrectly always last item array displayed use mustache syntax display array outside input ok remove form control ok expecteddesired behavior correct display array ngmodel forms reproduction problem test plunker angular version forms version browser language", "num": "10294", "d": "7/2016"}, {"title": "rendering data observables", "body": "submitting possible x bug report following interpolation outputs following structure get gross work following trys nt work mistake reproduction typescript version angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter bootstrap corejs rxjs systemjs zonejs", "num": "10293", "d": "7/2016"}, {"title": "property topromise exist type observable", "body": "submitting current behavior going tutorial link asked import property import rxjsaddoperatortopromise imported module getting error saying property topromise exist type observable moreover map also shows error view source github please provide help earliest looking forward positive response thank expecteddesired behavior topromise map show error please tell us environment angular version browser chrome language typescript", "num": "10292", "d": "7/2016"}, {"title": "revise documant canactivate", "body": "every canactivate document canactivate changed canactivate capitalized example sample code crisiscenterroutests guarded admin route user logerorr version angular router", "num": "10291", "d": "7/2016"}, {"title": "formcontrolname nt work ckeditor", "body": "uesed formgroup ckeditor create forms dynamically validatorsrequired work type something editor ckeditor prevents spread textarea value change events formgroup validators ca nt monitor ckeditor change textarea value ngmodel problem maybe ckeditor set style display none textarea angular ca nt find textarea", "num": "10288", "d": "7/2016"}, {"title": "invalid argument pipe currencypipe strings allowed", "body": "submitting check one x current behavior binding model type range model throws error invalid argument pipe currencypipe due input field looked string currencypipe allow expecteddesired behavior strings converted safely number able used currency pipe reproduction problem bind range input use currencypipe motivation use case changing behavior currency pipes correctly used range text tags follow behavior recently added decimalpipe please tell us environment angular version browser language typescript", "num": "10285", "d": "7/2016"}, {"title": "validation tasks ngmodules proposal", "body": "periscope reference app matsko mission control reference app stephenfluin ionic adamdbradley angular material jelbourn developer docs doc tests pass content explain ngmodules wardbell synced internal projects green alxhub please fill status comments assigning bradlygreen final signoff", "num": "10282", "d": "7/2016"}, {"title": "using parenthesis parameters throws exception", "body": "submitting check one x current behavior trying access route using parameters contain parenthesis application throws exception error uncaught promise error match routes accessing application throws mentioned exception hand runs expected expecteddesired behavior route parameters allowed contain parenthesis reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior per rfc see section characters may contain following characters amp character needs encoded percentencoding hh please tell us environment angular version angularrouter browser chrome language typescript dart", "num": "10280", "d": "7/2016"}, {"title": "ondestroy lifecycle hook fires pipes", "body": "submitting check one x current behavior ondestroy lifecycle hook fires pipes expecteddesired behavior oninit fires maybe hooks reproduction problem review consolelog toggling please tell us environment angular version browser chrome language typescript", "num": "10279", "d": "7/2016"}, {"title": "template expression parsing breaks using object literal properties shorthand", "body": "submitting check one x current behavior html espression parsing throws exception using object literal shorthand syntax attempting use syntax get following error throws expecteddesired behavior object literal shorthand parsing supported ex foo equivalent foo foo reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point motivation use case changing behavior valid object literal syntax currently supported transpilers natively evergreen browsers minus ie safari please tell us environment angular version browser chrome language typescript information parseliteralmap method parseast class nt handle literal shorthand syntax", "num": "10277", "d": "7/2016"}, {"title": "backwards symbols twoway data binding eg property cause error", "body": "submitting check one x behavior twoway data binding sugar attribute formatted property combination property event bindings combination property event bindings property work probably design fine however would nice template compiler could throw error warning comes across latter format spent minutes trying figure data binding nt work consulted cheat sheet realized mistake ca nt think legitimate use case property outside twoway data binding means expert please tell us environment angular version browser tested chrome probably affects browsers language typescript", "num": "10275", "d": "7/2016"}, {"title": "form twoway bound input validates inline template", "body": "submitting check one x current behavior input twoway binding ngmodel validate correct pattern ie nginvalid applied formvalid true removing twoway binding allows form validate expecteddesired behavior inputs twoway bound ngmodel properties validate according pattern attribute reproduction problem plunk illustrates swapping identical template inline templateurl breaks validation expected behavior form validate template loaded url motivation use case changing behavior nonbroken templates please tell us environment pretty stuffy pleasant night mac os atom chrome doodads angular version forms browser chrome seems work expected firefox safari language typescript", "num": "10274", "d": "7/2016"}, {"title": "reloadrefresh component view forcefully", "body": "application json object hardcoded values bound input controls view changes values json object duringbased events changes values getting reflected viewinput controls forcefully reloadrefresh view please look component values assigned inside constructor gets reflected view load component based events parent component method loadextractorqueuedetails called variable thissampledata set values ideally expect values reflected view nt seem happen happening reloadrefresh views import component input oninit angularcore import formdirectives angularcommon component selector extractorqueuedetails directives formdirectives templateurl htmladminextractorqueuedetailshtml export class extractorqueuedetails resultdata extractorqueueitem sampledata sample constructor consolelog extractorqueuedetails component loaded public loadextractorqueuedetails thissampledata queueid name html template like", "num": "10270", "d": "7/2016"}, {"title": "url value able get component angular", "body": "currently dashboard component view grid link button move another component city component need pass state id dynamically view trying code component angular export class citycomponent public cities object public urlpath string constructor private cityservice cityservice thisgetcities thisurlpath locationpathname need get cityid getcities thiscityservicegetcities subscribe data gt thiscities data err gt thiscountrieserror true giving dashboard url city url help", "num": "10269", "d": "7/2016"}, {"title": "static reflector support nested function calls result expression", "body": "support something like fails right error", "num": "10267", "d": "7/2016"}, {"title": "static reflector support static methods", "body": "want something like class mymodule static comp return mymodule provide sometoken usevalue comp ngmodule imports mymodulewith somecomponent class mainmodule", "num": "10266", "d": "7/2016"}, {"title": "drawbacks using ngupgrade production", "body": "hi read following article claims using ngupgrade production recommended keep mind goal upgrade phase stay little possible since running frameworks website surely ideal planning write angluarjs code along existing angularjs code plans refactor code angularjs angularjs want make sure issues going cc pbastowski thanks", "num": "10265", "d": "7/2016"}, {"title": "angularrouter new release", "body": "submitting plan relase new angularrouter version npm latest fixes current behavior state changes reflected safari expecteddesired behavior fix router back button work safari angular version browser ie xx safari xx ios xx safari ios xx uiwebview ios xx wkwebview language typescript", "num": "10263", "d": "7/2016"}, {"title": "angular mobile gestures block vertical scroll", "body": "mobile gestures blocks vertical scroll page example div contents swipe left swipe right works properly problem pages long contents nt allows vertical scroll pages", "num": "10261", "d": "7/2016"}, {"title": "browser refresh correctly", "body": "submitting check one x current behavior navigating route refreshing browser results page found file index root dir expecteddesired behavior page refreshes correctly reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point see also map trying chase posted questions items hindsight red herrings duped couple times hesitate speculate nature issue execept say possiblity case apoligize ask point right direction fix note development project use two different root pages site indexhtml webpackproduction debughtml systemjsdevelopment steps reproduce download code node command window run following npm install npm runscript copyfiles prompted lib directory press start web server lite npm start node window kestral visual studio browser click one links home page press note request indexhtml returns expected behavior motivation use case changing behavior please tell us environment see packagejson angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview observied ie chrome ff language typescript xx dart typescript", "num": "10260", "d": "7/2016"}, {"title": "expose pathmatch pathmatchafterredirects", "body": "submitting check one x current behavior way retrieve current path form unreplaced parameters something idsomethingelse exist ton ways get replaced version eg expecteddesired behavior imo important access matched path gives option identify application independently path parameters reproduction problem currently used debugging purposes expected behavior able check path router config matched independently parameters convenient way expose privde path match navigation end event motivation use case changing behaviour able add behaviour based pathmatching component case navbar please tell us environment centos angular version router browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "10259", "d": "7/2016"}, {"title": "ngmodel twoway binding", "body": "question conscerning multicomponent binding refer", "num": "10257", "d": "7/2016"}, {"title": "change detection stops working using timers web workers", "body": "submitting check one x current behavior reopening since still reproducible plunker ui updated based timer essentially clock component current time displayed based timer ticks observation ui update several iterations cases seconds ui stop updating reproducible running web worker expecteddesired behavior would expect timer stop updating ui long application running reproduction problem please tell us environment angular version mac user issue specific chrome beta browsers tried ok", "num": "10256", "d": "7/2016"}, {"title": "template tag service variable nt updated service variable changes", "body": "submitting check one x current behavior template tag contains service variable nt updated service variable changes expecteddesired behavior template tag updates service variable reproduction problem expected behavior expect service variables updated template components use services please refer example details motivation use case changing behavior goal service contains relevant variables functions animate page navigating certain path example user enters site brought page content page slides bottom top user navigates portfolio page example page content slides top bottom portfolio page slides bottom top issue order create variable animate away inside pages want animate manner let call variable animateaway boolean instead variable service create place part class component use feature expected behavior example maints animationservicets aboutcomponentts typescript imports component things template export class aboutcomponent animateaway boolean codeclasses want working example issue get code animatein animateout css classes srcappappstylescss file services srcappsharedservices course portfolio etc srcappabout srcappportfolio etc versionspecification details browser chrome dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter reflectmetadata rxjs systemjs zonejs devdependencies angularcli codelyzer embercliinjectlivereload jasminecore jasminespecreporter karma karmachromelauncher karmajasmine protractor tsnode tslint typescript typings", "num": "10255", "d": "7/2016"}, {"title": "support interpolation values", "body": "submitting check one x current behavior trying interpolate properties object template getting following error error uncaught promise template parse errors support interpolation values expecteddesired behavior able print number properties object reproduction problem issue could reproduced expected behavior able interpolate number properties object motivation use case changing behavior unable print details details users please tell us environment angular version browser language typescript", "num": "10254", "d": "7/2016"}, {"title": "support interpolation values", "body": "submitting check one x current behavior trying interpolate properties object template getting following error error uncaught promise template parse errors support interpolation values expecteddesired behavior able print number properties object reproduction problem issue could reproduced expected behavior able interpolate number properties object motivation use case changing behavior unable print details details users please tell us environment angular version browser language typescript", "num": "10253", "d": "7/2016"}, {"title": "router read property path undefined", "body": "current behavior using mgechev seed testing home routes routes app component trying navigate home route issue work expected user currently route send foobar user route produces error expecteddesired behavior user route send route query params foobar user already route change query params user route wants change query params require code instead otherwise way navigate route route motivation use case changing behavior able change query params route empty path home route example angular version", "num": "10252", "d": "7/2016"}, {"title": "enable partial form components using reactive form directives", "body": "submitting check one x current behavior component use form reactive directives template contains directive otherwise directives fail resolve happens directives specify metadata workaround could find inject ancestor child component associate directive child template partially solves issue new directive nt expose form events desired behavior scope resolution extended ancestors motivation use case changing behavior would enable following use cases splitting large form sub components defining sub form component gets repeated parent form component good example would address component used postal business addresses parent please tell us environment angular version browser language", "num": "10251", "d": "7/2016"}, {"title": "router add canload guard", "body": "support canload guard used prevent loading bundles navigation", "num": "10250", "d": "7/2016"}, {"title": "router support setting state object navigating", "body": "addition setting query params able set state object see", "num": "10248", "d": "7/2016"}, {"title": "exception directive annotation found appcomponent", "body": "submitting check one x current behavior trying start working angularjs tour heroes tutorial add hero class face exception exception expecteddesired behavior works tutorial says work reproduction problem application working fine adding hero object class expected behavior see motivation use case changing behavior see please tell us environment angular version browser chrome firefox language typescript", "num": "10247", "d": "7/2016"}, {"title": "chrome breaks animation system maybe", "body": "submitting check one x current behavior latest major version chrome loading webpage angular application uses angular animation system crashes whole javascript part therefore ca nt interact anything page error thrown exception error class herolistenterleavecomponent inline exception error class herolistenterleavecomponent inline anonymous function zonejs zonejs zonejs zonejs zonejs original exception typeerror failed execute animate element null valid value easingbrowserdomadapterlogerror anonymous function zonejs zonejs zonejs zonejs zonejs original stacktrace browserdomadapterlogerror anonymous function zonejs zonejs zonejs zonejs zonejs typeerror failed execute animate element null valid value easing typeerror native webanimationsdrivertriggerwebanimation webanimationsdriveranimate domrendereranimate debugdomrendereranimate debugappviewappviewdetectchanges debugappviewdetectchanges debugappviewappviewdetectcontentchildrenchanges anonymous function zonejs zonejs zonejs zonejs zonejs error context browserdomadapterlogerror anonymous function zonejs zonejs zonejs zonejs zonejs debugcontext view nodeindex tplrow tplcol browserdomadapterlogerror anonymous function zonejs zonejs zonejs zonejs zonejs zonejs uncaught exception error class herolistenterleavecomponent inline original exception typeerror failed execute animate element null valid value easing original stacktrace typeerror failed execute animate element null valid value easing typeerror native webanimationsdrivertriggerwebanimation webanimationsdriveranimate domrendereranimate debugdomrendereranimate debugappviewappviewdetectchanges debugappviewdetectchanges debugappviewappviewdetectcontentchildrenchanges error context object object zoneruntask zonejs zonejs previous major version chrome latest firefox latest edge latest internet explorer works fine expecteddesired behavior work intended reproduction problem official documentation live example plunker affected well go click preview add inactive hero show errors animation javascript console expected behavior see motivation use case changing behavior hate bugs nt really know answer question please tell us environment angular version browser chrome language typescript transpiled", "num": "10245", "d": "7/2016"}, {"title": "request feat ngmodule provide life cycle hooks", "body": "introduction solve problems run code bootstrap think better provide lifecycle hooks modules example theses would great ngbeforeload loading module ngafterload module loaded ngbeforechangedetection something change detection happens module ngafterstable something zones stable great usecase prefetching async lazy routes boot nt affect ui ngafterstable probably best feature since universal jasmine use might also help also see", "num": "10244", "d": "7/2016"}, {"title": "error work app", "body": "npm start gt tsc w c usershmuschettdesktoptestnodeangula r gt tsc w gt lite c usershmuschettdesktoptestnodeangular gt liteserver detect bsconfigjson bsconfigjs override file using lit eserver defaults browsersync config injectchanges false files html htm css js watchoptions ignored nodemodules server basedir middleware function function bs file changed appappcomponentjs bs file changed appmainjs compilation complete watching file changes bs access urls local external ui ui external bs serving files bs watching files get indexhtml get stylescss get nodemodulescorejsclientshimminjs get nodemoduleszonejsdistzonejs get nodemodulesreflectmetadatareflectjs get nodemodulessystemjsdistsystemsrcjs get systemjsconfigjs get appmainjs get nodemodules angularplatformbrowserdynamicb undlesplatformbrowserdynamicumdjs get appappcomponentjs get nodemodules angularcorebundlescoreumdjs get nodemodules angularcommonbundlescommonumd js get nodemodules angularcompilerbundlescompiler umdjs get nodemodules angularplatformbrowserbundlesp latformbrowserumdjs get nodemodulesrxjssubjectjs get nodemodulesrxjsobservablepromiseobservablejs get nodemodulesrxjsoperatortopromisejs get nodemodulesrxjsobservablejs get nodemodulesrxjssubscriberjs get nodemodulesrxjssubscriptionjs get nodemodulesrxjssubjectsubscriptionjs get nodemodulesrxjssymbolrxsubscriberjs get nodemodulesrxjsutilthrowerrorjs get nodemodulesrxjsutilobjectunsubscribederrorjs get nodemodulesrxjsutilrootjs get nodemodulesrxjssymbolobservablejs get nodemodulesrxjsutiltosubscriberjs get nodemodulesrxjsutilisfunctionjs get nodemodulesrxjsobserverjs get nodemodulesrxjsutilisarrayjs get nodemodulesrxjsutilisobjectjs get nodemodulesrxjsutiltrycatchjs get nodemodulesrxjsutilerrorobjectjs get nodemodulesrxjsutilunsubscriptionerrorjs", "num": "10243", "d": "7/2016"}, {"title": "create test helper avoid explicit test component class creation", "body": "currently pattern declare test component instantiates component test use drive unit test following example searchresultcard component test searchresulttestcomponent test component js display async gt buildercreateasync searchresulttestcomponent fixture gt component selector mycomp template directives searchresultcard class searchresulttestcomponent wanted create different test cases controlling different parameters component test would probably end creating different test components lot typing one option would create helper function actually returned test component class return value used test tests could use parametrized helper function js display async gt buildercreateasync gettestcomponent fixture gt display without parameters async gt buildercreateasync gettestcomponent fixture gt generalize core testing helper method would take template property bag used fill template totally avoid declaring test component maybe need think bit create test components also handle events addition properties", "num": "10241", "d": "7/2016"}, {"title": "support ticket", "body": "regarding closed ticket see answers cited stackoverflow questions old questions yes probably something wrong exhausted every resource please answer questions stackoverflow thx", "num": "10239", "d": "7/2016"}, {"title": "adding cachedtemplateprovider test shim fails", "body": "submitting check one x current behavior code loading cachedtemplateprovider use karma defined plugin promiseall systemimport angularcoretesting systemimport angularplatformbrowserdynamictesting systemimport angularplatformbrowserdynamic function results var testing results var testingbrowser results var platformbrowser results testingsetbasetestproviders testingbrowsertestbrowserdynamicplatformproviders testingbrowsertestbrowserapplicationproviders platformbrowsercachedtemplateprovider confirm platformbrowsercachedtemplateprovider correct get error karma error error invalid provider instances provider type allowed got undefined invalidprovidererrorbaseexception constructor new invalidprovidererror expecteddesired behavior define use cachexhr instead angular version", "num": "10237", "d": "7/2016"}, {"title": "named directives w expressions working correctly", "body": "submitting check one x current behavior dynamically switch named directives using expressions honors named directive instead abstract one take following directives accordiongroup export class accordion input closeonexpand true contentchildren accordiongroup groups ngaftercontentinit thisgroupsforeach g gt gontogglesubscribe thistoggled toggled selected thiscloseonexpand thisgroupsforeach g gt gopen g selected else selectedopen selectedopen component selector accordiongroup template export class accordiongroup hostbinding classactive input open input header viewchild accordionheader header output ontoggle new eventemitter could use like expecteddesired behavior would dynamically allow based expression use ngcontent like please tell us environment angular version browser language", "num": "10236", "d": "7/2016"}, {"title": "urlsearchparamsclone also clone queryencoder", "body": "submitting check one x current behavior urlsearchparamsclone also clone queryencoder every request urlsearchparams cloned without queryencoder desired custom encoding behavior work expecteddesired behavior passing urlsearchparams custom queryencoder work please tell us environment angular version browser language typescript xx", "num": "10235", "d": "7/2016"}, {"title": "uri decoding queryparams", "body": "submitting check one x current behavior returns parameters encoded version need manually decoded using would expect decoded like router path components fix expecteddesired behavior return decoded parameters reproduction problem supply parameter encoded entity retrieve output expected behavior output params foo b motivation use case changing behavior developer convenience line frameworks router handles path components please tell us environment angular version browser language", "num": "10234", "d": "7/2016"}, {"title": "animations nt play nice dynamic innerhtml", "body": "submitting check one x current behavior animations wildcard properties nt play nice dynamic innerhtml values see plunkr expecteddesired behavior expected height transition smooth seems like dynamic content considered computing final value property reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point see plunkr motivation use case changing behavior impoved aestheticsuser experience please tell us environment angular version browser chrome language typescript", "num": "10233", "d": "7/2016"}, {"title": "sourcemaps css", "body": "submitting check one x current behavior created new component set style using property works problems ca nt debug browser expecteddesired behavior since injects code within tag prevents styles code paired css source files would like get sourcemaps css files reproduction problem example component import component angularcore component moduleid moduleid selector home templateurl homecomponenthtml styleurls homecomponentcss export class homecomponent expected behavior expect see sourcemaps style files chrome inspector nt happen motivation use case changing behavior would see css files mapped sourcemaps easily debug style projects please tell us environment angular version browser chromium built ubuntu running linuxmint language typescript", "num": "10232", "d": "7/2016"}, {"title": "chrome ignores target attribute inside app", "body": "submitting check one x current behavior want open link iframe like described put inside app like works ie fine chrome link opening new tab works fine chrome outside app expecteddesired behavior link opened iframe new tab reproduction problem take getting started plunker put two lines inside template created showcase plunker expected behavior see motivation use case changing behavior want open link iframe using target attribute cause javascript sanitize link probably introduce xss problem please tell us environment windows chrom angular version browser chrome ie language default", "num": "10231", "d": "7/2016"}, {"title": "typeerror read property animate null", "body": "submitting check one x current behavior using chrome angular following errors popup console loading angular app expecteddesired behavior error show using animations explicitly happen browsers reproduction problem plunker live site demo visit url chrom latest see error first load second page load seems fine reason line causing error somehow chrome finds platformbrowserumdjs also helps using systemjsbuilder bundle app files systemjs config function global app bootstrap import bootstrap angularplatformbrowserdynamic import appcomponent componentappcomponent import httpproviders angular import httpservice commonservice import enableprodmode angularcore import disabledeprecatedforms provideforms angularforms import approuterproviders routesauthroutes import translateproviders translateservice translatepipe translateloader translatestaticloader enableprodmode bootstrap appcomponent approuterproviders httpproviders translateproviders httpservice disabledeprecatedforms provideforms catch err gt consoleerror err expected behavior error show using animations explicitly happen browsers motivation use case changing behavior nt know answer please tell us environment angular version browser chrome language typescript", "num": "10230", "d": "7/2016"}, {"title": "provide provider attribute decorator used constructor component", "body": "submitting check one x component constructor specify attribute decorator never let inject component error related provider attribute attribute way provide provider inject component reproduction problem third party library provides table change pure javascript library angular component using code component want write unit test component test describe test gt beforeeachproviders gt mycomp provider elementref test async inject testcomponentbuilder mycomp tcb testcomponentbuilder gt tcbcreateasync mycomp fixture gt expect true tobe false however code returns error error di exception provider attribute samplestring expected behavior way provide provider throw error motivation use case changing behavior please tell us environment angular version browser chrome language typescript", "num": "10229", "d": "7/2016"}, {"title": "browser app hangs refresh", "body": "submitting check one x current behavior refreshing page refresh button causes browser hang expecteddesired behavior refreshing page refresh button reload page reproduction problem start app press chrome ie ff browser hangs error message expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome ie ff language typescript xx dart typescript proposed answer work config proposed answer work first started troubleshooting idea causing app hang started deconstructing app thinking one components wound writing ticket doubt wrong conclusion far got reconstruct problem kicks tried fix recommended default route load hit navigating page would refresh navigating would refresh exhausted every resource think working couple days last time spent couple days working issue find code deprecated sure hope happen guy nt pleased either lol maints require csssitecss import provide angularcore import bootstrap angularplatformbrowserdynamic import location locationstrategy hashlocationstrategy angularcommon import appcomponent appcomponent import sessionservice servicessessionservice import approuterproviders approutes bootstrap appcomponent approuterproviders provide locationstrategy useclass hashlocationstrategy approutests import routerdirectives providerouter routerconfig angularrouter import contact contactcontact import blogindex blogblogindex import blogdetail blogblogdetail import home homehome const routes routerconfig path component home path contact component contact path blogindex component blogindex path post slug component blogdetail export const approuterproviders providerouter routes packagejson", "num": "10228", "d": "7/2016"}, {"title": "clarify error message", "body": "used start icu message users template wo start icu message error message explicit ie contain escape sequence", "num": "10227", "d": "7/2016"}, {"title": "linting specs complain missing", "body": "currently lint check requires class members prefixed also annotation necessary creating classes tests see cc alexeagle", "num": "10226", "d": "7/2016"}, {"title": "docs wrong dynamic forms new forms api subtitle", "body": "submitting check one x current behavior ts documentation dynamic forms cookbook page using new forms api subtitle render dynamic forms ngformmodel expecteddesired behavior use different subtitle alike technique explained like render dynamic forms using formgroupformbuilder reproduction problem visit doc page linked expected behavior motivation use case changing behavior pedantic catch typos please tell us environment angular version latest docs browser language typescript others", "num": "10225", "d": "7/2016"}, {"title": "docs lifecycle directives support view lifecycle hooks docs say dont", "body": "submitting hard say current behavior ngaftercontentinit ngaftercontentchecked ngafterviewinit ngafterviewchecked fire directives expecteddesired behavior according docs lifecycle hooks components ngaftercontentinit ngaftercontentchecked ngafterviewinit ngafterviewchecked compiler registers invoke directives well view factory component containing directive invoke lifecycle hook directive change intent compiler requires accessing directive instance calling hook within method plunker assume docs incorrect", "num": "10221", "d": "7/2016"}, {"title": "ca nt access parent router params inside child", "body": "submitting check one x current behavior using route guard verify route actually exists placed router guard inside child route would like protect ca nt see parameters parent router example route parent parentid child routes parent parentidchild childid protect childb route route guard see childid parameter parentid expecteddesired behavior able see parentid childid params motivation use case changing behavior undoubtedly operation subpage depends parent likewise data needs passed child please tell us environment angular version angular browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart typescript", "num": "10219", "d": "7/2016"}, {"title": "error install angular quickstart", "body": "npm install npm warn deprecated minimatch please update minimatch higher avoid regexp dos issue typings err message unable connect typings err caused connect econnrefused typings err cwd c usershmuschettdesktoptestnodeangular typings err system windowsnt typings err command c program filesnodejsnodeexe c usershmuschettdesktoptestnodeangularnodemodulestypingsdistbinjs install typings err node v typings err typings v typings err code eunavailable typings err need help may report error typings err npm warn optional skipping failed optional dependency chokidarfsevents npm warn notsup compatible operating system architecture fsevents npm warn description npm warn repository field npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs install npm err node npm err npm npm err code elifecycle npm err postinstall typings install npm err exit status npm err npm err failed postinstall script typings install npm err make sure latest version nodejs npm installed npm err likely problem package npm err npm npm err tell author fails system npm err typings install npm err get information open issue project npm err npm bugs npm err nt available get info via npm err npm owner ls npm err likely additional logging output npm err please include following file support request npm err c usershmuschettdesktoptestnodeangularnpmdebuglog windows angular version browser language typescript x", "num": "10217", "d": "7/2016"}, {"title": "rename dom elements representing components without selectors", "body": "components without selectors rendered feels like bug could give new name", "num": "10216", "d": "7/2016"}, {"title": "feature http add support easy", "body": "looks like nice pattern needs investigation know ease usage angular", "num": "10215", "d": "7/2016"}, {"title": "polymer element paperlistbox working properly inside angular component", "body": "submitting check one x description polymer elements paperdropdownmenu paperlistbox rendering properly inside angular current behavior without clicking anything shows options clicking option hides expecteddesired behavior clicking paperdropdownmenu element dropdown popup clicking option show selected value reproduction problem example shows also reproducable please tell us environment angular version browser chrome version language typescript", "num": "10214", "d": "7/2016"}, {"title": "able bind dynamic json data dynamically loaded child component", "body": "trying dynamically load child component parent component parent component need pass parameter child would used child component make service call retrieve data webapi service returned data bound input controls child component testing purpose created plunker wherein loading child component parent trying bind input controls data json object initialized locally facing issues getting instances child component loaded initial load actual event parent component also data getting bound child component properly similar dynamiccomponentloader method like loadasroot nt methods ensure instance loaded componentresolver", "num": "10212", "d": "7/2016"}, {"title": "http request unable override default contenttype set headers value", "body": "submitting check one x current behavior using making http request headers contenttype set type check data entered detectcontenttype method contenttype header added option request call ignored expecteddesired behavior would expect contenttype specifically defined options request call would override default contenttype set reproduction problem easier explained code expected behavior see attached proposed pr motivation use case changing behavior would nice able specifically set contenttype given data sent please tell us environment angular version browser language typescript", "num": "10210", "d": "7/2016"}, {"title": "relative routerlink nt get updated url changing", "body": "submitting check one x current behavior plunkr shows item detail page embeds child view exhibits related items click related items visit item detail page links tab overview related nt update accordingly clicks item link tab still expecteddesired behavior clicks item link tab change reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point plunkr please tell us environment angular version angular router version browser chrome language typescript", "num": "10209", "d": "7/2016"}, {"title": "httpget returned observables nt trigger change detection", "body": "submitting check one x current behavior using rxjs observable returned operation subscribing however model changes occur subscription nt get reflected ui invoking operation triggers ui updates happened previously convert observable promise things work expected promise subscription modifies variables turn trigger angular change detection noticed rxjs subscribing function nt get called inside ngzone appts consoletrace anonymous function appts promise subscription get called inside ngzone anonymous function appts zonedelegateinvoke zonejs oninvoke zonedelegateinvoke zonejs zonerun zonejs anonymous function zonejs zonedelegateinvoketask zonejs oninvoketask zonedelegateinvoketask zonejs zoneruntask zonejs drainmicrotaskqueue zonejs expecteddesired behavior expecting observable subscription work promise subscription reproduction problem plunker app displays two buttons first button using rxjs observables second one js promises click first button nt show anything second event necessary order trigger change detection second button reacts first click expected behavior motivation use case changing behavior please tell us environment angular version browser chrome firefox safari language typescript", "num": "10208", "d": "7/2016"}, {"title": "parameterized routes cause component router links update", "body": "using parameterized routes changes parameter correctly recognized using observable activated route router links component view updated appears bug see plunker example example root takes parameter displays child router outlet child routes available router links container component assuming start url use router links parent component switch example go clicking example link route correctly recognizes change parameter updates view display id links however still link respectively change active route never recognized seems relative routes take route changes account rendered beginning appears directive uses activatedroute injected construction directive works differently listening router events always using current url directive could obviously changed listen events personally similar problem components application component router actively reuses components switching two different routes happen use components cause components go lifecycle events initialization would happen happens first route properly update component would actually listen router events since listen router events figure current component would affected perform manually feels wrong take care much things listen many lowlevel events want use router configuration angular version router version", "num": "10207", "d": "7/2016"}, {"title": "sanitizing html warning cyrillic symbols", "body": "submitting bug report check one x current behavior angular html binding cyrillic symbols generates warning warning sanitizing html stripped content see expecteddesired behavior error reproduction problem please tell us environment angular version browser chrome language", "num": "10206", "d": "7/2016"}, {"title": "router consider removing async init routermodule", "body": "submitting check one x current behavior due cyclic dependency issue could nt injected sync app initialization router init done async might mostly run app rendered expecteddesired behavior init block run root component renders motivation use case changing behavior prevent sorts weird unexpected behavior testing latest master seems like applicationref easily injected constructor also confirmed tbosch please consider remove", "num": "10205", "d": "7/2016"}, {"title": "html input change event propagates wrapping component", "body": "submitting check one x current behavior wrapping html input component without giving component explicit html input change event propagates component expecteddesired behavior let change events propagate components behavior confusing adding suddenly emits events emitting reproduction problem expected behavior component react emit change events setup like expect change event fired component change events html inputs even nested child components motivation use case changing behavior hit surprise premature change events came defined eventemitter emit button press please tell us environment angular version browser tested chrome language typescript", "num": "10204", "d": "7/2016"}, {"title": "router export containstree new router", "body": "old router method routerisrouteactive could used check whether route active new component router offer instead directive uses custom logic figure whether route active boils comparing current target using containstree unfortunately exported module level anyone wants figure whether route active use directive implement logic reexport function used", "num": "10203", "d": "7/2016"}, {"title": "router expose preventpushstate", "body": "submitting check one x current behavior way trigger navigation preventing pushstate event expecteddesired behavior way preventing pushstate event maybe using navigationextras motivation use case changing behavior route listen fragment parameters present setup default values trigger navigation url updated correctly way user go back since always redirected route without param route param would like update url without pushing history state", "num": "10202", "d": "7/2016"}, {"title": "exception reflectmetadata shim required using class decorators", "body": "submitting x bug report feature request support request problem description receive exception debugging angular source code visual studio code steps reproduce take sample project ie choose nodejs debugger showed set sourcemaps true launchjson setting run debugger receive exception part code decoratorts file please check thanks environment angular version system windows language typescript", "num": "10201", "d": "7/2016"}, {"title": "validation unbound form element working", "body": "submitting check one x current behavior validation rules trigger form element without expecteddesired behavior validation work without binding element reproduction problem form element configured rule code plunk never becomes valid soon add works expected expected behavior validation require form element bound worked motivation use case changing behavior need value field nt think bind please tell us environment angular version browser language typescript", "num": "10200", "d": "7/2016"}, {"title": "state changes reflected safari", "body": "submitting current behavior subscribing queryparam changes component order update save app state based clicking links points different states works fine using browsers back button getting prev state work safari using browser back button ie safari code component get executed reflected dom run changes inside ngzonerun callback callback function get reflected expecteddesired behavior changes get reflected dom happening browsers reproduction problem open devtools console click list randomly take look url use browser back button get back prev state monitor logging console code gets executed reflected browsers dom motivation use case changing behavior consistent behaviour modern browsers please tell us environment angular version browser ie safari language typescript", "num": "10199", "d": "7/2016"}, {"title": "animation allow specifying pseudoclasses state transition", "body": "submitting check one x current behavior allows custom state declared expression allows expression compared value assigned template expression expecteddesired behavior allows css pseudoclasses used determining state example presence pseudoclass colon would refer applied element pseudoclass applied presence pseudoclass negative sign colon would refer applied element pseudoclass applied potential way adding dsl sure somebody might think better general way express alternative syntax would allow named state refer state pseudoclass used transition motivation use case changing behavior seem two ways achieving behaviour currently use native web animation expressions directly styles declaration directive add listeners hoverclicketc events directive store state property directive bind problem use two different syntaxes expressing animation lose upcoming ability pull animation styles existing styles declared section furthermore unable use extremely convenient syntax element obvious problem required add listeners directives store state element motivation behind allow consistent convenient way expressing animations regardless use programmatic state directive applicable using native web animations please note seems entirely plausible able use generalpurpose method querying see particular selector matches applied element regular css class please tell us environment angular version browser language typescript", "num": "10196", "d": "7/2016"}, {"title": "proposal separate concerns child control construction parent controlcontainer mapping", "body": "submitting check one x current behavior reactive forms builtin mechanism separating concerns constructing child control vs mapping hierarchy parent controlcontainer two choices handle dynamic form mapping parent wire proper lifecycle events dynamically bind child control correct parent member select viewchild implement onchanges tracking initial wireup flag child inject parent controlcontainer receive nameindex parent expecteddesired behavior directive extension existing name directives maps value child control could remove complexity allow child specify control directive used parent component would handle mapping words template want say value associated childcontrol would set parent controlcontainer either array group based formcontrolname motivation use case changing behavior take reusable address component example may build formgroup city state zip well several validators may want use component several locations perhaps page parent formgroup home work children another page allows add number saved shipping addresses formarray implementation could accomplished adding input applicable directives formgroupname formcontrolname ngcontrol set control passed would mapped parent controlcontainer working hack toying sake showing interaction points allowing use template syntax hack points replaces directives ngonchanges methods accesses private parent ts directive selector abcformcontrol export class abcformcontrol implements onchanges implements controlvalueaccessor constructor optional self formgroupname formgroupname optional self formarrayname formarrayname optional self ngcontrol ngcontrol thisotherdirective formgroupname formgroupname formarrayname formarrayname ngcontrol thisoldonchanges thisotherdirectivengonchanges thisotherdirectivengonchanges changes simplechanges gt thisnewonchanges changes thanks considering please tell us environment angular version browser chrome language typescript", "num": "10195", "d": "7/2016"}, {"title": "forms property exist type abstractcontrol", "body": "submitting check one x current behavior trying detect valuechanges form field works reference field one way way would normally use form setup working error getting however working angular version browser language typescript", "num": "10192", "d": "7/2016"}, {"title": "check fails loaded tag", "body": "repro leads problem code nt loaded yet fail error maybe could instead call possibly memoizecache result", "num": "10191", "d": "7/2016"}, {"title": "currencypipe respect currency defined number digit", "body": "submitting check one x current behavior defined number digits currency respected numberformatter api currencypipe example eur expected precision digits pipe gives expecteddesired behavior default formatting option passed currency defined number digit respected ie reproduction problem see example currency pipe motivation use case changing behavior make currency pipe actually suited display money values using currency defined precision instead arbitrary precision info takes formatting options underlying intl call default values makes well suited deal currencies nt want set decimal precision leaving precision currency instead please tell us environment angular version browser language", "num": "10189", "d": "7/2016"}, {"title": "", "body": "", "num": "10188", "d": "7/2016"}, {"title": "router candeactivate nt provide future routerstate snapshot", "body": "submitting check one x current behavior using guard snapshot current state expecteddesired behavior provide future reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point open developer console click link click link note console logs expected behavior console logs motivation use case changing behavior provide context proposed destination url information current already available service please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart cc vsavkin", "num": "10186", "d": "7/2016"}, {"title": "proposal provide component lifecycle hooks observables", "body": "submitting current behavior currently component lifecycle hooks handled implementing one interfaces provided angular find often wanting subscribe observable componentdirective destroyed member subscription later disposal method example typescript imports directive selector ondrag export class ondrag implements oninit ondestroy dragstart subscription dragenter subscription dragover subscription dragleave subscription constructor private element elementref ngoninit let elem thiselementnativeelement ngondestroy thisdragstartunsubscribe thisdragenterunsubscribe thisdragoverunsubscribe thisdragleaveunsubscribe desired behavior suggestion provide components observable lifecycle event via injection perhaps example could turn something like typescript imports directive selector ondrag export class ondrag implements oninit constructor private element elementref private lifecycle thingwithlifecycleobservablesforthiscomponent ngoninit let elem thiselementnativeelement motivation use case changing behavior ultimately would like way hold onto subscriptions class members perhaps better way achieve suggestion could convenientconcise able handle lifecycle events observables within components workaround currently extending components base class provides events typescript import oninit ondestroy angularcore import subject rxjssubject export class componentlifecycle implements oninit ondestroy protected nginit subject new subject protected ngdestroy subject new subject ngoninit thisnginit next ngondestroy thisngdestroy next please tell us environment angular version browser language", "num": "10185", "d": "7/2016"}, {"title": "router work rxjs umd bundle", "body": "submitting check one x current behavior configuring router createurltree exception thrown trying call access undefined rxjsobservableof expecteddesired behavior router library properly utilize existing rxjs umd reproduction problem create application routing using router rxjs umd bundle expected behavior motivation use case changing behavior use umd modules please tell us environment angular version router rxjs browser chrome firefox language typescript", "num": "10183", "d": "7/2016"}, {"title": "components recreated incorrectly immutable nested arrays", "body": "submitting current behavior item modified immutable array data component representing item recreated components representing array items item modified immutable array arrays data component representing subarray item part components representing items recreated expecteddesired behavior item modified immutable array arrays data component representing item recreated components representing subarray items reproduction problem single list list lists enter new name item using inputs view logs console see runs component motivation use case changing behavior representing matrix data performance poor component dom changes occur necessary please tell us environment angular version notes realise may necessarily bug possible simply nt understand supposed work case seems strange would know recreate components immutable data certain sitatuations must way represent matrix achieve desired behaviour yet find anything looks like would help ask gitter response yet", "num": "10182", "d": "7/2016"}, {"title": "upgrade adapter wrongly interprets optional attributes", "body": "submitting check one x current behavior would like integrate directive component optional attributes whatever set value test reflected remove everything works expected expecteddesired behavior optional attributes correctly parsed upgrade adapter currently faulty piece code introduced commit attribute optional localname set instead name reproduction problem plunkr demonstrates problem please tell us environment angular version browser language", "num": "10181", "d": "7/2016"}, {"title": "simultaneous primary auxiliary routing issue", "body": "submitting current behavior new router produces error simultaneously routing primary auxiliary sought help issue via following sources q amp instructor accounts syntax correct maybe misunderstanding syntaxwhat possible expecteddesired behavior error reproduction problem expected behavior error motivation use case changing behavior error please tell us environment angular version angularrouter browser chrome version language typescript os windows enterprise service pack", "num": "10180", "d": "7/2016"}, {"title": "show username string using alert", "body": "hello probem function doalert would like show username using alert need convert string somebody know solve thanks advance best regards import component angularcore import navcontroller alert ionicangular import principal principalprincipal import formdirectives formbuilder controlgroup validators abstractcontrol angularcommon import customvalidators validatorscustomvalidators component templateurl buildpageshomehomehtml directives formdirectives export class homepage constructor private navcontroller navcontroller private fb formbuilder thisnavcontrollernavcontroller thisauthform fbgroup username validatorscompose validatorsrequired validatorsminlength customvalidatorscheckfirstcharactervalidator password validatorscompose validatorsrequired validatorsminlength customvalidatorscheckfirstcharactervalidator onsubmit value string void thisauthformvalid consolelog submitted value value gotoprincipal thisdoalert doalert let alert alertcreate title new friend subtitle thisusername buttons ok thisnavcontrollerpresent alert", "num": "10179", "d": "7/2016"}, {"title": "angular new router api navigate page", "body": "submitting check one x current behavior using router html shown works fine application navigates target clicking link however change link call function eg showtarget use router api shown navigate target code console shows navigate success nothing happens screen url browser current page stay unchanged also tried navigating dummy link see logs navigate failure always shows success matter link specified debug causing behaviour expecteddesired behavior expect application navigate target page routernavigate complete angular version router version browser chrome language typescript", "num": "10178", "d": "7/2016"}, {"title": "final version need wait next year", "body": "release next year ca nt wait use react please tell thank much", "num": "10176", "d": "7/2016"}, {"title": "ngafterviewchecked called even changedetectorrefdetach fired", "body": "submitting check one x current behavior refdetach called view updated common sense view never changing ngafterviewchecked also called simply setinterval settimeout called ngafterviewchecked also fired expecteddesired behavior ngafterviewchecked stop fired refdetach called reproduction problem expected behavior ngafterviewchecked stop fired refdetach called motivation use case changing behavior amcharts uses short interval check user interaction something insert component since calls setinterval every single tick ngafterviewchanged also called every single tick although changes apply please tell us environment windows chrome angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview windows chrome language typescript xx dart typescript", "num": "10175", "d": "7/2016"}, {"title": "browser back button safari trigger change detection", "body": "submitting x bug report current behavior running safari version visit route hit browser back button change detection occur left blank screen expecteddesired behavior hit browser back button expect see applicable component data showing router outlet reproduction problem gif behaviour steps reproduce open plunk launch preview another window small blue expand button top right preview pane click link hit browser back button please tell us environment mac osx running safari version confirm works chrome firefox angular version browser safari ios safari language typescript", "num": "10171", "d": "7/2016"}, {"title": "router crashes first nav command params object", "body": "submitting check one x want reload current route different route params using relative navigation path something like problem code function seems allow first element command array params object case apply current innermost route crashes argument seems point end thus line currently undefined nt know navigation extra intended required work seems crash specify nt specify crashes nested route see plunker demo reproduction problem please tell us environment angular version router browser chrome", "num": "10170", "d": "7/2016"}, {"title": "unhelpful missing route component declaration error message", "body": "submitting check one x current behavior route defined without component declaration results error message reproduction problem make route omit component expected behavior error message crops different situations difficult trace case results router resolvets code gt resolverresolvecomponent nodevaluecomponent factory gt nodevalueresolvedcomponentfactory factory cascades error wholly different call stack assignment guarded checking factory value issuing appropriate error addition route validated beforehand furthermore separate task ensure forthcoming route documentation specifically states required motivation use case changing behavior issue symptomatic pervasive cavalier disregard defensive programming angular development process appreciate developers pressure let issues like slide technical leads qa know better code review anyone unfortunately defensive programming must integral development process difficult address initial functional goals achieved please tell us environment angular version router version browser language", "num": "10168", "d": "7/2016"}, {"title": "custom validator typescript strictnullchecks compilation error", "body": "submitting check one x current behavior adding custom validator formcontrol typescript strictnullchecks compiler option following error occurs trying enforce expected return type key string boolean upon validation function error goes away new one appears expecteddesired behavior custom validators require return null valid validatorfn validator interface definitions need allow null return type reproduction problem create new formcontrol custom validator set validators formcontrol thiscontrol new formcontrol thiscreatecustomvalidator thiscontrolsetvalidators thiscreatecustomvalidator createvalidatesite return function c formcontrol let obj cvalue create directive implements validator class import directive forwardref angularcore import ngvalidators validator formcontrol angularforms export const idvalidator provide ngvalidators useexisting forwardref gt idvalidatordirective multi true directive selector validateid formcontrolname validateid formcontrol validateid ngmodel providers idvalidator export class idvalidatordirective implements validator validate c formcontrol key string boolean null let isvalid cvalue amp amp cvalueid amp amp cvalueid gt expected behavior custom validators require return null valid validatorfn validator interface definitions need allow null return type motivation use case changing behavior needed custom validators strictnullchecks flag typescript compiler please tell us environment angular version browser chrome language typescript", "num": "10166", "d": "7/2016"}, {"title": "ngif async pipe rebind child async piped observables", "body": "submitting check one x current behavior async pipe reattaching dom parent ngif value dependant upon async pipe observable expecteddesired behavior ngif switches based pipe observable value children ngif also piped observables mapped dom shown example binding hidden property reproduction problem notice green band rebind expected behavior green band would appear alongside blue band behavior motivation use case changing behavior implementing modal redux style architecture please tell us environment angular version browser tested chrome language tested typescript", "num": "10165", "d": "7/2016"}, {"title": "ngmodelgroup nt bring ngcontrolstatus", "body": "submitting check one x current behavior ngcontrolstatus therefore fieldsetdiv ngmodelgroup custom group validator goes invalid nothing gets class expecteddesired behavior neither grouped controls technically invalid group let user decide css whether write reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior put nginvalid model group motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript dart sorry first ever raised issue please nt harsh also sure whether design therefore feature request omission case bug", "num": "10162", "d": "7/2016"}, {"title": "testing global keyboard event listeners registered via hostlistener decorator never removed", "body": "submitting current behavior testing component registers keyboard event listener like listener never removed test dispatches keyboard event received n event listeners n number tests created component actual test happens tests component created testcomponentbuilder reproduction problem see plunker defines three tests creates component keyboard event listener outputs console message tests test actually nothing third test dispatches keyboard event open console verify event processed three times app also loaded uncomment two lines indexhtml even processed four times expected behavior global keyboard events registered via hostlistener decorator removed tests create component testcomponentbuilder please tell us environment angular version browser running tests language typescript", "num": "10161", "d": "7/2016"}, {"title": "hide empty detail ngif section tour heroes tutorial", "body": "submitting check one x current behavior hide empty detail ngif section says app loads see list heroes case see list empty badges without heroes expecteddesired behavior doc needs updated accurate behaviour omit ngif reproduction problem without appcomponentts angular version browser chrome language typescript", "num": "10160", "d": "7/2016"}, {"title": "invalid argument pipe decimalpipe", "body": "submitting current behavior input tied number variable ngmodel want dynamically display inputted value decimal using number pipe nt work throws invalidpipeargumentexception invalid argument pipe decimalpipe expecteddesired behavior want display decimal value reproduction problem put number input see exception browser console please tell us environment angular version browser language typescript", "num": "10159", "d": "7/2016"}, {"title": "mock providers specified component meta data", "body": "since overrideproviders supported tried using able mock service provided bootstrap phase provided componet level like even used provide taking mockedservice alternative way mock services specified component meta data instead overrideproviders", "num": "10158", "d": "7/2016"}, {"title": "change work properly", "body": "every time choose value change get value last selected ngmodel get value correct get chosen value change event please tell us environment angular version browser chromium language typescript", "num": "10156", "d": "7/2016"}, {"title": "iterations", "body": "far remember angular problem iterations tag things stand like advise implement tell framework recorded video min solution rendering shadow dom move virtual dom tree nodes physically even virtual dom elements place element move anything anywhere serves mark renderer rendering nodes projection place tag npm framework githum framework understand went enemy camp competitors ready share experience", "num": "10155", "d": "7/2016"}, {"title": "form radiocheckbox default checked demo", "body": "form radiocheckbox default checked demo started yes export class mycomponent name control start control form controlgroup constructor private builder formbuilder thisname new control validatorsrequired thisstart new control validatorsrequired thisform buildergroup name thisname start thisstart ngoninit radio unchecked", "num": "10153", "d": "7/2016"}, {"title": "testing componentfixture certain methods support chaining", "body": "submitting check one x nicetohave request certainly priority current behavior methods return void means ca nt chain call separate lines like expecteddesired behavior methods returned fixture could chain like angular version candidate browser language", "num": "10152", "d": "7/2016"}, {"title": "toucheduntouched updating custom input component", "body": "submitting check one x current behavior untouchedtouched properties update ngtouched class added properly pristinedirty validators expecteddesired behavior would expect untouchedtouched updated blur like pristinedirty validators reproduction problem please tell us environment angular version browser chrome language typescript", "num": "10151", "d": "7/2016"}, {"title": "validatorpattern accept regular expression instead string", "body": "submitting check one x current behavior building form input field regular expression pattern regexpattern string group questionkey validatorscompose validatorsrequired validatorspattern regexpattern formbuildergroup group debugging see regexpattern pattern requiredpattern actualvalue expecteddesired behavior see requiredpattern adds extra beginning end validatorspattern string accept regexp string regexpattern set see value debugging obvsiously requiredpattern validatorspatterns string instead accept regular expression literal validatorspattern regexp input signature strmatch regexp javascript reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10150", "d": "7/2016"}, {"title": "need note breaking changes testing ngmodel", "body": "note whoever preparing changelog split new forms always asynchronous updating means tests instead calling need use asynchronous js let fixture buildercreatesync inputcomp fixturedetectchanges js let fixture buildercreatesync inputcomp fixturewhenstable gt", "num": "10148", "d": "7/2016"}, {"title": "internet explorer datepipe", "body": "submitting check one x current behavior submitting valid dates datepipe return exception original exception invalid argument pipe function datepipe expecteddesired behavior datepipe working expected reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point created plunk working ie systemjs issue expected behavior motivation use case changing behavior please tell us environment angular version browser ie language typescript xx", "num": "10147", "d": "7/2016"}, {"title": "router nt load ngoninit click back button ie", "body": "submitting x bug report current behavior using hit back button ie url address bar changes previous url never loads page calls component constructor nt invoke ngoninit firefox works fine expecteddesired behavior ie load ngonnit hit back forward buttons please tell us environment angular version browser ie", "num": "10146", "d": "7/2016"}, {"title": "", "body": "submitting check one x current behavior empty div html iframe injected expecteddesired behavior display iframe innerhtml example plunkr demonstrating hello name directives export class app private html string constructor thisname release candidate reproduction problem plunkr demonstrating problem expected behavior load iframe innerhtml motivation use case changing behavior trying convert youtube urls iframe embeds dynamically please tell us environment angular version browser chrome ff language typescript", "num": "10145", "d": "7/2016"}, {"title": "npm install invalid peerdependencies requirements", "body": "submitting current behavior created project using instruction packagejson written installed nodejs npm trying install gulp project devdependencies npm install savedev gulp getting error npm err peerinvalid package reflectmetadata satisfy siblings peerdependencies requirements npm err peerinvalid peer wants reflectmetadata npm err peerinvalid peer wants reflectmetadata seems angular requires contradictory versions reflectmetadata expecteddesired behavior gulp installed project devdependencies please tell us environment angular version npm version nodejs version packagejson", "num": "10144", "d": "7/2016"}, {"title": "router query parameters persist links page refresh", "body": "submitting check one x current behavior query parameters working globally components expected however navigate different routes lets say questions posts question route question route children set query parameter persisted expected navigate questions refresh page generate post posts link expecteddesired behavior page refresh routerlink generate query parameters different routes eg post wrong expected behaviour afraid looks like routerlink work correctly updat links query parameters changed please tell us environment angular version browser language typescript", "num": "10142", "d": "7/2016"}, {"title": "using routerlinkactiveoptions exact true routerlink still sets active class initially even exact match", "body": "submitting check one x current behavior given template css easily notice issue user inputs go straight route soon application bootstraps notice home link active blink eye router removes active class home link puts link expecteddesired behavior home link route active class even fraction second load app different route ie typing url directly hiting enter reproduction problem open popup window click link navigate route hit reload page route notice initially app bootstraps home link active class taken placed link ps went hashlocationstrategy plunkr behavior nt matter hash course please tell us environment angular version router version", "num": "10141", "d": "7/2016"}, {"title": "angular output property bubble event angular parent", "body": "submitting check one x current behavior component downgrading use angular app using output property inside app component class seem bubble event angular app app component downgraded used ex component export class appcomponent output back eventemitter new eventemitter work goback consolelog trying go back thisbackemit app downgrade component like app controller mycontroller mycontroller directive test appcomponent html controller look like export class mycontoller goback event consolelog event downgraded angular component working interestingly use outputs array inside component selector instead output property works component outputs back works export class appcomponent output back eventemitter new eventemitter event captured back eventemitter new eventemitter goback consolelog trying go back thisbackemit expecteddesired behavior would expect output property behave way outputs array inside component selector bubbling event please tell us environment angular version browser chrome language typescript", "num": "10140", "d": "7/2016"}, {"title": "offline compiled components utilized ngupgrade", "body": "submitting check one x current behavior offline compilation external templates css files converted executable javascript inlined generated ngfactory file however downgrading offline compiled component using ngupgrade generated code utilized instead downgraded component still request external files html css bypass generated code behavior occur pure angular environment ngupgrade based applications expecteddesired behavior would expect downgraded components benefit offline compilation reproduction problem created plunker repro ngfactory files generated using based plunker see offline compiled components without external file dependencies work fine however uncomment directive registration component maints see failed request greetinghtml expected behavior would expect external html requested component since template already inlined offline compiler please tell us environment angular version browser language typescript", "num": "10139", "d": "7/2016"}, {"title": "ngif working sign", "body": "using angular js rc small project facing problem ngif working operator html home isadmin authisadmin lt isloggedin authisloggedin lt isadmin amp amp isloggedin authisadmin amp amp authisloggedin lt isadmin amp amp isloggedin authisadmin amp amp authisloggedin lt screen shot displaying screen", "num": "10138", "d": "7/2016"}, {"title": "ability run angular without server", "body": "submitting current behavior angular currently requires nodejs served without server directly cnd aws etc expecteddesired behavior would good angular js allowed used without server directly served aws directly clicking indexhtml ease deployment reduce cost since allowing served anywhere expected behavior would good angular js allowed used without server directly served aws directly clicking indexhtml ease deployment reduce cost since allowing served anywhere motivation use case changing behavior improve ease deployment angular allow users use static page hosting services used angular thus reducing cost increase adoption wide range problems please tell us environment angular version browser language", "num": "10137", "d": "7/2016"}, {"title": "ngmodelgroup nt work ngcontainer", "body": "submitting check one x current behavior following code causes error used expecteddesired behavior works well reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior errors console motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "10136", "d": "7/2016"}, {"title": "invalid name angularcommon installation application started", "body": "attached log files please check let know reason npmdebug copylogtxt npmdebuglogtxt submitting check one x current behavior expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "10135", "d": "7/2016"}, {"title": "docs content example directive ngaftercontentinit seems incorrect", "body": "submitting check one x current behavior see api guide contentchild example guide page attempts illustrate showing directive extracts child content directive lacks template extract child content child view example unclear perhaps nonsense reveal hooks called directive would use came issue filed angulario lifecycle hook documentation asserted hooks really nt apply directives replied sample code code slight tweak documentation chapter plunker elaborate need", "num": "10134", "d": "7/2016"}, {"title": "required field validation working even value entered", "body": "hello got value pretag assigning value text box value assigned text box also getting required error press space bar error goes actual error body solve", "num": "10133", "d": "7/2016"}, {"title": "compile routermodule compilercli", "body": "submitting check one x current behavior try compile code error occurs reason line compilercli nt support unnamed functions written exported function well expecteddesired behavior compiled well reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version builds latest builds browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript cc vsavkin", "num": "10132", "d": "7/2016"}, {"title": "docs lifecycle changes afterviewchange expression changed checked", "body": "requested vicb submitting check one x continuation let try keep one short nt closed current behavior changing binding throws exception expecteddesired behavior nt reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior still shouldnt motivation use case changing behavior make nt throw exception please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview tested edge firefox chrome language typescript xx dart vicb mentioned actions taken exist available", "num": "10131", "d": "7/2016"}, {"title": "router export", "body": "submitting check one x current behavior wo nt compile exported barrel second param therefore public shape conforming objects typesafe manner eg creating mock router testing please tell us environment angular version candidate july browser language", "num": "10130", "d": "7/2016"}, {"title": "angular quick start working latest typescript", "body": "submitting check one x current behavior angular quick start package works typescript typescript latest version ts breaking changes default export using latest ts working using typescript fixes problem best idea update quick start fix version typescript expecteddesired behavior quick start work correctly reproduction problem create new application install fresh latest packages pay attention typescript version start application open console motivation use case changing behavior working angular latest ts please tell us environment angular version browser chrome language typescript", "num": "10129", "d": "7/2016"}, {"title": "router relative nav expression w param routerlink produces bad url", "body": "submitting check one x current behavior following absolute assigment produces expected url examples assignments produce unexpected urls notice id parameter surrounded parens nt ugly artifact router handle within app pasting new tab deep linking results navigation failure moreover eyes becoming trained notion value parens something named outlets example link back ca nt get right clicking gets back list calculated links become like notice obviously goes deep link address curiously click much like long stay app keep toggling back forth end expecteddesired behavior pertinent link hero list always produce reproduction problem try see address bar effects click tiny bluesquarewwhitex top right near eyeball opens popup edited play heroes herospecific code files apphero please tell us environment angular version candidate july browser chrome language typescript", "num": "10128", "d": "7/2016"}, {"title": "testing async test fails sut calls observable delay operator fakeasync", "body": "submitting check one x consider two tests aftereach gt expect actuallydone toequal true async run async test successful delayed observable async gt let actuallydone false let source observableof true delay sourcesubscribe val gt actuallydone true err gt fail err fakeasync run async test successful delayed observable fakeasync gt let source observableof true delay sourcesubscribe val gt actuallydone true err gt fail err tick current behavior test fails message test fails message neither test actuallydone value become true expecteddesired behavior test fail reproduction problem see expected behavior test fail allow async tests stuff calls ca nt better offer message helps developer find likely sources problem eg observables motivation use case changing behavior idea test sut observable operator calls maybe using incorrectly like know let say get work solution nt think generally impractical test author anticipate whether necessary nt always know sut something uses like service makes use moreover test working could suddenly fail simple someone somewhere modified observable operator calls would know message requires knowledge observables rely upon guessed obvious please tell us environment angular version candidate july browser chrome language typescript", "num": "10127", "d": "7/2016"}, {"title": "circle import", "body": "current behavior class import class b class b import app wo nt work well expecteddesired behavior wrong angular version chrome", "num": "10126", "d": "7/2016"}, {"title": "datepipe exception decimal", "body": "current behavior results expecteddesired behavior intention use fractions milliseconds discard decimal places motivation use case changing behavior sometimes datetime values contain fraction milliseconds resulting decimal values please tell us environment angular version browser firefox", "num": "10125", "d": "7/2016"}, {"title": "bug ngfor trackby fails silently undefined functions", "body": "submitting check one x current behavior trackby attribute ngfor fails silently non valid function expecteddesired behavior error indicating function defined reproduction problem please tell us environment angular version browser chrome xx language typescript xx", "num": "10123", "d": "7/2016"}, {"title": "setup test environment jasmine amp karma app", "body": "want test app component setup testing tutorial followed quick start tutorial folder setup follow note app working app testspectts appcomponentts nodemodules typings indexhtml packagejson systemjsconfigjs tsconfigjson typingsjson unittestshtml successful execution app want setup test environment done following steps created unitteststs file sibling indexhtml file code shown steps installed updated tsconfigjson said created testspects app folder tried load testspects system loader unittestshtml unittestshtml ng app unit tests configure systemjs use js extension imports app folder systemconfig packages app defaultextension js lt p gt import spec file explicitly systemimport apptestspec lt look wait imports load reexecute windowonload triggers jasmine testrunner start explain went wrong windowonload catch consoleerrorbind console npm run tsc npm start problem thought load look unittestshtml every time runs indexhtml missing load look unitteststs npm start", "num": "10122", "d": "7/2016"}, {"title": "bug contentchild working nested directives", "body": "submitting check one x current behavior consider code import component directive contentchild angularcore directive selector target export class target directive selector findtarget export class findtarget contentchild target target target ngaftercontentinit consolelog content thistarget component selector comp template directives target export class comp component selector myapp template directives comp findtarget export class app plunker directives want find element directive descendant directive works directives template nt work different components using viewchild instead contentchild nt work cases using query nt work either expected behaviour proper way", "num": "10121", "d": "7/2016"}, {"title": "chained work expected", "body": "submitting check one x current behavior chained route configurations like attempt navigate get following error expecteddesired behavior expected behavior would get following navigational redirections catch redirect route subsequently redirect reproduction problem expected behavior chained configuraitons work way better decouple features allows component redirect generic root allowing higherup route handle focused redirect default page motivation use case changing behavior think makes sense consider header http request follow several chained together routing clientside version speak please tell us environment angular version browser language", "num": "10120", "d": "7/2016"}, {"title": "core production mode function calling", "body": "general inquiry deploy app see browser console logs app currently development mode please call enableprodmode function file call please tell us environment angular version browser chrome language typescript", "num": "10118", "d": "7/2016"}, {"title": "longer ambient default", "body": "submitting check one x apps use even nt use forms toy aka experimental bootstrap method supposed bridge existing apps without breaking creates make ambient means current documentation samples use broken userland apps broken current head master current behavior current documentation apps fail reporting nt know reference current july builds expecteddesired behavior existing apps work installing without changing bootstrapped reproduction problem see follow instructions exposing solutions obvious approach would revise toy aka experimental dynamic either includes directive support may still problem apps use deprecated forms could also look adding lightweight directive core minimum simulation twoway data binding directive would select known controls absence parent elements perhaps select inside tags could minimize impact excluding adding part toy bootstrap", "num": "10117", "d": "7/2016"}, {"title": "router link directly parent route", "body": "submitting following route config try link home current behavior link nt work possible link directly home solution find add additional emptypath componentless child route home route expecteddesired behavior possible link directly home without loading child components motivation use case changing behavior easy use avoidance confusion sanity please tell us environment angular version browser language", "num": "10116", "d": "7/2016"}, {"title": "router lazy loaded component ca nt see service provided lazy loaded appmodule", "body": "submitting check one x use case lazy loading feature area components services etc want service instance used router guard components loaded configuration specified lazy loaded appmodule guarding must provide appmodule current behavior service provided lazy loaded appmodule available components lazy loaded module appears instantiated application root injector child injector lazy loaded appmodule consequently reprovide service potentially lazy modules top routing component course service instance problem service state eg fetches data stores cache expecteddesired behavior service provided lazy loaded appmodule available components lazily loaded via appmodule believe would happen automatically lazily loaded component injectors inherited parent appmodule injector reproduction problem see plunker pulls latest build master date issue july provided lazy loaded appmodule reprovide line run plunker navigate heroes works comment line refresh see fail console error provider heroservice", "num": "10115", "d": "7/2016"}, {"title": "selfcontextonsubmit function", "body": "problem using form clicking submit button causing onsubmit function browser console onsubmit function class working upon clicking submit button windows plnkr angular version browser language typescript", "num": "10113", "d": "7/2016"}, {"title": "cmon someone else raise issue getting boring sorta", "body": "submitting check one x current behavior expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "10112", "d": "7/2016"}, {"title": "dependency injection work tho", "body": "honest inquiry", "num": "10111", "d": "7/2016"}, {"title": "hey", "body": "another jcap ref", "num": "10110", "d": "7/2016"}, {"title": "shout jennifer capriati", "body": "", "num": "10109", "d": "7/2016"}, {"title": "answer email", "body": "sorry", "num": "10108", "d": "7/2016"}, {"title": "rethink everything", "body": "jk double di", "num": "10107", "d": "7/2016"}, {"title": "stop horrible", "body": "thought", "num": "10106", "d": "7/2016"}, {"title": "close rest open issues", "body": "thought", "num": "10105", "d": "7/2016"}, {"title": "use machine learning library", "body": "use machine learning library", "num": "10104", "d": "7/2016"}, {"title": "keep going", "body": "", "num": "10103", "d": "7/2016"}, {"title": "angular css encapsulationinjection nested components targets incorrectly", "body": "submitting check one x current behavior css nested components nt always take styles presently using webpack transform scss files nested components run issues styles declared root level ie global seemingly override styles higher levels specificity however closer inspection seeing angular mechanism adding autogenerated selectors seems failing one example though run problem many cases outer file appscss inner component templatewrapper viewencapsulation set uses default templatewrapper component contains another component contains tags important note viewencapsulationnone set changing effect tags come red gray might expect inspecting injected head see injection looks correct yippee however inspecting component tag attribute applied see heilo world either css injected improperly however inspecting component tag attribute applied see heilo world either css injected improperly template output incorrectly related issues clearly arewere issues around sure complex problem however happening right breaking stuff also aware encapsulation component children could argued parent actually correctly targeted even something like nt take every selector class gets ngcontent tag added exactly approach using css cascading system case expecteddesired behavior proper targeting css since shadow deep deprecated feel like coming dry right way perhaps nt understand use seems bug using angular", "num": "10102", "d": "7/2016"}, {"title": "protractor running wo script may issue finding", "body": "compiling running protractor directly getting error ca nt found might missed adding somewhere", "num": "10099", "d": "7/2016"}, {"title": "contentchildren select host component well", "body": "submitting check one x current behavior select host component component selector matches expecteddesired behavior host component selected reproduction problem motivation use case changing behavior semantically one would expect selection strict descendants please tell us environment angular version browser language", "num": "10098", "d": "7/2016"}, {"title": "directive conditional directiveif option possible", "body": "x feature request possible angular provide functionality directive conditional would suggest parameter directive would handle statement user could add optional parameter html know impossible cases consider option future would helpful directive downloaded bower etc sorry repo angular missed", "num": "10097", "d": "7/2016"}, {"title": "binding required attribute always applies required validator", "body": "submitting check one x current behavior binding required attribute input tag applies required validator requiredvalidator directive even supplied expression evaluates false expecteddesired behavior validator added checks supplied expression validation reproduction problem import component angularcore component selector demobug template export class bugcomponent value string isrequired false constructor expected behavior nginvalid applied motivation use case changing behavior correct behavior please tell us environment angular version browser language", "num": "10094", "d": "7/2016"}, {"title": "trigger dynamic css updates updated style metadata", "body": "submitting current behavior css compiled based metadata configured component decorator expecteddesired behavior expose functionality recompile maybe could achieve updating metadata triggering recompile expected behavior recompiling component encapsulated css based updated metada", "num": "10093", "d": "7/2016"}, {"title": "method working", "body": "submitting check one x current behavior method nt work send options method instead delete method expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "10092", "d": "7/2016"}, {"title": "sync async validators form work", "body": "submitting check one x sure bug bug report model driven form validators thisloginform new formgroup username validatorsrequired stringformatvalidatoremailorphone thisemailremotevalidateemailnotexistbind thisemailremotevalidateemailnotexist injectable export class emailremotevalidate constructor private userqueryservice userqueryservice emailexist control formcontrol work add another observable validator looks like emailremotevalidateemailnotexist works eg add thisphoneremotevalidatephonenotexistbind code became error typeerror read property phoneexist undefined correct phoneremotevalidatephonenotexist static class method like static phonenotexist control formcontrol let injector injector reflectiveinjectorresolveandcreate userqueryservice httpproviders let http injectorget userqueryservice return new observable obs gt controlvaluechangesdebouncetime distinctuntilchanged filter e gt stringformatvalidatorphoneofboolean e switchmap e gt subscribe e gt e obsnext phonenotexist true else obsnext null obscomplete private username new formcontrol validatorsrequired stringformatvalidatoremailorphone phoneremotevalidatorphonenotexistbind thisemailremotevalidateemailnotexistbind error missing two async validator work current behavior expecteddesired behavior synch asynch validators work please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript", "num": "10091", "d": "7/2016"}, {"title": "reopen animation work", "body": "see", "num": "10090", "d": "7/2016"}, {"title": "really necessary put tracksrc resource url security context", "body": "submitting check one x motivation use case changing behavior trying create component includes element bind various string urls outside webm poster vtt bound current behavior first two work expected url security context latter fails runtime resource url security context nt allow bare strings expecteddesired behavior consistency ease use love see url security context please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart security problem see though even remotely expert embedded styles vtt file however sure types attacks even possible specification claims xss security considerations implementation errors", "num": "10089", "d": "7/2016"}, {"title": "animation web animation support firefoxsafari official plunker demo working mentioned browsers", "body": "submitting check one x current behavior get void gt transition animations work firefox safari macosx production website make simpler trying find solution included webanimation polyfill cross browser support went official animation docs plunker opened safarifirefox respectively animations work expecteddesired behavior animations via animations working safarifirefox reproduction problem open safari firefox expected behavior animations working major modern browsers motivation use case changing behavior better ux web overall please tell us environment production ran webpack node combo official plunker animation also work crossbrowser main example go angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome firefox safari language typescript xx dart typescript", "num": "10088", "d": "7/2016"}, {"title": "appmodule", "body": "hi think need change name appmodule package word module confuse javascript ts module one thing think need add component decorator property packages array package class make much simpler use directives pipes providers one packages", "num": "10087", "d": "7/2016"}, {"title": "error argument type elementref", "body": "hi got error executing autocomplete error argument type elementref assignable parameter type viewcontainerref property element missing type elementref please help", "num": "10086", "d": "7/2016"}, {"title": "lifecycle interfaces became abstract classes", "body": "submitting check one x current behavior expecteddesired behavior valid typescript look right vs vs please tell us environment angular version", "num": "10083", "d": "7/2016"}, {"title": "datepipe tranform adds extra unicode characters edge", "body": "submitting check one x current behavior used programatically transform date unicode character gets added delimitescape expecteddesired behavior extra characters added reproduction problem try following plnk ms edge see issue works fine browsers expected behavior extra unicode characters added extra unicode characters replaced empty characters demonstrated plnk motivation use case changing behavior bug please tell us environment win edge angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser edge language typescript", "num": "10080", "d": "7/2016"}, {"title": "bug routerbuilds initial load async data nt display routes change detection triggered", "body": "submitting check one x current behavior initial load async data display view routed components change detection triggered see bug get request made oninit data wo nt displayed view trigger change detection somehow example click button calls however async data show main view immediately second example see async data show right away main app component trigger change detection show component think bug specific routerbuilds version router behavior nt present router nt occur using ngrxrouter thing bug introduce routerbuilds last friday specifically please tell us environment angular version browser language typescript xx", "num": "10079", "d": "7/2016"}, {"title": "router enable wildcard params component router", "body": "submitting check one x current behavior route configured recognized go path called expecteddesired behavior expect anything match routeconfig param would equal respectively motivation use case changing behavior trying implement file browser interface similar github would like able capture path like example ideal route root would represented following values params object please tell us environment angular version angularrouter browser language typescript", "num": "10078", "d": "7/2016"}, {"title": "contentchild object always undefined", "body": "submitting check one x current behavior issue similar issue states occurs usecase actually worked fails expecteddesired behavior reproduction problem expected behavior motivation use case changing behavior changing behavior trying use please tell us environment angular version language typescript", "num": "10076", "d": "7/2016"}, {"title": "async validator causes form control state set valid validators invalid", "body": "sure bug behavior nt make sense using model driven form page one controls two synchronous validators required minlength custom asyncvalidator page initially loads form control empty failing required minlength validations custom validator return valid field empty however state control set valid form initialization previously custom async validator synchronous validator worked expected ie custom validator initially valid form control still invalid due validations invalid following plnkr illustrates behavior also note form initialization async validator runs satisfying minlength requirement case upon typing character sync validator runs every key press sync validator run twice form initialization async validator runs another thing form control async validator report invalid type characters delete making field empty", "num": "10074", "d": "7/2016"}, {"title": "bug data posts incorrectly latest", "body": "submitting check one x current behavior run current code using instead data post request sent instead causes body parser server give error longer use latest server angular builds see data sent data object object rc see data posted correctly data username cooluser please tell us environment angular version browser chrome language typescript", "num": "10073", "d": "7/2016"}, {"title": "shimminjszonejsreflectjs loaded traditionally", "body": "submitting check one x bug report x feature request support request gt please submit support request instead see shimminjs zonejs reflectjs loaded traditionally within html file nt automatically imported required anyway cc", "num": "10072", "d": "7/2016"}, {"title": "router navigate away aux route page refresh", "body": "submitting check one x current behavior navigate aux route refresh page want navigate siblings component get rid aux route work aux route stays refresh page everything works expected expecteddesired behavior expect navigate away aux route page refresh reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point brandonroberts could make work plunker due refresh problems reproduce locally fork repo clone repository npm install npm start click click see prove working fine without refresh click see aux route click refresh page click see aux route still brandonroberts said gitter changed go would work please tell us environment angular version router browser chrome language typescript", "num": "10071", "d": "7/2016"}, {"title": "property value vs ngmodel property", "body": "submitting check one x current behavior change hero value herodetailcomponent expecteddesired behavior selectedhero changed change hero value selectedhero parent component change property value oneway binding value property reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "10070", "d": "7/2016"}, {"title": "upgraded angular component work used creating route ngupgrade", "body": "submitting check one x current behavior upgraded angular component work angular component router used router config following error thrown please note number based many components upgraded think changes based many components expecteddesired behavior able use upgraded components router config work like components ie route throw error visited instead displays correct content reproduction problem plunker url shows error visit link current work around behavior create new angular component uses upgraded component template creates double work making upgrade pointless first place motivation use case changing behavior slowly upgrading large angular application angular please tell us environment angular version angular router version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx", "num": "10069", "d": "7/2016"}, {"title": "observabletopromise undefined test environment", "body": "hi testing method getipaddress promise return topromise response gt return responsebody testing like get ip address done function gt geolocationservicegetipaddress ip string gt expect ip tobedefined expect ip tomatch done catch error error gt fail error done get error function running environment works charmly test fails topromise defined thanks", "num": "10068", "d": "7/2016"}, {"title": "documentation proposal confined targeted", "body": "trying learn use angular feel current documentation far verbose random personally nt understand documentation trying convery topic perceived purpose quickstart explanation work node npm particular information angular prerequisites requires prerequisites tutorial loads kindergarten waffle much node table bullet list required get simple angular setup runningcontent nt focus header topic see masterdetail menu left fine grained find information read masterdetail eg styling browsing menu basics well made yet dealing code setup table bullet list required get simple angular setup running developer guide visual studio chapter experienced programmer want copy quickstart files downloaded github folder containing csproj file nt basic add package devdependencies packagejson set module loader load cookbook indepth analysis angular features development practices api reference many items show yet implemented documentation anyway would much prefer quickstart simple add package devdependencies packagejson set module loader load prerequisites factors described enough quickstart getting quick start work", "num": "10067", "d": "7/2016"}, {"title": "ngondestroy triggering", "body": "good morning fellows developed small got routes routes created like approutests import providerouter routerconfig angularrouter import contactcomponent componentscontactcomponentcontactcomponent import home componentshomecomponenthomecomponent import studentroutes componentsstudentcomponentstudentroutes import lecturerroutes componentslecturercomponentlecturerroutes import processroutes componentsprocesscomponentprocessroutes import schoolroutes componentsschoolcomponentschoolroutes export const routes routerconfig path component home processroutes studentroutes lecturerroutes schoolroutes path contact component contactcomponent export const approuterproviders providerouter routes clients route around component component components extending one parentcomponent basecomponentts basecomponentts import component injectable inject input output eventemitter ondestroy oninit onchanges angularcore import http urlsearchparams headers response requestoptions angular import navigationservice servicesnavigationservice import router angularrouter import componentservice servicescomponentservice import menuitem modelsmenuitem import subscription rxjssubscription import broadcaster servicesbroadcaster import screensize modelsscreensize import loaderservice servicesloaderservice component selector basecomponent template injectable export class basecomponent implements ondestroy oninit constructor componentservice componentservice protected navigationservice navigationservice broadcaster broadcaster protected loadersrv loaderservice screen screensize screensizetwocolumns let items new array let parent componentservicegetparentpath locationpathname thisnavigationservicegetsidenavigation parent subscribe x gt items xmap gt new menuitem yname yurl ychildren broadcasterbroadcast sidenavigation items children broadcasterbroadcast screensize screen ngondestroy thisloadersrvstart ngoninit thisloadersrvstop every time user changes route first hit ngondestroy method object gets cleared hit ngoninit method created new object routing problem never triggers ngondestroy method trigger ngoninitmethod never ngondestroy snippet packagejson check versions packagejson snippet would great somebody could give good tip peace", "num": "10066", "d": "7/2016"}, {"title": "bug forms ca nt radio inputs formcontrolname form nested form", "body": "submitting check one x current behavior consider component radio inputs bound formcontrol named another nested bound different formcontrol name click one inputs first pair corresponding input second pair also checked see plunker possible cause checks controls belong root perhaps check belong parent", "num": "10065", "d": "7/2016"}, {"title": "bug forms async validators parent control status changing wrong", "body": "using async validation control child controls parent control status changes validation child controls complete although validation pending bag parent control statuses example form contains one child control child controls validation complete form validation child control valid form status changes valid form validation complete form status changes invalid plnkr reproduce expected form status changes valid validator valid state child controls validators valid state", "num": "10064", "d": "7/2016"}, {"title": "enum template binding causes error", "body": "submitting check one x current behavior trying use enum template get read property right undefined expected behavior angular promotes typescript primary impelmentation language would expect legal ts construct supported angular version language typescript", "num": "10063", "d": "7/2016"}, {"title": "source maps seems working", "body": "submitting current behavior chrome dev tools source code angular nt see ts code js sources expecteddesired behavior chrome dev tools source code angular see ts code source maps exist code seems correct exist code also seems correct realtive path seems correct think thats chrome dev tools cant show ts code js", "num": "10062", "d": "7/2016"}, {"title": "new component router activating components route", "body": "submitting bug report current behavior route navigated matching components displayed activated directives process display expecteddesired behavior route navigated matching components displayed activated reproduction problem full reproduction repo found full instructions buildreproduce issue angular version browser chrome version language typescript version", "num": "10060", "d": "7/2016"}, {"title": "feature forms formgroup updatevalue throw error missing control", "body": "submitting check one x current behavior look like updatevalue formgroup iterates elements tries set value corresponding control however control found throws error scenarios get data required backend case server return data extra attributes relevant form eg createdby modifiedby audit fields expecteddesired behavior proposing optional boolean parameter default updatevalue depending parameter value exception thrown updating value reproduction problem na expected behavior motivation use case changing behavior use model backend lists forms value lists like createdby modifiedby required form please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "10057", "d": "7/2016"}, {"title": "facade code duplicated published modules", "body": "submitting check one x current behavior code contained duplicated following published modules causes application builds larger need expecteddesired behavior would contained within either published modules would use external module rather internal copy code motivation use case changing behavior smaller application builds please tell us environment angular version browser na language typescript xx", "num": "10055", "d": "7/2016"}, {"title": "router provide support parameteronly navigation", "body": "submitting check one x current behavior navigating via router service string path required even navigating within route changing route parameters expecteddesired behavior providing object route params router take current route path navigate updated parameters reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior given following routes within able use router navigate currently error thrown make work traverse upwards come back route motivation use case changing behavior navigating relatively within current route please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart cc bennadel vsavkin wardbell", "num": "10054", "d": "7/2016"}, {"title": "angular forms form submitted twice", "body": "submitting check one x current behavior seems form submitted twice expecteddesired behavior submitted reproduction problem nt know something wrong angular version browser chrome edge", "num": "10052", "d": "7/2016"}, {"title": "karma phantomjs angular http running correctly", "body": "using karma phantomjs angular seems like test cases running fine http testing failing files spects file import beforeeach beforeeachproviders describe xdescribe expect xit async inject angularcoretesting import accountsummaryservice accountsummaryservice import httpproviders requestmethod response responseoptions xhrbackend baserequestoptions angular import mockbackend mockconnection angular describe accountsummary service gt let mockbackend mockbackend let connectionlength beforeeachproviders gt httpproviders provide xhrbackend useclass mockbackend accountsummaryservice beforeeach inject xhrbackend backend mockbackend gt mockbackend backend inject accountsummaryservice service accountsummaryservice gt mockbackendconnectionssubscribe connection mockconnection gt expect servicegetaccountsummary fdfd toequal run ng test getting error recoveriesapp ng test could start watchman falling back nodewatcher file system events visit info built project successfully stored dist buildingdeprecated use version lodash go away karma deprecated use version lodash go away karma info karma karma server started info launcher launching browser phantomjs unlimited concurrency build successful slowest trees total broccolitypescriptcompiler vendor handlebarreplace slowest trees cumulative total avg broccolitypescriptcompiler vendor handlebarreplace info launcher starting browser phantomjs info phantomjs mac os x connected socket id log reference id fdfd log ref id getaccountsummaryurl fdfd log url log object object object log ref id getaccountsummaryurl fdfd log url log outside phantomjs mac os x accountsummary service failed expected null equal tryorunsub next next next finalnext next next createconnection get getaccountsummary apply execute f h run drain drain e invoke runguarded expected null equal tryorunsub next next next finalnext next next createconnection get getaccountsummary apply execute f h run drain drain e invoke runguarded expected subject isscalar false destination replaysubject isscalar false destination null source null observers null isunsubscribed true isstopped true haserrored false dispatching false hascompleted true events replayevent time value response status null url null scheduler undefined buffersize windowtime infinity subscriptions null source subject isscalar false destination replaysubject isscalar false destination null source null observers null isunsubscribed true isstopped true haserrored false dispatching false hascompleted true events replayevent time value response status null url null scheduler undefined buffersize windowtime infinity subscriptions null source replaysubject isscalar false destination null source null observers null isunsubscribed true isstopped true haserrored false dispatching false hascompleted true events replayevent time value response status null url null scheduler undefined buffersize windowtime infinity subscriptions null observers isunsubscribed false isstopped true haserrored false dispatching false hascompleted true operator takeoperator total observers isunsubscribed false isstopped false haserrored false dispatching false hascompleted false operator mapoperator project function thisarg undefined equal object apply execute f h run drain drain e invoke runguarded phantomjs mac os x executed failed secs secs file stmts branch funcs lines uncovered lines files note try call service method available getting error kindly let know suggestion go forward", "num": "10050", "d": "7/2016"}, {"title": "radio button name property ngmodel nt work", "body": "submitting current behavior ca nt set name radio button ngmodel presence name becomes ng reflect name simply nt work expecteddesired behavior keep name attribute reproduction problem expected behavior name removed replaced name reflection motivation use case changing behavior dynamically group radio buttons name please tell us environment visual code studio angular version browser chrome language typescript", "num": "10049", "d": "7/2016"}, {"title": "templateref shares context instances none provided", "body": "submitting check one x current behavior currently uses single object problem called without providing context object shared one used causing pollution instances utilizing context expecteddesired behavior object sharing nt happen instances relying context maybe solutions could instantiates new object none provided makes context mandatory stops checking isblank context reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point typeerror read property name undefined second instance simplified plunk see sharing context listed twice first block expected behavior sharing context instances motivation use case changing behavior errors please tell us environment angular version browser language typescript", "num": "10045", "d": "7/2016"}, {"title": "bug modules unable inject service provided submodule lazyloaded component", "body": "submitting check one x current behavior currently possible inject service provided submodule lazyloaded component lazy child detail export class lazychilddetail appmodule modules routermodule providers myservice provideroutes path component lazychildlist path id component lazychilddetail precompile lazychildlist lazychilddetail temporary export class lazymoduleone lazy child list export class lazychildlist constructor myservice myservice consolelog myservicesayeek leads expecteddesired behavior possible inject services submodules reproduction problem plnkr shows problem click lazy default expected behavior dierror thrown myservice accessible lazyloaded component motivation use case changing behavior able encapsulate services components module please tell us environment angular version current master browser language", "num": "10044", "d": "7/2016"}, {"title": "tracking change semantics", "body": "major rewrite modules support angular details see doc x part main changes see x part required features final see rename ngmodule component support section add ngmoduleschemas see design doc related changes support static properties methods static reflector metadata collection remove class", "num": "10043", "d": "7/2016"}, {"title": "creating component viewchild property base class input properties transpile", "body": "submitting check one x current behavior creating component property base class properties transpile error message ca nt bind myproperty since nt known native property expecteddesired behavior transpilation works reproduction problem note comment appchildcomponentts file uncommented reveal issue please tell us environment angular version browser chrome language typescript", "num": "10042", "d": "7/2016"}, {"title": "bug routermodules routermodule injected lazyloaded submodules", "body": "submitting check one x current behavior trying use lazyloaded submodule like leads dierror ts error provider applicationref new baseexception nullinjectorget appmoduleinjectorget eval zonedelegateinvoketask objectngzoneimplinnerinnerforkoninvoketask zonedelegateinvoketask zoneruntask zonetaskinvoke expecteddesired behavior routermodule injectable submodule reproduction problem plnkr shows problem click lazy default commenting fixes dierror expected behavior motivation use case changing behavior able use routing functionality submodules please tell us environment angular version current master browser language", "num": "10041", "d": "7/2016"}, {"title": "abstract methods definition files", "body": "submitting current behavior definition files missing abstract methods result compile exceptions stuff like ngcontrolcontrol reproduction problem see code works perfectly fine compile message says property updatevalue exist type abstractcontrol take look source expected behavior abstract methods also part files motivation use case changing behavior would make much easier work abstract angular classes example reusable form components like example please tell us environment angular version language typescript", "num": "10040", "d": "7/2016"}, {"title": "binding dom events using observables", "body": "submitting check one x current behavior dom renderer one binds events like one using raw dom api ie addeventlistener expecteddesired behavior able interface observable binding dom events expected behavior able interface observable binding dom events still retain benefits serversidemobile platform rendering support progressive web apps motivation use case changing behavior currently exposure able manipulate observable prevents easier implementations certain behavior throttling scroll event say scrollspy dragging amp dropping components would also line rxjs paradigms amp integration within angular ideally one able", "num": "10039", "d": "7/2016"}, {"title": "field value component class updated late", "body": "submitting check one x running following code import component angularcore component selector myapp template export class app test boolean someadditionalaction event consolelog test thistest current behavior value field test updated views current value cheked processing event handler inside eventhandlermethod value field differs value view expecteddesired behavior fields bound form elements updated processing actionseventhandlers reproduction problem litte different form code find consoleoutput expected behavior value display checkbox checkedstatus currently inverse field test updated late motivation use case changing behavior really like want help run better please tell us environment osx visual studio code chromedebugextension npm packagejson name version scripts start tsc amp amp concurrently npm run tsc w npm run lite lite liteserver postinstall typings install tsc tsc tsc w tsc w typings typings license isc dependencies angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularrouterdeprecated angularupgrade systemjs corejs reflectmetadata rxjs zonejs bootstrap devdependencies concurrently liteserver typescript typings angular version browser chrome version safari version language typescript xx", "num": "10038", "d": "7/2016"}, {"title": "input fields subcomponents included form", "body": "submitting check one x x bug report current behavior look plunkr input name part form defined subcomponent part form expecteddesired behavior enter abc xyz heroformformvalue name abc xyz please tell us environment angular version browser language typescript xx", "num": "10037", "d": "7/2016"}, {"title": "bug forms two formcontrolname bound formcontrol updated without ngmodel", "body": "submitting check one x current behavior consider template inputs bound formcontrol using input directive enter something one control another control updated debugging shows property second never updated suppose happens updated changed fires expecteddesired behavior expected inputs always value reproduction problem", "num": "10036", "d": "7/2016"}, {"title": "angulario website ssl certificate problem", "body": "angulario website work eset believe certificate problem certificate many spam sites san field disable https checking view site blocked happens sites visit regularly", "num": "10035", "d": "7/2016"}, {"title": "global router change animate", "body": "global router change animat", "num": "10034", "d": "7/2016"}, {"title": "parent child routing nested routing cli", "body": "hi guys newbie please one could give good example parent child routing angular cli projecti two views sideview list rightside detailview list call main view render left right view well aslike uirouting angular js thanks amp reagards venky", "num": "10031", "d": "7/2016"}, {"title": "bad nongeneric typings", "body": "hi anyone please tell popular framework like angular provides bad nongeneric typings everywhere stupid instead generic eg http response elementref right cast every typedefinition instead providing generic would make life easier code readable useable cheers nick", "num": "10030", "d": "7/2016"}, {"title": "using componentfixture testing model driven forms method detectchanges throws error", "body": "submitting check one x current behavior first time calling componentfixturedetectchanges ngoninit throws exeption model driven form expecteddesired behavior exception thrown unit test successfully runs reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point github repo example suffice window ng serve window ng test buildfalse open debugger browser settingcomponentspects debugger catch see exception expected behavior error thrown motivation use case changing behavior able run test successfully testing form model driven please tell us environment using angularcli angularcli node os windows angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview using chrome language typescript xx dart typescript stack trace stacktracetxt", "num": "10028", "d": "7/2016"}, {"title": "issue observererror propagating error observable stream", "body": "current behavior propagate error observable onerror callback expecteddesired behavior result called motivation use case changing behavior result onnext oncomplete called hence would expect well please tell us environment angular version rxjs version browser na", "num": "10027", "d": "7/2016"}, {"title": "ca nt use auxiliary routes routerlink", "body": "wanted link page opens auxiliary route seems routerlink supported yet router link page opens aux route write ugly code anchor href home product details chat class rootcomponent way use routerlink aux routes", "num": "10021", "d": "7/2016"}, {"title": "adopt appmodules format upgrade", "body": "see gist cc igorminar", "num": "10020", "d": "7/2016"}, {"title": "adopt appmodules format http", "body": "see gist cc igorminar", "num": "10019", "d": "7/2016"}, {"title": "auxiliary routes nt work empty path", "body": "wanted path component homecomponent path product component productdetailcomponent path chat component chatcomponent outlet aux gives error error uncaught promise error match routes workaround like use auxiliary routes default routes without need use redirectto", "num": "10017", "d": "7/2016"}, {"title": "declare variable ngmodel causes exception", "body": "submitting current behavior im new angular following docs getting following exception message console exception error uncaught promise template parse errors directive exportas set ngmodel happen declare variable assigned directive ngmodel expecteddesired behavior everything works exception message wont disappear reproduction problem attached errorlog find inside text file plunker please tell us environment angular version browser chrome language typescript", "num": "10016", "d": "7/2016"}, {"title": "route guards trigger navigating child routes", "body": "submitting check one x current behavior sure bug feature request navigating components children parent component canactivate hook applied parent hook executed expecteddesired behavior reproduction problem see exact behavior click links child child notice message shows auth guard rejected attempts navigate click button says logged toggle authorization status click child child links notice authguard message timestamp updates click button log says logged click child child links notice still able view protected routes despite logged authguard running prevent accessing click home list click child child links notice authguard runs blocks access links expected behavior specifically authguard run navigating child child generalized case every navigation activate route guards path including route destination example navigation form numerical portion captured route parameter ngrxrouter guard clauses work way easy work provide powerful way manage user behavior motivation use case changing behavior guard code run every navigation consider paths like reliably check guards every navigation one authorization guard applied account level verifies user access particular account id capability complete action embodied components ie view edit code works authorized one action one account authorized actions accounts please tell us environment angular version browser language typescript xx", "num": "10014", "d": "7/2016"}, {"title": "lkjljlk", "body": "submitting check one x current behavior expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior kjlkj motivation use case changing behavior l\u00f6lk\u00f6 please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "10012", "d": "7/2016"}, {"title": "bug forms initial select option set null working ieedge", "body": "submitting current behavior setting initial value control either null undefined rendered element displays first expecteddesired behavior value control set null undefined value found list options rendered element displays empty select reproduction problem plnkr expected behavior current behavior found chrome firefox expected behavior motivation use case changing behavior element rendered display selected option model backing set value option please tell us environment angular version browser ie amp edge language typescript", "num": "10010", "d": "7/2016"}, {"title": "forms controls using async validators remain invalid state even validators resolved null", "body": "submitting current behavior async validators nt cause valid state form control validated turn resolve indicating value valid expecteddesired behavior async validator resolves validators returned error objects control status turn reproduction problem issue reproed enter valid email notice console log outputs promise resolves null valid state email field never becomes true even though control error object items observable updated valid errors reported validators motivation use case changing behavior async validators common checking username availability etc work please tell us environment angular version", "num": "10009", "d": "7/2016"}, {"title": "animation ngclass working exit gt void transition", "body": "submitting check one x current behavior component dynamic class assigned via ngclass styles correctly enter void gt ngclass nt applied exit gt void expecteddesired behavior would expect ngclass preserved exit animation play reproduction problem please tell us environment angular version", "num": "10008", "d": "7/2016"}, {"title": "appmodules fixes", "body": "meta issue various small issues found appmodules code x imported package seems inconsistent x factories name nt indicate prefix suffix likely best since platformref internally cached remove waiting app initializers deprecated still print instructions call bootstrap router seems hardcoded always use depends merge one dynamically switch behavior depending present add ability add appmodules via upgradeadapter", "num": "10006", "d": "7/2016"}, {"title": "routerconfig config undefined importing via imports", "body": "current behavior config undefined importing via imports expecteddesired behavior following would expect able import way using modules please tell us environment angular version angular router version browser chrome version language", "num": "10004", "d": "7/2016"}, {"title": "tslint error accessing router query param string literal", "body": "submitting check one x current behavior output using output expecteddesired behavior work reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior access query param without tslint errorwarning please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript", "num": "10002", "d": "7/2016"}, {"title": "", "body": "issue mine", "num": "10000", "d": "7/2016"}, {"title": "calendar time picker shows nan", "body": "submitting check one x current behavior calendar set datetime manually first click sets time nan also occasionally seems like fails set datetime altogether reliably reproduceable though appears issue reported forums replied expecteddesired behavior clicking update datetime correctly regardless whether manual date first set reproduction problem open calendar click work correctly select date time manually click time shows nan expected behavior motivation use case changing behavior please tell us environment windows angular version also happened browser chrome official build language typescript", "num": "9999", "d": "7/2016"}, {"title": "ms edge improve error message syntax errors hostbinding", "body": "submitting check one x current behavior syntax error gives inline template indication coming expecteddesired behavior error message mention inline template meant reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior still asking twice motivation use case changing behavior better error messages please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview edge language typescript xx dart", "num": "9998", "d": "7/2016"}, {"title": "request global guards children", "body": "submitting check one x current behavior currently way apply authguard simple guard globally website section website subsections locked certain users others without putting authguard every single route expecteddesired behavior ideally way set guard would triggered route change route change preferably subroutes similar fashion routerevents ex start home click link toolstoola global authguard triggers toolstoola checks database lets trough know link toolstoolb nt access type address bar try access authguard triggers blocks way global guard would spread would way similar providers spread application motivation use case changing behavior working porting big aspnet app complex access rights would appreciate simple global way apply user access rights without risks forgetting apply guard certain section app right log accesses easily subscribing routerevents main component would appreciate simple way global access verification please tell us environment angular version browser chrome firefox ie gt language typescript", "num": "9997", "d": "7/2016"}, {"title": "bug formcontrolupdatevalue documentation wrong", "body": "submitting check one x current behavior documentation formcontrolupdatevalue says true default see", "num": "9996", "d": "7/2016"}, {"title": "angular havily dependent buggy zonejs", "body": "submitting check one x current behavior angular heavily dependent buggy library zonejs overrides prototypes global scope functions issue described short using angular one part big application affects another parts zonejs overridings expecteddesired behavior possible sandbox zonejs part application want use angular possible agular bootstrap part application reproduction problem expected behavior motivation use case changing behavior use case described developer one teams work big project want able implement module using angular without affecting teams modules please tell us environment angular version browser language", "num": "9995", "d": "7/2016"}, {"title": "compiler viewcompilerpropertybinder", "body": "source code ref current behavior html orgname expecteddesired behavior normal ngfor expression reproduction problem see file angular version browser chrome language typescript", "num": "9994", "d": "7/2016"}, {"title": "webpack introduction tutorial requires updated packagejson", "body": "run webpack tutorial featured looks like default build correctly due dependency missing packagejson file fixed issue locally simply adding following dependencies section packagejson file", "num": "9993", "d": "7/2016"}, {"title": "detect object changes", "body": "x bug report current behavior pipe argument object bar bar unfortunately object changing bar bar detected pipe ca nt work solved problem use object properties parameters opinion correct behavior angular version browser language typescript", "num": "9992", "d": "7/2016"}, {"title": "change event issue rc", "body": "select region regions regionidname ngmodelchange working rc please give solution", "num": "9991", "d": "7/2016"}, {"title": "checkdeploy crashes due something master since", "body": "submitting check one x current behavior command crashes parallel repo set current master error failure roll repo back naomiblack writes think may package internals get escaped please file issue cc igorminar petebacondarwin", "num": "9990", "d": "7/2016"}, {"title": "viewchildrencontentchildren get children components implementing abstract class interface", "body": "submitting check one x current behavior lot components gt used contentchildren components users configurators configure page components configurators nt know anything implementation defineconfigure page components example typescript class aggregatecomponent component directives selector aggregatecomponent template export class aggregatecomponent contentchildren children querylist lt gt need list contentchildren aggregatecomponent children implement abstract class interfaces possible use interfaces abstract class type selector contentchildren contentchildren interfaceabstract class tried add special css class components select nt work well contentchildren ourclass found workaround seems working cases use viewcontainerref nt know right way edit working viewchildren component directives selector aggregatecomponent template export class aggregatecomponent constructor protected viewcontainer viewcontainerref public ngafterviewinit parents available almost thisparentcomponent thisviewcontainerelementparentviewparentcontext directive template variable foo selector nt possible solution configurator would add directive variable component manually would like programmatic solution get contentchildren direct parentcomponent expecteddesired behavior see reproduction problem expected behavior see motivation use case changing behavior programmatic solution get different contentchildrenviewchildren component without add contentchildren viewchildren possible type solution get direct parentcomponent please tell us environment angular version browser language typescript", "num": "9989", "d": "7/2016"}, {"title": "router api call ngoninit uses site url instead api url direct navigation browser address bar", "body": "submitting check one x current behavior directly navigating url using address bar api call ngoninit method calls request instead using api url uses base url site additional explanation apiurlsettings expected url call siteurlsettings current url called navigating using navigate router link api call works fine uses url api please tell us environment angular version router browser chrome", "num": "9988", "d": "7/2016"}, {"title": "interpolation nt work components injected via dynamiccomponentloader", "body": "submitting check one x current behavior injecting component component b via dynamiccomponentloader component interpolation nt work expecteddesired behavior want dynamically render component inside another component b component define string render reproduction problem plunker demo motivation use case changing behavior want dynamically render component inside another component b component define string render please tell us environment os x angular version browser chrome language typescript", "num": "9987", "d": "7/2016"}, {"title": "bootstrapmodule bootstrapmodulefactory inconsistencies", "body": "bootstrapmodule causes applicationref created waits appinitializers run promise resolved bootstrapmodulefactory neither consider forcing applicationref created bootstrapmodulefactory remove waiting appinitializers bootstrapmodule make behavior two consistent switching offline runtime compile mode nt create surprises", "num": "9986", "d": "7/2016"}, {"title": "empty file created incorrect folder offline compiler", "body": "submitting check one x current behavior empty file created offline compiler factory style next source htmlcss file outside also happen material correct files also created properly expecteddesired behavior empty file exist", "num": "9984", "d": "7/2016"}, {"title": "ngstyle property missing", "body": "submitting check one x current behavior ngstyle input property missing offline compiler uses property renamed expecteddesired behavior setting work expected", "num": "9977", "d": "7/2016"}, {"title": "ngoninit always called onpush strategy used", "body": "submitting current behavior used component component placed outlet always function called used function always called expecteddesired behavior function always called called regardless change detection strategy reproduction problem plunker demonstrate problem seem two instances called initial component placed outlet using browser navigation buttons open console run plunker see called first component click second button navigate second component see called first component called second component thereafter navigating two results expected sequence calls however navigate using browser back next buttons see called stop rerun plunker click greet button see called first component within evaluated stop plunker set app component change detection strategy always called even navigating using browser back next buttons expected behavior function always called called relatedpossiblyrelated issues number issues seem relate called first might reference fix issue unsure relationship change detection lifecycle management routeroutlet triggering changedetection componentinsertion others seem relate browserbased navigation bug oninit fired using safari back button oninit called type url ie please tell us environment angular version angular router browser chrome language typescript", "num": "9976", "d": "7/2016"}, {"title": "review api app modules", "body": "switched using tests great allows flexibility one consequence test case may require asynchronous setup order precompile components external templates need make xhr solution make helper method inspect whether called inside block work current user cases destroys encapsulation ties users ways dealing async also lot trust us magic could instead require user let us know need something asynchronous could look like js beforeeach async gt configuremodule precompile mycomponentwithexternaltemplate doasyncprecompilation proposed new method something module inject testcomponentbuilder builder gt always called synchronously var fixture buildercreatesync mycomponentwithexternaltemplate currently master moment would look like js beforeeach gt configuremodule precompile mycomponentwithexternaltemplate something module async inject testcomponentbuilder builder gt throw error inside async block var fixture buildercreatesync mycomponentwithexternaltemplate", "num": "9975", "d": "7/2016"}, {"title": "new new router work alongside ngupgrade", "body": "submitting check one x current behavior new router work ngupgrade way specify primary app component beta router even try get error states expecteddesired behavior new router work ngupgrade motivation use case changing behavior reduce recoding hits release please tell us environment angular version browser chrome language typescript", "num": "9973", "d": "7/2016"}, {"title": "ngc fails compile using external directives", "body": "x bug report feature request current behavior using external directives ones compiler fails error encountered resolving symbol value statically tsc successful compiling running project behave expected actual error example using fileuploaddirectives error error encountered resolving symbol values statically initialized variables constants referenced position original ts file resolving symbol fileuploaddirectives resolving symbol publishcomponent angulartestappcomponentspublishpublishcomponentts resolving symbol publishcomponent angulartestappcomponentspublishpublishcomponentts simplifyincontext angulartestnodemodules staticreflectorsimplify angulartestnodemodules staticreflectorannotations angulartestnodemodules directiveresolverresolve angulartestnodemodules compilemetadataresolvergetdirectivemetadata angulartestnodemodules compilemetadataresolvermaybegetdirectivemetadata angulartestnodemodules codegeneratorreadcomponents angulartestnodemodules generateonefile angulartestnodemodules arraymap native codegeneratorcodegen angulartestnodemodules compilation failed exited code warning task exec ngc use force continue content file complaining sample code using said directive import fileuploaddirectives fileuploader component templateurl publishcomponenthtml selector publish directives fileuploaddirectives coredirectives formdirectives expecteddesired behavior believe compile correctly angular version browser language", "num": "9971", "d": "7/2016"}, {"title": "bug router routerstatequeryparamssubscribe often triggered", "body": "submitting check one x current behavior sometimes often changes queryparams wont trigger observable event expecteddesired behavior changes queryparams trigger observable event reproduction problem ngoninit method subscribe following events thisroutereventssubscribe x gt consolelog routereventssubscribe consolelog x thisroutesubscription thisrouterrouterstatequeryparamssubscribe params gt thiscurrentscope params scope thiscurrentorder params order consolelog queryparamssubscribe jsonstringify params view calls one functions thing even navigate events fired browser shows correct queryparams event wont triggered sometimes seems totaly random clue expected behavior time use routernavigate append queryparams routerstatequeryparams observable fire event motivation use case changing behavior simple dropdown user able select one many filters andor order list please tell us environment angular version angular router browser chrome version language typescript xx", "num": "9970", "d": "7/2016"}, {"title": "use operator causes properties function evaluated", "body": "submitting check one x current behavior code generated expression produce something like following code note evaluated three times evaluated twice expecteddesired behavior functions evaluated would expect generated code look like note introduction temporary variable store result consider also caching value avoid evaluating property getter twice would look like motivation use case changing behavior reducing number expensive operations change detection", "num": "9968", "d": "7/2016"}, {"title": "datepipe error timezones", "body": "submitting check one x current behavior running tests locally expecteddesired behavior error angular version browser chrome mac os x local tz set pdt laskoviymishka could please take look introduced fixed revert commit thanks", "num": "9964", "d": "7/2016"}, {"title": "router pass precompile array component avoid unneeded coupling", "body": "submitting check one x current behavior new version router currently using angularrouter getting error walking router links section tutorial found answer slack overflow post seems precompile array define components included current component use router list components router directs needlessly making list components router last statement slack overflow question issue angular router version seems fixed angular router version true new behavior precompile array routers expecteddesired behavior like see router handle precompile array used perhaps could pass router precompile array search bootstrap routerprovider router used like see control given router instead coupling component views containing component skipping abstraction router reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point order get behavior walked quickstart tutorial following packagejson file webpack setup packagejson webpackdevjs var webpack require webpack var htmlwebpackplugin require htmlwebpackplugin var extracttextplugin require extracttextwebpackplugin var path require path var root pathresolve dirname function root args args arrayprototypeslicecall arguments return pathjoinapply path root concat args moduleexports context dirname entry app srcmaints vendor srcvendorts polyfills srcpolyfillsts devtool sourcemap output path root distjs publicpath filename name bundlejs sourcemapfilename name mapjs chunkfilename id chunkjs resolve extensions js ts module loaders test ts x exclude nodemodules loaders babel presets tsloader test html loader html test css exclude root src app loader extracttextpluginextract style css sourcemap must used corresponding plugin plugins new webpackoptimizecommonschunkplugin name app vendor polyfills new htmlwebpackplugin template srcindexhtml new extracttextplugin name css must used corresponding loader devserver historyapifallback true stats minimal encountered problem point motivation use case changing behavior avoiding unneeded coupling seems theme throughout angular fixed router beta would avoid large coupling problem using routing please tell us environment angular version angular router version browser chrome language typescript", "num": "9963", "d": "7/2016"}, {"title": "request feat template provide alias template access statics", "body": "current behavior need use expecteddesired behavior perhaps reproduction problem expected behavior use motivation use case changing behavior access static data please tell us environment angular version browser chrome language typescript related", "num": "9962", "d": "7/2016"}, {"title": "angular custom directive binding sparkline barchart", "body": "trying write custom directive pass input values bind data sparkline chart gives error sparkline function included sparklinejs indexhtml still nt pick directive plunker help appreciated", "num": "9961", "d": "7/2016"}, {"title": "ngfor animations screws animations updating list", "body": "submitting check one x current behavior component showing list items using using animations using add remove items end list animations work fine attempt add remove item position end list animations screw big time check plunkr try clicking buttons times see exactly mean expecteddesired behavior adding items start middle list expect element animated nothing else certainly nt expect items vanishing flickering like see plunkr reproduction problem check plunkr demo issue expected behavior motivation use case changing behavior believe common use case one would want animate list insertions deletions please tell us environment angular version browser chrome language typescript", "num": "9960", "d": "7/2016"}, {"title": "hybrid mode nt allow upgrades app bootstrapped", "body": "submitting check one x current behavior loading component dynamically using fails case child component issue component loaded dynamically contains child component upgrade adapter fails bind scope upgraded component throwing exception exception error uncaught promise exception error dynamiccomponent class dynamiccomponent inline original exception typeerror read property scope null original stacktrace typeerror read property scope null new new expecteddesired behavior possible load component dynamically hybrid mode upgrade adapter allow upgrades even app bootstrapped reproduction problem plunker expected behavior possible load component dynamically hybrid mode motivation use case changing behavior due issue possible use components inside app please tell us environment angular version browser chrome version language typescript", "num": "9959", "d": "7/2016"}, {"title": "bug router nested routes loses state load template reload", "body": "submitting current behavior go nested route template displayed expected reload errors gives following error expecteddesired behavior well errors code typescript routests import providerouter routerconfig angularrouter import requireauth auth import signin componentssigninsignin import stores componentsstoresstores import storedetail componentsstoredetailstoredetail export const routes routerconfig path component home canactivate requireauth path signin component signin path stores component stores canactivate requireauth path stores id component storedetail canactivate requireauth path component signin export const authproviders requireauth export const approuteprovider providerouter routes authproviders typescript maints import bootstrap angularplatformbrowserdynamic import hammergestureconfig angularplatformbrowser import httpproviders angular import provide angularcore import renderer angularcore import appbasehref angularcommon import disabledeprecatedforms provideforms angularforms import mdgestureconfig import app appapp import approuteprovider approutes bootstrap app disabledeprecatedforms provideforms approuteprovider httpproviders renderer provide hammergestureconfig useclass mdgestureconfig provide appbasehref usevalue catch err gt consoleerror err works however add shouldnt needed since bootstrapping angular version angular router version angularrouter browser chrome version language typescript built webpack", "num": "9958", "d": "7/2016"}, {"title": "bug router unable navigate aux route nested component", "body": "submitting check one x current behavior defining aux route nested route way enable auxcomponent config code taskscomponent html ca nt find way activate right routeroutlet tried following links matter try get expected behavior able activate auxroute motivation use case changing behavior able define auxroutes nested routes able encapsulate behaviour related usecase tasks case dedicated module please tell us environment angular version current master browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "9957", "d": "7/2016"}, {"title": "use ngfor dynamic component loader iframe", "body": "hi use ngfor dynamic component loader show different numbers divcontainers different contents one content shall show another webapplication exercise use htmltag iframe problem every dynamic change ngfor triggers reload webapplication prevent reload reaction thank best regards katy", "num": "9956", "d": "7/2016"}, {"title": "change cycle triggered array object component", "body": "array object passed component changes array element remove add reflected html changing property element reflected passing list cities component side component adding new city removing city citylistcomponent templates listing cities new city added reflected change property existing city reflected angular version language typescript", "num": "9955", "d": "7/2016"}, {"title": "ngsubmit fires twice submit button clicked", "body": "submitting check one x current behavior using angularforms following standard tutorial click submit button form ngsubmit event fired twice makes handling http request impossible expecteddesired behavior ngsubmit event shall fired clicked reproduction problem started creating plunker however test code correctly pointing dead package please update plunker dependencies therefore code isolated possible authcomponenthtml errmsg email required password required login authcomponentts import component angularcore import store ngrxstore import observable rxjsrx reducers import setauth reducersauthreducer interfaces import iauth iauthuser interfacesauthinterfaces services import apiservice servicesapiservice component selector auth template require authcomponenthtml styles require authcomponentscss directives providers apiservice export class authcomponent user seems problem discarded following theses origin problem component instantiated twice therefore event bindings applied twice observable subscriptions cause multiple event firing observables involved custom code replacing event ngsubmit standard submit event causes callback fired please tell us environment angular version browser chrome language typescript built webpack", "num": "9954", "d": "7/2016"}, {"title": "way data binding working model driven forms", "body": "hi angular version forms version using formcontrolname assigning name model seems provides one way binding way thought formcontrolname alternative ngmodel name formts formhtml form loads shows values abcd name field updating value nt update model", "num": "9952", "d": "7/2016"}, {"title": "closing form eventemitterservice throws exception", "body": "submitting x bug report feature request current behavior close custom component another nested custom element form inside eventemiter service form input focused angular returns exception error expression changed checked expecteddesired behavior return exception reproduction problem first custom element card nest form click esc button angular supposed close card registering appcomponent call service controls stack opened cards gets last one closes close function switches flag form would inside ngcontent typical problem solved using correct way expected behavior close without complaints please tell us environment angular version browser language typescript", "num": "9951", "d": "7/2016"}, {"title": "request benchmark offline compilation code generation", "body": "submitting check one x current behavior offline compilation seems coming soon since today many conferences core team talked us bring great performance amazing story evidence want know much faster expecteddesired behavior add case offline compiling official benchmarks", "num": "9950", "d": "7/2016"}, {"title": "route component without changing path", "body": "submitting check one x current behavior rejecting access component path using guards currently redirect another path otherwise get blank page new router expecteddesired behavior would useful able render rejection page require redirect able provide component rejection reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser language", "num": "9949", "d": "7/2016"}, {"title": "dom manipulation", "body": "hi using view engine meteor application meteor integrated wanted know accessmanipulate dom", "num": "9948", "d": "7/2016"}, {"title": "angular rc new animations supported directives", "body": "hi seems current release add animations components define directives mean works whereas nt work gives compilation error visual studio argument type selector string animations animationentrymetadata template string assignable parameter type selector string inputs string outputs string properties string events strin usually might want commonly used animations slidedown sliddeup fadein fadeout defined one place directive components want use would want import directive use animation instead redefining animation component", "num": "9947", "d": "7/2016"}, {"title": "ca nt connect angulario windows", "body": "submitting check one x current behavior hi currently problem connecting angulario page windows firefox says connection cancelled connecting edge says hmm reach page chrome says site provide secure connection errsslprotocolerror try connect home network android phone easily connect page windows computer tested windows computers household result expecteddesired behavior connected angulario reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point goto windows expected behavior connected angulario motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview windows chrome firefox edge ie failing connect homepage angulario language typescript xx dart", "num": "9945", "d": "7/2016"}, {"title": "dom manipulation", "body": "hi using view engine meteor application meteor integrated wanted know accessmanipulate dom", "num": "9944", "d": "7/2016"}, {"title": "produces unhandled promise rejection error", "body": "submitting check one x current behavior following upgrade tutorial downgrading list detail phone component produces unhandled promise rejection error expected behavior able use component app tutorial missing step bug please tell us environment angular version browser language", "num": "9943", "d": "7/2016"}, {"title": "angular rc rxjs bundles", "body": "submitting check one x current behavior bootstraping application see system loading individual rxjs files calls expecteddesired behavior nt load rxjs bundle like angular libraries reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "9940", "d": "7/2016"}, {"title": "npm start gives error many files library missing", "body": "info worked ends ok verbose cli usrlocalbinnode usrlocalbinnpm start info using npm info using node verbose runscript prestart start poststart info lifecycle silly lifecycle script prestart continuing info lifecycle verbose lifecycle unsafeperm lifecycle true verbose lifecycle path usrlocallibnodemodulesnpmbinnodegypbin varwwwhtmlnodemodulesbin usrlocalbin rootlinuxbrewbin usrlocalsbin usrlocalbin usrsbin usrbin rootlocalbin rootbin verbose lifecycle cwd varwwwhtml silly lifecycle args c tsc amp amp concurrently npm run tsc w npm run lite silly lifecycle returned code signal null info lifecycle failed exec start script verbose stack error start verbose stack exit status verbose stack eventemitter verbose stack emittwo verbose stack eventemitteremit verbose stack childprocess verbose stack emittwo verbose stack childprocessemit verbose stack maybeclose verbose stack processchildprocesshandleonexit verbose pkgid verbose cwd varwwwhtml error linux error argv usrlocalbinnode usrlocalbinnpm start error node error npm error code elifecycle error start error exit status error failed start script tsc amp amp concurrently npm run tsc w npm run lite error make sure latest version nodejs npm installed error likely problem package error npm error tell author fails system error tsc amp amp concurrently npm run tsc w npm run lite error get information open issue project error npm bugs error nt available get info via error npm owner ls error likely additional logging output verbose exit true submitting check one x current behavior expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "9939", "d": "7/2016"}, {"title": "router enable loadchildren support function returns promise", "body": "submitting check one x current behavior route config property accepts string expecteddesired behavior route config property accepts string function returns promise reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior order allow lazy loading webpack upcoming needs way return promise resolves app module would also helpful support added systemjs webpack supported box please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart cc vsavkin tbosch", "num": "9938", "d": "7/2016"}, {"title": "ngfor extra li end element", "body": "submitting current behavior got extra empty li last element using ul li ngfor angular version browser linux plunk sorry duplicate could nt find similar issues", "num": "9937", "d": "7/2016"}, {"title": "angular new form submit redirecting page form fields appended url query params new router", "body": "updating old running application newer angular version working good older version one page used form updated version component router version issue facing tried submit form redirects page appending entered value query parameter plunkr problem statement steps reproduce issue get landed crisis center page select record edit text click submit button amp check url navigation bar note using template driven form nt think make difference open plunkr preview window new tab see running application url", "num": "9936", "d": "7/2016"}, {"title": "router browser hangs parsing url", "body": "x bug report preconditions application uses router url contains symbol inside parentheses eg foo bar occurs calling instance method parseurl router navigating url address bar actual result browser hangs without throwing exception plunk steps reproduce open console dev tool enter url press parseurl button angular version router browsers chrome safari", "num": "9935", "d": "7/2016"}, {"title": "innerhtml directive working checkbox control release", "body": "submitting check one x current behavior later release following nt work somehtml expecteddesired behavior display checkbox template reproduction problem working working expected behavior parse amp show checkbox html template motivation use case changing behavior please tell us environment angular version browser language typescript checked typescript", "num": "9934", "d": "7/2016"}, {"title": "error enable prod mode platform setup", "body": "submitting check one x current behavior server rendering angularuniversal use watcher reload server side edit file currently fail reload controller error expecteddesired behavior nice something test plateform setup like something like controller load without problem think motivation use case changing behavior allow angular server side hot reload capabilities speed server side development please tell us environment angular version browser server side language", "num": "9932", "d": "7/2016"}, {"title": "router query params breaks matching emptyroot path", "body": "submitting check one x current behavior query parameters break path matching path empty string root app expecteddesired behavior query parameters prevent matching empty path nt break matching nonempty paths reproduction problem ca nt figure specify paths query params plnkr code trigger could figure would srcmaints relevant bit use code maints angularcligenerated project hit urls see problem works fine works fine works fine fails error match routes import bootstrap angularplatformbrowserdynamic import component angularcore import providerouter routerconfig routerdirectives angularrouter component moduleid moduleid template dummy component class dummycomponent component moduleid moduleid selector approot template directives routerdirectives class appcomponent export const routes routerconfig path component dummycomponent path foo component dummycomponent bootstrap appcomponent providerouter routes resulting stack trace expected behavior query params root empty path break matching path motivation use case changing behavior component root path great singlefunctionalarea apps still want router things case accept generate links query params set initial state please tell us environment angular version browser chrome edge language typescript", "num": "9930", "d": "7/2016"}, {"title": "offline compiler understand enums", "body": "see highlighting button component screenshot button styling see id used dom match one used style", "num": "9928", "d": "7/2016"}, {"title": "http use body options get method", "body": "submitting check one x current behavior http using get method pass body options work expecteddesired behavior please correct use body method get ok post method get method reproduction problem scenario export class buscavagasservice private rota constructor private http getvagas dados chave string string observable let body jsonstringify dados let headers new headers contenttype applicationjson let retorno requestoptions map response response gt responsejson expected behavior pass body webapi method motivation use case changing behavior correct please tell us environment angular version browser chrome language typescript web api net core httpget public resultadobusca buscar frombody dictionary dados null fromquery bool comfacets true var parametros thisbuscavagaserviceparsearargumentos dados", "num": "9927", "d": "7/2016"}, {"title": "router routerlink anchors includeinherit query string params current route", "body": "submitting current behavior entering route whose component includes directives template router links rendered query string parameter route entered case expecteddesired behavior router links include query string parameters provided template afaik possible right inherit query string params current route responsible displaying router links reproduction problem see issue enter plunker note item links include query string params next click one links route find link navigates back adds query string param route click item router links include query string motivation use case changing behavior affects pretty much app using query strings really one might example login route might include query string indicating redirect login routerlink directives login page links carry query string incorrect please tell us environment angular version router version browser language", "num": "9924", "d": "7/2016"}, {"title": "router way redirectto passing along query string params target route", "body": "submitting current behavior way configure route redirectto another route passing query string params target route expecteddesired behavior perhaps something like currently fail reproduction problem plunker illustrates issue see devtools log error remove works well expected behavior would expect catch route redirect list passing along parameter specified redirect accept urls perhaps could another parameter route config allow passing query params please tell us environment angular version browser language typescript", "num": "9921", "d": "7/2016"}, {"title": "router validatenode error message clarification", "body": "submitting check one x current behavior line configts contains following misleading error message expecteddesired behavior message would clearer written follows reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point na expected behavior see motivation use case changing behavior improve application debugging please tell us environment angular version angularrouter browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "9919", "d": "7/2016"}, {"title": "debugging cordova app webpack sourcemaps", "body": "typescript webpack cordova app want able debug original typescript files android phone debugging app using chrome additionally needed configure order sourcemap also work remote mobile device running cordova app bundled webpack add current configurations demand", "num": "9918", "d": "7/2016"}, {"title": "innerhtml loses data partially completely", "body": "submitting check one x current behavior get data server response need inject trough innerhtml data lost partially completely problem like version expecteddesired behavior example get video element server response id source etc using innerhtml id data video element missing reproduction problem plunker example please tell us environment angular version browser language typescript thank", "num": "9916", "d": "7/2016"}, {"title": "using componentresolver viewcontainerref replacement dynamiccomponentloader fails", "body": "trying annoy anyone posting issue right top include variation code used componentresolver viewcontainerref instead dynamiccomponentloaderloadnexttolocation produced error virtually identical original error realize previous post lengthy post code error really hoping guys either point wrong point articlesample shows correct way use componentresolver viewcontainerref submitting check one x current behavior using componentresolver viewcontainerref place dynamiccomponentloaderloadnexttolocation part upgrade beta rc work throws error code error sinnerservicets import injectable dynamiccomponentloader applicationref viewcontainerref component componentref componentresolver componentfactory viewchild angularcore import spinner spinner injectable export class spinnerservice spinnercomp componentref error exception error uncaught promise typeerror elementrefcreatecomponent function exception error uncaught promise typeerror elementrefcreatecomponent function browserdomadapterlogerror stacktrace browserdomadapterlogerror error uncaught promise typeerror elementrefcreatecomponent function resolvepromise zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue xmlhttprequestzonetaskinvoke browserdomadapterlogerror unhandled promise rejection elementrefcreatecomponent function zone angular task promisethen value typeerror elementrefcreatecomponent function consoleerror error uncaught promise typeerror elementrefcreatecomponent function consoleerror event hub started expecteddesired behavior prior modification using dynamiccomponentloaderloadnexttolocation elementref worked perfectly spinner added dom whatever page loading data data loading removed data loaded motivation use case changing behavior behavior nt changing want work prior deprecation dynamiccomponentloader please tell us environment angular version browser chrome latest version language typescript", "num": "9915", "d": "7/2016"}, {"title": "style exmaple issue", "body": "style guide style put presentation logic component class template examples difference avoid example examples except example one method", "num": "9914", "d": "7/2016"}, {"title": "router query param chinese garbled", "body": "use router query params like logincomponent first open login page console print errmsg \u4e2d\u56fd shows right refresh browser becomes errmsg ad bd please tell us environment angular version router browser chrome firefox safari language typescript xx", "num": "9913", "d": "7/2016"}, {"title": "chinese garbled", "body": "use router query params like logincomponent first open login page console print errmsg \u4e2d\u56fd shows right refresh browser becomes errmsg ad bd please tell us environment angular version router browser chrome firefox safari language typescript xx", "num": "9911", "d": "7/2016"}, {"title": "property checkonce exist type typeof changedetectionstrategy", "body": "submitting current behavior property checkonce exist type typeof changedetectionstrategy tried include tried neither one works expecteddesired behavior error typescript reproduction problem upg getting error expected behavior error angular version", "num": "9910", "d": "7/2016"}, {"title": "npm install complains peers", "body": "get following warnings installed dependencies latest version node npm installed try install manually throws npm err git clone templatehomenpmgitremotestemplates mirror homenpmgitremotesgit cloning bare repository homenpmgitremotesgit error menas fixed", "num": "9908", "d": "7/2016"}, {"title": "inject service fa\u00e7ade file another service", "body": "submitting check one x current behavior services fa\u00e7ade file servicests exports services particular services files let say another service file try inject myservice import myservice services injectable export class standard procedure include injected service global providers etc problem getting injected error text unhandled promise rejection ca nt resolve parameters tried changing asterisk concrete exported name help import file directly service file looks like import myservice myserviceservice injectable export class works well expecteddesired behavior well believe still injectable generated js file decorators etc nt really understand problem comes please tell us environment angular version browser language typescript", "num": "9907", "d": "7/2016"}, {"title": "parent dynamic children communicate via service", "body": "scene used viewcontainerrefcreatecomponent create bcomponent acomponent abservice communicate thenbelow error code error abservice acomponent bcomponent", "num": "9906", "d": "7/2016"}, {"title": "data working template attributes using ngfor", "body": "submitting check one x current behavior ran across coding section angular tutorial seems relevant library large following html solutions currently working showing list items nt pass validation following though one list item showing expecteddesired behavior valid html solution available shows items one following reproduction problem reproducible ngfor loop sure similar attributes like ngif others seeing issues may hurt check well expected behavior feature attribute validate still work motivation use case changing behavior data custom attributes allow us futureproof pages add another data attribute future following standard risk conflicts new attribute added specs please tell us environment angular version browser language typescript", "num": "9904", "d": "7/2016"}, {"title": "ngchange firing twice input chinese", "body": "angular version browser chrome xx", "num": "9897", "d": "7/2016"}, {"title": "child routes resolved properly using outlets", "body": "submitting check one x current behavior navigating sub route like product component initiated expecteddesired behavior load child component resolve id reproduction problem expected behavior load product details please tell us environment angular version angular router browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript", "num": "9892", "d": "7/2016"}, {"title": "feature request ngmodules css bundling", "body": "submitting expecteddesired behavior introduce way bundle css help ngmodules see styles would usablescoped components inside ngmodules motivation use case changing behavior sharing styles multiple components currently supported box user either insert styles globally head copy component individual stylesheet solutions problematic", "num": "9890", "d": "7/2016"}, {"title": "use sidebar nav component", "body": "code leftnav component contains template html code problem sidebar working check generated html code something like generate code like without extra tags even use component", "num": "9888", "d": "7/2016"}, {"title": "root url always active", "body": "submitting current behavior used root url active class always added since urls tree root url expecteddesired behavior believe add active class root url sub url otherwise seems useless since always evaluate true reproduction problem plunker issue click see tabs active expected behavior active motivation use case changing behavior set tabs section different expect tab active please tell us environment angular version browser language sure issue expected behavior believe better add exception root url mark active please let know agree change submit pr thanks", "num": "9885", "d": "7/2016"}, {"title": "exclude nodemodules compiled quickstart example", "body": "submitting check one x current behavior ts quickstart example tells typescript compile makes compilation quite slow although consistent expected tsconfigjson placed root project expecteddesired behavior change include keyword motivation use case changing behavior necessary top level tsconfigjson tell typescript compile", "num": "9884", "d": "7/2016"}, {"title": "change detection misleading error view created cd", "body": "see ngplural example error called cd results creation view view dirty checked pass pass view checked first time expression change init value actual value throw error message misleading could hard debug throw meaningful error", "num": "9882", "d": "7/2016"}, {"title": "error messages upon executing npm install", "body": "submitting check one x current behavior error messages upon executing npm install using min quickstart files please see attached log file npmdebuglogtxt expecteddesired behavior expected functioning install reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser firefox language typescript xx", "num": "9880", "d": "7/2016"}, {"title": "consistent naming appmodules", "body": "submitting check one x current behavior forms formmodule reactiveformmodule router routerappmodule difference modules times end appmodule sometimes module expecteddesired behavior use consistent naming angular modules reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior consistent naming convention please tell us environment latest master angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "9879", "d": "7/2016"}, {"title": "dynamically adding amp removing components dynamiccomponentloaderloadnexttolocation broken upgrade rc using viewcontainerref", "body": "submitting check one x expecteddesired behavior currently working project upgraded angular beta rc upgrade ability dynamically add remove simple component simple spinner page process loading data worked fine using service sinnerservicets import injectable dynamiccomponentloader applicationref elementref componentref angularcore import spinner spinner injectable export class spinnerservice spinnercomp componentref constructor private componentloader dynamiccomponentloader private appref applicationref public start let elementref elementref thisappref rootcomponents location public startinside elementref elementref anchorname string public stop thisspinnercomp thisspinnercompdispose current behavior upgrade changes made class match changes made angular resulting file causes exception occur shown underneath updated code sinnerservicets import injectable dynamiccomponentloader applicationref viewcontainerref componentref angularcore import spinner spinner injectable export class spinnerservice spinnercomp componentref constructor private componentloader dynamiccomponentloader private appref applicationref public start let elementref viewcontainerref thisappref rootcomponents location public startinside elementref viewcontainerref anchorname string public stop thisspinnercomp thisspinnercompdestroy error exception error uncaught promise typeerror locationcreatecomponent function exception error uncaught promise typeerror locationcreatecomponent functionbrowser domadapterlogerror stacktrace browserdomadapterlogerror error uncaught promise typeerror locationcreatecomponent function resolvepromise resolvepromise zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue xmlhttprequestzonetaskinvoke browserdomadapterlogerror unhandled promise rejection locationcreatecomponent function zone angular task promisethen value typeerror locationcreatecomponent function consoleerror error uncaught promise typeerror locationcreatecomponent function lot reading experimenting tried different approach using componentresolver unfortunately also gave error code sinnerservicets import injectable dynamiccomponentloader applicationref viewcontainerref component componentref componentresolver componentfactory viewchild angularcore import spinner spinner injectable export class spinnerservice spinnercomp componentref constructor private componentloader dynamiccomponentloader private appref applicationref private resolver componentresolver public start let elementref viewcontainerref thisappref rootcomponents location public startinside elementref viewcontainerref anchorname string public stop thisspinnercomp thisspinnercompdestroy error exception error uncaught promise typeerror elementrefcreatecomponent function exception error uncaught promise typeerror elementrefcreatecomponent function browserdomadapterlogerror stacktrace browserdomadapterlogerror error uncaught promise typeerror elementrefcreatecomponent function resolvepromise zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue xmlhttprequestzonetaskinvoke browserdomadapterlogerror unhandled promise rejection elementrefcreatecomponent function zone angular task promisethen value typeerror elementrefcreatecomponent function consoleerror error uncaught promise typeerror elementrefcreatecomponent function consoleerror event hub started expected behavior class work upgrade ie able add remove basic component simple spinner service page loading data via service motivation use case changing behavior seems like vital part angular framework seems depeicated explanation replacement please tell us environment angular version browser chrome latest version language typescript", "num": "9877", "d": "7/2016"}, {"title": "router providerouter config spread route definition arrays us", "body": "submitting check one x current behavior accumulating routes today write export const routes routerconfig heroesroutes loginroutes crisiscenterroutes export const approuterproviders providerouter routes easy developers forget spread operator nt worry nt worry setting array component metadata expecteddesired behavior like write like rely spread reproduction problem see plunker router chapter", "num": "9876", "d": "7/2016"}, {"title": "code generated using offline compiler uses incorrectly", "body": "submitting bug report current behavior see files ngfactory tabs component tabs component code included reference lines tabsdngfactoryts return value void function error seems happen querylist directives around versions latest master angular custom branch", "num": "9875", "d": "7/2016"}, {"title": "router observable imports undefined using umd bundles", "body": "submitting check one x current behavior using router error occurs initial navigation first import error expecteddesired behavior router navigates successfully using reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point plunker expected behavior motivation use case changing behavior please tell us environment angular router version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "9872", "d": "7/2016"}, {"title": "extra forward slash referencing umd files", "body": "submitting check one x current behavior testing angular requests made notice double forward slash bundles working fine testing locally liteserver deploying google firebase files returning expecteddesired behavior expecting single forward slash bundles reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point easily reproducible angular quickstart project run npm start check network tab google chrome removing forward slash bundles systemconfigjs seems fix issue packages angularpkgname main bundles pkgname umdjs defaultextension js packages angularpkgname main bundles pkgname umdjs defaultextension js expected behavior motivation use case changing behavior simple deployment firebase please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview chrome language typescript xx dart typescript", "num": "9871", "d": "7/2016"}, {"title": "component router work upgrade adapter", "body": "trying use angular component router angular rc upgrade adapter got following error bootstrap least one component injecting router setuprouter maints file angularmodule modulename directive app appcomponent upgradeadapteraddprovider approuterproviders upgradeadapterbootstrap documentbody modulename google problem found following links correspond router deprecated module angular team changed router works since ideas", "num": "9870", "d": "7/2016"}, {"title": "ngplural throws exception", "body": "current behavior ngplural makes changedetection throw exception expecteddesired behavior make ngplural make changedetection throw exception reproduction problem angular version", "num": "9868", "d": "7/2016"}, {"title": "formgroup valid fields valid", "body": "current behavior stated doc formgroup valid fields valid expecteddesired behavior new angular maybe someone enlighten api choice seems use cases group could valid valid reproduction problem use case user choice entering city name latitude longitude latitude longitude must valid numbers group valid city name entered latitude longitude entered valid posted longer version use case also created plunker using validators fields level result group valid three fields valid one fall validator group level plunker use validator group level several drawbacks fields always ngvalid class validator function composed small validators thus harder test even read questions formgroup valid fields valid correct use case angular get around issue environment angular version browser language typescript thanks hard job", "num": "9867", "d": "7/2016"}, {"title": "bug testing ngonchanges called component initialized via testcomponentbuilder", "body": "submitting check one x current behavior creating component via testcomponentbuilder ngonchangescallback executed component like ts export class timepickercomponent input time private timestring ngoninit consolelog init ngonchanges changes consolelog changes creating component test like ts display passed time input fields done gt tcb createasync timepickercomponent fixture gt let timepicker timepickercomponent fixturecomponentinstance timepicker timestring timepickerngonchanges null gt needs called manually fixturedetectchanges ngonchanges callback component gets never called ngoninit gets called way fix test currently needed call ngonchanges manually expecteddesired behavior ngonchanges called initializing component motivation use case changing behavior able test components use ngonchanges callback without call method manually please tell us environment angular version browser language", "num": "9866", "d": "7/2016"}, {"title": "change detection model update model update done within setinterval", "body": "submitting check one x current behavior every seconds setinterval checks offline status via windownavigator stores component isonline property isonline initially true time check made ie every becomes false want show overlay app class isonline overlay show message via hide ngif simplicity plunkr added isonline prints current value online browser online offline browser offline expecteddesired behavior isonline always shown true false method setconnectivity called outside setinterval internet connection also tried ngdocheck consolelog thisisonline apparently isonline always equal initial value despite set explicitly every seconds reproduction problem aware uses nt want invest much time something like bottom line issue using environment angular version browser tested chrome language typescript", "num": "9865", "d": "7/2016"}, {"title": "bug core ngfor touch issue", "body": "submitting current behavior drag component bound within using touchscreen external event causes ngfor array update events stop firing terrible experience mobile angular nearing official release concerned fix mobile experience mouse dragging issue eg data array bound drag one generated components nextday button causes array update see plunker dealt touch spec browser implementation issue past vanilla js simply keeping dom element reference around event fire however angular controls dom could solved angular implementing component guard ie route guard expecteddesired behavior component guard solution avoids premature dom removal element angular could keep dom element memory set style anything improve drag experience mobile pretty important opinion reproduction problem see plunker note touchscreen required chrome dev tools mobile emulation expected behavior plunker expect events keep firing dragging booking nextprev day works expected mouse dragging motivation use case changing behavior improve mobile experience angular environment angular version browser chrome touchscreen ios safari language typescript see plunker", "num": "9864", "d": "7/2016"}, {"title": "unit test code insdie canactivate hook", "body": "submitting check recommended way unit test code inside canactivate currently using angular js lifecycle hooks written inside controller unit test since canactivate part component configuration inside iife unit test", "num": "9863", "d": "7/2016"}, {"title": "controlvalueaccessor value accessor", "body": "component app main import bootstrap angularplatformbrowserdynamic import appcomponent appcomponent import approuterproviders approutes import http httpproviders jsonpproviders angular import formproviders disabledeprecatedforms provideforms angularforms bootstrap appcomponent disabledeprecatedforms provideforms approuterproviders httpproviders jsonpproviders formproviders catch err gt consoleerror error err appcomponent import component angularcore import routerdirectives angularrouter import httpproviders angular component selector cmsapp directives routerdirectives providers httpproviders templateurl appviewslayoutsappcomponenthtml export class appcomponent approutes import providerouter routerconfig angularrouter import dashboardcomponent componentdashboard export const routes routerconfig path redirectto dashboard terminal false path dashboard component dashboardcomponent export const approuterproviders providerouter routes dashboard import component angularcore component selector dashboard template export class dashboardcomponent public caadate datepicker import component forwardref angularcore import ngmodel controlvalueaccessor ngvalueaccessor angularforms const noop gt component selector caadatepicker template export class caadatepicker implements controlvalueaccessor private value finally see error console exception error dashboardcomponent class dashboardcomponent inline original exception value accessor using new forms nt understand error course goal use ngmodel caadatepicker model input caadatepicker component angular version angularforms browser firefox language typescript", "num": "9861", "d": "7/2016"}, {"title": "oninit called type url ie hashlocationstrategy", "body": "link used reproduce problem used oninit hook initialize silverlight control inside component navigate silverlight view first time lifecycle events called however lifecycle events called route silverlight view click anchor tag directly type url address bar constructor called silverlight plugin loaded problem seems occur ie chrome", "num": "9860", "d": "7/2016"}, {"title": "bug report routing amp navigation navigate url query stringparams", "body": "official demo let us npm start source code run browser problem navigate problem shown navigate url browser address input click heroes crisis center heroes crisis admin login click hero hero detail click back back heroes execute gotoheroes herodetailcomponentts found url browser address input id foo query string click hero hero detail url browser address input still query string id foo even click crisis admin still", "num": "9858", "d": "7/2016"}, {"title": "error overridedirective supported implementation testcomponentbuilder", "body": "submitting check one x current behavior error overridedirective supported implementation testcomponentbuilder expecteddesired behavior expecting overridedirective work testcomponentbuilder using reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior overriding directives tests motivation use case changing behavior unit testing please tell us environment angular version browser chrome version language typescript", "num": "9857", "d": "7/2016"}, {"title": "ngif directive behaves strangely parent element click handler attached", "body": "submitting check one x current behavior bootstrap button uses glyphicons signify different states clicksavebutton function supposed triggered button click execute passing event along bootstrap handle toggling dropdown click anywhere button glyphicon works expected click glyphicon function gets called dropdown open expected seen similar behaviour using ngif directive within element click handler gets messed expecteddesired behavior click glyphicon discernible difference clicking rest button worked around problem using span ngif directive reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior angular version browser chrome latest extension language typescript", "num": "9855", "d": "7/2016"}, {"title": "benchpress nt handle micrometrics first run page reloaded samle code", "body": "submitting check one x current behavior see micrometrics first run expecteddesired behavior micrometrics measured correctly first load reproduction problem get change execute value add somewhere test page please tell us environment angular version browser chrome language", "num": "9854", "d": "7/2016"}, {"title": "router candeactivate target route", "body": "submitting check one x current behavior routing happen candeactivate guards know component instance deactivatedreused along current route state application expecteddesired behavior add extra parameter interface something like like using instead simple boolean value could help mimic functionality deprecated router motivation use case changing behavior help differentiate component deactivated reused url changes component going destroyed postpone navigation needed could cleaning data unnecessary component going reused lifecycle hooks meaningless task runs service instead component simply running animations used page transitions run component detached wait observable like anyways please tell us environment angular version angularrouter browser language typescript", "num": "9853", "d": "7/2016"}, {"title": "safe navigation operator executes members even needed", "body": "submitting check one x x bug report feature request support request gt please submit support request instead see current behavior safe navigation operator used prevent angular throwing errors trying access object properties objects nt exist eg evaluates comes handy something loaded asynchronously however let say another object want access template even though loaded asynchronously use safe navigation operator need apply every nested property angular nt ignore rest expression need render even though synchronous expecteddesired behavior angular ignore member accesses inside expressions thing code able simply reproduction problem plunk please tell us environment angular version browser language typescript", "num": "9850", "d": "7/2016"}, {"title": "click event child component called using preventdefault pressing enter form inputs", "body": "submitting check one x current behavior prevent click event child button submitting form put eventpreventdefault click event button child however press enter input fields click event child input fires expecteddesired behavior expect able press enter input fields submits form fire child click event reproduction problem press press enter inputs check console log see firing click event child component expected behavior pressing enter inputs submit form fire click event child input please tell us environment angular version", "num": "9848", "d": "7/2016"}, {"title": "code error template syntax documentation page", "body": "submitting check one x x bug report feature request support request gt please submit support request instead see example doc page template syntax section custom events eventemitter missing attribute output code current behavior expecteddesired behavior angular version browser language", "num": "9847", "d": "7/2016"}, {"title": "feat allow animate transitions routes", "body": "submitting check one x x feature request current behavior router replaces component shown expecteddesired behavior allow keeping current component configurable ammount time instantiating next component animate transition routes motivation use case changing behavior allowing transition routes animations fancy allows smoother transitions pages feels bad app needs change lot pages routes instantly unpleasant eye angular version browser language typescript", "num": "9845", "d": "7/2016"}, {"title": "able load angularplatformbrowserdynamic", "body": "application loads getting following error failed load resource server responded status found error error xhr error found loading xmlhttprequestwrapfn onreadystatechange zonedelegateinvoketask zoneruntask xmlhttprequestzonetaskinvoke error loading angularplatformbrowserdynamic function failed load resource server responded status found explained details issue stackoverflow please let know facing issue resolve", "num": "9844", "d": "7/2016"}, {"title": "custom exceptionhandler routing", "body": "submitting check one x hi tried show error page unhandled exceptions occurred import exceptionhandler injectable angularcore import router angularrouterdeprecated injectable export class appexceptionhandler extends exceptionhandler constructor private router router super null null call exception stacktrace reason string void consolelog call thisrouternavigate customerrorpage bootstrap myapp provide exceptionhandler useclass appexceptionhandler current behavior error instantiation applicationref applicationref applicationref original exception instantiate cyclic dependency exceptionhandler router expecteddesired behavior uncaught exception redirect error page motivation use case changing behavior internal server error page instead showing loading symbol angular version", "num": "9843", "d": "7/2016"}, {"title": "bug fragments route empty path", "body": "submitting check one x current behavior home route multiple links fragment hash like scrolling specific target refreshing page redirected nowhere notfoundcomponent present reproduction problem launch plunk separate window links homecomponent different fragments click link fragment cool url changed refresh page notfoundcomponent though homecomponent please tell us environment angular version browser checked chrome language typescript", "num": "9842", "d": "7/2016"}, {"title": "safesubscriber instead class instance", "body": "submitting check one x current behavior context thisisstarted undefined instance safesubscriber expecteddesired behavior instance class least done angular version browser language typescript", "num": "9841", "d": "7/2016"}, {"title": "router canactivate templates get requested canactivate runs", "body": "submitting check one x current behavior consider following cache cleaned non authenticated user tries access page auth users canactivate runs component template tries accessed angular fails server configured allow requests non auth users angular throws failed load template exception expecteddesired behavior content accessed canactivate returns true otherwise nothing happen possible good reason current behavior nt know please tell us environment angular version browser chrome language typescript", "num": "9840", "d": "7/2016"}, {"title": "webworker get information nativeelement", "body": "hello researches webworker angular know renderer recommended interaction nativeelement renderer methods writing setelementproperty setelementclass setelementstyle methods reading information nativeelement want develop component tooltip get nativeelement offset necessary information windowdocument renderer almost used everywhere webworker think documents detail actually hard know exactly renderer document like", "num": "9839", "d": "7/2016"}, {"title": "component found precompile array", "body": "update refer angular tour heros want use router must import component approuterts first import appcomponentts precompile otherwise warning got better idea import component one place mehod new release additional issuse occurs set redirectto routerconfig", "num": "9838", "d": "7/2016"}, {"title": "ngmodel nt work inputs variable type", "body": "submitting current behavior attribute type specified variable ngmodel nt work nt set value detect changes ngmodelchange events triggered works fine set type manually expecteddesired behavior ngmodel work even type changes defined later case defined ngafterviewinit input defines reproduction problem please tell us environment angular version browser tested chrome amp firefox firefox initial event seems work ones chrome never works language", "num": "9837", "d": "7/2016"}, {"title": "ddescribe nt work anymore", "body": "submitting check one x current behavior using ddescribe results following error typeerror undefined constructor evaluating testingddescribe expecteddesired behavior specs contained ddescribe block executed previous version reproduction problem rerun exact test set used error thrown expected behavior specs contained ddescribe block executed previous version motivation use case changing behavior ddescribe necessary get fast feedback development please tell us environment angular version browser phantomjs language typescript", "num": "9836", "d": "7/2016"}, {"title": "response status nt matched actual status server response", "body": "matched angular response status code status server response check one x current behavior mentioned response status angular response says code code please tell us environment angular version browser chrome language typescript", "num": "9835", "d": "7/2016"}, {"title": "custom directives resolved compiling app compilercli", "body": "x bug report current behavior trying pre compile angular application compilercli turns custom directive resolved project parsed ngc directive short look like import directive angularcore directive selector transform export class transformdirective leads error directive annotation found transformdirective expecteddesired behavior error working directive available angular components reproduction problem directive used within ngc reproduce error tried strip contents class see solves anything nt please tell us environment linux build server angular version language typescript", "num": "9834", "d": "7/2016"}, {"title": "directive annotation found appcomponent", "body": "today update angular app run error clean delete logic appcomponent import component angularcore component selector myapp template first angular app export class appcomponent error occurs", "num": "9833", "d": "7/2016"}, {"title": "router providerouter function page refresh using webpack commonschunkplugin", "body": "looks like issue latest version router webpack commonschunk plugin created vendorjs appjs per guide first load app works fine try refresh page generates error typeerror function approutests import providerouter routerconfig angularrouter import myroutes compcomproutes const routes routerconfig myroutes export const approuterproviders providerouter routes full refresh loads page correctly refresh get broken removing commonschunkplugin fixes problem update seems chrome reproduce firefox edge environment os windows browser chrome latest nodeexpress webpack angular router", "num": "9832", "d": "7/2016"}, {"title": "angular rc rxjs error systemjsconfigjs script references apparent cdn", "body": "submitting check one x current behavior website nt render browser using script reference systemjsconfigjs angulario name gulp correctly copies dependencies wwwroot aspnet core expecteddesired behavior angular renders normally cdn support reproduction problem systemjsconfigjs follows works function global var ngver var routerver var formsver var map app app angular angularrouter routerver angularforms formsver rxjs ts typescript var packages app main maints defaultextension ts rxjs defaultextension js var ngpackagenames common compiler core platformbrowser platformbrowserdynamic upgrade ngpackagenamesforeach function pkgname map angular pkgname pkgname ngver ngpackagenamesforeach function pkgname packages angularrouter main indexjs defaultextension js packages angularforms main indexjs defaultextension js var config transpiler ts typescriptoptions tsconfig true meta typescript exports ts map map packages packages systemconfig config change cdn references script references except rxjs causes website stop displaying work examples seen using script references follow format code snippet systemjsconfigjs nt work expected behavior angular renders normally cdn support motivation use case changing behavior like use gulp script references cdn support please tell us environment angular version browser microsoft edge language typescript aspnet core", "num": "9829", "d": "7/2016"}, {"title": "queryparams subscription alive navigating away current route", "body": "submitting check one x current behavior subscribing query params ngoninit causing sideeffects navigated different route ie navigating away change params causing fetch data destroying component subscription however getting unsubscribed component gets destroyed expected main issue subscription kept alive destroy event causes redundant data fetch expecteddesired behavior navigated away current route subscription destroyed reproduction problem please tell us environment angular version angular router browser language", "num": "9827", "d": "7/2016"}, {"title": "pipe working", "body": "submitting check one x current behavior original exception provider nglocalization expecteddesired behavior pipe code output many items working reproduction problem import component angularcore import angularcommon component selector template pipes export class itempluralmapping languagemapping number items displayed used plural mapping numberitems number constructor thisnumberitems thisitempluralmapping items one item two items many items thislanguagemapping hi hi bye bye please tell us environment angular version browser chrome language typescript xx dart", "num": "9826", "d": "7/2016"}, {"title": "routerlinkactive handling routerlink change", "body": "submitting check one x current behavior routerlink accounts currentaccount accountstatement currentaccount attribute component initial load route routerlinkactive class correctly set thisrouternavigate accounts accountstatement active class set although currentaccount correctly set currentaccount set ngoninit like route activatedroute thisrouteparamsmap params gt params id subscribe id number gt consolelog id thiscurrentaccount id expecteddesired behavior routerlinkactive class properly set reproduction problem code available please tell us environment angular version router browser language typescript", "num": "9825", "d": "7/2016"}, {"title": "mockbackendmockrespond throwing error", "body": "submitting check one x current behavior using mockbackend calling mockrespond following object http observable never fails returns success expecteddesired behavior http observable throw error please tell us environment angular version browser language typescript", "num": "9824", "d": "7/2016"}, {"title": "inputmask ngmodel binding", "body": "hello everyone problem ang inputmask example code componenthtml componentts inputmask working good ngmodel nt work anyone know resolve issue code example", "num": "9823", "d": "7/2016"}, {"title": "get routes data outside components routereventssubscription", "body": "submitting check one x current behavior currently inside routed component possible get routes data property within components ngoninit previos injected activatedroute expecteddesired behavior possible get dataproperty routereventssubscription like thisroutereventssubscribe value gt value instanceof navigationend motivation use case changing behavior case service handle breadcrumbs tabs easy way would able put additional informations routes config would must easier realize kind informations central place routestsfiles might much cases behavior would usefu think please tell us environment angular version", "num": "9822", "d": "7/2016"}, {"title": "router two children different outlets empty path", "body": "submitting check one x app two router outlets appcomponent router config following like load different components two outlets current route starts prefix current behavior navigating prefixa effect match routes prefixa error appears console expecteddesired behavior navigating prefixa loads acomponent primary outlet insecondaryoutletcomponent displayed another outlet reproduction problem see expected behavior motivation use case changing behavior please tell us environment angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "9821", "d": "7/2016"}, {"title": "components lifecycle routing", "body": "submitting check one x current behavior clicking link pointing route current components get reloaded expecteddesired behavior expect ngoninit method called way regardless fact already current component reproduction problem open dev console click home console displays init home click news console displays init news click home two times console displays init home one time expected behavior example would expected ngoninit called everytime click home please tell us environment angular version browser language", "num": "9820", "d": "7/2016"}, {"title": "testing custom jasmine matchers like longer available", "body": "submitting check one x current behavior possible tests like upgrading throws understand jasmine functions wrapped following use directly global jasmine functions really handy matcher along others like work done non trivial matchers sadly exposed publicly far see used internally framework tests maybe missing something make works maybe juliemr answer expecteddesired behavior matchers still available going stay still available think undocumented way breaking changes section changelog least mention gone provide easiest workaround people want update tests reproduction problem expected behavior motivation use case changing behavior please tell us environment angular version browser language typescript", "num": "9819", "d": "7/2016"}, {"title": "routeroutlet triggering changedetection componentinsertion", "body": "submitting current behavior component changedetection view component loaded inside component uses directive plain div element loaded initially inside directive load initial bound state inserting component routeroutlet trigger changedetection activated component expecteddesired behavior component view loaded inside ngclass apply classes corresponding expression initially provided via direct inclusion inside component via outlet routeroutlet trigger changedetection activating component reproduction problem plunker shows component loaded inside failing apply classes initial state plnkr shows ngstyle working properly component activated onpush changedetection strategy please tell us environment ubuntu lts angular version browser language typescript", "num": "9818", "d": "7/2016"}, {"title": "router add ability redirect another route programatically", "body": "submitting check one x current behavior currently equivalent historyreplacestate router api way redirect seems redirectto option routerconfig expecteddesired behavior like able redirect user dynamically application please tell us environment angular version browser language", "num": "9817", "d": "7/2016"}, {"title": "bug testing unable asyncinitialization beforeeachhook", "body": "submitting check one x current behavior tests use beforeeachhook create componentfixture worked past latest changes unable get working trying like nt wait component created fixture printed test fails trying use done callback jasmine also nt work case injectfunction calledexecuted leads expecteddesired behavior beforeeach callback wait returned promises able work donefunction motivation use case changing behavior able initialize component test beforeeachhook please tell us environment angular version browser language ts", "num": "9815", "d": "7/2016"}, {"title": "warning using input function without set keyword", "body": "submitting check one x current behavior using expecting define setter forgot define nt warn error made mistake correct code would expecteddesired behavior compile error warning motivation use case changing behavior developer experience please tell us environment angular version language typescript", "num": "9814", "d": "7/2016"}, {"title": "disabledeprecatedforms leads provider token platform pipes compilerconfig token platform pipes", "body": "submitting check one x current behavior trying call current master leads provider token platform pipes compilerconfig token platform pipes using short bootstrapcall looking like remove app starts gives warning deprecated forms expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior app crash calling please tell us environment angular version current master browser language ts", "num": "9813", "d": "7/2016"}, {"title": "datepipe short timezone displayed", "body": "submitting check one x current behavior providing format display timezone expecteddesired behavior providing format display timezone reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via see expected behavior see motivation use case changing behavior fill gap datefilter current datepipe please tell us environment angular version browser language", "num": "9812", "d": "7/2016"}, {"title": "routercanreuse implemented router", "body": "nt see router routerrenavigate also gone used nt find corresponding code router plan", "num": "9811", "d": "7/2016"}, {"title": "router scroll top route change", "body": "traditional web apps go new page page displayed top current router nt scroll top route change leaves scroll position untouched expected behavior routes scrolls top route change", "num": "9810", "d": "7/2016"}, {"title": "router name attribute", "body": "submitting check one x current behavior throws exception trying use name attribute routeconfig motivation use case changing behavior seems like name attribute longer route interface would say much needed feature loosely couple route paths template many times would like change paths refine make sense please tell us environment os x el capitan angular version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "9809", "d": "7/2016"}, {"title": "error run ie", "body": "submitting check one x current behavior using corejs get app run ie recommended docs app mostly works one case fails error expecteddesired behavior work run chrome edge reproduction problem problem caused following code actually default case ngswitch particular case fieldtype either undefined date changing fieldtype text text prevents error causes datepicker date fields chrome edge changing undefined fieldtype text makes difference still errors adding single quotes around text expression nt help either work around use two different cases switch instead combining please tell us environment angular version browser ie language typescript", "num": "9808", "d": "7/2016"}, {"title": "remove inline javascript better csp support", "body": "submitting check one x current behavior produce contains following inline javascript expecteddesired behavior order compliant contentsecuritypolicy allow flag remove inline script use instead alternate method effect reproduction problem expected behavior production builds support csp motivation use case changing behavior improve application security default production deployments please tell us environment angular version browser chrome language typescript", "num": "9807", "d": "7/2016"}, {"title": "rename dependencies", "body": "submitting check one x current injectior options ca nt redefine service uses parent circular dependency instance imagine make new service called uses service adding functionality long service extends explicitly uses creating instance declare provider service maybe nt want go application change http references httpa something like work perfectly happen create another httpbased service called adds different functionality use provider replace implementation new one telling injector whenever someone asks service give service instance created uses extends angularcore thus functionality lost problem try use injector get last implementation get cyclic dependency error makes sense read like someone asks service get service use instead would nt cool injector know service injecting provider returning ie last defined implementation fact behaviour want would like course wo nt work oldhttp defined behaviour mean would let developers kind chaining service angular custom ps feature crafted talk angularcamp barcelona june", "num": "9806", "d": "7/2016"}, {"title": "testing pattern dangerously prone developer errors", "body": "submitting current behavior declare block following required ts tests async function injected object async inject someservice service someservice gt const fixture true return serviceasyncmethod result gt expect result toequal fixture besides verbose definition simple test dangerous falsepositive case developer forgets add async wrapper nt added yet due upgrading causing test always pass eg ts note async omitted tests async function injected object inject someservice service someservice gt expecteddesired behavior two options return value inject function promise wrapped throw error probably hard tell wrapped deprecate make methods check return type promise process async preference downsides option different default jasmine behavior promise ignore unless done closure invoked therefore overall preference would extension jasmine handle promises default basically reversion breaking change caused motivation use case changing behavior test frameworks ultra robust sense nearly impossible developer forget add something tests pass please tell us environment angular version browser nodejs language typescript version", "num": "9805", "d": "7/2016"}, {"title": "router data parameter exists route unable pass data dynamically", "body": "router data parameter exists route pass static data route definition unable pass dynamic data routelink navigate method router", "num": "9804", "d": "7/2016"}, {"title": "execute javascript", "body": "execute javascript dom etc html want execute datatoggle tooltip tooltip tooltip valid method execute", "num": "9803", "d": "7/2016"}, {"title": "bootstrap use tooltip need setup executing javascript", "body": "use bootstrap tooltip tooltip need execute follow javascript ready execute", "num": "9802", "d": "7/2016"}, {"title": "routerlink generation throws exception parameters yet present", "body": "submitting check one x bug report x feature request support request current behavior following snippet used work router user initialized empty object nt hold scenario would resolved asynchronously console logs following initialize user object component dummy id like everything works fine expecteddesired behavior router refuses create href link respective element return silently without throwing exception motivation use case changing behavior avoid implement many directives check ansynchronously resolved objects present dummy initializations dummy properties please tell us environment angular version router browser chromium ff linux mint language typescript compiled", "num": "9801", "d": "7/2016"}, {"title": "document provider literal syntax deprecated provide", "body": "would please add docs nontrivial code new correct method working instead use deprecated like thank", "num": "9799", "d": "7/2016"}, {"title": "angular router hide browser url parameter id give alias names", "body": "trying route employeelist employeedetail click employee id route browser url show user alias like employeedetails background trying implement angular routing went detail section see want hide browser url want show id sensitive uirouter used url something url visible browser url nt similar like passing routeparams custom name browser url instead route name example want hide ids browser url instead present alias route name", "num": "9798", "d": "7/2016"}, {"title": "parameters matrix url notation get parsed", "body": "submitting check one x current behavior parameters matrix url notation get parsed see isselected function live demo referenced router tutorial open crisis detail list go back cancel param id parsed crises highlighted selected ngoninit thissub thisroute params subscribe params gt thisselectedid params id thisservicegetcrises crises gt thiscrises crises scenario choosing hero via standard query paramaters ok expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version browser firefox language typescript xx", "num": "9797", "d": "7/2016"}, {"title": "angular ngmodel ca nt support div contenteditabletrue", "body": "work text change div textarea work fine text hope ngmodel support div contenteditabletrue", "num": "9796", "d": "7/2016"}, {"title": "printing select box values sql rules", "body": "hello need print select box values sql rules generated altered contains operator print iscontains instead like ex employeename conatins hello give employeename iscontains hello need change iscontains hello employeename ispossible plkease help solve", "num": "9795", "d": "7/2016"}, {"title": "nt work according documentation", "body": "submitting really nt know bug documentation update error current behavior number gt reproduction problem please tell us environment angular version thanks", "num": "9793", "d": "7/2016"}, {"title": "change neighbor input variable input variable change", "body": "want perform operations input parameters changed lets say datepicker component type input variable want perform actions another date variable type changed typescript export class datepicker ps asked question week ago nt get answer common case task perform operations input values changed kind operations matter change variables change detector something else complain also since opened issue want mention current component lifecycle angular seems doubtful inputs coming view content init even ngoninit using setters inputs perform something depend view components ca nt component initialization next time inputs changed creates lot monkey patches code like typescript export class datepicker implements afterviewinit ngafterviewinit thisisviewinited true thisdosomethingviewrelated thisdata", "num": "9791", "d": "7/2016"}, {"title": "forms controlvalueaccessor readvalue request", "body": "ignore day fiddling realized approaching incorrectly feature request actually already", "num": "9789", "d": "7/2016"}, {"title": "value accessor using ngmodel custom directives new forms", "body": "custom components implements value accessor make work ngmodel working switching new forms works fine using old forms work switching new forms new way using ngmodel value accessors", "num": "9788", "d": "7/2016"}, {"title": "request feat router add decorators resolved params", "body": "typescript interface resolved remap string interface params remap string class resolved data params params would simply", "num": "9787", "d": "7/2016"}, {"title": "queryparams hashdata removed navigate another route", "body": "submitting check one x current behavior navigate route queryparams id workspaceid queryparams url navigate another route b query params also hash data keepd expecteddesired behavior query params removed url navigate another location reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version router version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "9786", "d": "7/2016"}, {"title": "update npm package", "body": "guys please update package npm latest currently version thanks advance", "num": "9785", "d": "7/2016"}, {"title": "selects multiple true ngmodel working mobile chrome possibly others", "body": "submitting check one x current behavior got select multiple enabled ngmodel wo nt work ie chrome android expecteddesired behavior ngmodel binds across browsers works fine chrome debian reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point plunk expected behavior text box bind fine browsers select remove multiple select binds expected motivation use case changing behavior cross browser functionality please tell us environment angular version browser ie mobile chrome language typescript xx", "num": "9784", "d": "7/2016"}, {"title": "hash data root url cause error match routes", "body": "submitting check one x current behavior route config export const homeroutes routerconfig path component homecomponent children path component indexcomponent hash data used user logined openidconnect server using implicit flow server write token data hash section url error show use method export const homeroutes routerconfig path redirectto home pathmatch full terminal true path home component homecomponent children path component indexcomponent expecteddesired behavior reproduction problem current behavior bug illustrate feature request better example please provide steps reproduce possible minimal demo problem via similar use template starting point expected behavior motivation use case changing behavior please tell us environment angular version router version browser chrome xx firefox xx ie xx safari xx mobile chrome xx android xx web browser ios xx safari ios xx uiwebview ios xx wkwebview language typescript xx dart", "num": "9783", "d": "7/2016"}, {"title": "forms changedetectionstrategyonpush causes input falsely marked invalid", "body": "submitting check one x current behavior new model loaded initialization form updated using markforcheck valid form would marked invalid even though name test valid name need click inputs form order show name valid nt happen using default change strategy expecteddesired behavior form detect test valid name mark valid ie green border left default reproduction problem expected behavior border left red load green click input input form fixes issue click needed motivation use case changing behavior please tell us environment angular version", "num": "9782", "d": "7/2016"}, {"title": "ngfor working templateurl", "body": "submitting check one x current behavior error expecteddesired behavior simple list names reproduction problem import component angularcore component selector app templateurl appappcomponenthtml export class appcomponent names string constructor thisnames html expected behavior list names motivation use case changing behavior works please tell us environment angular version browser chrome latest language typescript", "num": "9781", "d": "7/2016"}, {"title": "viewcontainerrefcreatecomponent", "body": "wanted ask questions stackoverflow blocked read ca nt reply post stack overflow requires external javascript another domain blocked failed load back question api api doc third parameter injector optionally specify injector used parent component fact parameter work code code template description hope insert component componentts runtime dynamiccomponent added behind modalbody hope insert modalbody use thrid parameter injector achieve goal", "num": "9779", "d": "7/2016"}, {"title": "allow routerlinkactive work descendant routerlinks", "body": "submitting check one x sure bug report feature request nt see expected behavior documented checked current behavior routerlinkactive directive appears work direct children directive consider nested menu directives inner elements work expected outer one assuming descendants flag set true annotation directive expecteddesired behavior either directive always look descendants seems like likely case configurable motivation use case changing behavior nested menus common use case write custom directive almost exactly copies builtin one case seems undesirable would also likely simple change existing directive please tell us environment angular version browser language typescriptnext", "num": "9777", "d": "7/2016"}, {"title": "webworkers chrome component render root component long initialization logic constructor", "body": "submitting check one x current behavior component web worker scenario render root component long initialization logic constructor component plunker example render number cycles loop reduced expecteddesired behavior component renders reproduction problem see expected behavior plunker sample following string displayed hello release candidate motivation use case changing behavior bug fix please tell us environment angular version browser chrome language typescript", "num": "9771", "d": "7/2016"}, {"title": "angular router working multiple parameters passed", "body": "created sample plunker pass multiple parameter next page nt work plunker demonstration crisis center routing nt work click items three layered navigation moves crisiscenter crisisdetails crisidetails transactiondetail navigate crisis details want pass crisisid crisisdetailid traverse back detail crisis list trying passing multiple parameter anyone issue also want hide url parameter browser url show alias name previously keyword used work nt work help appreciated", "num": "9770", "d": "7/2016"}, {"title": "platformbrowserindex exported member elementprobeproviders", "body": "submitting current behavior upgrading see elementprobeproviders removed used application bootstrap wondering something using place could nt find changelog reproduction problem please tell us environment angular version language typescript", "num": "9769", "d": "7/2016"}, {"title": "forms using updatevalue item nt set control dirty markasdirty fails", "body": "submitting check one x current behavior updating value form control using updatevalue method set value correctly dirty touched pristine properties control update using markasdirty method fails work also described issue physically interact control valuesflags update expecteddesired behavior updatevalue update flags appropriately documented way programmatically update valueflag states one go reproduction problem expected behavior formcontrol updated correct state ie value changes control dirty motivation use case changing behavior unless misunderstanding use formcontrol represents state input element updatevalue method work predictably please tell us environment angular version forms browser chrome language typescript", "num": "9768", "d": "7/2016"}, {"title": "http queryencoder wrong encoding", "body": "submitting check one x current behavior queryencoder encodes instead expecteddesired behavior queryencoder encode comment pr causes bug reproduction problem expected behavior motivation use case changing behavior please tell us environment angular version browser language typescript", "num": "9767", "d": "7/2016"}, {"title": "global platform object causing isolation issues", "body": "submitting feature request current behavior according documentation currently angular relying global platform object browser bootstrapping multiple applications working within browser window many singleton resources cookies title location others angular services represent resources must likewise shared across angular applications occupy browser window reason angular creates exactly one global platform object stores shared services angular application injector platform injector parent application private injector well multiple applications page angular treats application injector services private application expecteddesired behavior unfortunately ca nt run multiple bundled angular applications browser applications bundled together angular scripts example webpack bundle loading another bundle override previously initialized global platform object assume therefore previously loaded app example lost registered dependency tree course global platform object ca nt run two different versions angular browser motivation use case changing behavior motivation behind implement truly reusable components example creating angular app wrapped webcomponent imported another angular application angular application react knockout whatever application angular version browser language", "num": "9766", "d": "7/2016"}, {"title": "angular basics", "body": "hi really issue rather something frustrates someone please explain angular loads scripts html directly nodemodules ca nt import module installed npm results error zonejs one even docs found knows rest scripts loaded html really tried hour load single npm module using import require configs systemjsconfigjs stupid name called systemjs extension js mappackagespaths none successfully angular starter guide", "num": "9765", "d": "7/2016"}, {"title": "beforeeach testcomponentbuilder addproviders fails since deprecating beforeeachproviders", "body": "submitting x lamentation deprecated functionality two things like inject tests service instance used work follows prior beforeeachproviders gt myservice beforeeach inject testcomponentbuilder tcb gt builder tcb seems would become however appears intended work erroring thrown obviously design considered deprecated makes wonder known solution new approach inject either two test separately instead deprecation really worth", "num": "9763", "d": "7/2016"}, {"title": "urlsearchparams queryencoder bug equals char", "body": "submitting check one x current behavior want pass plain query parameter looks like constructed url becames expecteddesired behavior latest queryencoder looks like wrong line instead angular version", "num": "9762", "d": "7/2016"}, {"title": "proposal mapstyle pipe definition", "body": "submitting check one x goal motivation define pipes create class pipe class useful importexport among files want pipe specific component classstyle definition verbose want instant pipe definition summary supports mapstyle pipe definition", "num": "9761", "d": "7/2016"}, {"title": "compatible rxjs", "body": "updating rxjs got ta error systemjs xhr error found loading downgrade rxjs back works perfectly bug else angular version browser ie language typescript", "num": "9760", "d": "7/2016"}, {"title": "datepipe working corectly", "body": "submitting bug report current behavior passing hh updated datepipe receive expecteddesired behavior reading documentation would expect receive angular version language typescript", "num": "9759", "d": "7/2016"}, {"title": "dependency injection nt load dependencies custom backend", "body": "submitting check one x current behavior currently trying create custom xhrbackend app want catch http responses http response code unauthorized redirect user loginpage comes problem dependency injection able load router custombackend also tried inject services also work injects dependencies xhrbackend custom one asked solution use factory create custom backend think also work way tried stackoverflow post expecteddesired behavior possible use dependency injection custom backend inject additional dependencies reproduction problem see router inside customxhrbackend undefined please tell us environment angular version browser language typescript", "num": "9758", "d": "7/2016"}, {"title": "router data parameter exists route inaccessible due missing routedata class", "body": "submitting may misunderstanding new code nt able find much documentation current behavior current routerconfig allows route definitions data parameter see data seems inaccessible via documented routedata described angulario additionally seems activatedroute exposes data public found activatedroutedata undefined despite defined data route routerconfig trying something along lines import providerouter routerconfig angularrouter import loginpagecomponent pages export const routes routerconfig path login component loginpagecomponent data mydata test export const approuterproviders providerouter routes import component angularcore import activatedroute router routerdirectives angularrouter component selector mynavigation template test directives routerdirectives export class navigationcomponent constructor private route activatedroute private router router ngoninit thisroute data ca nt map thisroutedata anything useful undefined consolelog thisroute interestingly seeing thisroute params data seems conflict activatedroute constructor routerstatets includes public data public params expecteddesired behavior data specified routerconfig accessible routed components form either via documented routedata via activatedroute parameter means please tell us environment angular version router version browser language", "num": "9757", "d": "7/2016"}, {"title": "routing requires presence routerlink", "body": "submitting current behavior currently loaded component contain changes routes reflected expecteddesired behavior route would change regardless presence", "num": "9756", "d": "7/2016"}, {"title": "routerlinkactive directive broken nonanchor tags", "body": "submitting check one x current behavior adding directive tag directive anchor element results expecteddesired behavior directive act exact manner added nonanchor element added anchor element behaviour adding specified class element route active reproduction problem steps add routerlink directive element anchor add routerlinkactive directive element observe error console plunk expected behavior directive act exact manner added nonanchor element added anchor element behaviour adding specified class element route active directive contains code clearly shows designed able used tag directive ought able well motivation use case changing behavior developing large spa uses list elements links quite places please tell us environment angular version browser language", "num": "9755", "d": "7/2016"}, {"title": "chrome error projected content w animation laid component w ngif", "body": "submitting check one x current behavior bug chrome tested firefox safari happen projected component animation changes state inside another component showinghiding following error occurs expecteddesired behavior nt throw error animations valid works browsers reproduction problem open developer tools chrome apps loads click toggle collapse button see error partial keyframes supported expected behavior see motivation use case changing behavior nt change behavior see bug existing behavior please tell us environment angular version browser chrome version language typescript", "num": "9754", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2016"}, {"body": "wildcards work way try", "d": "7/2016"}, {"body": "oh working thank", "d": "7/2016"}, {"body": "latest version router", "d": "7/2016"}, {"body": "thanks making issue please provide plunkr example possible deduce going callstack", "d": "7/2016"}, {"body": "would break encapsulation supposed variables go beyond container scope need way databinding allowing ask seems repeating angular errors", "d": "7/2016"}, {"body": "understand creating embedded view context reason must rewrite context template statement maybe template context binded would thing less code look cleaner another argument choose want bind context", "d": "7/2016"}, {"body": "sorry embedded views outside knowledge angular however may seems call embedded views know transclusion basically content put parent html inside child component tags get rendered child specific part template right assume least related", "d": "7/2016"}, {"body": "related want bind context template without statement method transclusion parent child connection new embedded view context without rewriting template think attribute useless context already template arguments method must connect context template html", "d": "7/2016"}, {"body": "please provide plunker demonstrates try accomplish seen similar question recently misunderstanding guard provider provides guard", "d": "7/2016"}, {"body": "use function resolve instead class provide token routes resolve function bootstrap example plunker", "d": "7/2016"}, {"body": "please try report expect fully work", "d": "7/2016"}, {"body": "think confused nature viewcontainerref thing viewcontainerref insert things inside viewcontainer specific index might check detailed discussion info controlling index calling precise control items inserted view container", "d": "7/2016"}, {"body": "vsavkin think", "d": "7/2016"}, {"body": "really like see something like well pull routes modules register creates bit coupling like especially several levels deep ngmodules", "d": "7/2016"}, {"body": "already changed master fragments query params longer persist across navigation unless specifically told", "d": "7/2016"}, {"body": "thnx brandonroberts", "d": "7/2016"}, {"body": "custom construct", "d": "7/2016"}, {"body": "thanks vicb ideas solve problem source code point dive try solve problem need bindings component load another component b using dynamic component loader bound another component c contains component b example componentc componentb componenta loaded dynamically b using dcl template calculated dynamically b need binding componenta go component c ideas", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2016"}, {"body": "nt think discussed maybe petebacondarwin info case issue nt belong thing discussed implemented going happen angular repo", "d": "7/2016"}, {"body": "working unstable libs including angular smile see nt like let npm update often something breaks joy", "d": "7/2016"}, {"body": "carlcui however go edit packagejson use standard semver dependencies error goes away issues like go hunt packagejson like annoying users want packages work together pr best faddah portland oregon usa", "d": "7/2016"}, {"body": "faddah warning warn program might fail insist using different version trying annoy smile", "d": "7/2016"}, {"body": "carlcui erroneous new updated version npm package dependencies production seen break anything using updated versions dependent npm packages semver syntax like later point versions industry standard packages get updated constantly anyway filed pr tho zip idea unittest simple one character packagejson fix angular team nt want nt include best faddah portland oregon usa", "d": "7/2016"}, {"body": "versions framework depends project depend new versions without testing could break everything use specific versions everything works project cool pr may break lot projects message erroneous warning simply ignore", "d": "7/2016"}, {"body": "keeping versions locked development process purpose release stable loosen restrictions", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "plus question seems related plugin part angular", "d": "7/2016"}, {"body": "plugin ended work problem happens callback assign received value component value view show anyting cordova testend recommended use", "d": "7/2016"}, {"body": "reproduce plunker", "d": "7/2016"}, {"body": "plunker nt user friendly comes adding recent packages nt see option nt time figure", "d": "7/2016"}, {"body": "dupe", "d": "7/2016"}, {"body": "closing duplicate", "d": "7/2016"}, {"body": "note nt cosmetic issue see", "d": "7/2016"}, {"body": "close repo angular", "d": "7/2016"}, {"body": "really bug could nt explicitly trigger cd", "d": "7/2016"}, {"body": "really bug one could argue case discussed mhevery advised open issue could nt explicitly trigger cd sure workarrounds point suggestion thing given method called either inside outside sometimes would trigger cd sometimes sure could reliably distinguish sometimes", "d": "7/2016"}, {"body": "issue feature even ca nt distinguish would angular actually really need distinguish would hurt mark component dirty really", "d": "7/2016"}, {"body": "cold", "d": "7/2016"}, {"body": "problem routernavigate inside callback function generate web servise response read property router undefined", "d": "7/2016"}, {"body": "sounds like separate issue open another issue example", "d": "7/2016"}, {"body": "duplicate", "d": "7/2016"}, {"body": "oh nice good see one", "d": "7/2016"}, {"body": "explanation dcl deprecated anyway", "d": "7/2016"}, {"body": "thnx ericmartinezr helping issues answer spoton always", "d": "7/2016"}, {"body": "please try reproduce plunker", "d": "7/2016"}, {"body": "agree convention configuration", "d": "7/2016"}, {"body": "want move forward need concrete proposals ideas infer selector class name provided default template style urls generate code convert inputs declared type numbers booleans", "d": "7/2016"}, {"body": "pkozlowskiopensource features listed easily created webpackloader let think idea able configure everything app reaches certain scale beginning creating app avoid configuration sticking convention progressively applying configurative needed example make everything input private makes lot sense wanted scope inputs would include output eventemitter eventemitter prop output templates style also look corresponding file correct type components decorations ngmodule would lot involved also hidden honest ngmodule hidden away webpack wo nt even need know exists even hide bootstrap assuming developing browser magic would great developers starting like magic days everything working developer wants control need configure app using decorators", "d": "7/2016"}, {"body": "k got template selector styles working default values webpack publish soon", "d": "7/2016"}, {"body": "support offline compile", "d": "7/2016"}, {"body": "published metedata defaults package provides defaults metadata component decorator ngc run afterwards convert decorators annotations also buildtime wo nt run problems minification offline compiling runs afterwards update ton awesome features kept running problems ngfactory scrap", "d": "7/2016"}, {"body": "number sorts things like well think correct answer going extensibility compiler layer work online offline require significant planning see also transforms coming typescript soon", "d": "7/2016"}, {"body": "vsavkin changed hello world example code prints also tried via plunker result create repro", "d": "7/2016"}, {"body": "ok able reproduce via error shows following factory therefore already called instantiated calls happens outside angular zone wrong reproduce bootstrap hellocmp provide appinitializer multi true usefactory setuprouterinitializer deps injector function setuprouterinitializer injector injector consolelog gt gt gt current zone zone currentname return gt note app initializers well module constructors run right zone factories app initializers wrong", "d": "7/2016"}, {"body": "bad filename current path docs ts latest tutorial pathtodocs", "d": "7/2016"}, {"body": "please reopen", "d": "7/2016"}, {"body": "probably ca nt please add expected current behavior plunker submitting issue however looks like support request please use gitter orstackoverflow", "d": "7/2016"}, {"body": "bug try get error expected behaviour wo nt get error current behaviour getting error enough", "d": "7/2016"}, {"body": "try", "d": "7/2016"}, {"body": "ericcarraway thx bro solved problem", "d": "7/2016"}, {"body": "issue already fixed master go next release", "d": "7/2016"}, {"body": "awesome thanks brandonroberts", "d": "7/2016"}, {"body": "dev dependency", "d": "7/2016"}, {"body": "sure relevant projects like angular impacting core developers even risky whole community", "d": "7/2016"}, {"body": "choeller could provide repro plunker using nightly build nt released month latest release router npm nt contain changes trying use", "d": "7/2016"}, {"body": "created plunker similar question nt know make use nightly build", "d": "7/2016"}, {"body": "vsavkin bug based commit changes needed try get plnkr latest nightly build", "d": "7/2016"}, {"body": "vsavkin plnkr click tasks open aux route also added attempt open aux relative link leads exception immediately", "d": "7/2016"}, {"body": "also quite confusing possible results", "d": "7/2016"}, {"body": "plunkr case formsdeprecated possible via twig please select value countrylabel typescript import controlgroup control angularcommon nt know new forms case without ngforms", "d": "7/2016"}, {"body": "problem two sides convert empty string auto select current option convert empty string set correct value means write many", "d": "7/2016"}, {"body": "btw name nt appear anywhere code idea comes", "d": "7/2016"}, {"body": "try change", "d": "7/2016"}, {"body": "trick thank still wondering coming", "d": "7/2016"}, {"body": "plunkr error reads numberpipets source code file suggests use polyfill like current safari nt support windowintl ca nt find notice documentation neither reference pipes guide", "d": "7/2016"}, {"body": "error op seeing sod mentioned dup", "d": "7/2016"}, {"body": "mainly documentation issue added request angulario", "d": "7/2016"}, {"body": "added request angulario thanks", "d": "7/2016"}, {"body": "documentation issues filed github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "7/2016"}, {"body": "filed yes gunter right documentation looks right though absolute latest update etc restore packages found right click folders amurtola", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2016"}, {"body": "question stuckoverflow also yes latest update", "d": "7/2016"}, {"body": "see dependencies folder using net core older something npm install command line least work amurtola", "d": "7/2016"}, {"body": "postman probably nt care cors browsers enforce github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "7/2016"}, {"body": "zoechi thx added following line express app works", "d": "7/2016"}, {"body": "crebuh would mind closing issue", "d": "7/2016"}, {"body": "srczip project file", "d": "7/2016"}, {"body": "please provide plunker reproduce instead zip file", "d": "7/2016"}, {"body": "zoechi nt access plunker right project using new router problem", "d": "7/2016"}, {"body": "async validators passed parameter github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "7/2016"}, {"body": "coincidence already pr", "d": "7/2016"}, {"body": "dup", "d": "7/2016"}, {"body": "ajliu looks like issues code want use need provide new forms bundle like bootstrap file ts import disabledeprecatedforms provideforms angularforms bootstrap app disabledeprecatedforms provideforms looks like referencing property nt exist instantiate formgroup nt exist refers formarray created switch use everything works see updated code closing nt seem bug please feel free reopen missing something use case", "d": "7/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "7/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem zoechi right nice help though little modified plunker see changes line", "d": "7/2016"}, {"body": "gfrse zoechi thank help sure post support questions section next time thank", "d": "7/2016"}, {"body": "injecting hammer configuration see", "d": "7/2016"}, {"body": "thanks help future reference added configuration made maints myhammerconfigts class myhammerconfig extends hammergestureconfig events string pinch pan necessary recognize pinch pan event buildhammer element htmlelement hammerinstance let mc new hammer element domevents true mcget pinch set enable true mcget pinch recognizewith mcget pan return mc", "d": "7/2016"}, {"body": "thanks reporting solution could helpful others", "d": "7/2016"}, {"body": "probably linked actually see edit actually pb takes different values loop unroll loop", "d": "7/2016"}, {"body": "first mean unroll loop make like case case case default trivial form using ngswitch second need dynamic nature ngswitch example dynamic entity static form simplicity real apps use arbitrary component variable array type way remove ngswitchdefault previous message snippet works fine without errors need unroll loop problem one appropriate using ngswitch appropriate using ngswitchdefault bug", "d": "7/2016"}, {"body": "nt believe supported looking current implementation however could simply use string interpolation something like import component angularcore component selector myapp template export class appcomponent size number height number style fontsize height working plunker", "d": "7/2016"}, {"body": "markpritchett thanks advice think verbose lack type checking example could class boxcomponent input box box component selector myapp template class appcomponent implements oninit boxes box constructor private service boxes ngoninit thisservicesubscribe boxes gt thisboxes boxes", "d": "7/2016"}, {"body": "changed mind right approach", "d": "7/2016"}, {"body": "deprecated router supported fail see would work browser would redirect even angular chance see response anyway please use stack overflow giter support requests thanks", "d": "7/2016"}, {"body": "repo looking p", "d": "7/2016"}, {"body": "problem also bee seen sample plnkr router navigation develorper guide angular website steps pop preview window see address bar click crisis edit text use browser back commands go back url changes even user clicks cancel popup", "d": "7/2016"}, {"body": "hi sure nt need add provider homecomponent component moduleid moduleid templateurl homecomponenthtml styleurls homecomponentcss providers userinfoservice", "d": "7/2016"}, {"body": "userinfoservice registered bootstrap level per individual component want single instance service available every component application", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "nt work either check new plunker tested code found nt work multiple attributes plunker link second case thing works properly stops working properly adding another attribute object check new plunker", "d": "7/2016"}, {"body": "micronyks thanks replicating", "d": "7/2016"}, {"body": "micronyks lakshaydulani could guys try mode kind suspect", "d": "7/2016"}, {"body": "pkozlowskiopensource tried prod modeno luck", "d": "7/2016"}, {"body": "believe intended would confusing ngstyle iterated every single property set undefined would nt ngstyle documentations approach use one object define styles want control", "d": "7/2016"}, {"body": "sod imo flush current style property element set per new object angular version used work fine", "d": "7/2016"}, {"body": "sod see plunkr making changes one object click first style second time wont work fine click first second work fine clicking", "d": "7/2016"}, {"body": "lakshaydulani right work like described even implemented seems bug keyvaluediffer method returns first removal thats reason first style object successfully reverted others nt behavior reproducible angular latest", "d": "7/2016"}, {"body": "issue fixed recently see fix master released yet", "d": "7/2016"}, {"body": "part next release", "d": "7/2016"}, {"body": "vicb soon expect next release thanks", "d": "7/2016"}, {"body": "please provide plunker allows reproduce", "d": "7/2016"}, {"body": "seems limitation typescript metadata normally metadata returns token says guess typescript wo nt preserve variables explicitly declared maybe want use angulars location instead", "d": "7/2016"}, {"body": "sod thank sure example uses example real applications use functions global variables context lot features", "d": "7/2016"}, {"body": "see also", "d": "7/2016"}, {"body": "bet never worked offline compilation wed jul rob wormald notifications githubcom wrote assigned tbosch receiving mentioned reply email directly view github mute thread", "d": "7/2016"}, {"body": "wrote pipe fixes definitely bug import pipetransform angularcoresrcchangedetectionpipetransform import pipe angularcoresrcmetadata pipe name escapeurl pure false export class escapeurlpipe implements pipetransform transform value args return encodeuricomponent value", "d": "7/2016"}, {"body": "already fixed master next release", "d": "7/2016"}, {"body": "awesome thanks", "d": "7/2016"}, {"body": "matsko", "d": "7/2016"}, {"body": "matsko happened animationcontrol showed ngconf nt kind higher level api better callback gets invoked", "d": "7/2016"}, {"body": "good question become used animations bound transitions come around get reusable animations feature ts component animations notice bound trigger animation also referenced inside transition via animate dur animation rotatestuff animation rotatestuff animate keyframes style transform rotate style transform rotate class cmp animation rotatestuff animator innerref elementref constructor query innerchild inner thisinnerref inner start var player thisanimatorstart thisinnerref playersetposition animation playersetposition animation playerreverse playerpause playerplay playerondone gt", "d": "7/2016"}, {"body": "originally designed player access transition animations always end last animation anyway split allows programmatic animations available component code unless usecase nt solve wo nt required", "d": "7/2016"}, {"body": "thank fast detailed answer", "d": "7/2016"}, {"body": "bug please provide minimal repro looking support please use giter stack overflow thanks", "d": "7/2016"}, {"body": "reference", "d": "7/2016"}, {"body": "issue exists routeroutlet parameters", "d": "7/2016"}, {"body": "please provide minimal repro thanks", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "sounds like support question taken appropriate support channel see", "d": "7/2016"}, {"body": "looks like dup", "d": "7/2016"}, {"body": "could provide repro using latest nightly build issue fixed", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "definitively bug report feature request actionable asis see github submission guidelines", "d": "7/2016"}, {"body": "filterng router events works fine need import filter operator first", "d": "7/2016"}, {"body": "brandonroberts thanks works import", "d": "7/2016"}, {"body": "need use arrays input example html libelle personcontrolcontrols persons value index may want keep separate variable need update dynamically nt know approach pretty similar", "d": "7/2016"}, {"body": "hello tested solution seemed nt work many inputs loop example one input bind personlibelle another input bond personvalue beside want keep ngmodel input double binding view model somebody idea thanks", "d": "7/2016"}, {"body": "check doc documentation otherwise ask stackoverflow", "d": "7/2016"}, {"body": "updated plunker show problem look documentation ca nt find something problem many inputs inside loop form validation", "d": "7/2016"}, {"body": "problem formcontrolname must unique another plunker correction", "d": "7/2016"}, {"body": "witnessing behavior", "d": "7/2016"}, {"body": "hi leave dirty wokaround pipe name getgross export class getgrosspropertypipe implements pipetransform transform value index number value amp amp valueconstructor array return value index gross return null responsedata async calculation getgross", "d": "7/2016"}, {"body": "jurajmlich actually go try plunker op provided exception error uncaught promise template parse errors parser error conditional expression responsedatacalculation async gross requires expressions end expression responsedatacalculation async gross app error responsedatacalculation async gross app", "d": "7/2016"}, {"body": "use pipes typescript root app component import component pipe angularcore import httpproviders http angular import rxjsrx import observable rxjsrx pipe name get class get transform val args val null return val return val args pipe name first class first transform val args val null return val return val component selector myapp providers httpproviders pipes get first template directives export class app responsedata observable new observable constructor private http thisresponsedata map res gt resjson", "d": "7/2016"}, {"body": "could use gross calculationgross net calculationnet directives ngfor export class app calculations observable lt gross number net number gt constructor private http thiscalculations map res gt resjson calculation", "d": "7/2016"}, {"body": "sod suggested better", "d": "7/2016"}, {"body": "thank much alexander sod posted answer nt object someone approve initial question bug desired behavior", "d": "7/2016"}, {"body": "using rx preferred template handling", "d": "7/2016"}, {"body": "normally enough make fully work need fix landed maser via part till released use one workarounds offered", "d": "7/2016"}, {"body": "make sure running version dependency nt see imports code also questions stackoverflow", "d": "7/2016"}, {"body": "also need import", "d": "7/2016"}, {"body": "add lines", "d": "7/2016"}, {"body": "added imports see project files added file named rxjsoperatorsts find import lines file import rxjsaddoperatortopromise import rxjsaddoperatormap afterwards added reference file appcomponentts still gives error dragonservicets file commented lines please identity error see approach correct also fknop please tell make sure version dependency using used angular min quickstart even though latest version compatible angular", "d": "7/2016"}, {"body": "khanstudiogithub questions sound like support request taken appropriate support channel see", "d": "7/2016"}, {"body": "provide guard providers array bootstrap course produce error ignored router", "d": "7/2016"}, {"body": "already import two routests", "d": "7/2016"}, {"body": "error dont minify code see full error bug support question", "d": "7/2016"}, {"body": "comment errors", "d": "7/2016"}, {"body": "help authguard file route want add loginguard dashboard routes", "d": "7/2016"}, {"body": "provide guard providers array bootstrap", "d": "7/2016"}, {"body": "fknop file already import guard missed thanks helps", "d": "7/2016"}, {"body": "go gitter stackoverflow provide plnkr question", "d": "7/2016"}, {"body": "thank fix problem adding guard routestx file", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "closing support request please feel free open issue demonstrative plunker find bug angular", "d": "7/2016"}, {"body": "far remember fix also applies currency pipe however probably release rc could please check change log close pr case fixed next rc thanks limited network access wednesday", "d": "7/2016"}, {"body": "vicb seem right affected probably fixed pr fix common function used also pipe since pr merged days ago obviously nt yet nt going released week though", "d": "7/2016"}, {"body": "dup already commented still open", "d": "7/2016"}, {"body": "thanks ericmartinezr", "d": "7/2016"}, {"body": "reopen one please alexeagle vicb closed issue", "d": "7/2016"}, {"body": "would url using router navigate use target url test f fine navigate using thisrouternavigate code bellow target url test f seems wrong var route test var params f thiscriarparametrodefiltrosdecategoria fv thiscriarparametrodefiltrosvalor thiscriarparametroordem pg thispagina reading angular documentation could find expected target url", "d": "7/2016"}, {"body": "similar issue route params passing parameter forex currency code eg usdgbp passed router unencoded tries route routenameusdgbp", "d": "7/2016"}, {"body": "think intended behavior pipe property need ngonchanges ngoninit", "d": "7/2016"}, {"body": "mattschlitz use case lifecycle hook example documentation lifecycle hooks states initialize directivecomponent angular initializes databound input properties since ca nt inputs point hook", "d": "7/2016"}, {"body": "may fundamental misunderstanding angular part feel free correct wrong thought happened multiple phases rendering process first constructing tree based template second initializing node tree rendered constructor used first phase hook used second phase case would generally good idea load data strictly used pipe hook called long continues work cleanup deal putting data loading logic constructor however think fact lifecycle hook supported pipes documented developer guide intention reason found works first place looking source trying write pipe subscription associated nt know would talk changing someone could either add tell go get added think community would benefit question answered", "d": "7/2016"}, {"body": "think really good idea data loading pipe pipe data manipulation pass data something comes stateful pipes think better practice keep stateless absolutely data loading pipe obviously happen constructor lifecycle component created inputs bound ngoninit called", "d": "7/2016"}, {"body": "purposes localization somewhat unavoidable localization data needs loaded data displayed understandable desire pipes stateless much possible somewhat loss could accomplished without forcing application wait every localization file loaded forcing application reload time someone decides change locale nt completely unreasonable seems like unnecessary ideas updating documentation create separate issue", "d": "7/2016"}, {"body": "yes use case case stateful pipe use service load translations inject pipe gives observable translation value change call work nt need use constructor pipe except injecting service somewhat loss could accomplished without forcing application wait every localization file loaded forcing application reload time someone decides change locale nt completely unreasonable seems like unnecessary note almost approach angular chosen nt change since read design docs months ago", "d": "7/2016"}, {"body": "yes mimicked way works order get change detection work point must need subscribe observable would suggest looks like route chosen perform subscription maybe way taking place initialization step ca nt imagine approach suggested current pipes could sustainable suppose moved localization information separate constants file build application could doable small application larger scale applications translate multiple languages bundling constants would make file size explode could information separate script either way blocking constants languages downloaded maybe build application could injected directly application smaller chunks constants component makes http request load smaller list tokens know bit offtopic would love use already built angular concerned extensible", "d": "7/2016"}, {"body": "input changes transform make sure cleaning subscription every change detection otherwise constructor", "d": "7/2016"}, {"body": "binding syntax nt supposed support full esx syntax several things supported", "d": "7/2016"}, {"body": "hard add nt expect", "d": "7/2016"}, {"body": "reference", "d": "7/2016"}, {"body": "valid event name events hardly used throw probably feature linters ides", "d": "7/2016"}, {"body": "support question already asked answered mailing list need duplicate especially question nt belong see", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "fast pawel", "d": "7/2016"}, {"body": "using latest router rc router superseded router longer developed", "d": "7/2016"}, {"body": "also posted", "d": "7/2016"}, {"body": "since support question got question already nt see point keeping issue open thnx brandonroberts zoechi helping issues", "d": "7/2016"}, {"body": "please suggest achieve urgent trying last days like angualr fromstate tostate need tostate value component", "d": "7/2016"}, {"body": "found problem include fix pr land soon", "d": "7/2016"}, {"body": "surely ideal run angularjs angular applications simultaneously obvious drawbacks performance hit harder maintainability since need downgrade andor upgrade stuff one another said decide whether worth personally prefer angular much would love replace angularjs apps ngupgrade meant used using transition angular endsolution application allows use legacy code find time convert angular", "d": "7/2016"}, {"body": "using ngupgrade production improves performance using angular code ca nt migrate code lack ui plugins completely migrated angular works faster components migrated perfect improving every rc hope full migration soonish using angular compiler yet waiting hopefully next week improve even execution time repeat dynamic mode faster angular probably fast bootstrap phase always faster", "d": "7/2016"}, {"body": "hassanbk made conscious decision late last year use ngupgrade project go production following reasons complex enough mixing two app seemed asking trouble want throw additional middle broker layer ngupgrade would increase overall complexity yet team happy wait would stabilize develop new apps fully either appropriate thus nt know ngupgrade performs drawbacks one might actually encounter using production projects always use library makes code easier believe cleaner although nt specifically try make code exactly like", "d": "7/2016"}, {"body": "yes wait come router meantime ca use build packages also see", "d": "7/2016"}, {"body": "thanks ericmartinezr", "d": "7/2016"}, {"body": "please reopen providing requested information", "d": "7/2016"}, {"body": "please elaborate requested information add code component replace contents long text adds vertical scroll bar test mobile device simulated chrome dev tools live device", "d": "7/2016"}, {"body": "create new issue get template requests several things one plunker reproduce", "d": "7/2016"}, {"body": "sounds like", "d": "7/2016"}, {"body": "answer cited question refers routing using hashlocation note bsconfigjson file submitted code well launchsettingsjson", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2016"}, {"body": "issue specific chrome beta browsers tried ok probably chrome bug could please try reproduce using angular thanks", "d": "7/2016"}, {"body": "yeah probably chrome bug robwormald showed interesting workaround weird reason appears adding button tag handler fixes", "d": "7/2016"}, {"body": "work provided change detection triggered variable updated ie updated result async call question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "nt think issue irw would certainly without pipe still", "d": "7/2016"}, {"body": "pls create plunker reproduction", "d": "7/2016"}, {"body": "dzmitryshylovich plunker showing error made changes live example docs page approutests appcomponentts changed click see error", "d": "7/2016"}, {"body": "think valid way want append query string see milestone", "d": "7/2016"}, {"body": "works route target placeholder defined like router put placeholders position matrix url fashion still append normal parameters", "d": "7/2016"}, {"body": "sod hmm example nt seem placeholder suggestion work appheroesheroesroutests appheroesherodetailcomponentts planning look possible docs clarification thanks", "d": "7/2016"}, {"body": "exact issue able solve way need better support partial forms", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "please reopen", "d": "7/2016"}, {"body": "side question might unintended behaviorbug chrome angular fix something code", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "imho constructor module class usable function returns promise used replaced using", "d": "7/2016"}, {"body": "benefit lifecycle hooks giving control back developer modules example party modules something async constructor way track even know async call async method would know invoke", "d": "7/2016"}, {"body": "use qs thanks", "d": "7/2016"}, {"body": "ca nt use function use test component different templates would still need support parameters would parameter overrides passed test component", "d": "7/2016"}, {"body": "think bug fill expected behavior observed behavior give minimal repro", "d": "7/2016"}, {"body": "change testbrowserapplicationproviders testbrowserdynamicapplicationproviders good", "d": "7/2016"}, {"body": "static content projection ie resolved compile time", "d": "7/2016"}, {"body": "vicb got would better suited use case", "d": "7/2016"}, {"body": "check remember question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2016"}, {"body": "vicb appologize support req comment following bug report thanks info", "d": "7/2016"}, {"body": "issue using could understand query encoder never called noticed calls internally actually creates new object angular without encoder", "d": "7/2016"}, {"body": "vicb could please assign seems complex try resolve", "d": "7/2016"}, {"body": "realized commit mentioned actually fix behavior well solve sorry wasting bandwidth", "d": "7/2016"}, {"body": "matsko could probably answer details general nothing plays well setting directly framework aware added content opaque blob angular", "d": "7/2016"}, {"body": "way push height computation back dynamic content added dom happening tick", "d": "7/2016"}, {"body": "benelliott way run application master fix issue may relative think already resolved since nt released yet test master want use master builds set contents include following let know works please", "d": "7/2016"}, {"body": "seems fixed thanks matsko", "d": "7/2016"}, {"body": "duplicate", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2016"}, {"body": "support request describing basic html feature standard browser nothing special", "d": "7/2016"}, {"body": "please reopen issue", "d": "7/2016"}, {"body": "adding short plunker would help us handle issue quicker", "d": "7/2016"}, {"body": "sorry hard reproduce plunker also random issue refresh goes away found another issue also points exact problem", "d": "7/2016"}, {"body": "provide valid repro code would help us handle issue quicker thanks", "d": "7/2016"}, {"body": "support question feature request investigated bit nt found anything possible provide explicitly adding providers bootstrap component something passed constructor parameters decorator way found instantiate component adding template another component passing attribute question example tests provide attribute selector necessary use additional test component wrap component actually tested", "d": "7/2016"}, {"body": "closing nt reproduce scenario plunker happy reopen one surfaces", "d": "7/2016"}, {"body": "pkozlowskiopensource think simple feature request question something already exists one provide provider gets injected constructor parameter decorated way know use way register provider passed constructor tested without need html", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2016"}, {"body": "please fill gh template creating new issue", "d": "7/2016"}, {"body": "dart forked stop using leading underscore remove lint check altogether right", "d": "7/2016"}, {"body": "could help transpiled code think keep whatever way end choosing would great consistency code base today", "d": "7/2016"}, {"body": "hey shadowmanu would mind reopen suggestion website repo", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "thanks reporting looks like posted docs repo closing", "d": "7/2016"}, {"body": "actually problem original router well", "d": "7/2016"}, {"body": "method takes two arguments use get parent params guard", "d": "7/2016"}, {"body": "mean works nt see couldnt array contains parameters", "d": "7/2016"}, {"body": "mainly would parameters name would cause problems route segments designed independent routerstate holding information traverse route tree get need could easy way get information future works currently", "d": "7/2016"}, {"body": "makes sense", "d": "7/2016"}, {"body": "looks like connection error anyway qs errors reported thanks", "d": "7/2016"}, {"body": "error found issue corporate proxy typings nt use proxy correctly using command prompt using git bash proxy variables set correctly resolved", "d": "7/2016"}, {"body": "girishjjain proxy variables set correctly use npm set npm set proxy", "d": "7/2016"}, {"body": "hmuschett suppose using cmd windows got working using gitbash bash creating bashrc file user directory c users bashrc file content export export using bash correctly uses proxy gets typings", "d": "7/2016"}, {"body": "components without selectors allowed need crosscheck improving error message component missing selector", "d": "7/2016"}, {"body": "cc tbosch", "d": "7/2016"}, {"body": "tbosch change default", "d": "7/2016"}, {"body": "maybe tue jul pm mi\u0161ko hevery notifications githubcom wrote tbosch change default receiving mentioned reply email directly view github mute thread", "d": "7/2016"}, {"body": "lowercase wed jul tobias bosch tbosch googlecom wrote maybe tue jul pm mi\u0161ko hevery notifications githubcom wrote tbosch change default receiving mentioned reply email directly view github mute thread", "d": "7/2016"}, {"body": "ngundefined", "d": "7/2016"}, {"body": "happy take service worker side", "d": "7/2016"}, {"body": "cookie operations need able accomplish meantime using postmessage coordination cooperating iframe document context", "d": "7/2016"}, {"body": "dup need enable full shadow dom load full polyfills lite angular nt yet support polymers dom api see example biggest limitations using polymer template elements ca nt passed polymer doesnadd template elements dom styling polymer elements parent components quite limited", "d": "7/2016"}, {"body": "please note also use closing duplcitae thanks zoechi", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2016"}, {"body": "sounds like", "d": "7/2016"}, {"body": "yes describe issue close issue duplication", "d": "7/2016"}, {"body": "yes please additional information plunker link please post comment", "d": "7/2016"}, {"body": "updated plunker got error accessing reproduces please ignore previous comment", "d": "7/2016"}, {"body": "reason callback invoked root zone workaround would wrap callback within current angular zone typescript subscribe zonecurrentwrap val gt consolelog val thisrxjsresponse val", "d": "7/2016"}, {"body": "oh found problem zonejs npmcdn giving us node version rather browser version patching xmlhttprequest", "d": "7/2016"}, {"body": "change script zone notice", "d": "7/2016"}, {"body": "hi issue configuration", "d": "7/2016"}, {"body": "please use add reaction feature initial comment instead", "d": "7/2016"}, {"body": "issue routerlink updating already fixed master second issue nt listen router events achieve want since parameters data url observables get new values pushed changes occur subscribe get updates url changes component reused", "d": "7/2016"}, {"body": "already fixed master good eta next npm release router currently blocking issue prevents updating router nt listen router events everywhere source done example fix mention like instead listening event said think somewhat weird listen either get notified route updated said think fix done directive applies non tags also still think far complicated listen router change event place fix angular manage maintain actual lifecycle component within scope route know exactly component might reused router fix additional events avoid seeing weird side effects way turn component reuse different routes make navigating construct new example use normal component lifecycle", "d": "7/2016"}, {"body": "eta next npm releasse need fix need use incremental build repos yes done places nt single components want use router events subscribe filter events event even old router parent component would reused listening instead case need reloaded since thing changing params get notified router nt need maintain separate lifecycle outside component one issues deprecated router component could nt component nt way turn component reuse currently", "d": "7/2016"}, {"body": "case need reloaded since thing changing params get notified problem since actively listening parameter change anyway already fully aware router presence gets parameter value knows handle changes properly handle however problem line suppose example requires service injected set component completely unaware router following separation concerns need know context used knows requires constructed everything configured case switching routes problem component gets properly created service instance created injected however switching various routes eg reused expected also everything inside realize lives completely separate context know route changed used router decided although completely different context instead able realize without actively listening router events even able receive new clean instance would required somehow reset service would also require service able router reusing components adding huge complexity application components dependencies reused component need aware capable possible reuse well", "d": "7/2016"}, {"body": "note problem every component state example component element user enter something already state component recreated something would actively reset state see example plunker example tell responsibility listen router events reset state", "d": "7/2016"}, {"body": "example provided nt want reset state way old router component would reset tree decisions one parameters changing caused cascading effect new router reusability emphasized agree instances want force reset route component hierarchy think opened separate issue instead debating back forth whether favor reusability reactivity", "d": "7/2016"}, {"body": "ran also", "d": "7/2016"}, {"body": "cc mprobst", "d": "7/2016"}, {"body": "rjamet rememberknow html sanitizer turns everything nonascii entity references seems overkill causing somewhat annoying spurious error messages aware browser want support gt would issues misinterpreting properly serialized assigning seems could well escape usual xmlhtml special characters", "d": "7/2016"}, {"body": "firov btw warning harmless cycling sanitization changes cyrillic characters proper encoded representation decimal entities annoying nt cause actual issues", "d": "7/2016"}, {"body": "mprobst yeah understand vital fully localized application party library uses html binding cause lot spam may opportunity silent warnings", "d": "7/2016"}, {"body": "firov ack something first person run think best bet simply escape unicode characters hopefully cover use cases reluctant make setting something like increases conceptual overhead every developer enable setting deferring decision whether safe friendly neighborhood security reviewer rjamet though", "d": "7/2016"}, {"body": "koto done prevent encodingrelated bugs general mxss concerns canonicalization useful securitywise rather keep place make sure step nt concern use firov probably warning needs fixing sure untangle safely encoding sanitization would probably mean second pass content since encoding appears done dom serialization step alternatively sanitizer could keep flag around sanitization turns true content removal sanitization let trigger warning might warn everything like mxss checks beginning would faster less likely affect security sounds like best solution relevant file", "d": "7/2016"}, {"body": "rjamet yes warning problem even visible developer mode", "d": "7/2016"}, {"body": "dup", "d": "7/2016"}, {"body": "design dom events bubble always angular involved way events nt bubble several similar issues already nt use dom event names custom events", "d": "7/2016"}, {"body": "thanks zoechi helping", "d": "7/2016"}, {"body": "duplicate", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "duplicate", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2016"}, {"body": "guess respectively", "d": "7/2016"}, {"body": "understanding new forms api docs required present control present used instead see fact plunk created successfully referencing controls however right change input field problem occur means either bind input field use instead addition given required understanding documentation still believe bug", "d": "7/2016"}, {"body": "achimha part documentation referring far see moment choice maybe missing something", "d": "7/2016"}, {"body": "referring ca nt find anything confirming understanding order get change detection require validation need present order create sufficient caused confusion accepts build control takes validators nt work sure working designed design adequate", "d": "7/2016"}, {"body": "understand far working intended name bit confusing actually neither create real form real controls input elements builds form model seen viewmodel form model tracks changes executes validation etc created model link input elements either using directive check docs dynamic forms shows lot stuff action still nt belong angular team know figured self reading docs source code official statement would probably good", "d": "7/2016"}, {"body": "created plunk issue binding works set work different behavior previous rcs could somebody forms team comment please", "d": "7/2016"}, {"body": "mixing template reactive driven concepts either build form model formgroup formcontrol use ngmodel plunker shows think team probably reconsider using completely different names two concepts maybe already working guess rule thumb use form model must also use reactive directives every input", "d": "7/2016"}, {"body": "well second thought think right last example work even though found explanation nt entering data model gets updated changing model effect", "d": "7/2016"}, {"body": "thanks information given need validation available options construct form know combination seems work use elegant methods also set get error set nt get error binding validation effect confusing", "d": "7/2016"}, {"body": "achimha luniclynx mentioned seems code sample mixing two forms strategies wo nt work using reactive form strategy eg directive must link form controls dom formgroup instance created component class way adding directive form control element dom attribute nt used initialize async data via something like http two choices use ngmodel oneway binding addition recommended update value imperatively using preferred see updated plunker hand want use templatedriven strategy use attribute template driven parent form tag create formgroup formcontrol instances need create class bind formgroup directive formgroup directive overwrite form creating ngmodel want normal form tag case said actually throwing error strategies mixed rather silently failing missing exception todo issue sorry confusion", "d": "7/2016"}, {"body": "achimha answer last question template driven approach use directives define validation like maxlength minlength pattern required using reactive approach need add validators form controls directly new formcontrol validatorsrequired", "d": "7/2016"}, {"body": "thanks lot clearer luniclynx correct custom angular validators go beyond standard html validators used template driven forms applied reactive forms hand means combined custom validators", "d": "7/2016"}, {"body": "exactly always build custom directives add custom validators formmodel look angular required attribute follow provider chain providers requiredvalidator const required validatorsrequired export const requiredvalidator provide ngvalidators usevalue required multi true", "d": "7/2016"}, {"body": "might fixed next release", "d": "7/2016"}, {"body": "yup duplicate", "d": "7/2016"}, {"body": "related seems plain javascript", "d": "7/2016"}, {"body": "behavior numberformatter angularcommonsrcfacadeintl intl api uses", "d": "7/2016"}, {"body": "jvelo could describe current expected behavior worrying implementation details thanks", "d": "7/2016"}, {"body": "vicb thanks described high level", "d": "7/2016"}, {"body": "thanks updated description good", "d": "7/2016"}, {"body": "vicb thanks quick response", "d": "7/2016"}, {"body": "like", "d": "7/2016"}, {"body": "yea proposing adding another argument method though leave comment", "d": "7/2016"}, {"body": "shim loaded rxjs router fixes issue sure rxjs router issue", "d": "7/2016"}, {"body": "fixed master ready next release see", "d": "7/2016"}, {"body": "thanks heads brandon sorry duplicate", "d": "7/2016"}, {"body": "please describe current behavior expect accurately thanks", "d": "7/2016"}, {"body": "mickylad actually intend close issue", "d": "7/2016"}, {"body": "zoechi woops nope coming back also nt supposed post comment trying figure best way explain problem", "d": "7/2016"}, {"body": "current behavior suppose exposes immutable twodimensional array bind array uses two nested iterate items inner array bind one inside modify one item means references item inner array contains array change angular calls creates new items inner array despite one changed creation new unmodified items seems unnecessary expensive large data sets expecteddesired behavior nt full understanding changes handled regards component lifecycle desired behaviour would one following item modified called new created item changed item modified called changed nothing else either way key point new created unmodified items modified inner array created another plunker case implemented item displays last call either timestamp first item first inner array modified every", "d": "7/2016"}, {"body": "hopefully bit clearer", "d": "7/2016"}, {"body": "interesting poc modified plunker slightly show working mutating list immutable objects onpush listitemcomponent seems best combination currently", "d": "7/2016"}, {"body": "thanks awerlang investigate use understand affects change detection component branches ignored unless change something would like make use general however nt seem actually help situation still left two plunkers original comment removing nt affect behaviour guess problem incorrectly detecting changes tracking nested components changes detected could nt see affected plunker either see different behaviour remove using mutable structures option although one trying avoid restricts use see plunker adding back stop changes detected nested components restriction would applied every component uses piece data multiple sets data affected going end lot mutable data floating round use sporadically", "d": "7/2016"}, {"body": "investigate use onpush understand affects change detection component branches ignored unless input change something would like make use general however nt seem actually help situation still left two plunkers original comment removing nt affect behaviour guess problem incorrectly detecting changes tracking nested components changes detected could nt see affected plunker either see different behaviour remove listitemcomponent agree angular decides needs update component children seems recreated everytime removing nt cause visual difference contents listitemcomponent would checked everytime nt input sure edge case stated usage immutable structures would make things faster really avoids change detection probes expense changes dom effects change detection determined data changed using mutable structures option although one trying avoid restricts use onpush see plunker adding back listlistcomponent stop changes detected nested components restriction would applied every component uses piece data multiple sets data affected going end lot mutable data floating round use onpush sporadically restriction every child onpush component must onpush components nt choice unable using onpush compatible mutable structures", "d": "7/2016"}, {"body": "restriction every child onpush component must onpush components nt choice unable using onpush compatible mutable structures sure problem nt want introduce mutable structures state end using selected components going nightmare keep track stated usage immutable structures would make things faster really avoids change detection probes expense changes dom effects change detection determined data changed agreed go far say poor performance handling changes compatible immutable data structures complex applications right nt think way possible keep track references child components smarter way", "d": "7/2016"}, {"body": "also reported back look like anything happened", "d": "7/2016"}, {"body": "thanks referencing issue least alone problem", "d": "7/2016"}, {"body": "mhevery give us indication whether plan side fix issue near future whether see intended behaviour fix nt difficult would give try would good get feedback original author starting work", "d": "7/2016"}, {"body": "recently merged pr seems related", "d": "7/2016"}, {"body": "clarify plunker provided shows routing auxiliary work", "d": "7/2016"}, {"body": "autopulous resolved", "d": "7/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "7/2016"}, {"body": "thnx zoechi grant work", "d": "7/2016"}, {"body": "takes link parameter passing results compile errors surprisingly even wrong link cause error console basically routernavigate complain given link valid invalid", "d": "7/2016"}, {"body": "sorry noise mixed something plunker still missing though current angular version router", "d": "7/2016"}, {"body": "navigating relatively need inject provide going docs soon ts constructor private router router private route activatedroute routernavigate target relativeto thisroute works routerlinks activatedroute implicit", "d": "7/2016"}, {"body": "think understood problem suggests bug navigate function using relative links navigation fails shows error however omit provide target existing invalid relative link throw error would expect navigate least throw error case relative missing understand link may fixed later versions check upgrade latest version closing issue", "d": "7/2016"}, {"body": "use changes rc likely great adjust slightly modifying application come long ways since beta", "d": "7/2016"}, {"body": "track progress towards looking milestones", "d": "7/2016"}, {"body": "angular version plunker repro seems using old please try latest version", "d": "7/2016"}, {"body": "true good plunker idea use latest version tested local server problem remains", "d": "7/2016"}, {"body": "use latest template", "d": "7/2016"}, {"body": "wow thank much new one problem still though", "d": "7/2016"}, {"body": "see tldr expected behavior last plunker empty btw", "d": "7/2016"}, {"body": "vicb every expressions template reevaluated every time although nt needed checked expressions also function like timetostring value case every time functions executed values reevaluated even changed every performance goes bad short period second interval timer ca nt remove situation removing function expressions ease performance", "d": "7/2016"}, {"body": "vicb need", "d": "7/2016"}, {"body": "humble opinion refdetach remove connection parent component entirely whether child change parent stay without dirtycheck detectchanges called child parent run dirtychecking update view time think mechanism really weird like child says hey parent changes nt want update view parent says ok changes check things changed update view except", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "thnx ericmartinezr", "d": "7/2016"}, {"body": "dupe", "d": "7/2016"}, {"body": "reported issue time ago buy got answer related hope get real solution", "d": "7/2016"}, {"body": "infamous error vein masks unguarded assignment errors", "d": "7/2016"}, {"body": "fredloney fixed already routet beta", "d": "7/2016"}, {"body": "nice thanks update", "d": "7/2016"}, {"body": "dup please see last comment error longer present master still see master get latest build router please provide plunker reproducing issue closing issue", "d": "7/2016"}, {"body": "temporary work around manually modified validatorsdts file angularforms module mentioned expecteddesired behavior section", "d": "7/2016"}, {"body": "fix released", "d": "7/2016"}, {"body": "actually appears problem dependent upon ngif async pipe ngif async pipe children", "d": "7/2016"}, {"body": "yes one works expected", "d": "7/2016"}, {"body": "already openedsorry closing", "d": "7/2016"}, {"body": "think want something like example updated yet called", "d": "7/2016"}, {"body": "use github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "7/2016"}, {"body": "ok thanks", "d": "7/2016"}, {"body": "nt enemy friends good luck framework", "d": "7/2016"}, {"body": "vicb asked repeat addition obvious joking enemies need tips improve angular fix bug", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2016"}, {"body": "need call inside component want controls status set touched example adding github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "7/2016"}, {"body": "sorry zoechi edited plunker looked added input still looks bug toucheduntouched state meant update blur click field field updated however actually type something field click toucheduntouched state update", "d": "7/2016"}, {"body": "throws exception blur handler nt work anymore change working desired please always check browser console", "d": "7/2016"}, {"body": "change thanks", "d": "7/2016"}, {"body": "assigned stephen changelog master robert current caretaker", "d": "7/2016"}, {"body": "complex actually need nt right thing would js let fixture buildercreatesync inputcomp fixturedetectchanges fixturewhenstable gt go way dom change data component need trigger event", "d": "7/2016"}, {"body": "juliemr supposed final solution honest hell super frustrating moment find randomly adding stuff calls point test passes confused", "d": "7/2016"}, {"body": "choeller discussing brainstorming get frustration", "d": "7/2016"}, {"body": "ie sob take look", "d": "7/2016"}, {"body": "cool beans yeah know horrors end users work forced use lt", "d": "7/2016"}, {"body": "yusijs amine probably issue stack chakra side cry reproduced edge", "d": "7/2016"}, {"body": "works fine edge far could tell app crashed random af error edge wasnt able test outside plunk", "d": "7/2016"}, {"body": "strange engine inside chackra code quite human readable sob sit wait fix issues", "d": "7/2016"}, {"body": "end check result valid date ie valid", "d": "7/2016"}, {"body": "silly ie", "d": "7/2016"}, {"body": "using may lead unpredictable results", "d": "7/2016"}, {"body": "new date strings work fine think", "d": "7/2016"}, {"body": "internally string input like case directly using new date string follow specs valid date chrome ff flexible inputstring format sure want touch input angular pipe suggest build custom filter normalize date input want support ie close issue", "d": "7/2016"}, {"body": "snippet javascript new regexp test datestring var dt datestringsplit tz todo keep utc mind return new date dt dt dt dt dt dt return new date datestring wether filter angular", "d": "7/2016"}, {"body": "info also fails latest safari shown better use safe formats", "d": "7/2016"}, {"body": "alright ps screw ie", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "see console output warning sanitizing html stripped content see", "d": "7/2016"}, {"body": "okay get component trust anything certain domains etc", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2016"}, {"body": "inject constructor wrap whatever previously returning inside necessary method class done", "d": "7/2016"}, {"body": "tried still nt work plunkr likely bug", "d": "7/2016"}, {"body": "check console log find one errors", "d": "7/2016"}, {"body": "ah figured sorry thanks", "d": "7/2016"}, {"body": "old npm version ok", "d": "7/2016"}, {"body": "yes current design difficult work different results navigate url refresh url makes required handle manually every single routerlink behavior inevitably incorrect one way see", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "please provide plunker repro", "d": "7/2016"}, {"body": "problem encountering well", "d": "7/2016"}, {"body": "hi hannahhoward think could look", "d": "7/2016"}, {"body": "added pr case helpful resolving", "d": "7/2016"}, {"body": "pretty sure kind error user side please provide minimal plunker reproduction scenario requested issue template otherwise actionable closed", "d": "7/2016"}, {"body": "router version u use issue element fixed", "d": "7/2016"}, {"body": "issue even changing angularrouter one", "d": "7/2016"}, {"body": "pkozlowskiopensource working well plunkr machine also clear cache nothing helps plunker working fine", "d": "7/2016"}, {"body": "working well plunkr machine afraid dig setup got side ca nt debug project till got reproduce scenario see bug much closing feel free reopen got minimal plunk demonstrating problem", "d": "7/2016"}, {"body": "zip send", "d": "7/2016"}, {"body": "nt need node server might need create deployable github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "7/2016"}, {"body": "sorry raising feature request angular pages run opening indexhtml instead node appjs raised feature request since question stack overflow said possible", "d": "7/2016"}, {"body": "added comment", "d": "7/2016"}, {"body": "angular currently requires nodejs served without server directly cnd aws etc simply true run angular application using web application server tools might require nodejs build platform together different topic closing nothing us", "d": "7/2016"}, {"body": "thank zoechi pkozlowskiopensource", "d": "7/2016"}, {"body": "nt actually added dom would want add", "d": "7/2016"}, {"body": "form value structure matching dom structure always reasons css styling avoiding divnestinghell something similar case want use works well", "d": "7/2016"}, {"body": "nt understand last comment", "d": "7/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem question also nt provide enough information provide support ask mentioned channels please provide details code demonstrates try accomplish", "d": "7/2016"}, {"body": "thnx zoechi", "d": "7/2016"}, {"body": "zoechi nt mind check link detailed code explanations", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "thank", "d": "7/2016"}, {"body": "vsavkin commit another error happening caused function token internal reference nt contained indexts please fix ps think routercompilerclii integration tests needed", "d": "7/2016"}, {"body": "current module ts import appmodule applicationref angularcore import browsermodule angularplatformbrowser import formsmodule angularforms import routermodule provideroutes angularrouter import commondirectives angularcommon import appcomponent appcomponent import heroescomponent heroescomponent import herodetailcomponent herodetailcomponent import approutes approutes appmodule modules browsermodule formsmodule routermodule providers provideroutes approutes directives commondirectives precompile appcomponent heroescomponent herodetailcomponent export class mainmodule constructor public appref applicationref apprefbootstrap appcomponent", "d": "7/2016"}, {"body": "workaround following use directly ts import appmodule applicationref angularcore import browsermodule angularplatformbrowser import formsmodule angularforms import routermodule provideroutes angularrouter import routes angularroutersrcrouterconfigloader import commondirectives angularcommon import appcomponent appcomponent import heroescomponent heroescomponent import herodetailcomponent herodetailcomponent import approutes approutes appmodule modules browsermodule formsmodule routermodule providers provide routes usevalue approutes directives commondirectives precompile appcomponent heroescomponent herodetailcomponent export class mainmodule constructor public appref applicationref apprefbootstrap appcomponent", "d": "7/2016"}, {"body": "find another bug declaration class nt constructor causes error use component appcomponentngfactoryts new thisparentinjectorget thisparentinjectorget thisparentinjectorget bug routerlinkts constructor commented", "d": "7/2016"}, {"body": "addition error occurs runtime works well existing router nt use", "d": "7/2016"}, {"body": "think exactly error message changes happen change detection called change detection explicitly notify change using actually supposed work without exception would great get confirmation otherwise documentation explicit", "d": "7/2016"}, {"body": "whole thing really confusing makes special neither behavior nt kind property setter mention concept change detection care detect thing looks lot like", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "nt explain anything states status quo shows another way delayupdating binding observable onetime", "d": "7/2016"}, {"body": "zoechi right supposed update context dirty checked change detection makes ngafterviewinit special neither ngoninit ngaftercontentinit behavior nt kind property setter runs change detection case executed content dirty checked mention concept change detection care detect error message nt think issue probably deserve better doc cc wardbell", "d": "7/2016"}, {"body": "documentation thing look angularframeworkcolored glasses bug likely implementation possible given set problems tries solve however nt seen proper explanation actually case alternatives worse number people constantly tripping detail ran mostly accidentally moved stuff needed access learn instead whatever want called component beginning lifetime nonobvious hardtocircumvent exception called component beginning beginning lifetime could nt get parameter nonbreaking change would hide actual ugliness like calling behind scenes give opportunity drop documentation close interface addition even without extra parameter could extend exception message something like try update bound values ngafterviewinit ngafterviewchecked link documentation nt know many common cases trigger exception least get learning quicker", "d": "7/2016"}, {"body": "could nt ngafterviewinit get parameter would hurt perf running change detection twice note still injecting changedetectionref component something promoted could extend exception message yep probably something better doc link form exception", "d": "7/2016"}, {"body": "could nt ngafterviewinit get parameter would hurt perf huh function passed parameter would equivalent would call actually want change bindings members hiding various possible workarounds already trigger second round change detection function would efficient way maybe even platform specific", "d": "7/2016"}, {"body": "function would efficient way maybe even platform specific would trigger change detection whole app far efficient", "d": "7/2016"}, {"body": "got feeling missing something fundamentally far understand things way change context triggering second round change detection workarounds one way case hopefully going learn something next case proposed parameter would make necessary second round change detection accessible without jumping many hoops", "d": "7/2016"}, {"body": "far understand things ngafterviewinit way change context triggering second round change detection correct workarounds one way workarounds necessary since people fail see singlepass unidirectional data flow good thing bringing following benefits ease reasoning gets changed application performance surely one check faster many soon start introducing params say hey run another round checks back angular algorithm drawbacks potential infinite loops perf penalty kind funny see people want unidirectional data flow benefits without less exciting properties yes unidirectional data flow makes app better need think structure slightly differently thing look angularframeworkcolored glasses bug angularspecific thing principle apply framework enforcing singlepass unidirectional data flow sure could done issue proposing would fundamental change design decision current design arbitrary rather response problems apparent multiple rounds change detection maybe rather expose functional use case others suggest best approach case closed imo", "d": "7/2016"}, {"body": "hmm definitely see point although still think arguments quite harsh onlyonce still nt really explain earlier hooks nt suffer within component could well called outside changedetection trigger another round means exactly one hook actually exists familiar current implementation might wishful use case layout calculations based member parts component think improving exception message documentation something done close promise remain silent", "d": "7/2016"}, {"body": "think could leverage couples interface meet usecase javascript root app component import component afterviewinit angularcore import behaviorsubject rxjsbehaviorsubject component selector myapp providers template hello name async directives export class app implements afterviewinit public name new behaviorsubject john public ngafterviewinit settimeout gt thisname next release candidate plunker", "d": "7/2016"}, {"body": "looked generated source code calling afai see entirely possible change semantics hook currently called directly guarded last step change detection instead direct function call within guard compiler could generate scheduling new task calls function runs second second change detection also possibility introducing new lifecycle hook new semantic scheduling task thus invoked dust settled pkozlowskiopensource reading comment see number things nt belong discussion given current implementation exaggerated possible run infinite loop guard already unidirectional data flow nothing break semantics data binding one round change detection many one two fundamental design change semantics ease use one lifecycle hook current implementation one call initial anything results changed bindings notably reacting members available time want manually trigger another round change detection likely hit couple walls way first time documentation needs call limitations carefully offer guidance run second round change detection need arises changed semantics two calls initial one together full freedom function comparable lifecycle hooks documentation needs call implementing hook perf implication running second change detection component nt implement hook perf implication compiler would generate code needless say pro changed semantics much easier develop perf implications small local tried find actual implementations github mostly trivial implementations wrong implementations initialized class member luckily value set ngbootstrap succeed avoiding hook altogether entire angular repository besides integration tests", "d": "7/2016"}, {"body": "mention required manual change detection turn docs would enough", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "link breaking change info", "d": "7/2016"}, {"body": "found problem default exports one per module modules export single values popular nodejs community also common frontend development often constructorsclasses models one model per module ecmascript module pick default export important exported value default exports especially easy import downgrading latest ts app works fine", "d": "7/2016"}, {"body": "guess depends settings running typescript beta", "d": "7/2016"}, {"body": "ts buidler forced add default keyword statement export default class appcomponent application throws errors found metadata downgrading ts removing default keyword works fine possibly ts version reason see reason behavior", "d": "7/2016"}, {"body": "like work better long term solution quick note get fakeasync case working calling end", "d": "7/2016"}, {"body": "closing related angular", "d": "7/2016"}, {"body": "fails silently passing error would nt mean nt want use", "d": "7/2016"}, {"body": "one sure used let say misspelled function html would expect notified function using nt exist unless misunderstood use trackby thanks", "d": "7/2016"}, {"body": "let say misspelled function html would expect notified function using nt exist js dynamic language method added context time probably likely happen rather ts implement request use case would supported agree use case probably something never would deviate js behavior wdyt one sure trackby used trivially catch test ides also help understand angular maybe kind template linter", "d": "7/2016"}, {"body": "apply functions including event handlers got npe consistent goes user expectations", "d": "7/2016"}, {"body": "take look angular cli sets complete karma unit testing environment", "d": "7/2016"}, {"body": "nt use angular cli want integrate core project without cli", "d": "7/2016"}, {"body": "fine use angular cli setup template project", "d": "7/2016"}, {"body": "event categorized support request likely closed since bug angular better asking question gitter chat room", "d": "7/2016"}, {"body": "yes agree already asked question stackoverflow still nt got help anyone", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2016"}, {"body": "according docs component hook", "d": "7/2016"}, {"body": "dzmitryshylovich called get console also docs", "d": "7/2016"}, {"body": "expected behavior query direct children rationale might know inner component implementation affected", "d": "7/2016"}, {"body": "dealing recently sure bug way expressing intent case root home catch redirect ideally would pointing sorts edit fan work btw", "d": "7/2016"}, {"body": "thank kind words perhaps limitation routing system mean literal way judgemental way personally think chaining would nice means modules remain decoupled example happens core route changes every route logic handling usecases change code seems like would cleaner able chain redirects case everyone routed let say engineering team nt implement try something like would nt possible current mechanics anyway making case feature", "d": "7/2016"}, {"body": "bennadel router support cascading redirects apply one redirect level case last route matched router redirect url imo supporting cascading chained redirects creates router configurations trivial understand result confusing behavior experimented option decided think practice reasons use usually achieve result without example configuration probably want case look like could provide realworld examples would necessary use cascading redirects lot use cases might useful revisit decision", "d": "7/2016"}, {"body": "vsavkin say redirects apply mean something like would work includes chainedredirect different levels mean sorry actually tested", "d": "7/2016"}, {"body": "bennadel yup works", "d": "7/2016"}, {"body": "vsavkin ah gotcha ok able avoid multiple redirects single level", "d": "7/2016"}, {"body": "vsavkin clear redirect chain original example nt work level right", "d": "7/2016"}, {"body": "bennadel yup correct might revisit behavior future realworld use cases justifying closing issue", "d": "7/2016"}, {"body": "example pro tip", "d": "7/2016"}, {"body": "ok thanks seems really obvious look api docs", "d": "7/2016"}, {"body": "learned kara fatal flaw first proposal would require take dependency clearly ca nt developer almost always choose load pay price get must still developer choice ca nt require one possibility create new project call one requisite dependencies exposes toy aka experimental bootstrap apps still broken lands short term fix easy ca nt teach proper bootstrapping include explicitly provide lot immediate guidance people upgrading right toy aka experimental bootstrap effectively useless might well delete done", "d": "7/2016"}, {"body": "guess make argument favor exposing developers new concepts early personally think hold next rc release concept final state think fair incrementally roll experimental product beta phase point think term rc used loosely book rc version fighting chance getting released named release candidate soon fifth iteration rc nt seem like stop anytime soon vote publish proposed api changes hold releases things stable figured think get intention behind partial releases adds lot overhead documentation training efforts developer also find frustrating keep rewriting code late release cycle", "d": "7/2016"}, {"body": "commenting released yet concerns current master branch discuss week clarify lands", "d": "7/2016"}, {"body": "working alternative tried entry level bootstrap may suitable alternative import bootstrap angularplatformbrowserdynamic import formsmodule angularforms import appcomponent appcomponent bootstrap appcomponent modules formsmodule yes still breaking change requires update everyone bootstrap pretty lightweight postpones day someone learn create new class also small step anyone previously using bootstrap providers array think developers would appreciate explicitness choice feel like step especially learn add ambient directives way", "d": "7/2016"}, {"body": "summary conversation decided keep ngmodel forms module ngmodel used forms input form controls makes logical sense part forms module ngmodel makes sense using template driven forms available application uses template driven forms appmodulesngmodules able make ngmodel visible within application module using simple import need list ngmodel everywhere improve ergonomics internal argument ngmodel lot implementationlevel dependencies things forms module extracting possible two implementation one core one forms recipe problems ongoing discussion making possible use banana box syntax input fields without ngmodel reach consensus work feature", "d": "7/2016"}, {"body": "great summary igorminar agree decision want background opinions wrote extended explanation point view google doc", "d": "7/2016"}, {"body": "plunker reproduce problem", "d": "7/2016"}, {"body": "see links homeabout homecontact work link simply home", "d": "7/2016"}, {"body": "route shows contains nt matching child route added default child route switched work locally well use server supports", "d": "7/2016"}, {"body": "zoechi know fix adding dummy child component said original report nt need add pointless child component link directly parent link directly home load nothing routeroutlet current behaviour completely unintuitive insane", "d": "7/2016"}, {"body": "moved back ngrxrouter angularrouter simple setup worked work", "d": "7/2016"}, {"body": "think dub issue opened days ago", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "pascalprecht wardbell think still working expected built master usecase still nt work also added comment get feedback yet changing implemented unittest really use provided values also still lets test fail see", "d": "7/2016"}, {"body": "right filed issue based several days later yes choeller mine dup sorry nt see plunker focused", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "local issue", "d": "7/2016"}, {"body": "heyooooooooooooooooo", "d": "7/2016"}, {"body": "u nt like j caps something huh", "d": "7/2016"}, {"body": "mahpah plz reconsider looking way mak open source dependable", "d": "7/2016"}, {"body": "please stop spamming", "d": "7/2016"}, {"body": "pkozlowskiopensource sure open source", "d": "7/2016"}, {"body": "need starters", "d": "7/2016"}, {"body": "plz help like anything let know begin", "d": "7/2016"}, {"body": "dude", "d": "7/2016"}, {"body": "css shimming still supports think issue code please create issue attaching plunker minimal amount code reproduce thanks", "d": "7/2016"}, {"body": "vicb yes use something deprecated really answer besides use thing break code eventually opting turn encapsulation entirely kind defeats point seems angular emulate shadown dom applying customselector every single element css selector chain instead first one would sufficient targeting makes impossible target child components component encapsulation turned despite fact child component inside current one make sense point purely design discussion happy file ticket somewhere sure people consider use cases currently seeing literally impossible override styles child component elements within scss file parent due encapsulation works since child component elements get custom selector applied css", "d": "7/2016"}, {"body": "laytonglympse implemented angular related chrome actually deprecated whether chrome deprecates effect app long using", "d": "7/2016"}, {"body": "test behavior see said decide whether right rkirov mhevery think", "d": "7/2016"}, {"body": "could make option default would false breaking change", "d": "7/2016"}, {"body": "think word gives away hence host selected nt see need select yes bug", "d": "7/2016"}, {"body": "accessing tag part earlier design selfonly modifier needed directives tag already available regular injection", "d": "7/2016"}, {"body": "possibly issue", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "intended behavior required attribute boolean attribute specified element required values true false allowed boolean attributes represent false value attribute omitted altogether instead use", "d": "7/2016"}, {"body": "yes checked attrrequired works intended believe one closed", "d": "7/2016"}, {"body": "obvious also still think behavior incorrect required property input element allowed make suggested binding could also set code input element without using directive would expect expect nginvalid get applied result angular interepreting property updated plunker see none three actually right thing explanation blue bar right represents presence required attribute element green red presence either ngvalid nginvalid respectively could probably use solution workaround nt really care set initial state stress point think bug behave differently especially usage encourage docs properties like hidden also happen angular defines directive selector maybe anuglar selector syntax allow applying directives binding assigned info use case happening try create dynamic form using ad required validator apply required attribute input element tried binding described way adds required validator implicitly matter directive hope explains detail section show hide validation error messages", "d": "7/2016"}, {"body": "looks like dup", "d": "7/2016"}, {"body": "zoechi related yes duplicate quite", "d": "7/2016"}, {"body": "nt think one fixed use case user optionally mark form field required support want conditionally apply required control validator dom attribute set isrequired false control still invalid turn makes whole form invalid", "d": "7/2016"}, {"body": "use case", "d": "7/2016"}, {"body": "scenario like variables come service need support asynchronous compilation first case might want disable initial compilation css retrieve data service trigger compilation want forgot mention need control initial compilation tried use resolver router nt seem effect css compilation second case variables change eg want change theme want able trigger recompilation solution make styles observable recompile automatically somebody updates something array mostly care first case second nice difference code link call parsemeta asynchronously", "d": "7/2016"}, {"body": "sounds similar", "d": "7/2016"}, {"body": "entirely since updating css entirely solved use css variables course variables declared import would fine first usecase import hit service get right variables", "d": "7/2016"}, {"body": "please provide plunker", "d": "7/2016"}, {"body": "probably accessing external domain see", "d": "7/2016"}, {"body": "please provide plunker requested", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter support request", "d": "7/2016"}, {"body": "closing seems support request please feel free reopen pareddown plunker confirm bug", "d": "7/2016"}, {"body": "rjamet", "d": "7/2016"}, {"body": "little paranoid files allowing csslike htmllike content never really looked closer turns allowed subset tagsrules restricted safe set spec seems designed free security concerns tests chrome ff browsers either ignore get right downgrading url sounds good", "d": "7/2016"}, {"body": "awesome", "d": "7/2016"}, {"body": "agreed", "d": "7/2016"}, {"body": "thinking appmodule package guess core team considered name", "d": "7/2016"}, {"body": "package collides npm package considering ngmodule instead appmodule take feedback consideration", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter support request", "d": "7/2016"}, {"body": "iirc due limitation able solve priority", "d": "7/2016"}, {"body": "kemsky typescript allows implement classes follows still though fixed confusing change disappointing dart related", "d": "7/2016"}, {"body": "reproduced ie", "d": "7/2016"}, {"body": "chatting guys chakra gitter channel think might internationalization api", "d": "7/2016"}, {"body": "yeah implementation internationalization api really weird even allow pollyphil different implementations maybe worth reproduce separately file bug probably one single components add redundant utf char bet year component", "d": "7/2016"}, {"body": "fyi temporary workaround force rerendering component injecting component calling callback", "d": "7/2016"}, {"body": "tomsdev fully safe without using settimeout vsavkin also noticed problem probably related one data updated press back button nt manually trigger change detection pressing back button view nt update properly", "d": "7/2016"}, {"body": "reason unrelated router closing issue", "d": "7/2016"}, {"body": "problem npmcdn zonejs loading node version rather browser version related", "d": "7/2016"}, {"body": "change right version exactly local machine actually using webpack system js using imports repo issue persists", "d": "7/2016"}, {"body": "using webpack inputs good", "d": "7/2016"}, {"body": "would happy attempt pr implement feature maintainer feels feature reasonable give bit guidance might implemented", "d": "7/2016"}, {"body": "wildcard matching already", "d": "7/2016"}, {"body": "sorry clarified looked closely dupe issues came across describes looking specifically named params mistake think example makes wildcard part path anonymous", "d": "7/2016"}, {"body": "correct named parameter retrieving path used wildcard still available", "d": "7/2016"}, {"body": "dup", "d": "7/2016"}, {"body": "reproduction problem bobbywarnerquickstart please put minimal plunker hard timeconsuming us debug full projects", "d": "7/2016"}, {"body": "sure angular quickstart app one commit shows changes demonstrate problem thought would better plunker happy create plunker prefer", "d": "7/2016"}, {"body": "property never populated always undefined", "d": "7/2016"}, {"body": "chance ant", "d": "7/2016"}, {"body": "vicb awesome works thanks", "d": "7/2016"}, {"body": "plunker magic", "d": "7/2016"}, {"body": "think problem mixing templete driven model driven forms please remove html templete put form builder", "d": "7/2016"}, {"body": "work remove required attribute markup course breaks styling relies required attribute ie ngvalid required nt see make difference types validators used async validator add item errors array control nt make difference added immediately delay", "d": "7/2016"}, {"body": "async validators nt start sync validators returned invalid state rely case form minlength validator valid control value empty async validator start working return valid state nt know mixing template model validators good path see nt work expected think validation one place html template form model", "d": "7/2016"}, {"body": "problem async validator run form initialization async validator result apparently result considered control state even though required minlength failed removed required attribute add dummy attribute get css work form controls nt see reason nt worked first place", "d": "7/2016"}, {"body": "jeffbcross could take look tested http module", "d": "7/2016"}, {"body": "believe code needs header stringify working post sample", "d": "7/2016"}, {"body": "thelgevold well issue header makes example work supposed breaking change nt required", "d": "7/2016"}, {"body": "prior required add header stringify commit handles json object payloads looks like current master broke commit", "d": "7/2016"}, {"body": "indeed due implementation function convert json old implementation new json isstring thisbody return jsonparse thisbody whereas old one convert json object string new one convert json object therefore intended pass json object string request update staticrequestts change return json text value", "d": "7/2016"}, {"body": "vicb tested angularmodules angular line become intend convert json objects string passed request body want fix let know", "d": "7/2016"}, {"body": "cassand yep pr would great thanks also probably need fire server tests yet another pr", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "pkozlowskiopensource ok required load files traditionally incl would loaded internally default could loaded default well dependencies would builtin specific loader settings could done internally configuration necessary headache wasted third party library advanced programmers could still override defaults angularjson configuration file programmers would feasible sufficient load jqlite automatically present inside unless full jquery optionally loaded first", "d": "7/2016"}, {"body": "pkozlowskiopensource would much like issue kept open readers open source share opinion", "d": "7/2016"}, {"body": "systemjs would loaded angular default zonejs could loaded default well dependencies systemjs loaded default bundling app using webpack alternative systemjs could also suit single file needs", "d": "7/2016"}, {"body": "absolutely writing placeholder loader system might feel appropriate using within", "d": "7/2016"}, {"body": "settrend asking containing bundle approach angularjs thing trends tools approaches changed many ways bundling loading ca nt force users one particular path top different browsers need different polyffils ca nt bundle would much like issue kept open readers open source share opinion feel free continue discussion present nothing actionable us reason keep issue open", "d": "7/2016"}, {"body": "pkozlowskiopensource forcing providing simple default approach rad polyfills required loaded dynamically internally within code nothing keeping detecting environment runtime loading appropriate polyfills loaders online even locally included package thus trends potentially always followed creating publishing new release programmer would satisfied defaults provided utilized could use future configuration file eg angularjson opt external loaders polyfills anything else", "d": "7/2016"}, {"body": "see systemjs required default part angular swapped alternatives corejs zonejs included default stable browser released run angular without corejs shim mostly confused care zonejs especially since written angular team seems like implementation detail someone raise bug using either packages situations angular team would want bug reproduced using included dependencies opinion", "d": "7/2016"}, {"body": "settrend connelhooley think igor comment pawel pointed explains ca nt done easily maybe time future could change previous comment importing code igor import zonejs application like loading prolyfill late means part environment module loader wo nt oversight zonejs things might seem work sooner later run issues updates ui stop happening wo nt know reason better always include polyfills module loader systemjs application code recommend loading zones first script indexhtml sums need user manually insert prior angular ca nt simply included inside angular needs polyfilled browser prior angular even part picture since zones wraps around xhr timeouts browser events angular hooks entire zone system changedetection etc course things work using systemjs want alternative suggest using webpack instead look vendorbrowserts amp polyfillsbrowserts webpack starter see zone reflect included files none things webpack told bundle files amp inject index page specific order like manually systemjs thing happens different way everything works see either way need thing many different ways achieving", "d": "7/2016"}, {"body": "ah ok makes lot sense thanks explaining nt see comment pawel linked", "d": "7/2016"}, {"body": "markpieszak pkozlowskiopensource connelhooley would much prefer issue reopened would nt required mention everyone thread sure understand reasoning behing current design keeping inside angular code instead starting right code requires prerequisites nt start loader nothing else loading frameworks normally booting like", "d": "7/2016"}, {"body": "loader code would basically look like would plain old javascript html inserts poji loading prerequisite modules might similar would optional course configuration would default built", "d": "7/2016"}, {"body": "two ways navigation using router navigate url takes provided url navigates navigate using delta always take delta apply current url navigate result url correct behavior always preserve aux route fact case repo bug fixed master fixed master clear aux route need one following works master updated api docs make clearer closing issue", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter support request", "d": "7/2016"}, {"body": "fix plunker reproduce issue", "d": "7/2016"}, {"body": "brandonroberts plunker fixed", "d": "7/2016"}, {"body": "u need test env btw point converting observable promise", "d": "7/2016"}, {"body": "dzmitryshylovich right thnx helping issues much appreciated", "d": "7/2016"}, {"body": "docs repo", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "settrend nt issue angular rather docs part repository please create issue angulario repository per dzmitryshylovich comment", "d": "7/2016"}, {"body": "dzmitryshylovich skreborn ah see thanks valuable hint bouquet nonmember angular development nt aware differentiation", "d": "7/2016"}, {"body": "u use component inheritance nt see basecomponent router config file", "d": "7/2016"}, {"body": "exactly example childcomponent basecomponent processcomponentts import component angularcore import basecomponent helpersbasecomponent import componentservice servicescomponentservice import navigationservice servicesnavigationservice import appcomponent appcomponent import broadcaster servicesbroadcaster import loaderservice servicesloaderservice component selector process template require processcomponenthtml providers navigationservice componentservice export class processcomponent extends basecomponent constructor componentservice componentservice navigationservice navigationservice broadcaster broadcaster loadersrv loaderservice super componentservice navigationservice broadcaster loadersrv components extending one parentcomponent basecomponentts", "d": "7/2016"}, {"body": "nt support component inheritance", "d": "7/2016"}, {"body": "interesting dear dzimitry get work possible controlled screensize navigations inheritance components check code basecomponent constructor inherited childentities nt want argue say also told stackoverflow believe guys somebody explain app still works besides ngondestroything edit maybe angular team implemented part prospective inheritance model", "d": "7/2016"}, {"body": "suggest u redesign app avoid component inheritance much possible", "d": "7/2016"}, {"body": "dzmitryshylovich using component inheritance really supported", "d": "7/2016"}, {"body": "ok changed every single childcomponents inherit basecomponent even deleted basecomponent still nt trigger ngondestroy even exact behaviour like inheritance got example new children processcomponentts import component oninit ondestroy angularcore import menuitem modelsmenuitem import componentservice servicescomponentservice import navigationservice servicesnavigationservice import appcomponent appcomponent import broadcaster servicesbroadcaster import loaderservice servicesloaderservice component selector process template require processcomponenthtml providers navigationservice componentservice export class processcomponent implements oninit ondestroy constructor componentservice componentservice navigationservice navigationservice broadcaster broadcaster loadersrv loaderservice let items new array let parent componentservicegetparentpath locationpathname navigationservicegetsidenavigation parent subscribe x gt items xmap gt new menuitem yname yurl ychildren broadcasterbroadcast sidenavigation items children broadcasterbroadcast screensize screen sure componentinheritance working new release candidate component inheritance working dangerous use use risk", "d": "7/2016"}, {"body": "works simple use cases u use inheritance risk", "d": "7/2016"}, {"body": "ok thank inheritance components nt trigger ngondestroy", "d": "7/2016"}, {"body": "try update latest router version would great see plnkr reproduction", "d": "7/2016"}, {"body": "dzmitryshylovich said please provide plunker minimal amount required code reproduce issue thanks", "d": "7/2016"}, {"body": "templates bind component instances panel nt exist inside component", "d": "7/2016"}, {"body": "understand workaround simple still would expect full support typescript use enums around model bringing template convert feel right", "d": "7/2016"}, {"body": "see docs template expressions litany reasons templates support subset javascript templates binding component instances makes sense see html gets compiled regular javascript modules code modules external component module ca nt bind arbitrarily defined symbols like enum", "d": "7/2016"}, {"body": "thanks link since design closing issue happy though", "d": "7/2016"}, {"body": "issue sure angular issue going dev tools options disabling source maps followed reenabling fixes issue certain amount time version", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter support request", "d": "7/2016"}, {"body": "support request bug reporting", "d": "7/2016"}, {"body": "snarechops nt inject authguard service logincomponent might problem firing event anything else would picked zone detection change authenticated boolean nt seen need event propagate front end", "d": "7/2016"}, {"body": "sanderelias correct injecting login component property accessing simple mechanism recreate authentication scenario sure part even needed recreate issue far event event button calls method logincomponent triggers full navigation change using loads new components logincomponent gets destroyed page renavigate back logincomponent means change picked issue value instead toolbarcomponent working value set construction component change code path application occurring believe angular router correctly activating toolbarcomponent navigation occurs particular scenario full application also see dashboardcomponent get activated correctly either enough show something happening without submitting reproduction repo large reasonably quickly combed angular team member", "d": "7/2016"}, {"body": "snarechops nt issue router need remove longer needed removed sample repo works intended", "d": "7/2016"}, {"body": "closing issue issue router", "d": "7/2016"}, {"body": "brandonroberts confirmed removing fixed issue thank", "d": "7/2016"}, {"body": "case problem occurs every form loading database entity idproperty causing updatevalue crash would cool unknown values ignored", "d": "7/2016"}, {"body": "create formcontrol id nt show form", "d": "7/2016"}, {"body": "yeah right quite ugly", "d": "7/2016"}, {"body": "also problematic add fields database document cause app unexpectedly crash returns additional properties without checking", "d": "7/2016"}, {"body": "thanks reporting known issue addressed", "d": "7/2016"}, {"body": "awesome would helpful", "d": "7/2016"}, {"body": "similar issue linking following route works fine following function route also works fine access directly browser however try link path routerlink property binding fails", "d": "7/2016"}, {"body": "dup", "d": "7/2016"}, {"body": "sorry dup nt find anyway fixed write disabledeprecatedforms instead disabledeprecatedforms bootstrap method closing", "d": "7/2016"}, {"body": "never mind fix issue body returning null case need check body removed line went well hence closing issue", "d": "7/2016"}, {"body": "also problem nt wrote value ngmodel binding become checked true", "d": "7/2016"}, {"body": "use prefix native attributes case", "d": "7/2016"}, {"body": "thanks dmaywork", "d": "7/2016"}, {"body": "please try simplify plunker minimal amount code required reproduce issue", "d": "7/2016"}, {"body": "new plunk hope simplified enough", "d": "7/2016"}, {"body": "issue fixed master", "d": "7/2016"}, {"body": "please note modules still experimental likely change cut tue jul brandon notifications githubcom wrote issue fixed master receiving assigned reply email directly view github mute thread", "d": "7/2016"}, {"body": "new design doc ca nt access link", "d": "7/2016"}, {"body": "landed master", "d": "7/2016"}, {"body": "search components inheritance repo full see inheritance nt really work", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "zoechi rationale seems solid seems like duplicate issue", "d": "7/2016"}, {"body": "eeee", "d": "7/2016"}, {"body": "eeee", "d": "7/2016"}, {"body": "design router module registered root level ie lazyloaded modules provision routes create routers main reason router uses global resource location must one router system", "d": "7/2016"}, {"body": "bug typescript least keeps abstract properties definitions emitting dts files idea stripping conceptually stripping abstract properties wrong produces wrong type shape abstract base class maybe alexeagle knows", "d": "7/2016"}, {"body": "think change landed npm yet kara confirm", "d": "7/2016"}, {"body": "see files snapshots abstract methods strip keywords files publishing npm available typescript still ga version expect users depend strip keyword whole method declaration agree jasonchoimtt looks like version skew dts files published nt reflect api change", "d": "7/2016"}, {"body": "check operator", "d": "7/2016"}, {"body": "familiar however point needing renderer serverside rendering", "d": "7/2016"}, {"body": "thought issue made little helper directive cause fknop said easy use fromevent since nt want access dom directly right way would use example click event exactly framework support would much prefered would awesome use template get dom event observables easily get eventhandlers thinking end event name make compiler create observable rather register event handler directly obviously programmatic access wesleycho asked would also beneficial", "d": "7/2016"}, {"body": "see would cover functionality planned", "d": "7/2016"}, {"body": "actually proposing imperative feature given possible bind events imperatively would allow matching api observables example consider bootstrap scroll spy one would want throttled event listener preference would one event listener perhaps making use declarative api like suggested could work although guessing negative ramifications perfwise due multiple observables created element spied may acceptable though single event listener used event listener sits top level component added service api nt seem integrate well accessing dom outside directive would mean would probably handled service order accomplish throttling instead able make use observables one would move throttle implementation inside event listener would happy whatever solution adopted amp approach blessed", "d": "7/2016"}, {"body": "use event instead", "d": "7/2016"}, {"body": "thanks lot answering much fast works fine", "d": "7/2016"}, {"body": "looks like duplicate closing please track issue", "d": "7/2016"}, {"body": "docs repo", "d": "7/2016"}, {"body": "thanks", "d": "7/2016"}, {"body": "please follow template creating issue helps developers community help nt issue angular rather question usage please ask appropriate channel", "d": "7/2016"}, {"body": "thnx skreborn", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "take look blog post", "d": "7/2016"}, {"body": "wow von victor berchet mailto notifications githubcom gesendet mittwoch juli angularangular angular noreplygithubcom cc author author noreplygithubcom betreff angularangular bad nongeneric typings closed receiving authored thread reply email directly view github mute thread", "d": "7/2016"}, {"body": "issue closed real pain everytime using angularmethod cast right type generics would much easier", "d": "7/2016"}, {"body": "bluefalcon looks like using new forms module code tests tests throwing add following spec file tests throw error ts import disabledeprecatedforms provideforms angularforms beforeeachproviders gt disabledeprecatedforms provideforms closing seem bug", "d": "7/2016"}, {"body": "kara thanks tip know beforeeachproviders deprecated well went ahead added following see still getting exception tried everything loss suggested actually tried still error figured nt needed beforeeach gt mocksettingservice new mocksettingservice addproviders disabledeprecatedforms provideforms provide settingservice useclass mocksettingservice formbuilder coughcough helps provideforms parenthesis provideforms works", "d": "7/2016"}, {"body": "related angular looks like rxjs issue would nice see plnkr reproduction", "d": "7/2016"}, {"body": "uhm retry ca nt replicate error pure rxjs let close issue thanks reply anyway dzmitry exact situation also involves use let try create plunker idea quickly get angular seems included sure", "d": "7/2016"}, {"body": "pr fixes issue routerlink aux routes case", "d": "7/2016"}, {"body": "ericmartinezr maybe fix issue", "d": "7/2016"}, {"body": "fixed next release router fix", "d": "7/2016"}, {"body": "rajjejosefsson seems problem plunker linked looking mainjs file nt exist angular code nt running show issue reproduce issue fresh plunker", "d": "7/2016"}, {"body": "kara go", "d": "7/2016"}, {"body": "thanks rajjejosefsson looks like nt provided new forms module turned default need add lines bootstrap maints ts import disabledeprecatedforms provideforms angularforms bootstrap appcomponent disabledeprecatedforms provideforms see updated plunker closing nt seem bug please feel free reopen missing something encounter additional issues", "d": "7/2016"}, {"body": "difference way ngrxrouter angularrouter work ngrxrouter runs guards path traversal level path candidate guard fails longer considered valid path angularrouter traverses paths first runs guards see activation occur achieve result angularrouter using guard child route plunker demonstrating", "d": "7/2016"}, {"body": "brandonroberts thanks taking time respond repeatedly specify guards really want run whole subtree great perhaps could guard enforcement strategy already concept path matching strategy could extended cover route guards canactivate candeactivate one strategy could boundary guards called navigation crosses route tree another could subtree guards called navigation occurs within route branch", "d": "7/2016"}, {"body": "daotoad pr landed come next release handle situation", "d": "7/2016"}, {"body": "next release router support canactivatechild handle use case closing issue", "d": "7/2016"}, {"body": "issue ie", "d": "7/2016"}, {"body": "issue set ngmodel null work good chrome ieedge always selected first value ca nt handling event ngmodelchange user change new value", "d": "7/2016"}, {"body": "validator nt async need use ngasyncvalidators instead ngvalidators since using ngvalidators validation actually error nt know handle promise flipsside returning async validator return promise ca nt return null like nonasync validator hopefully save somebody ton time", "d": "7/2016"}, {"body": "yes good catch ngasyncvalidators trick closed", "d": "7/2016"}, {"body": "thanks closing", "d": "7/2016"}, {"body": "definitely looks like angular prematurely removing ngclass styles note bug appears dynamic styles static styles appear work correctly ie changing plunker srcappts line typescript hello world typescript hello world shows desired outcome course static styling op wants dynamic ngclass styles work", "d": "7/2016"}, {"body": "pkozlowskiopensource cleanup classes end element destroyed", "d": "7/2016"}, {"body": "pr fixes issue", "d": "7/2016"}, {"body": "matsko think might leftover times caching views tobias introduced one point memory nt fail dig needed", "d": "7/2016"}, {"body": "name already nt like prefix eg harder read assuming suffix calling makes sense package named rename also rename already existing factories said also cache ie like lazy getter factory would vote adding inline eg jquery style getters users used remove waiting async initializers would mean deprecating ie logging warning used eventually waiting right would still stay async calls runtime compiler vs still used switch implementation details eg whether use proposed remove use flag compiler instead change would taken least days still make nothing final idea always returns value however purpose simpler make lock run mode first call automatically see current implementation ie right empty therefore deprecated still servers purpose switching run mode router depends abstract class allows users access runtime compiler application created runtime compiler throws otherwise line changes make private api provide tokens allow users use runtime compiler loaded see eg router uses provider default merging loaders one maybe add getter abstract class determine whether runtime compiler available upgrade adapter modules see declaration upgradeadapterbootstrap add additional modules array annotation", "d": "7/2016"}, {"body": "cc mhevery", "d": "7/2016"}, {"body": "maybe confused supposed also undefined typescript example remove imports references everything works", "d": "7/2016"}, {"body": "types exist compile time using since using modules nt need use", "d": "7/2016"}, {"body": "ah makes sense thanks brandonroberts", "d": "7/2016"}, {"body": "fixed angular team u trying access object prop via string literal forbidden tslint config try", "d": "7/2016"}, {"body": "dzmitryshylovich right nothing use whatever type want", "d": "7/2016"}, {"body": "vicb dzmitryshylovich get point angular anything tslint errors however led antonybudianto error official angulario documentation documentation least warn message probably explain fix misleading newcomersbegginers", "d": "7/2016"}, {"body": "wembernard documentation issues maintained", "d": "7/2016"}, {"body": "alternative would imho uphill battle devs moving learn ts time ts fast moving project well nt usually check doc wonder prominent link angulario first time user ts know google head stackoverflow simple things like frustrating", "d": "7/2016"}, {"body": "thanks tip rixrix nt know could really useful", "d": "7/2016"}, {"body": "wembernard welcome", "d": "7/2016"}, {"body": "win prize free copy angular", "d": "7/2016"}, {"body": "captaincodeman thx", "d": "7/2016"}, {"body": "sure picker talking thing repo try figure right repo reopen issue", "d": "7/2016"}, {"body": "oh wow sorry wrong tab", "d": "7/2016"}, {"body": "error message plunker", "d": "7/2016"}, {"body": "uhm", "d": "7/2016"}, {"body": "uhm chrome please remember specify browser creating issue", "d": "7/2016"}, {"body": "mlaval could please take look ms bug", "d": "7/2016"}, {"body": "vicb error comes directly browser browserspecific sense edgespecific happens chrome better err message edge could easily reproduced outside angular could look attribute names collecting host bindings provide better error message look tomorrow", "d": "7/2016"}, {"body": "checked chrome indeed error message much much much better something bad happens angular edge always faced totally useless error stack trace zonejs thought way get developing still weakest evergreen browsers", "d": "7/2016"}, {"body": "pkozlowskiopensource would great thanks", "d": "7/2016"}, {"body": "canactivate guards checked top deepest child route following may help problem however implicitly forces hierarchical access rights export const routes routerconfig path canactivate authguard children path component dashboardcomponent path tools component toolscomponent children path toola path home component homecomponent unguarded path login component logincomponent unguarded", "d": "7/2016"}, {"body": "ettoredn currently want comes put authguard every single route ideally want put something like globalcanactivate apply every child route snippet gave would work lock portion website example someone nt logged wont access anythign nt home login want lock pages peruser basis come back put guard every route even child tools locked nt put guard toola b moment someone access tools access tool unless guard tool individually might say pure laziness end believe makes cleaner code greatly simplifies possible refactoring might case change authentication system decide unlock certain sections lock others", "d": "7/2016"}, {"body": "think similar issue looks like already pr include canactivatechild next version router", "d": "7/2016"}, {"body": "canactivatechild exactly want merged master weeks ago next release router contain already use use nightly build closing issue", "d": "7/2016"}, {"body": "agree think zonejs effect angular inside invisible outside", "d": "7/2016"}, {"body": "hi critical issue", "d": "7/2016"}, {"body": "wow looking fix exactly problem", "d": "7/2016"}, {"body": "zonejs prolyfill needs global however transparent impact code using zones concrete scenarios case please create issues share reproduction already tracking interop issues via bugs", "d": "7/2016"}, {"body": "marlowp would mind reopening website tutorials live", "d": "7/2016"}, {"body": "ah bad raised issue correct place thanks", "d": "7/2016"}, {"body": "read chapters pipes change detection pure impure pipes", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter support request", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "igorminar fix petebacondarwin case time look overnight", "d": "7/2016"}, {"body": "also curious ci nt catch", "d": "7/2016"}, {"body": "look one hour", "d": "7/2016"}, {"body": "issue fixed see please run update latest version meanwhile change angulario dependency see", "d": "7/2016"}, {"body": "wardbell naomiblack please confirm resolved thanks", "d": "7/2016"}, {"body": "works installing dgeni repo sha close", "d": "7/2016"}, {"body": "closing fixed", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "thnx ericmartinezr", "d": "7/2016"}, {"body": "loadasroot works wire everything manually want use anyway dcl deprecated search repo loadasroot issues full", "d": "7/2016"}, {"body": "ericmartinezr thanks encounter issue", "d": "7/2016"}, {"body": "cc jelbourn", "d": "7/2016"}, {"body": "reproduce", "d": "7/2016"}, {"body": "findings generating file asks", "d": "7/2016"}, {"body": "cc chuckjaz", "d": "7/2016"}, {"body": "please note nt test covering usage", "d": "7/2016"}, {"body": "misbehavior confirmed app using router ie try running documentation router demo best run setup also see plunker launch ie supposedly also fails safari set address bar displays crisis center click heroes link press backspace key browser back equivalent observe crisis center component displayed none contents called click crisis center link works rumor problem traced zones zones hack something calling tick fix", "d": "7/2016"}, {"body": "also happy hear ideas keep things nicely encapsulated lowboilerplate nt love solution", "d": "7/2016"}, {"body": "one vote sticking status quo three evils magical least intrusive guess like best explicit gives explain probably still nt know really unless thinking hard rererereading docs", "d": "7/2016"}, {"body": "discussed thread conclusion going prepare pr introduces function user call set add burden user understand needs called removes lot magic makes methods encapsulated gives us room nicely modifying wo breaking changes final", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "would like always synchronous since storing info set later lets nested inside multiple blocks use latest created every time called could get weird side effects creating module", "d": "7/2016"}, {"body": "juliemr thanks understand", "d": "7/2016"}, {"body": "dupe", "d": "7/2016"}, {"body": "duplicate", "d": "7/2016"}, {"body": "working intended offline compiler support generating code components reference directives lists whose value determined dynamically references", "d": "7/2016"}, {"body": "create plunker reproducing issue", "d": "7/2016"}, {"body": "go plunker example", "d": "7/2016"}, {"body": "thanks confirmed bug meantime recommend using store snapshot params", "d": "7/2016"}, {"body": "aaah see never ever write directly otherwise angular screw thanks hint mate fixed nevertheless bet iam dummy makes mistake", "d": "7/2016"}, {"body": "nt think issue router treats types parameters matrix query way structurally checks two objects router emit event identity query params object matter check plunker see works click around see something like anytime value changes new event emitted closing issue", "d": "7/2016"}, {"body": "looks like nt understand issue correctly real issue accident mutate params reopening issue", "d": "7/2016"}, {"body": "flexible hardcoded value think take look could enhanced", "d": "7/2016"}, {"body": "good way handle issue without additional dependencies probably test killed change something hardcoded", "d": "7/2016"}, {"body": "plan come pr", "d": "7/2016"}, {"body": "need check value maybe would sufficient", "d": "7/2016"}, {"body": "vicb sure working chuckjaz well ok least better nothing sweatsmile", "d": "7/2016"}, {"body": "suddenly made trip gmt locale laptop suddenly build machine exact locale bad cry", "d": "7/2016"}, {"body": "update", "d": "7/2016"}, {"body": "upgrading nt see warning console log sure actually fixed would also like know purpose precompile array", "d": "7/2016"}, {"body": "took patrickjs advice update seemed fix issue well however warning put someone team warn upcoming requirement precompile array main question well source notes precompile array seems roadmap directives spec order optimize loading child components filed issue insure team plan make precompile array optimization completely separate router parent component would hardcoded child components router supposed abstract", "d": "7/2016"}, {"body": "fixed clarification behavior precompile array router", "d": "7/2016"}, {"body": "see yet documented warning commented track issue referenced see thr issues involved docs read thinking behind precompile property", "d": "7/2016"}, {"body": "thank ericmartinezr clears lot piecing together docs new property component decorator introduced refer component types whose componentfactory resolved runtime based information factoryresolver generated maps component types componentfactory per component mapping used inside component components used template component factoryresolver accessed via di within component metadata help want automatically populate templatecache runtime compilation want generate single stylesheet application router version support added calculating precompile based providers needed router called analyzeforprecompile router configuration usually provided via helper function creates provider special token via compiler encounters token analyze value deeply look referenced components component references treated user put property", "d": "7/2016"}, {"body": "nicolasjhampton might provide additional insight", "d": "7/2016"}, {"body": "issue fixed master compiler look routes prefill precompile array something funky compiler figure list component precompile array closing issue", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "thnx ericmartinezr", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "thanks ericmartinezr", "d": "7/2016"}, {"body": "ok figured problem problem allow upgrades app bootstrapped unfortunately requires know components upgraded upfront app bootstrapped working plunker component loaded dynamically preupgraded upgrade adapters needs allow dynamic upgrades", "d": "7/2016"}, {"body": "fixed locally code plunker local fix upgraded components resolved fix app already bootstrapped resolve components upgrade immediately function name thisdowngradedcomponentshasownproperty name return thisdowngradedcomponents name type else thisdowngradedcomponents name new name thisdowngradedcomponents name return thisdowngradedcomponents name type igorminar appreciate someone angular team promote code", "d": "7/2016"}, {"body": "please provide plunker allows reproduce", "d": "7/2016"}, {"body": "drager could provide plunker reproducing issue", "d": "7/2016"}, {"body": "yeah fix one soon possible", "d": "7/2016"}, {"body": "following aux route child need express url putting slash", "d": "7/2016"}, {"body": "vsavkin thanks reply leads another error already tried add outlet level tree possible get scenario working idea", "d": "7/2016"}, {"body": "please use dedicated support forum types questions see", "d": "7/2016"}, {"body": "works designed default observing references values object want observe content object need side check ngclass directive example", "d": "7/2016"}, {"body": "set import disabledeprecatedforms provideforms angularforms bootstrap appcomponent disabledeprecatedforms provideforms solve problem see plunker see also official documentation", "d": "7/2016"}, {"body": "thanks roberto worked perfectly sorry avoidable question however probably helps others solve issue", "d": "7/2016"}, {"body": "hi added steps maints still submit button fired times", "d": "7/2016"}, {"body": "hi think open stackoverflow question post code", "d": "7/2016"}, {"body": "k", "d": "7/2016"}, {"body": "hi u check question", "d": "7/2016"}, {"body": "try", "d": "7/2016"}, {"body": "thanks replying unfortunately nt work", "d": "7/2016"}, {"body": "please provide plunker allows reproduce problem", "d": "7/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem nt think support question actual bugmissing feature please provide plunker demonstrates try accomplish", "d": "7/2016"}, {"body": "dup", "d": "7/2016"}, {"body": "closing issue duplicate", "d": "7/2016"}, {"body": "duplicate please open issue go response subsequent issues like one closed without comment", "d": "7/2016"}, {"body": "nt think would work animations far work elements view directives nt view issue though add possibility animate element", "d": "7/2016"}, {"body": "thank much eric fro reply whats best way want make reusable animations apparently seems n components requires slide updown animation write animation n times ie component correct believe ability define animations structural directive would embrace reusability animations think", "d": "7/2016"}, {"body": "one answer matsko may give good answer", "d": "7/2016"}, {"body": "even though directives attached view still able place animations host element attached say example wanted create directive manipulate animations use using css classeskeyframes within possible css parser integrated example show useful make directive manages animations", "d": "7/2016"}, {"body": "set animation hooks properties within nt much work getting work", "d": "7/2016"}, {"body": "thank much matsko reply looks really exciting please also create plunker", "d": "7/2016"}, {"body": "hey repo website would mind reopening", "d": "7/2016"}, {"body": "nt know bug also problem getting error access website smartphone android using network", "d": "7/2016"}, {"body": "maybe know issue closed maybe solution found problem none browsers open page mobile seems issues network", "d": "7/2016"}, {"body": "closed repo framework website check issue case helps", "d": "7/2016"}, {"body": "thank really solve issue", "d": "7/2016"}, {"body": "please use dedicated support channel types questions see", "d": "7/2016"}, {"body": "think bundle application wish", "d": "7/2016"}, {"body": "dupe yeah needs fixed us time invest labyrinththemed maze package bundling achieve decent loading times angular", "d": "7/2016"}, {"body": "us time invest labyrinththemed maze package bundling achieve decent loading times angular worth reason nt bundle rx bring extra dependencies may need would course increase loading time nontrivial solve keep everyone happy like many things optimizing future bundling going away continue optimize case allows smaller package sizes rxjs currently ship systemjs bundle bundlesrxjs file would give dependencies angular needs well entire rx library", "d": "7/2016"}, {"body": "honestly rxjs umd bundling issue solved specifically eliminates many concerns systemjs seems lowest barrier entry works pretty well box great", "d": "7/2016"}, {"body": "please use appropriate support channel types questions", "d": "7/2016"}, {"body": "tested working custom app module loader using function instead string changes needed", "d": "7/2016"}, {"body": "novoxudonoser opened another instead closing one looping nothing else issue close", "d": "7/2016"}, {"body": "navigating button click handler return false handler probably better return false handler markup tho", "d": "7/2016"}, {"body": "use ngsubmit best way handle form submissions far", "d": "7/2016"}, {"body": "fknop thanks reply case going redirect one route sameother wanted submit form dzmitryshylovich using nt get work", "d": "7/2016"}, {"body": "use tag set options see case nt need tag remove works fine find official updated plunker example", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "introduces security checks dynamically injected html see detailed info parse amp show checkbox html template wo nt happen default using way trying use playing fire securitywise article linked provides instructions bending default behaviour", "d": "7/2016"}, {"body": "yes checked works case anybody wants solution", "d": "7/2016"}, {"body": "likely additional value logged console chrome devtools hitting", "d": "7/2016"}, {"body": "dup make sure latesr router bera iirc", "d": "7/2016"}, {"body": "issue fixed jamesmanning using latest version router", "d": "7/2016"}, {"body": "vsavkin sorry ericmartinezr right dupe", "d": "7/2016"}, {"body": "please note content attribute seems right although seems always content root component closest parent host attribute right one element seems style compiled using content everywhere putting break point styles loaded running following javascript works basically replacing styles work obviously right fix", "d": "7/2016"}, {"body": "also note works expected exact app dynamic compilation", "d": "7/2016"}, {"body": "button offline compiler still generated shim style instead", "d": "7/2016"}, {"body": "changing set shim strictly false fixes problem seems like gathering using metadata properly view encapsulation", "d": "7/2016"}, {"body": "chuckjaz could please take look seems like issue static reflector always metadata", "d": "7/2016"}, {"body": "root cause metadata file nt contain values working fix", "d": "7/2016"}, {"body": "designed http get support body hence angular http support either", "d": "7/2016"}, {"body": "iirc rfc prevent get request body practice servers support", "d": "7/2016"}, {"body": "coming unintuitive see example seems default behavior attach query params able buy get query params setting property obviously sometimes good thing nt done default makes clear current behavior wrong currently pages behave differently depending user navigated navigate app root get page outer router links created app start query param attached reload page common say bookmark page looks identical url outer router links query params may something different clicked", "d": "7/2016"}, {"body": "vsavkin believe assessment made issue similar one query params meant global shared thus persist incorrect rfc means query part url contains data serves identify resource therefore apply resources linked also goes fragment tied primary resource loaded current route directive links resources besides case browsers would carry query string parameters current url anchors page like default scheme host port leading path dealing relative urls case browsers wo nt scheme host port etc explicitly defined anchor url overrides default behavior fine would best acceptable carry query fragments like link resource therefore route current one bearing given data imo special case would make confusing best would carry allow user set router link desired thoughts", "d": "7/2016"}, {"body": "agree query params persisted url across routes desired main goal query params available components regardless route could could something someone could implement custom url serializer", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "7/2016"}, {"body": "zoechi done", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "pointing says angular still development okay feature ready use telling bit confusing since deprecated version worked understand guys dealing lot issues well development want clear guidance especially code simply nt correct", "d": "7/2016"}, {"body": "nt provide plunker also many known issues even though heavily used therefore looks like issue support question github issues right place question posted one channels mentioned see also example", "d": "7/2016"}, {"body": "okay posted bug previous version worked broken bug question though hoping could get advice nt using component properly however nt telling also original post received response said use alternate method actually listed examples posted sorry unable produce plunker demonstrate problem work would help project working large include example read many pages subject several days posting issue including ones pointing see many issues surrounding code trying use also tried many ways fix issue instead immediately posting bug post issue even though still strongly feel bug question", "d": "7/2016"}, {"body": "also part complexity reproducing small example plunker use spinner page occurs data fetched whole reason spinner first place try mock small working meaningful example", "d": "7/2016"}, {"body": "use case migrated dynamiccomponentloader back posting case clues may find helpful", "d": "7/2016"}, {"body": "thank nt see search earlier clues always help", "d": "7/2016"}, {"body": "unfortunately break article demonstrates code using thanks attempting help anyway thelgevold", "d": "7/2016"}, {"body": "please reopen", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "see set strategy values state intended used strategy", "d": "7/2016"}, {"body": "sorry vic dont understand nothing mentioned change applies release notes configure component check regards", "d": "7/2016"}, {"body": "ca nt strategies supoorted right default onpush ones never meant public iirc", "d": "7/2016"}, {"body": "seems support question suggest ask appropriate channel worth angular package", "d": "7/2016"}, {"body": "nt really understand problem comes neither based textual description please provide minimal reproduce scenario using plunker requested issue template otherwise actionable closed", "d": "7/2016"}, {"body": "reproduce plunkr likely something ts angular versions perhaps closed come back reproduce", "d": "7/2016"}, {"body": "observed problem really difficult trace injector problem large project almost impossible build dependency tree manually transitive dependencies come play something indexts reexports perhaps order exportimport affected direct exportimport works directives reexported within single array like got undefinedunresolved services solved using reexport additional indexts", "d": "7/2016"}, {"body": "kemsky totally right comes circular dependencies rearrange services works", "d": "7/2016"}, {"body": "please provide plunker next time reproduces error anyway sounds like support question suggest move appropriate channel", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter support request", "d": "7/2016"}, {"body": "validation error nt pass relevant use case", "d": "7/2016"}, {"body": "zoechi think problem neither valid html snippets according would like use instead warning attribute ngfor serializable xml error attribute ngfor allowed element li point error attribute template allowed element li point honestly think adds complexity source compliant generated page", "d": "7/2016"}, {"body": "cc pkozlowskiopensource could please take look", "d": "7/2016"}, {"body": "zoech skreborn issue addressing template attribute nt always work data prefix standard angular allows us use prefixes needed html files thereby avoid validation issues prior rendering validation tests opinion angular attributes able fully support prefix way way template attributes became part html elements specs functionality would nt break production environment years", "d": "7/2016"}, {"body": "please use vor angular also provide plunker reproduce issue thanks", "d": "7/2016"}, {"body": "using router purpose two routes empty path", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter support request", "d": "7/2016"}, {"body": "design directive marks routerlink active contained urltree since root always contained need use mark active current url exact match routerlink url", "d": "7/2016"}, {"body": "brandonroberts many thanks nt know exact option solves issue perfectly close issue", "d": "7/2016"}, {"body": "please reopen", "d": "7/2016"}, {"body": "great thanks looking docs", "d": "7/2016"}, {"body": "please reopen", "d": "7/2016"}, {"body": "dynamiccomponentloader deprecated since afaik check new stuff use componentresolver viewcontainerref directly c dynamiccomponentloader", "d": "7/2016"}, {"body": "good morning thank quick reply see examples use componentresolver viewcontainerref ended getting error could using correctly sample code sample place correct usage components described thanks bill thu jul pm codespicelabs notifications githubcom wrote dynamiccomponentloader deprecated since afaik use check new stuff use componentresolver viewcontainerref directly c dynamiccomponentloader thu jul pm borangejabil notifications githubcom wrote submitting check one x x bug report feature request support request gt please submit support request instead see expecteddesired behavior currently working project upgraded angular beta rc upgrade ability dynamically add remove simple component simple spinner page process loading data worked fine using service sinnerservicets import injectable dynamiccomponentloader applicationref elementref componentref angularcore import spinner spinner injectable export class spinnerservice spinnercomp componentref constructor private componentloader dynamiccomponentloader private appref applicationref public start let elementref elementref thisappref rootcomponents location return thisstartinside elementref null public startinside elementref elementref anchorname string let spinnerref anchorname thiscomponentloaderloadnexttolocation spinner elementref anchorname thiscomponentloaderloadnexttolocation spinner elementref spinnerrefthen compref componentref gt thisspinnercomp compref public stop thisspinnercomp thisspinnercompdispose current behavior upgrade changes made class match changes made angular resulting file causes exception occur shown underneath updated code sinnerservicets import injectable dynamiccomponentloader applicationref viewcontainerref componentref angularcore import spinner spinner injectable export class spinnerservice spinnercomp componentref constructor private componentloader dynamiccomponentloader private appref applicationref public start let elementref viewcontainerref thisappref rootcomponents location return thisstartinside elementref null public startinside elementref viewcontainerref anchorname string let spinnerref anchorname thiscomponentloaderloadnexttolocation spinner elementref thiscomponentloaderloadnexttolocation spinner elementref spinnerrefthen compref componentref gt thisspinnercomp compref public stop thisspinnercomp thisspinnercompdestroy error exception error uncaught promise typeerror locationcreatecomponent function exception error uncaught promise typeerror locationcreatecomponent functionbrowser domadapterlogerror stacktrace browserdomadapterlogerror error uncaught promise typeerror locationcreatecomponent function resolvepromise resolvepromise zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue xmlhttprequestzonetaskinvoke browserdomadapterlogerror unhandled promise rejection locationcreatecomponent function zone angular task promisethen value typeerror locationcreatecomponent function consoleerror error uncaught promise typeerror locationcreatecomponent function lot reading experimenting tried different approach using componentresolver unfortunately also gave error code sinnerservicets import injectable dynamiccomponentloader applicationref viewcontainerref component componentref componentresolver componentfactory viewchild angularcore import spinner spinner injectable export class spinnerservice spinnercomp componentref constructor private componentloader dynamiccomponentloader private appref applicationref private resolver componentresolver public start let elementref viewcontainerref thisappref rootcomponents location return thisstartinside elementref null public startinside elementref viewcontainerref anchorname string let spinnerref anchorname thiscomponentloaderloadnexttolocation spinner elementref thiscomponentloaderloadnexttolocation spinner elementref spinnerrefthen compref componentref gt thisspinnercomp compref let spinnerref thisresolverresolvecomponent spinner spinnerrefthen factory componentfactory gt thisspinnercomp elementrefcreatecomponent factory public stop thisspinnercomp thisspinnercompdestroy error exception error uncaught promise typeerror elementrefcreatecomponent function exception error uncaught promise typeerror elementrefcreatecomponent function browserdomadapterlogerror stacktrace browserdomadapterlogerror error uncaught promise typeerror elementrefcreatecomponent function resolvepromise zonedelegateinvoketask objectoninvoketask zonedelegateinvoketask zoneruntask drainmicrotaskqueue xmlhttprequestzonetaskinvoke browserdomadapterlogerror unhandled promise rejection elementrefcreatecomponent function zone angular task promisethen value typeerror elementrefcreatecomponent function consoleerror error uncaught promise typeerror elementrefcreatecomponent function consoleerror event hub started expected behavior class work upgrade ie able add remove basic component simple spinner service page loading data via service motivation use case changing behavior seems like vital part angular framework seems depeicated explanation replacement please tell us environment angular version browser chrome latest version language typescript receiving subscribed thread reply email directly view github mute thread lt receiving authored thread reply email directly view github mute thread", "d": "7/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem see full example", "d": "7/2016"}, {"body": "hi vacation week chuckjazz comments posted intended bug thanks bill", "d": "7/2016"}, {"body": "think chuckjaz referring comment tbosch right related issue", "d": "7/2016"}, {"body": "thought wanted sure", "d": "7/2016"}, {"body": "sorry confusion typo issue reference caused update bug accidentally", "d": "7/2016"}, {"body": "worries things happen", "d": "7/2016"}, {"body": "left open tbosch review fix", "d": "7/2016"}, {"body": "tbosch could change fix following keep ts emitter ie emit return type given output ast stay sync codegen places omitting type means also nt type outputastfunctionexprdynamictypeodynamictypeofnmapnestedviewscompilequeryts", "d": "7/2016"}, {"body": "see contains recommended fix reverts previous fix keeps test changes", "d": "7/2016"}, {"body": "fixed router import via", "d": "7/2016"}, {"body": "fixed via plunker works correctly", "d": "7/2016"}, {"body": "ptomaszi try injecting router calling", "d": "7/2016"}, {"body": "approutests file import providerouter routerconfig angularrouter import welcomecomponent index export const routes routerconfig path welcome component welcomecomponent export const approuterproviders providerouter routes inject appcomponent import approuterproviders approutes export class appcomponent implements afterviewinit constructor private router approuterproviders brandonroberts help much appreciated", "d": "7/2016"}, {"body": "ptomaszi inject js import router angularrouter export class appcomponent implements afterviewinit constructor private router router routerinitialnavigation", "d": "7/2016"}, {"body": "brandonroberts thanks quick responses unfortuanatelly router object provide initialnaviagation method access following properties createurltree events navigate navigatebyurl parseurl resetconfigs routerstate serializeurl url using wrong version router updated today use following version angularrouter", "d": "7/2016"}, {"body": "ptomaszi marked internal removed access private method", "d": "7/2016"}, {"body": "brandonroberts following error comes app component initialised constructor method called call initialnaviagtion private method router yet available injected", "d": "7/2016"}, {"body": "ptomaszi deprecated disclaimer subject change since using ngupgrade need override plunker", "d": "7/2016"}, {"body": "brandonroberts solution works expected solution provided temporary approach router releases", "d": "7/2016"}, {"body": "guess invalid filling instead fine well none filled invalid", "d": "7/2016"}, {"body": "zoechi think validity linked validity group validity affected validity controls necessarily valid controls valid", "d": "7/2016"}, {"body": "think current behaviour correct formgroup logical container formcontrols controls happen invalid group invalid default wrote validator situation similar one describe least one control inside group value think instance makes sense handle validation group level individual control falsy necessarily invalid control care group valid least one control value validation individual controls still exist outside validation group", "d": "7/2016"}, {"body": "maybe excluding one helps avoid validation", "d": "7/2016"}, {"body": "seeing well nt want call manually tests part testing properly handle actual simplechanges objects angular would send us workaround wo nt help case", "d": "7/2016"}, {"body": "browser issue chrome linux always returns also nt emit events firefox least returns also nt get events", "d": "7/2016"}, {"body": "zoechi true chrome returns true false regularly checked several times see compatible table", "d": "7/2016"}, {"body": "got printed console every seconds even offline mode firefox binding view shows state updated fine", "d": "7/2016"}, {"body": "zoechi nt intend argue course chrome latest version think works reproduce open plunkr active internet connection open chrome dev tools every print true console disconnect computer internet seconds see prints false console back true reenable internet connection", "d": "7/2016"}, {"body": "incorrectly updating binding component", "d": "7/2016"}, {"body": "thanks awerlang solution works explain difference", "d": "7/2016"}, {"body": "close issue case", "d": "7/2016"}, {"body": "inside points component browser environment update field wrong context prefer call method like another arrow function important get right know keyword recommended reading", "d": "7/2016"}, {"body": "need set controlvalueaccessor provider caadatepicker like const caavalueaccessor provide ngvalueaccessor useexisting forwardref gt caadatepicker multi true component line providers caavalueaccessor export class caadatepicker implements controlvalueaccessor", "d": "7/2016"}, {"body": "sounds like support question asked using appropriate support channel", "d": "7/2016"}, {"body": "mahpah thanks nt work import component forwardref angularcore import ngmodel controlvalueaccessor ngvalueaccessor angularforms const noop gt const caavalueaccessor provide ngvalueaccessor useexisting forwardref gt caadatepicker multi true component selector caadatepicker template providers caavalueaccessor export class caadatepicker implements controlvalueaccessor private value pkozlowskiopensource opinion nt know maybe bug component builded based community also updated still see error understand place report bugs please try also understand community place often answer check bugs list use community channel sometimes difficult find good place help like know bug bug base docs community support something nt work", "d": "7/2016"}, {"body": "jaroslawziolkowski believe bug please provide minimal reproduce scenario mean lt loc put plunker things requested part ca nt copy amp paste code expect people help based", "d": "7/2016"}, {"body": "pkozlowskiopensource provided code show code nt exists mix imports new old forms also make sense provide mimum next comment provide code probably imported something", "d": "7/2016"}, {"body": "use caadatepicker completely correct see plunkr btw agree pkozlowskiopensource support question nt", "d": "7/2016"}, {"body": "please provide plunker allows reproduce template", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "intended behavior query params global persisted routes", "d": "7/2016"}, {"body": "step click crisis center login query params show different behavior gone think work well rule", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "error overridedirective supported implementation testcomponentbuilder known limitation implementation fixed future release juliemr vikerman info add", "d": "7/2016"}, {"body": "opened question stackoverflow found using viable workaround anything know class also change documented changelog", "d": "7/2016"}, {"body": "post well breaking change test providers give default setting test eg using lists provided angular fix problem example", "d": "7/2016"}, {"body": "pretty much testsetup async import setbasetestproviders angularcoretesting import testbrowserdynamicplatformproviders testbrowserdynamicapplicationproviders angularplatformbrowserdynamictesting setbasetestproviders testbrowserdynamicplatformproviders testbrowserdynamicapplicationproviders", "d": "7/2016"}, {"body": "bolza interesting getting default see rest setup repository use overrides things could searching see anything special setup might overriding test providers somehow", "d": "7/2016"}, {"body": "could please simplify example least amount code required reproduce issue provide plunker thanks", "d": "7/2016"}, {"body": "closing repro provided", "d": "7/2016"}, {"body": "digged inside problem little kind race condition happening perflogmetricts condition fails first run timeline illustrate problem logging events readperflog see logged different browser pid events aggregated interesting pid changed right event logged maybe happening early", "d": "7/2016"}, {"body": "feature", "d": "7/2016"}, {"body": "feature", "d": "7/2016"}, {"body": "proposed router state could access", "d": "7/2016"}, {"body": "piling nt opinion save navigation operator aka null conditional operator work primary source idea net places nullconditional operator exhibits shortcircuiting emphasis mine immediately following chain member accesses element accesses invocations executed original receiver null example essentially equivalent except evaluated member accesses element accesses invocations immediately following executed unless nonnull emphasis mine course nullconditional operators chained case need check null chain", "d": "7/2016"}, {"body": "nullconditional operator safe navigation operator emphasis mine think consistent languages", "d": "7/2016"}, {"body": "nullconditional operator safe navigation operator emphasis mine called nullconditional operator wiki vicb refer code snippets different languages wiki page nt give context nested properties look like rather exist swift groovy know sample synchronousstatic verify still even always null", "d": "7/2016"}, {"body": "hey wait second wikipedia article cite says thing safe navigation operator also known optional chaining operator safe call operator nullconditional operator also cites approvingly net example importantly citations mute shortcircuiting betting least implement shortcircuiting see pascal said essentially thing please reopen reconsider least offer compelling answer", "d": "7/2016"}, {"body": "agree wardbell could look appreciate consistent consistent way nt make live developer easier", "d": "7/2016"}, {"body": "verify still article author name even author always null betting least implement shortcircuiting could look yes please look reopen needed ie behavior implemented langs", "d": "7/2016"}, {"body": "davideast know done swift verify expected behaviour", "d": "7/2016"}, {"body": "coffeescript short circuits see example jul pascal precht notifications githubcom wrote davideast know done swift verify expected behaviour receiving subscribed thread reply email directly view github mute thread", "d": "7/2016"}, {"body": "chuckjaz shows short circuiting norm reopening", "d": "7/2016"}, {"body": "sounds like reason button inside form type implicitly set submit zzzzboz says spec says first button input type submit triggered situation specifically set type button removed consideration browser", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "zoechi thanks lot solves browser thing angular specific issue close", "d": "7/2016"}, {"body": "please submit documentation issues also note output could also declared config prop decorator", "d": "7/2016"}, {"body": "assume route different ways accessing might variable route come might also none initial open browser via url input maybe historyapi cases would like transition feels like responsibility component example could handle click navigate via routerapi completing transition e g using reactivex", "d": "7/2016"}, {"body": "soo handled like controller intercepts route request animates say fade current page calls router api trigger new route animates new route view say least understood things nt work router guards ones attach canactivate candeactivate attached routes component animation components serial animation finish one start since routes ca nt exist time", "d": "7/2016"}, {"body": "could use custom routeroutlet adds removes animation completed supported box", "d": "7/2016"}, {"body": "going make scratch current project supports lazy loading router going risk losing feature making router think supported question ever", "d": "7/2016"}, {"body": "copy extend current routeroutlet manipulate createcomponentdestroy logic bit nt much going routeroutlet rather wait provided outofthe box fine well course", "d": "7/2016"}, {"body": "things think current apps time try make extending router meanwhile wait router native support", "d": "7/2016"}, {"body": "two pieces news using rolls possible animate routes via properties component void routeanimation true animations trigger routeanimation transition void gt component enters transition gt void component leaves class myroutedcomponent component routed need attach host animation property binding trigger transitions pr landed already fullfledged api get support animations sometime weeks ts apphtml appts component animations trigger routeranimations transition home gt query previous animate old page query next animate new page capturing backwards motion transition lt forums transition gt home class app", "d": "7/2016"}, {"body": "maybe transitions could defined state say defining transitions void void like", "d": "7/2016"}, {"body": "luchillo work nt forget referencing component data", "d": "7/2016"}, {"body": "sorry missed point reference components works route host bit lost mean part update sorry forgot read idea", "d": "7/2016"}, {"body": "explained better api could define animation outlet pages using entering leaving animations mandatory also define animation page component", "d": "7/2016"}, {"body": "hopefully week next week need every component routed want add animations get animations use url api wrote", "d": "7/2016"}, {"body": "since support question already posted point duplicating see", "d": "7/2016"}, {"body": "sounds like support question github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "7/2016"}, {"body": "solution inject constructor use call method get", "d": "7/2016"}, {"body": "way forgot add guys awesome work pure inspiration thank creation", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "seems debugger issue chrome functions called properties set correctly", "d": "7/2016"}, {"body": "reproduce plunker", "d": "7/2016"}, {"body": "best thing using slightly modified version familiar live demo router crisisadmincomponent uses canactivate check user logged changed one thing took inline html template put external file check network tab chrome dev tools click crisis admin tab start logged despite fact canactivate returns false implies component wo nt loaded html template file still gets requested safety reasons server protected folder inaccessible unless user logged keeping things secure backend frontend get unauthorized ideally html would nt requested prevent occur since canactivate returned false anyway making unnecessary allowing users access data probably nt", "d": "7/2016"}, {"body": "using offline compilation preferred way building angular apps templates get compiled js code bundled components words reference component template always reference way done guard put next guard returns false wo nt load children navigation fail created issue track work", "d": "7/2016"}, {"body": "upgrde router see also", "d": "7/2016"}, {"body": "looks like dup", "d": "7/2016"}, {"body": "right sorry closing", "d": "7/2016"}, {"body": "patching jasmine need use jasmine builtin methods jasmine nt instead info", "d": "7/2016"}, {"body": "please provide repro case plunker", "d": "7/2016"}, {"body": "believe fixed please reopen plunker otherwise", "d": "7/2016"}, {"body": "please provide minimal reproduce scenario plunker requested issue template otherwise actionable closed", "d": "7/2016"}, {"body": "pkozlowskiopensource changed nodejs version issues resolved plunker ca nt visit china", "d": "7/2016"}, {"body": "issue either following combination router", "d": "7/2016"}, {"body": "sounds like support question asked using appropriate support channel", "d": "7/2016"}, {"body": "ccing robwormald", "d": "7/2016"}, {"body": "may redundant data check params different component unloaded execute unwanted code paths see also router links include query params combination really confused first component unloaded called completely unwanted parameters", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "plunker", "d": "7/2016"}, {"body": "already opened problem solve importing injecting see another error plunker", "d": "7/2016"}, {"body": "ok plunker created example tied shows failure changing get working seemed like documentation issue since current behavior deviates way worked would seem like regression also since deviates way works nt appear work user would responsibly expect", "d": "7/2016"}, {"body": "works expected api doc detailed doc ready", "d": "7/2016"}, {"body": "also see manually change browser url instead navigating via anchor tag never seems take manual changes account", "d": "7/2016"}, {"body": "please provide plunker allows reproduce", "d": "7/2016"}, {"body": "primarynav also gets messed believe different issue", "d": "7/2016"}, {"body": "came across problem abled fix extending js import mockbackend mockconnection angular import readystate request response angular import baseexception angular import ispresent angular import issuccess angular class fixedmockconnection extends mockconnection export class fixedmockbackend extends mockbackend afterwards use instead regular tests happy turn pull request angular team thinks good approach", "d": "7/2016"}, {"body": "issue would like trigger error status code nt work status code checked also use method allow type opinion wrong observable type also allow type valid parameter type found separate issue type problem see moment possible use mock response errors special status value would like contribute solve issue clear way go fixed support type says use mocking errors use mocking success response check status code handle error automatically think needed anymore", "d": "7/2016"}, {"body": "facing issue temporary workaround come double cast type response type error eg mockerror myresponse error", "d": "7/2016"}, {"body": "asnowwolf want try fix one", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "crossref", "d": "7/2016"}, {"body": "check see looking routerstate tree activatedroutes walk", "d": "7/2016"}, {"body": "brandonroberts walk router state object aggregate data writing function straightforward many ways aggregation ie aggregation strategy app specific nt think router responsible closing issue", "d": "7/2016"}, {"body": "hi checked code use case know use component like prefixa prefixb children different path user different component user component x first path component path achieve use case already using app", "d": "7/2016"}, {"body": "joshimehul example show please thank", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "designed subscribe route params initialization change", "d": "7/2016"}, {"body": "maybe feature request bug would nice avoid job two different times event raised router routes component would great", "d": "7/2016"}, {"body": "nt need job different times move code another method call parameter change recreating component parameters change explicitely added called component created deviating rule worth especially simple way around", "d": "7/2016"}, {"body": "well thank advising writing method check live component recreated also unique event route", "d": "7/2016"}, {"body": "also unique event route could expand", "d": "7/2016"}, {"body": "closing issue", "d": "7/2016"}, {"body": "documented breaking change longer intend provide matching utilities jasmine use existing party libraries get custom matchers", "d": "7/2016"}, {"body": "iv noticed issue component child loaded outlet get lifecycle events like ngoninit ngafterviewinit triggered etc components dom injected loaded properly issue iv already encoutered previously circumstances happens initially loading components direct url input reverse url gt route gt component tree navigate via routerlink lifecycle events triggered correctly issue ngclass ngclass initializing lifecycle events triggered damn want create new issue close would plunkr example still enough see", "d": "7/2016"}, {"body": "updated plunkr show work digest occurs plunkr apply styles button clicked seen similar behaviour today using backforward browser getting unstyled components", "d": "7/2016"}, {"body": "know works next digest even version plnkr something like click true assume mean solution note basically navigating via history api backforward navigating via browser url input components injected loaded routeroutlet lifecycleevents triggered directives like ngstyle live lifecycleevents work", "d": "7/2016"}, {"body": "akomm fixed next release commit router outlet calls change detection components created", "d": "7/2016"}, {"body": "awesome", "d": "7/2016"}, {"body": "related", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "looks like dup", "d": "7/2016"}, {"body": "navigating without updating url one would update current url forget previous one", "d": "7/2016"}, {"body": "dynamic redirect guard", "d": "7/2016"}, {"body": "bit late party input looking stated wanting programatically redirect another route use taken appheroesherolistcomponentts file please note approach uses standard push state navigation previous routes exist browser history wanting use historyreplacestate agree zoechi looks duplicate simply want guard certain route loaded could add canactivate guard suggested spicywhitefish plunker example see appauthguardservicets file example guard appcrisiscentercrisiscenterroutests file example would use", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "projects going sound bit weird solved removing karma setup generated angularcli", "d": "7/2016"}, {"body": "managed fix adding package", "d": "7/2016"}, {"body": "katherinegould tried also fixing karma karmajasmine systemjs", "d": "7/2016"}, {"body": "cexbrayat katherinegould workarounds nt fix deleting systempolyfills changes nothing already karmajasmine devdependencies way initialization using using side testruns pass using quite sure accident sometimes finishes actual testrun starts", "d": "7/2016"}, {"body": "choeller using pretty much first example migrated unit tests ebook hundreds projects clear using comment karma conf", "d": "7/2016"}, {"body": "cexbrayat woah awesome commenting actually solve problem introduced another bug trying stuff quite weird maybe juliemr shed light", "d": "7/2016"}, {"body": "strange works left choeller using", "d": "7/2016"}, {"body": "played around little works include way around ok ok obviously overrides async behaviour added", "d": "7/2016"}, {"body": "tests working way others failing narrowed components failed ones defined component decorator nt fail tests pass tests failed", "d": "7/2016"}, {"body": "none mentioned proposals worked however manage solve simply removing async tests works every time never works sure keeping test async active body gets evaluated rather quickly", "d": "7/2016"}, {"body": "tried seem work", "d": "7/2016"}, {"body": "order polyfills unfortunately matter believe note examples sure else choeller place documentation would assisted", "d": "7/2016"}, {"body": "juliemr ok see think biggest problem angularcli currently wrong see file issue", "d": "7/2016"}, {"body": "choeller yes please", "d": "7/2016"}, {"body": "ok created pr removed name commit message", "d": "7/2016"}, {"body": "method", "d": "7/2016"}, {"body": "choeller sorry master transition last days updating use app modules going away morning replaced module system described able get effect providing formsmodule ts import formsmodule angularforms bootstrap app modules formsmodule closing issue function longer supported", "d": "7/2016"}, {"body": "hello question seems support request google group discussion list stackoverflow better place answer mentionned contributingmd question thank", "d": "7/2016"}, {"body": "see avastms would mind closing issue", "d": "7/2016"}, {"body": "actually issue reusing components sure working properly routes component route different component reinstantiated every time try get plunkr working", "d": "7/2016"}, {"body": "zoechi feature provided router neither mentioned doc believe providing option important", "d": "7/2016"}, {"body": "said components reused default seem work", "d": "7/2016"}, {"body": "fknop supposed work navigated route route parameters change remember seeing issue ago working yet", "d": "7/2016"}, {"body": "confirm component reused default navigate route handled component different route params url eg nt try cases", "d": "7/2016"}, {"body": "fknop problem example", "d": "7/2016"}, {"body": "fxmontigny actually working params", "d": "7/2016"}, {"body": "fxmontigny problem plunker switch called expected behavior component reused", "d": "7/2016"}, {"body": "go components different data reused thing without data thnk current behavior checks route edit link updated", "d": "7/2016"}, {"body": "still called first time click times", "d": "7/2016"}, {"body": "zoechi try use component different param constructor init example step click one show one step click two first show two param router like cmp id id step click two second change renderer router id know equal step click one show one step click two second show two param think forgot something fknop know data look doc", "d": "7/2016"}, {"body": "purpose recreate components use observable instead snapshot", "d": "7/2016"}, {"body": "fxmontigny click one different component back two component reused designed navigate route parameters change component reused navigate different route component destroyed recreated next time navigate back", "d": "7/2016"}, {"body": "would nice could specify option reuse route change", "d": "7/2016"}, {"body": "fknop sure wo nt happen store state service initialize component recreated", "d": "7/2016"}, {"body": "really state use case data config change works feel necessary recreate something already", "d": "7/2016"}, {"body": "vsavkin would please implement routercanreuse router", "d": "7/2016"}, {"body": "would really important routercanreuse functionality eg use case embed third party ui component picture slider call api functions creation reusing work anymore", "d": "7/2016"}, {"body": "maku ugly workaround could navigate away current route back afair similar readded recently spam history", "d": "7/2016"}, {"body": "outermost element template setting run change detection set back might work well need reinitialize dom", "d": "7/2016"}, {"body": "dup see also", "d": "7/2016"}, {"body": "dup", "d": "7/2016"}, {"body": "reply would greatly appreciated believed name attribute route interface kind id particular path case removed alternative distinguish path without matching path would great paths app easily changed even later", "d": "7/2016"}, {"body": "dup", "d": "7/2016"}, {"body": "imalhasaranga new implementation nt notion route names instead relies redirects achieve want names prevents transparent lazy loading creates problems main purpose using names enable refactoring achieve result using redirects closing issue", "d": "7/2016"}, {"body": "please provide plunker allows reproduce demonstrates polyfills loading order", "d": "7/2016"}, {"body": "unable reproduce plunker seems work course scripts loaded differently app built using cli added indexhtml loads scriptspolyfills", "d": "7/2016"}, {"body": "seems issue configuration questions asked one channels listed contributing got question problem", "d": "7/2016"}, {"body": "slubowski get update please add facing issue weeks sure go run angularclass webpack starter config work even", "d": "7/2016"}, {"body": "posted wrong issue tracker", "d": "7/2016"}, {"body": "words want decorators angular specifically http proposal interceptors", "d": "7/2016"}, {"body": "awerlang nt tried yet think using decorators would cyclic dependency problem renaming variable name renaming dependency tellling injector service want use old service declared service redeclaring nt talking specifically interceptors thing created implementation http supports interceptors already asked feedback angular followup presented angularcamp barcelona told people use providers override de default http service extended service discussed another http implementation also want use gives completely different feature interceptors want chain new services ca nt override http service provider replace pass instance http tell use cyclic dependency arises telling injector replace http service new provider needs http service although want tell want old http one defining", "d": "7/2016"}, {"body": "nt tried yet think using decorators would cyclic dependency problem cyclic dependency arises telling injector replace http service new provider needs http service although want tell want old http one defining decorators give access original implementation", "d": "7/2016"}, {"body": "dynamic data want pass working please provide plunker demonstrates try accomplish working", "d": "7/2016"}, {"body": "hi zoechi plnkr link list route showing titles items listcomponent want view individual item separate route say item want pass selected item object item route able find documentation thanks advance", "d": "7/2016"}, {"body": "also nt able pass data nt know supposed work", "d": "7/2016"}, {"body": "use service kind thing", "d": "7/2016"}, {"body": "hey zoechi routerlink item data item amp thisrouternavigate item data thisitems index pass item params object already tried think provision passing data dynamically created issue", "d": "7/2016"}, {"body": "fknop thanks responding issue one way solving problem setting params route done using service mentioned thread data provision pass object uirouter expecting similar behaviour route helps us communicate routes without adding data url please check plunker drafted zoechi reply get clear picture issue", "d": "7/2016"}, {"body": "similar", "d": "7/2016"}, {"body": "zoechi well rather duplicate using service pass routedata seen workaround perhaps think able addmergereplace static data routedata using navigate navigatebyurl feature routing support ca nt think reason", "d": "7/2016"}, {"body": "fknop also issue frankly creating entire service pass data two components navigatable via seems like expensive operation could way pass objects via anyway", "d": "7/2016"}, {"body": "see point opening issue support question closed please read", "d": "7/2016"}, {"body": "please use dedicated support channel types questions", "d": "7/2016"}, {"body": "tried using safenavigation operator", "d": "7/2016"}, {"body": "encountered problem migrating deprecated router brandonroberts tried got though worked deprecated router still found workaround", "d": "7/2016"}, {"body": "brandonroberts problem safenavigation operator also work", "d": "7/2016"}, {"body": "akirasosa reproduce plunker one work", "d": "7/2016"}, {"body": "sure go product list gt show details broken show details fixed", "d": "7/2016"}, {"body": "akirasosa confirmed bug also write routerlinks one long string following work also", "d": "7/2016"}, {"body": "great thank workaround", "d": "7/2016"}, {"body": "nice workaround magic however path variables add slash", "d": "7/2016"}, {"body": "variable undefined throw error expression evaluated change detection system router router delay evaluation operator way go nt work please open issue", "d": "7/2016"}, {"body": "also nt found information changelog replace use object instead like similar variations", "d": "7/2016"}, {"body": "deprecated nt removed", "d": "7/2016"}, {"body": "ericmartinezr right documentation definitely needs present people migrate gets removed", "d": "7/2016"}, {"body": "di samples angulario migrated use provide object literal instead provide method referring two articles examples", "d": "7/2016"}, {"body": "cheat sheet also updated", "d": "7/2016"}, {"body": "least declaration goes along object literal provide type safety seems like downgrade", "d": "7/2016"}, {"body": "xealot exactly decrease code quality disappointed", "d": "7/2016"}, {"body": "detailed guide create providers using map literal syntax use docs updated aluanhaddad xealot assume still want types", "d": "7/2016"}, {"body": "pascalprecht class deprecated", "d": "7/2016"}, {"body": "docs already using object literal syntax nt referring", "d": "7/2016"}, {"body": "also appreciate blog post feature poorly documented feature poorly typed xealot pointed general concept providers opaque also really confusing something deprecated documentation name canonical feature see provide provider deprecated everywhere makes one wonder related structures also deprecated", "d": "7/2016"}, {"body": "also nt prefer literal syntax interface least provided formalize structure providers everything typed pretty specifically seems like weird exception", "d": "7/2016"}, {"body": "thelgevold type declaration files documentation rc one major benefits typescript code navigation combined inline documentation also xealot says interface type array element example providers property component decorator factory", "d": "7/2016"}, {"body": "ref", "d": "7/2016"}, {"body": "nt think possible sure could dirty way imho using component employeelist showhide employee details using ngif click event navigation template manipulation", "d": "7/2016"}, {"body": "davideviolante thanks reply think possible angular using uirouter code passing stateparams controller read parameters show mychoiceonbrowser browser url showing stateparams passed controller mean dont option angular dont want show queryparams browser url employeeid unique dont want users see anyone solution", "d": "7/2016"}, {"body": "nt want url bar probably relevant routing anyway use shared service global data", "d": "7/2016"}, {"body": "think probably want set state navigating see currently supported use workaround eg service store data", "d": "7/2016"}, {"body": "unfortunately feature supported seems standard angular routing also unfortunately quite yet would support used use feature many times app using uirouter reason simply crud application two levels deep details shown alongside master list however want users jump details bookmark page giving dedicated bookmarking points simply uirouter exposing master urls keeping details substates hidden url solution could achieved also using hidden flags components really would basically scatter routing code instead keeping central location problem prevents porting app although building bricks except routing hidden substates working said yet ran several bugs really isolate small environment like ignoring routes one page although defined close probably need time either way fortunate solution time pressuring held transition another half year minimum situation resolved frameworks need time stabilize anyway", "d": "7/2016"}, {"body": "interestingly non matrix parameters parsed", "d": "7/2016"}, {"body": "clarification taken two screenshot actual expected behavior downloaded live example angular router docs expected behavior screenshot manually changed query format url current expected", "d": "7/2016"}, {"body": "fixed prior fix emptypath routes would inherit matrix params parents id param available since nt released version router fix need use nightly build githubcomangularrouterbuilds see issue fixed closing issue", "d": "7/2016"}, {"body": "workaround see", "d": "7/2016"}, {"body": "zoechi thank gave lot help angular", "d": "7/2016"}, {"body": "zoechi problem link every input cursor position resetbelow code bind innerhtml div content variable affect user input", "d": "7/2016"}, {"body": "already mentioned template github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem", "d": "7/2016"}, {"body": "getting error seems pretty broken", "d": "7/2016"}, {"body": "broken documented see", "d": "7/2016"}, {"body": "ok thanks vicb one question answer solution uses directive pipe deprecated", "d": "7/2016"}, {"body": "meantime useful someone working example", "d": "7/2016"}, {"body": "use cases different ie use directive inside attribute value stay feel free submit pr enhance api doc", "d": "7/2016"}, {"body": "answered github issues still support questions please ask support questions one channels listed contributing got question problem", "d": "7/2016"}, {"body": "thank workaround described acceptable angular proper sways handle situations also second problem described either simply nt know way resolve problem either designed wrong way thus github issue", "d": "7/2016"}, {"body": "part included question sounds like", "d": "7/2016"}, {"body": "yes looks", "d": "7/2016"}, {"body": "duplicate", "d": "7/2016"}, {"body": "u need change imports gt u find example", "d": "7/2016"}, {"body": "yes right thanks dzmitryshylovich", "d": "7/2016"}, {"body": "problem router", "d": "7/2016"}, {"body": "similar upposed fixed", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "see location", "d": "7/2016"}, {"body": "thank source even better", "d": "7/2016"}, {"body": "might", "d": "7/2016"}, {"body": "believe experienced applied changes able select multiple items ieff test mobile chrome seems fix scheduled based milestone label confirmed work via plunk", "d": "7/2016"}, {"body": "believe correct close reopen need thanks", "d": "7/2016"}, {"body": "another related problem hash data keep route navigations", "d": "7/2016"}, {"body": "seems related", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "ps see issue forms believe", "d": "7/2016"}, {"body": "using latest formsbuilds also see issue forms falsely marked invalid field touched using onpush detection form fields", "d": "7/2016"}, {"body": "also tried using however work using", "d": "7/2016"}, {"body": "would surprised template vs templateurl could please provide plunker reproducing issue requested issue template without plunker actionable closed", "d": "7/2016"}, {"body": "make plunkr without hosted lt exist", "d": "7/2016"}, {"body": "issue template link plunker modify reproduce problem", "d": "7/2016"}, {"body": "ok plnkr works must something wrong setup sorry inconvenience", "d": "7/2016"}, {"body": "nt depend injector pass even ca nt use stackoverflow blocked github issues still support questions please use one channels mentioned contributing got question problem", "d": "7/2016"}, {"body": "even ca nt use stackoverflow blocked github issues still support questions another great source support", "d": "7/2016"}, {"body": "zoechi pkozlowskiopensource stackoverflow use ajaxgoogleapiscom gitter use platformtwittercomoctjs china site blocked gov like google twitter angular welcomed chinese developers github irregular ways vpn proxy vpn amp proxy stable risk infection virus", "d": "7/2016"}, {"body": "looking something like couple days situation almost exactly currently using custom isrouteactive route parent", "d": "7/2016"}, {"body": "looks like dup", "d": "7/2016"}, {"body": "zoechi dup asks allow routerlinkactive non achor tags works anchor tags direct parents anchor tags asked routerlinkactive work higher ascendants direct parents", "d": "7/2016"}, {"body": "also issue home link never shows active due links menu descended", "d": "7/2016"}, {"body": "also would like see feature added boat well", "d": "7/2016"}, {"body": "problem dropdown menu found something interesting routerlinkactive directive seems called example dropdown nav element styled active example active element inside dropdown menu styled active dropdown nav element styled active routerlinkactive directive called", "d": "7/2016"}, {"body": "path parameters passed object pass like works like", "d": "7/2016"}, {"body": "fknop thank much worked another help hide url parameters browser like want use alias name instead actual url id appearing browser url earlies keyword isprod use work working please provide solution appreciate", "d": "7/2016"}, {"body": "sounds like support question discussions please use appropriate support channel types questions thnx helping fknop much appreciated", "d": "7/2016"}, {"body": "default unless invoke enableprodmode", "d": "7/2016"}, {"body": "ah cool motion close", "d": "7/2016"}, {"body": "model touched dirty properties based direct user interaction form control change value user changes value ui become dirty utility properties based insight user interacted form trivial detect application dirtied form programmatically code called change value form control using actually design properties updated way simple distinguish effects user opposed effects application code might case controls need marked dirty app updates value deliberately choose call work checked plunker provided found uncommenting call mark engine field dirty clarify expected happen", "d": "7/2016"}, {"body": "ok seems wrong end stick intention form controls guessing updatevalue supposed mimic user action would set flags markasdirty right working expected sure missed thanks detailed explanation", "d": "7/2016"}, {"body": "duplicate sorry", "d": "7/2016"}, {"body": "stackoverflow right place ask questions like", "d": "7/2016"}, {"body": "looks like matter order refer example", "d": "7/2016"}, {"body": "thanks nt realize could make two makes lot sense", "d": "7/2016"}, {"body": "besides even able register custom component get around bug calls constructs new plain search params object eventually falls back default queryencoder disappointed", "d": "7/2016"}, {"body": "workaround custom queryencoder export class customqueryencoder extends queryencoder encodekey k string string return customencoding k encodevalue v string string return customencoding v function customencoding v string string return encodeuricomponent v replace replace replace replace replace replace replace replace replace const urlparams new urlsearchparams new customqueryencoder pr tomorrow time", "d": "7/2016"}, {"body": "fknop true wo nt work inside makes clone original urlsearchparams object creates new default queryencoder see previous comment code fragment search ispresent options amp amp ispresent optionssearch isstring optionssearch new urlsearchparams optionssearch optionssearch clone thissearch example use case search params headers headers", "d": "7/2016"}, {"body": "think could append query parameters string url meantime", "d": "7/2016"}, {"body": "good idea think true workaround hope fixed soon", "d": "7/2016"}, {"body": "expect get", "d": "7/2016"}, {"body": "posted pr urlsearchparamsclone method", "d": "7/2016"}, {"body": "ran today consuming odata backend url looks like value key gets encoded breaks backend", "d": "7/2016"}, {"body": "michaelbromley issue one workaround work", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "wa nt keep one liner", "d": "7/2016"}, {"body": "case method means depends instance class originally want use static methods template impossible static members scoped template compiler functions nt depend component class proposed idea instant pipe definition", "d": "7/2016"}, {"body": "calling method template really good idea static propertiesmethods use workaround issue", "d": "7/2016"}, {"body": "case quote method means depends instance class actually property containing function lexical reference used instance members would capture initializing instance makes safe treat free standing function back topic class definition indeed verbose nt necessary case outlined", "d": "7/2016"}, {"body": "typescript import pipe angularcore function pipebuilder name string fn value gt val gt val return pipe name class transform fn component pipes pipebuilder yolo wat gt wat yolo class app", "d": "7/2016"}, {"body": "functionstyle api already deprecated context think good similar interface", "d": "7/2016"}, {"body": "ericmartinezr calling methods template good idea let quote official docs appcrisiscentercrisislistcomponentts", "d": "7/2016"}, {"body": "correct present specifically requite rxjs update rx version tracked", "d": "7/2016"}, {"body": "please provide plunker demonstrates issue", "d": "7/2016"}, {"body": "looks like required fix hours", "d": "7/2016"}, {"body": "dzmitryshylovich confirm", "d": "7/2016"}, {"body": "think underlying issue", "d": "7/2016"}, {"body": "works fine check console", "d": "7/2016"}, {"body": "thanks painstakingly checking everything realized still router version locked alpha systemjsconfigjs", "d": "7/2016"}, {"body": "ericmartinezr relatively simple way grab route data component outside routeroutlet example app component html looks like using plnkr provided get route data constructor route component like able reference data mynav component need check update service via constructor route component seems would better way goal ultimately provide options routes data showmenu false inside mynav component template use ngif hide items route data available component", "d": "7/2016"}, {"body": "dzielin looking worked similar use case", "d": "7/2016"}, {"body": "still issue thisroute data ca nt map thisroutedata anything useful undefined expecteddesired behavior data specified routerconfig accessible routed components form either via documented routedata via activatedroute parameter means please tell us environment angular version router version browser", "d": "7/2016"}, {"body": "nadhirfalta case pulling wrong version router cdn forgotten pulling cdn version specified packagejson effect systemjs config file function global var ngver var routerver set older version number whoops var map app build dist angular nodemodules angular rxjs nodemodulesrxjs angularrouter nodemodules angularrouter angularrouter routerver locking version even though updated packagejson client still got older version router prior reintroduction routedata verify nt made similar mistake take look plunkr", "d": "7/2016"}, {"body": "dzielin thank thank issue changed version packagejson nt actually run npm install updates lol thanks", "d": "7/2016"}, {"body": "using components without routerlink using latest angularrouter provide demonstration issue version angular using version router", "d": "7/2016"}, {"body": "without proper instructions reproduce plunker probably nt much angular team", "d": "7/2016"}, {"body": "attempted reproduce without success reopen reproduce example", "d": "7/2016"}, {"body": "seems work expected supposed work works added support", "d": "7/2016"}, {"body": "routerlink works added support added support issue seems legit regarding api doc", "d": "7/2016"}, {"body": "maybe initialized clicked", "d": "7/2016"}, {"body": "going animation run ngif inserts parent container dom believe pr solve issue concrete response tomorrow", "d": "7/2016"}, {"body": "known workaround meantime", "d": "7/2016"}, {"body": "use easing value timing", "d": "7/2016"}, {"body": "thanks works weird live example code appears target appears forgo easing value well behaves intended", "d": "7/2016"}, {"body": "mutli optional", "d": "7/2016"}, {"body": "think rather instead ie something ed hopefully soon merge see", "d": "7/2016"}, {"body": "vicb would valid think could convinced tbosch changed newable per suggestion also added turns times ca nt recursed allowed", "d": "7/2016"}, {"body": "consistency must allowed even", "d": "7/2016"}, {"body": "affecting us well", "d": "7/2016"}, {"body": "sure thanks pointing right direction", "d": "7/2016"}, {"body": "tbosch alright like take crack new forgive nt completely understand looks like wants stypeconcreatetype makes sense however nt understand delete type rename concretetype type", "d": "7/2016"}, {"body": "end want typing right", "d": "7/2016"}, {"body": "tbosch gotcha going take shot", "d": "7/2016"}, {"body": "tbosch told gitter nt issue public contributions pull one", "d": "7/2016"}, {"body": "nt issue public contributions means nothing welcome help commented gitter", "d": "7/2016"}, {"body": "router new api loading routes asynchronously see method trigger activations resets config trigger activations call resetconfig navigate current url", "d": "7/2016"}, {"body": "could used bundle css usable scoped components inside app module example commonly used flex styles", "d": "7/2016"}, {"body": "bstrauss sorry planned yet", "d": "7/2016"}, {"body": "tbosch something would considered create issue", "d": "7/2016"}, {"body": "bstrauss yes please", "d": "7/2016"}, {"body": "support adding components via providers done", "d": "7/2016"}, {"body": "tbosch latest build bootstrap custom selector componentresolver deprecated dynamic compilation use componentfactoryresolver together appmodule componentprecompile analyzeforprecompile provider instead", "d": "7/2016"}, {"body": "nt nice api yet sorry following please read doc understand concepts ie create module lists component get create component register via private api component gets dirty checked", "d": "7/2016"}, {"body": "hi victor quite repos name like idea one use thanks cheers stephen june victor berchet notifications githubcom wrote sounds like issue please open issue repo receiving authored thread reply email directly view github mute thread", "d": "7/2016"}, {"body": "vsavkin bug feature go angular roughly labels missing", "d": "7/2016"}, {"body": "kara something break seems plunker nt working stumbled upon thread upgrading form longer prepopulating nt discovered wrong yet", "d": "7/2016"}, {"body": "hmm plunker looks right take another look see initial value deliberately set customer nt match option value disabled placeholder seems intentionally blank change value placeholder option customer prepopulate customer change initial value component class real client id like prepopulates expect depends trying link plunker issue", "d": "7/2016"}, {"body": "right sorry see reproduce problem", "d": "7/2016"}, {"body": "guess case little different probably opened new issue taking value populating form fields moving pieces examples clicking clients display details form inputs populated details prepopulating updating new info upon selection thanks time working working", "d": "7/2016"}, {"body": "thanks sharing plunker examples looks like trying use reactive strategy missing vital directive confusingly happens work made type checking stricter rightly fails planning add friendly errors nt silently fail explain plunker creating instance child controls using connecting child form control name form control element dom reactive approach pass string name control like connect connects form control element instance like init data choices use oneway binding circle changes back valuechanges observable use make truly driven class template another option would switch entirely templatedriven strategy would actually simplify code lot case keep twoway binding also keep mind form always contains correct value nt always need update domain model assiduously resolve issue let know missing part use case templatedriven strategy control instances created registered implicitly form directives template need fact wo nt work need attribute good rule thumb follow use form prefixed directives together ngmodel prefixed directives together", "d": "7/2016"}, {"body": "beyond thanks super helpful", "d": "7/2016"}, {"body": "tprupsys could provide plunker reproducing issue using latest release router seeing trying reproduce navigating throws match routes", "d": "7/2016"}, {"body": "closing issue", "d": "7/2016"}, {"body": "vsavkin make easier since requested proposed maybe something like least mention docs", "d": "7/2016"}, {"body": "created new plunker able see classes applied input custom component also updated angularforms check", "d": "7/2016"}, {"body": "kara saw added label mean looking confirmed bug thanks help", "d": "7/2016"}, {"body": "repo based one damien created repo together startertemplate also facing router problem webpack comes play seems", "d": "7/2016"}, {"body": "exact behavior case used pattern setup application tried seem work using webpack navigation seems fine really looks like lifecycle nt process component time routerlink navigated seems loading correct component initially url even ngoninit firing would love figure prefer using webpack nt drastic code differences even running repo directly downloaded seems issue", "d": "7/2016"}, {"body": "seen default route defined error reported unhandled promise rejection error match routes", "d": "7/2016"}, {"body": "fixed vendorts importing files incorrectly see fix", "d": "7/2016"}, {"body": "kaeus fabiangosebrink get working using fix greetings damien", "d": "7/2016"}, {"body": "damienbod yep changes vendorts worked perfectly driving nuts trying debug completely wrong angle thanks", "d": "7/2016"}, {"body": "cool", "d": "7/2016"}, {"body": "actually problem currently workaround tried adding subscription querylist undefined time typescript export class textselector implements oninit contentchildren textselectoritem public selectitems querylist public ngoninit thisselectitemschanges throws read property changes undefined subscribe gt consolelog hit", "d": "7/2016"}, {"body": "contentchildren set ngaftercontentinit question ask happy help", "d": "7/2016"}, {"body": "vicb tried compilation fails output cloned something well glad contribute make work", "d": "7/2016"}, {"body": "ok looks like windows manually create symlinks used work box due end package name git clone remove symlinks updated version create symlinks updated version npm install buildsh seems work way", "d": "7/2016"}, {"body": "demo click heroes delete one heroe last one heroes deleted show", "d": "7/2016"}, {"body": "might related", "d": "7/2016"}, {"body": "marcalj sod test patch see solves issues produced similar problem fixes want make sure actually solves issues fyi see example install modules built sources", "d": "7/2016"}, {"body": "chuckjaz right way test clone branch build via copy hole thing via try compilercli via stuck error previous errors got replace interfaces indeed go away pr ca nt say app works without runtime compiler never actually got point works", "d": "7/2016"}, {"body": "chuckjaz able compile angular using node way download builded ngc patch using os x el capitan", "d": "7/2016"}, {"body": "sod thanks verifying error routerproviders known fix soon current way routerproviders initialized work offline compiler fix relatively simple marcalj easily could use nvm change", "d": "7/2016"}, {"body": "getting similar error using node npm error error encountered resolving symbol values statically initialized variables constants referenced position original ts file resolving symbol mdcarddirectives mediafabiostorageworkspaceqlvnodemodules resolving symbol myfeaturedproductscomponent mediafabiostorageworkspaceqlvsrcappmyfeaturedproductsmyfeaturedproductscomponentts resolving symbol myfeaturedproductscomponent mediafabiostorageworkspaceqlvsrcappmyfeaturedproductsmyfeaturedproductscomponentts simplifyincontext mediafabiostorageworkspaceqlvnodemodules staticreflectorsimplify mediafabiostorageworkspaceqlvnodemodules staticreflectorannotations mediafabiostorageworkspaceqlvnodemodules directiveresolverresolve mediafabiostorageworkspaceqlvnodemodules compilemetadataresolvergetdirectivemetadata mediafabiostorageworkspaceqlvnodemodules compilemetadataresolvermaybegetdirectivemetadata mediafabiostorageworkspaceqlvnodemodules codegeneratorreadcomponents mediafabiostorageworkspaceqlvnodemodules generateonefile mediafabiostorageworkspaceqlvnodemodules arraymap native codegeneratorcodegen mediafabiostorageworkspaceqlvnodemodules compilation failed npm err linux npm err argv run ngc npm err node npm err npm npm err code elifecycle npm err qlv ngc npm err exit status npm err npm err failed qlv ngc script ngc p amp amp cp app compiled npm err make sure latest version nodejs npm installed npm err likely problem qlv package npm err npm npm err tell author fails system npm err ngc p amp amp cp app compiled npm err get information open issue project npm err npm bugs qlv npm err nt available get info via npm err npm owner ls qlv npm err likely additional logging output npm err please include following file support request npm err mediafabiostorageworkspaceqlvnpmdebuglog code typescript import component oninit angularcore import mdcarddirectives import myfeaturedproductsservice myfeaturedproductsservice import product product component moduleid moduleid selector appmyfeaturedproducts template styleurls myfeaturedproductscomponentcss providers myfeaturedproductsservice directives mdcarddirectives export class myfeaturedproductscomponent implements oninit products product error title destaques constructor private featuredproductsservice myfeaturedproductsservice ngoninit thisfeaturedproductsservicegetfeaturedproducts products product gt thisproducts products catch error gt thiserror error", "d": "7/2016"}, {"body": "chuckjaz sorry ca nt test going holidays tomorrow", "d": "7/2016"}, {"body": "fabiopaiva using patch", "d": "7/2016"}, {"body": "fabiopaiva material design prepared yet offline compile working", "d": "7/2016"}, {"body": "marcalj problem commit seems fixing underlying problem", "d": "7/2016"}, {"body": "chuckjaz ok thank reply", "d": "7/2016"}, {"body": "personally wanted use canactivate guard sometimes instead redirecting somewhere specific would prefer keep exact url return false user stays place expected url changes stays whatever inserted unaccessible url", "d": "7/2016"}, {"body": "nt bug route url reflect current state outlet", "d": "7/2016"}, {"body": "well point url stay blocked route access attempt suppose", "d": "7/2016"}, {"body": "use case edit form want reset form state saving also make sure form date data server sure use routernavigate set observable react changed data update form way introduces lot unnecessary complexity reloading current route would achive thing lot simpler", "d": "7/2016"}, {"body": "problem cant renavigate anymore quick solution reloading state path yes use observables everything hooked observables lot interactions page get difficult manage simple renavigate made simple think method reload makes sense well", "d": "7/2016"}, {"body": "similarly point renavigate avoid kind boilerplate edit form called multiple places application using renavigate user clicks save cancel redirects exactly place user possible somehow much complicated etc", "d": "7/2016"}, {"body": "krisa new forms got method recently afaik", "d": "7/2016"}, {"body": "formgroup formcontrol something like yet current particularly use case actually really looking way navigate back last visited url within application kind historyback within mechanism additionally nt want navigate back history move forward even url", "d": "7/2016"}, {"body": "idea release candidate make upgraded check animations still need calculate values animation runtime unless way currently eg javascript animations trigger slide state style marginleft somecalculatedvalueorfunction", "d": "7/2016"}, {"body": "yes api mind getting core bugs way final higher priority css parser integration query support get hopefully coming weeks api ts register bootstrap function mycalculationfn element styles prop args return calculatedpropvalue bootstrap app provide animationhelpers multi true usevalue mycalculationfn component animations trigger slide state style marginleft mycalculatefn", "d": "7/2016"}, {"body": "new api looks useful matsko quick question angular web animation framework enable snapshot current styles applied time state change ie pass value mycalculatefn animate back state value current flight animation avoid jarring ie greensock gsap tweenmaxto functionality related issue", "d": "7/2016"}, {"body": "yes something mind css object api still figured", "d": "7/2016"}, {"body": "great looking forward", "d": "7/2016"}, {"body": "vicb midjuly", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "brandon pointed way achieve something like closing issue", "d": "7/2016"}, {"body": "opinion plunkr overkill simple thing trying achieve correctly labelled nonobvious though hope shortcut solution future could reopen providing shortcut feature open another issue considered final decision shorthands operation", "d": "7/2016"}, {"body": "greensock gsap animation exactly api animates current position api great features like etc also hope coming angular animating current position top priority matsko", "d": "7/2016"}, {"body": "thomasburleson work one", "d": "7/2016"}, {"body": "sounds like support question nt reproduce scenario closing", "d": "7/2016"}, {"body": "also got colons url paths breaking new router looking source intentional behavior motivation splitting path segments colons nt able find anything going blame pull requests", "d": "7/2016"}, {"body": "fyi workaround meantime create url use routernavigatebyurl", "d": "7/2016"}, {"body": "tried plunker latest version router example works let clarify one thing though make sure page router navigation urlbased routebased say configuration navigating parent router render navigate parentb would use link want append b current url say navigated parentb router rendered b navigate parentc would use link want move one segment url add c make sense", "d": "7/2016"}, {"body": "vsavkin thanks clarification indeed makes sense", "d": "7/2016"}, {"body": "oh navigating pathless component actual path requires navigating two defined path components level requires page", "d": "7/2016"}, {"body": "ndcunningham url based add segment removes segment", "d": "7/2016"}, {"body": "yes statement thanks fknop vsavkin", "d": "7/2016"}, {"body": "vicb still reproduce issue updated plunker point bundles", "d": "7/2016"}, {"body": "linked pr nt merged yet therefore yet shipped", "d": "7/2016"}, {"body": "still issue", "d": "7/2016"}, {"body": "yes seems please look plunker", "d": "7/2016"}, {"body": "brandonroberts way works bootstrap provide platformdirectives usevalue routerdirectives multi true", "d": "7/2016"}, {"body": "landed support lazy loading closing issue", "d": "7/2016"}, {"body": "vsavkin please explain bit close requesting support lazy loading achieve", "d": "7/2016"}, {"body": "seeing latest chrome osx version component selector item directives item works template nt work templateurl itemhtml export class item input nest boolean false itemhtml reopened simple plunker", "d": "7/2016"}, {"body": "bah nevermind lol path", "d": "7/2016"}, {"body": "kara curiosity plans add directive described priority moment still sure suitable solution formarray templatedrivenforms could look like would cool hear thoughts", "d": "7/2016"}, {"body": "choeller yeah actually wanted build anyway unfortunately bit complicated build reactive form version change detection ngmodel works given time take features higher priority might get bit list", "d": "7/2016"}, {"body": "thanks denhai really works intended", "d": "7/2016"}, {"body": "thanks guess keeps waiting finish also tried first instead take using observercomplete next worked well sure better practices problems approaches one know", "d": "7/2016"}, {"body": "fact observable needs complete documented nt obvious either", "d": "7/2016"}, {"body": "sent pr fixing issue take look", "d": "7/2016"}, {"body": "sure referring could provide context", "d": "7/2016"}, {"body": "array router interprets routing instruction currently called link parameters array array related link anchor also used pass argument routernavigate method suitable call routing info array", "d": "7/2016"}, {"body": "please post link named way", "d": "7/2016"}, {"body": "thank opening issue think referring link parameters array used dev guides issues regarding updating dev guides open could reopen issue closing issue", "d": "7/2016"}, {"body": "function works passed bootstrap deprecated instead use routermodule routermodule passed bootstrap used defining app module options properly initialize router", "d": "7/2016"}, {"body": "good workaround solved quickly core feature angular use components", "d": "7/2016"}, {"body": "treid solve injecting html using innerhtml unfortunately quite expected innerhtml code interpreted anyone got idea get around like render html containing string", "d": "7/2016"}, {"body": "dynamic html probably looking adding dynamic components build wrapper component example like showed approaches also combined", "d": "7/2016"}, {"body": "solution issue", "d": "7/2016"}, {"body": "dynamiccomponentloader mentioned post deprecated would go instructions", "d": "7/2016"}, {"body": "cmiagssh nt tested looking code think various problems change component type initialization set properties bindings input possible set property directly bindings change target component updated event handlers work together zoechi implementation stackoverflow allows change component type support properties moreover support properties updatecomponent would inefficient destroy target component type changed meant criticism show trivial create complete implementation", "d": "7/2016"}, {"body": "joelrich nt intend provide fzllfeatured implementation tried demonstrate done bindings easy add inputs need generic way input names defined statically wrapper element cmiagssh post contains updated code viewcontainerrefcreatecomponent well", "d": "7/2016"}, {"body": "done", "d": "7/2016"}, {"body": "basically analogous historyreplacestate ideally help property passed activate named similarly ie prefer", "d": "7/2016"}, {"body": "think best update expression value animation completes check animation complete thomasburleson working getting event fire html collapsable content", "d": "7/2016"}, {"body": "issue track progress feature", "d": "7/2016"}, {"body": "thx feedback would work allows workaround code would less codding least intuitive transition class states would kind declarative flexible imagine use ngcontent inside component user component could write styles handle without hook info probably exposed done event component", "d": "7/2016"}, {"body": "developer friendly consider common use case user navigates application via saved bookmark includes query params eg get page include router links another user starts app query params eventually navigates exact page time links appended unintuitive surprising behavior developer would expect router links behave cases", "d": "7/2016"}, {"body": "event way override queryparams emptynull time", "d": "7/2016"}, {"body": "add following code root component typescript constructor private applicationref applicationref private router router thisismac routereventssubscribe ev gt ev instanceof navigationend settimeout gt applicationrefzonerun gt applicationreftick", "d": "7/2016"}, {"body": "thanks sicaner workaround works good part router", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "workaround router inability named routes using solution fact named routes translate depend user browser language", "d": "7/2016"}, {"body": "working project generated angular cli upgrading rxjs package version course add add add file add list steps little simplified copied guidance wrote friend setup repo ps remember also needed typings install might already nt remember", "d": "7/2016"}, {"body": "ran issue well using latest package adds value plunker", "d": "7/2016"}, {"body": "want", "d": "7/2016"}, {"body": "zoechi operation perform new route still reachable afterwards nt get exception", "d": "7/2016"}, {"body": "unsafecode nt used yet saw used router unit tests", "d": "7/2016"}, {"body": "zoechi would overwrite existing routes would better able add new route without replacing existing routes", "d": "7/2016"}, {"body": "keep routes around addremove demand pass routes much easier much powerful add api router addremovemodify single routes", "d": "7/2016"}, {"body": "asyncroute coming back could dynamically add asyncroute using resetconfig method described use lazy loading load asyncroute components dynamically add components runtime correct basically plugin mechanism", "d": "7/2016"}, {"body": "saw mentiond proper lazy loading support take land definitely planned", "d": "7/2016"}, {"body": "two ways extend router configuration fully safe easy use used lazy loading navigating router fetch extract configuration finally merge main one feature merged master couple weeks ago released next week imperative case developer responsible making sure nt screw configuration considering something addremove sections moment decided implement functionality top resetconfig closing issue", "d": "7/2016"}, {"body": "agree would necessary feature especially passing things redirect urls routerlinks", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "vicb bug confirmed chakra team kinda bloked", "d": "7/2016"}, {"body": "bug confirmed chakra team link thanks", "d": "7/2016"}, {"body": "vicb sure accept pr try dig dipper", "d": "7/2016"}, {"body": "got problem currently also working", "d": "7/2016"}, {"body": "got exactly unexpected behavior using status status error everything fine replicate try add encodable character request body eg", "d": "7/2016"}, {"body": "crebuh ruwhan able solve issue include additional header", "d": "7/2016"}, {"body": "iirc try request different domain", "d": "7/2016"}, {"body": "could provide plunker reproducing issue using latest release router", "d": "7/2016"}, {"body": "vsavkin using latest release router requires use latest release nt compatible latest angularmeteor version could share workspace want ca nt reproduce plunker lt", "d": "7/2016"}, {"body": "closing issue please reopen repro using latest version router", "d": "7/2016"}, {"body": "issue redirect user another location angular app initial url something like every time angular would pick mapping identity query params holding onto user navigated rest angular app nt need user bookmarking url mapping identity solution inside router service wrapper parameters var route routeinfo var params router params thisrouternavigate thisgetrouterlink route params updated line parameters var route routeinfo var params router params var queryparams queryparams thisrouternavigate thisgetrouterlink route params queryparams queryparams way unless user provided new query params routes wipe current query params hope helps anyone query params stuck url", "d": "7/2016"}, {"body": "root segment matrix params two reasons place url put currently reuse components parameters change future provide way customize reuse behavior developer able get new copy component time args change since root component created statically implement root component following allowed submitted pr throws descriptive error message", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "vsavkin thanks released version updating plunkr router version angular still seems finding outlet within updated plunkr", "d": "7/2016"}, {"body": "apply fix still working router thanks advance", "d": "7/2016"}, {"body": "also breaking well", "d": "7/2016"}, {"body": "workaround found using hidden", "d": "7/2016"}, {"body": "playing new router weeks biggest blocker going play around using instead letting component load data basically turns mental model insideout makes radically different think using something akin become problematic need safenavigation operators template sure one feels like problematic", "d": "7/2016"}, {"body": "bennadel maybe solution going back old router", "d": "7/2016"}, {"body": "robwormald also getting similar error trying use routelink sure current status issue error output browser using webpack get anyall routelinks used within templates nested within parent let know info need workaround using click events manual routing quick test tag works root level template breaks error child templates ie templates rendered within routeroutlet component snippet current angular dependencies packagejson angularcommon angularcompiler angularcore angularforms angular angularplatformbrowser angularplatformbrowserdynamic angularrouter angularupgrade", "d": "7/2016"}, {"body": "zacharyclaysmith seeing error investigation typescript angularroutersrcdirectivesrouterlinkts export class routerlinkwithhref implements onchanges urltree urltree ngonchanges changes thisupdatetargeturlandhref onclick button number ctrlkey boolean metakey boolean boolean button ctrlkey metakey return true updates property fires nt happening fires end unable schedule navigation properly", "d": "7/2016"}, {"body": "tokyojesus providing routerlink array dynamically", "d": "7/2016"}, {"body": "links variations", "d": "7/2016"}, {"body": "tokyojesus reproduce plunker", "d": "7/2016"}, {"body": "looks like problem elsewhere plunker stripped reproduction app works fine see interrupting change detection process", "d": "7/2016"}, {"body": "tokyojesus using webpack", "d": "7/2016"}, {"body": "yes", "d": "7/2016"}, {"body": "think commonality elsewheregames", "d": "7/2016"}, {"body": "zacharyclaysmith load order", "d": "7/2016"}, {"body": "using anything new guys got error yesterday night using browser back button inside loose tag comeback page browser back button error shows try navigate links back action cause routerdirectives problem browser back button solution find another way use router inject router handle routing click changed appheroesherolistcomponentts plunker", "d": "7/2016"}, {"body": "working load order webcomponentsjs polymer corejs shims shimmin reflectmetada rxjs zonejs distzone angular libraries", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "woraround breaks funny", "d": "7/2016"}, {"body": "need mock router fake router providers", "d": "7/2016"}, {"body": "johanneshoppe look relase notes particular nt upgraded yet seems still using", "d": "7/2016"}, {"body": "renehamburger deprecated removed johanneshoppe break seem using fine helped someone yesterday got tests working maybe help", "d": "7/2016"}, {"body": "andrashatvani use sinonjs mock things project currently fails router though issue resolved new version released fix already able use sinon mock router us", "d": "7/2016"}, {"body": "currently way router beta inject router service trying test subscribes router events performs actions navigationend tried build mock implemented joy throws provider instantiation error possibly due fact mocklocationstrategy longer exposed publicly post code get back home", "d": "7/2016"}, {"body": "dbsalvia got sinonjs team update release last night fixes issue using sinon mock router able mock router much much simpler way integration level test provided solution need know configure router dependencies whereas laundry list things needed js import activatedroute router angularrouter import examplecomponent examplecomponent describe component example gt let mockrouter let mockactivatedroute let examplecomponent examplecomponent variables tests beforeeach gt mockrouter sinoncreatestubinstance router mockactivatedroute sinoncreatestubinstance activatedroute beforeeach inject examplecomponent component gt examplecomponent component describe ngoninit gt gt mockactivatedroutesnapshot params foo bar mockroutercurrentrouterstate snapshot queryparams baz rest setup caveat found far internally calls setting able pass whatever need variable course nt using snapshots instead using observable stream need modify code handle scenario", "d": "7/2016"}, {"body": "delasteve thats awesome thanks much example indeed subscribing events stream within router go hooking mocked version tomorrow work post back sample get something working doubt one problem thanks much help saved world pain", "d": "7/2016"}, {"body": "dbsalvia observable version something like following work", "d": "7/2016"}, {"body": "introduced two files project workaround following code works testing", "d": "7/2016"}, {"body": "akirasosa strategy used ale test component uses directive progress make components testable reasonable way", "d": "7/2016"}, {"body": "bzums progress make components testable reasonable way yes test component uses routerlink copy private though need testing still way use spylocation work mocklocationstrategy stores history state memory instead using real browser history anyway workaround angular team provide official way test components using router soon", "d": "7/2016"}, {"body": "merged master", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "duplicate vicb guess u close", "d": "7/2016"}, {"body": "dup", "d": "7/2016"}, {"body": "lazy loading modules merged master done using loadchildren property closing issue", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "tried reproduce issue using latest release router looks like issue fixed still repro issue please provide plunker", "d": "7/2016"}, {"body": "vsavkin robwormald fixed click crisis center link reload frame via browser context menu error uncaught promise error match routes crisiscenter atrueaaaa", "d": "7/2016"}, {"body": "delagen pasting following browser location bar router create following segments crisiscenter atrue result wo nt able match routes however navigate url using router api router escape slashes correct behavior router escapes segments parameters updating url bar unescapes parsing url constructing url responsibility escape escaping works properly latest build router eg see plunkr see set work properly", "d": "7/2016"}, {"body": "tried reproduce issue using latest release router looks like issue fixed closing", "d": "7/2016"}, {"body": "example work latest router", "d": "7/2016"}, {"body": "copied remaining todos", "d": "7/2016"}, {"body": "workaround possible implementation using typescript import router urltree angularrouter import containstree angularroutersrcurltree function isrouteactive router router urltree urltree exact boolean false boolean let currenturltree routerparseurl routerurl return containstree currenturltree tree exact", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "one possible solution inject parent child component assuming one instantiated component type along view hierarchy", "d": "7/2016"}, {"body": "thanks never tried interesting way clean", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "use latest version packagejson configuration files link", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "ericmartinezr sorry let clarify meant componentless routes following correct route path children distinguish following two cases runtime router anything mycomponent undefined treat first route componentless linter checking everything passedin component scope", "d": "7/2016"}, {"body": "vsavkin thanks answer let ask one last thing could router use hasownproperty check component property exists value undefined distinguish cases whar pr beta router", "d": "7/2016"}, {"body": "vsavkin scope example one question componentless route clear defined component children mandatory define one empty route children routes eg configuration work try go mydomaincoma receive error route obvious componentless route need define endpoint going loaded case defined component mycomponent load url mydomaincoma maybe already fixed master branch thank advance", "d": "7/2016"}, {"body": "bumping final since blocking", "d": "7/2016"}, {"body": "juliemr curiosity blocker maybe blind def blockers right front", "d": "7/2016"}, {"body": "jtbruch nothing would become broken regards issue reason hold fixes features could go try resolve", "d": "7/2016"}, {"body": "juliemr ahh okay cool makes sense bit blocker us getting protractor spun said anything help resolve resources look see making pr appreciate prompt response", "d": "7/2016"}, {"body": "deal problem sorry delay got caught stuff", "d": "7/2016"}, {"body": "fix trick", "d": "7/2016"}, {"body": "kara wish angular documentation contained comments linked google doc means explore internet dim flashlight order find explanation use deprecation strategy ngmodel throws exception something making us blindly transition way confuses model driven template driven approaches clear documentation apologies aggression post sunday night sitting pulling hair questions easy answer", "d": "7/2016"}, {"body": "georgefrick completely right current docs incomplete nonobvious forms intended used currently working adding much complete guide docs truly sorry confusion", "d": "7/2016"}, {"body": "kara need sorry finished doc clears lot except functions mentions ca nt find many blog posts examples longer work trying find source truth", "d": "7/2016"}, {"body": "maybe values boolean type sound robertmesserle thomasburleson", "d": "7/2016"}, {"body": "matsko perhaps", "d": "7/2016"}, {"body": "think like matsko suggested convert string treat boolean values", "d": "7/2016"}, {"body": "also get warning bind text contains german umlaute \u00fc \u00f6 \u00e4 get replaced \u00fc \u00f6 \u00e4 makes warning useless get like false warnings nt bother look", "d": "7/2016"}, {"body": "oocx sorry wrote pr angular would need reimplement half html parser avoid warning seems overkill harmless supposed development help could consider escaping least unicode characters eg umlauts cause warning people passing joys encoding", "d": "7/2016"}, {"body": "mprobst understand easy fix way disable warning spamming console warnings debug application option turn yet could try implement submit pr think useful feature", "d": "7/2016"}, {"body": "oocx feature disable skeptical making feature options make software harder use convinced enough problem warrant fixing binding amp co rare case", "d": "7/2016"}, {"body": "oocx fyi fix", "d": "7/2016"}, {"body": "great access data route event idea per code set page title based key route", "d": "7/2016"}, {"body": "subscribe like class herodetailcomponent ngoninit thissub thisroute data subscribe v gt consolelog v ngondestroy thissubunsubscribe", "d": "7/2016"}, {"body": "zoechi thx simple task changing page title routable component must code route change event provided easy access route shared service could put place simply swap title route specific tasks something like appcomponent typescript export class app constructor private router router private title title ngoninit thisroutereventssubscribe gt instanceof navigationend let sroutedata possible thistitlesettitle dtitle windowscrollto dx dy route immutable right need subscribe get reference copy would", "d": "7/2016"}, {"body": "already opened issue meanwhile use following workaround ts constructor public router router public activated activatedroute public titleservice title ngoninit thissub thisrouterevents filter event gt event instanceof navigationend map gt thisrouterrouterstate map state gt let route thisactivated statefirstchild route route statefirstchild route return route map route gt routesnapshotdata subscribe data gt thistitleservicesettitle data title default title", "d": "7/2016"}, {"body": "choeller works thx hopefully simple tasks like would provided box", "d": "7/2016"}, {"body": "robinkedia solution worked fine getting exactly error message following angular tour heroes tutorial executing two commands uninstall install solved issue need modify config anything thanks", "d": "7/2016"}, {"body": "sad nt worked uninstallinstall got bunch errors routerlink nt native property", "d": "7/2016"}, {"body": "mazurk try npm uninstall get latest packagejson file npm install watch missing dependencies warnings well", "d": "7/2016"}, {"body": "still nothing wrong", "d": "7/2016"}, {"body": "try new project following quick start tutorial new one works something wrong existing code monday july mazurk notifications githubcom wrote still nothing wrong receiving mentioned reply email directly view github mute thread cheers", "d": "7/2016"}, {"body": "dont think right choice mentioned trying follow tour heroes tutorial adding routing works perfectly fine routing stuff error occurs", "d": "7/2016"}, {"body": "packagejson latest file breaks tour heroes tutorial get following error edit overlooked importing well adding directive class", "d": "7/2016"}, {"body": "excellent thoughttam blog pascal says able access exported form control resulting code generates directive exportas set formcontrol", "d": "7/2016"}, {"body": "reactive form control directives actually exported access controls directly class see", "d": "7/2016"}, {"body": "thanks kara", "d": "7/2016"}, {"body": "instance variables get taken away us angularforms used work html test field test field subjectdetailsformcontrols testfield valid correct", "d": "7/2016"}, {"body": "correct exports simply nt exist reactive form directives formcontrolname formgroupname etc would duplicative already convenient ways refer component class using templatedriven strategy looks like first example still export ngmodel test field testfieldvalid clarify reactive form directives like necessary basic use cases want use ngmodel", "d": "7/2016"}, {"body": "kara modeldriven form approach thought convenient way refer via instance variable seen defining field property class like javascript export class demoformwithvalidationsexplicit myform formgroup sku abstractcontrol constructor fb formbuilder thismyform fbgroup sku validatorsrequired html sku also would verbose", "d": "7/2016"}, {"body": "specific first example listed ngmodel mentioned case code change trying bind single form control directive already reference form control whatever created class reexporting make sense html mycontrolvalid trying bind form control part larger form group save reference control add class please see true use method api look child controls necessary want improve experience", "d": "7/2016"}, {"body": "thanks kara form fields would create property field component class whereas could use instance variable guess missing something suppose one way half dozen though hey", "d": "7/2016"}, {"body": "hi kara error directive exportas set ngmodel use ngmodel textarea nt find nothing using ngmodel textarea docs", "d": "7/2016"}, {"body": "byorty looks like binding inverted rather remember banana box correct error textarea works expected sharpmachine yeah ideal many might better option definitely looking better longterm solution stay tuned", "d": "7/2016"}, {"body": "thanks kara sorry", "d": "7/2016"}, {"body": "thanks kara", "d": "7/2016"}, {"body": "kara seems angular team discouraging template driven model usage favor functional reactive programming right ask doubt model follow project thanks", "d": "7/2016"}, {"body": "kara ericcarraway error ui unit testing injecting testcomponentbuilder give error code test var builder create supplier component async gt builder overrideproviders supplierformcomponent provide appservice useclass mockappservice createasync supplierformcomponent fixture componentfixture gt fixturedetectchanges var compiled fixturedebugelementnativeelement consolelog compiled catch error gt consolelog error occured error specific way create component part unit testing read somewhere bug using templateurl unit testing use overridetemplate apparently fixed sure wrong edit noticed giving error required html tags rather textboxes", "d": "7/2016"}, {"body": "kamranpervaiz sample code looks like providing new forms module want use ngmodel export need add providers tests bootstrap", "d": "7/2016"}, {"body": "error directive exportas set ngform template action type actiontype ngform id actiontype class formcontrol required actiontypelabel bootts import disabledeprecatedforms provideforms angularforms import bootstrap angularplatformbrowserdynamic import httpproviders http angular import providerouter angularrouter import approuterprovider routes import appcomponent appcomponent bootstrap appcomponent disabledeprecatedforms provideforms approuterprovider httpproviders", "d": "7/2016"}, {"body": "baghdadisan enabling new forms api using old api code might want read docs new syntax", "d": "7/2016"}, {"body": "thank kara answer change new api error assign reference variable", "d": "7/2016"}, {"body": "something new related problem using rxjs bundle", "d": "7/2016"}, {"body": "update since following closely got way many sites production matsko reply need wootencl scroll regards routeranimations host", "d": "7/2016"}, {"body": "thanks vsimak getting back keeping close eye upcoming excited see even merged one last pieces need finish web app working", "d": "7/2016"}, {"body": "angularrouter import routerconfig angularrouter export const routes routerconfig path component home path home component home make sure match component type string require asyncroutes path component resolve yourdata dataresolver async components children routes must use webpackasyncroute path detail component detail canactivate webpackasyncroute children path component index must included path component nocontent", "d": "7/2016"}, {"body": "note angular also blocks prefixed styles like default", "d": "7/2016"}, {"body": "root app component import component angularcore import reactiveformdirectives formgroup formcontrol formbuilder validators radiobuttonstate angularforms component selector myapp directives reactiveformdirectives template export class app form formgroup constructor private fb formbuilder thisform fbgroup singleselection rio appvalidatecity validatorsrequired initial value string multipleselection red blue appvalidatecolor initial value array static validatecity c formcontrol var regexpattern new regexp test var testresult regexpatterntest cvalue testresult means validated return error return validatecity true means validated return null return null lt nt work causes errors return validatecity null lt nt cause errors valid static validatecolor c formcontrol cvalueindexof green lt return badcolor true return null", "d": "7/2016"}, {"body": "still getting error installed", "d": "7/2016"}, {"body": "also seeing error jsonp request request returning status error handler response object showing status also response headers missing wwwauthenticate", "d": "7/2016"}, {"body": "hey issue fixed please double check jsonp url make sure passing jsonpproviders parent component provider array", "d": "7/2016"}, {"body": "yes working fine calling server api localhost jsonp request works fine normally add auth check api force return unauthorized response object catch function shows status tried httpproviders seems get status response headers like wwwauthenticate", "d": "7/2016"}, {"body": "platform directives platform pipes configured via app modules ie tokens deprecated removed", "d": "7/2016"}, {"body": "mhevery mentioned tobias took care hands yes", "d": "7/2016"}, {"body": "superseded app modules see", "d": "7/2016"}, {"body": "chance makes", "d": "7/2016"}, {"body": "hey way test master right running locally master ca nt seem find issue talking", "d": "7/2016"}, {"body": "turns problem might animation related added adds class elements set class disappears element could animate", "d": "7/2016"}, {"body": "running problem looks similar happens writing jasmine test uses http service error typeerror null line gt eval line", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "exactly issue service whereby want create modal component placed end app component without viewcontainerref finding impossible", "d": "7/2016"}, {"body": "feature implemented using get root viewcontainerref way correct way gets job done", "d": "7/2016"}, {"body": "ok shall check one tomorrow say use case feel official solution provided", "d": "7/2016"}, {"body": "dsara check suggestion morning may work aside fact need provide dependancy service would appear place new component outside app component instead within component latter provider already exists would problem essential able create component within scope app component concerned last item prefer end though", "d": "7/2016"}, {"body": "heavenlyhost used method add modal service application nt need inherit existing providers applicaionref originally unable get applicationref provider passing constructor service loading modal service bootstrap provide injector manually inject applicationref provider opening modal nt know method might allow get existing providers thought post see might help nt work might get one first child components app component load next location instead root would nice function instead loadnexttolocation could loadwithinlocation something like could dynamically load component child existing component instead next injectable export class modalservice private currentmodal modalcomponent", "d": "7/2016"}, {"body": "facing problem today zoechi think bug", "d": "7/2016"}, {"body": "thejoecode looks like", "d": "7/2016"}, {"body": "thejoecode see", "d": "7/2016"}, {"body": "hi kara unfortunately bug missing event fixed yet change plunker event still get fired miss anything thanks verifying", "d": "7/2016"}, {"body": "thomashilzendegen seems working check plunker see status change false console might note removed initialstatus property original reporter plunker changing value afterviewinit hook cause expression change checked error expected testing differently modify plunker show looking", "d": "7/2016"}, {"body": "kara fault increase forms package version working perfectly thank", "d": "7/2016"}, {"body": "compilerconfig needed users call function create compiler given options", "d": "7/2016"}, {"body": "problem forms longer behave predictably example would formvalue way refer input added would undefined someval absent input simply serialized form json serializing json opt approach providing opt using cases need construct json input fields conform web service request form json terribly useful cases specify times simply bad ergonomics api", "d": "7/2016"}, {"body": "discovered form tag ngif directive error vanish want use form control validation binding value model could something like", "d": "7/2016"}, {"body": "uhoh definitely shorter might considered bug instead feature get fixed p", "d": "7/2016"}, {"body": "closing duplicate", "d": "7/2016"}, {"body": "updated plunker currently seems like issue reproducible chrome firefox ie edge seem fine however chrome beta still displays issue timer stops working seconds", "d": "7/2016"}, {"body": "mac chrome reproducible", "d": "7/2016"}, {"body": "getting issue testing stuff received resolution yet using systemjsconfig provided quickstart", "d": "7/2016"}, {"body": "using claimed changelog issue resolved build fix error package publishing step script errors umd bundl", "d": "7/2016"}, {"body": "workaround used hack systemjs configuration file always uses module var ngpackagenames common compiler core platformbrowser platformbrowserdynamic router routerdeprecated upgrade testing var ngindexpackagenames individual files requests function packindex pkgname packages angularpkgname main indexjs defaultextension js bundled requests function packumd pkgname packages angularpkgname main pkgname umdjs defaultextension js var setpackageconfig systempackagewithindex packindex packumd add package entries angular packages ngpackagenamesforeach setpackageconfig ngindexpackagenamesforeach packindex", "d": "7/2016"}, {"body": "many thanks workaround foch", "d": "7/2016"}, {"body": "closing since related deprecated router", "d": "7/2016"}, {"body": "danielamelo long researches found bigger bug expected problem decorator able add right metadata problem found cases one extends angular class metadata changed multiple issues based bug plunkr demonstrates issue extended xhrbackend metadata normal xhrbackend constructor params injected", "d": "7/2016"}, {"body": "still appears", "d": "7/2016"}, {"body": "problem", "d": "7/2016"}, {"body": "override property works js component template selector fileuploadarea directives fileupload filedroparea previewfiles providers valueaccessor export class fileuploadarea extends defaultvalueaccessor input max value todo hack allows use defaultvalueaccessor parent removed fixed static decorators null", "d": "7/2016"}, {"body": "mean binary per locale deployed resource file going binary little bit like pomo mo used insted po improve performance also bad examples binary deployment xamlbaml happy current anguar localization methods reasons several different apis methods modify templates much original templates become hard read maintain manually update original resource file make sure sync ids used template really need one single official localization method solid resource format xml json based minimal affect templates example add localize attribute root element possible noloc attributes elements localized ability add localization comments strings templates tool scans source code extracting orignal strings comments resource file use permanent ids possible example use id attributes provided use combination location original string value resource file able store plain strings strings patterns pluralized strings gender strings little bit like android value files easy way package localized resources download needed ability change language without reload ready help guys need help", "d": "7/2016"}, {"body": "wishes come true one exception ability change language without reload changing language imply bootstrapping new app", "d": "7/2016"}, {"body": "thanks sound good language change something occurs seldom case acceptable state lost definetely lowest priority list worth spending much efforts", "d": "7/2016"}, {"body": "vicb sure understand binary per locale correctly would mean possible add translations runtime currently building saas tenant support tenant extend system providing set formdefinitions set translations case would really important able add translations runtime", "d": "7/2016"}, {"body": "angularcommon datepipe datepipets currently contains todo line ability pass locale string datepipe included plans release", "d": "7/2016"}, {"body": "vicb app sets frontend language fetch user object network bootstrapping application define process reboostrapping would easy", "d": "7/2016"}, {"body": "point issue created one try navigate oninit function rootcomponent navigate event cancelled happen method initialnavigation router called initialization rootcomponent cancelling current ongoing navigation event caused settimeout fix issue increase lifecycle hooks whatever strategy guys intent", "d": "7/2016"}, {"body": "introducing maybe want something lifecycle method like module class", "d": "7/2016"}, {"body": "modules eager ie constructor used app initializer well wed jul pm suguru inatomi notifications githubcom wrote introducing appmodule maybe want something lifecycle method like ngmoduleloaded module class receiving assigned reply email directly view github mute thread", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "hello andrew", "d": "7/2016"}, {"body": "zoechi got thanks", "d": "7/2016"}, {"body": "matsko curious solve problem adding components using removing using animations fire assuming animations nt work trigger needs removed component host example", "d": "7/2016"}, {"body": "deprecated using instead results animation exception nt know animations yet", "d": "7/2016"}, {"body": "zoechi thanks updating plunker seeing error though chrome version", "d": "7/2016"}, {"body": "typeerror failed execute animate element null valid value easing linux", "d": "7/2016"}, {"body": "looks like animation bug w linux works fine mac", "d": "7/2016"}, {"body": "zoechi bug fixed apart use easing setting timing eg", "d": "7/2016"}, {"body": "closing trying get better sharing plans via weekly meeting doc listed blogposts acknowledge progress changes frequent posts amp messages headed", "d": "7/2016"}, {"body": "works new router", "d": "7/2016"}, {"body": "issue relevant anymore nt wrappers anymore cc juliemr", "d": "7/2016"}, {"body": "yup let close one", "d": "7/2016"}, {"body": "think closed ca nt reproduce", "d": "7/2016"}, {"body": "generate bootstrap injector see", "d": "7/2016"}, {"body": "fwiw also issue moment working around declaring custom exception handler order work around issue type definitions spent hours trying figure ca nt ever get one uncaught exception appear documented anywhere typescript injectable class myexceptionhandler note nt extend exceptionhandler issue typings file call error stacktrace null reason null something exception consolelog error consoleerror nt seem work debugger", "d": "7/2016"}, {"body": "similar problem created issue also plunkr demonstrates problem", "d": "7/2016"}, {"body": "vicb take look plunkr really like", "d": "7/2016"}, {"body": "templth seems bigger problem di affects affects nearly baseclasses seesms like decorators able override metadata baseclasses information", "d": "7/2016"}, {"body": "also happens using provider literals eg following code wrong class declared provider super hard debug right let providers provide someclass useclass someclass class someclass cc vsavkin", "d": "7/2016"}, {"body": "current status", "d": "7/2016"}, {"body": "closing activity whlie", "d": "7/2016"}, {"body": "plans fix", "d": "7/2016"}, {"body": "issues named outlets plunk router illustrates issues basically one route named outlets using either docs ca nt find articles tutorials clear whether bugs things wrong ignorance edit found answer routerlink nt yet support named routernavigatebyurl already achieved aux routes fully supported several known issues", "d": "7/2016"}, {"body": "suggestion work router also looking fix", "d": "7/2016"}, {"body": "seems fix", "d": "7/2016"}, {"body": "joelrich add dynamic component another component without children solve", "d": "7/2016"}, {"body": "kyiis use target nt need add artificial anchor element never gets added dom sure asking", "d": "7/2016"}, {"body": "zoechi tried failed description hop dynamic insert component componentts", "d": "7/2016"}, {"body": "keyiis problem", "d": "7/2016"}, {"body": "zoechi runtime replaced body target insert body target", "d": "7/2016"}, {"body": "currently developing large client therefore trying break gui related problems reusable directives always leads problem james pointed perfectly really work somehow sake good modular dynamic architecture touch example one many scenarios needed eg drag amp drop resize observing etc etc etc made another example plunker chance functionality added time soon stackoverflow question related", "d": "7/2016"}, {"body": "quickstart lives angulario repo moved issue", "d": "7/2016"}, {"body": "iirc issue angulario adding doc", "d": "7/2016"}, {"body": "hot similar error using forms data driven approach uncaught promise typeerror read property setparent null hours continuous searching debugging found form formgroup myform directive tried use formcontrolname email without formgroup directive got cryptic error course dumb mistake way know missing formgroup directive trying debugging anything please verify got dependencies need providers directives etc", "d": "7/2016"}, {"body": "alongbbe related issue seems valid bug try latest forms release reproduce plnkr may want file issue", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "andrui longer maintaining deprecated router focus efforts making new router solid could reproduce problem new router submit separate issue closing issue", "d": "7/2016"}, {"body": "closing new router provides access configuration", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust closing issue could reopen issue plunker using new router", "d": "7/2016"}, {"body": "addition synchronous upcoming deprecation issue obsolete closing", "d": "7/2016"}, {"body": "hey meiriko facing problem mentioned input field looses focus enter first letter find solution attached working problem please reply", "d": "7/2016"}, {"body": "hey harunurhan trying implement inline editing using ngfor ngmodel combined implement trying iterate array trying edit enter remove one letter attached working problem please help", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router solid functionality implemented new router closing issue", "d": "7/2016"}, {"body": "hi one works import script shimminjs index page packagejson file add working well ie", "d": "7/2016"}, {"body": "naughtyexperience facing issue routes working fine use normal flow instead want bookmark url url able launch bookmarked url get get url error browser", "d": "7/2016"}, {"body": "get get url error browser probably due server config believe real issue angular please provide repro case thanks closing outdated", "d": "7/2016"}, {"body": "reproduced alexeagle work date version angular entire build process automatic follow everything source end result see action instructions running example found readme example repo docker container project possible pretty much anyone try example utilizes angular clutz tsickle closure js used angular ts compiled closure compatible js changes made dependencies get work largely alex changes added changes longer necessary regardless basic idea use modified ngc tsickle angular dependencies produce closure compatible versions dependencies closure compiler building head longer necessary use one versions june july angular bulk work angular source modifying ngc produce closure compilable js adding tsickle steps tscwrapped hoops jump order use modified source input typescript compiler one tsickle passes otherwise pretty straight forward also change certain angular modules compiled closure compatible js putting block tsconfigjson like run modules output want test utillity file uses seleniumwebdriver modified seleniumwebdriver missing nt want make closure compatible rxjs build process rxjs modified build makefile project half build process js half make pretty janky changes besides build target small things make rxjs compile typescript closure symbolobservable rxjs dependency rxjs depends code used part rxjs source module modify module js compatible closure compiler two files manually tsickle modify tsickle two ways add ignoretypesincomments option prevents tsickle throwing error encounters jsdoc comments needed compile rxjs bunch jsdoc comments modify cli use ngc way modules named run tsickle ngc committed upstream current sometimes produces invalid googmodule names", "d": "7/2016"}, {"body": "run treeshaker remove modules reachable entry point demo showed rollup run bundler reduce module imports declarations single file showed systemjs downlevel showed typescript minify shorten symbol names used uglify whilst perhaps match final output size closure compiler webpack using typescript loader standard optimize plugins gets steps would argue benefit devs already using dare say requiring tool like webpack stack therefore add hacked dependencies important shaving extra bytes final payload would love hear thoughts", "d": "7/2016"}, {"body": "jjudd thank much posting repo notes really helpful minified app size share perhaps using brotli compression applestoapples comparison hello world example jameshenry agree webpack way forward developers closure compiler expert tool doubt wrap package works developers nt already familiar debugging obscure ways advancedoptimizations bust app", "d": "7/2016"}, {"body": "alexeagle currently working getting work advancedoptimizations get working go ahead post benchmarks", "d": "7/2016"}, {"body": "converted tsickle issue bug report", "d": "7/2016"}, {"body": "closure compiler available npm pure javascript", "d": "7/2016"}, {"body": "tried select binding using ngmodel first option shown select box default firefox even though select value empty working expected chrome firefox select box empty default option selected", "d": "7/2016"}, {"body": "mattxo facing issue outlet testing sure mock router could please send example thanks", "d": "7/2016"}, {"body": "tschuege memory provide mock instead real thing", "d": "7/2016"}, {"body": "docs issues reported repository", "d": "7/2016"}, {"body": "hi getting error trying migrate project gradually release another neglect assuming fixed upgraded actual packagejson content name version scripts start tsc amp amp concurrently npm run tsc w npm run lite lite liteserver postinstall typings install tsc tsc tsc w tsc w typings typings license isc dependencies devdependencies concurrently liteserver typescript typings", "d": "7/2016"}, {"body": "baghdadisan much point commenting closed issue still see confusing errors please open new issue minimal reproduce scenario plunker", "d": "7/2016"}, {"body": "sure previously said issues app due provider created nonempty constructor hope helps someone", "d": "7/2016"}, {"body": "laskoviymishka white space already something programmer think globally yes user need insert name minlength maxlength makes absolutely sense validation insert spaces propose write validators instead builtin validators functions think many cases would require trim value experience never case fact propose every angular programmer writing validators standard ones absolutely useless cases technically space symbol yes nobody prevents us eg", "d": "7/2016"}, {"body": "case probably regex validation prefered", "d": "7/2016"}, {"body": "workaround works case lose control error message eg regex validation check allowed symbols let say allow spaces name additionally say regexp validation check length well eg nt know reason error symbols length way show proper message user something like input wrong work already told absolutely right ways make work opinion angular support trimming way box", "d": "7/2016"}, {"body": "could add validators one length another one non empty string simple spaces say people spaces illegal input entered say people add keep simple", "d": "7/2016"}, {"body": "yes say custom validators exactly simple simple take validator already exists work simple validator already exists nearly always useless", "d": "7/2016"}, {"body": "required validator intended mimic native required validator works also accepts white spaces valid input apps different requirements framework nt make sense us depart native functionality prescribe white spaces nt count globally mentioned creating custom validator would preferred solution", "d": "7/2016"}, {"body": "ericmartinezr tnx doc link issue old app link provides good insights cheers", "d": "7/2016"}, {"body": "brandonroberts posted solution", "d": "7/2016"}, {"body": "closed error nt fixed", "d": "7/2016"}, {"body": "issue fixed see last comment", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router solid add security routes using guards instead extending outlets new router also able extend outlets closing issue", "d": "7/2016"}, {"body": "deprecated", "d": "7/2016"}, {"body": "able reenable test works however problems test isolation would throw run together others tests nt use able reproduce exactly though", "d": "7/2016"}, {"body": "actually still problem new new router", "d": "7/2016"}, {"body": "bstaley works property map exist type observable thank", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "tbosch mhevery plan include shortly least indication tackle problem using another approach", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "still issue angularrouter", "d": "7/2016"}, {"body": "killercodemonkey solve issue", "d": "7/2016"}, {"body": "nope gave test angular app playing around newer rcs tried test working beta releases maybe check working", "d": "7/2016"}, {"body": "killercodemonkey solved adding make interval greater settimeout function karmatestshimjs try using rc", "d": "7/2016"}, {"body": "changed", "d": "7/2016"}, {"body": "good idea open issue docs site closing nt bug feature request", "d": "7/2016"}, {"body": "corejs much better perfect ie close", "d": "7/2016"}, {"body": "given dupe issue workaround going close one thanks reporting", "d": "7/2016"}, {"body": "edited original comment nt really answer question issue originally filed april new forms module came looking sample code seems issue obsolete easy ways access form control reactive forms without exporting use method something like nested example save reference control class pascal original solution want shortcut control fine way even better way would add getter like want add class based validity state using ngvalid nginvalid etc classes built already would simplest way long add validators create form group eg instead relying html validators like required alone nt run change detection errors validation runs immediately also need add validators dom accessibility reasons include validator places ill effects simply composed eventually would like add functionality adds required attribute etc dom add formgroup closing ways access form controls template already anyone ideas shortereasier syntax might look like happy discuss", "d": "7/2016"}, {"body": "issue still present hoping gets resolved final least guidance angular team work around limitation", "d": "7/2016"}, {"body": "brandonroberts used hashroutingstrategy switch components oninit isnt called url directly typed address bar works fine anchor tag used click title", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "using inheritance would like avoid still nt know go composition also looking forward article", "d": "7/2016"}, {"body": "closed", "d": "7/2016"}, {"body": "updates", "d": "7/2016"}, {"body": "thanks posting workaround modified constructor slightly account new router anyone looking export class appcomponent new router nt subscribe method going addressed", "d": "7/2016"}, {"body": "think issue fixed commit new new new router release cycle fix probably part next release currently", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router solid new router supports functionality closing issue", "d": "7/2016"}, {"body": "ca nt reproduce", "d": "7/2016"}, {"body": "lint check live circleci", "d": "7/2016"}, {"body": "dup", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router solid issue new router", "d": "7/2016"}, {"body": "progress made believe still room improvement", "d": "7/2016"}, {"body": "closing size already main focus final release different pb angularcli please report", "d": "7/2016"}, {"body": "recommended method scrolling top suggested workaround longer works", "d": "7/2016"}, {"body": "andyrue nt think would recommended posted update", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router solid activation done via guards new router closing issue", "d": "7/2016"}, {"body": "rethinking design inputs coming view content init even ngoninit using setters inputs perform something depend view components ca nt component initialization next time inputs changed creates dummy code like typescript export class datepicker implements afterviewinit ngafterviewinit ngoninit described thisisinited true thisdosomethingviewrelated thisdata", "d": "7/2016"}, {"body": "router update migrated custom router outlet router however facing new set challenges background nativescript implemented works sync native navigation way works navigating forward current components destroyed kept current page new page created host new component application navigates page navigation backwards current components destroyed however instead creating new component instance native back navigation executed shows previous page cached components pagerouteroutlet implementation spike detailed info angular routing nativescript although nativescript specifics essence persisting reusing component instances navigating question raised several threads implementation might face problems problems challenges navigating backwards new components created instead revived form cache activatedroute way reinject new instance activatedroute passed outlet activate method subscribers activatedroute inside component listening outdated activated route instance overcome created pageroute class contains updated every back navigation pageroute injected component initial navigation way getting hold actual activatedrouteparams buildin angular way persisting components take care updating instance already injected persisted component routeroutletmap way reinject fact child outlets inside cached component already registered outletmap injected first time component navigated need cache initial instance outlet map restore state instance given activate method subsequent navigation obviously sustainable solution however api mergeupdate might solve problem would appreciate thoughts perhaps vsavkin might opinion going right direction future version router help us clear hacks currently code", "d": "7/2016"}, {"body": "hi may said issues faced nativescript issues easily observed n background lets say application infinite navigation least unknown level deep one example list shows items time click item navigates forward page shows list items etc way one may handle navigation create list component reused navigation item page pressed simply navigate via pass necessary args component use subscribe order retrieve passed params use make calls backend items needs show list finally need make sure list component never reused interfere application navigation stack done overriding list component problems challenges ever since releases approach longer possible since removed solutions currently making dummy components identical copies list component simply different class name use declare additional routes routerconfig optional allow infinite navigation desired would great way override default reuse condition component make possible create component never conditionally reused rather count angular automatically resolve component reused", "d": "7/2016"}, {"body": "vladimiramiorkov think reopen issue cc vsavkin", "d": "7/2016"}, {"body": "vicb issues describes multiple concerns challenges think addressed experience major one non availability overriding component reused showstopper scenarios would like share code component multiple pages want achieve fill navigation history old functionality exactly expecting see angular component could reopen issue create new one nt matter matters functionality available angular", "d": "7/2016"}, {"body": "cc mhevery", "d": "7/2016"}, {"body": "use helper method", "d": "7/2016"}, {"body": "know use one would expect inoperator also supported anyway", "d": "7/2016"}, {"body": "running issue known workarounds", "d": "7/2016"}, {"body": "nt find workaround running code browser nt run across since reported sure reflection occurs stack trace handy may need mhevery assist reflectively instantiate things", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "yes looks right know fix fri jul pm victor berchet notifications githubcom wrote receiving assigned reply email directly view github mute thread", "d": "7/2016"}, {"body": "yes know", "d": "7/2016"}, {"body": "believe works place problem also happens runtime compiled file", "d": "7/2016"}, {"body": "factories transpiled work", "d": "7/2016"}, {"body": "wait transpiled pb class use", "d": "7/2016"}, {"body": "ryan trying runtime classes generated code would need allow well fri jul pm victor berchet notifications githubcom wrote wait transpiled pb class use class receiving assigned reply email directly view github mute thread", "d": "7/2016"}, {"body": "think emit eval code needs new emitter config flag", "d": "7/2016"}, {"body": "vsavkin mhevery updates issue", "d": "7/2016"}, {"body": "since nt mentioned yet also affects android possibly successfully used workaround", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "unhelpful pkozlowskiopensource wellformed question need post link response", "d": "7/2016"}, {"body": "rambatino many incoming issues afford spend much time documentation gh templates let users know use issue tracker", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust provide custom url serializerdeserializer using new router wrap default serializer instance lowercase url closing issue", "d": "7/2016"}, {"body": "able control casesensitivity routes important regex andor custom serializers bit much something basic like close request keep open nice", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "dup", "d": "7/2016"}, {"body": "use", "d": "7/2016"}, {"body": "vicb nt think use would ngctrl come know whether field required value becomes false providing value password field login button become enable happening", "d": "7/2016"}, {"body": "radio buttons revamped new forms module onward longer require separate underlying controls see new usage closing issue longer applicable please feel free reopen see problems new module", "d": "7/2016"}, {"body": "new router based lot upon observables currently investigating backport angular either way version router issue refers longer maintained providing fix", "d": "7/2016"}, {"body": "closing repro case", "d": "7/2016"}, {"body": "issue made obsolete router believe close", "d": "7/2016"}, {"body": "still happens plans", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust closing issue look like issue present new router think please reopen punker uses new router", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust look like issue makes sense new router think please reopen context new router closing issue", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust possible configure new router set custom active class closing issue", "d": "7/2016"}, {"body": "plans fix pr", "d": "7/2016"}, {"body": "martinwegner error reverted pr", "d": "7/2016"}, {"body": "workaround available", "d": "7/2016"}, {"body": "tweeted pr someone community reimplement pr support", "d": "7/2016"}, {"body": "issue vankeer workaround solve even tried cloning juliemr adding mentioned test luck either nt problem test environment setup may related issue", "d": "7/2016"}, {"body": "justinromano works moved one pipe parent component declare text", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router solid new router allows subscribe routing events closing issue", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router solid nt look like issue makes sense context new router think please reopen issue closing issue", "d": "7/2016"}, {"body": "francescomussi nt doc need improvement ie instead saying app loads see list heroes something else", "d": "7/2016"}, {"body": "please reopen angularangulario still issue thanks", "d": "7/2016"}, {"body": "think closed", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router solid nt look like issue makes sense context new router think please reopen issue", "d": "7/2016"}, {"body": "robwormald mhevery left issue need document workaround jsauthored apps suggested op need document cookbook tooling downstream", "d": "7/2016"}, {"body": "friendly ping updates think another way get elementrefthe tag name component", "d": "7/2016"}, {"body": "documentation struggling test component implements controlvalueaccessor component works great simple test cases failing seem difficult write", "d": "7/2016"}, {"body": "easier landed", "d": "7/2016"}, {"body": "possible behavior exactly edge cases", "d": "7/2016"}, {"body": "find plunkr reproducing issue", "d": "7/2016"}, {"body": "solution item wrap ngfor separately outside wondering maybe documented somewhere error specific since lot people coming used templating lt div ngif itemname test gt test", "d": "7/2016"}, {"body": "solution item wrap ngfor separately outside yes nt wa nt see additional elements rendered dom use tag", "d": "7/2016"}, {"body": "oh okay wanted make sure thank pawel anyway create better throwing specific scenario maybe incase", "d": "7/2016"}, {"body": "really nt like idea using another extra html element get rid problem designer freedom design way look perfect right ca nt come say oh right ca nt use ngfor performance issue make method call get desired dataset class within ngfor", "d": "7/2016"}, {"body": "imalhasaranga element placeholder actually included generated htmldom", "d": "7/2016"}, {"body": "reason work works took documentation", "d": "7/2016"}, {"body": "constraint ca nt multiple template directives element", "d": "7/2016"}, {"body": "typings shipped angular npm distro please reopen still problem", "d": "7/2016"}, {"body": "think meat issue preventing default behavior case attribute specified anchor user migrating would expect behave time best workaround come less ideal inverse scenario nt equal intending fire browser navigation handler would seem less prevalent former scenario imho said also agree use tag poses potential cause significant conflicts thirdparty components photo album viewers use linking directly specific photo bootstrap tab component uses hash link specific tab think separate issue though goes beyond behavioral consistency treads router changed yet aid compatibility third party code personal take believe reaches wider adoption thirdparty pieces brought date compatible new router framework usecase specific shims made available casebycase basis", "d": "7/2016"}, {"body": "pablocarreraest work nt offered explanation", "d": "7/2016"}, {"body": "ruppalsingh also newbie angular seems compiler typescript let learn well keep update issue anyone good answer guide us nice hear recommendation learn typescript typescript repo", "d": "7/2016"}, {"body": "consider complete final rename", "d": "7/2016"}, {"body": "hi problem array handle tabs content delete tab correspondency array contents tabs reloaded deleting entry array using ngfor html problem workaround using second array content contentdiv still dom delete tab first array nt solution using angular", "d": "7/2016"}, {"body": "worked week top priority", "d": "7/2016"}, {"body": "way would animations immutable full update like something like html messagebody", "d": "7/2016"}, {"body": "plunk think exhibits another variation problem removing last item works removing first item causes void animation run elements end removed", "d": "7/2016"}, {"body": "robertmesserle working problem days close getting solution time", "d": "7/2016"}, {"body": "pr tests passing mhevery looking final corner cases", "d": "7/2016"}, {"body": "know right place post something docs guide someone attest fact doc link using name ngform instead name ngmodel quite often jump inconsistenciesincomplete info docguidetutorial leaves guessing", "d": "7/2016"}, {"body": "niwsa look top page linked see says guide deprecated forms api actually correct suggesting ngform export using module also links docs using new forms module updated use ngmodel export might expect said ideal two sets docs bound confusing soon switching new forms docs default display avoid type confusion hopefully nt lose much time", "d": "7/2016"}, {"body": "thanks kara think exercise restraint posting something looks like spamming forums p", "d": "7/2016"}, {"body": "worries glad could point updated docs improvements coming", "d": "7/2016"}, {"body": "hi please close", "d": "7/2016"}, {"body": "brandonroberts example works fine angular angular team changed router works latest see examples get component router working within upgraded environment", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "added corejs quickstart recommend nt work back old approach adding nodemodulessystemjsdistsystempolyfillsjs", "d": "7/2016"}, {"body": "wardbell using library translation purpose used pipes text translated pipes nt seems work case tried using shimsforiejs recommended beta version using downloaded shimsforiejs placed inside scripts folder app accessed script tag indexhtml still angular pipes nt seems work works fine chrome firefox code cross reference", "d": "7/2016"}, {"body": "use corejs instead shims ie nt know make difference case though oliver builds usually helpful", "d": "7/2016"}, {"body": "longer", "d": "7/2016"}, {"body": "current rc seems broken causes exception", "d": "7/2016"}, {"body": "instead let app reflectiveinjector resolveandcreate browserappproviders get applicationref however depending bootstrapping app custom bootstrap using componentresolver looks like deprecated", "d": "7/2016"}, {"body": "thanks seems promising causes different error", "d": "7/2016"}, {"body": "changed bit following code works already suggested bootstrapping via componentresolver broken export function bootstrapwithelement componenttype type selector string promise causes ideas diverging far original goal pass custom element selector bootstrap process", "d": "7/2016"}, {"body": "broken follow tracking issue", "d": "7/2016"}, {"body": "hi everyone wan na know whether mechanism implemented workaround", "d": "7/2016"}, {"body": "news feature", "d": "7/2016"}, {"body": "fixed radio buttons rewritten sanity check plunker seems resolved closing please feel free reopen plunker still problems", "d": "7/2016"}, {"body": "txt files angular project usually vercaelus", "d": "7/2016"}, {"body": "synchronous event emitter would work edit synchronous emitter nt work", "d": "7/2016"}, {"body": "workaround", "d": "7/2016"}, {"body": "nt used service use observable instead", "d": "7/2016"}, {"body": "please tell using observable better eventemitter", "d": "7/2016"}, {"body": "aburakab better currently extends might change time without notice private implementation detail", "d": "7/2016"}, {"body": "nt following work right", "d": "7/2016"}, {"body": "vsavkin beta broke empty array yields href attribute think nt verified generated href points page", "d": "7/2016"}, {"body": "router works", "d": "7/2016"}, {"body": "seems like issue forms router", "d": "7/2016"}, {"body": "interesting ran trouble debouncetime used async validators nt find solution yet", "d": "7/2016"}, {"body": "link working plunk demonstrating async validators observable chains", "d": "7/2016"}, {"body": "get first last customtrackby index number obj last boolean debugger return index last always undefined", "d": "7/2016"}, {"body": "apparently longer supported still utilized updated got following error attributes", "d": "7/2016"}, {"body": "seeing issue beta well", "d": "7/2016"}, {"body": "also issue angular team flying", "d": "7/2016"}, {"body": "probably nt issue awhile works expected", "d": "7/2016"}, {"body": "similar issue well change url via navigation bar nothing visible happens interact page content eg click somewhere", "d": "7/2016"}, {"body": "castamir would need plunker reproduce otherwise actionable", "d": "7/2016"}, {"body": "closing works expected please open new issue plunker still issue latest rcs", "d": "7/2016"}, {"body": "progress also trying write custom exception handler want inject http make able post errors server ca nt seem", "d": "7/2016"}, {"body": "mbrookson please read comment", "d": "7/2016"}, {"body": "zoechi nt support request nt drag internal class implementation projects override global exception handler", "d": "7/2016"}, {"body": "actually managed using jquery seems good solution angular application crashes might able continue using http class however able still hit error handler call ajax without tied angular", "d": "7/2016"}, {"body": "upgraded mbrookson said application crashes upgraded realized custom exception handler nothing since application crashes previous behaviour current view destroyed full app associated router chance zoechi workaround use upgrade remain pending", "d": "7/2016"}, {"body": "tbragaf use another library jquery handle sending exception nt relying angular framework crashed able continue works", "d": "7/2016"}, {"body": "thanks thelgevold setting clearing validators existing controls added see", "d": "7/2016"}, {"body": "duplicate", "d": "7/2016"}, {"body": "github link navigationspec working could please share updated link", "d": "7/2016"}, {"body": "also issue subject locate find module angularsrcrouterrouter order import rootrouter using", "d": "7/2016"}, {"body": "outdated", "d": "7/2016"}, {"body": "got issue async inject test wait async calls finish news", "d": "7/2016"}, {"body": "still issue", "d": "7/2016"}, {"body": "solved rc releases offline compile", "d": "7/2016"}, {"body": "see router beta still suffers problem solution yet", "d": "7/2016"}, {"body": "router release update url including hash correctly make view jump anchor specified hash let assume location clicking link update browser url far good however view automatically scrolljump element id test plans fix missing something", "d": "7/2016"}, {"body": "using retrieve fragment focus comments section", "d": "7/2016"}, {"body": "found answer", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "links thread", "d": "7/2016"}, {"body": "cheapsteak search angulario docs view api get actual link", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust look like issue makes sense new router think please reopen context new router closing issue", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router solid nt look like issue makes sense context new router think please reopen issue", "d": "7/2016"}, {"body": "seem case someone enlighten angular using", "d": "7/2016"}, {"body": "load hammerjs angular one ex modulesplayground iirc", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router solid could reproduce problem using new router submit separate issue closing", "d": "7/2016"}, {"body": "use ngformcontrol formnamecontrols name instead ngcontrol name", "d": "7/2016"}, {"body": "happens rc working select multiple working firefox ie edge plunkr new form control", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust could reproduce problem new router submit separate issue closing issue", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router solid nt look like issue makes sense context new router think please reopen issue", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router solid issue new router", "d": "7/2016"}, {"body": "plunker stringham made day thanks", "d": "7/2016"}, {"body": "still issue clear difference behavior native shadow dom case please create plunkers one shows behavior native shadow dom one shows shim correct thanks", "d": "7/2016"}, {"body": "beforeeach gt addproviders mockbackend baserequestoptions block login async inject userservice mockbackend serviceinstance userservice backend mockbackend gt const mockedresponse new responseoptions body token eyjhb works", "d": "7/2016"}, {"body": "issue", "d": "7/2016"}, {"body": "add selector component create tag closing issue tracking", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router solid nt look like issue makes sense context new router think please reopen issue", "d": "7/2016"}, {"body": "problem code executes ngonchanges code triggered running immediate workaround wrapping component test unit tests wondering angular team thinks proper solution problem would", "d": "7/2016"}, {"body": "unit test ca nt call ngonchanges example import simplechange angularcore let oldpropertyreference let newpropertyreference test let changes new simplechange oldpropertyreference newpropertyreference fixturecomponentinstancengonchanges someinputproperty changes", "d": "7/2016"}, {"body": "router deprecated", "d": "7/2016"}, {"body": "closing one duplicate thanks reporting", "d": "7/2016"}, {"body": "router deprecated", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "router deprecated", "d": "7/2016"}, {"body": "seeing really hate use actually work", "d": "7/2016"}, {"body": "right used work longer working", "d": "7/2016"}, {"body": "romangotsiy plunker works intended variable declared inside used outside plunker way around works time issue filed case though ie work thingname something", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "tbosch sure closing seems desired functionality one outlined original post issue", "d": "7/2016"}, {"body": "guess open separate issue problem mentioned", "d": "7/2016"}, {"body": "tried reproduce issue plunkr nt able angular component seems occur vaadingrid elements reopened issue", "d": "7/2016"}, {"body": "poke yes example comment shows desired behavior plunker shows working opposite way ie declare variable inside use outside working wo nt work design", "d": "7/2016"}, {"body": "please forget feel free delete comment", "d": "7/2016"}, {"body": "vicb work latest ie works fine simple animations trigger animatetrigger state hidden style transform translatex state left style transform translatex state right style transform translatex simply set state style element errors console", "d": "7/2016"}, {"body": "stumbled across fact input nt seem work navigating page via router user interaction agree work", "d": "7/2016"}, {"body": "really awesome people concerned agree work total page load work specified general however taking focus something used carefully expect autofocussing component could cause issues tries solve would make assumptions user would want app hosted inside page section example using angular inside cms would autobypass rest page function render things like skiplinks obsolete fact could already happen nested components nested component focus setting component element focussing would force users fully decorate every component aria e", "d": "7/2016"}, {"body": "hi close", "d": "7/2016"}, {"body": "still issue", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "thanks linux mint", "d": "7/2016"}, {"body": "issue updates", "d": "7/2016"}, {"body": "nosachamos thanks reporting lot changed forms since looks like problem resolved see updated plunker long use validatorsrequired nt see change detection error please feel free reopen misunderstanding run additional issues onward", "d": "7/2016"}, {"body": "thanks update kara", "d": "7/2016"}, {"body": "outdated", "d": "7/2016"}, {"body": "need call thischangedetectionrefdetectchanges every children property change parent", "d": "7/2016"}, {"body": "well encountered issue two sibling components using data object objects suppose able update data source source actually see change object triggets expression changed checked previous value true current value false", "d": "7/2016"}, {"body": "happened upgrading", "d": "7/2016"}, {"body": "started getting upgrading", "d": "7/2016"}, {"body": "maybe change caused communicated breaking change change log kuz stuff broken", "d": "7/2016"}, {"body": "need wait final stopped using child components updating external properties sucks thought zones", "d": "7/2016"}, {"body": "dynamic component loading via viewcomponentref seems behave differently working dependencies dependencies angularcommon angularcompiler angularcore angular angularplatformbrowser angularplatformbrowserdynamic systemjs corejs reflectmetadata rxjs zonejs devdependencies typescript typings concurrently liteserver dependencies producing mentioned error dependencies angularcommon angularcompiler angularcore angular angularplatformbrowser angularplatformbrowserdynamic systemjs corejs reflectmetadata rxjs zonejs devdependencies typescript typings concurrently liteserver nt working either", "d": "7/2016"}, {"body": "question way get information error example would nice know expression error says expression changes true false", "d": "7/2016"}, {"body": "also exact issue upgrading figured due function component comment function error message went away everything works fine thoughts", "d": "7/2016"}, {"body": "closing issue old actions taken still problem make sure create new issue fill issue template required details thanks", "d": "7/2016"}, {"body": "people saying still experiencing issue new rc wed jul victor berchet notifications githubcom wrote closed receiving mentioned reply email directly view github mute thread", "d": "7/2016"}, {"body": "yes upgraded nt make single change component configuring new router ran issue good seems like still around", "d": "7/2016"}, {"body": "info turns due call inside error occurs comment async call code move piece code constructor everything works fine", "d": "7/2016"}, {"body": "call changes changedetectionrefdetectchanges", "d": "7/2016"}, {"body": "yes workaround indeed feels super hacky would expect framework like angular handle gracefully rather making us manually trigger change detection mechanism", "d": "7/2016"}, {"body": "case happening subscribing angular event emitter show hide progressbar good break repro click heroes link select one hero edit see error please see changes", "d": "7/2016"}, {"body": "hey vicb thanks update tell us actions taken mean like fixed next release", "d": "7/2016"}, {"body": "another simple alternative solution worked return value observable delay emitting values case exception occurring spinner value worked javascript private spinner new subject togglespinnerannounced thisspinnerasobservable delay delay important announcespinnertoggle show boolean thisspinnernext show", "d": "7/2016"}, {"body": "worked using delay related observable behaviour using stettimeout", "d": "7/2016"}, {"body": "jarvens please stop posting comment unappropriate places github issues bug reports feature requests support questions please use channels like ones listed contributing got question problem comment nt provide enough information diagnose problem", "d": "7/2016"}, {"body": "ran solving something similar accomplished passing form object input child components docs something similar", "d": "7/2016"}, {"body": "outdated", "d": "7/2016"}, {"body": "use ngtrackby solve issue", "d": "7/2016"}, {"body": "think ideally finder method returns actual control instances abstractcontrol could thismyformwhateverthatonlymatchescontrolinstances goalweight updatevalue need cast simple still verbose need touch class hierarchy", "d": "7/2016"}, {"body": "similar workaround tejainece mentioned something else typescript version following putting chrome packaged app get xhr finished loading get chromeextension djkmfolbhphnbopjiogjkdanjodiefejappmainjs scheduletask anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function xhr finished loading get chromeextension djkmfolbhphnbopjiogjkdanjodiefejnodemodules angularplatformbrowserdynamicbundlesplatformbrowserdynamicumdjs scheduletask anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function error evalerror refused evaluate string javascript unsafeeval allowed source script following content security policy directive defaultsrc self blob filesystem chromeextensionresource seeing obvious way change nodemodules angularplatformbrowserdynamicbundlesplatformbrowserdynamicumdjs fix", "d": "7/2016"}, {"body": "used angularcompilercli precompile components get rid csp errors works chrome app", "d": "7/2016"}, {"body": "need wait become available dart", "d": "7/2016"}, {"body": "works chrome app", "d": "7/2016"}, {"body": "edheltur mean run ng build angularcompilercli load without errors generated source files able update files relate component files without full build developing", "d": "7/2016"}, {"body": "vicb settings looking avoid error chrome app unless made mistake using following settings still getting error today", "d": "7/2016"}, {"body": "vicb obviously reported dart see pubspecyaml initial post", "d": "7/2016"}, {"body": "seanw yep ng build systemjs bundling got working chrome app failed figure make incremental compilation hello world project builds several minutes could provide snapshot hosted gitlab", "d": "7/2016"}, {"body": "way fix issue without using angularcli angularcli fixes eval issues still problem chrome app", "d": "7/2016"}, {"body": "purpose offline compiler transform templates pure js files online compiler source eval problems hope helps", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "closing router directives made global upcoming appmodules", "d": "7/2016"}, {"body": "vicb save life dude thank", "d": "7/2016"}, {"body": "router deprecated", "d": "7/2016"}, {"body": "outdated", "d": "7/2016"}, {"body": "still valid still compilation errors like abstractcontrol converted type control property updatevalue missing type abstractcontrol", "d": "7/2016"}, {"body": "yes still valid u need cast abstractcontrol formcontrol", "d": "7/2016"}, {"body": "dup", "d": "7/2016"}, {"body": "problem dynamically created views using setting inputs created component results model sync view nt update till event occurs inserted view tried using viewchildren selector read changedetectorref get reference child change detector mark change nt work", "d": "7/2016"}, {"body": "framework work", "d": "7/2016"}, {"body": "duplicate", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router solid could reproduce problem using new router submit separate issue closing issue", "d": "7/2016"}, {"body": "activateroute property returning corresponding used", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "qlonik curious used workaround get corejs play nice webstormintellij facing problem seems corejs used classes considered types ide shows many errors", "d": "7/2016"}, {"body": "pmulac hey sorry delayed response ended using corejs polyfill library code however using typing thought libraries supposed functionality dts supposed match part", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router solid could reproduce problem using new router submit separate issue closing issue", "d": "7/2016"}, {"body": "know old would great robwormald word", "d": "7/2016"}, {"body": "issue marked like closed problem version trying test component templateurl sure issue closed", "d": "7/2016"}, {"body": "current", "d": "7/2016"}, {"body": "using hit issue anybody able solve work around issue thank advance", "d": "7/2016"}, {"body": "happy help fix possible new angular internals though mark sent iphone markthethomas everywhere jul pm anselm notifications githubcom wrote using hit issue anybody able solve work around issue thank advance receiving mentioned reply email directly view github mute thread", "d": "7/2016"}, {"body": "hey ran issue project marked closed obviously still happening", "d": "7/2016"}, {"body": "also issue made related issue webpackstarter kit", "d": "7/2016"}, {"body": "working solved problem", "d": "7/2016"}, {"body": "yfain ts import httpproviders http angular import reflectmetadata import reflectiveinjector angularcoresrcdi injectable export class productservice private use without constructor params notice without error", "d": "7/2016"}, {"body": "whole idea di avoid using new operator could well create instance http using new inside productservice like see di working regular decorated classes sun jul pm \u043a\u043e\u0441\u0442\u044f \u0442\u0440\u0435\u0442\u044f\u043a notifications githubcom wrote yfain import reflectmetadata import reflectiveinjector angularcoresrcdi injectable export class productservice private constructor let injector reflectiveinjectorresolveandcreate httpproviders thishttp injectorget http getproductbyid productid string observable return map res gt resjson use without constructor params let productservice new productservice notice without import reflectmetadata error receiving mentioned reply email directly view github mute thread", "d": "7/2016"}, {"body": "yfain might go right direction", "d": "7/2016"}, {"body": "kostyatretyak creating injector manually causes part injector tree option angular calls code zoechi nt think related", "d": "7/2016"}, {"body": "pascalprecht use di angular ships dependency injection framework framework also used standalone module applications frameworks really like idea injectable try use nodejs browsing dijs seems longer maintain would grateful show use di nodejs decorator indectable", "d": "7/2016"}, {"body": "question sounds like support request please use issue tracker bugs feature requests use gitter stackoverflow support request", "d": "7/2016"}, {"body": "inject configuration hammerjs", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust nt look like issue makes sense context new router closing", "d": "7/2016"}, {"body": "problem", "d": "7/2016"}, {"body": "could please provide plunker last rc", "d": "7/2016"}, {"body": "recommended solution still working however able work around creating directive posted code explanation stackoverflow load svg parse similar", "d": "7/2016"}, {"body": "bug please open new issue commenting closed issue usually helpful thanks", "d": "7/2016"}, {"body": "already fixed", "d": "7/2016"}, {"body": "finding request walked internets found little library docs nt good source easy understand created small wrapper around reason ngoninit nt fire initialization called manually surely improved threw together quickly test library log level config typescript import loglevel export class appconf public static get loglevel loglevel return loglevelall typescript import injectable angularcore import logger import loggerconfig import basiclayout import consoleappender import iappender import ilayout import loglevel import appconf configappconf injectable export class logservice usage", "d": "7/2016"}, {"body": "simpss many dots call probably would better usage something like", "d": "7/2016"}, {"body": "cviccaro use get correct line number", "d": "7/2016"}, {"body": "thanks used like way found could get appropriate line number show nt realize wanted return bound function logger service first trying return anonymous function like logger", "d": "7/2016"}, {"body": "jusefb solution longer works angular rc changed router works idea get working latest release", "d": "7/2016"}, {"body": "happening dart issue would obsolete", "d": "7/2016"}, {"body": "probably nt think ts private ctor released yet sure months ago", "d": "7/2016"}, {"body": "input output decorators seem inherited extending class time nt add decorator subclass seem work typescript import component input output eventemitter angularcore export class baseclass input baseinput object input baseoutput new eventemitter constructor generate void component moduleid moduleid selector subclass template export class subclass extends baseclass input owninput object ngoninit thisgenerate however decorators carried uncomment", "d": "7/2016"}, {"body": "possible typescript set tsconfigjson copy ts helpers tscjs patch function copy shadowed patch function call could something similar componentdirective option enable deep metadata lookups would much cleaner solution", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust nt look like issue makes sense context new router concept child routers closing issue", "d": "7/2016"}, {"body": "agree", "d": "7/2016"}, {"body": "possible", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "please reopen still issue", "d": "7/2016"}, {"body": "tijoforyou okay think see mean checking pristine property subscription valuechanges print property screen pristine property updates right away checked check part valuechanges wo nt correct right away order calls think able invert looking", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust nt look like issue makes sense context new router think please reopen issue", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust nt look like issue makes sense context new router think please reopen issue", "d": "7/2016"}, {"body": "think done", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust using new router use candeactivate guard achieve desired behavior closing issue", "d": "7/2016"}, {"body": "hi victor elaborate understand candeactivate stops navigation gets answer true false", "d": "7/2016"}, {"body": "vsavkin nt believe solve problem link us example could reopen issue", "d": "7/2016"}, {"body": "vsavkin behaviour asking mantain components instaces along application decide user goes one component state maintained focus dropdown menu openend etc", "d": "7/2016"}, {"body": "got ts errors covered dart specific errors obsolete closing one", "d": "7/2016"}, {"body": "issue anyone radar component calls list items item clicked router navigate details component pass item id detail component use service fetch item really like avoid making new api call pass item detail component via navigate fom list currently possible way routeparams nt work object lot properties", "d": "7/2016"}, {"body": "store service nt need make new api call", "d": "7/2016"}, {"body": "mahpah impression new instance service created every time router navigates one route another besides think service needs stateless one implement caching different layer another story", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "remove secondaryaux route setting null follows closing", "d": "7/2016"}, {"body": "obsolete", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "version router deprecated", "d": "7/2016"}, {"body": "experiencing similar situation parent component attached route several child paths pointing different components child components style nt want repeat style child component thought could apply style parent component since children parent component share style obvious ca nt possibly work keeping encapsulation working expected cases would nice could specify via mechanism particular style meant child components edit think way solve simply base css style component reference base css file child components let build system handle copying styles child components disadvantage add base css import child component bad guess could nonencapsulated style", "d": "7/2016"}, {"body": "added ago see issue linked comment guess issue closed", "d": "7/2016"}, {"body": "stupid ca nt declare inheritance component", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust since issue fixed new router closing", "d": "7/2016"}, {"body": "issue", "d": "7/2016"}, {"body": "ore problem latest rcs", "d": "7/2016"}, {"body": "closing fixed new forms module please feel free reopen demonstrative plunker still see issue", "d": "7/2016"}, {"body": "date", "d": "7/2016"}, {"body": "problem still occurs post made diestrin appears resolve problem using", "d": "7/2016"}, {"body": "trying everything still problem dont errors console css loaded", "d": "7/2016"}, {"body": "still problem", "d": "7/2016"}, {"body": "please reopen still issue latest rc", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "also way reset state form manually typical use case would form stays page adding items list", "d": "7/2016"}, {"body": "markperrybv", "d": "7/2016"}, {"body": "hi ocombe find solution parenthesis url parameters issue still exists", "d": "7/2016"}, {"body": "nt retried since", "d": "7/2016"}, {"body": "could please open new issue bug still exists router brand new", "d": "7/2016"}, {"body": "vicb case one reopened", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "hi new small task gettingi want display details database selecting value drop list date display using webapi service normal serviceplease try help problem thanks advance code goes meeting roomtxt", "d": "7/2016"}, {"body": "ankasala post question current code stackoverflowcom lots developers help site reporting faultsbugs wed jul ankasala notifications githubcom wrote hi iam new small task iam gettingi want display details database selecting value drop list date display using webapi service normal service code goes meeting roomtxt receiving mentioned reply email directly view github mute thread mike laird arbor creek drive pittsford new york mlaird alummitedu remembering sides civility sign weakness sincerity always subject proof let us never negotiate fear let us never fear negotiate john f kennedy", "d": "7/2016"}, {"body": "implement", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust nt look like issue makes sense context new router think please reopen issue closing issue", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust nt look like issue makes sense context new router think please reopen issue closing issue", "d": "7/2016"}, {"body": "still issue closed", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "mistaken static data available template", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing latest animation implementation", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "correct command get work", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "assume fixed latest zone please provide plunker otherwise", "d": "7/2016"}, {"body": "prioritize wildcard last let change priority non wildcard selectors selectors changed unique non overlapping", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "sure common style routeraware tags way case particular application always define platform directive selector directive add desired class new router routerlinkactive directive allows developer set class link parent different deprecated router works sure adding routerlink class meaningful new arrangement closing issue think issue makes sense context new router routerlinkactive please reopen", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust new router issue closing", "d": "7/2016"}, {"body": "hey kara mhevery trying implement inline editing using ngfor ngmodel combined implement trying iterate array trying edit enter remove one letter attached working problem please help thanks", "d": "7/2016"}, {"body": "supported", "d": "7/2016"}, {"body": "implement", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing covered latest compiler", "d": "7/2016"}, {"body": "took find form uses formbuilder valuechanges method subscribing plunker someone still may need", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust issue new router", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing covered new compiler", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing fixed latest compiler", "d": "7/2016"}, {"body": "longer maintaining deprecated router focus efforts making new router robust could reproduce problem using new router submit separate issue closing issue", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing latest router", "d": "7/2016"}, {"body": "please reopen broken nt mattter use path redirectto settings terminal true path redirectto settings terminal true pathmatch full prefix", "d": "7/2016"}, {"body": "acostaf guess better create new issue plunker reproduce", "d": "7/2016"}, {"body": "sketched nt worry implementation consider using yet api might look like plunk total count counter async decrement directives incrementer export class app query listen component output observechild incrementer increment increments observable query listen dom element observechild decrement click decrements observable counter observable ngafterviewinit thiscounter observablemerge thisincrements thisdecrementsmapto startwith scan total value gt total value", "d": "7/2016"}, {"body": "robwormald component lifecycle observable available right prototype limited ngoninit etc could kool could get child observable within constructor wire crazy stuff also get syntax bubble event observable child parents want subscribe root level probably something like passthroughexpose rather subscribe proxy level", "d": "7/2016"}, {"body": "oo like automagic controlled share children", "d": "7/2016"}, {"body": "update plunker angular version needs updated latest angular work want access child outputs constructor full access rxjs way unlock reactive potential angular example using initial plunker prototype able get working prototype similar hacky way using proxy able create cycles level component tree want pass child observables tree guess could support combining example also observable inputs want everything constructor observables wire everything includes inputviewchildviewchildrencontentchildcontentchildren pending router dataresolvedparams would allow angular become powerful advanced reactive configs anyone wants deal sync values use correct lifecycle hooks got working prototype via", "d": "7/2016"}, {"body": "like proposal declarative bindings enforce better style reactive programming also stimulate applications logicless templates increase crossplatform portability top access controllers constructors help us write even declarative code prototype shows", "d": "7/2016"}, {"body": "router documentation cheat sheet imho say something ericmartinezr solution", "d": "7/2016"}, {"body": "implement", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing due latest way dynamic components loaded", "d": "7/2016"}, {"body": "implement stay", "d": "7/2016"}, {"body": "includes actual router interface implementation usage sample g\u00fcnter z\u00f6chbauer stackoverflow resolve documentation router patch github changelog release tweet", "d": "7/2016"}, {"body": "syndicatedshannon router version beta resolve generic interface type suppose pass", "d": "7/2016"}, {"body": "according definition anything generic parameter type ai nt used constraint anything put return type method though like return", "d": "7/2016"}, {"body": "awerlang thanks quick help", "d": "7/2016"}, {"body": "fixed latest compiler closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "implement", "d": "7/2016"}, {"body": "implement", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing working new build system", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "closing obsolete due new router", "d": "7/2016"}, {"body": "docs say router deprecated case new router used projects", "d": "7/2016"}, {"body": "closing working intended provide gt empty string provides use get behavior", "d": "7/2016"}, {"body": "error still occuring using", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "closing actionable also offline compiler achieves numbers", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing latest compiler code generation makes obsolete", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing covered latest router", "d": "7/2016"}, {"body": "closing reason", "d": "7/2016"}, {"body": "still issue fix", "d": "7/2016"}, {"body": "still issue take stab improving error message", "d": "7/2016"}, {"body": "pkozlowskiopensource chance look", "d": "7/2016"}, {"body": "still relevant nt think one method per page", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "deprecated anyway nt", "d": "7/2016"}, {"body": "think meant properties interpolation working intended", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing handled new router", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "closing per", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing latest code gen fixes", "d": "7/2016"}, {"body": "implemented", "d": "7/2016"}, {"body": "believe still issue attribute meant kickoff directive fail silently", "d": "7/2016"}, {"body": "provisioned ngmodule", "d": "7/2016"}, {"body": "dom event related higher level proper event want use dom events forget ngmodel use inside handler instead", "d": "7/2016"}, {"body": "awerlang yeah well guess deserves vote specific work around thanks mentioning ngmodelchange sometimes hard know use change ngmodelchange", "d": "7/2016"}, {"body": "experiencing well stackoverflow explaining found order matter based thread sounds like nt matter bug way work think opportunity provide documentation around works definitely provide help documenting need wardbell foxandxss naomiblack", "d": "7/2016"}, {"body": "work", "d": "7/2016"}, {"body": "framework works", "d": "7/2016"}, {"body": "already done", "d": "7/2016"}, {"body": "point something polyfilling use npm package nt rely cdnpolyfillio intl run dupe use cdn angular app break loaded fb inapp browser ios", "d": "7/2016"}, {"body": "anyone new angular trying follow docs tutorials andreafdaf remedy looks like english locale polyfills must already add", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing umdrollup nt issue", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "obsolete latest compiler", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing covered latest router", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "mhevery nt think fully implemented yet vicb assigned kara days ago perhaps closed aggressively unless saying wo nt implement remaining validations", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing covered new router", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "close one dupe", "d": "7/2016"}, {"body": "ca nt find lot info ambient directives still trying find way avoid specifying common directives directives list every time issue threads seem stop could point right direction", "d": "7/2016"}, {"body": "adsva question welcome", "d": "7/2016"}, {"body": "sweet thanks quick reply", "d": "7/2016"}, {"body": "believe implemented", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "implement", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing implement form", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing implement scoped packages nightlies", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing covered new router", "d": "7/2016"}, {"body": "exist ngtemplateoutlet see demo", "d": "7/2016"}, {"body": "bastienjs thank nt seen coming exactly would wanted allows clean cut paste ngswitch place full component make sense great stuff", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "close final let", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "implement", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "fixed already", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing longer exist", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "found need thing issue asks met create variant ngfor ngif nt add dom data available like also capture value like called ngwhen based name similar feature languages got running part early library working see action wonder something similar perhaps better naming etc ought box", "d": "7/2016"}, {"body": "link ngwhen implementation bad way using structural directive appears way notably since limitation one structural directive per element iirc means clogging dom variable wish define made sense kylecordes ngif variable assignment mashed one case need latter much miss", "d": "7/2016"}, {"body": "right proposing ngwhen answer questions example one thing someone could work around lack obvious builtin way capture result blahasync", "d": "7/2016"}, {"body": "already fixed", "d": "7/2016"}, {"body": "mhevery yes still relevant need", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing supported", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "seems like huge glitch ordering inconsistent case matter looping problematic minimum expect default pipe available", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "zone works node", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "better start vuejs webpack see awesomeness", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "seems split issue two issues document techniques passing information host web page angular application support passing arbitrary html content oneormore components content treated dynamic template interpreted within context parent component booting multiple components relatively easy even arbitrary components discovered runtime something angularish html inside component element tags easy solutions straightforward opened angulario issue address much harder hard describe seen feeble attempt harder still solve angular much love onthefly component construction really intended spas manipulating arbitrary html one might cms web site angular good angular clearly answer", "d": "7/2016"}, {"body": "wardbell believe helps", "d": "7/2016"}, {"body": "anyone verified approach especially preservation case across browsers work know also must forswear offline compiler nt seem like much limitation web site scenario quite bit trickier intend multiple components page html fragment ca nt reuse component class extracted pseudotemplates pretty sure another way calling upon angular dynamic compiler directly nt time explore", "d": "7/2016"}, {"body": "anyone verified approach especially preservation case across browsers used would fine would preserve case", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "closing obsolete reopen think still needed", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "hey guys progress", "d": "7/2016"}, {"body": "baio want create module angular decorators run outside zonejs", "d": "7/2016"}, {"body": "hi patrick thanks basically want try implement troubles would ask use changedetectiononpush observables nt worry zoned change detections correct", "d": "7/2016"}, {"body": "attempt implement decorator", "d": "7/2016"}, {"body": "natizlp working example", "d": "7/2016"}, {"body": "hjliang example work unable get much complex app run csp environment help would appreciated igorminar mhevery vsavkin wardbell", "d": "7/2016"}, {"body": "implement", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing new router makes obsolete", "d": "7/2016"}, {"body": "workaround using even though use attribute selector workaround certain pieces ported code still need components rely currently blocker would nice see workaround case least", "d": "7/2016"}, {"body": "implement", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing new offline compiler complain method signatures", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing directiveresolver depricated", "d": "7/2016"}, {"body": "hello reopen feature request thanks", "d": "7/2016"}, {"body": "nachopro clearly stated issue conscerns angular even recent release", "d": "7/2016"}, {"body": "sorry issue appears anyway found proper issue thanks", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "mi\u0161ko closing add bit please sure howwhy obsolete something changed makes concerns irrelevant", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "close one dupe", "d": "7/2016"}, {"body": "mhevery dup perhaps wrong issue number pasted", "d": "7/2016"}, {"body": "one solution consider formio currently open source angular json form renderer found wanted mention within month away typescript based angular dynamic json powered form library complete rewrite angular serve solid solution problem post update released available github download stay tuned", "d": "7/2016"}, {"body": "like like jsonschema among repositories found mozilla reactjsonschemaform spinoff kinto formbuilder though angular angularschemaform appears also plans transitioning though nt think gotten yet", "d": "7/2016"}, {"body": "good know also mention released angularjs form builder renderer open source demo seen also renderer reactjs big initiative right rewrite libraries angular starting form renderer moving onto form builder shortly great things come", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing process redoing built system", "d": "7/2016"}, {"body": "implement", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "implement", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"body": "obsolete generated code ts proper types compilation fail", "d": "7/2016"}, {"body": "obsolete longer relevant actionable keep issues clean aggressively closing", "d": "7/2016"}, {"title": "latest next branch failed execute removechild node vhtml velse", "body": "vuejs version reproduction link steps reproduce open dev tools click click rerender list delete remove content inside div remove vhtml velse element error removed expected maybe template parser warn us vhtml used nonempty element document better use empty element really case actually happening throwing error", "num": "3360", "d": "7/2016"}, {"title": "failed load plugin html eslintpluginhtml", "body": "compiler error dev environment windows server nodejs", "num": "3359", "d": "7/2016"}, {"title": "prop defined type default set prop undefined invalid data passed", "body": "vuejs version create component prop type default value invalid type passed undefined set value rather default feels like props remain default values improper data passed type restricted", "num": "3358", "d": "7/2016"}, {"title": "image loading exception template see help please", "body": "vuejs version actually happening problem", "num": "3357", "d": "7/2016"}, {"title": "console shows validation error", "body": "documentation prop validation fails vue refuse set value child component throw warning using development build code vuecomponent child template msg props msg number var vm new vue el test result console errors warnings", "num": "3356", "d": "7/2016"}, {"title": "ted", "body": "vuejs version reproduction link steps reproduce expected actually happening", "num": "3355", "d": "7/2016"}, {"title": "transition component root nt work vshow", "body": "repro", "num": "3354", "d": "7/2016"}, {"title": "cli installation template webpack nt configure babel correctly", "body": "vue cli installed via instructions installs without error however running nt transpile correctly opening output chrome results prompts yes lint babelrc eslintrcjs", "num": "3353", "d": "7/2016"}, {"title": "access transition hooks per component basis", "body": "know access transition hooks vuetransition fade beforeenter el consolelog beforeenter el enter el consolelog enter el afterenter el consolelog afterenter el entercancelled el handle cancellation beforeleave el consolelog beforeleave el leave el consolelog leave el afterleave el consolelog afterleave el leavecancelled el handle cancellation use want initialise javascript pages need could set transition hooks means need duplicate css functionality well would nice could access hooks component level like export default data return transition fade afterenter initialise javascript inherit hooks", "num": "3352", "d": "7/2016"}, {"title": "width component transition ended", "body": "vuejs version reproduction link steps reproduce click width element brackets word hits goes width expected sure expected behaviour actually happening question nt think vuerouter specific posted feel free close open problem causes sometimes component initialise something like slick flickity works based elements width way track transition animation ends lifecycle hook ends", "num": "3351", "d": "7/2016"}, {"title": "event dispatching done right order", "body": "vuejs version reproduction link steps reproduce click input try click button expected click event fired blur continue actually happening blur event called click event disposed really idea related vue browser handles event delegations although tested firefox chrome ie edge behaviored clue would highly appreciated thanks advance", "num": "3350", "d": "7/2016"}, {"title": "use trackby", "body": "", "num": "3349", "d": "7/2016"}, {"title": "feature functional components events", "body": "know functional component stateless instanceless reason ca nt emit event situations component used programatically evaluate sub component render would make sense able listen subcomponents events eg field component return diferent root component depending type would allow something like", "num": "3348", "d": "7/2016"}, {"title": "bug ios iphone safari", "body": "vuejs version reproduction link steps reproduce use ios iphone safari open link expected hi appears actually happening ios iphone safari hi appears", "num": "3347", "d": "7/2016"}, {"title": "use highcharts vue", "body": "answer yes use give example thank lot", "num": "3346", "d": "7/2016"}, {"title": "feature inbrowser vue transpiler", "body": "hello might best place consult could nt find solution problem either stackoverflow gitter forum like start new project optimized bundling concatenating development mode like avoid build step completely way use vue compiler inbrowser possibly babelifying javascript files selected plugins preprocessing less sass files standalone build babel inbrowser less compiler itpossible make standalone vue compiler build umd build would expose api transpile strings extracted vue files thanks sorry nt right place issue", "num": "3345", "d": "7/2016"}, {"title": "dynamically mounted components accessed rootvm children", "body": "hi read vuejs official document says parent option specify parent instance instance created establishes parentchild relationship two parent accessible parent child child pushed parent children array tested mount component mount point unfortunately newly inserted component accessed root vm via children property written stackoverflow ticket also please see reproduction fiddle demonstrate wrong normal component dynamic mounted component clicking button normal component receive broadcasted message root vue instance vm parent points root vue instance dynamic mounted component receive broadcasted message root vue instance vm parent undefined setting explicitly child parent rootvueinstance help please check whether vuejs bug vuejs documentation bug something wrong thanks", "num": "3344", "d": "7/2016"}, {"title": "transition attribute dose nt work vue", "body": "vue version transition attribute dose nt work vue document still reserve usage vuejs version reproduction link steps reproduce toggle expected input toggle fade transition actually happening input toggle without fade transition", "num": "3343", "d": "7/2016"}, {"title": "control list rendering vfor", "body": "angular control list rendering vue control list rendering say table following use achieve vue add feature achieve", "num": "3342", "d": "7/2016"}, {"title": "lost whitespace", "body": "vuejs version reproduction link steps reproduce template html correct hello vue incorrect lost whitespace expected actually happening", "num": "3341", "d": "7/2016"}, {"title": "add new property vue object data", "body": "data goes data contacts isselected false uid cardtype isselected false uid cardtype isselected false uid cardtype could use method add new contact got compatibility problem wonder ways add new property object better change use array instead object thanks lot", "num": "3340", "d": "7/2016"}, {"title": "select form input bindings", "body": "vuejs version reproduction link steps reproduce expected javascript thisopts value text value text value text thisopt nt setted automatically actually happening webpage performance none option selected", "num": "3339", "d": "7/2016"}, {"title": "large applications style guide", "body": "vuejs awesome think amazing simple create applications large applications need bigger planning would great documents provide tips people yet accustomed componentbased applications obviously must tips rules vuejs beautiful flexibility provides giving freedom development applications well think would great initiative came core vuejs thanks", "num": "3338", "d": "7/2016"}, {"title": "render function grandchildren generating", "body": "render function component parent child grandchild nesting reason grandchild generated within child element individual nodes created error messages generated child code sample javascript render var h createelement var self", "num": "3337", "d": "7/2016"}, {"title": "resolveasynccomponent module", "body": "use asynccomponent module ca nt resolved automatically following reason module exported something like must resolve asynccomponent like maybe provide syntactic sugar prevent repetitive tasks resolveasynccomponent function like", "num": "3336", "d": "7/2016"}, {"title": "allowing shorthand syntax static classes ids render function", "body": "looking snabbdom noticed could add classes ids could option writing render functions right vue spits error thinking unknown custom element", "num": "3335", "d": "7/2016"}, {"title": "define component ways", "body": "according doc use vueextendvuecomponent use registration sugar vuecomponent also use html way best", "num": "3333", "d": "7/2016"}, {"title": "\u5728vue \u51fa\u73b0 error evaluating expression number codesoff typeerror scopenumber function", "body": "\u5728vue \u51fa\u73b0 error evaluating expression number codesoff typeerror scopenumber function", "num": "3332", "d": "7/2016"}, {"title": "vue\u600e\u4e48\u83b7\u53d6\u52a8\u6001\u53d8\u91cf\u540d\u7684\u6570\u636e", "body": "data b current current", "num": "3331", "d": "7/2016"}, {"title": "attributes transclussion functional components", "body": "vuejs version reproduction link steps reproduce open jsfiddle examine rendered buttons code expected expect aria attribute set components per transclusion feature actually happening transclusion nt works functional components", "num": "3328", "d": "7/2016"}, {"title": "static href attribute content escaped amp becomes amp", "body": "vuejs version reproduction link bug working steps reproduce run app click first link expected take google search results vuejs actually happening ampersands attributes get escaped therefore link broken expected wrong originally reported forum", "num": "3327", "d": "7/2016"}, {"title": "regression passing json data components props", "body": "versions vue dom templates evaluated able pass data php form json strings remember single quote attribute next use like virtual dom branch attributes converted double quoted code fails render unescaped doublequote characters json content disables kind possibilities force users manually jsonparse strings components creation time", "num": "3326", "d": "7/2016"}, {"title": "dom messed toggling vif variable", "body": "please refer fiddle example let say div elements first third div vif directive toggle visibility based boolean variable eg show fiddle example visible true invisible false works correctly toggle show false first third divs become invisible toggle show true third div becomes visible first div changed copy second div tested bug appears bug appears divs vif directive bound variable one div vif directive bound variable sorry explanation confusing kind difficult explain bug created fiddle example", "num": "3325", "d": "7/2016"}, {"title": "vhtml html stripped inline string literals", "body": "repro fiddle html within inline string literals seems stripped html compile html hello world instead would expect html hello world", "num": "3324", "d": "7/2016"}, {"title": "interpolation fails inline string containing html", "body": "demonstrated fiddle following interpreted literally html hello world instead would expect produce html hello world also occurs normal interpolation", "num": "3323", "d": "7/2016"}, {"title": "deleting object key delete nt work properly", "body": "vuejs version reproduction link steps reproduce setdelete test json methods testset function set testsecondkey testdelete function delete test secondkey delete testsecondkey vuedelete test secondkey expected click set button creates click delete button delete actually happening deletes whole object commented variants nothing", "num": "3322", "d": "7/2016"}, {"title": "elements support older browsers", "body": "vuejs version reproduction link bare bone example code found steps reproduce include elements together vuejs project view see project fails ie dev tools open expected vuejs ignore elements browser recognize actually happening devtools open get errors functionally page works", "num": "3321", "d": "7/2016"}, {"title": "source load twice use mustache interpolations", "body": "vuejs version reproduction link steps reproduce open browser developer tools switch network panel filter ajax request keep media request expected file request load twice directive vhtml mustache interpolations actually happening file request load thrice directive vhtml twice mustache interpolations load like vhtml", "num": "3320", "d": "7/2016"}, {"title": "vue terminate rendering custom directive", "body": "vuejs version want create custom virtualrepeat directive ca nt terminate rendering children nodes ideas simulate", "num": "3319", "d": "7/2016"}, {"title": "bug container component deleted private state replaces next component array", "body": "vuejs version reproduction link simpler one nt involve child component steps reproduce click alpha delete button expected alpha container child component deleted completely list beta replaces first position retains whatever number originally actually happening alpha deleted child component state transferred beta child component meaning alpha showing number beta showing number alpha deleted beta show alpha number note occur pass number property edited version showing", "num": "3318", "d": "7/2016"}, {"title": "vmodel component showing value input initially", "body": "simple component working beta longer works beta template js looks like html export default template transactionqtyonly data return quantity load input shows value however beta empty type input update quantity value however blank initially", "num": "3317", "d": "7/2016"}, {"title": "children empty inside computed property iterated", "body": "reproduction link computed property returns array property iterated returns empty array could issue", "num": "3316", "d": "7/2016"}, {"title": "trying access nonexistent property outerhtml rendering", "body": "noticed strange warning displayed console vuejs version reproduction link steps reproduce click div text click expected console appear instance vue app actually happening console appear warning ps ok", "num": "3315", "d": "7/2016"}, {"title": "textarea value reset keyupenter", "body": "saw introduced native events pressing enter message sent stored shows list set empty string text area still shows entered text value text typed vmodel taking effect code works nt work something need js import mapgetters vuex export default props thread object data return message computed mapgetters user methods sendmessage thismessagetrim storedispatch sendmessage text thismessage thread thisthread authorid thisuserid thismessage", "num": "3314", "d": "7/2016"}, {"title": "watched checkboxes old value new value", "body": "multiple checkboxes used fill array array watched old value equal new value watch function vuejs version reproduction link steps reproduce click checkboxes watch console expected old value value checkbox clicked actually happening old value new value", "num": "3313", "d": "7/2016"}, {"title": "", "body": "vuejs version reproduction link steps reproduce", "num": "3312", "d": "7/2016"}, {"title": "vue questions", "body": "would best way test released version last code builded locally example directive latest code repo even though passing tests working environment nt render try error tell exactly commit happening could braking change nt see comment something wrong code would like test jsfiddle possible released sure vue specific vueloader always returning object default property works fine using workaround necessary using requirement neither know behaviour vueloader could use instead support otherwise let least document", "num": "3311", "d": "7/2016"}, {"title": "look framework please may get ideas", "body": "interested opinion questions emulated shadow dom shadow styles need advice share experiences prompt general think", "num": "3310", "d": "7/2016"}, {"title": "vue directive deprecated acceptstatement", "body": "deal inline statements html show show show hide show output html abolish achieve", "num": "3309", "d": "7/2016"}, {"title": "featurerequest asyncawait methods vue", "body": "hey starting koa backend lot stuff moving asyncawait yield suggest adding asyncawait functions support methods allowed like looks like cleaner way async stuff think ps used vuex actions", "num": "3308", "d": "7/2016"}, {"title": "vmodel nt work computed setters checkboxes", "body": "clear documentation supposed work checkboxes would like know work around issue vuejs version reproduction link steps reproduce set vmodel checkbox computed property setter setter called expected setter called actually happening setter called", "num": "3307", "d": "7/2016"}, {"title": "vpre nt work inside textarea", "body": "hello example javascript works work wokrs second textarea show empty inspect see", "num": "3306", "d": "7/2016"}, {"title": "venter class applied using", "body": "vuejs version reproduction link jsfiddle steps reproduce add element toggled wrap per latest transition api define styling classes toggle element expected class applied moment set initial state applied end state make transition happen actually happening applied transition never happens", "num": "3305", "d": "7/2016"}, {"title": "adding shortcut reference render function", "body": "basically would convenience feature instead would reduces code least little programmer write render function one thing would help keeping track right anonymous functions would convenience feature hard deal paying attention", "num": "3304", "d": "7/2016"}, {"title": "removing data removed dom", "body": "currently implementing drag drop functionality project mine run issue library using removes node dom upon syncing action model getting following error uncaught typeerror read property removechild null vue trying remove node already removed third party plugin imagine would fixed inclusion additional checks node exists seems blocking data removed edit added gif mimicking behavior third party library showcase error", "num": "3302", "d": "7/2016"}, {"title": "use vhtml leads matching serverrendered content", "body": "add code contains vhtml vuessrdemo results appear shown newcomponentjs appjs preliminary investigation vnodechildren new component empty", "num": "3301", "d": "7/2016"}, {"title": "get element client width directive", "body": "want get element client width directive find first time could nt get element client width maybe dom still get client width", "num": "3300", "d": "7/2016"}, {"title": "vfor access root variable", "body": "access root variable vfor binding", "num": "3299", "d": "7/2016"}, {"title": "\u60f3\u5b9e\u73b0\u4e00\u4e2a\u9875\u9762\u8fc7\u6e21\u6548\u679c", "body": "\u8c22\u8c22", "num": "3298", "d": "7/2016"}, {"title": "get slots", "body": "latest version ca nt get slots see demo", "num": "3297", "d": "7/2016"}, {"title": "", "body": "vuejs version use tag", "num": "3296", "d": "7/2016"}, {"title": "interpolation inside attributes", "body": "vuejs version question \u5982\u679c \u6807\u7b7e\u7684 href \u5c5e\u6027\u9700\u8981\u643a\u5e26", "num": "3295", "d": "7/2016"}, {"title": "use ucbrowser abnormal run test error", "body": "use vuejs ucbrowser load normal first time second load error selfdata undefined code snippet try run unit ucbrowser error", "num": "3294", "d": "7/2016"}, {"title": "featurerequest add scope prop", "body": "something always wanted working vue components ability pass childcomponent data still compiling parent scope like way works seen issues others use case weird workarounds see looking source code seems like definitely achievable small modification slot elementdirective sort scope param merged parent somewhere around example jsfiddle hackedin elementdirective used build sortable table component custom column template would fairly straightforward integrate sort behavior native wanted greenlight pull request", "num": "3293", "d": "7/2016"}, {"title": "allow vue output targets htmlpage dom", "body": "working vue must say real pleasure work frameworks worked startup offer solution manufacturers retailers showcase product right inside product pages nt think really appropriate promote customers small demo shots vue would excellent solution kind html based ui player would really useful ability use vue interfaces content basic idea inspired work done people flipboard react canvas implementation found basically implement system custom dom draw content canvas use elements like etc creation virtual dom use react updates changes interface system vue inclusion virtual dom think might actually feasible achieve vue well main thing would needed ability provide custom rendering events functionality instead updating html dom updates dom interface framework interface framework take care rendering example canvas directly webgl texture intimately familiar codebase believe current implementation tightly coupled outputting result page dom plans make abstraction part view model something consider appreciated participate development feature", "num": "3291", "d": "7/2016"}, {"title": "get props list component props config", "body": "want get props list component props config write input component like use like render placeholder attribute applied wraper want get props list component props apply input element like react", "num": "3290", "d": "7/2016"}, {"title": "", "body": "", "num": "3289", "d": "7/2016"}, {"title": "beta transition bug content visible split second transition begins", "body": "vuejs version reproduction link steps reproduce go code pen hit open panel b button expected panel panel b appear via actually happening go code pen hit open panel b button panel slide closed panel b becomes visible panel b disappears panel b slides open steps unexpected possibly bug though may using transitions way intended using wrong hooks", "num": "3288", "d": "7/2016"}, {"title": "accessing slot contents", "body": "simple way access component slot contents know way access get eg like propose creation instance property called contain contents slots example aware everything many cases syntax least natural elegant think familiar vuejs source otherwise would make pr", "num": "3287", "d": "7/2016"}, {"title": "add href color nt work css", "body": "add github color fff open safari link color sometime nt work css going black fff open chrome link color change black white replace work fine solve", "num": "3286", "d": "7/2016"}, {"title": "mutationobserver\u5728hybrid app\u4e2d\u5931\u6548", "body": "", "num": "3285", "d": "7/2016"}, {"title": "", "body": "html import cellheader cellheadervue import cellbody cellbodyvue import cellfooter cellfootervue export default computed hasheader return thisslotcontentsheader hasbody return thisslotcontentsbody hasfooter return thisslotcontentsfooter methods onclick routergo thishref router components cellheader cellfooter cellbody", "num": "3284", "d": "7/2016"}, {"title": "object keys include dashes", "body": "sure missing something could nt find anything docs googling around vuejs version reproduction link steps reproduce try set object property nt previously defined key beginning dash expected expected would work like string actually happening nothing set problematic specifically dealing firebase push data keys coming back predominantly start dashes ideally like keep vue data store sync seen vuefire assumes paths static nt appending objects store understand foreign characters nt work default property names might problematic throwing case another solution", "num": "3283", "d": "7/2016"}, {"title": "signin google inside component", "body": "hi want insert component button signin google call function onsignin obtain data case click button signin listen function inside component someone help signvue", "num": "3282", "d": "7/2016"}, {"title": "computed property changed dependency variables", "body": "html p javascript var vm new vue el test data privs tom computed readableprivs function var ret var p thisprivs retpush thisprivs p return ret vmprivs jim complete testcase see fiddle change vmprivs variable computed property readableprivs nt change someone tell", "num": "3281", "d": "7/2016"}, {"title": "absolutelypositioned flexbox child component transition duplicated dom visibility toggled via vif firefox", "body": "vue firefox reproduction link info click button toggle visibility component entrance transition works leave transition nt causing element remain dom indefinitely clicking button multiple times results multiple components dom following things must present bug occur must component instance visibility toggled via must flexbox child must positioned absolutely must transition must false", "num": "3280", "d": "7/2016"}, {"title": "command vfor string array displayed", "body": "code pict pictures index export default data function return pictures ready function get data ajax request thispictures array simple string array command vfor like special doms displayed use vif displayed help problem code", "num": "3279", "d": "7/2016"}, {"title": "receiving confirmation email forum", "body": "hi tried register forum ca nt get confirmation email hence ca nt create support topic said email succesfully sent receiving nt know place report issue sorry wrong place could nt get touch forum admin", "num": "3278", "d": "7/2016"}, {"title": "unit testing directives evaluated", "body": "hi trouble unit testing vue components component children render correctly directives evaluated example count replaced value expression remains count tried assertion vm nexttick callback difference using ava test runner vuejs version reproduction link", "num": "3277", "d": "7/2016"}, {"title": "vue infinite update loop using functional component props props root element", "body": "vuejs version reproduction link steps reproduce open console devtools see error message expected helloworld component renders div passed style without warning actually happening got warning vue", "num": "3276", "d": "7/2016"}, {"title": "vue input view value updata", "body": "vuejs version reproduction link steps reproduce", "num": "3275", "d": "7/2016"}, {"title": "bower installed version contain dist directory", "body": "vuejs version steps reproduce bower install vue expected directory actually happening directory content referenced directly html files btw issue also happens vueresource", "num": "3274", "d": "7/2016"}, {"title": "bad parsing bound data contains backtick", "body": "vuejs version reproduction link steps reproduce bind inline object value containing backtick character expected object reproduced properly data model actually happening added everything backtick escaped quote using props curry initial data model server browser manner similar example shown codepen basically root vue instance contains list props show element populated server", "num": "3273", "d": "7/2016"}, {"title": "trackby function", "body": "would nice evaluating access object order inspect return appropriate track field would useful iterating collection contains two different types objects type different id field vuejs version reproduction link contrived example hopefully simple enough demonstrate mean", "num": "3272", "d": "7/2016"}, {"title": "input value updata", "body": "", "num": "3271", "d": "7/2016"}, {"title": "vuejs app architecture dynamic template dynamic data dynamic component type issue", "body": "sorry posting issue posted question vue forum stackoverflow feedback developing app vuejs architecture important begining link copy kind proposal architecture issue following questionrequirement anyone good idea please kindly post discussion dynamically rendering dynamical template data use component scenario following vue instance fetch data backend say following data returned section fed component type firstsub templatestr data datafordynamiccomponent xxxx section fed component type lastsub templatestr data datafordynamiccomponent xxxx structurearchitecture use render following composition using data", "num": "3270", "d": "7/2016"}, {"title": "keepalive component constructor", "body": "vuejs version use vue switch components constructor vue always uses initial value ignores others vue blank hope works even component constructor really useful thanks", "num": "3269", "d": "7/2016"}, {"title": "cant custom directive catch event", "body": "hi event listener bind function cant trigger parent component dispatch broadcast also dosen work vuedirective ajax params terminal true bind function var self var el selfel selfanchor createanchor vajax replace el selfanchor", "num": "3268", "d": "7/2016"}, {"title": "strange behavior using watch inside components", "body": "using watch listen changes done array shared components see strange behavior function watches array gets triggered multiple times instead one time example insert item array watch function gets called times idea happening component", "num": "3267", "d": "7/2016"}, {"title": "custom directive params validation", "body": "hi develop custom directive params option want validate params types disable vbind feature available props components props validation please ideas", "num": "3266", "d": "7/2016"}, {"title": "vue file webpack converts backgroundimage relative path local path", "body": "", "num": "3265", "d": "7/2016"}, {"title": "allowing camelcase dom attributes binding", "body": "vuejs version reproduction link steps reproduce change value range input see result code expected two images expected blurred actually happening bound attribute name left side lowercased left side one work google chrome archlinux vbind causes failure text binding leaves error although html attributes caseinsensitive think still need distinguish letter case html doms vuejs seems willing support svg", "num": "3263", "d": "7/2016"}, {"title": "handlebars comments", "body": "would great syntax comments like handlebars", "num": "3262", "d": "7/2016"}, {"title": "bind image onerror event", "body": "image url returned triggere onerror event want use take effect js export default methods imageloadonerror thisavatarurl defaultavatar", "num": "3261", "d": "7/2016"}, {"title": "vmodel emitting native changeinput events", "body": "following example shows vue jquery plugin almost works changing vmdata writing custom directives option kind integration many plugins would nt necessary vue emitted change even bound element example related", "num": "3260", "d": "7/2016"}, {"title": "slot names flow way component tree", "body": "simple repro would expect know named slot happens instead slot name passed way component tree", "num": "3259", "d": "7/2016"}, {"title": "vfor first rendering different behaviour next changing data", "body": "vuejs version reproduction link steps reproduce note work correctly use trackby index vfor directive behaviour without directive unpredictive bethween first run next changes data first run render list values choices delete last element type input box press enter expected first run deleteinsert expect rendered list gt choice count gt choice count actually happening list rendered first run inserted something list must rendered way first run gt choice count gt choice count gt choice count deleteinsert value obtain gt choice count gt choice count", "num": "3257", "d": "7/2016"}, {"title": "dynamic add computed property", "body": "vuejs version reproduction link steps reproduce expected code computed property validation cacl data properties changed add validationname validationemail computed property solve problem problem dynamic add computed property without hard code validationname property tryed vm set method create data propery actually happening", "num": "3256", "d": "7/2016"}, {"title": "dynamical appended vuejs content scopetest function", "body": "hi vuejs team trying find workable solution following scenario vuejs render main content first click happen loads vuejs aware html including component referring data dynamically loaded vuejs partial html compiled inserted predefined node mount point trying use mount functionality give try check fiddle also paste code add custom element new vue el app data sampleelement test vuejs always complain wondering wrong scope assigned newly mounted content fix proposed way achieve goal dynamically compile mounted count right scope thanks help", "num": "3255", "d": "7/2016"}, {"title": "syncing object oriented coding", "body": "hello updating array object children element ready bind array object children vue ca nt sync arrays mean vuejs observe arrays updating even computed values one word change array object changes applied helped sync anything twoway binding yes nt know bind array object observation used custom components example big soon present", "num": "3254", "d": "7/2016"}, {"title": "vue requires explicit event binding normal events", "body": "vuejs version reproduction link steps reproduce click buttons expected first button alert actually happening extra nothing explicitly overwriting event nt basic ones still work ie click mouseenter etc", "num": "3253", "d": "7/2016"}, {"title": "rendering problem vshow transition vmodel update", "body": "vuejs version reproduction link steps reproduce write email provided input provided fiddle expected image appear stay bellow input actually happening image shows apparently random time disappears", "num": "3252", "d": "7/2016"}, {"title": "vue render called twice", "body": "vuejs version reproduction link steps reproduce check console expected render function called correct behavior actually happening rener function called twice", "num": "3249", "d": "7/2016"}, {"title": "rendering problems vif", "body": "vuejs version reproduction link steps reproduce given dom element variable create element directive bound variable optionally transition set toggle variable times expected dom element removed attached several times parent transition set applied also actually happening behaviour erratic sometimes element rendered correctly eventually next sibling attached instead also transition set nt applied", "num": "3247", "d": "7/2016"}, {"title": "using component methods inside named slots", "body": "vuecomponent child template childtemplate data function return msg hello methods notify function alert ok var parent new vue el eventsexample html dispatch event seems working keep getting error", "num": "3246", "d": "7/2016"}, {"title": "default directive hooks bindingmodifiers empty object", "body": "avoid something like check existence modifier empty object none provided", "num": "3245", "d": "7/2016"}, {"title": "remove argument directives", "body": "believe argument syntax previously used features completely removed vue api except custom directives may lack imagination ca nt personally think use case would use argument value modifier arguments removed directives api", "num": "3244", "d": "7/2016"}, {"title": "directive function syntax throws error", "body": "edit turns syntax deprecated needs fixed using deprecated directive syntax errors thrown pretty vague sure wanted throw better warning similar users root element template example maybe something like", "num": "3243", "d": "7/2016"}, {"title": "rename vue names", "body": "project necessary rename vue names", "num": "3242", "d": "7/2016"}, {"title": "templates show inverted order ios use vfor render list", "body": "said title code ele expect ios", "num": "3241", "d": "7/2016"}, {"title": "code woring second vue instance", "body": "", "num": "3240", "d": "7/2016"}, {"title": "watched array models issue", "body": "vuejs version reproduction link steps reproduce enter first input enter second input enter third input delete second input expected third input move second place keeping input value actually happening third input moves second place value cleared model array correct value displayed input correctly workaround use instead watching array answered", "num": "3239", "d": "7/2016"}, {"title": "problem radio vmodel", "body": "bind two radio elements vmodel radio elements clicked want get boolean result real result string type codes", "num": "3238", "d": "7/2016"}, {"title": "vue transition bug", "body": "yesterday write async component find dom ca nt renderthan debug step step find el object render text object run vue transition function run insert function make dom removed documentso dost render render removed afterafter try change vue code add judge run transition change code like javascript actually swap components depending transition mode defaults simultaneous param vue target param function cb ps bug code shared arranged", "num": "3237", "d": "7/2016"}, {"title": "directive param renders html attribute", "body": "directive example param rendered opening google chrome inspect devtools", "num": "3236", "d": "7/2016"}, {"title": "chrome extension problem", "body": "vuejs version reproduction link jsfiddle steps reproduce jsfiddle case console log warn invalid expression generated function body scopemessage expected actually happening", "num": "3235", "d": "7/2016"}, {"title": "vif directive work properly looped components", "body": "vuejs version reproduction link steps reproduce check example expected components rendered flags becomes true actually happening nested component never rendered", "num": "3234", "d": "7/2016"}, {"title": "component data option pipeline data within vuerouter", "body": "hi try use vuerouter confused component data option pipeline data using vuerouter together mean pipeline data get defined step transitionnext would set data component data option use thanks eric xin vuejs version reproduction link steps reproduce expected actually happening", "num": "3233", "d": "7/2016"}, {"title": "bind event two way time", "body": "\u8bf7\u95ee\u600e\u6837\u624d\u80fd\u5c06von clickdosomething\u548cvon", "num": "3232", "d": "7/2016"}, {"title": "pass propsdata dynamic component template", "body": "render formjade columnsjson try pass propsdata multi props component seems unsupported better way json template course way pass props one one seems good", "num": "3231", "d": "7/2016"}, {"title": "use crypto", "body": "possible write demo js run node testjs use strict var crypto require crypto var encrypted var cip cryptocreatecipher abc encrypted cipupdate asd binary hex encrypted cipfinal hex consolelog encrypted use component mistake", "num": "3230", "d": "7/2016"}, {"title": "form component embedded custom modal component open modal every time embedded component data latest", "body": "form component embedded custom modal component open modal every time embedded component data latest modal second time open addform data changed addform component create first open modal time build addform component call readycreate method get latest data", "num": "3229", "d": "7/2016"}, {"title": "questions mobileqq browser vue", "body": "write code like index questions index q select send data could work browser like mobile chrome desktop firefox could nt seen mobile qq browser even copy text form itlike questions index q url", "num": "3228", "d": "7/2016"}, {"title": "web workers", "body": "tell run vue web workers working web workers window object", "num": "3226", "d": "7/2016"}, {"title": "hot reload propagating updated data children", "body": "vuejs version steps reproduce vue v vue init webpack myproject press many times enter cd myproject npm fill components like npm run dev open click focus text see textarea focused properly go sharedjs replace focus focus hotreload applied click focus text sharedjs uncaught typeerror read property focus null expected textarea focused properly actually happening sharedjs uncaught typeerror read property focus null happens new instance sharedcontroller new instance hello created nested old sharedcontroller reference old hello instance textareaget closure expected nested new sharedcontroller instance hot reload sorry posting issues tab", "num": "3225", "d": "7/2016"}, {"title": "\u5173\u4e8e vuemixin \u5728\u4f7f\u7528 webpack vueloader \u65f6\u5019\u7684\u95ee\u9898", "body": "\u5f53\u5728 webpack entry \u4e2d\u4f7f\u7528vuemixin \u4f1a\u5f15\u53d1\u5728\u5b50\u7ec4\u4ef6\u4e2d\u4f7f\u7528vuepartial\u6ce8\u518c\u5168\u5c40 partial\u5931\u6548 help \u662f\u5426\u662f\u6211\u4f7f\u7528 vuemixin mixin \u6211\u662f\u5728\u8def\u7531\u542f\u52a8\u524d\u8fdb\u884c mixin \u7684 js vuemixin routerstart require srcappvue mainapp", "num": "3224", "d": "7/2016"}, {"title": "velse attribute nt work", "body": "vuejs version reproduction link steps reproduce explanations output expected expected show velse attribute actually happening vif vfor works fine next velse attribute still renders", "num": "3223", "d": "7/2016"}, {"title": "chromefirefox os x linux", "body": "would take get support vuejs os x linux chrome firefox currently building production app vuejs kind deal breaker vue content silently fails try using vuejs site chrome os x none examples work", "num": "3222", "d": "7/2016"}, {"title": "bug", "body": "vuejs version reproduction link steps reproduce new vue assign data expected actually happening tag also style attribute", "num": "3219", "d": "7/2016"}, {"title": "array", "body": "file assuming array call native javascript array magic function getting added transpilation polyfill actual bug rose", "num": "3218", "d": "7/2016"}, {"title": "correct way reference inserted child component", "body": "writing example like official tree example extend add adding sibling node feature code jsfiddle expected clicking sib node insert sibling node wan na change attribute newly added node values need get reference newly added component got new sibling node added using offset find correct node newly added instead using consolelog vuedevtools found tick found newly added node vue dev tools found index newly added node always last element since really need extra work creation wondering correct way get reference newly created element index mean order view seen eyes thanks advance", "num": "3216", "d": "7/2016"}, {"title": "question data watch", "body": "js vuecomponent foo props initvalue default hello world data return value thisinitvalue watch initvalue immediate true handler value fires fine consolelog initvalue normal behavior", "num": "3215", "d": "7/2016"}, {"title": "read property composing undefined", "body": "vuejs version reproduction link steps reproduce use provided example expected update value vm actually happening gendefaultmodel code set string eventtargetcomposing function call event target property changing line eventhasownproperty target amp amp eventtargetcomposing allows continue fails read property value undefined", "num": "3213", "d": "7/2016"}, {"title": "read property tagname null", "body": "hello getting error template tag empty vuejs version reproduction link works something inside template", "num": "3212", "d": "7/2016"}, {"title": "vue slot event passed components", "body": "facing dilemma component slot slot passes event component acted component however add component pass custom event event lets say click event instances events returned means event listened two components unlike component slot passed check code main script handles component pass two instances event success success component notiejs var notie require notie moduleexports props alert type object default function return alerttype message success time data function return created function ready function methods donotification function thisalert notiealert thisalertalerttype thisalertmessage thisalerttime events show notiejs function consolelog notiejs event received thisdonotification computed", "num": "3211", "d": "7/2016"}, {"title": "parsing object filter argument fails spaces inside", "body": "vuejs version reproduction link take look example see try pass object filter argument nt work space string nt supposed pr fix issue forbidden use spaces passing obejct filter like", "num": "3210", "d": "7/2016"}, {"title": "index children vfor incorrect", "body": "vuejs version reproduction link steps reproduce open reproduction link expected first child text content actually happening makes index first instead non", "num": "3209", "d": "7/2016"}, {"title": "vue horizon", "body": "hi still checking vue point wondering plans horizon module seeing lot interest horizon frameworks days example vue without solid horizon support work need alternative vuexredux tight integration vue horizon would horizon taking world storm check", "num": "3208", "d": "7/2016"}, {"title": "monkberryjs like templating syntax", "body": "todos complete text else text endif endfor looks better opinion feel free add counter arguments", "num": "3207", "d": "7/2016"}, {"title": "update nested array", "body": "vuejs version reproduction link steps reproduce expected actually happening data like gist want set open property item control dom show hide vue detect change root node nodes like level wo nt update dom also tried use treechildren set method nothing happend", "num": "3206", "d": "7/2016"}, {"title": "vue next keyword invalid mode", "body": "compile templates bundle rollupjs throw error handle", "num": "3205", "d": "7/2016"}, {"title": "refs loops sync sub components instances get updated", "body": "vuejs version reproduction link steps reproduce check example expected ref object updated using new sub components instances actually happening ref object caches old components instances references new dom elements created get lost", "num": "3204", "d": "7/2016"}, {"title": "component props change ca nt update dom", "body": "hello vuejs version reproduction link steps reproduce click reverse buttons component reverse props one update dom one wont expected reverse array update dom automaticly actually happening set component props vm data change props inside component dom update automaticly set props vm computed data change props inside component dom wo nt update try use set arrsplice nt work", "num": "3203", "d": "7/2016"}, {"title": "\u5173\u4e8evfor\u7684\u65e0\u6cd5\u6e32\u67d3\u95ee\u9898", "body": "\u5728\u8c03\u7528 id \u53ef\u4ee5\u6b63\u5e38\u6e32\u67d3 vuejs obj obj", "num": "3201", "d": "7/2016"}, {"title": "binding expressions nonascii literals wrok ie input textbox", "body": "vuejs version reproduction link steps reproduce run jsfiddle expected binding expressions produce results javascript expressions work actually happening expressions executed chrome firefox problems exist", "num": "3200", "d": "7/2016"}, {"title": "use vmodel textarea use value browser ben collapse", "body": "vuejs version reproduction link steps reproduce know syntax wrong input tag problem write document resolve browser crash", "num": "3199", "d": "7/2016"}, {"body": "vue problem installed plugin", "d": "7/2016"}, {"body": "sorry webpack problem", "d": "7/2016"}, {"body": "related vue visit learn css please", "d": "7/2016"}, {"body": "first issue vue second inlinestyle", "d": "7/2016"}, {"body": "see thank anyway jounqin", "d": "7/2016"}, {"body": "need enable debug mode first", "d": "7/2016"}, {"body": "thanks fnlctrl", "d": "7/2016"}, {"body": "enable debug vueconfigdebug true vuecomponent child template msg props msg number var vm new vue el test console errors warnings", "d": "7/2016"}, {"body": "strangerru case provide jsfiddle reproduction please", "d": "7/2016"}, {"body": "change library path vue starts work", "d": "7/2016"}, {"body": "remember use development version non min repro warning would helpful already exists vue nt vue let give look", "d": "7/2016"}, {"body": "change library path vue starts work remember use development version non min repro nt always work seen jsfiddle google chrome", "d": "7/2016"}, {"body": "mean uncomment line works otherwise warning shows issue", "d": "7/2016"}, {"body": "oh sorry yes works thanks", "d": "7/2016"}, {"body": "please open issue corresponding vuecli template instead", "d": "7/2016"}, {"body": "transition system reworked dedicated builtin components hooks custom events elements something similar emit custom events element transition applied note listen events element defined closer implements root element component transitioned example first case wo nt able access instance directly event handler would defined parent scope second case wo nt able listen leave events time fired instance already undergoes destruction listener already dismantled also note enabled router option cover use case", "d": "7/2016"}, {"body": "looks awesome thanks", "d": "7/2016"}, {"body": "nevermind til use javascript hooks css transitions nt actually tested case pretty sure would fix", "d": "7/2016"}, {"body": "interesting question think clickrelated keydown triggers blur input even click event fired tricky", "d": "7/2016"}, {"body": "standard behavior browser might want listen event instead proper way would use complicated logic give button moment disappear input blur force button visible button focused", "d": "7/2016"}, {"body": "event enough think thank much simplesmiler", "d": "7/2016"}, {"body": "hi zce guess refer fact switching cities wrong sub selected expected behaviour using trackby index docs warn solution nt use trackby nothing bad oyu nt render hundrets items b trackby actual unique poperty case name", "d": "7/2016"}, {"body": "linusborg thanks", "d": "7/2016"}, {"body": "pass raw data returned component includes event listeners listeners registered returned component", "d": "7/2016"}, {"body": "awesome thanks", "d": "7/2016"}, {"body": "issue closed follow guideline encourage ask usage questions forum gitter", "d": "7/2016"}, {"body": "first nt solve problems still need bundling second terribly inefficient asset transpilation runtime need send transpilers client compile everything simply feasible want decent ux thing browser transpiling systemjsjspm although vue plugin offers much less optimal development experience webpack counterparts recommendation use webpack", "d": "7/2016"}, {"body": "hello thank interest project however certainly bug component created parent user code parent added automatically issue usagesupport question issue tracker reserved exclusively bug reports feature requests encourage ask forum gitter", "d": "7/2016"}, {"body": "linusborg thanks feedback component created parent user code parent added automatically ok documentation says set parentchild relationship setting parent property unfortunately bug either vuejs upgrade vuejs documentation nt true change parent setup new parentchild relationship let work make clear thanks", "d": "7/2016"}, {"body": "think bug need provide reproduction", "d": "7/2016"}, {"body": "linusborg created jsbin demonstrate wrong normal component dynamic mounted component clicking button normal component receive broadcasted message root vue instance vm parent points root vue instance dynamic mounted component receive broadcasted message root vue instance vm parent undefined setting explicitly child parent rootvueinstance help please check whether vuejs bug vuejs documentation bug something wrong thanks", "d": "7/2016"}, {"body": "hi vuejs team look fiddle check whether issue something wrong thanks", "d": "7/2016"}, {"body": "nt breaking change introduced beta onwards reckon documentation nt updated yet", "d": "7/2016"}, {"body": "rekateka see thanks", "d": "7/2016"}, {"body": "hello thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests encourage ask forum gitter", "d": "7/2016"}, {"body": "read docs vueset", "d": "7/2016"}, {"body": "thanks using set method ok", "d": "7/2016"}, {"body": "hi luckymore think trying dynamically render select options select list defaulting please select see example regarding nt setted automatically model source truth view select list defaults value specify using model nt default value view", "d": "7/2016"}, {"body": "hello luckymore thank interest project version longer supported converning bugs long enough abouot release furthermore usagesupport question encourage ask forum gitter", "d": "7/2016"}, {"body": "dpweberza thx", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "please reopen issue docs repo wwwgithubcomvuejsvuejsorg", "d": "7/2016"}, {"body": "thank linusborg", "d": "7/2016"}, {"body": "children must arrays eg nonarray shorthand works strings", "d": "7/2016"}, {"body": "dude awesome correct laracon still time respond issue requests thanks today second day vue totes lovin", "d": "7/2016"}, {"body": "userland issue also webpack", "d": "7/2016"}, {"body": "nt work argument callback still like test code", "d": "7/2016"}, {"body": "need use avoid module syntax transpiled currently still issues webpack showed eventually work", "d": "7/2016"}, {"body": "actually seems even webpack preset still returns object guess ed modules webpack", "d": "7/2016"}, {"body": "yep still nt work makes import asynccomponent becoming something foolish", "d": "7/2016"}, {"body": "updated works js component resolve gt systemimport app gt resolve mdefault component resolve gt require app gt resolve mdefault", "d": "7/2016"}, {"body": "difference previous solution still must resolve point could provide solution prevent anyway maybe code like javascript import vuerouter vuerouter const resolveasynccomponent resolve gt gt mesmodule amp amp objectkeys length amp amp mdefault resolve export default new vuerouter mode hash routes path component resolve gt require app resolveasynccomponent resolve otherrouteswithasynccomponent", "d": "7/2016"}, {"body": "buildsystem specific easy enough userland single function nt think needs vue", "d": "7/2016"}, {"body": "intentional parsing string quite costly use custom helpers wrap function achieve eg", "d": "7/2016"}, {"body": "hi please make sure ask question forums gitter chat depens usecase backend server render backends like ruby rails better use inlinetemplates spa nodejs use files prototyping inline tags fine top define components globally needed vueextend used nt file time wo nt even need use", "d": "7/2016"}, {"body": "baiang understand vue rely global scoped names template compilation step doest know runtime component data properties redefine global ones define method component definition use like use template simply", "d": "7/2016"}, {"body": "\u4f7f\u7528", "d": "7/2016"}, {"body": "crossjs current", "d": "7/2016"}, {"body": "cuiziwei \u5728 template \u91cc\u4f7f\u7528", "d": "7/2016"}, {"body": "crossjs", "d": "7/2016"}, {"body": "\u8bf7\u4e0d\u8981\u7528 issue", "d": "7/2016"}, {"body": "functional components auto attribute transclusion get exactly returned render function pass raw data", "d": "7/2016"}, {"body": "hello thank filing issue please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem thank", "d": "7/2016"}, {"body": "everything works fine pass object way", "d": "7/2016"}, {"body": "doh idiot much solution forgotten obvious answer closing", "d": "7/2016"}, {"body": "supports deleting root level keys use instead", "d": "7/2016"}, {"body": "hey thanks realized instead thanks close one hope helpful others", "d": "7/2016"}, {"body": "reproduce working warning nt cause behavior difference unlikely vue issue", "d": "7/2016"}, {"body": "needs first parse string document fragment cache clone wontfix workaround use", "d": "7/2016"}, {"body": "structural directives reserved create binding directives instead create higherorder component controls children purpose probably want wait docs work virtual dom wip docs", "d": "7/2016"}, {"body": "bug need give component unique key avoid otherwise way vue know vue able track object identity adding hidden markers objects need explicitly mark using similar fixed", "d": "7/2016"}, {"body": "reproduce please provide reproduction", "d": "7/2016"}, {"body": "richardwyke try deleting nodemodules folder installing npm dependencies similar issues solved like solution works could wise highlight release notes others", "d": "7/2016"}, {"body": "thanks miljanaleksic sorted sorry false alarm", "d": "7/2016"}, {"body": "realize reactive data source using computed properties work expected instead generate child components source data array base computed properties array", "d": "7/2016"}, {"body": "problem jsbin works fine jsfiddle example", "d": "7/2016"}, {"body": "yup locally well bug yay", "d": "7/2016"}, {"body": "removing folder reinstalling dependencies everything works fine", "d": "7/2016"}, {"body": "although directly related fixed", "d": "7/2016"}, {"body": "hi provide editable version better could nt find way debug wechat browser hint", "d": "7/2016"}, {"body": "wechat browser lives inside im called wechat tedious debug use something like chrome devtools one must install adware qq browser pc use consoles inspectors inside", "d": "7/2016"}, {"body": "thanks info fnlctrl", "d": "7/2016"}, {"body": "\u4e0d\u8fc7\u8fd9\u4e2a\u95ee\u9898\u4f60\u53ef\u4ee5\u8fd9\u6837\u6765\u89e3\u51b3 \u901a\u8fc7watch vue\u53cc\u5411\u7ed1\u5b9a\u7ed3\u675f\u4e4b\u540e\u4f1a\u89e6\u53d1watch watch value function n nlength gt n nsubstr var self nexttick function selfvalue n", "d": "7/2016"}, {"body": "use maxlength", "d": "7/2016"}, {"body": "crossjs", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "let use english discuss discuss english contribute vuejs thanks hero", "d": "7/2016"}, {"body": "guarantees anything nonreleased branch uses exports use use", "d": "7/2016"}, {"body": "spam please", "d": "7/2016"}, {"body": "want span", "d": "7/2016"}, {"body": "yeah go", "d": "7/2016"}, {"body": "hi topcaho thanks filing issue unfortunately nt really understand core problem expected behaviour build jsfiddle demonstrate problem maybe comparison", "d": "7/2016"}, {"body": "longer recommended create custom directives behaves like instead dispatch native dom events directive use listen template", "d": "7/2016"}, {"body": "ca nt nt test think remember object actions mentioned", "d": "7/2016"}, {"body": "nicolasparada sorry nt know thinking async functions get called call bad", "d": "7/2016"}, {"body": "nicolasparada btw notation shortand like", "d": "7/2016"}, {"body": "know ca nt use shorthand syntax together async", "d": "7/2016"}, {"body": "nicolasparada", "d": "7/2016"}, {"body": "use earlier actually works fine async functions running project", "d": "7/2016"}, {"body": "yeah sorry bad nt know thought", "d": "7/2016"}, {"body": "one nt computed", "d": "7/2016"}, {"body": "nicolasparada dont think possible implement asyncawait computed extremely hard track changes async functions ca nt predict function calls await changed", "d": "7/2016"}, {"body": "edited make clear issue checkboxes", "d": "7/2016"}, {"body": "awesome thanks", "d": "7/2016"}, {"body": "temporary workaround would surround directive", "d": "7/2016"}, {"body": "sirlancelot thanks work", "d": "7/2016"}, {"body": "duplicate allready fixed", "d": "7/2016"}, {"body": "far know added concurrently works added even setting true", "d": "7/2016"}, {"body": "venter element frame set starting styles never see dev tools eyes anyway works like seems confusing admin check", "d": "7/2016"}, {"body": "ah see misapplied thanks closing could useful document bit clearly reading vue features understood differently especially since mentioned works manner reactcsstransitiongroup example styling tutorial nt work behaviour", "d": "7/2016"}, {"body": "yunsuncn setting automatically generate classes use default makes lot sense imho want different class first appearance need specify see details", "d": "7/2016"}, {"body": "nt think necessary tedious type fine especially use arrow functions", "d": "7/2016"}, {"body": "vue update algorithm built upon assumption dom structure altered arbitrary party code unlikely code could work even additional guard added intention support willing dig code open pr review", "d": "7/2016"}, {"body": "going look mean time aware better way implementing functionality vue friendly manner would appreciate", "d": "7/2016"}, {"body": "javascript remove el dom param element el function remove el indoc el return false elparentnoderemovechild el added quick hack see cause issue seems resolved shall create pr", "d": "7/2016"}, {"body": "need information html ideally please provide reproduction", "d": "7/2016"}, {"body": "like fork", "d": "7/2016"}, {"body": "jsfiddle would better", "d": "7/2016"}, {"body": "posva ssr could hard repro jsfiddle fork fine take look time", "d": "7/2016"}, {"body": "must downloaded pokeman go", "d": "7/2016"}, {"body": "erbing like", "d": "7/2016"}, {"body": "similar problem occurs variable equal empty string", "d": "7/2016"}, {"body": "indeed overlooked sorry", "d": "7/2016"}, {"body": "fixed via", "d": "7/2016"}, {"body": "hi please make sure ask question forums gitter chat take look", "d": "7/2016"}, {"body": "hi please make sure ask question forums gitter chat provide information", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "\u662f\u7528\u6765\u62a5 bug bug issue", "d": "7/2016"}, {"body": "\u539f\u7406\u548c ng", "d": "7/2016"}, {"body": "\u662f\u7528\u6765\u62a5 bug bug issue", "d": "7/2016"}, {"body": "vue allow selfclosing tags like react wrong right works", "d": "7/2016"}, {"body": "linusborg however yet", "d": "7/2016"}, {"body": "oh tried get main vue instance slot component course return slots", "d": "7/2016"}, {"body": "added list tonight", "d": "7/2016"}, {"body": "leave evan", "d": "7/2016"}, {"body": "use vbind", "d": "7/2016"}, {"body": "repsacby thank", "d": "7/2016"}, {"body": "ucbrowser officially supported", "d": "7/2016"}, {"body": "scoped slots harder reason since compiled inside component visible cf variable main issue already way achieving behaviour components props concepts already exist vue moreover scoped slot possible vue pass components functions easily use render functions code snippet working nicely still use prefer using scopedslot syntax may consider using handle name modification share lib others benefit", "d": "7/2016"}, {"body": "makes sense release standalone plugin curiosity would idiomatic way achieve sort functionality vue", "d": "7/2016"}, {"body": "coming back asap fiddle illustrate", "d": "7/2016"}, {"body": "coming back example soon idea use render function use prop functions bind function call vm context", "d": "7/2016"}, {"body": "chrisvfritz helped one declare function vue object methods pass component obviously code would look much better jsx also need make sure available something", "d": "7/2016"}, {"body": "ping joshglendenning", "d": "7/2016"}, {"body": "joshglendenning recently shared workaround check", "d": "7/2016"}, {"body": "posva interesting thanks update convenient way use dom element template string instead using miljanaleksic take look thanks", "d": "7/2016"}, {"body": "also gist solution anyone interested", "d": "7/2016"}, {"body": "indeed possible already needs proper documentation inner architecture framework unfortunately currently highpriority focus eventually officially", "d": "7/2016"}, {"body": "thanks evan looking forward good know eventually able makes case really strong adopt vue organization regards best luck working towards release", "d": "7/2016"}, {"body": "nt see reason listing explicit prop anyway impossible accessing raw component vnode data wait official documentation", "d": "7/2016"}, {"body": "\u5c24\u5927\u7684\u8fd9\u4e2a\u540c\u6784\u7a0b\u5e8f vuessrdemo", "d": "7/2016"}, {"body": "issue", "d": "7/2016"}, {"body": "likely velocity applies animation next frame fix adding hook sets", "d": "7/2016"}, {"body": "yup trick thanks apologize erroneous bug report", "d": "7/2016"}, {"body": "intended implement please see", "d": "7/2016"}, {"body": "kkszymanowski could create plugin save slots content expect seems quite specific feature", "d": "7/2016"}, {"body": "miljanaleksic feels like part core ktsn said intended implemented close wait patiently functionality thanks", "d": "7/2016"}, {"body": "also add", "d": "7/2016"}, {"body": "hello thank filing issue please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem thank", "d": "7/2016"}, {"body": "looks like safari bug thought", "d": "7/2016"}, {"body": "e think looks like use cause", "d": "7/2016"}, {"body": "link removed demo please open look top right corner color fff sometime black", "d": "7/2016"}, {"body": "reproduced without vuejs looks like safari bug would avoid adding vif hide link receive data", "d": "7/2016"}, {"body": "vue \u548c os", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "lianer ios \u7684 \u88ab", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "hi bananatron thanks filing issue check resolve workaround would", "d": "7/2016"}, {"body": "reason nt work line regular expression used parse paths allow keys start dash figuring weither reason ie allowing makes parsing unreliable sth", "d": "7/2016"}, {"body": "valid javascript path using", "d": "7/2016"}, {"body": "vue object seems think setting index array sets index nan also view example believe", "d": "7/2016"}, {"body": "bananatron set object keys nonvalid identifiers javascript different", "d": "7/2016"}, {"body": "understand set properties believe line using notation nt work vue objects provide example set vue object key starts dash", "d": "7/2016"}, {"body": "use uses regular old javascript notation js nt make lot sense linusborg gave solution first reply", "d": "7/2016"}, {"body": "got thanks guy help", "d": "7/2016"}, {"body": "hi please make sure ask question forums gitter chat provide information", "d": "7/2016"}, {"body": "know use vue set vueset function sorry trouble", "d": "7/2016"}, {"body": "side note checked chrome even clicking toggle like crazy reproduce reported problem appears firefox", "d": "7/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "7/2016"}, {"body": "think bug sure", "d": "7/2016"}, {"body": "make sure github email address public registering set back private received confirmation email", "d": "7/2016"}, {"body": "already still getting email", "d": "7/2016"}, {"body": "problem able create new topic", "d": "7/2016"}, {"body": "opsrj managed get confirmation email change email vue account setting github generated email registered forum nt get email get change active email", "d": "7/2016"}, {"body": "afaik ava support running tests browsers", "d": "7/2016"}, {"body": "function occured rendering loop rendering flow think render function functional component updating parent props bad practice vue mistake comment comments please tell us", "d": "7/2016"}, {"body": "kazupon sorry counter showing purposes nt realize affect rendering flow child component updated repro warning message equal previous", "d": "7/2016"}, {"body": "thanks found mistake function see detail", "d": "7/2016"}, {"body": "kazupon hmm contains raw attributes need pass function component property called tag props", "d": "7/2016"}, {"body": "okay case need pass props ctxprops h function", "d": "7/2016"}, {"body": "kazupon props meant tag attributes component properties sorry mistake provided repro works expected except warning extra render calls component properties applied tag attributes example need create node looks like component gets property passes function node attributes", "d": "7/2016"}, {"body": "somewhat expected vnode data fresh objects render added warning using observed objects vnode data get around simply shallow copy object sending", "d": "7/2016"}, {"body": "thanks", "d": "7/2016"}, {"body": "ca nt reproduce", "d": "7/2016"}, {"body": "\u7528", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "reproduce likely due outdated bower version make sure install latest", "d": "7/2016"}, {"body": "indeed thank pointing", "d": "7/2016"}, {"body": "temporary workaround bypass issue escaping backtick wo works items title one title two anyone investigating seems issue nt occur array contains single element", "d": "7/2016"}, {"body": "made change regular expression seems working fine however seemed like important regexp sure patch highlighted part red", "d": "7/2016"}, {"body": "skyronic regexp tool looks useful", "d": "7/2016"}, {"body": "linusborg used handy", "d": "7/2016"}, {"body": "hello please use forum gitter questions like repo issue list strictly bug reports feature requests specified contributing guidelines sure vue bug please provide minimal jsfiddle containing set reproducible steps lead behavior described thanks", "d": "7/2016"}, {"body": "issue", "d": "7/2016"}, {"body": "solve problem", "d": "7/2016"}, {"body": "fnlctrl thanks response dynamic component pattern meet requirement dynamically loaded template templatestr string data works template firstsublastsub component gap dynamic compile make alive firstsub component template data live reactive manner thanks found async component pattern bridge gap make dynamic loaded html live fnlctrl unfortunately know give props async component say yourcomponentsfromapi contains async component access someprop property within async component raised one stackoverflow specific question thanks", "d": "7/2016"}, {"body": "fnlctrl please see live fiddle", "d": "7/2016"}, {"body": "dynamic ajax loaded template arbitrary random tried extracting dynamic bits create static components asyncloaded webpack need pass props dynamically created component use propsdata", "d": "7/2016"}, {"body": "hello cnweibo issue usagesupport question issue tracker reserved exclusively bug reports feature requests seem know issue closed may continue forum thread linked op", "d": "7/2016"}, {"body": "fnlctrl right extract dynamic data template string work want way like save templatestr including variables database fetch whole throw data vuejs rendering propsdata seems valid dynamical component thanks", "d": "7/2016"}, {"body": "fnlctrl idea make webpack work use browersify unfortunately support feature mentioned asyncloaded", "d": "7/2016"}, {"body": "related issue feature request wrote resolve may help javascript import lodash import vue vue export default props name props value template created let props thisprops apply properties component data forown thisprops value key gt consoledebug key key propspush usage", "d": "7/2016"}, {"body": "terrydai thanks seems great idea try usage understand well field uiform mean would give little explain usage code thanks lot", "d": "7/2016"}, {"body": "cnweibo jade template using semanticui", "d": "7/2016"}, {"body": "terrydai found contribution great idea comments intention valuesync give small explain name props valuesync respectively full caught following proposal thanks", "d": "7/2016"}, {"body": "cnweibo need review docs definition", "d": "7/2016"}, {"body": "terrydai got defined jade", "d": "7/2016"}, {"body": "vue great also always keep use latest version production project everything work well except keepalive also try search keepalive infomation google issue fourm hope example demo show new keepalive work really useful thanks hard work", "d": "7/2016"}, {"body": "hello please use forum gitter questions like repo issue list strictly bug reports feature requests specified contributing guidelines thanks", "d": "7/2016"}, {"body": "hello please use forum gitter questions like repo issue list strictly bug reports feature requests specified contributing guidelines thanks", "d": "7/2016"}, {"body": "hello please use forum gitter questions like repo issue list strictly bug reports feature requests specified contributing guidelines thanks", "d": "7/2016"}, {"body": "posted chat without response params validation feature", "d": "7/2016"}, {"body": "directive params deprecated unlikely get validation support", "d": "7/2016"}, {"body": "use forum vue js gitter question like", "d": "7/2016"}, {"body": "see created issue closing favor", "d": "7/2016"}, {"body": "well continued test found vue problem chrome firefox automatically render attributes lowercased initially vue read seems lowercased foreign attributes even though use still hope find solution ref", "d": "7/2016"}, {"body": "case wontfix use string precompiled templates wo nt problem", "d": "7/2016"}, {"body": "simonmysun workaround use kebabcase modifier eg", "d": "7/2016"}, {"body": "really appreciate prograjkamal great solved problem thank much read document", "d": "7/2016"}, {"body": "wrong", "d": "7/2016"}, {"body": "gets rendered output nt code comments think comment better", "d": "7/2016"}, {"body": "production always use minifieruglifier", "d": "7/2016"}, {"body": "guess right", "d": "7/2016"}, {"body": "production code minify templates included vueify vueloader comments stripped comments ignored default", "d": "7/2016"}, {"body": "record using javascript multilines works purpose", "d": "7/2016"}, {"body": "use please use forum gitter questions like repo issue list strictly bug reports feature requests specified contributing guidelines thanks", "d": "7/2016"}, {"body": "nt think vue responsibility easily write custom directive emit change event use alongside", "d": "7/2016"}, {"body": "makes sense maybe would useful lot people directive included default", "d": "7/2016"}, {"body": "disagree convenient logically separating html events handled html elements vue events handled vue components makes things much straight forward reason without muddying together", "d": "7/2016"}, {"body": "would still separated directive", "d": "7/2016"}, {"body": "hello giuseppeannunziata thank filing issue however bug due way vue particular works arrays duplicate entries lead odd behaviour like observing tracking index vue even warns docs say mode also handle duplicate values source array use", "d": "7/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "7/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks use case consider using webpack code splitting async components", "d": "7/2016"}, {"body": "thanks response gitter accessed cn know submitted one stackoverflow pasted also found quite common questions raised please spend little time give vuejs users answer achieve goal dynamically compile mount ajax loaded content vuejs aware html right scope thanks", "d": "7/2016"}, {"body": "proper way suggested async components mon jul cnweibo notifications githubcom wrote thanks response gitter accessed cn know submitted one stackoverflow pasted also found quite common questions raised please spend little time give vuejs users answer achieve goal dynamically compile mount ajax loaded content vuejs aware html right scope thanks receiving mentioned reply email directly view github mute thread", "d": "7/2016"}, {"body": "give try really works right parentchild relationship still one thing annoyed dynamical loaded content works async component template template contains child component must define child component global component vuecomponent childshouldbeinasynccomponent work way browserfiywebpack manner info components childshouldbeinasynccomponent component configuration object thanks", "d": "7/2016"}, {"body": "export function component files instead vue export default resolve reject gt someapicall gt resolve component stuff catch gt reject error message sure actually works though", "d": "7/2016"}, {"body": "kingdaro followed official vuejs async component works expected remaining issue let async component know child component defination referrenced template must let child component global defined vuecomponent pattern", "d": "7/2016"}, {"body": "comments valid use normal webpack browsefiy pattern referencing child component component localchildcomp pattern ignore sorry bring confusing info", "d": "7/2016"}, {"body": "aware", "d": "7/2016"}, {"body": "already fixed sorry", "d": "7/2016"}, {"body": "bug design decision listen vue events components native events used custom component von listens custom events emitted component longer listens dom events", "d": "7/2016"}, {"body": "example best way transition wrap button explicitly define potential use cases events", "d": "7/2016"}, {"body": "yes explcitly define events emit generally try reduce implicit behaviours vue make reasoning code generally harder road often results little bit boiler plate obvious examples single wrapped button save people sanity complex situations", "d": "7/2016"}, {"body": "thank", "d": "7/2016"}, {"body": "hello cemelo thanks filing issue seems indeed issue transition works without transition nt work either look", "d": "7/2016"}, {"body": "linusborg worries man tried look without knowledge codebase could nt figure reason heads bug seems happen vif well", "d": "7/2016"}, {"body": "wow ok actually nt close wraptag fault please close issue", "d": "7/2016"}, {"body": "show item transitioning duplicated element added dom seen also two elements directive vm inserts wrong element fiddle updated better enlighten bug edit happens element leaving dom", "d": "7/2016"}, {"body": "cemelo thanks update think transition system needs revised deal vdom updates like stay tuned", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "implemented", "d": "7/2016"}, {"body": "nt using", "d": "7/2016"}, {"body": "yep forget always use shorthands", "d": "7/2016"}, {"body": "hmm function shorthand still supported seems like bug", "d": "7/2016"}, {"body": "good know edited issue reason thought deprecated longer called seemed eliminate use case feature bug", "d": "7/2016"}, {"body": "hello please use forum gitter questions like repo issue list strictly bug reports feature requests specified contributing guidelines thanks", "d": "7/2016"}, {"body": "using standalone build use module bundler eg browserifywebpack nt matter globals", "d": "7/2016"}, {"body": "phanan sorry mistakes thanks", "d": "7/2016"}, {"body": "thanks", "d": "7/2016"}, {"body": "properties order objects guaranteed javascript also please use forum gitter questions like repo issue list strictly bug reports feature requests specified contributing guidelines thanks", "d": "7/2016"}, {"body": "hello please use forum gitter questions like repo issue list strictly bug reports feature requests specified contributing guidelines sure vue bug please create reproducing fiddle", "d": "7/2016"}, {"body": "thanks", "d": "7/2016"}, {"body": "wrapping function within solve problem read", "d": "7/2016"}, {"body": "oh okay could please elaborate exactly happening", "d": "7/2016"}, {"body": "use vbind", "d": "7/2016"}, {"body": "thanks lot", "d": "7/2016"}, {"body": "hi adding need repro label waiting repro hope repro self explanatory could nt understand explanation", "d": "7/2016"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "7/2016"}, {"body": "ah example using old outdated syntax updated", "d": "7/2016"}, {"body": "oh wait worked passed tag worked appeared options passed directive way lets say component way btw still passing constructor despite undefined works may confusing", "d": "7/2016"}, {"body": "hello thank filing issue please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem thank", "d": "7/2016"}, {"body": "thank fiddle look", "d": "7/2016"}, {"body": "seems notevil problem run jsfiddle error thrown notevil line function imported esprima undefined investigation error thrown load requirejs without requirejs use vue expectedly guess execution esprima delayed requirejs notevil executed immediately notevil fails import parse function notevil seems support amd style loading", "d": "7/2016"}, {"body": "closed reason ktsn explained", "d": "7/2016"}, {"body": "sorry fault markup component div closed sorry noise", "d": "7/2016"}, {"body": "hello please use forum gitter questions like repo issue list strictly bug reports feature requests specified contributing guidelines thanks", "d": "7/2016"}, {"body": "hello anrananran thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests encourage ask forum gitter", "d": "7/2016"}, {"body": "misunderstood propsdata actually pass object directive looks like trying", "d": "7/2016"}, {"body": "excited read failed tried found issue provides code", "d": "7/2016"}, {"body": "binds attributes nt pass props guess pass prop explicitly", "d": "7/2016"}, {"body": "update directive ok situation wrote better solution javascript import lodash import vue vue export default props name props value template created let props thisprops apply properties component data forown thisprops value key gt consoledebug key key propspush fnlctrl tks reply wrote directive really appreciate would add feature future template", "d": "7/2016"}, {"body": "problem terrydai good solution try manually create new instances mount particular element like", "d": "7/2016"}, {"body": "fnlctrl right sorry misleading terrydai marking duplicate", "d": "7/2016"}, {"body": "related vuejs", "d": "7/2016"}, {"body": "hello please make sure ask question forums gitter chat use issues keep track bugs feature requests", "d": "7/2016"}, {"body": "using latest", "d": "7/2016"}, {"body": "yesi use", "d": "7/2016"}, {"body": "little bug js file nt work", "d": "7/2016"}, {"body": "please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted gitter chat room forum stackoverflow thanks", "d": "7/2016"}, {"body": "one thing notice used arrow function nt arrow functions lexical point current vue instance arrow functions ca nt bound also go sharedjs replace focus focus nt understand step supposed replace method name string consolelog call additional space", "d": "7/2016"}, {"body": "ok another example without arrow function reference textarea document almost problem different hot reload sharedcontroller instances equal workaround parent elstextarea reference acceptable nave multiple nested app replacing quoted string focus consolelog focus consolelog focus triggers hot reload", "d": "7/2016"}, {"body": "seems understand problem hot reload kills new state replaces old one expected replace state ready actual ready replace state", "d": "7/2016"}, {"body": "amp problem please open appropriate repo", "d": "7/2016"}, {"body": "\u8fd9\u4e2a\u5c5e\u4e8e", "d": "7/2016"}, {"body": "expected behavior higher priority case applies element produces", "d": "7/2016"}, {"body": "hi paveltytyuk adding repsacby explained make work putting vif seperate element like", "d": "7/2016"}, {"body": "markrjr none examples work running additional plugins using os x chrome firefox work fine", "d": "7/2016"}, {"body": "hi please make sure ask question forums gitter chat keep questions issues smile", "d": "7/2016"}, {"body": "duplicate", "d": "7/2016"}, {"body": "second div vif command third div style attribute value isshow changed second div copy inline style third div space template", "d": "7/2016"}, {"body": "fixed fix", "d": "7/2016"}, {"body": "got polyfill right rose", "d": "7/2016"}, {"body": "got added array proto rose", "d": "7/2016"}, {"body": "hello thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests encourage ask forum gitter", "d": "7/2016"}, {"body": "thank replying currently forum allow github account oauth login get confirm email post forum", "d": "7/2016"}, {"body": "sorry hear assume checked spam folder disable modes registering massive problems spam bots unfortunately try look issue evening", "d": "7/2016"}, {"body": "make sure set github email public register turn back private get confirmation email", "d": "7/2016"}, {"body": "linusborg thank guys turned github email public relogined forum still get confirmation email click link reminder tips sure checked spam folder also revoked vuejsforum github authorized application recreate loginaccount forum still help using gmail email", "d": "7/2016"}, {"body": "ca nt reproduce", "d": "7/2016"}, {"body": "hello thank filing issue please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem thank", "d": "7/2016"}, {"body": "oh update everything worked", "d": "7/2016"}, {"body": "referring select example please check evan comment see syntax changed little bit select example date emit update shipped next release", "d": "7/2016"}, {"body": "yep select example already updated reflect latest changes branch case breaking change previous versions outlined comment sqal linked clone repo locally check branch example works intended close issue bug", "d": "7/2016"}, {"body": "ty", "d": "7/2016"}, {"body": "thanks filing issue please follow issue reporting guidelines provide minimal jsfiddle jsbin containing set reproducible steps lead behavior described", "d": "7/2016"}, {"body": "thsi bug event sent children two instances child components react one reasons deprecated unintended behaviours make rather useless current scenario need use multiple instances anyway encapsulate component matter template etc", "d": "7/2016"}, {"body": "filter syntax uses space argument delimiter anyone wants work relevant logic", "d": "7/2016"}, {"body": "children guarantee order rely", "d": "7/2016"}, {"body": "trivial sync vue horizon even official horizon examples using vue currently team bandwidth work nt write binding share community", "d": "7/2016"}, {"body": "right thanks forgot official horizon examples heat pace might worthwhile idea highlight trivial sync vue actually somewhere plain sight", "d": "7/2016"}, {"body": "sorry enough justify significant breaking syntax change looks better subjective", "d": "7/2016"}, {"body": "hello languanghao thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests encourage ask forum gitter", "d": "7/2016"}, {"body": "set option false", "d": "7/2016"}, {"body": "yes try still throw error module always think fit bundling vue file due keyword", "d": "7/2016"}, {"body": "rollup bundle whole app single function scope throw error nesting whole bundle another function scope build setup typically would final bundle js rollup bundle nonstrict function use strict code", "d": "7/2016"}, {"body": "digging happens unbuild process called defer undefined refs unbound deferred true stops happening", "d": "7/2016"}, {"body": "share location problem src", "d": "7/2016"}, {"body": "sorry sure nt srcdirectivesinternalcomponentjs line child destroy false defer", "d": "7/2016"}, {"body": "close fixed", "d": "7/2016"}, {"body": "computed properties derived data recreated time source changes mutating nt make sense source value never changes computed change child emit event let parent mutate source instead", "d": "7/2016"}, {"body": "ok thank", "d": "7/2016"}, {"body": "\u7528 trackby", "d": "7/2016"}, {"body": "\u6e32\u67d3\u91cd\u590d\u7684 primitive value \u9700\u8981 \u91cc\u9762 \u662f\u9ed8\u8ba4\u884c\u4e3a\u5c31\u4e0d\u9700\u8981\u4e86", "d": "7/2016"}, {"body": "fnlctrl", "d": "7/2016"}, {"body": "\u5c24\u5927 demo", "d": "7/2016"}, {"body": "trackby trackby \u6b63\u662f\u9650\u5236\u4e86\u4e0d\u80fd\u6709\u91cd\u590d sat jul pm agileago notifications githubcom wrote \u5c24\u5927 trackby id demo trackbydistinct receiving mentioned reply email directly view github mute thread", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "agileago \u9884\u8bbe\u4e86\u6bcf\u4e2a id", "d": "7/2016"}, {"body": "hi sorry late reply think issue internet explorer minimum reproduction code code dom api use vue issue avoid using", "d": "7/2016"}, {"body": "close days inactivity", "d": "7/2016"}, {"body": "input tags self closing yeah think worth mentioning guide tiny example textarea could nt find one", "d": "7/2016"}, {"body": "uncaught typeerror read property tagname null issue fixed already think dont need fix issue however unexpected would required forces odd contortions compared using unwrapped tag think tag required svg namescpace tag see url namespaces crash course", "d": "7/2016"}, {"body": "kazupon good hear fixed already tried adding svg namespace element inside template nt help updated example namespaces set tag suggested nt help either issue seems nothing namespaces tag correctly handled manually set template string instead referencing existing tag using usual use case", "d": "7/2016"}, {"body": "kazupon also workaround nt actually add namespaces surrounding tags wrapping element without namespaces works", "d": "7/2016"}, {"body": "updated example able get working adding containing element changing without renaming element even adding directly element nt work", "d": "7/2016"}, {"body": "buggy internet explorer vue detaching elements moving around dom svgs children moved elements lost see example element svg icon simply moved another using ie icon disappears browsers remains something vue could anything imagine one solution use string template script tag template solve current issue many times eg list rendering vue use meaning face issue ideally would component injects full svg code given icon instead using work much better ie", "d": "7/2016"}, {"body": "close days inactivity", "d": "7/2016"}, {"body": "close fixed", "d": "7/2016"}, {"body": "still select vmodel stuck endless loop problem suggestion thanks", "d": "7/2016"}, {"body": "tried reproduce happen issue close", "d": "7/2016"}, {"body": "wonder documentations vue server side rendering thank", "d": "7/2016"}, {"body": "linusborg would love help guys somehow docs anything", "d": "7/2016"}, {"body": "stylehuan sharpc listed rest assured documenting server side rendering meantime might enjoy browsing tests rajibahmed like help love feedback updated guide note transition system page date everything else current latest beta", "d": "7/2016"}, {"body": "meiyuanchen regarding seo worries impression google search crawlers able understand javascript announced change back google dominate search engine americas europe middle east rest asia exceptions russia china half search traffic china flows baidu interpret javascript crawlers yandex dominate engine russia started crawling javascript pages since last year serverside rendering sake seo somewhat depends site audience hopefully info provided helps said serverside rendering returns prerendered plain html text content crawled searchbots help actually mentioned seo motivation vue serverside issue brought", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "sure similar issue using template strings inside like staticimg scopeitem jpg works fine modern browsers however breaks probably phantomjs test confused template strings inside vue expression converted despite", "d": "7/2016"}, {"body": "expects javascript expression need even probably supported csp expression parser nt handles syntax", "d": "7/2016"}, {"body": "could implement way listen emits similar events dispatch broadcast feels vuejsesque something along lines listen vuecomponent cart template carttemplate data return quantity watch quantity function quantity oldquantity consolelog quantity changed oldquantity quantity new vue el container data function return quantity cartquantitychanged function newquantity consolelog quantity change emitted computed gold function return thisquantity basically would automatically attach global bus", "d": "7/2016"}, {"body": "event busses pattern want encourage useful edge cases generally store pattern like vuex preferred implementing api makes using bus easier feels officially supported would wrong signal looking example stored quantity store accessed components events would nessessary computed property component would update automatically simple example code without using real store solution like vuex var store cart quantity vuecomponent cart template carttemplate data return storecart new vue el container data function return storecart computed gold function return thisquantity", "d": "7/2016"}, {"body": "would say general idea make harder shoot foot sun jul thorsten l\u00fcnborg notifications githubcom wrote event busses pattern want encourage useful edge cases generally store pattern like vuex preferred implementing api makes using bus easier feels officially supported would wrong signal receiving commented reply email directly view github mute thread", "d": "7/2016"}, {"body": "kharysharpe intended listened child instance also added benefit able tap original context instance used", "d": "7/2016"}, {"body": "date release pretty excited changes congrats thinking using vue redux", "d": "7/2016"}, {"body": "sendoushi date yet final release beta may within week vuex also developed alongside feature much simpler api current vuex also integrates vue ecosystem much nicely redux", "d": "7/2016"}, {"body": "vuex also developed alongside feature much simpler api current vuex also integrates vue ecosystem much nicely redux chrisvfritz fantastic hear always felt current api bit overly unnecessarily complicated ended things like compensate js const mutations login state stateloggedin true logout state stateloggedin false export const types objectkeys mutations dynamically generate actions like rare anything complicated needed example export const actions typesreduce el gt var action eltolowercase camelize action dispatch args gt dispatch el args return", "d": "7/2016"}, {"body": "roadmap vue vuex planned release together one compatibilities different versions", "d": "7/2016"}, {"body": "relating question status vuerouter going get vue support soon vue testing need done without router", "d": "7/2016"}, {"body": "gwildu likely released somewhat together vuex support vue pre vuex still receive support vue longer supported uninen vue router receiving love next release vue", "d": "7/2016"}, {"body": "thanks nfo chrisvfritz", "d": "7/2016"}, {"body": "chrisvfritz uninen correction vuex also works vue next major version support vue", "d": "7/2016"}, {"body": "runtime build since nt include compiler need either precompiled templates compile step manually written render functions way precompile templates without using vueifyvueloader files would good idea babel plugin transform properties functions components", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "possible create terminal component elementdirective gone", "d": "7/2016"}, {"body": "mentioned vmodel longer cares initial inline value always treat vue instance data source truth consider deal checkbox arrays custom components updated solved transfer prop child component parent component get inline value via emit event parent component tell value changed compiler compiles directive according compiler generate prop bind event updated however life cycle hook nt trigger due directly changes attribute means ca nt get event native html checkbox component modifying value trigger event changes", "d": "7/2016"}, {"body": "yunsuncn way able get around issue add property specific value ala val use set actual value emit changes vmodel input event", "d": "7/2016"}, {"body": "johnleider wrote custom directive simulate way generate models strict way checking prop checking element tagname otherwise another custom component prop may overwrite default model behaviour", "d": "7/2016"}, {"body": "hi know release date", "d": "7/2016"}, {"body": "thanosalexander decided date yet introduced major breaking changes transition system throughly tested still couple weeks think release opinion", "d": "7/2016"}, {"body": "oki go dont think step stable big thank", "d": "7/2016"}, {"body": "docs one reason vue early adopted documentation reason holding back saw issue following docs nt see getting close get finished soon probably ignoring much going hood reason rising question", "d": "7/2016"}, {"body": "plans implement transitionmode outside component switching", "d": "7/2016"}, {"body": "miljanaleksic docs ready officially released still beta follow progress documentation even contribute", "d": "7/2016"}, {"body": "aristidesfl already done miljanaleksic adding linusborg mentioned new guide already complete even read source like keep mind though writing nt fully updated reflect changes significant peer review still come minor api changes considered unless want help fix typos improve explanations recommend waiting officially publish maybe rc stage also agree excellent documentation vital part vue even dan abramov react team loves docs one personal goals docs even better meantime though anyone wants learn early recommend feature unit tests uptodate resource available one primary resources writing documentation generally quite readable familiar jasmine", "d": "7/2016"}, {"body": "thanks chrisvfritz useful information give new docs shot taking consideration wip feedback required time get serious vue", "d": "7/2016"}, {"body": "render function using nt seem handle arrays like snabbdom way pass data called functions example snabbdom use get first argument seems error vuejs beta way pass data amp event using create element", "d": "7/2016"}, {"body": "dubcanada event handling vue different snabbdom curry function array syntax simply attaches multiple handlers event", "d": "7/2016"}, {"body": "trying get slots content string instead rendering standard nodes easy workaround vnodes nt found way workaround", "d": "7/2016"}, {"body": "miljanaleksic try rendering getting element content hiding element css", "d": "7/2016"}, {"body": "thanks help render final output would different creating component wrap child contents tag encode html", "d": "7/2016"}, {"body": "case render output different element original though make point templating nt way writing content way describing content written content recommend storing text string js resource somewhere else project especially user input kind passing child prop make things thousand times easier anyway", "d": "7/2016"}, {"body": "right kingdaro best nt mix concepts keep simple nice syntax hihgligthig though", "d": "7/2016"}, {"body": "using directive variable available anymore nt see reference change bug missing reference", "d": "7/2016"}, {"body": "miljanaleksic use", "d": "7/2016"}, {"body": "must php dev like know feel lol scott", "d": "7/2016"}, {"body": "smolinari embarrassed one haha made self believe already tried seems nt well enough working thanks sorry waisting time open ticket another issue sure anymore using registered component element available immediately something like would work time foo getting rendered still undefined vue working expected missing time", "d": "7/2016"}, {"body": "missing pass dom elements component instances props", "d": "7/2016"}, {"body": "bad idea let say dropdown component want connect button trigger independent components instead connecting query passing reference directly", "d": "7/2016"}, {"body": "miljanaleksic even better connect via state openclose state maintained common parent parent pass state dropdown prop parent listens button event toggle state way dropdown button completely decoupled button reused control types components dropdown controlled types input components", "d": "7/2016"}, {"body": "easy get rid old habits blame jquery mainly approach evan correct go way even means dropdown integration would tedious parent component would know listen different events opening closing dropdown clicked outside dropdown self etc many events workarounds dropdown solving", "d": "7/2016"}, {"body": "parent component would know listen different events opening closing dropdown clicked outside dropdown self etc many events workarounds dropdown solving still totally dropdown component register outside clicks etc dropdown simply emit close event parent someone clicks outside eample", "d": "7/2016"}, {"body": "yep yep time refactor components thanks everyone awesome community", "d": "7/2016"}, {"body": "one apply component took look generated code using template compiler lot code nt quite understand documentation directives default compiletime directive extract directive directive present runtime want directive also handled runtime definition return true transform function", "d": "7/2016"}, {"body": "blocka nt access builtin directives using function handle equivalent logic example ternary expression expression normal element translated binding event listener", "d": "7/2016"}, {"body": "figured probably wind handled hoc already handing conditionals way although thinking using", "d": "7/2016"}, {"body": "vue two stated advantages vuex vs redux performance better vuex mutates state works best vue replacing old state performance equivalent dirty checking vuex aware vue application using virtual dom mitigate", "d": "7/2016"}, {"body": "blocka mitigate overall perf still much better redux changed granularity reactivity let make comparison vue reactivity finegrained every directive every text binding corresponding watcher results finegrained updates data changes cost dependency tracking overhead initial render slightly higher memory usage redux reactivity granularity whenever anything changes whole app needs rerendered react redux binding optimization connected containers user still needs extensively implement gain better performance vue reactivity medium granularity component corresponding watcher keeps track component dependencies data changes components depend change need rerender virtual dom essentially best case scenario react nt need anything achieve vue generally see compared slightly slower still fast updates small data changes decently faster updates medium large data changes significantly faster initial render", "d": "7/2016"}, {"body": "hey nt get transitions animatedcss work somebody idea", "d": "7/2016"}, {"body": "prop names wrong camelcase vs kebapcase still applies", "d": "7/2016"}, {"body": "linusborg sorry already tried small fiddle css transitions name tag works fine", "d": "7/2016"}, {"body": "using component component visibility modifiers used eg component emits event event emitted dependent whether modifier used", "d": "7/2016"}, {"body": "fergaldoyle played little think ca nt use vmodel modifiers custom element since need manually emit input event want achieve lazy behavior need bind event input eg", "d": "7/2016"}, {"body": "calebboyd use put element", "d": "7/2016"}, {"body": "fergaldoyle according docs think vmodel would react instead use change behavior emit give different results depending whether given", "d": "7/2016"}, {"body": "scratching head playing around simple example reason binding nt working elements also probably noted docs vfor ranges like start instead", "d": "7/2016"}, {"body": "lauritzen scratching head playing around simple vfor example reason value binding nt working select elements seems work expected working", "d": "7/2016"}, {"body": "public service announcement encourage ask support questions forum gitter issue reserved discussions new api handle support various questions get hand thank", "d": "7/2016"}, {"body": "vm get deprecated vueget instead useful evaluating computed exressions like", "d": "7/2016"}, {"body": "iagafonov lot scenarios useful therefore part core need functionality one scenarios easily add similar behaviour help eg lodash js import get lodashget vueprototype get get component var value get thissomeobject somepathtovalue course could also add class method vueget simply import locally need choice", "d": "7/2016"}, {"body": "linusborg first nt use lodash something like secondly lodash implementation slow runtime try deep exression structure vue complies new specified function parseexpression binded scope itis trivial part difficult reimplement course get compile function every time nice parseexression part api vueutil example", "d": "7/2016"}, {"body": "iagafonov also parse path runtime retrieve value dynamically otherwise get error path exist also perf difference negligible cases nt want lodash plenty path retrieval libraries nt part vue concern anymore", "d": "7/2016"}, {"body": "alternatives deprecated param attributes", "d": "7/2016"}, {"body": "talking params directive find binded attributes inside vnode object click bind el binding vnode vnodedataattrs gt color red", "d": "7/2016"}, {"body": "sqal reply question talking param attributes lazy number debounce instance prior could number param attribute get results without using param attribute", "d": "7/2016"}, {"body": "padams mentioned post modifiers", "d": "7/2016"}, {"body": "find vue props change render function always called wonder support decide whether rerender", "d": "7/2016"}, {"body": "okay see post", "d": "7/2016"}, {"body": "hechentao evan explained little bit", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "thanks man", "d": "7/2016"}, {"body": "mark", "d": "7/2016"}, {"body": "encountered problem", "d": "7/2016"}, {"body": "update suggestion welcome project working", "d": "7/2016"}, {"body": "janbaykara may introduce much complicated filter specific use case tables recommend use computed property order using lodash array specifying properties shall used sort lend", "d": "7/2016"}, {"body": "tips v anymore relevant windows phone said relevant anymore could use datav instruction keep source server compliant order pass tests example edit thinking vbind class syntax become datavbind class change validation failure maybe osef", "d": "7/2016"}, {"body": "want add classes slots ease styling existing css components use components also want use component happens slots css components use variant classes modify look element structure css difficult work around div ca nt style using classes copy styles attribute selector case ca nt use variant classes really hope decide add classes named slots would help ton thanks work vue great", "d": "7/2016"}, {"body": "\u5751\u7239\u7684 vue", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "feature useful component created programmatically number props possible like wrong solution vue warns works propsdata may initializer function component definishion data also dynamic component may operate already initialized unmounted instance create jsfilddle detailed explanation", "d": "7/2016"}, {"body": "would useful especially kind cms relevant components would sent json asynchronically whole composite tree would built runtime dynamic components", "d": "7/2016"}, {"body": "sorry late chimer see saying none saying though loss dry repeating data declarations props etc small violation considering benefits modularity reusability etc think gets however rant may rest us admit awe brilliance say indeed smarter teams people developing frameworks vue included may get resume", "d": "7/2016"}, {"body": "sir template script data return fullheight documentdocumentelementclientheight however resize browser height remains", "d": "7/2016"}, {"body": "riliwanrabo need use event handler window listen resize event shown code sets value data nothing else want instead js initialize data data return fullheight documentdocumentelementclientheight bind event handlers method defined ready function windowaddeventlistener resize thishandleresize beforedestroy function windowremoveeventlistener resize thishandleresize methods whenever document resized reset fullheight variable handleresize event thisfullheight documentdocumentelementclientheight case though seems like style work well without needing use resize event html questions feel free ask vuejs forums gitter", "d": "7/2016"}, {"body": "think relevant issue post although want add new question better trying work json row attah id follwing way idnumber value idnumber value si helpfull becuase access directly row want using id problem longer accepts push function want add new row simple reprodutiont issse", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "still happens remove parent component vif child inside still transitioning understand nice situation nt happen technically dom node around anymore leavedone would help opinion edit tried hard create fiddle ca nt reproduce", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "happening try create alternate grid like using safari version os x version vuejs version", "d": "7/2016"}, {"body": "trick", "d": "7/2016"}, {"body": "victorwpbastos work setting deeply nested objects use fieldname key example following data field string use enter value form data would end looking like reason interpolated bind useful building dynamic nested inputs cant hard code parent path eg animaldog directive", "d": "7/2016"}, {"body": "would great mentioned somewhere documentation", "d": "7/2016"}, {"body": "asumaran see vuejs template engine dombased uses native parser comes browser instead providing custom one benefits approach compared stringbased template engines also caveats templates individually valid pieces html", "d": "7/2016"}, {"body": "although html attributes caseinsensitive think still need distinguish letter case html doms vuejs seems willing support svg example left side one work google chrome archlinux vbind causes failure text binding leaves error", "d": "7/2016"}, {"body": "shall open new issue", "d": "7/2016"}, {"body": "simonmysun yes please open new one", "d": "7/2016"}, {"body": "ok", "d": "7/2016"}, {"body": "huxpro \u9ebb\u70e6\u95ee\u4e0b \u7684\u65f6\u95f4\u95f4\u9694 \u662f\u600e\u4e48 \u786e\u5b9a\u7684 \u8fd8\u662f\u662f\u4e00\u4e2a\u56fa\u5b9a\u503c \u8c22\u8c22", "d": "7/2016"}, {"body": "hucy transitionduration css\u91cc\u9762\u81ea\u5df1\u5b9a\u4e49\u7684 \u4e0d\u8fc7\u7528settimeout fn transitionduration \u7684\u65b9\u5f0f\u4e5f\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6bcf\u6b21\u90fd\u80fd\u6eda\u52a8 \u6211\u4e00\u822cready\u65f6\u5019\u5b9e\u4f8b\u5316iscroll \u7528watch\u6765\u76d1\u542c\u91cc\u9762data\u7684\u53d8\u5316 \u6bcf\u6b21\u53d8\u5316\u90fd\u6267\u884crefresh", "d": "7/2016"}, {"body": "perseverancez \u597d\u50cf\u662f\u6ca1\u6709\u4e00\u4e2a\u94a9\u5b50\u51fd\u6570\u53ef\u4ee5\u660e\u786e\u6307\u51fadom\u7ed3\u6784\u662f\u5426\u5b8c\u5168\u63d2\u5165 \u5728\u6d4f\u89c8\u5668\u6e32\u67d3\u5b8c\u6bd5 \u8fd9\u5bfc\u81f4\u65e0\u6cd5\u786e\u5b9a\u7684\u65f6\u673a \u6211\u9047\u5230\u95ee\u9898\u662f \u5728\u4f7f\u7528\u5207\u6362\u7ec4\u4ef6\u65f6\u5e0c\u671b\u53ef\u4ee5\u4fdd\u5b58\u4e4b\u524d\u4e00\u4e2a\u9875\u9762\u7684\u6d4f\u89c8\u4f4d\u7f6e \u867d\u7136\u6709\u914d\u7f6e\u4f46\u662f\u6709\u65f6\u5019\u4e0d\u594f\u6548 \u4e8e\u662f\u6211\u60f3\u5728dom\u7ed3\u6784\u6e32\u67d3\u5b8c\u6bd5\u7684\u65f6\u5019\u4e4b\u524d\u7684\u4fdd\u5b58\u7684\u6eda\u52a8\u9ad8\u5ea6 \u5c31\u9047\u5230\u95ee\u9898\u4e86 \u6211\u5c1d\u8bd5\u4f7f\u7528 \u65e0\u8bba\u5728\u8fd8\u662f\u8bbe\u7f6e\u503c \u7531\u4e8edom\u7ed3\u6784\u672a\u6e32\u67d3\u5b8c\u6bd5 \u5b83\u5728\u6267\u884c\u56de\u8c03\u7684\u540e\u8fd8\u662f\u4f1a\u6eda\u52a8 \u6211\u4e5f\u5c1d\u8bd5\u4e86\u76d1\u542c\u4e8b\u4ef6\u8bbe\u7f6e \u8fd9\u5bfc\u81f4\u7684\u95ee\u9898\u662f\u9875\u9762\u4f1a\u4e0d\u505c\u4e0a\u4e0b\u6eda\u52a8 \u800c\u4e14\u4ec0\u4e48\u65f6\u5019\u53d6\u6d88\u4e8b\u4ef6\u76d1\u542c\u4e5f\u6210\u4e86\u4e00\u4e2a\u95ee\u9898 \u6211\u7684\u89e3\u51b3\u65b9\u6cd5\u662fsettimeout fn maxtime \u8bbe\u7f6e\u4e00\u4e2a\u8db3\u591f\u957f\u7684\u5b9a\u65f6\u5668 \u7b49dom\u6e32\u67d3\u5b8c\u6bd5\u540e \u518d\u53bb\u8bbe\u7f6e\u7684\u503c \u6216\u8005\u76f4\u63a5 \u4e0d\u77e5\u9053\u6211\u7684\u7406\u89e3\u5bf9\u4e0d\u5bf9 \u521a\u7528vue\u53ef\u80fd\u6709\u4e9b\u5730\u65b9\u7406\u89e3\u4e0d\u662f\u5f88\u5bf9\u8fd8\u8bf7\u591a\u591a\u6307\u6559 \u8c22\u8c22\u4f60\u7684\u56de\u590d", "d": "7/2016"}, {"body": "hucy \u81ea\u5df1\u8bbe\u7f6e\u8fc7\u5ea6\u7279\u6548\u7684\u65f6\u95f4 \u5e76\u8bbe\u7f6etransitionmode outin \u5728ready\u4e2d\u5b9e\u4f8b\u5316iscroll\u5e76scrollto\u76f8\u5bf9\u5e94\u7684\u4f4d\u7f6e \u6211\u8bd5\u4e86\u4e0b\u662f\u53ef\u4ee5\u6eda\u52a8\u7684 \u624b\u673a\u4e0a\u6ca1\u6d4b \u6211\u628a\u4ee3\u7801\u8d34\u51fa\u6765\u770b\u770b\u80fd\u4e0d\u80fd\u5bf9\u4f60\u6709\u5e2e\u52a9 js ready function thisscroll new iscroll jsscroll \u5b9e\u4f8b\u5316 thisscroll amp amp thisscrollscrollto \u6eda watch list function \u76d1\u542c\u6eda\u52a8\u533a\u57df\u6570\u636e\u7684\u53d8\u5316 nexttick function thisscroll amp amp thisscrollrefresh iscol function thisscroll amp amp thisscrollrefresh html css", "d": "7/2016"}, {"body": "would nice nt delete jsfiddle", "d": "7/2016"}, {"body": "figured add anyone interested made library decorators allows build fully featured vue components standard familiar typescript syntax due way vue handles works perfectly ides intellisense used along vuerouter build complete database admin app still nt tested every corner case working really well maintaining updating vue enough interest", "d": "7/2016"}, {"body": "looks quite nice itsfrank give go real soon really like vueclasscomponent evan made covers aspects like ability use typescripts full potential vue even makes exiting", "d": "7/2016"}, {"body": "good news convinced project manager use vuetypescript prototype project starting means working withon vuetypescript every day professional setting least september lead substantial feature additions validation coming weeks obviously vuetypescript remain opensource free use mit license", "d": "7/2016"}, {"body": "great itsfrank really curious see evolve", "d": "7/2016"}, {"body": "awesome itsfrank", "d": "7/2016"}, {"body": "looked many different ways integrate typescript vuejs itsfrank decorator system exceptional restructures ts vue compatible js structures compiletime types must map definiton files really ideal model follow would like see become official way vue ts integrate benefits vuejs remains uneffected stays focused js version without needing ts core project vue typescript wraps existing vue api likely trails slightly ideal given api consistent value types added really remaining area work typing within templates tsxjsx transforms great work itsfrank vue typescript becoming defacto way integrate ts vuejs actively evaluating approach use active project harland clarke thanks", "d": "7/2016"}, {"body": "good way integrate webpack", "d": "7/2016"}, {"body": "amcsi look seed app vue typescript webpack integrated evaluation seed project really highlights good implementation really good errors vs code propscomps workflow aligned vue runs aspect lack vueify externalized templates html although looking move standalone html templates reasons prior sped", "d": "7/2016"}, {"body": "would nice see vue typescript publish sample project templates vue cli ts browserify ts vuerouter browserify ts webpack ts vuerouter webpack", "d": "7/2016"}, {"body": "possible work vue files", "d": "7/2016"}, {"body": "think possible changes would need happen vueify lang ts typescript needs compile ts files time mapping errors back vue ts code embedded hard externalizing template using ts files gets ide ts workflow normal tsconfig also template external could process template js get ts errors across templates typescript react within tsx jsx transform errors template", "d": "7/2016"}, {"body": "would nice see vue typescript publish sample project templates vue cli ts browserify ts vuerouter browserify ts webpack ts vuerouter webpack create simple vuecli template basead vuetypescriptseed try", "d": "7/2016"}, {"body": "thank motivating hear positive feedback country past five days updates slowed planning adding new features week amcsi vue format even starting vue js stopped using favor external templates vscode nt able provide coding assist currently support multisyntax files set editor html worked fine highlighting however lost autocompletion functions case typescript half benefits think adding langts functionality vueloader would make functional would lose one two main benefits typescript ides start handling multisyntax files danielschmitz skimmed repo looks solid good stuff indeed planning making vuecli templates near future also yet try vuetypescript vuex never used vuex seems like quite popular would important make sure work nicely together someone experience could try point issues vuex vuetypescript would go long way making vuetypescript closer v", "d": "7/2016"}, {"body": "itsfrank webstormphpstorm could potentially support nt support ts code vue script tags yet already make use dt stuff use regular kind situation real reason vue file support editors nt support anyway real reason editors support nothing interpret got ta start somewhere p nt want make demands could really nicetohave", "d": "7/2016"}, {"body": "amcsi yeah however nt think vuetypescript leverage yet warrant changes editor side take look issue inline html scripts nt forced doubt", "d": "7/2016"}, {"body": "still think vue support even editor showers red squiggles something work towards anyways though small components pain make three separate files", "d": "7/2016"}, {"body": "itsfrank nt know vscode user webstormphpstorm yea like said think gets possible compilers things editors may change accordingly allow editing ways well", "d": "7/2016"}, {"body": "hello itsfrank build complex example pls wait hours thankyou", "d": "7/2016"}, {"body": "itsfrank seems gap lack components mapping object typically verbose component names simplify template use using components example import vuecomponent vuetypescript import subcomponent componentssubsubcomponent import tankcomponent componentstanktankcomponent vuecomponent template require battlehtml export class battle extends vue might also nice provide generic means adding items component object case api changes new items components events etc example import vuecomponent vuetypescript import subcomp componentssubcompsubcomp import tankcomp componentstankcomptankcomp vuecomponent template require battlehtml export class battle extends vue", "d": "7/2016"}, {"body": "case think current behavior vuecomponent sufficient example import vuecomponent vuetypescript import subcomp componentssubcompsubcomp import tankcomp componentstankcomptankcomp vuecomponent template require battlehtml components sub subcomp tank tankcomp export class battle extends vue vuecomponent allows use entire component api decorator vuetypescript trailing think decorators created properties referenced code case contents components object never referenced inside class typescript nt know", "d": "7/2016"}, {"body": "anyone reading issue future something like actually perfectly valid import vuecomponent vuetypescript vuecomponent mycomponent data hello goodbye computed confusedgreeting function return watch function new old consolelog old became new export class uselessclass case adding html would instantiate component like standard vuejs vuetypescript missing features passed decorator pass values used code inside decorator simply cast like ugly work vuetypescript gets updated like typescript superset javascript dont lose features vuetypescript sort built mentality well except things outside typescripts control like vueify", "d": "7/2016"}, {"body": "digging ok keeping vuecomponent object generic object passed taking deeper look output looks like ts injecting methods decorator metadata runtime see overhead transforming data structures runtime component creation thought ts compiler compiletime runtime makes think differently another item typescript see types across methods instances invalid mistyping string number ts caught error check missed ready error essentially vuecomponent object type checked scoped class please take wrong way digging understand works", "d": "7/2016"}, {"body": "yes small overhead mainly iterating keys constructing component object loadtime since vuecomponent evaluated file loaded overhead effect components loaded since point already constructed pure vuejs include utility vuetypescript measure time impact vuetypescript vs total load time look source ts nt plan documenting even medium scale project negligible compared vue loadtime would need create components multiple thousands individual variables functions effect far tell typechecking vuecomponent object really nt way since object component class merged prior loadtime philosophy using decorators class behaviors vuecomponent much possible use object option provided vuetypescript ill post output timing utility shortly", "d": "7/2016"}, {"body": "output medium size project components times ms note project uses vuerouter loader resource touch plus bootstrap jquery threejs", "d": "7/2016"}, {"title": "collectionfetch abort", "body": "collectionfetch call ajax return xhr object method abort ajax return promise object abort method object cancel request", "num": "4062", "d": "7/2016"}, {"title": "turned space using routernavigate", "body": "issue could nt find anything issues went ahead made test repo hoping could provide insight turned spaces thanks", "num": "4059", "d": "7/2016"}, {"title": "feature suggestion ability transform model attributes saving", "body": "would nice analogous method call used transforms model attributes form expected server case api response represents data differently would like represented model implement method translate api response reasonable model attributes however want persist data back server nt currently see reasonable way translate back schema server expects options currently see implement method would work already used marionette passing model attributes template object want send server object would like template involved solution would create method feels like overkill something seems like common need way achieving goal fact need transform attributes order persist unusual indicator antipattern", "num": "4058", "d": "7/2016"}, {"title": "object returned changedattributes missing object methods", "body": "call object returned lacks typical object methods returns type inspector recognizes object parses correctly", "num": "4057", "d": "7/2016"}, {"body": "sure got impressing shows part list functions available jquery returns modified version promise nt issue closed", "d": "7/2016"}, {"body": "test case js var backbone require backbone var router new backbonerouter backbonehistorystart routernavigate space expected result url looks something like actual result url looks like problem breaks urls copy pasting etc general inconsistent behavior none urlencoded chars get decoded see", "d": "7/2016"}, {"body": "sure using jquery hood might", "d": "7/2016"}, {"body": "looks like", "d": "7/2016"}, {"body": "exact use case remember correctly marionette stopped using rendering ping samccone", "d": "7/2016"}, {"body": "looks like still using", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "initial step goal drop direct use tojson since breaking change stopped working marionette project jridgewell correct intent", "d": "7/2016"}, {"body": "captbaritone new implementation marionette", "d": "7/2016"}, {"body": "closing sounds like right thing use wait new version marionette come", "d": "7/2016"}, {"body": "sure mean code changedattributes plain object", "d": "7/2016"}, {"body": "object seems prototype might need close issue though checked way function works different exoskeletonjs looking", "d": "7/2016"}, {"body": "ah yeah exoskeleton object created without prototype feel free open issue problems one maintainers", "d": "7/2016"}, {"body": "could also rewrite create method create new one return promise comes success option instead model faced similar milestone today case used success method options object create problem done", "d": "7/2016"}, {"body": "thesmart model set unset missing attributes think model reset necessary requirement give reason closing issue like know closed backbone models deliberately primitive unopinionated however lack model reset expresses opinion models used philosophically backbone attempt discover minimal set datastructuring models collections user interface views urls primitives generally useful building web applications javascript", "d": "7/2016"}, {"body": "far tell backbone data model incompatible rest way safely model sever state client model constructed constructing new model way get fresh state without reset tuesday july pgifford notifications githubcom wrote thesmart model set unset missing attributes think model reset necessary requirement give reason closing issue id like know closed backbone models deliberately primitive unopinionated however lack model reset expresses opinion models used philosophically backbone attempt discover minimal set datastructuring models collections user interface views urls primitives generally useful building web applications javascript receiving mentioned reply email directly view github mute thread", "d": "7/2016"}, {"body": "think encountered something related ie workaround thought share case anyone else issue assume edgecase hopefully get fixed later releases ie maybe edge", "d": "7/2016"}, {"body": "built codemod jscodeshift adds options handling method", "d": "7/2016"}, {"title": "glimmer updating bound attr contextual component creates new component", "body": "contextual component data bound data updated instances component gets complete reinitialized like entirely new component regression since component reused state gets updated live twiddle works stable fails alpha", "num": "13982", "d": "7/2016"}, {"title": "glimmer binding text input outputs undefined", "body": "code result demo", "num": "13974", "d": "7/2016"}, {"title": "call order siblings reversed", "body": "example order didinsertelement hooks order embertwiddle output console code depends order still right order", "num": "13972", "d": "7/2016"}, {"title": "viewrendernodelastresult giving uncaught typeerror read property lastresult null", "body": "unsuccessful tracking far days ago canary ticked beta noticed canary whole time beta failing addon one travis build logs tried removing dependencies narrow tests start failing reasons debugging passes first time fails second inspected although nt property property nt know helps", "num": "13968", "d": "7/2016"}, {"title": "glimmer component integration tests", "body": "freshlyminted app using ember alpha released today integration tests fail repo reproducing issue followed steps", "num": "13963", "d": "7/2016"}, {"title": "glimmer read property hascomponentdefinition undefined", "body": "suspect issue using contextual components like problem affecting ember basic dropdown sample app nt render code", "num": "13962", "d": "7/2016"}, {"title": "index route rather route nesting breaks routing ember", "body": "trying update ghost ember ran fairly large issue ember routing breaks application scenario ghost route called path nested route inside path ghost also several routes like path etc nesting without prior ember worked fine trying upgrade explicit route eg etc hitting route treated post id ghost routerjs also built couple twiddles give simpler example ember type route input anything notice alert appears saying post route id whatever entered type route input notice alert appears saying team route ember type route input anything notice alert appears saying post route id whatever entered type route input notice alert appears saying post route id team nt sure unexpected breaking behavior ghost router something wrong ghost router something wrong would awesome figure way fix", "num": "13960", "d": "7/2016"}, {"title": "glimmer action mut nondefinedvalue fails", "body": "error action passed null undefined action reproduction code note twiddle nt type code", "num": "13959", "d": "7/2016"}, {"title": "glimmer uses throw error", "body": "search nodemodules got following files looks like liquid fire already knew loaderjs benchmarks small importance emberwormhole emberclipageobjects tests", "num": "13956", "d": "7/2016"}, {"title": "glimmer invalid inline yields exception", "body": "invalid behaves inconsistently htmlbars glimmer see htmlbars warning follow rendered glimmer exception thrown rendering questions glimmer behave htmlbars issue warning development mode", "num": "13955", "d": "7/2016"}, {"title": "transitions route different model qps throws error", "body": "exact error message nt provide enough stringnumeric parameters satisfy dynamic segments route view able extract failing example big app reduce minimum life demo code raytiley pr related think pr part current beta merged still get error", "num": "13954", "d": "7/2016"}, {"title": "glimmer master issue", "body": "hello welcome glimmer alpha testing worked almost year excited board help us smooth rough edges issue updated discover new problems experienced issues testing alpha builds please check already covered one issues linked relevant information one place help everyone fixing problems well experiencing background glimmer groundup rewrite architecture departs significantly glimmer example old system eagerly registered observers everything get notified things change whereas glimmer pullbased system rely observers tracking changes intercepts instead careful break public apis known intimate apis used popular addons might emergent incidental undocumented behaviors old system simply fallout old implementation details extent possible support without incurring big cost everyone else try address issues discover however please understand always easy possible fully emulate subtle differences sometimes really equivalent concepts new codebase sense something missing sense approaches completely different therefore need decide edgecases casebycase basis would really help provide much details possible trying accomplish made chose path know officially supported alternativesworkarounds easydifficult would migrate supported path current status last months went largescale effort modernize rendering test suite significantly improved coverage importantly allowed tests run new existing rendering engines minor exceptions everything passing continuously tested ci every push separately rest test suite also passing continuously tested ci exceptions reason failing tests incidentally coupled old engine working rewriting tests reenable soon possible ember core semantics covered test suite believed mostly working new engine certain addons might depending internal apis incidental behaviors result addons might working moment one goals alpha testing period get addon authors identify report compatibilities work addressing soon possible installationbuild issues mut helper issue issue fixed ensure getting right versions update require versions js devdependencies emberclihtmlbars emberclihtmlbarsinlineprecompile general caching related issues cases might remove directory changing ember version followed incorrect production builds production minified alpha builds incorrectly included developmentmode assertions debugging aids led bloated file sizes increased parse time significant runtime performance penalty fixed test modules included builds alpha builds incorrectly included tslint test modules led bloated file size increased parse time fixed incorrect version numbers alpha builds incorrect version numbers like opposed fixed notable changes changes natural fallout internal implementation changes believed previous behaviors incidental undocumented inconsistent otherwise unreliable believe breaking app please provide details linked issues rerendering component manually ie calling longer forces everything subtree recompute notably helpers like updated rerendering lifecycle hook called component whenever anything subtree changed backtracking rerender error development mode work production builds updates automatically values added object using tagless components components set empty string used ignore attribute unintentionally allowed users repurpose uses hard error use tagless component missing features features added shipping app depends work moment however still intend support fully need make code changes moment instrumentation support new engine emitting instrumentation events actions instrumentation part feature flag also missing known issues issues fixed shipping app depends might behave strangely edgecases however still intend support fully need make code changes moment currently stubbed implementation lock wycats addonstooling meant exhaustively list general incompatibilities reported addon authors directly status notable addons addon author experienced issues enumerated please open new issue describe needs testing current status acceptance tests working noncomponent integration unit tests working component integration tests working history component unit tests working fastboot working emberclifastboot ember node tests need pass engines working ember needs implement helper liquid fire waiting liquid fire release liquid fire currently work due private api dependencies ember inspector working limitations ember needs implement apis glimmer known issues performance issues one overarching goals glimmer improve performance immediate priority maximal compatibility however noticed certain common patterns become slower please report bugs alpha period always running performance benchmarks please make sure using minified production build debug builds contain lot helpful development aids known impact performance negatively build issues vendorjs byte size regression regression boot time lock rwjblue krisselden initial render compilation cost high lock wycats chancancode rerendering general slowdown big pages validator issues fixed rerender performance regression proxy eg yielded content fixed", "num": "13949", "d": "7/2016"}, {"title": "glimmer backtracking rerender assertion", "body": "backtracking rerender refers scenario middle rendering process modified something already rendered example js appcomponentsfoobarjs export default embercomponentextend init thissuper arguments thisget parent set foo bar see time component instantiated rendered already used value parent context populate curly however constructor trying modify value hence backtracking pretty extreme example illustrates problem besides also happens synchronously rendering process additionally backtracking often issue arising behavior twoway bound properties behavior always unreliable partially supported deprecation since ember since ember supported immediately second rerender backtracking detected repeating system stabilizes strategy could source performance problems extreme cases could cause infinite loop glimmer extra rerender relatively cheap extra bookkeeping detect backtracking one wins glimmer system need eagerly setup observers track changes certain optimizations glimmer allows system skip traversing subtrees knows nothing within changed together factors mean readily detect backtracking whether something already rendered without large amount extra bookkeeping intentionally defeating optimizations already wrote code support due already unreliable nature feature significant bookkeeping costs hesitant automatically enable everyone without knowing whether still needed compromise currently perform detection development mode turned deprecation message developmentmode assertion hard error production mode detection code stripped backtracking work kept facility support feature without assertion codebase behind second feature flag code tested continuously ci however disabled default enough usage information determine next steps believe usage patterns affected please provide much detail scenario possible possible alternatives andor targeted solutions use require wholesale change engine therefore would helpful provide background information context usage instead showing us small code snippets codebase", "num": "13948", "d": "7/2016"}, {"title": "glimmer difference semantics", "body": "previously fire something directly inside component template changed words dynamic content rendered directly component layout glimmer hook fire anything inside template subtree changed regardless depth nesting words dynamic content rendered component layout also child components invoked within layout child components put simply hook called anytime something rerendered anywhere inside component element new implementation rendering engine differenciate whether dynamic content nested directly inside component future optimizations inlining make line even blurry natural place track distinction rely old huristicsemantics knowledge previous behavior guaranteed official documentation since mostly used leaf components believe impact minimal incidentally also enable use cases previously possible component converts content markdown html believe usage patterns affected please provide much detail scenario possible possible alternatives andor targeted solutions use require wholesale change engine therefore would helpful provide background information context usage instead showing us small code snippets codebase", "num": "13947", "d": "7/2016"}, {"title": "glimmer removal always dirty rerendering", "body": "previously calling component would force everything template subtree recompute including helpers like custom helper done walking render nodes alwaysdirty visitor glimmer entire system built avoid unnecessary work equivalent concept render nodes many cases system tell nothing subtree changed without traversing sometimes system even tell certain things like constant values templates going change optimize work aheadoftime therefore nt necessarily equivalent strategy use without defeating optimizations knowledge previous behavior guaranteed official documentation usually used work around issues fixed new system example tracks changes object automatically long added require manual rerender believe usage patterns affected please provide much details scenario possible possible alternatives andor targeted solutions use require wholesale change engine optimization strategies therefore would helpful provide background information context usage instead showing us small code snippets codebase", "num": "13946", "d": "7/2016"}, {"title": "property get set component init breaks computed property", "body": "nt think common pattern initializing properties method component caught surprise today computed property dependency method component anytime component fully initialized value cached invalidated see twiddle three examples would expected three computed properties however one within block nt seem properly recomputed might related certain also seems describe issue however nt affect anymore normal computed properties still impacted", "num": "13945", "d": "7/2016"}, {"title": "internet explorer process memory leak", "body": "sure ember issue internet explorer issue created sample application illustrates problem using ember canary contains ember cli generated application two routes couple links application template loading application either using production build another web server clicking two routes causes process memory leak internet explorer specifically update version using ie developer tools shows objects allocated cleaned clicking routes yet heap size process memory still growing drilling retained objects seems show htmldivelement retained run test chrome version take three snapshots repeating movement routes one see objects allocated snapshot gone also created selenium test clicks two routes using links run iterations internet explorer shows saw tooth growth process memory calling collectgarbage effect process memory use run long enough around iterations internet explorer top memory use crash test run iterations chrome without causing growth process memory reported chrome task manager chrome process memory tab rises stabilises length test test finishes memory drops back unlike ie never drops found reported memory leak internet explorer edge seems relate cleaning application reloaded coincidently ember app also seems affected bug nt know related process memory growth reloading application", "num": "13940", "d": "7/2016"}, {"title": "ember broken", "body": "latest update uglify js longer supports default enabled setting options means default install ember nt work anymore proposed fix would change branch ember default", "num": "13936", "d": "7/2016"}, {"title": "triggering integration tests ember", "body": "noticed test failing ember well current canary build repo traced back line element clicked trigger event component test nt intentional change bug intentional would one define general click handler instead", "num": "13932", "d": "7/2016"}, {"title": "glimmer make node tests pass", "body": "need run tests glimmer", "num": "13930", "d": "7/2016"}, {"title": "glimmer ember inspector", "body": "tests need pass", "num": "13929", "d": "7/2016"}, {"title": "loading states behaviour nt match documentation", "body": "hi understand correctly according documentation file slow models default template better match found seem happening please check example used first route next route used anymore think docs say used", "num": "13922", "d": "7/2016"}, {"title": "update routerecognizer effects wildcard route", "body": "noticed change wildcard route behavior added router map wildcard route nt work expected following condition js thisroute testroute path routeid resetnamespace true function thisroute testsubroute path subrouteid thisroute pagenotfound path wildcard twiddle better illustrate try entering path wildcard route takes priority works expected seems nested route route looking id cc nathanhammond rwjblue per conversation sf ember meetup", "num": "13921", "d": "7/2016"}, {"title": "create embererror chrome canary", "body": "time embererror raised chrome canary canary following error raised tell temporary error object writable stack property whereas error subclass stack property nt cap things reproduction app", "num": "13919", "d": "7/2016"}, {"title": "emberroute thisrender resolve template path pod structure", "body": "template looks like outlet outlet baz try render two templates different outlets hook like works located work nested inside pod structured app like eg maybe possible import template via accepts path imported template", "num": "13918", "d": "7/2016"}, {"title": "change namespace embermetalstreams emberhtmlbarsstreams break compatibility", "body": "streamsstream streamsutils defined embermetal modules moved emberhtmlbars breaking backward compatibility addons apparently marked dying addons never used private modules however existing apps using addons broken migrating even using private modules recommended release ember lib also deprecationmigration path private modules log issues addons however take time addons fix issue even sure fix without breaking backward compatibility may naive", "num": "13917", "d": "7/2016"}, {"title": "array parameters issues", "body": "hi team come across issue url prams array eg etc idea support future", "num": "13916", "d": "7/2016"}, {"title": "deprecation guide addition emberbinding use connect", "body": "today noticed ember deprecation emberbinding curious situation assumed simple defineproperty inside init luck ember find good solution gladly submit pr guides others situation thank advance", "num": "13912", "d": "7/2016"}, {"title": "instrumentation", "body": "failing test nodes without view instances instrumented knowledge requires thought someone knowledge internals efficiently probably required ember inspector", "num": "13910", "d": "7/2016"}, {"title": "better solution readdomattr", "body": "public api currently wrapper around read longer concept knowledge yehuda plan", "num": "13908", "d": "7/2016"}, {"title": "passing attr component template results value beta canary", "body": "rendering template passing attr named result value eg following code applicationhbs mycomponent env foo mycomponenthbs env env mycomponentjs didreceiveattrs consolelog thisenv thisget env logs thisenv null browser logs thisenv null component template renders env env foo reproducible beta canary ember expected behavior occurs logs thisenv foo renders env foo example embertwiddle", "num": "13907", "d": "7/2016"}, {"title": "action instrumentation", "body": "currently feature flagged accounted failing tests closure action improved instrumentation knowledge requires knowledge want instrument", "num": "13905", "d": "7/2016"}, {"title": "implement mount", "body": "since behind feature flag recently implemented glimmer failing tests mount knowledge understanding outlet state reference system", "num": "13903", "d": "7/2016"}, {"title": "emberbinding support", "body": "failing test accept bindings string emberbinding knowledge requires knowledge referencetagging system appears one bug previous expectation becomes current assertion", "num": "13902", "d": "7/2016"}, {"title": "isvisible implemented", "body": "failing tests toggle visibility isvisible isvisible overwrite component style knowledge understanding componentmanager current style attribute merged property component object", "num": "13901", "d": "7/2016"}, {"title": "master issue", "body": "issue serves master issue alphas list know issues links detailed issue going fix issue please leave comment issue number known issues emberbinding support instrumentation known missing features mount helper action instrumentation emberimprovedinstrumentation temporary workarounds wrapper wycats", "num": "13900", "d": "7/2016"}, {"title": "normalize safestrings setting attributes", "body": "failing test set dynamic style htmlsafe knowledge requires understanding glimmer handles attributes currently fails ie adhere protocol", "num": "13899", "d": "7/2016"}, {"title": "feature guard non kvocompliant methods", "body": "searched error code deeply chained computed property updating expected looking everywhere two hours came simple push newobj instead pushobject newobj array constructed using embera also using ton things js ember used methods like push look directly loc gut telling everything ok kind hard notice would wonder one shit happens quesition possible make methods like push work expected sure reason nt possible way log notice assert possible cross browser possible browser debugging would enough think computed property chains one hardest things debug especially ember beginners lot trouble see new programmer join project helpguards errors would great let discuss could done", "num": "13889", "d": "7/2016"}, {"title": "trigger trigger component actions", "body": "test suites pass example failing specifically seem trigger actions components anymore using found commit introduces bug think corresponds commit", "num": "13888", "d": "7/2016"}, {"title": "emberjs nodejs route", "body": "work emberjs realized problem emberjs nodejs route route node like another route emberjs could call emberjs route case host emberjs files static resources nodejs server thank advanced", "num": "13884", "d": "7/2016"}, {"title": "move embertesting helper docs function definition", "body": "currently documentation helpers things like etc file split helpers separate files like helpers documentation moved helpers specific file example would like click documentation moved file", "num": "13862", "d": "7/2016"}, {"title": "ember test building hangup", "body": "exact output running ember test project builds fine right says hangup stack trace nothing running ember node phantomjs ubuntu crouton honestly idea heck going since literally information given try run ember test run ember server runs without issue", "num": "13854", "d": "7/2016"}, {"title": "outdated documentation listing higher search engines", "body": "new user ember find rather annoying googling ember related queries outdated documentation listed higher recent relevant documentation know obviously nt easy fix much control ways consider link outdated documentation new page extra internal links boost pages seo ranking use sitemapxml listing older version documentation lower priority value block old documentation using robotstxt probably terrible idea thanks", "num": "13848", "d": "7/2016"}, {"title": "schedulerevalidate canary causing test failures", "body": "hello recently started failing build canary one errors looks line looking history file see reason recent changes would produced failure wholly unfamiliar code hopefully helpful error report red herring let know need information maybe problem", "num": "13846", "d": "7/2016"}, {"title": "provide readonly access windowlocation", "body": "summary provide embery way read full url contained also supports testable ways changing value context service computes critical branding elements based domain used access app first invocation set window title emberclidocumenttitle routerbased solutions nt sufficient testing naive implementation service would require changing directly undesirable consequences alternatives someone suggested using undefined returns route path someone suggested using access required information private andor undocumented thing goes underlying relies location wrap access memoize way overridden tests feel something embery would general utility understand talking spas protocol domain parts wo nt change app lifetime also suggest readonly external links handled links internal ones handled router changeable testing without side effects get changing thoughts", "num": "13844", "d": "7/2016"}, {"title": "routermap callbacks hung router constructor", "body": "hangs callback functions receives within traditional clientside rendered emberworld harmless however take account fastboot becomes unsafe call multiple times within application functions leak across instances particular usecase registered routes dynamically depending user state inside instanceinitializer nt terribly uncommon pattern example someone wants register routes language user likely place would happen becomes problem fastboot time request made callback pushed property constructor enumerated invoked request new callback pushed array callbacks clean takes place memory leak unsafe functions previous app instances invoked lines question wondering anyone would opened moving callbacks elsewhere application instance larger ramifications would like gather interest feedback first", "num": "13840", "d": "7/2016"}, {"title": "get container initializers", "body": "work", "num": "13828", "d": "7/2016"}, {"title": "read property outlets undefined transitioning setupcontroller application loading", "body": "unable repro jsbin ember twiddle reason created basic app demonstrates issue calling hook child route application model hooks still blocking app fails render route spits moving transitionto earlier model hooks resolves issue side note template render route unspecified route included renders inside application template via outlet wondering create separate issue", "num": "13826", "d": "7/2016"}, {"title": "unable set parent properties initial hooks", "body": "using ember trying update value passed component component rendered tried using hooks make sense none appear able mutate works rerenders initial render works obviously bad practice triggers many deprecations ideas bug something expected twiddle look console log observers never triggered", "num": "13823", "d": "7/2016"}, {"title": "sortby ember array sort asc added", "body": "demo expected able something like seeing different behavior using vs twiddle linked shows issue experiencing", "num": "13822", "d": "7/2016"}, {"title": "add sinks jpurify", "body": "seen", "num": "13821", "d": "7/2016"}, {"title": "map mapwithdefault marked private", "body": "classes currently marked yet exported shims looks like tag added seems inconsistent export classes mark private like propose marking public cc pangratz", "num": "13815", "d": "7/2016"}, {"title": "beforemodel transitionqueryparams always empty", "body": "noticed always empty object twiddle demonstrating issue make sure open console see transition articleid although still able access params beforemodel using transitionsparams routename however believe bug queryparams always empty cheers fred", "num": "13813", "d": "7/2016"}, {"title": "chain embers array functions extendprototypefalse", "body": "disabling array prototype extensions following occurs js var people embera name john age candrive true name jill age candrive true name bob age candrive false var arraymethodsaremissing peoplecompact prevents chaining multiple methods one another means must wrap embera method seems counterintuitive", "num": "13809", "d": "7/2016"}, {"title": "different behavior", "body": "entirely sure expected behavior feels like something either consistent clearly documented reproduction shwoodard reproduction oligriffiths cc locks", "num": "13806", "d": "7/2016"}, {"title": "binding working eachin helper", "body": "see accepted answer stackoverflow normal use get required eachin fixed avoid extra boilerplate", "num": "13805", "d": "7/2016"}, {"title": "glimmer volatile tags play nice skipifnotmodified", "body": "x fix iterators use volatile tags x audit remaining volatile tags maybe remove x potential infinite loop volatile tag involved", "num": "13804", "d": "7/2016"}, {"title": "glimmer refactor references metadata", "body": "remove special const reference flag use identity consttag instead tag dynamically return const value thing think compile time vs runtime analogy refactor ember install metadata references avoid known metadata slots operations drop metadata sometimes would want copy places currently use", "num": "13803", "d": "7/2016"}, {"title": "could helper support object params", "body": "example queryparams objparams think necessary nt know many params thanks", "num": "13802", "d": "7/2016"}, {"title": "get dom component tagname", "body": "hi setting tagname component use tagname else break page style want access dom component using throws error saying object available tagname solution", "num": "13798", "d": "7/2016"}, {"title": "es symbols break classes", "body": "js const sym symbol foo const class emberobjectextend sym bar alert classcreate bar alerts safari web inspector closed function bar web inspector open chrome correctly always alerts function bar", "num": "13796", "d": "7/2016"}, {"title": "bug beta incorrectly set emberroutinglocationhistorylocation", "body": "user adopts version ember cli applies workaround discuss without specifying inside application following breaks us assumes content tag rather trying get application configuration consider blocking release cc martinmalinda", "num": "13795", "d": "7/2016"}, {"title": "fix beta builds", "body": "beta builds failing ms edge error might might bug browser supposedly another pr master fixed issue maybe backport relevant stuff beta", "num": "13794", "d": "7/2016"}, {"title": "embertestwait documentation example outdated", "body": "currently api docs suggest return async test helper according rwjblue guides nt necessary anymore", "num": "13793", "d": "7/2016"}, {"title": "ember generate route working", "body": "hi following document came across section tried command end getting error information using ubuntu intalled nodejs official website aptget remove nodejs first using embercliemblem bowerjson packagejson", "num": "13788", "d": "7/2016"}, {"title": "model found pluralmodelname", "body": "happens sometimes seems like trying singularize type model refresh page nt get sure happening sometimes action triggers request js ideas find info help isolate post", "num": "13786", "d": "7/2016"}, {"title": "ember documentation mess", "body": "uncomfortable work list great see like thanks advance", "num": "13779", "d": "7/2016"}, {"body": "thanks reporting definitely bug canshould fix sun jul pm miguel camba notifications githubcom wrote contextual component data bound data updated instances component gets complete reinitialized like entirely new component clicking causes component hook called creates new component hash ctxcmp component mycomp isopenisopen thing thingctxcmp contextual component thingctxcmp regression since component reused state gets updated live twiddle works stable fails alpha receiving subscribed thread reply email directly view github mute thread", "d": "7/2016"}, {"body": "currently rely componentdefinition internal object stable looks like ones produced component helper either fix component helper produce stable values beef stability check rely currently believe first approach would simplier", "d": "7/2016"}, {"body": "chancancode mind worked already thought reference stable unless first argument component name changes", "d": "7/2016"}, {"body": "cc chadhietala", "d": "7/2016"}, {"body": "chadhietala think want call", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "cibernox confirm fixed smile", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "hmm nt think order siblings really well defined api definitely guarantee child components called parents nt think made guarantees ordering example krisselden likely know area best think consider bug try fix glimmer behavior intentional", "d": "7/2016"}, {"body": "think pass tests actual goal children called parent think would pretty simple instead queuing hooks could move delete patch ember reverses order everything work rules update hooks nt know equivalent place make emit corresponding updating opcode queue hook", "d": "7/2016"}, {"body": "chancancode parentchild ordering correct issue siblings", "d": "7/2016"}, {"body": "yeah basically preorder queueing parent child child child test failed reversed order make pass p actually want postorder queuing p think actually might implications exception cases though since errored appending one children hook queuedcalled whole area needs lot love anyway", "d": "7/2016"}, {"body": "rendernode private part", "d": "7/2016"}, {"body": "ok nt know causing failure using private code addon code maybe one addons using issues glimmer ember debugging skills apparently lacking case", "d": "7/2016"}, {"body": "fixed direct issue reported reproduction steps still issue due way top level outlets used embertesthelpers", "d": "7/2016"}, {"body": "work done switchflyembertesthelpers", "d": "7/2016"}, {"body": "actually able reproduce case component explicitly set rather location discovered resolver", "d": "7/2016"}, {"body": "fixed", "d": "7/2016"}, {"body": "dfreeman way bug happening thing emberbasicdropdown", "d": "7/2016"}, {"body": "confirm issue fixed investigating another one", "d": "7/2016"}, {"body": "note believe related pr", "d": "7/2016"}, {"body": "acburdine know problem us release addressing bug nt know tell follow along know ongoing discussion mean time suggest stick", "d": "7/2016"}, {"body": "nathanhammond thank quick reply", "d": "7/2016"}, {"body": "cibernox try latest build", "d": "7/2016"}, {"body": "lunch", "d": "7/2016"}, {"body": "bug fixed another bug open new issue", "d": "7/2016"}, {"body": "thank cibernox", "d": "7/2016"}, {"body": "issue helpful assertion ideally engines", "d": "7/2016"}, {"body": "thanks take", "d": "7/2016"}, {"body": "confirm present", "d": "7/2016"}, {"body": "sorry locked issue earlier intent generally better idea open new issues instead long thread disconnected issues especially since subthreads github ui however things think really belongs unlocked add digression may also periodically delete outdated comments keep thread current happy alpha testing", "d": "7/2016"}, {"body": "think duplicate moved call quick check see related works expected mentioned issue comment explanation init works ok close issue", "d": "7/2016"}, {"body": "thanks serabe looks like probably samesimilar root cause think regular use case even local properties ie trying propagate back parent view also affected think broadly means ca nt reliably property initialization method local computed properties may depend values however glad followup issue close one think sufficiently similar", "d": "7/2016"}, {"body": "jdenly thanks great issue curious see issue versions ie example edge", "d": "7/2016"}, {"body": "stefanpenner nt tested edge get access windows machine check get back", "d": "7/2016"}, {"body": "jdenly would handy additional data point need get windows setup latop try remember dig weekend", "d": "7/2016"}, {"body": "stefanpenner run test edge fine ran iterations without problem process memory never went dropped pressure browser end js heap larger end also tested version ie windows machine update version rather slightly different version windows machine whilst shows process memory growth load test unlike edge nt show heap growing retained objects manually clicking routes unlike windows think internet explorer specific bug rather ember issue", "d": "7/2016"}, {"body": "jdenly interesting may still something ember avoid least attempt confirm w friends ms felixrieseberg bterlson two fine fellows recommendationsthoughts", "d": "7/2016"}, {"body": "nt really insight also add reybango might able get fixed gut feeling leak chrome edge prooooobably edge bug", "d": "7/2016"}, {"body": "felixrieseberg danke", "d": "7/2016"}, {"body": "felixrieseberg looks like edge fine problem seems ie also using remote web driver test using selenium perhaps related", "d": "7/2016"}, {"body": "thank reporting mattbearman sadly longer maintained unlikely new release done point new lts second one months away thank", "d": "7/2016"}, {"body": "believe duplicate nt chance dig confirm", "d": "7/2016"}, {"body": "closing duplicate given internally click calls trigger js jqueryeach blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu split function name", "d": "7/2016"}, {"body": "thanks triaging keep eye issue fix", "d": "7/2016"}, {"body": "think already rendered try access probably wo nt remove already rendered parent show notice see template try access directly homepage try adding link directly", "d": "7/2016"}, {"body": "teddyzeenny thanks quick response tested direct link like suggesting surely worked nt desired outcome display scenarios also seems way works right determines loading page route transitioned seems weird route know display loading page independently route", "d": "7/2016"}, {"body": "urbany really default template route depends routing structure app place templates whether handle event nt desired outcome display templatesloadinghbs scenarios leaf routes children parent route would use loading template parent instead would use loading route sibling think myaccounthbs already rendered try access myaccountservices probably wo nt remove already rendered parent myaccount show loadinghbs teddyzeenny correct parent rendered need replace loading templates since already loaded also seems way works right determines loading page route transitioned seems weird route know display loading page independently route route know display loading template one available seems utilize loading states loading templates needed route hierarchy structure resolution render loading template depends app needs framework simple pattern utilize loading template perhaps example could use myaccountloadinghbs andor myaccountservicesloadinghbs see close since ember bug please reach help channel questions loading template behaviors", "d": "7/2016"}, {"body": "derrickshowers thanks reporting bantic think may time poke", "d": "7/2016"}, {"body": "rwjblue yes take look tonight tomorrow", "d": "7/2016"}, {"body": "bantic derrickshowers rwjblue confirmed work correctly emberrouterecognizer diff diff git atestsacceptanceglobweighttestjs btestsacceptanceglobweighttestjs new file mode index devnull btestsacceptanceglobweighttestjs import test qunit import moduleforacceptance testshelpersmoduleforacceptance moduleforacceptance acceptance glob weight test check glob weight function assert visit someid andthen function assertequal currenturl someid assertequal currentroutename testrouteindex diff git atestsdummyapprouterjs btestsdummyapprouterjs index atestsdummyapprouterjs btestsdummyapprouterjs const router emberrouterextend routermap function thisroute foo thisalias alias elsewhere foo thisroute testroute path routeid resetnamespace true function thisroute testsubroute path subrouteid thisroute pagenotfound path wildcard export default router words fixforward back pocket", "d": "7/2016"}, {"body": "certain routerecognizer bug best guess moment related interaction ember routing dsl routerecognizer ran following test past several versions routerecognizer failed way javascript test support nested route star route function routermap function match match routeid routeid function match match routeidindex match subrouteid subrouteid match wildcard wildcard matchesroute abc handler routeid params routeid abc isdynamic true handler routeidindex params isdynamic false matchesroute abcdef handler routeid params routeid abc isdynamic true handler subrouteid params subrouteid def isdynamic true matchesroute abcdefghi handler wildcard params wildcard abcdefghi isdynamic true abc path matches wildcard handler incorrectly abcdef path matches correctly abcdefghi path fails match anything test output screenshot poke around later hopefully tonight tomorrow", "d": "7/2016"}, {"body": "certain routerecognizer bug clarify new routerecognizer bug fact ember routing issue newer ember probably related interaction ember rr rather rr directly dig update", "d": "7/2016"}, {"body": "sounds good thanks digging", "d": "7/2016"}, {"body": "looking deeply due bug routerecognizer nt realized ember using routerecognizer ember see going back able bisect breaking change landed routerecognizer going read specificitysorting rules work bit fix routerecognizer ping jmeas case thoughts well", "d": "7/2016"}, {"body": "thanks ping bantic look later today v", "d": "7/2016"}, {"body": "surprising dynamic segments specificity always win wildcard specificity hypothesis one two things wrong specificity compared comparing vs would considered wrong occur either dynamic route needs become less specific glob needs become specific nt think anything code make route less specific also nt think anything could cause one route increase specificity separate route think likely logic superseding specificity comparison great could look specificity routes determine would match solely based fix demonstrates nt always case occasionally route recognizer factor things cause less specific routes get matched specific ones time work step figure nt get bantic also surprised tests nt cover derrickshowers bantic one could open simplified failing test case route recognizer would help debugging later nbd nt time tho also emberrouterecognizer rewrite route recognition algorithm awesome spent lot time looking ember routing stuff always felt could implemented straightforward way", "d": "7/2016"}, {"body": "jmeas thanks description failing pr got waylaid things hope chance dig back today update start working fix", "d": "7/2016"}, {"body": "jmeas yes emberrouterecognizer near groundup rewrite routerecognizer currently passes tests include new one added benefit ember addon supporting serialization next steps improve automated serialization add support engines performance tuning landable stefanpenner rwjblue get us emberasanaddon full documentation rr research effort note wrote specificity sections finishing implementation need revise", "d": "7/2016"}, {"body": "jmeas thanks describing may going little digging mixonic specificity added routes seems correct think case logic superseding specificity comparison particular may related adding routes compiling nfa recognition abc eg matched state wildcard state another thing noticed change ordering route mapping test tests pass nt time dig today may look weekend able", "d": "7/2016"}, {"body": "adding wildcard route appears code returns state called instead always creating new state causes wildcard settings basically stomp previously exising segment settings example regex old dynamic segment stomped line executes still investigating seems pretty fatal though flummoxed commit bantic identified caused surface", "d": "7/2016"}, {"body": "see also", "d": "7/2016"}, {"body": "affecting travis ci chrome canary well renders nothing logged", "d": "7/2016"}, {"body": "believe embererror extending native error class however appears chrome made property readonly", "d": "7/2016"}, {"body": "chancancode says probably related", "d": "7/2016"}, {"body": "wagenet makes think issue related", "d": "7/2016"}, {"body": "based quick search things landed chrome recentish errors", "d": "7/2016"}, {"body": "chancancode nt seems related im poking around findings far able reproduce isolation yet error scenario question line stack property get installed writable false relevant code", "d": "7/2016"}, {"body": "appears happen failure failure", "d": "7/2016"}, {"body": "offending commit", "d": "7/2016"}, {"body": "believe primarily stupid ember code also likely web incompatible change", "d": "7/2016"}, {"body": "original source part copy error properties error ancestor believe people required errors circa may introduced position stomping w line original code makes readonly", "d": "7/2016"}, {"body": "quick work around would following", "d": "7/2016"}, {"body": "although strange basically js function e var tmp errorapply arguments embercapturestacktrace e thisstack tmpstack exist people dont nt sets internal slot used display untampered stack console although likely incorrectly stomped intended behavior logged message right thing", "d": "7/2016"}, {"body": "one approach think also open issue aware explore consider web compat issue going get sleep regroup", "d": "7/2016"}, {"body": "going look come reasonable fix soonish", "d": "7/2016"}, {"body": "issue", "d": "7/2016"}, {"body": "think fixed possible verify", "d": "7/2016"}, {"body": "addyosmani give whirl breakfast first gclient sync laptop dont mind building test able find winlinux prebuilds osx ones also exist", "d": "7/2016"}, {"body": "addyosmani verified locally issue longer predictable period time part chrome canary release maybe nightly", "d": "7/2016"}, {"body": "fixed point soon maybe nightly see chrome canary w fix believe closed end thank reporting thanks benedikt rest team fast turn around", "d": "7/2016"}, {"body": "thanks everyone work currently chrome canary tabs crashing immediately upon open check later", "d": "7/2016"}, {"body": "thanks everyone work currently chrome canary tabs crashing immediately upon open check later yes published canary appear fix yet custom build demonstrate fix", "d": "7/2016"}, {"body": "oh see yes recent chrome canary aw snaps constantly random site well", "d": "7/2016"}, {"body": "title issue emberroute thisrender resolve template path pod structure curious embercli issue instead emberjs issue reached embercommunityslackcom channel embercli raise question also would helpful create code example reproduction issue others use example troubleshoot debug issue create reproduction issue using embertwiddlecom", "d": "7/2016"}, {"body": "looking template named placed template also nt valid location pods resolver either want render via would", "d": "7/2016"}, {"body": "ok worked simply missusage bug", "d": "7/2016"}, {"body": "hello ffaubry deprecated one year ago regarding latest commit master already loading streams htmlbars found see please open issue addons working ember internal change previous link shows addon load one depending module available please understand using private apis recommended maintained subject change moment since emberjs bug closing thank report", "d": "7/2016"}, {"body": "thx serabe logged issue see reference", "d": "7/2016"}, {"body": "hello gitneelesh please provide us embertwiddle expected usage way check bug go rfc process thank", "d": "7/2016"}, {"body": "hi serabe getting embertwiddle means expecting print prams parse like req params test amp params test amp params demo abc output params test demo abc", "d": "7/2016"}, {"body": "gitneelesh see great way create example issue find ember app alternative could create repo share well code reproduction issue helps others debug case code example may illustrate use case looking solve array query param sure ember supports query params format asked question embercommunityslackcom help channel", "d": "7/2016"}, {"body": "thanks pixelhandler ask ember community", "d": "7/2016"}, {"body": "gitneelesh nt see example guides using array query param value see close issue since ember bug question community see perhaps followup stack overflow discus forums ember slack channels", "d": "7/2016"}, {"body": "whip embertwiddle jsbin demo issue", "d": "7/2016"}, {"body": "really need indepth material ease deprecationfixing pain error message users get offers clue property component offender one potential approach track set conditional breakpoint assert breakpoint condition matching assert condition breakpoint hit jump couple frames stack find offending property key property key would assume beginnerintermediate developers would immediately realize take approach know approach take matter", "d": "7/2016"}, {"body": "mikenorth great idea regarding giving indication property binding associated deprecation warning message", "d": "7/2016"}, {"body": "toranb regarding nt expect change understand app may using leaning toward upgradable solution makes sense robert mentioned example using embertwiddlecom git repo would great source help working could added guides", "d": "7/2016"}, {"body": "rwjblue pixelhandler agreed planning carve time week create solid twiddle showing action thanks", "d": "7/2016"}, {"body": "submitted make deprecation message helpful tracking binding used", "d": "7/2016"}, {"body": "well good news got twiddle prove identical behavior bad news think found bug code ca nt reproduce issue w twiddle reasons unrelated emberbinding deprecation leave twiddle find something broken sure report near future", "d": "7/2016"}, {"body": "rwjblue pixelhandler got ability see breaking reading older commits ember seems connect able observe changes actual object without connect nt appear fire computed way got public addon anyone willing look nt appear surface problem code actually rely behavior connect w emberbinding", "d": "7/2016"}, {"body": "rwjblue pixelhandler ignore went full landed green build deprecation free", "d": "7/2016"}, {"body": "krisselden figured working nt know enough bindingsrunloop system fix working bindings propagated correctly references pulling right thing setting binding correctly dirty objects working timing issue causing bindings synced late details current strategy capture revision backburnerbegin decide rendering work render queue working bindings synced render queue practice causing us notice change timline events synchronouschronological line reached captured currenttagvalue sync nothing actions nothing routertransitions nothing render currenttagvalidate capturedvalue gt false rerender updatecomponent componentsetproperties namedargsvalue endpropertychanges observersetflush fromdidchange thisschedulesync sync bumped back front set component dirty component sync sure might bug actions nothing routertransitions nothing render nothing time since already drained previously afterrender destroy rsvpafter soo problem binding sync async nt schedule second rerender response hence one otherwise tags etc working fine", "d": "7/2016"}, {"body": "krisselden triage tomorrow mean think problem deeper problem likely affect apps nt use feature former think pretty lowpriority", "d": "7/2016"}, {"body": "closed", "d": "7/2016"}, {"body": "cc chancancode think cause issues csp unless set always wondered stuff needed viewscomponents perhaps skipped deprecated need remain suggest setting property directly dom node instead using attribute since wo nt trip csp saw commit thought drop note feel free ignore correct wrong", "d": "7/2016"}, {"body": "done sandstrom never set nothing added come back rest later", "d": "7/2016"}, {"body": "moved", "d": "7/2016"}, {"body": "closed", "d": "7/2016"}, {"body": "robishere make good point computed properties hard debug differences using require reading docs one might expect behave way would need two necessary use notifying computed properties changes way long time possible make methods like push work expected sure reason nt api design possible way log notice assert sounds like recommendation enhancement api documented using needed notify property changes consider opposing question assert asks developer really wanted ignore property changes use instead possible cross browser possible browser debugging would enough nt method depends browser support think answers questions raised like propose enhancement method best way would via rfc issue pr see create issue like close ember issue tracker mainly tracking bugs", "d": "7/2016"}, {"body": "martndemus curious action named triggered event handler named action thought jquery method fires events", "d": "7/2016"}, {"body": "issue would likely based bisect result event dispatched find component created nt delegate event try dig morning", "d": "7/2016"}, {"body": "worth mentioning seems occurs testing apps run normally everything seems work one would expect", "d": "7/2016"}, {"body": "probable bug test tooling working old view api found commit broken", "d": "7/2016"}, {"body": "martndemus curious post issue", "d": "7/2016"}, {"body": "yes blogpost describes found commit causes bug", "d": "7/2016"}, {"body": "martndemus would possible get twiddle showing reproduction", "d": "7/2016"}, {"body": "tried making twiddle reason whole test thing shows blank \u30c4", "d": "7/2016"}, {"body": "seems bug twiddle", "d": "7/2016"}, {"body": "acorncom reproduction clone run", "d": "7/2016"}, {"body": "see problem branch ember ajax right", "d": "7/2016"}, {"body": "definitely issue interaction change martndemus pointed way embertesthelpers sets event dispatcher ultimately causes event dispatcher gets event ca nt identify view triggering try get fix together time next beta", "d": "7/2016"}, {"body": "hckhanh asked question embercommunityslackcom help channel use emberjsissue tracker mainly reporting bugs get better response questions slack chat room ember forums see slack active typically static indexhtml page ember build routed requests ember router pick location ember app single page applications sometimes use indexhtml page request api request", "d": "7/2016"}, {"body": "hi assign would nice way start understanding emberjs", "d": "7/2016"}, {"body": "hello holtalanm thank reporting seems like embercli problem please move embercliembercli issues please check happening fresh new project try reproduce thank", "d": "7/2016"}, {"body": "thank report think dupicateupdate emberjsguides thank reporting", "d": "7/2016"}, {"body": "thank reporting confirm failing found emberxselect though canary allowed fail therefore noticed line exact whose", "d": "7/2016"}, {"body": "thanks confirmation serabe forked repository built version ember made commit adds guards absence changed travisweb embertry configuration use fork bower dependency tests pass modified version canary know enough know whether type guard truly desirable perhaps deeper fix always present issue", "d": "7/2016"}, {"body": "someone try bisect narrow change caused issue", "d": "7/2016"}, {"body": "try tomorrow rwjblue easier way putting local filesystem path repeatedly running bisection", "d": "7/2016"}, {"body": "backspace yes definitely something like bash one terminal git clone git githubcom componentsembergit componentsember cd componentsember git checkout canary bower link app bower link ember ember serve need restart bisect stage components ember repo though sha slightly different least way every bisect step", "d": "7/2016"}, {"body": "thanks suggestion looks like much faster tried said chose commit think used bisect try figure wrong tomorrow", "d": "7/2016"}, {"body": "never mind think problem ran instead particular sha tried making build set use commit one bower trouble really working right haha edited add got going build last good commit build first bad one let know provide diagnostic information", "d": "7/2016"}, {"body": "ok based bisect looks like introduced failure", "d": "7/2016"}, {"body": "cc krisselden", "d": "7/2016"}, {"body": "rwjblue thank bisecting", "d": "7/2016"}, {"body": "yes thanks backspace tracked ember sha matched componentsember one mentioned", "d": "7/2016"}, {"body": "movement making emberbeta builds fail", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "maybe thread locked contributors stem inevitable tide", "d": "7/2016"}, {"body": "hello srvance given bug feature request please move emberjsrfcs thank", "d": "7/2016"}, {"body": "done nt realize jumped another repo read guidelines", "d": "7/2016"}, {"body": "yep definitely issue made frustrating many layers everything go order function way ember would like come quick patch would happy review would likely land depending upon complexityinvasiveness core team decide branch canary beta release target probably late addition series first one planned next week becomes ridiculous list things rework finishing routerecognizer", "d": "7/2016"}, {"body": "nathanhammond right nt good idea could patch keeping api intact thinking perhaps exposing new api registering callbacks concatted let know ideas feel free ping slack", "d": "7/2016"}, {"body": "everything area considered private api nt believe need maintain api consistency addressing bug somebody else please chime correct wrong addon know really abuses portion router one mine emberroutealias even nt touch", "d": "7/2016"}, {"body": "meant say nt know way resolving without implementing new api registering routes designed used runtime instead going constructor method keep existing api intact new way might look similar exporting function routerjs", "d": "7/2016"}, {"body": "could change way save references captured closure accessible run think possible", "d": "7/2016"}, {"body": "spoke offline outcome spike two possible solutions discuss", "d": "7/2016"}, {"body": "access container using bug", "d": "7/2016"}, {"body": "containerowner intended available initializers registry effectively means initializer need access initialization system would need use instanceinitializer instead note argument initializers instanceinitializers called would call initializer instanceinitializer directly first argument", "d": "7/2016"}, {"body": "closing nt bug framework", "d": "7/2016"}, {"body": "bttf regarding seems like using way go moving transitionto earlier model hooks beforemodel model aftermodel resolves issue would stick instead side note applicationloading template render applicationloading route unspecified route included applicationloading renders inside application template via outlet wondering create separate issue reproducible embertwiddle seems like bug thought applicationloading template would load instead application template", "d": "7/2016"}, {"body": "bttf close since ember bug perhaps like continue discussion use discus forums stack overflow ember slack channel see", "d": "7/2016"}, {"body": "btecu found documentation mutate attributes passed seems would avoid changing attribute passed component typically compute properties component use component setting needs also receives attributes treat separate concerns seems example receives attributes also wants set attributes regardless values received another way could solve use case seems doc example using", "d": "7/2016"}, {"body": "btecu trick see twiddle regarding component setting parent controller value avoided send action want controller change value", "d": "7/2016"}, {"body": "pixelhandler nt example getting changed locally familiar ddau think general best way however cases direct binding obvious cleaner need action setting value fact works subsequent calls makes think bug", "d": "7/2016"}, {"body": "init initializing nt fire events setting values parent rendered already deprecated even fire change event would trigger binding", "d": "7/2016"}, {"body": "btecu believe didreceiveattrs called init event idea code didreceiveattrs work init update called component fully initialized fire events personally consider part bug zalgo even hook one time called different every time need init use init want update code use update code hook work differently first time called", "d": "7/2016"}, {"body": "btecu reopening specific definitely supposed trigger change events absolutely aware overriding works order things initialized calling super etc though bindings parent make sure nt affecting anything already rendered", "d": "7/2016"}, {"body": "krisselden exactly thing tried fix argued strongly override simply wrong stated pr prevents anything flowing upstream component", "d": "7/2016"}, {"body": "rwjblue reread comments concerned observers nt fire upstream flow think dubious especially since done via backdoor thing consider bug didreceiverattrs fires inside ctor leaks partially initialized object nt fire events makes radically different called update", "d": "7/2016"}, {"body": "would ok pr happened post init init event talk removing upstream flow affects already rendered state would issue post init update pr focused", "d": "7/2016"}, {"body": "hello blimmer thank report bug enumerable sortby requires name propertyies accept modifiers want use take look embercomputedsort thank", "d": "7/2016"}, {"body": "sorry created wrong project", "d": "7/2016"}, {"body": "shims nt guaranteed point public things unsure intend public like hear core team members", "d": "7/2016"}, {"body": "like hear core team members interpret stefanpenner acknowledgement", "d": "7/2016"}, {"body": "please add example query parameters needed imho query parameters related model way place use", "d": "7/2016"}, {"body": "freduk serabe curious transition class methods recommended use see nt expected hook access query params hook receive", "d": "7/2016"}, {"body": "freduk bug ember please reach community slack regarding use case working query params perhaps using model hook fine", "d": "7/2016"}, {"body": "thoov expected prototypes turned embera methods return regular arrays", "d": "7/2016"}, {"body": "expected intended provide methods byproduct intended", "d": "7/2016"}, {"body": "stefanpenner guess nt understand docs saying manually coerce native array array implements required interfaces using convenience method embera nt get simply calling one convenience methods removes object expected workflow fastboot users cant use prototype extensions cant rely embera", "d": "7/2016"}, {"body": "nt get simply calling one convenience methods removes object convenience returns fresh array would also need patched slow somewhat brittle leave extendprototypes fastboot believe app run fresh context issue performance hit constantly needing patch array instances", "d": "7/2016"}, {"body": "stefanpenner issue fastboot prototype extensions going rabbit hole converting way ember prototype extensions nt available array created najax response npm packages required root node vm creates new realms prevents requirements extended ember potential fix create require known realm bite people future using prototype extensions looks like heisenbug extensions available time depending origination objectarray better way handling chaining know embera embera embera best", "d": "7/2016"}, {"body": "depending referring behaviour documentation side", "d": "7/2016"}, {"body": "nathanhammond locks think moved guides repo think", "d": "7/2016"}, {"body": "know actual behavior supposed ca nt answer", "d": "7/2016"}, {"body": "current behavior seems make sense element modifier syntax words normal action binds action event basically discards event object calling callback syntax essentially assigning closure action function inline event handler typical dom behavior preserved callback receives event argument nt know intentional makes sense however seen trip lot people maybe add clarity around", "d": "7/2016"}, {"body": "zach would mind detailing implementation approaches clarity want make sure issue within scope thanks oli jul zack notifications githubcom wrote current behavior seems make sense element modifier syntax words normal action binds action event basically discards event object calling callback syntax essentially assigning closure action function inline event handler typical dom behavior preserved callback receives event argument nt know intentional makes sense however seen trip lot people maybe add clarity around receiving subscribed thread reply email directly view github mute thread", "d": "7/2016"}, {"body": "kricket looks like answer stack overflow also includes working example perhaps ask feedback embercommunityslackcom help channel binding nt change template nt update see", "d": "7/2016"}, {"body": "ah ok missed bit may ask specifically nt bind conceptually different", "d": "7/2016"}, {"body": "kricket listens inserts deletes replaces kinda like equivalent would performance sink parallel help", "d": "7/2016"}, {"body": "ok basically javascript makes easier listen en masse addremovemodify operations array elements object properties", "d": "7/2016"}, {"body": "make one flags symbol bit set every ref megamorphic miss starts add", "d": "7/2016"}, {"body": "chyxion feature suggestion question curious asked chat room", "d": "7/2016"}, {"body": "take look implementation queryparams write custom helper construct qp similar way javascript helpersconstructqpjs export function constructqueryparams params return emberobjectcreate isqueryparams true value params export default emberhelperhelper constructqueryparams", "d": "7/2016"}, {"body": "well feature suggestion ask issue know write custom helper think feature necessary thanks", "d": "7/2016"}, {"body": "hello chyxion thank suggestion repo emberjs bugs submit emberjsrfcs community discuss thank much", "d": "7/2016"}, {"body": "related", "d": "7/2016"}, {"body": "sourvb looks like add support looking thanks miguelcobain", "d": "7/2016"}, {"body": "pixelhandler see issue wycats problems adding feature maybe functionality addon cc runspired", "d": "7/2016"}, {"body": "thanks pixelhandler miguelcobain alternative solution", "d": "7/2016"}, {"body": "sourvb personally use would use tag could access dom needed mentioned requires fixing style issues also avoid style libraries prohibit build html apps get always case way use tagname fix style issue", "d": "7/2016"}, {"body": "sourvb see comment answer solution closing", "d": "7/2016"}, {"body": "ummm wat seems like browser bug", "d": "7/2016"}, {"body": "seems like browser bug would good get reduction unfortunately familiar enough ember stack track heisenbug like perhaps someone help", "d": "7/2016"}, {"body": "agreed need figure going randomly poking noticed alert right value js const sym symbol foo const class emberobjectextend alert classcreate sym bar bar", "d": "7/2016"}, {"body": "thanks krisselden minimal reproduction js var sym symbol foo var args sym bar function foo obj var arr return arr alert foo args var c c foo c c alert foo args function jits breaks", "d": "7/2016"}, {"body": "chrisjshull fixed least webkit nightly safari uses year old webkit version seem like something workaround jited code reads objects symbols safari seems fatally buggy nt understand symbol anyway enumerable therefor ignored create", "d": "7/2016"}, {"body": "testing latest safari tech preview still seems issue opening dev tools works went heck tried latest webkit nightly saw fixed nightly regressed", "d": "7/2016"}, {"body": "nt understand symbol anyway enumerable therefor ignored create ah perhaps overreduced problem originally hit reopenclass like since brought though symbols nt work thru create test case working fine chrome documented somewhere nonenumerable types nt supported nt lack support bug plain es classes support js const sym symbol foo class foo sym consolelog hello public thissym new foo public logs hello let know file follow issues", "d": "7/2016"}, {"body": "chrisjshull rwjblue ember specific issue broader issue use correct closed issue opened webkit bug tracker", "d": "7/2016"}, {"body": "safari issue webkit works nothing ember", "d": "7/2016"}, {"body": "thank efforts issue since ember issue closing thank", "d": "7/2016"}, {"body": "understand issue please create repo twiddle shows failure scenario believe linked line code continue exist get bottom things need talking concrete scenarios", "d": "7/2016"}, {"body": "martinmalinda help us create repository runs permutations even ones added comments nobody ever ember cli autopopulated ember cli ember cli manually added set set nobody ever set different deserve get set unset nobody ever set different deserve get unset set one believe may bug unset unset", "d": "7/2016"}, {"body": "note load config values every time believe skirt possibility issue even light comment set different baseurl deserve get problem see rely upon value match value ember cli believe also magically includes things like strange buildtime side effects also know knows way better", "d": "7/2016"}, {"body": "problem see rely upon value match baseurl value ember cli believe also magically includes things like rooturl strange buildtime side effects ember concept embercli thing result specifying versions embercli emit sure mean matching", "d": "7/2016"}, {"body": "looking two places look like thing ember cli", "d": "7/2016"}, {"body": "ya location implementations honoring tag like native asset loading would internal property definitely public api general remove concept reading document starting routing unless want break existing embercli apps ember version break web", "d": "7/2016"}, {"body": "ember concept baseurl embercli thing result specifying baseurl configenvironmentjs versions embercli emit sure mean matching baseurl thought rooturl introduced since set directly router explicit fact router looking dom reading base tag quite counterintuitive thought point deprecating baseurl move gives freedom put assets different path without affecting routing url could break apps removed baseurl config file set base tag manually far know never recommended practice nt see reason anyone would delete baseurl config set base href value directly achieve exact effect nathanhammond try create repo later today place mentioned combinations individual branches since ca nt think different way efficiently atm", "d": "7/2016"}, {"body": "thought point deprecating baseurl move baseurl rooturl rooturl gives freedom put assets different path without affecting routing url remember correctly used primarily app routing much related assets use option assets deployed cdn want adjust paths", "d": "7/2016"}, {"body": "works well know path build time edge case nt know app served anyways repo summary ember cli manually added ember cli autopopulated ember cli ember cli manually added baseurl set rooturl set ca nt find assets baseurl set rooturl unset ok two tags ok ok ok two tags baseurl unset rooturl set error hard refresh ca nt find assets ok error hard refresh baseurl unset rooturl unset ok ok ok ok sure encountered bugs maybe error hard refresh rooturl set probably local server issue nt significant rooturl usually set production builds still think baseurl deprecated embercli reading tag could deprecated ember well could used future adjust path assets without affecting routing url structure previous usecases base used affect routing url format string could moved rooturl instead", "d": "7/2016"}, {"body": "martinmalinda incredibly grateful research done tremendous ever privilege meeting person drinks dive analyze later today", "d": "7/2016"}, {"body": "think need urgency think major bug hope repo useful anyway still skill level contribute core glad could help somehow", "d": "7/2016"}, {"body": "afraid still nt understand actual issue table thanks lot martinmalinda indicates everythings works designed supposed used time using still works ember cli versions using works ember cli using none options explicitly also works works well know path build time edge case nt know app served elaborate use case like understand trying come plan help thanks looking", "d": "7/2016"}, {"body": "yes sorry confusion initially misunderstood deprecating baseurl actually means thought also means reading ember deprecated well apparently believe closed reach slack particular use case later", "d": "7/2016"}, {"body": "imho probably deprecate presents us problem using ember version deprecated version ember cli option fix deprecation updating ember cli might artificial issue though probably relevant reality however wait ember cli stable release see issues come deprecating ember", "d": "7/2016"}, {"body": "however wait ember cli stable release see issues come deprecating ember sounds good", "d": "7/2016"}, {"body": "believe confirmed closed played around permutations going get wonky explain going people weird setups deal", "d": "7/2016"}, {"body": "code change caused looks like error jdalton said issue looks familiar able provide concise repo migrating test new test harness fixed issue", "d": "7/2016"}, {"body": "see repros dev tools open debugger attached", "d": "7/2016"}, {"body": "chancancode given beta time still issue thank", "d": "7/2016"}, {"body": "closed thu jul sergio arbeo notifications githubcom wrote chancancode given beta time still issue thank receiving mentioned reply email directly view github mute thread", "d": "7/2016"}, {"body": "removed call guides", "d": "7/2016"}, {"body": "found installing embercliemblem command lines changes run command changes towards emblem something trying find command ember generate route emblem command", "d": "7/2016"}, {"body": "real bug related embercli ember blush", "d": "7/2016"}, {"body": "hello saimonl thank reporting sadly happens adding even similar issue open repo vestorlyembercliemblem nt see reference embercliemblem linked guide one please let learning team know opening issue emberjsguides closing since bug ember addon thank report", "d": "7/2016"}, {"body": "want leave extra note since core package updates might drag bit using htmlbars recommended", "d": "7/2016"}, {"body": "thank guys yes htmlbars love haml", "d": "7/2016"}, {"body": "hello nullvoxpopuli seems like question emberjs bug please reproduce problem embertwiddle check problem framework twiddle using mockjax mock ajax calls looking help code please go help channel slack registered use slackin app thank", "d": "7/2016"}, {"body": "thanks try recreate twiddle", "d": "7/2016"}, {"body": "twiddle showing error console", "d": "7/2016"}, {"body": "might something polymorphic models", "d": "7/2016"}, {"body": "seems like emberjsdata accepts singularize relationships jsonapi identification might bug since emberjsdata related please move issue thank", "d": "7/2016"}, {"body": "posted", "d": "7/2016"}, {"body": "thank", "d": "7/2016"}, {"body": "hmm sure happened locks guess change caused", "d": "7/2016"}, {"body": "caused next styles api ulindexlist li display inlineblock", "d": "7/2016"}, {"body": "likely related closing one tracking issue", "d": "7/2016"}, {"body": "still issue ensuring latest deployed", "d": "7/2016"}, {"body": "done thanks tip romanperin recent pr introduced bourbon tweaked couple styles include overriding", "d": "7/2016"}, {"body": "oh realized emberjsemberjs repo apologize missing earlier issues website opened emberjswebsite repo instead", "d": "7/2016"}, {"body": "oh sorry mismatch also great thx quick fix", "d": "7/2016"}, {"body": "hallo serabe see first part twiddle reproduction try url unfortunately twiddle display error see console pc proposals avoid transition method application started url including route redirect endredirect", "d": "7/2016"}, {"body": "fknoll route default route could use make", "d": "7/2016"}, {"body": "hello fknoll see twiddle please provide twiddle problem looks like problem second comment different one original post get reproduce twiddle reproduce small project please upload github take look thank", "d": "7/2016"}, {"body": "fknoll reached help channel embercommunityslackcom chatroom curious may support need ember bug", "d": "7/2016"}, {"body": "returned short vacation apologize lack responsiveness insist initial finding using makes ember fail immediately later transition created reproducible scenario ember twiddle look code", "d": "7/2016"}, {"body": "pixelhandler thank much input appreciated understand proposal yes might simple usable workaround avoid default transition default transition including query parameters know handle scenario setting", "d": "7/2016"}, {"body": "fknoll controller set value eg setupcontroller route code ie change thisparamsfor routename routename route previously visited curious perhaps expect params available controller previously visited looking params application route params controller child route visited yet seems like issue subject putting cart horse suspect perhaps different implementation use case model method application route default values two query parameters found saved using hook child route lookup saved properties application route set controller ready", "d": "7/2016"}, {"body": "like submit pr appropriate locks fix made", "d": "7/2016"}, {"body": "lucasqiu documentation source code thanks interest", "d": "7/2016"}, {"body": "issue reopened behavior twiddle op differs slightly array got converted string immediately clicking initial works fine subsequent click transforms array string", "d": "7/2016"}, {"body": "stefanpenner issue done closed", "d": "7/2016"}, {"body": "thanks sukima", "d": "7/2016"}, {"body": "looks like problem nt solved yet asakusuma rwjblue get error log idea", "d": "7/2016"}, {"body": "miguelcobain provide failing test pr test supposed guard problem sounds like missing case", "d": "7/2016"}, {"body": "try come failing test ember meanwhile failing test emberleaflet component tested inherits case spot something odd", "d": "7/2016"}, {"body": "could reproduce problem twiddle click change value see error coming component tagless blockless templateless importance gavinjoyce provide failing test soon", "d": "7/2016"}, {"body": "coming version error consistently reproduce app building able set conditional breakpoint step process immediately error occurs happy screen share krisselden anyone else may input convinced create minimum test case may next best thing try explain problem happens case initially first iteration loop completes becomes therefore bounds second iteration happen let dig deeper toplevel call computed property called references model fragment first chainnode property within calls watched properties first property called calls key kicker within gets parent ie via prior call undefined within call evaluates computed property evaluation causing content change prior long story short object notifies properties observers changes object recomputed changes list observers questions may help us get bottom unexpected behavior chain watchers change due cp evaluation would assume observers determined ahead time cp evaluation would affect seems expecting list change would cause chain watchers change anything explicit calls outside ember internals thanks hope helps help anyone else give greatly appreciated", "d": "7/2016"}, {"body": "quick followup changed loop issue longer occurs may implications though app experience problem always equal see case would cause defect constant evaluation may performance regression would like think modern javascript engines optimized cache value array changed happy submit pr imagine may covering unexpected implementation issue happy help diagnose well even resolve issue maybe least method throw descriptive error understand root cause", "d": "7/2016"}, {"body": "looks like similar issue year ago different file fix similar suggested according conversation couple awesome core team members agreed guarded similarly pr way though sure maintained anymore knownasilya would submitting similar pr", "d": "7/2016"}, {"body": "sure look weekend", "d": "7/2016"}, {"body": "mixonic sethbrasile belive argument due using jquery selectors eg aside client helper would nt test helpers also use", "d": "7/2016"}, {"body": "locks acorncom guides show context arguement helper api docs see perhaps well api docs guides agree", "d": "7/2016"}, {"body": "attempt rwjblue suggestion", "d": "7/2016"}, {"body": "seems finally managed solve problem pointed rwjblue related poor management pattern changing seems fix amazingjaze seems tried without success think related broccolijscs cache leading strange behaviour see kellyseldenbroccolijscs cache also explains function appear running deleting reintalling seems fix maybe touching file enough embercliembercli run force genration containing jscs check results opened update regex pattern fix", "d": "7/2016"}, {"body": "closing merged let know issue persists reopen", "d": "7/2016"}, {"body": "confirmed fix thanks bmeurant rwjblue", "d": "7/2016"}, {"body": "looks like mentioned pr already resolved", "d": "7/2016"}, {"body": "kamilogorek merged concern performance", "d": "7/2016"}, {"body": "cibernox main issue tests passing travis mentioned performance tom already approved small performance decrease tests passing well good merge", "d": "7/2016"}, {"body": "believe may facing issue justinhackin wherein set property component result successfully ca nt get change runtime making computed property thus sure rely property ca nt successfully bound one model values property called case per component using designed support databinding markdown content perlun intending originally well whole larger topic best standardsaware way without creating xss vulnerabilities aside nt seen addressed community yet import ember ember export default embercomponentextend store emberinjectservice layout embercomputed markdown function var converter new showdownconverter var regex az gi var match", "d": "7/2016"}, {"body": "ember later possible change layout component initially renders", "d": "7/2016"}, {"body": "rwjblue thanks clarification although bummer plan reintroduce rationale missing sure regenerate layouts based model data two different blog posts sharing route components example unless blow away previous layouts generate anew krisselden seems laid strategy hard time following sure directly addresses use case start thanks", "d": "7/2016"}, {"body": "perlun bug closing suggest alternative solution perhaps using helper components templates dynamically chosen", "d": "7/2016"}, {"body": "reason happening due interaction case object options passed set passed receives argument uses present possible fix would check clause given change upstream method set passed present", "d": "7/2016"}, {"body": "dguettler amazing decided work bugs today looking came conclusion created pr fix w failing test", "d": "7/2016"}, {"body": "get different label fix merged master", "d": "7/2016"}, {"body": "nope closed forgot thanks yalls hard work", "d": "7/2016"}, {"body": "think done see remaining edgecases", "d": "7/2016"}, {"body": "stefanpenner still reproduce ember report back embertwiddle time", "d": "7/2016"}, {"body": "update blocked embertwiddle issue", "d": "7/2016"}, {"body": "thanks stefanpenner able get twiddle nt able fully init component runtime error module nt time try squash bug today hopefully within next week", "d": "7/2016"}, {"body": "foxnewsnetwork agree rwjblue ember conventions developers count changing way become dynamic sounds like debugging headache making way define routes need associated templates close want continue discussion please create rfc issue pr", "d": "7/2016"}, {"body": "anchor tag nt disabled attribute nt seem disabled even disabled properly added attribute link set open new window target blank nt think anything ember even one workaround add pointerevents none css disabled link", "d": "7/2016"}, {"body": "going close favor using work around", "d": "7/2016"}, {"body": "think done", "d": "7/2016"}, {"body": "thank everyone", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "still reproduce following route hook", "d": "7/2016"}, {"body": "hmm still getting issue", "d": "7/2016"}, {"body": "fixed beta merged", "d": "7/2016"}, {"body": "please test confirm yes believe", "d": "7/2016"}, {"body": "ok test released ca nt upgrade coz project version close release", "d": "7/2016"}, {"body": "added assertions tests added ensure regress future", "d": "7/2016"}, {"body": "even facing issue update", "d": "7/2016"}, {"body": "dhawalbhanushali please take look comment", "d": "7/2016"}, {"body": "krisselden still issue ember long gone", "d": "7/2016"}, {"body": "serabe issue infinite sync loop one run loop suggestion keeping count renders one run loop think still applicable close issue", "d": "7/2016"}, {"body": "beta got press link page two get closing since looks like fixed", "d": "7/2016"}, {"body": "recommendations fixes using remote paginated api", "d": "7/2016"}, {"body": "chancancode please give update close longer needed thank", "d": "7/2016"}, {"body": "chancancode perhaps needs closed reopen necessary work begins", "d": "7/2016"}, {"body": "sorry nt remember context suspect fixed", "d": "7/2016"}, {"body": "seeing something similar different situation ember array qp applicationcontroller certain situations array comes back serialized ie string instead array", "d": "7/2016"}, {"body": "pixelhandler", "d": "7/2016"}, {"body": "danmcclain seems related versions ember close please reopen think still issue", "d": "7/2016"}, {"body": "acorncom mixonic issue leaves us dead water terms upgrading app one cornerstones application view creates dynamic components attributes bound correctly parallel effort upgrade application correct way create components using combination component helper etc given using components slog really like get asap install addons rely blocker us current implementation follows render function buffer var parts get datatorender parts partslength return think way accomplish functionality render function refactored help would much appreciated cheers", "d": "7/2016"}, {"body": "ouch sounds painful familiar older views approach much help code front point core team shifted priorities ember doubt able much far changing code unless mixonic ideas think best bet might ask question ember community slack either get advice folks experience stuff", "d": "7/2016"}, {"body": "issue still happening beta still looks like looked like", "d": "7/2016"}, {"body": "anyone running across warning example deal documentation alludes method think pseudo code ca nt find anywhere image model elementslider component template", "d": "7/2016"}, {"body": "lmcardle merged think help since rsvp separate library nt think api docs publish use emberrsvp rather include rsvp docs instead rsvp shows instead emberrsvp close think could room info using promises guides", "d": "7/2016"}, {"body": "related documentation improvement proposed", "d": "7/2016"}, {"body": "stefanpenner could please elaborate quite frustrating computed property update dependent value changed deprecating entirely", "d": "7/2016"}, {"body": "gregwym file new bug one exists", "d": "7/2016"}, {"body": "flyswatter exact problem also loadinghbs fix", "d": "7/2016"}, {"body": "use local loading hbs files root level one", "d": "7/2016"}, {"body": "flyswatter mean create loading every single route", "d": "7/2016"}, {"body": "want loading appear subroute loading template subfolder global loading template replace whole view loading", "d": "7/2016"}, {"body": "want loading appear routes changing query params", "d": "7/2016"}, {"body": "could ol nt reloaddata route level changing query param hack request controller ember happy path far understand believe may also undocumented router method could override like onqueryparamchange something nt used ember months little hazy dan jul pm williamweckl notifications githubcom wrote want loading appear routes changing query params receiving mentioned reply email directly view github mute thread", "d": "7/2016"}, {"body": "found method basically route refresh trigger loadinghbs clues could change model filter api without calling refresh", "d": "7/2016"}, {"body": "little far behind sorry nt even access code wrote anymore good luck dan jul pm williamweckl notifications githubcom wrote found method queryparamsdidchange basically route refresh trigger loadinghbs clues could change model filter api without calling refresh receiving mentioned reply email directly view github mute thread", "d": "7/2016"}, {"body": "ok thank anyway", "d": "7/2016"}, {"body": "nichoth docs greatly improved since created issue ember data please reopen still issue related docs", "d": "7/2016"}, {"body": "toddjordan locks closing seems relevant", "d": "7/2016"}, {"body": "ember fires multiple time even nothing changed thats additionally compare old new queryparams values js queryparamsdidchange function b compare prevent refresh nothing changed apage bpage amp amp aselectionid bselectionid amp amp asort bsort amp amp asortdirection bsortdirection return", "d": "7/2016"}, {"body": "update still ca nt click link show debbuger chrome", "d": "7/2016"}, {"body": "addressed", "d": "7/2016"}, {"body": "thanks allthesignals helpful solution", "d": "7/2016"}, {"title": "", "body": "", "num": "3252", "d": "7/2016"}, {"title": "fnappend may fail microsoft edge", "body": "description attempt append html popup window jquery evaluates markup creates documentfragment context ownerdocument multiple toplevel sibling elements jquery attempt append documentfragment second window fails versions microsoft edge reproduction html b microsoft edge throws interface supported link test case fiddle", "num": "3251", "d": "7/2016"}, {"title": "jqueryextend update objects references", "body": "see issue try following code link test case", "num": "3250", "d": "7/2016"}, {"title": "offset throws error used window", "body": "description throws error window since defied window present latest build looked master branch link test case check console", "num": "3249", "d": "7/2016"}, {"title": "move nondeprecated eslintrc format", "body": "description see deprecated use eslintrc either json yaml move link test case na", "num": "3248", "d": "7/2016"}, {"title": "amp lint files", "body": "description run see files target linted repeat times files still linted thought task nt work seems work fine running lints files second time cc markelog link test case na", "num": "3246", "d": "7/2016"}, {"title": "insufficient documentation parsehtml behaviour", "body": "hi ran issue jqueryparsehtml switching project jquery part documentation issue default behavior changed context specified given null undefined new document used problem case context parameter boolean new document also created could change doc default behavior changed context specified given null undefined boolean new document used second new document used keepscripts true maybe change line new document strange behaviour jquery ui widget work type element uses thiselementownerdocument set thisdocument current document anymore restricted keepscripts true think regards olivier", "num": "3244", "d": "7/2016"}, {"title": "expressions form supersetnot subset incorrectly length", "body": "description expressions form setdiff supersetnot subset incorrectly length jq objects string contents works correctly dom contents expected setdiff items superset subset actual setdiff empty elements strings least chrome ff works correctly see minimal test case link test case", "num": "3243", "d": "7/2016"}, {"title": "checkbox checkuncheck attr removeattr doesnt work second time", "body": "description add remove running code checking unchecking second time nothing happens even though attributes added removed normally using native setattribute removeattribute works fine link test case", "num": "3242", "d": "7/2016"}, {"title": "simple imagezoom jquery code working", "body": "hi trying two days make imagezoom jquery plugin work failed works well tried use migration tool find error points code firing using latest firefox browser imagezoom code embedded fiddles working working help problem would greatly appreciated sincerely nestor g torres", "num": "3241", "d": "7/2016"}, {"title": "subtle bug offset scroll position", "body": "common use scroll viewport anchor element eg case element scrolling looks like see source code anchor nt height width top left correctly taking account returning top relative viewport document fixed changing markup able correctly handle original markup", "num": "3240", "d": "7/2016"}, {"title": "ajax success function", "body": "description upgrading jquery ajaxsuccess longer works well documented breaking change example", "num": "3239", "d": "7/2016"}, {"title": "jquery animate radius throwing exception firefox", "body": "using version animate method throws console error animating svg circle element radius firefox browser open link ie firefox ie animated properly firefox throws console error circle disappear working fine browser", "num": "3238", "d": "7/2016"}, {"title": "update slim remove deprecatedjs anymore given upcoming deprecations", "body": "lots deprecations much remove without notice decided simpler slim remove things pace normal build change nt affect slim users", "num": "3237", "d": "7/2016"}, {"title": "jqm popup error jquery", "body": "uncaught typeerror apreventdefault function noticed ticket error fixed also using jqm nt get error jquery", "num": "3236", "d": "7/2016"}, {"title": "remove property fill", "body": "seems last browser nt provide natively bit tricky test needs real event simulated one see also filling property passing nt know need formally deprecate jquery generate migrate warning browsers ever tried deprecate via console warning passthrough copying property would responsibility caller anything say add note docs use possible", "num": "3235", "d": "7/2016"}, {"title": "param function ignores set object", "body": "hi looks like param function used fro ajax requests ignores set object tested version code let new set let params set arr consolelog param params output expecting still question serialize set array think closest set representation case get request live demo", "num": "3232", "d": "7/2016"}, {"title": "jqueryajax cache false mangles url parameter", "body": "option addsreplaces parameter mangles url already defined parameter trying actual request sent javascript works fine ajax url examplecom amp foobar fails ajax url examplecom amp foobar cache false tested test case update original issue", "num": "3229", "d": "7/2016"}, {"title": "deferred group async operations", "body": "today promise operation creating many async events aplus spec allows promise operations grouped see note operations also nt strictly async long called platform code see grouping operations reducing improve performance less timeoutsasync events reduce probability aplus tests failing errors see locally fairly often allow platform code flush pending promise operations example loadbeforeready could fixed flushing pending promise operations domcontentloaded event", "num": "3227", "d": "7/2016"}, {"title": "arraylike nt restrict results elements", "body": "reported scottgonzalez started filtering nonelement items jquery inconsistent counter stated selector excludes nonelement nodes goals commit introduced restrict additional filtering selector input ie", "num": "3226", "d": "7/2016"}, {"title": "jquery gets wrong", "body": "description considering spec correct expect happen native bring number elements acually happens brings different number browsers affected tested chrome link test case", "num": "3224", "d": "7/2016"}, {"title": "skip running eslint node build jquery node versions", "body": "description eslint longer supports versions locked would nt bringing otherwise big con users use older version big pro version supported soon drop suppose document support recall assumption people use custom builds environment right check hypothesis look stats custom builds decide", "num": "3222", "d": "7/2016"}, {"title": "eventrelatedtarget null ff", "body": "description typescript event jqueryevent object onblur event set chrome ff ie tested chrome amp results link test case", "num": "3220", "d": "7/2016"}, {"title": "error initializing dialog jquery jquery ui", "body": "initializing dialog console error typeerror elemgetclientrects function issue related following one error appears jquery ui method position used specifically within option set jquery evalutating elem window obejct leads error running sample cause error appear console", "num": "3217", "d": "7/2016"}, {"title": "jquery support returning hex value element css backgroundcolor", "body": "description link test case", "num": "3216", "d": "7/2016"}, {"title": "resize use outerwidth instead width", "body": "jquery ui expect happen start resize block element size change pixels count move mouse acually happens start resize block element size changed abruptly padding size browsers affected description see attached video", "num": "3215", "d": "7/2016"}, {"title": "deprecate event shorthand methods", "body": "discussed core meeting deprecate event shorthand methods minor release", "num": "3214", "d": "7/2016"}, {"title": "ready handler nt deprecated behave handler", "body": "also document ready handler deprecated jquery behaves similarly ready method ready event already fired try ready bound handler executed ready handlers bound way executed bound three methods wait remember ca nt use use instead hand event way round ca nt use use instead also unlike every event lot gratuitous inconsistencies lot unnecessary things know one easily miss deprecated behave whether fired order execution know tell gratuitous unnecessary stuff implementated however implementation difficulties dealt implementors exposed api users", "num": "3213", "d": "7/2016"}, {"title": "load shorthand load nt deprecated", "body": "know long time found tried jquery actually stopped working deprecation shorthand inconsistent nt deprecated etc going nt deprecated either create unnecessary inconsistency see rationale behind ambiguous ajax method discouraging use good idea deprecating breaking going far unless eventbinding shorthand methods etc would nt crazy idea btw nt backward compatibility always bas api design beginning sacrificing clearness sake saving keystrokes writing code consistency must large api jquery way ironic opposite thing keeping method deprecating one inconsistency even less reason exist", "num": "3212", "d": "7/2016"}, {"body": "nt really understand ticket even via google translate", "d": "7/2016"}, {"body": "jerrygoodboy", "d": "7/2016"}, {"body": "far understood google translate jquery ui repository jquery one latest jquery indeed see", "d": "7/2016"}, {"body": "mgol sorry made mistake though jerry asking jquery ui cause also track jquery ui issues actually jerry asking supported features missing far know branch includes support ie jerrygoodboy \u4e00\u76f4\u7528jquery", "d": "7/2016"}, {"body": "far know branch includes support ie yes correct although fix critical issues branch focusing jquery thanks translating", "d": "7/2016"}, {"body": "works browsers including latest ie specification says could used like confirmed words", "d": "7/2016"}, {"body": "documentation specifically explains assigning object multiple variables copy content help ask stackoverflow jquery forum", "d": "7/2016"}, {"body": "please read upgrade guide especially offset section expected breaking change", "d": "7/2016"}, {"body": "ok seemed odd jquery throws errors normally goes way handle errors silently thank answer", "d": "7/2016"}, {"body": "wow news fix", "d": "7/2016"}, {"body": "problem particular means precommit hook taking way longer needs", "d": "7/2016"}, {"body": "well sucks", "d": "7/2016"}, {"body": "according docs parameter must element passed also says parameter also optional following signature fact setting left undefined docs correct ps api site repo issues reported repo meant bugs jquery", "d": "7/2016"}, {"body": "thanks answer used project mainly discuss second point nt think documentimplementationcreatehtmldocument default behaviour context false", "d": "7/2016"}, {"body": "insufficient unsufficient olivier gasc wrote thanks answer used project mainly discuss second point nt think documentimplementationcreatehtmldocument default behaviour context false receiving subscribed thread reply email directly view github mute thread email checked viruses avast antivirus software", "d": "7/2016"}, {"body": "second argument boolean give argument explicitly want particular value", "d": "7/2016"}, {"body": "yes indeed point useful case think default value", "d": "7/2016"}, {"body": "creating elements another document might used situations iframe", "d": "7/2016"}, {"body": "yes case legit pass function custom context need new default context actually breaks jqueryui widgets anywhere need access may better fix issue jqueryui check thanks olivier", "d": "7/2016"}, {"body": "array string supported input result passing array undefined see supported", "d": "7/2016"}, {"body": "digging bit dupe filer noted would merit mention upgrade guide usage widely advocated sites like including accepted answers hundreds upvotes among top results googling jquery set difference see results recently edited say longer works nt help people upgrading existing code note upgrade guide would appropriate would saved us time may suggest reopened doc bug update upgrade guide", "d": "7/2016"}, {"body": "sure dive undocumented apis upgrade guide case repo jquerycom site upgrade guide located want discuss documenting change somehow correct place", "d": "7/2016"}, {"body": "note upgrade guide would found people getting answer sure note upgrade guide help fix lot mediocre stackoverflow answers using undocumented functionality giving plain bad advice used particular answer post comment thread asking edited someone reflect unsupported regardless jquery version always wrong even happened work past issues filed upgrade guide even better would make pr since sure address words upgrade guide jquery never replacement lodash underscore usage sort example way outside jquery intended use dom library", "d": "7/2016"}, {"body": "note upgrade guide would found dmethvin actually yes upgrading scanned codebase issue noted guide people getting answer sure note upgrade guide help fix upgrade guide helps case code wherever written months years ago upgrade means wo nt work anymore sure address words upgrade guide give thought come something worthwhile file issue pr suggested course big deal established code bug appreciate prompt responses", "d": "7/2016"}, {"body": "link test case includes native version see difference", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "checked attribute setting initial state checkbox per spec seems browsers ignoring still recommend using instead however difference behavior jquery edge issue current code", "d": "7/2016"}, {"body": "perhaps dirty checkedness changed checked idl changed click checkbox changed addremoveall", "d": "7/2016"}, {"body": "still setting idl along attribute backcompat makes sense works expected", "d": "7/2016"}, {"body": "bugs code might causing errors thrown inside jquery case enough look stack trace enable pause exceptions chrome devtools going stack code see error happens code please read note kind questions better suited stack overflow ca nt debugging peoples code bug reports based purely jquery code small reproducible test cases without use external libraries", "d": "7/2016"}, {"body": "also appears plugin abandoned nt updated almost years almost interest terms watchers stars quick look code using several deprecated andor removed features nt able fix find different plugin actively supported author", "d": "7/2016"}, {"body": "", "d": "7/2016"}, {"body": "see deprecation notice jqxhrsuccess jqxhrerror jqxhrcomplete callbacks removed jquery use jqxhrdone jqxhrfail jqxhralways instead", "d": "7/2016"}, {"body": "also upgrade guide jquery migrate plugin", "d": "7/2016"}, {"body": "general nt support svg jquery may look like html uses often completely different set rules dom seeing animation happening chrome using jquery either regression browsers afaict fact works ie previous versions nt taken sign svg animation supported nt looked exactly failing leave ticket open others check maybe something general wrong", "d": "7/2016"}, {"body": "according docs animate along css properties element nt seem true code animates properties name nt match css property anyone know purpose gnarf case animates css properties regular properties element property read chromefirefox difference strict mode chrome ignores assignment firefox throw error ie apparently property works setter fixed edge though throws firefox fiddle animating attribute manually via function correct way property animation needs removed unfortunately nt seem way animate attribute based property removing kill animation create custom property though animating purposes better way animate attributes", "d": "7/2016"}, {"body": "animating noncss kindasorta tolerated animating properties plain object although documented see however yes assume property thing set step suppose could setter hook options make set property default could overridden set attribute write value latch led output whatever", "d": "7/2016"}, {"body": "let discuss next meeting", "d": "7/2016"}, {"body": "hi checking whether issue tracker working properly see template filled created issue asked test case", "d": "7/2016"}, {"body": "api page says note universally agreedupon specification param strings possible encode complex data structures using method manner works ideally across languages supporting input use json format alternative encoding complex data instead never goal serialize every type javascript object custom way suggest improvements note clarify", "d": "7/2016"}, {"body": "nt improvements note sounds like talking structures comes application logic language think need serialize set object probably map also arguments next standard js object jquery already serializes another standard object array format array complex structures set serialized already like example docs", "d": "7/2016"}, {"body": "array fundamental javascript object jsoncompatible support every type basically define serialization logic would impossible deserialize complex type complex structures set serialized already like example docs really complex structure object objects arrays values object easy serialize", "d": "7/2016"}, {"body": "right really happening converted serialization rather asking api pick one serialization method etc add code seems better caller choose preferred method convert array restore back want", "d": "7/2016"}, {"body": "got point guys currently json serialization set returns always empty set defined browser level theer nothing need go bump browser developers first thanks time", "d": "7/2016"}, {"body": "confirmed given results farseeing problem uses removing actual parameter fixing bug still remove", "d": "7/2016"}, {"body": "problem thing bothers query parameters get malformed", "d": "7/2016"}, {"body": "ok good suspect nt noticed reported code appends cache buster end case works fine even request resubmitted", "d": "7/2016"}, {"body": "hi guys also problem found anti cache parameter changed first parameter url called twice row first time something like original amp anticached amp amp second request see anticache parameter first parameter original amp amp anticached amp amp also saw commit changes ranticache remptyquery variables issue tried changes code worked changed replace rantichache question mark ranticache regex removing first amp adding character replacement work replace remptyquery job anticache parameter isthe last paramter cacheurl cacheurlreplace ranticache replace remptyquery know issue fixed yet also final solution maybe could help little bit tyvm paulo costa", "d": "7/2016"}, {"body": "seems like great idea improve performance", "d": "7/2016"}, {"body": "regression update docs well particular part removing specific elements clarify nonelement nodes passed", "d": "7/2016"}, {"body": "could help fix first glance code fix seem big attempt pr", "d": "7/2016"}, {"body": "process pretty simple see make sure signed cla using name commits submit pull request including relevant test suite source code changes", "d": "7/2016"}, {"body": "nicklou need help ask", "d": "7/2016"}, {"body": "hello mr think first step judge element nodetype return elemnodetype amp amp indexofcall qualifier elem gt", "d": "7/2016"}, {"body": "already want skip initial qualifier string", "d": "7/2016"}, {"body": "confirmed looks like flatout got optgroup handling wrong", "d": "7/2016"}, {"body": "looking noticed chrome sees still enabled caused new feature test fail said think chrome right since anchor element disabled idl", "d": "7/2016"}, {"body": "btw different results safari ff chrome", "d": "7/2016"}, {"body": "chrome sees still enabled caused new feature test fail said think chrome right since anchor element disabled idl chrome actually reason content elements never match enabled", "d": "7/2016"}, {"body": "see nt match either enabled disabled", "d": "7/2016"}, {"body": "bad nt release nt running jsdom tests node lt includes promisesa compliance tests actually testing jquery even runs configuration assume building jquery using jenkins server recently switched node projects infrastructure taken care feel safer node amp dropped upstream skipped running eslint node lt assume install fine everywhere since nt native dependencies postinstall hooks depending newer node", "d": "7/2016"}, {"body": "skipped running eslint node lt yeah could although would require hacking unpleasantness grunt file", "d": "7/2016"}, {"body": "per meeting skip running eslint node lt dropping version travis moved roadmap later", "d": "7/2016"}, {"body": "take", "d": "7/2016"}, {"body": "oh man thief would mind update eslint", "d": "7/2016"}, {"body": "markelog sure pr ready", "d": "7/2016"}, {"body": "example nt seem include jquery", "d": "7/2016"}, {"body": "bad switching versions forgot leave readded tested way results", "d": "7/2016"}, {"body": "agree null also looks like null copied something getting wrong jquery however sure focusing another element case null correct search related blur target try making simple nonjquery repro also see related target correct focus another form element example edit fixed search term", "d": "7/2016"}, {"body": "focus another element blur unless click browser window case null appropriate", "d": "7/2016"}, {"body": "get element chrome ff edge look elsewhere ie safari", "d": "7/2016"}, {"body": "focus another element blur unless click browser window case null appropriate nt think true since ends click area still inside clicking still blur input regardless agree browsers providing information jquery used identify therefore fixable inside jquery pinged mozilla folks opinion", "d": "7/2016"}, {"body": "cc ing mozilla folks miketaylr digitarald bzbarsky annevk kentuckyfriedtakahe cyberdees", "d": "7/2016"}, {"body": "blur event element focus clicking somewhere nt actually take focus nothing focus click null seems appropriate tried simple testcase like chrome get null testcase linked also identical behavior firefox chrome firefox issue exactly", "d": "7/2016"}, {"body": "ff lists next major release parameter based discussion seems consensus blur need feature cases requesting many others exist use case cleaning multiselects closing list options user clicks based discussion far looks like need implement work around bc blur going support looks like bzbarsky code probably best work around", "d": "7/2016"}, {"body": "based discussion seems consensus blur need feature think consensus valid within blur event cases going receive focus per spec maybe test case nt demonstrating issue adequately going close issue nt think jquery problem solved find case works differently plain dom jquery feel free post reevaluate", "d": "7/2016"}, {"body": "see", "d": "7/2016"}, {"body": "jquery method returns computed value property nt apply transformation scope core library want something like always jquerycolor plugin", "d": "7/2016"}, {"body": "bug tracker jquery core please file bug along reduced test case videos debugged idea markup styling etc used produce bug", "d": "7/2016"}, {"body": "please huge amount code especially top million websites relies lot event shorthands reason load deprecated ambiguous remaining shorthand ambiguity actually much cleaner code fix something broken good example would change focus trigger focus focus function dosomething focus function dosomething please break important shorthands one person complained biggest reason continue use library backward compatibility keeps breaking stuff zero apparent gain many users either seriously consider moving different library stay older version guessing jquery want addition millions jquery plugins uses shorthand way every single one would updated would break entire jquery ecosystem hope guys see magnitude change users gain break lots stuff reason", "d": "7/2016"}, {"body": "deprecating ever removing default build already easy exclude custom build deprecation good signal developers aim use", "d": "7/2016"}, {"body": "fan deprecating something nt plan removing considering might deprecating prevalent remove nt see downside using like prefer disadvantages mind back harangue using alias", "d": "7/2016"}, {"body": "reason favor deprecating removing encourage plugin developers support users want exclude event alias module module besides deprecated module support excluding jquery ui also personally disliked methods many years operate reverse order expected trigger scenario primary action firing event taking action like native equivalents result close enough expected native behavior developers nt notice definitely source pain long time", "d": "7/2016"}, {"body": "bootstrap team similar thought scottgonzalez planning use slim build obviously consumers bootstrap using full build nice enddevelopers plugin nt unnecessarily force use full build fine deprecating ever removing slightly complicated deprecate come another term use api docs define apis plugins avoid already possible exclude eventalias custom build without signal plugin writers avoid nt going help much concern even removed event aliases core library always provided plenty compatibility helpers make transition easier someone moving jquery hypothetical jquery without event aliases would add jquery migrate time changed jquery would report things fix", "d": "7/2016"}, {"body": "add points deprecating shorthands mean slim build wo nt contain turn may serve incentive plugin authors stop relying time block people upgrading newer jquery since full build continue work micha\u0142 go\u0142\u0119biowski", "d": "7/2016"}, {"body": "also interesting bootstrap actively disables aliases unit tests wo nt accidentally used could used custom build course way tests generate clear error message one used accidentally", "d": "7/2016"}, {"body": "agree tradefoff worth saving lines code vs breaking lot user code lots jquery plugins maintained unmaintained actively used concern even removed event aliases core library always provided plenty compatibility helpers make transition easier someone moving jquery hypothetical jquery without event aliases would add jquery migrate time changed jquery would report things fix important point backward compatibility users keep modifying code every jquery plugins used everytime new jquery major version released note jquery migrate certainly solve newly created problem involve users add two javascript sources instead one many users may even aware jquery migrate exists dont think saving lines code worth breaking lots code may know jquery already less kb load google cdn permanently cached reducing files size kb even kb isnt going make much difference single image facebook kb filesize important criteria imho important criteria backwards compatibility adding new features continue make jquery great library", "d": "7/2016"}, {"body": "think whole core team agrees removed would like warn use though deprecation might best way however still think word deprecation give wrong signal people believe jquery intends remove line evidenced comment nt", "d": "7/2016"}, {"body": "thank timmywil forgot add using shorthand saves significant coding time also reduces end user filesize since less code using shorthand winwin developers", "d": "7/2016"}, {"body": "forgot add using shorthand saves significant coding time also reduces end user filesize since less code using shorthand winwin developers lie nt save significant coding time shorthands like time takes type characters negligible even entire year worth coding even time spend typing general coding fairly small keystrokes get significant gains development time end user file size assume referring number bytes transferred number bytes cached file user drive number bytes think saving transfer bandwidth disappears code runs gzip prior transfer", "d": "7/2016"}, {"body": "realize everyone uses gzip server addition gzipping compression increases server loads compress every single time unique visitor requests javascript files suitable situations compress codes using shorthands gzip process lot useful sure think providing quick shorthand problem shorthands called symbolic links linux os widely used feature advertised saving timemoney something hidden users", "d": "7/2016"}, {"body": "important point backward compatibility users keep modifying code every jquery plugins used everytime new jquery major version released breaking backwards compatibility precisely reason releasing new major version every user modify code guarantee least please consider strong suggestion avoid event shorthand methods new code", "d": "7/2016"}, {"body": "think confusion term deprecating let go wikipedia page definition deprecation discouragement use feature design practice typically superseded longer considered safe without least time removing system part prohibiting use without removing purpose tickets like discourage use nothing example dom method deprecated removed browser vendors sure based usage stats one longer using aka break web principle could use rule remove widely used methods one uses newer version jquery meanwhile unfavor practise show first time see misconception really sadness urge everyone see formal limitations term", "d": "7/2016"}, {"body": "move almost ready fact moved issues previously assigned", "d": "7/2016"}, {"body": "markelog formal definition little bearing popular connotations associated term dictionaries change time point change belief deprecation implies eventual removal least wish way could say recommend avoiding particular api different saying recommend avoiding may removed future version", "d": "7/2016"}, {"body": "timmywil changed name module moved stuff nt want remove due widespread usage still recommend avoid module would excluded slim build may urge library creators avoid apis real", "d": "7/2016"}, {"body": "yeah going use deprecated come another term got quite deprecate x issues open seem blocked coming agreement", "d": "7/2016"}, {"body": "timmywil point change belief deprecation implies eventual removal least imply first step removal process nt way really call way prefer something would nt change meaning discouraging people using still would first step removal process", "d": "7/2016"}, {"body": "actually nt think deprecation must mean plans remove nearby future would say though deprecating sth means discourage using love remove knows removal possible nt want remove due widespread usage think api continue exist would discourage using two things nt really go hand hand applying ticket say since want discourage deprecate even remove years", "d": "7/2016"}, {"body": "exactly trying say thank", "d": "7/2016"}, {"body": "precedent long deprecation deprecated nt remove case also got lot complaints deprecation main issue longer wait send signal nt best practice anymore using whatever word longer take people change code aware like people disagree whether something good practice may lot code using affect remove", "d": "7/2016"}, {"body": "particular reason jquery members want actively discourage using shorthands reason think reducing file size eventually removing whenever would actual calculations minifygzip saves around bytes reason", "d": "7/2016"}, {"body": "reason", "d": "7/2016"}, {"body": "seem right plugin developer worry slim build user selected user could excluded lots things slim build mean plugin developer code around software solutions dependencies want use particular version add dependency case bytes jquery loaded cached permanently browser main point plugin developer tell user needed run program way around missing something obvious", "d": "7/2016"}, {"body": "main point plugin developer tell user needed run program way around missing something obvious considerate plugin developer nt force user pull code needed", "d": "7/2016"}, {"body": "seem right plugin developer worry slim build user selected user could excluded lots things slim build could super simple plugin developers support one specific thing software solutions dependencies literally ca nt define dependency plugin developer want use particular version add dependency case bytes option plugin developer option application developer plugin could actually define dependency would different story jquery loaded cached permanently browser far true", "d": "7/2016"}, {"body": "think mixup happening considerate plugin developer nt force user pull code needed agree completely however shorthands obscure code shorthands maybe used features especially click onmouseover onmouseout etc many plugin developers may unreasonable expect presence core code point opinions maybe divided could super simple plugin developers support one specific thing looking global view users exclude anything slim build reasonably expect plugin developers today support one specific thing b tomorrow support another specific thing asking plugin developers today support users particular slim build chosen exclude shorthands tomorrow would ask plugin developer support users another slim build rabbit hole literally ca nt define dependency plugin developer literally add download page important note jquery ui already exact dependency example want draggable widget need atleast ui core core widget mouse option plugin developer option application developer plugin could actually define dependency would different story plugin actually define dependency inside code pure javascript add dependency note download page reasonable person would understand nt add dependency suggested plugin devs plugin simply work see draggable widget example far true load full build google cdn well know cdn true load fullcustom build server need setup caching server cache static content finally would like add imho jquery one best javascript library thankful hard work making happen apologize came across something opposite reason chimed think bug major impact existing user code probably jquery plugin would like people use library breaks lot existing code may adverse effect shorthand safe bugs easy learncodemaintain tiny file size kb guys decide remove shorthand sure jquery community adjust simply wont choice", "d": "7/2016"}, {"body": "users exclude anything slim build custom build slim slim build concrete meaning see also blog post section slim build since slim build nt include deprecated apis deprecated shorthands slim build would nt contain", "d": "7/2016"}, {"body": "shorthands maybe used features especially click onmouseover onmouseout etc many plugin developers may unreasonable expect presence core code point opinions maybe divided argument removal deprecation deprecation means developers encouraged stop expecting presence minifygzip saves around bytes seems high true argument favor deprecation eventual removal four times larger consider substantial reduction accounts total size reason provide unambiguous nonoverloaded means dealing events including covered shorthands latter syntactic saccharin worth extra file size saved keystrokes reservation jquery prototype properties mental overhead anyone disagrees free define whatever want code trivial", "d": "7/2016"}, {"body": "literally ca nt define dependency plugin developer literally add download page important note jquery ui already exact dependency example want draggable widget need atleast ui core core widget mouse sure text real dependency management nt happen text happens code ca nt define dependency code jquery ui dependency management within download builder nt help developers third party plugins dependencies specific widgets within jquery ui jquery ui however make possible use amd actually define dependencies individual parts actually powers download builder third party developer amazing dialog easily code define dependency jquery core jquery ui dialog jquery ui dialog turn define dependency jquery core jquery ui draggable jquery ui resizable jquery ui position plugins define dependencies works way chain resulting plugins jquery ui widget jquery ui mouse loaded modules jquery core plugin actually define dependency inside code pure javascript yes people many years please take time read requirejs custom solution javascript modules native solution load full build google cdn well know cdn true actually fairly high cache miss rates well known cdns say want something cached forever nt control end user cache reason chimed think bug major impact existing user code probably jquery plugin would like people use library breaks lot existing code may adverse effect shorthand safe bugs easy learncodemaintain tiny file size kb nothing break removal", "d": "7/2016"}, {"body": "implementation difficulties big difference actual apis event actual event use event system api eg actual event document ready promise safe use time late bindings wo nt ever fired missed event actually occurring mistake forced nonevent functionality event system api closest event equivalent would would latebinding problem ready event convenience developers never worry whether code running document ready fact referred event long caused lot confusion community deprecation use event system help developers understand actually also bit late even discussion deprecation since deprecation happened two half years ago", "d": "7/2016"}, {"body": "ready nt dom event therefore irrelevant shorthand methods nt provide every event eg methods joint removal net effect consistency far tell decision deprecate remove indeed motivated ambiguity came ample notice nt see us adding back shorthand favor deprecating remaining ones honest thought already although misremembering segregation eventalias module", "d": "7/2016"}, {"body": "closing favor specific", "d": "7/2016"}, {"body": "mean add wiki", "d": "7/2016"}, {"body": "yep plan get soon", "d": "7/2016"}, {"body": "said days ago h", "d": "7/2016"}, {"body": "lazy hazy days summer", "d": "7/2016"}, {"body": "first draft see small typos formatting issues think better", "d": "7/2016"}, {"body": "still todo replace pointer wiki wait people reviewed new wiki page", "d": "7/2016"}, {"body": "would make sense backward compartibility reasons support implementations sync async sync adding api recommendation using second one documentation", "d": "7/2016"}, {"body": "two implementations different semantics makes problem worse though plugin writer nt know one going get also need document whole situation explain could either sync async point choice plugin helps users assume async code works either way", "d": "7/2016"}, {"body": "dmethvin actually nt understand helps plugin developers anyway want document bahavior okay developer means ca nt use window load plugin anymore chance user wrap ready state high developer prevent situation whenever window load needed wanted plugin telling users use ready state maybe cause problems imo ca nt tell every user use ready load split versions jquery actually dead ca nt implement use anymore behavior reverted projects back ignore plugins evaluate options first see change think remove event", "d": "7/2016"}, {"body": "eisbehr timmywil described one way described second way popular plugins ca nt fixed one authors discuss solutions us", "d": "7/2016"}, {"body": "solution plugins descripes problem plugin ca nt break behavior user wrote ready state around initialization like solution would write plugin solve problem user put ready state around right window load triggered everything js plugin fnfoo function window load function possible never reached readythen function user function bar foo", "d": "7/2016"}, {"body": "plugin ca nt break behavior user wrote ready state around initialization see", "d": "7/2016"}, {"body": "scottgonzalez thanks somehow missed plugins binding load initialization happen many times within single page binding immediately tracking internally mean track internally currently idea track provide example nonplugin case nt see would bind load inside ready bind load fine without specific use cases require see reason change anything well thats point mentioned plugin developer ca nt prevent code wrapped ready state correct window load alone would work general", "d": "7/2016"}, {"body": "js function var windowloaded false window load function windowloaded true fnmyplugin function options whatever need plugin initialization without specific use cases hard say need reason plugin developer ever listening event window inside initialization plugin incorrect implementation happens work many pages common usage pattern", "d": "7/2016"}, {"body": "particular plugin jquery code lazyloaded page domcontentloaded load events fired plugin would never see load event ready code run course since event instead state think makes behavior enough antipattern nt try encourage", "d": "7/2016"}, {"body": "document antipattern", "d": "7/2016"}, {"body": "good point guess api entry", "d": "7/2016"}, {"body": "perhaps well maybe one warnings shared pages", "d": "7/2016"}, {"body": "agree timmywil", "d": "7/2016"}, {"body": "may add opinion dimensions element bounding box element two different concepts think agree change mixing two concepts way consistently getting dimensions element rather get dimensions bounding box depending whether css transformations applied acceptable breaking change width height return bounding box rather dimensions long way getting true dimensions way also css supposed give computed css properties hence name css width css height give bounding box instead breaking change messing user base huge gotcha", "d": "7/2016"}, {"body": "add another point regarding relationship note always return content width regardless value css property avoid penalty use rather documented behavior checked still valid jquery", "d": "7/2016"}, {"body": "think valid points far resolving problem conflicting concerns mention width applies height well previous use flaky property part documented standard return fractional pixels subpixel rendering becoming common finding cases got things wrong switched historically jquery users seen shorthand although definitely cases past versions true ideally like find solution breaks least code possible since changing results existing apis would great could find way migrate identify andor fix holgerjeromin getfree would like apis return let start think existing code might break", "d": "7/2016"}, {"body": "way see essential reliable way getting dimensions position element matter element ancestor csstransformed consider example jquery jquery blue box wants exactly red box since body element transformed boundingbox coordinates good general moment apply csstransformations calculation based elements dimensions going give wrong result even seemingly harmless transformations like cause problems jquery already offset position give boundingbox coordinates iirc ok jquery introducing breaking changes long way getting true element dimensions boundingbox dimensions needed given wo nt needed often could alternate way getting width height position provide fractional pixels expense useless transformations applied", "d": "7/2016"}, {"body": "ok jquery introducing breaking changes long way getting true element dimensions boundingbox dimensions needed exactly application needs way get dimension based information correct positioning complex transformed elements minimal example non fractional value disadvantage result complete bogus transforming", "d": "7/2016"}, {"body": "hmm maybe need use cases want dimensions transforms applied", "d": "7/2016"}, {"body": "let start summary documented surface area using horizontal dimension without loss generality returns computed css width property include exclude padding borders per css boxsizing property returns computed content width may less boxsizing borderbox equal boxsizing contentbox returns computed padding box width sum computed left right padding returns computed border box width sum computed left right borders equal boxsizing borderbox returns computed margin box width sum computed left right margins capable returning fractional values closely tied css box model especially since also transforms fact non methods probably convenient means getting untransformed dimensions although starting scratch might want condense together would definitely consistent naming ticket though agree holgerjeromin use values calls", "d": "7/2016"}, {"body": "also remember make use well means give wrong results transformations applied example", "d": "7/2016"}, {"body": "getfree would nt say give wrong results return element displayed position going back basics wondering main questions asked jquery browser api matter answer see related handling computedresolved value apis supposed answer question nt take transforms account transforms influencing final dimensions element screen computed value agree current behavior buggy set new value element apis answer question makes sense jquery side method serves getter setter apis respond set particular width generally get one getter btw agree current behavior getter takes transforms account buggy element displayed dimensions screen question element displayed screen include transforms hand since single property takes things account api nt setter equivalent clear exactly would setting jquery side responsibility api although getter less behaves way ignore boxsizing browser apis evolving way satisfy conditions api get displayed size element without taking transitions account asking something like kind weird time people asking question really asking value computed width displayed width minus transforms afaik browser api would answer question well treated obsolete web compatibility reason nt take transforms account well returns decimal values hope got paragraph right love someone working browser confirmdeny though bzbarsky last point problem method would fine getter final displayed size element also serves setter us undermines purpose nt make easier also methods serve getters setters fact apis setters well actually terrible need know value style write triggers style read means apis layout thrashing builtin think bad apis like want leave getters setters seems converted fulfill first two use cases suggested nt jquery api return dimensions element screen api returning position element screen new api former", "d": "7/2016"}, {"body": "tried removing width amp height hooks css saving bytes gzipped process got test failures dimensions module css module failing tests ones checking disconnected node negative values means though switching amp doable also think ca nt switch back would break jquery contract nt cut fractional values besides really like avoid going back fractional values sure anything", "d": "7/2016"}, {"body": "going back moment using retrieve api take transforms account purpose john resig wrote ago api awesome saves code complexity amp size well gives speed boost nt see us going back previous implementation would hurt much fronts still think many people want current behavior going back previous one would hurt well problem serves setter well makes nonsymmetrical api nt really know", "d": "7/2016"}, {"body": "seems like mgol explained challenges pretty well api retrieves actual transformed dimension position single number taking several css properties account ca nt used getter setter roundtrip single number consider regressions even changes existing behavior better compatibility still may play release", "d": "7/2016"}, {"body": "love someone working browser confirmdeny browsers returning used width css terms everything except nonreplaced inlines layout width ignoring transforms think calling displayed size element without taking transitions account api already exists everything except nonreplaced inlines think browser api returning computed width css terms put another way inner div browsers return whereas css computed width auto thing window relevant things like return nontransformed values might something sane nonreplaced inlines note integeronly", "d": "7/2016"}, {"body": "browsers getcomputedstyle width returning used width css terms everything except nonreplaced inlines layout width ignoring transforms think calling displayed size element without taking transitions account api already exists everything except nonreplaced inlines think actually meant bounding box element ie size box appears screen including transforms browser api returning computed width css terms put another way getcomputedstyle width inner div browsers return whereas css computed width auto meant resolved width keep using wrong name named innerwidth thing window relevant things like offsetwidth return nontransformed values might something sane nonreplaced inlines note integeronly meant offsetwidth keep mixing stuff doh post corrected basically point may either ask resolved value specific css property ask dimensions final box appears screen ie bounding box element api get bounding box minus transforms may good approximation similar api could use either get transforms included via must compute whole thing traversing document expensive", "d": "7/2016"}, {"body": "yes correct summary state browser api", "d": "7/2016"}, {"body": "consider regressions even changes existing behavior better compatibility still may play release remove getwidthorheight accurately provides css width rename refactor surface area clarify getset css contentpaddingbordermargin box dimensions therefore ignore transforms reimplement existing methods thin wrappers separately address complete land derivative refactor avoid dependence upon css widthheight hooks allowing hooks removed document reliable elements transformed ancestors document reliable elements transformed ancestors", "d": "7/2016"}, {"body": "considering impact changes moving get smaller issues first", "d": "7/2016"}, {"body": "remove getwidthorheight accurately provides css width reverting assume still consider small breaking change maybe best solution assume people depend access fractional values changing back may break sites want nt wait long imo rename refactor surface area clarify getset css contentpaddingbordermargin box dimensions therefore ignore transforms reimplement existing methods thin wrappers reiterate consider setters bad apis due layout thrashing built tried drastically simplify performance reasons among purposes started reverted problematic change many people good replacement forceshowing cascadehidden elements case apis case could ever remove setters separately address complete land derivative refactor avoid dependence upon css widthheight hooks allowing hooks removed document reliable elements transformed ancestors document reliable elements transformed ancestors sounds good", "d": "7/2016"}, {"body": "remove getwidthorheight accurately provides css width reverting assume getcomputedstyle fine like used calls reiterate consider setters bad apis due layout thrashing built tried drastically simplify performance reasons among purposes started reverted problematic change many people good replacement forceshowing cascadehidden elements case apis case could ever remove setters possible mentioned believe methods convenient means interacting css box rid setter logic would leave vacuum note layout thrashing comes play propertyboxsizing mismatches eg equivalent", "d": "7/2016"}, {"body": "mentioned one comments think switching gcs would breaking change currently guarantee css width works even detached elements", "d": "7/2016"}, {"body": "probably deprecate b disconnected nodes already fall back inline styles nt worst sins", "d": "7/2016"}, {"body": "heroic efforts get dimensions detached hidden elements retrospect mistake imo deprecating asap seems like good idea warning migrate suspect could remove", "d": "7/2016"}, {"body": "aware breaks draggables jquery ui draggables growshrink whenever move yet test", "d": "7/2016"}, {"body": "assassinbeast think one confused around years works expected good logic behind need change way think code seems like get confused basic matters", "d": "7/2016"}, {"body": "wanted see way could handle stay sync actual animation definitely nt affect deprecation wondering better way right polling selector roughly every frame could forcing style recalcs possibly layouts set nt try set position flag cleared custom call call could show element set position animation continues normally", "d": "7/2016"}, {"body": "put deprecation migrate immediately deprecation warning would triggered time jquery took path supported browsers nt", "d": "7/2016"}, {"body": "supported browsers nt raf ie amp android browser", "d": "7/2016"}, {"body": "could always uasniff ie display warning easy way view android browser console", "d": "7/2016"}, {"body": "migrate guess avoid warning would mean particular one would show android bad", "d": "7/2016"}, {"body": "ah yeah obviously way better uasniffing nt know thinking", "d": "7/2016"}, {"body": "unit test nt present bootstrap probably oversight part nt great syncing fixes", "d": "7/2016"}, {"body": "complaint sorry entry closed company forced go back jquery version offset never reliable svg elements really weak argument closing entry would appreciate old behavior could restored", "d": "7/2016"}, {"body": "miskabalu jquery nt support operations svgs exception class manipulation clearly documented contribute wo nt fix page relying similar relying private undocumented apis may change time since nt support change code might break something improving logic performance regular html dom important us trying fix something nt really support", "d": "7/2016"}, {"body": "mgol ok many thanks reply", "d": "7/2016"}, {"body": "mgol markelog correct im wrong tasks issue move jqueryisarray change usages", "d": "7/2016"}, {"body": "also third item unit tests moved jqueryisarray well also nt mentioned deprecation apart jquery pr api site issue needs jquery migrate issue polyfill api warn using micha\u0142 go\u0142\u0119biowski", "d": "7/2016"}, {"body": "mgol didnt get meant unit tests moved jqueryisarray well understand unit tests need modified jqueryisarray tests need removed right actually raising issues like every deprecation issue im working raised one issue", "d": "7/2016"}, {"body": "understand unit tests need modified jqueryisarray tests need removed right removed moved actually raising issues like every deprecation issue im working seen thanks meant apart api issue also need issue need restore api people may exclude deprecated module warning using", "d": "7/2016"}, {"body": "take", "d": "7/2016"}, {"body": "sure link reference", "d": "7/2016"}, {"body": "markelog correct im wrong x isnumeric function needs moved usage within unit tests need changed function meant used unit tests beggining", "d": "7/2016"}, {"body": "shashankanataraj think tests changed later decide remove isnumeric", "d": "7/2016"}, {"body": "timmywil think changed closing issue aim slim build able pass many tests possible exception excluded modules like go opposite direction also pattern followed past eg tests contained many tests using nt hard fix", "d": "7/2016"}, {"body": "mgol yes moved talking usage tests continue testing function removed", "d": "7/2016"}, {"body": "think keep testing used different places replaced", "d": "7/2016"}, {"body": "timmywil talking well move nt change tests testing method using introduce additional test failures testing slim version", "d": "7/2016"}, {"body": "mgol proposing replace stray uses nt directly related testing move tests directly test remove slim fine testing deprecated module", "d": "7/2016"}, {"body": "mgol way place find use isnumeric nt related testing lines", "d": "7/2016"}, {"body": "mgol proposing replace stray uses isnumeric nt directly related testing isnumeric move tests directly test isnumeric testunitdeprecated remove slim fine testing deprecated module meant well seems misunderstanding", "d": "7/2016"}, {"body": "yeah", "d": "7/2016"}, {"body": "dustinpoissant mgol submit pr", "d": "7/2016"}, {"body": "shashankanataraj sure remember move change current uses note scheduled likely want release pr may immediately merged even ready", "d": "7/2016"}, {"body": "also pr doc changes githubcomjqueryapijquerycom would also appreciated", "d": "7/2016"}, {"body": "mgol markelog thanks", "d": "7/2016"}, {"body": "mgol line breaking change vs page scrolls upgrade instructions version case missing semver breaking change ca nt create major update already one emotional trying bring little bit attention problem might topic think custom semver versioning digits something like majorcurrentmajorbreakinghotfixminorpatch", "d": "7/2016"}, {"body": "add lines custom code using jquery protected issue right", "d": "7/2016"}, {"body": "szarouski indicated milestone comments issue fixed jquery else need case missing semver breaking change ca nt create major update already one mean nt understand", "d": "7/2016"}, {"body": "mgol run jquery website see popup lie", "d": "7/2016"}, {"body": "homakov post example site checked nt work", "d": "7/2016"}, {"body": "mgol sorry nt clear projects total combine giant project use jquery fix cors backwards incompatible reverted released version problem fix line change would much easier fix comparison upgrading version wonder add lines custom code jquery library using jquery api order fix security issue versions point definitely upgrade moment bandwidth time really nt want vulnerability used library project mentioned semver jquery already taking count straight forward way semver incorporate incompatible yet important change version", "d": "7/2016"}, {"body": "szarouski ok understood yes adding lines fix issue note though vulnerability nonadvisable anyway", "d": "7/2016"}, {"body": "szarouski read know really jump hoops order consider real threat real anything case kinda situation right thing realistically nothing concern", "d": "7/2016"}, {"body": "mgol exactly nonadvisable like grabbing weather data external site supporting cors nt site hand let consider fixed", "d": "7/2016"}, {"body": "docs still mention deprecation even though issue closed specifically says update docs see jqueryapijquerycom", "d": "7/2016"}, {"body": "yeah right although nt think reopen ticket let discuss jqueryapijquerycom btw would like send us pr beat", "d": "7/2016"}, {"body": "use function allows job", "d": "7/2016"}, {"body": "think everyone development team forgotten term bloat means bloat case jquery code utilized end user several university studies based akanomi data nonprofit organizational data shows less jquery utilized enduser bin sites require library also search engines notable organizations recommending steer away thirdparty libraries designed lazy developers jquery top lists get back bonilla js fan npm majority developers leave development dependencies assets releases huge security issues however npm right track helping development flow reducing bloat dmethvin way saying node development like layers onion reason nt look bloated top level seeing outer layer pungent onion every module include npm usually include many modules true modules include dependencies module included deep onion layers dependency despite security issues npm developers impose releases development tools left easily removed problem jquery nothing library development stuck mentality honestly nt see surviving another five years conservativly speaking another issue one big module much complicated maintain release esp security patches ux cattering developers days making web apps faster secure cost effective maintainability end development importantly enduser keeping bandwidth minimum", "d": "7/2016"}, {"body": "celticparser fact publish one package nt mean compile whole jquery source broken separate small amd components load ones need future likely switch modules even easier integrate various tree shaking tools", "d": "7/2016"}, {"body": "page yellow note callout added indicating cause issues responsive layout released fixes issue wondering note updated indicate lt responsive issue unless still responsive layout issues show even least fiddle fixed switched nt testing regarding responsive layout", "d": "7/2016"}, {"body": "working wordpress site version jquery uses returns value excluding scrollbar width innerwidth outerwidth used workaround", "d": "7/2016"}]