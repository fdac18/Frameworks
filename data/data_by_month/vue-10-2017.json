[{"title": "conflict vonce ref", "body": "version reproduction link steps reproduce open console ctrlshifti chrome example expected output console actually happening output console remove vonce change vue version bug remains problem disappears thanks", "num": "6980", "d": "10/2017"}, {"title": "checkbox responding vmodel changes", "body": "version reproduction link steps reproduce please see jsfiddle basically trying get checkbox change based underlying change vmodel maps initiating change via set taxable link vs check box directly expected checkbox toggle checkedunchecked actually happening nothing", "num": "6979", "d": "10/2017"}, {"title": "suggest component namespace \u5efa\u8bae\u589e\u52a0\u7ec4\u4ef6\u7684\u547d\u540d\u7a7a\u95f4\u529f\u80fd", "body": "problem feature solve thirdparty components lib mix using avoid conflict difficult solve coder level without rebuild source easy batch import proposed api look like \u4f60\u671f\u671b\u7684 api js thirdcomponents vuenamespace third thirdcomponents vuenamespace fourth fourthcomponents new vue", "num": "6978", "d": "10/2017"}, {"title": "suggest change pipe symbol filter \u5efa\u8bae\u53d8\u66f4\u8fc7\u6ee4\u5668\u7ba1\u9053\u6240\u4f7f\u7528\u7684\u8bed\u6cd5\u7b26\u53f7", "body": "problem feature solve symbol use javascript symbol origin use \u76ee\u524d\u6240\u91c7\u7528\u7684 \u7b26\u53f7\u5728 javascript maybe user want write exprssion like proposed api look like \u4f60\u671f\u671b\u7684 api symbol never used expression origin symbol never follow expression \u539f\u59cb\u8bed\u4e49\u7684 \u6216 \u6216 use unemployed symbols look good", "num": "6977", "d": "10/2017"}, {"title": "shorter import vue component separation concern", "body": "problem feature solve great vue components separated js css via separation concern greater import nested vue component way instead nested vue component name directory consider support nested vue component imported way thank proposed api look like import app avuecomponent contains nested avuecomponentvue instead import app avuecomponentavuecomponentvue", "num": "6976", "d": "10/2017"}, {"title": "unicode naming methods seems unsupported warning appreciated", "body": "version reproduction link steps reproduce expected excuse closer feature request great method support unicode naming otherwise may better provide feedback thanks efforts actually happening guessing validation passes method exist somehow invoking method fails", "num": "6975", "d": "10/2017"}, {"title": "support local directives functional components", "body": "problem feature solve directives meant assist component behavior declared globally works fine components directives option nt work functional components tried declaring directives data passing def name raw name still nt work knowing globally declared directives work functional components would like request way use locally well", "num": "6974", "d": "10/2017"}, {"title": "\u9700\u6c42 render\u51fd\u6570\u662f\u5426\u53ef\u4ee5\u52a0\u4e0afilter\u4ee5\u8c03\u7528\u81ea\u5b9a\u4e49\u7684\u8fc7\u6ee4\u5668", "body": "version reproduction link", "num": "6972", "d": "10/2017"}, {"title": "error compiling template using unicode naming vfor alias", "body": "version reproduction link steps reproduce running jsfiddle instance make warning appear console case html js code var new vue el data \u4efb\u52a1\u8868 \u5185\u5bb9 \u5b66\u4e60 javascript \u5185\u5bb9 \u5b66\u4e60 vue \u5185\u5bb9 \u6574\u4e2a\u725b\u9879\u76ee expected imho elements still displays spite warning warning appear actually happening seems caused regex identifier validation sure happens alias instead iterator todo \u4efb\u52a1\u8868 nt complain issue noticed try use chinese naming much possible sample codes official guide thanks time", "num": "6971", "d": "10/2017"}, {"title": "malformed html breaking app", "body": "version reproduction link steps reproduce create vue app following html inserted notice vue breaks throws error expected vue catch error issue warning skipping malformed tag actually happening uncaught exception breaking app creating bad html regex back end links chosen search terms throughout article prone errors editor links one term contains another prince prince william clearly code generating bad link first place fixed seems brittle malformed html entered break whole app imagine trycatch block right place could solve problem take look see find source might happen thought mention digging thanks", "num": "6970", "d": "10/2017"}, {"title": "von click itemklik", "body": "im developing web page problem sentence nothing happens click element li vfor item indice tasks von click itemklik itemtitle also declared everything var vm new vue el app data tasks title nueva recepci\u00f3n src imagesaddpng id klik togglevisibility title editar recepci\u00f3n src imagesdocumentcheckeditpng id klik none title eliminar recepci\u00f3n src imageserrorpng id title finalizar recepci\u00f3n src imagescheckpng id title asignar material src imagesboxintopng id title eliminar material src imagesboxoutpng id title imprimir etiqueta src imagesreceiptprinterpng id anyone know click element nothing happens thank", "num": "6969", "d": "10/2017"}, {"title": "want mainjs write import commonstylusindex eslint", "body": "mainjs import commonstylusindex cmd error relative module found commonstylusindexin srcmainjs", "num": "6968", "d": "10/2017"}, {"title": "", "body": "", "num": "6967", "d": "10/2017"}, {"title": "focus lost list rendered component simultaneously removing first ellement appending new one", "body": "version reproduction link steps reproduce focus one letters press key downup observe difference behaviour expected focus retained addingremoving components list pressing actually happening pressing key forces rerendering focus lost pressing key still works expected related preventing making work keyboard navigation", "num": "6966", "d": "10/2017"}, {"title": "js ts nuget packages missed", "body": "version reproduction link steps reproduce check nuget repository last versions vue vuetypescriptdefinitelytyped packages expected vue version vuetypescriptdefinitelytyped also contains last typescript declarations actually happening version vue version vuetypescriptdefinitelytyped could please check upload last versions vue vuetypescriptdefinitelytyped nuget repository", "num": "6965", "d": "10/2017"}, {"title": "js ts nuget packages missed", "body": "hello ca nt find js ts nuget packages could please provide valid name packages upload last versions js typescriptdefinitelytyped nuget repository find following best regards", "num": "6964", "d": "10/2017"}, {"title": "\u67d0 mac \u4e0b\u67d0 chrome \u6e32\u67d3\u51fa font \u6807\u7b7e\u5728 span \u6807\u7b7e\u4e0b", "body": "", "num": "6963", "d": "10/2017"}, {"title": "input enter event environment invalid", "body": "version reproduction link steps reproduce use test expected press enter return actually happening press enter return tried modifier nt", "num": "6962", "d": "10/2017"}, {"title": "\u8c03\u7528", "body": "version reproduction link steps reproduce b\u9009\u9879\u5361 expected actually happening \u901a\u8fc7routerview\u52a8\u6001\u5c55\u793a\u5b50\u7ec4\u4ef6", "num": "6961", "d": "10/2017"}, {"title": "vue typescipt problem", "body": "problem feature solve organizations support ts present solutions used successfully ts environments proposed api look like nothing", "num": "6960", "d": "10/2017"}, {"title": "vue typescript", "body": "organizations support ts present solutions used successfully ts environments", "num": "6959", "d": "10/2017"}, {"title": "vonce component vfor cause performance error", "body": "version reproduction link steps reproduce link displays component perform data source change vue version expected list perform data source actually happening list price", "num": "6956", "d": "10/2017"}, {"title": "routerlink \u70b9\u51fb\u4e0b\u4e00\u9875\u9762\u518d\u8fd4\u56de \u767d\u5c4f", "body": "version reproduction link steps reproduce routerlink \u4f7f\u7528\u65f6 \u4f1a\u51fa\u73b0 expected actually happening \u4f1a\u51fa\u73b0", "num": "6954", "d": "10/2017"}, {"title": "errorcaptured errorhandler capture errors von handlers", "body": "version reproduction link steps reproduce click throw error button reproduction link expected display alert error object handled errorcaptured hook defined appvue component actually happening errorcaptured hook invoked seems typings optionsdts specified docs", "num": "6953", "d": "10/2017"}, {"title": "vue removes tab character spans", "body": "version reproduction link steps reproduce add span element containing tab character somewhere inside app element like inside paragraph text indented expected tab character left alone thus able indent given line actually happening vue strips tab character span using edit content posts pasting code contain tab indentations transformed upon viewing saved came find vue removes tab characters inside aforementioned span tags thus code pasted loses indentation", "num": "6951", "d": "10/2017"}, {"title": "error compiling template log tweak log message order", "body": "problem feature solve firefox caps length individual console log case error compiling template message could lead actual message trimmed supposed config option change limit nt seem effect proposal move message beside error compiling template message example would also make error skimmable proposed api look like", "num": "6950", "d": "10/2017"}, {"title": "vue render older versions ios", "body": "version reproduction link steps reproduce primary users wont latest phones see sample vue apps simply nt render ios safari gt reproduction vue demo render ios equivalent react component seen vue apps also please advise expected see app rendered actually happening seeing blank page", "num": "6948", "d": "10/2017"}, {"title": "class \u7ed1\u5b9a\u65f6 \u65e0\u6cd5\u4f7f\u7528\u5e26\u6709 \u7684 class", "body": "version reproduction link steps reproduce itemname new vue el app data message hello vuejs items name zhangsan isright true name wangwu isright false expected \u53ef\u4ee5\u7ed1\u5b9a \u542b\u547d\u540d\u7a7a\u95f4 \u7684 class \u6837\u5f0f\u547d\u540d actually happening \u65e0\u6cd5\u6b63\u786e\u89e3\u6790 \u6d4b\u8bd5\u4e86\u4e0b \u542b \u7684 class \u5219\u53ef\u4ee5", "num": "6947", "d": "10/2017"}, {"title": "transition \u548c flip venterto \u4e0d\u6d88\u5931", "body": "version reproduction link steps reproduce \u5217\u8868\u8fc7\u5ea6\u4f7f\u7528 \u5217\u8868\u8fc7\u5ea6\u4f7f\u7528 \u9875\u9762\u4e2d\u540c\u65f6\u5b58\u5728\u4e00\u4e2a\u7684 \u8fd8\u662f\u4e0d\u7528 expected \u6b63\u786e\u6267\u884c\u65b0\u589e\u8fdb\u5165\u52a8\u753b actually happening", "num": "6946", "d": "10/2017"}, {"title": "working passing array first argument", "body": "version reproduction link steps reproduce add multiple custom event listeners try remove try emit removed events expected nothing happen event listeners removed actually happening got printed console means event listeners removed expected please check post vue forum details", "num": "6945", "d": "10/2017"}, {"title": "support reactivity subclassed arrays", "body": "problem feature solve support subclassed arrays prevent vuejs completely removing subclassed array prototype revert back native array prototype turn breaks application code expecting array extended methods example javascript const class extends array constructor super const arr new arrpush consolelog pushed called const v new vue el mountele data arr arrpush console output related proposed api look like api changes feature request simply request array prototype replaced support vue reactivity continue call method array instance wrapped vuejs mutator code", "num": "6943", "d": "10/2017"}, {"title": "domexception failed execute setattribute element valid attribute name", "body": "error times resolved adding check line issue", "num": "6941", "d": "10/2017"}, {"title": "keepalive include also cache anonymous components", "body": "version reproduction link steps reproduce triggle route expected second route component cached actually happening second route component cached demo tow routerview component name result right demo second route name also cached match first checked component name option local registration name key parent components option name option available anonymous components matched l keepalive routerview every anonymous component page cached nt think reasonable", "num": "6938", "d": "10/2017"}, {"title": "provide bundle", "body": "problem feature solve recently working project attempts deploy code production idea inspired philip walton post hacked vuejstemplateswebpack output dual bundles feature detection downgrade benefit significant script execution time bundle size reduces vue well vuerouter vuex etc could provide bundles performance boost even significant according compatibility table compatible browsers got lot market shares although vue relies feature think still meaningful provide bundle option proposed api look like request particular apis", "num": "6937", "d": "10/2017"}, {"title": "keepalive\u5339\u914d\u5230\u4e86\u533f\u540d\u7ec4\u4ef6", "body": "version reproduction link steps reproduce \u548cactivated\u751f\u547d\u5468\u671f\u51fd\u6570 expected \u51fd\u6570 actually happening \u8fd9\u662ffeature\u8fd8\u662fbug \u6216\u8005\u662f\u6211\u7684\u7528\u6cd5\u4e0d\u5bf9", "num": "6935", "d": "10/2017"}, {"title": "vueset nt force variable", "body": "version reproduction link steps reproduce click table header time expected list names sorted evrytime click header actually happening list sorted works fine use temp variable like", "num": "6933", "d": "10/2017"}, {"title": "memory leak updatedomlisteners updatecomponentlisteners", "body": "version reproduction link steps reproduce create vue instance reference large object data render either component element event handler destroy vue instance remove element null reference expected vue instance references contains freed garbage collection actually happening variables hang onto references prevent garbage collection fix ready filing pr shortly", "num": "6931", "d": "10/2017"}, {"title": "attribute supports mix using string object", "body": "problem feature solve attribute support one array string object think convenient vue support use one attribute proposed api look like", "num": "6930", "d": "10/2017"}, {"title": "rerenders changes affects sibling elements", "body": "version reproduction link steps reproduce please open codepen example type something input expected input lose focus actually happening input rerenders loses focus happens conditional elements exists input workaround use vshow instead vif cases", "num": "6929", "d": "10/2017"}, {"title": "may infinite update loop component render function", "body": "version reproduction link steps reproduce create websocket connection socket data change continue custom method want set three port like data template setprice itemvarietytype methods error message solve problem expected actually happening \u88ab\u8ba4\u4e3a\u662f\u65e0\u9650\u6e32\u67d3\u7ec4\u4ef6", "num": "6928", "d": "10/2017"}, {"title": "may infinite update loop component render function", "body": "create websocket connection socket data change continue custom method want set three port like data template setprice itemvarietytype methods error message solve problem", "num": "6926", "d": "10/2017"}, {"title": "typescript may infer props type", "body": "version vue typescript reproduction link steps reproduce typescript may infer props type eg javascript appvue import header headervue export default components vheader header computed methods test left number right number number return left right headervue import vue vue export default props test function data thistest aa aa return thistest aa aa invoke correct vue get parent props function type expected types error actually happening run success", "num": "6924", "d": "10/2017"}, {"title": "typescript infer props type", "body": "typescript may infer props type eg javascript appvue import header headervue export default components vheader header computed methods test left number right number number return left right headervue import vue vue export default props test function data thistest aa aa return thistest aa aa invoke correct vue get parent props function type", "num": "6923", "d": "10/2017"}, {"title": "typescript declaration working render function", "body": "version reproduction link steps reproduce build project build pass uncomment render function errorts build build fails component type changed message prop expected component type inferred data props computed methods accessible methods render functions actually happening soon add render function type inference loses everything except props", "num": "6921", "d": "10/2017"}, {"title": "observable used array work mutating array methods overwritten", "body": "version reproduction link steps reproduce create array instance override method overriding method directly array instance instantiate vue instance provide array input push values array nothing rendered expected vuejs reactive system detects mutations array actually happening vuejs react array mutations ran issue code base already uses similar pattern observing data looking source array prototype created using arrayprototype simply applied instance replacing think solution would move logic protoaugment andor copyaugment storing original method overriding ensuring original called another observation protoaugment take consideration method override done instance array custom never reached cases even suggested solution would help cases paul", "num": "6920", "d": "10/2017"}, {"title": "update value", "body": "version reproduction link steps reproduce write input words click reset button expected expect get clear value input actually happening value input cleared", "num": "6919", "d": "10/2017"}, {"title": "vif velse working type vmodel", "body": "version reproduction link steps reproduce run jsfiddle example expected work actually happening seems effect maybe relatedduplicate issue issue", "num": "6918", "d": "10/2017"}, {"title": "domprops twice value key", "body": "version reproduction link steps reproduce run jsfiddle program look textarea content precisely last domprops expected generate key twice actually happening rise error strict mode jsfiddle example nt rise error strict mode discovered issue using webpack babel test", "num": "6917", "d": "10/2017"}, {"title": "horizontaltab attribute argument causes error compiling template internet explorer edge", "body": "version reproduction link steps reproduce html work html work javascript expected vue able compile template matter horizontaltab attribute actually happening vue fails compile template invalid expression invalid character true raw expression vbind class true found vuejs happens internet explorer edge works chrome firefox related bug style multiline attribute removes root element versions ie fixed handle multiline atribute value parsing ie fix seen error message doesnt complain template ran bug write long attributes multiple lines use horizontaltabs indent lines easier read", "num": "6916", "d": "10/2017"}, {"title": "grandchild component disappears parent rerenders", "body": "version reproduction link steps reproduce jsfiddle wait settimeout finish parent label set false component rerenders loses content grandchild expected grandchild content still dom actually happening grandchild disappears component parent rerenders expecting bug fixed issue sure similar issue", "num": "6915", "d": "10/2017"}, {"title": "request add vmodellazy components", "body": "problem feature solve vmodel components already supports trim number lazy modifier support components would make uniform across platform proposed api look like change backwards compatible would add new property model definition", "num": "6914", "d": "10/2017"}, {"title": "hope way set scope variable", "body": "sorry chinease try translate later problem feature solve mustache interpolations data deep props make code cumbersome datajs mypagevue vue div p somedeeppropsa p somedeeppropsb import data datajs export default data tried solutions computed properties mypagevue vue div p propsa p propsb import data datajs export default data computed props return thissomedeepprops easy use computed properties become cumbersome directive define scoped variable mypagevue vue div template vfor props somedeepprops p ref propsa p ref b propsb import data datajs export default data almost works well sideeffect scope become array child component dataviewvue vue div p propsa p propsb export default props props mypagevue vue div dataview props somedeepprops import data datajs import dataview dataviewvue export default components dataview data interpolations child component become simple children also cumbersome addition child need wrapper element component root needed scoped slot make reusable component subscopevue vue div slot sub data export default props data mypagevue vue div subscope data somedeepprops template slotscope scope p scopesuba p scopesubb subscope data somedeepprops template slotscope sub p suba p subb import data datajs import subscope subscopevue export default components subscope data interpolations look like simpler codes become complex proposed api look like hope directive define scoped variables like affect performance api optimized used reference first elements value like \u800c \u6211\u60f3\u4e5f\u8bb8\u8fd8\u6709\u66f4\u597d\u4e00\u70b9\u7684\u540d\u5b57 used reference array elements value like", "num": "6913", "d": "10/2017"}, {"title": "typescript problem lifecycle hooks v extends vue", "body": "version reproduction link steps reproduce link additem component using created hook show issue user created hook try use inside creating componentoptions instance expected expected able use v interface inside hook using variable actually happening referencing componentoptions instead v instance although runtime actually referencing instance implemented v interface issue happens advanced typescript users affect execution javascript users", "num": "6912", "d": "10/2017"}, {"title": "able use time", "body": "problem feature solve currently mixins way distribute reusable template extended component render function would also ignored component template ways requires pug templating say want write mixin nt want limit user templating option mixin would wrapper common styling proposed api look like template render would processed render function template access template proposal dumb better way handle scenario thanks", "num": "6911", "d": "10/2017"}, {"title": "\u5728ts\u4e2d\u8def\u7531\u5b9a\u4e49\u65f6\u65e0\u6cd5\u4f7f\u7528import \u5b9a\u4e49\u5f02\u6b65\u5b50\u7ec4\u4ef6", "body": "version reproduction link steps reproduce \u65e0\u6cd5\u4f7f\u7528import \u5b9a\u4e49\u5f02\u6b65\u5b50\u7ec4\u4ef6 expected \u65e0\u6cd5\u4f7f\u7528import \u5b9a\u4e49\u5f02\u6b65\u5b50\u7ec4\u4ef6 actually happening \u65e0\u6cd5\u4f7f\u7528import \u5b9a\u4e49\u5f02\u6b65\u5b50\u7ec4\u4ef6 \u65e0\u6cd5\u4f7f\u7528import \u5b9a\u4e49\u5f02\u6b65\u5b50\u7ec4\u4ef6", "num": "6909", "d": "10/2017"}, {"title": "computed property setter component called updating vmodel", "body": "version reproduction link steps reproduce declare computed property parent component setter child component pass computed property vmodel attempt update property via vmodel binding expected computed property setter called actually happening computed property setter called following message appears javascript console appears regression vue changing vue version provided jsfiddle fixes bug optimisation applied earlier declare computed properties component prototype appears interfere call hasown function set observerindex", "num": "6908", "d": "10/2017"}, {"title": "ssr issue dynamic type", "body": "version reproduction link unable quickly setup ssr environment show issue steps reproduce vue export default data return foo expected generated html server actually happening server generates hydration error browser console", "num": "6907", "d": "10/2017"}, {"title": "\u4e2d vue\u7684template\u6807\u7b7e\u5185\u7684\u5185\u5bb9\u65e0\u6cd5\u89e3\u6790\u51fa\u6765", "body": "vue\u7684template\u6807\u7b7e\u5185\u7684\u5185\u5bb9\u65e0\u6cd5\u89e3\u6790\u51fa\u6765", "num": "6906", "d": "10/2017"}, {"title": "functional components use render slots slotscope attr render", "body": "version reproduction link steps reproduce jsfiddle show first element rendering applied expected functional component render attr actually happening applying functional component renders element never renders would also like see ability possible access data within functional component context either prop something like", "num": "6904", "d": "10/2017"}, {"title": "nt select correct option render", "body": "version reproduction link steps reproduce links nothing instances set vif select also vmodel see examples expected select render option whose value value model bound select selected actually happening first option select active either call forceupdate another model changed click text field type letter suddenly correct value selected dropdown used work vue upgraded discovered working around nexttick gt thisforceupdate previous submitted issue however believe gebilaoxiong closed prematurely provided solution changed functionality solve actual issue", "num": "6903", "d": "10/2017"}, {"title": "limit input number without using number type", "body": "problem feature solve way limit inputs numbers still using reasons using allow first digit accept minlength maxlength adds crappy component web browser proposed api look like adding directive input limit numbers", "num": "6902", "d": "10/2017"}, {"title": "typescript add props type component constructor", "body": "problem feature solve would useful infer props type component example write type safe wrapper improve interface directly typescript function rendercomponent h createelement component extendedvue data vnodedata amp props partial children vnodechildren vnode return h component data children const mycomponent vueextend props foo string render h return h div thisfoo const parent vueextend render h return rendercomponent h mycomponent props foo error type property foo imcompatible proposed api look like generate type means ca nt determine type object think easiest reasonable way achieve adding types", "num": "6901", "d": "10/2017"}, {"title": "native event vuejs event modifier", "body": "version reproduction link steps reproduce press enter input b check checkbox emultae keyboard event expected classlist appear b classlist appear actually happening classlist appear b nothing appear remove modifier template eg keyup checkbox raise event normal bug", "num": "6900", "d": "10/2017"}, {"title": "component slot rerenders even slot component data changed", "body": "version reproduction link steps reproduce type something input expected method test component nt called actually happening method test component called serious performance issue component complicated rerendered even nothing changes", "num": "6898", "d": "10/2017"}, {"title": "watch array data item array attribute", "body": "example data like new vue data nations state asia country china japan want watch nations index country index simple way solve", "num": "6897", "d": "10/2017"}, {"title": "vcloak iframe google recaptcha ignore vue warn", "body": "hi used google recaptcha plugin inside vuetemplate inline showed vuewarn like templates responsible mapping state ui avoid placing tags sideeffects templates", "num": "6896", "d": "10/2017"}, {"title": "functional components data merging util", "body": "problem feature solve hi components extend feature nothing similar functional components problem solution well explained works fine grateful author would like request official core solution edge situations new features party solutions difficult time top proposed api look like similar done alexsasharegan", "num": "6895", "d": "10/2017"}, {"title": "", "body": "\u76f4\u63a5\u53f3\u952e\u6253\u5f00\u8fd9\u4e2a\u5730\u5740\u662f\u6709js\u4ee3\u7801\u7684", "num": "6894", "d": "10/2017"}, {"title": "object destructuring vbind", "body": "problem feature solve came case parent component using getter pass props child component looked like far good one teammate could manage store make sure much necessary data supplied getter data another teammate could specify child component props accept child component needed another prop nt come getter data nt make sense including getter data nt semantic make things work props declared like would great sacrifice object literal shorthand syntax cases keep api dry proposed api look like", "num": "6893", "d": "10/2017"}, {"title": "dynamic component rendering slot tree", "body": "version reproduction link steps reproduce open chrome edge full width click toolbar menu icon persistent drawer openclose renders properly decrease width window hit mobile media query maxwidth drawer temporary drawer fixed content rendered expected drawer content rendered actually happening dynamic update drawer component content slot rendered sumary issue forum reproduce dev mode clone repo npm install npm run dev already tried checked lyfecycle seem properly called slotdefault proper vnodes facing virtual dom caching issue", "num": "6891", "d": "10/2017"}, {"title": "support warnings potential accessibility issues vue components", "body": "problem feature solve help point accessibility flaws vue components development may core library feature could set eslint rules cli generates scaffold proposed api look like could eslint plugin different module similar", "num": "6889", "d": "10/2017"}, {"title": "inconsistency behavior vmodel von element", "body": "version reproduction link steps reproduce click checkbox several times matter expected properties ison end value actually happening properties ison end opposite values vue least experiment results values ison seems natural new state checkbox exactly interested inside event handler seems like trivial use case sure regression bug feature either way fact backward compatibility broken surely bad thing especially since npm installs given version range", "num": "6888", "d": "10/2017"}, {"title": "video attribute muted applied firefox", "body": "version reproduction link steps reproduce pen consists simple vue instance mounted containing video element open pen chrome notice volume icon set muted video muted played open pen firefox notice volume icon set unmuted video unmuted played expected video plays muted controls show muted actually happening video plays unmuted controls show unmuted especially issue autoplaying videos reproduced firefox firefoxdeveloperedition different machines running either macos sierra high sierra", "num": "6887", "d": "10/2017"}, {"title": "eventtarget nt always point element", "body": "version reproduction link steps reproduce first click icon button next click edge button icon expected expect eventtarget button cases since event handler declared button actually happening eventtarget depends location click something nt expect nt used vue live projects yet love seeing far", "num": "6884", "d": "10/2017"}, {"title": "strange behaviour watch object", "body": "version reproduction link steps reproduce define object attributes data section place html select object binded one defined object attribute define prop watcher one attribute define api watcher defined object entirely deep option initiate vmodel changing select value compare curr prev values watchers expected expected curr prev variables watchers actually happening curr prev variables api watcher abnormal prop watcher different normal normal behaviour", "num": "6883", "d": "10/2017"}, {"title": "nt select correct option render", "body": "version reproduction link steps reproduce nothing autofake ajax data load expected select render option whose value value model bound select selected actually happening first option select active either call forceupdate another model changed click text field type letter suddenly correct value selected dropdown used work vue upgraded discovered working around nexttick gt thisforceupdate", "num": "6882", "d": "10/2017"}, {"title": "\u5173\u4e8erules\u68c0\u9a8c\u591a\u5c42json\u7591\u95ee", "body": "problem feature solve form name bejson url page isnonprofit true address street \u79d1\u6280\u56ed\u8def city \u6c5f\u82cf\u82cf\u5dde country \u4e2d\u56fd links name google url name baidu url name soso url proposed api look like \u50cf\u5b98\u65b9\u6587\u6863\u4e00\u6837", "num": "6881", "d": "10/2017"}, {"title": "\u5173\u4e8erules\u6821\u9a8c\u591a\u5c42json\u7591\u95ee", "body": "", "num": "6880", "d": "10/2017"}, {"title": "inlinetemplate delimiters", "body": "version reproduction link steps reproduce observe results bottomright frame expected display foojpg actually happening display filename using vue jazz sections nonspa serverrendered go application", "num": "6879", "d": "10/2017"}, {"title": "watch api vs watch property different result observed", "body": "hi posting rails gem netstuff hello trying implement custom select whose value binded data object watch behaves differently direct attribute watching work properly deep watching whole object gives another result values curr prev normal", "num": "6878", "d": "10/2017"}, {"title": "mouse button modifiers von precise aliases", "body": "problem feature solve currently mouse button modifiers introduced values correspondingly correct default righthanded layout lefthanded mode buttons switched os right button value left button besides also righthanded users may reverse remap mouse buttons working code names mouse buttons may lead confusion bugs among developers familiar default righthanded mode target modifiers proposed api look like keep deprecated add aliases", "num": "6877", "d": "10/2017"}, {"title": "\u8bf7\u6559\u4e0b", "body": "\u6211\u7528\u7684\u662f vs code \u7f16\u8f91\u5668 vscode\u7528\u6237\u8bbe\u7f6e \u91cc\u9762\u7684\u914d\u7f6e\u89c4\u5219\u5982\u4e0b \u6211\u7684\u95ee\u9898\u5982\u6807\u9898 \u6211\u8be5\u914d\u7f6e\u90a3\u4e2a\u53c2\u6570 \u8bf7\u6559\u4e0b\u670b\u53cb\u4eec", "num": "6876", "d": "10/2017"}, {"title": "alert possibly fix ssr mismatch production", "body": "problem feature solve currently way receive alerts possibly rerender production concerning ssr vs vdom mismatch critical different browsers handle unexpected ways instance finished trouleshooting issue specific windows rendered vdom tree match ssr rendered html causes white screen chrome browsers able recover mismatch renders fine navigating already rendered vue initial rendering happens specific page discussion forum proposed api look like think bulk code currently lives think initial ssr render need granular flags opt alerts behavior currently nodeenv initial maybe verbose thoughts would warnonssrmismatch recoveronssrmismatch true change behavior understand performance critical open suggestions would willing implement pr", "num": "6874", "d": "10/2017"}, {"title": "typesystem actually works sfc", "body": "version reproduction link steps reproduce clone repo npm npm run dev expected throw compile error actually happening build success sure issue vue ts maybe use wrong way p", "num": "6873", "d": "10/2017"}, {"title": "asset support functional components", "body": "problem feature solve functional components templates allow users improve performance without sacrificing readability ease use however currently support components option limits feature lot limited set use cases proposed api look like simply support components option like nonfunctional components", "num": "6872", "d": "10/2017"}, {"title": "polyfilleventsource added missing eventsource window", "body": "polyfilleventsource added missing eventsource window \u5728ie\u6d4f\u89c8\u5668 \u62a5\u8fd9\u4e2a\u9519", "num": "6871", "d": "10/2017"}, {"title": "tree view inconsistent behavior", "body": "version reproduction link steps reproduce slight modification offical tree view example moved treedata simple json object directly template one longer add new nodes tree expected expected behave way original script provided jsfiddle actually happening put json data directly template tree displays correctly exceptions raised longer add new nodes tree according documentation props modified however modified offical example vuejs website moreover hard imagine meaningful implementation interactive tree structure without modifying props data", "num": "6870", "d": "10/2017"}, {"title": "add ad script code page", "body": "standard popunders code copy paste code near top website body tag head tag traffic sell sent return url end code url must encoded best results highest earnings place code website separately", "num": "6869", "d": "10/2017"}, {"title": "transition appear hook set component level", "body": "version reproduction link steps reproduce click showa showb button see transition hooks fired expected clicking showa showb button appear hooks fired first first time component loaded actually happening transition enter hooks ones fired need feature projects need different animationtransition component first loaded using vuerouter load component put issue vuerouter realized vue issue thanks help", "num": "6868", "d": "10/2017"}, {"title": "lost eventcurrenttarget pass event props", "body": "version reproduction link steps reproduce dispatch event set event props component expected eventcurrenttarget htmlelement actually happening eventcurrenttarget null vue problem", "num": "6867", "d": "10/2017"}, {"title": "ios component issue", "body": "version reproduction link steps reproduce expected actually happening \u5b50\u83dc\u5355\u65e0\u6cd5\u5c55\u5f00 \u6b64\u95ee\u9898\u53ea\u51fa\u73b0\u5728 ios pad \u548c android \u5176\u4ed6\u7248\u672c\u7684\u4e5f\u5b58\u5728\u95ee\u9898", "num": "6866", "d": "10/2017"}, {"title": "vuejs \u4f7f\u7528vhtml\u6709\u65f6\u4e0d\u663e\u793a\u5185\u5bb9", "body": "", "num": "6865", "d": "10/2017"}, {"title": "overwrite element attributes default value", "body": "problem feature solve custom html elements vue overwrites attributes default values one example attribute always set truthy values absolutely makes sense html elements defined html standard custom elements custom elements yet web standard already ways build use experienced issue experimenting custom element tab bar selected tab stored selected attribute find code example code example currently limited chrome safari missing polyfills browsers proposed api look like vue already config setting proposal would attributes set default values elements array approach valid example code jsfiddle would stay output would change selected attribute value", "num": "6864", "d": "10/2017"}, {"title": "transition child event bugs", "body": "version reproduction link steps reproduce focus input click hello expected hello click event call actually happening nothing happen", "num": "6863", "d": "10/2017"}, {"title": "possible mix vue template jsx", "body": "problem feature solve create vue template fixed using switch exclude nt want display thinking using jsx inside vue template make vue template flexible developer code case pass jsx data component base display want example file call template base b base template display c template display base template case import b c pass c b using prop syntax make b need import file much coding need deal c contain coding display b place load coding proposed api look like", "num": "6862", "d": "10/2017"}, {"title": "optimize case conversion behavior props", "body": "problem feature solve props named like changed better proposed api look like kebab case change", "num": "6861", "d": "10/2017"}, {"title": "unit test issues mocking services async data", "body": "issue writing unit test using viewloader may correct place question please move issue inform open issue question full stack overflow", "num": "6859", "d": "10/2017"}, {"title": "removing first last element list rendered component forces complete rerendering items", "body": "version reproduction link steps reproduce vfor list items observe item elements action shifts pops list expected items removed without rerendering item list actually happening whole list rerendered adding new elements works expected triggering several pop shift operations single list splice end start performing splice beginning end respectively triggers rerendering problem", "num": "6857", "d": "10/2017"}, {"title": "vuecomponentoptions lt gt compatible ts strictfunctiontypes", "body": "simplified example nt methods nt matter bear ts interface foo extends vue bar string vuecomponent foocomponent template foocomponenttemplate props bar type string required true vuecomponentoptions amp thistype causes pretty big compilation error goes follows may also caused incorrect migration vue typings though clear correct migration path blog post talks merging documentation correctly declare component conforms interface subclassing", "num": "6855", "d": "10/2017"}, {"title": "elementui \u65e5\u671f\u9009\u62e9\u63a7\u4ef6\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528", "body": "version reproduction link steps reproduce \u9875\u9762\u4e2d\u5982\u679c\u5f15\u7528\u7684\u662f unpkgcomvuedistvuejs \u65e5\u671f\u9009\u62e9\u8303\u56f4\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c \u65e0\u6cd5\u9009\u62e9\u65e5\u671f \u5982\u679c\u5f15\u7528\u7684\u662f unpkgcomvue \u65e5\u671f\u9009\u62e9\u8303\u56f4\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c \u53ef\u4ee5\u9009\u62e9\u65e5\u671f \u9664\u4e86elementui \u5916 \u540c\u65f6\u4f7f\u7528\u4e86iview\u7ec4\u4ef6 \u53d1\u73b0\u91cc\u9762\u7684\u65e5\u671f\u9009\u62e9\u8303\u56f4\u63d2\u4ef6\u4e5f\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c \u56e0\u6b64\u6211\u6000\u7591\u662fvue\u672c\u8eab\u7684bug\u5bfc\u81f4\u7684 expected \u65e5\u671f\u9009\u62e9\u8303\u56f4\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c actually happening \u53ef\u4ee5\u6b63\u5e38\u9009\u62e9\u65e5\u671f\u8303\u56f4", "num": "6854", "d": "10/2017"}, {"title": "transition elelment jump origin unexpected", "body": "version reproduction link steps reproduce click bottom area change list appear disappear isshow true list animated xaxis isshow false list animated xaxis expected isshow true list animated xaxis isshowfalse animated actually happening isshowtrue list animated jumps origin", "num": "6853", "d": "10/2017"}, {"title": "transition elelment jump origin unexpected", "body": "", "num": "6852", "d": "10/2017"}, {"title": "class attribute added functional child component added child component root element", "body": "version reproduction link steps reproduce import functional component add template render function add class attribute functional component eg observe class ignored applied expected class applied functional component root element actually happening class ignored", "num": "6851", "d": "10/2017"}, {"title": "export prop type main types file vuetypesindexdts", "body": "problem feature solve attempting declare type complex objecttype prop component difficult understand without knowing exactly props typing works cast specific prop interface create best way currently ts import vue vue import prop vuetypesoptions interface foobar foo string bar string export default vueextend props foobar object gt foobar proposed api look like would nice expose prop generic type vuetypesoptionsdts default types export simply use ts import vue prop vue boilerplate props foobar object props also extends complex callback types need whenever regular prop types via primitive type constructors nt work create interface cast works", "num": "6850", "d": "10/2017"}, {"title": "component data nt change", "body": "version reproduction link steps reproduce hi guys shopping cart made two components food amp cart inside main items change spect console data exist computed properties data doesnt update expected component data change actually happening component data doesnt change", "num": "6849", "d": "10/2017"}, {"title": "missing vueconstructor typescript typings creating plugins", "body": "version reproduction link steps reproduce try create vue plugin using typescript expected way wonder make workaround expected able define plugin ts would plain js function parameter global vue object well typed actually happening could find possible way declare type vue parameter inside plugin type global vue object vueconstructor exported visible exported vue variable guess one solution simply export vueconstructor type could imported rare cases", "num": "6848", "d": "10/2017"}, {"title": "component data nt change", "body": "hi guys shopping cart made const bus new vue vuecomponent food props menu template methods addtocart item index bus emit a\u00f1adir item index replacespaces cat return catsplit join tolowercase vuecomponent cart template data return items computed productcount objectsize thisitems gt return thisitemslength else return total return created var data sessionstoragegetitem cart new vue el main mounted function document ready function settimeout function foodfilter li datafilterhamburguesasespeciales click two components food amp cart inside main items change spect console data exist computed properties data doesnt update", "num": "6847", "d": "10/2017"}, {"title": "component bundled vmodel von listeners attribute added input event passed value eventually object event", "body": "version reproduction link steps reproduce \u8f93\u5165\u4efb\u610f\u503c\u5f97\u5230\u7684\u662f object event \u5e76\u89c2\u5bdfconsole \u4fee\u6539vue\u7248\u672c\u91cd\u590d\u6b65\u9aa4 \u7136\u540e\u89c2\u5bdfconsole \u7ffb\u8bd1\u6765\u81ea\u8c37\u6b4c enter value get object event watch console modify vue version repeat steps observe console translate google expected input\u7684\u503c\u4e3a\u8f93\u5165\u7684\u503c value input value entered actually happening input\u6807\u7b7e\u5c06input event\u4f20\u9012\u7ed9\u7236\u7ec4\u4ef6 \u5bfc\u81f4value\u4e3a object event input tag passes input event parent component causing value object event although event still passed parent component via input affect final result affect final result", "num": "6846", "d": "10/2017"}, {"title": "vue nt respect existing setters modelclasses", "body": "version reproduction link steps reproduce run attached sample enter value bar see bar changed well enter value bar see bar detached bar expected existing setter bar used actually happening new property bar created", "num": "6845", "d": "10/2017"}, {"title": "", "body": "", "num": "6844", "d": "10/2017"}, {"title": "order unexpected", "body": "version reproduction link steps reproduce please open console print render render render print render render render updated updated updated expected order updated actually happening order updated", "num": "6843", "d": "10/2017"}, {"title": "question slot passed slot", "body": "problem feature solve elcardvue use component encapsulate another component named cardvue proposed api look like slot passed slot support whether consider supporting", "num": "6842", "d": "10/2017"}, {"title": "typescript ca nt infer prop names types contains type prop", "body": "version reproduction link steps reproduce compile code tsc typescript import vue vnode vue const ngcomponent vueextend name ngcomponent props foo type string bar types accepted render h vnode return h div thisfoo clone repro link expected successfully compiled treated string treated actually happening failed compile workaround ts import vue vnode vue vueextend name workaround props foo type string bar gt types accepted render h vnode return h div thisfoo", "num": "6841", "d": "10/2017"}, {"title": "button get focus unexpectedly", "body": "version reproduction link steps reproduce click next button look current focused element click prev button look current focused element expected click next button hidden focused element click prev button hidden focused element actually happening cancel button get focus cancel button get focus key set button problem seems vue reuses button dom nt reset focus state", "num": "6840", "d": "10/2017"}, {"title": "firefox mousewheel event incompatible", "body": "firefox mousewheel event firefox", "num": "6838", "d": "10/2017"}, {"title": "regarding documentation api reference router constructor options", "body": "version reproduction link steps reproduce click provided link right arrow gt right side website nothing redirects routes nt processes pages fact viewing api reference mode base also redirects routes also left arrow lt working fine visit router instance router object right arrow pointing first api reference particular section expected redirect provided source actually happening redirecting routes section mean redirecting routes api reference arrow pointing upwards", "num": "6836", "d": "10/2017"}, {"title": "failed mount component template render function defined", "body": "\u6211\u4f7f\u7528vuecli\u6765\u521d\u59cb\u5316\u4e00\u4e2ademo mount component template render function \u73af\u5883\u63cf\u8ff0 loadingvue loadingjs const loadingcomponent require loadingvue const loading install function vue \u6302\u8f7d\u7ec4\u4ef6 vuecomponent loading loadingcomponent moduleexports loading \u7136\u540e\u6211\u5728mainjs\u4e2d\u5f15\u5165 \u5e76\u5728appvue\u4e2d\u4f7f\u7528\u8fd9\u4e2aloading\u63d2\u4ef6\u62a5failed mount component template render function defined\u9519\u8bef", "num": "6835", "d": "10/2017"}, {"title": "help way embed external js scripts within component", "body": "like embed following script component nuxtjs app since nuxt solution like ask vue community see better way embedding external party js scripts embedding type scipt sort external configurations need add enable work js require mojosignupformsloader function l lstart baseurl uuid xxxxxx lid xxxxxx thanks", "num": "6834", "d": "10/2017"}, {"title": "vue ssr webpack plugin support template syntax filename option", "body": "problem feature solve multiple entry output point webpack plugin option filename nt support template syntac like name id convenient situation proposed api look like new vuessrserverplugin filename name vuessrserverbundlejson", "num": "6831", "d": "10/2017"}, {"title": "clientside rendered virtual dom tree matching serverrendered content", "body": "version reproduction link steps reproduce build docker image based run docker container create webpack run server uses ssr listen expected get output actually happening getting clientside rendered virtual dom tree matching serverrendered content error empty dom want client version make wbuild run got webpack dev server sidenote hot reloads nt work still nt figured kill server rerun make command sorry", "num": "6830", "d": "10/2017"}, {"title": "ref nt work functional components", "body": "version reproduction link steps reproduce open jsfiddle link check console expected child functional component attached give warning development environment attribute set functional component actually happening parent componet empty object similar issues react stateless components functional component actually generate vuecomponent instance instead attaching dom element directly warn error thrown may better choice", "num": "6829", "d": "10/2017"}, {"title": "unicode added href src link chrome", "body": "version reproduction link steps reproduce chrome browser click link inspect link href expected unicode html source browsers firefox ie edge safari link updated issue broke image actually happening link html source vuejs update link add unicode hrefsrc attributes broke link resolve issue correct link without tab line break without vuejs nt problem link containing tab line break working expected either tab line break replaced every browser chrome", "num": "6828", "d": "10/2017"}, {"title": "push shift causes rerender items", "body": "version reproduction link steps reproduce inspect list dev tools click add end button nodes highlithed means updated expected first item dropped new item inserted end list items stay still actually happening items dropped new items inserted first discovered behavior trying create dynamic list moving transiotion top property element moving ok transition applied correctly moving moving elements without trasition went deeper discovered whole list rerendered transition applied", "num": "6827", "d": "10/2017"}, {"title": "vonce within component template makes component instances static", "body": "version reproduction link steps reproduce create component uses within template renders dynamic content render component multiple times different content expected instance component renders associated content actually happening instances component render content seems regression witnessed", "num": "6826", "d": "10/2017"}, {"title": "clientside rendered virtual dom tree matching serverrendered content", "body": "hi ca nt use codesandbox reproduce error try add dependencies gives internal server error manshrugging minimal configuration got place giving troubles mainserverjs js import vue vue import router modulesrouter import app appvue receives context render call returning promise resolution root vue instance export default gt promiseresolve new vue router render h gt h app appvue export default name app routerjs js import vue vue import router vuerouter vueuse router const layout template ciao export default new router routes path name layout component layout npm list grep vue webpackserverconfigjs js const path require path const webpack require webpack const vuessrplugin require vuessrwebpackplugin moduleexports target set node avoid packaging builtins target node entry server entry file default one entry srcmainserverjs output path pathresolve dirname dist publicpath dist filename buildjs outputs nodecompatible modules instead browsercompatible librarytarget module rules test vue loader vueloader options loaders vueloader options go test js loader babelloader options presets env exclude nodemodules test css loader styleloader cssloader test pngjpggifsvg loader fileloader options name name ext hash resolve alias vue vuedistvueesmjs remove devserver block performance hints false avoids bundling external dependencies node load directly nodemodules externals objectkeys require packagejson dependencies devtool sourcemap need put behind production env variable plugins add ssr plugin new vuessrplugin new webpackdefineplugin processenv nodeenv prod new webpackoptimizeuglifyjsplugin sourcemap true compress warnings false new webpackloaderoptionsplugin minimize true get using router renders fine otherwise maybe got deps wrong along error also get anybody know going thanks", "num": "6825", "d": "10/2017"}, {"title": "test vuejs application automatically wait ajax capybara", "body": "problem feature solve following article method called jqueryactive judge whether http request finished condition vuejs similar solution proposed api look like pageevaluatescript vuejsactive zero", "num": "6824", "d": "10/2017"}, {"title": "object\u6a21\u677f\u6570\u636e\u83b7\u53d6\u4e0b\u4e00\u5c42\u65f6\u62a5undefined", "body": "version reproduction link steps reproduce item ordersuccess payflag ordertotal paymoney item ordersuccess paymoney vue warn error render typeerror read property paymoney undefined expected actually happening \u62a5\u9519", "num": "6823", "d": "10/2017"}, {"title": "vif render end tag element dynamically", "body": "version reproduction link steps reproduce refer jsfiddle expected expect second tbody div class scrolldiv actually happening empty table shows", "num": "6822", "d": "10/2017"}, {"title": "ubuntu run error", "body": "created new project laravel follow steps run npm install dependencies correct run npm run dev get error dev varwwwsubdomainsrealhost npm run development development varwwwsubdomainsrealhost crossenv nodeenvdevelopment nodemoduleswebpackbinwebpackjs progress hidemodules confignodemoduleslaravelmixsetupwebpackconfigjs usrbinenv node file directory npm err linux npm err argv usrbinnodejs usrbinnpm run development npm err node npm err npm npm err file sh npm err code elifecycle npm err errno enoent npm err syscall spawn npm err development npm err spawn enoent npm err npm err failed development script crossenv nodeenvdevelopment nodemoduleswebpackbinwebpackjs progress hidemodules confignodemoduleslaravelmixsetupwebpackconfigjs npm err make sure latest version nodejs npm installed npm err likely problem package npm err npm npm err tell author fails system npm err crossenv nodeenvdevelopment nodemoduleswebpackbinwebpackjs progress hidemodules confignodemoduleslaravelmixsetupwebpackconfigjs npm err get information open issue project npm err npm bugs npm err nt available get info via npm err npm owner ls npm err likely additional logging output npm err please include following file support request npm err varwwwsubdomainsrealhostnpmdebuglog npm err linux npm err argv usrbinnodejs usrbinnpm run dev npm err node npm err npm npm err code elifecycle npm err dev npm err exit status npm err npm err failed dev script npm run development npm err make sure latest version nodejs npm installed npm err likely problem package npm err npm npm err tell author fails system npm err npm run development npm err get information open issue project npm err npm bugs npm err nt available get info via npm err npm owner ls npm err likely additional logging output npm err please include following file support request npm err varwwwsubdomainsrealhostnpmdebuglog", "num": "6821", "d": "10/2017"}, {"title": "kind issue closed two vfor renders undefined output", "body": "see bug still using vue verision", "num": "6820", "d": "10/2017"}, {"title": "intermittent net errcontentlengthmismatch amazon", "body": "version reproduction link steps reproduce notice issue nt need sample code create ubuntu server amazon machine access via ssh install nodejs tried vuecli run vue init webpack projecttest install runtime compiler install vuerouter skip eslint installation install karma skip nightwatch run npm install run npm run dev open port inbound rules access public browser expected open example screen actually happening screen wo nt load title gon na load console appear error net errcontentlengthmismatch error always appears seconds get request following message always appears unhandledpromiserejectionwarning unhandled promise rejection rejection id error exited code deprecationwarning unhandled promise rejections deprecated future promise rejections handled terminate nodejs process nonzero exit code tried vue vue issue tried templates notice sometimes error occurs run npm run dev sometimes page loads error occurs", "num": "6818", "d": "10/2017"}, {"title": "add warning ambiguous usage element", "body": "version reproduction link steps reproduce rendering anything rendering correctly expected vfor work slotscope given element actually happening visible fiddle rendering anything right works wrapped inside template tag", "num": "6817", "d": "10/2017"}, {"title": "inconsistent state possible middleclick refresh icon firefox", "body": "version reproduction link steps reproduce firefox check checkbox middleclick refresh icon toolbar expected consistent state either unchecked false checked true actually happening state checked false chrome resulting state unchecked false firefox less resulting state checked true happens inputs except textarea text ones number inputs result consistent state could nt make jsfiddle firefox nt attempt restore input state midlleclick refresh jsfiddle", "num": "6816", "d": "10/2017"}, {"title": "missing default export using systemjs requirejs makes vue unusable typescript", "body": "version reproduction link steps reproduce clone repo npm install run gulp navigate appropriate address browser default note console output project configured use systemjs default switch requirejs modifying indexhtml srcloginlogints uncommenting requirejs code commenting systemjs code expected errors console defined actually happening systemjs firefox developer edition error class heritage object null evaluating loading appbootstrapjs requirejs firefox developer edition typeerror class heritage object null bug appeared upgrading major project vue vue use webpack project want switch", "num": "6815", "d": "10/2017"}, {"title": "incorrect selection displayed using nonunique option values", "body": "version reproduction link steps reproduce provided jsfiddle choose option three dropdown selected option displayed instead shows one expected expected option selected would displayed using unique key option effect either actually happening showing option selected instead choosing another option value", "num": "6814", "d": "10/2017"}, {"title": "vshow firing late", "body": "version reproduction link steps reproduce go lt wide test list get hidden go back forth threshold make list flash flashes hidden vshow css make list vertical seems vshow firing late see comparison get list flash larger size expected list hidden lt actually happening list flashes vertical split second disappearing noticed updating hopefully quick fix using behavior menu bar make screen smaller janky", "num": "6813", "d": "10/2017"}, {"title": "change event nt triggered input type file uc browser android version", "body": "version reproduction link steps reproduce open uc browser android click tap custom input file expected popup menu contain gallery camera showed like expected let select file take photo file selected handler toggle class custom input render name selected filephoto input label actually happening file selected photo taken change event triggered works fine uc browser ios problem android version uc browser user jquery method vue", "num": "6812", "d": "10/2017"}, {"title": "proposal template inheritance using slots mechanism", "body": "problem feature solve within large application makes heavy use inheritance mixins lack template inheritance causes much jumping hoops rationale eloquently written captures gist wo nt repeat proposed api look like proposal solving issue simply extend upon existing slots mechanism shamelessly copypasting simplesmiler example issue html default header html stuff pronounced header goes footer added child default slot thus existing composition rules preserved feels natural vue developers people used templates blockbased inheritance like django pug etc rules empty attribute used singlefile components must given value extending dom element course allow multiple root elements", "num": "6811", "d": "10/2017"}, {"title": "autoclosed issue", "body": "edited", "num": "6810", "d": "10/2017"}, {"title": "undefined text vfor array empty", "body": "version reproduction link steps reproduce use vfor array empty element sibling basic text result vfor undefined expected nothing actually happening undefined text", "num": "6809", "d": "10/2017"}, {"title": "running template empty array inserts dom regression", "body": "version reproduction link steps reproduce run demo expected see nothing versions actually happening injected dom string", "num": "6808", "d": "10/2017"}, {"title": "vfor empty array prints string undefined", "body": "version reproduction link steps reproduce use vfor iterate empty array expected nothing render actually happening renders string undefined", "num": "6807", "d": "10/2017"}, {"title": "iterating empty array vfor printing undefined element used", "body": "version reproduction link steps reproduce reproduced automatically via provided codesandboxio link try remove div element fill array least one element remove undefined expected nothing printed actually happening undefined printed new fine", "num": "6806", "d": "10/2017"}, {"title": "input encapsulated components parent component monitors change event trigger time prematurely", "body": "version reproduction link steps reproduce \u5f53checkbox\u88ab\u5c01\u88c5\u6210\u7ec4\u4ef6\u540e \u5e76\u4f7f\u7528von listeners \u7ed1\u5b9a\u76d1\u542c\u4e8b\u4ef6\u65f6 \u7236\u7ec4\u4ef6\u5bf9\u5176\u76d1\u542conchange\u4e8b\u4ef6 \u89e6\u53d1\u65f6\u673a\u65e9\u4e8echeckbox\u7684\u503c\u4fee\u6539\u4e4b\u524d \u5bfc\u81f4\u83b7\u53d6\u4e0d\u5230\u6b63\u786e\u7684\u503c \u53ea\u80fd\u5bf9\u5176\u76d1\u542c\u539f\u751fchange\u4e8b\u4ef6 \u6216\u8005\u4f7f\u7528nexttick\u6765\u83b7\u53d6\u6700\u65b0\u7684\u503c \u6ca1\u6709\u51fa\u73b0 \u53ef\u4ee5\u4fee\u6539\u901a\u8fc7\u4fee\u6539vue\u7248\u672c\u5f97\u5230\u91cd\u73b0 \u6765\u81ea\u8c37\u6b4c\u7ffb\u8bd1 checkbox encapsulated component uses von listeners binding listening events parent component listens onchange event triggers time value checkbox modified resulting lack correct value listen original change event use nexttick get latest value situation appear modified modifying vue version reproduced google translate expected \u7236\u7ea7\u7ec4\u4ef6onchange\u5e94\u8be5\u5728value\u6b63\u786e\u5f97\u5230\u4fee\u6539\u4e4b\u540e\u89e6\u53d1 parent component onchange triggered value modified correctly actually happening \u7236\u7ea7\u7ec4\u4ef6onchange\u4e8b\u4ef6\u5728value\u4fee\u6539\u4e4b\u524d\u5c31\u88ab\u89e6\u53d1\u5bfc\u81f4\u65e0\u6cd5\u62ff\u5230\u6b63\u786e\u503c \u53ea\u80fd\u901a\u8fc7nexttick\u83b7\u53d6 parent component onchange event triggered value modified resulting inability get correct value obtained nexttick \u5bfc\u81f4\u4e24\u4e2a\u7248\u672c\u65e0\u6cd5\u517c\u5bb9 situation occur resulting two versions compatible", "num": "6805", "d": "10/2017"}, {"title": "vfor renders undefined empty another vfor loop", "body": "version reproduction link steps reproduce expected render actually happening result renders undefined undefined", "num": "6804", "d": "10/2017"}, {"title": "unexpected failure vmodel compiled codes", "body": "version reproduction link steps reproduce click radio element console output change vue version click radio voila console output expected vue handle event input element actually happening vue dose handle event part modified compiled code vue elementui radiobutton component seems compilation vmodel component changed vue vue consider simplified template output event name changes nt know feature template correctly written", "num": "6803", "d": "10/2017"}, {"title": "", "body": "version reproduction link steps reproduce expected actually happening \u4f46\u662f\u5374\u6e32\u67d3\u4e86undefined", "num": "6801", "d": "10/2017"}, {"title": "dynamic input type works property called type", "body": "version reproduction link steps reproduce use dynamic type input property called get warning vue warn property method type defined instance referenced render make sure property reactive either data option classbased components initializing property see found wo nt work switch normal type like text checkbox radio button special types else branch click button click switch input checkbox try checking unchecking box model value change calling property works model value change expected dynamic input type work regardless property name actually happening dynamic input type works property called", "num": "6800", "d": "10/2017"}, {"title": "transition transform worked styleleft changed transitiongroup", "body": "version reproduction link steps reproduce click three divs styleleft changed transitionduration worked transition left transition transform worked transition opacity right work transition transform expected transition transform work actually happening transition transform works", "num": "6799", "d": "10/2017"}, {"title": "breaks functional components renders nested empty array", "body": "version reproduction link steps reproduce jsx functional component gets transpiled working fine vue renders undefined used without children transformation details comparisons inside repro link second thought maybe pass empty array children jsx element used without children runtime performance slightly better without empty array expected renders nothing actually happening renders undefined vue working fine", "num": "6798", "d": "10/2017"}, {"title": "vfor loop empty data returning undefined text", "body": "version reproduction link steps reproduce cek reproduction link cars data vfor working fine cars empty vfor printing undefined text expected nothing displayed actually happening display undefined text", "num": "6797", "d": "10/2017"}, {"title": "vfor shows undefined empty lists", "body": "version reproduction link steps reproduce list template like todo todos moment case empty list fallback li element shown update empty array renders undefined like expected render undefined empty array actually happening renders undefined hope bug quite lot cases like app thx", "num": "6793", "d": "10/2017"}, {"title": "animation transitiongroup changes position working", "body": "version reproduction link steps reproduce see jsfiddle link expected clicking link actions column row change position adjacent row using animation taking seconds actually happening row changes position immediate working", "num": "6792", "d": "10/2017"}, {"title": "\u5e0c\u671bprops\u4f20\u503c\u80fd\u591f\u4f7f\u7528\u6269\u5c55\u8fd0\u7b97\u7b26", "body": "problem feature solve hello\u7ec4\u4ef6\u63a5\u53d7data\u5c5e\u6027 data return b b hello\u7ec4\u4ef6data\u5c5e\u6027\u6700\u7ec8\u7ec4\u5408\u6210\u7684\u5bf9\u8c61\u662f b e", "num": "6791", "d": "10/2017"}, {"title": "two vfor template renders unexpected output", "body": "version reproduction link steps reproduce see jsfiddle link expected renders empty output actually happening renders undefined undefined", "num": "6790", "d": "10/2017"}, {"title": "page sometimes rendering sometimes rendering", "body": "version reproduction link steps reproduce click tab sometimes vfor render api response data sometimes render data expected click tab sometimes vfor render api response data sometimes render data actually happening click tab sometimes vfor render api response data sometimes render data", "num": "6789", "d": "10/2017"}, {"title": "computed property nt update data member updates", "body": "version reproduction link steps reproduce run jsfiddle see expected behavior comment return null statement expected computed property recalculated data member updated regular interval actually happening computed property recalculated", "num": "6788", "d": "10/2017"}, {"title": "supply props validator second argument", "body": "problem feature solve right props validated based value unable take props consideration access props object could complex validation example imagine component prop least one props must defined currently logic would placed component lifecycle hooks render function would like ability keep within functions think appropriate place logic proposed api look like", "num": "6787", "d": "10/2017"}, {"title": "click event fires twice", "body": "hi everyone bit trouble using axios vuejs using quasar framework making simple ecommerce website button user opens product page allows user insert product cart user clicks button want execute method however facing problem data gets inserted twice first row gets null second row get correct see image sure something wrong vuejs axios using postman sending request directly file data gets inserted correctly anyone help happening", "num": "6786", "d": "10/2017"}, {"title": "sidebar component changes order dom tree specific situation", "body": "appvue layout becomes child current view also happens open app url views way found solve problem wrap whole layout router view components working large app many views nt feel would great solution", "num": "6785", "d": "10/2017"}, {"title": "vue vfor render array working", "body": "version reproduction link expected page sometimes rendering sometimes rendering help source code getlist function main html var getdataasync apijoinus amp categoryid thiscategoryid get null function data datastate thisdatajoinsplice thisdatajoin thisdatajoinconcat datadata thisdatajoin datadata nexttick function main removeclass gaodu else alert \u6570\u636e\u8bf7\u6c42\u5931\u8d25", "num": "6784", "d": "10/2017"}, {"title": "\u70ed\u90e8\u7f72\u5f00\u53d1\u60c5\u51b5\u4e0b \u5f53\u4ec5\u4ec5\u8c03\u6574vue\u6587\u4ef6template\u4e2d\u76f8\u90bb\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578bvue\u7ec4\u4ef6\u4f4d\u7f6e\u65f6 vue\u8fd0\u884c\u65f6\u5bf9\u8c61vuecomponent\u7684\u987a\u5e8f\u5e76\u672a\u540c\u6b65\u8c03\u6574", "body": "version reproduction link steps reproduce \u4f8b\u5982 \u4fdd\u5b58\u540e \u9875\u9762\u663e\u793a\u6b63\u5e38 \u4f46\u662f\u8f93\u51fa\u8fd0\u884c\u65f6vue\u5bf9\u8c61\u65f6 vuecompoent\u987a\u5e8f\u672a\u53d1\u751f\u6539\u53d8 children children \u5907\u6ce8 \u5f53\u540c\u7c7b\u578bvue\u7ec4\u4ef6\u6807\u7b7e\u8c03\u6574\u4f4d\u7f6e\u65f6\u5220\u9664 \u65b0\u589e \u7236\u5b50\u5173\u7cfb\u8c03\u6574\u65f6 vuecomponent\u7684\u6570\u636e\u65f6\u5bf9\u5e94\u540c\u6b65\u7684 expected \u70ed\u90e8\u7f72\u5f00\u53d1\u60c5\u51b5\u4e0b template\u4e2d\u76f8\u90bb\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578bvue\u7ec4\u4ef6\u4f4d\u7f6e\u65f6 \u8fd0\u884c\u65f6vuecompoent\u7684\u4f4d\u7f6e\u4fe1\u606f\u53ef\u4ee5\u5bf9\u5e94\u6539\u53d8 actually happening \u70ed\u90e8\u7f72\u5f00\u53d1\u60c5\u51b5\u4e0b template\u4e2d\u76f8\u90bb\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578bvue\u7ec4\u4ef6\u4f4d\u7f6e\u65f6 \u8fd0\u884c\u65f6vuecompoent\u7684\u4f4d\u7f6e\u4fe1\u606f\u672a\u53d1\u751f\u6539\u53d8", "num": "6783", "d": "10/2017"}, {"title": "\u9012\u5f52\u7ec4\u4ef6\u4e2d\u53d8\u91cf\u4e0d\u5171\u4eab", "body": "version reproduction link steps reproduce \u70b9\u51fb \u548c expected actually happening \u6bcf\u4e2a\u5c42\u7ea7\u6709\u5355\u72ecactiveid", "num": "6780", "d": "10/2017"}, {"title": "view changed modern data changed", "body": "version reproduction link steps reproduce change price keep four decimal work normal debugger find modern data changed work input try use vm forceupdate work expected input actually happening change work", "num": "6779", "d": "10/2017"}, {"title": "ssr rendertostring called without err amp sourcemaps used stack traces lazyloaded components", "body": "version reproduction link steps reproduce first thank amazing work vue especially ssr issue rendering component server ssr using asynchronous lazyloaded components error lazyloaded component called error instead error gets logged console importantly sourcemaps used making error difficult debug repro clone repo curl look notice expected importing synchronously running curl see following output synchronous stdoutstderr found srcappvue http output internal server error xpoweredby express date fri oct gmt connection keepalive contentlength referenceerror defined moduleexportswebpackexportsa moduleexportswebpackexportsa vuecomponentdata getdata initdata initstate vuecomponentvueinit new vuecomponent createcomponentinstanceforvnode rendercomponentinner expect notice status code meaning called stack trace uses source maps clearly show error coming actually happening hand importing asynchronously uncommenting running curl see following output async stdoutstderr found srcappvue vueserverrenderer error rendering async component referenceerror defined exportsmoduleswebpackexportsa exportsmoduleswebpackexportsa vuecomponentdata getdata initdata initstate vuecomponentvueinit new vuecomponent createcomponentinstanceforvnode rendercomponentinner http output ok xpoweredby express date fri oct gmt connection keepalive contentlength notice status code meaning called without stack trace use source maps difficult debug", "num": "6778", "d": "10/2017"}, {"title": "module build failed", "body": "srcappvue bytes built failed error hidden modules error srcappvue module build failed syntaxerror unexpected token exportsruninthiscontext modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require object modulecompile objectmoduleextensionsjs srcmainjs multi webpack devserverclient webpackhotdevserver srcmainjs", "num": "6777", "d": "10/2017"}, {"title": "app wide component plugin", "body": "version reproduction link steps reproduce minimal reproduction link expected component functionality accessible appwide actually happening methods get called executed functionality rely data goal improve documentation working examples setup plugins recommended install procedures common gotchas like explained features vue guides correctly access component functionality globally", "num": "6776", "d": "10/2017"}, {"title": "performance issue cpu", "body": "version reproduction link steps reproduce open resource monitor see cpu usage open chrome browsers performance issues chrome worst go url first issue page idle process eat cpu normal scroll list create larger list might vfor issue cpu ticks records expected cpu chill actually happening cpu lot work use admin site example since cpu usage issues reproduced projectmaking thing vue related difference project multiple updates going cpu sometimes hitting chrome edge firefox still seems high using latest ssd ram computer bottleneck", "num": "6775", "d": "10/2017"}, {"title": "setsmapsweaksetsweakmaps collections reactive", "body": "version reproduction link steps reproduce create computed value based setmapweaksetweakmap update collection computed value updated expected expect view updated collection update actually happening view updated mistaken development done wrap arrays methods pop push done methods aforementioned collections", "num": "6774", "d": "10/2017"}, {"title": "", "body": "version reproduction link steps reproduce \u4ece\u9875\u9762 home \u8df3\u5230\u53e6\u4e00\u4e2a\u9875\u9762 \u9700\u8981\u767b\u5f55\u5e76 replace \u8f6c\u8df3\u5230 login\u53ea\u5b9a\u4e49\u4e86beforeenter\u6765\u8f6c\u8df3\u5230\u53e6\u4e00\u4e2a\u9875\u9762 \u7136\u540e\u5faa\u73af\u5230\u6b65\u9aa4 expected \u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c actually happening", "num": "6773", "d": "10/2017"}, {"title": "ca nt use npm install vuetemplatecompiler report error", "body": "version reproduction link steps reproduce use npm install vuetemplatecompiler callback errorand ca nt install plugins error info silly fetchpackagemetadata sum size noattac silly fetchpackagemetadata verbose stack syntaxerror unexpected end input verbose stack sum size noattac expected install vuetemplatecompiler actually happening error info silly fetchpackagemetadata sum size noattac silly fetchpackagemetadata verbose stack syntaxerror unexpected end input verbose stack sum size noattac node npm", "num": "6772", "d": "10/2017"}, {"title": "checkexpression include emessage error output", "body": "version reproduction link steps reproduce open browser console run inspect output warning message says expression invalid invalid dig way checkexpression order see actual parsing exception give clue add emessage catch warning output also vs eat end message template long maybe put template error message expected descriptive error messaging help resolve issue actually happening pointing problem problem case message nt helpful nt realize first put singlequotes around particular class name example docs missed could good call extra bit", "num": "6771", "d": "10/2017"}, {"title": "checkexpression include emessage error output", "body": "invalid expression could nt see wrong ended get way checkexpression order see actual parsing exception give clue", "num": "6770", "d": "10/2017"}, {"title": "warning string property value", "body": "version reproduction link steps reproduce run jsfiddle expected sure exactly think either console warning using default value property would make sense actually happening vue silently renders nothing inside component take stab fixing determined behavior indeed bug", "num": "6768", "d": "10/2017"}, {"title": "mixin inerhitance inconsistent used extends", "body": "version reproduction link steps reproduce extend component add mixin expected rule inerhitance component extended component mixin actually happening actual inerhitance component mixin clearly documented therefore bit missleading sure wether technically count bug least inconsistent behavoir", "num": "6767", "d": "10/2017"}, {"title": "", "body": "version reproduction link steps reproduce expected actually happening rendertostring\u7684\u56de\u8c03\u51fd\u6570\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u65e0\u5185\u5bb9", "num": "6766", "d": "10/2017"}, {"title": "way inspect scoped slot value", "body": "problem feature solve nt know properties scoped slot log console current approach proposed api look like add function like print value template", "num": "6765", "d": "10/2017"}, {"title": "element id encapsulation feature request", "body": "hi first really like vue minor gripes component system feel encapsulating flexible vue dragdrop lib platform components act like html imports web components example nt proper code general illustration would cool could something like way could bootstrap external library within component without side effects", "num": "6762", "d": "10/2017"}, {"title": "customize server state script tag", "body": "problem feature solve renderstate method generates tag context state injected client consumption hydration configurable via options way customize tag targeting purposes would like able remove tag dom client hydration would hacky find select node without ability define attribute similar proposing new option append attribute tag called new options object currently proposed api look like js contextrenderstate scriptkey vuestate gt window lt strong gt initialstate lt strong gt later client code possible", "num": "6761", "d": "10/2017"}, {"title": "memory leak keepalive", "body": "version reproduction link steps reproduce switch foo home link several count always grow expected vuecomponent count stable actually happening vuecomponent count always grow switch time switch times switch times component big chrome memory enough thank reading", "num": "6759", "d": "10/2017"}, {"title": "\u4f60\u786e\u5b9a\u8fd9\u4e48\u5199js\u6ca1\u6709\u9519\u8bef", "body": "version reproduction link steps reproduce \u8fd9\u4e48\u5199\u6cd5\u662fts\u624d\u6709\u7684 \u800c\u4e14import\u662f\u9519\u8bef\u7684 expected \u8fd9\u4e48\u5199\u6cd5\u662fts\u624d\u6709\u7684 \u800c\u4e14import\u662f\u9519\u8bef\u7684 actually happening \u8fd9\u4e48\u5199\u6cd5\u662fts\u624d\u6709\u7684 \u800c\u4e14import\u662f\u9519\u8bef\u7684 \u8fd9\u4e48\u5199\u6cd5\u662fts\u624d\u6709\u7684 \u800c\u4e14import\u662f\u9519\u8bef\u7684", "num": "6757", "d": "10/2017"}, {"title": "\u5fae\u8f6f\u5df2\u7ecf\u51fa\u4e86\u4e00\u4e2avue", "body": "version reproduction link steps reproduce expected vuedts\u6ca1\u6709\u4f7f\u7528\u9ed8\u8ba4\u5bfc\u51fa actually happening \u6ca1\u6709\u4f7f\u7528\u9ed8\u8ba4\u5bfc\u51fa \u662f\u5426\u8003\u8651\u4fee\u6539\u4e3a\u5fae\u8f6f\u63a8\u8350\u7684", "num": "6756", "d": "10/2017"}, {"title": "wo shi xin ren", "body": "", "num": "6755", "d": "10/2017"}, {"title": "improve docs lodash throttledebounce watch", "body": "problem feature solve components may need render less often state updates example may realtime chart accompanied numerical display latest value update less often chart may multiple components page docs shows debounce method improperly try creating simple timer component amp put multiple page race conditions forgot wrap data function follow examples docs components interfere one timer updates per second instead timers updating every second proposed api look like change docs show proper usage debouncing vuejs method wrapping function like data object multiple components page longer interfere watch method call intuitive amp docs instruct create app race conditions instead ideally could use sort syntactic sugar something rxjs like instead lodash amp thunks verbose amp clumsy furthermore user put throttled method computed property instead methods property also documented amp intuitive", "num": "6754", "d": "10/2017"}, {"title": "make custom directive use inline handlers", "body": "problem feature solve like make directive like like make vmycustomdirective run say hi vue vmycustomdirective get result say hi function proposed api look like vue directive support inlinehandler function binding", "num": "6753", "d": "10/2017"}, {"title": "dynamic import native es modules async components causes error", "body": "version reproduction link steps reproduce must use browser dynamic module import supported eg latest safari chrome canary expected async component load autoresolve module actually happening uncaught error add property ctor object extensible es modules autoresolved used dynamic components eg however works module transpiled es commonjs since checks flag work native es modules flag present agree could easy put pr remove check line resolveasynccomponentjs would solve issue", "num": "6751", "d": "10/2017"}, {"title": "get data children objects", "body": "form next params next model try get n children see response works root category like try get child like null get data children thanks", "num": "6748", "d": "10/2017"}, {"title": "avoid using javascript keyword property name function expression", "body": "preview shows exhibitors inventory user leaflet con agg con agg place error vueloaderlibtemplatecompiler id hasscoped true transformtorequire video src source src img src image xlink href vueloaderlibselectorjs typetemplate amp srccomponentsshowsshowdetailsvue emitted value instead instance error error compiling template showname markerlatlnglat markerlatlnglng markername avoid using javascript keyword property name function expression options function return b valid also none pass either", "num": "6747", "d": "10/2017"}, {"title": "getting value rails link tag vue", "body": "problem feature solve creating dropdown menu vue rails need use value whats returned something like urlfor backendjobalarmspath course available vue whats best way get value vue haml vue instance proposed api look like api", "num": "6746", "d": "10/2017"}, {"title": "vbind style woking properly", "body": "vbind style working properly bind dynamic variable example code", "num": "6744", "d": "10/2017"}, {"title": "using methods mutates reactive properties dom may cause infinite loops", "body": "version reproduction link steps reproduce create method updates counter inside use dynamically create html layouts example calling inside display specific class depending state expected vue smart enough detect behavior methods actually happening every time counter updates looks like vue rerender component working intended like know best practice alternative kind issues", "num": "6743", "d": "10/2017"}, {"title": "export flow types dist file", "body": "problem feature solve people want use vue flow types import vue npm module proposed api look like would include flow directory npm dist files happy make pr", "num": "6741", "d": "10/2017"}, {"title": "data method components called", "body": "problem feature solve computed value computed called parameter allows us write code like ca nt done data method due called proposed api look like", "num": "6739", "d": "10/2017"}, {"title": "select vmodel addeventlistener change firing", "body": "version reproduction link steps reproduce hit run expected expect addeventlistener change function triggered update data value actually happening triggering select change event added event listener select element expect change event fire data vmodel bound changes came across package built advanced select dropdown slimselectjscom event listener attached main select element would extremely easy integration people added vmodel select using instead write code change handlers vuejs expect trigger change inputs let reactivity system know somethings changed curious nt way around thanks keep good job", "num": "6738", "d": "10/2017"}, {"title": "help drupal cms consider vuejs core", "body": "problem feature solve problemmotivation drupalcon vienna dries drupal cms founder proposed new strategic initiative test research admin ux could improved using javascript framework first step choose javascript framework used part research proposed api look like proposed resolution drupalcon vienna core committers javascript subsystem maintainers project lead well developers realworld experience building decoupled applications using drupal api agreed adding javascript framework drupal core good idea need continue researching making final decision want sufficient realuse experience make final decision prior development period additionally decided react would preferred solution proposal use react building drupal administrative uis however strong opinion users developers vuejs meets criteria would better option library seem debate issue alternative approach meeting requirements please join discussion help drupal consider vuejs propose show support feedback regarding react drupal vue drupal core would make vuejs much stronger precaucious note vue maintainers please comment discussions meaningful argument contribute nt clog useless vote vue comments something similar wo nt help use way intend critizise react factbased civil manner argue vue rather react", "num": "6737", "d": "10/2017"}, {"title": "error build", "body": "version reproduction link steps reproduce cli expected expected vue build without errors actually happening build process exits incomplete error error seems occur css optimization process dev server run expected vuecli version", "num": "6733", "d": "10/2017"}, {"title": "make directives available components within render tree", "body": "problem feature solve directive relies piece user data eg language server side rendering need able create new directive per request javascript const gettranslatedirective lang gt bind access lang update access lang const translate gettranslatedirective gt parsedlangheaderlanguage problem sets translate directive globally across reqeusts vuedirective translate translate however problem call vuedirective translate translate changes translate directive across requests proposed api look like needed way make directives available component children components js const gettranslatedirective lang gt bind access lang update access lang const translate gettranslatedirective gt parsedlangheaderlanguage new vue directives translate module translate provide true makes directive available component children", "num": "6732", "d": "10/2017"}, {"title": "watcher makes original object reactive", "body": "version reproduction link steps reproduce may related js data return somedata id id id watch trigger set emptydata thissomedata methods setemptydata parameter set thisemptydata id parameter set data existing data source watcher vues method mutate set data original data used inside watcher get mutated expected set data mutated actually happening originally newly set data mutated cloning watcher helps prevent thought safe side use know vue ca nt detect propertyarray index changesadditions nt addchange propertyarray index original data", "num": "6728", "d": "10/2017"}, {"title": "syntax check using webpack js ts singlefile component", "body": "version reproduction link simple scenario really working show mean steps reproduce parent child components child emiting lets say delete event misstype parent view something like expected error bad syntax actually happening compiles correctly error warning", "num": "6727", "d": "10/2017"}, {"title": "plugin global property used computed", "body": "version reproduction link steps reproduce define global property custom plugin define instance property reads data global property load plugin application declare computed property reads data plugin instance propety create application change global property watch computed property expected computed property result new value actually happening computed property nt change vue also template rerender", "num": "6726", "d": "10/2017"}, {"body": "browser escaping passing attribute add see looks like escaped twice", "d": "10/2017"}, {"body": "like question recommend ask forum discord server happening change computed property clone prop encourage take look need modify original variable make change", "d": "10/2017"}, {"body": "case reason clone occurring thisitem coming vuex nt want mutate data outside store handle situation also confusing think clone create new variable ca nt use separately original variable", "d": "10/2017"}, {"body": "probably want use computed setter like", "d": "10/2017"}, {"body": "already name components namespace generate though achievable userland plugin checks nested objects transforms property hook keep mind libs already namespace components example vuetify", "d": "10/2017"}, {"body": "posva vuetify \u7684 thank feasible way indeed supported basic use namespace nt notice thank hint mean libs already namespace components example named namespace like namesapce said means name \u4e0d\u8fc7\u4f60\u8bf4\u7684 \u591a\u6570\u5e93\u5df2\u7ecf\u7ed9\u5b83\u4eec\u7684\u7ec4\u4ef6\u547d\u540d\u8fc7\u4e86 could transforms property hook could find property origin component object already extended instanced way understand preprocess component object extends matter hook \u5728 thank much", "d": "10/2017"}, {"body": "duplicate personally think pipes become part js could adapt syntax pipe syntax widely known shell", "d": "10/2017"}, {"body": "posva \u548c\u95ee\u9898\u5e16 \u5185\u5bb9\u91cd\u590d js slightlysmilingface shell thank sorry open duplicate issue think use necessary moment", "d": "10/2017"}, {"body": "fyi pipeline operator proposa stage l", "d": "10/2017"}, {"body": "fnlctrl feel comment full sense humor xd", "d": "10/2017"}, {"body": "unfortunately unrelated vue however add file something like", "d": "10/2017"}, {"body": "try really want", "d": "10/2017"}, {"body": "javoski thanks new vue may ask difference two ways", "d": "10/2017"}, {"body": "workaround default vue call method passing pass function instead calling", "d": "10/2017"}, {"body": "think error thrown", "d": "10/2017"}, {"body": "nothing template compile malformed ca nt magically make syntax errors right also leads another point strongly recommend using dynamicusergenerated content part template security bad practice lead xss", "d": "10/2017"}, {"body": "fair enough thought maybe error could contained element containing error could skipped create warning rather throwing uncaught error clarify xss content app generated cms accessible loggedin editors suppose constitutes vulnerability presently components registered underneath global component decision made first building site learning vue suppose could decoupled registered separately thanks prompt reply", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "thanks showcasing focus issue still problem refocusing arbitrary elements every dom update could expensive probably many edge cases problem comes fact elements rerendered instead actually changed nt actually see issue repro focused element disappears want focus first one manually", "d": "10/2017"}, {"body": "yeah exactly posva possible make work pretty decent imagine use external library self maybe settimeout nexttick case vuevirtualscroll handling updating dom nt callback update case ca nt sure safe focus correct element even would probably need done nexttick thus increasing latency desired functionality pressing key focus next element see example tries set focus first element played around issue quite bit nt gotten work without major timing issues example imagine holding key constantly focusing next element maybe scrolling scrolling last visible element focused case timing issues sometimes make style focused element scroll position sync result chunky experience compare experience virtual scrollers made using frameworks like react angular notice impossible achieve get around using focus removes built functionality one would need reimplement agree root cause elements rerendered edit main problem illustrated flow determine item selected remove items frontafter put focus element set correct style elements beforeafter removed complete rerender triggered focus lost put focus element looking flow could guess focus updated style elements would run tick rerendering occur ticks later could big problem want style focus synchronized example", "d": "10/2017"}, {"body": "please nt reopen issue clearly marked duplicate known issue", "d": "10/2017"}, {"body": "ones publishing nuget package think contact guy nt know anything end automate nt know package manager net took account js packages well", "d": "10/2017"}, {"body": "vue officially support nuget repository", "d": "10/2017"}, {"body": "managed party developer", "d": "10/2017"}, {"body": "could please ask update nuget packages last versions", "d": "10/2017"}, {"body": "wait someone else dont n account probably one see link contact publisher mon oct notifications githubcom wrote could please ask update nuget packages last versions receiving commented reply email directly view github mute thread gt eduardo san martin morote", "d": "10/2017"}, {"body": "ok thank suggestion create account send email thought keeping vue js ts versions date popular repositories part vue team work someone else reason wrote forum", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "vue issue pressing enter issue submit event trigger next button event seems implicitly assumes without declaring problem resolved demo problem without vue", "d": "10/2017"}, {"body": "linusborg thank", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "please use forumvuejsorg chatvuejsorg questions", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "wjtgithub case", "d": "10/2017"}, {"body": "already fixed released soon", "d": "10/2017"}, {"body": "reply soon efficiently thx", "d": "10/2017"}, {"body": "missing reproduction", "d": "10/2017"}, {"body": "currently capture errors following render functions watcher callbacks lifecycle hooks component event handlers dom event handlers currently included probably", "d": "10/2017"}, {"body": "vue html works continuous whitespaces displayed single whitespace probably need learn tags", "d": "10/2017"}, {"body": "hi evan thanks answer however fact due vue html see fiddle provided comment vue instantiation output code displayed indentations also worth mentioning happens even set vpre container span element understand vpre tell vue ignore element children test fiddle well", "d": "10/2017"}, {"body": "talking html pre tags vpre", "d": "10/2017"}, {"body": "seems arbitrary pointless limitation firefox side think makes error messages less useful long warnings also pretty rare suggest debug using different browser", "d": "10/2017"}, {"body": "see example nt come correctly forgot wrap code blocks suggest leaving code output putting actual message start", "d": "10/2017"}, {"body": "please find attached reproduction folder run local server using something like python simplehttpserver view device distzip", "d": "10/2017"}, {"body": "likely missing promise polyfill sat oct pm imran nazir notifications githubcom wrote please find attached reproduction folder run local server using something like python simplehttpserver view device distzip receiving subscribed thread reply email directly view github mute thread", "d": "10/2017"}, {"body": "hi evan many thanks responding response reply added tag closing tag neither effect repo looking actually seems vue dev dependency seems template built older browsers mind users likely latest phones important least backward compatibility please advise many thanks responding", "d": "10/2017"}, {"body": "reproduce problem minimal jsfiddle html page dependencies packages vue please", "d": "10/2017"}, {"body": "note self older browsers need babelpolyfill add features window", "d": "10/2017"}, {"body": "need quote key names javascript also learn actually make repro nt lazy", "d": "10/2017"}, {"body": "\u8fd9\u4e2a\u662f\u56e0\u4e3a\u540c\u4e00\u7ec4\u4ef6\u5728 flip flip flip loading", "d": "10/2017"}, {"body": "changing condition specific event js fixed version vueprototype function event string array fn function component const vm component argumentslength vmevents objectcreate null return vm array events arrayisarray event let l eventlength lt l event fn return vm specific event const cbs vmevents event cbs return vm fn vmevents event null return vm js current version vueprototype function event fn var", "d": "10/2017"}, {"body": "thanks nice description analysis chengkang submitted passing test", "d": "10/2017"}, {"body": "supported future versions see nt think support arbitrary arraylike objects line actual object vs arraylike blurry stick arrayisarray case support array subclasses also since subclassing array feature likely implement reimplement reactivity system proxies", "d": "10/2017"}, {"body": "posva thanks reference good know looking address point future needed addressed sooner rather later forked project applied solution view like test cases passing continue usage project interest taking contribution happy make btw one test cases failing even made changes test transition outin async component resolve leave complete fyi anyone finding wanting use workaround vue team ready introduce feature created branch forked repo includes built files changes use", "d": "10/2017"}, {"body": "thanks purtuga interesting approach core probably hold things improved fork particular creating fresh prototype object every array observed technically need create wrapper prototype object original prototype object cost avoided map serves cache", "d": "10/2017"}, {"body": "thank taking time look fork good point caching prototype normally use type stuff could usages vue codebase find use map inside perhaps create property original prototype store vuejs wrapped prototype potential issue approach prototype frozen thanks looking forward feature lands vuejs", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "could translate english", "d": "10/2017"}, {"body": "somebody translate english", "d": "10/2017"}, {"body": "close favour", "d": "10/2017"}, {"body": "problem already create keys moment namely nt use set change works expected", "d": "10/2017"}, {"body": "works update fiddle", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "closing since assume issue resolved", "d": "10/2017"}, {"body": "nt think worth complicate options even", "d": "10/2017"}, {"body": "also simply give key ensure replaced", "d": "10/2017"}, {"body": "tried solution codepen still cant get working tried", "d": "10/2017"}, {"body": "please read requirements carefully runnable reproduction minimal usage question", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "type code successfully inferred type expected behavior infer actual function signature option information want strict need manually annotate props type vid would introduced via", "d": "10/2017"}, {"body": "thanks lot javascript import vue vue interface setfunction number number string export default props test object gt setfunction data thistest return reference thistest get correct parameter types question use component trees props refs vue options api get contextual type perhaps topdown downtop infer types", "d": "10/2017"}, {"body": "currently cases typescript compiler analyze template need make additional type checker want check tsxrender function may able type check props type parent component discussion thread", "d": "10/2017"}, {"body": "thanks learn", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "type inference goes cyclic adding return type function would fix problem ts import vue vnode vue vueextend render h vnode return h div thismessage include caveats docs", "d": "10/2017"}, {"body": "make pull request vuejsorg", "d": "10/2017"}, {"body": "sorry usage support many possible edge cases consider make vue compatible arbitrary modifications builtin types", "d": "10/2017"}, {"body": "thank quick response although example showed manipulation array instance directly example proper one would actually subclass array cases would supported following works expected chrome vuejs alter prototype break subclassed array javascript const class extends array constructor super although know vuejs alters data structure slightly enable reactivity expectation would actually lose functionality might data paul", "d": "10/2017"}, {"body": "pursue discussion somewhere else forums found thread regarding issue certainly nt want spend time opening discussion going entertain pursuing solution", "d": "10/2017"}, {"body": "probably open fresh feature request support reactivity subclassed arrays", "d": "10/2017"}, {"body": "automatically bound dom property tag statically using dynamic makes bound attribute binds initial value input use force property instead", "d": "10/2017"}, {"body": "like take look one yet", "d": "10/2017"}, {"body": "seems strongly related dynamic type", "d": "10/2017"}, {"body": "seems need add pre condition", "d": "10/2017"}, {"body": "misoguy ok come first", "d": "10/2017"}, {"body": "also need consider sorry dirty issue", "d": "10/2017"}, {"body": "digging issue realized simple roughly implemented working code think need write test haha make case work well work send pr", "d": "10/2017"}, {"body": "gebilaoxiong browser nt refresh nt see comment pr commenting guess issue closed", "d": "10/2017"}, {"body": "misoguy thought one process repaired nt know problem", "d": "10/2017"}, {"body": "gebilaoxiong commented gon na work weekends bad tried code tested text well nt think problem regarding issue", "d": "10/2017"}, {"body": "misoguy use code open pr merge code", "d": "10/2017"}, {"body": "gebilaoxiong would ok implementation test code seems much better mine open pr suggested let decide whether merge mine", "d": "10/2017"}, {"body": "gebilaoxiong opened pr suggested included code check since nt want get credit work regarding would nice contribute first time way implementing first pr found wonderfully maintained test codes written great library", "d": "10/2017"}, {"body": "misoguy nice day", "d": "10/2017"}, {"body": "thank", "d": "10/2017"}, {"body": "expands value binding nt make sense use explicit binding side side", "d": "10/2017"}, {"body": "ok thanks note example replace dynamic type static type everything ok expected", "d": "10/2017"}, {"body": "yes vmodel expands different props depending type binding", "d": "10/2017"}, {"body": "understand tying create widget fits input data type new vue el app data model options value text foo value text foo value text foo computed multiple return arrayisarray thismodel understand never work possible warned dev mode case", "d": "10/2017"}, {"body": "looks issue", "d": "10/2017"}, {"body": "exporting variable specified properties exported", "d": "10/2017"}, {"body": "issue available beforecreated hook although available every hook version componentoptions interface beforecreate v void created void beforedestroy void destroyed void beforemount void mounted void beforeupdate void updated void activated void deactivated void errorcaptured boolean void", "d": "10/2017"}, {"body": "see since recommend use enable better type inference prefer object literal style need explicitly add type hook", "d": "10/2017"}, {"body": "one point still make sense beforecreate", "d": "10/2017"}, {"body": "use data beforecreate create moment annotate type prevent infer wrong type default contextual type hook", "d": "10/2017"}, {"body": "data nt created beforecreate beforecreate null void declaration says explicitly beforecreate hook", "d": "10/2017"}, {"body": "type beforecreate user defined data", "d": "10/2017"}, {"body": "distribute content use slots template render incompatible one precise template compiled render function placed property side note mixin template render function quite strange makes sense put component extend", "d": "10/2017"}, {"body": "found change parsemodel might culprit prior change vmodel bindings form foobar would rewritten set foo bar v relevant issues", "d": "10/2017"}, {"body": "either way using like directly recommended", "d": "10/2017"}, {"body": "understand however reproducible nt really reflective trying accomplish written simple data grid accepts arbitrary vue template strings render column contents header column rendering checkbox whose data bound computed property containing component one instantiates data grid checkbox reflect selected state rows grid changing update underlying selection flags rows implemented declaring method findparent via global mixin looks offending parent component accessing computed property like prior worked nicely however updating code broke workaround turning computed property question data property using watch sync value individual selection flags hardly ideal", "d": "10/2017"}, {"body": "coincidentally fixed", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "slot name extracted compile time scoped slots might normal slots well future slot name really parent context make sense means recommended dynamically add slot names directly", "d": "10/2017"}, {"body": "looks like race condition happening work around also set one elements", "d": "10/2017"}, {"body": "logic updating value options change inside called however case presence directive toggled element", "d": "10/2017"}, {"body": "fergusean sorry close issue soon", "d": "10/2017"}, {"body": "breaking change going happen simply adding listener check event key call filter input chars", "d": "10/2017"}, {"body": "yes would nice little inclusion directive add least allow directives function calls model updated check things", "d": "10/2017"}, {"body": "actually better changing generic type constructor default breaking change encode return constructor typed plus typed jsx enabled make complex typing file complicated let first make stable wait feedback like idea please vote emoji cc ktsn octref", "d": "10/2017"}, {"body": "sounds nice would nice vue supports typed jsx default small library add types component typed jsx aamof issue comes btw current typing loses information props required optional necessary typed jsx", "d": "10/2017"}, {"body": "current typing loses information props required optional fairly nt think make typing current api least current ts type system support example", "d": "10/2017"}, {"body": "using library mentioned think first step make props optional using tsx partial unless passing declared interface enhancement ts support think also create ts issue make awareness requirement linking back issue believe support typed tsx box props inferred unfortunately ultimately great vue api also custom attributes tsx scoped slots events need cater interfaces still required far see however possible reduce needed typing especially duplication occurs prop definitions", "d": "10/2017"}, {"body": "approach like works type definitions become complicated", "d": "10/2017"}, {"body": "wonderfulpanda could form requiredprops props object", "d": "10/2017"}, {"body": "blakenewman may impossible obtain requiredprops props compile time example type", "d": "10/2017"}, {"body": "yes sorry forgot", "d": "10/2017"}, {"body": "builtin alias vue checking pass event constructor however chrome ignores option seems bug although technically deprecated might simulate event using old fashioned way want pass probably make supported somehow", "d": "10/2017"}, {"body": "well rerender see anything changed understand may think could simply diff new vnodes parent pass child diff unfortunately nt take account possible edge cases easy way around current architecture also assuming could go route would performance tradeoff would still diff vnodes child diff vnodes two times means components light receive large slot contents performance would worsen think large slot trees pretty common even nested quite often concerning situation encountering performance issues options optimize useful probably extracting heavy part another child component nt receive slot using large node trees need render component lifecycle", "d": "10/2017"}, {"body": "hm took look issues mentioned one indeed suboptimal share insight", "d": "10/2017"}, {"body": "already plan improve tracked", "d": "10/2017"}, {"body": "thank", "d": "10/2017"}, {"body": "wow weird feeling seeing answer seeing almost verbatim gave recollection reply glad improved though", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "already works work browsers support feature natively use webpack transpile js", "d": "10/2017"}, {"body": "man posva quick see syntax supported great nt work make new project vuejstemplateswebpack shown understand tell post question instead since got attention thought try asking", "d": "10/2017"}, {"body": "hm probably objectrestspread operator stage anymore stage included preset operator would kind open issue template repo track fix find time edit nope included look repo please open issue webpack repository", "d": "10/2017"}, {"body": "thanks reply linusborg new issue tried using dice made changes dev branch repo case continue convo issue", "d": "10/2017"}, {"body": "please provide repro whole project use fiddle set", "d": "10/2017"}, {"body": "posva able reproduce fidlle codepen may relelated fact using webpack vueloadertemplate compiler guess try question though captured states vm instances first load hit media query breakpoint drawer switch persistent component drawer rendered default slots idea children first load children something expect started looking vue js code must say understanding vdom rendering details pretty low", "d": "10/2017"}, {"body": "keep core feature requests suggest moving eslintpluginvue instead", "d": "10/2017"}, {"body": "intentional change fix couple bugs caused event firing orders fact try firefox see behavior chrome consistent behavior browsers considered fix", "d": "10/2017"}, {"body": "curiously use force vuejs render dom props", "d": "10/2017"}, {"body": "reduced reproduction firefox wo nt respect attribute set later", "d": "10/2017"}, {"body": "herringtondarkholme firefox problem", "d": "10/2017"}, {"body": "curiously use force vuejs render dom props herringtondarkholme thanks use time next step file bug firefox", "d": "10/2017"}, {"body": "nt think firefox bug actually vue keep without value weird also warning muted used modifier code nt seem trigger", "d": "10/2017"}, {"body": "want see", "d": "10/2017"}, {"body": "aha thanks", "d": "10/2017"}, {"body": "note mutating rather replacing object array old value new value reference objectarray vue keep copy premutate value see", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "solution options null select nt rendered rendered options becomes nonnull value case array thus initial value options bearing furthermore reproduce behavior separating loading indication options see behavior seems works expected select wrapped template see looks like problem element shares vmodel vif regardless given magically switches correct value data vue instance mutated believe unintended behavior aka bug", "d": "10/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "possible inline templates compiled part parent tree", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "please provide reproduction failed recovery white screen", "d": "10/2017"}, {"body": "flag component methods always type unless enable make pr docs later mention", "d": "10/2017"}, {"body": "ktsn thanks", "d": "10/2017"}, {"body": "ktsn think better mention also required p", "d": "10/2017"}, {"body": "also call methods emit events functional components templates", "d": "10/2017"}, {"body": "use regular component need", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "data template like", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "open issue repos please duplicate vuejsvuerouter could save somewhere state first time component appeared trigger different transitions even put custom component uses transition component", "d": "10/2017"}, {"body": "hi problem description lacking bit detail reproduction produces three alerts show node nname nt encounter errors nt see problem file method", "d": "10/2017"}, {"body": "linusborg check check dependencies need vue", "d": "10/2017"}, {"body": "okay indriguingly odd tested outside codesandbox seems issue way codesandbox magic reason event object replaced object currenttarget object dom object event came objects created commmunic shared workers though channel messaging api see mdn vue use anywhere source object come somewhere else fact happens since good startingpoint investigate", "d": "10/2017"}, {"body": "test project problem", "d": "10/2017"}, {"body": "mean problem please verify also ends like something else", "d": "10/2017"}, {"body": "yes", "d": "10/2017"}, {"body": "one example", "d": "10/2017"}, {"body": "okay weird sidenote generally bad idea save htmlelements event contains namely vue attempt make object reactive element lots child elements lead stack overflow wondering somehow done intentionally nt think unsure cc", "d": "10/2017"}, {"body": "linusborg", "d": "10/2017"}, {"body": "vue specific behaviour occurs also vanilla javascript sure suppose gets cleared event bubbling example", "d": "10/2017"}, {"body": "transient value become event propagation finishes used micro tasks nexttick triggers updates event propagation resolves led number hard fix bugs use macro task waits dom events propagated resolved even access frame become need pass currenttarget around save another variable still access", "d": "10/2017"}, {"body": "iterate general advice save objects like dom events html elements component data anyway reactification elements quickly break app large element trees", "d": "10/2017"}, {"body": "linusborg send event prop", "d": "10/2017"}, {"body": "eddimensi save need another variable pass evan said", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "\u53bb\u6389 css safariios \u7684 css bug", "d": "10/2017"}, {"body": "\u603b\u7b97\u627e\u5230\u4e86\u539f\u56e0 \u662f\u8fd9\u4e2a", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "nt input blur event fires first hello clicked actually", "d": "10/2017"}, {"body": "make click first", "d": "10/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow probably better use component purpose let dev pass components use slots also allows combine jsx templates one project", "d": "10/2017"}, {"body": "would breaking change unfortunately", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "well actually real problem case nt performance loss rerendering per se fact focus lost elements removed readded dom trying use virtual scroller ca nt navigate keyboard since rerendering removes focus way found go around listen blur event refocus introduces significant delay ruins experience alternative handle dom directly kind defeat purpose using vue case create new issue bit specified really important order create usable virtual scroller keyboard navigation", "d": "10/2017"}, {"body": "ping posva created ugly hack instead using slice series shift unshift push pop divided inside outside nexttick ugly hack performant since divided twice many ticks ordinary slice really hope recommended vueway said think needs addressed order able create virtual scrollers keyboard navigation thoughts", "d": "10/2017"}, {"body": "yeah issue input issue using key trick guess ask help forum chat need", "d": "10/2017"}, {"body": "nt understand posva codepen repro key used sure would help also see key attribute used working repro since complete rerendering occurs specific conditions", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "\u4e0a\u9762\u7684\u4f8b\u5b50\u5c31\u662f\u6700\u597d\u7684\u8bc1\u660e \u548c \u7248\u672c\u90fd\u80fd\u6b63\u5e38\u4f7f\u7528 \u9664\u4e86vue\u7248\u672c\u4fee\u6539\u8fc7\u4ee5\u5916 \u5176\u4ed6\u7684\u90fd\u6ca1\u6709\u53d8\u8fc7 elementui \u548c iview \u4e24\u4e2a\u7ec4\u4ef6\u7684\u65e5\u671f\u9009\u62e9\u63a7\u4ef6\u90fd\u53d7\u540c\u6837\u7684\u5f71\u54cd", "d": "10/2017"}, {"body": "zsedcbm \u6211\u8fd9\u8fb9\u6d4b\u8bd5\u6ca1\u95ee\u9898 \u5177\u4f53\u662f\u4ec0\u4e48\u95ee\u9898", "d": "10/2017"}, {"body": "feichao chrome \u4e2d \u4f7f\u7528\u65b0\u7248\u7684vue \u65e5\u671f\u65e0\u6cd5\u9009\u4e2d \u540e\u6765\u4f7f\u7528\u4e86chrome \u4e24\u4e2a\u7248\u672c\u7684vue\u90fd\u53ef\u4ee5\u6b63\u5e38\u4f7f\u7528 \u5947\u602a\u7684\u4e00\u70b9\u662f \u6211\u5728 devtools\u4e2d \u4e0b\u65ad\u70b9\u7684\u65f6\u5019 vue\u65b0\u7248\u672c\u4e5f\u662f\u80fd\u591f\u6b63\u5e38\u8fd0\u884c\u7684\u53bb\u9664\u65ad\u70b9 \u53c8\u51fa\u73b0\u95ee\u9898\u4e86 \u4e0d\u77e5\u9053\u662f\u6d4f\u89c8\u5668\u5185\u6838\u7248\u672c\u4f4e\u7684\u95ee\u9898 \u8fd8\u662fvue\u7684\u95ee\u9898", "d": "10/2017"}, {"body": "feichao \u8fd9\u4e24\u4e2a\u4e5f\u662f\u53cd\u6620\u7684\u540c\u6837\u7684\u95ee\u9898", "d": "10/2017"}, {"body": "likely related", "d": "10/2017"}, {"body": "\u770b\u4e86\u4e0b\u4f3c\u4e4e\u53ea\u6709\u5728\u65e7\u7248\u672c\u7684 chrome", "d": "10/2017"}, {"body": "removed transition finished responsibility ensure element default state correct position", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "make following animation want list animated xaxis element changed state display none display block result list animate mean jumped origin konw link", "d": "10/2017"}, {"body": "expected behavior functional components merge class parent may return one nodes need explicitly bind", "d": "10/2017"}, {"body": "thanks info mentioned anywhere docs look posting issue could nt find anything", "d": "10/2017"}, {"body": "tried vuepropertydecorator ts import vue vue import prop component vuepropertydecorator interface foobar foo string bar string component export default class app extends vue prop foobar foobar", "d": "10/2017"}, {"body": "like idea type would hide internal detail type declaration looks intuitive syntax sandangel proposal related decorators would help us declare type easier canonical api", "d": "10/2017"}, {"body": "pr easier since would simple change", "d": "10/2017"}, {"body": "ferdaber yes please", "d": "10/2017"}, {"body": "minimal reproduction", "d": "10/2017"}, {"body": "use", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "wontfix emitted events need correct order fixed happened work previously native event emitted first overwritten custom event preserve old behavior emitting custom event overwrites native event", "d": "10/2017"}, {"body": "data object must plain", "d": "10/2017"}, {"body": "well seems missed bit documentation good point phanan would great vue throw errormessage devtools using non plain data object", "d": "10/2017"}, {"body": "imho bad idea restrict data plain objects working components props validation using modelclasses type parameter like would nt work without typed models", "d": "10/2017"}, {"body": "confirm addition label mean track fixed asking whether revert vue wait fix attempt restructure code specifically class used reactive object using custom setter property side effects used work vue", "d": "10/2017"}, {"body": "might related", "d": "10/2017"}, {"body": "prefer revert feature properties class declare located prototype instance want check prototype may check entire prototype chain side effect big benefits brings", "d": "10/2017"}, {"body": "hello apachera thank filing issue please follow guidelines report issue particular provide example wwwjsfiddlenet similar service reproduces problem necessary create repository us clone minimal reproduction repositories actual projects generally accepted necessary thank", "d": "10/2017"}, {"body": "guarantee hook order components array", "d": "10/2017"}, {"body": "explicitly stated take questions", "d": "10/2017"}, {"body": "indeed work typed props definition sure reason though herringtondarkholme danielrosenwasser would appreciate look", "d": "10/2017"}, {"body": "currently computer guess bit right probably assignability error props general better future versions typescript currently branch works better thing even branch best inference get", "d": "10/2017"}, {"body": "ts import vue vnode vue vueextend name workaround props foo type string bar prop render h vnode return h div thisfoo think inferring empty prop type lenient lot options empty field results empty type parameter make inference default many errors hidden unintended", "d": "10/2017"}, {"body": "said key set button problem due vue using inplace patch strategy explained doc", "d": "10/2017"}, {"body": "hi phanan inplace patch great vue patch element inplace reset status completely including event bindings classes etc reset focus status", "d": "10/2017"}, {"body": "focus status part node state two possibilities case want change button text maintaining focus want replace button resetting focus simply way vue tell intention unless use key", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "arrow autogenerated gitbook link next item menu right either way issue belong", "d": "10/2017"}, {"body": "okay thanks flagging", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "please strip nonrelated packages like vuebootstrap move project container image nt need build image test", "d": "10/2017"}, {"body": "setup ssr nt follow guidelines laid ssr guide really specifically use used like meant returns resolved promise nt wait resolve router ready please try follow guide ask forumvuejsorg get stuck open issue find problem persist following guide", "d": "10/2017"}, {"body": "everything ok", "d": "10/2017"}, {"body": "git clone local disk space show error nothing others", "d": "10/2017"}, {"body": "idea commenting saying sorry", "d": "10/2017"}, {"body": "try like said thanks help linusborg", "d": "10/2017"}, {"body": "nt work passing component data root vnode contains ref reference simply fixed repro", "d": "10/2017"}, {"body": "either tab line break replaced every browser chrome validate data instead like said resolve issue correct link nt think vue tamper data case trimming funny characters url words belongs userland imho", "d": "10/2017"}, {"body": "phanan case seems actually tamper remove initialization vue codepen encounter described behaviour looks like invalid html entity magically added end link", "d": "10/2017"}, {"body": "changes whole html talking real lists control one reused using attribute", "d": "10/2017"}, {"body": "posva sorry provided wrong fiddle link one right test button causes rerender", "d": "10/2017"}, {"body": "ah thanks sure something improved sure may due strategy used patch nodes", "d": "10/2017"}, {"body": "seems strange push shift causes rerender push ok unshift also ok pop unshift also fine btw wrap unshift settimeout fixes issue want use hacks", "d": "10/2017"}, {"body": "duplicate", "d": "10/2017"}, {"body": "close via", "d": "10/2017"}, {"body": "hi know new release includes fix released approximately thanks awesome project", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "ca nt use codesandbox reproduce error try add dependencies gives internal server error anybody take look anyway please", "d": "10/2017"}, {"body": "could provide repository github run extremely difficult debug printed code", "d": "10/2017"}, {"body": "linusborg created one using docker makefile run everything create container image run testable want client version got webpack dev server sidenote hot reloads nt work still nt figured kill server rerun make command sorry", "d": "10/2017"}, {"body": "linusborg properly", "d": "10/2017"}, {"body": "sorry nt understand requesting vue core library nt offer testing ajax functionality", "d": "10/2017"}, {"body": "pretty much linusborg said would proper modification jquery axios side nothing done vuejs core", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "browser strips element becaue allowed according html spec vue templates nt work like handlebars others loop pieces html markup treat text conditionally print woirk complete speccompliant elements understand suggest reading guide section render functions templates compiled expected behaviour", "d": "10/2017"}, {"body": "way thank much", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "ulisescarreonalvarez issue belong quick google search led thread might help", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "issue template reason ca nt reproduce", "d": "10/2017"}, {"body": "nothing vue nt see would run development server production environment anyway", "d": "10/2017"}, {"body": "nt know fixed would suggest users explicitly use compiler hard time infer directive first expand consider example first expand right add option nt seem right template compiled update maybe use simpler strategy always prefer expanding unless binding", "d": "10/2017"}, {"body": "usage indeed ambiguous also suggest using explicit wrapper need add warning case", "d": "10/2017"}, {"body": "tried safari checked true", "d": "10/2017"}, {"body": "firefox event input event change triggered checkbox newly opened tab middleclick refresh thing happening text input elements", "d": "10/2017"}, {"body": "tested vue nt react input event checkbox model updated text next checkbox changes fire change event checkbox", "d": "10/2017"}, {"body": "basically vuejs updates select checkbox input radio input elements change event input event firefox follows mdn fires event change change committed user middleclick refresh change automatically done firefox therefore user consequently input event fired", "d": "10/2017"}, {"body": "wondering reasoning behind first point would happen changed linked would probably need lot browser compatibility testing", "d": "10/2017"}, {"body": "mostly certain problem setup familiar systemjs probably want adjust use es modules build", "d": "10/2017"}, {"body": "vue declaration switched es module style declaration need use want use es module requirejs systemjs seem support es module may need migrate tool supporting es module want use gt typescript", "d": "10/2017"}, {"body": "switch systemjs use esmjs add pointless babel plugin transpile compiled js systemjs complain process undefined fix config since metaglobals override config supported cjs global module formats driving slightly mad seems could fixed simple bottom vue runtime commonjs ie vueclasscomponent ping ktsn danielrosenwasser", "d": "10/2017"}, {"body": "still pretranspiled thing left export syntax sounds pretty odd systemjs ca nt simple global replacement using es modules shim", "d": "10/2017"}, {"body": "trying shim right suppose include thing windowprocess env nodeenv development vueenv client", "d": "10/2017"}, {"body": "maybe missing something understanding systemjs gives intended behavior default imports need turn typescript flag", "d": "10/2017"}, {"body": "boil simple example logints import vue vue export default class login extends vue compiled loginjs use strict objectdefineproperty exports esmodule value true const require vue class login extends lt crash exportsdefault login allowsyntheticdefaultimports nt affect emitted code compile time nt fix issue compiled code whether", "d": "10/2017"}, {"body": "looks like emitting commonjs default nt sort default synthesis since already targeting systemjs might well switch target things work well", "d": "10/2017"}, {"body": "familiar systemjs thread seems systemjs author think default synthesis handled transpiler quite sure typescript handle synthesis design need another transpiler trying daniel suggestion listed thread linked", "d": "10/2017"}, {"body": "thanks danielrosenwasser trick nt aware systemspecific module target", "d": "10/2017"}, {"body": "point duplicated values note even vue nt reset selected item user interaction still selecting first matching option fresh render key information array vue infer ie key exist view data data view update key information imo duplicate values like intrinsically broken design instead directly bind entire object value unique id available value comparison", "d": "10/2017"}, {"body": "video issue show", "d": "10/2017"}, {"body": "see comparison get list flash larger size flashes even firefox", "d": "10/2017"}, {"body": "doits try", "d": "10/2017"}, {"body": "fritx still flashes resizing", "d": "10/2017"}, {"body": "also see ie edge", "d": "10/2017"}, {"body": "issue definitely seems fixed chrome still see issue safari firefox also see issue safari firefox well situations like css changing appearance vue changing appearance wanting work exactly moment safe say done css done vue make sure things changed exactly time", "d": "10/2017"}, {"body": "doubt vue problem simply attaches native event listener believe caused vue please reduce reproduction involves much unrelated logic party library", "d": "10/2017"}, {"body": "hi updated codepen remove third party library unrelated logic click change handler thank much", "d": "10/2017"}, {"body": "seems browser behavior quirk calling input trigger native change event jquery probably compatibility hacks cater really vue responsibility", "d": "10/2017"}, {"body": "ooh see btw suggestion make works vue try wrap input label tag remove click handler hope trigger native event thank much", "d": "10/2017"}, {"body": "sorry really nt see provides", "d": "10/2017"}, {"body": "names parent child original example meant classlike inheritance tree components updated example make things clear point many places internet able extend complex component overriding something scriptlevel also small overrides template level simplest way achieve per example would html stuff import base base export default extends base components base base big bug waiting happen nonsimple safe ways proxying props methods slots events around andor lots custom vars sprinkled template author put cumbersome fragile love vue precisely allows ooplike multiple inheritance mixins fact templates extendable manner ruins fun pretty quick case makes development unnecessarily difficult code hard understand newcomers project highly simplified example still convincing enough provide reallife code become unnecessarily complex due lack template inheritance extensively discussed seemed agree issue although obviously nt agree severity perceived us however rejected proposed solution extra composition model greatly muddles structure program reasonable argument proposal solves issue preserves composition model looking natural clean", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "dup", "d": "10/2017"}, {"body": "please check closed issues opening new ones dup", "d": "10/2017"}, {"body": "also facing issue using vue local dev environment production use minified version version issue nt happen", "d": "10/2017"}, {"body": "facing issue fix", "d": "10/2017"}, {"body": "dup", "d": "10/2017"}, {"body": "problem", "d": "10/2017"}, {"body": "please check closed issues opening new ones dup", "d": "10/2017"}, {"body": "dup", "d": "10/2017"}, {"body": "please put actual template lead output", "d": "10/2017"}, {"body": "version vue using token represent change event radio checkbox anymore using vue run code generated", "d": "10/2017"}, {"body": "javoski example ui libraries released compiled code work webpack browser imo might little difficult assure party libraries project always compiled minor version seems resulting breaking change party libs suggest documented", "d": "10/2017"}, {"body": "true people need rebundle libs think communicate remember something similar past", "d": "10/2017"}, {"body": "fyi unintended preserve backwards compat next patch release", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow set every property want transition", "d": "10/2017"}, {"body": "fnlctrl nt dup many others", "d": "10/2017"}, {"body": "joy joy joy looks like close wait release", "d": "10/2017"}, {"body": "dup", "d": "10/2017"}, {"body": "looks like already fixed", "d": "10/2017"}, {"body": "related upgraded rollup build system revert build system changes run dev build worked see sure dev dependency causes still needs investigation new build file", "d": "10/2017"}, {"body": "well caused rollup let see line removed rollup tree shaking used reflow document", "d": "10/2017"}, {"body": "\u4e0d\u4f1a\u5148\u641c\u4e00\u4e0b\u5417", "d": "10/2017"}, {"body": "use", "d": "10/2017"}, {"body": "actually think like", "d": "10/2017"}, {"body": "similar issue one tag also renders", "d": "10/2017"}, {"body": "please tag soon", "d": "10/2017"}, {"body": "source code getlist function main html var getdataasync apijoinus amp categoryid thiscategoryid get null function data datastate thisdatajoinsplice thisdatajoin thisdatajoinconcat datadata thisdatajoin datadata nexttick function main removeclass gaodu else alert \u6570\u636e\u8bf7\u6c42\u5931\u8d25", "d": "10/2017"}, {"body": "valid reproduction", "d": "10/2017"}, {"body": "never set anything execution computed prop always returning null changes computed prop considered uptodate sure brush changes tracked", "d": "10/2017"}, {"body": "apologies clear expecting variable updates recalculate computed prop see comment return null line indeed happen", "d": "10/2017"}, {"body": "expand previous post nt even see calculating futuretime log message unless comment line leads believe vue nt properly tracking interestingly add another statement check eg see via console logs computed prop recalculated although still set null expected due line inconsistent tracking behavior seems like bug pretty new vue", "d": "10/2017"}, {"body": "totally expected behavior return line accesses even evaluated registered dependency computed property fact desired behavior case return result nothing recalculating changes unnecessary becomes truthy recalculate track returned value depends", "d": "10/2017"}, {"body": "thanks quick responses got actual code working expected learned vue change tracking well posterity adapting suggestions", "d": "10/2017"}, {"body": "gave shot possible add think could introduce inconsistent behaviors complexify validation example weird used type expect rules validate course could say user responsible type validation inside validator could even add warning people may want use time bit similar attribute example moment validator runs field set value provided maybe late tired", "d": "10/2017"}, {"body": "sure follow concern posva nt see feature effecting current behavior could missing something would nt continue behave currently", "d": "10/2017"}, {"body": "wouldnt right non required prop value never runs validator means order support usecase run validator even value provided show warning throw error depending validator people using actually validate information basically think wrong place could maybe support function gets passed props stripped production edit sur letting function good idea", "d": "10/2017"}, {"body": "damn see concern one two props required neither passed neither validator ever run warning thrown dedicated function might better place keep brainstorming apis thanks", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "try remove extra look example docs", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "\u5982\u6587\u6863\u6240\u8bf4", "d": "10/2017"}, {"body": "purposely setting variable", "d": "10/2017"}, {"body": "involves party library please either provide clean repo using plain vue open issue elementui repo instead", "d": "10/2017"}, {"body": "tested still seeing issue understand busy especially release want make sure issue nt get lost since handling errors serious issue anyone ssr async components thanks", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "belongs vuejsvuejsorg something probably add cookbook pull request start discussion initial material even appreciated", "d": "10/2017"}, {"body": "need understand difference component definition component instance trying call method directly definition wo nt instance point", "d": "10/2017"}, {"body": "hi dwcy sorry quasar perfoming way expect topuic vue issue tracker understand think might something vue ca nt wo nt analyse whole quasar app performance issues adress quasar community find specific behaviour vue reproduce small example quasar like unuusual cpu spikes memory leaks feel free open issue though", "d": "10/2017"}, {"body": "issue actually css keyframes animation working well multiple updates found noticed chrome rendering feature exists turned paint flashing fps meter directly vue problem close", "d": "10/2017"}, {"body": "collections supported browsers support yet thought discussed another issue could nt find case something added drop support older browsers", "d": "10/2017"}, {"body": "ah found thanks clear something plan add future version", "d": "10/2017"}, {"body": "\u8bf7\u628a issue", "d": "10/2017"}, {"body": "either npm network problem", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "prop nt optional props bypass type check", "d": "10/2017"}, {"body": "seems like confusing behavior bypass type check nt default value used one provided binding could warn situation occurs", "d": "10/2017"}, {"body": "value purposefully assigned overwriting default would unexpected", "d": "10/2017"}, {"body": "guess questions bypass type check", "d": "10/2017"}, {"body": "specify prop without essentially saying prop may present present type string value expressing type present say expect type check enforced cases add", "d": "10/2017"}, {"body": "specifies type present nt default value used seems contradictory", "d": "10/2017"}, {"body": "hmm yeah needs accurate indicates value explicitly marked present remain indicates value present default value used available indicates neither allowed unless default used agree could confusing existence vs language design trying stay close values designed represent js changing would breaking", "d": "10/2017"}, {"body": "would adding warning dev mode situation acceptable would nt breaking would help people detect edge scenarios three situations seem unlikely desired property default value type requirement binding value property default value without specify default value nt required really use case letting people bypass default value binding property default value type requirement binding value", "d": "10/2017"}, {"body": "working expect mixin takes precedences try adding something child childmixin components put mixin child childmixin would overwrite well", "d": "10/2017"}, {"body": "inerhit merged thus resulting inerhited method override final according docs behavoir describe happen either", "d": "10/2017"}, {"body": "unlike lifecycle hooks methods merged overwritten", "d": "10/2017"}, {"body": "options expect object values example methods components directives merged object component options take priority conflicting keys objects docs inaccurate", "d": "10/2017"}, {"body": "b two methods objects edit ooh mean mixin vs component", "d": "10/2017"}, {"body": "key problem apparently consistently behave noted docs well aware two components true using combination happen logical oop paradigm", "d": "10/2017"}, {"body": "explain inconsistent fair mixins nt exist oop nt see referring", "d": "10/2017"}, {"body": "scenario like component class method mixin method component class b inerhits component mixin b method inerhited component mixin merged method already found inerhited componentb method used whereas currently like component class b inerhits component mixin b mixin merged mixin method used inerhition ignored", "d": "10/2017"}, {"body": "take well sure mixins standard documentation could say mixins override anything component inherits via thing right undocumented", "d": "10/2017"}, {"body": "well according wikipedia would say common sense mixins also would nt say works consistently hand documenting accurately would saved nerves", "d": "10/2017"}, {"body": "imo mixin local take precedence extended component happens local properties take precedence mixins", "d": "10/2017"}, {"body": "nothing oop different options vue different merge strategies lifecycle hooks merged way preserves hooks inheritance chain return values instead produce side effects methods name simply overwrite parent value methods return values would cause ambiguity value return merged single function assetregistration options like see op means essentially problem options comes take higher priority options coming mixin", "d": "10/2017"}, {"body": "ok still think current behavior expected example mixin applied instead mixin considered part options would overwrite whatever inherited mixin applied directly see logged instead however general nt like idea overapplying oop composing ui components especially confusing overrides like", "d": "10/2017"}, {"body": "nt think consolelog template saw easily doable userland also add call template", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "use note nt populated hook refs get populated first render access using hook", "d": "10/2017"}, {"body": "good idea instead exposing option id expose option make script selfremoving even think removed default turned development", "d": "10/2017"}, {"body": "even better shall work pr", "d": "10/2017"}, {"body": "markbrouch yes please", "d": "10/2017"}, {"body": "well think tag nt read entryclient implementation usually nt think automatic removal possible one thing could provide boolean option append attribute tag could read vuex storereplacestate removed", "d": "10/2017"}, {"body": "script registers global variable permanent side effect removing nt make variable go away", "d": "10/2017"}, {"body": "oh see getting script tag delete immediately since already dumped global context", "d": "10/2017"}, {"body": "tested latest vue build seems still case using removed vue router well memory leaks better provide html pages heapshot way way faster take html document home foo const home name home template lt div gt text lt div gt data function return text home const foo name foo template lt div gt text lt div gt data function return text foo lt p gt new vue el app data msg hello world comp home components home foo removing prop stops object count increment keeps increment retained size component sure intended edit herringtondarkholme add repro link", "d": "10/2017"}, {"body": "preliminary investigation tells discrepancy cached vnode parent parent contains stale child case home thus entire list component instances nt collected", "d": "10/2017"}, {"body": "nt investigated tried guess reading keepalive component could also come place interested fix though memory leaks interesting js", "d": "10/2017"}, {"body": "code seems still problem test", "d": "10/2017"}, {"body": "thank much works", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "\u8c22\u8c22 \u7b80\u5355\u7684\u4e1c\u897f\u5f04\u590d\u6742\u4e86 \u73b0\u5728\u6253\u4e2a\u5305\u80fd\u6210\u529f \u65e0\u6cd5\u8fd0\u884c \u63d0\u793arouter\u4e3aundefined", "d": "10/2017"}, {"body": "\u5df2\u7ecf merge \u4e86", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "please open pull request vuejsvuejsorg instead feature request", "d": "10/2017"}, {"body": "ca nt special behavior expressions custom directives something like", "d": "10/2017"}, {"body": "removing check would nt fix break existing usage transpiled modules need way check object native module object dynamic import", "d": "10/2017"}, {"body": "mean remove check ie change", "d": "10/2017"}, {"body": "safe enough imo would break user somehow defines custom option called found way detect native namespace object checking", "d": "10/2017"}, {"body": "note fix needs route async components work", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "vue expression validation parse expressions supported node version using object spread supported unless use node", "d": "10/2017"}, {"body": "thanks lot", "d": "10/2017"}, {"body": "hello giorgiomartini thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow discord chat happy help", "d": "10/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "10/2017"}, {"body": "expected behavior hook instead", "d": "10/2017"}, {"body": "fyi already pr tracking", "d": "10/2017"}, {"body": "close via", "d": "10/2017"}, {"body": "think behavior added data computed docs", "d": "10/2017"}, {"body": "expected behavior data changes updates dom trigger events events triggered change came user interaction control use watcher instead dom event listener otherwise manually dispatch synthetic event watcher", "d": "10/2017"}, {"body": "referring using watch docs say use isnt referring suggest something add via javascript doesnt require anything vuejs use listen changes select vmodel makes thanks feedback huge fan vuejs really appreciate amazing framework built", "d": "10/2017"}, {"body": "talking abbout vue watchers nothing linked", "d": "10/2017"}, {"body": "tonystar reading issue get intention drupal tries rewrite frontend using vue could read additional ux improvements admin ui please clarify think many people miss point moment", "d": "10/2017"}, {"body": "could read additional ux improvements admin ui think first step drupal vue core easily use theme framework frontend admin ui pages soon get vendor js framework library vuereact means point use another library inside project choice vuereact admin ui equal choice main jslibrary whole drupal infrastructure", "d": "10/2017"}, {"body": "adubovskoy exactly initially meant let gently highlight dawehner others theme framework frontend admin ui pages choice vuereact admin ui equal choice main jslibrary whole drupal infrastructure", "d": "10/2017"}, {"body": "precaucious note vue maintainers please comment discussions meaningful argument contribute nt clog useless vote vue comments something similar wo nt help use way intend critizise react factbased civil manner argue vue rather react feel need write witnessed endless flood useless comments similar thread wordpressguttenberg tonystar could link comment op even better edit", "d": "10/2017"}, {"body": "linusborg note added also particular issue intended involve vue team selection process discussion", "d": "10/2017"}, {"body": "thanks also particular issue intended involve vue team selection process discussion really clear thanks", "d": "10/2017"}, {"body": "think discussing future web components really important large discussion nt know lot topic seems like react saying nt care web components last paragraph section talks vuejs web components future project also totally feasible offer deeper integration vue web component specs custom elements shadow dom style encapsulation however moment still waiting specs mature widely implemented mainstream browsers making serious commitments think clarifying statement vuejs core team thoughts since article written would aid discussion one reasons like vuejs seems like easier transition web components specs mature frameworks like react think lot people look towards comparison article inform framework decisions", "d": "10/2017"}, {"body": "closing issue accomplished goal raising awareness discussion better continued drupal threads", "d": "10/2017"}, {"body": "thanks comprehensive answer exactly expected issue", "d": "10/2017"}, {"body": "posted also make sure specify changes made fresh scaffold repro commit history look", "d": "10/2017"}, {"body": "fyi directives server needs implemented completely different fashion vnode transforms dom access also nt see point creating fresh directive instances request somehow inject app piece application state accessed across app instance request", "d": "10/2017"}, {"body": "thanks taking time review say somehow inject parsedlangheaderlanguage app piece application state accessed across app instance request think cases appropriate consider example desired translation directive html hello could instead html hello feels verbose application given vue exsiting api dont see avoid understand directives nt dom access server feature request likely naive make easy provide application state directive creating time per request doesnt passed directive throughout entire application", "d": "10/2017"}, {"body": "expected javascript works sharing object reference nothing cloning correct solution", "d": "10/2017"}, {"body": "thanks", "d": "10/2017"}, {"body": "technically event named ca nt assume bad syntax due decoupled nature events possible active detect wrong event names without writing explicit code telling us events child component may possibly emit quite straightforward write userland plugin checks assert valid", "d": "10/2017"}, {"body": "ts inside export class try get error gt expected guess babel similar reach state template testmethod valid straightforward plugin good idea think case would obvious framework", "d": "10/2017"}, {"body": "normal vue makes things added onto data reactive add something wo nt reactive example want creating new vue instance data", "d": "10/2017"}, {"body": "posva create reactive properties plugin possible ps application plugin another file", "d": "10/2017"}, {"body": "look fiddle also look plugins like vuex see achieve reactivity", "d": "10/2017"}, {"body": "think isshow defined get false still display", "d": "10/2017"}, {"body": "using scoped slot nt make sense case abstract container inner template add warning though", "d": "10/2017"}, {"body": "herringtondarkholme thanks", "d": "10/2017"}, {"body": "expected behavior applied wrapping slot content whether modal shown concern", "d": "10/2017"}, {"body": "linusborg posva took look happening simpler fiddle think flow events leading bug user changes selection event fires componentupdated function called handler updates value reverts selection back original value binding since vue nt received event yet event fires loop select options reset step nt update vue instance correct value far solution think want make sure event handled user added event handlers thinking could normalizeevents think possible reorder handlers event create pull request little guidance would helpful note replicable firefox unless put breakpoints actuallysetselected listener callback vue adds input element events unit test issue please select alpha beta mount documentbodyappendchild vm el vm elchildren selected true triggerevent vm el input waitforupdate gt triggerevent vm el change gt expect vm elvalue tobe alpha done", "d": "10/2017"}, {"body": "fyi ie edge trigger elements probably use instead anyway", "d": "10/2017"}, {"body": "take one add warning", "d": "10/2017"}, {"body": "think related browsers handle updates nonie browsers seem resolve values current javascript event loop ie resolves soon attribute set keeping block ieedge nt think spec actually mandates handled setting attributes sequentially", "d": "10/2017"}, {"body": "agree actually already issue follow keep watching", "d": "10/2017"}, {"body": "take stab", "d": "10/2017"}, {"body": "problem", "d": "10/2017"}, {"body": "someone submitted pull request days ago hopefully satisfactory fix issue looking forward", "d": "10/2017"}, {"body": "honestly nt think cater obvious buggy behavior outdated version browser versions behind fix also lets platformspecific code leak core patching algorithm reason app must run older version chrome give two divs different keys work around behavior update seems old chrome higher market share thought", "d": "10/2017"}, {"body": "closed via published", "d": "10/2017"}, {"body": "still seeing error replace indexvue jsxvue edit mistake looks issue jsxvue also noticed breaks", "d": "10/2017"}, {"body": "fyi implemented", "d": "10/2017"}, {"body": "fadexiii", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "closing since nt think easy way fix instead probably add note caveat workaround docs cc chrisvfritz", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "\u4f7f\u7528typescript\u4f46\u662f\u4e0d\u7528webpack\u6253\u5305 \u76f4\u63a5\u7528\u5fae\u8f6f\u7684tscexe\u7f16\u8bd1\u751f\u6210\u7684js\u6587\u4ef6 \u7136\u540e\u4f7f\u7528script\u6807\u7b7e\u5f15\u5165 \u4e0d\u8fc7\u73b0\u5728\u66f4\u6539\u4e86dts\u5b9a\u4e49\u8fd9\u4e2a\u95ee\u9898\u5c31\u89e3\u51b3\u4e86 \u8c22\u8c22", "d": "10/2017"}, {"body": "stevecruise", "d": "10/2017"}, {"body": "wvh solve problem", "d": "10/2017"}, {"body": "finally gave proposal proper investigation ends complicated seems problem lies within consistency different input types current implementation assumes text input ignores noninput events simplifies wrapping plain text input fields makes whole thing inconsistent feels like specialcase convenience hack managed make work requires component specify option injecting event type prop type back component handler already messier hoped even works becomes prohibitively complex mimic full behavior native eg checkboxes array binding radio select point feel implementation cost inconsistency outweighs simplification change would bring taking step back whole idea component opening finergrained control twoway binding form inputs simplifying job expanding sugar consistently pair input output letting fill details mixing feels like magic nt belong", "d": "10/2017"}, {"body": "fwiw", "d": "10/2017"}, {"body": "works differently used achieve similar results true close since think jackmellis project provide solid foundation nt intend include way create hoc core mainly nt see large benefit mixins extends", "d": "10/2017"}, {"body": "great thanks", "d": "10/2017"}, {"body": "open pull request add warning", "d": "10/2017"}, {"body": "reread whole thread decided going allow create reactive properties nt exist cases one level deep means following work assuming empty object still throw error read property baz undefined reasoning dev experience forms declare nested properties indeed chore silently failing also obviously bad also seen question resetting form data popping many times terms convenience autosetting would simplify resetting empty object consistency even warnings current behavior inconsistent cases dynamic key segment eg already using internally ca nt statically declare property known runtime another case binding array via index also use ensure array updates longerterm concern move proxies detecting property addition would become trivial would fact difficult add property without making reactive code quality framework opinion originally changed behavior bit opinionated data declaration changing back certainly weakens opinion think ok middle ground autoreactivepropertycreation limited onelevel deep declare requirements also still exist rootlevel properties pretty much leaves us objects dedicated form bindings still good practice declare properties also see able omit speed prototyping luckily javascript type systems become quite mature think start leave opinions enforced via optin tools like typescript flow", "d": "10/2017"}, {"body": "also seen question resetting form data popping many times resetting form data came see second code snippet think pretty good solution vue wondering somehow nativesuggested way", "d": "10/2017"}, {"body": "break application fix problem using models represent data entitities customer product using kinds shiny new features classes proxies put simply using classes models property holds data class constructor returns proxy getter setter traps cool getter checks object requested property returns exists otherwise returns property object property defined undefined setter directly sets property since direct manipulation object properties supposed happen initialization however updating started notice weird behavior directly mapping model attributes input fields work correctly longer following behavior user would input something property would get updated intended instead object would get new properties solution digging core discovered vue respects use defined getters setters makes call find exist created another trap specifying setter handful properties like javascript simplified class model constructor attributes thisattributes attributes static getproxyattribute model attribute return modelgetattribute attribute static setproxyattribute model attribute value modelsetattribute attribute value getattribute attribute attribute return attribute setattribute attribute value thisattributes attribute value notice property exception necessary vue work properly conclusion likely elegant solution want encourage everyone enhance solution make better seems work entirely happy", "d": "10/2017"}, {"body": "know done closed wanted say extremely happy functionality available building data centric app maintain blank samples data objects otherwise forms editing dynamically generated simplifies much pain dealing thank open loosening opinions framework opinions tend like without overbearing flexibility listening feedback considering real world usage opt inout ability vue stands thanks", "d": "10/2017"}, {"body": "problem figure", "d": "10/2017"}, {"body": "nt", "d": "10/2017"}, {"body": "use catch errors", "d": "10/2017"}, {"body": "set indeed", "d": "10/2017"}, {"body": "feature request make root elements otherwise layout would break vue sindex tr th nthchild tr th nthchild tr td nthchild tr td nthchild hack fixed column vue export default name copyfirst props arr array", "d": "10/2017"}, {"body": "way silence message", "d": "10/2017"}, {"body": "looking feature implemented outside via userland setup done demo app", "d": "10/2017"}, {"body": "mannikj best solution yes best solution would impractical dirty hack big excelsheetlike structure use jquery hundreds dynamic rows sacrifice huge performance would unacceptable solution situation exactly wonder anyone find proper solution", "d": "10/2017"}, {"body": "meanwhile open question stackoverflow link cihadturhan finally forget idea use table element use div elements jsfiddle hope resolve issue", "d": "10/2017"}, {"body": "thanks already found stackoverflow question jsfiddle link used one plausible solution see assigned bootstrap classes like make height equal across rows maybe realized assign border divs width div px border width two issues made worried visual details going solution flattening data use wo nt worry width columns honest never liked recursive solution rendering thanks help cihad", "d": "10/2017"}, {"body": "thank example lot trouble vuex throws whole thing whack going actually toggling checkbox vuex action mutation successful basically even user checked checkbox nt mean want go checked state want keep following computed property already set using using vuex nt good idea found ui getting toggled even though nt committed mutation found strange research actually found nt good answer question could nt believe believed common pattern wanting checkbox toggle action complete way deal error end toggling checkbox say like user preferences page nothing worked something like settimeout example thank thank hirokiosame asking question", "d": "10/2017"}, {"body": "hi issue vue pages lot components rendered list works fine phones others throws error reproduce via browserstack anytime printscreen", "d": "10/2017"}, {"body": "found issue case seems moved template file everything works fine", "d": "10/2017"}, {"body": "haies thanks help", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "bigbigbigbear", "d": "10/2017"}, {"body": "wangxiao \u4f60\u786e\u5b9a\u6d4b\u8bd5 ios link", "d": "10/2017"}, {"body": "considering vue new project thread seems similar seeing primary users wont latest phones see sample vue apps simply nt render ios safari gt reproduction vue demo render ios equivalent react component please advise", "d": "10/2017"}, {"body": "seem understand named slots used along routerview know part router nothing topic provide details please thanks advance", "d": "10/2017"}, {"body": "ca nt seem get thing working without vuetype using vuetype mandatory", "d": "10/2017"}, {"body": "almost problem solved within visual studio code running development server got following error module build failed error could find file srcsectionssearchresultsearchresultvue solved changing webpack tsloader config like upcoming typescript template vuecli", "d": "10/2017"}, {"body": "would also like expect import vue browsers support modules seems references need dealt", "d": "10/2017"}, {"body": "fyi presence source code meant compiletime optimizations used bundler like webpack adding constant bundle would completely defeat purpose moment using native es modules browser still comes significant performance issues build step still preferred type serious usage still prioritize dist files bundlers", "d": "10/2017"}, {"body": "browsercompatible esm file would good imho vue still discovered simply bundling learned progressively using modern es features maybe new buildconfigjs way around rename breaking change generate config", "d": "10/2017"}, {"body": "also would helpful add support passing propseventattributes something like", "d": "10/2017"}, {"body": "maybe see chinese", "d": "10/2017"}, {"body": "osx", "d": "10/2017"}, {"body": "thanks jangunzenhauser works duration", "d": "10/2017"}, {"body": "able properly resolve issue since nothing vuejs really concerned resolved chase proper solution outside issue report", "d": "10/2017"}, {"body": "defcc think still worth conversation completely agree casting seems incorrect use case modifier think people would use thinking nt need extra step casting string integer child component expects integer string currently falls back string means still need extra code ignore cast fails making significantly less useful reason cast undefined null", "d": "10/2017"}, {"body": "thanks share team think aldencolerain notifications githubcom defcc think still worth conversation completely agree casting seems incorrect use case modifier think people would use thinking nt need extra step casting string integer child component expects integer string currently falls back string means still need extra code ignore cast fails making significantly less useful reason cast undefined null receiving mentioned reply email directly view github mute thread", "d": "10/2017"}, {"body": "vue fine upgraded latest weird undefined show bug elementui vue related", "d": "10/2017"}, {"body": "see", "d": "10/2017"}, {"body": "updates regarding getting error code similar first post", "d": "10/2017"}, {"body": "many stumble upon issue error introduced similar one reported issue fact regression already fixed update latest patch release vue moment issue commit release", "d": "10/2017"}, {"body": "finally solved problem realized loading separate version vue page one webpacked distribution files necessary", "d": "10/2017"}, {"body": "still getting upgraded router gt unfortunately ca nt use codesandbox giving nt much code look anyway hope fine", "d": "10/2017"}, {"body": "fracasula using routeronready using async components nt see connection issue", "d": "10/2017"}, {"body": "use together vue version", "d": "10/2017"}, {"body": "vue", "d": "10/2017"}, {"body": "got thanks", "d": "10/2017"}, {"body": "vueesmjs vue warn vue constructor called keyword", "d": "10/2017"}, {"body": "nathenchan \u6211\u662f\u6309\u7167\u63d0\u793a\u5347\u7ea7\u4e86 vueloader vue", "d": "10/2017"}, {"body": "shouldcomponentupdate might added render functions amp jsx section", "d": "10/2017"}, {"body": "rhyek use way oneway binding could nt find way create proper getter get value", "d": "10/2017"}, {"body": "common case dependent properties instance dropdown dropdown b values depends selected value dropdown input c might defaulted based selected value dropdown b imagine dependent values retrieved async calls rest api ca nt use anymore since asynchronous yes implement rxjs trivial way learning vue one first issues trying solve found solution could nt understand days came back issue knowledge reactivex understand solution ok point nt style way solve common problem would less verbose readable wo nt require additional knowledge probably vue core library might vuerx even third party library using vuerx behind scenes could provide really elegant way solve problem", "d": "10/2017"}, {"body": "quick search github use risk", "d": "10/2017"}, {"body": "sorry probably nt clear enough library one first found made wondering scenario nt handled similar way vue core official vue library expecting point similar solution would vue official libraries", "d": "10/2017"}, {"body": "please refer strive keep api surface small scenario nt handled similar way vue core official vue library implemented user land without hack nt hard users use existing projects would also argue halfbaked would nt suffice users need fully implementing might introduces simpler concepts smaller code size async computed rx vue binding imagine dependent values retrieved async calls rest api use case might done without async probably store value another field defining one property extract value handling async setting value callback", "d": "10/2017"}, {"body": "works first update however subsequent update inside component nt update parent", "d": "10/2017"}, {"body": "waiting", "d": "10/2017"}, {"body": "yes vue vueloader proper support template compilation scoped css hotreload functional components", "d": "10/2017"}, {"body": "", "d": "10/2017"}, {"body": "interesting", "d": "10/2017"}, {"body": "meteorlxy solution break use radio checkbox vue supports dynamic types converting vifvelse looks similar workaround buggy call property", "d": "10/2017"}, {"body": "nkovacs yeah use textlike types ui components like akryum commented think using render function could better solution little complicate happy see dynamic types supported new release", "d": "10/2017"}, {"body": "related thinking seems nt reactive completely useless outside event handlers nt", "d": "10/2017"}, {"body": "guru awful lotta folk seem get trouble nt think viewmodel vue loosely inspired mvvm least step store pattern global variable contains page state take example email password current values would say validity page level state inputs interacting directly state declared components computed prop isvalid also looks state variable implement without without ref see many folk getting knots nt think store vue stuff directly talking vue stuff antipattern vue wants interact store", "d": "10/2017"}, {"body": "application starts multiple controls various components start multiple stores component store order organize state application logical reactive objects bound respective component need access main vue reactivity start useful otherwise start using signal topdown signal mess far away", "d": "10/2017"}, {"body": "personally impression refs mostly meant useful means get html element reference absolutely need nt reactive anyway using way directly access child component state seems like violation good component design agree would convenient could see tempted take advantage convenience ways would ultimately make components harder manage especially third party component component creator makes guarantees propsevents interface ultimately one business uses internal state nt make assumptions remaining compatible versions author worry others relying use internal state", "d": "10/2017"}, {"body": "course everyone tries design components way sibling components like case button lives different slot parent think refs components actually make code cleaner instead cluttering meaningless container components hold part state children", "d": "10/2017"}, {"body": "true see point well imagine middle ground would something like distinguished public private propertiescomputedsmethods way component interface could remain welldefined components could take useful references children", "d": "10/2017"}, {"body": "think kinda like idea could maintain compatibility making everything public default someone wants privatize data could specify fields part public interface using property like public component refs could proxy objects contain exposed members", "d": "10/2017"}, {"body": "would like major blocker us right", "d": "10/2017"}, {"body": "got work moving script tag preexisting dom scripts vuejs app code", "d": "10/2017"}, {"body": "squarenomad case nt using vue handling click post legacy js scripts people migrating vue big codebase libraries yeah sroberson pointed attaching handlers vuejs created shadow dom works whether putting script tags code run synchronous attaching handlers vue takes dom handlers set vue taken going lost strange effects also ca nt really modify dom elements vue owns", "d": "10/2017"}, {"body": "thing use vuejs page disables events reenable", "d": "10/2017"}, {"body": "wonderful vuejs guide example wrap existing js module example use uses technique attaching el mounted stage", "d": "10/2017"}, {"body": "hello world example always simple real world cruel init using vuejs inited party framework", "d": "10/2017"}, {"body": "hard time understanding nt allow transitions observe root element components determining transition applied making increasingly difficult write dry code components responsible visibility transition picking placing transition inside component work case want single instance collection components displayed simplified representation code looks like group window components share single column window responsible visible state like said making difficult control windows using transition ca nt take advantage transition amazing mode feature html html understand really matter opinion structure code maybe rare case suggestions would appreciated feel least option transition element render transitions based root element components assume always vshow components assuming visibility always controlled component transition based elements exist sorry bit rant continue explore solutions thanks", "d": "10/2017"}, {"body": "thought helper package like one exist", "d": "10/2017"}, {"body": "vue replaced want make sure child components also mounted use source", "d": "10/2017"}, {"body": "different tag", "d": "10/2017"}, {"body": "raychenfj pretty good", "d": "10/2017"}, {"body": "azamatsharapov add piece code vue application possible add helper function applies variables template engine uses beautiful solution case new data nosql database may include new props old data nt make vue crash displaying old data", "d": "10/2017"}, {"body": "damn would like make tablelayout component takes number rows columns props creates grid able slot components get placed right cells based row column value props sure", "d": "10/2017"}, {"body": "work", "d": "10/2017"}, {"body": "bit confused commit says ca nt see code handling undefined commit actually says null set default undefined passed prop handled", "d": "10/2017"}, {"body": "check default value value undefined value getpropdefaultvalue vm prop key since default value fresh copy make sure observe var prevshouldconvert observerstateshouldconvert observerstateshouldconvert true observe value observerstateshouldconvert prevshouldconvert assertprop prop key value vm absent found bit vuejs dist around part defaults handled ca nt find comment build function applies props vm anywhere current vuejs build", "d": "10/2017"}, {"body": "question vue convert us remember kebabcase vue files makes things awkward beginners wasted last mins", "d": "10/2017"}, {"body": "one rule commit memory html mean attributes tags attribute values javascript expressions use second statement applies", "d": "10/2017"}, {"body": "would add two cents hide template tag display none polyfill doesnt hide template tag counts elements template render template inlined html document end rendered elements number number source template element", "d": "10/2017"}, {"body": "necro totally agree understand reason error message pretty unclear", "d": "10/2017"}, {"body": "please open feature request better error message see previous messages thread closed issues good place continue conversations", "d": "10/2017"}, {"body": "suffering well actually bug must render space tags tags rendered spacing", "d": "10/2017"}, {"body": "could put html entire website one line still work doubt bug generated html jadepug thing long source looks proper nt matter generated html looks like long valid html", "d": "10/2017"}, {"body": "could put html entire website one line still work doubt bug generated html spaces tags legitimately different html though really problem inline elements like reporters using time really affects layout experience generally problem developers need remove space tags stop browsers affecting layout want control spacing specifically css current behavior definitely sane choice see times might want trigger behavior wonder could work around component span content though", "d": "10/2017"}, {"body": "decision opinion embedded nature javascript schema use default value property property passed undefined actually nt embedded mongoose schema definition logical opinion else make default item value resort default want add new item items pushing undefined value items list component takes care default value nt put component logic parent right workaround use case ensure item passed undefined get default value working thank kindly vue team", "d": "10/2017"}, {"body": "im still favouring undefined value value use default value value null false use passed one otherwise write could write", "d": "10/2017"}, {"body": "could build component use computed property based prop passed prop matches criteria make default use within component", "d": "10/2017"}, {"body": "computed property nt break vbinding nature properties", "d": "10/2017"}, {"body": "sirlancelot yeah sort makes props default value obsolete way usually approach similar things nt use default prop values could cases would work sake consistency across project", "d": "10/2017"}, {"body": "lopugit way use computed properties two way binding vmodel", "d": "10/2017"}, {"body": "aledmb solution fantastic solved problem mine", "d": "10/2017"}, {"body": "hi guys advice correctly solve", "d": "10/2017"}, {"body": "problem advice", "d": "10/2017"}, {"body": "cspeer got problem wanted try solution ever encounter problem select value alway previous value selected example empty select pick value consolelog get empty tat pick value previously picked one gets consoleloged", "d": "10/2017"}, {"body": "know issue old ca nt find simpler solution use basic layout semantic ui dropdown want share work around using semantic ui dropdown attaching change event hidden field", "d": "10/2017"}, {"body": "jituanlin assume primitives always copied safely quite possible shallow copy objectarray would simply work somewhat better force explicit factory fn expect programmer would remember bit every time lest bugs code hell", "d": "10/2017"}, {"body": "fyiuramron freedom risk choose freedom", "d": "10/2017"}, {"body": "jituanlin get case general case agree still notice frameworks used reduce cognitive load streamline functionalities case arrayobject props similar function vue explicit factory method easily extended even replaced factorysingleton function completely external component regular utility function wish risk invalid forced copies objects etc also case little freedom gained forcing framework use underthehood factory cloningcopying function instead simply allowing programmer explicitly even say allowing provide factory instead forcing provide reference existing object actually increases freedom time reducing risk simplest case additional characters think cost managable chuckles", "d": "10/2017"}, {"body": "sirlancelot thanks nice solution", "d": "10/2017"}, {"body": "fyi directly watch getter via without need separate computed property", "d": "10/2017"}, {"body": "opening issue almost exactly years ago nt commented alot know issue closed say improvement solution dreamed wanted thank people making possible clap fyi", "d": "10/2017"}, {"body": "correct wrong longer possibility vue object would one maintain reference function registration unregistration documentation says apart el treat arguments readonly never modify need share information across hooks recommended element dataset ca nt done dataset property stringmap", "d": "10/2017"}]