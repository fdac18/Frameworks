[{"title": "", "body": "features x use x add bug fixes x model still collection regression x model id regression x returning regression x friends regression maybe deopt underscore methods containing add add event feedback conflicts cc paulfalgout smile", "num": "3839", "d": "10/2015"}, {"title": "backbone object duplicated imported", "body": "backbone imported file new copy created time consider files routerjs javascript import backbone backbone backbone export default backbonerouterextend stuff mainjs javascript import backbone backbone import router router backbone object new router trigger router router using different copy backbone backbonehistorystart make test another library like jquery always object never duplicated looked source seeing causing backbone get duplicated time may try later though figure cause make pr assuming would wanted nt see would intentionally duplicated", "num": "3838", "d": "10/2015"}, {"title": "backbone partial view rendering cases", "body": "relatively new backbone running problem using backbone dustjs template looks something like gt appincresponsemessage button get user details partial eq key datasuccess value true success eq js looks like function called event occurs post returns successfully indexdust triggers event post event backend thislistentoonce thismodel sync thisprimaryviewsuccess render whole view thislistentoonce thismodel error thisprimaryviewerror thismodelsave data x responsevieweventtrigger function event button click triggers event post event backend thislistentoonce thisresponsemessageviewmodel sync thisresponseviewsuccess render partial view responsemessagedust thislistentoonce thisresponsemessageviewmodel error thisprimaryviewerror thisresponsemessageviewmodelsave data x primaryviewsuccess function model response thismodelset data responsedata thisrender responseviewsuccess function model response thisresponsemessageviewmodelset data responsedata consolelog thisresponsemessageviewmodel thisresponsemessageviewrender work cases implementations callback function belongs model whole page whereas model partial question works perfectly fine cases one case render partial latest model values click button executed click another button trigger post successfully comes stores model show frontend still true whereas show behavior refresh page works perfect called taking latest model changes spent days nt understand wrong thanks time jridgewell jashkenas", "num": "3836", "d": "10/2015"}, {"title": "collectionremove requires updated documentation fix", "body": "according documentation remove model array models collection return seems part returning removed models always case latest stable release well edge version expected based documentation get back array always even array empty would allow things without worry return type problem actually returning different value types depending pass arguments see become issue open browser console backbone loaded attempting following trying following operations sure recreate collection time last one get really becomes issue since adds new item collection even though nt want add anything try see collection property increase recommendations resolve update documentation clarify various return types returns back update always return array regardless input arguments update add anything passed first argument", "num": "3835", "d": "10/2015"}, {"title": "event documentation add arguments", "body": "documentation catalog events special event fires triggered event passing event name first argument would great something added specify arguments passed trigger function also passed listener function", "num": "3831", "d": "10/2015"}, {"title": "historyupdatehash correctly encoded fragment breaks uri safari browser", "body": "fyi coding first backbone marionette project run strange uri encoding problem means far backbone professional maybe getting something wrong problem description following route marionette router handles searches get style query parameters trying persist application state need url fragment able handle special characters like \u00f6 \u00e4 \u00fc correctly therefore encode query eg loccity berlin amp loccty m\u00fcnchen call works perfectly browsers testing safari encountered navigation routine fragment decoded given backbonehistoryupdatehash updates windows location point safari desktop mobile version encodes given fragment iso query consumed javascriptbackbone anymore break code urierror calling decodeuricomponent backbonerouterextractparameters find much information web call help obvious bug anywhere got something wrong please give hint already checked encoding sides documents server delivers correct encoding well headers also say", "num": "3830", "d": "10/2015"}, {"title": "update new user caldroid android", "body": "application used caldroid library get enter user details purticular day calander view first user enter details save database used database called activeandroid orm issue try enter details another user showing previous user enterd details aslo add many user means show first enterd details dont know fix bug one help issue", "num": "3829", "d": "10/2015"}, {"title": "dropping support", "body": "jan ms essentially dropping support mind jquery lodash dropping support releases let discuss dropping next major bump backbone", "num": "3828", "d": "10/2015"}, {"title": "model id change collectionget event order", "body": "change id triggered onmodelevent swapped id collection call collectionget fails var new bbmodel var c new bbcollection model cadd fails con change id function x consolelog cget xattributesid works con change function x consolelog cget xattributesid mset", "num": "3826", "d": "10/2015"}, {"title": "modelget method returns objectprototype methods", "body": "javascript var new backbonemodel mget tostring gt function tostring native code think would correct receive case", "num": "3825", "d": "10/2015"}, {"title": "entity type part model current context", "body": "using unitofwork entity framework mvc created service layer repository controller getting entity type part model current context step services public interface idocumentservice iservice int uploaddocuments httppostedfilebase file document documents int contractid public class documentservice service idocumentservice repository public static class documentsrepository private static idatacontextasync test new datacontext mymodel getting error one public virtual void insert tentity entity entityobjectstate objectstateadded dbsetattach entity contextsyncobjectstate entity", "num": "3824", "d": "10/2015"}, {"title": "error opencv stitching project", "body": "building opencv stitching project adding available files project gets build without error error run without debugging using static libraries error shown screenshot debug program throws following message going line line error debugged firstchance exception access violation reading location handler exception program may safely continued please answer question soon possible thankyou advance", "num": "3823", "d": "10/2015"}, {"title": "collection model attribute", "body": "attribute collection expects constructor opposed attribute array model instances personally find syntax confusing would prefer one constructor attribute uppercased formats supported take may good reason syntax would find helpful know thoughts", "num": "3814", "d": "10/2015"}, {"body": "ooo good find", "d": "10/2015"}, {"body": "dupe others", "d": "10/2015"}, {"body": "nope nt setting attributes construction js var model function attrs attrs defaults attrs result defaults var new model hasownproperty test mattributeshasownproperty test gt false", "d": "10/2015"}, {"body": "right related nt name keys admonition seems fairly relevant", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "nt name keys watch seems fairly prescient creating model arbitrary keys nt mercy runtime use right related related slightly issues conflicts properties nt define one prevents creating model reserved properties", "d": "10/2015"}, {"body": "yeah agree justin would consider bug", "d": "10/2015"}, {"body": "aside using objectcreate null place comes worms would propose", "d": "10/2015"}, {"body": "use times need argument orders adjusted", "d": "10/2015"}, {"body": "feels like halfsolution drops readability fine go still think avoid et al app least", "d": "10/2015"}, {"body": "could modify check notskip assignment existing value firefox experimenting making nonwritable would nt classify bug behaving design anything request would enhancement change", "d": "10/2015"}, {"body": "changing introduce subtle bug apps relied behavior let tread carefully", "d": "10/2015"}, {"body": "would nt effect case behavior assign even value exists value still assign change allow assigning values exist something like", "d": "10/2015"}, {"body": "jdalton mean referring case js var model backbonemodelextend defaults foo true var model new model foo undefined defaults modelget foo true extend modelget foo undefined", "d": "10/2015"}, {"body": "extend would preserve undefined adam modelextend differs semantics extend extend foo undefined defaults foo undefined thu oct pm adam krebs notifications githubcom wrote jdalton mean referring case var model backbonemodelextend defaults foo true var model new model foo undefined defaults modelget foo true extend modelget foo undefined reply email directly view github", "d": "10/2015"}, {"body": "mean referring defaults behavior", "d": "10/2015"}, {"body": "megawac aware expressionless referring line", "d": "10/2015"}, {"body": "checking source value instead destination value", "d": "10/2015"}, {"body": "well escalated quickly expecting simple solution like used would bad solution reason could come want support use cases developer intentionally creates prototype chains really wants inherited properties assigned attributes would bit strange usually things interested inherting prototype methods fields would like treat attributes model perhaps thing really like use let developer decide many properties inherited want treat attributes third approach perhaps stupid really want treat fields even worth attribute criterion decide prefer value argument passed constructor intuitively match developer intent specified attribute explicitly constructor argument used leads following idea let us traverse prototype chains find lowest common ancestor compare values fields values lca", "d": "10/2015"}, {"body": "reading code bit puzzled merging uses forin loop definition iterates fields certainly function set reason get conflict check propertyisenumerable objects one implicitly iterating", "d": "10/2015"}, {"body": "well jeremy currently taking americas bike believe decision falls braddunbar cut release pretty ugly hacks sure necessary", "d": "10/2015"}, {"body": "scaled back deopting check arguments check nt necessary think go release since nt imagine releases rather start merging prs nonbreaking generic people choose incorporate without redoing entire app think pretty good solution particular objection", "d": "10/2015"}, {"body": "arguments check nt necessary right referring presplit still fan rather start merging prs got mind complete overhaul something gradual think pretty good solution particular objection responding clarity", "d": "10/2015"}, {"body": "adding needed bugfix", "d": "10/2015"}, {"body": "looks like problem module loader setup packagejson dependencies usually marionette depending different version backbone one packagejson try stackoverflow mailing list gitter page debug backbone nt anything special", "d": "10/2015"}, {"body": "hi supritashankar kind request best left one channels questions working backbone general discussions recommend trying stackoverflow", "d": "10/2015"}, {"body": "jridgewell put first also bounty question", "d": "10/2015"}, {"body": "added jridgewell could return array even empty removed nothing get back empty array", "d": "10/2015"}, {"body": "whoops always returning array", "d": "10/2015"}, {"body": "want work pr", "d": "10/2015"}, {"body": "braddunbar mind taking look", "d": "10/2015"}, {"body": "jirgn looked today able replicate reopen provide jsfiddle causes error", "d": "10/2015"}, {"body": "yep seems like good idea dependencies drop support backbone implicitly lose support anyway syncing seems like good plan", "d": "10/2015"}, {"body": "", "d": "10/2015"}, {"body": "specifically need fix finally use still ca nt use could get rid iframe end missing supporting older browsers", "d": "10/2015"}, {"body": "besides able adopt various methods scanned backbone see fixes ie lt old ie amp earlier dropped", "d": "10/2015"}, {"body": "iframe issues affect us moving forward things besides able adopt various methods got rid underscore remember mostly objectcreate see", "d": "10/2015"}, {"body": "iframe issues affect us moving forward things dropping support means less code less workarounds less testing overhead generally less headaches allows expanding features new lowest common denominator instead boxing features doable got rid underscore remember mostly see suuuper handy though", "d": "10/2015"}, {"body": "instead boxing features doable give example happening currently seems mostly talking minor code changes anything fundamentally different backbone iframe section could removed ton code", "d": "10/2015"}, {"body": "give example happening currently really involved daytoday backbone maybe jridgewell braddunbar insights know developing lodash issue scoping features lowest supported environment comes plenty things like mapsetweakmap null prototypes etc seems mostly talking minor code changes anything fundamentally different backbone iframe section could removed ton code reduction code complexity nice though see something like supporttriage may bigger win know debugging older ie issues nt easiest many devs lack vms may volunteering oldiesupportcontact cool guess", "d": "10/2015"}, {"body": "iframe section could removed ton code nt discount history fixes done iframe tried refactoring router code times always frustrated legacy code really involved daytoday backbone maybe jridgewell braddunbar insights thankfully jquery took brunt ie code fixes history code know work around", "d": "10/2015"}, {"body": "thankfully jquery took brunt ie code fixes history code know work around jquery moves away support backbone take support burden fixes", "d": "10/2015"}, {"body": "jquery moves away support backbone take support burden fixes nah enddev code views ajax requests backfill anything missing updating latest jquery", "d": "10/2015"}, {"body": "clarify backbone wo nt drop support even though jquery amp microsoft also wo nt put effort extend support beyond history correct anguished", "d": "10/2015"}, {"body": "get rid ie workarounds history", "d": "10/2015"}, {"body": "certain extra features gain dropping support certain wo nt gain anything keeping past end support", "d": "10/2015"}, {"body": "could define gettersetter stop", "d": "10/2015"}, {"body": "news jquery somewhere know nt support neither stopping development branch", "d": "10/2015"}, {"body": "paulfalgout yes plan branch official post yet", "d": "10/2015"}, {"body": "going backbones source code set method changes triggered changed attributes one one later change event fired see assignments happening two points nt know id getting updated two points way looking get updated model works", "d": "10/2015"}, {"body": "listening event change happens event need model follow anoopmd suggestion", "d": "10/2015"}, {"body": "see many duplicates", "d": "10/2015"}, {"body": "see personally hate lowercased name sigh", "d": "10/2015"}, {"body": "strong preferences whether batches think would prefer batches avoid possible merge hell scenarios better guys", "d": "10/2015"}, {"body": "nt understand using npm package npm download use git github releases fedora package manager tied npm", "d": "10/2015"}, {"body": "tarball downloaded makes difference problem nt contain license text answer question fedora package uses npm packages npm dependency backbone satisfied actual build output two binary packages contains actual js people nt care npm requires also provides npm metadata npm requirements satisfied common way packaging js libraries fedora nowadays spec file interested change fedora package use github tarball prefer getting bit offtopic issue putting aside fedora packaging stuff npm pull tarball include license text like", "d": "10/2015"}, {"body": "hmm seems incorrect reverting sure logic keeping js library os package manager know", "d": "10/2015"}, {"body": "moving", "d": "10/2015"}, {"body": "heedster remember encountering similar issue ver upgraded ver solved problem", "d": "10/2015"}, {"body": "weird issue update would fire using upgraded problem fixed", "d": "10/2015"}, {"body": "added notice changelog incorrectly spelled corrected", "d": "10/2015"}, {"body": "reason needs stay open looks like linked pr closed", "d": "10/2015"}, {"body": "referring changes neat side effect backbonehistory longer uses jquery event methods pushstate hashchange listeners native way changing worked", "d": "10/2015"}, {"body": "eventually found rooted chrome instability shutting chrome restarting fixed behavior", "d": "10/2015"}, {"body": "problem added idattribute models assigned id removed direct assignments think works lot models little problematic regression problem error console effect components disappear application lots different cases lines code", "d": "10/2015"}, {"body": "got exactly issue backbone filipmares backbonehistoryhandlers array empty", "d": "10/2015"}, {"body": "similar problem research found two backbone versions bundled webpack project depends backbonesyphon dependent updated backbonesyphon dependency accept run npm dedupe rebuild app worked tip run webpack displaymodules know two versions bundled", "d": "10/2015"}, {"body": "correct thanks tip sun oct pm luiz am\u00e9rico notifications githubcom wrote similar problem research found two backbone versions bundled webpack project depends backbonesyphon dependent updated backbonesyphon dependency accept run npm dedupe rebuild app worked tip run webpack displaymodules know two versions bundled reply email directly view github filip", "d": "10/2015"}, {"body": "error please fix", "d": "10/2015"}, {"body": "moving", "d": "10/2015"}, {"body": "braddunbar", "d": "10/2015"}, {"body": "use", "d": "10/2015"}, {"body": "agree spent quite lot time figuring firing unset server use workaround aratlas meanwhile", "d": "10/2015"}]