[{"title": "introjs ends opening brace", "body": "see srcintrojs", "num": "2747", "d": "11/2015"}, {"title": "issue nodestrophe module", "body": "installed nodestrophe module jsdom version run file got error set nodename throw new coredomexception upgrade jsdom version error resolved got new error elemattributes nodenametolowercase realname typeerror read property tolowercase undefined indexjs file code var strophe require nodestrophe strophe var strophe strophestrophe var boshservice connection new stropheconnection boshservice connectionconnect abhishek localhost onconnect running file using node index requirement nt need run browser need make connection nodestrophe bosh send message tried running browser using strophejs javascript library latest jsdom workes fine seems problem nodestrophe module please help", "num": "2745", "d": "11/2015"}, {"title": "map method flattening arrays", "body": "hi using little confused output would expect function return array arrays instead returns flat array understanding bug differs beahvior get native js underscore lodash return expected array arrays example js map function el return x el gt x x x jquery deviation standards intentional fixed thanks ps looks like issue referred", "num": "2743", "d": "11/2015"}, {"title": "html nt return dynamically created markup expected", "body": "seems like unexpected behaviour let know mistaken traced couple different things dynamically created markup ends array elements html referenced refers first element array hence inner html first element returned seems like ways fix check thislength gt either return outer html element array nice create fake element div example append element return inner html nicer still great possibly something else thinking familiar code around sure missing edge case scenario able workaround issue means thought seemed odd", "num": "2742", "d": "11/2015"}, {"title": "nodes created srccsssupportjs break dom phantomjs environments", "body": "jquery inserts div dom page load appended element subsequently removed dom invalid state interim since tags valid outside issue web crawlers using phantomjs results html may recorded element removed resulting broken html experiencing issue single page app crawler visits site phantomjs loads requested page served generated html crawler reproduce spoof user agent string visit site using browser developer tools inspect dom see tags et al belong nested within looking source see culprit rogue inserted using pinpointed appended jquery appending maintain compatibility environments tests nt always exist element appended crawlers allow blacklist elements selector luck case work nt suggestion add discrete selector element allow easily blacklisted thinking submitting pr address issue using data attribute selector supported phantomjs well avoids collisions ids classes may wild let know thoughts issue even worth addressing", "num": "2741", "d": "11/2015"}, {"title": "elemfind selector adds id null elem", "body": "elemfind selector adds id null elem reproduce steps open firefox go open console developer tools execute html find zzz go inspector look root html node id null attribute chrome id null absent developer tools html node blinks indicate changes", "num": "2740", "d": "11/2015"}, {"title": "default id selector work expected jquery", "body": "default id selector work expected jquery please fix sample code code var lt var dynamiccontent jquery id dynamic dynamiccontenttext body append dynamiccontent alert jquery select dynamic text var myelement documentgetelementbyid dynamic alert default myelement text", "num": "2739", "d": "11/2015"}, {"title": "uncaught typeerror thisget function queryselectorall find function", "body": "getting error uncaught typeerror thisget function queryselectorall find function error message trying loop forof noniterator property error getting jquery find function", "num": "2738", "d": "11/2015"}, {"title": "add unhandled exception notices deferred", "body": "right exception silently swallowed nt think ship behavior maybe message may end yelling rejections might dealt handler attached later time one possible tradeoff would generate console warnings errors seem programming mistakes prevents really bad mistakes example typo function name complex cases could recommend people use native promise consistently available across supported platforms since easier debug", "num": "2736", "d": "11/2015"}, {"title": "regex replacement html break snippet structure", "body": "hard trace working drupal project discovered appears bug rxhtmltag regex jquery string using reproduce issue reference rxhtmltag regex jquery running jquery html change string thusly note addition extra right b closing slash edittarget removed sure design use case wreaking havoc nt know fix never debugged jquery core deferring experts let know provide additional information might help get fixed", "num": "2734", "d": "11/2015"}, {"title": "browserifyed jquery exposing buggy global object", "body": "numerous guides internet recent versions jquery use browserifyed project like however works within bundled js environment produces really weird bug exposes global function function buggy nonfunctional demo mainjs var require jquery window fix command line packagejson html inside browser latest chrome return get real results using manually attached version believe bug might cause bugs plugins anything autodetects jquery", "num": "2733", "d": "11/2015"}, {"title": "prop selected true work expected", "body": "selecting option prop select true behavior expected testing firefox chrome safari behavior consistent following example two selected ie however result four may comment line andor test cases expected result last prop selected browsers", "num": "2732", "d": "11/2015"}, {"title": "selector two backslashes working", "body": "form documentation use metacharacters amp lt gt literal part name must escaped two backslashes issue two backslash working msg percentage videoid msgvideoidreplace amp lt gt g amp lt", "num": "2731", "d": "11/2015"}, {"title": "attr getter nt accept characters firefox", "body": "following html body html hello following code part prints chrome undefined firefox part prints browsers hit angularjs see info edit dmethvin says works ie", "num": "2730", "d": "11/2015"}, {"title": "package distribution ignores build dependencies npmignore", "body": "may edge case issue even nonissue love hear thoughts required build dependencies ignored based file following commits contribute change currently relying published package module stands right distributed package rebuilt module exclusion various required files ignored looking make hook seems current solution would include building works feels little dirty blame package managers one wink also worth pointing bundling browser exclusion modulesfile size effect thanks", "num": "2727", "d": "11/2015"}, {"title": "release progress", "body": "instead porting bug fixes branch decided go opposite way reverting backincompat commits tried conventional approach first another three proved ineffective since lot conflicts chosen approach prompted use new qunit api style fixes find three lists one reverted commits one questionable commits backcompat might inappropriate release also list reverted commits requires special attention would expect reviewers check lists current state branch verifying api nt include new features nt break backcompat done overall correctly processed commits started oct questionable commits drop support opera firefox lt safari lt old blackberry callbacks module change considered bug hides adds allowed semver minor version might inappropriate release also documented changes signature needed migrate cc dmethvin adds deprecates allowed semver minor version might contracdict release also documented hides hides changes signature remove additional param could nt find docs documented acceptable change minor hides hides even though subject commit reads adding unit tests jqueryanimation changes logic interface module cc gnarf reverted commits reason api change behaviour name ajax always use script injection globaleval commit issue pr reason api change behaviour name effects reintroduce use requestanimationframe commit issue pr reason followup commit name effects improve raf logic commit pr reason api change removed methods name deprecated drop size andself methods commit issue pr reason adherence latest version dom specification name manipulation support datauri scripts insertion commit issue pr reason api change behaviour name core throw error rather returning collection commit issue reason followup commit adherence latest version dom specification name manipulation improve test datauri commit reason api change behaviour name manipulation make wrapall funarg execute commit issue pr reason api change behaviour name callbacks nt abort execution lock commit issue pr reason api change proprties removal name core remove deprecated context selector properties commit issue pr reason api change return value name core return empty array instead null parsehtml commit issue pr reason api change return value name followup commit manipulation support datauri scripts insertion commit issue reason api change methods removal name ajax remove deprecated extensions ajax promise commit issue pr reason promise interoperability name deferred backwardscompatible standards interoperability commit issue pr reason api change feature name wrap support unwrap selector selective unwrapping commit issue pr note could included minor release need documentation reason api change behaviour name event remove guard falsy handler argument jquery method commit issue pr reason api change behaviour name data include digits camelcasing commit issue reason api change behaviour name data always camelcase keys data commit issue reason api change behaviour name data camelcasing ignore case commit issue reason api change behaviour name offset fix offset correctly work shadowdom commit issue pr reason followup commit offset fix offset correctly work shadowdom name offset allow offset setter throw disconnected elements commit issue reason followup commit offset fix offset correctly work shadowdom name offset remove ownerdocument check offset getter commit issue reason api change behaviour name css ignore css cascade show hide etc commit issue issue pr reason followup commit css ignore css cascade show hide etc name css make showhidetoggle methods module commit issue pr reason followup commit css ignore css cascade show hide etc name css fix amd mode new showhide module commit reason followup commit css ignore css cascade show hide etc name effects fix loading showhide amd mode commit reason api change event removal name core remove custom ready event commit issue pr reason api change events removal name event remove deprecated event aliases commit issue pr reason followup commit event remove deprecated event aliases name ajax remove remnants load event alias handling commit pr reason revert api change name revert offset allow offset setter throw disconnected elements commit reason api change new method name deferred add catch handler commit issue note could included minor release need documentation reason api change behaviour name css make css width amp css height return fractional values commit issue pr reason api change signature name remove additional parameters easings commit issue pr reason api change behaviour name ajax mitigate possible xss vulnerability commit issue pr reason followup commit ajax mitigate possible xss vulnerability name ajax nt expect crossorigin tests run envs support commit reason api change behaviour name attributes set properties false removing booleans commit issue reason followup commit attributes set properties false removing booleans name attributes remove flakey test selected attribute commit reason api change behaviour name ajax formencode requests bod commit issue pr reason api change behaviour name attributes return empty array selectmultiple values commit issue pr reason api change behaviour name dimensions outerwidthheight include scrollbar commit issue pr reason api change return value name dimensions empty sets return undefined commit reason api change signature change name manipulation execute scripts iframe iframe context commit issue pr note depends ajax always use script injection globaleval complicated reverts compatibility standard promises cc changes cc might notice included new nt think might good opportunity test new methods wild would require documentation updates though ones related module rewrites like method would found productive could applied branch cc jquerycore", "num": "2723", "d": "11/2015"}, {"title": "jquery", "body": "problem labels second stage", "num": "2722", "d": "11/2015"}, {"title": "syntax error occurs first event delegated event", "body": "let illustrate jquery reports syntax error css selector called instead reports error event released", "num": "2720", "d": "11/2015"}, {"title": "selected option changes ie forwardback button", "body": "ie confirmed detaching nonselected option select dropdown navigating another page back eg click forward back buttons selected option changes test case selected selected however navigate away page back selected instead ff chrome problem test case html selectoptiondetach iejquery bug selected selected selected function option eq detach", "num": "2719", "d": "11/2015"}, {"title": "android basic tests time", "body": "android basic tests master time oth jquery tests mostly working even though longer load test files testing module perhaps problem source joined swarm local emulator running instead arm emulator passed nt help maintaining lots problems android testing apparently even running basic tests problematic restarting jobs nt help nt work browserstack android version prefer drop android completely jquery since one else except markelog thinks well except mobile folks dropping completely right arschmitz remove periodic run add note release process release one fire local android emulator amp run basic tests testswarm job useless anyway stands", "num": "2717", "d": "11/2015"}, {"title": "add tests use jqueryspeed explicitly", "body": "lot things would nt work nt work since decided document need tests correspond might used externally", "num": "2716", "d": "11/2015"}, {"title": "overwrite fn", "body": "sure open yet could please dumb overwrite fn bad jquery object gets overwritten registered plugins gone cms plugins using jquery use noconflict maybe overwriting example include code cdn registered plugins gone forever userdeveloper problem jqueryobject gets overwritten another version losing plugins unacceptable", "num": "2715", "d": "11/2015"}, {"title": "include instruction developing amd", "body": "amd mode qunit test suite could extremely useful developing jquery ie without waiting results direct command think include readme", "num": "2714", "d": "11/2015"}, {"title": "jquery async problem", "body": "apparently old issue new wrinkle like others reported various sites eg stackoverflow occasionally get jquery error message case offending code jquery file relevant information states could find use xhropen jquery looked jquery source file found source problem set triggers console log error browsers changing problem ie console error disappears reason set false specs say bad practice feature deprecated", "num": "2712", "d": "11/2015"}, {"title": "progress", "body": "currently nt documentation progress funky behaviors dmethvin proposed drop current progress passthru generate one progress notification resolved subordinate promise", "num": "2710", "d": "11/2015"}, {"title": "jquerywhen explore giving greater precedence promise", "body": "see discussion pr related currently js resolvevalues amp amp jqueryisfunction method resolvevalues promise else resolvevalues amp amp jqueryisfunction method resolvevalues putting breaks stuff involving expected contexts resolved values across multiple deferreds handling deferreds might still preferable", "num": "2709", "d": "11/2015"}, {"title": "proper work hidden visible selectors", "body": "element property display inline reason collection request hidden collection visible", "num": "2708", "d": "11/2015"}, {"title": "jquery cousins method making dom tree table", "body": "hello world find cousins would give p id click coding dom tree tranform table get cousin based table side side analysis ie oxo elements x indicates space cousins could", "num": "2705", "d": "11/2015"}, {"title": "types explain named functions passed", "body": "according page documents virtual types like selectors enhanced pseudotypes like events everything wanted know functions mentions function javascript either named anonymous provides examples declarations however word example passing named functions supported numerous jquery functions change following discussion explains note explanation read description functions take function arguments example says handler type function event eventobject function foo bar means specified somewhere", "num": "2704", "d": "11/2015"}, {"title": "add css tests setting negative padding borderwidth", "body": "clipped zero see", "num": "2700", "d": "11/2015"}, {"title": "members emails created", "body": "figured capitalize already registered email successfully register new member email", "num": "2698", "d": "11/2015"}, {"title": "remove use event aliases unit tests", "body": "would handy able test events without module loaded", "num": "2691", "d": "11/2015"}, {"title": "map vs javascript map", "body": "jquey nt behave javascript dealing undefined values array demo js var x test consolelog xmap string returns undefined undefined test consolelog map x string returns undefined undefined test appears versions jquery behave manner would think jquery would internally fall back javascript arrays", "num": "2690", "d": "11/2015"}, {"title": "commonjs avoid global custom window passed factory", "body": "commonjs scenario lines may result one things amp exists gt exported thing jquery using global set otherwise custom implementation passed factory flag passed gt global created thought moment might want pass along second parameter imo set true case without asking anything someone invokes trivial attach needed fact behave differently commonjs based initial setup worries", "num": "2688", "d": "11/2015"}, {"title": "way jquery work script tags electron", "body": "currently nt seem possible include jquery using script tags electron issue details problem electron guy suggest using require bit problem us way components shared across web desktop versions like understand possible jquery available via windowjquery window included script tag electron also like know might possibly way get work thanks help", "num": "2686", "d": "11/2015"}, {"title": "jquery memory leak", "body": "hi guys developing website using aspnet jquery frameset frames althought unsupported target clients use windows xp encountered memory leak everytime page rendered frame element also read several articles states memory leaks using frames confirm bug well first tried website browsers chrome firefox seems memory leak nt exists get back downgrading jquery version step step started stopped current version memory leak doesnt exists nt bump yet articles problem encountered hope shed light regarding thank power jquery team", "num": "2685", "d": "11/2015"}, {"title": "text support email fields", "body": "jquery customeremail text false input fields return true tel kinds text fields jqueryfnjquery", "num": "2683", "d": "11/2015"}, {"body": "thanks opening issue please provide reduced test case", "d": "11/2015"}, {"body": "timmywil", "d": "11/2015"}, {"body": "designpixelz ah argument order swapped", "d": "11/2015"}, {"body": "guess built match close brace", "d": "11/2015"}, {"body": "introjs concatenated beginning built file outrojs end jquery contained syntax error unable run fine", "d": "11/2015"}, {"body": "duplicate", "d": "11/2015"}, {"body": "mmm looks like years ago issue raised discarded would time reconsider", "d": "11/2015"}, {"body": "behavior documented nearly decade jquery used internally require behavior best thing would create plugin", "d": "11/2015"}, {"body": "documentation pretty clear though first element", "d": "11/2015"}, {"body": "oh ok good know nt realize matched element created element bad", "d": "11/2015"}, {"body": "provide information versions jquery phantomjs using process statement strikes suspect results html may recorded element removed especially since function adds immediately removes div run relevant support property needed quite strange time snapshot dom exactly seem sh curl silent location useragent sed n", "d": "11/2015"}, {"body": "reason moved attaching test nodes former nt always exist reliable way wait wait document ready used problem putting jquery scripts end body enough need wait document ready well otherwise code would execute support tests computed leading bugs like mentioned since node attached amp removed synchronously seems unlikely get dom snapshot middle performing test unless one breaks phantomjs reason leaves dom unstable state", "d": "11/2015"}, {"body": "reproduced jquery phantomjs nginx rules catch requests specific user agent string proxypass express server loads page using phantomjs responding generated html may getting called result zurb foundation part application executes js load would need css support properties based comments believe test breaking phantomjs causing element hang around right trying remove element phantomjs returns generated html unable select pretty sure limitation phantomjs fork adds selector element allow select remove working update results", "d": "11/2015"}, {"body": "discussing consider edge case closing try deal phantomjs side issue thanks", "d": "11/2015"}, {"body": "duplicate", "d": "11/2015"}, {"body": "need escape special characters identifiers", "d": "11/2015"}, {"body": "please provide test case ca nt know anything problem code look preferrably", "d": "11/2015"}, {"body": "supporting web application system log report get stack trace error follows typeerror thisget queryselectorall function objectufnfind htmldocument htmldocument nfnextendhtml jquery version used", "d": "11/2015"}, {"body": "debug jquery bug report", "d": "11/2015"}, {"body": "unhandled rejections may handled later going seems wrong could expose something like andor special event people could hook see rejections went property events need remove stuff handled careful perf although one possible tradeoff would generate console warnings errors seem programming mistakes seems like good tradeoff maybe could", "d": "11/2015"}, {"body": "also worth noting nodejs make working rejections easier tl dr event could consolewarn", "d": "11/2015"}, {"body": "fan console messages production library removing default unhandled rejection handler would rethrow another handler attached", "d": "11/2015"}, {"body": "nt time address today talk next meeting opposed core library opinion still maintain plugin problem happy write documented current best practices", "d": "11/2015"}, {"body": "note blog post nt think added anything apijquerycom deferredthen page best place", "d": "11/2015"}, {"body": "also agree supporting promisesa mixed bag reason inclined leave user warn strongly allowing phantom errors", "d": "11/2015"}, {"body": "default swallows errors really bad though especially compared current behavior gives immediate feedback programming errors", "d": "11/2015"}, {"body": "bad argument made comes territory either way probably equipped make decision code review backlog clear could mock something", "d": "11/2015"}, {"body": "ref", "d": "11/2015"}, {"body": "looking closely see original html invalid closing slash edittarget opening tag forgive wasting time although rubberduck effect helpful closing", "d": "11/2015"}, {"body": "running console console api functions console api defines", "d": "11/2015"}, {"body": "yeah return", "d": "11/2015"}, {"body": "sorry read seems got introduced years ago chrome firefox decided make work almost like jquery selector really confusing naming functionality guess nothing either jquery browserify gkatsev yes browser console mzgol returns", "d": "11/2015"}, {"body": "yep explains everything thanks following", "d": "11/2015"}, {"body": "remove red herring special characters values nt change outcome simpler case last selection changing text show able select right element bare dom example without jquery exhibits problem", "d": "11/2015"}, {"body": "browser bug perhaps work around prophook sets option elements selected values", "d": "11/2015"}, {"body": "fix problem bug options exist select already would also need guard ones appended elsewhere seems work edge older ies affected event seems like might really performance killer especially selects lot options guess could limited feature detect ie changing property silently trying cure might lead real performance trap also wondering properties like misbehave way", "d": "11/2015"}, {"body": "setting select element instead setting properties", "d": "11/2015"}, {"body": "would nt big perf hit code size hit seems work", "d": "11/2015"}, {"body": "nt think would problem multiple options disabled readonly", "d": "11/2015"}, {"body": "yeah works sounds pretty good setting selected already set property youmightnotneedjquery", "d": "11/2015"}, {"body": "nt sound like bug report ask help jquery forum stackoverflow thanks", "d": "11/2015"}, {"body": "worked nt working since", "d": "11/2015"}, {"body": "test case", "d": "11/2015"}, {"body": "dmethvin discovered culprit changes works chrome firefox see spec say", "d": "11/2015"}, {"body": "spec says non values returns attribute value name getting element name parameter converted ascii lowercase converting ascii lowercase means changing values means firefox right wrong every browser wrong well chrome ie safari even old opera presto returns attribute value bzbarsky spec changed considering firefox exception", "d": "11/2015"}, {"body": "jquery dmethvin suggested could get rid tolowercase part needed old ie nt cause major problems ie could try use would transform", "d": "11/2015"}, {"body": "set milestone could get great", "d": "11/2015"}, {"body": "mzgol browsers used weird inconsistent case folding nt agree current spec text compromise everyone agreed something webcompatible faster weirdness browsers nt weirdness like getattribute casefolding check chrome terribly consistent cases casefolding spec currently compromise browsers need actually implement decided implement", "d": "11/2015"}, {"body": "supported browsers take care lowercasing may well remove call let browsers work", "d": "11/2015"}, {"body": "bzbarsky curiosity name converted stay since contains least one character range az", "d": "11/2015"}, {"body": "timmywil gets converted", "d": "11/2015"}, {"body": "jquery dmethvin suggested could get rid tolowercase part needed old ie info link ticket example", "d": "11/2015"}, {"body": "additional info talked irc every conclusion micha\u0142 go\u0142\u0119biowski", "d": "11/2015"}, {"body": "one past timmywil said always use getattributenode looks like tolowercase added fix", "d": "11/2015"}, {"body": "thank dmethvin say seems easy enough include complications could table though", "d": "11/2015"}, {"body": "may case removing code since already tests text unit tests made laugh reminded ticket", "d": "11/2015"}, {"body": "yeah easy might try fix well although might require internal toasciilowercase function would convert ascii letters micha\u0142 go\u0142\u0119biowski", "d": "11/2015"}, {"body": "might try fix well would nt worry like long time", "d": "11/2015"}, {"body": "still supporting oldie", "d": "11/2015"}, {"body": "still supporting oldie sure edge case nt come still good ascii names", "d": "11/2015"}, {"body": "meant would nt easy implement oldie since need remove one line", "d": "11/2015"}, {"body": "way put would add custom regex lowercased az instead long nt break anything okay since angular folks seeing bug may want", "d": "11/2015"}, {"body": "angular folks ie mzgol wanted", "d": "11/2015"}, {"body": "easy like good either way", "d": "11/2015"}, {"body": "yeah wanted simple monday wanted try whether easy fix simple solution lowercasing caused problems old ie would nt bother definitely want try first need get proper shape though", "d": "11/2015"}, {"body": "mzgol ca nt get backlog empty", "d": "11/2015"}, {"body": "timmywil time sunday go", "d": "11/2015"}, {"body": "bad", "d": "11/2015"}, {"body": "least bad application sometimes worse", "d": "11/2015"}, {"body": "timmywil wo nt time thursday want grab", "d": "11/2015"}, {"body": "mzgol sure", "d": "11/2015"}, {"body": "correct src folder included distribution building direct usage amd build jquery git repo required solution combining postinstall script git submodule nt bad", "d": "11/2015"}, {"body": "also discussion back regarding put tag tension people want one file jqueryjs jqueryminjs file want custom builds possibly even unit test result need latter best approach check tag files", "d": "11/2015"}, {"body": "wow thanks markelog know must ton work", "d": "11/2015"}, {"body": "great work", "d": "11/2015"}, {"body": "excellent job markelog clap things imo drop support opera firefox lt safari lt old blackberry imo dropping support browsers breaking change nt think firefox lt may fine supporting current current support policy change mentioning opera explicitly imo stay supported even though subject commit reads adding unit tests jqueryanimation changes logic interface effects module cc gnarf tests problematic break lot android rather add animationtween tests things imo may callbacks module change considered bug think new feature bug fix allowed introduce nonbreaking new features minor release fine hides jqueryswap undocumented fine adds jqueryhtmlprefilter allowed semver minor version might contracdict release also documented nt understand might contracdict release part change looks ok changes signature jquery init needed migrate cc dmethvin undocumented may whatever want especially minor rest looks also fine remarks might notice included new jquery htmlprefilter nt jquerydeferred catch think might good opportunity test new methods wild would require documentation updates though ones related module rewrites like catch happy nt include promisesacompatible promise libraries specialcase jquery checking reject promisesacompliant fact deferreds allows libs check allow jquery promises otherwise hard support trying sth like pr chaiaspromised", "d": "11/2015"}, {"body": "still needs verification team review week please", "d": "11/2015"}, {"body": "agree mzgol drop support reverted maintain support levels anything want regarding showhide changes", "d": "11/2015"}, {"body": "already reverted commit dropped support browsers branch micha\u0142 go\u0142\u0119biowski", "d": "11/2015"}, {"body": "yeah decided one meeting ago would need make opera pass anyone working also concerns remember preferable check much possible decided meeting deadline wednesday", "d": "11/2015"}, {"body": "try check commits ca nt promise able thursday see remaining opera bugs fixed afterwards nt seem major unless wrong", "d": "11/2015"}, {"body": "remaining opera bugs fixed afterwards could became avalanche reverts timmywil think move deadline thursday", "d": "11/2015"}, {"body": "remaining opera bugs fixed afterwards could became avalanche reverts expect revert anything else fix bugs really nt think important necessarily get fixed within next days one onerror handler called jqueryparsehtml maybe opera lacking api sth another one css lineheight working", "d": "11/2015"}, {"body": "regressions minor code changes would difficult prefer noting regressions release notes talking pretty old version opera", "d": "11/2015"}, {"body": "regressions minor code changes would difficult prefer noting regressions release notes talking pretty old version opera look definitely thursday otherwise agree want make sure easy fix issues", "d": "11/2015"}, {"body": "anyone chance look closely", "d": "11/2015"}, {"body": "okay waiting next meeting", "d": "11/2015"}, {"body": "labels second stage hard get something report closing", "d": "11/2015"}, {"body": "although way problem also exists syntax error changed title clarify standard css selectors common case jquery never parses string passes string dom method fails fall back parsing string sizzle point would detect syntax error give syntax error message point called need make call use selector discarding result since many errors may exist selector eg nonsyntax typo like convinced benefit justifies cost", "d": "11/2015"}, {"body": "okay behavior upfront cost nt worth", "d": "11/2015"}, {"body": "agree dmethvin amp timmywil", "d": "11/2015"}, {"body": "seems like enough consensus close", "d": "11/2015"}, {"body": "timmywil behavior makes debugging harder costs nothing fix test selector freshly created element nt drop result since result always empty collection anyway", "d": "11/2015"}, {"body": "timmywil behavior makes debugging harder costs nothing fix feel like debugging nt really harder created event handler changed selector likely testing functionality still works find rather quickly whether syntax error either way", "d": "11/2015"}, {"body": "scottgonzalez advocating broken behavior general early error reported easier debugging especially talk syntax errors", "d": "11/2015"}, {"body": "abozhilov broken behavior broken selector moot selector valid takes actually using selector find invalid functionally reason use element needs checked yes takes longer realize selector invalid find pretty quickly try use", "d": "11/2015"}, {"body": "soon run unit integration tests see problem pretty early tests would problem rum telemetry could catch since outright thrown error", "d": "11/2015"}, {"body": "dmethvin missing entire point broken selector entire app must work nothing stack trace image debug code someone else missed test part made typo find files cost anything fix issue prefer complicated debugging right", "d": "11/2015"}, {"body": "cost anything fix issue keep saying zero cost implies nt need change anything modified copy jquery locally fix see solution image debug code someone else missed test part made typo find files sure console erroneous selector problem caused recent change code base reduce possible cause looking diff", "d": "11/2015"}, {"body": "repro edge bare file contents jsbin although nt work jsbin note jquery use js selected selected selected windowonload function var sel documentgetelementsbytagname select selremovechild selfirstelementchildnextelementsibling caused jquery", "d": "11/2015"}, {"body": "close one patchwelcome nt think work around willing look pull request", "d": "11/2015"}, {"body": "running release fine gotten point ci tests wrong often useless", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "basic test suite disabled master added info manual android testing wiki done closing bug timmywil assigning milestones bugs like without milestone indistinguishable invalid bugs closed maybe big problem", "d": "11/2015"}, {"body": "yea kinds tickets nt quite fit milestone probably set anyway enter archive something working", "d": "11/2015"}, {"body": "overwriting anywhere sure asking include two versions jquery site default second one overwrite amp global variables restore previous state use plugins previous version available please provide specific description problem", "d": "11/2015"}, {"body": "constructor said objects overwritten workaround used cms difficult touch developers cms extension example store plugins globally reinclude constructor", "d": "11/2015"}, {"body": "setting currently defined instance line executed nt exist overwriting anything except amp restore defined amp never overwritten", "d": "11/2015"}, {"body": "mean overwriting reinclude script anything object exists overwritten instead overwriting log warning message possible reinclude already registered plugins otherwise user problem know explicit object think anybody could coincidentally end includes automatic configuration whatever result jquery working using plugins throw x function error case overwrite object saved far well reinclude plugins fine explicit workaround jquery serve automatic solution gets one time included", "d": "11/2015"}, {"body": "mean overwriting reinclude script anything object exists overwritten instead overwriting log warning message possible reinclude already registered plugins would big compatibility break idea including jquery result two pieces independent code hence ca nt reinclude plugins might break code want share think anybody could coincidentally end includes automatic configuration whatever someone better see error try use plugin amp notice using two jquery copies instead one silent errors worst cases using multiple jquery copies avoided", "d": "11/2015"}, {"body": "cms plugins using jquery use noconflict maybe overwriting example include code cdn registered plugins gone forever issue include jquery amp plugins cms includes jquery copy without using lose access plugins seems weird include jquery amp plugins cms code access jquery copy", "d": "11/2015"}, {"body": "best scenario would everybody uses uses variables thats gon na happen one faulty extension could stop site working issue example include scripts head footer also customized headdata via typoscript ordering neither perfect fail safe scripts developer thinks good idea include jquery footer maybe mine script course using since know random user understand point view bad idea reinclude plugins default could overwritten plugin includes jqueryreinclude include nt matter", "d": "11/2015"}, {"body": "bad idea reinclude plugins default multiple jqueries site usually result couple independent code parts uses jquery plugins particular plugin might compatible jquery version used another snippet might logic place checks particular plugin expects etc easier reason sure external code attach plugins issue example include scripts head footer also customized headdata via typoscript ordering neither perfect fail safe scripts fnagel familiar would able reply", "d": "11/2015"}, {"body": "understand point view bad idea reinclude plugins default fact could completely broken newly loaded version jquery scenario described really bad practice something bad happens user land nt mean something equally bad happen inside jquery current logic multiple versions jquery sound highly unlikely ever change", "d": "11/2015"}, {"body": "agreed feel free discussion unlikely make changes", "d": "11/2015"}, {"body": "good idea could something like developing jquery useful run tests amd mode distribution files need rebuilt test suite reflect recent changes viewing qunit test page click load amd", "d": "11/2015"}, {"body": "rather readme included along similar notes contributing", "d": "11/2015"}, {"body": "makes synchronous requests ensure correct sequencing scripts embedded html evaluation calls dom manipulation functions words root cause direct jquery evaluate scripts inbound html remove warnings remove scripts see also especially", "d": "11/2015"}, {"body": "provide test case also note cases cause element considered hidden see docs", "d": "11/2015"}, {"body": "yup element visible time according definition visible element could width height content", "d": "11/2015"}, {"body": "jquery exactly correspond elements layout boxes even dimensions resolved", "d": "11/2015"}, {"body": "good point", "d": "11/2015"}, {"body": "closing due inactivity", "d": "11/2015"}, {"body": "plugin first nt one like already get momentum consider adding core since pretty conservative new api nevertheless thank reaching", "d": "11/2015"}, {"body": "thanks opening issue wrong repo please open issue review", "d": "11/2015"}, {"body": "noting regression event aliases removed managed creep back may inevitable doubt want start testing module subsets regular basis", "d": "11/2015"}, {"body": "closed", "d": "11/2015"}, {"body": "imagine much code would break would benefit", "d": "11/2015"}, {"body": "one point might want deprecate helper methods native equivalents amp stop using internally years might remove would change semantics amp friends little sure feasible particular use case sounds like edge case imo nt break much code opposed switching parameter order would break everything also edge case nt feel like change", "d": "11/2015"}, {"body": "even lodash supports sparse arrays nt think start", "d": "11/2015"}, {"body": "plus differences value handling returns callback depend behavior internally want standard javascript behavior use", "d": "11/2015"}, {"body": "provide history due concluded browser emulators node need global set node commonjslike environment environment browser emulator usually unfortunately node module handling leaked emulators browserify case already covered window document present common use case requiring jquery node still use jquery within emulator emulators still allow node module variables leak think leave way", "d": "11/2015"}, {"body": "currently scenarios gt nothing exported global set amp exists gt jquery exported global set amp nt exist gt factory accepting parameter exported running set global nt like amp diverge means global set global set looks like magic note scenarios may happen used browser emulators node think behave way", "d": "11/2015"}, {"body": "quite order pass scenario would hope one node", "d": "11/2015"}, {"body": "actually think good", "d": "11/2015"}, {"body": "also given finicky changes intro past nt want make changes someone opens ticket use case", "d": "11/2015"}, {"body": "timmywil quite order pass scenario really line means variable present scope picked setup function obviously exists yes verified console", "d": "11/2015"}, {"body": "looking understand happening reported issue person would like global exported nodelike environment someone fact open ticket noticed inconsistency", "d": "11/2015"}, {"body": "yes verified console console variables created global node everything wrapped closures", "d": "11/2015"}, {"body": "console variables created global variables verify global also please read explanation needed scope", "d": "11/2015"}, {"body": "looking introjs understand happening reported issue person would like global exported nodelike environment nt think valid use case something way user using electron electron global necessary case edited", "d": "11/2015"}, {"body": "verify global also please read explanation needed window scope read explanation still nt see window would make jquery scope", "d": "11/2015"}, {"body": "would jquery uses jquery find way would possible node wonky prototypical behavior way work global", "d": "11/2015"}, {"body": "actually think suppose would work require executed scope module requiring seems like would adverse side effects", "d": "11/2015"}, {"body": "keep forgetting looking using still surprised right though see argument", "d": "11/2015"}, {"body": "confirmed work way suspect able access", "d": "11/2015"}, {"body": "makes sense think modules node able leak modules even modules require rule module encapsulation", "d": "11/2015"}, {"body": "yeah looks funky created two scripts running prints expected get weirder results directly repl though const foo bar undefined foo bar globalfoo undefined var util require util undefined util foo scope maybe repl much magic inside ps run using everything evaluated strict mode", "d": "11/2015"}, {"body": "maybe repl much magic inside yea perhaps", "d": "11/2015"}, {"body": "wrong button", "d": "11/2015"}, {"body": "case see reasoning exists right assume emulated browser environment environment leaks hit line means global set contrary wish set environments nt reach latter line sets global understand happening", "d": "11/2015"}, {"body": "ah ok always set set set browser emulators setting would mean setting question remains one related reported whether skipping setting global browserify mistake maybe increases logical complexity everything agree changing may risky scenario presented typical every choice make someone unhappy", "d": "11/2015"}, {"body": "question remains one related reported whether skipping setting global jquery browserify mistake used export global browserify case got multiple complaints inclined leave asis case equivocal best inclined trust past reports global unexpected environment", "d": "11/2015"}, {"body": "sounds good closing wontfix someone disagrees comments welcome always reopen", "d": "11/2015"}, {"body": "never used electron ca nt answer question nt seem like good question ask bug tracker maybe stack overflow", "d": "11/2015"}, {"body": "ok already questions stackoverflow regarding answered solution much use us hoping get input people know jquery internals well electron guys state hoping understand jquery perspective", "d": "11/2015"}, {"body": "ca nt use require environment nt allow use sounds broken", "d": "11/2015"}, {"body": "mzgol use require electron quirk builddeployment system caters web desktop makes requireing jquery less ideal us", "d": "11/2015"}, {"body": "noticed current logic little inconsistent reported details really issue slightly related", "d": "11/2015"}, {"body": "reference continuation forum post arvstract would able take look diff posted identify possible sources leak would help us lot", "d": "11/2015"}, {"body": "hi dave honest familiar internal code jquery works tried reporting bug observe unit test hope jquery team use reference currently reviewing url gave best understand code also share ideas help isolating code causes memory leak thank", "d": "11/2015"}, {"body": "arvstract sure love get help bug since seeing mentioned change full differences versions put line back leak go away may lost cherrypick", "d": "11/2015"}, {"body": "looking bit pretty sure lost leakplugs move make support checks lazy right nt likely need brokenout feature detects attributes manipulation css effects already event data", "d": "11/2015"}, {"body": "unrelated making support tests lazy kept checks line removed markelog claimed bug existed unpatched versions false", "d": "11/2015"}, {"body": "sure see summoned nt answer sorry bug caused memory leak event handlers fixed several fixed least one applies sure whether patterns trigger leak would nt surprise markelog recall mean give break decade smile", "d": "11/2015"}, {"body": "sure seems comment might referenced update although microsoft says memory issues solved evidence resurfacing new different leaks seems case though since assigning everything null described article would nt help arvstract describing sounds like iframe issue could nt find mentions update fix released nt matter mentioned original discussion issue present leak small amount memory unless app constantly removing adding iframes jquery inside work fine app fact would nt advice adding fix back support unusual use case", "d": "11/2015"}, {"body": "least one applies sounds case since expandos", "d": "11/2015"}, {"body": "agree nt see could apply point think waiting arvstract provide information case appears leak", "d": "11/2015"}, {"body": "hi markelog website composed frameset structure less like navigating constantly mainframe keep loading pages jquery causes memory build released existent upon refreshing page memory clears mean unless app constantly removing adding iframes jquery inside yes constantly removing adding iframes jquery hi dmethvin truly sorry still unable provider information bug encounter busy fixing bugs website past days decided downgrade jquery sorry tell still guarantee yet review pinpoint issue might possibly occur", "d": "11/2015"}, {"body": "imagine suffers memory leaks situation frameset page never unloaded leak would cleaned could also vivid imagination would good get info whether putting null assignments back solves problem nt like change code without good test case nonframeset page leak support tests minor since happen", "d": "11/2015"}, {"body": "text fields email telephone fields respectively documentation allows us select elements", "d": "11/2015"}, {"body": "looks like text field", "d": "11/2015"}, {"body": "visual representation may mean surely would nt using new types", "d": "11/2015"}, {"body": "use pretty much mobile safari uses input type present right keyboard user aspects text fields text fields support keyboard input display entered information text field support masked input still text field regardless capability format user input problem need make live validation manually pick kinds text fields including tel email text help use trail selectors find text fields", "d": "11/2015"}, {"body": "dom nt tell us input presented keyboard input tells us matches inputs absentempty text ca nt changed would break backwards compatibility desired selection cumbersome however could define use custom selector like", "d": "11/2015"}, {"body": "said firefox bug worth pointing explicitly practice firefox believe chrome matches element last target anchor scroll nothing element id right eg could changed element got scrolled everything intended meaning originally introduced two relevant specs defines matches something called target element nt define since document language html defines target element html document latter specified specification nt match browser behavior initial meaning prohibitively expensive implement anyway servo tried ran serious issues see spec issue tracking situation back observed behavior load problem defining element last scrolled depend browser decides scroll pageload answer depends standard gecko looks like scroll generally happens least end parse though maybe additional trip event loop somewhere people care enough dig check think also happen heuristics pageload totally subject change nt relied making work reliably starting firing nt already seems like pretty reasonable thing", "d": "11/2015"}, {"body": "actually might good reasons scroll though think gecko always scroll really happen believe layout stable avoid jumping around page still stylesheets loading time happens may want avoid scroll point", "d": "11/2015"}, {"body": "bzbarsky saying element nt match therefore nt get updated styles page actually scrolls given application styles could make substantial changes generally could nt guarantee stable layout without", "d": "11/2015"}, {"body": "precise sequence events function gecko takes value argument follows skipping various complexity around svg whatnot find target element set element url target state starts match try scroll element view trying scroll something view besteffort attempt update layout scroll besteffort layout update takes long user trying interact page interrupt part way use whatever got far", "d": "11/2015"}, {"body": "hmmm example mentioned whatwg ticket bothers duplicate id values instead change id current target first li css update next either seems na\u00efve implementation would match browsers css either bug report browsers nt consistent sizzle nt normalize sizzle nt report element browser", "d": "11/2015"}, {"body": "decided use symbols would additional code path would nt save performance nodes use regular property might save perf objects dominant use case", "d": "11/2015"}, {"body": "filled two new columns google doc", "d": "11/2015"}, {"body": "also use selectornative slim build", "d": "11/2015"}, {"body": "nt think long incorrect scoping rules cutting functionality fine rather change", "d": "11/2015"}, {"body": "go sizzle well easier explain particular api left versus api behaves differently cases also easier debug", "d": "11/2015"}, {"body": "fair enough", "d": "11/2015"}, {"body": "agree bilaridis using ie microsoft mvc client validation checked checkbox gives error due data undefined unexpected token works chrome though adding check undefined solved us", "d": "11/2015"}, {"body": "martinbring jqueryparsejson polyfill jsonparse going change works nt pass undefined", "d": "11/2015"}, {"body": "hi mzgol thank responding quickly see comment could interpreted using script libraries external part passing undefined using jquery libraries ie part validation libraries passing undefined validating checkboxes case see different existing workaround android null proposed one ie undefined kind regards martin", "d": "11/2015"}, {"body": "please provide minimal test case reproducing issue without hard us say problem lies jquery different place micha\u0142 go\u0142\u0119biowski", "d": "11/2015"}, {"body": "martinbring yeah like behaviour changed input incorrect validation lib passing value means compatible later versions jquery might want consider updating see different existing workaround android null proposed one ie undefined value correct json like primitive value like string number valid json see whereas android follows previous iteration specification prohibited values normalize behaviour mzgol martinbring jqueryparsejson polyfill jsonparse going change works nt pass undefined polyfill though shim", "d": "11/2015"}, {"body": "curious people think right move keep overflow hidden stop case seems nt one right answer userland cases things bit clear since forces completion final steps completed perhaps makes sense leave asis anyone disagrees please chime better solution", "d": "11/2015"}, {"body": "think best solution keep inanimation overflow values way nt lock may possible might depend revisit showhide actually think possible right least showhide adding left choice restoring preanimation overflow values essentially undoing animation locking overflow values though latter probably better", "d": "11/2015"}, {"body": "agree gibson nov pm richard gibson notifications githubcom wrote think best solution keep inanimation overflow values way nt lock may possible might depend revisit showhide actually think possible right least showhide adding datashow left choice restoring preanimation overflow values essentially undoing animation locking overflow values though latter probably better reply email directly view github", "d": "11/2015"}, {"body": "forgot decided want change case return case return empty array", "d": "11/2015"}, {"body": "return empty array idea ask collection ie select multiple get collection although might empty", "d": "11/2015"}, {"body": "right thanks", "d": "11/2015"}, {"body": "timmywil please remember always remove milestone amp add label closing issue getting fixed otherwise mess changelog", "d": "11/2015"}, {"body": "colors animated via css future js need jquerycolor sort nonissue future", "d": "11/2015"}, {"body": "problematic ie lt afaik rather backport", "d": "11/2015"}, {"body": "like backport", "d": "11/2015"}, {"body": "mzgol agree", "d": "11/2015"}, {"body": "closing favor tracking roadmap ongoing work necessarily done single pass", "d": "11/2015"}, {"body": "clearing milestone releasing change wo nt applicable code support", "d": "11/2015"}, {"body": "closing favor tracking roadmap", "d": "11/2015"}, {"body": "closing favor tracking roadmap principle keep mind modules", "d": "11/2015"}, {"body": "closing favor tracking roadmap", "d": "11/2015"}, {"body": "closing favor tracking roadmap", "d": "11/2015"}, {"body": "started wiki page use iterate might little easier pr maybe harder dunno start editing ideas want people nt generally read usually us linking justify changing changing reported behavior", "d": "11/2015"}, {"body": "updated wiki page reflect api design goal everyone okay take milestone", "d": "11/2015"}, {"body": "", "d": "11/2015"}, {"body": "dmethvin btw change tenets rules former word may barrier nonnative speakers commonly used", "d": "11/2015"}, {"body": "note second reversal still think correct return empty set case acceptable milestone allows breaking changes", "d": "11/2015"}, {"body": "releasing anymore commit irrelevant removing milestone amp adding wontfix label", "d": "11/2015"}, {"body": "closing due inactivity", "d": "11/2015"}, {"body": "must webkit bug affects chrome safari", "d": "11/2015"}, {"body": "since activity close always reopen someone knows want signature", "d": "11/2015"}, {"body": "sohanprstap issue nt seem anything jquery also problem different one reported cases please open new bugs nt resurrect old ones", "d": "11/2015"}, {"body": "rather backport way compat code may pose problems nodejs", "d": "11/2015"}, {"body": "wontfix since done connection", "d": "11/2015"}, {"body": "per trac bug think leave wontfix", "d": "11/2015"}, {"body": "way wrong broken thinking nt dealing argument selectornative turns still behavior difference due nature qsa scoping problem pretty much requires sizzle fix", "d": "11/2015"}, {"body": "still behavior difference due nature qsa scoping problem pretty much requires sizzle fix new injquery implementation borrows ideas sizzle much needed see info plan next major", "d": "11/2015"}, {"body": "point dom matches findall would help nobody seems hurry implement", "d": "11/2015"}, {"body": "drop ie happen conquer mars need parsing logic anyway", "d": "11/2015"}, {"body": "new injquery implementation borrows ideas sizzle much needed see jquerysizzle comment info plan next major possibly later something like selectornative nt even tokenize selector would required even streamlined engine rather injquery implementation prefer see new version sizzle drops polyfills native selectors pos handling manipulates selector something first go qsa matchesselector filtered regardless wo nt something discuss later time comes", "d": "11/2015"}, {"body": "definitely seems like much edge case handle normal processing document complete wellformed xml document could load way", "d": "11/2015"}, {"body": "closing favor tracking roadmap", "d": "11/2015"}, {"body": "timmywil grab want nt notice assigned", "d": "11/2015"}, {"body": "dmethvin feel free", "d": "11/2015"}, {"body": "failures still amp reopening proper milestone may decide wontfix perhaps disable tests android clean build", "d": "11/2015"}, {"body": "ca nt say issue left good state supported supported prominent posts display code worked wonderfully years yet defaults unhelpful error leading wild goose chases accept longer supported nearly patriotic issue last word needs bit closure", "d": "11/2015"}, {"body": "upvotes nt seem prominent maybe right either way going make due time constraints revisited later date", "d": "11/2015"}, {"body": "since waiting sizzle update moving back", "d": "11/2015"}, {"body": "general criteria adding new features seems like nt pass muster nt need internally easily done plugin cssescape polyfill already exists close someone good reason reopen always", "d": "11/2015"}, {"body": "dmethvin please apply label closing issue", "d": "11/2015"}, {"body": "reread discussion convinced arguments escape functionality going handinhand engine interpreting special characters maintain stability time going sizzle might well documentedexposed jquery well edit also claim adherence support best practice bullet point", "d": "11/2015"}, {"body": "jaubourg far get node server new york would another way solving problem probably better one vagrant", "d": "11/2015"}, {"body": "nt work much intendedwanted needed express routes rewiring routes unit tests hard part actually determine unit tests actually testing simplify node server code become mess come soon ish unit tests rewired pass ball gnarf guess see integrate node web server testing infra", "d": "11/2015"}, {"body": "looking whatwg xhr spec intentionally taken hash fragment url property jaubourg know might might ask op reported case script tag wondering reasoning excluding xhr edit additional info seems indicate stripping fragment early okay", "d": "11/2015"}, {"body": "fragments never sent servers apparently even exposed fetches appear dom visible executing scripts extremely rare case sure one script transports technically wrong long strip", "d": "11/2015"}, {"body": "interesting asked stack overflow question ago never got response add link issue pull request question comments thanks working everyone reference question", "d": "11/2015"}, {"body": "behavior change label missing ticket pay attention tickets label applied", "d": "11/2015"}, {"body": "since releasing fix depended us dropping happening jquery moving wontfix", "d": "11/2015"}, {"body": "closing favor tracking roadmap", "d": "11/2015"}]