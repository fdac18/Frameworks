[{"title": "vueresource", "body": "interested contributing restful extension vue coming backboneviewmodel background could imagine extension able specify rest resource url correcsponds vue instance providing directly vue one would extra functions available syncing resource another approach like angular features exposed separate object visionwishes vueresource see separate resource object vue interact extension class", "num": "604", "d": "11/2014"}, {"title": "failed resolve directive", "body": "custom directive subcomponent fail resolve directive node call component owns directive fiddle code use work previous versions vue even", "num": "603", "d": "11/2014"}, {"title": "make vhtml support contenteditable acting also like vmodel", "body": "know would great vhtml would directive simply combining kind filter would give ability create great dynamic forms emojis eg", "num": "602", "d": "11/2014"}, {"title": "vrepeat object updated", "body": "using object works update object added example thanks", "num": "601", "d": "11/2014"}, {"title": "vmodel working vif update", "body": "situation updating set value still holds value", "num": "600", "d": "11/2014"}, {"title": "strange behavior watch", "body": "hello strange behavior watch method collection entities want watch updates individually put updated one server instantly code look like works push new entity collection add event listener entity get updated vue considers entire collection get updated fire individual events thank", "num": "599", "d": "11/2014"}, {"title": "safari input vmodel value comes inverted", "body": "hi safari caret always stays beginning input entered values becomes inverted ps nt know supporting browser", "num": "598", "d": "11/2014"}, {"title": "filter nested array", "body": "need filter nested array change dropdown list data changed view refresh sample filtering data group group change", "num": "597", "d": "11/2014"}, {"title": "vms added via addchild observe paramattributes using custom elements", "body": "dunno explain specific vue paramattributes become interpolated strings initialisation using documentregisterelement actual usage analog shadow dom reason slightly simplified version", "num": "596", "d": "11/2014"}, {"title": "implement functionality like vwith verion", "body": "go changes md found behaviour vwith directive changed change variable child scope affect variable parent scope new directive available version implement functionality vwith write example jsfiddle expecting change parent checkbox affect child vice versa", "num": "595", "d": "11/2014"}, {"title": "component multiple extension data inheritance broken", "body": "following technic working data function gets overriden thisitems becomes available quite sure correct behaviour used technic ok using special merge function solution feeling wrong way still try use mixins object extension yet migrated yesterday great work btw extreme performance increase times app bottlenecks", "num": "594", "d": "11/2014"}, {"title": "element display immediately trigger vshow true", "body": "demo", "num": "593", "d": "11/2014"}, {"title": "vmodel placeholder fail", "body": "hey seem problem inputs vmodel placeholder attribute begin rapidly exchange focus endlessly see problem example", "num": "592", "d": "11/2014"}, {"title": "onetime bindings unescaped html", "body": "trying onetime bindings html tried using got following error supported feature thanks", "num": "591", "d": "11/2014"}, {"title": "replaces entire object argument specified", "body": "specify data object using directive blows away default properties defined component ideally think properties would merged nt happen argument supplied example given following code vuecomponent mygreeting template greeting person data greeting good news person everyone new vue el container data nobody person nobody somebody somebody would undefined first div second first case ideally object would merged existing default object instead replacing", "num": "590", "d": "11/2014"}, {"title": "vrepeat filterby within vrepeat", "body": "ca nt get working html something wrong keen ketting tried various quoteoptions also instead work many thanks klaas", "num": "589", "d": "11/2014"}, {"title": "explicitely pass data components", "body": "trying use directorjs set vuejs components create basic navigation system issue data defined main view used inside component template tried using directive without success sample repository code missing", "num": "588", "d": "11/2014"}, {"title": "change behaviour", "body": "modify fahrenheit input directly ca nt set whole numbers like number nt problem might somehow related fix introduced", "num": "587", "d": "11/2014"}, {"title": "listen element modification contenteditable container", "body": "component directive inside contenteditable container update data component removed hitting delete button way listen event", "num": "586", "d": "11/2014"}, {"title": "vueutilextend return", "body": "would mind change return instead nothing", "num": "585", "d": "11/2014"}, {"title": "add directive readyevent", "body": "want add mouseevent listener single vueinstance long compiled possible add enable directives fired course use would like use directives reason adding directives right start dozens instances need handler unknown even worse handlerfunction exist time creation", "num": "584", "d": "11/2014"}, {"title": "computed executed filter applied", "body": "wrote following code phone number phoneerr new vue el phone data phone computed phoneerr function thisphone return phone number entered return filters phonenumber function val return valreplace g filter strip character except alphanumeric hyphen error message code error shown nothing entered phone text box enter removed filter text box get empty immediately however empty entered given seems guess variable section computed filter modify value think solves problem execute methods", "num": "583", "d": "11/2014"}, {"title": "dynamic select options improvement", "body": "hi using new attribute works ok introduces unnecessary processing must done use mean get form server list objects wish display select element likely object structure something completely different right must loop thought list create helper array appropriate object format used options parameter would suggest another annotation specify path original list returned server mapping properties example think", "num": "582", "d": "11/2014"}, {"title": "addchild missing docs", "body": "guide component system gt scope inheritance mention instance method called method missing instance methods api reference", "num": "581", "d": "11/2014"}, {"title": "event callback called twice", "body": "write select component jsfiddle change dropdown list childchange called selectcomponent parent vm reference console log expected callback function called parent vm", "num": "580", "d": "11/2014"}, {"title": "vmodel contenteditable longer works", "body": "appears longer use vmodel contenteditable element assume indented since longer appears guide either probably included changesmd plans reintroduce", "num": "579", "d": "11/2014"}, {"title": "recommendation directives able support object format like vwith", "body": "current usage html troublesome many styles much computed html mockup able input format think better clearly html js data style top px left px margintop px", "num": "578", "d": "11/2014"}, {"title": "el option nt work vueextend", "body": "may completely missed something seems like new functionality option nt seem anything", "num": "577", "d": "11/2014"}, {"title": "handling exception watcher", "body": "hi little bit surprised computed value ignored happened exception evaluated intended behavior seems would helpful vuejs warns error manner detect something went wrong reading source code appears error message made output pget srcwatcherjs modifying catch e part missing something", "num": "576", "d": "11/2014"}, {"title": "child components nt get custom directive values", "body": "demonstrated tried keep variation close documented example possible difference custom directive private defined child vm whereas directive used parent vm template see jsfiddle", "num": "575", "d": "11/2014"}, {"title": "possible build jade vue loader webpack", "body": "like jade profilevuejade template profile user profile script moduleexports data function return msg hello current result fail", "num": "574", "d": "11/2014"}, {"title": "filterby noresult", "body": "hi wondering way test filterby filter return length data result", "num": "573", "d": "11/2014"}, {"title": "tables lists", "body": "know isnt really issue sure else put wondering anyone suggestions performance stand point paginated data row coloums front page better performance stand point place data table use delimited ul li list hope question makes sense tks", "num": "571", "d": "11/2014"}, {"title": "tables lists", "body": "know isnt really issue sure else put wondering anyone suggestions performance stand point paginated data row coloums front page better performance stand point place data table use delimited ul li list hope question makes sense tks", "num": "570", "d": "11/2014"}, {"title": "vrepeat vif seem work incorrectly", "body": "hello example movies titles add button pushed see fiddle", "num": "569", "d": "11/2014"}, {"title": "firefox compatibility issue", "body": "component chrome safari execute set method model directive changestatus firefox changestatus execute set method jsfiddle link", "num": "568", "d": "11/2014"}, {"title": "issue child component extend parent data", "body": "hi evan may please look child component ca nt got data parent \u5b50 vm \u53ef\u4ee5\u5728\u6a21\u677f\u4e2d\u76f4\u63a5\u4f7f\u7528\u6240\u6709\u7236\u7ea7 vm html js vuecomponent child template parentname new vue el parent data parentname dad \u7ed3\u679c\u4f1a\u8f93\u51fa dad via", "num": "567", "d": "11/2014"}, {"title": "recipe directive filter pagination", "body": "reworking old app page page use vuejs pretty successful recently began working new page came problem searchpagination search well handled directive pagination code ran significant performance issues compared current backbonemanual render page simple paginated list search bar top like ask idiomatic way vue something needs implemented library efficient maybe change take start end index example need create slices case would great document examples section one sample projects recipes section docs like gulp thanks great tools far javascript var perpage return new vue el applicationwrapper template require customersearchhtml data searchtext pagenumber array objects customers customers methods previouspage function thispagenumber return thispagenumber nextpage function thispagenumber mathceil thiscustomers perpage return thispagenumber gotocustomer function customer windowlocation customers customerid filters paginate function list var index thispagenumber perpage return listslice index index perpage", "num": "566", "d": "11/2014"}, {"title": "conflicting method data names", "body": "sure real issue figured mention either way method name data property conflict weird way method call works first nt example html name fiddle", "num": "565", "d": "11/2014"}, {"title": "enhancement supply list classes vclass", "body": "currently possible pass space separated list classes vclass potential add variant objectkey syntax allowing dynamic list class names instead example js new vue el shell html fiddle", "num": "563", "d": "11/2014"}, {"title": "key filter nt cancel key events", "body": "example triggers dosomething enter cancels default events like tabbing another input", "num": "562", "d": "11/2014"}, {"title": "ready hook called used together vif", "body": "create component using directive together hook called js var ready spy var parent new vue template data showprofile false components userprofile template user profile ready ready parent mount parent appendto documentbody parentshowprofile true vuenexttick function assert readycalled", "num": "561", "d": "11/2014"}, {"title": "could write opposite vcloak", "body": "instead hiding loading revealing", "num": "560", "d": "11/2014"}, {"title": "lazy nt work expected", "body": "use colorpicker colorpicker binds values directly input fields input event updating values tried lazy attribute nt work trigger change nt work confused documentation attribute documented release notes says lazy removed would appropriate solution", "num": "559", "d": "11/2014"}, {"title": "textarea placeholder set textarea value", "body": "weird behavior textarea vue textarea value taken placeholder attribute results browsers work fine", "num": "558", "d": "11/2014"}, {"title": "error geting undefined array item property", "body": "array involved getting undefined item property results error suppressed get numbers name uncaught typeerror read property name undefined", "num": "557", "d": "11/2014"}, {"title": "key filters", "body": "really like mousetrap captures window keypress events like add aliases filter ca nt see tidy way got private dictionary special filter takes handler function wraps gets triggered specific keypresses von param string key var keycodes enter tab delete left right esc exportskey function handler key handler return var code keycodes key code code parseint key return function e ekeycode code return handlercall e wonder would reasonable registerkeycode etc method since seems like something people might want extend often", "num": "556", "d": "11/2014"}, {"title": "vue component bind existing dom elements", "body": "create vue component without defining template bind component existing dom element expect idea", "num": "555", "d": "11/2014"}, {"title": "input type number model behave weird", "body": "model added number input zero ca nt deleted anymore also problem entering numbers accepted", "num": "554", "d": "11/2014"}, {"title": "vif vrepeat seem work incorrectly", "body": "hello condition returns true anyway", "num": "553", "d": "11/2014"}, {"title": "new function expr remains csp branch", "body": "line causes csp violation error", "num": "552", "d": "11/2014"}, {"title": "changing input value via filter spoils native change event", "body": "problem occurs apply changes input value via filter write something inputs focusout try inputs", "num": "551", "d": "11/2014"}, {"title": "requirejs example", "body": "enhancement would possible provide commonjs example requirejs instance learning use vuejs bit lost nested components events triggering system parent element catch events emitted components maybe example would help understand good ways tips start writing reusable components commonjs", "num": "550", "d": "11/2014"}, {"title": "filter\u7684\u65b0\u9700\u6c42", "body": "vuefilter func function x return x data b b filter\u53ea\u63a5\u6536\u4e00\u4e2adata\u4e2d\u7684\u53c2\u6570 func b gt filter\u7684\u53c2\u6570\u4e0d\u80fd\u52a0\u5f15\u53f7 func b gt b func b \u53e6\u5916\u60f3\u5230\u8c03\u7528\u5168\u5c40\u7684\u51fd\u6570\u800c\u4e0d\u4f7f\u7528data\u4e2d\u7684\u6570\u636e\u8be5\u600e\u4e48\u505a \u6bd4\u5982\u6211\u6709\u4e2a\u591a\u8bed\u8a00\u7684\u6a21\u5757\u8981\u7ffb\u8bd1 windowtr ab data ab ab", "num": "549", "d": "11/2014"}, {"title": "", "body": "\u8fd9\u4e2a\u9501\u5c4f\u540e\u6253\u5f00\u4f1a\u5931\u6548 \u8fd9\u4e2a\u9501\u5c4f\u540e\u6253\u5f00\u6b63\u5e38", "num": "548", "d": "11/2014"}, {"title": "vwith could used without vcomponent", "body": "vwith could used without vcomponent often helpful specify scope vwith dom element case nt want create vcomponent used", "num": "546", "d": "11/2014"}, {"title": "question inheritance", "body": "subclass call name functions base class like java", "num": "545", "d": "11/2014"}, {"title": "ready mount", "body": "use mount without giving element get empty div el since even adding div dom ready callback get called invoke regular lifecycle mounting", "num": "544", "d": "11/2014"}, {"title": "accessing initial data provided component", "body": "access initial data passed component need compilation exact add items array hook described hook called data observation access data tick html js vuecomponent foobar created function log prints object branch way thanks", "num": "543", "d": "11/2014"}, {"title": "vrepeat pagination", "body": "hi issue pagination following code view works fine problem works page loaded want items vrepeat update appuserlistpages value updates", "num": "542", "d": "11/2014"}, {"title": "currency filter issue", "body": "present next", "num": "541", "d": "11/2014"}, {"title": "components duplicating vif vue", "body": "template html close name try update root variable duplicates component html js fiddle see anything dumb bat switch works expected html close name items clicked creating multiple detail components name jsfiddle", "num": "539", "d": "11/2014"}, {"title": "vmodel broken setting value afterward", "body": "jsfiddle input second example named broken use method working fine therefore sure bug", "num": "538", "d": "11/2014"}, {"title": "transitioned elements lose", "body": "see codepen", "num": "536", "d": "11/2014"}, {"title": "feature request method recalculate objects based dom", "body": "short version would great method would recalculate current state binded objects based dom long version using third party dom manipulation libraries like jqueryui sortable alter dom vue nt know something changed libraries nt trigger events vue listen keyup change etc currently developer must manually traverse dom update data binded vue object keep sync dom would great method existed inform vue dom change happened nt able track vue could recalculate data binded objects based new dom structure", "num": "535", "d": "11/2014"}, {"title": "replacing reference observable array", "body": "trying keep data somewhat separate viewmodels setting assignment like replace array dom update example however working updating using work javascript var services", "num": "534", "d": "11/2014"}, {"title": "undefined method trying use plugin", "body": "hi evan another issue vue constructor passed first parameter plugin function include method plugin api changed ca nt find anything thanks", "num": "533", "d": "11/2014"}, {"title": "objectkeys called nonobject filter", "body": "hi evan switched trying implement simple filter using immediately get error comes scopejs method guess related slice returning native array vs vue augmented array could make work thanks edit okay dug noticed using filter way apply filter repeated value rather list manage filter", "num": "532", "d": "11/2014"}, {"title": "multiple insertion points undesired behavior", "body": "seems like whenever two tags inside component template must either replace else original show selectors replacement specified consider following template html progress uploading files properly register component using attempt block disappears provide replacement instead falling back markup specified original template please confirm desired behavior imo would make sense selectors replacement specified changed original template remain intact rest pieces would happy prepare jsfiddle need best agon ps working vue makes difference", "num": "531", "d": "11/2014"}, {"body": "case try setting makes rendering synchronous easier use jquery additional dom manipulation", "d": "11/2014"}, {"body": "intended change probably explicitly documented basically markup parent template compiled parent scope includes directives written component node content going transcluded example resolved component instead current release bug compiles directives twice parent scope child scope therefore throws warning directive still works fixed soon", "d": "11/2014"}, {"body": "oh falling though cracks understand well work next release since use vue always attached components settings directives owned component change surely brake workflow give basic example custom component pass many options like callbacks even video path thoughts could achieve thing without hacking around child references", "d": "11/2014"}, {"body": "recommended interface component using encapsulate directive usage inside component using reasoning behind thing parent component needs know child component basically syntax sugar passing data", "d": "11/2014"}, {"body": "tricky get right making working properly twoway binding would bloat vue considerably usually recommend using standalone lib specifically designed eg mediumjs", "d": "11/2014"}, {"body": "ecmascript way detect new property addeddeleted vuejs nt dirty checking like angular afaik need manage add delete sure best way write seems working", "d": "11/2014"}, {"body": "works great indeed thank", "d": "11/2014"}, {"body": "using select options known issues use param", "d": "11/2014"}, {"body": "demo see events console", "d": "11/2014"}, {"body": "nt think good way implement want item component child component general directly watching index recommended", "d": "11/2014"}, {"body": "hmm sure many people still safari ios", "d": "11/2014"}, {"body": "safari windows xx", "d": "11/2014"}, {"body": "sadly nt even machine test version safari hate say nt think support browser given rare", "d": "11/2014"}, {"body": "original group objects nt property observed therefore changing wo nt trigger updates use builtin filter need make sure every group object property default observed", "d": "11/2014"}, {"body": "ok add property compiled works possible filter pass one parameter example vrepeat childgroup groupchildgroups filterby", "d": "11/2014"}, {"body": "pass multiple arguments filters builtin accepts one search string either write filter chain multiple filters", "d": "11/2014"}, {"body": "ok thanks", "d": "11/2014"}, {"body": "sorry got vuecomponent similiar functionality", "d": "11/2014"}, {"body": "pass instead define child component maybe nt need component", "d": "11/2014"}, {"body": "sample example case complicated add inherit true child component work anything wrong codes", "d": "11/2014"}, {"body": "use longer need use reference parent scope properties directly", "d": "11/2014"}, {"body": "ok got thanks", "d": "11/2014"}, {"body": "thanks indeed correct behavior also glad know improving performance app", "d": "11/2014"}, {"body": "ok got right way solve kind case creating component scratch base component extend data extremely useful cases", "d": "11/2014"}, {"body": "oh mean expected behavior correct one fixed", "d": "11/2014"}, {"body": "hmmm seems like one mixin listed component definition adding new keys object data function work take look piece code js var firstmixin data function return sortable cursor move var secondmixin data function return sortable handle handle var mycomponent vueextend mixins firstmixin secondmixin new mycomponent mount app tried dev branch", "d": "11/2014"}, {"body": "yeah merging merges toplevel properties nt merge recursively made recursive commit", "d": "11/2014"}, {"body": "w e e ps unrelated issue might another bug maybe tried logging sortable using throws message bug possible log keypaths observed", "d": "11/2014"}, {"body": "agonbina indeed fixed", "d": "11/2014"}, {"body": "problems worked correct confused different", "d": "11/2014"}, {"body": "vue uses asynchronous dom updates updates batched executed next frame via guarantees called dom updated watchers also fired async however option watchers registered directives compiled called directives update dom call directives compiled called dom updates alternatively set disable async updates", "d": "11/2014"}, {"body": "looks like related already solved", "d": "11/2014"}, {"body": "yeah fixed latest commit", "d": "11/2014"}, {"body": "one fixed right tested problem still occurs", "d": "11/2014"}, {"body": "nah nt check build files branch build", "d": "11/2014"}, {"body": "well built still focus blinking hell", "d": "11/2014"}, {"body": "amendment still blinking complex form fiddle blinking dig little thanks response", "d": "11/2014"}, {"body": "oh got problems occurs placeholders cyrillic russian symbols maybe others nonlatin symbols go like", "d": "11/2014"}, {"body": "looks like bug event placeholders cyrillic falsefires conditions example sometimes fires page load even input focused also fires even input focused without value changes probably placeholder fading one true cyrillic latin symbols overall function begins repeat circular begins change cursor position maybe bug remove following code focus blinking wo nt occur", "d": "11/2014"}, {"body": "hmm kinda control since like ie bug likely mistakingly firing events called even though value nt change using filters input elements safely remove code mentioned use custom build", "d": "11/2014"}, {"body": "sadly use filters inputs try come solution thanks", "d": "11/2014"}, {"body": "good news looks like fixed added focusouting input cyrilic placeholder browser returns funny numbers case interrupt handler everything works fine nt much testing maybe missed something", "d": "11/2014"}, {"body": "awesome thanks finding solution", "d": "11/2014"}, {"body": "reproduce issue jsfiddle works", "d": "11/2014"}, {"body": "intended behavior merging results either child mutating parent data unpredictable ways child losing reference parent data parent data changes wo nt sync", "d": "11/2014"}, {"body": "see way provide default values incomplete models tried setting properties vm nt get turned observable values data bindings nt work seems unfortunate fully specify object map individual property currently", "d": "11/2014"}, {"body": "ready need order make new property observable", "d": "11/2014"}, {"body": "oh right thanks", "d": "11/2014"}, {"body": "thanks indeed bug fixed latest commit", "d": "11/2014"}, {"body": "cool thanks could include build commit", "d": "11/2014"}, {"body": "commit build files releases modify local copy according", "d": "11/2014"}, {"body": "works like charm thanks", "d": "11/2014"}, {"body": "components isolated scope default read part guide", "d": "11/2014"}, {"body": "thanks data inheritance seem appropriate creating child instance markup hence trying use two features together think issue latter works advertised code document ready function windowapp views components windowappcomponentsnewsitem vuecomponent newsitem template title picture url photo windowappviewsmain new vue el main data news title title photo clownjpg markup returns warning document ready function windowapp views windowappviewsmain new vue el main data news title title photo clownjpg components newsitem template title picture url photo bug", "d": "11/2014"}, {"body": "second example", "d": "11/2014"}, {"body": "got thanks", "d": "11/2014"}, {"body": "try using attribute input element specify increasedecrease number click button", "d": "11/2014"}, {"body": "gapipro related problem try typing fahrenheit", "d": "11/2014"}, {"body": "ok see ignore suggestion", "d": "11/2014"}, {"body": "hmm contenteditable tricky use case nt recommend using directives inside suggestion use library specifically designed contenteditable eg mediumjs wrap custom directive", "d": "11/2014"}, {"body": "use case", "d": "11/2014"}, {"body": "something like use lodash", "d": "11/2014"}, {"body": "also useful extend new objecthash", "d": "11/2014"}, {"body": "nt think problem adding listeners nt everything directives", "d": "11/2014"}, {"body": "thought would handy add directives afterwards eg use vuetouch constant way probably right", "d": "11/2014"}, {"body": "use write filter", "d": "11/2014"}, {"body": "ok thanks", "d": "11/2014"}, {"body": "think solution comes inflexiblity eg data form array objects think preprocessing ok tradeoff need lot extract preprocessing function global utility nt think handled vue", "d": "11/2014"}, {"body": "ah thanks pointing added vuejsorg", "d": "11/2014"}, {"body": "ah thanks pointing added vuejsorg", "d": "11/2014"}, {"body": "thanks reporting fixed latest commit", "d": "11/2014"}, {"body": "yes removed problem contenteditable works simple situations try use something complex lot additional problems arise actually scope need work contenteditable suggestion use specific library eg wrap inside custom directive add changes doc", "d": "11/2014"}, {"body": "sounds reasonable maybe try pull request", "d": "11/2014"}, {"body": "ok", "d": "11/2014"}, {"body": "", "d": "11/2014"}, {"body": "components actually works instantiate imperatively ie default values use inside templates element mount component inline value override default value want replace element component mounted use", "d": "11/2014"}, {"body": "ah ok got thanks might worth clarifying distinction", "d": "11/2014"}, {"body": "project uses old option lot components nt think makes sense move template string think go modifying element instead", "d": "11/2014"}, {"body": "yeah intent suppress warning accessing something nt exist guess better explicit errors", "d": "11/2014"}, {"body": "interesting write directive parent template going compiled parent scope however directive found parent scope therefore fallback compiled child scope child isolated scope default ca nt access parent property might sound bit confusing solution either use child pass msg using", "d": "11/2014"}, {"body": "hm seems reasonable came another approach actual use case nt blocker thanks", "d": "11/2014"}, {"body": "error message get try using plain jade compile file see get likely syntax issue", "d": "11/2014"}, {"body": "nt got error message output exports format incorrect btw use templatehtmlloader compile jade html sure problem whether", "d": "11/2014"}, {"body": "different string content begin jade original vue file content vueloader js uid user profile moduleexports data function return msg hello got errors", "d": "11/2014"}, {"body": "hard say wrong without looking setup might want create cloneable repo current setup also nt think caused anything vue closing post questions vuejsdiscussions instead", "d": "11/2014"}, {"body": "need access filtered result either use custom filter computed property array", "d": "11/2014"}, {"body": "sorry nt get exactly build filter help situation main issue variable altered inside directive filter used however nt think writing custom filter return string result good approach gamename working result", "d": "11/2014"}, {"body": "see case use computed array", "d": "11/2014"}, {"body": "thanks works like charm", "d": "11/2014"}, {"body": "vue perspective minimizing number child vue instances created whichever uses fewer would performant", "d": "11/2014"}, {"body": "try changing template movie template documentgetelementbyid movie innerhtml seems working strings right", "d": "11/2014"}, {"body": "yeah thanks example also works vshow instead vif", "d": "11/2014"}, {"body": "actually caused fact vue compiled template reason skipped put template instead would work properly", "d": "11/2014"}, {"body": "looking frame source jsfiddle seems two body tags oevgeny code replaced everything worked fine", "d": "11/2014"}, {"body": "thanks answers guys clear", "d": "11/2014"}, {"body": "order events fire different orders firefox something vue control logically want react change property instead using click listener", "d": "11/2014"}, {"body": "ok thanks relay case different see watch status list", "d": "11/2014"}, {"body": "case listen instead", "d": "11/2014"}, {"body": "resolved thanks lot", "d": "11/2014"}, {"body": "work working encounter exception warning migrate advice thanks", "d": "11/2014"}, {"body": "upgrade change list", "d": "11/2014"}, {"body": "chinese guide outdated child components isolated scope default need use inherit parent data use explicitly pass data", "d": "11/2014"}, {"body": "performance issue probably caused paginate filter filter default searches every property recursively every update full depth walk every single one objects try replace custom filter checks specific fields want", "d": "11/2014"}, {"body": "tested hypothesis building actually pretty performant could probably improved somewhat taking away attribute two need search though however modify code search filter leave pagination way app actually quite sluggish creates new array reference objects memory sure look issue", "d": "11/2014"}, {"body": "many items displaying per page", "d": "11/2014"}, {"body": "edited original reflect working jsfiddle illustrate problem ca nt replicate slowness code pretty close exactly using two differences real app building table rows styled involved repainting happen real app following computed property place set directly onto data experiment since could cause issue", "d": "11/2014"}, {"body": "resolved vue backbonecollection causing big performance issue sure yet following offending bit pseudocode var data customercollection customersfetch return new vue el applicationwrapper template require customersearchhtml data extend searchtext pagenumber data computed customers function return thiscustomercollectiontojson", "d": "11/2014"}, {"body": "ok computed property reevaluated every time something changes means every time switch page calling tojson entire collection also probably want avoid including backbone collection vue data vue attempt observe entire collection causing tojson call inefficient collecting dependencies nt observe backbone collections nt see need use computed property", "d": "11/2014"}, {"body": "thought computed properties would reevaluated every time dependency computed property changed since never change collection figured would problem good know storing things vue thought could get away since view need interact eventually persisting data back server know probably store scope thanks", "d": "11/2014"}, {"body": "data properties methods set instance short answered nt use conflicting names", "d": "11/2014"}, {"body": "makes sense wanted make sure nt something insidious", "d": "11/2014"}, {"body": "html nt want", "d": "11/2014"}, {"body": "dang never thought much simpler first thought thanks xrado", "d": "11/2014"}, {"body": "ca nt reproduce make fiddle", "d": "11/2014"}, {"body": "closing inverting purpose vcloak", "d": "11/2014"}, {"body": "need use attribute element checkout doc", "d": "11/2014"}, {"body": "fyi works correctly vue", "d": "11/2014"}, {"body": "actually bug placeholder attribute cloned clone value set original placeholder implemented workaround vue template parser deal", "d": "11/2014"}, {"body": "awesome thanks", "d": "11/2014"}, {"body": "commit access map use install next branch", "d": "11/2014"}, {"body": "use return constructor already registered something retrieve id", "d": "11/2014"}, {"body": "got problem fix problem", "d": "11/2014"}, {"body": "using filters brings back problem", "d": "11/2014"}, {"body": "ok removed automatic type casting seems cause trouble convenience get rid issues undeletable zero input dots still one annoying behavior use filters invalid input erase whole input content unfortunately works input something invalid eg browser vue forces input value blank sense vue strictly keeping view model sync avoid using filters together", "d": "11/2014"}, {"body": "hmm vif never supposed used vrepeat actually console warning", "d": "11/2014"}, {"body": "ah missed one applying old csp patch fixed thanks reporting", "d": "11/2014"}, {"body": "tricky issue modify input value javascript unfocus wo nt triggered modifying value want using filter workaround would either use vmodel listen events instead", "d": "11/2014"}, {"body": "sorry nt get thing listen events instead could detailed mean already listening input change event mean use filters modify input value manually listening events instead", "d": "11/2014"}, {"body": "input elements also dispatch native events user modifies value", "d": "11/2014"}, {"body": "mean mutation dom events could give example please", "d": "11/2014"}, {"body": "simply although case callback fired get beforefiltered value maybe use instead", "d": "11/2014"}, {"body": "oh ok thanks sigh hoped filters make life easier handling forms seems wo nt case got cases like almost every form liveformatting input value already requires tricks make remove symbols buttons standing whitespace need make tricks think would smarter use something like jqueryplugn", "d": "11/2014"}, {"body": "hi floschieldbobby look link developed example component library boilerplate develop something else good luck", "d": "11/2014"}, {"body": "hi hwclass thanks lot take look right", "d": "11/2014"}, {"body": "requirejs uses amd rather commonjs however basic commonjs based example using browserify", "d": "11/2014"}, {"body": "missed examples sincerely sorry question thanks maybe would interesting merge official vuejs repo onlyone miss closed however", "d": "11/2014"}, {"body": "mentioned documentation site", "d": "11/2014"}, {"body": "\u8fd9\u79cd\u60c5\u51b5\u5c31\u4e0d\u8981\u7528 computed property \u554a", "d": "11/2014"}, {"body": "en ftr ftr ctr module text function tr module text return module text vuefilter ftr function text module return tr module text var vm new vue el demo data en english computed ctr function module text return tr module text", "d": "11/2014"}, {"body": "", "d": "11/2014"}, {"body": "", "d": "11/2014"}, {"body": "\u6211\u770b\u4e0d\u592a\u660e\u767d\u4f60\u60f3\u8981\u5e72\u5565 \u80fd\u4e0d\u80fd\u63cf\u8ff0\u5f97\u6e05\u695a\u4e00\u70b9", "d": "11/2014"}, {"body": "function tr module text return module text tr module text tr module en", "d": "11/2014"}, {"body": "jsfiddle \u7136\u540e\u8bf4\u6e05\u695a\u4f60\u60f3\u5b9e\u73b0\u4ec0\u4e48\u5427", "d": "11/2014"}, {"body": "", "d": "11/2014"}, {"body": "", "d": "11/2014"}, {"body": "", "d": "11/2014"}, {"body": "\u8fd9\u662f ios \u7684\u4e00\u4e2a vue \u6ca1\u4ec0\u4e48\u5173\u7cfb sat nov cc notifications githubcom wrote \u8fd9\u4e2a\u9501\u5c4f\u540e\u6253\u5f00\u4f1a\u5931\u6548 \u8fd9\u4e2a\u9501\u5c4f\u540e\u6253\u5f00\u6b63\u5e38 reply email directly view github", "d": "11/2014"}, {"body": "\u6211\u7528\u7684\u662fandroid", "d": "11/2014"}, {"body": "\u8fd9 \u4f46\u662f setinterval \u8ddf vue \u4e5f\u6ca1\u6709\u5173\u7cfb\u554a sat nov pm cc notifications githubcom wrote \u6211\u7528\u7684\u662fandroid reply email directly view github", "d": "11/2014"}, {"body": "\u53ef\u80fd", "d": "11/2014"}, {"body": "data passing context shifting actually two different use cases like keep semantics consistent also makes implementation easier internally admit name bit misleading associated context shifting templates case vue maybe future add something specifically", "d": "11/2014"}, {"body": "officially supported actually super verbose code", "d": "11/2014"}, {"body": "\u4e16\u754c\u6700\u597d", "d": "11/2014"}, {"body": "", "d": "11/2014"}, {"body": "make sure using instance dom methods like vue detect native dom manipulations", "d": "11/2014"}, {"body": "yep", "d": "11/2014"}, {"body": "directive data passed wo nt compiled specific reason need data instead", "d": "11/2014"}, {"body": "component template contains need expand initial array rendering component example passed like expand component responsibility specific case render component", "d": "11/2014"}, {"body": "fine expand later extra call update negligible", "d": "11/2014"}, {"body": "right behaviour makes sense knowing directive guess misinterpreted hook description thanks", "d": "11/2014"}, {"body": "masoodahm could watch changes appuserlistpages value broadcast event vm would manipulate data really sure entire app laid hard code specific use case", "d": "11/2014"}, {"body": "thanks brandon probably would solved problem however tried something else reading solution works post solution others learn thread deleted since problem resovled using variable vm like thispages forces filter called thispages updates solved problem", "d": "11/2014"}, {"body": "close want discuss open new issue vuejsdiscussions repo", "d": "11/2014"}, {"body": "thanks somehow missed porting old code", "d": "11/2014"}, {"body": "moved discussion", "d": "11/2014"}, {"body": "closing seems possible stated please reopen solution without using", "d": "11/2014"}, {"body": "reopening issue seems way observe new properties object sure good reason vuejs using method right ca nt figure", "d": "11/2014"}, {"body": "available chrome polyfill uses dirty checking inefficient vue observation mechanism nt detect properties added directly setting must use order vue pick change", "d": "11/2014"}, {"body": "thanks reporting caused change transition implementation components transitioned destroyed transition finishes", "d": "11/2014"}, {"body": "interesting app state changes transition see things changing element transitions anyway disconnect data bindings transition starts", "d": "11/2014"}, {"body": "latest commit fixed", "d": "11/2014"}, {"body": "much better thanks however event listeners still seem listening registered object initiation", "d": "11/2014"}, {"body": "currently directives locked dom updates happen transition events expected work component destroyed event listeners breaking logic reason", "d": "11/2014"}, {"body": "using routing route changes data events get fired data changes leads intercomponent communication starts getting messy removing makes everything work well haha going continue without transitions", "d": "11/2014"}, {"body": "reworked bit work like except called transition finishes also let know causes happen", "d": "11/2014"}, {"body": "awesome seems working great", "d": "11/2014"}, {"body": "feature interesting anyone would love hear feedback good bad", "d": "11/2014"}, {"body": "might useful case described nt think belongs core maybe could live plugin", "d": "11/2014"}, {"body": "consider example changing variable pointer property vm wo nt get picked however wrap services array object", "d": "11/2014"}, {"body": "thanks", "d": "11/2014"}, {"body": "deprecated yeah missed change doc internal utils directly accessible", "d": "11/2014"}, {"body": "woo sweet closing", "d": "11/2014"}, {"body": "make fiddle filter accept argument mean repeated value rather list", "d": "11/2014"}, {"body": "fixed fault sorry details nested component getting inside vrepeat filter applied correctly forgot put key instead triggered weird error", "d": "11/2014"}, {"body": "hmm yeah seems bug jsfiddle would helpful", "d": "11/2014"}, {"body": "", "d": "11/2014"}, {"body": "fixed thanks", "d": "11/2014"}, {"body": "awesome thanks", "d": "11/2014"}, {"body": "first think explicitness actually better referring upscope property latter even sure scope chain falls back also three nested levels data property name probably need rethink design second starting components isolated scope default inside component think scope component alias component inside nt make sense", "d": "11/2014"}, {"body": "ok turns documentation wrong pluralize filter include number self requires least one argument", "d": "11/2014"}, {"body": "general good idea make computed properties depend data components computed properties evaluated first time child components even created yet might want consider dispatching events child components lifecycle hooks", "d": "11/2014"}, {"body": "seems work lists lists within lists try modify make work submit separate issue would nice method would return current state binded object based dom", "d": "11/2014"}, {"body": "created feature request would understand nt want add wanted submit case someone else wanted add make plugin", "d": "11/2014"}, {"body": "ended something similar vuehackernews project", "d": "11/2014"}, {"body": "reopened commit dev brings back issue behaviour seems great range inputs though", "d": "11/2014"}, {"body": "hmm reverting seems like bad idea", "d": "11/2014"}, {"body": "make special case", "d": "11/2014"}, {"body": "idea able things like example", "d": "11/2014"}, {"body": "would mind sharing point view merits particularities xradovuevalidator comparison kazuponvuevalidator", "d": "11/2014"}, {"body": "think largely syntax differences would nt one better one like better seems kazupon version supports moment", "d": "11/2014"}, {"body": "clear components isolated scope also think content scope parent see modaldialog example modaldialog component html confirmdelete component name retrieved confirmdelete component also ember components work", "d": "11/2014"}, {"body": "agreed nt implement requires tricky internal changes probably land", "d": "11/2014"}, {"body": "fixed latest changes branch", "d": "11/2014"}, {"body": "hmm excitement actually testing safari issue still exists chrome", "d": "11/2014"}, {"body": "nt work inside another", "d": "11/2014"}, {"body": "solve problem latest vue", "d": "11/2014"}, {"body": "recommended way still use custom directive view management want finest control", "d": "11/2014"}, {"body": "ok worked fine btw get access templateparser writing custom directive", "d": "11/2014"}, {"body": "hmm currently way open next release", "d": "11/2014"}, {"body": "stumbled upon vuejs nt really grasp idea vuejs fits mvvm paradigm first sight little mere viewtoproperties binding engine expect mvvm implementation allow write custom code viewmodel eg combine data multiple form fields data available viewmodel properties update single property say inputs whenever edited like update property model achieved easily", "d": "11/2014"}, {"body": "codepainters", "d": "11/2014"}, {"body": "meant actually way around never mind usefulness silly example eg model view side assume declaring computed properties update single model property setters also perfectly valid scenario thanks", "d": "11/2014"}, {"body": "thanks updating site", "d": "11/2014"}, {"body": "something really liked polymer api name getterssetters filters might less pretty certainly explicit meaning always depends point view look dom model reason intuitively interpret point view dom remember meant way around point view model even getting used still causes doubt makes think doubts nt know still making changes api would great see adopted improved readability", "d": "11/2014"}]