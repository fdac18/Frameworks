[{"title": "datauri scripts insertion", "body": "js var documentcreateelement script ssrc data consolelog documentbodyappendchild output insert script jquery get error due jquery execute script ajax jquery append extra query params prevent script cache default fix simple set may pull pr way anyone knows jquery set inserted scripts inconsistent browser default behavior", "num": "1887", "d": "11/2014"}, {"title": "deprecate support plain objects", "body": "currently documented see working plain objects methods actually supported use basically trigger events set properties version deprecate wrapping arbitrary javascript objects way possible detect usages jquery migrate via", "num": "1886", "d": "11/2014"}, {"title": "gt selector broken used conjunction multiple elements", "body": "using selector table tr td gt n returned td greater n tr table returned td greater n table tr properly factored selection returned result please take minute see working example gt lt broken", "num": "1884", "d": "11/2014"}, {"title": "gt selector correctly acting elements", "body": "using gt selector tr td gt behavior expect row every td index greater however behavior getting td table index greater would expect gt lt preform like nthchild bug working intended jsfiddle example", "num": "1883", "d": "11/2014"}, {"title": "css height height", "body": "hi writing code found unexpected result sliderimagewidth lt amp amp sliderimagewidth gt sliderheight sliderimagewidth consolelog sliderheight running exact code console works properly could problem", "num": "1882", "d": "11/2014"}, {"title": "jquery cors based ajax request fails zombiejs", "body": "already posted issue around zombie boards using regular xhr granted cross browser etc works expected however using jquery ajax blows transport traced seems thrown line sure zombiejs apparently ignores preflights documentation something else got reproduction scenario log parts nodejs server provides cors responses jquery client page xhr client page zombie test runs scenarios xhr scenario works expected returns success jquery one blows transport client pages work fine browser chrome latest know jquery attempting hood invocation", "num": "1881", "d": "11/2014"}, {"title": "ajax options username password nt work reliably", "body": "jqueryajax purports support basic authentication via username password options however options simply passed directly xmlhttprequestopen worked fine safari failed chrome version mac os x yosemite likely due issue workaround", "num": "1878", "d": "11/2014"}, {"title": "animate ipad sleepresume", "body": "issue present ipad ios app uses jquery latest used position transition used showhide content app run homescreen icon animation runs expected app start ipad put sleep using power button woken sleep animation nt run although errors reported example code nothing sleepresume ipad happens fadeinfadeout animation simple jsfiddle demonstrating problem seems affect app running home screen icon run inside safari everything works expected", "num": "1877", "d": "11/2014"}, {"title": "", "body": "", "num": "1876", "d": "11/2014"}, {"title": "simplify ajax parsing using link element", "body": "currently use relatively complex regex parse url determine domain requests choosing correct transport culd use trick parsing url via element less hassle less code", "num": "1875", "d": "11/2014"}, {"title": "sizzle setdocument attaches infinite number unload listeners", "body": "problem description using jquery select elements inside iframe causes setdocument call per attaches unload event listener whenever used event eg onkeydown may generate big amount listeners cause bad performance listeners added adding new one would cause around ms browser ie js fiddle possible solution replace listeners duplicated", "num": "1874", "d": "11/2014"}, {"title": "getscript function deal east asian languages", "body": "asia sometimes load scripts encoded languages differ language current webpage getscript function simply call jqueryget function without pass scriptcharset infomation thus load script correctly rewrite getscript function could work much better demo", "num": "1873", "d": "11/2014"}, {"title": "safari returns incorrect css value topleftbottomright styles", "body": "element css values topleftbottomright position static return browsers returns actual pixel value however element absolute relative pixel value returned issue occurs css styles declared inline used markup test add absolute relative element work correctly html safari test test jquery version", "num": "1872", "d": "11/2014"}, {"title": "ca nt check unchecked", "body": "ca nt check one unchecked checkbox ok", "num": "1871", "d": "11/2014"}, {"title": "event called end work firefox", "body": "hello custom event end never happen firefox work well browsers", "num": "1870", "d": "11/2014"}, {"title": "distribute jquery jquerycompat jquerydist repo bower npm distribution", "body": "discussion", "num": "1869", "d": "11/2014"}, {"title": "evaluate available use dom element closest method", "body": "specification signature pretty close might beneficial use", "num": "1868", "d": "11/2014"}, {"title": "customevent property copied event object", "body": "according documentation least interpret property copied event object present ie event however seem case tried accessing nt see reference code either listed list workaround go would nice jquery copied property", "num": "1867", "d": "11/2014"}, {"title": "event handler added feature", "body": "like suggest handler executed per element event types given complex environment multiple input scenarios multiple touch apis differences behavior trigger first synthetic clicks bugs would allow something like processed without cancel events otherwise required past first trigger assess refiring handler necessary end event thoughts", "num": "1866", "d": "11/2014"}, {"title": "namespace method jsonp callback name", "body": "possible use namespace method callback name jquery var callback function windowmynamespace windowmynamespace windowmynamespacecallback callback ajax url datatype jsonp jsonp callback jsonpcallback mynamespacecallback success function alert success error function alert error server respense called get alert could use global function jsonp callback name", "num": "1865", "d": "11/2014"}, {"title": "make event triggering separate module", "body": "custom build nt need manually triggered events could save bunch bytes removing would mostly useful branch branch relies pretty heavily manually triggered events fix master manual triggering used create bubbling focusinout events fire ajax events approaches devs use situations", "num": "1864", "d": "11/2014"}, {"title": "data bug ff", "body": "think problem data method reproduced reproduce jquery branch limited testing sorry jsfiddle could get repro repro page html pasted bottom report open open console window load page load following written console dom ready somedata dom ready functions properly browsers click clickme following written console chrome ie click somedata click timeout somedata timeout written click timeout data seems fail ff data bug function consolelog dom ready consolelog somediv data somename consolelog dom ready somediv click function settimeout function consolelog timeout consolelog somediv data somename consolelog timeout consolelog click consolelog somediv data somename consolelog click clickme", "num": "1863", "d": "11/2014"}, {"title": "figure going tag jquery compat releases", "body": "version numbers match suffice", "num": "1862", "d": "11/2014"}, {"title": "css height removingresetting css attribute ignored ie chrome", "body": "morst recommended way removing css properties working properly esp provided sample simply ignored tested ie chrome latest", "num": "1861", "d": "11/2014"}, {"title": "dynamic function newest handler work", "body": "system windows chrome internet explorer jquery version demo bug stepbystep click add click blob click add click last blob click first blob bug", "num": "1860", "d": "11/2014"}, {"title": "wrap removes video texttracks length firefox", "body": "also reported mozilla first test mozilla second test nt sure track length wrap div length changes", "num": "1859", "d": "11/2014"}, {"title": "data documentation could wrong", "body": "following sentence could wrong undefined recognised data value calls data name undefined return corresponding data name therefore data name eldata key undefined returns el version version returns value key documentation says latest code looking arguments length test different versions", "num": "1858", "d": "11/2014"}, {"title": "css top returning wrong value safari", "body": "jquery version safari safari call css top element returning wrong value zoom working browsers css top returning safari sample run zoom", "num": "1857", "d": "11/2014"}, {"title": "hidden filter incorrectly includes visible elements", "body": "versions seem get wrong inline elements example anchors images inside chrome return offsetwidth offsetheight likely offsetwidthheight based working draft spec yet define css layout box well includes elements whose display property tablecolumn tablecolumngroup since current implementations offsetwidthheight browsers much performant getclientrectsgetboundingclientrect makes since use return nonfalsy values performant version function run function elem", "num": "1855", "d": "11/2014"}, {"title": "git describe tags nt return latest stable version", "body": "line readmemd following command suggested check latest stable version jquery particular meant return recent tag also last jquery version number nt work master branch returns far latest stable version even latest reachable tag problem tags version numbers generally made separate branches therefore unreachable describe command branching tagging system used jquery nt seem easy way get latest tag link also given different versions compat hard define one corresponds latest stable version suggestion would remove notion automatically getting latest stable version git command", "num": "1854", "d": "11/2014"}, {"title": "data key undefined behaving according documentation", "body": "states additional notes behave identically nt however former appears return object called reproduced using several current jquery versions", "num": "1852", "d": "11/2014"}, {"title": "jquery id selector id support almost arbitrary strings changes", "body": "according id attribute contain lot kinds characters specified jquery site corresponds case use id id though documentgetelementbyid id work id work", "num": "1851", "d": "11/2014"}, {"title": "readme incorrect grunt version command", "body": "line readme command grunt v suggested make sure grunt installed v option actually verbose mode one wanted v uppercase prints grunt version", "num": "1850", "d": "11/2014"}, {"title": "getscript", "body": "jquery version use getscript get script nt exist response status example throw error tested jquery nt throw error hope fix issue thanks", "num": "1849", "d": "11/2014"}, {"title": "updating coordinate object function form causes silent failure", "body": "jquery version browser chromium firefox os debian sid expected behavior move pixels somehow impossible jquery least raise error actual behavior jquery silently fails anything example", "num": "1848", "d": "11/2014"}, {"title": "function return true yields false", "body": "yields false yields true yields false yields false yields true sure working intended", "num": "1846", "d": "11/2014"}, {"title": "firefox offset top table changes caption transform", "body": "code uses css transforms make table header amp caption stick top page try get table caption transform set changes moving also dependent height caption created demo show problem please note transform applied caption element causes issue transforms cause problem changing height caption alters range value changes problem occurs firefox tested likely related issue table height include caption height ref", "num": "1845", "d": "11/2014"}, {"title": "wrapall acts like wrap passing function", "body": "hi noted passing function acts way either nt intended behavior take fixed intended behavior note relative page added link demo shows issue", "num": "1843", "d": "11/2014"}, {"title": "iframe memory leak nondetached click event", "body": "load jquery testing edge inside iframe alone reload content eg submiting dummy form could see memory leak compat really production legacy enterprise browser bad lines javascript divattachevent divattachevent onclick function supportnocloneevent false changing something like following memory leak dissapears test continues working espected sorry nonlinted code one known solutions wellknown issues iframes memory leaks events detach events garbage collection", "num": "1840", "d": "11/2014"}, {"title": "context passed promise next handler previous handler returns jqueryobject", "body": "create deferred resolve using handle promise handler return value attach another handler previous handler expect context handlers steps identical passed object step works value returned step nt jqueryobject jqueryobject returned step context step identical first argument received handler step issue hard explain better demonstrated simple example jqueryversion", "num": "1839", "d": "11/2014"}, {"title": "jqprint working version", "body": "took following files jquery application development printing content tag could able print content tag firefox google chrome browsers could able print content tag jqprint recently moved jqprint option working fine browsers version jqprint option working version could please resolve version incompatibility please note jqprint working fine firefox google chrome version also thanks amp regards hiranmayi", "num": "1838", "d": "11/2014"}, {"title": "remove support browsers dropped", "body": "jquery dropping opera safari lt jquery compat additionally ie lt dropped also removing workarounds old browsers officially unsupported like blackberry lt ios lt planned browser support jquery ie chrome firefox amp opera current current safari ios android jquery compat additionally support pr pr", "num": "1836", "d": "11/2014"}, {"title": "nt autoinsert tbody", "body": "talking breaking changes jquery inserts tbody appending empty table special behavior branch compat jquery revert behavior dropping ie lt", "num": "1835", "d": "11/2014"}, {"title": "using html method string contains amp param", "body": "hi using html method string contains amp param unexpected character shows page", "num": "1834", "d": "11/2014"}, {"title": "disconnected node actual conflicts docs", "body": "docs jquery also work disconnected dom nodes results following elements inserted closing tag according fiddle html body tested chrome firefox ie using jquery edge jquery edge see fiddle", "num": "1833", "d": "11/2014"}, {"title": "rename", "body": "urls nt make much sense recent rename call come mind already points sure want make url switch meaning thoughts", "num": "1832", "d": "11/2014"}, {"title": "permission denied iframe submitted jquery", "body": "case ie jquery select something iframe submit iframe form select something body iframe result permission denied reson haapens beacuase iframe document assigned document variable iframe reloaded ie throw permission denied error accessing document variable ie support defaultview property parent undefined fix sizzle function following condition context contextownerdocument context preferreddoc document setdocument context add following condition try document document catch err document windowdocument resets document permission denied errors including line code resolve error", "num": "1831", "d": "11/2014"}, {"title": "otherwidth true ie including border", "body": "ie otherwidth true return width wo border browsers ok", "num": "1829", "d": "11/2014"}, {"body": "stripping anything every property jquery puts event object copied read documentation query normalizes following properties crossbrowser consistency following properties also copied event object though values may undefined depending event help read docs ask help forums stackoverflow", "d": "11/2014"}, {"body": "see jquery event could told thought would main object", "d": "11/2014"}, {"body": "guess logical support kind stuff seems fix pretty easy say yes pr would cool nt forget read contribution guide anyone knows jquery set asyncfalse inserted scripts wonder deviate spec remember discussion nt remember specifics cc", "d": "11/2014"}, {"body": "problem long time ago used xhr synchronously people started depend creating htmlscripttag hybrids expected script run right html injected document able something change fulltime script tag extracting scripts html fragment still allows nt guarantee synchronicity fine", "d": "11/2014"}, {"body": "dmethvin seems could change conform dom behaviour want concerns perspective logic", "d": "11/2014"}, {"body": "ok historical thanks dmethvin", "d": "11/2014"}, {"body": "nice", "d": "11/2014"}, {"body": "please nt create new issues closed identical previous one duplicate", "d": "11/2014"}, {"body": "achieved functionality looking selector tr td nthchild", "d": "11/2014"}, {"body": "looking help using jquery please check forum stackoverflow bug tracker correct place ask questions", "d": "11/2014"}, {"body": "asking question selector gt broken", "d": "11/2014"}, {"body": "okay well true based original description sure wrong ask help forum", "d": "11/2014"}, {"body": "yes looks intended please read ask forums nt understand bug", "d": "11/2014"}, {"body": "please ask help forum determine behavior bug post test case thanks", "d": "11/2014"}, {"body": "never tested zombiejs nt support nt behave like browser would nt surprising jquery use xhr transport crossdomain requests object indicates supports cors guess perhaps need set indicate zombiejs fake xhr object supports cors nt really triage zombiejs determine nt browserlike close ticket meantime reopen something needs done", "d": "11/2014"}, {"body": "well listed original issue raised zombie board also got reproduction scenario shows working normal xhr object working jquery ajax tried explicit seems fixed actually behind scenes much information setting setting cors based options actually", "d": "11/2014"}, {"body": "standard xhr object property indicating perform cors missing xhr still perform crossdomain requests setting override common situations phonegapcordova crossdomain restrictions enforced sounds like things sorted far jquery goes", "d": "11/2014"}, {"body": "please provide test case", "d": "11/2014"}, {"body": "probable duplicate also see let us know otherwise reopen", "d": "11/2014"}, {"body": "test see fixes problem switched using next release may affect improve results", "d": "11/2014"}, {"body": "problem persist latest jquery version please describe reproduce issue mobile safari", "d": "11/2014"}, {"body": "tested latest issue still persists happening mobile safari part set simple test page demonstrate issue open mobile safari load page try tapping animate button see animation safari tap share button choose add homescreen tap add popup close safari pressing home button ipad tap newly added icon home screen wait load takes bit time reason test animation tapping animate button app still open press power button ipad put sleep press power button ipad wake sleep slideenter unlock code needed app still open tap animate button nothing happens screen html page fully selfcontained includes css javascript required apart jquery naturally save source necessary code", "d": "11/2014"}, {"body": "dmethvin test see fixes problem nit please point people instead instead trying deprecate former ones remember", "d": "11/2014"}, {"body": "thanks opening issue confirmed", "d": "11/2014"}, {"body": "method simple subset functionality need additional options available use could either duckpunch better create new name note option applies tag used fetch content samedomain requests may used", "d": "11/2014"}, {"body": "properties applicable positioned elements", "d": "11/2014"}, {"body": "well bug chromeff return pixel values safari", "d": "11/2014"}, {"body": "guess open interpretation noted documentation use side note nt confusion note computed style element may value specified element style sheet return computed value case computed value applicable property say safari right", "d": "11/2014"}, {"body": "nt use set dynamic state checkbox use plenty documentation internet look words bold please ask help stackoverflow issues sure bug", "d": "11/2014"}, {"body": "sounds like would happen without jquery report firefox bug need test case reproduce nt provide test case shows problem occurs jquery reopen ticket", "d": "11/2014"}, {"body": "without jquery work firefox coffee onend playercontainerremoveeventlistener end onend done", "d": "11/2014"}, {"body": "test case yet please provide one jsbincom", "d": "11/2014"}, {"body": "could use cases selector jquery selector extensions suppose could try validate calling selector string seeing throws use dom method nt maybe call dom directly wrap trycatch given crappy performance usually newer methods would worth benchmarking see worth effort", "d": "11/2014"}, {"body": "could use cases selector jquery selector extensions unless accepted", "d": "11/2014"}, {"body": "yep suspect pitfalls like would like see something like resolution issue", "d": "11/2014"}, {"body": "elemclosest chrome canary amp dev coming beta wink", "d": "11/2014"}, {"body": "yep created issue", "d": "11/2014"}, {"body": "waaay ahead nyahnyah stuckouttonguewinkingeye", "d": "11/2014"}, {"body": "p tue nov pm dave methvin notifications githubcom wrote waaay ahead nyahnyah image stuckouttonguewinkingeye reply email directly view github", "d": "11/2014"}, {"body": "thanks report could create minimal example micha\u0142 go\u0142\u0119biowski", "d": "11/2014"}, {"body": "example", "d": "11/2014"}, {"body": "seem two documented properties copied idea listed removed overhead copying properties hesitant add say available either update docs remove preferred route add note adding wo nt help anyone next release anyway docs would nt correct asis unless put note like added jquery", "d": "11/2014"}, {"body": "problem recently project initially assumed property present thought realized jquery already custom way handle using property since property standard way pass data triggered callback without using jquery makes sense available original event hand callback portable native jquerybased environments portability something considered case dealing event triggered third party nt use jquery", "d": "11/2014"}, {"body": "property normalized jquery accessed via plenty special ones used one two events copying jquery something want keep minimum since real costs timecritical section code accessing value nt cause problem", "d": "11/2014"}, {"body": "mentioned case particular problem code portability ported event handling callback another codebase initially expected would work without changes jquery environment using ui widget factory happened instead change big deal though performance issue updating docs seems reasonable", "d": "11/2014"}, {"body": "say looks like plugin core feature jaspermdegroot gseguin input", "d": "11/2014"}, {"body": "rationale adding core code already part would involve small alias function gzip friendly near clone variables added seems low cost compared plugin somewhat heavy code duplication comparison", "d": "11/2014"}, {"body": "nt forget documentation eternal support prefer see start plugin popular enough add usually turns things nt popular enough justify adding bytes documentation policy years ago things like methods would plugins well library would smaller", "d": "11/2014"}, {"body": "mention provided example could solved pointer event polyfill", "d": "11/2014"}, {"body": "scottgonzalez example short brief one probably would nt never mix together referring context approaching multiple inputs things fastclick little differently currently seen practices short choose bind start events elements could undetermined small delay associated caveats namespaces current assessment reduces code base involve less bindings whole document leading better initial binding performance well arguably less prone bugs namespace constraints removed lower overall footprint preferred approach moment concrete example much code reduced time nt seem justify cost plugin example felt need little value plugin though agree ought vetted popularity use usefulness contexts", "d": "11/2014"}, {"body": "think good example semantics may clear people clarify things requires documentation people start wonder doubt semantics confusing multiple elements multiple events per element given time machine best solution may implemented core library semantics nt useful majority people given implemented changing semantics might break things best guard featureitis future", "d": "11/2014"}, {"body": "policy years ago things like wrap methods would plugins well library would smaller given time machine best solution may one implemented core library semantics nt useful majority people totally offtopic target version maybe time deprecateremove methods core", "d": "11/2014"}, {"body": "totally offtopic target version maybe time deprecateremove methods core developers likely impacted ones using singlefile jquery cdn removing seems unnecessarily cruel developers want smaller version without always build one plan make easier upcoming release", "d": "11/2014"}, {"body": "make sense thanks", "d": "11/2014"}, {"body": "dmethvin agree confusion even conceivable current usage devs understood suggested initial mis understanding anyway implement today semantic would probably reversed", "d": "11/2014"}, {"body": "support feature would mean adding relatively ugly big amount code pretty little gain sorry cc jaubourg", "d": "11/2014"}, {"body": "repo steps failed machine everything worked correctly continue investigate consistently repro failure machines", "d": "11/2014"}, {"body": "seems work properly sure nt due addon works consistently older ff report bug", "d": "11/2014"}, {"body": "actually looks like may interaction jquery version firebug investigate tomorrow", "d": "11/2014"}, {"body": "okay close ticket turns jquery bug reopen based already said nt think", "d": "11/2014"}, {"body": "yeah sorry hate tool using debug actually causing problem", "d": "11/2014"}, {"body": "close actually bug firequery plugin firebug try contact author plug let know", "d": "11/2014"}, {"body": "cc jquerycore", "d": "11/2014"}, {"body": "hmmm good question guess could something similar note value also need unique could well suppose already put stuff version number custom build", "d": "11/2014"}, {"body": "guess could similar note value also need unique could well suppose people need able distinguish programatically", "d": "11/2014"}, {"body": "new name matching versions suggest time move new repo instead continuing use branch", "d": "11/2014"}, {"body": "friday november scott gonz\u00e1lez notifications githubcom wrote new name matching versions suggest time move new repo instead continuing use branch separate bug trackerspull requests repos due much code shared branches would nt desired imo micha\u0142 go\u0142\u0119biowski", "d": "11/2014"}, {"body": "separate bug trackers pull requests actually good thing share bugs denying separate bugs already need separate pull requests", "d": "11/2014"}, {"body": "share bugs first glance actually share already need separate pull requests true", "d": "11/2014"}, {"body": "lot common code generally cherry pick things across without conflicts prefer one repo two branches", "d": "11/2014"}, {"body": "git cherrypick different repos different repos different branches conflicts always possible", "d": "11/2014"}, {"body": "first glance actually share could mention issue different repository commit amp pullrequest still", "d": "11/2014"}, {"body": "already need separate pull requests actually nt true time usually cherrypick squashed commit onto rather force separate prs occasions changes big enough beg separate prs often ones making kinds changes anyway prefer one repo", "d": "11/2014"}, {"body": "timmywil understood trivial observation pr target branches time agree time cherrypick unless sth rewritten module touching lot code tagging jqueryrelease need update able tag rest simple", "d": "11/2014"}, {"body": "true pr ca nt target two branches timmywil says often pretty trivial cherry pick without pr usually get hung differences internal implementation hope fix", "d": "11/2014"}, {"body": "tagging jqueryrelease need update able tag rest simple need update tags since everything based versions keep mind semver means prerelease", "d": "11/2014"}, {"body": "use build metadata", "d": "11/2014"}, {"body": "keep mind semver means prerelease going keep branches repo seems team favors solution tags semver versions anyway want make clear semver always tag guess", "d": "11/2014"}, {"body": "hmm realised one repo amp versions wo nt likely fly bower dislike support npm amp bower", "d": "11/2014"}, {"body": "would nt two packages bower well", "d": "11/2014"}, {"body": "would nt two packages bower well two packages two repos", "d": "11/2014"}, {"body": "would nt two packages bower well yes bower tied repositories pointed takes versions tags means use impossible", "d": "11/2014"}, {"body": "ok yea bower require separate repos multiple components maybe clinches", "d": "11/2014"}, {"body": "two packages two repos seems nt really choice could still disable issues gets kept one place prs ok local branches track also make main branch reduce confusion", "d": "11/2014"}, {"body": "bower needs distribution nt need develop", "d": "11/2014"}, {"body": "bower needs distribution nt need develop true suppose option pushing compat distribution separate repo", "d": "11/2014"}, {"body": "option pushing compat distribution separate repo likely quite difficult achieve unless push branch separate repo well duplication would confusing outsiders rather one place", "d": "11/2014"}, {"body": "likely quite difficult achieve nt think would difficult enough write duplication would confusing outsiders outsiders already confused would nt ones distributiononly repos", "d": "11/2014"}, {"body": "outsiders already confused would nt ones distributiononly repos else", "d": "11/2014"}, {"body": "nt way jquery bower took", "d": "11/2014"}, {"body": "think prefer option none us want spend time migrating issues one repo creating duplicate issues cases affect means probably want disable issues compat repo problematic nt think possible autoclose issues another repo ie commits compat repo would nt autoclose issues master repo much overhead comes two development repos", "d": "11/2014"}, {"body": "nt way jquery bower took yes whole org modules managed owners though one example angular etc funnily enough repo publishing npm well", "d": "11/2014"}, {"body": "else top head think angular lodash", "d": "11/2014"}, {"body": "nt think possible autoclose issues another repo write though", "d": "11/2014"}, {"body": "actually like idea separating development repo distribution repos mixing two always seemed icky", "d": "11/2014"}, {"body": "actually like idea separating development repo distribution repos would also want separate bower distribution repo mixing two always seemed icky already process", "d": "11/2014"}, {"body": "nt way jquery bower took different reasons see point uncommon weird moreover preferable think good way go btw guess github replacement jquerymeeting channel huh", "d": "11/2014"}, {"body": "btw guess github replacement jquerymeeting channel huh ha email", "d": "11/2014"}, {"body": "topic pretty much crazy maybe use github meetings like create special repo use issues meetings", "d": "11/2014"}, {"body": "topic pretty much crazy maybe use github meetings like create special repo use issues meetings", "d": "11/2014"}, {"body": "well bit exception little chatty typically still good discussions somewhere make progress missed meetings lately beers", "d": "11/2014"}, {"body": "", "d": "11/2014"}, {"body": "tbh ideal solution would separate repos bower packages create detached tags npm handle nondetached ones easily fact nt care tags git publishing said every change would affect jqueryrelease way probably need good reason everything", "d": "11/2014"}, {"body": "mzgol agree separate repos distribution seems like best approach development repo nt position pull without build process anyway seems like want publish bower npm new repos arguments approach", "d": "11/2014"}, {"body": "dmethvin still need figure integrate jqueryrelease process", "d": "11/2014"}, {"body": "mzgol let cross bridge come unless projects want things way may need change anything jqueryrelease use take regardless think particular issue resolution opened new one implementing distribution process", "d": "11/2014"}, {"body": "regardless think particular issue resolution think still want tagging original repo regardless release bowernpm need settle tag ok everyone", "d": "11/2014"}, {"body": "", "d": "11/2014"}, {"body": "works understand oracle semverorg version compat build would something like mouthful long works good reality nt think cause confusion two different distribution repos", "d": "11/2014"}, {"body": "understand oracle semverorg version compat build would something like mouthful long works good need ensure account way easy append prefixes wrong order unless use npm semver package work us reality nt think cause confusion two different distribution repos yes mentioned still need tag branches original repo sth decided", "d": "11/2014"}, {"body": "thought think looks weird seems compat build version definitely nt match unless always plan release betaspatch releases time branches nt want rely reopening issue since still discussing", "d": "11/2014"}, {"body": "nt think real issue first nt really matter tag public consumption ones need know refers version compat branch independent master second unless someone offers better option let consider resolved", "d": "11/2014"}, {"body": "think okay distribution repo say tagged ambiguity repo regarding value may contain tokens beyond custom build", "d": "11/2014"}, {"body": "sounds good", "d": "11/2014"}, {"body": "plan development files including gruntfile amp friends repos people build versions otherwise tags wo nt us", "d": "11/2014"}, {"body": "value value jquery compat tag definitely public consumption", "d": "11/2014"}, {"body": "plan development files including gruntfile amp friends repos people build versions example headless tag guess answer yes since separate repo worried committing much stuff could commit nodemodules suppose smilingimp someone wants create different repo built files nt want amd files nt want custom build want minified monolithic file someone could job package managers really start bug value jqueryfnjquery jquery compat think would problem think tag release jquerycompatdist repo would match one master suppose means release historically case worse case release new version changes keep versions sync suggestions welcome", "d": "11/2014"}, {"body": "plan development files including gruntfile amp friends jquery compat dist repos people build versions otherwise tags jqueryjquery wo nt us discussion issue nt need include building assets distributing nt actually build folder ignored npm bower continue include src folder tag definitely public consumption ok barely sure making mountain mole hill think would problem unless better solution hope move", "d": "11/2014"}, {"body": "ok let call resolved", "d": "11/2014"}, {"body": "passing empty string remove styling applied earlier via value stylesheets latter case need explicitly overwrite desired css cascade works think docs unclear happening please open issue pointing specifically misleading text", "d": "11/2014"}, {"body": "yes css resolved renderer sense harmonization would expected jquery reset css attribute default value instead nothing explicit call repeat explicit call specific element applies nothing makes change dom hand effect really intended take proposal change behaviour applying nothing applying inlining canonical unified whatever default value cause expect trying overwrite css attribute decent call", "d": "11/2014"}, {"body": "oh implies another way removing css like removecss method hmm", "d": "11/2014"}, {"body": "rewriting contents container handlers lost bug please use forums stack overflow help", "d": "11/2014"}, {"body": "elements nt lost firefox definitely losing references via nt jquery bug something jquery fix", "d": "11/2014"}, {"body": "ok thanks taking look", "d": "11/2014"}, {"body": "syxton could report mozilla unless one already exists post link bug", "d": "11/2014"}, {"body": "", "d": "11/2014"}, {"body": "thanks", "d": "11/2014"}, {"body": "duplicate filed", "d": "11/2014"}, {"body": "see something hard fix fixable", "d": "11/2014"}, {"body": "little complex potentially returns noninteger value caused problems existing code expecting integer values returns considering version though see bad slow", "d": "11/2014"}, {"body": "well worth written replacement hidden filter defaults performant test pull results", "d": "11/2014"}, {"body": "thanks report could use npm api query latest version scrap probably better remove automatic way described record using detached tag technique bower nt support something repository npm would nt problem", "d": "11/2014"}, {"body": "think users explicitly choosing version think go away well said give recently tagged version worth noting existing command based date based versions recent tag necessarily current version get correct value time need sort version numbers definitely scope readme though simple nodesemver", "d": "11/2014"}, {"body": "seeing consensus replacement text create custom build first check version want customize brackets follow custom command description syntax", "d": "11/2014"}, {"body": "brackets follow custom command description syntax man page though sure context clear maybe create custom build first check version want customize jquery version want customize", "d": "11/2014"}, {"body": "related", "d": "11/2014"}, {"body": "sounds good", "d": "11/2014"}, {"body": "want file pull request change", "d": "11/2014"}, {"body": "cc rwaldron", "d": "11/2014"}, {"body": "looks like mistake docs tests assert jquery instance object returned allow chaining moving", "d": "11/2014"}, {"body": "query arbitrary ids provided properly escape css identifiers", "d": "11/2014"}, {"body": "fixed thank", "d": "11/2014"}, {"body": "ca nt reproduce could create example showing problem start", "d": "11/2014"}, {"body": "able reproduce ie jquery trying fetch existing script file working fine firefox ie trying fetch non existing script file firefox getting expected ie showing syntax error instead case jquery code used replicating bug", "d": "11/2014"}, {"body": "run chrome example see returning success script obviously nt know server might returning could return status put sample server retrieves server", "d": "11/2014"}, {"body": "closing due inactivity", "d": "11/2014"}, {"body": "begin pgp signed message hash weird one line making whole thing go bad ca nt figure updated jsfiddle using nightly build begin pgp signature version gnupg ivvx end pgp signature", "d": "11/2014"}, {"body": "second argument current position element modified could either fix doc notes oneliner module dmethvin", "d": "11/2014"}, {"body": "see lure modifying incoming position object seems like allow", "d": "11/2014"}, {"body": "thanks opening issue work expected due behavior render selection nothing check", "d": "11/2014"}, {"body": "duplicate think words hard problem", "d": "11/2014"}, {"body": "yes cicumstances starts acting like confusion shows pass funarg shows us two paths either could try squeeze method taken advantage similarity could change logic method funarg argument execute passed function could clarify docs also already mentioned although indirectly dmethvin", "d": "11/2014"}, {"body": "case would nt mind adding couple tests methods", "d": "11/2014"}, {"body": "begin pgp signed message hash look code happening looping element pass return value function passing index element argument function individually element docs seem match behaviour syntax section top made clear examples begin pgp signature version gnupg end pgp signature", "d": "11/2014"}, {"body": "really dislike function arguments methods sure seemed like nifty little addition api time causes much pain bloat markelog aurelioderosa think seems like enough edge case could document current behavior refactoring much pain like years", "d": "11/2014"}, {"body": "think could start mentioning issue documentation people aware different behavior dmethvin said see break compatibility older code said edge case think developers using method passing function based code needed fix issue wo nt result increase size jquery source proceed", "d": "11/2014"}, {"body": "think could go either way around corner could break backcompat make methods consistent increase size although much could document decrease size exploiting similarity", "d": "11/2014"}, {"body": "good point relatively small back compat break would right time let go ahead call bug fix", "d": "11/2014"}, {"body": "okely dokely", "d": "11/2014"}, {"body": "page would equal cool", "d": "11/2014"}, {"body": "yes think new interpretation function nt called set empty suppose", "d": "11/2014"}, {"body": "function nt called set empty suppose add tests seems tests funarg argument method add", "d": "11/2014"}, {"body": "create issue docs migrate", "d": "11/2014"}, {"body": "many iframes create make real problem", "d": "11/2014"}, {"body": "pages iframe indexhtml leakhtml html cerrar function navigate var form documentcreateelement form documentbodyfirstchild formappendchild documentbodyfirstchild documentbodyappendchild form formsubmit", "d": "11/2014"}, {"body": "right one taking lot memory", "d": "11/2014"}, {"body": "onclick perform submit reload inner page see memory leaks open real click button could see ie memory process grows grows download development edge jquery sourcecode modify lines posted first post reopen test modified version see memory leak dissapears problem lines code creating one node attaching event function contains closure variable reference without detaching later wich well known even documented issue see closures section", "d": "11/2014"}, {"body": "something similar removed code also removes binding cloned div necessary simply unbinding original div happen fix issue", "d": "11/2014"}, {"body": "necessary according microsoft documentation remove attached events parentless nodes piece jquery code simple test detect browser able clone node also attached events detach transparent fully functional backwardcompatible", "d": "11/2014"}, {"body": "yes seem like elements would need event handler detached case code referred preventing memory leak since cloned element still handler bad nt good way automated tests issues", "d": "11/2014"}, {"body": "workaround return resolved promise containing return value step replace", "d": "11/2014"}, {"body": "promisealike method returns new deferred existing one expect", "d": "11/2014"}, {"body": "expect method return new deferred nt expect objects different b returns jqueryobject remain identical returns value object", "d": "11/2014"}, {"body": "jquery object promise method looks like resolved promise value passed subsequent see example", "d": "11/2014"}, {"body": "right object containing function returned handler change context think condition function called promise insufficient reworked least behavior documented", "d": "11/2014"}, {"body": "returning nonpromise objects function called promise trying understand use case", "d": "11/2014"}, {"body": "assuming change easily fixed defining function nt like lots code example beginning comment imho easier understand better readable", "d": "11/2014"}, {"body": "cc jaubourg", "d": "11/2014"}, {"body": "harder part passing really happen something like stop caring entirely pass along without much change write code would think tricks jquery little dangerous promises reliable chains", "d": "11/2014"}, {"body": "given trying align promisea promises think documentation say users depend value inside handler promisea writeup says must called functions ie value", "d": "11/2014"}, {"body": "like idea passing context allows pass information promise subsequent handler whereas handlers dealing information example", "d": "11/2014"}, {"body": "please provide complete reduced test case jsbin help us assess ticket start", "d": "11/2014"}, {"body": "actually mention problem function outside jquery core report issue jqprint authors", "d": "11/2014"}, {"body": "dmethvin would good ticket needs review label also behavior nt needed supported browsers let drop", "d": "11/2014"}, {"body": "recall markelog trying remove early days jquery resulting removed safely", "d": "11/2014"}, {"body": "think done done officially dropping cleanly cherrypick change branches", "d": "11/2014"}, {"body": "good call", "d": "11/2014"}, {"body": "thanks opening issue however way browser parses string using related jquery bypass inserting html ampersand", "d": "11/2014"}, {"body": "thank reply", "d": "11/2014"}, {"body": "docs bit confusing point code works documented due changes applied docs note section quoting prior jquery would attempt add change nodes current jquery set first node set connected document cases return new jquery set rather original set method might might returned new result depending number connectedness arguments jquery replacewith always return original unmodified set attempting use methods node without parent neither set nodes contains changed section disconnected nodes documentation removed since functionality existed nt work reliably docs bug closing ticket", "d": "11/2014"}, {"body": "fixed docs", "d": "11/2014"}, {"body": "right also copied file nt see problem though nobody using file production good compat branch master", "d": "11/2014"}, {"body": "ok update jenkins scripts", "d": "11/2014"}, {"body": "scripts updated also moved compat jobs use branch renamings hard existing files currently point obsolete files funny points version", "d": "11/2014"}, {"body": "let leave place announce deprecated replaced new files blog post put together list big changes jquery next weeks", "d": "11/2014"}, {"body": "let leave place temporarily readd publishing jquery builds additionally jquery compat builds additionally leave currently", "d": "11/2014"}, {"body": "btw need contact jsfiddle jsbin etc change references point files perhaps good continue publishing old endpoints additionally new ones untill announced people still easily test newest builds git", "d": "11/2014"}, {"body": "agreed hurry removing old files keep date old names", "d": "11/2014"}, {"body": "alright done mirrors mirrors need check various fiddles make sure nt rely map done envision announcing filename changes", "d": "11/2014"}, {"body": "thanks opening issue please provide reduced test case ideally help us assess issue", "d": "11/2014"}, {"body": "sounds like either ca nt fix close assuming duplicate something new feel free reply reopen", "d": "11/2014"}, {"body": "sorry mistake", "d": "11/2014"}, {"body": "nice beer changetip", "d": "11/2014"}, {"body": "thank guys works fine case see message full tests user solution good", "d": "11/2014"}, {"body": "ok sounds like workable solution nt frequently encountered problem close ticket resolved", "d": "11/2014"}, {"body": "turns still need hack android missed since works correctly android oo pr", "d": "11/2014"}, {"body": "close ticket keep list manageable doriantaylor want discuss things would good place", "d": "11/2014"}, {"body": "fair nt circled back around yet probably wo nt able touch couple weeks least", "d": "11/2014"}, {"body": "encountered similar issue well exists latest version jquery want immediate fix using contenttype property set contenttype seems fix", "d": "11/2014"}, {"body": "dmethvin android version samsung ace delete request cached also cache false option created small test case", "d": "11/2014"}, {"body": "confirmed breaks android works reopening thanks getting back issue new tracker knobli", "d": "11/2014"}, {"body": "hmm actually every delte request fails android fiddle second latter ones observe different behavior knobli", "d": "11/2014"}, {"body": "scenario thought might cause trouble handler clean resources request called deferred resolves expecting activity resource actually still receive progress notifications guess nt walked implications see might happen", "d": "11/2014"}, {"body": "exact problem add new handler talking actively adding callback call already attached callbacks wo nt happen usecase pretty safe handler already attached wo nt called ever hand handlers added postresolution called lose ability know actual progress state deferred take example upload end progress handler never called upload already progressed status deferred nt change progress advancement deferred resolved upload still progression however actually dictate progress advanced since calls notify ignored upload progression forever", "d": "11/2014"}, {"body": "okay convinced think issues like promises punted progress", "d": "11/2014"}, {"body": "ran issue going agree teasealancs looks like specification needs rethought updated nt seem palatable fix current dom methods", "d": "11/2014"}, {"body": "discussion last year", "d": "11/2014"}, {"body": "hi guys eta", "d": "11/2014"}, {"body": "marked next release months would like take pretty simple fix would need relatively small addition far unit test goes", "d": "11/2014"}, {"body": "thanks want track glad know pipeline", "d": "11/2014"}, {"body": "makfruit take jsbin modify show nt set reproduce problem reduced test case", "d": "11/2014"}, {"body": "discussion", "d": "11/2014"}, {"body": "pr looks good", "d": "11/2014"}, {"body": "affects lot modules sticky sidebar visibility mess ie needs fix implementation well", "d": "11/2014"}, {"body": "jlukic set specific suggestions browser makers fix advocate agree mess code sizespeed issue worried well make always climb tree element ignore dom property", "d": "11/2014"}, {"body": "appears open issues spec chrome team response looks like nobodies decided", "d": "11/2014"}, {"body": "migrated sizzle issue jquerysizzle", "d": "11/2014"}, {"body": "looked code actually using css microsoft made quite confusing note quotes css stylesheet map property property dom element using property distinction nt matter issue nt anything distincion", "d": "11/2014"}, {"body": "seems opacity filter nt cover children unless children defined unfortunately beyond scope since control descendants added element applying opacity could try cater existing ones sure worth hacking much browser works think btw dmethvin probably labels wontfix etc otherwise hard say issue fixed closed", "d": "11/2014"}, {"body": "agreed nt seem like something could address involves dynamic structure document", "d": "11/2014"}, {"body": "get soon", "d": "11/2014"}, {"body": "mikesherov get review", "d": "11/2014"}, {"body": "timmywil since involves jqueryrelease take one get", "d": "11/2014"}, {"body": "fixed via", "d": "11/2014"}, {"body": "fixed via previous commit landed incorrect branch", "d": "11/2014"}, {"body": "pr merged", "d": "11/2014"}, {"body": "dropping support ie lt stop adding zoom body", "d": "11/2014"}, {"body": "referred back internet explorer team address suspect resolution ie adopt safarichromefirefox behavior hopefully clarify standard", "d": "11/2014"}, {"body": "markelog removing recursion added bytes nt seem increase performance perhaps implementation could improved", "d": "11/2014"}, {"body": "wow unsettling check closely", "d": "11/2014"}, {"body": "thank chris good result", "d": "11/2014"}, {"body": "believe misconfigured according jsperf faq referenced benchmarkjs documentation run outside test test cover many code invocations test latter link particularly illuminating point actually tested every case various signatures element matching handlers since first code invocation test would pulled underneath subsequent attempts", "d": "11/2014"}, {"body": "might mean original test misconfigured", "d": "11/2014"}, {"body": "seeing amp run times two test cases pretty sure test gets many test loops", "d": "11/2014"}, {"body": "samples test loop events perf amount much lower means one test execution measured correctly others nt words still shows problem nt give precise numbers common mistake checked thoroughly jdalton mathiasbynens right", "d": "11/2014"}, {"body": "way jsperf works setup run clocked test loop ran something like removing elements want ensure test right number elements remove setup tear access loop count via use create number events elements whatever removed drag overall responsiveness harness tests heavy setup experimentation needed see good fit test", "d": "11/2014"}, {"body": "jdalton btw possible weaken spam filter middle creating correct test blocked spam filter problem raise couple times us like", "d": "11/2014"}, {"body": "possible weaken spam filter pain real looking moving github authentication could use help pr", "d": "11/2014"}, {"body": "pain real try help get free time back business chrisantaki could redo tests", "d": "11/2014"}, {"body": "sure markelog move test cases run every loop", "d": "11/2014"}, {"body": "check link previous comment could", "d": "11/2014"}, {"body": "sounds good nice catch", "d": "11/2014"}, {"body": "branch bytes chrome firefox jsperf jquery amp amp link namespaceregex bytes amp amp link eventremovewithoutrecursion bytes amp amp link units opssec values amp perhaps jsperf checklist could benefit future discussions memory leaks prevented use method must done per test loop must use help target specific iterations", "d": "11/2014"}, {"body": "least chrome looks like removing event namespace faster removing individual event", "d": "11/2014"}, {"body": "yes surprised make tests verify", "d": "11/2014"}, {"body": "really like thorough analysis wish prs regex version end nt look big really adds much benchmarks nt making strong case change", "d": "11/2014"}, {"body": "agreed dmethvin ready move namespace based removal nt bad shape like originally suspected", "d": "11/2014"}, {"body": "best patch one nt change anything thank chris", "d": "11/2014"}, {"body": "online builder answer think question purpose problem really solving online download builder target users", "d": "11/2014"}, {"body": "people want custom builds look githubcom example using custom build ember work small subset well pretty advanced users though hypothesis requiring user pull whole repo possibility dependencies broken since time released understanding grunt command line options custom build work users willing go could right still wo nt people looking sure determine without building", "d": "11/2014"}, {"body": "dave thanks answers completely understand agree people want custom builds although like dig little bit current hypothesis takes brazilian internet connection big ran developer currently allows one cherrypick whatever jquery piece need want improve numbers using download builder nt understand dependencies problem nt locked", "d": "11/2014"}, {"body": "goals tbd edit comment points clarified allow developers willing use cli understand grunt options use amd customize jquery provide stable freezed dependencies build environment obs goals going changed case decide distribute consumable modules instead monolithic like ui mobile globalize", "d": "11/2014"}, {"body": "nt understand dependencies problem nt locked specify concrete versions direct dependencies dependencies dependencies vague control break future way control would use many ways broken even someone may unpublish version library depend break way sure would commit dependencies would boost repo size extremely every dev perfect solution", "d": "11/2014"}, {"body": "got thanks goals updated", "d": "11/2014"}, {"body": "rxaviers dependencies dependencies mostly wrote even someone may unpublish version library depend break scenario rare possible", "d": "11/2014"}, {"body": "simplified goals thanks", "d": "11/2014"}, {"body": "separate repo used download builder could shrinkwrap commit dependencies repo would need committed every release final betas agree tried committing dependencies publishing bower npm people would come us torches pitchforks since projects would massively bloated want one thing minified file", "d": "11/2014"}, {"body": "dependencies issue want point download builder falls problem developers using cli download builder fetch dependencies deploy exposed risks pointed broken unpublished dependencies difference manage download builder environment responsible provide fix somehow still need way prevent problem really think problem", "d": "11/2014"}, {"body": "mzgol use npm shrinkwrap many ways broken could point issue", "d": "11/2014"}, {"body": "markelog use npm shrinkwrap many ways broken could point issue top head generally creating mismatches causes silent failures ignores shrinkwrap file shrinkwrap project may cause trigger excessive network requests nt idempotent ad update dependency instead commit ensure installed exactly specified remove update package regenerate shrinkwrap file commit changes ad first list wanted avoid problem insert running special cleanup scrip point last list angular team sth like pretty sure making mistakes process amp fixing shrinkwrap pipeline believe involved process nt happened yet npm earliest", "d": "11/2014"}, {"body": "none matters shrinkwrapping time release would nt existing", "d": "11/2014"}, {"body": "wow synchronicity outlines problems proposes solution", "d": "11/2014"}, {"body": "unless plan make jquery metaproject ship smaller standalone libraries like think would great idea suggested solution slightly different problem hate thatguy frequently point handcrafted perlibrary build tools antipattern h andcrafted perlibrary build tools add complexity already complex problem one things say modularity javascript nearly every library consumer agrees vehemently people nt want ship code nt use one solution custom builds via build tools especially useful solution world globals dominant module system happen small dependency graph apps get complicated dependency graph grows custom builds start add rather subtract complexity example imagine library x really composed smaller parts ship x standalone package hear projects use parts use etc build tool lets one project define smaller subset x dependency begin combine multiple projects depend different subsets x run trouble let say project depends possibly ships project depends possibly ships leave consumer know need custom build eat cost shipping bits twice dependencies depend x likely ship gt mistake best idea heard resolving problem goes like author modules transpile builds support amd cjs retain modularity also ship globals build people prefer people need ship minimal code allow treeshake preferred module syntax supports treeshaking application build time instead library build time", "d": "11/2014"}, {"body": "module first approach monolithic build exception like sounds good trek nodebased tool chain would describe box", "d": "11/2014"}, {"body": "module approach core could take look globalize modules granular source files assembled functional groups similarly could jqueryjs base jqueryajaxjs jquerydeferredjs module approach pushing handcrafted build tools onto consumers using internally assemble consumabledist modules", "d": "11/2014"}, {"body": "jaubourg tooling exists several options one recommend integrating existing build process trivial sample one using broccoli repo example authoring small project transpiling amd cjs globals npm publishing also see readme info", "d": "11/2014"}, {"body": "note wanted made folder contain files authored modules would breaking change since publish npm would require bumping major version going seems like good moment one way compatible module formats would transpile amd commonjs put output files would make package larger surely make people complain size already thing consider", "d": "11/2014"}, {"body": "happy help however ember already using modules able everything else shake part application build process hugely valuable already tried gruntbased custom build back ran problem described say confidence would nt use custom build tool angular also module based imagine boat probably subset users would use build tool suggesting making small wrapper around real modules setup", "d": "11/2014"}, {"body": "one way compatible module formats would transpile amd commonjs put output files would make package larger surely make people complain size already thing consider chime place publish modules strongly urge reconsider putting compile source version control future versions sure keenly aware many annoying problems causes really love larger projects come together help bower solve us note wanted made folder contain files authored modules would breaking change since publish npm would require bumping major version going seems like good moment worry get today without breaking public api needing version bump start authoring modules somewhere else eg add src wo nt end version control add wo nt npm compile add pre postpublish scripts source source control github npm build npm source control nt contain built assets npm nt contain authoring files precisely demonstrates building notice nt appear anywhere source gitignored relevant entry entry points distcjsindexjs authoring code nt pollute npm npm ignored", "d": "11/2014"}, {"body": "also popular converter want author modules use language features", "d": "11/2014"}, {"body": "example using", "d": "11/2014"}, {"body": "arthurvr jaubourg seems jsbin commited try support even occasionally break still better jsfiddle situation though preview works unlike jsfiddle unless weird things see probably stop advising create examples jsfiddle favor jsbin", "d": "11/2014"}, {"body": "mzgol agreed", "d": "11/2014"}, {"body": "jsbin preview also nicer iframes preview jsbin appends link body way less likely break way", "d": "11/2014"}, {"body": "let us know problem still exists including html shiv", "d": "11/2014"}, {"body": "fiddle works fine browserstack see screenshot windows unable reproduce reported bug", "d": "11/2014"}, {"body": "guessing might issue ie vm native windows user help test", "d": "11/2014"}, {"body": "guessing might issue ie vm native windows user help test dmethvin", "d": "11/2014"}, {"body": "ie vm think nt difference ie vm real ie diff could versions different tomchentw could post ie versions mzgol could", "d": "11/2014"}, {"body": "could nt reproduce ie windows ie windows", "d": "11/2014"}, {"body": "mzgol could sure although afaik nt updated drastically lifetime works browserstack windows windows windows oh hoped browserstack updating often local machines windows image windows private windows copy installed via bootcamp run via parallels", "d": "11/2014"}, {"body": "tomchentw might mean policy restrictions browser", "d": "11/2014"}, {"body": "mzgol markelog clean installed yosemite took time reinstall modernie yes ca nt reproduce fiddle works perfectly however switch frameworks amp extensions run working issue ideas", "d": "11/2014"}, {"body": "however switch frameworks amp extensions jquery jquery run working issue ideas ahh silly basically actually points latest commit jquery version nt support ie lt recreate fiddle much responsive jsfiddle maintainers used already fixed links via pr please read context", "d": "11/2014"}, {"body": "ok click", "d": "11/2014"}, {"body": "windows via browserstack local vm getting errors logged windows via browserstack see error sorry fuss versions wasting everyone time remembered change made edit fixed responses pasted wrong ones", "d": "11/2014"}, {"body": "ok click run js thanks update updated first post thread point jsbin got result", "d": "11/2014"}, {"body": "btw jsfiddle fixed links amp names edge versions", "d": "11/2014"}, {"body": "wow great open source", "d": "11/2014"}, {"body": "could activex xhr nt cooperate cors least patch requests ideally would jquery compat xhr ie request local use activex one ie use native xhr using sth different use activex using one use native xhr right nice able without uasniffing", "d": "11/2014"}, {"body": "could always use native xhr crossdomain requests ie lt nt cors anyway people might rely crossdomain patch requests working via xdomainrequest understand correctly", "d": "11/2014"}, {"body": "shows error", "d": "11/2014"}, {"body": "sorry gone around bit want sure understand stands two comments mzgol correct summary", "d": "11/2014"}, {"body": "tomchentw summarize current state issue let us know whether still exists", "d": "11/2014"}]