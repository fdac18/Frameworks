[{"title": "vuejs use axios wrapped external function", "body": "code export default data function return tabledata tablecolumns show firstname label first name datatype show lastname label last name datatype showfilter true beforemount function thistabledata utilsgetuserlist components vuedatatable utilsjs function getuserlist export function getuserlist data axios method get url apiadminusers datatype json headers xrequestedwith xmlhttprequest response gt var status responsestatus status status consolelog responsedata data responsedata else alert return catch error gt consolelog error runtime could get returned responsedata data responsedata although consolelog responsedata print data returned", "num": "6724", "d": "9/2017"}, {"title": "typescript augmenting componentoptions", "body": "possible augment type definition using vueinject plugin allows specifying section component definition unfortunately ca nt get work right way looks like import vue vue declare module vue export type componentoptions dependencies string string key string string typescript throws error ps work expected hack original file provided vue solution unacceptable", "num": "6723", "d": "9/2017"}, {"title": "multiple spaces selectoption wo nt go vmodel correctly", "body": "version reproduction link steps reproduce select expected multiple spaces tag see jquery behavior actually happening one space html actually variable one space", "num": "6722", "d": "9/2017"}, {"title": "html select multiple tag get undefined", "body": "hello new vuejs student rest api returns categorylist categoryselected conflicting select multiple html categoryvue itemname export default data gt dataitem created getcategoria axiosget res gt thisdataitem resdatadata json api console error put html thisdataitem values right much select vfor option populated dateitemcategoryselected come undefined comes api array thank", "num": "6720", "d": "9/2017"}, {"title": "use directive give componentdomhtmlelement add class vue clear", "body": "version reproduction link steps reproduce vuedirective sf bind el bind vnode elclasslistadd myclass time myclass clear use user component class check myclass auto clear vue formwork expected fixed actually happening fixed fixed", "num": "6719", "d": "9/2017"}, {"title": "vmodel bind update input value", "body": "version reproduction link steps reproduce type custominput reset value onchange event input element value update expected rawvalue reset custominput watch change update input element actually happening rawvalue reset custominput watch value change click button reset rawvalue abcdef work", "num": "6717", "d": "9/2017"}, {"title": "exceptions thrown errorhandler halt app", "body": "version reproduction link steps reproduce add errorhandler throws exception notice app halts badly expected exceptions thrown errorhandlers use console print something fail silently actually happening whole app rendering halts using ravenjs plugin vue triggers behavior filed issue feedback thought might save future developers time fail quite catastrophically case", "num": "6714", "d": "9/2017"}, {"title": "sharing computed property cache across mixins", "body": "problem feature solve would improve performance many applications mixins shared computed property cache example create mixin includes complicated computed property injected mixin different components computed property currently evaluated times since computed property identical could potentially share cache could nice performance enhancement without api changes user perspective would also reduce memory footprint application proposed api look like could simple changing cache key mixin computed properties familiar codebase would interested knowing would possible", "num": "6712", "d": "9/2017"}, {"title": "add analog plain html", "body": "problem feature solve use vhtml computedproperty directive uncomfortable need add one computed property every user input value every component mixin method good understand manual mixin function executes every time input mixin function markdown slow app much proposed api look like would good analog plain html implement markdown filter inside mixin use userinputdatavariable markdownfilterfrommixin thanks", "num": "6711", "d": "9/2017"}, {"title": "feature add plain html analog", "body": "hello would good analog plain html use vhtml directive witch comfortable usecases one usecas requested thanks", "num": "6710", "d": "9/2017"}, {"title": "different model value click handler different browsers checkbox element", "body": "version reproduction link steps reproduce click checkbox see console output looks like chrome update model value click event handler called ff call event handler model get new value browsers latest versions expected expected get correct model value inside checkbox click event handler actually happening chrome getting correct model value ff getting reversed value seems change event handler nt issues like click", "num": "6709", "d": "9/2017"}, {"title": "use component", "body": "problem feature solve found attribute works component mentioned api document since quite convenient supported officially current example convenient way proposed api look like", "num": "6708", "d": "9/2017"}, {"title": "dist files updated", "body": "updated vuejs seems maybe receive changes except version number diff git alibvuejsvuejs blibvuejsvuejs index alibvuejsvuejs blibvuejsvuejs vuejs vuejs c evan released mit license vue vue dist folder", "num": "6707", "d": "9/2017"}, {"title": "idea comment block", "body": "problem feature solve hi situation working several persons project searching best way comment vue files file know use normal html comment tags components eg top section wondering best recommended solution would nt idea block available like type free meaning non html text course block completely skipped compile thanks advance reply suggestion kind regards johnny proposed api look like general information vue file text free ascii text", "num": "6706", "d": "9/2017"}, {"title": "idea comment block", "body": "hi situation working several persons project searching best way comment vue files file know use normal html comment tags components eg top section wondering best recommended solution would nt idea block available like type free meaning non html text course block completely skipped compile thanks advance reply suggestion kind regards johnny", "num": "6705", "d": "9/2017"}, {"title": "uncaught typeerror read property type undefined", "body": "version reproduction link steps reproduce bind component input field using inlinetemplate expected proper error message tells developer inlinetemplate components must exactly one child element actually happening uncaught typeerror read property type undefined hello already proper error message situation check number child elements implemented gt maybe method geninlinetemplate throws exception found", "num": "6703", "d": "9/2017"}, {"title": "keep children order sync slots order", "body": "problem feature solve array reflect order rendered components reordered using example order synced would like request advanced components would remove need tricky workarounds", "num": "6702", "d": "9/2017"}, {"title": "vue packages version mismatch", "body": "get error running webpack vue vuetemplatecompiler may cause things work incorrectly make sure use version using vueloader gt simply update vuetemplatecompiler using vueloader lt vueify reinstalling vueloadervueify bump vuetemplatecompiler latest however try install says npm install vuetemplatecompiler npm err code etarget npm err notarget matching version found vuetemplatecompiler npm err notarget cases one dependencies requesting npm err notarget package version nt exist solve mismatch", "num": "6700", "d": "9/2017"}, {"title": "fonts fail load fontface url sass", "body": "version reproduction link steps reproduce simply pull repository expected expect urlloader handle fonts actually happening font found dependency found cssloader minimize false sourcemap false vueloaderlibstylecompiler vue true id scoped false hasinlineconfig false sassloaderlibloaderjs includepaths srcassetsscss data import basescss sourcemap false vueloaderlibselectorjs typestyles amp srccomponentshellovue install run npm install save", "num": "6699", "d": "9/2017"}, {"title": "", "body": "version reproduction link steps reproduce \u901a\u8fc7vmodel\u7ed1\u5b9a\u4e00\u4e2a\u81ea\u5b9a\u4e49checkbox\u7ec4\u5efa \u76f4\u63a5\u5728root\u5143\u7d20\u4f7f\u7528\u8be5\u7ec4\u5efa\u4f1a\u51fa\u73b0 vue warn attrs readonly vue warn listeners readonly\u8b66\u544a \u5177\u4f53\u4ee3\u7801\u5982 \u6f14\u793a\u6240\u793a expected \u4e0d\u8981\u62a5\u8b66\u544a\u9519\u8bef actually happening vue warn attrs readonly found e githubvuewebpacktestsrccomponentscheckboxvue warn anonymous reactivesetter updatechildcomponent prepatch patchvnode updatechildren patchvnode patch vueupdate updatecomponent get run flushschedulerqueue anonymous nexttickhandler promise resolved async timerfunc queuenexttick queuewatcher update notify reactivesetter proxysetter callback invoker vue emit change boundfn invoker vue warn listeners readonly found e githubvuewebpacktestsrccomponentscheckboxvue warn anonymous reactivesetter updatechildcomponent prepatch patchvnode updatechildren patchvnode patch vueupdate updatecomponent get run flushschedulerqueue anonymous nexttickhandler promise resolved async timerfunc queuenexttick queuewatcher update notify reactivesetter proxysetter callback invoker vue emit change boundfn invoker vue warn avoid mutating prop directly since value overwritten whenever parent component rerenders instead use data computed property based prop value prop mutated value found e githubvuewebpacktestsrccomponentscheckboxvue", "num": "6698", "d": "9/2017"}, {"title": "function geninlinetemplate throws uncaught typeerror read property type undefined", "body": "function geninlinetemplate throws uncaught typeerror read property type undefined el children", "num": "6697", "d": "9/2017"}, {"title": "want konw fine put vueserverrendererbuildjs webpack produce", "body": "problem feature solve wana know use vuessr use react include serverjs webpack entryserver proposed api look like thanks answer", "num": "6696", "d": "9/2017"}, {"title": "transition enter hook unexpectedly triggered vshow false", "body": "version reproduction link steps reproduce open jsfiddle example expected alert actually happening alerted occurred wrap component use control display child component", "num": "6695", "d": "9/2017"}, {"title": "slot use components", "body": "version reproduction link steps reproduce addvue addlayoutvue expected hope show content actually happening p shows page", "num": "6694", "d": "9/2017"}, {"title": "mount work properly plugin", "body": "version reproduction link steps reproduce run project click vue logo click method call message plugin expected page show text vue plugin actually happening plugin message nt show properly show empty div node code works fine", "num": "6693", "d": "9/2017"}, {"title": "smoochio web messenger wo nt load", "body": "elifecycle problem put following lines adding npm package var smooch require smooch smoochinit appid referenceerror window defined", "num": "6692", "d": "9/2017"}, {"title": "anyone considering make vue optional webassembly core", "body": "seems inevitable major frameworks eventually heavy algorithms operating separate threadprocess webassembly see like frameworks currently provide two files one template compiler one without allow done build time one things brought vue great official integration webpack vue files recently webpack received lot extra funding allow webassembly work seamlessly likely huge development lot work seems would require rock star programmer making fortune figure one example although nt know optimally done mozilla pdfjs however seems going path making necessary download rendering code twice want use webworker main bundle webworker", "num": "6691", "d": "9/2017"}, {"title": "select value updated correctly input handler triggers class change", "body": "version current chrome safari reproduction link steps reproduce open provided jsfiddle change select box value alpha expected value changed green class applied actually happening green class applied value stays unchanged provided fiddle runs version tested locally behaves exactly report linked", "num": "6690", "d": "9/2017"}, {"title": "two way binding inputs nt update input value directly", "body": "version reproduction link steps reproduce write bbc add end input add character end input expected step expect input value value dom node one see change actually happening step everything works fine step correct value dom value wong step disappears dom value everything back normal nt know design strange behavior think would better value dom node always equal attribute", "num": "6689", "d": "9/2017"}, {"title": "allow multiple definition", "body": "problem feature solve reuse component logic visual framework bootstrap semanticui materialdesign etc may thinking ca nt achieved using themes always visual frameworks csss also manipulates dom theming nt solve proposal allow multiple definition global api set default template user interface proposed api look like example js iname iname export default props items mounted vueconfigdefaulttemplate semanticui semanticui javascript boilerplate js main module set default ui framework semanticui vueconfigdefaulttemplate semanticui", "num": "6688", "d": "9/2017"}, {"title": "transitioning components fails component root node vif false", "body": "version reproduction link steps reproduce click radio b expected switch component b actually happening nt switch b real scenario user navigates new view want load remote data created hook set root node vif true switch component data nt load reason dynamic component stuck ca nt go anywhere", "num": "6687", "d": "9/2017"}, {"title": "low performance adding new element list", "body": "version reproduction link steps reproduce open link start recording performance chrome developer tools performance click button stop recording expected expected adding message require heavy calculations less actually happening practice turns list completely rendered virtual dom calculations take core think point obviously optimized", "num": "6686", "d": "9/2017"}, {"title": "\u63d2\u4ef6\u6302\u8f7d\u6709\u70b9\u95ee\u9898", "body": "version reproduction link steps reproduce javascript srccomponentsmessagemessagevue message export default data return message plugin visible true srccomponentsmessagemessagejs import vue vue let alertconstructor vueextend require messagevue let instance let msg function options instance new alertconstructor instance instance mount documentcreateelement div documentbodyappendchild instance el return instance export default msg \u5728appvue\u91cc import message componentsmessagemessagejs expected \u671f\u671b\u80fd\u50cf\u65e7\u7248\u672c\u4e00\u6837\u6b63\u5e38\u663e\u793a actually happening \u70b9\u51fbvue logo\u8c03\u7528message", "num": "6685", "d": "9/2017"}, {"title": "click events doubleclick events conflicts resolve", "body": "", "num": "6684", "d": "9/2017"}, {"title": "test", "body": "", "num": "6683", "d": "9/2017"}, {"title": "\u5f02\u6b65\u6ce8\u518c\u7ec4\u4ef6\u7684require\u662f\u5426\u53ef\u4ee5\u4fee\u6539\u4e3aimport\u66f4\u5408\u9002", "body": "version reproduction link steps reproduce \u5f02\u6b65\u6ce8\u518c\u7ec4\u4ef6\u7684require\u662f\u5426\u53ef\u4ee5\u4fee\u6539\u4e3aimport\u66f4\u5408\u9002 \u56e0\u4e3a\u53ef\u80fd\u6211\u7684vue\u6587\u4ef6\u662f\u7528ts\u5199\u7684 \u901a\u8fc7require\u4f1a\u62a5\u9519 \u9700\u8981\u624b\u52a8\u6dfb\u52a0require\u5230dts expected actually happening", "num": "6682", "d": "9/2017"}, {"title": "please enhance custom directives", "body": "problem feature solve let start saying love vue awesome framework guys created enjoy using top frameworks choice day one one small area found vue lacking custom directives department nt around vue gather decision made underpower custom directives favor components agree developing applications components likely need problem starts want create plugins especially ui plugins created ui plugins frameworks specifically bootstrap native implementation several features implemented custom directives like clean way tried achieve thing vue well got frustrated quickly problem number nt vue instance wish could create custom directives way create custom components actual vue instance use right manually extract directive bindings store element clean since pass el object around access properties doable clean problem number update hook function called consistently instance vmydirective foo bar bar changes update method called something dom changes update called super frustrating many times want control state directive based property value consistent way know value changed real problem things done without consistent way know binded property changed wish could vue instance watch methods react changes accordingly love vue awesome framework continue enjoy using recommend improved would absolutely reason ever use framework thanks hard work love goes vue proposed api look like api basically one custom components example silly would love able something like", "num": "6680", "d": "9/2017"}, {"title": "please enhance custom directives", "body": "let start saying love vue awesome framework guys created enjoy using top frameworks choice day one one small area found vue lacking custom directives department nt around vue gather decision made underpower custom directives favor components agree developing applications components likely need problem starts want create plugins especially ui plugins created ui plugins frameworks specifically bootstrap native implementation several features implemented custom directives like clean way tried achieve thing vue well got frustrated quickly problem number nt vue instance wish could create custom directives way create custom components actual vue instance use right manually extract directive bindings store element clean since pass object around access properties doable clean problem number update hook function called consistently instance changes method called something dom changes called super frustrating many times want control state directive based property value consistent way know value changed real problem things done without consistent way know binded property changed wish could vue instance methods react changes accordingly love vue awesome framework continue enjoy using recommend improved would absolutely reason ever use framework thanks hard work love goes vue", "num": "6679", "d": "9/2017"}, {"title": "ssr render function recognize slotsdefault child component dynamic", "body": "version reproduction link steps reproduce server side render function recognize slotsdefault child component dynamic work fine client side expected render dynamic component actually happening empty content", "num": "6678", "d": "9/2017"}, {"title": "vbind something else object warn", "body": "version reproduction link steps reproduce create component slot bind reference string slot via utilize said component define template defined slot giving local scope parameter output bound string output scoped string template passed component created step expected string bound slot passed template passed slot string actually happening string exploded object properties string indexes character string sure intended behavior default value defined slot outputs string expected soon passed consumer defined template string altered object temporary workaround simply pass actual object vbind slot expect object scoped value defined template seems intended behavior least vue warning value mangled vbind expects object string", "num": "6677", "d": "9/2017"}, {"title": "easily keep component status vfor key array splice", "body": "version reproduction link steps reproduce click first component remove expected remain second component show second component status actually happening remain component show first component status known happen use keyindex component reused current version key required ca nt add unique key array element easily found suggestions forum use object array element use object key directly ex vue expect value catch warning avoid using nonprimitive value key use stringnumber value instead think right way must create unique id manually like official todomvc example graceful solution think restriction post issue thank", "num": "6676", "d": "9/2017"}, {"title": "working node", "body": "version reproduction link something could put github repo jsfiddle link another people runs problem steps reproduce install node install vue start new project run generated file appjs served properly look network panel browser gives errcontentlengthmismatch error expected show default project page actually happening appjs file served properly works node", "num": "6675", "d": "9/2017"}, {"title": "\u5728webpack", "body": "", "num": "6674", "d": "9/2017"}, {"title": "loss jquery event listening", "body": "version reproduction link steps reproduce attached jsfiddle example see using plugin modify date trigger change dateval however comment line imports vue uncomment line imports vue see plugin trigger change dateval expected change value triggered jquery trigger change event vue object actually happening vue data update change value jquery dug best could vue vue listen events tell vue block code would listen jquery events well vue listens native events block code lines vue code base", "num": "6673", "d": "9/2017"}, {"title": "loss jquery event listening", "body": "version reproduction link steps reproduce attached jsfiddle example see using plugin modify date trigger change dateval however comment line imports vue uncomment line imports vue see plugin trigger change dateval expected change value triggered jquery trigger change event vue object actually happening vue data update change value jquery dug best could vue vue listen events tell vue block code would listen jquery events well vue listens native events block code lines vue code base", "num": "6672", "d": "9/2017"}, {"title": "eventprevent nt work properly", "body": "version reproduction link steps reproduce open fiddle chrome try scroll updown green block child scroll occur prevented try scroll updown red block parent scroll occur prevented chrome works expected open fiddle firefox try scroll updown green block child try scroll updown red block parent scroll occur cases bug versions browsers used chromium firefox os linux ubuntu gnome desktop environment expected eventprevent preventdefault firefox actually happening eventprevent preventing maybe add", "num": "6671", "d": "9/2017"}, {"title": "deep props change vmodel vs set vs objectassign", "body": "version reproduction link steps reproduce consider three examples vmodel set methods update slug userid set thisvalue slug userid eventtargetchecked objectassign methods update slug userid let obj thisvalue obj slug userid eventtargetchecked thisvalue objectassign thisvalue obj expected expect three ways work expected ie look structure vue dev tools see leaves toggle true false checkuncheck checkboxes actually happening fact third way works expected moreover way also working sometimes unacceptable maybe getting whole reactivity thing however documentation especially promoted matter", "num": "6670", "d": "9/2017"}, {"title": "host vuejs shared hosting", "body": "ran root directory vuejs project created using webpacksimple copied web hosting root try access site get blank page", "num": "6669", "d": "9/2017"}, {"title": "ca nt copy list props model data render", "body": "version reproduction link steps reproduce load hotreload expected data props copied model html list rendered model actually happening list empty created question stackoverflow basically list component receives array iterates render html list change list add remove items ca nt directly props trying copy model parameter change mutate array comes http request made parent component use props iteration works list correctly rendered ca nt change use model works hotreloading maybe takes time receive data network works props otherwise list empty hotreloading depends lifecycle event use make copy anyone knows problem something else name model property number correct never called use props iteration use model instead always come printing props result depends variable used iterate directive nt bug tl dr reporting two things ca nt make copy data come http request props model render list properly trying find came across behavior props changes whether use directive please could anybody help", "num": "6668", "d": "9/2017"}, {"title": "ca nt copy list props model data render", "body": "created question stackoverflow basically list component receives array iterates render html list change list add remove items ca nt directly props trying copy model parameter change mutate array comes http request made parent component use props iteration works list correctly rendered ca nt change use model works hotreloading maybe takes time receive data network works props otherwise list empty hotreloading depends lifecycle event use make copy anyone knows problem something else name model property number correct never called use props iteration use model instead always come printing props result depends variable used iterate directive nt bug tl dr reporting two things ca nt make copy data come http request props model render list properly trying find came across behavior props changes whether use directive please could anybody help", "num": "6667", "d": "9/2017"}, {"title": "", "body": "version reproduction link steps reproduce expected \u671f\u671bprogress\u6807\u7b7e\u7684value\u5c5e\u6027\u80fd\u591f\u6b63\u786e\u6e32\u67d3 actually happening \u5fc5\u73b0", "num": "6666", "d": "9/2017"}, {"title": "vhtml strips tags", "body": "hey guys right developing cms get html server load via vhtml everything dom rendered pretty fine", "num": "6664", "d": "9/2017"}, {"title": "click pb", "body": "version reproduction link steps reproduce msg essential links export default name hello data return msg welcome vuejs app methodes say message alert message fontweight normal ul liststyletype none padding li display inlineblock margin color expected hello help please hi version webpack actually happening vueesmjs vue warn property method say defined instance referenced render make sure declare reactive data properties data option uncaught typeerror vmsay function click hellovue htmlbuttonelementinvoker vueesmjs", "num": "6663", "d": "9/2017"}, {"title": "click button error", "body": "hello help please hi version webpack msg essential links export default name hello data return msg welcome vuejs app methodes say message alert message fontweight normal ul liststyletype none padding li display inlineblock margin color vueesmjs vue warn property method say defined instance referenced render make sure declare reactive data properties data option uncaught typeerror vmsay function click hellovue htmlbuttonelementinvoker vueesmjs", "num": "6662", "d": "9/2017"}, {"title": "\u5f53\u524d\u9875\u5237\u65b0", "body": "vueuse router const router new router routes path illegal name illegal component illegal path name index component index path index name index component index path todoform name todoform component todoform children \u903e\u671f\u5ba1\u6279 path repaymentoverdueapprove name repaymentoverdueapprove component repaymentoverdueapprove export default router", "num": "6661", "d": "9/2017"}, {"title": "poorly performance computed property computed property accesses nested array", "body": "version reproduction link steps reproduce first computed property accesses nested array second computed property accesses first computed property expected computed property cached repeated calls returns result immediately actually happening compute function called access computed property slow looks like computed property accesses nested array cached properly", "num": "6660", "d": "9/2017"}, {"title": "improve diff intuition components nested plain elements", "body": "version reproduction link steps reproduce expected \u5176\u4ed6vif\u7684\u5143\u7d20\u4e0d\u5e94\u8be5\u5f71\u54cd\u4e92\u4e0d\u76f8\u5e72\u7684\u7ec4\u4ef6 actually happening", "num": "6659", "d": "9/2017"}, {"title": "vif affect custom component", "body": "problem description block use vif custom component custom component create twice first one destroyed cause wrong quote beyong contemplation test cases title title error title error title", "num": "6658", "d": "9/2017"}, {"title": "improve error message nonreactive properties", "body": "problem feature solve current error message non helpful vueclasscomponent js ts forget initialize property get error course class based components data option nt helpful proposal change error message proposed api look like changes", "num": "6657", "d": "9/2017"}, {"title": "production setup memory loss", "body": "version reproduction link steps reproduce run nuxtjs production production expected continues run actually happening memory loss crash production nuxtjs build posting issue since stack seems point either lines couple dumps crash pretty consistent almost even long runs first one couple days ago lt last gcs gt ms marksweep gt mb ms allocation failure gc old space requested ms marksweep gt mb ms last resort ms marksweep gt mb ms last resort lt js stacktrace gt js stack trace security context initwatch aka initwatch init fatal error callandretrylast allocation failed javascript heap memory node abort node node utils reportoomfailure char const bool node internal fatalprocessoutofmemory char const bool node internal factory newtransitionarray int node internal transitionarray insert internal handle internal handle internal handle internal simpletransitionflag node internal map copyreplacedescriptors internal handle internal handle internal handle internal transitionflag internal maybehandle char const internal simpletransitionflag node internal map copyadddescriptor internal handle internal descriptor internal transitionflag node internal map copywithfield internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal representation internal transitionflag node internal map transitiontodataproperty internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal object storefromkeyed node internal lookupiterator preparetransitiontodataproperty internal handle internal handle internal propertyattributes internal object storefromkeyed node internal storeic lookupforwrite internal lookupiterator internal handle internal object storefromkeyed node internal storeic updatecaches internal lookupiterator internal handle internal object storefromkeyed node internal storeic store internal handle internal handle internal handle internal object storefromkeyed node internal runtimestoreicmiss int internal object internal isolate node done today yarn start nuxt start open lt last gcs gt ms marksweep gt mb ms allocation failure gc old space requested ms marksweep gt mb ms last resort ms marksweep gt mb ms last resort lt js stacktrace gt js stack trace security context watch createwatcher aka createwatcher fatal error callandretrylast allocation failed javascript heap memory node abort node node utils reportoomfailure char const bool node internal fatalprocessoutofmemory char const bool node internal factory newtransitionarray int node internal transitionarray insert internal handle internal handle internal handle internal simpletransitionflag node internal map copyreplacedescriptors internal handle internal handle internal handle internal transitionflag internal maybehandle char const internal simpletransitionflag node internal map copyadddescriptor internal handle internal descriptor internal transitionflag node internal map copywithfield internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal representation internal transitionflag node internal map transitiontodataproperty internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal object storefromkeyed node internal lookupiterator preparetransitiontodataproperty internal handle internal handle internal propertyattributes internal object storefromkeyed node internal storeic lookupforwrite internal lookupiterator internal handle internal object storefromkeyed node internal storeic updatecaches internal lookupiterator internal handle internal object storefromkeyed node internal storeic store internal handle internal handle internal handle internal object storefromkeyed node internal runtimestoreicmiss int internal object internal isolate node done", "num": "6656", "d": "9/2017"}, {"title": "production setup memory loss", "body": "version reproduction link steps reproduce run nuxtjs production production expected continues run actually happening memory loss crash production nuxtjs build posting issue since stack seems point either lines couple dumps crash pretty consistent almost even long runs first one couple days ago lt last gcs gt ms marksweep gt mb ms allocation failure gc old space requested ms marksweep gt mb ms last resort ms marksweep gt mb ms last resort lt js stacktrace gt js stack trace security context initwatch aka initwatch init fatal error callandretrylast allocation failed javascript heap memory node abort node node utils reportoomfailure char const bool node internal fatalprocessoutofmemory char const bool node internal factory newtransitionarray int node internal transitionarray insert internal handle internal handle internal handle internal simpletransitionflag node internal map copyreplacedescriptors internal handle internal handle internal handle internal transitionflag internal maybehandle char const internal simpletransitionflag node internal map copyadddescriptor internal handle internal descriptor internal transitionflag node internal map copywithfield internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal representation internal transitionflag node internal map transitiontodataproperty internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal object storefromkeyed node internal lookupiterator preparetransitiontodataproperty internal handle internal handle internal propertyattributes internal object storefromkeyed node internal storeic lookupforwrite internal lookupiterator internal handle internal object storefromkeyed node internal storeic updatecaches internal lookupiterator internal handle internal object storefromkeyed node internal storeic store internal handle internal handle internal handle internal object storefromkeyed node internal runtimestoreicmiss int internal object internal isolate node done today yarn start nuxt start open controlsettings controlsettings controlimages lt last gcs gt ms marksweep gt mb ms allocation failure gc old space requested ms marksweep gt mb ms last resort ms marksweep gt mb ms last resort lt js stacktrace gt js stack trace security context watch createwatcher aka createwatcher fatal error callandretrylast allocation failed javascript heap memory node abort node node utils reportoomfailure char const bool node internal fatalprocessoutofmemory char const bool node internal factory newtransitionarray int node internal transitionarray insert internal handle internal handle internal handle internal simpletransitionflag node internal map copyreplacedescriptors internal handle internal handle internal handle internal transitionflag internal maybehandle char const internal simpletransitionflag node internal map copyadddescriptor internal handle internal descriptor internal transitionflag node internal map copywithfield internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal representation internal transitionflag node internal map transitiontodataproperty internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal object storefromkeyed node internal lookupiterator preparetransitiontodataproperty internal handle internal handle internal propertyattributes internal object storefromkeyed node internal storeic lookupforwrite internal lookupiterator internal handle internal object storefromkeyed node internal storeic updatecaches internal lookupiterator internal handle internal object storefromkeyed node internal storeic store internal handle internal handle internal handle internal object storefromkeyed node internal runtimestoreicmiss int internal object internal isolate node done", "num": "6655", "d": "9/2017"}, {"title": "production setup memory loss", "body": "production nuxtjs build posting issue since stack seems point either lines couple dumps crash pretty consistent almost even long runs first one couple days ago lt last gcs gt ms marksweep gt mb ms allocation failure gc old space requested ms marksweep gt mb ms last resort ms marksweep gt mb ms last resort lt js stacktrace gt js stack trace security context initwatch aka initwatch init fatal error callandretrylast allocation failed javascript heap memory node abort node node utils reportoomfailure char const bool node internal fatalprocessoutofmemory char const bool node internal factory newtransitionarray int node internal transitionarray insert internal handle internal handle internal handle internal simpletransitionflag node internal map copyreplacedescriptors internal handle internal handle internal handle internal transitionflag internal maybehandle char const internal simpletransitionflag node internal map copyadddescriptor internal handle internal descriptor internal transitionflag node internal map copywithfield internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal representation internal transitionflag node internal map transitiontodataproperty internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal object storefromkeyed node internal lookupiterator preparetransitiontodataproperty internal handle internal handle internal propertyattributes internal object storefromkeyed node internal storeic lookupforwrite internal lookupiterator internal handle internal object storefromkeyed node internal storeic updatecaches internal lookupiterator internal handle internal object storefromkeyed node internal storeic store internal handle internal handle internal handle internal object storefromkeyed node internal runtimestoreicmiss int internal object internal isolate node done today yarn start nuxt start open controlsettings controlsettings controlimages lt last gcs gt ms marksweep gt mb ms allocation failure gc old space requested ms marksweep gt mb ms last resort ms marksweep gt mb ms last resort lt js stacktrace gt js stack trace security context watch createwatcher aka createwatcher fatal error callandretrylast allocation failed javascript heap memory node abort node node utils reportoomfailure char const bool node internal fatalprocessoutofmemory char const bool node internal factory newtransitionarray int node internal transitionarray insert internal handle internal handle internal handle internal simpletransitionflag node internal map copyreplacedescriptors internal handle internal handle internal handle internal transitionflag internal maybehandle char const internal simpletransitionflag node internal map copyadddescriptor internal handle internal descriptor internal transitionflag node internal map copywithfield internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal representation internal transitionflag node internal map transitiontodataproperty internal handle internal handle internal handle internal propertyattributes internal propertyconstness internal object storefromkeyed node internal lookupiterator preparetransitiontodataproperty internal handle internal handle internal propertyattributes internal object storefromkeyed node internal storeic lookupforwrite internal lookupiterator internal handle internal object storefromkeyed node internal storeic updatecaches internal lookupiterator internal handle internal object storefromkeyed node internal storeic store internal handle internal handle internal handle internal object storefromkeyed node internal runtimestoreicmiss int internal object internal isolate node done", "num": "6654", "d": "9/2017"}, {"title": "vue event directives angular js", "body": "worked angular js found many directives many event directive well eg ngclick ngdblclick etc many vuejs directives like angular bring nice exciting addition guess list directives angular", "num": "6653", "d": "9/2017"}, {"title": "sync modifier nt work expected", "body": "version reproduction link steps reproduce make component renders list elements one active class use click handle clicks rendered elements element clicked method called method get index clickd element remove active class current active element add clicked element expected class would add active clicked element matter order actually happening class nt react changing first element last element", "num": "6652", "d": "9/2017"}, {"title": "\u5982\u4f55\u914d\u7f6e", "body": "version reproduction link steps reproduce \u5728webpack\u65b0\u7248\u672c\u4e2d\u65e0\u6cd5\u914d\u7f6e expected \u5728vue\u4e2d\u7684template\u4e2d\u80fd\u591finclude\u5916\u90e8html\u6216vue\u7684template\u7247\u6bb5 actually happening \u5728webpack\u65b0\u7248\u672c\u4e2d\u65e0\u6cd5\u914d\u7f6e", "num": "6650", "d": "9/2017"}, {"title": "problem testing vueprograssbar", "body": "problem testing avoriaz generic component wraps plugin called vueprograssbar trying test generic component loading indeed calling vueprograssbar plugin loading component export default name loading created routerbeforeeach next gt progressstart next routeraftereach gt progressfinish test mocha chai avoriaz import shallow avoriaz import vue vue import router router import loading componentsloading import vueprogressbar vueprogressbar describe loadingvue gt let wrapper beforeeach gt vueuse vueprogressbar wrapper shallow loading router describeonly rendering gt render loading component gt expect wrappercontains toequal true getting error", "num": "6649", "d": "9/2017"}, {"title": "support reactive properties array function", "body": "problem feature solve enables simpler syntax consistent behaviour would nice could add reactive properties function array currently object works see fiddle example notice update child value toggled however update avalue toggled toggled first html avalue avalue toggle bvalue bvalue toggle cvalue cvalue toggle js new vue el app data function var var b var c function use case plugin functions arrays treated objects child reactive properties even though fact limitation place method child property instead especially clunky calling method code separates async methods normal methods called proposed api look like see technical challenges treating functions arrays objects reactive properties suspect change code also small one changes quick change lines makes fiddle work expected function least", "num": "6648", "d": "9/2017"}, {"title": "specifying emits automatic documentation validation", "body": "problem feature solve specify props name type validator jazz documenting tools take advantage order create documentation component make documentation useful think adding optional emits specification would help better specify ins outs component suppose validation could added specification ensure emit events nt emit payloads unspecified format would protect parent getting screwy data proposed api look like", "num": "6647", "d": "9/2017"}, {"title": "facilitate extend logic vue files", "body": "problem feature solve component extension vue files makes components logic encapsulated clear component subcomponent another looking subcomponent file otherwise coders decipher comments inspecting registration file manually right registration looks like ideally sub components would name populated sub components name right defaults vuecomponent therefore name pulled extendoptions property proposed api look like ideally registration would look like", "num": "6646", "d": "9/2017"}, {"title": "question", "body": "version reproduction link async components instantiated programmatically manually mounted dom steps reproduce try manually create instance async component must provide resolve function constructor component work however find method exposed vuejs expected return constructor function component registration correct resolver inside supplied vue actually happening vuecomponent returns function supplied component registration", "num": "6645", "d": "9/2017"}, {"title": "question iterate maps sets vfor", "body": "problem feature solve iterate map set want use keyindex field mapset proposed api look like na", "num": "6644", "d": "9/2017"}, {"title": "", "body": "problem feature solve proposed api look like \u65e0", "num": "6643", "d": "9/2017"}, {"title": "embed html svg fragment got wrong namespace template", "body": "version reproduction link steps reproduce embed svg element expected rendered htmlelment show actually happening show seems related", "num": "6642", "d": "9/2017"}, {"title": "using component containing top level vif parent refs", "body": "version reproduction link steps reproduce define component top level element vif declare component parent template ref expected ref available even component toplevel vif false actually happening even vif false component still accessible via refs first load toggle component vif false true false parent ref becomes undefined component beforedestroy destroyed event also fire", "num": "6641", "d": "9/2017"}, {"title": "pass path changed property deep watch", "body": "problem feature solve passing path changed property deep watch would allow us determine exactly data changed deep watch programmatically especially data nested arrays currently large nested object want know property changed need create watch every single property furthermore watched properties arrays impossible register watch deeper respective array keys requested indirectly see example proposed api look like currently vue provides arguments watch handler path changed attribute information could passed third argument sure argument typed one possibility providing path string example would indicate change occurred", "num": "6640", "d": "9/2017"}, {"title": "bug seems like template mine nt calling computed property", "body": "got component something like template something like parts omitted renamed clarity renders scene using infamous absolutesize attribute nt animated computed property method never called expression perhaps complex vue nt detect property call", "num": "6639", "d": "9/2017"}, {"title": "determine fields bind", "body": "problem feature solve sorry english poor vmodel field associated vmodel dynamic output server proposed api look like whether direct indirect", "num": "6638", "d": "9/2017"}, {"title": "use vuejs server side rendering done next", "body": "looking next demo created snipcart see possible create valid page vuejs reacting data attributes unfortunately find documentation vuejs achieve server side rending done party", "num": "6637", "d": "9/2017"}, {"title": "use vuejs server side rendering done next", "body": "looking next demo created snipcart see possible create valid page vuejs reacting data attributes unfortunately find documentation vuejs achieve server side rending done party", "num": "6636", "d": "9/2017"}, {"title": "use vuejs webextensions", "body": "problem feature solve tried build webextensions vuejs got know webextensions lot restrictions security vuejs try bypass security restrictions proposed api look like run webextensions context", "num": "6635", "d": "9/2017"}, {"title": "npm intall vueloader gives enoent issue", "body": "version details node npm getting enoent error console error user app app npm install vueloader app consolidate bluebird lrucache pseudomap yallist postcss chalk ansistyles colorconvert colorname escapestringregexp sourcemap supportscolor hasflag postcssloadconfig cosmiconfig isdirectory jsyaml argparse sprintfjs esprima minimist oshomedir parsejson errorex isarrayish requirefromstring objectassign postcssloadoptions postcssloadplugins postcssselectorparser flatten indexesof uniq resolve pathparse vuehotreloadapi vuestyleloader hashsum loaderutils bigjs emojislist npm warn enoent enoent file directory open apppackagejson npm warn vueloader requires peer cssloader none installed npm warn vueloader requires peer vuetemplatecompiler none installed npm warn app description npm warn app repository field npm warn app readme data npm warn app license field npm err linux npm err argv install vueloader npm err node npm err npm npm err path appnodemodulesjsbeautifyjsbincssbeautifyjs npm err code enoent npm err errno npm err syscall chmod npm err enoent enoent file directory chmod appnodemodulesjsbeautifyjsbincssbeautifyjs npm err enoent enoent file directory chmod appnodemodulesjsbeautifyjsbincssbeautifyjs npm err enoent likely problem npm npm err enoent related npm able find file npm err enoent npm err please include following file support request npm err appnpmdebuglog", "num": "6634", "d": "9/2017"}, {"title": "vbind key behavior", "body": "version reproduction link steps reproduce make vfor loop bind key add input model key start typing initial type cursor move field expected normal typing without cursor moving actually happening first letter typed cursor move onkeyup return false set", "num": "6633", "d": "9/2017"}, {"title": "vue remove unused node set refs undefined", "body": "version reproduction link steps reproduce click button twice refs components undefined expected topprogress component show actually happening refs component undefined behaviour normal vue", "num": "6632", "d": "9/2017"}, {"title": "row typings like dt", "body": "nice could store row typings without modules typings separate directory useful someone build frontend without webpack use module system case could include typing file tsconfig work need install typings definitelytyped", "num": "6630", "d": "9/2017"}, {"title": "vuessr bug nodejs async promise entrance", "body": "version reproduction link steps reproduce \u5173\u4e8e\u5728nodejs expected \u5728\u4e0d\u4f7f\u7528babel\u7f16\u8bd1async\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528async \u8fd4\u56de\u7684\u5bf9\u8c61\u80fd\u591f\u4fee\u6b63\u5904\u7406 actually happening normalizerender\u51fd\u6570\u62a5\u9519 sorry english poor \u63cf\u8ff0 \u4fee\u6b63", "num": "6629", "d": "9/2017"}, {"title": "vuessr bug nodejs async promise entrance", "body": "sorry english poor \u63cf\u8ff0 \u4fee\u6b63", "num": "6628", "d": "9/2017"}, {"title": "dynamic component watcher", "body": "problem feature solve provide nested dynamic watchers dynamic data models proposed api look like idea take param variables structure vuerouter apply watchers component javascript export default data return movies name movie actors name first name name movie watch movies id val old watches changes movies returns affected movie consolelog val params id idea could cool watch nested data models", "num": "6626", "d": "9/2017"}, {"title": "routerreplace nt replases historyreplacestate", "body": "version reproduction link steps reproduce component router const router new vuerouter path requestedit id name requestedit component request component trying run expected mount component second mount url change new actually happening happen previos url remains ulr bar suspect function historyreplacestate execute case url nt change using request component url also change execute historyreplacestate hands", "num": "6625", "d": "9/2017"}, {"title": "seems value binding poster attribute leads template compiling error", "body": "", "num": "6623", "d": "9/2017"}, {"title": "keepalive include parameter worked routerview", "body": "version reproduction link steps reproduce keepalive include parameter worked routerview expected home keep alived actually happening home keep alived", "num": "6619", "d": "9/2017"}, {"title": "ca nt use component called", "body": "version reproduction link steps reproduce create component called add vm error console html expected able use reasonable name component one render actually happening component rendered", "num": "6617", "d": "9/2017"}, {"title": "watcher object misfires property addition parent", "body": "version reproduction link steps reproduce declare watcher property containing object add new property parent object vueset parent newprop x expected watcher fire watched property changed actually happening watcher also fires new properties added parent object although watched value change misfire happens watched value js object primitive types", "num": "6616", "d": "9/2017"}, {"title": "slots nt show correct slots using slot scope", "body": "version reproduction link steps reproduce create child component two slots use named slot scope feature child components slots variable default expected removed template gives expected result actually happening", "num": "6615", "d": "9/2017"}, {"title": "allow providing custom json stringify functions ssr state serialization", "body": "version reproduction link steps reproduce ssr use method stringify initial state initial state circular quote throw error like way avoid thing remove circular state expected use something like circular avoid throwing error actually happening typeerror converting circular structure json convenient make minimal reproduction jsfiddle webpack step", "num": "6614", "d": "9/2017"}, {"title": "using gulp convert vue files", "body": "problem feature solve company recenlty decided use vuejs recommend good idea use vue files rails app dont use much js atm course jquery various plugins webpack read order use webpack go js modules philosophy encounter many bumps organizing old new codebase complicated use learning vue enough slow development need add features stuff adding webpack seems like slow us much experts node js tooling would gulp option transform vue files simpler alternative thanks proposed api look like api", "num": "6613", "d": "9/2017"}, {"title": "tables ssr causing warning clientside rendered virtual dom tree matching serverrendered content", "body": "version reproduction link table component steps reproduce git repo linked nuxt starter repo additional table component data rendering table static data run yarn run yarn dev open browser open console check warnings errors expected serverside rendered markup match clientside markup warning shown table rendered browser actually happening get following warnings errors console parent table mismatching childnodes vs vnodes nodelist tbody vue warn clientside rendered virtual dom tree matching serverrendered content likely caused incorrect html markup table gets rendered loading page server inside table component componentstablevue also added list comparison remove table list rendering without warning adding table get warning", "num": "6612", "d": "9/2017"}, {"title": "hoistingup vnode infinite loop warning", "body": "version reproduction link steps reproduce precise layout components jsfiddle assembly components reason fragile makes think bug example remove topmost component nt affect code warning disappears expected slot child hoisted parent rendered child without problem actually happening child gets rendered infinite update loop warning", "num": "6610", "d": "9/2017"}, {"title": "dev mode mixin sfc merged vuerouter plugin install", "body": "version reproduction link steps reproduce run project open console navigate foobar refresh page see logs console put breakpoint vueesmjs mergeoptions function see vue merges mixin build start page try works expected expected mixin get called refresh console actually happening mixin called console vuerouter version dev mode router mixins merged vuerouter strategies get isntalled", "num": "6609", "d": "9/2017"}, {"title": "\u5bf9\u6570\u7ec4\u7684 watch \u5728\u4f7f\u7528 push \u589e\u52a0\u540e\u65e0\u6cd5\u5f97\u5230\u7b26\u5408\u9884\u671f\u7684 \u5f53\u524d\u503c \u53ca \u66f4\u65b0\u524d\u503c", "body": "version reproduction link steps reproduce \u5b9e\u4f8b\u4e2d\u5bf9\u6570\u7ec4\u8fdb\u884c push \u7684\u4e24\u4e2a\u53c2\u6570 \u5f53\u524d\u503c \u66f4\u65b0\u524d\u503c \u66f2\u7ebf concat \u7684\u95ee\u9898\u5e94\u8be5\u662f\u5b58\u5728 bug expected ids watch ids idspush actually happening ids watch ids idspush ids idsidsconcat \u8fd9\u662f\u4e00\u79cd\u89e3\u51b3\u65b9\u6848", "num": "6608", "d": "9/2017"}, {"title": "deep watch syntax could simplified", "body": "problem feature solve currently order watch object properties need deep watch using problem notation hard decipher add visual noise proposed api look like given want watch properties data would nt need declare attributes clean directly adding object like way watch functions would exactly like directly accessible bonus point refactoring imagine could detect function attribute functions user point view find notation clearer understand parse always feel free discuss idea", "num": "6607", "d": "9/2017"}, {"title": "scoped slot name prop render", "body": "version reproduction link steps reproduce run jsfiddle choose dragndrop file file input expected file name listed input actually happening nothing listed input issue happens use prop scoped slot rendered also instead binding individual props using works fine", "num": "6606", "d": "9/2017"}, {"title": "vmodel doese nt work logic simple inputs checkbox etc", "body": "version reproduction link steps reproduce data return test expected value test must change edit input actually happening value doese nt change input doese nt emit event", "num": "6605", "d": "9/2017"}, {"title": "vmodel doese nt work conponent simple inputs checkbox etc", "body": "version reproduction link steps reproduce vmodel doese nt work conponent simple inputs example update", "num": "6604", "d": "9/2017"}, {"title": "vue ssr critical css injected regression", "body": "version reproduction link steps reproduce npm install \u6700\u65b0\u7684vuevueserverrenderervuetemplatecompiler \u6837\u5f0f expected ssr \u8fd4\u56de\u7684html\u6b63\u5e38\u5305\u542bcss actually happening \u4e0d\u5305\u542b \u5f53\u6211\u628apackagejson \u4e2d vuevueserverrenderervuetemplatecompiler", "num": "6603", "d": "9/2017"}, {"title": "vue ssr auto inject critical css nt work version work", "body": "ssr html ssr html", "num": "6602", "d": "9/2017"}, {"title": "textnode removed unexpectedly due chrome bug", "body": "version reproduction link steps reproduce else toggleedit new vue el app data status false methods toggleedit function thisstatus thisstatus expected could display correctly actually happening status wo nt display equal useragent unless replace span tag", "num": "6601", "d": "9/2017"}, {"title": "append vnode segments current vue instance", "body": "problem feature solve normal vue instance click button invoke function create vnode calling function insert proposed api look like", "num": "6599", "d": "9/2017"}, {"title": "update vue version text pictures displayed weex project", "body": "version reproduction link steps reproduce npm install npm run dev expected see text picture actually happening dom display properly use vue ok", "num": "6598", "d": "9/2017"}, {"title": "vuerouter deactivate hooks ca nt triggered", "body": "\u95ee\u9898\u63cf\u8ff0 categoryindexvue deactivate \u4ee3\u7801\u5982\u4e0b js \u4ee3\u7801 routerjs javascript routermap name home component function reslove return require viewshomeindexvue reslove meta keepalive true name component function reslove return require viewscategoryindexvue reslove meta keepalive true name component function reslove return require viewscategoryindexvue reslove meta keepalive true \u6ce8\u518c\u8def\u7531\u5207\u6362\u524d routerbeforeeach function transition transitionnext \u6ce8\u518c\u8def\u7531\u5207\u6362\u540e routeraftereach function transition consolelog transitionfromname categoryindexvue \u90e8\u5206\u4ee3\u7801 javascript route", "num": "6597", "d": "9/2017"}, {"title": "transition nested subtransitions", "body": "nest transition components within outer transition component inner transition given type transition rough example", "num": "6596", "d": "9/2017"}, {"title": "transition hooks inside componentvue file instead parent", "body": "problem feature solve currently devs need define transition hooks parent components leading dirty dom checks conditions could solved hooks declared inside child transitioned component proposed api look like using element come realize javascript transition hooks scoped component parent object parent component html export default methods onenter el done issue kinda breaks single file component model methods decribing behavior component outside also method generic child components render inside tag two points encourage dirty dom checks transition hook would inside child component instead refs could used want two different animations elements inside transition tag example animating routes entering dirty conditional check inside transition method could missing possible configuration skipped docs case nt miss anything escape would suggest moving transition hooks inside property child component similar nuxt aprent child components inside transition tag would look something like parent component html export default methods onenter el done child ccomponent html export default name child transition beforeenter el done onenter el done beforeleave el done onleave el done alternatively could use name transition identify hooks would allow developers different animations case element reused wrapped parts app need different sequence common transition hooks like current vue version well could easily accomplished user creates generic function imports component reference repeat possible define transition hooks children components missed sorry advance noise", "num": "6595", "d": "9/2017"}, {"title": "transition hooks inside componentvue file instead parent", "body": "using element come realize javascript transition hooks scoped component parent object parent component html export default methods onenter el done issue kinda breaks single file component model methods decribing behavior component outside also method generic child components render inside tag two points encourage dirty dom checks transition hook would inside child component instead refs could used want two different animations elements inside transition tag example animating routes entering dirty conditional check inside transition method could missing possible configuration skipped docs case nt miss anything escape would suggest moving transition hooks inside property child component similar nuxt aprent child components inside transition tag would look something like parent component html export default methods onenter el done child ccomponent html export default name child transition beforeenter el done onenter el done beforeleave el done onleave el done alternatively could use name transition identify hooks would allow developers different animations case element reused wrapped parts app need different sequence common transition hooks like current vue version well could easily accomplished user creates generic function imports component reference repeat possible define transition hooks children components missed sorry advance noise", "num": "6594", "d": "9/2017"}, {"title": "directive association incorrect using vif", "body": "version reproduction link steps reproduce drag amp drop red square works element vdrag directive click toggle button display blue square note nt vdrag directive drag blue square expected nt able drag blue square vdrag directive actually happening squares dragged understand directive binded element dom using index dom updated vif index updated directive binds element easily solved using vshow instead vif", "num": "6593", "d": "9/2017"}, {"title": "add boolean modifier vmodel", "body": "problem feature solve modifier vmodel automatically parses value integer would useful similar modifier boolean values way checkbox work value contains strings instead javascripts truefalse currently checkbox checked modifier code work would handle boolean strings real booleans proposed api look like", "num": "6592", "d": "9/2017"}, {"title": "vueprototype event handler \u5982\u679c\u4f20\u5165\u7684handler\u4e3aundefined \u4f1a\u5220\u6389events\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2ahandler", "body": "version reproduction link steps reproduce vueprototype eventname handler vmevents eventname \u4f1aoff\u6389vmevents eventname \u6700\u540e\u4e00\u4e2ahandler \u5728eventsjs expected x actually happening x", "num": "6591", "d": "9/2017"}, {"title": "\u91cd\u5927\u6539\u9769\u65b9\u5411", "body": "problem feature solve module", "num": "6590", "d": "9/2017"}, {"title": "allow valueless prop assignments", "body": "problem feature solve sure common use case using vue pretty frequently create wrapper components kinds happens regularly several individual props need passed child components example component accepts props passes underlying template might look like adds quite lot visual noise proposed api look like like propose possibility omit value prop assignments assigned prop without value use component property value much clearer example basic example suggested equals current modifiers ignored suggested equals current introducing example could reduced consider much elegant concise however possibly little less obvious syntax think", "num": "6589", "d": "9/2017"}, {"title": "locally registering component using recursively working expected unknown custom element warning", "body": "version reproduction link steps reproduce run app click caret list item expected component able reused actually happening error thrown vueesmjs vue warn unknown custom element register component correctly recursive components make sure provide name option found gt srccomponentsnodelistnodevue asked help needhelp second set eyes decided strange behavior", "num": "6588", "d": "9/2017"}, {"title": "watch nested object properties inside component", "body": "version reproduction link steps reproduce set vmodel inputname binput component vmodel inputnamev input html finish render html input value binput native input html click set input empty expected binput component must update value text field like input html updated actually happening binput component update value text field normal input html updated binput change value use forceupdate set object input empty nt understand emit new value vmodel input assign model", "num": "6586", "d": "9/2017"}, {"title": "one way data binding updating parent child", "body": "version reproduction link steps reproduce create simple app component empty array called datatest create simple test component prop called datatest import call test component app component passing datatest datatest prop oneway databinding create mounted hook test settimeout pushing value prop array expected app component datatest could updated actually happening app component datatest updated", "num": "6585", "d": "9/2017"}, {"title": "sharepoint spuimodaldialogshowmodaldialog error", "body": "version reproduction link steps reproduce using vue sharepoint everything right except try open modal window sharepoint code spuimodaldialogshowmodaldialog options expected popup window appears actually happening receive message error typeerror windowselfdlgwndtop function ps sorry work jsfiddle executed vue method works ex", "num": "6584", "d": "9/2017"}, {"title": "sharepoint spuimodaldialogshowmodaldialog error", "body": "hello using vue sharepoint everything right except try open modal window sharepoint code executed method following message error typeerror windowselfdlgwndtop function executed outside works ex could give hint stuck thanks advance gio", "num": "6583", "d": "9/2017"}, {"title": "\u52a8\u6001\u521b\u5efa\u7684 activated \u4e8b\u4ef6\u4e22\u5931", "body": "version reproduction link steps reproduce keepalive component activated \u7559\u610f\u4f8b\u5b50\u7684 activated expected activated \u4e8b\u4ef6 actually happening \u6ca1\u6709\u89e6\u53d1 activated", "num": "6582", "d": "9/2017"}, {"title": "", "body": "version reproduction link steps reproduce \u5728ios expected actually happening", "num": "6581", "d": "9/2017"}, {"title": "input tag use vmodel value input special values monitored watcher", "body": "ca nt listen input string stopedvalue function watch object work stopedvalue field value change empty input vmodelnumber stopedvalue min type number data return stopedvalue watch stopedvalue val oldval consolelog val oldval", "num": "6580", "d": "9/2017"}, {"title": "vif velse uncooperative dom operate", "body": "version reproduction link steps reproduce run jsfiddle example read description click change show area button twice expected first click showarea shows hahahahaha green background color second click showarea shows yellow background color actually happening first click showarea correct second click showarea shows hahahahaha wrong yellow background color right guess vif template velse template stored browser memory vue nodeswhen changed children operating dom directly vue nodes got unexpected changes project using echarts need operate dom directly", "num": "6579", "d": "9/2017"}, {"title": "td template vif working ie amp ie ok", "body": "version reproduction link steps reproduce expected ie version ok actually happening ok ng different permissions show different ui", "num": "6578", "d": "9/2017"}, {"title": "injection ob found reflectownkeys objectkeys", "body": "version steps reproduce actually sure causing object observed added try create minimal repro later update repro link expected considered injection actually happening shown first screenshot seems happening usage apparently objectgetownpropertynames target concat objectgetownpropertysymbols target returning nonenumerable keys", "num": "6574", "d": "9/2017"}, {"title": "null values directive handled ssr", "body": "version reproduction link steps reproduce try render expected may gracefully handled like directive see notes client side version actually happening throwing internal seems simple fix would defining default value parameter utiljs better type check value related nuxtnuxtjs notes behaviour also differs ssr client ssr renders changes client side seems optimized change handle inconsistency ssr render", "num": "6572", "d": "9/2017"}, {"title": "extending bundled typescript definitions vuerx extending general", "body": "like use vuerx typescript project vuerx extends vue prototype several methods since vuerx ship ts declarations would like roll unfortunately unable come way extend vue declarations bundled vuejs due way declaration written classes rather interfaces suggestions", "num": "6569", "d": "9/2017"}, {"title": "create iife build vuetemplatecompiler add cdnjs", "body": "problem feature solve currently browser runtime available cdn users vuetestutils requires vue vue template compiler globals run browser without easily available browser friendly vuetemplatecompiler users able use full features vuetestutils added users able run vuetestutils browser note features require template compiler alternative making available cdn would warn browser users certain features nt available browser build proposed api look like create browser runtime adds vuetemplatecompiler global variable", "num": "6568", "d": "9/2017"}, {"title": "support android", "body": "problem feature solve hi company wants switch vuejs really concened regarding support android site lowest support android means android supported someone please confirm thanks proposed api look like would api regular support android", "num": "6567", "d": "9/2017"}, {"title": "click would trigger event vnode click event", "body": "version reproduction link steps reproduce see reproduction link expected click become changed actually happening click nothing happened changed guess click changed immediate click event triggered executes another vnode click event expand changed rename second div another tag name errors occur move click event tag parent tag first div errors occur", "num": "6566", "d": "9/2017"}, {"title": "\u4f7f\u7528vmodel \u65f6\u51fa\u73b0\u7684\u4e00\u4e9b\u95ee\u9898", "body": "vmodel \u7ed1\u5b9a\u7684\u53d8\u91cf\u5728 \u7684\u6700\u540e\u4e2a\u7248\u672c\u6ca1\u6709\u95ee\u9898", "num": "6565", "d": "9/2017"}, {"title": "vue form requires button submit", "body": "version reproduction link steps reproduce create regular vue form submit handler add input interestingly submits input field press enter focused either input expected form submit actually happening form nt submit input element submit guessing vue attempting trigger click button within form enter pressed input field", "num": "6564", "d": "9/2017"}, {"title": "introduction page demo happend error click times output html", "body": "", "num": "6563", "d": "9/2017"}, {"title": "bug vuecli project name", "body": "vuecli ubuntu myproject set name command line testvue set name specified parameter see screenshot", "num": "6562", "d": "9/2017"}, {"title": "value attribute fails vue document internet explorer", "body": "version reproduction link steps reproduce yarn npm run dev open link internet explorer compare chrome expected assigns value inside vue document actually happening assigns value inside vue document thanks sorry something silly assigns value works correctly outside app", "num": "6561", "d": "9/2017"}, {"title": "ssr partial prerendering", "body": "feature request problem feature solve creating ssr vuejs app pages nt change much like page therefore probably useful come natural way setting ssr prerenderspaplugin proposed api look like routes require ssr prerendered advance", "num": "6560", "d": "9/2017"}, {"title": "add ability reference component methods without needing ref", "body": "problem feature solve right order call method custom component assign ref assigned reference method calling proposed change would allow easiest access internal methods proposed api look like custom method may", "num": "6559", "d": "9/2017"}, {"title": "vue causes browser become unresponsive createelement called promisereturning function", "body": "version reproduction link steps reproduce calling pass function returns promise resolves vue options bag example html message ts var options template hello new vue el app render h return h gt new promise r gt r options expected either something useful error message actually happening entire page stops responding part dts test suite wanted see test case legitimate ended finding triggers sort bad behavior", "num": "6558", "d": "9/2017"}, {"title": "prop type plain object wonderful merge default object prop object exist", "body": "problem feature solve parent component passes prop child component prop type object value given time child component default value build function also returns merge default object prop object conducive customize default value also greatly enhance feel writing vue components simple example js parent component data return editoroptions line true autoclosetags true child component props options type object default return line false mode textjavascript required true correct version child component rendered ideal result performance reasons need greatly enhance writing feeling flexible largely configurable component proposed api look like need new api handle logic", "num": "6556", "d": "9/2017"}, {"title": "option", "body": "version reproduction link steps reproduce expected actually happening", "num": "6554", "d": "9/2017"}, {"title": "slot implementation interferes web components", "body": "version reproduction link steps reproduce use custom element uses slot element inside vue component elements meant fill slots custom element rendered html slot attribute expected slots custom elements behave expected custom element question example referenced left navigation drawer remain identical behavior using either html vuejs drawer left open wide browsers hide small browsers demonstrated resizing browser window horizontally computer custom element uses slots actually happening slot attribute picked vuejs rendered html causes custom element behave expected example referenced drawer open wide browser windows using vuejs manually editing rendered html vuejs adding attribute element custom element behaves expected since web components still drafted nt know whether submit bug feature request nt looked deep source code vue yet ideas solve issue include ensuring vue component absorbs slot attribute rendering html absorbed add directive slot attribute signal vue ignore slot render html instead absorbing something along lines look source code get better understanding happening wanted submit issue get sort review whether fix issue would welcomed integration vue like data binding nature vue also custom elements like use time issues using vue custom elements except issue", "num": "6553", "d": "9/2017"}, {"title": "inputonce preventing update input used vmodel", "body": "version reproduction link steps reproduce type one character input expected character added input property updated reflect change method called setting true actually happening method called nothing added input update first character entry input model binding works expected seems using preventing expected behavior found via stackoverflow question", "num": "6552", "d": "9/2017"}, {"title": "vue errorhandler working inside axios request methods", "body": "version reproduction link steps reproduce error inside axios request method simply ignore vue errorhandler expected error catch vue errorhandler actually happening error caught vue errorhandler", "num": "6551", "d": "9/2017"}, {"title": "directly modify vnode directives", "body": "problem feature solve directives receive parameter vue produced current element element content modified call slot inside directive get vnode slot transform vnode manually html see use case side note tried using vue sources rendering vnodes could nt get work proposed api look like", "num": "6550", "d": "9/2017"}, {"title": "skip empty text nodes hydration", "body": "problem feature solve allow ssr output human readable without causing hydration bailout make easier fake ssr template engine simple vue app want embed htmlpage want app come prerendered server access simple templating language words ca nt install ssr tools instead plan fake ssr template render initial state vue app without actually using vue render problem ca nt format template without causing hydration fail domnodes contain textnodes whitespace virtual dom codepen simple app fails hydration empty text nodes edit hydration done development production instead fail rendering dom saying failed execute appendchild node node type support method caused trying add child textnode codepen example testet changing vuejs vueminjs proposed api look like change api unless want make skipping empty text nodes optional case propose dataattribute root element similar dataserverrendered", "num": "6548", "d": "9/2017"}, {"title": "tried bind action div bind div child element bind two element", "body": "version reproduction link steps reproduce reality described title code hereand use elementui itemname hidepopup event consolelog eventtarget result \u8bd5\u5377 expected want bind action div actually happening binding action div children element", "num": "6546", "d": "9/2017"}, {"title": "computed propertyfactory function props", "body": "problem feature solve nt think ever worked vue app nt needed pass complex object prop needed define default values optional properties object example table component lets define configuration like entirely optional nt want define every instance table component used sometimes want pass however every place references view model template needs null checked first get quite messy use contrived computed property like default merging create complete default config structure would nice props provided syntactic sugar either allowed factory function run every time even prop supplied merge logic done prop function could define complex behavior proposed api look like either", "num": "6545", "d": "9/2017"}, {"title": "vpre working slots", "body": "version reproduction link steps reproduce see codepen link expected content displayed actually happening shows fallback", "num": "6543", "d": "9/2017"}, {"title": "explicit name default transition mode", "body": "problem feature solve currently transition modes default unnamed documented method programmatically specify default transition mode current code warns transition mode set value perhaps give explicit name like proposed api look like", "num": "6542", "d": "9/2017"}, {"title": "special vmodel fields cleared inputblur", "body": "version reproduction link steps reproduce create vue application adding jqueryui though work library adds extra functionality top input jqueryui easy use reproduce create fields matter type load jqueryui datepicker field uses vmodel enter value using datepicker field add value second field expected fields update properly reflected vue component data actually happening first field input cleared remove fields data object vue instead clear blur seems trying fix left pushing away considered best practice vue well ran form select fields populated vuex data managed add hacks get rest fields working least standard form nt really need much populate initial value however vuex field adjusted like although feel understand vue well figure way around", "num": "6541", "d": "9/2017"}, {"title": "wrong docsdefault export typescript", "body": "version reproduction link steps reproduce webpack typescript javascript visit site included javascript expected anything indicate vue loaded ready use actually happening following error stated website following vue introduced dist files exposed es modules used default webpack unfortunately introduced unintentional breaking change typescript webpack import vue require vue return synthetic es module object instead vue however even though setting set true full settings could nt get working import statement tried using works error regarding docs actual error default export missing", "num": "6540", "d": "9/2017"}, {"title": "individual componenets could click", "body": "problem feature solve making individual componenets click event whole component tought reasons must wrapped one tag work example testvue import anothertest testanothertest export default components component name test methods function consolelog clicked testanothertestvue test test test export default name anothercomponent could make workflow certain places reasonable proposed api look like even vue components event handlers handlers could passed main wrapping element component template see example", "num": "6539", "d": "9/2017"}, {"title": "computed\u7684\u4e00\u4e2a\u8be1\u5f02\u73b0\u8c61", "body": "\u5148\u4e0a\u4ee3\u7801 \u9996\u6b21\u8ba1\u7b97\u65f6 top \u7684\u7ed3\u679c\u662f \u5982\u679c\u6211\u53bb\u6389\u6ce8\u91ca\u4f7f\u7528\u76f4\u63a5 return leftsectiontop \u5982\u679c\u6211\u6539\u4e3a return mathrandom px \u795e\u5947\u7684\u751f\u6548\u4e86", "num": "6538", "d": "9/2017"}, {"title": "vhtml directive ca nt compile execute html correctly", "body": "vue section reponsed html form ca nt executed using directive vhtml correct situation execute form submit action redirect new url", "num": "6537", "d": "9/2017"}, {"title": "extensible vue components", "body": "problem feature solve idea create components able extend another components templates ofcourse original components needs breakpoints however called extending component join example original components define blocks content block name start end somehow simple html tag extending component able overwrite prepend append block identified name would useful want build extensible website give developers ability extend components without editing components code keep updatesafe proposed api look like originalcomponentvue extendingcomponentvue rendered result look like html vue awesome ofcourse extendingcomponentvue imported somewhere outside originalcomponentvue thats basic idea ofcourse could extended extend vue components script", "num": "6536", "d": "9/2017"}, {"title": "\u5f02\u6b65\u7ec4\u4ef6\u5bfc\u81f4\u65e0\u6cd5\u5b9e\u73b0\u5144\u5f1f\u7ec4\u4ef6\u901a\u4fe1", "body": "version reproduction link steps reproduce \u6267\u884c\u8fd0\u884c\u4ee3\u7801\u770b\u5f39\u51fa\u4fe1\u606f expected \u6b63\u5e38\u5f39\u51fa\u5e94\u8be5 object object actually happening \u5b9e\u9645\u5f39\u51fa\u4e3aundefined", "num": "6534", "d": "9/2017"}, {"title": "\u5f02\u6b65\u7ec4\u4ef6\u5bfc\u81f4\u751f\u547d\u5468\u671f\u94a9\u5b50\u51fd\u6570\u6267\u884c\u987a\u5e8f\u4e0d\u6b63\u786e", "body": "version reproduction link steps reproduce \u8bf7\u5148\u7406\u89e3\u5b98\u65b9mounted\u94a9\u5b50\u7684\u6ce8\u91ca \u6ce8\u610f mounted vm nexttick \u66ff\u6362\u6389 mounted expected actually happening", "num": "6533", "d": "9/2017"}, {"title": "uncertain behavior slots", "body": "version reproduction link steps reproduce click button example expected elements must hide new value actually happening hide first child slot throws error case emit event thing happens", "num": "6531", "d": "9/2017"}, {"title": "vue equivalent gatsbyjs react", "body": "problem feature solve static site generator using vuejs like gatsby react proposed api look like sure right place ask point right place nt", "num": "6529", "d": "9/2017"}, {"title": "disable productiontip vue imported multiple entry points", "body": "version reproduction link steps reproduce clone official vuepwa template add one entry point line includes vue run check console see although option disabled warning still appears console expected working properly actually happening vue imported multiple entry points impossible disable productiontip", "num": "6528", "d": "9/2017"}, {"title": "disable productiontip vue imported multiple entry points", "body": "version reproduction link steps reproduce clone official vuepwa template add one entry point line includes vue run check console see although option disabled warning still appears console expected working properly actually happening vue imported multiple entry points impossible disable productiontip", "num": "6527", "d": "9/2017"}, {"title": "\u5e0c\u671b\u5728\u7ed1\u5b9a class dom", "body": "problem feature solve \u6211\u8fd9\u6837\u7684\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u7528\u6237\u9009\u62e9\u65f6\u95f4\u95f4\u9694\u7684\u9700\u6c42 \u73b0\u5728\u662f\u5728 isactive datainterval \u7684\u503c\u548c\u51fd\u6570\u7684\u53c2\u6570\u5c31\u91cd\u590d\u4e86 \u5e0c\u671b isactive \u51fd\u6570\u80fd\u591f\u4f20\u5165\u5f53\u524d dom datainterval \u7684\u503c\u4e86 proposed api look like", "num": "6526", "d": "9/2017"}, {"title": "vuecli project spend lot time finish unittest npm run unit", "body": "title said use npm run unit test vue files would spent lot time finish maybe spent finish figuring problems use karma start unit path surprising found generate different testing result solve problem", "num": "6525", "d": "9/2017"}, {"title": "vuecli project spend lot time finish unittest npm run unit", "body": "title said use npm run unit test vue files would spent lot time finish maybe spent finish figuring problems use karma start unit path surprising found generate different testing result solve problem", "num": "6524", "d": "9/2017"}, {"title": "add passive event decorator", "body": "problem feature solve eventcapture add eventpassive means low level elementaddeventlistener event fn passive true proposed api look like", "num": "6523", "d": "9/2017"}, {"title": "parent component closes child component capture removeeventlistener null typeerror", "body": "problem feature solve hello every senior thank watch issue issue typeerror read property removeeventlistener null vuecomponent beforedestory description optioned parent component button close childcomponent dialog capture warning removeeventlistener null parent component close children component proposed api look like opinion think issue maybe threw vue frame opinion parentcomponent remove monitor subcomponent closed therefore want get reason warning", "num": "6521", "d": "9/2017"}, {"title": "parent component closes child component capture type error", "body": "important please use following link create new issue hello every senior thank watch issue issue typeerror read property removeeventlistener null vuecomponent beforedestory description optioned parent component button close childcomponent dialog capture warning parent component close children component opinion think issue maybe threw vue frame opinion parentcomponent remove monitor subcomponent closed therefore want get reason warning", "num": "6520", "d": "9/2017"}, {"title": "vue ssr fails innerhtml", "body": "version reproduction link steps reproduce use jsx vue template clone repo open expected warning console actually happening dom mismatching error works fine children fails one option completely ignore vuessr basically commenting line solves problem another option evaluating comparing dom snapshots get value static ssrrendered website without dom mismatch third option ignoring children domprop think one best", "num": "6519", "d": "9/2017"}, {"title": "created hooks fired destroyed hot reload", "body": "version reproduction link steps reproduce create minimal project template add logs inside hooks obtain console expected previous instance destroyed new one created actually happening next one created several init old one destroyed init hooks useless nt know issue related template framework created also gt unfortunately response", "num": "6518", "d": "9/2017"}, {"title": "invalid prop type check failed prop seller expected array got object", "body": "\u5546\u54c1 \u8bc4\u4ef7 \u5546\u5bb6 const err import header componentsheadervheadervue export default data return seller created gt response responsebody responseerrno err thisseller responsedata components vheader header sellername", "num": "6516", "d": "9/2017"}, {"title": "small typo contributingmd", "body": "version reproduction link typo steps reproduce small typo contributingmd commiting actually committing extra expected typo fix committing actually happening typo right", "num": "6515", "d": "9/2017"}, {"title": "expose api manually create cachable computed properties", "body": "problem feature solve trying create state management library look similar mobx use vue builtin reactivity engine problem vue nt expose enough api implement need least constructors proposed api look like example trying achieve data objects update automatically changes class user observable firstname observable lastname current implementation decorators js function observable target name descriptor descriptorconfigurable true function computed target name descriptor const getter descriptorget see simply borrowed vue implementation need order work", "num": "6514", "d": "9/2017"}, {"title": "directive updated component changes root element", "body": "version reproduction link steps reproduce add custom directive child component child component changes root element due data change ie expected directive notified component changed new element passed actually happening directive updated still refers old dom node", "num": "6513", "d": "9/2017"}, {"title": "vue \u538b\u7f29\u56fe\u7247\u95ee\u9898", "body": "vue build", "num": "6510", "d": "9/2017"}, {"title": "\u5e0c\u671bkeepalive\u80fd\u589e\u52a0\u53ef\u4ee5\u52a8\u6001\u5220\u9664\u5df2\u7f13\u5b58\u7ec4\u4ef6\u7684\u529f\u80fd", "body": "problem feature solve proposed api look like clearkeepalived routername", "num": "6509", "d": "9/2017"}, {"title": "set template scope", "body": "version reproduction link steps reproduce open reproduction expected want set template common template used distributed content maybe control vif condition scope name null actually happening donnot know set set scope prop dynamic", "num": "6508", "d": "9/2017"}, {"title": "passing object prop changes parent component changed child without sync", "body": "version reproduction link steps reproduce jsfiddle simplest code expected expceting parent component wount change data werent passed sync actually happening parent component changed value prop treated reference value understand", "num": "6507", "d": "9/2017"}, {"title": "tag wrongly assumed html namespace instead svg", "body": "version reproduction link steps reproduce create template using root element try use expected either expected vue understand supposed svg tag xhtml tag way override vue decision give proper namespace eg making work actually happening vue creating tag xhtml tag browser nt render make render wrapping undesirable however many reasons way explicitly tell vue namespace create element would nice svg tag", "num": "6506", "d": "9/2017"}, {"title": "able use props styling without writing inline", "body": "problem feature solve main problem inline styles getting code pretty messy intend use components custom scoped styles example include sass mixin becoming struggle using components main issue faced sending props like image url color etc end stucked inside js html usable inside style section well aware style tag wo nt let us using variables inside something like computed styles compiling webpack would awesome proposed api look like idea behind use kind computed styles section using vue component variables would possible wo nt inside default tag", "num": "6505", "d": "9/2017"}, {"title": "optimization scheme ssr", "body": "problem feature solve found ui library named marko ssr render fast looked source create ast firstly compile tpl engine ssr env virtual dom browser env practical application ssr performance bottlenecks limited virtual dom also causing memory leaks vue tpl grammar dsl learn ast compile tpl engine virtual data create vue object without letting generate virtual dom ssr env think approach logically feasible know difficulty current vue version thanks proposed api look like none", "num": "6504", "d": "9/2017"}, {"title": "optimization scheme ssr", "body": "found ui library named marko ssr render fast looked source create ast firstly compile tpl engine ssr env virtual dom browser env practical application ssr performance bottlenecks limited virtual dom also causing memory leaks vue tpl grammar dsl learn ast compile tpl engine virtual data create vue object without letting generate virtual dom ssr env think approach logically feasible know difficulty current vue version thanks", "num": "6503", "d": "9/2017"}, {"title": "\u7ec4\u4ef6\u5728\u524d\u540edom\u8282\u70b9\u7684vif\u6307\u4ee4\u66f4\u65b0\u65f6\u5bfc\u81f4\u7ec4\u4ef6\u4e5f\u66f4\u65b0", "body": "version reproduction link steps reproduce js tips sorry expected demo\u7ec4\u4ef6\u548cvif\u6307\u4ee4\u65e0\u5173\u65f6\u4e0d\u80fd\u5237\u65b0 actually happening show\u66f4\u65b0\u65f6\u4f1a\u5bfc\u81f4demo\u7ec4\u4ef6\u91cd\u65b0\u6e32\u67d3", "num": "6502", "d": "9/2017"}, {"title": "ability destructuring template", "body": "problem feature solve local variables template write little bit less code want use propa template shall write deconstruction template would less code like find directive already abitlity deconstruction exapmle proposed api look like", "num": "6501", "d": "9/2017"}, {"title": "add license settings packagejson executing", "body": "problem feature solve choose license packagejson executing nt settings executing vuejs official templates know vuejs issue directly official templates nt settings license packagejson want pullrequests metajsonmetajspackagejson official templates proposed api look like none", "num": "6500", "d": "9/2017"}, {"title": "\u7ec4\u4ef6\u5728\u524d\u540edom\u8282\u70b9\u7684vif\u6307\u4ee4\u66f4\u65b0\u65f6\u5bfc\u81f4\u7ec4\u4ef6\u4e5f\u66f4\u65b0", "body": "version reproduction link steps reproduce expected demo\u7ec4\u4ef6\u548cvif\u6307\u4ee4\u65e0\u5173\u65f6\u4e0d\u80fd\u5237\u65b0 actually happening show\u66f4\u65b0\u65f6\u4f1a\u5bfc\u81f4demo\u7ec4\u4ef6\u91cd\u65b0\u6e32\u67d3", "num": "6499", "d": "9/2017"}, {"title": "often thah vue nt shot nothing nt message nothing aobut error warnings etc", "body": "yes component mounted see thah consolelog nt render waht wrong happening allow error template say please", "num": "6498", "d": "9/2017"}, {"title": "class removes classes added programmatically", "body": "version reproduction link steps reproduce click change color inspect dom expected component test redbg bluetxt classes actually happening component test redbg class found bug using custom directive adds flex layout related classes element classes added directive removed element class defined template intentional workarounds addremove classes via native dom methods", "num": "6497", "d": "9/2017"}, {"title": "custom validation message props", "body": "problem feature solve let developer specially using third party componentsplugins understand error happen detailed customizable friendly way error came already known thanks code line dump example validating component property return true false order fulfill validation fails console error looks like bash vue warn invalid prop custom validator check failed prop example found srccomponentswordcountwordcountvue srcappvue think generic warning also line dump error came useful custom error message could useful opinion obviously since validation function custom may vary every prop difficult predict deduct warning message display based code let developer possible mine proposal add message whatever field prop object properties used validator function called prop input fails message property provided generic warning show instead documentation component props validation requirements object another usecase example component property must digit string validation function message property case would must enter digit number developer use component like custom warning message shows developer knows immediately issue obviously work custom component developer used message property set custom validation error message proposed api look like custom validation function used fails custom property validation message shows warning show developer wrong think hope nt make mess explaining clear doubt provide details use case example many thanks advance many thanks building vue simply awesome", "num": "6496", "d": "9/2017"}, {"title": "ca nt restart data component", "body": "version reproduction link steps reproduce problem force restart new route route also simple component form empty inputs component filled inputs db want able open component empty inputs component used function route changed data restarted inputs empty expected data updatedrestarted actually happening expect new route params data restarted able provide code complicate sorry", "num": "6495", "d": "9/2017"}, {"title": "array update", "body": "version reproduction link steps reproduce wait mounted aplication change array even clicking changes reflected dom expected reflect changes dom actually happening changes reflected dom sure correct way reflect changes would like know ideal way thank much", "num": "6493", "d": "9/2017"}, {"title": "vnodechild vnodechildren undefined", "body": "version reproduction link steps reproduce could reproduce issue nested children components components deeper dom root gt children words root gt children gt children observed problematic expected either vnodechild vnodechildren give access vuecomponents something permits access vuecomponents actually happening though component children undefined returned vnode see issue vnode appear accurately represent dom regards vue components creates difficulty development project makes use slots therefore permitting replaceable parts project also depends need listen events emitted replaceable parts able make calls methods vnodes returned slots mechanism permitting access vuecomponents may listen events components make method calls way fulfill project goals unaware", "num": "6492", "d": "9/2017"}, {"title": "", "body": "", "num": "6491", "d": "9/2017"}, {"title": "ssr vhtml svg default content gt serverclient mismatch", "body": "version reproduction link steps reproduce svglogo equals svg image expected server client equal actually happening get mismatch error mentioning text node text removed works fine using ssr text needed simple fix remove however little bit strange nt work turn mismatch unfortunately nt time create proper repro forth want close issue immediately fine purpose inform others issue happen ssr", "num": "6490", "d": "9/2017"}, {"body": "example ignored nt exist context used exist component however show error saying defined", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "probably kind outofsync issue sure solve anybody knows examples wrapping axios function shared manyk vue components could find good one online", "d": "9/2017"}, {"body": "taozhaolib nt return anything function function asynchronous ca nt assign variable like correct usage component", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "storing options vue instance know nt fix issue might temporary workaround", "d": "9/2017"}, {"body": "html works removes spaces text vue gets text one space specify value spaces directly element yield result expect", "d": "9/2017"}, {"body": "fyi general never rely multiple whitespaces html text use explicit bindings", "d": "9/2017"}, {"body": "thank replys solved problem", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow use user component class check myclass auto clear vue formwork expected behaviour probably handle class addition hook directive well always keep", "d": "9/2017"}, {"body": "working expected bad practice modify input user typing however force value input nexttick also listen blur set back value fyi value equal even though input nt reflect", "d": "9/2017"}, {"body": "thanks explain work nexttick", "d": "9/2017"}, {"body": "changes value browser actually displays", "d": "9/2017"}, {"body": "nt consoleerror error instead throwing inside errorhandler point error handler throw error", "d": "9/2017"}, {"body": "patch submitted raven lot logic errorhandler increase value reported error good stuff actually without careful trycatches mention things made suspect nt run vue plugin production much said failure mode silent catastrophic hard debug figured quick trycatch around errorhandler might save people future headache", "d": "9/2017"}, {"body": "think nt throw errors errorhandler treat generate new one ignore throwing", "d": "9/2017"}, {"body": "agree however nt think app nt crash especially since easy prevent error becoming catastrophic", "d": "9/2017"}, {"body": "throwing errors js make apps crash", "d": "9/2017"}, {"body": "almost anywhere vue app throwing error", "d": "9/2017"}, {"body": "ca nt computed properties different components may rely different source state bound different instances", "d": "9/2017"}, {"body": "use method", "d": "9/2017"}, {"body": "markdown content execute hundreds times per second sliw app computed property executed isnt", "d": "9/2017"}, {"body": "use would execute multiple times well want caching need use computed anyway", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "simply watch value", "d": "9/2017"}, {"body": "firefox amp chrome handle clicks checkboxes differently way sure either checked value kkszymanowski pointed listen event vue internal logic ensure model uptodate userland event handlers fire handlers attached correct events case edit interesting reading around issue eventsjs", "d": "9/2017"}, {"body": "listens event different browsers fire different orders unfixable vue different browser behaviors suggested instead using click listener use watcher instead care state click event", "d": "9/2017"}, {"body": "easily userland creating higherorder transition component", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "well way", "d": "9/2017"}, {"body": "know use normal html comment tags components eg top section wondering best recommended solution yes js use", "d": "9/2017"}, {"body": "hi nt want comment code per line html js question fact describe components general way grtz johnny", "d": "9/2017"}, {"body": "many ways using comments top script tag would go generally comment component would comment code", "d": "9/2017"}, {"body": "think question new block singlefile templates custom blocks already possible vueloader documentation regarding already use block ignored vueloader", "d": "9/2017"}, {"body": "thanks everybody time reply pandemm indeed custom block trick nt know existence possibilities thank link pointing right direction kind regards", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "take one", "d": "9/2017"}, {"body": "imo requires much internal refactoring potential complexity cater niche use cases personally yet run case even need use reaching child component instances really meant workarounds recommended practice", "d": "9/2017"}, {"body": "thanks evan case facing fed column holds rendering header default component render well cellrender special function special function retrieved table slots rendered part table template works great simple functional data rendering advanced features cellrendering requires access column instance render select column trigger events example smart way missing", "d": "9/2017"}, {"body": "went finally using slots directly provide enough information render cell directly although advanced features still access column instance necessary slot object attribute moment rendering results undefined technical limitation thank time looking", "d": "9/2017"}, {"body": "checking moment table rendering childs nt yet inited cells rendered meaning instance associate opted simple workaround assigning children table local data forcing rerender time instances available try find right instance say try easy way know associate slot instance far using node tag props", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "ehm didnt help", "d": "9/2017"}, {"body": "need use vueloader vue", "d": "9/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow related vue put font folder refer", "d": "9/2017"}, {"body": "posva thanks reply felt bit like grey zone try forum instead cheers", "d": "9/2017"}, {"body": "\u662f\u7531\u4e8e\u5728\u5f00\u53d1\u6a21\u5f0f\u4e0bvueloader hrm\u63d2\u5165\u4e86require vue \u5bfc\u81f4vue\u6a21\u5757\u4f7f\u7528\u7684vue\u4e0e\u5168\u5c40vue\u4e0d\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow discord chat happy help", "d": "9/2017"}, {"body": "expected think renders controlled content hides initial render modal rendered accordingly defined transition triggered hook called understand expect transition run since defined value parent component child component ca nt know circumstance transition still runnning solution use instead", "d": "9/2017"}, {"body": "reason ca nt use transition transition design outer container use control display inner transition wo nt trigger show set false modalvue component uses modal vue title content cancel confirmtext ok import card srccomponentscard import fadetransition srccomponentsfadetransition import modal srccomponentsmodal import vbutton srccomponentsbutton export default name confirmpopup components card fadetransition modal vbutton props title content confirmtext resolve data gt show true created documentbodyappendchild mount el methods confirm bool thisshow false thisresolve bool settimeout gt destroy documentbodyremovechild el way remove prop simulate feature vue export default props show data show false mounted nexttick gt thisshow thisshow simulate appear feature", "d": "9/2017"}, {"body": "reproduction meet requirements", "d": "9/2017"}, {"body": "exports es module need", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "printed document see changed correctly changed correctly switches class correctly applied missing", "d": "9/2017"}, {"body": "linusborg changes dom print tag however using event instead makes work", "d": "9/2017"}, {"body": "value nt change vue nt update dom", "d": "9/2017"}, {"body": "works feels like cracking nut sledgehammer guess force update input via ref maybe vue shoud update elvalue every time input event triggered way even binded value nt change node value date", "d": "9/2017"}, {"body": "actually described previous message would nt work value filter nt done directly parent component case even forceupdate nt work nt force children rerender following tree one filtering value passing component tree force rerender", "d": "9/2017"}, {"body": "since turned questiondiscussion please move forum chat room instead", "d": "9/2017"}, {"body": "would still consider small bug attribute node actual value unsynched actually changes currently quick workaround rerenders current component children post find workaround others use", "d": "9/2017"}, {"body": "would suggest use", "d": "9/2017"}, {"body": "thanks suggestion problem would bind cleave would nt able parent components using input dirty solution found following following component tree adds attribute way input event triggered force node value update sanitized value hacky works case element component nt need support browsers nt support", "d": "9/2017"}, {"body": "instead api like simply define two components override js const baselogic const bootstrapversion extends baselogic template bootstrap const semanticuiversion extends baselogic template semanticui want single point entry external users define functional component renders internal component based config value", "d": "9/2017"}, {"body": "thanks", "d": "9/2017"}, {"body": "nt think currently defined act element provided begin would nt classify bug certainly room improvement least transition skipped componentb rendered work around adding wrapper div", "d": "9/2017"}, {"body": "wrap div transition wo nt take effect data loaded", "d": "9/2017"}, {"body": "pretty sure error past tried use without root node using multiple root nodes", "d": "9/2017"}, {"body": "found ugly solution add empty every router view component needs wait data", "d": "9/2017"}, {"body": "expected behavior vdom definition needs generate virtual elements iterate find diffs obvious way optimize please submit pr", "d": "9/2017"}, {"body": "add wrapper example arraypush arrayfilter make possible computed properties basis vue understood elements array changed", "d": "9/2017"}, {"body": "calculations take think pretty decent score large array curiosity checked react case takes around ms render size array pc vue said ms", "d": "9/2017"}, {"body": "native js action takes ms exception layout update layer tree vue ms huge difference sure make possible tell vue particular part array changed", "d": "9/2017"}, {"body": "modifying dom manually always faster skip data update virtual dom diffing parts thing ca nt realistically write dom manipulations directly building medium big app become complex eventually end buggyunmaintenable code vue abstracts dom away nt need think definition abstractions cost", "d": "9/2017"}, {"body": "understand still think possible prompt vue changes data need pay attention ones propose get rid vdom want possible flexibly organize rendering could tell vuejs added element array change vue could take previous version vdom add one element rerendering rest synchronizing vdom dom case vue would know elements changed would added one new think quite feasible would greatly enhance rendering performance", "d": "9/2017"}, {"body": "sure could applied case dividing multiple components way cache parts vdom", "d": "9/2017"}, {"body": "adding one item array always means adding one element domlist may complicated template looks like html add message message", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "vue\u6587\u4ef6\u4e2d\u7684script\u6807\u7b7e\u80fd\u5426\u76f4\u63a5import\u4e00\u4e2ajs\u7684\u7c7b\u800c\u4e0d\u662f\u4e00\u4e2a\u5bf9\u8c61 \u76f8\u5f53\u4e8e\u5df2\u7ecf\u4f7f\u7528vueextend \u5bf9\u8c61 \u540e\u7684\u7c7b", "d": "9/2017"}, {"body": "already use async components please read docs", "d": "9/2017"}, {"body": "using directives components api suggesting close already exists components", "d": "9/2017"}, {"body": "wish could create custom directives way create custom components think sentence says", "d": "9/2017"}, {"body": "api usage different", "d": "9/2017"}, {"body": "appreciate support vue proposed api something would consider vue used similar functionalities directives end duplicating everything directives components concept becomes convoluted similar angular directives essentially god concept anything intentional decision vue limit directives one dedicated purpose low level dom manipulation nothing else also due rendering mechanism vdom directives instances thus componentlike api feasible first place point time want achieve directives achieved components functionalities simulated leveraging directive hooks expand directive api unless strong use case solved", "d": "9/2017"}, {"body": "understand reasoning behind cool able everything need custom attribute one thing binding like let say click button value changes hook function called nt found way react changes suggestions", "d": "9/2017"}, {"body": "tochoromero sounds like bug please open separate issue reproduction", "d": "9/2017"}, {"body": "actually bad bug trying reproduce bare minimum showed bug thank taking time answer rock", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle github repository containing set reproducible steps lead behaviour described make sure boil problem much possible thanks", "d": "9/2017"}, {"body": "closing due inactivity please open new issue reference one follow information", "d": "9/2017"}, {"body": "meant receive nt argument perhaps warning development would help alleviate confusion already documentation", "d": "9/2017"}, {"body": "actually get similar made think could directly bind string adding warning could helpful want see something making users understand use something else object", "d": "9/2017"}, {"body": "posva sure exactly picked probably reading code open source projects replicating behavior could certainly ignorance part putting together wrt syntax pretty positive never read nt think reference api docs directly picked general usage looking examples reading different parts docs", "d": "9/2017"}, {"body": "ok thanks changed title", "d": "9/2017"}, {"body": "known happen use keyindex component reused current version key required ca nt add unique key array element easily yeah also local state todo component note use prop value input see expected behaviour manually add key said fairly easy opinion unfortunately keys necessary removing elements array used", "d": "9/2017"}, {"body": "tested make sure everything working correctly problem case nt belong vue core may related template recommend ask forum discord server case someone error", "d": "9/2017"}, {"body": "thanks would post forum instead happen machine node node may someone encountered issue forum suspect would issue webpack vue anyone encountered issue maybe trying switching node work", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "vue replaces dom element mounted make sure instantiate jquery plugin mounting vue instance preferably hook", "d": "9/2017"}, {"body": "still nt work jsfiddle initialize clicking button initializes still nt update data field good measure one initialize mounted also nt work work vue change mounted ready", "d": "9/2017"}, {"body": "right vue also dropped support jquery events need proxy jquery events real native dom event", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "problem related vue happens plain js", "d": "9/2017"}, {"body": "creates reactivity specific property object inner structure created hook without reactivity move code hook function whole properly reactive", "d": "9/2017"}, {"body": "think find way construct hook today passed via props tomorrow may requested server question use build reactive cool even use redesign using building inside", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "found works set first later first fail case always set first nt work expect demo nt work", "d": "9/2017"}, {"body": "fixed", "d": "9/2017"}, {"body": "using reproduced", "d": "9/2017"}, {"body": "current useragent guess line nt run works edge changed sqal said sure much thanks", "d": "9/2017"}, {"body": "well little study seems demo ieedge correct html spec safarichrome wrong says parsed value greater equal maximum value current value progress bar maximum value progress bar demo set first setting current value greater maximum value current value set set end position element anyway nt mean syntax vue template wrong correct browser implementations seems using directly without browser detection matches spec thanks", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hi rename methodes methods", "d": "9/2017"}, {"body": "sorry thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "related explained avoid iteration cost freezing array nt expect mutated longer necessary though", "d": "9/2017"}, {"body": "wait cause cause access already computed property slow put watcher two computed properties working great see even faster also project changes still reflected properly million times faster", "d": "9/2017"}, {"body": "seregpie test wrong watcher called also added tests second one access cached values performant expected third one adds new object base property see value correct final value test watcher nt fired yet reality still accessing cached value get super fast access value results test incorrect make think watcher called instantly also using make watcher detecting potential changes nested arrays unlike computed property default comparison wrong performance issue comes vue building dependencies evaluating computed properties accessing computed properties multiple times adds even dependencies slows component one thing kind performance heavy computed properties access computed property assign local variable example proposed solution may find fact performant using watcher see corrected version watcher test watcher manually added first evaluation computed property times right added next tests also little overhead compared previous withoutwatcher code watcher timer includes call promise constructor notice time taken watcher fire update new element added array tl dr inside computed properties use local variables store computed properties avoid accessing directly multiple times", "d": "9/2017"}, {"body": "\u4e3b\u8981\u662f\u4f60\u90a3\u4e2a\u53d1\u751f\u6539\u53d8\u7684\u7ec4\u4ef6\u548c translate english temporarily easily change html html avoid rerender custom component middle component element tag without propsattrs hard detect update details exactly add special attribute solve thanks", "d": "9/2017"}, {"body": "use div mark however improved sure", "d": "9/2017"}, {"body": "\u8c22\u8c22", "d": "9/2017"}, {"body": "\u770b\u4e0d\u61c2\u54df", "d": "9/2017"}, {"body": "key importatnt", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "reproduce", "d": "9/2017"}, {"body": "like idea linking docs error messages", "d": "9/2017"}, {"body": "better reported nuxtjs instead vue core gc log far enough determine cause leak need provide actual code leads leak", "d": "9/2017"}, {"body": "would even start provide code stack solely shows every crash different line general significant clue initwatch createwatch like seems build collect memory watcher dies doubt nuxtjs wraps around watch functionality vue nt see framework could involved", "d": "9/2017"}, {"body": "think first discussed nuxt repo opening issue bug actually ssr engine reference small guide memory leakage reports nuxtnuxtjs", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "vue supports standard dom events", "d": "9/2017"}, {"body": "forgot add every element array", "d": "9/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "expect wrappercontains css selector toequal true", "d": "9/2017"}, {"body": "mmh nt understand point use case lib component gather errors adding properties arrays functions rarely data locally adding functionality adding reactivity", "d": "9/2017"}, {"body": "posva op lib allow users declare asyncmethods vm instance say transform async method add corresponding data property eg also special properties like indicate async method completed op try notify rerendering vuerx also alternative imho vue skip watching non plain objects intention supporting watching functionarray needs handle many edge cases", "d": "9/2017"}, {"body": "thanks explanation herringtondarkholme limitation place method child fetchdataexecute property instead fetchdata especially clunky calling method code thisfetchdataexecute separates async methods normal methods called thisfetchdata understand may feel clunky usecase using different variable name make things better personally prefer serializable data move kind state store methods component root instance", "d": "9/2017"}, {"body": "code illustrates changes needed support functions well couple added tests npm test runs ok existing tests fail would expected failures seems behaviour functions undefined", "d": "9/2017"}, {"body": "less dup closing comment payload checks something handled typings like typescript", "d": "9/2017"}, {"body": "sure understand issue aware extends option", "d": "9/2017"}, {"body": "reread issue", "d": "9/2017"}, {"body": "expected behavior instantiate something nt even resolved yet", "d": "9/2017"}, {"body": "also issue policy explicitly states nt take questions issues please respect rules", "d": "9/2017"}, {"body": "yes want instantiate component resolved yet think feature suggestion would nice async components used way normal ones currently find way vue exposes manually resolve component also spend hours searching solution via channels stakoverflow forums etc", "d": "9/2017"}, {"body": "maps sets currently supported vfor heard possible vue", "d": "9/2017"}, {"body": "currently supported core reactivity detection data structures use simulate", "d": "9/2017"}, {"body": "sqal ok got thanks reply", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "please read licence mit", "d": "9/2017"}, {"body": "mit", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "thanks rrandom issue related svg namespace attached element within gets unexpected behavior trying fix ps seems also broken previous vue version check checks lowercased something", "d": "9/2017"}, {"body": "seems parameter method casesensitive", "d": "9/2017"}, {"body": "related bug unintended feature ref available first render behavior seems come recent release", "d": "9/2017"}, {"body": "workaround using top level buffer div seems super hacky solve problem", "d": "9/2017"}, {"body": "working expected also need root element putting vif root element component probably giving warning error console however use vshow instead always root element component", "d": "9/2017"}, {"body": "seems little quirky though ref first render viffalse", "d": "9/2017"}, {"body": "unfortunately vue reactivity system designed provide information put another way entails nontrivial changes additions provide api marginal benefits object may used multiple components different relative path information keeping track path information would prohibitively complicated expensive deep watcher recursively registers every property dependency inside reactive objectarray used caution performance implications cases heavy reliance watchers indicate design rethought improved remove reliance deep watchers particularly would probably better discuss actual use cases forum discord chat opening feature request", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "assume", "d": "9/2017"}, {"body": "trusktr called vue caches afterwards please use official chat forum ask questions", "d": "9/2017"}, {"body": "interesting wondering indeed good feature however even foo never logged let see going also indeed saw bot message made forum post instead thanks", "d": "9/2017"}, {"body": "sorry wrong misread output indeed logged thanks tip", "d": "9/2017"}, {"body": "trusktr change values instead check known caveats", "d": "9/2017"}, {"body": "think know work fine", "d": "9/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow lookup vuehackernews github", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "9/2017"}, {"body": "okey found csp version vue looks like version csp version worked webextensions use doc thx", "d": "9/2017"}, {"body": "note also work csp need precompile templates build step", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "normal behavior change permissionkey fire vfor input recreated key uniq case nt", "d": "9/2017"}, {"body": "oh wow bad thought key bound index thanks wszerad input changing value used attribute input rerendered therefore gets focus solution would manually focus key changes using watcher", "d": "9/2017"}, {"body": "use modifier", "d": "9/2017"}, {"body": "actually related lib think using gets stripped nt exist abstract component nt render tag tried using work another solution would wrap component div span", "d": "9/2017"}, {"body": "yeah vshow work vshow vif works well", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "resolve promise vue instance rather promise function returning vue instance proposed solution implies returning promise function wrong usage call function promise current implementation unwrap promise returned server entry code", "d": "9/2017"}, {"body": "sorry find another way resolve problem thanks", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "thanks proposal already deep watching detect nested property changes", "d": "9/2017"}, {"body": "already opened issue vuerouter", "d": "9/2017"}, {"body": "nt need vbind", "d": "9/2017"}, {"body": "keepalive include works component names route names foo component nt name", "d": "9/2017"}, {"body": "happens given home component name", "d": "9/2017"}, {"body": "sqal thank woks", "d": "9/2017"}, {"body": "warning message said valid svg element reserved use another name instead", "d": "9/2017"}, {"body": "doh like filter html element svg nt even occur sorry", "d": "9/2017"}, {"body": "bit surprised namespaces ignored hey ho", "d": "9/2017"}, {"body": "limitation watching mechanism watched value object watcher may fired result new property added object fire safe tradeoff correctness vs overfiring cases overfiring would harmless unless extremely expensive callbacks alternatively perform custom check eg shallow compare properties callback avoid real work unlikely change fixed upgrade reactivity system using proxies", "d": "9/2017"}, {"body": "hi problem adding property watched object firing could expected rather adding property parent object", "d": "9/2017"}, {"body": "know explaining possible scenario cater safety measure leads behavior seeing something changed trivially", "d": "9/2017"}, {"body": "thanks insight looking forward proxybased system others running written small pluginmixin use watchexact custom option saves original value fires function new value differs", "d": "9/2017"}, {"body": "scoped slots stored different property", "d": "9/2017"}, {"body": "currently way around suggest normalizing data structure something like another solution would provide api customize stringifying function use something like note also need use parse stringified state client", "d": "9/2017"}, {"body": "thanks reply like use second solution lot work normalizing existing data structure api use custom stringify function serialize initial state found uses eager suggestion using solution", "d": "9/2017"}, {"body": "maybe try gulprolluprolluppluginvue", "d": "9/2017"}, {"body": "try help send email", "d": "9/2017"}, {"body": "gulp task runner vue files module source format must combined sort module bundler work rollup might simplest one moment chrisvfritz repo different strategies integrating vue rails also rails already supports scaffolding webpack vue box flag", "d": "9/2017"}, {"body": "yes true rails going check one question lets say upgrade start using webpack happily continue use old pipeline start using webpack vue new stuff add slowly migrate whatever js stuff need thanks", "d": "9/2017"}, {"body": "giorgiomartini yes check strategies repo evan linked using rails webpacker one reasons prefer managing webpack integrate asset pipeline however want slowly migrate assets like mentioned", "d": "9/2017"}, {"body": "thanks gwildu please refer need write template", "d": "9/2017"}, {"body": "code working seems like introduced", "d": "9/2017"}, {"body": "returning api makes object reactive set vnodes api makes vue attempt convert vnode slot nodes deepcloned rerender fix bugs makes render function register entire vnode reactive dependency mutating vnode triggers rerender workaround could either vnode make api injection reactive", "d": "9/2017"}, {"body": "fix works great thanks", "d": "9/2017"}, {"body": "checkout vuerouter code use strategy hook", "d": "9/2017"}, {"body": "astraygit believe related es module component trying run reproduction first run sfc find several workarounds use commonjs require component use async component like use export object directly maybe move issue vueloader also maybe issue related different ways module resolve es module commonjs always run first enable strategy loading router", "d": "9/2017"}, {"body": "looking built assets confirm issue related difference es module commonjs js es module input import vue vue import vuerouter vuerouter vueuse vuerouter import foo foovue es module output const vue require vue const vuerouter require vuerouter const foo require foovue vueuse vuerouter means es module resolve module first run codes commonjs follow codes order time wrapps sfc vue component already exporting object directly resolve problem believe fix issue", "d": "9/2017"}, {"body": "issue connected hot reloading temporary workaround might js import vue vue import app appvue import home homevue import foo foovue import vuerouter vuerouter vueuse vuerouter processenvnodeenv production fooctor null", "d": "9/2017"}, {"body": "push \u548c curr", "d": "9/2017"}, {"body": "\u4e0d\u662f\u66ff\u6362", "d": "9/2017"}, {"body": "use like following", "d": "9/2017"}, {"body": "think proposed syntax nt solve problem deep watching want specific paths instead whole objectarray changed way already done jounqin pointed", "d": "9/2017"}, {"body": "said need use want prop scoped values slot tag already consumes name attribute internal purposes personally adopted convention wherein use scoped slots loop put item prop well like using component becomes something like course objectdestructuring attribute need babel", "d": "9/2017"}, {"body": "right get around curious reason would works object attribute directly prop check prop bound bind uses attribute inside named slot", "d": "9/2017"}, {"body": "completely valid bind dynamic slot name done first example essentially written two attributes tag one dynamic static compiles something completely different hardcoding attributes use livecompiler see vue compile template", "d": "9/2017"}, {"body": "bind dynamic slot name thank explaining forgot use", "d": "9/2017"}, {"body": "relies static information tag used generate appropriate code compilation used generates componentspecific code instead native form element code simply something nt support due compilationbased nature use branches instead", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "ssr html ssr html", "d": "9/2017"}, {"body": "vueloader options", "d": "9/2017"}, {"body": "\u6211\u5728createbundlerenderer \u4f20\u5165 inject false \u540e \u8fd9\u6837\u5199 vue \u91cc\u7684style\u6807\u7b7e\u662f\u8fd9\u6837\u5199\u7684", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "\u4f60\u53ef\u4ee5\u628a\u4f60\u7684\u4ee3\u7801 push \u5230 github", "d": "9/2017"}, {"body": "defcc", "d": "9/2017"}, {"body": "experiencing regression reverting give info available", "d": "9/2017"}, {"body": "fixed", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "locked packagejson vue version work", "d": "9/2017"}, {"body": "perhaps reason question chrome bug documentbodyinnerhtml old value var documentgetelementbyid test cache old textnode var cachetextnode achildnodes update innerhtml ainnerhtml new value output old textnodeparentnode consolelog cachetextnodeparentnode chrome gt null chrome amp chrome gt", "d": "9/2017"}, {"body": "old chrome version point textnode last chrome version point textnode", "d": "9/2017"}, {"body": "textnode dom tree seems get buggy behavior maybe could attach extra info parent node patching dom props workaround eg check oldvnode children mark parent element contains text node", "d": "9/2017"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "9/2017"}, {"body": "weex components recognized svg elements set svg namespace hacked ignore weex components works fine afterwards released fix problem pls check", "d": "9/2017"}, {"body": "ok solved problem", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "reporting vuerouter repo better", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "one final note proposal would also need standarize names transition hooks though nt see huge drawback", "d": "9/2017"}, {"body": "actually move every hook already creating reusable transitions almost solution actually wrap child component inside transition allow pass transition name prop although discourage use approach magic thanks suggestion transition hooks like events want handle way events without introducing different api", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "problem correlates solution", "d": "9/2017"}, {"body": "greabock said", "d": "9/2017"}, {"body": "modifiers mapping dom values back javascript values way around convert strings real booleans initializing app", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "moonou \u8fd9\u91cc\u6a21\u5757\u662f\u6307es", "d": "9/2017"}, {"body": "see", "d": "9/2017"}, {"body": "thanks clarification nt find original issue", "d": "9/2017"}, {"body": "sorry skipped part docs", "d": "9/2017"}, {"body": "define properties initialization work correctly reproduction neither see also", "d": "9/2017"}, {"body": "jounqin thank reply solutions sometimes ca nt define properties initialization example define customer bind properties customer object ajax server get customer informations lot properties need defined", "d": "9/2017"}, {"body": "first binding property template means already know field exists beforehand declare beforehand default create reactive properties however trick force add reactive properties using bracket syntax see still strongly recommend declaring properties beforehand easier time debugging maintaining code long run", "d": "9/2017"}, {"body": "nt know happen component update value ouside without emit", "d": "9/2017"}, {"body": "think jsfiddle implementation pattern tl dr object array must updated child component see value reassigned seen warning props must updated props mutation caught pushing element array deeplevel mutation cause address change javascript world make parent props change reflected child components think vue must keep address variable might wrong vue extend variable vue also watch change parent value ideal would fantastic find way avoid deeplevel object manipulation nt think possible language without another performance cost", "d": "9/2017"}, {"body": "allenhwkim said also explicitly raised warning docs", "d": "9/2017"}, {"body": "error nt seem relate vue calling inside vue method nt make difference work outside vue method unfortunately without repro really help", "d": "9/2017"}, {"body": "thanks evan yes works outside vue method try create repro kr gio", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "\u8fd9\u662f expected behavior \u4f5c\u7528\u4e8e toggle \u7684\u65f6\u5019 loading \u5e76\u6ca1\u6709\u88ab activated", "d": "9/2017"}, {"body": "vuerouter loading loading loading \u7ec4\u4ef6\u7684 component", "d": "9/2017"}, {"body": "\u5c31\u662f\u56e0\u4e3a\u8fd9\u5c42\u591a\u51fa\u6765\u7684 loading \u4f7f\u5f97 keepalive", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "met thing today workaround", "d": "9/2017"}, {"body": "ios system issue ca nt much vue core workarounds add hidden optgroup options make sure initialize select default value matching option", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "please instence input number value empty vue watch work title number new vue el body data return number watch number val oldval consolelog val oldval", "d": "9/2017"}, {"body": "hi nt think watch supposed work type wait type number soon type number watch function properly executed", "d": "9/2017"}, {"body": "expected behavior set span replaces inner textnode vue updating original textnode removed due operation give force recreated", "d": "9/2017"}, {"body": "another feature found domoperate affects deep children first child template work fine without key", "d": "9/2017"}, {"body": "one limitations dom templates due browsers see", "d": "9/2017"}, {"body": "reproduction link gets added added", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "cc ktsn herringtondarkholme", "d": "9/2017"}, {"body": "sure add", "d": "9/2017"}, {"body": "far know vuejs support android android uses separate web engine android version nt matter see quote caniuse android browserwebview version numbers refer version android os support listed android core noted many hardware vendors samsung htc etc use altered version default browser may include morelessbuggy support starting android web engine updated separately latest chromium version number used instead", "d": "9/2017"}, {"body": "site lowest support android written could nt find information however found compatibility note stating compliant browsers supported valid support table", "d": "9/2017"}, {"body": "saucelabs dropped support android tests longer shows support way", "d": "9/2017"}, {"body": "awesome think greenlight switch vue", "d": "9/2017"}, {"body": "seems normal", "d": "9/2017"}, {"body": "repro working intended", "d": "9/2017"}, {"body": "kingwl sorry test others case forgot change back important code html block expand true element block expand false element four case click event listen works well click event listen works well click event listen change true ok change back click event listen change false change true", "d": "9/2017"}, {"body": "happens inner click event fires triggering update nexttick microtask microtask processed event bubbles outer div update click listener added outer div dom structure outer div inner element reused event finally reaches outer div triggers listener added update turn triggering update quite tricky fix libs leverages microtask update queueing also problem eg preact react nt seem problem use synthetic event system probably due edge cases like work around simply give two outer divs different keys force replaced updates would prevent bubbled event picked html block expand true element block expand false element", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "guess standard behavior", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "works nicely copied code fiddle project overkill may want ask help forum discord server", "d": "9/2017"}, {"body": "works jsfiddle well meant mention late try discord progess bars nt work within vue document put outside template work fine guess github nt place get help", "d": "9/2017"}, {"body": "edited original post realized assigning number rather variable thing", "d": "9/2017"}, {"body": "see tired happens webpack quite strange may something webpack config vueloader maybe transpiled drop support ie", "d": "9/2017"}, {"body": "appreciate looking trying look vueloader familiar enough going go back hand rolled progress bars thanks", "d": "9/2017"}, {"body": "posva actually still think bug remove dynamic value binding example stops working looks like value needs added using domprops attrs working example using custom component guess progress element check needs added btw edge problem", "d": "9/2017"}, {"body": "sqal right dom prop since find culprit let pr unsure test necessary maybe compiler test thanks lot btw", "d": "9/2017"}, {"body": "posva hmm played bit turns issue related dompropsattrs adding tag map nt change thing still works value string add line check ieedge browser like issue gone sure throwing correct fix though wo nt affect things think leave issue someone core team fix", "d": "9/2017"}, {"body": "thank much looking sqal always comforting know nt something wonky", "d": "9/2017"}, {"body": "mmh really weird work using test right though", "d": "9/2017"}, {"body": "fails using stringbased templates change fiddle use string template instead indom template would fail adding map fix sqal probably nt build import correct file test project", "d": "9/2017"}, {"body": "working", "d": "9/2017"}, {"body": "vue gives power setting ssr setup project feels natural want prerender pages instead ssring setup tooling tooling part vue core", "d": "9/2017"}, {"body": "think discussion regarding nuxt", "d": "9/2017"}, {"body": "think order better differentiate vuejs project purpose post comparing reactjs example even amazing boilerplates like vuehackernews combining ssr prerendering imho one thank however using nuxtjs remember looking every message gitter issue github nt remember examplestalks also tried searching logical keywords google repo result", "d": "9/2017"}, {"body": "actually useful usually listening events component may want trigger method another component one", "d": "9/2017"}, {"body": "would emit event triggers method component call method", "d": "9/2017"}, {"body": "usecase find atm reopen thank", "d": "9/2017"}, {"body": "thanks valid bug freezes browsers node", "d": "9/2017"}, {"body": "nt think bug nt meant work promises right", "d": "9/2017"}, {"body": "nt matter need accept promise api freeze browser node server users give vue wrong input", "d": "9/2017"}, {"body": "oh yeah agree fixed possible unreasonable freeze platform reason saying bug perspective bug situation working edit misread code got tricked syntax thought promise using call way around", "d": "9/2017"}, {"body": "preliminary investigation shows vue relies function context resolve async component case render function always return new function instance handle vue attaches async component function lost vue think component nt properly resolved fix simple move inline arrow function outside stable identifier fix vue find context previously attaches function guess really one using api also solution fix nt clear", "d": "9/2017"}, {"body": "exactly herringtondarkholme said promise resolves cause current component rerender resulting new async factory function thus entering infinite update loop also nt see simple fix supported usage anyway guess documenting behavior async component section", "d": "9/2017"}, {"body": "tried realized feature forked branch also write ut condition several another uts failed think change comprehensive reliable", "d": "9/2017"}, {"body": "unfortunately breaking change unlikely happen", "d": "9/2017"}, {"body": "fyi set default value option empty string case selecting first option selecting similar value nt normal fix application", "d": "9/2017"}, {"body": "\u4f60\u7684\u7a7a\u9009\u9879 value \u662f \u6708\u7684 value \u4e5f\u662f \u6708\u7684\u65f6\u5019 sync", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "passive amp capture modifier problem", "d": "9/2017"}, {"body": "seems fst callback inputonce event handler modified data push microtask update queue update task execute callback input event handler refresh dom props sync callback input event handler get dom props value updated idea fix", "d": "9/2017"}, {"body": "vue capture errors thrown asynchronously similar try catch wo nt catch async errors responsibility handle async errors properly eg using promisecatch", "d": "9/2017"}, {"body": "ok thanks", "d": "9/2017"}, {"body": "everything read apart modifying vnode wo nt anything intentional reduce scope directives want play around vnode modify content html use component instead", "d": "9/2017"}, {"body": "decided probably implemented vue instead run script cleaning dom vue initializes", "d": "9/2017"}, {"body": "bug fyi use modifier make event handler triggered eventtarget element", "d": "9/2017"}, {"body": "list objective benefit computed props computed methods computed property like computedconfig neat solution nt also computed props might add api surface get users confused computed props computed methods also see info", "d": "9/2017"}, {"body": "default value runs every time needed exactly already computed property let avoid adding api surface something already doable way", "d": "9/2017"}, {"body": "unfortunately solution inelegant polluting api component component public api almost like forced create contrived name really want use directly moreover initially pass prop later need make computed update everything component references property computed property name ca nt change prop name every place references component change well cleaner elegant deal one property component", "d": "9/2017"}, {"body": "hmmm would rather argue design vpre ignore directives eg slot need tag slot wrap template fix", "d": "9/2017"}, {"body": "doc also says example doc illustrates main idea exact implementation details see updated example", "d": "9/2017"}, {"body": "dup use empty string undefined", "d": "9/2017"}, {"body": "expected datepicker changing therefore value changes whole template renders used input value used fill therefore clean case used since using jquery date picker need react event sent datepicker change remove input augmented datepicker since used", "d": "9/2017"}, {"body": "see makes sense unfortunate seeing comments see heated debate jquery community changes value inputs triggering events normally nt use jqueryui masking plugins never noticed spoiled guess got ta add overrides jquery sigh thank though clear answer problem could wrap head around", "d": "9/2017"}, {"body": "glad find useful personally try find plugin wraps create mine component", "d": "9/2017"}, {"body": "could provide minimalwhole project reproduces error find problems code tsconfig", "d": "9/2017"}, {"body": "seems rather issue laravelmix vue", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "dup", "d": "9/2017"}, {"body": "fak", "d": "9/2017"}, {"body": "mounted hook", "d": "9/2017"}, {"body": "\u6211\u7684\u5efa\u8bae\u662f\u8d77\u7801\u7236\u7ec4\u4ef6\u5e94\u8be5\u8981\u6709\u4e00\u4e2a\u7c7b\u4f3c\u975e\u5f02\u6b65\u7ec4\u4ef6\u7684 nexttick\u7684\u4e1c\u897f\u6216\u8005\u4e8b\u4ef6 \u77e5\u9053\u5b50\u7ec4\u4ef6\u5df2\u7ecf\u6e32\u67d3\u5b8c\u6210", "d": "9/2017"}, {"body": "\u7236\u7ec4\u4ef6\u4e3ap \u6211\u5df2\u7ecf\u6e32\u67d3\u597d\u4e86 \u7136\u540e\u904d\u5386\u51fa\u961f\u5f02\u6b65\u4e8b\u4ef6\u961f\u5217ds\u6267\u884c\u89e6\u53d1 \u800c\u4e8b\u4ef6\u961f\u5217ds\u4e2d\u7684\u6bcf\u4e00\u9879\u81ea\u5df1\u53bb\u68c0\u6d4b\u9700\u8981\u7684\u5b50\u7ec4\u4ef6\u662f\u5426\u52a0\u8f7d\u5b8c\u6210 \u5982\u679c\u52a0\u8f7d\u5b8c\u6210\u6267\u884c\u5373\u53ef \u751f\u547d\u5468\u671f\u6dfb\u52a0\u6240\u6709\u5f02\u6b65\u5b50\u7ec4\u4ef6\u6e32\u67d3\u5b8c\u6210\u4e8b\u4ef6", "d": "9/2017"}, {"body": "\u5f02\u6b65\u4e4b\u95f4\u7684\u4e8b\u4ef6\u6d41\u7a0b\u7ba1\u7406\u4e0d\u5c5e\u4e8e vue eventproxy", "d": "9/2017"}, {"body": "\u597d\u5427 \u8c22\u8c22\u4e86 \u6211\u5728\u63d0\u95ee\u4e4b\u524d\u5df2\u7ecf\u6309\u7167\u4e0a\u9762\u7684\u6b65\u9aa4\u4f7f\u7528vue\u7684 on\u548c emit\u901a\u8fc7\u4e00\u4e2avue\u5b9e\u4f8b\u505a\u4e8b\u4ef6\u603b\u7ebf\u5b9e\u73b0\u4e86", "d": "9/2017"}, {"body": "\u8bf7\u5148\u7406\u89e3\u5f02\u6b65\u7ec4\u4ef6\u662f\u5e72\u561b\u7684", "d": "9/2017"}, {"body": "\u6211\u7684\u5efa\u8bae\u662f\u8d77\u7801\u7236\u7ec4\u4ef6\u5e94\u8be5\u8981\u6709\u4e00\u4e2a\u7c7b\u4f3c\u975e\u5f02\u6b65\u7ec4\u4ef6\u7684 nexttick\u7684\u4e1c\u897f\u6216\u8005\u4e8b\u4ef6 \u77e5\u9053\u5b50\u7ec4\u4ef6\u5df2\u7ecf\u6e32\u67d3\u5b8c\u6210", "d": "9/2017"}, {"body": "\u5b50\u7ec4\u4ef6\u4f20\u4e2a\u4e8b\u4ef6\u5c31\u884c\u4e86", "d": "9/2017"}, {"body": "\u597d\u7684 \u8c22\u8c22 \u8bf7\u5173\u6ce8\u53e6\u5916\u4e00\u4e2a\u7531\u8fd9\u4e2a\u5f15\u8d77\u7684\u5144\u5f1f\u7ec4\u4ef6\u901a\u4fe1\u95ee\u9898", "d": "9/2017"}, {"body": "point right place nt would forum", "d": "9/2017"}, {"body": "right place ask kind things nt know would right place twitter discord forum sure people created tools like probably nuxt plugin recommend look", "d": "9/2017"}, {"body": "use nuxt generate wed sep eduardo san martin morote lt notifications githubcom wrote right place ask kind things nt know would right place twitter discord forum sure people created tools like probably nuxt plugin recommend look receiving subscribed thread reply email directly view github mute thread", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "sure missing thanks reopening", "d": "9/2017"}, {"body": "mistaken config creates separate bundle includes duplicated copy vue bundles included loading two copies vue page disabling warning copy main entry bundle see webpack docs proper vendor chunk splitting", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "use element access function look dos examples", "d": "9/2017"}, {"body": "put data dom anyway", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "quite understand posva method used add refs like write isactive method even solved duplicate code still happens", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "modifier supported since", "d": "9/2017"}, {"body": "please update tutorial document nt contains passive modifier", "d": "9/2017"}, {"body": "cc chrisvfritz seems event section guide missing modifiers added newer versions", "d": "9/2017"}, {"body": "add", "d": "9/2017"}, {"body": "feature request please use bug report format provide reproduction", "d": "9/2017"}, {"body": "pushtip days thank comment much", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "probably related", "d": "9/2017"}, {"body": "yes error", "d": "9/2017"}, {"body": "thank check jsx", "d": "9/2017"}, {"body": "nickmessing work jsx since basically alias feel free pr jsx test case", "d": "9/2017"}, {"body": "makes bug destroycreate order matter sounds like creating side effects affect component instance created hooks really recommended practice", "d": "9/2017"}, {"body": "thanks evan answer nt know makes bug behavior fresh template install works expected matters use hooks handle event listeners global bus fired twice registered created component removed beforedestroy also want register unregister module store fly got errors", "d": "9/2017"}, {"body": "vue bus specialist creating listeners fly seams like really bad idea sure destroycreate order least problems since appear development may suggest really want keep way check listener already exists add easily", "d": "9/2017"}, {"body": "yes today hook removes everything ca nt find solution try plugin approach thanks help", "d": "9/2017"}, {"body": "problem beforedestroy removes listeners create next time component mounted", "d": "9/2017"}, {"body": "current vdom behavior creates new nodes destroying old ones unfortunately changing would breaking change suggest try add checks ensure component instance remove listeners registered", "d": "9/2017"}, {"body": "think might valid reason bug using amp hooks register amp unregister vuex modules development hot reload component registers vuex module instead register module second time unregistering output log better way component register vuex module ticket reopened", "d": "9/2017"}, {"body": "two repos triying first repos external vue app main conponent main app embed component integration page wanted make tool self register store problems described registering component inside nuxt app solved problem things right way", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "\u4f20\u503c\u4e00\u76f4\u4e0d\u5bf9", "d": "9/2017"}, {"body": "thanks instead reporting bug please submit prs directly directly via github interface", "d": "9/2017"}, {"body": "sure", "d": "9/2017"}, {"body": "feel scope vue designed ie exposing primitives building alternative reactivity system especially different syntax requirements fact easily use unmounted vue instances reactive data sources similar mobx nt sound right reconstruct sake api similarity requiring vue expand api surface accommodate", "d": "9/2017"}, {"body": "fact easily use unmounted vue instances reactive data sources yes thought constructor lot unnecessary viewrelated stuff usage models optimal performance point view", "d": "9/2017"}, {"body": "never mount viewrelated stuff minimal small overhead creating instance", "d": "9/2017"}, {"body": "small overhead creating instance yes exactly talking want make model instantiation cheap possible may lot ca nt expose internals already course asking make part public api help people like trying develop lowlevel tools", "d": "9/2017"}, {"body": "problem exposing part public api either library depends apis break without notice may change internal implementations maintaining public api avoid breaking stuff time longer able make big internal changes suggest benchmark actual overhead asserting going expensive", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "nt dup", "d": "9/2017"}, {"body": "posva yes similar situation dynamically clear cache runtime", "d": "9/2017"}, {"body": "jkzing", "d": "9/2017"}, {"body": "okjesse", "d": "9/2017"}, {"body": "jkzing \u6309\u7167\u60a8\u7684\u65b9\u6cd5", "d": "9/2017"}, {"body": "jkzing", "d": "9/2017"}, {"body": "jkzing\u770b", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "destroy", "d": "9/2017"}, {"body": "fadexiii", "d": "9/2017"}, {"body": "okjesse \u6211\u7684keepalive \u91cc\u9762\u5305\u542b\u7684\u662f\u4e00\u4e2a\u7528includes\u7684\u65b9\u6cd5\u4e0d\u8d77\u4f5c\u7528", "d": "9/2017"}, {"body": "okjesse", "d": "9/2017"}, {"body": "work must switch condition eltablecolumn large number props want copy", "d": "9/2017"}, {"body": "nt make sense slot either scoped also question bug", "d": "9/2017"}, {"body": "yes work way read information", "d": "9/2017"}, {"body": "intended behavior please read linked docs details", "d": "9/2017"}, {"body": "oh thanks nt know best practice pass value understand cloned passing child component", "d": "9/2017"}, {"body": "please provide actual reproduction", "d": "9/2017"}, {"body": "woops looks like messed link copy pasting anyway trying put one back together", "d": "9/2017"}, {"body": "repro", "d": "9/2017"}, {"body": "sure quite understand trying want use js variables inside style tag could bit specific trying accomplish maybe share jsfiddle illustrates problem", "d": "9/2017"}, {"body": "okay sharing sample fiddle component focus described issue see struggle use props inside tags impossible dynamically change trigger image change case whatever", "d": "9/2017"}, {"body": "already bind computed objects styles", "d": "9/2017"}, {"body": "static design since may extracted plain css files instead injected managed dynamically hand props known runtime way modify already extracted css runtime convention dynamic toggling styles case write possible classes toggle class name dynamically prefer fully dynamic styling always use cssinjs option vue instead", "d": "9/2017"}, {"body": "see comment previous issue vue already implements similar optimizations", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "already includes similar optimizations please read release notes", "d": "9/2017"}, {"body": "thanks suggestion imo feature add significant benefits warrant addition essentially write little less code vs yet another api remember", "d": "9/2017"}, {"body": "difference projects created via may private intended public use license nt necessary cases copyrights implicit nt make sense require license every project intend make code public add license field", "d": "9/2017"}, {"body": "using old version happen latest version", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "yes issue also closed use framwork fortunatley thousands", "d": "9/2017"}, {"body": "dup", "d": "9/2017"}, {"body": "wrong using consolewarn consoleerror", "d": "9/2017"}, {"body": "mean like nt think guess could solution see two eventual problems first times vue comes eslinting like vue init console messages usually disabled second console message added existing one always output generic error cause confusion compared message like per example bash vue warn invalid prop must enter digit number prop example found srccomponentswordcountwordcountvue srcappvue pattern may something similar bash vue warn invalid prop prop found srccomponentswordcountwordcountvue srcappvue custom validator check failed displayed like always basically idea", "d": "9/2017"}, {"body": "note called synchronously call consoleerror validator immediately vue builtin warning warning good enough", "d": "9/2017"}, {"body": "herringtondarkholme good point", "d": "9/2017"}, {"body": "repository vue question vuerouter issues usage questions forumvuejsorg chatvuejsorg issue nt match requirements missing reproduction", "d": "9/2017"}, {"body": "hello working intended find better explanation smile", "d": "9/2017"}, {"body": "give slot", "d": "9/2017"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "9/2017"}, {"body": "please follow issue reporting guidelines provide minimal jsfiddle github repository containing set reproducible steps lead behaviour described make sure boil problem much possible thanks", "d": "9/2017"}, {"body": "closing favor see three potential solutions need feedback core team figure one best", "d": "9/2017"}, {"body": "agree much better issue mine glad picking", "d": "9/2017"}, {"body": "diffed input update retrigger flip animation workaround splitting separate component update decoupled parent context", "d": "9/2017"}, {"body": "following suggestion wrapping transitiongroup component nt seem fix problem missing something tried wrap whole thing div issues still persists", "d": "9/2017"}, {"body": "misunderstood meant", "d": "9/2017"}, {"body": "please explicit kind directive would need please configuration could extracted one single js file import different directives mean nt think cumbersome redundant mean setting configuration using directives template well think much better explicitly give directive configuration making depend injected value somewhere else could lead hard debug bugs side note injectprovide meant advanced usage libs want make things easier use without user worry connecting explicitly many things together discouraged applications makes things implicit harder understanddebug", "d": "9/2017"}, {"body": "nt think really needed really want global configuration directives would vuex store object would even make easy update need", "d": "9/2017"}, {"body": "jsnanigans sure mean plugin access user vuex store global configuration contextaware configuration", "d": "9/2017"}, {"body": "thinking could define config store component get config pass directive think misunderstood trying accomplish provideinject directives want avoid passing config directive attribute write config provided components injected directive", "d": "9/2017"}, {"body": "posva understand provideinject advanced usage trying change saying provideinject work way directives already components reasons let give concrete example apologies done start plugin provides directive directive takes javascript function example executes passing object function returns string css styles directive generates css class name styles injects styles page appends css class name elements property object passed function directive value passed plugin beforehand way one way pass plugin installed ok works globally want use different themes app suggestion greetings features components config objects different themes directive inject config object instead getting install user pass directive value saying passing directive value cumbersome redundant would look like please get hung somewhatcomplex cssinjs example think use cases well immediate use case", "d": "9/2017"}, {"body": "really think directives probably want use css js example looks perfectly fine using config primarycolor yes looks cumbersome think adding provideinject directives would allow users easily mess things make really hard debug understand provideinject advanced usage trying change want reemphasize meant libs applications", "d": "9/2017"}, {"body": "would much easier even class", "d": "9/2017"}, {"body": "really think directives probably want use css js strongly disagree use case fits within guides description lowlevel dom access plain elements perfect example directives exist first place directive changing class value single element user wants litter app bunch higher order components deliver class name think adding provideinject directives would allow users easily mess things make really hard debug yes agree downside could say provideinject functionality components already vue could also say react context want reemphasize meant libs applications sorry nt really understand provideinject used components right components used applications", "d": "9/2017"}, {"body": "yes agree downside could say provideinject functionality components already vue could also say react context imagine dirty throw dump sorry nt really understand provideinject used components right components used applications components added libs", "d": "9/2017"}, {"body": "posva fair summation saying saying debating provideinject pros cons pretty much pointless already framework feature solves problem react context need contextaware data delivery issue components receive data way directives much harm components feature exists anyway maintainers maybe even decided pros outweigh cons con applies directives nt also apply components components added libs yes directives added libs", "d": "9/2017"}, {"body": "trying say adding pi directives could make harm help pointed link talks purpose provideinject last part comment provocative unnecessary found offensive trying help", "d": "9/2017"}, {"body": "posva sorry intention wanted clarify anyone reading directives components installed via libraries difference two considering whether one legitimate use pi", "d": "9/2017"}, {"body": "wanted clarify anyone reading directives components installed via libraries difference two considering whether one legitimate use pi like difference use case apart css one mentioned", "d": "9/2017"}, {"body": "like difference ok difference referring quoted incorrect legitimately trying figure mean another use case involving input validation much different use case already laid essentially convenient way set configuration nt specify long within certain context seems like whole point pi feature feel like dismissing use case without giving reason clear advocating feature library author end goal make using library easier event library api better suited use directives instead components", "d": "9/2017"}, {"body": "hi use instead option", "d": "9/2017"}, {"body": "javoski thank", "d": "9/2017"}, {"body": "want ask many functions monitored component affect performance javoski", "d": "9/2017"}, {"body": "note bug vue way registering plugins guaranteed cause leak way us fix important understand thus avoid certain patterns using simply understand probably use", "d": "9/2017"}, {"body": "pressing several buttons time fires several input events one button keyboard sends ok ok vmodel binding fact every event handler gets fired input value changed pattern like char added input value input handler fired input handler fired char added input value suspect may something nexttick behavior btw timerfunc called half time unlike example chrome ff", "d": "9/2017"}, {"body": "finally could test also weird keep keys pressed gets repeated vmodel fixes work around ie crazy behaviour definitely messing things sure mark improvement bug workaround use listener yield expected result want", "d": "9/2017"}, {"body": "thx jsnanigans workaround look application think need two way binding tested behaviour occurs examples test version version", "d": "9/2017"}, {"body": "really easy need define variable ie data instead check variable execute function alternatively could leave attribute check function javascript myfn thisdisablechange return would also give control gets disabled", "d": "9/2017"}, {"body": "sounds like usage question nt think provide dedicated api specific use cases", "d": "9/2017"}, {"body": "config setting define custom events bit like keycodes api idea", "d": "9/2017"}, {"body": "events one place template gives good idea component react sure putting logic elsewhere help achieve goal sorry shooting ideas x", "d": "9/2017"}, {"body": "thinking might need listen set events multiple places could help avoid repeating could cause lot problems putting global config would also make informant components want could also give declarative names like also goal easily pass multiple events function", "d": "9/2017"}, {"body": "goal indeed able use function multiple events without copypaste function name x times template need listen set events multiple places point moot since goal call function within component need js js hand thinking calling function multiple components think feature request scope would use order keep dry", "d": "9/2017"}, {"body": "general trying avoid adding alternative syntax templating system case benefit saving keystrokes really nt worth addition imo fact use spaces attribute name makes proposals impractical linusborg suggested might best solution however many modifiers actually compiled code compilation phase thus making costly add runtime support think best path forward would userland library exposes method implements runtime behavior modifier internally instead duplicating vue core", "d": "9/2017"}, {"body": "general trying avoid adding alternative syntax templating system case benefit saving keystrokes really nt worth addition imo thinking currently thing opinion much difference avoiding repetition fact use spaces attribute name makes proposals impractical yes way around solution bit dead water still think kind repetition makes components behavior harder comprehend perhaps creating complex components right way oh well", "d": "9/2017"}, {"body": "andreiglingeanu impression issues filed bug reporter nt accessible anyone apple team dev reported link apple bug tell view logging", "d": "9/2017"}, {"body": "coffeescript partially helpful partially appreciate syntactic sugar fewer braces indentationbased missing lot sugar provides", "d": "9/2017"}, {"body": "aminimalanimal nah getting bug exist access error amazed someone still uses coffee", "d": "9/2017"}, {"body": "say love enforced proper indentation nt like managing brackets p bad bug report sure safeguard horrible security issues nt easily discoverable", "d": "9/2017"}, {"body": "would interested helping convert typescript well needed", "d": "9/2017"}, {"body": "nt causes longer learning curve angularlike nature starting longer time waiting first update due vue team learning experimenting new technology yes coming ones may become faster makes ts must learnt technology diving vuejs loses vue one greatest points angular react shorter learning time idea migrating ts", "d": "9/2017"}, {"body": "khalednuur typescript would used vue source code similar flow nt mean need use still need learn types flow would typescript difference one support bigger community", "d": "9/2017"}, {"body": "khalednuur also understanding angular really tries enforce full typing use typescript pretty silly feel like ability choose type one strengths example nt tend type application code much break something module component type document way months make application change nt need go reread component makes sense understanding angular kinda forces nothing", "d": "9/2017"}, {"body": "article javascript libraries written typescript codebase typescript nt mean application developer needs use typescript angular less targeting enterprise developers largely benefit typescript codebase also doubled decorators looks better typescript compared code examples would always look better typescript also support nt really advertise much js angular syntax function app const appcomponent ngcore component selector myapp template first angular app class constructor function constructor windowapp windowapp typescript component selector myapp template first angular app class appcomponent ngmodule imports browsermodule declarations appcomponent bootstrap appcomponent class appmodule vue codebase nt really mention using typed language problems people mentioning typescript repo already flow even vue uses typescript nt need use decorators vue api would look example", "d": "9/2017"}, {"body": "going relicensing flow mit hope relieves concerns", "d": "9/2017"}, {"body": "mroch wow big news guess closed", "d": "9/2017"}, {"body": "plasmatium pointed essentially compiler optimization hint nt really make sense make dynamic syntax also makes feel bit confusing also meant optimizing large trees plain element nodes nested components inside component already serves update boundary props passed components change updates happen downstream", "d": "9/2017"}, {"body": "also wondering next release occur meantime way install version thanks", "d": "9/2017"}, {"body": "clone repo build files run use local version vue rough instructions", "d": "9/2017"}, {"body": "since users actually use inside templates prohibiting breaking change nickmessing suggested think would better make rule eslint plugin instead", "d": "9/2017"}, {"body": "defcc problem idea expression dynamic bindings nt really know compile time whether component original intention really meant dynamic component switching cases allowing upgrading normal element component primarily using indom template html element placement restrictions eg trying use component inside somehow feel current behavior sticks intention better unfortunately fix break cases users casting custom component specific cases like component libs probably better manually handle events instead using finergrained control looked latest bootstrapvue code seems split separate components think better direction", "d": "9/2017"}, {"body": "thanks good explanation directive", "d": "9/2017"}, {"body": "typo makes enumerable fixed pr merged", "d": "9/2017"}, {"body": "jounqin sure even enumerable still present nt got time properly investigate issue yet", "d": "9/2017"}, {"body": "ah sorry read wrong know issue try figure later used extract styles first chunk also another async chunk generate property correctly nt encountered problem however sounds good getter always", "d": "9/2017"}, {"body": "app containing component template syntax error broken app definition runtime exception something developer responsibility fixing deploying app", "d": "9/2017"}, {"body": "also closing issues quickly think premature course app broken entire app work broken template comes play make issues way harder debug necessary development prototyping especially since error applies compiler case anyway html template code case allow developers designer fully live edit templates live preview live data fact specific template nt yet render emits error fine entire application becomes useless annoying instantiate second vue instance test compiler pipeline using works course one reason html applications successful resilience many error scenarios alternative wpfxaml like experience slightest compilation runtime mistake renders nothing long term goal rendering layer try least somewhat resilient errors vue already aforementioned case rendering renderable html break everything especially might easy fix would hope might least open us propose pull request find time investigate pipeline best make fix affect performance maintainability regards ps case prototyping phase components turned server side rendered components automatically course valid", "d": "9/2017"}, {"body": "think api feels bit confusing took times grasp trying fact think easier externalize backend api bundle bundle server code require backend api directly", "d": "9/2017"}, {"body": "\u6211\u5728state\u91cc\u4f7f\u7528\u4e86require", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "transition", "d": "9/2017"}, {"body": "\u91cd\u73b0\u5e94\u5f53\u5c3d\u91cf\u7cbe\u7b80 vue \u7684 bug \u4e00\u4e2a\u6700\u5c0f\u5316\u7684\u91cd\u73b0\u610f\u5473\u7740\u5b83\u7cbe\u786e\u5730\u5b9a\u4f4d\u4e86 bug \u672c\u8eab \u5b83\u5e94\u5f53\u53ea\u5305\u542b\u80fd\u591f\u89e6\u53d1 bug bug", "d": "9/2017"}, {"body": "posva vueloader sourcemap correct real problem webpack mix ara sure give issue webpack", "d": "9/2017"}, {"body": "vueloader import vuescript babelloader nodemodulesvueloaderlibselector typescript amp find problem babelloader create sourcemap correct", "d": "9/2017"}, {"body": "hi ergenekonyigit first thanks lot logos appreciate contribution however sorry direct nt feel designs polished enough hope understand designer pretty picky details yet come logos vuexvuerouter happy also explained prefer vue ecosystem stick one logo consistency", "d": "9/2017"}, {"body": "fenduru sorry late response yes way get rid cost preventing array extensible however linusborg pointed lead potential scenario frozen array containing objects already made reactive elsewhere would cause changes nested objects ignored although cases extremely rare entirely sure safe sacrifice correctness use case mentioned ultimately somewhat bruteforce workaround deal incapability detecting array indice access object property addition case exist later added way guarantee detection sadly cases costly price pay ensure correctness luckily planned rewrite reactivity system using proxy longer need work around see great perf boost scenarios running", "d": "9/2017"}, {"body": "ca nt replicate behavior expecting case understand bruteforce workaround however seems like reason give people way opt behavior impacting every vue component references array imagine person relatively large array index opened think considered unless scenario shown differ objects arrays even seems kind unreasonable someone explicitly opt change detection array surprised change detection nt happen within array edit side note think proxy perfect kind use case supported ca nt polyfilled ie impacted browser things performance going away time soon nt think ignore issue favor proxies", "d": "9/2017"}, {"body": "fenduru one extra level nesting object registers dep see case", "d": "9/2017"}, {"body": "see however actually inconsistency objects arrays exactly point change array object frozen recognized arguing makes sense indicated object nt reactive", "d": "9/2017"}, {"body": "fenduru true guess actually better keep consistent", "d": "9/2017"}, {"body": "fyi instance destroyed cached components destroyed well unless misunderstood scenario actual code shown think original concern nt even problem first place", "d": "9/2017"}, {"body": "although see point proposal nt feel particularly needed way encourages passing multiple values object avoid specify multiple props easy abuse object props tucking properties making sort super prop however think explicit list props makes component interface easier understand", "d": "9/2017"}, {"body": "vvpvvp came similar situation using vue components inside list edited addremove items change order using vuedraggable items nt unique id generated data within form solution found use shadow list save unique ids rendering purpose edit lists user interaction example using code", "d": "9/2017"}, {"body": "nauzethc thank much must explain know solution solve question better nt need key ordinary way problem use met many inexplicable problems development", "d": "9/2017"}, {"body": "vvpvvp understand problem main problem key data realy unique ids create new items listtable add blank ids like goes server generates proper uids far edit mode adding new items nt realy want generate ids server needs em blank handle problem add another one ids realy something want adding option would generate keys inner vue use seems legit request", "d": "9/2017"}, {"body": "really used chunks template significantly large costly render otherwise benefit would negligible applications perform perfectly fine without need cost introducing additional directivesconcepts technical api surface increase really worth", "d": "9/2017"}, {"body": "fyi", "d": "9/2017"}, {"body": "personally think consistent across project global compiletimeonly option first place since solved css avoid adding yet another option runtime api", "d": "9/2017"}, {"body": "since solved css avoid adding yet another option runtime api respect decision esp performance implications full clarity white space always solved css give example html html glued word footnote browser width narrow enough forced go proceeding line word footnote travel however following html occur move word footnote appear preceding line html footnote far seen css get around without unintended side effects setting parent font size zero child font sizes reset using floating elements using flexbox things introduce complexities unintentional side effects project brought issue ultimately decided remove whitespace manually pretty gets job done anyway thought weigh mention thanks", "d": "9/2017"}, {"body": "problem themes suddenly got using vue material background valid item theme gives message default primary blue accent pink background rgb preferred option background valid theme error", "d": "9/2017"}, {"body": "likely support full dynamic type next minor release closing one", "d": "9/2017"}, {"body": "plain javascript object thus supported reactivity", "d": "9/2017"}, {"body": "unfortunately flip animations entirely css transition driven would difficult provide js driven api behavior would also likely bloat codebase future may split transition system standalone packages add optin features", "d": "9/2017"}, {"body": "case done refactoring backend keys renamed would prefer see warning well key nt exists", "d": "9/2017"}, {"body": "lazyhero", "d": "9/2017"}, {"body": "closing lack actionable items", "d": "9/2017"}, {"body": "hi condition scopedslots demo could append scopedslots abstract component thanks", "d": "9/2017"}, {"body": "hi evan solution problem instead windowdocumentbodyinnerhtml used thanks advance", "d": "9/2017"}, {"body": "kingwl able resolve", "d": "9/2017"}, {"body": "zuibunan success try something like", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "request stale meanwhile actually allows inject custom compiler modules via option module api defined theoretically enable standard use cases alternative codegens imo much control given userland", "d": "9/2017"}, {"body": "issues outer component delegates another component using cases outer component inner component linked property sometimes linked outer component sometimes inner component nt rely find correct component time", "d": "9/2017"}, {"body": "issue well one site least ipad model really hard debug since dev tools also crash reproduce problem codepen example provided bububo using latest vue version reckon problem lies vue hooks dom another website barely works vue takes almost seconds initialize ipad afraid couple components introduced page crash please reopen issue investigate posva", "d": "9/2017"}, {"body": "haies", "d": "9/2017"}, {"body": "import elcol", "d": "9/2017"}, {"body": "vue haies ie", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "\u8fd9\u91cc\u5e94\u8be5\u66f4\u591a\u662f babelrc babel", "d": "9/2017"}, {"body": "exactly problem reproduced ios wechat wkwebview safari ca nt reproduce uiwebview wechat workaround works us", "d": "9/2017"}, {"body": "fyi already shipped pure js build nt announced yet supports base renderer decoupled nodejs apis feel free try integrating contexts", "d": "9/2017"}, {"body": "given comment write something simple like run webpack nt getting messages like correct", "d": "9/2017"}, {"body": "sowhatdoido native node module ca nt webpack use instead", "d": "9/2017"}, {"body": "ah sorry thought said base renderer meant vs thanks help", "d": "9/2017"}, {"body": "think without mechanism component composition via inheritance inherently broken since allows affordances drying template fact people using pug template language workaround proof enough imo downside course introduces another dependency whole new templating language feature would urge reopen discussion", "d": "9/2017"}, {"body": "hi thanks answer running problem microsoft edge suggest need create svg realtime vuejs bind som html ex today escaped visible page since innerhtml nt part svg specs pointed forced use brackets insert value possible turn html escaping contexts solve issue way suggest", "d": "9/2017"}, {"body": "thank", "d": "9/2017"}, {"body": "oh nt added official doc", "d": "9/2017"}, {"body": "browsers support modules would great able import vue codepen seems work chrome safari test modules flags firefox edge defining global variable importing could something like beginning vue esm", "d": "9/2017"}, {"body": "time want notify component rendered callback useful cases else need implement events inited components want monitor fail case think caused plan get callback back give help", "d": "9/2017"}, {"body": "safari macos earlier versions try use custom component input like error caused", "d": "9/2017"}, {"body": "note vfor refs guarantee order source array well huge bummer", "d": "9/2017"}, {"body": "document says refs populated component rendered reactive really requirement dynamic ref vfor example kingwl found solution manually clear old ref array null works tries found vue push new added vue components ref array vfor loop solution array one item problem solved need wait new ref feature", "d": "9/2017"}, {"body": "problem refs reactive using nexttick function works get updated list refs problem vfor refs returning array match order source data code hack using custom uids resetting uids indexed trying access refs filtering array uid property", "d": "9/2017"}, {"body": "fail", "d": "9/2017"}, {"body": "see", "d": "9/2017"}, {"body": "closing since original suggestion involves platform sniffing quite tricky probably something better dealt userland", "d": "9/2017"}, {"body": "yateric thank much posting nonjavascript version really simplified vue application semanticui need js activate styling nt work smoothly vue templates conditional rendering watch property call semantic uis js calls ensure widgets working", "d": "9/2017"}, {"body": "yes emptied user opinion setting empty string throws lots type warnings component props expect maybe could modifier could used various scenarios set empty strings user emptied input", "d": "9/2017"}, {"body": "hi closed latest code encountered issue program running updating record condition read display datas checkbox truefalse condition remains even reading new records vue version thx", "d": "9/2017"}, {"body": "yeah obvious input work vmodel syntax sugar input update value think said docs vmodel also handles browsers compatibility better", "d": "9/2017"}, {"body": "saivarunk gives error vueloaderlibtemplatecompilerjs vueloaderlibselectorjs typetemplate amp index emitted value instead instance error template syntax error invalid expression vbind value modeltopics id", "d": "9/2017"}, {"body": "ruchern nt understand goal want reach", "d": "9/2017"}, {"body": "computed properties behaviour working", "d": "9/2017"}, {"body": "mikeevstropov computed nt convert returned value needs reactive returned", "d": "9/2017"}, {"body": "thank reply", "d": "9/2017"}, {"body": "different use case may need custom input component works try support polyfill need html following reason wo nt render thus element needed however much try ca nt find way render html comment directive seems way go ca nt use html element", "d": "9/2017"}, {"body": "looks like nearly calls settimeout using either defer function call immediately called next pass event loop ie transition effects would irrelevant server side rendering vue solution would implement stack push functions run next tick instead using settimeout stack nt hard write personally rather like pattern using push await things nt want blocking could solved outside vue using event loop implementation support function already really need create loop settimeout amp setinterval implemented work php ultimately code need resolve point ie resume synchronous execution events advanced could tricky may argue valuable javascript let timeouts windowsettimeout cb delay args gt timeouts timeoutsconcat cb args end datenow delay require actual code const endtimecompare end end b gt b timeouts timeoutssort endtimecompare timeoutslength gt sleep const runnow timeoutsfilter end gt end lt datenow const cb args runnow cb args timeouts timeoutsfilter timeout gt runnowincludes timeout sort endtimecompare writing bed midnight nt run sure need make lesspretty works older engines sleepy get general idea please let know idea solves everyone looking make repo put something includes setinterval", "d": "9/2017"}, {"body": "get example work properly add watchasobservable", "d": "9/2017"}, {"body": "fnlctrl well frankly doc far clear importing full version one using webpack browserify example currently toying scaffold uses gulp babel works fine npm modules importing gets runtimeonly version get full one requires importing documented well quite documented really sure know pretty much purpose umd modules work unimaginable scenarios still took several rereads installation page landing issue figure production uses use webpack cli tool great users pointed way using vue scenarios directly given structure installation page documentation easy say paragraph needs change section full runtime versions likely candidate one insert paragraph using gulp brunch import vue babel config using scaffold finally chrome actually full browser implementation also considered", "d": "9/2017"}, {"body": "fyi bundler alias possible always preferred instead directly importing file path dependencies may using alias risk multiple copies vue loaded time personally think build explanations provides enough information users determine correct build use depending scenarios honestly sure missing note scope vue docs explain es modules choice bundlers work cover every possible case vue potentially used focus recommended tooling suggest users without enough tooling experience follow recommended setups", "d": "9/2017"}, {"body": "might help", "d": "9/2017"}, {"body": "js const dumbcmp props gt propslabel export default dumbcmp actually guys done serval months ago", "d": "9/2017"}, {"body": "want render one node like case ca nt wrap need simple template feature like knockout apply tags", "d": "9/2017"}, {"body": "vuetemplatecompiler vue true shouldt check available vue js version install correct version work around simply single command explanation uninstall existing verion vuetemplatecompiler find version number installed vue js vue substr get version number create string vuetemplatecompiler package matching vue js verion vuetemplatecompiler vuetemplatecompiler npm list awk vue print substr install correct vuetemplatecompiler package npm install uetemplatecompiler", "d": "9/2017"}, {"body": "meeting", "d": "9/2017"}, {"body": "chrislandeza solved problem", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "custom vmodel modifiers case loop nested objects retrieved json use single html template rather template per object case believe computed properties nt work currently putting custom conversion methods server format vmodel format fetching sending data would love something builtin could pass functions", "d": "9/2017"}, {"body": "hello please repost one fiddles possible miljanaleksic linusborg seeing problem currently sounds much like described unfortunately fiddles gone ca nt see code workaround mentioned miljanaleksic make sense context also nt really understand render functions probably part weakness additionally nt see could event name wrong von click clicked event template component clicked method methods object event fires method component definition must work everything else expect occuring exact description problem vertical list tasks one task next etc task checkbox right user checks checkbox indicate task completion task disappear vuex implementation triggers change across entire application task disappear lists next task list moves otherwise appears spot old task checkbox accompanying next task appears checked even though certainly fact checkbox previous task never actually seems disappear instead seems hang around task text changes next problem need try show reproducible example please let know make effort make fiddle show problem time permitting application complex reproducing trivial may reasonably able reproduce questions thanks creating vue better alternative angular et al event name misusing miljanaleksic linusborg could share work around could reproduced without render functions note currently using eventpreventdefault checked checkbox hanging around less ideal considering checkbox never appears checked maybe resort buttons instead checkboxes even images swap manually thank advance", "d": "9/2017"}, {"body": "nt really sound like problem sounds like nt key list items start thread forumvuejsorg continue necessary closed issues place", "d": "9/2017"}, {"body": "nt unique id try case caching issue etc nt resolve issue added unique id checkbox previously hmmm maybe needs higher level multiple elements vue components template try keying needed elements thank thoughts apologize commenting closed issue nt resolve problem start thread forum create fiddle illustrates problem thanks", "d": "9/2017"}, {"body": "issue", "d": "9/2017"}, {"body": "tomkaltz please open separate issue thanks", "d": "9/2017"}, {"body": "maybe issue", "d": "9/2017"}, {"body": "appears fixed", "d": "9/2017"}, {"body": "issue branch", "d": "9/2017"}, {"body": "thanks", "d": "9/2017"}, {"body": "right freezing object longterm solution vuenonreactive vue dependency overkill comes something straight forward would nt simple check code enough allow libraries ensure things like caches wo nt observed mostly issue libraries used vue applications least", "d": "9/2017"}, {"body": "tell vue watch defineproperty depth data case want vue get notified changed etc used use case would cause error threejs tries assign values object actually another similar place plain curobj perspectivecamera uuid name perspectivecamera type perspectivecamera parent null children array lodashisplainobject curobj false vueisplainobject curobj true add another condition user disable observing improve vueisplainobject detection", "d": "9/2017"}, {"body": "thanks", "d": "9/2017"}, {"body": "recommended way reference global function fairly easy plain javascript", "d": "9/2017"}, {"body": "yup google search feature brought ticket annoying mixups vueset vfor documentation", "d": "9/2017"}, {"body": "truly vfor documentation", "d": "9/2017"}, {"body": "cc chrisvfritz let try add note support types docs api list rendering section also take look", "d": "9/2017"}, {"body": "wonder console warning would better since would tell people wrong immediately obviating need search solution also already explicit docs types support among definitely see argument one might hope iterables would work nt think currently give readers reason expect would", "d": "9/2017"}, {"body": "quite seeing argument adding support cleanly polyfilled unless missing something seems like vue approach adding reactivity arrays could easily extended sets need wrap", "d": "9/2017"}, {"body": "best guess please correctsorry wrong trickiest part wrap constructor accepts iterable nt see iterable made observable general form function ie referenceable state think generatorbased iterator example", "d": "9/2017"}, {"body": "need wrap constructor would nt passing preexisting sets vue according spec constructor immediately runs entire iterator effectively retaining shallow copy unique items returned iterator got instance nt matter whether created iterator regard created iterator different array created iterator via vue already supports", "d": "9/2017"}, {"body": "use immutable mapssets whatever data structures allow reactivity though simply whole chunk reference changes render render function computed generated array earlier better performance skips creation array mutable data structures unless find way notify vue specific changes manually would simply homebrewing yr solution", "d": "9/2017"}, {"body": "agree class nt offer advantage current js syntax vue competes react least us facebook embraced classes official syntax react devs working react becoming used writing code hence would easier transition vue although choose use plugin nt think introduction classes js mistake syntax cleaner makes dev productive makes tooling easier lures devs used oo syntax still important understand works covers also think using flow typescript highlights subtle point even languages untyped weakly typed could strongly typed compile type avoid unnecessary runtime checks problems", "d": "9/2017"}, {"body": "lures devs used oo syntax makes think working typical oop js nt actually offer ultimately unnecessarily leads call js frustration later class js putting proverbial lipstick pig embrace class keyword embrace something like stucco building instead proper building blocks language scott", "d": "9/2017"}, {"body": "claim nt behave expected specifically hatred js js frustration case familiarity mean sep pm scott notifications githubcom wrote lures devs used oo syntax makes think working typical oop js doesnt actually offer ultimately unnecessarily leads call js frustration later class js putting proverbial lipstick pig embrace class keyword embrace something like stucco building instead proper building blocks language scott receiving commented reply email directly view github mute thread", "d": "9/2017"}, {"body": "learn js understand nt hate js love scott", "d": "9/2017"}, {"body": "small sidenote confusing deal classes js trying find instance direct instance class sure way also many ways intuitively work js really class inheritance nt prototype delegation nt claim expert things camp people confused trying oo js found really oo", "d": "9/2017"}, {"body": "nt claim expert things camp people confused trying oo js found really oo exactly getting fortunate learn js ground someone told dump knew oop started enter world js object orientation absolutely prototypal delegation different world understand actually liberating scott", "d": "9/2017"}, {"body": "working js protypal world long time found class implementation liberating refactoring projects use classes issues inheritance extension identification really confused posts nt actually explain negatives classes seem classes work c used writing js sep scott notifications githubcom wrote nt claim expert things camp people confused trying oo js found really oo exactly getting fortunate learn js ground someone told dump knew oop started enter world js object orientation absolutely prototypal delegation different world understand actually liberating scott receiving commented reply email directly view github mute thread", "d": "9/2017"}, {"body": "people want classes probably never actually tried envision equivalent vue current api would look like using classes importantly would using class specced today class may may specced using stagex proposals well tried conclusion using specced features simply way provide something elegant enough end tedious constructor calls nt forget binding instance methods awkward workarounds like attaching static properties class declaration block etc etc polymer uses classes simply declare name element js export default class mynewview extends polymerelement static get return mynewview compare export default name mynewview frequently see react js export default class foo extends reactcomponent constructor props super props thisstate thisincrement thisincrementbind increment compare export default data gt foo methods increment using class class sake actually adds noise achieve amount work benefits maybe much beyond fuzzy warmness able use class represent everything fact terms ui components rarely perform direct oo inheritance time compose via mixins slots higherorder components ca nt even class react things get bit nicer class fields stage decorators stage proposals standards yet may change break even reverted defaulting requiring use vue means delegating risk every user vue nt think responsible choice optin already arguing whether oo js prototypal pretty offtopic pragmatic point view standard today good enough provide decent equivalent vue current api simple class fields decorators reach stage yes happy revisit issue think explained everything say topic locking happens", "d": "9/2017"}, {"body": "would like update little issue reason stateful filters useful id raw value need display real human readable data fetched ajax instance js bin wonder suggestion make work", "d": "9/2017"}, {"body": "filter correct abstraction trying accomplish apneadiving based description make component accepts id prop would display userpresentable value components already stateful allowing even show spinner inplace async data fetched feel free ask specifics discord forum", "d": "9/2017"}, {"body": "thanks quick answer sirlancelot", "d": "9/2017"}, {"body": "weex horrible documentation broken english", "d": "9/2017"}, {"body": "weex open source project help clean documentation", "d": "9/2017"}, {"body": "glidias simple example want create vuejs component cesium threejs etc need initialize inside component access instance later methods events nt want make viewer instance reactive lowlevel object library want smth like javascript import cesium cesium export default name cesiumviewer data return data created thiscesium new cesiumviewer el methods drawpath points actions thiscesium need way store internal variable cesium instance instance lowlevel need reactive", "d": "9/2017"}, {"body": "usecase identical deshadow lunrjs initialize lunr index object use throughout lifetime component however nt need reactive", "d": "9/2017"}, {"body": "nice", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "fixed", "d": "9/2017"}, {"body": "", "d": "9/2017"}, {"body": "hi slot attribute removing", "d": "9/2017"}, {"body": "oh see im sad", "d": "9/2017"}, {"body": "people might like remove vue dom render react component inside target element well vue destroys target element simple might think basically need make new element inside container want mount vue read thread", "d": "9/2017"}, {"body": "know vuejs must use factory function instance default props", "d": "9/2017"}, {"body": "var obj var copy objectassign obj consolelog copy", "d": "9/2017"}, {"body": "rikardocorp shallow copy objects within obj copied references", "d": "9/2017"}, {"body": "still work latest vuejs tried replacing remove delete getting parentmodelchildren delete function error jsfiddle tree view example changed dblclick call delitem method added delitem method follows methods delitem function parentmodelchildren delete thismodel", "d": "9/2017"}, {"body": "also encounter similar situation need watch multiple state change component", "d": "9/2017"}, {"body": "sirlancelot interesting solution small suggestion would use object return value since number give result things happens fast buggy example consistent example", "d": "9/2017"}, {"body": "seems stupidly obvious got anyone else gets google", "d": "9/2017"}, {"body": "want point old issue fixed long time ago working expected least since vue", "d": "9/2017"}, {"body": "using works well use case something like removing option selecting js option", "d": "9/2017"}, {"body": "think good idea computed property depends dom element attributes need manually update calculation attributes otherwise turn dependent dom attribute vue component data change computed property", "d": "9/2017"}, {"body": "meet problem vue solved add page option manifestjson", "d": "9/2017"}]