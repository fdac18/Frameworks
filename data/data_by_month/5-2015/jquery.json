[{"title": "redundant cd jquery command readmemd", "body": "line readmemd following command suggested start grunt watch part seems redundant considering previous command instructions also part readmemd uses explicitly instructing enter jquery directory cloning jquery repo", "num": "2359", "d": "5/2015"}, {"title": "deal ua string microsoft edge", "body": "noted dmethvin see since tests mostly support tests depends", "num": "2357", "d": "5/2015"}, {"title": "selector removed since", "body": "documentation clearly states deprecated since removed since however fiddle proves otherwise missing", "num": "2355", "d": "5/2015"}, {"title": "many dropdowns page throwing stack error related caching", "body": "hi recently document mode application upgraded edge achieved simple change content attribute meta tag headcshtml application working expected pages breaks many dropdowns rendered dropdown kendo ui dropdown lists record however let user select value console find error stack space issue replicated ie gt three solutions came across allowed application run smoothly keep ie developer tool opened uncheck option disable script debugging ie update jquery core library line elem elemnodetype jquerycache elem jqueryexpando elem jqueryexpando elem elem jqueryexpando first two options error still persists console dropdown working properly last solution error goes away totally also tried updating jquery versions nothing helped please provide technical assistance regards kriti", "num": "2354", "d": "5/2015"}, {"title": "callback throws error subsequent calls fire ignored", "body": "see still exists similar problem except refers api using api callback added throws error breaks subsequent calls remaining listeners call ignored maybe could introduce option control exception handling eg onerror ignorelogthrowthrowcombined current behavior completely breaks object least call surrounded trycatch cleanup rethrowing", "num": "2353", "d": "5/2015"}, {"title": "post ajax change query version", "body": "simple code datos datosid cmbregion val datosusr txtusuario val datospsw txtpassword val var ajax type post async true datatype json url ajustesajaxgrabarcorreo data jsonstringify datos error function xhr status error alert ocurrio un error error eval xhr responsetext success function data deval data derror alert dmensaje else alert datos del correo actualizados con exito ajax ajax datospsw equal change value", "num": "2351", "d": "5/2015"}, {"title": "jqueryoff working documentdelegated events", "body": "open following html file least mode see working expected handler still ps could find sandbox put example jsfiddlejsbincodepen nt support", "num": "2350", "d": "5/2015"}, {"title": "requiring jquery within reactnative get error documentcreateelement defined", "body": "problem use case use page scrape within code using jsdomjscore build document downloaded html trying pass document jquery able parse code looks like var jquery require jquery jsdom require jsdomjscore var somehtmlidownloaded hello world jsdomenv somehtmlidownloaded function errors window var jquery window something parsescrape html body throws error documentcreateelement defined occurs within sizzle method happens creates global supported document object loaded environment globaldocument assumes documentcreateelement exists tries attach document check passes found looks like temp fix able fix locally building jquery source using command altering built jquery code never assume global document require custom build js code works actual solution proper way fix check method exists deciding pass factory", "num": "2349", "d": "5/2015"}, {"title": "mouseout fired tr changing column", "body": "simple table change row colour using jquery user mouses user moves mouse column column b row event fired jsfiddle test case move mouse cell foo move mouse right cell bar row remain red tested chrome workaround apply events use instead jsfiddle", "num": "2348", "d": "5/2015"}, {"title": "jquery trying parse content response", "body": "ajax request server return content response jquery try parse content get error nt know cause response got server error server http spec say code mean content jquery must nt try parse response used jquery", "num": "2347", "d": "5/2015"}, {"title": "standardize output html method decoded", "body": "hey guys found discrepancy browsers using method today latest chromefirefox following output safari html output special characters encoded actually jquery fault see difference use property thoughts always return decoded html string would nt good happy implement enhancement ps talking jquery", "num": "2346", "d": "5/2015"}, {"title": "jquery amd directory structure nt contained", "body": "existing src file structure looks like problem main entry point needs directory core dependencies someone use requirejs without special configuration entire contents src would need within baseurl ideally structure would nested makes things lot simpler directly consume amd module simply require jquery none contents would polluting base directory", "num": "2345", "d": "5/2015"}, {"title": "hello man", "body": "add friend", "num": "2344", "d": "5/2015"}, {"title": "ie delegate vs direct radio click handlers behave differently", "body": "ie found case click handler radio input behaves differently delegated vs directlybound jquery version testing done works browsers firefox ie amp opera chrome work ie version os windows created jsfiddle using jquery note actually clicking radio option everything works using arrows select value delegated event triggered", "num": "2343", "d": "5/2015"}, {"title": "extra parameters passed triggering focus", "body": "jquery version os osx yosemite browser firefox dev trying something like calling extra parameter undefined fiddle intended behavior events passes extra parameter fine", "num": "2342", "d": "5/2015"}, {"title": "getstyles element inside shadow dom", "body": "hi using polymer application found function javascript var getstyles function elem support ie lt firefox lt ie throws elements created popups ff meanwhile throws frame elements defaultviewgetcomputedstyle elemownerdocumentdefaultviewopener return elemownerdocumentdefaultviewgetcomputedstyle elem null throws exception shadow dom element undefined adding control works well", "num": "2341", "d": "5/2015"}, {"title": "deprecate property event object", "body": "following properties also copied event object though values may undefined depending event altkey bubbles button cancelable charcode clientx clienty ctrlkey currenttarget data detail eventphase metakey offsetx offsety originaltarget pagex pagey relatedtarget screenx screeny shiftkey target view property deprecated dom specification seems need add note possible properties deprecated show message migrate cc dmethvin", "num": "2337", "d": "5/2015"}, {"title": "interference window scroll", "body": "commonly leverage css hide anything flowing outside body horizontally like body overflowx hidden noticed entirety function uses window scroll negated css property sticky header bind data header function header data size big restickheader rearrange dom elements truncated header fnrestickheader function broad essentials header data size small unstickheader arrange dom elements back first place stickyheader function var stickyheader function document scrolltop gt header data size big header restickheader bind stickyheader function scroll window bind scroll stickyheader however change scroll click get response browser", "num": "2334", "d": "5/2015"}, {"title": "different result jquerymap executing chrome firefox", "body": "tested firefox chrome developing project noticed executing jquerymap object different browsers gives different result steps reproduce create javascript object follows pay attention last position numbers numbers works fine execute jquerymap take look actual result ff chrome expected result behavior supported browser", "num": "2333", "d": "5/2015"}, {"title": "input form attribute document submit handler produce error", "body": "use input attribute also handling document event get error easy way reproduce click input get error jsfiddle since jsfiddle nt work direct link result small research showed code responsible thing returns attribute value jquery ca nt get data", "num": "2332", "d": "5/2015"}, {"title": "change licenses license packagejson follow spdx format", "body": "npm warns running jquery repo field deprecated using field spdx format npm started check recently see", "num": "2331", "d": "5/2015"}, {"title": "create tests", "body": "would stop using methods like focus tests focus tests isdefaultprevented stopimmediatepropagation", "num": "2329", "d": "5/2015"}, {"title": "change form firing checkbox checked indirectly via prop checked true", "body": "js fiddle example explanation checkbox checked indirectly calling prop checked true location form change event fire linked jsfiddle clicking gray divs fact check input however hidden div bottom page appear checking actual input boxes also true radio buttons", "num": "2327", "d": "5/2015"}, {"title": "divoffsetheight takes long time document ready big document", "body": "hi using jquery detected long documents megas html method executed document ready calculates supportboxsizing supportreliablehiddenoffsets takes long time seems calls divoffsetx takes long time one second chrome seconds intel core windows marked points lt another way calculate better performance best regards run tests need body doc ready jquery function var container div tds margindiv divreset display block overflow hidden body documentgetelementsbytagname body body return frameset docs nt body return", "num": "2324", "d": "5/2015"}, {"title": "delete generated jsonpcallbacks", "body": "assign undefined function executed ca nt properly delete properties window objects oldie issue still exist supported think discuss using method branches instead", "num": "2323", "d": "5/2015"}, {"title": "strange behavior iframes titlecased css chromewebkit", "body": "migrated thread long story short working project using jquery write dom nodes iframe found odd behavior css classes containing capitalized characters narrowed seems issue jquery function wrapped html affects versions jquery chromiumwebkitbased browsers see following jsfiddle using google chrome safari minimal testcase hopefully comments pretty selfexplanatory see basic css class called color text red generate simple class name add dom via try append another dom node containing class name breaks styles class parent dom words style definitions disappear bunch odd workarounds seem suggest might bug jquery workarounds applying delay iframe manipulation giving affected dom element additional css class names dummy attributes resorting lowercase css class names manually removing readding class name dom elements passing string directly using another nonjquery method generate element append suspect problem lies jquery method treats html text vs jquery object nt able pinpoint exactly jquery source code", "num": "2322", "d": "5/2015"}, {"title": "serialize ignores input elements type submit", "body": "try click submit button whose name attribute value comentar expected output amp textolalala amp comentarcomentar observed output amp textolalala serialize serialize exact data would sent browser form sent normally includes input elements type submit jquery ignores ca nt believe reporting bug", "num": "2321", "d": "5/2015"}, {"title": "document invocation correctness development principle", "body": "ref modulo particularly hairy backwards compatibility issues consider safe assume function input matches documented signature therefore allow functions throw exceptions rather fail silently captured somewhere first thought contributingmd", "num": "2320", "d": "5/2015"}, {"title": "singlemember read methods always return undefined empty context", "body": "derived known offenders currently returns scrolltop scrollleft width height innerwidth innerheight outerwidth outerheight", "num": "2319", "d": "5/2015"}, {"title": "add support grab div text", "body": "hey would like add support jquery grab text div something would interested coffeescript fnselecttext index el documentselection range documentbodycreatetextrange rangemovetoelementtext el rangeselect else windowgetselection range documentcreaterange rangeselectnode el windowgetselection addrange range return", "num": "2318", "d": "5/2015"}, {"title": "jsonp combination timeout causes errors", "body": "solution seems make jquery leave callback around timedout jsonp calls maybe option", "num": "2317", "d": "5/2015"}, {"title": "jquery let certain element names xml document", "body": "create element name match w regex operation fail happens jquery tries set innerhtml line constructed buildfragment", "num": "2316", "d": "5/2015"}, {"title": "combination scroll selector working", "body": "hello nt know design fact bug noticed scroll events triggered use following code created test minimum required produce html lorem ipsum dolor sit amet consectetur adipiscing elit sed tristique vehicula lobortis integer libero augue laoreet id condimentum vitae ullamcorper sed mauris maecenas malesuada et lectus ac posuere donec suscipit ullamcorper malesuada vestibulum commodo fringilla urna ut feugiat est sodales phasellus nulla lacus hendrerit vel vestibulum nec vestibulum ac orci integer vel est sagittis elementum metus ac cursus sem etiam eu quam gravida felis luctus dictum duis vel eros cursus suscipit magna porttitor risus donec vel viverra quam nec ultrices tortor nulla sem leo hendrerit non placerat eget consequat sed diam etiam placerat sem ac accumsan varius etiam ac enim eget est facilisis sagittis sed id lacus donec eget ornare risus duis lobortis leo gravida sagittis ultrices sed tellus elit tempus eu posuere id pharetra eget nibh cras dictum rhoncus lobortis maecenas ac tincidunt mi sed vel turpis dui suspendisse maximus commodo erat et ultrices suspendisse sed nisl mollis fermentum leo commodo augue vivamus ullamcorper massa et rutrum consequat div scroll function consolelog working body scroll div function consolelog working k", "num": "2315", "d": "5/2015"}, {"title": "manipulation handlers jquery vs native", "body": "demonstration different behaviours onoff methods jquery addremoveeventlistener native js native way expectable think jquery bug nt ps checked version bug", "num": "2314", "d": "5/2015"}, {"title": "event handler called already detached", "body": "event handler called already detached hello description two handlers attached document event let say click first handler detaches second click occurs handlers called though first expected tested scenario using pure js first handler called also tested mouseup mousedown events behavior pure js second handler called like browsers suppose ie issue expected behavior first handler called steps reproduce open click inside result area see output demo link sample tested versions browsers ie chrome opera firefox safari os windows thanks", "num": "2313", "d": "5/2015"}, {"title": "jquery iphone jquery window height width dont work fix included", "body": "testing seductiveappscom software iphone recently found dialog resizing routines worked background resizing uses jquery window width height well worked changing orientation damn thing twice works start page lifetime mine found years ago somewhere browserindependent window widthheight detection code var height windowinnerheight windowinnerheight documentdocumentelement amp amp documentdocumentelementclientheight documentdocumentelementclientheight documentbodyclientheight jquery version seductiveapps seductiveapps commented minutes ago oh btw fix also works chrome windows vista amp chrome android ca nt test regular browser android versions chrome ubuntu firefox windows vista likely internet explorer since windows even vista ipad air ipad dunno earlier versions ca nt test", "num": "2311", "d": "5/2015"}, {"title": "changes offset break jquery ui", "body": "contains several breaking changes jquery ui first switch return undefined hidden disconnected elements broken interactions tests second allow offest throw called window agree probably valid use begin may break lot code expecting", "num": "2310", "d": "5/2015"}, {"title": "jquery jquerymask plugin error windows phone", "body": "hello guys problem use jquerymask plugin plugin problem add comment using append html file test windows phone emulation internet explorer example jsfiddle created sample html file jsfiddle problem windows phone emulation file html teste testando function values elem object comment name datamask sizzleattr function elem name set document vars needed elemownerdocument elem document setdocument elem added condition works sizzleattr function elem name set document vars needed elemownerdocument elem document setdocument elem", "num": "2309", "d": "5/2015"}, {"title": "slidedown show stopped working elements", "body": "test case div p display none stuffthattakesaheight stuffthattakesaheight p show div slidedown changing fixes issue regression caused", "num": "2308", "d": "5/2015"}, {"title": "firefox strange behavior iframe hidden inside", "body": "see demo firefox push left button see page scrolls color changes right button button except version jquery clicking button leads unexpected behavior happens firefox jquery gt", "num": "2307", "d": "5/2015"}, {"title": "create tests event aliases", "body": "like see", "num": "2302", "d": "5/2015"}, {"title": "remove internal args amp remove", "body": "nt exposing private apis even via undocumented additional params found occurrences amp", "num": "2301", "d": "5/2015"}, {"title": "events originalevent must empty object", "body": "since must make sure objects supposed events events thus code like originalevent must replaced", "num": "2300", "d": "5/2015"}, {"title": "internal server error updating jquery", "body": "jquery updater version causes site error internal server error running wp headway layerslider wp table press wpcopyrightprotection wordfence latest ideas reverting previous jquery resolves ok site many thanks pete", "num": "2299", "d": "5/2015"}, {"title": "remove jquerystyle make jquerycss consistent remove jquerystylejquerycss", "body": "amp undocumented need expose hide plan eg amp", "num": "2297", "d": "5/2015"}, {"title": "custom queue animation promise resolved animation run", "body": "promise returned jqueryfnanimate work expected custom queue used promise resolved animation even starts following code executes functions immediately jsbin worse run custom queue even set motion initial call jsbin standard queue contrast things work expected promise resolved animation completed jsbin bug present latest versions branches", "num": "2295", "d": "5/2015"}, {"title": "document ready", "body": "hey first let thank move promises awesome would really useful document ready seems like unlikely change useful use", "num": "2293", "d": "5/2015"}, {"title": "jquery ca nt find first child form form", "body": "hello jquery ca nt select first form inside form select second one please see jsfiddle explains every thing", "num": "2291", "d": "5/2015"}, {"title": "update requirejs dep available", "body": "causes small issue build version danger breaking things future aware issue update requirejs accordingly example fix ladnded still see incorrect output ref cc jrburke", "num": "2290", "d": "5/2015"}, {"title": "remove jquerysupport", "body": "deprecated since object used support tests would nt want remove think need figure way remove leave tests", "num": "2289", "d": "5/2015"}, {"title": "deprecated methods", "body": "guess time move module add warnings update docs", "num": "2288", "d": "5/2015"}, {"title": "remove deprecated event aliases", "body": "deprecated since ref", "num": "2286", "d": "5/2015"}, {"title": "effects finish call progress", "body": "hi see difference darkest blue block modified callback callback called last time value force end animation agree problem found put line fix problem", "num": "2283", "d": "5/2015"}, {"title": "css method returns incorrect backgroundcolor selectbox options firefox", "body": "firefox jquery method returning correct rgb value options select box works expected chrome obtaining color via native property works browsers though jsfiddle tested chrome version firefox version developers", "num": "2282", "d": "5/2015"}, {"title": "new feature pr proposal tree traversal", "body": "full proposal short would get first element found dom tree wo nt cut method tree traversal category use quite often suppose might good use feature sure elegant would javascript similar function work around found thanks answer question compatible using universal selector also pretty sure nt best implementation need works love hear comments improve well", "num": "2280", "d": "5/2015"}, {"title": "domcontentloaded handlers fail fire jquery loaded opera", "body": "weird interplay jquery standard listener registration issue manifests opera tested mac appear affect either stable dev channels safari chrome firefox jquery nt need used fact even used test case simply including jquery page specific point causes error removing jquery fixes issue steps reproduce add standard listener removes event listener appends iframe include jquery jquery must loaded listener per register listeners listeners never fire listeners registered jquery loaded nt matter long jquery listeners loaded offending listener fail fire minimal test case uses gist offending listener step includes jquery uses js pane register additional listener never fires minimal test case using jquery minimal test case using jquery", "num": "2279", "d": "5/2015"}, {"title": "disabled selector inconsistent different browsers", "body": "input disabled parent fieldset selector behaves differently ie version browsers browsers selector indicated input disabled parent fieldset ie say disabled first thought sizzle falling back qsa selector available working correctly ie qsa works correctly seems also related documentation issue docs say always checks disabled prop see jqueryapijquerycom", "num": "2275", "d": "5/2015"}, {"title": "odd using attr checkbox works first time", "body": "checkbox test ready function checkcontrol click function odd works first time whey click allnone input namecheckitems attr checked thischecked know work still code confused input namecheckitems prop checked thischecked allnone", "num": "2274", "d": "5/2015"}, {"title": "want submit pull request new feature", "body": "trouble finding proper process read docs still got clue better proceed context proposal please keep issue topic help future people", "num": "2273", "d": "5/2015"}, {"title": "jqueryfnjquery might indicate", "body": "line could instead current", "num": "2269", "d": "5/2015"}, {"title": "longer fails gracefully null undefined", "body": "isarraylike looks like javascript function isarraylike obj var length objlength type jquerytype obj looks like javascript function isarraylike obj produces error similarly causes specifically fail accidentally put numerical value sure issue nothing failed accidentally number caused tests fail fixed thought mention", "num": "2267", "d": "5/2015"}, {"title": "jsdom dropped support node nodeiojs smoke test needs modification", "body": "use jsdom node smoke tests unfortunately old version nt install iojs new one nt support node use something else", "num": "2266", "d": "5/2015"}, {"title": "remove ready event", "body": "", "num": "2264", "d": "5/2015"}, {"title": "html htmlstring wrong parse", "body": "attached example div inside p", "num": "2263", "d": "5/2015"}, {"title": "one referenceerror typeerror breaks document ready prevents ever firing", "body": "jsfiddle reproduction single exception thrown inside callee event never fire become entirely unresponsive new attempts call similar event bindings like click one callee list throws exception later callees wo nt called example however event nt shut become totally unresponsive time expected behaviour callee handled isolation one breaks throws exception break every later call time alternately expected behaviour could exactly working nt think documented left us hunting hours today", "num": "2262", "d": "5/2015"}, {"title": "could contains support regex solutions jquery", "body": "hi guys want get list elements whose text matches given pattern wrap highlight useful feature sure jquery instead writing would prefer writing", "num": "2261", "d": "5/2015"}, {"title": "javascript execution inmemory element", "body": "exactly sure right repository post issue please help direct bug filed might firefox bug think source jquery starting noticed inmemory element aka attached dom perform javascript execution cases nt happen javascript executed element attached dom thus making potential source xss injection attacks reproduces firefox using jquery repro chrome minimal repro script jquery injection example jquery script second repro using elementappend jquery injection example jquery script javascript equivalent example perform injection", "num": "2260", "d": "5/2015"}, {"title": "problem calling css parent within frame", "body": "hi well trying someelement css display someelement returned parent window passed iframe via function call firefox returns undefined due following code jquery getstyles function elem support ie lt firefox lt ie throws elements created popups ff meanwhile throws frame elements defaultviewgetcomputedstyle elemownerdocumentdefaultviewopener return elemownerdocumentdefaultviewgetcomputedstyle elem null return windowgetcomputedstyle elem null iframe firefox elemownerdocumentdefaultviewopener set elemownerdocumentdefaultviewparent suggest replace", "num": "2259", "d": "5/2015"}, {"title": "extend concat arrays", "body": "", "num": "2258", "d": "5/2015"}, {"title": "data align data accessors ultimate embrace direction", "body": "camelcasing always problematic attempts work around camelcasing whenever possible always caused problems decided always camelcase implementation align dataset spec makes everything lot simpler made separate issue broad enough scope pertains keys dashes digits also fixed separate commit solution laid comment per want embrace option camelcase attributes data object first access set camelcase key setter camelcase added keys bulk setter look camelcase key getter ignore direct manipulation operations", "num": "2257", "d": "5/2015"}, {"title": "load parts wanted", "body": "typical component require need model becoming familiar feels like way becoming standard current jquery supports amd commonjs lacks ability split let say know two jquery plugins need require basic dom manipulation setting attributes eventing click keydown event would need approximately jquery offered looking folder noticed actually uses load dependencies question rewrote file liking loaded modules wanted would result smaller jquery footprint currently using webpack project already managed bring bootstrap couple kbs excluding features want want jquery especially bootstrap reduced realized also need entire potential jquery instance see bootstrap would use ajax functionalities kind regards ingwie", "num": "2256", "d": "5/2015"}, {"title": "rearrange animation options logic", "body": "cc gnarf uses undocumented use fact manipulate options sending preserved original move manipulation fact claims", "num": "2255", "d": "5/2015"}, {"title": "jqueryfnmap inconsistent standard", "body": "currently jquerymap takes callback executing dataset index first argument value second per javascript array prototype map function two swapped reason jquery consistent javascript standard", "num": "2253", "d": "5/2015"}, {"title": "ajax callbacks triggered chrome", "body": "trying download header mjpg stream see stream available following code field refers mjpg stream works like charm jquery jquery chrome safari versions callbacks triggered query finishes tests done windows", "num": "2252", "d": "5/2015"}, {"body": "agree problem good repro sure reasonable way fix jquery even sure dom mutation observers help happen fact probably ca nt tell whether anything removed focus element removed nt appear focus event fires removed element blurs solution think update dom would see subtree affected fake whole focusfocusin sequence focus management ugly bugprone thing sure want go plus could serious performance issues possibilities possible work around app general seems like bad idea remove focus element user may interacting ideally firefox would fix bug pinging miketaylr bring loop", "d": "5/2015"}, {"body": "thanks ping dmethvin ideally someone find site two broken firefox due lack focusinfocusout make better case fixing", "d": "5/2015"}, {"body": "miketaylr thing known events widely supported ppl use jquery use important implement events please add properties window object since way correctly check support events important thing please follow spec chrome implementation", "d": "5/2015"}, {"body": "maybe something like", "d": "5/2015"}, {"body": "thank", "d": "5/2015"}, {"body": "yeah seems incorrect remove could report issue documentation issue code issue", "d": "5/2015"}, {"body": "mzgol oh bad thanks done idea long words still use current projects", "d": "5/2015"}, {"body": "bramvanroy anyways better use deprecated feature deprecated reason", "d": "5/2015"}, {"body": "changed behavior although nt documented removed completely nt use find needing use nondebugging purposes generally means api plugin needs selector passed reliable way know string selector represents current set elements jquery set", "d": "5/2015"}, {"body": "thank opening issue think needs debugged forums jquery irc channel determined issue jquery core please open new issue reduced test case help us assess potential problems", "d": "5/2015"}, {"body": "known issue point around long arguably feature cf jaubourg comments related tickets could use like would require careful consideration impact alreadylong list options would consider pull request inclined direct everyone towards native promises full deferreds whose interoperable jquery method exhibit seizing behavior case handled", "d": "5/2015"}, {"body": "imho intended behavior callbacks catch exceptions like recommend using deferreds wrapping code trycatch manually", "d": "5/2015"}, {"body": "sorry sure resolve problem deferreds problem see callback function executed call effect used api register listeners called specific events need listeners called every time called first time also need registered listeners called registered one throws errors one throws error rethrows error ok impact listeners subsequent calls wrapping listener trycatch would ugly cause lot intention behavior really desired maybe documentation improved tell users error handling", "d": "5/2015"}, {"body": "sorry sure resolve problem deferreds problem see callback function executed call effect right need specifically use newly interoperable method need listeners called every time called first time also need registered listeners called registered one throws errors wrapping listener trycatch would ugly cause lot jquery deferreds offer solution seems fit case perfectly option released version need nt ugly though could put wrapper function like attempt even", "d": "5/2015"}, {"body": "feel like leave documenting exception behavior needed encourage standardsbased instead", "d": "5/2015"}, {"body": "ok thanks lot understand mean nt aware requires jquery also thought wrapping callback function like suggested makes removing callback hard since would remove correct wrapper function callback would remember wrapper callback function think live without fix justed thought might problem know yet understand reasons leave appreciate would update documentation think best use api build sth", "d": "5/2015"}, {"body": "thank opening issue suspect duplicate", "d": "5/2015"}, {"body": "jsfiddlejsbincodepen nt support create test case jsbincom remove part url load example url editing might break url viewing work", "d": "5/2015"}, {"body": "thank opening issue problem named function expressions nt work place function declaration binding works", "d": "5/2015"}, {"body": "completeness found article describes exactly wrong creates issue", "d": "5/2015"}, {"body": "also good place signature nt need know function name details way", "d": "5/2015"}, {"body": "dmethvin think meant events namespaces like document clickmynamespace", "d": "5/2015"}, {"body": "nope meant", "d": "5/2015"}, {"body": "dmethvin suggestion unsubscribes handlers case need resubscribe back technique complicates things ps explain sort logic maybe suggest elegant way javascript document click mybutton function handler e var button epreventdefault var promise getsomepromisethatrunsasync promisethen function need undo epreventdefault need native button click since submits form post action handled serverside alternative way javascript document click mybutton function handler e var button buttondata bypassclickhandler return epreventdefault var promise getsomepromisethatrunsasync promisethen function need undo epreventdefault need native button click since submits form post action handled serverside", "d": "5/2015"}, {"body": "dmethvin suggestion unsubscribes handlers case need resubscribe back technique complicates things test case remove handler event handler might mean different things code trying inject code existing page nt control reason think something like", "d": "5/2015"}, {"body": "thanks report problem many libraries shimming core apis poorly react native may turn checking enough another library shims one nt shim necessary apis sure fix properly within factory reactnative create global document lacks basic methods", "d": "5/2015"}, {"body": "thanks digging issue good reason reactnative global variable single key need remove altogether added workaround early project needed anymore", "d": "5/2015"}, {"body": "nt seem like something support jquery library built work html dom expects basic document methods exist fyi removes ajax modules ajax folder well goes would make custom command lot shorter", "d": "5/2015"}, {"body": "anything desired behavior nt fail silently", "d": "5/2015"}, {"body": "ok since vjeux confirmed sth react native amp fix side going close issue thanks everyone input", "d": "5/2015"}, {"body": "thanks replies mzgol vjeux timmywil vjeux saying longer needed set global best solution get rid global document reactnative create issue repo", "d": "5/2015"}, {"body": "yes seems", "d": "5/2015"}, {"body": "use works expected", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "thanks opening issue drop accept header since content sure need set", "d": "5/2015"}, {"body": "copied code used case must include accept header server work relevant issue", "d": "5/2015"}, {"body": "drop accept header since content sure need set response may conditional entirely reasonable request returns either data success based original payload", "d": "5/2015"}, {"body": "entirely reasonable request returns either data success based original payload fair enough however unable reproduce jquery git", "d": "5/2015"}, {"body": "make server return contenttype header return", "d": "5/2015"}, {"body": "hunsu sure sure server nt returning content", "d": "5/2015"}, {"body": "ie empty string still content message body", "d": "5/2015"}, {"body": "test perhaps test using wireshark ca nt right", "d": "5/2015"}, {"body": "response may conditional entirely reasonable request returns either data success based original payload however ca nt expect since empty string content would invalid json server responds content something wrong server responds content still something wrong content invalid json", "d": "5/2015"}, {"body": "used wireshark see response server server returned null request body nt know jquery error message says try parse empty string pumpuli yes server something wrong question jquery try parse content included content response", "d": "5/2015"}, {"body": "means content browser free stop reading response headers end assuming body nt check may happening anything gets jquery definity incorrect return body jquery optimized workflow correctly configured servers incorrectly configured ones declare datatype text parse response expect json", "d": "5/2015"}, {"body": "problem code nt ask jquery parse response anyway", "d": "5/2015"}, {"body": "parsed response server told returns json need either fix server enforce datatype text", "d": "5/2015"}, {"body": "correct status say non content response parse response", "d": "5/2015"}, {"body": "response server incorrect assuming means response body valid json may lot invalid server configurations cant workaround server bug jquery easily workaround wrote", "d": "5/2015"}, {"body": "http spec say http nt body jquery must try parse feature live jquery nt respect http spec problem", "d": "5/2015"}, {"body": "http spec nt say anything parsing body well might well return text always beyond spec imo also according spec contenttype entityheader field indicates media type entitybody sent recipient case head method media type would sent request get set response nt contain data one exception head method response nt contain data definition argue server config invalid jquery nt specify behavior invalid input anything may theoretically happen", "d": "5/2015"}, {"body": "http spec say http nt body jquery must try parse spec nt say however spec say response must include messagebody thus always terminated first empty line header fields", "d": "5/2015"}, {"body": "case think actually helpful jquery tried parse response failed uncovered server issue leave asis", "d": "5/2015"}, {"body": "think right chromefirefox case think means include html tags values need encoding opinion afraid expressions may rude hard read good english thanks", "d": "5/2015"}, {"body": "thanks report examples valid semantically identical allows quoted attribute values contain character references arbitrary unescaped lessthan greaterthan considering cost performance library size parse normalize wo nt pursuing effort try force attribute values particular quoting style", "d": "5/2015"}, {"body": "understand makes sense", "d": "5/2015"}, {"body": "thank opening issue however nt released beta yet jquery folder src folder installing jquery", "d": "5/2015"}, {"body": "timmywil ah updated file tree ignore pulled repo looking adding pull request add brocfile exporting amd version jquery part", "d": "5/2015"}, {"body": "gotcha thanks", "d": "5/2015"}, {"body": "arises combination browser bugs lies code guard problem firefox regarding delegated rightclick events bubble tbh sure firefox still problem make worse use arrow keys example firefox chrome event says left mouse button clicked lie ie says button clicked true triggers firefox bug check think fix changing perhaps guard removed completely firefox fixed bug long ago btw ca nt find standard defines happens arrow keys radio button group", "d": "5/2015"}, {"body": "thanks quick response played code using everything appears work expected create local patch purposes overrides helper method added milestone", "d": "5/2015"}, {"body": "intended known nt applied fix yet size complexity proportion magnitude resolved issues", "d": "5/2015"}, {"body": "hmm sure necessary nt hurt copy", "d": "5/2015"}, {"body": "moved tickets apimigrate", "d": "5/2015"}, {"body": "remember keyboardevent mouseevent pretty screwy keyboard event supposed use instead long time preferred property copy normalized event present neither created another confusing set properties mouseevent also took years browsers get right supports natively time two properties screwed browsers decided normalize docs say nt copy lot people may using already nt care could deprecate migrate warn better choices problem would compat branch needs never normalized andor also note may high perf penalty see events like mousemove mouseover happen lot", "d": "5/2015"}, {"body": "copying already causes performance penalty firefox cases see fitzgen made aware nt time measure exactly slowing everything linked pr jquery patched use getters instead copying significantly speeds firefox understand", "d": "5/2015"}, {"body": "probably calculation force layout changing getter avoids long user event handler nt ask since deprecated properties nobody use supported present handy perf standpoint would best deprecate well even shim getter poison use", "d": "5/2015"}, {"body": "well deprecated may cause performance penalty could remove favor keeping deprecated perf issues bad thing especially bad parties patch code make palatable", "d": "5/2015"}, {"body": "normally copying bad forces style recalculation layout offsetposition properties see although frequent events mousemove copy loop pretty significant even without relayout", "d": "5/2015"}, {"body": "think deprecate feel comfortable removing market share low enough drop", "d": "5/2015"}, {"body": "although frequent events mousemove copy loop pretty significant even without relayout right pr changing copying multiple purelyjs stand point replacement slower seems actually reading property must causing perf penalty think deprecate feel comfortable removing market share low enough yeah causing perf issues might example change copying using getters cases supported would require actual examples test though guessing", "d": "5/2015"}, {"body": "browsers truly support seems like could define load time lazycopy lazyevaluate everything removes copy overhead event delivery complications code may define time execution expect next event delivery reflect changes would good deprecate behavior well could optimize future", "d": "5/2015"}, {"body": "like dmethvin said could prototype moves performance issues slow getter style recalc gettime also removes fix loop makes false though nt think see poc commit handled issue mentioned dmethvin", "d": "5/2015"}, {"body": "hey jbedard jbedard guy something smilecat love way handles dynamic adds fixhooks would able add perf test wondering fast enough", "d": "5/2015"}, {"body": "thanks opening issue please provide reduced test case help us assess problem", "d": "5/2015"}, {"body": "internally uses iterate object according spec order iteration object defined mechanics order enumerating properties specified must conform rules specified therefore rely order jquery nothing help", "d": "5/2015"}, {"body": "see also note microsoft stop supporting january really worth lot additional heroics point", "d": "5/2015"}, {"body": "dmethvin see point still think would nt hurt change maybe even wo nt make attribute suddenly work allow create solutions without hacking missing something", "d": "5/2015"}, {"body": "might prevent error wo nt make form elements work string property though big fan silent failure really nt support form features anyone wants support need deal", "d": "5/2015"}, {"body": "reason decide go using attribute know implement solution make work oldie nt know moment jquery throw errors instead planned polyfill dig jquery code understand error comes", "d": "5/2015"}, {"body": "replace prophook fix exactly analogous", "d": "5/2015"}, {"body": "oh true nt even think using prophook", "d": "5/2015"}, {"body": "timmywil changes necessary apart modifying works release script", "d": "5/2015"}, {"body": "nope sufficient copied release script", "d": "5/2015"}, {"body": "pr", "d": "5/2015"}, {"body": "see also", "d": "5/2015"}, {"body": "gon na log ticket desc need", "d": "5/2015"}, {"body": "supposed events fired browser direct user interaction elements", "d": "5/2015"}, {"body": "tried recent version code looks different performed asneeded basis", "d": "5/2015"}, {"body": "hi refer jquery version using version compatible old browsers", "d": "5/2015"}, {"body": "dave meant jquery micha\u0142 go\u0142\u0119biowski", "d": "5/2015"}, {"body": "ok tested latest version problem similar call divoffsetwidth takes seconds line supportinlineblockneedslayout val divoffsetwidth", "d": "5/2015"}, {"body": "rubenortizgonzalez thank making us aware could copy test case us", "d": "5/2015"}, {"body": "hi timmy impossible copy file jsbin shared file source testhtml file references jquery version modified print console times document ready functions", "d": "5/2015"}, {"body": "ing function makes semantic sense deoptimize objects properties something keep mind", "d": "5/2015"}, {"body": "pure guessing first object already deoptimized since lot bounded properties second special host object might another type optimizations play would nt rely assumptions proved performance benchmarking", "d": "5/2015"}, {"body": "timmywil dmethvin jaubourg need opinions also would like know perception nt change", "d": "5/2015"}, {"body": "agree pretty magic global doubt optimization comes play would make sense create single object initialization put jsonp callbacks would work since ing properties regular object rather global", "d": "5/2015"}, {"body": "would mean would expose three globals soon dead could eliminate cool although seems would need one browser", "d": "5/2015"}, {"body": "like idea using means delete every browser except receives change", "d": "5/2015"}, {"body": "reduced test case also able reproduce opposite text outside iframe red text inside iframe red", "d": "5/2015"}, {"body": "also created another test case use delay nt problems delay get different results differents runs hope helps", "d": "5/2015"}, {"body": "interesting switching order affects outcome outcome become inconsistent small settimeout intervals wonder kind race condition", "d": "5/2015"}, {"body": "right think problem chrome browsers bug nt happen tried replicate problem using native methods unfortunately could nt try later using jquery internal code see exactly causes chrome fail case fact passing string directly solves problem might mean possible add something avoid bug", "d": "5/2015"}, {"body": "technically invalid trying append nodes foreign document failure arguably bug chrome especially behaves unpredictably face timeoutsbreakpointsetc definitively one jquery explicit ownerdocument corrects issue", "d": "5/2015"}, {"body": "thanks help close things think something worth reporting webkitchromium teams fine changing approach application wonder behavior still investigated", "d": "5/2015"}, {"body": "think definitely weirdness could clean", "d": "5/2015"}, {"body": "documentation says note successful controls serialized string submit button value serialized since form submitted using button dup latter discussed discoverable via google", "d": "5/2015"}, {"body": "submit button value serialized since form submitted using button ok wrong design successful control must defined within form element must control name however form contains one submit button activated submit button successful definition form one submit button succesful says activated submit button nt say anything submitted using button submit event triggered clicking given submit button ca nt see way consider activated submit button", "d": "5/2015"}, {"body": "serialize using code button pressed wrong button press triggered submit event button press triggered code need add serialized input nt", "d": "5/2015"}, {"body": "documentation says method tickets explain reasoning submit button activated call within jquery besides would unfair change behavior penalize people read documentation", "d": "5/2015"}, {"body": "documentation says method got documented sorry missing yet behavior wrong tickets explain reasoning wrong submit button activated call serialize within jquery unless call listener triggered pressing button besides would unfair change behavior backward compatibility argument indeed considered whether fix behavior break bc keep wrong inconsistent behavior sake bc seen bc broken past jquery favour improved consistency also easy incur case change would actually harm though course possible penalize people read documentation indeed could penalizing people read documentation worked around incorrect documented behavior see", "d": "5/2015"}, {"body": "unless call listener triggered pressing button would jquery know opposed called way show code", "d": "5/2015"}, {"body": "omg reason aggressive dmethvin modify methode impossible linked event include something event maybe possible new look", "d": "5/2015"}, {"body": "aggressive frankly nt think one aggressive", "d": "5/2015"}, {"body": "modify serialize methode impossible may missing something could nt documentactiveelement used inside seriazize nt example demonstrate would work", "d": "5/2015"}, {"body": "activeelement current dom element actually focus jquery serializing form suppose ca nt guaranty focus still submit button", "d": "5/2015"}, {"body": "nt example would nt work either would", "d": "5/2015"}, {"body": "hmm yep use activeelem callback depending event callback call methode want callback", "d": "5/2015"}, {"body": "course call anything else submit event ok submit button included serialization automatically succesful input element definition question whether using activeelement reliable crossbrowser worth investigating issue reopened also turns work cases pretty sure ways explored issue always dismissed non existing also according definition successful given standard one submit button always included unless caveat seems trivial", "d": "5/2015"}, {"body": "question whether using activeelement reliable mean whether three cases submit button triggering event triggering serialize may active element reason", "d": "5/2015"}, {"body": "mean whether three cases submit button triggering event triggering serialize may active element reason extremely common occurrence forms frequently submitted via form controls see", "d": "5/2015"}, {"body": "extremely common occurrence forms frequently submitted via form controls occurrence talking sending form via form controls either one submit button case according definition succesful controls given standard submit button included trivial implement serialize search submit buttons inside form check one b one sent form via another form control none buttons succesful hence ok included serialize actually seems discrepancy definition succesful standard cited browser behavior least chrome chrome sending form without javascript sends first submit input element send form hitting enter correct behavior case definition standard either unclear missing something serialize behave trivial matter finding first submit element none activeelement", "d": "5/2015"}, {"body": "occurrence talking actually said call anything else submit event ok submit button included serialization automatically succesful input element definition since impossible know inside submit event suggested use detect implicit form submission shows check viable solution", "d": "5/2015"}, {"body": "since impossible know inside submit event suggested use documentactiveelement detect implicit form submission shows check viable solution meant submit event triggered clicking submit button implicit submission see last comment", "d": "5/2015"}, {"body": "implicit submission see last comment mmm sorry alone nt enough distinguish whether inside submit event impossible know inside submit event nt bit fast declaring impossible detect submit event right nt possible jquery store variable reference form jquery intercepts submit event userdefined listeners added via jquery executed reset variable null whatever jquery finishes processing submit event serialize would able check whether called within submit event guess trivial impossible", "d": "5/2015"}, {"body": "value notoriously unreliable set consistently browsers even throws errors versions ie jquery core jquery ui incorporate workarounds plus cases like detached elements crossframe access value wo nt correct available huge amount magic apply get value cases instead simple note docs saying nt add add big list conditions fail browser issues nt see worth inconsistency especially people nt read existing docs making complicated wo nt help things looking simple workaround put hidden input form namevalue pair want send submit button nt give submit button name wo nt successful submitted user without javascript", "d": "5/2015"}, {"body": "value documentactiveelement notoriously unreliable ok solution detect submit event right nt possible jquery store variable reference form jquery intercepts submit event userdefined listeners added via jquery executed reset variable null whatever jquery finishes processing submit event serialize would able check whether called within submit event looking simple workaround nt hoping better jquery one would nt need workaround order form guaranteed serialized always exactly way would sent browser understand lack mostly javascript fault apparently nt provide method obtain obliging ie jquery write scratch code serialization mimic browser would", "d": "5/2015"}, {"body": "seems like good place", "d": "5/2015"}, {"body": "boo plain objects right", "d": "5/2015"}, {"body": "following saying outerinner widthheight ones probably one pr scroll ones another think two tickets atomized issues helpful tracking progress helpful triaging broad issues guidelines specific actions need taken moved roadmap make sense", "d": "5/2015"}, {"body": "think runs risk incompleteness know eight methods need change might without tracking ticket could land fix scroll methods fix dimension methods erroneously consider work done really nt want look multiple places understand going", "d": "5/2015"}, {"body": "one place roadmap tracking instead ticket item roadmap need removed tickets closed leave sure done purpose another advantage longer leave tickets lying open unsure done ambiguity issues combined roadmap incompleteness", "d": "5/2015"}, {"body": "also roadmap keeping updated broader issues gives us one place see going without sifting issues know found many times looking one ticket explains ones proposing put one place", "d": "5/2015"}, {"body": "roadmap plus github issues makes two places mention former repository makes project even less accessible wouldbe contributors correctable though willing go honestly nt see advantage adding new issue tag", "d": "5/2015"}, {"body": "nt participate related ticket sorry question returned value sometimes known getters return nothing return believe done jquery first place better corresponds dom methods like common many languages although methods usually deal objects hand easy especially since return value already could correlates ecma spec jquery domcentric might make sense align case would like us documentally establish couple years would nt face opposite ticket would propose always return instead brendaneich rwaldron please help us", "d": "5/2015"}, {"body": "markelog dom arguments essentially nt apply ticket calling methods empty collections eg", "d": "5/2015"}, {"body": "see difference nothing return returned", "d": "5/2015"}, {"body": "difference context collections length valid input therefore defined output invalid context example undefined output might even throw exceptions", "d": "5/2015"}, {"body": "design documents think prefer see wiki like adding new features could imagine document described ideals jquery api calls behave including definition happen empty context set perhaps could also document apis know consistent philosophy reasons backcompat old jquery versions conformance output etc github issues nt good generating roadmap us way trac maybe missing open issues milestone report even sort milestone suppose future best obviously finegrained future milestones want back subject ticket seem like benefit consistency outweigh work potential compat breakage seems like one weighed separately given separate ticket ultimately thrown vagaries jquery code plugin ecosystem see badly break web", "d": "5/2015"}, {"body": "right really rather use issues anymore let use roadmap please atomize issues", "d": "5/2015"}, {"body": "way add note roadmap represents contributingmd gone issues updated", "d": "5/2015"}, {"body": "difference context collections length valid input function return nothing return difference context collections length valid input therefore defined output invalid context scrolltop example undefined output might even throw exceptions plain objects supported sure undefined output call nt makes sense inputs supported could imagine document described ideals jquery api calls behave including definition happen empty context set would awesome", "d": "5/2015"}, {"body": "function return nothing return nothing return calldependent eg currently returns returns recently tried change return values invalid input unspecified trying establish consistency around returning plain objects supported sure undefined output call nt makes sense inputs supported plain objects supported present operations supported plain javascript objects wrapped jquery see also", "d": "5/2015"}, {"body": "plain objects supported present operations supported plain javascript objects wrapped jquery data prop trigger triggerhandler see also jqueryapijquerycom hm missed link okay nothing return calldependent eg jquery body val currently returns prop nonexistent returns undefined recently tried change attr nonexistent undefined null asking returns asking return return values invalid input unspecified trying establish consistency around jquery getter returning undefined whatever getters would return think follow general idea explain specifically empty string etc right seems trading one value another without reason", "d": "5/2015"}, {"body": "asking returns asking return still calldependent maintain return like dom return like javascript property accessors even though backwards compatibility makes change difficult right seems trading one value another without reason methods return etc trading values bringing exceptions line", "d": "5/2015"}, {"body": "trading values okay changing return values phrasing suiting think need verbose explanation one value follow general principal recommended plugins", "d": "5/2015"}, {"body": "thanks opening issue think mean like get selected text case think best left plugin like get text content already done using", "d": "5/2015"}, {"body": "provide test case jsbincom jsfiddlenet showing mean", "d": "5/2015"}, {"body": "sure see write timeouttester purpose ticket maybe jsbin reproduce issue yes", "d": "5/2015"}, {"body": "thanks opening issue confused looks like right behavior since done called timeout", "d": "5/2015"}, {"body": "problem gets called timeout nt exist gets removed timeout period likely solution keep callback around timeout replace", "d": "5/2015"}, {"body": "oh oh sorry", "d": "5/2015"}, {"body": "think decision remove timedout jsonp handlers made haste mistaken gives user nice warning script errors least ability keep timedout jsonp handlers around optional move reopen application throws errors way handle using forked version jquery", "d": "5/2015"}, {"body": "haste discussed two years see discussions tickets fighting death used throws errors way handle using forked version jquery argument couple times summoned browser vendors showed way inconsistent bunch things maybe another life", "d": "5/2015"}, {"body": "polling every seconds jsonp calls continue time would pretty large pile uncollected function callbacks might ever collected understand firefox correct", "d": "5/2015"}, {"body": "dmethvin like suggestion bug affects chrome well tested ie", "d": "5/2015"}, {"body": "dmethvin said three years ago chrome affected since opera dropped engine time ago option always generates error supported environments documentation outdated yeah would pretty large pile uncollected noop function callbacks might ever collected yes thing happens instead proposed value would point function point thing discuss seems proposed solution would eat less memory secrettriangle good suggestion although obvious drawbacks case jsonp request returns something js js executed callback would throw error function would never collected workaround using jsonpcallback name let jquery generate", "d": "5/2015"}, {"body": "still seeing", "d": "5/2015"}, {"body": "works fine issue latest production version versions earlier", "d": "5/2015"}, {"body": "ok wanted sure fixed next major release", "d": "5/2015"}, {"body": "forgot mention tested osx chrome version k", "d": "5/2015"}, {"body": "event nt bubble elements ca nt used delegated events mentioned documentation browsers load scroll error events eg element bubble", "d": "5/2015"}, {"body": "dupe", "d": "5/2015"}, {"body": "mzgol ok true solution click event must handled next listeners", "d": "5/2015"}, {"body": "actually dup please comment want get reopened let avoid spreading discussion accross multiple issues", "d": "5/2015"}, {"body": "thank opening issue exists", "d": "5/2015"}, {"body": "dup", "d": "5/2015"}, {"body": "see jquery love jquery wo nt leave even could guys sources utterly unreadable outsiders like p ca nt check problem remains sorry try", "d": "5/2015"}, {"body": "thanks opening issue please provide reduced test case help us assess issue issue already addresses issue please close ticket duplicate thanks", "d": "5/2015"}, {"body": "first case think accurate retrieving offset disconnected element nt make much sense think second support failing silently returning undefined", "d": "5/2015"}, {"body": "nice thing returning naive caller expecting object die code easier debug nt document returns anything object okay since unhandled cases mentioned docs", "d": "5/2015"}, {"body": "failures stuff like element window offset use method return context collection empty part larger story though kinds things expect see failures mild api misuse easy consumers fix serious valid vs invalid input code want know end backing every change", "d": "5/2015"}, {"body": "serious valid vs invalid input code want know end backing every change case returning undefined still one way handle invalid input everything needs throw error right", "d": "5/2015"}, {"body": "yes things like agree easy fix fix regardless outcome however problem pretty buried code hard track", "d": "5/2015"}, {"body": "also return disconnected hidden nodes would throw window return undefined cases returning undefined invalid case would seem better", "d": "5/2015"}, {"body": "case returning undefined still one way handle invalid input everything needs throw error right nt want handle invalid input creating errors exposing assuming input valid check conditions tell consumers avoid creating words input invalid explicitly check", "d": "5/2015"}, {"body": "input invalid explicitly check see point", "d": "5/2015"}, {"body": "return undefined disconnected hidden nodes would throw window well looking side slightly different disconnected elements still window current behavior reflects native way", "d": "5/2015"}, {"body": "good point arschmitz guess consider element valid input output literally layout boxes", "d": "5/2015"}, {"body": "another side release yet current stable jquery work version ui sure really care though", "d": "5/2015"}, {"body": "bright side returning makes error happen caller side expecting minor plugin rare user mistake say let leave asis breaking current past ui gon na make mess", "d": "5/2015"}, {"body": "failures stuff like element window offset use element offset method return undefined context collection empty code arschmitz showed simplified reality happens determining element operate default element window later get offset element getting error already guards windows parts code adding another one fine", "d": "5/2015"}, {"body": "also nature implementation nolayout elements ignored truly invalid input output would indistinguishable valid input since returns coincides elements located origin", "d": "5/2015"}, {"body": "scottgonzalez yeah like said think fix regardless core backs change", "d": "5/2015"}, {"body": "like point disagree invalid input handled problem figuring much change right without causing much ruckus would nt interpret change policy change applied throughout codebase arschmitz breaking change noticed far regards well previous versions ui work jquery", "d": "5/2015"}, {"body": "timmywil yes think breaking change within actual code point scottgonzalez aware others think couple come got backed", "d": "5/2015"}, {"body": "sorry came across strong thinking precisely changes got reverted feedback jquery ui valuable cases see us expanding domain valid input support broader use maybe one would nt consider unreasonable ui lt ui break core without migrate purpose migrate opinion allows us flexibility move forward preserving temporary backwards compatibility nt want see us stuck particularly important still healthy downstream consumer happens currently misuse functionality", "d": "5/2015"}, {"body": "saying migrate fix least right", "d": "5/2015"}, {"body": "would nt consider unreasonable ui lt ui break core without migrate agreed handle ui regardless also push support core history going back unexpected releases get support new versions core since eases upgrade path users", "d": "5/2015"}, {"body": "arschmitz", "d": "5/2015"}, {"body": "say caused much problems ui cause lot problems userland would go safest way possible blog post explicitly mention incorrect use api document yeah sounds weird put warnings migrate next major technically speaking absolutely right practically way dangerous taste", "d": "5/2015"}, {"body": "record breaking things mobile well though nearly extent", "d": "5/2015"}, {"body": "arschmitz would mobile breakages addressed stands", "d": "5/2015"}, {"body": "behavior invalid input undefined since getting offset window defined behavior may throw error may going let migrate take one turns causes much uproar user code address beta release", "d": "5/2015"}, {"body": "think letting migrate handle seems like good way go agree calling window make sense timmywil believe addressed us gabrielschulhof would know better since debugged issue submitted patch", "d": "5/2015"}, {"body": "arschmitz timmywil test pr flatout mobile", "d": "5/2015"}, {"body": "arschmitz timmywil actually fix assertions fail", "d": "5/2015"}, {"body": "timmywil issue discussion change thought changes first part opening comment returning undefined hidden detached elements tests however wrong think potential break things userland change handled comes ui mobile quite bit turns jquery ui mobile allow widgets instantiated default element detached state via also general allow instantiating widgets detached elements improved performance among reasons also many many situations widget plugin sort may instantiated called inside hidden container major issue plugin authors cant ever reasonably know may inside hidden container think popups panels etc jquery mobile everything hidden page initialized means past could call element worry need always check return value using make lot code go knows would surprise start seeing things used lot something like worry change essentially makes plugin author never safe use first checking return value unless direct response user action essentially cant happen hidden detached elements example dragging mouse interaction type stuff case many cases ui", "d": "5/2015"}, {"body": "fact used setter also crashes bad way avoid crash calling setter find first whether element disconnectedhidden code hugely bad element disconnected querying setting coordinates close succession causes reflows", "d": "5/2015"}, {"body": "well either wo nt thrash dom dunno block", "d": "5/2015"}, {"body": "gabrielschulhof correct wrong wont really work call collection one elements either hidden disconnected terminate soon hits first hidden disconnected element continue rest collection", "d": "5/2015"}, {"body": "true need try inside callback", "d": "5/2015"}, {"body": "timmywil seems need discuss", "d": "5/2015"}, {"body": "arschmitz gabrielschulhof good point checking element disconnected setting seem expensive would comfortable continuing allow throw returning zeros disconnected elements nt necessarily make sense get offset disconnected elements behavior would actually line native gbcr", "d": "5/2015"}, {"body": "gabrielschulhof code hugely bad element disconnected querying setting coordinates close succession causes reflows already inherent part offset setter arschmitz knows would surprise start seeing things used lot something like worry explicitly providing default data later code like old behavior entirely appropriate expected libraryplugin code fact briefly setter call collection one elements either hidden disconnected terminate soon hits first hidden disconnected element continue rest collection hand strikes problem may sufficient reason back arschmitz gabrielschulhof often simultaneously set offset one element", "d": "5/2015"}, {"body": "would comfortable continuing allow window offset throw returning zeros disconnected elements yes would would recommend window change rare simple fix long handled migrate see issue issues offset hidden elements specifically seems like much bigger problem honestly make pita use often simultaneously set offset one element im aware case either library done think one case ever first thing thought looking code documentation says set current coordinates every element set matched elements relative document specifically mentioning collections supported behavior would actually line native gbcr seems like valid point", "d": "5/2015"}, {"body": "note jquery method docs regarding text nodes also applies general comment nodes passing html jquery note text nodes treated dom elements exception methods content generally ignored removed looks like added docs", "d": "5/2015"}, {"body": "agreed pr open adjust docs text nodes making clear supported operations added note requesting comment nodes included adjustments", "d": "5/2015"}, {"body": "phistuck confirm break client site happened using jquerygitjs seeing identical behaviour", "d": "5/2015"}, {"body": "wow nt use jquerygitjs production ever", "d": "5/2015"}, {"body": "mzgol haha yep never since site happened first paid job many year ago definitely bad idea surprised survived long", "d": "5/2015"}, {"body": "intended behavior change jquery fixes longstanding issues", "d": "5/2015"}, {"body": "extremely common case presented recommended solution", "d": "5/2015"}, {"body": "somewhat related supposed go changing", "d": "5/2015"}, {"body": "jzaefferer currently mirrors mirrors ie development lines set way time ago tools like jsfiddlejsbin pull newest jquery testing still works jsfiddle amp jsbin use new urls remove amp", "d": "5/2015"}, {"body": "see well start permanent redirects deleting jquery ui use testing projects might kind official information changes would quite useful", "d": "5/2015"}, {"body": "jzaefferer amp point file effectively testing twice amp", "d": "5/2015"}, {"body": "meant test", "d": "5/2015"}, {"body": "getting back track though recommended solution extremely common use case presented", "d": "5/2015"}, {"body": "hide class remove class eg put element done beforehand html later js said behavior change trial run tickets like think solutions performance cascade issues fixed", "d": "5/2015"}, {"body": "possibly revert live certain issues", "d": "5/2015"}, {"body": "hide class remove class eg removeclass hidden eliminate unnecessarily complicate use basic animations also impossible plugin author put style display none element done beforehand html later js css display block hide inline styles using javascript set preferred initial rendering state said behavior change trial run tickets like think solutions performance cascade issues fixed say must reverted end massive uproar", "d": "5/2015"}, {"body": "eliminate unnecessarily complicate use basic animations different setting inline styles", "d": "5/2015"}, {"body": "say must reverted end massive uproar nt think simple basic usage showhide causing noticeable performance issues", "d": "5/2015"}, {"body": "still discussing reopen", "d": "5/2015"}, {"body": "reason exactly see much effect would wip nt yet done beta release blog post changes certainly valid use cases gun unfortunately common use seems shooting feet compatibility arguments definitely keeping quirky edge cases existing code change revert go back recommending people avoid showhide use classes since nuances hard developers understand nt say disrespectful methods evolved lot complex expensive developer intuition says", "d": "5/2015"}, {"body": "well matter much recommend never viable solution plugin authors", "d": "5/2015"}, {"body": "alluded animating cascadehidden elements still accomplished bring trivial many cases damn near impossible others builtin allsinging alldancing iframe implementation completely untenable reliable way us figure proper display value arbitrary hidden elements", "d": "5/2015"}, {"body": "scottgonzalez mentions new method make things difficult plugin authors new method nt override hidden attribute demo would need use nt understand iframe needed previously given display option finite number settings would nt even need supported like amp could nt crossreference display settings based element work well", "d": "5/2015"}, {"body": "content hideshow candidate unlikely add remove hidden attribute dynamically spec says hidden attribute must used hide content could legitimately shown another presentation example incorrect use hidden hide panels tabbed dialog tabbed interface merely kind overflow presentation one could equally well show form controls one big page scrollbar similarly incorrect use attribute hide content one presentation something marked hidden hidden presentations including instance screen readers", "d": "5/2015"}, {"body": "could nt crossreference display settings based element work well aside enormous necessarily incomplete custom elements possible headed towards standardization list could also rendered inaccurate css overriding default display values edge cases like first drove us look default values iframe clearing inline display failed show element drive us stop trying like keep saying know application better therefore know right way reveal element animation could leverage crossplatform way inspect full cascade getting right absent nt seem worth necessary contortions said however special case clear every show animation would willing", "d": "5/2015"}, {"body": "said however hidden special case clear every show animation would willing like dave pointed nt even seem like correct usage", "d": "5/2015"}, {"body": "like keep saying know application better therefore know right way reveal element animation playing devil advocate second totally true sometimes making best guess better nothing nervous behavior change stylesheethidden elements still get feeling going cause uproar however nt want revert everything done falling back stylesheethidden elements would nt need read display value performance issue obama website nt display data user cares different display values responsive layouts would still way make work ie hiding elements stylesheet", "d": "5/2015"}, {"body": "mentioned possibility curious intend detect stylesheethidden elements without reading display value cf replaced", "d": "5/2015"}, {"body": "happens use", "d": "5/2015"}, {"body": "timmywil still strange behavior different", "d": "5/2015"}, {"body": "look console firefox giving nserrornotavailable try get display property element crossframe crosswindow access always dicey even two origin take look comments area particular instead child frame try manipulate parent call back function parent job", "d": "5/2015"}, {"body": "okay actually could avoid problem reordering codes interesting points crossframe access fails iframe hidden problem nt occur older jquery browsers anyway problem easily avoided eg calling function parent dmethvin mentioned nt say needs fixed would natural leave", "d": "5/2015"}, {"body": "agree got rid several earlier sure stayed around", "d": "5/2015"}, {"body": "took liberty assigning markelog", "d": "5/2015"}, {"body": "timmywil sure thing since must make sure objects supposed events events", "d": "5/2015"}, {"body": "simulated focus event nt methods", "d": "5/2015"}, {"body": "mentioned may able get rid fake altogether", "d": "5/2015"}, {"body": "issue way vague us anything need construct minimal reproducible test case without external dependencies shows error act", "d": "5/2015"}, {"body": "ok thanks set something get back", "d": "5/2015"}, {"body": "please also test nt use production main development line good know issue persists", "d": "5/2015"}, {"body": "set copy site error enabling lastest jquery updater sure create minimal text case suggested set admin ftp account could send details emailpm see issue clearly reproducible enabling plugin nt occur many thanks", "d": "5/2015"}, {"body": "one thing checkout jquery repository run compile jquery try file works type go back point nt work type go back point end find commit introduced issue post commit hash amp look read go", "d": "5/2015"}, {"body": "currently use jquery ui sure switch uses though", "d": "5/2015"}, {"body": "upon time ticket make methods nt know enough save though", "d": "5/2015"}, {"body": "yea think bit different actually prefer using methods sometimes forcing users create new jquery collection getset css unnecessary", "d": "5/2015"}, {"body": "goal retroactively bless use current public apis going pretty haphazard set lowlevel apis inconsistent calling conventions guess ca nt get worse vs though smilingimp rather setter getter going one similar least would give us consistency low level api may break current users undocumented interface figure args", "d": "5/2015"}, {"body": "rather jquerycss elem name value setter jquerycss elem name getter going one similar jquerydata least would give us consistency low level api may break current users undocumented interface figure extra styles args definitely moment today staring amp immediately seeing responsibility division looks extremely confusing especially taking account fact getter amp setter private positional params public apis also seems bad", "d": "5/2015"}, {"body": "agreed case rather see us move dave suggested drop completely", "d": "5/2015"}, {"body": "agreed case rather see us move dave suggested drop completely works well edit issue title updated", "d": "5/2015"}, {"body": "nt return promise returns context collection queuedependent defaulting fx invoke custom queue everything works expected", "d": "5/2015"}, {"body": "indeed thanks", "d": "5/2015"}, {"body": "thank opening issue might deprecated future might recommend form instead better create docs issues appropriate repo although useful information already suggest though use static one", "d": "5/2015"}, {"body": "opened interested api perspective documenting would mean adding api surface hence issue ca nt find information getting deferredpromise readiness document works tell also promisebacked version", "d": "5/2015"}, {"body": "ready might deprecated future info come mention deprecating ready contrary would get ahold promise resolves ready otherwise", "d": "5/2015"}, {"body": "ready might deprecated future discuss point future documented status yet determined", "d": "5/2015"}, {"body": "right asking discussion since already likely wo nt removed useful might well expose", "d": "5/2015"}, {"body": "benjamingr right asking discussion ready since already likely wo nt removed useful might well expose could report issue documentation issues discussed", "d": "5/2015"}, {"body": "mzgol sure impression api issue documentation issue opened one thanks", "d": "5/2015"}, {"body": "benjamingr thanks", "d": "5/2015"}, {"body": "invalid document forms nested inside forms", "d": "5/2015"}, {"body": "comment terribly important", "d": "5/2015"}, {"body": "think need comment saying rjs strip use strict added", "d": "5/2015"}, {"body": "comment terribly important might confuse people would check build source think need comment saying rjs strip use strict added sounds awkward issue might cause real failures ticket created would aware fix appropriate fix landed", "d": "5/2015"}, {"body": "rather leave issues lying around reminders cross bridge ifwhen come mon may oleg gaidarenko notifications githubcom wrote comment terribly important might confuse people would check build source think need comment saying rjs strip use strict added sounds awkward issue might cause real failures ticket created would aware fix appropriate fix landed reply email directly view github", "d": "5/2015"}, {"body": "ok misunderstood issue thought latest requirejs would strip use strict since action item update requirejs", "d": "5/2015"}, {"body": "work jquery ui amp mobile would need create nt exist currently rely said nt breaking support module components mainly first need figure keep support tests running would likely require testing amd support module instead built file", "d": "5/2015"}, {"body": "point think using jquery ui", "d": "5/2015"}, {"body": "hm last time discussed removing jquerysupport uproar need least set empty object since uimobile attach support tests jquerysupportui assume jquerysupport exists remember wrong", "d": "5/2015"}, {"body": "sounds familiar sun may pm micha\u0142 go\u0142\u0119biowski notifications githubcom wrote hm last time discussed removing jquerysupport uproar need least set empty object since uimobile attach support tests jquerysupportui assume jquerysupport exists remember wrong reply email directly view github", "d": "5/2015"}, {"body": "never existed jquery ui nt relied existing year", "d": "5/2015"}, {"body": "ok maybe mobile see eg cc arschmitz", "d": "5/2015"}, {"body": "yeah use pretty extensively mobile however extend extend places see second switch one simple changing worry part long know advance", "d": "5/2015"}, {"body": "yes please", "d": "5/2015"}, {"body": "okay todos although nt think actually remove quickly given much code still around uses small stubs anyway", "d": "5/2015"}, {"body": "dmethvin agreed nt think worth removing time soon extremely small size amp widespread adoption discouraging use seems ok said current setup migrate users amp people looking docs see warnings maybe core well", "d": "5/2015"}, {"body": "long nt actually remove time soon warning migrate fine", "d": "5/2015"}, {"body": "yeah definitely hurry", "d": "5/2015"}, {"body": "decide also need migrate docs tickets", "d": "5/2015"}, {"body": "takes care migrate part", "d": "5/2015"}, {"body": "since using animation would need call deferred method rest us agree seems like animations", "d": "5/2015"}, {"body": "dmethvin okay done", "d": "5/2015"}, {"body": "method seems returning wrong value firefox", "d": "5/2015"}, {"body": "inconsistent browsers worth filing mozilla issue really wrong thought remembered special rules option elements ca nt find correct computed style option element visible virtue selectedness anyway mikesherov", "d": "5/2015"}, {"body": "agree option elements bit strange thing extent clarification nt explicit style element one style nt work either firefox put miketaylr shaped signal light one nt think critical enough jquery fix either", "d": "5/2015"}, {"body": "agreed nothing jquery", "d": "5/2015"}, {"body": "opinion would best implemented plugin least gains enough traction receive requests put core would consider adding wary adding new methods core point", "d": "5/2015"}, {"body": "opinion would best implemented plugin least feeling", "d": "5/2015"}, {"body": "never really used plugins let go ahead research would work well looks like directory self maintained code whoever created suppose think beyond point since really planning maintain dancer", "d": "5/2015"}, {"body": "thank opening issue tests seems pass opera current opera current means opera respectively versions opera jquery supports", "d": "5/2015"}, {"body": "argh fooled opera page told latest version thanks", "d": "5/2015"}, {"body": "hemming hawing size probably land going ie selector pick children disabled fieldsets modern browsers get right except selection goes sizzle engine opposed ielike behavior relying solely upon property", "d": "5/2015"}, {"body": "seem case look jsbin works correctly selector children fieldsets ie gt course", "d": "5/2015"}, {"body": "actually sorry regular css selector work ie children fieldsets work correctly", "d": "5/2015"}, {"body": "bug jsbin returns nodelist always truthy want check property", "d": "5/2015"}, {"body": "ah right sorry sure enough fail ie", "d": "5/2015"}, {"body": "yea guess time grrrr arschmitz", "d": "5/2015"}, {"body": "lands probably address extra wrong related documentation consider element disabled ie selector work however work browsers jquerysizzle address well", "d": "5/2015"}, {"body": "left note test case explicitly", "d": "5/2015"}, {"body": "relates difference attr prop confused remember checked attribute affects defaultchecked property checked property one showing checked", "d": "5/2015"}, {"body": "please read documentation boolean attributes", "d": "5/2015"}, {"body": "well opening issue good start however recommend editing issue actual feature proposal like issue open concerning clarity contributejqueryorg get involved tell open issue repo thank willingness contribute", "d": "5/2015"}, {"body": "sure like issue open clear contributejqueryorg wo nt bother opened new issue feature proposal would edit first comment one remove think fine leave thanks timmywil", "d": "5/2015"}, {"body": "ok thank cauerego", "d": "5/2015"}, {"body": "need drop suffix release process", "d": "5/2015"}, {"body": "actually wo nt", "d": "5/2015"}, {"body": "noticed tag suffix wrong buildjs updated", "d": "5/2015"}, {"body": "basically dup nt guarantee invalid inputs silently ignored", "d": "5/2015"}, {"body": "agreed", "d": "5/2015"}, {"body": "dmethvin right starting wonder would nice failed silently string case obscure would expect changing behavior much problematic", "d": "5/2015"}, {"body": "timmywil agreed also implementations like lodash silently ignore things like", "d": "5/2015"}, {"body": "use three places protected sounding like request change signatures former two despite fact reported instances passing invalid input corrected since correcting mistakes usually easy adding correctness andor performance critical nt see benefit change end quite opposite seem like good thing", "d": "5/2015"}, {"body": "exceptions jqueryeach noniterable fn seem like good thing cases numbers strings agree passing variables may times seems common enough throwing going annoying users question convenient everyone going add code may well jquery", "d": "5/2015"}, {"body": "question convenient everyone going add code may well jquery good point also document noops think behavior could prefer callerlevel change add documents subsequent readers value expected rather happening work change docs least old calls retroactively correct far jquery api usage goes smile", "d": "5/2015"}, {"body": "actually another solution would install different versions jsdom using npm module running tests", "d": "5/2015"}, {"body": "would quicker path success anyone suggestions alternatives jsdom quick searches nt really turned anything promising", "d": "5/2015"}, {"body": "feared would become issue jsdom works fine iojs breaks newest major release installing unfortunately means skipping packagejson nt see better option nt think anything else comes anywhere near close jsdom dom support denissokolov know something domenic anything else could except install different jsdom versions based nodejs iojs", "d": "5/2015"}, {"body": "using newest jsdom iojs advantage easier windows users nt require compilation done contextify users reported harder jquery repo", "d": "5/2015"}, {"body": "get contextify patched support iojs jsdom continue work everywhere someone work though", "d": "5/2015"}, {"body": "contextify already patched could install latest version contextify toplevel jsdom uses seems like shortterm solution", "d": "5/2015"}, {"body": "contextify already patched could install latest version contextify toplevel jsdom uses seems like shortterm solution needed jsdom depends contextify catch newer vesion nt bump minor newest contextify though even contextify patched nt released yet case seems best wait", "d": "5/2015"}, {"body": "actually think misunderstood patch issue", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "unaware anything similar think use separate versions different platforms switch programatically without much problem using version shims optional dependencies shim module see example semiblessed npm issue optional dependencies handle installation failures wrong platforms", "d": "5/2015"}, {"body": "denissokolov solution would make installation fail iojs causing confusion amongst users especially way npm currently informs failure installing optional dependency far ideal using special field hook would check proper version already installed would install", "d": "5/2015"}, {"body": "dislike way npm informs failing install optional dependencies suggest comment issue npm use case jsdom fits description optional dependencies well besides jsdom development dependency jquery thus users would see warning jquery developers expected rather informed likely run regardless find work lot manual steps fail major benefit would choose avoid hook certainly solution probably work", "d": "5/2015"}, {"body": "dislike way npm informs failing install optional dependencies one issue misleading message another trying install dependency compile amp fail know beforehand indeed fail seems wasteful amp slow especially happen every single even invoke twice row", "d": "5/2015"}, {"body": "check proper version require packagejson jsdomversions already installed would install pretty much thinking since need jsdom node smoke tests thinking check install tests run otherwise needed like copy prs", "d": "5/2015"}, {"body": "one issue misleading message another trying install dependency compile amp fail know beforehand indeed fail seems wasteful amp slow especially happen every single npm install even invoke twice row meaningful concern although think could addressed setting correct requirements package let npm know right bat incompatibilities pretty much thinking since need jsdom node smoke tests thinking check install tests run otherwise needed like copy prs sounds best achieved simply", "d": "5/2015"}, {"body": "pr", "d": "5/2015"}, {"body": "contextify released amp jsdom works fine iojs imo solution still better though also testing agains current jsdom amp easier people installing iojs compilation step needed", "d": "5/2015"}, {"body": "pr ready review", "d": "5/2015"}, {"body": "p inline element default div block element spec says block element placed inside inline element", "d": "5/2015"}, {"body": "browser jquery divide p tag two element normal behavior pls refer specs p element represents paragraph contain blocklevel elements including p", "d": "5/2015"}, {"body": "yup opening implicitly closes opened see also particular comment", "d": "5/2015"}, {"body": "thank quick reply", "d": "5/2015"}, {"body": "think support least case easy enough fix since follow promises standart events say open discussion", "d": "5/2015"}, {"body": "duplicate see also related changes", "d": "5/2015"}, {"body": "relevant agree discussion also event handlers execution", "d": "5/2015"}, {"body": "read part incidental primary content issue regarding duplicating standalone issue event handlers throwing exceptions remember aliases rather might warranted though", "d": "5/2015"}, {"body": "remember ready aliases jqueryreadypromise done rather ontrigger yeah since wrote easy enough fix since follow promises standart could also represented mentioned fix least one mind would apply think discuss exceptions event handlers", "d": "5/2015"}, {"body": "event deprecated though breaks particularly problem since multiplex events single handler right error one prevents others running would take significant redesign event subsystem avoid sure big problem", "d": "5/2015"}, {"body": "ready event deprecated though correct probably remove", "d": "5/2015"}, {"body": "probably remove yes", "d": "5/2015"}, {"body": "guess better things open", "d": "5/2015"}, {"body": "yes mention events incidental used comparison future clicks still call event chain even one callee throws exception chain break point time documentready gives stops forever ready event deprecated though breaks particularly problem event deprecated documentation nt seem suggest anything sort says one form also deprecated jquery offers using recommended", "d": "5/2015"}, {"body": "jdahobbs others nt use ready event could defined custom jquery event fired document ready event add ready handler using one methods custom jquery event involved custom jquery event deprecated", "d": "5/2015"}, {"body": "custom pseudo selectors nonportable much slower longer recognized valid native browser engines best practice use valid selectors filter resulting collection manually also make step explicit eg", "d": "5/2015"}, {"body": "thanks opening issue able produce test case involve svg jquery first foremost html dom library guarantee support svg side note proper way create svg elements use svg namespace raw js example also invalid", "d": "5/2015"}, {"body": "javascript executed element attached dom code like execute code firefox chrome browsers", "d": "5/2015"}, {"body": "also repros img tags though svg dom element like element supports onload potential injection using inmemory element common mechanism people sanitize html blobs safe text use inmemory element set html grab innertext means svg notsvg nt issue methods xss protected input string fairly certain repro tag supports onload see html tags support onload minimal repro second repro using elementappend interestingly one also repros chrome javascript equivalent using img tag repro", "d": "5/2015"}, {"body": "potential injection using inmemory element common mechanism people sanitize html blobs safe text use inmemory element set html grab innertext means svg notsvg nt issue methods xss protected input string sounds like terrible idea jsfiddle nt need jquery exploit ps last repro example broken even fix method", "d": "5/2015"}, {"body": "pretty much expected discrepancy whether onload handler executed different ways chrome firefox deal svg elements created wrong namespace undefined behavior comes inline events html leave user guard plausible expect jquery guard every possible xss attack documented security considerations", "d": "5/2015"}, {"body": "jquery developers need aware execute javascript several different ways design code things like uses untrusted input shooting foot", "d": "5/2015"}, {"body": "thank opening issue may well bug would helpful could create test case similar", "d": "5/2015"}, {"body": "way define unambiguous semantics suggestion change would break extant code relying documented behavior", "d": "5/2015"}, {"body": "current extend behavior feel right clearly extend extend arrays replace totally value extending", "d": "5/2015"}, {"body": "yes treat array object index property last property name win look like js extend null b result b", "d": "5/2015"}, {"body": "also lodash assign objectassign behavior definitely right", "d": "5/2015"}, {"body": "yep designed used cross section well known implementations", "d": "5/2015"}, {"body": "yep designed nt jumped", "d": "5/2015"}, {"body": "thought posted question mobile morning guess nt go mention maybe missed use case definitely broken intentional fine guess needs made really clear docs undoubtedly code expects able serialize deserialize data without jquery screwing", "d": "5/2015"}, {"body": "right intentionally broken case covering migrate plugin docs", "d": "5/2015"}, {"body": "said still works", "d": "5/2015"}, {"body": "require individual modules app need ignore completely webpack support amd nt magic ignore modules outside dependency tree nt work", "d": "5/2015"}, {"body": "indeed webpack supports amd commonjs umd format awesome godo know thanks reply", "d": "5/2015"}, {"body": "problem method lot logic argument options nt know could keep original options case really nt want make responsible options manipulation complete function could probably moved defaultprefilter since knows little queue wish knew less still think needs step aliases options", "d": "5/2015"}, {"body": "thinking would still bundle speedeasingcallback object object would free default values initial assignment current rest logic could applied converting duration number zero animations instant defaulting fx queue add final step dequeueing understand wanting keep external though especially one moves list adding argument options preprocessing used js tail jqueryspeed function queuewrap options var opt jqueryextend true options complete optcomplete head jqueryspeed var options speed amp amp typeof speed object jqueryextend speed complete callback callback amp amp easing jqueryisfunction speed amp amp speed duration speed easing callback amp amp easing easing amp amp jqueryisfunction easing amp amp easing animation initialization var anim animation jqueryextend prop options queuewrap might even opportunity function take", "d": "5/2015"}, {"body": "like idea almost feel like passing makes sense perhaps let exist used", "d": "5/2015"}, {"body": "put inside seperate file methode public scope maybe rename way", "d": "5/2015"}, {"body": "think tried versions back something somewhere used nt remember remember thinking horrible function smile", "d": "5/2015"}, {"body": "anything get rid", "d": "5/2015"}, {"body": "yeah probleme reuse code several files need set methode public right", "d": "5/2015"}, {"body": "use one place think something else externally used jquery ui maybe nt need method proposing", "d": "5/2015"}, {"body": "nt take long find people using", "d": "5/2015"}, {"body": "jquery ui", "d": "5/2015"}, {"body": "gnarf one good example remove works fine exactly like reading jqueryui code send", "d": "5/2015"}, {"body": "jquery ui ugh bright side basically reproduces nonqueue aspects looks like ui would need one change still think work like idea almost feel like passing makes sense perhaps let exist used possibly feels like conflation separate concerns suppose worse passing preprocessor document thereby reserve property decide nest rather clone eg would input would input", "d": "5/2015"}, {"body": "around developer convenience used anything wrote think would fine reuse passed us passed", "d": "5/2015"}, {"body": "yes agree wanted make decision explicit", "d": "5/2015"}, {"body": "last time add easingdefault would reason user read instead attribute nt find example github", "d": "5/2015"}, {"body": "exact reference user input might valuable two reasons passing data outwards animation callbacks retrieving configuration exactly specified application defaultsspeed translationsetc thing ajax calls", "d": "5/2015"}, {"body": "first two arguments consistent may thinking vs known issue", "d": "5/2015"}, {"body": "sorry confusion meant jquery selector map fn jquerymap array fn per jquery documentation", "d": "5/2015"}, {"body": "see updated description accordingly quite unfortunate still nt think anything late juncture", "d": "5/2015"}, {"body": "expected better known", "d": "5/2015"}, {"body": "thank opening issue please provide reduced test case using jsbincom help us assess issue mocking ajax responses useful resource", "d": "5/2015"}, {"body": "closing due inactivity information issue reopened", "d": "5/2015"}, {"body": "bloodyowl amen yes library jquery responsibility towards community pretending nt straight blind ignorance warning yes way go helps lot react given advantage knowing environment dev prod based nodejs env variable wo nt able let honest builds jquery source offer different builds download explicit suggest one env variable rule similar future cases", "d": "5/2015"}, {"body": "think direction good nt seem like anything done within jquery core action items directed browser development tools accurate jdalton", "d": "5/2015"}, {"body": "correct opened easier cross browser vendor collaboration get input jquery core warning implemented browsers would want input direct users newer version jquery perhaps", "d": "5/2015"}, {"body": "way mention case sweeping changes prepared", "d": "5/2015"}, {"body": "way mention case showhide sweeping changes prepared yap referenced opening comment one things mentioned coordinating warning release able point devs solutionworkaround issue", "d": "5/2015"}, {"body": "thanks heads miketaylr pinged firefox devtoolers thread looking warnings provided faster optimized alternatives like proto case op", "d": "5/2015"}, {"body": "correct opened easier cross browser vendor collaboration get input jquery core well mine personally resent statement slow simple nt dom api methods consider great amount edgecases make enduser happy cut thus drastically break lot usecases necessary sacrifice make faster users though oh users face great issues updating new jquery since appssites break unexpected places yeah wonder blame punch line nt dom api would right api jquery methods could fast could thorough give couple examples thanks bzbarsky firefox introduced given us avoid crazy slow logic still used one standardize method one beside ff implemented honestly nt work right since still hacks make work insertadjacenthtml great method right simplifies speed lot usecases perfectly aligned jquery manipulation api right tricky lots edgecases considered ca nt used element traversal api ways mimics jquery traversal api got ta right api use inside jquery nope specification nt thorough nt consider nonelement nodes api obsolete awesome method make things faster wait four years reintroducing without conjunction page visibility api method nt bring needed effect one edgecase everything breaks waited received kinds storms criticism slow jquery animation api could add lot examples like like gon na surprised tryout fate examples soon great possibility claimed slow already imagine nice tweets flowing around blaming us yeah could say jquery core members could active discussions could advocate position us side thing us real jobs whereas spec threads time consuming unrewarding quite possibly without expected endresult nt think warns necessary since least currently timmywil pull mentioned already ticket description btw really weird things using various apis achieve desirable effect problems imagining codepath would need take predict slowness think right dom api could introduced would relieve us circumstance warning people anything", "d": "5/2015"}, {"body": "one things mentioned coordinating warning release able point devs solutionworkaround issue right saying barring revert reasons unknown time right release point edit understanding paul irish analysis subsequently revealed bottleneck example retrieving computed display value webkit took time proposed changes drop use instead effectively circumventing performance issue issue concerned css cascade overriding stylesheet settings required lot magic get working named likely performance culprit originally drop become basic methods longer potential performance penalties least ones encountered far mean breaking changes rather break code continue allow phantom performance issues sneak user code", "d": "5/2015"}, {"body": "dmethvin could take look interesting using mouseevent works differently", "d": "5/2015"}, {"body": "looks like difference behavior firefox straightforward repro jquery analogous calling native dom method seem work detached elements firefox custom event like myclick would delivered whether need fix particular bug depends whether firefox radar maybe miketaylr knows patch fixing issues happen trigger native events nt deliver resisted quite bit code edge cases", "d": "5/2015"}, {"body": "makes sense given analysis inclined close wontfix opened issue firefox", "d": "5/2015"}, {"body": "looks like closed nt jquery supposed fix browser incompatibilities otherwise use standard click method jquery implementation might workarounds make work firefox ie even using mouseevent click issue firefox specific behavior different three major browsers ie chrome firefox ie event fired issue fixed clicking detached checkboxes would use standard buggy apis jquery", "d": "5/2015"}, {"body": "testing issue firefoxspecific ie chrome behavior workaround set checked use firefox quick iterations fix wo nt need add fix jquery fri may anton ivanov notifications githubcom wrote looks like closed nt jquery supposed fix browser incompatibilities otherwise use standard click method might workarounds make work firefox ie even using mouseevent click issue also firefox specific behavior different three major browsers ie chrome firefox issue fixed clicking detached checkboxes would use standard buggy apis jquery reply email directly view github", "d": "5/2015"}, {"body": "thanks filing timmywil set bug blocker", "d": "5/2015"}, {"body": "actually looks like proposed solution breaks case jquery considers hidden", "d": "5/2015"}, {"body": "ah slight behavior change still favor approach", "d": "5/2015"}, {"body": "case dropping", "d": "5/2015"}, {"body": "would make decision entirely performance untested supposition offset properties faster therefore worth including even though redundant", "d": "5/2015"}, {"body": "testing", "d": "5/2015"}, {"body": "ok looks like performance necessitates keeping difference hidden elements slower chrome visible elements use", "d": "5/2015"}, {"body": "pr", "d": "5/2015"}, {"body": "sorry late proposed accepted pr fix issue please refer original issue description follow comment", "d": "5/2015"}, {"body": "shimonenator wanted keep logic suggestion would right however change intentional", "d": "5/2015"}, {"body": "landed", "d": "5/2015"}, {"body": "unwilling call issue fixed jquery still wrong thing input", "d": "5/2015"}, {"body": "good point", "d": "5/2015"}, {"body": "tada sparkles heart fireworks", "d": "5/2015"}, {"body": "closing due inactivity", "d": "5/2015"}, {"body": "per meeting like see code take would anyone like take shot", "d": "5/2015"}, {"body": "timmywil would like take crack", "d": "5/2015"}, {"body": "great thanks jdphenix looking forward seeing pr", "d": "5/2015"}, {"body": "okay timmywil nt realize ref hash spammed every time otherwise would pushing changes fork apologies noobiness git aside first run implementing initial test case used tests wrote", "d": "5/2015"}, {"body": "seems script executing illegal return statement causing error regardless script retrieved executed", "d": "5/2015"}, {"body": "hi came across bug writing ios app using uiwebview jquery minified hosted available fixed version jquery", "d": "5/2015"}, {"body": "nokuno bug fixed jquery maybe experience different issue", "d": "5/2015"}, {"body": "mzgol right issue one thank", "d": "5/2015"}, {"body": "think agree need address change casebycase basis assess impact community rather making sweeping changes across board asking everyone make lots adjustments code going incrementally stages niche use cases done first common cases introduced every major release already changes pipeline changes let specific issues opened one closing issue reached consensus broad", "d": "5/2015"}, {"body": "closed without making specific tickets going independently address unsolicited pull requests removing guards even answer affirmative think include assume function input matches documented signature repository future reference maybe contributingmd", "d": "5/2015"}, {"body": "right like move away leaving issues open could closed single pull request opening issue discussion fine discussion resolves closed track broader guidelines overarching goals roadmap", "d": "5/2015"}, {"body": "thank opening issue however would quite bit code support option probably would get used much besides would much rather trust separate library tests stays date encoding rather include support directly jquery library like could used conjunction headers option team member disagrees reopen", "d": "5/2015"}, {"body": "timmywil reason options still documented", "d": "5/2015"}, {"body": "sure mean options used open xhr", "d": "5/2015"}, {"body": "timmywil kind authentication set using options xml open reference user optional user name use authentication purposes default empty string password optional password use authentication purposes default empty string", "d": "5/2015"}, {"body": "maybe misunderstanding issue issue username password options currently useless day age useful conjuction header setting header necessary sometimes options adequate certain cases", "d": "5/2015"}, {"body": "cc jaubourg", "d": "5/2015"}, {"body": "timmywil options seem absolutely nothing situation looking networking tab dev tools extra headers added etc means unauthorized way basic authentication manually setting header", "d": "5/2015"}, {"body": "madlittlemods real question xhr spec let see julian say subject reassess", "d": "5/2015"}, {"body": "wait jaubourg urls xhr passing username passwords work unless use crossorigin request ignored issue already come could read nt use crossorigin request please create testcase jsfiddle similar site", "d": "5/2015"}, {"body": "ah thanks issue markelog helps tremendously", "d": "5/2015"}, {"body": "markelog perfectly right sorry late party lot things take care work since take vacation starting end week usual situation remedied prefilter check request option set option appropriately could get bit hairy wan na account situations", "d": "5/2015"}, {"body": "check request crossdomain username password option set headers option appropriately could get bit hairy wan na account situations right exactly wanted avoid due encoding issue thank clarification jaubourg markelog", "d": "5/2015"}, {"body": "checkmark already blog post", "d": "5/2015"}, {"body": "given jquery promises wrapped promise libraries jquery deferreds consume standard thenables nt much need also concerned opening possibility replacing internal use promises promise implementation would add list things need support cost vs benefit ratio nt seem high enough", "d": "5/2015"}, {"body": "hi ca nt use exists third handler current must invoked vote behaviour", "d": "5/2015"}, {"body": "hello behavior", "d": "5/2015"}, {"body": "add onabort handler master", "d": "5/2015"}, {"body": "yes looks like need add one compat master behavior", "d": "5/2015"}, {"body": "nt sound like animus make change feel free reopen necessary", "d": "5/2015"}, {"body": "thank everyone gave input nt look like realistically going happen still happy review code matter issue reopened necessary", "d": "5/2015"}, {"body": "pr", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "yes thanks arthurvr", "d": "5/2015"}, {"body": "chance get fix stable branches", "d": "5/2015"}, {"body": "problem using instead", "d": "5/2015"}, {"body": "really make sure always use jquery attaching events", "d": "5/2015"}, {"body": "mzgol agreed", "d": "5/2015"}, {"body": "since data attached nodes close think angular case would longer issue", "d": "5/2015"}, {"body": "yep close", "d": "5/2015"}, {"body": "thank opening issue sitting would possible create test case lot change chrome months", "d": "5/2015"}, {"body": "closing due inactivity reopened test case", "d": "5/2015"}, {"body": "fixed latest sizzle update", "d": "5/2015"}, {"body": "fixed compat", "d": "5/2015"}, {"body": "data changes landed needs done", "d": "5/2015"}, {"body": "attach couple handlers elements amp without removing elements still leak way less serious removing elements makes data go away say part issue still applicable", "d": "5/2015"}, {"body": "looks like take care nomoreevents case", "d": "5/2015"}, {"body": "dmethvin indeed seems everything done would good test behavior though would nt", "d": "5/2015"}, {"body": "dmethvin mzgol quite compat also clears expando", "d": "5/2015"}, {"body": "pr submitted", "d": "5/2015"}, {"body": "updated change originally using event speed test deleted try get jsperf test going probably something simulates mouse events different handlers access different properties dmethvin specific type test like try", "d": "5/2015"}, {"body": "yeah realistic test going messy guess might possible make layout change via modifying class fire mouseevent mousemove goes plumbing", "d": "5/2015"}, {"body": "consensus change behavior jquery", "d": "5/2015"}, {"body": "yes list", "d": "5/2015"}, {"body": "hi guys state issue fixed jquery", "d": "5/2015"}, {"body": "aurelioderosa well milestone least", "d": "5/2015"}, {"body": "arthurvr saw label well nt reply question", "d": "5/2015"}, {"body": "aurelioderosa planned assigned need get try soon like land tag first beta", "d": "5/2015"}, {"body": "love see would make using jquery babel palatable", "d": "5/2015"}, {"body": "know actually", "d": "5/2015"}, {"body": "cool natively even simple", "d": "5/2015"}, {"body": "biggest problem size guess following increases gzipped size bytes forms seem larger", "d": "5/2015"}, {"body": "since definite decision yet let reopen", "d": "5/2015"}, {"body": "concept already described jakearchibald dec nodelist", "d": "5/2015"}, {"body": "closed via laded", "d": "5/2015"}]