[{"title": "onmouseover work svg", "body": "implementing something using svg circles nt seem work found old issue following fiddle expected work spicyj commented thread makes work suppose regression", "num": "3990", "d": "5/2015"}, {"title": "sgml comments jsx", "body": "eg xml thispropsitemsmap item gt item", "num": "3989", "d": "5/2015"}, {"title": "feature request make shallow rendering slightly less shallow", "body": "writing tests components trying new feature shallow renderer example wanted assert anchor tags rendered certain inner text however rendering shallow nt even give access text show spancontents missing something assert things top level guess better rendering string feeding html parser", "num": "3987", "d": "5/2015"}, {"title": "reactjs angularjs", "body": "problem using reactjs angularjs app problem error nt know warning something calling react component directly use factory jsx instead typeerror read property reactautobindmap undefined constructor objectfn scope digest scope apply done completerequest xmlhttprequestrequestloaded anonymous function jsx reactdom function use strict mycomponentjs var mycomponent reactcreateclass displayname mycomponent render function return reactdomdiv null rendering faster angularjs thispropsframework view", "num": "3986", "d": "5/2015"}, {"title": "multi element conditionals trap developer key warnings", "body": "standard way something middle block jsx ternary boolean expression ie need conditional multiple elements natural method expect would however generates warnings like warning child array iterator unique key prop check reactrender call using see information array nt list things reordered anything set elements conditional together none alternatives avoid warning good add key element elements might even inline elements like next two strings forced add key really overboard b condition element separately nt think need explain repeating code bad thing c wrap elements one element adding extra elements code required elements exist satisfy react quirks actually needed inside dom", "num": "3983", "d": "5/2015"}, {"title": "whether method modify", "body": "special css properties accept numbers units px animationiterationcount etc notice css properties defined object modify directly whether react public method", "num": "3982", "d": "5/2015"}, {"title": "mentions input type file documentation", "body": "nowhere react documentation reference handle speciel field serialized think deserve kind mention maybe link resource like normal input saying could find issue mentioning therefore issue", "num": "3981", "d": "5/2015"}, {"title": "creating tables react annoying", "body": "due fact html tables ca nt children table rows create parts table react element however tables useful way represent tabular data especially since colspan rowspan case table comprising many sections resort calling functions instead elements meaning nt get benefits props state rendering shortcircuiting plus code looks different therefore errorprone improved react support virtual dom node nt render actual dom node children alternatively datagrid components allow rendering like table colspan rowspan", "num": "3979", "d": "5/2015"}, {"title": "reconciliation jsfiddle example working", "body": "post build react gave example reconciliation jsfiddle working understand correctly something like create pr change url fix", "num": "3978", "d": "5/2015"}, {"title": "rendering multiple tspans causes dom updates render onscreen", "body": "created component takes input generates line text seeing correct svg generated browser displays first onscreen even paste output another htmlonly fiddle see rendered correctly kind soul greenjello freenode reactjs able find workaround causes element get rerendered behaves expected rendering thought might browser bug able successfully reproduce chrome firefox something related nature svg browser bug affecting multiple browsers react something strange", "num": "3972", "d": "5/2015"}, {"title": "lint tests", "body": "next thing start linting tests historically ignored due lack parser compatibility nt problem anymore may want integrate aggressively lint jsx tests cc pipeep", "num": "3971", "d": "5/2015"}, {"title": "support reparenting", "body": "writing component contains set large subtrees stay relatively simply moved around react virtual dom diffing ca nt detect movement react end recreating huge trees simply moving example pretend large structures may made several levels children components example one could entire page contents sidebar page root jsx render var blocka aaa blockb bbb blocks nt level react see relation blocks used give react hints result changed instead two blocks moved new location entire page essentially completely unrendered rerendered scratch understand case would far expensive react able detect movement nodes like believe need pattern hint react component large blocks may moved around different levels note may component rendering component root block parent semantics scoped nearest component wo nt work need owner scoping understand react trying eliminate need reactcreateelement used owner scoping within special attributes interferes instead component scoped variant think methodobject style interface kind like might work", "num": "3965", "d": "5/2015"}, {"title": "document react onchange relates oninput", "body": "would nice forms doc explicit fact react supersedes generally used place dom builtin event people might used using instead text inputs textareas since raw dom change event controls nt fire control loses focus", "num": "3964", "d": "5/2015"}, {"title": "missing challenge keytype attributes keygen tag", "body": "using keygen tag generate client certificates missing challenge keytype attributes", "num": "3961", "d": "5/2015"}, {"title": "controlled components nt work xml", "body": "app served recent react version supports xml however looks like controlled components broken created demo two almost identical pages one named one difference diff lt one input value may changed controlled input never changes property value nt mutable works expected page", "num": "3960", "d": "5/2015"}, {"title": "selectoption elements onchange event return dataattributes", "body": "plan look deeper maybe supply pull request decide feature right text inputs onchange eventtargetgetattribute datatype return datatypes value selectoption elements return extra attributes either object seems return value name attributes", "num": "3959", "d": "5/2015"}, {"title": "upgrade eslint use babeleslint", "body": "versions back would good get upgraded changes rules bit annoying probably tweak configs make changes code cc pipeep", "num": "3958", "d": "5/2015"}, {"title": "fix disable webworker test", "body": "intermittently giving us problems seems happening since sebmarkbage reorg nt really seem related fix disable travis results meaningful", "num": "3957", "d": "5/2015"}, {"title": "display warning ref reused", "body": "spent like minutes hunting bug ended caused reusing ref line component imagine get much worse bigger components warning devmode would nice", "num": "3956", "d": "5/2015"}, {"title": "firefox flashobject intermittently getattribute", "body": "long standing bug firefox hard track still able reproduce ondemand able reproduce manual bruteforce know short using flash react every react would throw invariant calling debugging however revealed everything rarely temporarily node reason loses method probably causes react return empty string id crash updating like actually works invariants errors ever observed personally currently worked around getting dom node mount works well enough moment nt update object nt surface updates either", "num": "3955", "d": "5/2015"}, {"title": "reactjs undefined requirejs included page", "body": "reactjs undefined requirejs included page define global variable causes conflict function typeof define amp amp defineamd define n uncaught referenceerror react defined", "num": "3953", "d": "5/2015"}, {"title": "reacttestutils rename findscry pairs findonefindall similar", "body": "outside relatively unknown word scry used difficult someone tell name differ current names seem based original jxdomscry api usage based likely made sense internally person filed would much discoverable easier use names obvious back compat reasons renaming adding existing names pointers commentsjsdoc saying deprecated probably makes sense imho thanks", "num": "3951", "d": "5/2015"}, {"title": "missing attribute", "body": "consider following snippet expected dom current behaviour demo jsbin specs", "num": "3948", "d": "5/2015"}, {"title": "missing attribute", "body": "", "num": "3947", "d": "5/2015"}, {"title": "component render method get future container width height", "body": "want write layout component get future container width height", "num": "3946", "d": "5/2015"}, {"title": "missing svg attributes markers", "body": "tags supported react svg marker refx refy orient", "num": "3945", "d": "5/2015"}, {"title": "serverside rendering help", "body": "bit trouble finding reasonable way handle serverside rendering still allowing seo three approaches think send bare bones html skeleton client javascript loaded make ajax request get data render send bare bones html skeleton client bundled json data necessary render page javascript loads page rendered immediately using json send fully rendered html page bundled json data together javascript loaded react rerender page using json data first option worst second option fixes need round trip back server retrieve data step right direction third option seems best trouble figuring approach talks react conf suggestion make two separate components piece functionality datafetching component pure ui component would allow server render markup using pure ui components without including clientside logic via datafetching components concerned lead two separate versions page structure exist one server uses render markup one wrapped containers client ui components used structure need separately maintained resulting changes requiring two updates mistaken example let say component component server might look like however client components might need fetch data server recommendation wrap containers clientside code might look like idea behind children component change depending environment mean keep two versions synchronized anytime want add remove update structure established pattern avoid dipping toes react want make sure structuring correctly following best practices interested running flux server want keep client datafetching components dependencies client side recommendations missed anything", "num": "3939", "d": "5/2015"}, {"title": "long reactjs release new version", "body": "current version react long reactjs release new version api change lot new version released", "num": "3937", "d": "5/2015"}, {"title": "textarea holds old value prop updated null", "body": "textarea values set value prop prop set null undefined resetting object clear form retain old value looking source looks like intentional null behavior written behave differently form elements jsfiddle demo problem", "num": "3936", "d": "5/2015"}, {"title": "wrong data attirbute value", "body": "hello eventcurrenttarget data page return previus value react version code user reactclass render redraw three times click pagebutton eventcurrenttarget data page return previus draw value tt change code works data attribute return wrong value", "num": "3933", "d": "5/2015"}, {"title": "opaque handle replace rootnodeid", "body": "losing broke om applications like circleci used maintain snapshot entire application permitted full serialization deserialization react app state including transient component local state browsers powerful testing purposes without forcing programmers write nonmodular code via world passing understandable people might rely specifics handle need opaque identifier nt care actual representation handle may well scope would nice issue get consideration official feedback", "num": "3932", "d": "5/2015"}, {"title": "autobinding named methods shadow globals fails", "body": "bound method inside guard method gets bound reason fails var testcomponent reactcreateclass intervals render function return reactcreateelement div setinterval function setinterval fn ms thisintervalspush setinterval fn ms componentdidmount function thissetinterval function consolelog hello var testcomponent reactcreateelement testcomponent null reactrender testcomponent documentbody error message set break point first time called set instance react class hit play method gets hit second time set changing fixes issue code generated babel removing named functions little work removing source code would nice react supported syntax nt know much work involved", "num": "3928", "d": "5/2015"}, {"title": "props getinitialstate anti pattern componentwillmount", "body": "link wondering following code similar anti pattern good practice function getstate props var newstate somestate false props merge newstate totalcount propstotal items propsitems return newstate var component reactcreateclass proptypes total reactproptypesnumber items reactproptypesarray getinitialstate function return getstate componentwillmount function thissetstate getstate thisprops componentwillreceiveprops function newprops thissetstate getstate newprops basically props used props copied state copied get modified bit ex etc render method uses state one colleagues using pattern extensively funny feeling ca nt really pinpoint would actually wrongbad approach", "num": "3927", "d": "5/2015"}, {"title": "change event fires extra times ime composition ends", "body": "extra details similar discussion extra details reproducing analysis previous attempt fix includes unit tests sufficient confident fix original issue trying example chinese characters inputted chinese pinyin input method would fire many renders like actually would expect fire confirm chinese character tried another kind input method wubi input method got weird test jquery press space bar confirm character event would fire know might different implementation jquery react would expect way jquery handles chinese characters instead react", "num": "3926", "d": "5/2015"}, {"title": "dedupe warnings validatedomnesting", "body": "nt log particular parentchildownerstack trio", "num": "3921", "d": "5/2015"}, {"title": "load webcomponentsjs differently", "body": "tests currently pass browser running chrome supports webcomponents already however fail every browser think webcomponentsjs actually loaded currently getting packaged reacttest requiring creates new resulting nodes create different prototype expected webcomponents webcomponents new node prototype different implementation check nodes failing think loaded webcomponentsjs browser loaded js node create markup wrapping would right prototype", "num": "3919", "d": "5/2015"}, {"title": "async render rather async state", "body": "run several issues related reading state set yet committed component state wondering asynchronous would nt better async render instead would allow synchronously update state want performance benefits async state changes imagining mutates state immediately mechanism batching state changes invoked event originally causing state mutation simply triggers render instead thoughts", "num": "3918", "d": "5/2015"}, {"title": "react id problems", "body": "team working project sometimes inject one react application page recently noticed onclick handler specified one applications also getting applied node datareactid application way force root component use datareactid react application sort namespaced using", "num": "3916", "d": "5/2015"}, {"title": "onwheel broken", "body": "appears onwheel broken react returns event full undefined everything fiddle working fiddle working edit reproduce try using scroll wheel div xy info mac using track pad tested latest chromefirefoxsafari", "num": "3915", "d": "5/2015"}, {"title": "", "body": "", "num": "3914", "d": "5/2015"}, {"title": "get real elementnode reactel thischildrens", "body": "like scrollviewchildren return reactelement ca nt get real htmlelementnode reactelement want getcomputedstyle node", "num": "3911", "d": "5/2015"}, {"title": "click events triggered enter keypress events inside forms", "body": "triggering keypress event inside form also click listener without defined result syntheticmouseevent button hit clickhandler adding prevent behavior", "num": "3907", "d": "5/2015"}, {"title": "grunt test failing webdriverphantomjs task", "body": "run fresh copy master get error running webdriverphantomjs task phantomjs start path null args warning bad argument use force continue aborted due warnings env os mac os x phantomjs v npm v node v git revparse head clue solve", "num": "3906", "d": "5/2015"}, {"title": "update content docs tutorial code examples", "body": "working throught tutorial get section js code longer took second realize needed see result indexhtml file updating code previous code example different way explain user", "num": "3904", "d": "5/2015"}, {"title": "question reactjs file src folder", "body": "reactjs file src folder right specifying path module require statement showing dependency file caring pathmaybe stupid question seasoned developerbut ca nt figure outhope someone help understand", "num": "3903", "d": "5/2015"}, {"title": "question source code", "body": "", "num": "3902", "d": "5/2015"}, {"title": "allowing lt element gt", "body": "write almost anything jsx write javascript except case far tell instead write think would neat able write huge deal would plug last leak jsx syntax allowing people context switch think underlying transform order figure something like", "num": "3900", "d": "5/2015"}, {"title": "rfc react forceremount", "body": "support uncontrolled components although necessarily encourage seems utility relevance handful usecases especially complex situations ie stateful component need reset say richtext editor case reactswf running swf response user action edit think complement currently worked around providing monotonic really hack neat solution much obscure end spectrum seems like missing feature interms feature complete uncontrolled components really going push hard especially could really obscure hack might really best tradeoff also considering batching", "num": "3899", "d": "5/2015"}, {"title": "get original htmlelement reactelements", "body": "hi nt know get original htmlelement reactelement like getdomnode reactcomponent", "num": "3898", "d": "5/2015"}, {"title": "throw exception validation error", "body": "wrote class like javascript recordlistitemjsx const react require react const recordactions require actionsrecordactions const record reactcreateclass proptypes record reactproptypesshape id reactproptypesnumberisrequired name reactproptypesstring status reactproptypesstring isrequired moduleexports record test would cause failure whereas using correctly throws error fails test", "num": "3897", "d": "5/2015"}, {"title": "deeper events triggered ff ie ie", "body": "fiddle exception may correct click first text console log click second text within button console log chrome safari behave way expect however ff ie ie click second text within button console logs understanding event handling correct click text within button component component trigger event bubble component trigger event would ff ie trigger event handler within component triggers fine another component", "num": "3895", "d": "5/2015"}, {"title": "react child keys must unique warning", "body": "hi please see jsfiddle gt check console warning", "num": "3893", "d": "5/2015"}, {"title": "get warnings tests", "body": "unhandled warnings tests nt great clean make unhandled warnings test failures", "num": "3890", "d": "5/2015"}, {"title": "handle wouldbe duplicate keys inline styles", "body": "inline styles awesome better worse css properties vendorprefixed values write inline react example ran found building something like reminded linter wo nt work situations", "num": "3887", "d": "5/2015"}, {"title": "custom component methods lose static properties", "body": "definingmixing custom method react component loses static properties var customfunction function magic customfunctionmystaticproperty important value reactcreateclass customfunction customfunction render function thiscustomfunctionmystaticproperty undefined static properties replaced four react properties reason remove users static properties methods would possible add react properties method keeping custom properties place", "num": "3886", "d": "5/2015"}, {"title": "context warning refers missing gist", "body": "getting warnings like warning ownerbased parentbased contexts differ see however seems refer gist longer exists moved", "num": "3880", "d": "5/2015"}, {"title": "unnecessary encoding element text content", "body": "given following piece code react replaces angle brackets quotation mark apostrophe ampersands html entities ie lt gt quot amp etc nt believe necessary replace quotation mark apostrophe nt need escaping would need escaping used attribute used text content element reason noticed trying encode json html element server side read back client side javascript json contains lot double quotation marks needlessly replaced quot", "num": "3879", "d": "5/2015"}, {"title": "warning setstate update mounted mounting component usually means called setstate unmounted component noop context", "body": "warning setstate update mounted mounting component usually means called setstate unmounted component noop warning contains context component setstate run setstate happen time changes another component cause unmount results setstate happening unmounted hard even link recent code chagne made setstate call responsible simply including message like warnings help devs least little tracking source warning", "num": "3878", "d": "5/2015"}, {"title": "remove react devtools download console log install", "body": "react devtools downloaded enabled chrome extension version using npm package version chrome extension browserified every time open console console log download react devtools better development experience remove update maintainers see solution", "num": "3877", "d": "5/2015"}, {"title": "formalize standard facebook style guide", "body": "current style guide contributing docs nt cover everything covered would like see section bit content actually could nt find facebook style guide online publicly anywhere could pretty big initiative kind documentation publicly available willing help process sounds ambiguous could add content contributing file", "num": "3875", "d": "5/2015"}, {"title": "conditional dynamic children causing error", "body": "multiple cases app conditionally create array dynamic children like worked fine react however upgraded seems causing error remove functionality eliminates error however ca nt figure fix error still conditional rendering tried messing around well defaulting returning empty array condition fails array single element ideas", "num": "3873", "d": "5/2015"}, {"title": "html tag component props", "body": "hi new react development english difficulty understand things possible react well would like use html tags props component example component would like use like title div mes infor div still whereas would like div inside real title nt know use props component result sorry poor english", "num": "3868", "d": "5/2015"}, {"title": "feature request ability pass context reactrender", "body": "especially testing parts gui would like able say javascript var mycontext foo reactrender documentgetelementbyid allcontent mycontext instead make wrapper component every time define childcontext", "num": "3867", "d": "5/2015"}, {"title": "reactproptypeselement message unclear", "body": "fails error message think error message nt clear enough case fails due passing multiple elements children prop imagine new user react using component accepts single child pass multiple children instead seeing error might lead believe somehow passing number string null etc children nt think first instinct would mistake passing multiple children make kind mistake easier diagnose error message emphasize fact pass single element", "num": "3865", "d": "5/2015"}, {"title": "error invariant violation dangerouslyrendermarkup render markup worker thread", "body": "error read issues relate issue requiring react globally defining window document component reducedjs javascript var react require react var reduced reactcreateclass getinitialstate consolelog start editing false return editing false edit consolelog setting state edit thissetstate editing true render consolelog rendering return moduleexports reduced tests javascript var react testutils jsdom reduced expect results mocha compilers js babelregister reduced test case current start editing false rendering tests pass without simulate root element reads click edit tests fail component changes state renders setting state edit rendering hook passing failing reduced test case tests fail component changes state renders hook error invariant violation dangerouslyrendermarkup render markup worker thread make sure available globally requiring react unit testing use reactrendertostring server rendering context happen way fix", "num": "3863", "d": "5/2015"}, {"title": "make part text link localization", "body": "need mark part text link smth like please log email text must localized later need log part link smth like render method javascript var link reactdoma href thismakehref login log reactcreateelement please link email output please object object email without surround text receive expected result simplified example need insert link text format marker like c working solution thank help", "num": "3862", "d": "5/2015"}, {"title": "documentation controlled components seems contradictory", "body": "documentation controlled components says form components allow listening changes setting callback onchange prop onchange prop works across browsers fire response user interactions value changes checked state changes however checkbox onchange handler getting called even though checked state dose nt actually change controlled think documentation changed state onchange fired response user input component even react leaves component state", "num": "3860", "d": "5/2015"}, {"title": "inline styles pseudoclasses discussion", "body": "hi really like intent behind inline classes react want use project really bad part lack hover focus etc know radium dont like decided try investigate react sources come implementation pr tell source code find inline styles rendering thank", "num": "3859", "d": "5/2015"}, {"title": "alternative observe sideways data loading", "body": "reference exploring alternative function proposed instead separate function defines list dependencies observables could allow render function trigger bunch sideeffects registers currently executing component observables sideeffects astonished implementation request would nt return observable instead would tell react currently executing component dependency observable needs rerender anytime subscription fires returns last value received particular observable somehow observable longer subscribed next render pass automatically unsubscribed perhaps observable api ideal model", "num": "3858", "d": "5/2015"}, {"title": "dangerouslysetinnerhtml replaces server side rendering", "body": "hey issue dangerouslysetinnerhtml dollar signs seems like calling reactrendertostring server side rendering html value given dangerouslysetinnerhtml contains gets rendered lost dollar sign could find easy way fix started terrible thing htmlreplace g", "num": "3855", "d": "5/2015"}, {"title": "request enable triggering warnings every render", "body": "client nice development warnings triggered initial render rendering server annoying warnings triggered first render ignored subsequent page loads render methods accepted additional options argument js reactrender hi windowapp alwayswarn false reactrendertostring reactcreateelement el data alwayswarn true crazy ideas might useful options perhaps autoappends second arg automatically catchesignores errors apis", "num": "3854", "d": "5/2015"}, {"title": "extend html element", "body": "click delay problem need attach four events element onclick ontouchstart ontouchmove ontouchend makes bit tedious many elements clickable create element maybe named receive property ontap attache four events element implement tap event think bad semantic tap action question extend html tag like div em support tap event ideas problem thanks", "num": "3853", "d": "5/2015"}, {"title": "publish alphas npm", "body": "mentioned currently points old rc would nice alphas published since things like context coming parents understand post one ca nt git repo master test fixes things", "num": "3850", "d": "5/2015"}, {"title": "missing shipped along ship", "body": "trying use improved serverside rendering support selected options select element upon inspecting react code checked npm download versions ca nt find fix included according tagged specifically checking following snippet code within reactdomselectjs missing code nt rendering serverside attr options return", "num": "3849", "d": "5/2015"}, {"title": "eslinting reactflux code without transpiling", "body": "possible realize could use babel lint transpiled code wo nt let find error code resource go order properly use eslint found article november still seems literature saying productionready link", "num": "3848", "d": "5/2015"}, {"title": "reactaddonstestutilssimulatescroll working jsdom", "body": "hi trying test scroll event could make scroll event propagation happen using testutils code never triggering scroll function callback change implementation something like works javascript contentdivscrolltop var evt documentcreateevent htmlevents evtinitevent scroll false true contentdivdispatchevent evt something wrong react testutils created stackoverflow ticket", "num": "3846", "d": "5/2015"}, {"title": "links within svgs", "body": "clicking within svgs cause issues case missing initial load ought see boxes light brown red blue brown orange click boxes blue brown orange click boxes light brown red click boxes worried blue brown orange box disappear confused please note entire thing svg link actually present dom decided show firefox clicking link thrown version initially thought reactrouter specific issue issue w reactrouter wrong issue exists without library issue wo reactrouter nt using normal svg element issue wo react svg elements following svg elements supported circle defs ellipse g line lineargradient mask path pattern polygon polyline radialgradient rect stop svg text tspan source although react nt support within svgs ought throw error something whats cause issue guessing going would viable option right", "num": "3845", "d": "5/2015"}, {"title": "real reason invariant violation markup wrapping node initialized error", "body": "searching everywhere find proper explanation kind error source code written lazily detects wraps necessary current browser please elaborate getting error testing jsdom amp mocha button select using want simulate event use exact line getting issue", "num": "3840", "d": "5/2015"}, {"title": "prevstate wrong values using forceupdate", "body": "simple component following state simple componentdidupdate function like change state using method setstate componentdidupdate fired get following values good expected course something like componentdidupdate fired alright get following unexpected values workaround still get proper value prevstate", "num": "3838", "d": "5/2015"}, {"title": "testutilsrenderintodocument nt render document function props", "body": "trying test component jest rendering using try passing function prop component receive prop render serializable variables code", "num": "3836", "d": "5/2015"}, {"title": "debugging css transitions", "body": "way debug warnings application quite large hints right direction would helpful name offending transition dom element triggered also see", "num": "3832", "d": "5/2015"}, {"title": "server side rendering example question", "body": "server side rendering example initial startup js function calling generated dynamically via php comment says really using webpack instead browserify nt immediately clear means indexphp generate code required run component client assume browserify bundle loaded page already used r get global require function provides every module may request well react note solution simple nt think scales multiple large pages well better using webpack startupcode lt lt function var react require react var component require moduleforjs reactrender reactcreateelement component propsjson documentgetelementbyid containeridforjs script someone elaborate way use webpack instead browserify thanks", "num": "3827", "d": "5/2015"}, {"title": "enable error logs invalid props proptypes specified", "body": "development would useful make warning invalid props validated proptypes error rather fail fast stop app show warning could easily missed", "num": "3825", "d": "5/2015"}, {"title": "select tag server side rendering", "body": "issues rendering server side tags possible reproduce problem browser interprets generated dom react server cause attribute tag displays first option selected time react loads let say second correct option displayed selected think solution behaviour", "num": "3824", "d": "5/2015"}, {"title": "propattribute exempt automatic suffix", "body": "tabsize css property getting suffix automatically unitless value represent number spaces make width tab js name property see shorthand specifying pixel values style props react docs", "num": "3823", "d": "5/2015"}, {"title": "support option update option content mixed variable literal text", "body": "option update fail option content mixed variable literal text example pr come soon", "num": "3816", "d": "5/2015"}, {"title": "ismounted returns instead unmounted", "body": "", "num": "3814", "d": "5/2015"}, {"title": "way rerender one row listview", "body": "hi read helps lot example genrows function pressdata key number boolean array var datablob var ii ii lt ii var pressedtext pressdata ii pressed datablobpush row ii pressedtext return datablob pressrow function rowid number thispressdata rowid thispressdata rowid thissetstate datasource thisstatedatasourceclonewithrows thisgenrows thispressdata rerender rows time wondering good way redraw row press thanks", "num": "3812", "d": "5/2015"}, {"title": "input td generates invariant violation findcomponentroot unable find element", "body": "hi actually working react app app invariant violation findcomponentroot unable find element pretty weird table tbody inside tr gt td inside td input render invariant violation error know could come please malicious code p ideas maybe need give details thanks lot", "num": "3811", "d": "5/2015"}, {"title": "controlled inputs type number work browsers", "body": "controlled inputs current safari firefox chrome let input anything controlled work supposed chrome dev build nt ie test sample jsbin reproduces problem", "num": "3810", "d": "5/2015"}, {"title": "custom iframe attributes nwjs formerly nodewebkit project", "body": "nwjs introduces custom attributes iframe element attributes since used disable node support iframe make since used trap navigation access windowtop windowparent iframe since used specify header http requests source attributes stripped building gui react", "num": "3809", "d": "5/2015"}, {"title": "hover bug mouse element quickly hover appears nt go away using onmouseenter onmouseleave", "body": "jsfiddle video jsfiddle shows mouse quickly sometimes onmouseleave nt seem register finally stackoverflow var hover reactcreateclass getinitialstate function return hover false onmouseenterhandler function thissetstate hover true consolelog enter onmouseleavehandler function thissetstate hover false consolelog leave render function var inner normal thisstatehover inner hover var outer height width margin backgroundcolor green cursor pointer position relative var normal position absolute top bottom left right backgroundcolor red opacity var hover position absolute top bottom left right backgroundcolor red opacity reactrender documentgetelementbyid container", "num": "3806", "d": "5/2015"}, {"title": "new hook update animations", "body": "problem svg elements need animation hook needed tween element one configuration another react steps updates dom thereby prevents animation current workaround svg components need animation write method always returns dummy dom react nt find diffs handle dom updates inside imo results nonidiomatic reactjs code method true representation svg element look like applying state props see example possible solution would helpful components inside transition groups method similar etc would invoked components added existing would block updates flushed dom called would called initial render transitiongroup", "num": "3804", "d": "5/2015"}, {"title": "warn calling reactrender head", "body": "calling reactrender script tag document head implies reactrender called document body parsed browser lead confusing error especially user utilizing serverside rendering error invariant violation findcomponentroot unable find element probably means dom unexpectedly mutated eg browser usually due forgetting using tables nesting tags like using nonsvg elements parent try inspecting child nodes element react id probably warn user calls reactrender body exists", "num": "3800", "d": "5/2015"}, {"title": "react mount update placeholder attribute", "body": "hi nt really know expected following var hello reactcreateclass render function return reactrender documentbody lead hello seems react mount test attribute standart actually mounted placeholder attribute standart expected react mount div placeholder attribute current state weird thing ca nt update attribute var hello reactcreateclass render function return reactrender documentbody reactrender documentbody produce hello see nt know supposed work think current behavior kind unexpected", "num": "3799", "d": "5/2015"}, {"body": "see", "d": "5/2015"}, {"body": "oh wait work", "d": "5/2015"}, {"body": "nevermind user error", "d": "5/2015"}, {"body": "need use using jsx generate components ie use coffeescript instead jsx go definingimporting components", "d": "5/2015"}, {"body": "please post support questions somewhere else stack overflow future", "d": "5/2015"}, {"body": "listed basically options future might support syntax like would nt result added html element nothing else", "d": "5/2015"}, {"body": "please see discussion", "d": "5/2015"}, {"body": "closing favor", "d": "5/2015"}, {"body": "problem link fiddle supports actually links bug updating fiddles would one way fix lot work since fiddles part old blog posts would kind like rewriting history opinion best way fix reverting links back see proposed solution", "d": "5/2015"}, {"body": "cody see thank u", "d": "5/2015"}, {"body": "feel like correctideal solution fiddle authors update fiddles said nt feel strongly let zpao make decision", "d": "5/2015"}, {"body": "look like result creating element right place even comment explaining might happen think need add", "d": "5/2015"}, {"body": "similar pr done reactnative facebookreactnative adds babeleslint also", "d": "5/2015"}, {"body": "indeed benefit nt worry anything internal yet flexible", "d": "5/2015"}, {"body": "tricky problem might want share input", "d": "5/2015"}, {"body": "hint javascript render var blocka aaa blockb bbb", "d": "5/2015"}, {"body": "vkurchatkin nt see hint change version example", "d": "5/2015"}, {"body": "vkurchatkin two different calls would two different react element instances nt really help react ca nt guess using variables inside branches also cases build tools optimize constant element creation put outside even guessing possible get false flags constant elements reused several times inside one rendered tree", "d": "5/2015"}, {"body": "gaeron well particular case trees shape reconciled fine wo nt case easy enough wrap subtrees components give react hint", "d": "5/2015"}, {"body": "gaearon yeah guessing even trickier render could create multiple copies elements either loop via helper function resulting distinct elements even though created location code dantman think best bet least medium term going hoist component state tree rather relying component state see general solve reparenting problem correctness point view remaining issue performance recreating dom instead reusing moved markup react pretty fast guessing nt much concern dantman change addition divs else block render function vkurchatkin correct preserve dom shapestructure thus allowing react better figure going reconciliation reuse structure change subtle correct", "d": "5/2015"}, {"body": "like point reparenting manually today render component want reparent separate nonreact node node reparented manually anywhere like remember may put empty react nodes", "d": "5/2015"}, {"body": "would cool react gives us opportunity use different syntax attrs props javascript var var b may would need know tags react supporting", "d": "5/2015"}, {"body": "murashki planned alleviate issues around unknown elements properties yet plans use different syntax adding additional attributes seems totally reasonable", "d": "5/2015"}, {"body": "try take stab assume simple adding props adding tests correct missing anything significant", "d": "5/2015"}, {"body": "even easier since nt really tests attributes actually test couple browsers changing values across renders reflected appropriately usually issues property vs attribute", "d": "5/2015"}, {"body": "quick guys thanks advance", "d": "5/2015"}, {"body": "zpao actually test couple browsers changing values across renders reflected appropriately across renders mean simply triggering rerender changing value", "d": "5/2015"}, {"body": "yea usually make simple component button toggles state test multiple values easily", "d": "5/2015"}, {"body": "zpao great thx", "d": "5/2015"}, {"body": "zpao jamischarles missed detail docs although nt need additional attribute keyparams required dsa ec keytypes see", "d": "5/2015"}, {"body": "zpao working though entirely clear nt able deduce meaning code someplace read", "d": "5/2015"}, {"body": "used determine updating means nt matter browsers work either currently use properties case may switch future indicate must set amp removed property attribute", "d": "5/2015"}, {"body": "thanks makes sense use get work properly across chromeffsafari testing method great well thx help zpao", "d": "5/2015"}, {"body": "apparently one handlechange never fired", "d": "5/2015"}, {"body": "trying debug result far proxied eventlistenerjs modified callback prints something prints stuff html xhtml version looks like important event one type info xhtml version fired else native event dispatched gets converted magical react events returns different values versions particular broken one missing apparently working differently two investigating", "d": "5/2015"}, {"body": "got checking compared however xml", "d": "5/2015"}, {"body": "sure works natively would nt expect changed react ps also would like react component never need query dom like", "d": "5/2015"}, {"body": "syranide assuming probably work way natively might left would like clarification someone happens know directly ever querying dom components using returned event object properties input elements property specifies return type input like booleanstringinteger reasons inputs allow see data attributes returned event objects selectoption even relevant", "d": "5/2015"}, {"body": "rtorr tried reproduce problem works maybe understand problem wrong", "d": "5/2015"}, {"body": "cody actually event object overwritten mixin thanks", "d": "5/2015"}, {"body": "help babeleslint issues", "d": "5/2015"}, {"body": "guess closed", "d": "5/2015"}, {"body": "closed", "d": "5/2015"}, {"body": "going assume yes zpao feel free reopen wrong", "d": "5/2015"}, {"body": "unfortunately nt good way fix see discussion", "d": "5/2015"}, {"body": "aww cry", "d": "5/2015"}, {"body": "yea happens umd browser build uses using requirejs need across board instead", "d": "5/2015"}, {"body": "made pull request chicoxyzzy bit faster pull requests different maybe good two smile", "d": "5/2015"}, {"body": "cody wonderful thx", "d": "5/2015"}, {"body": "use life cycle method componentdidmount sync already implement", "d": "5/2015"}, {"body": "looks like answered question closing", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "hi weyfarere would recommend checking fluxibleio start afaict isomorphic frameworks really easy grok fluxible comes close reason interested running flux server regardless reason separate copies component even nt want make api calls server could wrap api calls though would nt recommend", "d": "5/2015"}, {"body": "currently using third option bad created system use exact component code server merge minify automatically loaded one app client side renders complete web page data already inserted adds code initializing app initial props bit mounting code loads app separately secondary request pretty awesome really user nt javascript enabled nt load app still displays static page fine cases validation also done server side forth course page work without javascript plays nicely seo well toplevel stuff like wrote small dot template render react spent quite looking better solution seemed best way time sure fluxibleio stuff joshuagross mentioned certainly going look server side rendering using react definitely recommend third option point probably end opensourcing solution right tied closely company however help troubleshoot solutions want key rendering server side found collect data needed initially render potentially asynchronously render pass top component though hopefully form component factory pass props however deep need try gather information server within component like componentwillmount limited synchronous retrieval need account serverclient differences additionally components need contact server loaded client start code componentdidmount since called server client start making ajax requests forth without code ever run server getting server code work client use babel server code using importexport wrap component files amd syntax merge together form nice dependencies forth use almondjs provide definerequire client also quite large preprocessing stage formats define statements module ids relative file location everything ensure external dependencies like react lodash jquery etc included well older version code repositories anything say would depend want concern react rerendering client would anyway funny story actually forgot reenable server side rendering testing bug contents html body object object webpage never saw week react rerendered fast client would nt see blank page", "d": "5/2015"}, {"body": "joshuagross nt want use flux server would introduce needless complexity server takes request set parameters fetches data persistent store returns htmljson nt need worry state multidirectional data flow already dead simple novacrazy mentioned two updates meant sense altering two separate files understand react handles rendering rerendering hoping would solution would allow share structure client server simply put want structure page decoupled data source decouple singular ui components compose section components keeping decoupled options two three different sets pros cons render markup server risk javascript might take load could due circumstances control eg spotty mobile connections user would nt able interact certain parts interface could still click links submit forms would appear though everything else broken hand skipped rendering markup server sent skeleton page made components loading state along json embedded html would least let user know page still nt ready use javascript loads replace skeleton components full data believe better usability standpoint comes cost perception would page loading slower ca nt beat speed rendering html immediately lose ability indexed search engines ca nt run javascript since website needs indexed render html server page wanted try react small section website see worth switching would nt end world could nt would like decouple page structure given data would allow sharing client server site already compiles data needed render page singular json object allows send back html json depending client need using handlebars share templates server client since completely decoupled data fetching however huge hassle comes keeping track state partial renders client hoping react would give best worlds shared structure server client keeping staterendering simple reason client spent fair amount time reading articles watching videos react nt come across solution hoping someone would better idea however seems like trading one set problems another point question would difficult set problems maintain seems though simplifying amount energy takes reason components may worth cost keep two structure files sync", "d": "5/2015"}, {"body": "since topic nt seem problem react seems appropriate discussion", "d": "5/2015"}, {"body": "move discussion site sorry", "d": "5/2015"}, {"body": "try keep api changes minimum provide deprecation notices nt hard timeline releases instead waiting something meaningful provide typically gone months", "d": "5/2015"}, {"body": "indepth hardtofollow partial discussion subject truly proper way reset values set empty string null reason inputs reset reset internally due becoming uncontrolled whereas textareas keep last value behavior behavior rely like", "d": "5/2015"}, {"body": "see looks like issue still open closing one", "d": "5/2015"}, {"body": "jquery loads data values caches try instead also please post support questions like stack overflow future tracker bugs react", "d": "5/2015"}, {"body": "see break private stuff get come write apis missing sebmarkbage", "d": "5/2015"}, {"body": "technically still moved level deeper feel free update hack checkout reactinstancehandles fact relay even using hack purpose perfect though id nt contain full key path path rootnodeids also want move away using composite ids expensive instead use key tree potentially counter event listeners implementation details nt want expose however use case definitely scope thinking public apis solve similar things want provide way externalize state tree moving towards model internals sure representation probably long term terms public apis short term want builtin support rehydrating state tree use case way save memory cleaning component tree keeping state memory eg view offscreen page transitions forward backwards masterdetail view switch different detail views longer term might add serializable form three options exposes state component tree want component tree transient nonexistent memory eg plain stateless render function nt need backing store transformation however things like tooling want expose whole render tree introspection public api eg building reactdevtools use case would attach external tool running react instance maintain external component tree production purposes would able connect production instance react plan right terms public apis plan satisfactory", "d": "5/2015"}, {"body": "refers function instead global setinterval filed upstream", "d": "5/2015"}, {"body": "autobinding still works thissetinterval calls setinterval without context get error", "d": "5/2015"}, {"body": "fixed babel thanks", "d": "5/2015"}, {"body": "spicyj makes sense erroneously thought guard getting called second time sebmck thanks quick turn around", "d": "5/2015"}, {"body": "props state antipattern intended serve initial state stateful component say may want content textfield update focused another exception need perform expensive computations data may want repeat storing result computations make sense tell example mirroring props state idea would anything bad idea", "d": "5/2015"}, {"body": "cc salier", "d": "5/2015"}, {"body": "think fire ime string committed one way handle would ignore events use event immediately following quick testing osx chrome firefox simplified pinyin korean event order data seem correct enough predict problems ie korean may get lucky think may continue see issues alternative input methods like google input tools extension may workarounds", "d": "5/2015"}, {"body": "gone back forth benefits would solve case setting state based current value also read props see comment instead recommendation use function form setstate instead write planning change anytime soon improvements probably along lines making apis functional support better", "d": "5/2015"}, {"body": "using npmversion unbundled version react use following workaround else need dig react bundle replace something else say", "d": "5/2015"}, {"body": "wrong record nt setstate e even consolelog shows undefined react apparently better recycling synthetic events something along lines", "d": "5/2015"}, {"body": "yea events pooled probably changes batching resulted difference seeing either way reset object using really safe pass around changing setstate copy properties make work", "d": "5/2015"}, {"body": "linked", "d": "5/2015"}, {"body": "found thanks heads sync site shortly", "d": "5/2015"}, {"body": "hi maybe reactfinddomnode work eg", "d": "5/2015"}, {"body": "contain reactelements dom nodes would like actual dom node need assign ref use reactfinddomnode access dom mounted see", "d": "5/2015"}, {"body": "nt default html behavior input button form pressing enter also click button", "d": "5/2015"}, {"body": "even close default behaviour keypress triggers total random event form fact trigger form simulate click button issue button event magically converted event form element", "d": "5/2015"}, {"body": "buttons default html pressing enter simulates click button standard html behavior specific react", "d": "5/2015"}, {"body": "apologies rechecked original code might caused browser defaults first button missing type directive ff chrome probably assign type submit default could explain issue", "d": "5/2015"}, {"body": "looks like probably phantomjs version compatible using", "d": "5/2015"}, {"body": "way use versions one machine need phantom projects", "d": "5/2015"}, {"body": "sure use install local phantomjs fallback system one surprised nt complain versions tried installed seemed still install local copy forcing show detected global version nt match expect running nt issues nt either", "d": "5/2015"}, {"body": "reinstalled phantomjs package via npm works nt know actually happened", "d": "5/2015"}, {"body": "react custom module system needs build system none inside use relative paths module system right one used internally fb name module defined inside resolved modules globally unique order work commonjs move files rewrite require statements relative result build step used ship npm", "d": "5/2015"}, {"body": "works remove brackets confused edit nevermind", "d": "5/2015"}, {"body": "need uppercase react knows html element", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "yea works since pass whatever along createelement even variable string dom component created point capitalizing important", "d": "5/2015"}, {"body": "know thanks", "d": "5/2015"}, {"body": "sure proposed api unmount remount", "d": "5/2015"}, {"body": "spicyj think instead guess effectively rather ignoring ignore fail internal instead ie unmounted mounted changed", "d": "5/2015"}, {"body": "would nice solution cases would work everything gets rerendered top", "d": "5/2015"}, {"body": "cody like like internal variable regular possibly batched update like everything else internal flag specifying must pass internal edit component ends unmounted parent flag simply effect everything works naturally probably important part usecases something really like see move addons another topic", "d": "5/2015"}, {"body": "syranide understand everything gets rendered top needs called would bad wonder edge cases since guaranteed called props change still undocumented nt know issue", "d": "5/2015"}, {"body": "cody ah yes see mean good point getting uneasy feel thinking hmm", "d": "5/2015"}, {"body": "nt think since providing new key easy trying reduce api surface area increase thanks idea", "d": "5/2015"}, {"body": "elements lightweight objects knowledge html elements sure exactly asking would need looking get div access type", "d": "5/2015"}, {"body": "like scrollviewchildren return reactelement ca nt get real htmlelementnode reactelement want getcomputedstyle node", "d": "5/2015"}, {"body": "reactelement nt correspond dom node mount dom using", "d": "5/2015"}, {"body": "using react pulled npm", "d": "5/2015"}, {"body": "proptype validation throw uses consoleerror throw nt pass dom node creates node render wo nt throw", "d": "5/2015"}, {"body": "let know misunderstood happening reopen otherwise nt sounds like bug", "d": "5/2015"}, {"body": "suppose drawback pasting full source assume dom node refer correct first snippet file named test second two snippets appropriate require top file note also using testdom make virtual dom using mocha jest another test alongside deal throws test pass test fail", "d": "5/2015"}, {"body": "talking actual dom node without throw creates node calls signature different looks like thing calling test nt think would throw either general strongly suggest expecting specific error error expecting error masking actually wrong case expecting error wrong thing error catching calling render without dom node anything proptypes test look like", "d": "5/2015"}, {"body": "oh miss tell new react wink thank clearing thanks suggestion spy console good idea", "d": "5/2015"}, {"body": "behavior without react nt know something devs want normalize sound useful clickable child inside button", "d": "5/2015"}, {"body": "ah aware inherit clickable items button general since regular javascript works nt think react work differently closing", "d": "5/2015"}, {"body": "also sluggish behaviour expected thanks", "d": "5/2015"}, {"body": "issue getting warning says child keys must unique multiple siblings key since using data nt sorted category end multiple category also using name key multiple items name get warning last least perf adding removing thousands nodes per keystroke bunch optimizations could easiest simply toggle css property rows nt shown exact dom nodes matter filter toggling single property much cheaper addingremoving nodes using prod build much faster since lot code debugging purposes", "d": "5/2015"}, {"body": "information warnings", "d": "5/2015"}, {"body": "run tests may best seeing colored output fairly obvious talking warnings logged console passing test lines", "d": "5/2015"}, {"body": "get warnings fix first easy second one think expected nt render method foo class exactly test checks way suppress warnings single line may stubbing console good way think second warning fixed", "d": "5/2015"}, {"body": "tests meant test warnings thrown catch manually suggestion", "d": "5/2015"}, {"body": "fix reactchildren test warnings", "d": "5/2015"}, {"body": "almost like mentioned edited comment use simple key used similar cases", "d": "5/2015"}, {"body": "similar spec maybe another way fix warning mean warning without add key attribute otherwise would test spec file cause specs would throw warnings nt know get two warnings", "d": "5/2015"}, {"body": "may missed something recheck later today", "d": "5/2015"}, {"body": "think get key point spyon function", "d": "5/2015"}, {"body": "sort hard problem solve way best answer far add runtime checks actually get right value eg check browser needs webkitflex alternatively nt use use inlines styles nt think anything else something like autoprefixer may exist js style objects nt think ever integrate core going close", "d": "5/2015"}, {"body": "properties nt removed nt equal example react autobinds component methods component nt write guess nt issue use classes since react wo nt autobind methods classes", "d": "5/2015"}, {"body": "aware autobinding getting wrapped however uxapi perspective inconsistency therefore issue properties get lost copied wrapper preserves function properties likely ca nt used react internally backwards compatibility reasons workaround problem redefine function properties works nt necessary classes soon mixinextendability problem solved glad switch", "d": "5/2015"}, {"body": "bah jimfb changed username guess github nt set redirects everything last time looked could nt update fbme links look nt much problem force issue time", "d": "5/2015"}, {"body": "thanks zpao posterityuntil looks like referenced gist", "d": "5/2015"}, {"body": "another option change username back jsfb least temporarily fbme fixed way existing users nt get let know", "d": "5/2015"}, {"body": "taken look react code first time readable provide fix agree needs fixing", "d": "5/2015"}, {"body": "bunch discussion let continue might good time revisit make actually happen expert definitely value expert opinions", "d": "5/2015"}, {"body": "sounds like great idea", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "please stop adds zero value already identified good idea", "d": "5/2015"}, {"body": "github really needs automatically consolidate comments single block digest email", "d": "5/2015"}, {"body": "got pr new message like warning setstate update mounted mounting component usually means called setstate unmounted component please check code exampleapplication component noop", "d": "5/2015"}, {"body": "nt see react tab chrome dev tools also quite sure access dev tools honest see chrome settings", "d": "5/2015"}, {"body": "browserify get prod version nt message probably want extension users anyway actually debugging sure best way devtools expecting inspecting browser window nt playing nicely together devtools set global browser window react looking context execution environment nt browser window might close quick cc sebmarkbage see comments", "d": "5/2015"}, {"body": "alright run production mode ca nt use react developer tools guess extension nt work cases like mine", "d": "5/2015"}, {"body": "mean ca nt use react developer tools debug extension kind extension use tools open extension may possible use react devtools debug extensions insert global flag pages find react instance", "d": "5/2015"}, {"body": "think work global global able global scope", "d": "5/2015"}, {"body": "btw reason stuck react upgraded yet", "d": "5/2015"}, {"body": "maybe something wrong mean nt see react nav item console sure ever come think certainly nt know nt got warning mentioned sure kind extension types mine chrome extension uses browseraction inject iframe reload pdf url inside pdfjs environment yes used dice global believe got issues dependencies mean using nt updated modules reason besides could update", "d": "5/2015"}, {"body": "clearer never gotten react developer tools work recall keep getting warning using wanted turn made issue", "d": "5/2015"}, {"body": "hi bhamodi computer science graduate student university cincinnaiti would like work first contribution please let know fine already downloaded source searching build instructions thank much advance regards nithya", "d": "5/2015"}, {"body": "started work formal guide time ago nt time finish nt updated part contributing doc since introduced bit tooling help enforce lot style linting catches many issues remaining hard define anyway like test statement long part following get way think need point update contributing version said somebody interested great", "d": "5/2015"}, {"body": "zpao take initiative", "d": "5/2015"}, {"body": "addressed smile", "d": "5/2015"}, {"body": "code posted sounds fine reduce simple test case happy reopen take look", "d": "5/2015"}, {"body": "note brackets instead quotes quotes always strings brackets get evaluated case give new reactelement render exactly like already though beware putting divs spans could also assign variable first need apologize fore english future though question best asked mailing list stack overflow since much specific thing react vs problem react", "d": "5/2015"}, {"body": "cc jimfb remember us talking nt sure result", "d": "5/2015"}, {"body": "one issue regard subtrees enough subtree rendering introduced subtree rendering implicit context pass another issue method already third argument wrappers basically poor man named arguments allows us put arbitrary things third issue nt even think object maps define context future would make less sense finally unit testing recommended strategy unit testing use shallow rendering add context support shallow rendering instead", "d": "5/2015"}, {"body": "cc spicyj designer error messages", "d": "5/2015"}, {"body": "make say expected single reactelement", "d": "5/2015"}, {"body": "sounds good", "d": "5/2015"}, {"body": "window likely properly set seem standard would expect correct", "d": "5/2015"}, {"body": "placed tests executionenvironmentjs directly hook require react passing get true returned canusedom every test javascript function", "d": "5/2015"}, {"body": "moontahoe possible environment needs set react required edit seems perhaps react required elsewhere", "d": "5/2015"}, {"body": "syranide thanks isolated tests separate branch found missing globalnavigator added code works", "d": "5/2015"}, {"body": "thumbsup glad worked environment checks little bit fragile", "d": "5/2015"}, {"body": "better question mailing list stack overflow direct issue react bringing", "d": "5/2015"}, {"body": "bug checkboxes applies text inputs due browser bugs yet normalized might strictly possible need explicitly detect change made simply test", "d": "5/2015"}, {"body": "confused far understood controlled handler even shown screen nt change user types handler gets called whose reflect changes user even though actual nt going change unless handler triggers different property react element far understood checkboxes supposed behave way misunderstood thanks", "d": "5/2015"}, {"body": "correct", "d": "5/2015"}, {"body": "found following docs think adding attributes jsx", "d": "5/2015"}, {"body": "mentioned ideas future best practices various community tools react current largely exposes underlying dom", "d": "5/2015"}, {"body": "want use check radium radium support due browser security measures needed", "d": "5/2015"}, {"body": "docs link outdated latest version makes mention syntax right planning add support complicated inline styles like react core", "d": "5/2015"}, {"body": "posted pr implements underlying api would power new semantics mostly continueinform discussion", "d": "5/2015"}, {"body": "mixed feelings say like keeps api surface minimal nt introduce new intermediate states eg componentdidreceivepropsandnowgonnaupdateobserveddata", "d": "5/2015"}, {"body": "mixing concerns render nt render magic looks like synchronous real logic async might make people rage ca nt match expected abstraction actual functionality tool needs rerender anytime subscription fires subscriptions nt fire observables subscriptions sinks subscriptions send data forward somewhere looking second observable function first subscription problem ca nt keep last value received observable everytime call give new observable namely solve making observablefetch internally persistent registry sounds really bad global shared state hidden framework magic core problem need separate observable creation observable consumption suggested implementation conflates last value received observable well observe last value recommend fully embracing observables erik meijer dropping whole idea", "d": "5/2015"}, {"body": "seems makes server rendering much harder need call render extract data dependencies", "d": "5/2015"}, {"body": "solve making observablefetch internally persistent registry url observable sounds really bad global shared state hidden framework magic think version also present original hook proposal ordering important since allows provider data reference counting cache ie cache data long nobody listens unsubscribed immediately reference count would go zero subscribe data original proposal lifetime observable new propsstate come proposal lifetime next value comes agree nt really make sense observables see use observables presumably reason one might course turn observable factory data tracker provider la nt seem additional value using data tracker directly said concerned datatracker suggested nt understand compatible immutable data plain object immutablejs models point starting think sideways data injection solved well higherorder components nt need core like learn makes react team think otherwise think even seems proposal could implemented userland higher order component child actually already asked question got answered oops", "d": "5/2015"}, {"body": "glenjamin nt make serverside rendering harder rerun render client discover dependencies fact rerun render client anyway setup refs callbacks component data structures nt making things worse", "d": "5/2015"}, {"body": "jimfb following correctly nt give way collect data dependencies resolved serverside without calling rendertostring multiple times server", "d": "5/2015"}, {"body": "gaearon correct would benefit using observables unless system already uses observables case means observables propagate state write whereas react render utilizes data read observables perfectly compatible react model actually reverse react internally yeah observable api nt add additional value talking react core gaearon regards point immutableplain javascript super important one give lots thought system actually plays super nicely immutable plain javascript encouraged use immutableplain javascript much possible nt use data tracker everything behaves exactly behaves today sometimes however eg large cyclic graphs immutable data starts run troubles recommended solution break cycle keys lookup map effectively introducing mutability immutable graph api allows data store implementor without exposing mutable breakpoints located able effectively implement app immutable data encouraged wo nt ever learn api nt practical would able call api better performance sideways data loading however please nt feel obligated ditch plainimmutable javascript add new api still love immutable plain js", "d": "5/2015"}, {"body": "glenjamin ah see asking either api observables require minor nonisomorphism word api ssr datastores would need return data eagerly eagerly fetching nt usually problem ssr database source truth lives near observables ssr datastore would need close observable streams loading close client order receive updates server nt really making situation worse proposals", "d": "5/2015"}, {"body": "jimfb thanks addressing bit like reverse would primary means subscribing data changes could used finergrained subscriptions large trees correct flux architecture would subscription point store would people writing stores exposed api would rather people writing flux libraries encouraged use would encouraged pattern", "d": "5/2015"}, {"body": "gaearon yes exactly like shouldcomponentupdate reverse allows datastores provide hints component data depend changed might want rerender rerenders optimal way maximally efficient cases even efficient immutablejs see josephsavona details api would probably used people writing datastores potentially also people writing flux libraries api choose pattern would recommended sideways data loading ie nt setup subscriptions flux stores manually sideways data loading still discouraged ie people try find way use immutable props sideways loading data anyway would recommended let react track data course could still always tracking manually like today felt need thing one motivations oft quoted statistic something like mixins trying implement sideways data loading sure statistic came certainly true sideways data loading one main thing mixins used also one error prone things people react want simplify see motivation observe", "d": "5/2015"}, {"body": "reading proposals nt understand everything think react try solve problem keep simple however crazy idea thought render function could return promise example sure good idea guess would nt problem isomorphic apps react wait render promises complete", "d": "5/2015"}, {"body": "interesting update work around need pushupdates dirty marking use protocol pulling data eg polling data", "d": "5/2015"}, {"body": "hmm ca nt repro simple case give bit detail perhaps test case jsfiddle elsewhere", "d": "5/2015"}, {"body": "oops sorry seems like code something wrong react works fine", "d": "5/2015"}, {"body": "tried adding libraries remove delay", "d": "5/2015"}, {"body": "fastclick libraries", "d": "5/2015"}, {"body": "alitavector thank considered library alternative", "d": "5/2015"}, {"body": "nt exposed way extend builtin event system essentially problem extensions would nt scoped component global set different components different event systems makes difficult share components community different event systems may conflict namespace work controlled environment want make easy share reuse components without conflicts support would need build way supports isolation major benefit wrapper like since support component isolation default", "d": "5/2015"}, {"body": "sebmarkbage thanks explanation", "d": "5/2015"}, {"body": "nightly builds published published nightly zpao probably makes sense document fact somewhere", "d": "5/2015"}, {"body": "also fiddle nightly build", "d": "5/2015"}, {"body": "dantman thanks bringing bad intention publish revs sync internally fb nt synced recently published master andreypopp published commit least ones nt decide docs spicyj talking friday moving builds website amp official home cody sure ever shared nice detective work", "d": "5/2015"}, {"body": "nt make release decided little risky comment refers release pr", "d": "5/2015"}, {"body": "babeleslint lints original source transformed code see post info set", "d": "5/2015"}, {"body": "means react loaded thought dom environment nt create wrapper node needs test rendering certain nodes check use tell detecting globals ensure defined", "d": "5/2015"}, {"body": "well test cases explicitly specify nt enough", "d": "5/2015"}, {"body": "getmarkupwrap creates wrapper node required could perhaps change create demand cache right nt", "d": "5/2015"}, {"body": "general made assumption execution environment nt change may run issues", "d": "5/2015"}, {"body": "circumvent issue jsdom", "d": "5/2015"}, {"body": "surprising issue case occur test windows environment", "d": "5/2015"}, {"body": "using jsdom make sure creating correct globals environment requires react see", "d": "5/2015"}, {"body": "yes globals created correctly think like", "d": "5/2015"}, {"body": "require react tricky beast really careful set everything else ps think also need add globalwindowdocument well", "d": "5/2015"}, {"body": "set globalwindowdocument test inputs update thanks helping", "d": "5/2015"}, {"body": "berkeleytrue absolutely right somehow missed include globals require react amazing man thanks ton", "d": "5/2015"}, {"body": "important lesson learnt always declare globals including react closing issue thanks everyone", "d": "5/2015"}, {"body": "welcome", "d": "5/2015"}, {"body": "modify directly use new object created next state reference object previous state workaround use also problem modify directly calling", "d": "5/2015"}, {"body": "workaround clear using setstate recommended pattern whenever want update state mutating state object directly works cases saw work consistently lifecycle methods recommended", "d": "5/2015"}, {"body": "yes really wanted use setstate matter scenario complex state structure many levels depth use setstate agile manner update one property might deep state tree using something like reactaddonsupdate becomes overkilled need build whole state structure level depth want update", "d": "5/2015"}, {"body": "suspect problem attempting access props directly rendered component passing function prop works properly following test passes js render component function prop function var callbackcomponent reactcreateclass componentdidmount function thispropscallback render function return var callback mocksgetmockfunction var renderedcomponent reacttestutilsrenderintodocument expect callback tobecalled", "d": "5/2015"}, {"body": "actually said example tried something like test nt worked either even set default prop nt replaced new one passed obs works fine rendering outside test", "d": "5/2015"}, {"body": "see implementation renderintodocument simply calls reactrender trouble passing functions artifact test environment something specific react", "d": "5/2015"}, {"body": "nt example poor documentation talking pure bundles browserify ignoring ability factor bundles multiple files vs webpacks hotloading capability nt belong documentation irrelevant also opinion one argue pretty wrong", "d": "5/2015"}, {"body": "yea best example actually nt anything hotloading nt well informed plus years old point generating multiple bundles browserify nt super easy point bit show generic solution nt entry point app mainjs something things needs bundled need way accessing react component going close since question feel free continue discussing", "d": "5/2015"}, {"body": "ah well yeah years ago browserify lot janky webpack interesting nt hotloading tho guess reads way generic entry point actually browserify due plugin create generic reactsetup include included anywhere want use react code browserify factor common bundle setup file tada also good way force correctly modularizing code big team might need global nt rely general module design", "d": "5/2015"}, {"body": "ok going reiterate understanding points example general zpao abritinthebay would really appreciate guys could verify saying since fairly new lot js eco system browserify actually perfectly fine used bundle necessary dependencies whether use browserify vs webpack components rendered markup returned directly via servermarkup case js present startupscript replacement something like mainjs used kickstart component client side actually page loads js present render component given container clobbers static markup servermarkup reality nt even need render script tag directly could right script tag loaded page rendering done simplify demo overall trying make sure get rendered components react server return make sure start react component client side well", "d": "5/2015"}, {"body": "seems right certainly point correct tech choice end nt even clobber static markup btw content rendered react originally server react dataid attributes etc react attach right places dom rewrites propsstate react code client server", "d": "5/2015"}, {"body": "requested discussion going point", "d": "5/2015"}, {"body": "thanks zpao", "d": "5/2015"}, {"body": "fixed master next release", "d": "5/2015"}, {"body": "thanks spicyj", "d": "5/2015"}, {"body": "solution use ch unit pretty much equivalent ch unit represents width precisely advance measure glyph zero unicode character element font", "d": "5/2015"}, {"body": "sounds like good idea interested creating pr add", "d": "5/2015"}, {"body": "zpao yes thing nt know whether needs anything special done also include handle vendor prefixed versions tabsize x add srcbrowseruidomcsspropertyjs isunitlessnumber object x add docs x test coverage already place", "d": "5/2015"}, {"body": "autogenerate venderprefixed styles might seen changed code need thanks", "d": "5/2015"}, {"body": "valid bug going close gh issue favor tracking", "d": "5/2015"}, {"body": "fixed please look", "d": "5/2015"}, {"body": "icenuts create react native issues repo", "d": "5/2015"}, {"body": "sorry", "d": "5/2015"}, {"body": "try master version react changing packagejson running npm install may see informative warning", "d": "5/2015"}, {"body": "hi spicyj thanks help unfortunately peers dependencies allow idea better informative warnings", "d": "5/2015"}, {"body": "ok hacked bit peerdependencies others components got last version react gives lot useful detailed informations running problem seems quite unresolvable react asks remove react throw think let react happy p", "d": "5/2015"}, {"body": "sorry current limitation ca nt return one component react render method something want fix refactor components make work right helps plain function react component return array elements nt necessarily help need componentlocal state like geneexonrow", "d": "5/2015"}, {"body": "thanks already read kind limitations googling stuck trying wrap around div thought react would read div wrapper remove rendering refactored code works like charm brave limitation thanks framework really pleasure cut things module get javascriptjquery soup", "d": "5/2015"}, {"body": "\u0432\u0441\u0435 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043a\u0430\u043a \u0438 \u0434\u043e\u043b\u0436\u043d\u043e", "d": "5/2015"}, {"body": "detailed info component receives string value property silently ignores behaves like uncontrolled one example works intended change default value nan", "d": "5/2015"}, {"body": "discussion", "d": "5/2015"}, {"body": "thanks finding cody going close continue discussion", "d": "5/2015"}, {"body": "able work around react would need allow support custom nonhtmlspec attributes attributes used without", "d": "5/2015"}, {"body": "could add attribute directly dom element currently file inputs nwjs mounting like", "d": "5/2015"}, {"body": "nt think react bug encounter issue using native js jquery library imagine limitation browser performance computer unable reproduce issue component however think due performance difference machine", "d": "5/2015"}, {"body": "think might fighting react rather manipulating dom method mean wo nt really able use handle animations definitely achieve identical animation better performance within react", "d": "5/2015"}, {"body": "levibuzolic sorry nt think understand complex svg shapes animated using css means even drop dependency would write timer based code transitions svg element one shape shape b want method return svg element shape b already gone almost b new structure pushed dom else react interrupt transition hence needs callback function tell react finished whatever tween performing part update go ahead update dom", "d": "5/2015"}, {"body": "ameyms sorry probably nt explain well basically want use timing function manipulate kind progress state allow method handle rendering animationtransition based state important think method something run many times nt method returns template html able return dom acurately represents current components props state given time soon party library change dom component state wo nt match dom run trouble gets called similar methods trigger library timing function manipulates state time render function rerun every state change rerender svg represent new state look projects like give simplified interface transitioning two states still need help put together example component", "d": "5/2015"}, {"body": "saying inside seems hacky current solution also means reinvent code sad", "d": "5/2015"}, {"body": "definitely nt result infinite loop use timing function update state modify hacky react made also wo nt need duplicate muchany code need timing function render end looking something like", "d": "5/2015"}, {"body": "close issue react authors also share opinion levibuzolic cc spicyj vjeux zpao", "d": "5/2015"}, {"body": "yes levibuzolic approach sounds great", "d": "5/2015"}, {"body": "worth noting happens using server side rendering rendering otherwise trying get node hit invariant target container dom element", "d": "5/2015"}, {"body": "yes though also recall issue someone rendering documentbody null confused", "d": "5/2015"}, {"body": "weird looks like react innocent browser update attribute meaning anyway works change", "d": "5/2015"}, {"body": "used property contenteditable elements create placeholder css less withdefaultuncontrolledcontenteditableplaceholder apply self childs amp contenteditable dataplaceholder empty focus content attr dataplaceholder color colorplaceholder hack firefox contenteditable focused empty smaller height see amp contenteditable empty focus content feff switched instead works better", "d": "5/2015"}, {"body": "cody explain think react innocent case looks like setproperty setattribute update value since initial render updatedrender different would consider react bug", "d": "5/2015"}, {"body": "update looks like setproperty added mootools nt normally exist dom node tested fiddle mootools loaded thus testcase called setproperty point initialrender updaterender still holds going leave valid bug", "d": "5/2015"}, {"body": "react nodeplaceholder value nt work divs divs nt property eventually support arbitrary properties amp attributes perhaps work assuming use setattribute blindly fwiw using arbitrary property data exactly data using dataplaceholder best thing anyway", "d": "5/2015"}, {"body": "jsfb yeah react causes confusion innocent attributes problem example", "d": "5/2015"}, {"body": "yes initially thought placeholder standart property moved instead works fine", "d": "5/2015"}, {"body": "looks bad nt great job interacting native events sebastian wrote post onceuponatime native synthetic event systems large interoperable even ca nt see reason fatal like syranide spicyj understand going wrong fix might look like", "d": "5/2015"}, {"body": "happens handle click event node removed event triggered react receives sebmarkbage deal case events fire detached elements ignore events nodes nt document nt think bug easily fixable otherwise nt old event handler reconcile removes node", "d": "5/2015"}, {"body": "additional details impact bug sounds like bug likely trigger use nonreact component eg jquery ui react single page application nonreact component triggers navigation within app", "d": "5/2015"}, {"body": "rigdern thanks excellent bug report good repro case spicyj think happens use root id determine element clicked repro case key part root id two reasons child container multichild nt get key added root id nt unique key nt need one button different type make sure key used part root id problem solved problem repro nt firing removed node firing event new node would solved used unique id per instance identify event handlers instead generate root nonunique think wanted anyway another repro shows different issue", "d": "5/2015"}, {"body": "spicyj zpao change thoughts renderintodocument maybe attach dom avoid cases like cleanup trying avoid removed logic might better solution improve test isolation", "d": "5/2015"}, {"body": "help avoid cleanup effort tests opensource version react see calls removenextsiblings reactsrctestindexhtml nt feel strongly", "d": "5/2015"}, {"body": "suppose two options deprecate create new method anyone better name simply renamed version change actually render document option seems like best option point current behavior nt received complaints besides mine thus far", "d": "5/2015"}, {"body": "probably reactrender right would want warn rendering another react instance tree", "d": "5/2015"}, {"body": "sure related warnings", "d": "5/2015"}, {"body": "provide detailed example use case normally fluxlike framework events get sent dipatcher results updated datastores rerender nt see would needwant beforeafter notification would actually mean different something beginningend event handler", "d": "5/2015"}, {"body": "understand data flow widgets dispatcher stores widgets events also sent dispatcher stores listening stores however pictures see sending events directly long stays unidirectional acyclic unaddressed problem see synchronous events used cause reentrancy store listens store b sends change event within sending event getters called store b store needs robust sounds really simple practice easily get hardtodebug problems synchronous events react would want make events asynchronous could cause multiple rerenders one logical change therefore would like use synchronous events event queue flushed empty end external event mouse click server response etc way send action system everybody send events whenever like processed everybody defined state however would flush queue every click handler etc errorprone reason would like limited number hooks address external events maybe prerender hook nt even answer anything react synthethic event system would allow detecting end processed browser event", "d": "5/2015"}, {"body": "something replace mc though whether flux relay another system entirely default option callbacks passed levels deep props get extrapolate thinking react becomes quickly unmanageable maybe take ryanflorence suggestion also add data flow bullet point react implements oneway reactive data flow reduces boilerplate easier reason traditional data binding combine flux full replacement mvc architecture helps build great apps faster way still explain relates mvc present recommended architecture", "d": "5/2015"}, {"body": "spicyj since babel errors better recommendation moving forward free close", "d": "5/2015"}, {"body": "jsfb nt added error nonstringfunction types said wanted add", "d": "5/2015"}, {"body": "mention using coffeereact babel nt really work wish would error would stack could tell react element parents minimal references react methods opposed giving stack react methods", "d": "5/2015"}, {"body": "looks like resolved end going close bug track warningforrenderinhead separate issue clarity", "d": "5/2015"}, {"body": "closing", "d": "5/2015"}, {"body": "bit frustrated installs instead would nice installed react master expected deprecation rt side effect fixing", "d": "5/2015"}, {"body": "probably wo nt fix since build process better fix get back track us publish alphas npm", "d": "5/2015"}, {"body": "ok still need add proper deprecation notice npm probably write blog post otherwise done", "d": "5/2015"}, {"body": "fix merged closing bug", "d": "5/2015"}, {"body": "wwayne nt see bug react appears rendering exactly expected never set showmodal button always undefined always goes modal hide never see checkboxes checkboxes force visible changing style redgreen instead invisiblevisible check uncheck expected fiddle fixes since code nt run jsfiddle asis provide fiddle demonstrates issue", "d": "5/2015"}, {"body": "jsfb restored situation jsfiddle bug never shows thinking caused develop environment converter babeljs check another way really thanks help good day", "d": "5/2015"}, {"body": "tell related ownerparent context changes discussed still uses ownerbased contexts owner context guess master uses parentbased context test passes", "d": "5/2015"}, {"body": "little workaround ended ensure ownercontext parentcontext set using shallow rendering testing js function shallowrender makecomponent context context context var reactcontext require reactlibreactcontext reactcontextcurrent context var shallowrenderer testutilscreaterenderer shallowrendererrender makecomponent context reactcontextcurrent return shallowrenderergetrenderoutput usage var output shallowrender gt context note use arrow function delay creation component ownercontext set", "d": "5/2015"}, {"body": "trying shallow renderer components using reactintl render like shallowrendererrender element locales null messages null wo nt get error locales key context reactcompositecomponentmixinmaskcontext general limitation related issue sound like something specific reactintl library", "d": "5/2015"}, {"body": "close non bug", "d": "5/2015"}, {"body": "intentional", "d": "5/2015"}, {"body": "zpao could see reasons want make behavior similar realworld possible", "d": "5/2015"}, {"body": "simulates event synthetic event system nt need dom", "d": "5/2015"}, {"body": "fix", "d": "5/2015"}, {"body": "using react encounter issue android use fallback case callback executed", "d": "5/2015"}, {"body": "nobody idea", "d": "5/2015"}, {"body": "jsfb like react predictability archived complete rerenders let image guaranteed called render cycle stores changed could called top component everything would get rerendered controllerviews could use getting global state stores would easy predictable lifecycle method find another way solutions found far work follow controllerviews use one lifecycle method initialize stores another one registering individual stores yet another one unregistering every store changes calls callback registered controllerviews callbacks execute rerenders subtree subtree idea rerender everything lost docs say calls may batched may may means predictability lost lifecycles methods much specialized use complicated solutions even simple things probably missing something nt know", "d": "5/2015"}, {"body": "cody think weird thing using componentwillreceiveprops copy data stores component local state want something called render cycle thing called render would nt component render function get data store asneeded render impo vast majority components nt need componentwillreceiveprops function escape hatch exceptional situations particular detecting responding props change instance suppose implementing video player component took status prop value playing stopped transition playing stopped vice versa need setupcleanup call imperative api use case aligns perfectly documented api props change function called else guarantees", "d": "5/2015"}, {"body": "jsfb want something called render cycle thing called render would nt component render function get data store asneeded render like data global state needed shouldcomponentupdate gets called think might best solution top component render function data stores gets put props controllerviews pick need normally would crazy using immutablejs could work try thanks discussion", "d": "5/2015"}, {"body": "going deprecate reacttools closing", "d": "5/2015"}, {"body": "alright curiosity replacing see docs still mention reacttools", "d": "5/2015"}, {"body": "hatched reacttools replaced babel babel pretty popular lot people already switched compiles jsx default", "d": "5/2015"}, {"body": "cool thanks", "d": "5/2015"}, {"body": "yea nt blogged yet reacttools always mostly pretty command line interface jstransform moved wrapping bits jstransform shipped lets us decouple releases also decided stop using jstransform externally recommending people start using babel however jstransform exist mostly api less churny alternative", "d": "5/2015"}, {"body": "thikn would nice could use shorthand report jsxtrans want set inner content wo escaping may something like yes danger imagin templates engines force us use long syntax construction unescaped content features template engines think necessarily use react fo complex components logic plain template engine mustache embeddedjs etc project cause react cool believe features would easy accessible", "d": "5/2015"}, {"body": "jsx much simple transform intention making special case specific tags also nt want introduce complicated semantics case use may able make react warn gets element children probably tracked separately", "d": "5/2015"}, {"body": "still getting error installed latest react version ideas happens everything else bundles rather alright browserify main client script nt run flags error", "d": "5/2015"}, {"body": "kdamball long shot error turned component including component hierarchy actually used removed extra ran fine helps narrow component hierarchy ancestor gt childlist gt child gt childlist gt child recursive ancestor component unnecessarily including child component pure speculation since error message way indicative solution found problem case may completely different cheers", "d": "5/2015"}, {"body": "bodjkin yep right totally error error reporting better though seems like frontend scripts better bundling everything using browserify", "d": "5/2015"}, {"body": "reverted zpao makes good point camelcase continue discussion currently working around manipulating dom node directory componentdidmount", "d": "5/2015"}, {"body": "still getting owners assigned createelement called way reassign owner fact ca nt throw mine wrapper child trying render already created props assigned edit js fiddle attached", "d": "5/2015"}, {"body": "xizhao work want", "d": "5/2015"}, {"body": "since working simple map structure toobject saved eg sure well work complex object structures however", "d": "5/2015"}, {"body": "movement project hold since nt know stay react could use immutable maps state b move immutable maps child singleitem map c leave things supported future", "d": "5/2015"}, {"body": "jeffutter afaik going change personally still nt understand people want put thirdparty objects state nt see benefit wrong using", "d": "5/2015"}, {"body": "syranide two main advantages stores already deal immutable hashes react nt bother converting deep comparison updates simple immutable objects react setstate immutable object contents changed would rerender would comparing immutable objects cheap deep comparing hashes upfront cost immutable objects way easier reason wether changed definitely plan support suppose best plan action tojs everything manually deep compare", "d": "5/2015"}, {"body": "movement would get rid replacestate add better immutablejs support perhaps libraries core however intention break old behavior replacestate seems like bug zpao spicyj maybe want patch release easy fix", "d": "5/2015"}, {"body": "jeffbski ca nt speak using store data singular state object seems rather limiting unable include stores introduce locally relevant state component right straightforward objects well immutability concept unique immutablejs depending underlying behaviors use simple reusable shallow equality test plain objects sebmarkbage actually intend allow replacing state object vs simply understanding iterate generic mapssets", "d": "5/2015"}, {"body": "syranide yes components use data multiple stores end different elements hash component uses data one store sort silly nested single element hash use simple reusable shallow equality test plain objects point exactly usually objects one level deep fine sometimes though immutablejs objects use deeply nested objects use immutablejs everything nt worry", "d": "5/2015"}, {"body": "sebmarkbage sure cleanest thing result changes right nt know thing queue come could wrap item queue know came instead would allow us stack calls nt think actually handle correctly simplest case using probably change line", "d": "5/2015"}, {"body": "could take something shipping today needs bake first changes mentioned would change behavior risk first complete latter trades bug slightly less bad bug setstate replacestate update queue result object passed setstate used replacement since single pendingreplace flag", "d": "5/2015"}, {"body": "actually came simple fix queue emptied every replacestate since nothing earlier queue could affected result", "d": "5/2015"}, {"body": "ah truth spicyj fixing small let take nt another patch release soon", "d": "5/2015"}, {"body": "want guard async call sometimes called component mounted im using", "d": "5/2015"}, {"body": "love see solution promises issue use promises app database layer react components things roughly like could certainly create flux store giving us synchronous layer react component data fetched lot boilerplate common pattern one solution would interesting would use promise chaining checkmounted gt ismounted promiseresolve arguments else promisereject componentdidmount gt databasefindbyid draft id propsdraftid checkmounted draft gt setstate draft another solution thought wrapping promises tiny class makes subscribable much defeats point promise syntax could say class unpromisifiy extends eventemitter constructor promise gt promisethen gt emit arguments promisereject gt emit reject arguments componentdidmount gt unpromise new unpromisifiy databasefindbyid draft id propsdraftid unpromiseon ondata componentwillunmount gt unpromiseoff ondata unpromise ondata gt setstate draft", "d": "5/2015"}, {"body": "issue reliably occurs boolean attributes like react renders differently client server related", "d": "5/2015"}, {"body": "jordansexton message red herring attributes problem something else markup", "d": "5/2015"}, {"body": "spicyj hmm pointers diagnose since invariant error message flawed", "d": "5/2015"}, {"body": "jordansexton best suggestion call reactrendertostring server client compare different root node ids strings wo nt match directly maybe find replace make match", "d": "5/2015"}, {"body": "spicyj oof okay thanks idea", "d": "5/2015"}, {"body": "edit sorry realized looking confused thinking would flatten array messages operating higher level messages observable would proposed api handle case result one data field dependent result another ie map first result return observable observe props context propsparamsthreadid return const observethread threadstoreobservegetbyid id propsparamsthreadid return thread observethread messages observethreadmap thread gt return messagestoreobservegetbyids ids threadmessageids pretty new observables general may going completely wrong promiseland extremely simple since returning promise cause subsequent based promise", "d": "5/2015"}, {"body": "nt understand comments nt depend encapsulated state surely makes react lot complicated also nt encapsulated state would need memoized immediate mode library go stores yes nt need state react prescribes several patterns requires create extra wrappers normal usage nt need stores observed data always depends state even indirectly nt think bad practice depend observe eg even nt depend would still depend even nt depend would still indirection uses render component props uses would need get reevaluated every time render pass comes props could changed however would definitely diff resulting observables unsubscriberesubscribe observable returned however ca nt diffing individual properties shouldcomponentupdate ideal implement cache using power feature way return observable multiple components tree eg multiple components loading user even nt recreate observable eventually hit bottom cache react reconciliation works anyway slow hook nt designed make react completely reactive sense state captured observables currently key design goal avoid trapping state closures combinators instead nice clean separate statetree frozen revived potentially shared across workers brings final point certainly nt need add core library original public interface mountcomponentreceivecomponent could build whole composite component system top however many people used much powerful raise abstraction bar since build things enabled higher abstraction bar componentwide optimizations react primary purpose create contract components different abstractions ecosystem coexist important part role raise level abstraction common concepts enable new crosscomponent features eg saving state subtree revive subtree possibly including automatic unmounting server changing timing aspects reconciliation server also important provide batteries included make palatable uniform important realize micromodularization like adding new lifecycle hook nt strictly pure win building framework also means longer possible reason system wide abstractions", "d": "5/2015"}, {"body": "wish something like docs philosophy design goals nongoals", "d": "5/2015"}, {"body": "react primary purpose create contract components different abstractions ecosystem coexist important part role raise level abstraction common concepts enable new crosscomponent features love agree gaearon nice sort doc", "d": "5/2015"}, {"body": "certainly nt need add core library however many people used much powerful raise abstraction bar since build things enabled higher abstraction bar componentwide optimizations feel reticence least adding another api adding one depends nonlanguage still defined construct work could totally work fine worry issues promise libraries face promise library even spec complaint ones trust leads unnecessary wrapping defensive work make sure resolve correctly limits optimization opportunities worse yet get stuck like jquery broken implementation never change", "d": "5/2015"}, {"body": "jquense completely agree wanted add hook long time ago original experiment hesitation two years ago still far away standardization wanted standard protocol added core think getting point lot frameworks agree need something like observables standardization reaching point palatable api proposed sure need end tweaking bit long high level architecture works swappable eventually converge think happened promises api debugging story severely lacking certain areas observables nt suffer complete story outofthebox promises standardize minimal incomplete solution", "d": "5/2015"}, {"body": "difference opinion observables observed could nt resist sorry zalgo potential whether observables may push value synchronously response subscription folks seem react use observables depend far understand comment generally nt find zalgo problem observables consumer always control may opt alwaysasync something like", "d": "5/2015"}, {"body": "glad finally consensus personally prefer channels observables observables going added language agree need wait longer said let make sure keep api open enough work nonobservables conform basic api", "d": "5/2015"}, {"body": "nt find zalgo problem either however observables use scheduler ensure async desired default scheduler async use needed", "d": "5/2015"}, {"body": "sebmarkbage think addressed concerns see benefit adding framework however comment canshould fold fields propscontextstate rename", "d": "5/2015"}, {"body": "slightly bikeshedy going anyway zalgo issue nt really one whether matters terms api expectation one observable interop ease implementation early agreement zalgo put promise library world annoying position super defensive dealing promises libs point repeated promise library even spec complaint ones trust leads unnecessary wrapping defensive work make sure resolve correctly early promises nt comply async resolution position even tho speced libraries ca nt assume trust worthy killing potential optimizations strikes particularly relevant react providing observable implementation use would want anyway likely years away able rely solely browser provided observable easy library interop important plus gaearon point react depends sync calls speced always async puts us jquery like position stuck rogue implementation completely agree wanted add hook long time ago hesitation two years ago still far away standardization wanted standard protocol added core glad attended thought certainly comforting general think early adoption promises worth cons discussing nt take concern dislike disapprove pretty excited prospect first class api also see observable really goodmost reasonable choice", "d": "5/2015"}, {"body": "use rxjs contract observable since common use allows synchronous execution jhusain proposal common use switch contract instead add little bit context reactive streams initiative provide standard asynchronous stream processing nonblocking back pressure encompasses efforts aimed runtime environments jvm javascript well network protocols current leading implementations fe akka streams rxjava nt know rxjs already comply interface current interface subscriber onsubscribe subscription onnext oncompleted onerror throwable shed light jhusain proposal nt know react strictly comply initiative need probably put rxjs assuming comply adapt react interface let advanced concepts like backpressure rxjs though would prefer adapt much position goal regarding initiative", "d": "5/2015"}, {"body": "vladap believe mentioned proposal jhusain", "d": "5/2015"}, {"body": "read jhusain sure motivation possibly move spec future specific advantage reactivestreams spec larger support already version rxjava already implements spec assume rxjs follow nt checked blog sums interfaces examples using akka streams see advantage interfaces backend frontend mainly work possibly might help cooperate backend frontend groups hand assume websocket sse actual integration points streaming ca nt find implementators list wwwreactivestreamsorg right last time checked bj\u00f6rn antonsson typesafe inc gavin bierman oracle inc jon brisbin pivotal software inc george campbell netflix inc ben christensen netflix inc mathias doenitz sprayio marius eriksen twitter inc tim fox red hat inc viktor klang typesafe inc dr roland kuhn typesafe inc doug lea suny oswego stephane maldini pivotal software inc norman maurer red hat inc erik meijer applied duality inc todd montgomery kaazing corp patrik nordwall typesafe inc johannes rudolph sprayio endre varga typesafe inc maybe go far believe larger context help future decisions", "d": "5/2015"}, {"body": "vladap understand see github issues jhusain already working guess much problem interface perspective also could grasp different github issues spec document observer certainly respect generator interface something like simply implementing basic observable single subscribe method respect interface secure react", "d": "5/2015"}, {"body": "looks like different naming functionality sense fine would probably prefer naming spec end nt care much far methods evaluate missing equivalent onsubscribe blog mentioned author says key control backpressure nt know use cases assume react nt care controlling backpressure another strategy complex thing hence understand react concern understand correctly strategy something along lines either app complex arise backpressure problems use something solve like rxjs connect react component directly fe websocket nt backpressure problems app simple slow updates", "d": "5/2015"}, {"body": "find proposed observable interfaces future ecmascript already", "d": "5/2015"}, {"body": "current proposal found jh may vladap notifications githubcom wrote find proposed observable interfaces future ecmascript already reply email directly view github", "d": "5/2015"}, {"body": "reactive streams proposal rsp goes proposal introduces observable handles back pressure rsp observable optimized efficiently sending streams across network respecting backpressure based part work done rxjava impressive piece engineering full disclosure designed colleague netflix ben christensen primary reason decision standardize primitive observable type caution primitive observable dual iterable contract provides us valuable guarantees type least flexible type already standardized furthermore wide variety usecases js observables require backpressure browser dom common sink push streams acts effectively like buffer given rsp type complex approach standardize primitive type first leave room implement advanced type later ideally wait validated userland fyi rxjs currently plans implement rsp observable jh may vladap notifications githubcom wrote looks like different naming functionality sense fine would probably prefer naming spec end nt care much far methods evaluate missing equivalent onsubscribe blog mentioned author says key control backpressure nt know use cases assume react nt care controlling backpressure another strategy complex thing hence understand react concern understand correctly strategy something along lines either app complex arise backpressure problems use something solve like rxjs connect react component directly fe websocket nt backpressure problems app simple slow updates reply email directly view github", "d": "5/2015"}, {"body": "many thanks valuable details makes lot sense", "d": "5/2015"}, {"body": "gaearon sorta copied wanted use parsereact classes needed reimplement mixin observe api higherorder component usage allow observe defined component passed decorator might merge two merge observables props thisdata thispropsdata", "d": "5/2015"}, {"body": "aaronshaf gaearon benefit making first class nt eat away props namespace eg higherorder component nt need claim name like data props object ca nt use anything else chaining multiple higher order components keeps eating names find way keep names unique composing something might already composed name conflict besides think bestpractice higherorder components avoid changing contract wrapped component ie conceptually props otherwise confusing use debug consumer supplies completely different set props received instead hoc regular component js import observe reactaddonsobserve class foo render return renderdata mycontent mycontent null return loading return mycontent control function passed prop way names collide hand pollute owner state missing", "d": "5/2015"}, {"body": "could even less verbose component grabbed observables props js render return renderdata mycontent mycontent null return loading return mycontent also nice avoid resubscriptions returned false wo nt get", "d": "5/2015"}, {"body": "finally one could write decorator wraps component", "d": "5/2015"}, {"body": "would prefer keep pure rendering function instead injecting datafetching logic initial proposal seems good opinion close state works allows separatie state management datafetching logic seems coherent thing bother use map observable instead one observable give user possibility choose observable composed minor issue", "d": "5/2015"}, {"body": "really injecting data fetching logic saves typing desugar version renders component unusual render stateful components nt think makes less pure tried combine best proposal hoc approaches benefit explicitness downsides described sebmarkbage props names may conflict point current proposal benefit explicitness negative side complicated lifecycle larger core component api surface benefit colocating memoized render dependencies rendering used anywhere else makes sense concerned looks sync async understanding work immutable models relies much also rubs wrong reactwaseasytoreasonabout way nothing easy reasoning manually tracking changes coupling data sources react wrapping work react understand exists pressure implement something performant reducing boilerplate though proposal keeping colocation explicitness decorator wraps render addon proposing changes react core everyone implement observing logic use cases uses one observable prefer may may use decorator component lifecycle stays prop conflicts data passed parameter dogfooding solving problems tools reducing boilerplate use boilerplate reduction tools decorators instead introducing new core concepts", "d": "5/2015"}, {"body": "great discussion work around much respect agree nt merit making core perhaps addon gives proposal enough traction folks try converge standardize committing fully said find proposal better minimalism something using side projects grains salt similar elierotenberg awesome work nt takeover lifecycle since app nt react interop brace coffeescript mixins keep squinting looks like prefer coffeescript require lodash moduleexports declareneedsmixin componentdidmount needsconsumerid uniqueid constructordisplayname sinkneeds props state componentwillupdate nextprops nextstate sinkneeds nextprops nextstate componentwillunmount propsfluxdeclareneeds needsconsumerid sinkneeds props state declareneeds return consolewarn missing method required declareneedsmixin intended overridden host class returns set facts stored array yes immutable data awesome point though facts serializable data values declareneeds props state used like coffeescript moduleexports emailthreads reactcreateclass displayname emailthreads mixins declareneedsmixin proptypes flux proptypesfluxisrequired declareneeds props state needsgmaildatamythreads messages oneway function props state description component needs actual implementation receiving end set toplevel component sinks needs object batches likes dedupes across components share performs sideeffects meet needs like connecting socket making http requests uses reference counting clean stateful things like socket connections components need anymore data flows stateful bits like socket events requests dispatcher stores wherever back components meet needs nt synchronous components handle rendering data yet available sharing another voice exploring kinds solutions possible userspace current api serving kind experimentation really well terms minimal step core could take support interop different approaches think elierotenberg nailed anything exposing supporting maintaining react components instances lifecycle outside mounted react hierarchy would help", "d": "5/2015"}, {"body": "stateless approach seems async data fetching stateful thus storing pendingcompletedfailed status components state relevant elierotenberg andrewimm make excellent point firstclass error handling sebmarkbage think instinct towards minimal interop point right sure adding semantics errors bubble component tree fits requirement needs equally simple story access values even slots holds last value either like without supporting observable contract firstclass feature bit skeptical proposal making cut since internet one first times chiming react issues feed best reading allaround source great work ideas", "d": "5/2015"}, {"body": "movement", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "ran issue vs jonhester still fleshing pr", "d": "5/2015"}, {"body": "update transformer smarter hoisting longer deopts completely reassigned bindings example becomes javascript use strict function rendername firstname firstname inactive var ref reactcreateelement span null firstname return function return ref longer bails", "d": "5/2015"}, {"body": "stateless functions wants easyish naming nitpicking stateless function redundant like saying wingless dog functions stateless components correct", "d": "5/2015"}, {"body": "well react supports winged birds wingless birds soon wingless dogs change name checklist though", "d": "5/2015"}, {"body": "every science community contextual terminology drop redundant terms terms also contextual field sure mean something completely different world plumbing would prefer add context world react community word component often redundant example say instance often drop component part broader sense stateless function redundant since clarify difference closure captured state could build one single function components using closure capture state callbacks fact suggested", "d": "5/2015"}, {"body": "depending globals causes much pain automating nodeiojs tests subset window needed", "d": "5/2015"}, {"body": "one official chinese doc", "d": "5/2015"}, {"body": "littlee", "d": "5/2015"}, {"body": "merged would open pr migrate internal components classes instead avoid autobind overhead", "d": "5/2015"}, {"body": "think let plain class syntax figure whether want use loose mode etc babel", "d": "5/2015"}, {"body": "svg images important part current project anything could help push issue", "d": "5/2015"}, {"body": "newer pr without merge conflicts", "d": "5/2015"}, {"body": "still want", "d": "5/2015"}, {"body": "yes", "d": "5/2015"}, {"body": "ok start pr later also relevant", "d": "5/2015"}, {"body": "everybody comes issue quite sweet solution lot svg attributes use css version list available properties example gt even reads better", "d": "5/2015"}, {"body": "know similar code jsx appears fires always click whenever refresh page localdata disappears localstorage without hitting button noticed works bug expected expected thanks", "d": "5/2015"}, {"body": "expected former equivalent note call runs immediately upon render click button want pass function gets called instead arrow function saw regular function like method like", "d": "5/2015"}, {"body": "excellent explanation thank", "d": "5/2015"}, {"body": "case using sideloading flux stores multiple levels within component tree callback event root level well child level root node callback gets called first causes rerender child node longer rendered thus gets unmounted callback child handler still gets called proceeds child call warns unmounted nt chance stop callback called feel like sideloading first class citizen react cause kind case common", "d": "5/2015"}, {"body": "mridgway child component unsubscribe store unmount nt get event callbacks unmount unless missing something", "d": "5/2015"}, {"body": "unsubscribe unmount event handlers already executing order registered time called late unless smart enough know whether handler removed list middle handling event", "d": "5/2015"}, {"body": "ended using reacttapeventplugin", "d": "5/2015"}, {"body": "iamstarkov using reacttapeventplugin solve problem", "d": "5/2015"}, {"body": "yep", "d": "5/2015"}, {"body": "using", "d": "5/2015"}, {"body": "way stated readme reacttapeventplugin", "d": "5/2015"}, {"body": "added library though nt see noticeable change using commonjs syntax require inject plugin sent iphone may pm vladimir starkov notifications githubcom wrote way stated readme reacttapeventplugin reply email directly view github", "d": "5/2015"}, {"body": "enough inject alse need use attr", "d": "5/2015"}, {"body": "nvm following answer immediately made fastclick work sure whether edge cases covered problems facing fixed lines code", "d": "5/2015"}, {"body": "due issue nt able use dropzonejs plugin ca nt create new elements without fucking key sorry think nt good approach please get ride love dying", "d": "5/2015"}, {"body": "spicyj stated obviously correct however experiencing issue silently caught exceptions ended thinking relatred well edbo find issue came solution", "d": "5/2015"}, {"body": "leoselig using lodash seems errors getting eaten occur within callback workaround monkey patch block", "d": "5/2015"}, {"body": "using lodash could trace issue related think might due sea general design flaw q promise library using see", "d": "5/2015"}, {"body": "leoselig ah yes using end promise chain propagates errors nicely", "d": "5/2015"}, {"body": "helped find piece q docs golden rule done vs usage either return promise someone else chain ends call done terminate totally explains silent catch thanks", "d": "5/2015"}, {"body": "issue occurs traceur since bug fix", "d": "5/2015"}, {"body": "gaearon plans look soon interested jumping seems one final pieces making context fully usable might something else missing one thing wondering whether following statement true component child context always reduction state props amp context ensures reliably flow data within known lifecycle similar statement component render always reduction state amp props currently envisioning would good see totally course determines whether sub tree updated new context part lifecycle triggered change component state props context remains parameters component mentioned sub tree decide whether actually update anything note returning false affect context flowing sub tree another thing wondering another new lifecycle method called similar time within context data flow possible methods called time", "d": "5/2015"}, {"body": "chrisui please jump busy stuff moment ensures reliably flow data within known lifecycle also keep mind hook might might get implemented means might might derived whatever called probably irrelevant task", "d": "5/2015"}, {"body": "got initial draft fork see running gone setting simple context parent context child relationship context parent component might change child context ie implements context child component depends context might change child context ie implements relationship setup components mounted currently component update lifecycle comes play two cases component say update ie check update child context default component immediate context children transition child component update lifecycle continues get end context tree come across component say update nothing different side channeling context data case let normal flow continue component may hit case doubt missed important stuff anyone could take quick look great welcoming comments architecture context well actual writing code fit react codebase", "d": "5/2015"}, {"body": "quick psuedoexample consider following initial render mounting everything expect impl detail parentchild relationship created amp update prop value also implements method returns method nt care nothing else changed update old cases component would never see new context bailed update tree changes check method could let default actions take place examples simple equality check see context values changed note signature currently identical default update nearest context children example case relationships setup earlier put component update lifecycle contrary discussions saw earlier still call usual new context third parameter provides component granular control still wants update hopefully explains process well enough", "d": "5/2015"}, {"body": "chrisui cool great see progress also add bunch unit tests sanity check basic functionality minimum verify child updates even parent returns false verify child updates even parent returns false verify child update component returns false additionally supported features might want verify verify get called grandparent changes provided context direct parent overrides context change verify get called component read context variable changed verify prop changes context variable changes nt updaterender twice cc sebmarkbage feedback api designidea", "d": "5/2015"}, {"body": "chrisui sounds fantastic far thank work", "d": "5/2015"}, {"body": "jimfb definitely start getting unit tests wanted something play confirm think work regarding second set cases areas avoided favour simpler design example suggested watch see particular context keys changed update feel might add much complexity parentchild relationship currently would less symmetry data flows react example may naive overlooking compare changing props internally leave user explicitly define whether two separate sources data ie current next props cause update simply ignored would good see discussion around specific detail people feel strongly implemented simple implementation want go forward guess keep merging components updated tree compare find valid update targets maybe somehow bit magic mount create parentchild relationship child nearest parent matching context child key feeling latter would make difficult manage update order later though impossible quick hack try mock", "d": "5/2015"}, {"body": "actually regarding latter suggestion specific context key comparison part functionality might tricky maintaining update order follow sorted mount order batch logic used already", "d": "5/2015"}, {"body": "chrisui sebmarkbage concern unless forgettingmissing something obvious every time contextprovider rerenders cause potentially hundreds child components depend provided context variable rerender even context variable changed intuition trigger context repropagation sort indication new value available like new value triple equals old value flagnotification actually implementation starting look like subscription system since effectively scoped global maybe correct solution require components sideways subscribe context variables thereby allowing us utilize mechanism context going use subscriptions global data see relevant information poking sebmarkbage think latest thinking favor using sideways data loading solution solve problem avoid api surface area curious hear thoughts", "d": "5/2015"}, {"body": "jimfb right hundreds components rerendering sure different trigger state change implement shouldcomponentupdate prevent mass update occuring agree though context looking like specific stream side data proposals cascading effect context see reason really develop context let see think interest added functionality draft create parentchild relationship components matching contextchild context key prevents redundant tree traversal preventing update context nt actually changed would simply done purerendermixin always", "d": "5/2015"}, {"body": "chrisui think difference single shouldcomponentupdate child component cut huge branches tree whereas context much harder findfix places rerendered even bail child depends context variable still rerender yeah curious see others think using sideways data loading solution", "d": "5/2015"}, {"body": "think context mostly orthogonal sideways data loading ideally want way pass handle sideways data store components nt global mostly use context using context di like reduces likelihood change course application though may jim notifications githubcom wrote chrisui think difference single shouldcomponentupdate child component cut huge branches tree whereas context much harder findfix places rerendered even bail child depends context variable still rerender yeah curious see others think using sideways data loading solution reply email directly view github", "d": "5/2015"}, {"body": "seems like current advice around using context beyond nt would still apply anything changes frequently going incur fairly high rerender cost increasing cost targeted way proposed would nt necessarily change people think using plus want cut branches tree still fairly straightforward happy relative simplicity context stands shouldupdatechildcontext hopefully changing underlying mechanism line global subscriptions would nt reduce ease use dramatically", "d": "5/2015"}, {"body": "jimfb eplawless pointed shouldupdatechildcontext used block huge branches tree updated think context api proposed changes simple enough implement change internals use side data loading react may support later another suggestion could also make shouldupdatechildcontext default false prevent new behaviour default make optin sake iteration getting something wild test fashion context feature always hence undocumented pursue api proposal would good hear gatekeepers", "d": "5/2015"}, {"body": "opened pr likely get quick feedback prs since easily reviewable compared master get priority issues know think originally wrong really need sorry thrash seems like strategy makes responsibility child determine whether something changed example may use data provided determine output parent nt know perhaps enough also think might want limit parent child connection fixed set properties like props ie would nt able multiple different contexts supplied one source given child uses parts context could mapping additionally always hesitant context bubble straight child consumes legit use case generally wormhole two components rather broadcasting everyone antipattern think comment pr details", "d": "5/2015"}, {"body": "sebmarkbage could go either way preference always minimize api surface could always leave initial api context jumps initiates rerenders component reads context variable people need additional escape hatch add later think bigger problem mjackson pointed nt know context variable changed really want rerender every text node every time contextprovider happens rerender nt yet provided way saying nt worry nothing changed nt bother rerendering every text element page little confused last paragraph elaborate assume suggesting following antipattern context component broadcasts child components user preferred languagetimezoneformattingetc", "d": "5/2015"}, {"body": "commented pr reproduce guess sebmarkbage chrisui jimfb think useful addition default returns true makes responsibility child determine whether something changed implementing means taking away responsibility case parent knows better true exists take away responsibility children optimization broadcasting whole subtree think two valid patterns wormholes suggested make perfect sense use pattern grouping items within various subsystems like focus voice additionally though want use context pass information whole section perhaps entirety application force rerender anything uses kind broadcast pattern probably relatively rare compared wormhole pattern believe still valid right occasionally using mixins focus voice groups source think valid use cases forcing mapping though understand desire restriction", "d": "5/2015"}, {"body": "actually thought wormhole pattern antipattern broadcast expected pattern context interesting lots consumers variable ie passing prop explicitly would result added virtually every component therefore lot boilerplate otherwise probably better pass explicitly prop sebmarkbage appears said opposite usually right stuff confused would like get clarification sebmarkbage eplawless example wormhole pattern think valid parent providing used child ca nt prop child etc", "d": "5/2015"}, {"body": "js class fancycell render return content class somewhatfancycell render return thispropschildren take pass cells table form one neat way pass split pass context provides way something might render cell communicate conceptual parent like table hidden channel already dom elements likely required layout react", "d": "5/2015"}, {"body": "nt overfocus concept context current concept nt ideal maybe ideal something like two different concepts channel", "d": "5/2015"}, {"body": "plausible alternative api spitballing", "d": "5/2015"}, {"body": "continuing spitballing could use alternative syntax made communication channel explicit avoided possibility name conflicts etc", "d": "5/2015"}, {"body": "symbol nt name conflicts neither made communication channel cost passed multiple levels indirections anytime need change add another channel background color need go update everything even though documented contract cell within table still btw essence react already hidden communication channel state nt explicitly pass child", "d": "5/2015"}, {"body": "call styleinfo celldata instead borderstyle make object adding fieldsinfo nt require changing api contract difference variant variant variant way child actually read value passed explicitly prop parent functionally latest proposal literally identical proposal clear really like latest proposal going complain solve subtly different problem told back march ultimately came conclusion right instance broadcast problem ok solving broadcast problem convinced context provide value means let something like", "d": "5/2015"}, {"body": "arbitrary symbol name conflicts unless key name always decided owner case might well make visible owner owner needs communicate key name child anyway otherwise would child know look forcing owner involved naturally encourage components use symbols instead hard coded keys", "d": "5/2015"}, {"body": "mean global symbol capital orchestrated channel common module nice part new proposed api key object property key gets confused control flow program analysis proposal first class dynamic value like key powers state", "d": "5/2015"}, {"body": "oh ic sebmarkbage pulling fancy new javascript known meeting today ok right would effective avoiding name conflicts would solve broadcast problem sold like wish office today feel like would fantastically fascinating conversation person", "d": "5/2015"}, {"body": "personally glad nt keeps us loop really like symbol thing overreliance context string keys across potentially alien tree always bad vibe", "d": "5/2015"}, {"body": "example two libraries depend parentchild wormhole third library happen use independent copies copies would nt clash see sure weird scenario imagine seems consistent", "d": "5/2015"}, {"body": "fair symbols already possible work current objects even use symbols probably end requiring module potentially global namespace npm top level module name although hopefully relative current api makes natural use simple string name also conflates runtime semantics specific property identifiers makes things like closure compiler advanced mode difficult reason also screws vm optimizations", "d": "5/2015"}, {"body": "sebmarkbage could use uuids aka symbols yes new proposal allow key decided runtime meaning parent could influence via props sure think though said sure useful without making values available within jsx scope need think add cool flexibility maybe", "d": "5/2015"}, {"body": "sure wormhole analogy broadcast scenario example ones run problem proposed pr aims solve also entirely clear helps seems semantically equivalent getchildcontext contexttypes like pr nt require enumerating children depth propagate context changes aiui original problem always although passed nature context means components broadcaster receiver could return false nt know context passing seems like two ways get around issue track components reading context tree additional mechanism propagating context changes tree", "d": "5/2015"}, {"body": "plan remove", "d": "5/2015"}, {"body": "chicoxyzzy jefffriesen still see note initializetouchevents error enable touch events call rendering component", "d": "5/2015"}, {"body": "iamstarkov looks like version fixes shipped yet", "d": "5/2015"}, {"body": "leaving details case future searchers got error invariant violation could find drag drop manager context card make sure wrap toplevel component app configuredragdropcontext also turned two react versions loaded problem webpack using npm link one packages also depends react seems webpack problems handling symbolic links fault configuring improperly anyway problem fixed installing package local nodemodules directory", "d": "5/2015"}, {"body": "olavk thanks gon na add relevant explanation gist react dnd", "d": "5/2015"}, {"body": "finding quite useful bit inconvenient among children element conditionally rendered", "d": "5/2015"}, {"body": "idea make helpers ignore null could help perhaps could return iterable traverses nested arrays ignores null", "d": "5/2015"}, {"body": "sebmarkbage really allowing nulls change intentionally introduced long time ago implementation toarray", "d": "5/2015"}, {"body": "allowing empty children null undefined boolean controversial topic eventually landed nullbooleanundefined passed way could explicitly treat empty slot something special landed early really started seeing pattern developing however imo seen leads inconsistent implementations null slots break possible use unclear whether set children allows nullable slots unclear means example grid layout component empty slot mean empty column grid skipped therefore lot components end explicit null checks meaning boilerplate inconsistent behavior forgotten therefore think default filter nulls consistent behavior builtins components still possible get access raw data different type children mind empty slots meaningful", "d": "5/2015"}, {"body": "work testutils functions example fails javascript shallowrendererrender reactmodule shallowrenderergetrenderoutput let mysidebar reactmodulepropschildren propschildren expect mysidebarpropsclassname toequal sidebar yep let mysidebars testutilsscryrendereddomcomponentswithclass reactmodule sidebar also tried reactmoduleinstance expect mysidebarslength toequal nope ca nt see info mentioned start issue missing end goal simply test pass articles components get rendered help would awesome", "d": "5/2015"}, {"body": "hi david functions meant used output shallow rendering react nt currently provide helper traverse trees options describe structure tree explicitly lines example write helper module find descendants care nt implemented yet refer docs section test utilities actually react", "d": "5/2015"}, {"body": "cool thanks reply graue returned using since components testing children nt statestores nt really need mocking anyway one last maybe stupid question mean", "d": "5/2015"}, {"body": "reactlink may sugar really dozens inputs form hundreds entire application makes noticeable difference jsx sugar really important tool productivity readability compare said taking reactlink core syntax nt explode like example", "d": "5/2015"}, {"body": "tobia like mention wrap component provide functionality ifwhen dropped react would certainly provide wrappers outofthebox addons would nt really special anything ca nt already", "d": "5/2015"}, {"body": "kind interesting tholman investigating today discovered use element contains items showing momentum scrolling works eg \u30c4", "d": "5/2015"}, {"body": "mjackson interesting indeed thanks heads figured way around yet metal definitely react bug closing issue", "d": "5/2015"}, {"body": "hi edmspjp issue seems add dangerouslysetinnerhtml tag still problem take whole svg tag dangerouslysetinnerhtml attr parent tag works sure met problem html var svgtag", "d": "5/2015"}, {"body": "merging discussion", "d": "5/2015"}, {"body": "bump specify absence property explicit per property eg func would prefer specify noop string might want either null empty string number may even want specify nan absence easily possible getdefaultprops nt trigger default suddenly use defensive programming throughout components null complicated language feature semantics around need made clear debugging null getdefaultprops specified pain point especially nt full control data source would prefer see become clear explicit behaviour per property minimal boilerplate clear semantics getdefaultprops triggered default prop nt match type validated", "d": "5/2015"}, {"body": "bit different scenario anyone finds useful wanted null default prop null passed null gets used rather default prop makes sense since null undefined value get default value following explicitly send undefined url null", "d": "5/2015"}, {"body": "usecases presented pretty sure could replace visual output would without introducing practical technical issues related components fragments root", "d": "5/2015"}, {"body": "syranide every time one components changes siblings need recalculating", "d": "5/2015"}, {"body": "also use plain coffeescript easy return array please decouple functionality jsx representation iow easy handle returned array elements nt wait jsx catch", "d": "5/2015"}, {"body": "syranide every time one components changes siblings need recalculating wmertens yes many times would anyway parent would need rerender reasons simply receive data props anyway yes difference nt mean approach right optimization many ways accomplish also use plain coffeescript easy return array please decouple functionality jsx representation irrelevant problem jsx big issue lose technical practical intuitive assumption one component one elementnode ca nt speak devs would give willingly useful assumption sure equally good better optimizations could designed optimization reason people want", "d": "5/2015"}, {"body": "syranide biggest problem ca nt always use wrapping element html like tables lists flexbox head working around leads ugly code would perfectly happy virtual wrapper element renders comments suggested fri may pm andreas svensson notifications githubcom wrote syranide every time one components changes siblings need recalculating wmertens yes many times would anyway parent would need rerender reasons simply receive data props anyway yes difference nt mean approach right optimization many ways accomplish also use plain coffeescript easy return array please decouple functionality jsx representation irrelevant problem jsx big issue lose technical practical intuitive assumption one component one elementnode ca nt speak devs would give willingly useful assumption sure equally good better optimizations could design optimization reason people want reply email directly view github", "d": "5/2015"}, {"body": "oy issue well annoying pass function ref never gets called either transition group totally dropping refs bummer actually huge problem using ref execute animation think issue reopened", "d": "5/2015"}, {"body": "ryanseddon solution longer seems work change attribute get following error love workaround makes impossible distribute js library uses react", "d": "5/2015"}, {"body": "critical use case company working", "d": "5/2015"}, {"body": "tried need update attribute require react nt throw works expected", "d": "5/2015"}, {"body": "ryanseddon trick note really make sure monkeypatching code else things break first place may expect wound making little shim replaced statements", "d": "5/2015"}, {"body": "clear using internals using risk going close anyone knows specific internal like expose please follow separate issue", "d": "5/2015"}, {"body": "spicyj place read final direction topic like current code handle components composition exporting allows extend components way react using nowadays code anyway could copypaste code utility file projects want know next steps thanks lot time", "d": "5/2015"}, {"body": "best simplify react core much possible case includes slowly moving away reactcreateclass towards classes planning add helpers making classes say easily reimplement functionality need", "d": "5/2015"}, {"body": "dendril example reimplementing mixins outside react basically constructor prototype pretty much anything want whether wrapping another component extending mixins traits anything else another issue hinted towards wrapping high order components way go experience works well", "d": "5/2015"}, {"body": "dendril jquense another option would move away classes current limitations entirely take advantage power flexibility prototypal inheritance react version ericelliott stampit reactstampit", "d": "5/2015"}, {"body": "also working stampbased tooling react components currently experimenting private repo looks promising long react maintains support factory functions simple objects nt anything explicitly requires keyword continue many options available compose extend functionality react components without specialized mixin method right simple using lodashobjectassign etc", "d": "5/2015"}, {"body": "ericelliott checking stampit want switch completely release nt want include mout lodash projects saw good progress migration hope could released soon smile thanks everyone feedback", "d": "5/2015"}, {"body": "super annoying think ought work well", "d": "5/2015"}, {"body": "full svg support happens need way create custom tags attributes anyone please help", "d": "5/2015"}, {"body": "marker element also missing", "d": "5/2015"}, {"body": "ersagunkuruca try meantime", "d": "5/2015"}, {"body": "gave look", "d": "5/2015"}, {"body": "sorry replying longclosed issue testutilsinproduction kind need watermark overlay rendered topmost page displays current loggedin user name preventing capture webpage leaking sensitive data advanced browsers watermark overlay set ie must simulate event order mimic event pass makes sense option compiling react source production include testutils", "d": "5/2015"}, {"body": "jasonslyvia testutils intended internal testing therefore internal api recommend call internal apis especially production supportedstableoptimizedetc going publish builds expose internal api nothing stops checking code building changesmodules super familiar browser event system think achieve goal temporarily disabling watermark emitting click event people need public api interfacing react event system might consider creating task api see rally support guess simulating click events something better left browser existing apis side note absolutely trivial open chrome tools firefoxwhatever remove watermark dom trivial even without disableenable functions proposed anyone capable enough take capture webpage almost certainly capable enough remove watermark capturing little worried attempt security bit missguided different discussion", "d": "5/2015"}, {"body": "thank kind reply jimfb know security concern implemented frontend sort trivial code runs client side let leave alone usefulness watermark actually use jquery method achieve goal comes mind jquery way nt work circumstances instance single tag descendant responding event using jquery trigger nt call however achieve goal since nt dive react event system totally lost behaviour turn let know demo jsfiddle needed", "d": "5/2015"}, {"body": "hi encountered issue well still happens jsfiddle native html vanilla js jsfiddle react select radio select one already selected idea fixed forces us abort onchange radio selected value ugly", "d": "5/2015"}, {"body": "problem repros see", "d": "5/2015"}, {"body": "petilon seems work move event handler inside component see example", "d": "5/2015"}, {"body": "macqm moving event handler jsx file option event handlers controllers models etc need ts typescript files view jsx seems like serious bug facebook nt completely fixed year", "d": "5/2015"}, {"body": "petilon aside fact still issue fix seems like code work say view jsx file would argue handling click event definitely something belongs view reacting ui element action perhaps good solution add another event component something like handle controllers would fired inside onclick jsx handler passed prop way may trigger business logic controller clicks key downs etc", "d": "5/2015"}, {"body": "macqm thank suggestion people would argue handling events changing view response controller responsibility nt philosophical issue practical point view makes sense move much code possible ts files typescript perform error checking note flow nt available windows nevertheless idea useful temporary workaround thank", "d": "5/2015"}, {"body": "error message caused number things mentioned comments many due invalid nesting warning master petilon specific issue mention tracking going close issue anyone encounters error new cause please open specific issues", "d": "5/2015"}, {"body": "spicyj yeah agree", "d": "5/2015"}, {"body": "hi zpao still radar", "d": "5/2015"}, {"body": "still radar pretty low priority interested see could revived chenglou context nt quite follow think memory tradeoffs", "d": "5/2015"}, {"body": "yeah pretty lowpriority think allocation necessary one hottest code paths react sure relevant still bit bothersome intricacies camelcasing data sure whether makes sense aria fixed list attributes seems weird start grouping people rarely use react maybe", "d": "5/2015"}, {"body": "people rarely use data react maybe written ton react code year nt remember ever using maybe point making easier", "d": "5/2015"}, {"body": "regardless whether rarely used think taking object like correct approach representation js really prefixed attributes seems like would detrimental part object", "d": "5/2015"}, {"body": "use case using data attributes various tracking libraries use applications libraries look attributes amp set listeners wanted able pass object eg jsx example thispropsdata trackaction click tracklocation basket would render current workaround reactdataattributesmixin might missing something obvious could using instead", "d": "5/2015"}, {"body": "jackdcrawford work fine", "d": "5/2015"}, {"body": "syranide", "d": "5/2015"}, {"body": "take thread currently impossible simulate events subcomponents react using able get work top level component soon want nested component get error yanns eg fails js test testutilssimulateclick componentrefsbargetdomnode component error works js test testutilssimulateclick componentgetdomnode component", "d": "5/2015"}, {"body": "nt necessarily like since hacky chance collisions multiple instances page set state component random id use javascript getinitalstate function return id mathfloor mathrandom getid function name return name thisstateid render function return", "d": "5/2015"}, {"body": "came across problem writing flux application updated local state dispatched action update store local state update caused rerender still used current old value store thus changed dom moved cursor stack overflow answer helped understand going thought reference since first result found google nt quite help understand going", "d": "5/2015"}, {"body": "curious", "d": "5/2015"}, {"body": "example actual code direct assignment like suggested", "d": "5/2015"}, {"body": "ah ok thanks", "d": "5/2015"}, {"body": "movement", "d": "5/2015"}, {"body": "movement though already require builds reactdist zpao mentioned", "d": "5/2015"}, {"body": "function returns react children recursively need collecting adjusting form data submit", "d": "5/2015"}, {"body": "fyi using immutable objects react components created following npm package give reactlink support binding nested properties reactlinkimmutable", "d": "5/2015"}, {"body": "hello staggering animations supported latest version react clear thread one go create staggering animations using reacttransitiongroup api thanks", "d": "5/2015"}, {"body": "pomax implemented component relies bit reactdom event handling rather assumptions component tree generally favor components mixins react", "d": "5/2015"}, {"body": "prefer complete opposite desire see things like following need reasonably functional component actual content mixins solve horrible xml hell using js syntax already use functionality letting us say feels much better since behaviour tied component tied functions effect behaviour mixins make far sense provided real mixins nt tie react lifecycle functions mixins plain functionality require plain old way", "d": "5/2015"}, {"body": "hisher consider mixins inheritance general used sparingly especially typeunsafe language like javascript composition almost always better imo may pm mike kamermans notifications githubcom wrote prefer complete opposite desire see things like following need reasonably functional component actual content mixins solve horrible xml hell letting say reactcreateclass mixins require require render return content spam around feels much better reply email directly view github", "d": "5/2015"}, {"body": "reactcloneelement seems solved", "d": "5/2015"}, {"body": "nt solution adding ref element string ref otherwise yes", "d": "5/2015"}, {"body": "know old issue similar problem came across found problem occurs add property react component containing property seem work reproducibly whereas seems think could related react diffing algorithm might properly treat component statement component gets rerendered multiple times different inner content posting case people issue stumble upon", "d": "5/2015"}, {"body": "thx adewes saved day", "d": "5/2015"}, {"body": "seems like issue back adewes thanks solves problem", "d": "5/2015"}, {"body": "adewes cdujeu lezuse post simple repro case showing broken behavior happy take look fixing", "d": "5/2015"}, {"body": "took repro go ugly demonstrates issue well", "d": "5/2015"}, {"body": "lezuse thanks issue fix currently using key workaround fine see fix sometime", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "jordwalke zpao jsdoc nt think jsdoc solution nt like jsx time code jsx check revolunet check good environment setup using yuidoc jsdoc nt support jsx right yuidoc nt like much alternative tags react example states yuidoc nt state tag yet", "d": "5/2015"}, {"body": "thanks yordis check", "d": "5/2015"}, {"body": "would resolve issue struggling see details", "d": "5/2015"}, {"body": "think part makes inherently confusing many consumers state render flushing state mutations frame animation effectively means state know render even though render supposed pure function taking state one inputs render output always represents snapshot time anyway mutating state frame animation along way state update nt affect render stands state mutation render tied together nt immediately obvious anyone nt read docs would also argue much less useful tied together", "d": "5/2015"}, {"title": "reopen issue unexpected directive value undefined view component", "body": "reopen issue unexpected directive value undefined view component angular code hi mhevery create plnkr", "num": "2248", "d": "5/2015"}, {"title": "iterate maps ngfor", "body": "trying iterate map values built see reason working specs iterate map iterable none standard work built actually support iterating maps", "num": "2246", "d": "5/2015"}, {"title": "unexpected directive value undefined view component", "body": "used latest alpha version try add angularfor directives encounter error unexpected directive value undefined view component use", "num": "2244", "d": "5/2015"}, {"title": "support multiple selectors", "body": "following match match currently throws", "num": "2243", "d": "5/2015"}, {"title": "router nested outlets", "body": "hi trying create nested router outlets achieve something similar app parent child live example page loads getting router documentation still early stages managed find working example tell bug well done end someone take look cheers", "num": "2242", "d": "5/2015"}, {"title": "question use getelementbyid html elements used templates", "body": "hi try costum directive javascript component selector fastvideo view template canvas id width height style border solid export class fastvideo mycanvas fastvideo used main page constructor fastvideo called thismycanvas gets always null seems templates code nt available constructor code get canvas context canvas tag inside element view template inserted dom constructor class called thanks josef", "num": "2241", "d": "5/2015"}, {"title": "form validation message templating", "body": "looked new proposed forms specification believe would alternative way integrating error messages custom form templates following way heavy opinion great flexibility cases believe something like following could appropriate however also means need control error messages generation simply adding details rules definitions well went wrong every broken rule would allow build generic solutions quite flexible instance rule failed string chars long broken rule representation could something like could configure messages using provider obviously would think would appropriate standardized broken rule schema especially wish support combined rules well assuming rest framework supports example rule composed rule rule", "num": "2240", "d": "5/2015"}, {"title": "need able run test saucelabs", "body": "would nice able even nicer need test across browsers ie also use ci current working set browsers capture browsers start work cc mlaval", "num": "2239", "d": "5/2015"}, {"title": "rename typesmethods simple facades", "body": "rename methods throw object type", "num": "2231", "d": "5/2015"}, {"title": "create semicomplex form example", "body": "checkout form contains several fields first name required max length typetext middle name optional lastname credit card custom validator required amount number required email native type required comment text area optional capabilities show validation error messages disable submit button invalid styles template driven style imperative style", "num": "2225", "d": "5/2015"}, {"title": "router support ngroutingusepushstate", "body": "router support ngroutingusepushstate see angular dart", "num": "2224", "d": "5/2015"}, {"title": "dependency injection referencing interface", "body": "conversation could probably typescript area also let design app export class welcomesection type file elementref declared interface compiled output correct reason bring sure typescript anything wrong seems like would cause serious problems trying use third party library dependency injection people nt include classes type declarations angular team best practice come", "num": "2223", "d": "5/2015"}, {"title": "router path matches incorrectly first list", "body": "clicking def link causes match two bugs one matched second alias correctly picking correct config immediately also documentation says use alias code uses def routerlink routerconfig path redirectto abc matches prematurely path abc component abccomponent abc path def component defcomponent def", "num": "2221", "d": "5/2015"}, {"title": "interface based lifecycle methods", "body": "proposed current situation ignored dart ignored js things interfaces js see two problems harder write directives would work dart amp js currently behavior different interfaces inherited annotations yet probably going change described completely dropping part using following code js amp dart note js would use structural type check currently case key present component configuration would optional workaround could document implementing lc interfaces best practice apply code examples potential issue define method name might bee generic structural type check might return false positive user implement method ie response event however could come specific name circumvent anyway amp probably confusing thoughts cc vsavkin yjbanov tbosch mhevery", "num": "2220", "d": "5/2015"}, {"title": "templateurl usage local files file working xmlhttprequest xhrstatus checks", "body": "overview issue templateurl able load local files file xhrstatus xmlhttprequest checks prevents usage within stack trace failed load template myappcomponent error new baseexception zonerun zoneexecutengzonecreateinnerzonezoneforkfork run run zoneboundfn lib promise internal trycatch lib promise internal invokecallback lib promise internal publish lib promise internal publishrejection file pathtomyappcomponenthtml templateurltemplate lt status amp amp status lt electron bug", "num": "2219", "d": "5/2015"}, {"title": "integrate refresh mechanism resource", "body": "feature request support believe become increasingly popular scenario applies angular although would great see something like angular using angular syntax concept nevertheless background applications applies involve single page application possibly socketio similar notification server clients clients see updates real time intro simple form controllers routerresolve call resource facilitate crud operations resource lt controller common introduce middleware two say system shows reports resource lt reports lt reportscontroller benefits many including ability move business logic controller middleware code examples use rather resource simple use case consider app lists reports sake clarity instead using router controller code look something like say user clicks add report model dialog shows details filled controller callback executes something like want reports list update two possible ways solution one way push new report rely specific conditions records returned read identical returned create might case since read calls often return full record data properties required presentation eg table create calls may return full data eg may omit way updating list may well work many cases also many cases wo nt solution second correct way updating list simply running read query worth noting ideally nt replace reports array newly return results cause flicker instead compare old new list simply apply changes less simple use case consider reports list paginated filtered sorted provided parameters user adds new report virtually sense solution must call read query realtime updates client adds report server notifies client b latter must call read query ensure local list date note lists need updating also individual records client updates report want report updated client b application framework responsibility behaviour realised application specific code perhas really framework responsibility deal scenarios since resource one holds variable controllers reference one actually holds data needs updating resource cache query resulted data variable nt problem refreshing requirements essentially developer calling like able call something like update variables currently use calling query originally populated data optimisation requirements like ability provide conditionals check whether refresh needed got report nt need refresh changes report also case lists replacing list applying changes wonder general concept clear angular way support", "num": "2216", "d": "5/2015"}, {"title": "docs insert spaces end line comments", "body": "reported wrong fix see discussion see", "num": "2214", "d": "5/2015"}, {"title": "add special case href allow optionally including attribute", "body": "appears browsers setting href property value even null anchor element stringify sync attribute ex means decorated link null users want optionally decorate links depending presence data option left using adding simple sugar generate following setter make href binding lot useful downside custom logic compiler thoughts", "num": "2213", "d": "5/2015"}, {"title": "move dart formatting incremental plugin build pipeline", "body": "", "num": "2208", "d": "5/2015"}, {"title": "unify dartium dartiumbin", "body": "addition defining dartiumbin described developermd also execute export dartium dartiumbin execute tests might worth unify usage two environment variables test setup angular", "num": "2207", "d": "5/2015"}, {"title": "reloadonsearch cause reload hash change", "body": "background pages dynamically update url hash realizing setting route reloadonsearch true would also mean reloads hash changes recently pages broke rather thoroughly yes fault checking docs since clearly documented name misleading also hard pressed think use case wanting reload route hash change context course event feels like better interface would simply support two separate options reloadonsearch reloadonhash nt want make breaking change perhaps reloadonsearch behavior could remain noreloadonhash override happy work pr one another option wanted open first get people thoughts", "num": "2206", "d": "5/2015"}, {"title": "controldirective custom value accessors rely dom attributes order", "body": "consider following test successful chrome fails firefox fact fails chrome template modified reverse attributes also note versions test passing ie happens use dom parse templates dom nt guarantee order attributes drives order directive list order records change detection etc illustrated test results various browsers vsavkin sure solve suggestion please", "num": "2205", "d": "5/2015"}, {"title": "dart transformers record interfaces", "body": "following class app dart transformers record information reflector object following", "num": "2204", "d": "5/2015"}, {"title": "router back button work properly", "body": "back button works well one route navigated renders previous view one route followed nothing happen clicking back button history also maintained impossible go forward", "num": "2201", "d": "5/2015"}, {"title": "issue angular website", "body": "sure right forum opening issue nevertheless looking bio page clicked bio view person profile close bio click bio voila get happening across bios easily reproducible", "num": "2199", "d": "5/2015"}, {"title": "relative urls templates working correctly", "body": "assuming project structure referencing mycomponenthtml mycomponentjs currently pass complete path folder ideal writing reusable components far understand componenturlmapper always returns matter folder component located path gets appended compiler information actual location component gets lost think issue also related", "num": "2194", "d": "5/2015"}, {"title": "lifecycle onchange nt work top level component", "body": "nt work top level component", "num": "2192", "d": "5/2015"}, {"title": "build master angular compiles successfully throws errors simple questions build process", "body": "hi questions sure simple one angular veterans today built angular instructions developermd first time took sources master branch yesterday compilation ran without errors compilation got dist directory distbundle distbuild directories nt know difference directory purpose tested resulting simple typescript code visual studio typescript traceur module loader script jspmiosystem quickstart tutorial javascript import component view bootstrap import inject class constructor component selector app properties newtodo newtodo appinjector dependency injection von view templateurl partialsmainpage class myappcomponent code works alpha used bytes directory angulardistbundle main html page loading page nt displayed console see error use directory get error seems make systematic error cause error messages differ much use everything works perfectly code master branch always working wait new alpha releases waiting cause contains fixes ios think would great idea dist directory anywhere continuous tested builds everyone could test master branch content without build making errors sorry asking newb questions nt find documentation topics maybe advices also helpful angular developers maybe developermd could expanded detailled instructions codebase use directories dist folder responsible josef", "num": "2191", "d": "5/2015"}, {"title": "unbound visibility skips self", "body": "using skips self wrong cases right case injecting prevents cyclical dependency proposal change default include self take optional argument skips self case cyclical injection", "num": "2188", "d": "5/2015"}, {"title": "ignore whitespace test comparisons", "body": "particular intellij wants add newlines expected json output causing tests fail running locally cc vicb", "num": "2187", "d": "5/2015"}, {"title": "di using without type fails using mirrors", "body": "given class something like see eg using class di fails following error using dynamic reflection eg helloworldindexdynamichtml", "num": "2185", "d": "5/2015"}, {"title": "angulario page bug", "body": "nt know right place report open bio angulario close reopen another one fail bind", "num": "2184", "d": "5/2015"}, {"title": "application bundle packing", "body": "using typescript encountered problem packaging application splitted separate js files ca nt bundled one file duplication variables filerelated modules system used systemjs tried amd commonjs result example error main application file importing another file folder services like also tried wrap nodexhrimpl class module named services import require keyword got error sounds like object function tried instantiate imported class another thing compiler inserts reflectdecorate function duplicated among compiled files seem like good option production handy minimal application demonstrating modularity important productionready ie possible bundled single file bunch files separated functionality example", "num": "2179", "d": "5/2015"}, {"title": "angulario error", "body": "click photo next close popup next click photo every time get error windows last version chrome find single angulario repository", "num": "2178", "d": "5/2015"}, {"title": "nativeshadowdomstrategy", "body": "related codegen mode native shadow dom workingresolving style urls properly transformer disabled component becomes enabled becomes invalid cc kegluneq mhevery", "num": "2175", "d": "5/2015"}, {"title": "angular internal services missing injectable", "body": "grossly affects dart story right example work codegen mode patched internally fixed upstream cc kegluneq mhevery", "num": "2173", "d": "5/2015"}, {"title": "reflectjs included dependency npm package", "body": "installing npm module included dependency", "num": "2170", "d": "5/2015"}, {"title": "benchpress throwwarn chosen name micrometrics overwrites buildin metric", "body": "eg following invalid rendertime buildin metric benchpresssample micrometrics rendertime", "num": "2169", "d": "5/2015"}, {"title": "benchpress throw given invalid slope calculation metric", "body": "ie say use script throw script valid scripttime would valid", "num": "2168", "d": "5/2015"}, {"title": "alpha typeerror map constructor accept arguments safari mac os x ipad ios", "body": "javascript error typeerror map constructor accept arguments map native code clone appview createview createroothostview run zoneboundfn lib promise internal trycatch lib promise internal invokecallback lib promise internal publish microtask run zoneboundfn flush logerror line defaulterrorreporter line onerror line onerror line run line anonyme funktion line zoneboundfn line lib promise internal trycatch line lib promise internal invokecallback line lib promise internal publish line anonyme funktion line microtask line run line anonyme funktion line zoneboundfn line flush line safari traceur mac os x yosemite also ipad ios page refuses load nothing displayed", "num": "2163", "d": "5/2015"}, {"title": "elementmatches error given text node", "body": "creating dynamic component viewcontainerref create eventually calls app possible pass node however running code attempts executed text node nt exist also able prevent error providing template without text nodes cases may least one text node array created would possible either collect text nodes update return false node htmlelement nt nt", "num": "2162", "d": "5/2015"}, {"title": "alpha error safari declare parameter named controlorname strict mode", "body": "hi created project alpha typescript visual studio tested safari version also ipad current ios result environment traceur best regards josef", "num": "2161", "d": "5/2015"}, {"title": "gulp builddart resolving dependencies ctrlcable", "body": "possible cancel step resolving dependencies", "num": "2158", "d": "5/2015"}, {"title": "question material", "body": "jelbourn tests cc juliemr", "num": "2157", "d": "5/2015"}, {"title": "jqlite text function different behavior jquery text function", "body": "", "num": "2155", "d": "5/2015"}, {"title": "promisepipe working", "body": "hi indexts ts use strict declare var require promise import reflectmetadata import bind piperegistry component view bootstrap import defaultpipes const pipes object assign defaultpipes component selector app view template class app syncval syncval asyncval constructor thisasyncval new promise resolve gt settimeout gt resolve asyncval bootstrap app bind piperegistry tovalue new piperegistry pipes ts declare module export function component arg export function view arg export function bootstrap args export function bind args export class piperegistry constructor declare module export var defaultpipes indexhtml building rewrite result chrome result consolelog bound screen bug missing something", "num": "2148", "d": "5/2015"}, {"title": "bad content dgenigenerated", "body": "see followup comments petebacondarwin assigning based comment working mprobst find time help week needed back pacific time", "num": "2147", "d": "5/2015"}, {"title": "di resurrect injectables", "body": "works fine full control code base however importing libraries still want angular able reflectgenerate factories constructor without explicit eg dart import package injectables const chartrenderer import somecharlibrarydart", "num": "2141", "d": "5/2015"}, {"title": "documentation example missing js reference", "body": "reference traceur runtime missing", "num": "2140", "d": "5/2015"}, {"title": "formbuilder error typeerror read property subject undefined", "body": "hello trying use formbuilder simple todoapp everytime get error taking look file checking inside changed code looks like works expected clue going repo error ps using version", "num": "2139", "d": "5/2015"}, {"title": "ngif unable find provider protoviewref angular gt upgrade", "body": "patch upgrade looks like reason directive injected protoviewref service steps reproduce clone repo checkout branch start local server visit page view console expected error", "num": "2137", "d": "5/2015"}, {"title": "gulp testunitcjs executes", "body": "upon executing gulp testunitcjs dart sdk available dart tasks skipped using gulpfile angulargulpfilejs starting buildcleanjs starting buildcleantools finished buildcleantools ms starting buildtools starting buildtools finished buildcleanjs ms finished buildtools finished buildtools starting testunitcjs starting buildjscjs tree diff duration changes detected files directories tree diff funneldestfkeyvitmp duration changes detected files directories tree diff duration changes detected files directories slowest trees total diffingtscompiler diffingtraceurcompiler slowest trees cumulative total avg diffingtscompiler diffingtraceurcompiler creating nodemodules symlink hack creating link creating link distjscjsnodemodulesbenchmarks benchmarks creating link distjscjsnodemodulesbenchmarksexternal benchmarksexternal creating link distjscjsnodemodulesbenchpress benchpress creating link distjscjsnodemodulesexamples examples creating link distjscjsnodemodulesrttsassert rttsassert finished buildjscjs starting testunitcjsci started specs failures finished seconds finished testunitcjsci change files trigger rerun watch triggered file change starting buildjscjs tree diff duration changes detected files directories tree diff funneldestfkeyvitmp duration changes detected files directories tests run watcher dead", "num": "2136", "d": "5/2015"}, {"title": "website documentation seems tracking latest alpha release", "body": "instance quite outdated even refer valid file let know assistance updating site", "num": "2135", "d": "5/2015"}, {"title": "benchpress integrate webpagetestorg", "body": "fairly easy people would still write scripts way benchpress would execute multiple times give results think already calibrated machines benefit angular everyone write benchmarks snippets compare results frameworks", "num": "2129", "d": "5/2015"}, {"title": "ca nt use typescript code compiled dart", "body": "solution remove statements becomes example becomes problem component called contains template however needs inject parent set property container wo nt work way hoisting constructs works work around using forward declaration container works great ts js good compiled dart since nt might workaround issue late needed property set results ready yet constructor blocking moving dialog component typescript fyi mprobst alexeagle rkirov", "num": "2127", "d": "5/2015"}, {"title": "component property bindings name element bindings set", "body": "component property binding set eg template use mycomp however never set even though value suspect behaviour due presence global event handler", "num": "2124", "d": "5/2015"}, {"title": "proposal support passing setter callbackevent hook", "body": "suppose custom even called instead creating function handle event assigning variable result able assign variable example component fired calls automatically", "num": "2122", "d": "5/2015"}, {"title": "interfacebased lifecycle methods", "body": "currently declare lifecycle callback methods annotations idiomatic dart errorprone dart typescript note example misspelled method also note signature method wrong warning analyzer mistakes proposal idiomatic dart get much better feedback tools shared dart js extract lifecycle property annotation use js reason need keep typescript reify interfaces way reflectively tell class implements interface components intended transpile languages material components would simply use dart would ignore js would ignore related issue", "num": "2120", "d": "5/2015"}, {"title": "benchpress sometimes first run reports almost time", "body": "seen dart test forced gc workaround run benchmark enter sample loop benchpress", "num": "2116", "d": "5/2015"}, {"title": "di formal way specify noncyclical hierarchical relationship", "body": "suppose injects parent wraps republishes children workaround right might even work new syntax use instead could dart component oneinjectortorulethemall const const binding eventbus class contactpanelcomponent class eventbus final eventbus parenteventbus eventbus hierarchical optional parenteventbus parent wrap", "num": "2115", "d": "5/2015"}, {"title": "di parent ancestor unbounded usable annotation", "body": "eg", "num": "2114", "d": "5/2015"}, {"title": "forms api custom validators run initial value", "body": "custom directive injects adds custom validator constructor validator called initial value model passed constructor", "num": "2113", "d": "5/2015"}, {"title": "forms api support model view updates", "body": "calling control update view", "num": "2112", "d": "5/2015"}, {"title": "di decorators ca nt publish host component time", "body": "angular dart possible published interface say possible today resolve component created first decorator maybe working intended vsavkin", "num": "2111", "d": "5/2015"}, {"title": "di appinjectorhostinjectorviewinjectorohmy", "body": "alright understand need today three think thought usable long term large application need three", "num": "2110", "d": "5/2015"}, {"title": "unexpected directive value undefined view component displaycomponent", "body": "watched step step guide created repo everything works wanted update got error", "num": "2104", "d": "5/2015"}, {"title": "todo example add support router", "body": "todo examples links completed ineffective iirc implementation pending router available think could updated cc davideast btford", "num": "2100", "d": "5/2015"}, {"title": "selected dropdown option displayed browser chrome ie", "body": "hi strange issue selected option nt get displayed chrome ie works firefox although html selected plunker reproduce case note also happens mentioned browsers set data asynchronously plunkr demoing timeout production code fetched http call quite sure whether due strange binding code issue within angular since also guys irc channel able help posting smiley work chrome latest stable chrome canary internet explorer works firefox", "num": "2098", "d": "5/2015"}, {"title": "refactor injector strategies", "body": "since use strategies today strategies arbitrary class without defined interface migrated source code ts add interface strategies specific must check applicable di current implementation one class used route methods implementation use factories create could return different class according strategy used would remove need proxy cc vsavkin", "num": "2097", "d": "5/2015"}, {"title": "text nodes templates", "body": "set template hello world html greeting world computed content see html greeting world", "num": "2095", "d": "5/2015"}, {"title": "booting unit tests run ex testunitjs slow", "body": "logs windows laptop win bits ram ssd dart sdk detected using gulpfile githubangularmlavalgulpfilejs starting buildcleanjs finished buildcleanjs ms starting buildjsdev starting buildcleantools finished buildcleantools ms starting buildtools starting buildtools finished buildtools finished buildtools starting broccolijsdev starting broccolijsdev tree diff diffingtraceurcompiler changes files dirs tree diff diffingtscompiler changes files dirs tree diff diffingtraceurcompiler changes files dirs tree diff destcopy changes files dirs slowest trees total diffingtscompiler diffingtraceurcompiler treestabilizer destcopy slowest trees cumulative total avg diffingtscompiler treemerger ms diffingtraceurcompiler ms funnel ms treestabilizer ms destcopy finished broccolijsdev min finished broccolijsdev min starting buildcheckcirculardependencies finished buildcheckcirculardependencies ms starting checkformat finished checkformat min finished buildjsdev min starting testunitjs starting testunitjskarmaserver finished testunitjskarmaserver info karma karma server started info launcher starting browser chromecanary warn watcher pattern match file starting broccolijsdev tree diff diffingtraceurcompiler changes files dirs tree diff diffingtscompiler changes files dirs tree diff diffingtraceurcompiler changes files dirs tree diff destcopy changes files dirs slowest trees total treestabilizer treemerger funnel funnel treemerger treemerger treemerger slowest trees cumulative total avg treemerger ms treestabilizer ms funnel ms finished broccolijsdev starting testunitjskarmarun finished testunitjskarmarun info chrome windows connected socket id", "num": "2094", "d": "5/2015"}, {"title": "testunitdart runs build tests twice file change", "body": "start build test run twice touch", "num": "2093", "d": "5/2015"}, {"title": "injection errors unit tests useful", "body": "error thrown say injector message nt get passed along", "num": "2091", "d": "5/2015"}, {"title": "class updates via hostproperties synchronous", "body": "take look plunker uncomment call button turn blue app initializes focus call done immediately class update makes button visible therefore focusable button receive focus class yet updated button therefore turn blue could also add following log immediately call set see class still set immediately making call inside timeout callback print", "num": "2090", "d": "5/2015"}, {"title": "use dart semanticsfacade", "body": "dart already class dart math nt right bottom seem useful anyway", "num": "2088", "d": "5/2015"}, {"title": "resurrect onchange", "body": "required dart compile", "num": "2087", "d": "5/2015"}, {"title": "directive lifecycle needs complete documentation", "body": "currently documented type list elements elements allowed list", "num": "2083", "d": "5/2015"}, {"title": "nt allow binding classes injector nt injectable annotation", "body": "right leads clue real problem writing class typescript", "num": "2079", "d": "5/2015"}, {"title": "change detector able reference functions idempotentently", "body": "nt know happens js dart component selector x view directives const ycomponent template r class xcomponent void onfoo print foo component selector properties const callback callback class ycomponent void set callback function callback callback expected output foo actual output giant scary message workaround dart class xcomponent function onfoo xcomponent onfoo onfoo void onfoo print foo", "num": "2078", "d": "5/2015"}, {"title": "property setter called directive use notation", "body": "js component selector awesome properties name awesome class awesomedirective constructor static name name string consolelog attribute consolelog name set name name string consolelog property consolelog name expected html console output attribute hello actual output attribute hello property hello expected html console output attribute null property world actual output attribute null property world", "num": "2076", "d": "5/2015"}, {"title": "trying add events constructor throw obviously wo nt work", "body": "example", "num": "2074", "d": "5/2015"}, {"title": "escape dgeni comment annotations dart output", "body": "go see last successful build docs links build failure messages", "num": "2072", "d": "5/2015"}, {"title": "determine providing type annotation changedetector beneficial", "body": "currently typed information fully type bit complicated assigned able work around", "num": "2070", "d": "5/2015"}, {"title": "toalias throw undefined", "body": "throw meaningful message othertoken undefined", "num": "2068", "d": "5/2015"}, {"title": "regenerate proto records runtime", "body": "generating change detector classes create since easily serializable recreate runtime remove inefficiency related", "num": "2067", "d": "5/2015"}, {"title": "read property defaultdoc undefined", "body": "trying use systemjs without luck seems dynamically loading breaks somehow library initialization setup repo reproduce issue error receive information gt gt", "num": "2065", "d": "5/2015"}, {"title": "npm install hangs downloading", "body": "deleting entire folder running lots stuff flies build hangs angular postinstall usersmartinprobstsrcangular node toolschromedriverpatchjs amp amp webdrivermanager update amp amp bower install amp amp gulp pubgetdart amp amp tsd reinstall config amp amp tsd reinstall config toolstsdjson updating selenium standalone downloading updating chromedriver downloading interestingly rerunning install seems succeed", "num": "2060", "d": "5/2015"}, {"title": "change log list breaking changes alpha provider", "body": "code javascript lt interfacedefinitionen f\u00fcr import component view bootstrap import inject injectable class geta return balupp component selector app properties newtodo newtodo injectables dependency injection von view templateurl partialsmeineseite class myappcomponent constructor webs gives error message angular alpha javascript provider myappcomponent gt error nobindingerrorbaseexception nobindingerrorabstractbindingerror new nobindingerror injectorexecuteinjectorgetbykey injectorexecuteinjectorgetbykey injectorexecuteinjectorget elementinjectorexecuteelementinjectorgetbykey elementinjectorexecuteelementinjectorgetbydependency elementinjectorexecuteelementinjectornew elementinjectorexecuteelementinjectorgetobjbykeyid run promise internal trycatch promise internal invokecallback promise internal publish anonymous function schedulemicrotaskmicrotask run workes angular alpha setup typescript emitdecoratormetadata", "num": "2058", "d": "5/2015"}, {"title": "set focus input input error form submit", "body": "focus could set input form submit input errors like required pattern minlength anyone knows angularjs thanks", "num": "2057", "d": "5/2015"}, {"title": "gulp testunitjs broken", "body": "master first run ok progress traces displayed file changes tests rerun progress error reported see traces sometimes second browser window gets opened linked dededup logs amp different processes finished broccolijsdev starting testunitjskarmarun finished testunitjskarmarun ms starting broccolijsdev tree diff duration changes detected files directories tree diff duration changes detected files directories tree diff duration changes detected files directories tree diff duration changes detected files directories slowest trees total funnel funnel diffingtraceurcompiler diffingtraceurcompiler treemerger treemerger replacefilter slowest trees cumulative total avg funnel ms diffingtraceurcompiler ms treemerger ms replacefilter ms finished broccolijsdev starting testunitjskarmarun finished testunitjskarmarun ms lt lt lt test progress gt gt gt", "num": "2054", "d": "5/2015"}, {"title": "diffingpluginwrapper handle input trees mutable input paths", "body": "originally diffingpluginwrapper written appeared broccoli plugins nt change outputpaths came across several example mergetrees replace plugins outputpaths become inputpaths mutability inputpaths causing us throw dirty checking filesystem used wraps expects path immutable order us fully compatible existing plugins need work around issue tying tree differ path instead provide path dirtychecked calling means move path declaration constructor method", "num": "2051", "d": "5/2015"}, {"title": "rewrite broccolireplace plugin incremental", "body": "currently use browser node tree plugin accounting full build incremental rebuild look replacements fairly simple ca nt cause us waste much time try reimplement plugin features actually need plain javascript without additional templating libraries regular expression replacements trick plugin implemented diffingbroccoliplugin api compatibility would nice required example usage", "num": "2050", "d": "5/2015"}, {"title": "module loader fails load safari", "body": "plunker works chrome safari os x console see moduleloader js file loaded wrong server issue exists way thru alpha yet tested alpha", "num": "2049", "d": "5/2015"}, {"title": "update shrinkwrap readme", "body": "last steps required even updating tsd cc juliemr", "num": "2043", "d": "5/2015"}, {"title": "ability stop event propogation", "body": "gt codebase common pattern provides api implemented would like similar pattern", "num": "2042", "d": "5/2015"}, {"title": "undebuggable error class valid qualified symbol name", "body": "app throwing error mode dartium using debug version reflector error unhelpful isolating issue obvious questions requesting eg element processing object requested context recent changes assume would love affirmation", "num": "2041", "d": "5/2015"}, {"title": "broccolitypescript nt complain errors unchanged files incremental compilation", "body": "might desirable iterating single file checks file pass go green instead global check", "num": "2039", "d": "5/2015"}, {"title": "warn nodemodules stale build", "body": "common source issues stale version installed dependencies like warn stale npm node version also complain stale nodemodules", "num": "2038", "d": "5/2015"}, {"title": "initial test run often performed testunitcjs", "body": "run majority cases see run tests twice upon start", "num": "2037", "d": "5/2015"}, {"title": "incrementally format dart code testunitdart", "body": "currently run full reformatting change slow", "num": "2036", "d": "5/2015"}, {"title": "sort multiple columns including date string format", "body": "able manipulate sort multiple columns orderby filter var myapp angularmodule myapp var function myctrl scope filter var r date pm numstr date pm numstr date numstr date pm numstr date pm numstr date pm numstr fiddle possible manipulate date string sorting missing something", "num": "2035", "d": "5/2015"}, {"title": "test sample", "body": "would wonderful small example setup tests alpha releases nt know currently possible tried luck including describe etc example would incredible help developers trying build projects based alpha would help catch great number regressions apps framework writing ebook angular would love unit test samples able update material breaking changes alpha release", "num": "2031", "d": "5/2015"}, {"title": "urlresolver require anchor element resolve url", "body": "puts requirement run test content shellweb driver order use dom better way least alternative implementation even inefficient nt use dom testing", "num": "2029", "d": "5/2015"}, {"title": "land basic http lib", "body": "scope perform basic requestresponse returning object using xhr mock backend example", "num": "2028", "d": "5/2015"}, {"title": "update dev guide", "body": "", "num": "2027", "d": "5/2015"}, {"title": "ngclass equivalent behaviour", "body": "already exists pointer docs would awesome angulardart element evaluates b c rendered output use pattern angular", "num": "2025", "d": "5/2015"}, {"title": "test router race condition activate called multiple times", "body": "race condition encountered fixed adding integration spec need add unit test around behavior see condition activate called multiple times instance ended bypassing check might need refactor generalize added behavior", "num": "2023", "d": "5/2015"}, {"title": "implement ifelse parser statements", "body": "parser statements event support html", "num": "2022", "d": "5/2015"}, {"title": "remove duplicate error messages build", "body": "currently several layers build system log rethrow exceptions need unify suppress errors stack traces errors output easy understand nt contain duplicate messages useless stack traces sources exceptionsexception logging broccoli plugins angularbuilderts gulp runsequence gulp tasks common scenarios tackle interactivewatch mode x typescript compilation error x traceur compilation error x karma browser test failureerror x jasmine test failureerror errors x dart unit tests failureserrors ci mode x typescript compilation error x traceur compilation error x karma browser test failureerror x jasmine test failureerror x errors x dart unit tests failureserrors wip branch resolving errors", "num": "2021", "d": "5/2015"}, {"title": "require injectable types injectable annotation", "body": "type referenced injector needs tohave di system throw injector well elementinjector probably done creation", "num": "2020", "d": "5/2015"}, {"title": "local variable binding input nt work described", "body": "user input guide angulario indicates code bind input local variable set paragraph text value html mynamevalue instead throws plnkr", "num": "2019", "d": "5/2015"}, {"title": "support operator expressions", "body": "desugar js dart", "num": "2018", "d": "5/2015"}, {"title": "merge injectables creating elementinjector", "body": "currently concatenate injectables creating protoelementinjector handle corner cases need handle two scenarios scenario throw two directives instantiated element declare injectable component hostinjector bind iservice toclass servicea class componenta component hostinjector bind iservice toclass serviceb class directiveb scenario take hostinjector implementation token present configs", "num": "2015", "d": "5/2015"}, {"title": "schema bindings report error misstyped bindings", "body": "quick spot error currently fails silently html item two issues needs instead current binding expands html item html item ngfor ngforof ngforngforofitem defined trying define failed goal identify typos html bindings throw errors hint developers strategy way properly schema properties allowed dom elements currently lazy compute schema dom elements compute webcomponents proposal webcomponents publish schema html lazy compute property noticing property element done compiler compilation step result would something like would tell us ok bind internal property name need properties nt properly rename see could also tell instance case bind attribute rather default properties work webcomponents compilation element tag active result query properties way angular know valid result need configure note used say mappings included adding schema definition angular able correctly resolve webcomponent assignments resolution rules property binding schema gt assign property element schema directive gt assign property directive schema directive gt assign directive schema directive gt throw error literal schema gt noop leave property schema directive gt assign literal onetime directive schema directive gt assign literal onetime directive schema directive gt throw error implication component wants use attributes css part dom declared ahead time schema error handling rules example produce errors html item html item bind item ngfor ngfor property templateelement ngfor bindto ngforin ngfor property templateelement ngfor", "num": "2014", "d": "5/2015"}, {"title": "convert properties component directive arrays", "body": "currently somewhat take rather argument list rather map time renaming properties creates lists necessarily wordy addition hard spot renames notice instead syntax syntax less wordy makes renames explicit also encourages developers keep renames minimum apply", "num": "2013", "d": "5/2015"}, {"title": "consider aliasing escape esc", "body": "registering key events found slightly awkward specify instead expected work since esc printed keyboards idea thanks palmtree", "num": "2010", "d": "5/2015"}, {"title": "typescriptify tests", "body": "x dom x renderer x changedetection x core x di x directives x facade x forms x mock x reflection x router x services x testlib", "num": "2009", "d": "5/2015"}, {"title": "typescriptify examples", "body": "x benchpress x forms x gestures x helloworld x keyevents x material x sourcemap x todo x", "num": "2008", "d": "5/2015"}, {"title": "typescriptify benchpress", "body": "", "num": "2007", "d": "5/2015"}, {"title": "typescriptify benchmarks", "body": "x changedetection x compiler x costs x di x elementinjector x largetable x naiveinfinitescroll x tree", "num": "2006", "d": "5/2015"}, {"title": "typescriptify", "body": "code examples started done", "num": "2005", "d": "5/2015"}, {"title": "typescriptify util", "body": "", "num": "2004", "d": "5/2015"}, {"title": "typescriptify testlib", "body": "started", "num": "2003", "d": "5/2015"}, {"title": "typescriptify services", "body": "", "num": "2002", "d": "5/2015"}, {"title": "typescriptify router", "body": "", "num": "2001", "d": "5/2015"}, {"title": "typescriptify mock", "body": "", "num": "2000", "d": "5/2015"}, {"title": "typescriptify forms", "body": "", "num": "1999", "d": "5/2015"}, {"title": "typescriptify directives", "body": "", "num": "1998", "d": "5/2015"}, {"title": "typescriptify core", "body": "", "num": "1997", "d": "5/2015"}, {"title": "typescriptify render", "body": "", "num": "1996", "d": "5/2015"}, {"title": "elementprobe api", "body": "goal simplify debugging browser allowing adhoc access content dev mode api javascript windowngprobe element element gt probefromelement element class probe static fromelement element element probe get element element get component get context get directives list get type type visibility implementation debug mode perf reasons angular use expandos attach dom element developer use api get wraps allows user retrieve components location tests enabled default tests", "num": "1992", "d": "5/2015"}, {"title": "support manual content reprojection", "body": "goal provide like way reprojecting content one location tree another preserve injection context variables source implementation proposed implementation skeleton make queryable already injectable javascript directive selector ngoutlet properties ngoutlet ngoutlet ngoutletlocals ngoutletlocals lifecycle onchange class ngoutlet ngoutletlocals ngoutlet templateref maybe take array templates constructor public viewcontainer viewcontainerref onchange todo nt destroy view ngtemplateref change thisviewcontainerclear var viewref viewref thisviewcontainercreateembeddedview thisngoutlet use structural changes cal setlocal hash changed var prop thisngoutletlocals viewrefsetlocal prop thisngoutletlocals prop example usage text class mycomponent text string templates querlist constructor viewquery templateref templates querylist thistemplates templates onclick something", "num": "1989", "d": "5/2015"}, {"title": "fakeasync allow mocking dates", "body": "ref js jasmine clock dart quiver clock", "num": "1980", "d": "5/2015"}, {"title": "zone ngzone allow application install custom hooks onturnstartdone", "body": "past possible hook renamed wrapping onturnstartdone custom callback called angular registered function allowed things like syncing nonangular services profiling method nt give access existing callbacks possible get around reading angular source code things like calling use ideally would provided angular", "num": "1978", "d": "5/2015"}, {"title": "remove default exports hack asyncts", "body": "ts traceur disagreed semantics exporting defaults presence needed looks like ts correct traceur include fix next version need update traceur remove hack", "num": "1975", "d": "5/2015"}, {"title": "attribute annotation working", "body": "code component ts import component view attribute component selector subcomponent properties title title name name view template title title name name export class subcomponent title string name string running chrome run get error looks like complaining line javascript metadata design paramtypes string string", "num": "1969", "d": "5/2015"}, {"title": "create public api doc pipes", "body": "currently toplevel entry exported public docs", "num": "1967", "d": "5/2015"}, {"title": "generate file along documentation", "body": "discussed petebacondarwin would like generate complete dts file typescript roadmap indicates include dts bundling release nt want wait long also want ability restrict emit public api surface since already generate humanreadable api doc would great produce exactly data dts representation instead current file handwritten published definitelytyped indicates format file probably blocked moving code typescript", "num": "1966", "d": "5/2015"}, {"title": "q define custom di token eg appdocumenttoken", "body": "see angular defines constantstokens use internally eg could see also useful applications specifically injecting things like version numbers dom handles etc imagine following may already work di docs possible", "num": "1965", "d": "5/2015"}, {"title": "possible directive change detection bug", "body": "tldr change detection failing removing element array displayed using loop directive hypothesis removing element list items shown dom via directive dirty checking loop run element removed however reaches check element removed thus causing null lookup issue template get lookup failure removal code stacktrack xref thanks guys heart", "num": "1964", "d": "5/2015"}, {"title": "preserve stack trace thrown nonerror objects", "body": "follow make sure preserving stack traces errors descend make repro case work dart js preserve non stack traces cc jbdeboer", "num": "1962", "d": "5/2015"}, {"title": "propogate changes", "body": "possible changes sub component propagated parent found issue code uses seems dated new way events", "num": "1959", "d": "5/2015"}, {"title": "templateurl property view nt work nwjs electron", "body": "component template specified via builtin string using template property works fine tried use templateurl got error failed load template testcomponent template defined way also tried result created local http server specified template using http scheme started work problem within nwjselectron must rely workaround bug angular", "num": "1954", "d": "5/2015"}, {"title": "proposal use polymer project material design", "body": "would beneficial use material design web components polymer project instead rewriting angular material additional functionality needed could easily wrap polymer components angular components", "num": "1953", "d": "5/2015"}, {"title": "implement efficient infinite scroll using angular", "body": "designing system based angular going thru various usecases one common usecase infinite scroll large collection high level understand could done angular things get complicated bring data driven rendering picture data view mapping complicated enough justify use imperative logic makes us nervous hear touching dom using angular case means create superset template preprocess data give desired effect implementing imperative logic dataworld makes perfect sense notice leads complicated state machine auxiliary data give desired effect view one example auxiliary data additional variables required showhide elements superset template become convoluted dom manipulation within rendering logic view another construct angular approach looking use case", "num": "1952", "d": "5/2015"}, {"title": "ie bug nggrid bug", "body": "works chrome ie even celltemplate set style anything work ie inspect element get blank style chrome get exactly want really funny change attributes names style xstyle ie delete inspect element get xstyle width whatever ie purpose allowing tried ngstyle got super wierd first broke chrome worked sometime ie databind stopped working", "num": "1951", "d": "5/2015"}, {"title": "null response routeregistry using dart router routerlinker", "body": "maindart file dart import package import package routerlinkdart see newhref coming back null copy link results error kills navigation request dart string expected stacktrace dart dart elementsetattribute dart browserdomadaptersetattribute package routerlinkonallchangesdone package", "num": "1950", "d": "5/2015"}, {"title": "asttostring ast", "body": "particular reason subclasses override abstract implementation reason change detection errors use derived throw unhelpful garbage errors like", "num": "1949", "d": "5/2015"}, {"title": "dart router requiring reflection", "body": "running dart alpha using transformer ensure output compact code went integrate new router upon providing routerinjectables argument bootstrap start getting following errors find reflection information routeregistry package noreflectioncapabilitiesfactory package reflectorfactory package bindingresolve package resolvebindings package injectorresolve package injectorresolveandcreatechild package createappinjector package bootstrap dart async zonedelegaterun package ngzonerun dart async customzonerunguarded package ngzonerun package bootstrap indexdart main turn mirrors pubspecyaml file run application corresponding mirros bloat indexdartjs example seen", "num": "1948", "d": "5/2015"}, {"title": "router error instantiate token componentref synchronously", "body": "built router src get error code use typescript import component view bootstrap import router routeroutlet routeconfig routerinjectables routerlink component selector app view template directives routeroutlet routeconfig path component test test class app component selector test view template test class test bootstrap app routerinjectables", "num": "1947", "d": "5/2015"}, {"title": "documentation step step guide making components minor issue", "body": "clarity comment childcomponent code precede parentcomponent code ts file would helpful", "num": "1946", "d": "5/2015"}, {"title": "question find forms type definition file", "body": "want import formbuilder controlgroup formdriectives etc forms module however find formsdts file anywhere even googling hours one help please", "num": "1945", "d": "5/2015"}, {"title": "alpha ziptypesandannotaions throws exception di possible", "body": "hi get exceptions dependency injection code angular alpha always get error message use dependency injection typscript debugging session found code snippet case paramtypes undefined paramannotations contains array cause ziptypesandannotaions typo named andannotations think called ziptypesandannotaions line causes exception demo application cause paramtypes undefined opinion check paramtypes undefined take paramannotations creating result list excerpt code shows tried use dependency injection javascript class gets return balupp annotation section component selector app injectables view component controller class myappcomponent constructor inject webs best regards josef", "num": "1944", "d": "5/2015"}, {"title": "proposal lifecycle convention", "body": "component ondestroyonchange method angular automatically bind lifecycle without explicit declaration typescript component selector mycomponent class mycomponent ondestroy destroy code", "num": "1943", "d": "5/2015"}, {"title": "step step guide displaying data continuity issue", "body": "stepbystep guide distinct effort made show separation data controller service section create class array property inject component next section conditionally displaying data usage service missing", "num": "1942", "d": "5/2015"}, {"title": "creating template directive using dynamiccomponentloader", "body": "template directive eg lets attach another location want add template directive dynamically runtime jelbourn case knows smile", "num": "1939", "d": "5/2015"}, {"title": "typo displaying data docs page", "body": "typo angulario docs page displaying data section typescript version example code refer attached image", "num": "1938", "d": "5/2015"}, {"title": "replacement bindings", "body": "looking using wondering replacements ngoneway ngonewayonetime ngtwoway", "num": "1937", "d": "5/2015"}, {"title": "support viewquery addition query clean work", "body": "goals x currently queries light dom x query view dom x parametrizable x length defined convenient bind x convenience methods", "num": "1935", "d": "5/2015"}, {"title": "component controller service specialized extended without creating new selector element tag", "body": "say datagridcomponent component viewannotation componentannotation controller function extended srollabledatagridcomponent done defining new set annotations new controller function extend original function would serious limitation especially angular component means view controller said different service class passed component creating new component one annotation may ok change significant often needed customize small part controller extending pretty sure missing something understand angular", "num": "1934", "d": "5/2015"}, {"title": "add api marking manually directive template directive", "body": "currently directive able inject protoviewref used like html works nt provide nicest api want build component wants get hold protoviews something special ran trying build tabs component api tabs look like far user concerned straightforward component hood needs able collect tab labels tab bodies render appropriate place inside template order needs create viewcontainers contents create viewcontainers needs directives protoview available however directive used template directive mentioned means api would written like nice semantic tag names gone surfacing implementation details user need understand dealing propose adding flag set template behavior always", "num": "1931", "d": "5/2015"}, {"title": "consume ngmetajson files", "body": "creates files consumed otherwise necessary implementation details create phase removes files via", "num": "1930", "d": "5/2015"}, {"title": "create ngdepsdart files unnecessary", "body": "tl dr generate files files declare classes import libraries currently generate file every file project unnecessary changes avoid creating file iff file define classes file transitively import files define classes know whether file classes includes subclasses file imports difficult sure file transitively import anything defining class certain imports libraries changes remove files via iff file register classes none file imports associated file perfectly remove files since import cycles could still exist get pretty close", "num": "1929", "d": "5/2015"}, {"title": "understand casts", "body": "transpile", "num": "1927", "d": "5/2015"}, {"title": "gulp testunitjs shows output twice", "body": "finished broccolijsdev starting testunitjskarmarun chrome mac os x forwardref wrap unwrap reference failed referenceerror unwrapref defined function exportapply functionwithparamtokens exportexecute object chrome mac os x forwardref wrap unwrap reference failed referenceerror unwrapref defined function exportapply functionwithparamtokens exportexecute object chrome mac os x executed failed skipped secs secs chrome mac os x executed failed skipped secs secs finished testunitjskarmarun", "num": "1926", "d": "5/2015"}, {"title": "introduce publicprivate element injector rename injectables injector", "body": "goal way directives configure types dom injection hierarchy without needing create directives types types visible either private view encapsulation light dom ie privatepublic align naming terminology injectors make injection explicit injector types fetched nt cross injectors proposed syntax controlling visibility lookup current host injector look parent host injector look parent injector cross shadow dom boundaries look parent injector cross shadow dom boundaries none use app note needs work elementinjector well publishas remove publishas open issues get rid app level injector", "num": "1925", "d": "5/2015"}, {"title": "retesting file changes", "body": "currently kill restart karma every time need rerun tests", "num": "1922", "d": "5/2015"}, {"title": "viewmanager split host views root free host views", "body": "previously one method called would always hijack given element host element used bootstrapping root component well components directly modify dom want place new angular component custom dom however following problems hijacking existing element allow move host view viewpool hijacking existing element requires user pass selector element ca nt allow pass real element independent concrete renderer potentially able use webworker solution introduce uses previous semantics hijacking existing element located selector default selector component used bootstrap introduce creates new host element attach created host element anywhere dom hence name used components modify dom directly also able attach free host view", "num": "1920", "d": "5/2015"}, {"title": "tmp directory cleaned exception thrown within pipeline", "body": "repro steps make syntax error processed file eg file build eg", "num": "1919", "d": "5/2015"}, {"title": "pub build fails transformers vanilla project", "body": "pubspecyaml output error libsrctransformtemplatecompilertransformerdart unexpected token stack trace parsecompilationunit package createngdeps package directiveprocessorapply package rootzonerununary dart futurepropagatetolistenershandlevaluecallback dart futurepropagatetolisteners dart futurecompletewithvalue dart futureasynccomplete dart asyncruncallbackloop dart asyncruncallback dart runpendingimmediatecallback dart rawreceiveportimplhandlemessage dart full output", "num": "1918", "d": "5/2015"}, {"title": "documentation question suggestion advanced environment setup", "body": "week trying still unable get anything basic min quick start functioning ready give seems like lot manual configuration required nt actually documented anywhere like manually configuring typings file importing directives modules user ready give framework shot able least rely documentation explaining exactly setup framework properly documentation setup anything besides min quick start example experience trying figure read attribute component went like browse though api documentation found attribute annotation clue directive looks like component syntax plug constructor compiler error mean ca nt compile right documentation copy pasted well docs nt say anything needing import attribute component view listed import statement top guess need add compiler error attribute found right bloody documentation flips table dont mean sound negative first experience extremely bad one sure others experience", "num": "1916", "d": "5/2015"}, {"title": "typescript error breaks file watching", "body": "run error occurs show changes longer watched", "num": "1915", "d": "5/2015"}, {"title": "change detection error root expression undefined null", "body": "template component class userlist private users string constructor settimeout gt thisusers ben bob bruce results", "num": "1914", "d": "5/2015"}, {"title": "ui updating retrieving data via fetch", "body": "trying use fetch retrieve data ui updating bind data retrieved way using xhr module", "num": "1913", "d": "5/2015"}, {"title": "question test directives templateurls", "body": "hi currently stuck trying unit test view directive templateurl javascript render correct template inject asynctestcompleter testbed xhr async tb xhr gt var html request template goes unfortunately using nt seem work called asynchronously call anyone ideas", "num": "1912", "d": "5/2015"}, {"title": "api componentref support generics instance", "body": "eg", "num": "1911", "d": "5/2015"}, {"title": "confusing error message contains nondirective", "body": "resulting error rather opaque would better compiler checks thing given defined null actually", "num": "1908", "d": "5/2015"}, {"title": "zones amp server environment", "body": "want run angular server side need zones available today zones supported cjs env proposal short term port pr mlval zone would possible start running server side lot things would intercepted valid solution midterm however unblock us quickly mid term find proper solution server side may someting base strongloopzone thoughts cc tbosch mhevery igorminar", "num": "1904", "d": "5/2015"}, {"title": "benchpress bundle", "body": "eg bundle via add explicit exports var browserify require browserify var b browserify dirname distjscjsbenchpresscommonjs bundle bpipe processstdout append statement open questions use work juliemr output include lot things problem", "num": "1903", "d": "5/2015"}, {"title": "build errors logged multiple times", "body": "currently nt consistent way handling error build results confusing duplicate errors logged console broccoli plugin logs stuff console eg broccolitypescript plugin prints type errors throws end indicate build failed captures broccoli plugin errors prints rethrows gulp tasks also print errors caught often add tasklevel errors output", "num": "1902", "d": "5/2015"}, {"title": "build error syntaxerror unexpected token", "body": "one build plugins throw error error gets mangled installed sure issue something else quite concerning cause issue build process", "num": "1901", "d": "5/2015"}, {"title": "scopemsg appearing console dom", "body": "ran bit problem wherein created printing console fine wo nt render dom using browserify require angular bundle js indexhtml msg appjs reason nt exposed dom element empty help appreciated thanks advance", "num": "1897", "d": "5/2015"}, {"title": "di toasyncfactory example seems incorrect probably typo", "body": "hello team line toasyncfactory example understand dependency type name number string get wrong thanks anwar", "num": "1894", "d": "5/2015"}, {"title": "watch tasks nt work log carboncoreframework fseventstreamstart registerwithserver error gt null", "body": "jeffbcross came across issue sublime build setup symptom message appeared terminal watch folder setup using got since replaced since problem originates suspect still present event today log appeared terminal build nt exit process also activity observed files watched directory changed issue seems caused bug one node fsevents carbonmacos manifests watch set directory case done sublime chokidar point clear fix except avoiding double watch directory jeff workaround issue changing sublime config jeffbcross provide details please", "num": "1889", "d": "5/2015"}, {"title": "didart tofactory dependencies argument optional", "body": "dart foo createfoo bar bar gt new foo bar const binding foo tofactory createfoo deps const bar proposed dart foo createfoo bar bar gt new foo bar const binding foo tofactory createfoo kegluneq analyzer reference", "num": "1888", "d": "5/2015"}, {"title": "new router example quickstart", "body": "could someone provide working example new router based pretty sure would useful many us", "num": "1885", "d": "5/2015"}, {"title": "files change brocoli tasks picked", "body": "edit save file watch kicks starts transforming files files transformed change another file observe second change lost cause watcher rerun", "num": "1883", "d": "5/2015"}, {"title": "watch gulp targets print separators", "body": "using watch mode clear one run starts another ends printing something like would useful watch triggered file change", "num": "1882", "d": "5/2015"}, {"title": "confusing error running testunitcjs", "body": "test failing get error usersmiskoworkangularnodemodulesgulpbingulpjs color gulpfile usersmiskoworkangulargulpfilejs testunitcjs working directory changed workangular dart sdk detected using gulpfile workangulargulpfilejs starting buildcleanjs starting buildcleantools finished buildcleantools \u03bcs starting buildtools starting buildtools finished buildcleanjs ms finished buildtools finished buildtools starting testunitcjs starting buildjscjs tree diff duration changes detected files directories tree diff duration changes detected files directories tree diff duration changes detected files directories slowest trees total diffingtscompiler diffingtraceurcompiler slowest trees cumulative total avg diffingtscompiler diffingtraceurcompiler creating nodemodules symlink hack creating link creating link distjscjsnodemodulesbenchmarks benchmarks creating link distjscjsnodemodulesbenchmarksexternal benchmarksexternal creating link distjscjsnodemodulesbenchpress benchpress creating link distjscjsnodemodulesexamples examples creating link distjscjsnodemodulesrttsassert rttsassert finished buildjscjs starting testunitcjsci f failures injector resolve resolve forward references typeerror undefined function typeerror undefined function functionwrapperapply functionwithparamtokensexecute object spec failure finished seconds testunitcjsci errored ms error formaterror gulp gulpemit gulporchestratoremittaskdone finish cb childprocess childprocessemit maybeclose processchildprocesshandleonexit error running task sequence task testunitcjsci message testunitcjsci callback duration hrduration err", "num": "1881", "d": "5/2015"}, {"title": "angular documented story", "body": "angular dart necessary add kind wild hacks get support eg dart class materialradiobutton override void attach disposeradddisposable nodeonclicklisten gt changeselection disposeradddisposable nodeonkeydownlisten handlekeydown set tabindex string tabindex tabindex null ngelementremoveattribute tabindex else ngelementsetattribute tabindex tabindex void handlekeydown keyboardevent keyevent keyeventkeycode keycodespace changeselection would like able follow google accessibility guidelines ideally angular offer examples user guides nonhacky way jelbourn may already answers please refer internal bug information use cases", "num": "1878", "d": "5/2015"}, {"title": "codeangularjsorg nt contain build artifacts", "body": "index publishsh unpublishsh", "num": "1876", "d": "5/2015"}, {"title": "testunitdart failing windows", "body": "get running starting buildcleandart starting buildcleantools finished buildcleantools ms starting buildtools starting buildtools finished buildcleandart ms finished buildtools finished buildtools starting buildtreedart starting buildtreedart tree diff duration changes detected files directories slowest trees total funnel destcopy funnel treemerger funnel treemerger funnel slowest trees cumulative total avg funnel ms treemerger ms destcopy finished buildtreedart finished buildtreedart starting testunitdart starting testunitdartkarmaserver finished testunitdartkarmaserver ms starting testunitdartkarmarun info karma karma server started info launcher starting browser dartium captured browser open finished testunitdartkarmarun ms info chrome windows connected socket id warn webserver warn webserver warn webserver warn webserver transpilation ts dart failing issue opened repo", "num": "1875", "d": "5/2015"}, {"title": "parse function bodies transformer", "body": "need parse function bodies supports update transformer code avoid extra work thanks", "num": "1874", "d": "5/2015"}, {"title": "transformer warn users entry points provided", "body": "see context currently need run angular transformer angular codebase entry points warnings currently potential solutions create private transformer angular codebase require entry point codegen necessary files angular codebase check angular transformer need run except consumer code", "num": "1872", "d": "5/2015"}, {"title": "question possible render list variable components", "body": "somehow possible render list variable components using switch option since must possible import component types modules therefore unknown core application compile time example use case might notification list supports different types notifications notification types component extend base component two examples imagine could look like first example would render list notifications variable type notification data passed single property component html second example would pass property object separate property notification component html angular already support feature like think", "num": "1870", "d": "5/2015"}, {"title": "send event targeted directive", "body": "would great tool send events specific directive something like usecase example one service translates dates human readable format like one second ago view directive calling service translation want update translations time use interval instance directive broadcast hearthbeat rootscope listen directives", "num": "1869", "d": "5/2015"}, {"title": "document injectables error", "body": "documentation injectables component wrong", "num": "1868", "d": "5/2015"}, {"title": "templateurl reload html", "body": "make change html file templateurl nt update chrome takes time mozilla nt update", "num": "1867", "d": "5/2015"}, {"title": "sometimes fails close browser failures", "body": "failures fails close browser rerun task launch new browser tests executed client endup tests running times separate issue tests executed twice try add way reproduce next failure", "num": "1866", "d": "5/2015"}, {"title": "allow overriding directive selector view", "body": "large scale apps use directives different sources name clashes inevitable hence would great could rename directives annotation proposed syntax javascript import ngif import externaldirective somewhereelse view template directives myrenamed externaldirective ngif renamed using short notation", "num": "1865", "d": "5/2015"}, {"title": "patch jasmine execute done function root zone", "body": "jasmine patch exported lands new release zonejs available", "num": "1862", "d": "5/2015"}, {"title": "perf add benchmark ngzone", "body": "ref benchmarks zonejs uses default way enqueue microtasks native promise available available would use fallbacks make sure pick fastest way see zonejs details cost ngzone indicated comment referenced", "num": "1861", "d": "5/2015"}, {"title": "question update jasmine", "body": "fakeasync jasmine would need updated could cause conflict test libs direct jasmine dep packagejson update juliemr background fakes timers jasmine possible cancel within callback major issue would nice update jasmine anyway test skipped defined", "num": "1860", "d": "5/2015"}, {"title": "ca nt retrieve attributes toplevel component", "body": "documentation times read source code tutorials works still ca nt wrap head around wrong want access mytitle inside constructor possible", "num": "1858", "d": "5/2015"}, {"title": "default selector provided compilehost", "body": "dynamically created component using forgot add selector generated dom element could either default creating throw error", "num": "1857", "d": "5/2015"}, {"title": "support arbitrary number bindings per elementinjector", "body": "goal remove limit bindings per elementinjector keep field optimization sub bindings implementation currently uses fields rather hash map look bindings field reads faster hash reads break even number somewhere around fields reading map faster linear search fields currently limit hard coded fields gives us speed memory consumption savings nt think change limit instead second strategy large elementinjector strategy number bindings larger hard coded slots instead switch array strategy look items array rather linear field search note completely switch ie nt search fields fallback array use array immediately large binding sets store array instances array bindings see injector array strategy note sparse arrays slower full arrays javascript create full array unused fields set null shrink array getting minmax keyid bindings assuming spread low produce savings original tex bumping directive limit elements angulardart app since limit also exists going continue see problems migrate elements fewer directives elements bottlenecks end needing set lot context children decorator piece data decorators bind additional values count directive limit", "num": "1853", "d": "5/2015"}, {"title": "provide tool populates annotationmatcher settings", "body": "provide standalone tool users run detect custom implementations update appropriate information see pr issue additional context", "num": "1851", "d": "5/2015"}, {"title": "routerlink support basehref", "body": "following html config basehref generate href generates right similarly router injected given component act like clicking anchor tag", "num": "1850", "d": "5/2015"}, {"title": "cleanupbuilder stuck infinite loop build fails", "body": "happens locally travis get something like", "num": "1847", "d": "5/2015"}, {"title": "object component property directive", "body": "hi inside directive repeated component property component generated exception bind object property work fine import component view import resortslistitem resortslistitem component selector resortslist view template directives resortslistitem export class resortslist items array lt name string gt constructor thisitems name sidr name cral import component view component selector resortslistitem properties item item view template itemname export class resortslistitem item name string constructor throw exception typeerror read property name undefined itemname resortslistitem stacktrace error functiongetstacktracewithuncaughterror zonelongstacktracezonefork zonebind functionzonebindarguments tfnnamesforeachobj anonymous function functionexecutepromisewrapperthen zonerun vmturnzoneexecutevmturnzonerun objectbootstrap", "num": "1846", "d": "5/2015"}, {"title": "component stabilizationlifecycle hook", "body": "angular dart event called used eg dart component map const allowmultiselect gt allowmutliselect items gt items class selectcomponent implements attachaware bool allowmutliselect false list items override void attach point allowmultiselect items nonnull setters called docomponentinit clear reproduce elegantly angular one option would using dart component properties const allowmultiselect allowmultiselect items items lifecycle const onchange class selectcomponent bool allowmutliselect false list items void onchange difference attach may called multiple times items null docomponentinit something like attach planned supported expected use onchange yjbanov mentioned offline jbdeboer may interested", "num": "1842", "d": "5/2015"}, {"title": "run test multiple times", "body": "used run test twice think juliemr fixed branch based current master even worse known issue cc igorminar alexeagle", "num": "1838", "d": "5/2015"}, {"title": "dart output quickstart massive", "body": "ran demo dart running built transformer via pub serve results mb maindartjs file running pub build results mb maindartjs file", "num": "1836", "d": "5/2015"}, {"title": "building srcfacadelang", "body": "using typescript windows trying setup go starting steps examples alas failing basic include modules first issue got path correct naming correct however typescript fails recognize module however change extension module recognizes happened throughout whole package every js every turned ts import succeeds still ca nt compile whole package nt know due changing everything ts issue getting srcfacadelangts recognizing symbols sure anyone setup anyone got type errors cracking head suggestion welcome thank", "num": "1835", "d": "5/2015"}, {"title": "npm shrinkwrap modifying deps npmshrinkwrapjson", "body": "execute npm shrinkwrap dev indicated readme deps key modified idea going wrong", "num": "1834", "d": "5/2015"}, {"title": "inifinite recursion gulp task cleanupbuilder", "body": "see able workaround modifying js register cleanup listener ctrlckill used quit persistent task autotest serve tasks processon sigint function gulpstart cleanupbuilder processexit register cleanup listener nonpersistent tasks processon beforeexit function gulpstart cleanupbuilder reproduce issue add unexisting file", "num": "1833", "d": "5/2015"}, {"title": "travis green event unit test fails", "body": "see", "num": "1832", "d": "5/2015"}, {"title": "parent ancestor annotations typescript", "body": "equivalent following dart works perfectly typescript defining parent ancestor annotations typescript typings using typescript import bootstrap component view import parent component selector view template class constructor parent p consolelog p component selector view template directives class component selector app view template directives class app bootstrap app throws typeerror read property length undefined typeerror read property length undefined reflectioncapabilitiesexecutereflectioncapabilitiesziptypesandannotaions reflectioncapabilitiesexecutereflectioncapabilitiesparameters reflectorexecutereflectorparameters dependenciesfor executebindingresolve functionexecutedirectivebindingcreatefrombinding functionexecutedirectivebindingcreatefromtype compilerexecutecompilerbinddirective", "num": "1831", "d": "5/2015"}, {"title": "order single typescript file matter", "body": "single typescript file throws typeerror read property annotations undefined typescript import bootstrap component view component selector app view template directives class app component selector view template class component selector view template class bootstrap app define components app typescript import bootstrap component view component selector view template class component selector view template class component selector app view template directives class app bootstrap app works fine normal behavior order really matter", "num": "1830", "d": "5/2015"}, {"title": "find eventemitter typescript component", "body": "trying use typescript component following instructions website add following lines appts expected compile actual", "num": "1829", "d": "5/2015"}, {"title": "support finding child classes via query", "body": "writing angular give directives extend", "num": "1828", "d": "5/2015"}, {"title": "flip hostproperties map keyvalues", "body": "currently set like problematic prevents binding multiple properties attributes directive instance property flipping would fix also make consistent already format fyi pkozlowskiopensource", "num": "1826", "d": "5/2015"}, {"title": "add option dart transformers inline templates", "body": "needed tests mock http nt server also required able use fakeasync tests cc matanlurey", "num": "1822", "d": "5/2015"}, {"title": "support way get attributes directive", "body": "existing material design library angular components use concept responsive attributes say component like attribute specify value conditionally screen size example currently way inject single attribute number combinations gets large quickly one attribute one could also set lot boilerplate unnecessary bindings one solution would allow injection attribute map workaround percomponent renderers supported renderer read attributes pass values back directive via event", "num": "1818", "d": "5/2015"}, {"title": "support part files dart transformer", "body": "things need happen support using parts lets collect add support discovering angular annotations parts skip dart files directive primary inputs output file whenever find directive primary input load file treat annotations found current file", "num": "1817", "d": "5/2015"}, {"title": "rebuild broccolimergetrees plugin incremental", "body": "issue similar targets broccolimergetrees plugin take another build latency", "num": "1815", "d": "5/2015"}, {"title": "rewrite broccolifunnel plugin incremental", "body": "similarly changed plugin broccolifunnel suggest fork funnel wrap diffingbroccoliplugin incrementally respond changes since funnel thirdparty code diffingbroccoliplugin npm yet likely best way would pull fork via npm wrap diffingbroccoliplugin angularangular repo way nt need party code angular repo nt need export diffingbroccoliplugin npm yet still bigger changes planned goes npm work take build latency", "num": "1814", "d": "5/2015"}, {"title": "karma outputs every message twice", "body": "reproduce add test iit test run appear twice", "num": "1813", "d": "5/2015"}, {"title": "implement testcomponentbuilder", "body": "implement requirements javascript component selector mdcalendarinput view template directives calendarpopup class mdcalendarinput dateasstring string updatedate newvalue date thisdateasstring newvaluetostring component selector calendarpopup view template class calendarpopup describe calendar input gt update input value popup selects value inject testcomponentbuilder asynccompleter tcb async gt tcb override mdcalendarinput component view directives bind calendarpopup toclass spycalendarpopup excludedirectives override calendarpopup view template mock view override testenvcomp view directives mdcalendarinput template component services create testenvcomp class testcomponentbuilder constructor parentinjector injector override type type view viewoverride component componentoverride directive directiveoveride testcomponentbuilder createasync type type view componentproxy later special zones allow micro leap create type type view componentproxy class componentproxy componentinstance detectchanges hostelement triggerevent monitors push components call check checkonce changedetectorspy overrides contains excludes includes need merge process", "num": "1812", "d": "5/2015"}, {"title": "xhr service support methods get", "body": "currently service supports get http method please implement support methods", "num": "1811", "d": "5/2015"}, {"title": "support server side rendering", "body": "mentioned times passing various conferences interviews nt heard official way track status feature figure ticket get official word core team extent supported currently understanding possible given architecture still hard open problems left solve team focused priorities time", "num": "1810", "d": "5/2015"}, {"title": "implement hostactions", "body": "component selector mycomponent hostactions visible elementscrollintoview class acomponent visible eventemitter constructor thisvisible new eventemitter playvideo thisvisiblenext null first part", "num": "1809", "d": "5/2015"}, {"title": "custom renderers", "body": "right one class implements methods api issue describes distribute responsibilities renderer onto multiple renderers use cases use case wrap jquery widget javascript directive hostrenderer jquerydialogrenderer selector jqdialog hostproperties title title properties title opened class jquerydialogdirective constructor thisopen new eventemitter set open value thisopennext class jquerydialogrenderer implements domelementrenderer elementlifecycleaware callhostaction element domelement action ast actioneval elementdom sethostproperty element domelement propertyname string propertyvalue elementdom call propertyname propertyvalue oncreate element domelement elementdom dialog use case component custom table javascript component selector customtable renderer customtableviewrenderer view template class customtablecomponent class customtablerenderer extends domelementrenderer elementlifecycleaware attachcomponentview element domelement view domview elementshadowrootappendchild use case hack behavior element component template javascript class customrenderer implements domelementrenderer sethostproperty element domelement propertyname string propertyvalue propertyname foo windowalert propertyvalue oncreate element domelement elementdom dialog html hello interfaces proxy object access data domview given boundelementindex class domelement element htmlelement shadowroot node fireevent eventname data data map full domelementrenderer interface class domelementrenderer sethostproperty hostelement domelement propertyname string propertyvalue callhostaction hostelement domelement action string actiondata map attachcomponentview hostelement domelement componentview domview attachviewincontainer containerelement domelement index number view domview detachviewincontainer containerelement domelement index number view domview separate interface nt many empty invocations class elementlifecycleaware oncreate hostelement domelement onhydrate hostelement domelement ondehydrate hostelement domelement ondestroy hostelement domelement implementation notes interface implemented however forwards calls state stored via proxy renderers stay singletons nt want use much di renderer side similar jquery expando eg lifecycle hooks know view element contained createdhydrateddehydrateddestroyed make faster hooks separate base class elementlifecycleaware interfaces changes interface needs get used element multiple renderers", "num": "1807", "d": "5/2015"}, {"title": "proposal support inject class property", "body": "time injected services attached instance used instance methods using class properties available babel typescript would great something like", "num": "1806", "d": "5/2015"}, {"title": "time download js files", "body": "dear friends recently going angular learned many new things like gulp gulpinject wiredep browsersync jshint jscs etc since tried learn everything bit lost basic question front end application indexhtml elite schedule admin elite schedule admin steve michelotti stand indexhtml need vendor scripts needed work partial files gets loaded application usage coming application script injecting indexhtml one question assume run application application one menu items name leagues may happen browser session may never click visit leagues screen need including following file indexhtml outset appleaguesleaguescontrollerjs ca nt way partial viewed time time js file downloaded browser thing possible thanks regards", "num": "1805", "d": "5/2015"}, {"title": "provide typescript type definitions dts release", "body": "possible include angulardts release archives great allinclusivearchive release", "num": "1803", "d": "5/2015"}, {"title": "attribute component selector recognized", "body": "updating plunk got following exception shell component element selector error new baseexception directiveparserensurecomponentonlyhaselementselector see console plunk detailed stack trace plunk", "num": "1802", "d": "5/2015"}, {"title": "shorthandreplacement", "body": "frequently see argument eg imagine accepted case pretty often even realworld apps would swell need options could pass second argument minor issue know developers hate boilerplate case angular open kind api change point let know stop suggesting", "num": "1801", "d": "5/2015"}, {"title": "streamline directive definitions liberal use decorators", "body": "according docs making directive listens events host element like seems like could streamlined listeners registered far away handlers defined registration duplicates method names b arguments registration uses strings makes obfuscation refactoring difficult listen global events seems odd hostlistener object lets listening global events depends magic string prefix window document body implied docs possible alternative ts directive selector input class inputdirective hostlistener change onchange event event windowlistener resize onresize event event nt suffer problems listed imagine similar streamlining properties currently write using decorators could write find whole lot easier understand needing remember constantly left right hand side configuration means eg tell easily one id dependency js class property dom element property constantly get confused angular scope config hopefully eliminate rough edge angular", "num": "1800", "d": "5/2015"}, {"title": "eventemitter error", "body": "updating app based alpha following error every screen lines problem property looks like introduced easy way fix directly access might missing something maybe alexeagle idea", "num": "1797", "d": "5/2015"}, {"title": "failing denote local variable field fields give kind error", "body": "beating head wall trying figure wrong clearly unrolling loop course needs gt lt silently failing seems bad directive least check runtime receiving valid variable declaration throw leave figure send back useful line numbers", "num": "1795", "d": "5/2015"}, {"title": "provide send feedback feature docs angulario", "body": "link report problem improve docs docs pages something like along lines google screenshots stuff would helpful methinks making sure docs stay date angular evolves right", "num": "1794", "d": "5/2015"}, {"title": "need separate angular help forum", "body": "current forum mixed stuff makes hard find help filter bunch irrelevant posts tried adding query google groups seems think meaningless matches angular anyways already new forum needs updated points one linked searched could nt find previous ticket thought seen throwing thoughts sorry dupe", "num": "1793", "d": "5/2015"}, {"title": "querylistonchange callback never called", "body": "example like directive selector tab class tab directive selector tabs class tabs constructor query tab tabs querylist tabsonchange function debugger never called component selector myapp view template directives tab tabs class app bootstrap app callback never called using version please let know something wrong supposed alpha thanks", "num": "1792", "d": "5/2015"}, {"title": "expose control controldirective custom form controls", "body": "one use case ionic making custom elements example imagine state segmentedcontrol toggle specific one could built radios course assume want completely custom control markup looks like html way could figure work attribute like modeled checkbox code formsdirectives creating custom form elements continues common need think easily expose underlying instead call unless wrong way", "num": "1791", "d": "5/2015"}, {"title": "expose control controldirective custom form controls", "body": "one use case ionic making custom elements example imagine state segmentedcontrol toggle specific one could built radios course assume want completely custom control markup looks like html way could figure work attribute load save form values like modeled checkbox code formsdirectives creating custom form elements continues common need think easily expose underlying instead call unless wrong way", "num": "1790", "d": "5/2015"}, {"title": "local variable undefined html template", "body": "hello looks like local variables broken simple code throwing following exception working previously version bundled quick start project interesting nt work lets call bind operations pass local variable parameter event everything working", "num": "1789", "d": "5/2015"}, {"title": "step step guide display data discontinuity", "body": "displaying data section step step guide got confused first let ask complete code guide would solve problems even fix mistakes however without truly stumped following page starts let walk display property list properties conditionally show content based state property like missed something create entry point guide says create showpropertieshtml file put display tag nowhere tutorial actually say related step getting started linked indexhtml weird wording see angular dynamically update content add line two sentences nt mesh next comes additional script instruction give displaycomponent starting value time call update time via setinterval line code inserted constructor class somewhere else needless say instruction reload page browser see seconds updating automatically nt work lost point page looked like step tried navigating luck questions left unanswered components views related class kind default code single ts file makes component guide says associating class elements named display dom angular knows automatically call new displaycomponent bind properties part template class name capitalize display component quickstart tutorial make use line stepbystep guide nt disagreement http server quickstart recommends npm guide advocate python simplehttpserver bode well consistency documentation nb wanted point intermediateadvanced user stumped tutorial ca nt imagine someone new getting far", "num": "1787", "d": "5/2015"}, {"title": "script url import broken", "body": "happened notice returns guess", "num": "1786", "d": "5/2015"}, {"title": "router adding baseurl navigable routes", "body": "say matched url normalized turn passed locationpushstate results instead desired", "num": "1783", "d": "5/2015"}, {"title": "commonjs adapter use external library", "body": "commonjs adapter starting look like full commonjs shim browser environment currently implements event listeners queryselector etc point make project preferably reuse existing one ref", "num": "1777", "d": "5/2015"}, {"title": "broken", "body": "file map dimap breaking lot files switched instead", "num": "1776", "d": "5/2015"}, {"title": "support class hostattributes", "body": "want simply add css class host element directive either user bindings addition classes cases collisions user defined binding win mhevery pkozlowskiopensource", "num": "1774", "d": "5/2015"}, {"title": "proposal declaring ratelimited event handlers debounce throttle", "body": "common need ratelimit dom events fire quickly performance reasons world easy create kind handler example using underscore however typescript syntax way define method based output function like still use syntax totally kills hip vibe mention nt work dart could solve introducing ratelimiters kind similar function event handlers angular syntax something like ratelimiters needed material components question whether angular support directly components roll rate limiting", "num": "1773", "d": "5/2015"}, {"title": "bootstrap binding bind vmturnzone resolved bindings wrong behavior", "body": "angular insert binding top list bindings bottom top makes possible override vmturnzone testing example", "num": "1769", "d": "5/2015"}, {"title": "elementrefdomelement broken", "body": "us ngvegas updated nt returning htmlelement anymore", "num": "1768", "d": "5/2015"}, {"title": "make injectorparent public", "body": "", "num": "1766", "d": "5/2015"}, {"title": "api make easier render components floating panels menu select", "body": "issue tracks leftover work fell large umbrella overlays desired able build component includes popup floating panel part component without break code individual components idea something similar following semantics html triggertext notes would put trigger part panel part light dom important accessibility elements trigger need reference elements panel things like boilerplate passing data back forth data separate trigger panel components content projection would work using templatebased api lets platformspecific matanlurey jbdeboer please feel free add thoughts", "num": "1765", "d": "5/2015"}, {"title": "karma run formatted dart code", "body": "sure happened karma runs unformatted dart code super hard debug cc igorminar", "num": "1764", "d": "5/2015"}, {"title": "support ancestor app injectors", "body": "usecase dart abstract class rpcservice class defaultrpcservice implements rpcservice class specialrpcservice implements rpcservice currently way publish specialrpcservice rpcservice time depend rpcservice comes parent injector specialrpcservice ancestor rpcservice defaultrpcservice current workaround angulardart workaround inject injector call parent cc mhevery vsavkin tbosch", "num": "1763", "d": "5/2015"}, {"title": "testunitjs rebuilds stuff many times jumping branches", "body": "looks like gulpwatch calls us file changed something like means jumping branches lots build task gets called lots times repro another shell expected one rebuild happens followed one test run actual many rebuilds happen followed one test run", "num": "1759", "d": "5/2015"}, {"title": "allow shortcircuiting directiveprocessor", "body": "walks import graph looking classes extend implement expect slow large applications currently every processed file discussed potential optimizations create map first phase transform serialize read allow user completely avoid constructing map specifing classes extend implement provide list user running instead building comprehensive map prior beginning transform lazily search specific annotation classes encounter", "num": "1750", "d": "5/2015"}, {"title": "support directive dependency aliases", "body": "request aliases example sharedjs import shareddeps sharedjs component view directives shareddeps class import shareddeps sharedjs import additionaldep component view directives shareddeps additionaldep class would depend would well yjbanov mhevery angular js already support", "num": "1747", "d": "5/2015"}, {"title": "elementbinder class names clarified", "body": "moment refers renamed separately maybe cc tbosch", "num": "1746", "d": "5/2015"}, {"title": "always false move ts", "body": "however assertionenabled used proxy developer mode extra checks performed changed simple bool hooked right gulp tasks", "num": "1745", "d": "5/2015"}, {"title": "throws security exceptions csp content security policy", "body": "build evangelize building mobile chrome apps using cca extensively angular today right angular causes problems seem support csp mode like angular code runs fine include library locally throws security error put variables templates function appcomponent thisname testing appcomponentannotations new angularcomponent selector myapp new angularview template first angular app documentaddeventlistener domcontentloaded function angularbootstrap appcomponent works fine csp add variable template function appcomponent thisname testing appcomponentannotations new angularcomponent selector myapp new angularview template first angular name app documentaddeventlistener domcontentloaded function angularbootstrap appcomponent get following error", "num": "1744", "d": "5/2015"}, {"title": "process updating dependencies", "body": "using shrinkwrap lock npm dependencies periodic manual process ever get bugfixes improvements newer versions periodically ideally automate get pr green travis build rubberstamp merge practice called continuous integration", "num": "1741", "d": "5/2015"}, {"title": "document correct practice view directives list large apps", "body": "introduces directives list view annotation component author must list directives used template default option list directives explicitly view option significant maintenance overhead requiring template authors list directives use include simple directives task complicated defined mapping selector name class name eg author uses template needs know implemented class second option presented yjbanov extend view annotation appspecific annotation eg myappview child annotation would list common components saving template author boilerplate listing basic components downside using custom annotations makes static analysis source code harder", "num": "1739", "d": "5/2015"}, {"title": "prevent doubleinitialization generated dart code", "body": "example results uses initializing formal constructor parameter explicitly sets could collapsed", "num": "1738", "d": "5/2015"}, {"title": "easy break shrinkwrap", "body": "present checkedin shrinkwrap file includes qq packagejson sync whenever someone changes packagejson easy wrong thing shrinkwrapping might run shrinkwrapper might run unclean state nodemodules verification build files sync maybe also update instructions clear process works example update deps head", "num": "1737", "d": "5/2015"}, {"title": "document verify component lifecycle", "body": "lifecycle component order getters setters called unclear please document lifecycle ensure consistent eg component created template component following template import mycompcss super span creating component setter called getter called times times always times number subject change", "num": "1735", "d": "5/2015"}, {"title": "abilitiy specify urlresolvers percomponent basis", "body": "components different packages may use different url schemes allow application use components different url schemes bound percomponent bonus points perpackage instead current implementation global service injected", "num": "1734", "d": "5/2015"}, {"title": "document urlresolver interface", "body": "lt gt critical path api documented nonobvious behaviour respect inputs interface documented explain null actually means", "num": "1732", "d": "5/2015"}, {"title": "testbed integration test swallows exceptions", "body": "vicb guess one familiar topic today exception code executed integration test compiler seems swallowed somewhere test bed swallowed mean nt get printed anywhere test fails noninformative chrome mac os x inject promises directives failed error timeout async callback invoked within timeout specified jasminedefaulttimeoutinterval would way propagating actual exception test failure log could dig issue sure start atm help appreciated", "num": "1731", "d": "5/2015"}, {"title": "dgeni link handling broken conversion ts", "body": "think simple telling dgeni look ts files changes commit breaks doc generation", "num": "1729", "d": "5/2015"}, {"title": "make broccoli plugin incremental", "body": "existing plugin needs converted diffingbroccoliplugin make incremental depends", "num": "1720", "d": "5/2015"}, {"title": "implement file extension filter diffingbroccoliplugin", "body": "currently diffingbroccoliplugin provides full tree diff plugins means plugins care files need filter diff operation common enough implemented diffingbroccolipluginwrapper rebuild method instead proposal ts class myplugin implements diffingbroccoliplugin static includeextensions ts static excludeextensions dts public rebuild diffresult diffresult diffresult contains ts files dts files tasks add filtering refactor existing broccolitypescriptts traceurindexts rely feature", "num": "1719", "d": "5/2015"}, {"title": "directive selector nt support children", "body": "following js directive selector mdinputcontainer export class mdinputcontainer directive selector mdinputcontainer input export class mdinput directive never instantiated", "num": "1718", "d": "5/2015"}, {"title": "unhelpful error message invalid binding shapes", "body": "error message explain binding invalid b hints fix case multiple locations resolvebindings produce error eg resolvebindings package injectorresolve package injectorresolveandcreatechild package createappinjector package bootstrap package", "num": "1716", "d": "5/2015"}, {"title": "futurethen onerror incorrectly typed", "body": "error e gt throw failed load url httprequest call", "num": "1715", "d": "5/2015"}, {"title": "provide method registering changedetector classes angular system", "body": "also tbosch provide way register generated change detector classes angular system fyi dart side currently using component identifiers fine changing", "num": "1714", "d": "5/2015"}, {"title": "provide method converts protoviewdto information needed change detectors", "body": "also tbosch dart transformer runs generating object please provide method converts object components necessary generating change detector classes thank", "num": "1713", "d": "5/2015"}, {"title": "refactor protoviewfactory avoid direct use directive", "body": "protoviewfactory createprotoview requires instances direct use directive problematic running dart transformer", "num": "1712", "d": "5/2015"}, {"title": "promisewrapperreject preserve stack traces", "body": "application throwing error see nonsensical stack trace instead stack leading source error going reject call instead passing error please pass error stack trace user", "num": "1709", "d": "5/2015"}, {"title": "failed load template xxxxcomponent error message unhelpful", "body": "tests failing failed load template error error tell template failed load b give hint fix error", "num": "1708", "d": "5/2015"}, {"title": "naiveinfinitescroll benchmark occasionally times js", "body": "try run naiveinfinitescroll js work works command output xvfbrun nodemodulesbinprotractor protractorjsconfjs testing chromedesktop starting selenium standalone server launcher running instances webdriver selenium standalone server started started benchmark description appsize forcegc false iterationcount lang js regressionslopemetric scripttime runid samplesize scrollincrement useragent linux khtml like gecko metrics gcamount gc amount kbytes gctime gc time ms majorgctime time major gcs ms purescripttime script execution time ms without gc render rendertime render time ms scripttime script execution time ms including gc render fbenchmark description appsize forcegc false iterationcount lang js regressionslopemetric scripttime runid samplesize scrollincrement useragent linux khtml like gecko metrics gcamount gc amount kbytes gctime gc time ms majorgctime time major gcs ms purescripttime script execution time ms without gc render rendertime render time ms scripttime script execution time ms including gc render benchmark description appsize forcegc false iterationcount lang js regressionslopemetric scripttime runid samplesize scrollincrement useragent linux khtml like gecko metrics gcamount gc amount kbytes gctime gc time ms majorgctime time major gcs ms purescripttime script execution time ms without gc render rendertime render time ms scripttime script execution time ms including gc render failures naive infinite scroll benchmark run scroll benchmark collect stats appsize message failed error wait timed stack error failed error wait timed object object promisecontrolflowruninframe object object promisecallbackgoogdefineclassnotify object object promisepromisenotify specs failure finished seconds shutting selenium standalone server launcher instance webdriver still running launcher chrome failed test launcher overall failed spec launcher process exited error code", "num": "1706", "d": "5/2015"}, {"title": "benchpress report wall clock time start first captured event end last captured event", "body": "want know total duration benchmark including time periods browser nothing events would like metric captures time start first event end last event within benchpress execute function example somebody schedules asynchronous task duration delay benchpress right report actual execution time fact took execute lost", "num": "1700", "d": "5/2015"}, {"title": "benchpress update demo current version", "body": "see", "num": "1699", "d": "5/2015"}, {"title": "benchpress make sure output jsonfilereporter consistent dart js", "body": "dart create json files via methods see however used javascript javascript looks files change method also look methods via third argument javascript", "num": "1698", "d": "5/2015"}, {"title": "benchpress use promises seleniumwebdriver patch traceur", "body": "right using promises seleniumwebdriver promises traceur leads race conditions prevents long stacktraces show correctly seleniumwebdriver compliant promise implementation use ie export global function", "num": "1697", "d": "5/2015"}, {"title": "multiple named validators per form field", "body": "angular possible assign multiple validators single form input field propose added currently use uivalidate directive uiutils something similar angular would nice reason functionality display different error messages based validators failed code example blog post looks like possible check validator failed clear possible declare multiple validators single field syntax may look something like checking html field required city built rock roll", "num": "1696", "d": "5/2015"}, {"title": "wait included css fully loaded instantiating component finishing compilation", "body": "use case component needs know high right would schedule promise eventually use new event see however nt wait nested css fully loaded instantiate component component way knowing right size problem probably appears emulated mode load nested stylesheets manually", "num": "1694", "d": "5/2015"}, {"title": "implement element sizepositionvisible event general readwrite queue", "body": "purpose component able read size react hard wait dom fully rendered causing layout reading position additionally browser resize event elements mental model component register host event framework call initial render component supply initial size information component size changes component may change size due window resize changes dom rendering ie text gets longer cause reflow algorithm dirty check host elements using end digest cycle dom rendering occurs may pruning know things absolutely position later optimization window resize occurs orientation mobile cause resize invoke handler bounding rectangle changed schedule another end turn done creating resolving within current notes platforms may primitives nt dirty check benefit event proper batching layouts optimize prune dirty checking later know application structure service deleted need split event concern separate events events widthheight changed size changes less often position widthheight position changed component visible screen example class virtualscroll visiblerows array toppadding number buttompadding number onscroll offset number update visiblerows onresize rect rectangle compute number visible rows", "num": "1693", "d": "5/2015"}, {"title": "di using generics angular", "body": "angular dart possible use typeliteral bind inject generics dart class typeliteral const typeliteral type get type gt example use dart component module mycomponentmodule class mycomponent static void module directivebinder directivebinder directivebinderbind const typeliteral gt type tovalue const hello world mycomponent list stringlist assert stringlist const hello world angular based snippet tim linked looks like longer possible add fr ng alternative also play well angular dart di system kegluneq yjbanov", "num": "1691", "d": "5/2015"}, {"title": "router support routeconfigs paths contain hashes", "body": "think routeconfig support hashes would like following type urls supported router imagine following app page page directives routerlink routeroutlet export class app constructor inject router router router routerconfig path one component one expect able click links navigate two components nt work following code location fix supplied following change location links app work router works like expected sure would conflict dart know nothing dart tbh reasons support hashes urls javascript onpopstate observablewrappercallnext thissubject url thispath path return thislocationpathname ispresent thislocationhash thislocationhash", "num": "1690", "d": "5/2015"}, {"title": "router support routerlink without routerparams", "body": "following nt seem work new router never updates hrefs anchors ispresent thisparams check routerlink updatehref problem forces always define however would want following unit test work outletspec maybe would option set params default constructor routerlink following routerlink fixes previous unit test although afraid generate newhref set href twice routerparams set ideal", "num": "1689", "d": "5/2015"}, {"title": "event never declared anywhere template", "body": "currently write handler like magical one exception think verynice policy template variables declared explicitly consider instead wrote event handlers bit like js method declarations win magic event variable also plus resembles method shorthand syntax slightly better current course semantics different template adding event handler defining new method doubt would point confusion since motivation using parens first place reason another plus allows us alias name would totally equivalent nt need event object common leave worse wear nt thought deeply make desugarable style syntax nt want turn nt see anywhere inconsistency explicitly addressed thought bring meant exception declaring introduced variables explicitly going good exception explicitly documented ie via ticket", "num": "1685", "d": "5/2015"}, {"title": "dart tutorial missing async library import", "body": "first part code showing properties interpolation import async library apparently uses class timer fails run please mention need import library library added much conditionally display data using", "num": "1682", "d": "5/2015"}, {"title": "bug wjsbin template expressions pipes function argument", "body": "jsbin work doesnt order work tell compiler expression since getting confused number parentheses issue", "num": "1680", "d": "5/2015"}, {"title": "angular ngclick triigered times happens", "body": "sorry repost issue angularjs", "num": "1678", "d": "5/2015"}, {"title": "simplify renderer architecture", "body": "remove viewpool recursion renderer side implement renderer per component see", "num": "1675", "d": "5/2015"}, {"title": "dart extendadd existing di bindings angular migration", "body": "angular dart modules imperative nonconst allowing following however injectables dart angular const less clear pattern understand following would possible using app injector understanding though statically analyzable anymore yjbanov plz respond", "num": "1672", "d": "5/2015"}, {"title": "svg element inside template initializing properly", "body": "following html code template least make request filenamesvg nt browser wo nt make request external file inside element normally copying dom browser make request file found two workarounds create element browserdomadapter createtemplate replace browserdomadapter importintodoc using chrome", "num": "1671", "d": "5/2015"}, {"title": "karma dart watch broccoli output", "body": "", "num": "1668", "d": "5/2015"}, {"title": "proposal support expression lefthandside hostproperties", "body": "say component bunch style properties needs bind also another class responsible figuring styles would nice able contain related properties one model object component instead manually unrolling individual properties", "num": "1666", "d": "5/2015"}, {"title": "unit tests broken machine", "body": "idea happening tried amp error least since friday morning pst gulp testunitjs dart sdk detected using gulpfile dartangulargulpfilejs starting buildcleanjs finished buildcleanjs ms starting testunitjs starting buildcleantools finished buildcleantools \u03bcs starting buildtools info karma karma server started info launcher starting browser chromecanary warn watcher pattern match file finished buildtools starting broccolijsdev tree diff duration changes detected files directories tree diff duration changes detected files directories tree diff duration changes detected files directories slowest trees total traceurcompiler traceurcompiler tscompiler slowest trees cumulative total avg traceurcompiler ms tscompiler finished broccolijsdev starting testunitdevkarmarun args type added path homevictordartangulargit starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs starting broccolijsdev args type added path homevictordartangularidea starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs args type added path homevictordartangularbenchpressbuild starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs args type added path homevictordartangularbowercomponents starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs args type added path homevictordartangulardist starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs args type added path homevictordartangulardocs starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs args type added path homevictordartangularmodulesdart starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs args type added path homevictordartangularnodemodules starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs args type added path homevictordartangularpackages node warning possible eventemitter memory leak detected taskstop listeners added use emittersetmaxlisteners increase limit trace gulpaddlistener runsequence buildandtest gaze gazeemit gazeemit gaze object object ontimeout timerlistontimeout node warning possible eventemitter memory leak detected taskerr listeners added use emittersetmaxlisteners increase limit trace gulpaddlistener runsequence buildandtest gaze gazeemit gazeemit gaze object object ontimeout timerlistontimeout starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs args type added path homevictordartangularscripts starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs args type added path homevictordartangulartmp starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs tree diff duration changes detected files directories error enoent file directory error enoent file directory error native objectfsreaddirsync treedifferdirtycheckpath treedifferdifftree traceurcompilerrebuild lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp asap flush processtickcallback broccolijsdev errored error enoent file directory error native objectfsreaddirsync treedifferdirtycheckpath treedifferdifftree traceurcompilerrebuild lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp asap flush processtickcallback error running task sequence task broccolijsdev duration hrduration message broccolijsdev promise err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined error running task sequence task broccolijsdev duration hrduration message broccolijsdev promise err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined error running task sequence task broccolijsdev duration hrduration message broccolijsdev promise err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined error running task sequence task broccolijsdev duration hrduration message broccolijsdev promise err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined error running task sequence task broccolijsdev duration hrduration message broccolijsdev promise err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined error running task sequence task broccolijsdev duration hrduration message broccolijsdev promise err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined error running task sequence task broccolijsdev duration hrduration message broccolijsdev promise err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined error running task sequence task broccolijsdev duration hrduration message broccolijsdev promise err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined error running task sequence task broccolijsdev duration hrduration message broccolijsdev promise err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined error running task sequence task broccolijsdev duration hrduration message broccolijsdev promise err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined error running task sequence task broccolijsdev duration hrduration message broccolijsdev promise err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined error running task sequence task broccolijsdev duration hrduration message broccolijsdev promise err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined args type added path homevictordartangulartools starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs starting broccolijsdev tree diff duration changes detected files directories error enoent file directory error enoent file directory error native objectfsreaddirsync treedifferdirtycheckpath treedifferdifftree traceurcompilerrebuild lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp asap flush processtickcallback broccolijsdev errored error enoent file directory error native objectfsreaddirsync treedifferdirtycheckpath treedifferdifftree traceurcompilerrebuild lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp asap flush processtickcallback error running task sequence task broccolijsdev message broccolijsdev promise duration hrduration err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined captured browser open testunitdevkarmarun errored error formaterror gulp gulpemit gulporchestratoremittaskdone finish cb incomingmessage incomingmessageemit processtickcallback info chrome linux connected socket id args type added path homevictordartangulartmptreemergertmpdestdircrbkmmactmp starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs starting broccolijsdev args type added path starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs args type added path homevictordartangulartmptreemergertmpdestdirgtcujhfytmp starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs args type added path starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs args type added path starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs tree diff duration changes detected files directories error enoent file directory error enoent file directory error native objectfsreaddirsync treedifferdirtycheckpath treedifferdifftree traceurcompilerrebuild lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp asap flush processtickcallback broccolijsdev errored error enoent file directory error native objectfsreaddirsync treedifferdirtycheckpath treedifferdifftree traceurcompilerrebuild lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp asap flush processtickcallback error running task sequence task broccolijsdev duration hrduration message broccolijsdev promise err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined error running task sequence task broccolijsdev duration hrduration message broccolijsdev promise err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined error running task sequence task broccolijsdev duration hrduration message broccolijsdev promise err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined error running task sequence task broccolijsdev duration hrduration message broccolijsdev promise err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined error running task sequence task broccolijsdev duration hrduration message broccolijsdev promise err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined args type added path starting buildcleantools finished buildcleantools \u03bcs starting buildtools finished buildtools \u03bcs starting broccolijsdev error karma error enoent file directory errno code enoent path syscall scandir error enoent file directory error native objectfsreaddirsync gazeemit gaze object object ontimeout timerlistontimeout tree diff duration changes detected files directories error enoent file directory error enoent file directory error native objectfsreaddirsync treedifferdirtycheckpath treedifferdifftree traceurcompilerrebuild lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp asap flush processtickcallback statwatcherstop objectfsunwatchfile object object close homevictordartangularnodemodulestraceurbintraceurruntimejs eventemitter arrayforeach native eventemitterfswatcherclose object object object object emit object object emitasync disconnectbrowsers process processemit processfatalexception broccolijsdev errored error enoent file directory error native objectfsreaddirsync treedifferdirtycheckpath treedifferdifftree traceurcompilerrebuild lib rsvp internal trycatch lib rsvp internal invokecallback lib rsvp asap flush processtickcallback statwatcherstop objectfsunwatchfile object object close homevictordartangularnodemodulestraceurbintraceurruntimejs eventemitter arrayforeach native eventemitterfswatcherclose object object object object emit object object emitasync disconnectbrowsers process processemit processfatalexception error running task sequence task broccolijsdev message broccolijsdev promise duration hrduration err error enoent file directory errno code enoent path syscall scandir file undefined line undefined column undefined error enoent file directory error native objectfsreaddirsync gazeemit gaze object object ontimeout timerlistontimeout", "num": "1665", "d": "5/2015"}, {"title": "feat components without selector", "body": "router possible components instantiated without needing selector however call component without annotation throws throws compilercompileinhost selectorlesscmp component view template hello class selectorlesscmp think reasonable case support related", "num": "1662", "d": "5/2015"}, {"title": "input date changes reference date object", "body": "created jsbin demonstrate happening basically looks like input date directive may changing reference date object model angular able reproduce chrome firefox demo click update formdate change input date model update view two places one using scopeformdate returning scopeformdate higher order function interact date field reference seems change date captured closure longer scopeformdate also nt look like twoway binding input date directive working nt see note documentation input date support two way binding model view", "num": "1660", "d": "5/2015"}, {"title": "proposal rename decorator behavior", "body": "switch annotations decorators term decorator could confusing wdyt", "num": "1658", "d": "5/2015"}, {"title": "question js dev bundle amp lst zones", "body": "wondering following code gulpfile considering already use lst js createinnerzone zone enablelongstacktrace var vmturnzone var errorhandling rkirov insights", "num": "1656", "d": "5/2015"}, {"title": "error directive annotation found appcomponent", "body": "hi everyone first step getting started guide using example works using typescript much first think documentation forgot include traceurruntime script javascript everything included correctly gives following erro little piece file transpiled file remove decorate use like example like works might bug function", "num": "1655", "d": "5/2015"}, {"title": "suggestion docs cookbook examples", "body": "sure else place think dedicated cookbook section angular docs would great could provide minimal working examples achieve specific goals nt immediately straightforward stepbystep documentation example sharing data nested components creating components pop detail screen cases run past sure relates angular nt easily think good idea help bridge knowledge gap programmers getting started angular stuck trying progress past rudimentary app", "num": "1653", "d": "5/2015"}, {"title": "jspm install", "body": "hi trying get working using jspm setup ran command files packagejson system js config file systemconfig baseurl transpiler traceur traceuroptions annotations true membervariables true typeassertions true typeassertionmodule rttsassertrttsassert types true paths js github jspmpackagesgithubjs npm jspmpackagesnpmjs systemconfig map auto generated jspm dependances map indexhtml systemimport libapp finally libappjs import component bootstrap view component selector myapp view template hi name class appcomponent constructor thisname alice bootstrap appcomponent get error boot inspect code seems require works accessing dom nt accessing defaultdoc dom nt work thanks advance thomas", "num": "1652", "d": "5/2015"}, {"title": "custom elements work inside angular component", "body": "try make simple custom element copied work use directly top level indexhtml everything works fine use component template custom element seem work please check full demo plunker version newest version found codeangularjsorg tested local box result still", "num": "1651", "d": "5/2015"}, {"title": "template annotation removed developer preview", "body": "greetings trying prepare demo show new stuff seems template annotation missing people used example find also type definition file directivescomponents github thanks stefan", "num": "1650", "d": "5/2015"}, {"title": "expect first version working tsc", "body": "currently using bundle dts enough work want use typescript ways get ts work moment", "num": "1649", "d": "5/2015"}, {"title": "build fails silently case errors dart code", "body": "seems errors dart code reported run symptom dartium nt get captured karma leads long painful investigations especially cases need update dart version extraconfusing people familiar dart tooling alexeagle igorminar know guys planning move karma preprocessor brocolli unit tests could please look one changes build", "num": "1647", "d": "5/2015"}, {"title": "phantomjs working", "body": "hi maybe vicinity work browser work phantomjs reason run comment idea sob thanks", "num": "1646", "d": "5/2015"}, {"title": "dynamicchangedetector values missing context var binding", "body": "code like html star wars star trek battlestar galactica dr selection scifivalue worked previously gives investigation shows binding instance see action pull run visit", "num": "1643", "d": "5/2015"}, {"title": "provide testbed allows apps test components", "body": "internal angular testbed need something used outside angular codebase", "num": "1642", "d": "5/2015"}, {"title": "safari map support constructor params need better facade", "body": "open hello world safari tested following error appears", "num": "1640", "d": "5/2015"}, {"title": "dependency injection creating new instances instead sharing", "body": "may may issue feel free tell expectations incorrect using injectables across multiple components injectable included components multiple instances class may instantiated dependency injection would expect injectableservice single instance appears dijs handles plunker showing code action able see console class service created times well looking id service html upon removing service namecomponent injectables keeping inside constructor still gets injected one instance service created bug expected behavior across components expected behavior suggested way share single instances injectables across components ran across implementing angular components flux architecture trying use store across multiple components", "num": "1639", "d": "5/2015"}, {"title": "removal tsdjson nt clean typings folder", "body": "reported juliemr", "num": "1636", "d": "5/2015"}, {"title": "components inside svg supported", "body": "currently elements inside components template seems rendering using xhtml namespace showing screen realize angular early stage wanted know scenario track ie usecase mean", "num": "1632", "d": "5/2015"}, {"title": "delete old branches", "body": "updatetraceur renametoats chirayudebugtravis updatedocsaboutonchange newrouter radopresubmit presubmitnaomi kegluneqchangedetect keep perftest", "num": "1630", "d": "5/2015"}, {"title": "pipes angular", "body": "way register pipes overwrite existing registry featuresdsl angular transferred one feature passing arguments something like famous take arguments example let assume angular use colon signal argument also add event colons arguments used parentheses rather colons used parentheses time around intent bit clear already use feature using parentheses arguments appcomponentsappts using getpipe nt allow nt want arguments keep mind made pipe nt elvis operator collectionlocal including local would allow place collection argument adhocfunctions ad hoc functions pipes angular needed function scope order function filter data wanted moment missing feature angular feature great prototyping filter add decorator turn pipe used html items json component view class app constructor aspipe onlycomplete collection return collectionfilter item gt itemcomplete functionbind also function bind syntax bind operator strawman phase moment syntax like functionbind also dart may need use pipes filters something like examples import map takewhile foreach somedeveloperiteratorlibrary getplayers map x gt xcharacter takewhile x gt xstrength gt foreach x gt consolelog x something like nglodash angular one allow developer provide iterator compatible library decorators rather baked framework another example function customop return thismap x gt custom x myobservable customop subscribe success comprehension arraygenerator comprehension also question array comprehension template syntax probably another directive sidenote issue use pipe inside function invocation wrap parentheses expression work correct order initially fine since forces user explicit expressions nt look great allowed functions used ad hoc pipes could simply unwrapping async transforming update added function bind array comprehension getpipe", "num": "1625", "d": "5/2015"}, {"title": "injectlazy working directive", "body": "hi tests di module found possible use within directives tried component bootstrapped sub component decorator behavior behave like directive constructors behavior expected javascript import component decorator view bootstrap import inject injectlazy class test constructor consolelog test constructed decorator selector test class testdecorator test test constructor injectlazy test testfactory error object function testfactory wll instance test thistest testfactory component selector injectables test view template directives testdecorator class app bootstrap app", "num": "1623", "d": "5/2015"}, {"body": "please see updated plnkr", "d": "5/2015"}, {"body": "virtualoverride manually close", "d": "5/2015"}, {"body": "maps orders keys hence iteration unpredictable supported think mistake supported plan pipe", "d": "5/2015"}, {"body": "mhevery sounds fair enough already make use pipe inside would transform map array instance implemented yet", "d": "5/2015"}, {"body": "rolandjitsu kinda supported write like example mhevery inside nt work compiler blows sees example nt work default one fine oddly enough original example works changedetection another tick removes html component view class app constructor let map new map mapset key value thisvalues mapvalues", "d": "5/2015"}, {"body": "needs full repro case please use create reopen issue", "d": "5/2015"}, {"body": "hi mhevery create plnkr", "d": "5/2015"}, {"body": "virtualoverride problem docs angulario still outdated example working refactored bit made helper annotations utils also added original one prefer closes", "d": "5/2015"}, {"body": "yay many thanks saw plnkr many thanks helps lot may close issue", "d": "5/2015"}, {"body": "hi issue case alsoi using child router named outlets", "d": "5/2015"}, {"body": "issue trying achive almost ibhi", "d": "5/2015"}, {"body": "solved falsely used jade syntax template instead html works also gives answer second question constructor component class called template code injected dom great", "d": "5/2015"}, {"body": "igorminar aware demo sufficient", "d": "5/2015"}, {"body": "known issue ts right thing dts file wrong", "d": "5/2015"}, {"body": "crossposted like generally transformer introduces nasty edge cases avoid slowdown seen angulardart transformer fully resolved ast global information transform time exceptions operating file information available file example adart bdart wo nt know implements vsavkin talked settled proposed requiring explicitly specified even already inherited objections", "d": "5/2015"}, {"body": "cross posted understand nt really like solution extend directives check signature far ideal mention issues base class signature changes also later need merge annotations base classes walk anyway clear implemented", "d": "5/2015"}, {"body": "proposed solution earlier", "d": "5/2015"}, {"body": "izhaki repo file issue", "d": "5/2015"}, {"body": "well aware repo request angular possible sorry using angular syntax confusing edit post", "d": "5/2015"}, {"body": "custom logic", "d": "5/2015"}, {"body": "pr would welcome anyone time contribute", "d": "5/2015"}, {"body": "please file angular repo angularjs", "d": "5/2015"}, {"body": "used design document read", "d": "5/2015"}, {"body": "dart part completing work yjbanov requested", "d": "5/2015"}, {"body": "duplicate", "d": "5/2015"}, {"body": "probably root cause", "d": "5/2015"}, {"body": "played around cherry picking commit fixes ios map problem merging alpha code base worked seems code current master branch guaranteed always working correct wrong please", "d": "5/2015"}, {"body": "thanks", "d": "5/2015"}, {"body": "kegluneq vicb issue angular", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "ok thanks sorry wrong repo", "d": "5/2015"}, {"body": "duplicate", "d": "5/2015"}, {"body": "figured simplest solution use tsproject module works like charm best thing automatically handles imports define main file bundle declaration", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "problem solution use webpack manage url etc homehomets think problem compilerts storing baseurl compilerts trying get component url using working", "d": "5/2015"}, {"body": "temporary fix put fully qualified dart package path overriding urlresolver resolve properly assuming simple bug facepunch", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "seems bug traceur safari browsers use traceur another possibility using angular alpha", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "stack trace info", "d": "5/2015"}, {"body": "info seems happen using still trying find meaningful test case", "d": "5/2015"}, {"body": "maybe old safari version nt focus angular close issue", "d": "5/2015"}, {"body": "close one issue seems resolved safari rather outdated", "d": "5/2015"}, {"body": "based mine existing tests thing seem work fine probably brittle wrt run environment", "d": "5/2015"}, {"body": "sure tbosch nt updated time ago", "d": "5/2015"}, {"body": "actually commit juliemr", "d": "5/2015"}, {"body": "repo please reopen", "d": "5/2015"}, {"body": "looking", "d": "5/2015"}, {"body": "created plunker verify basic promise usage functioning correctly going try reproduce code", "d": "5/2015"}, {"body": "plunker code working expected since promise pipe already async pipe nt need create bind piperegistry try removing seeing works expected could also issue polyfill using share polyfill using", "d": "5/2015"}, {"body": "well see sure works indeed reproduced sample hand works correctly using work angular browserify latest used babel latest promisepolyfill case npm babelcore nodemodulesbabelcorebrowserpolyfilljs indexhtml indexts npm declare var require const reflect require reflectmetadata import component view bootstrap good case const component view bootstrap window angular component selector myapp view template sync syncval async asyncvalasync class myappcomponent syncval syncval asyncval new promise function resolve settimeout function resolve asyncval bootstrap myappcomponent thank", "d": "5/2015"}, {"body": "promise monkey patch included via zonejs use promise polyfill", "d": "5/2015"}, {"body": "uh oh forgotten completely zonejs rechallenge view zonejs worked blind spot thank hint vicb", "d": "5/2015"}, {"body": "leave open time check going wrong tried promise polyfill use gh master seem overwrite monkey patch", "d": "5/2015"}, {"body": "understood use try check", "d": "5/2015"}, {"body": "mainly something use internally need generate js dart version angular amp exceptions need use unless target js amp dart course", "d": "5/2015"}, {"body": "okay think difficult support js dart understood way use", "d": "5/2015"}, {"body": "sounds like action side closing", "d": "5/2015"}, {"body": "petebacondarwin getting queries still working thanks", "d": "5/2015"}, {"body": "think idea thing top level file include party injectables bootstrap", "d": "5/2015"}, {"body": "means manually create factories though least dart version maybe javascript nt care uses dynamic generate factories", "d": "5/2015"}, {"body": "example todoservicets servicests bootstrapts", "d": "5/2015"}, {"body": "examples using though think working", "d": "5/2015"}, {"body": "vsavkin kegluneq", "d": "5/2015"}, {"body": "confusing firsttimers still dont know different files devsfx etc", "d": "5/2015"}, {"body": "would nt need required soon", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "move typescript away traceur migration ongoing", "d": "5/2015"}, {"body": "hmm reason cdn version working", "d": "5/2015"}, {"body": "think running issue angular", "d": "5/2015"}, {"body": "thanks give try later today", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "guess makes wrong", "d": "5/2015"}, {"body": "ah ok refered source code guess new new sparkles syntax", "d": "5/2015"}, {"body": "ca nt reproduce master fresh npm install might worth adding logger error event handler toolsbuildwatchjs case logged normally may highlight issue fswatcher running", "d": "5/2015"}, {"body": "cpu usage raise gulp", "d": "5/2015"}, {"body": "seems happen failures", "d": "5/2015"}, {"body": "caitp repro syntactic error make fail", "d": "5/2015"}, {"body": "lt lt syntax error ts file corrected tests run ca nt seem reproduce", "d": "5/2015"}, {"body": "closing reproducible please reopen anyone repro", "d": "5/2015"}, {"body": "could osspecific since chokidar different backends use depending platform ca nt seem reproduce mac maybe linux windows issue", "d": "5/2015"}, {"body": "aware continues infrastructure yet", "d": "5/2015"}, {"body": "make function", "d": "5/2015"}, {"body": "arguments function also const think purpose concept functions compatible", "d": "5/2015"}, {"body": "would nt class definition const dart ie fully resolved runtime jeremy elbourn notifications githubcom schrieb di mai um uhr arguments const function also const think purpose forwardref concept const functions compatible reply email directly view github", "d": "5/2015"}, {"body": "nt seem way tried nt know much dart rkirov insights", "d": "5/2015"}, {"body": "yeah hard one dart considers closure nonconst value error also function invocation except const constructor forbidden also error", "d": "5/2015"}, {"body": "vsavkin says could strip forwardref function call unwrap closure", "d": "5/2015"}, {"body": "dart forwardref problem strip becomes example becomes", "d": "5/2015"}, {"body": "file issue please mi\u0161ko hevery notifications githubcom schrieb fr mai um uhr dart forwardref problem strip forwardref gt mytype becomes mytype example directives bind forwardref gt mytype toclass forwardref gt myimpl forwardref gt myimpl becomes directives bind mytype toclass myimpl myimpl reply email directly view github", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "fixed via", "d": "5/2015"}, {"body": "ca nt seem reproduce problem look", "d": "5/2015"}, {"body": "dart js repo gdatepicker gt change onvaluechange property back change may mi\u0161ko hevery notifications githubcom wrote ca nt seem reproduce problem look reply email directly view github", "d": "5/2015"}, {"body": "matanlurey already supported", "d": "5/2015"}, {"body": "nt aware let try", "d": "5/2015"}, {"body": "matanlurey feel free reopen needed", "d": "5/2015"}, {"body": "assigning vsavkin validate idea reassign anyone willing implement agree", "d": "5/2015"}, {"body": "good name descriptive easy mix really keen alternative could rename something specific use structural type check js would optional js documented bestpractice also think inherit annotations true interface based behavior would different today", "d": "5/2015"}, {"body": "component class mycomponent implements changeable destroyable override void onchange override void ondestroy", "d": "5/2015"}, {"body": "could change even implements", "d": "5/2015"}, {"body": "using structural type checks js land well eg via checking prototype keep syntax dart js ie nt need annotation", "d": "5/2015"}, {"body": "like generally transformer introduces nasty edge cases avoid slowdown seen angulardart transformer fully resolved ast global information transform time exceptions operating file information available file example adart bdart wo nt know implements vsavkin talked settled requiring explicitly specified even already inherited objections", "d": "5/2015"}, {"body": "kegluneq would mind cross posting issue closed understand nt really like solution extend directives check signature far ideal mention issues base class signature changes", "d": "5/2015"}, {"body": "see", "d": "5/2015"}, {"body": "possible extract annotations function dart nt think fix kegluneq comment", "d": "5/2015"}, {"body": "pretty sure example dart library reflectiontest import dart mirrors list somefunction string string list list map map void main closuremirror mirror reflect somefunction outputs string list map print mirrorfunctionparametersmap p gt ptypereflectedtype", "d": "5/2015"}, {"body": "override validator setter call", "d": "5/2015"}, {"body": "hold vsavkin completes forms work revisit", "d": "5/2015"}, {"body": "used update model form view used direction think create value setter used update form controldirective", "d": "5/2015"}, {"body": "hold vsavkin refactors forms let revisit", "d": "5/2015"}, {"body": "believe discussed person turned visibilit issue able resolve working intended", "d": "5/2015"}, {"body": "thanks", "d": "5/2015"}, {"body": "would prefer composable annotations", "d": "5/2015"}, {"body": "mhevery mentioned issue host configs gathered host key reference existing issue", "d": "5/2015"}, {"body": "latest thinking get rid app injector element injector needs exploration thinking", "d": "5/2015"}, {"body": "got version got using workaround choose specific version maybe seems working", "d": "5/2015"}, {"body": "got version got using tsd workaround choose specific version maybe seems working oh update tsd forgot perhaps reason problem different versions tsd tsd well wait update tsd", "d": "5/2015"}, {"body": "last time got error name change ngfor nobody good job updating tsd along builds need selfmaintain", "d": "5/2015"}, {"body": "pr open latest definitions made workingon angular", "d": "5/2015"}, {"body": "pr open latest definitions made workingon angular borisyankovdefinitelytyped thanks", "d": "5/2015"}, {"body": "action us closing", "d": "5/2015"}, {"body": "hello repository encourage open issue angular repo", "d": "5/2015"}, {"body": "oh sorry nt get move computer couple hours kinda difficult mobile wink", "d": "5/2015"}, {"body": "problem might get help problem could nt move inicialization select async call like", "d": "5/2015"}, {"body": "ericmdantas verify thx anyway posted angular repo thing seems strange actually", "d": "5/2015"}, {"body": "logs late mbp oxs yosemite ram dart sdk detected using gulpfile applicationsgithubangularangulargulpfilejs starting buildcleanjs finished buildcleanjs ms starting buildjsdev starting buildcleantools finished buildcleantools ms starting buildtools starting buildtools finished buildtools finished buildtools starting broccolijsdev starting broccolijsdev tree diff diffingtraceurcompiler changes files dirs tree diff diffingtscompiler changes files dirs tree diff diffingtraceurcompiler changes files dirs tree diff destcopy changes files dirs slowest trees total diffingtraceurcompiler diffingtscompiler treemerger destcopy slowest trees cumulative total avg diffingtraceurcompiler ms diffingtscompiler treemerger ms destcopy finished broccolijsdev min finished broccolijsdev min starting buildcheckcirculardependencies finished buildcheckcirculardependencies ms starting checkformat finished checkformat finished buildjsdev min starting testunitjs starting testunitjskarmaserver finished testunitjskarmaserver ms info karma karma server started info launcher starting browser chromecanary warn watcher pattern match file starting broccolijsdev tree diff diffingtraceurcompiler changes files dirs tree diff diffingtscompiler changes files dirs tree diff diffingtraceurcompiler changes files dirs tree diff destcopy changes files dirs slowest trees total funnel treemerger treemerger treemerger funnel diffingtraceurcompiler treemerger slowest trees cumulative total avg treemerger ms funnel ms diffingtraceurcompiler ms finished broccolijsdev starting testunitjskarmarun finished testunitjskarmarun ms info chrome mac os x connected socket id", "d": "5/2015"}, {"body": "caitp please check watcher issue something actually modifying source directory build", "d": "5/2015"}, {"body": "ca nt seem reproduce locally log try linux container bit guess", "d": "5/2015"}, {"body": "actually change detection logger nt seem running first change likely issue needed probably looks like running twice first time subsequent changes changes logged correctly", "d": "5/2015"}, {"body": "impossible detect class changes synchronously js working designed realize surprising behavior possible asking", "d": "5/2015"}, {"body": "please also add interfaces lifecycle callbacks", "d": "5/2015"}, {"body": "right actually required angular either call method via reflection generated change detector maybe change cast directive instance one interfaces call method directly case", "d": "5/2015"}, {"body": "think issue needs discussion core team implement", "d": "5/2015"}, {"body": "discuss let first restore part public api people already use pretty certain need anyway current annotation limited js nt reify interfaces dart interfaces reified therefore annotation necessary interfaces give compiler feedback remove dynamic call sites", "d": "5/2015"}, {"body": "please wait merging master chat mhevery next week unless let rush change", "d": "5/2015"}, {"body": "naomiblack ca nt wait worry", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "dup", "d": "5/2015"}, {"body": "yes", "d": "5/2015"}, {"body": "yjbanov vsavkin today", "d": "5/2015"}, {"body": "hum nt actually feature understanding value expression vs litteral without explicitly config ng honor would need config code snippet edit sure really understand message mix awesomename nameworld", "d": "5/2015"}, {"body": "ideally want able set name awesome directive using statically defined value attribute databinding property", "d": "5/2015"}, {"body": "works intended let chat person use case", "d": "5/2015"}, {"body": "working intended ok resolution", "d": "5/2015"}, {"body": "either queue throw vsavkin opinion", "d": "5/2015"}, {"body": "rx replaysubject replay events subscribing even better behaviorsubject get last value observables lazy means working intended since subscribed time pushing value might able use lifecycle would presumably already subscribed instance thing working reactive example modelscountermodelts normally rx would use would look like subscribe observable replay last state model since ended using rx get appstate still figuring better ways structure example since still relying mutilation state object app component kick change detection may end using rx observables updating async pipe also support rxobservables rather extending angular observables rx methods", "d": "5/2015"}, {"body": "problem domadaptor debugging code used browseradapter nt working import browserdomadapter browserdomadaptermakecurrent import bootstrap component view component selector myapp view template class app constructor consolelog wat export function main return bootstrap app go think might problem jspm link build file branch", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "see solution use either prebuilt systemregister bundle source files importing commonjs seems cause issue default lands", "d": "5/2015"}, {"body": "robwormald thanks", "d": "5/2015"}, {"body": "robwormald fyi sample working latest versions systemjs updated repo tada", "d": "5/2015"}, {"body": "crissdev add link fix happened", "d": "5/2015"}, {"body": "pascalprecht happened latest version systemjs ca nt really tell commits sample repo using systemjs", "d": "5/2015"}, {"body": "crissdev alright thanks dude", "d": "5/2015"}, {"body": "problemo smile", "d": "5/2015"}, {"body": "saw one time well thu may martin probst notifications githubcom wrote deleting entire nodemodules folder running npm install angular postinstall usersmartinprobstsrcangular node toolschromedriverpatchjs amp amp webdrivermanager update amp amp bower install amp amp gulp pubgetdart amp amp tsd reinstall config amp amp tsd reinstall config toolstsdjson updating selenium standalone downloading updating chromedriver downloading reply email directly view github", "d": "5/2015"}, {"body": "tbosch stay positive please seen working", "d": "5/2015"}, {"body": "juliemr know servernetwork issue", "d": "5/2015"}, {"body": "nt seen one let check networks", "d": "5/2015"}, {"body": "working within seconds protractor downloads using completely rerunning trying couple times slow unable reproduce", "d": "5/2015"}, {"body": "hmm see quite often wiping nodemodules nt dig though", "d": "5/2015"}, {"body": "makes think even network issue rather", "d": "5/2015"}, {"body": "sounds like network issue closed", "d": "5/2015"}, {"body": "nt know appear changelog yjbanov tagged refactor leave issue open track issue changelog generation", "d": "5/2015"}, {"body": "guys killing thanks advice look changelog future missed totally", "d": "5/2015"}, {"body": "would made either breaking change marked looks breaking change commit message contains breaking changes top marked section changelog think wrong mark refactors supposed behavior preserving according gods refactoring said silly look breaking changes", "d": "5/2015"}, {"body": "really made pr new regexp little bit forgiving", "d": "5/2015"}, {"body": "thanks let close please send pr fix merged amp released", "d": "5/2015"}, {"body": "repository angular sounds like want angularjs however github issues used reporting bugs problems question suited something like stack overflow angularjs mailing list", "d": "5/2015"}, {"body": "test suite test suite would nt use test suite", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "tried revert commits different process success tried revert protractorjasmine update success thing think fresh yesterday working", "d": "5/2015"}, {"body": "please ping igor working fix thu may victor berchet notifications githubcom wrote tried revert commits different process success tried revert protractorjasmine update success thing think fresh npm yesterday working reply email directly view github", "d": "5/2015"}, {"body": "ping igorminar", "d": "5/2015"}, {"body": "meeting look hours reproducable others", "d": "5/2015"}, {"body": "working", "d": "5/2015"}, {"body": "issue windows laptop addition task run twice launching run takes info even slower mbp anyone experiencing slowness", "d": "5/2015"}, {"body": "vicb tried repro nt successful still seeing issue pair tomorrow morning free pdt mlaval create separate issue slowness post output log issue", "d": "5/2015"}, {"body": "happy close issue morning works thanks", "d": "5/2015"}, {"body": "unstable input paths one things regret original current broccoli api working redoing plugin api new api stable input paths use new api plugins derive broccoliplugin base class currently workinprogress plugins using broccoliplugin still run old current broccoli versions using compatibility code fact resorting exactly kind symlinking see obviously hack may slow windows stopgap people use newer broccoli", "d": "5/2015"}, {"body": "cc caitp case nt subscribed issue already", "d": "5/2015"}, {"body": "summarize issue go away soon finish broccoliplugin thing top list right derive broccoliplugin everything work fine", "d": "5/2015"}, {"body": "joliss thanks clarification took quick look broccoliplugin code unfortunately nt see addressing issue came across especially enabling incremental filelevel within tree compilation nt seem addressed worked around limitation creating custom plugin interface wrap generic plugin hooking broccoli see interface example plugin would open discuss changes plan finish rewriting plugins build tree incremental present result since already working broccoliplugin might better discuss sooner", "d": "5/2015"}, {"body": "watch might bite see patch use trick currently removed", "d": "5/2015"}, {"body": "also path wrong right eg longer dep", "d": "5/2015"}, {"body": "also fsevents linux", "d": "5/2015"}, {"body": "please take look", "d": "5/2015"}, {"body": "think already support three ways returning causes run ie calling manually one always implement directive use request think sufficient would imagine syntax work", "d": "5/2015"}, {"body": "would work correct assuming return type return", "d": "5/2015"}, {"body": "work us interestingly reactjs deprecated event handler return values may worth investigating ensure nt hit issues also pattern documented somewhere may patrickjs notifications githubcom wrote would work correct assuming return type dosomething void reply email directly view github", "d": "5/2015"}, {"body": "comment react blog deprecated returning false event handlers used possible return false event handlers preventdefault works browsers confusing api might want use return value something else therefore deprecated use eventpreventdefault instead angular event handler user implements actually event handler browser sees indirection eg needed marshaling things webworkers argument return value would still count though thanks jbdeboer hint look well", "d": "5/2015"}, {"body": "error caused obsolete hack fixed", "d": "5/2015"}, {"body": "simple approach previous build subset tree contained errors replace building complicated approach previous build subset tree contained errors another build larger subset tree also contained errors replace building complicated approach seems better terms works probably cheap actually lastly errors delete output files containing errors hurts iterating single file case closer typical bottomup build system works typescript includes something like would good", "d": "5/2015"}, {"body": "got fixed went different approach remember last rebuild status status failed current status pass full rebuild preferable swapping paths full build via incremental path slow thought deleting output files even would effect plugin throws exception indicate build error whole pipeline aborts output deletion nt make dist directory", "d": "5/2015"}, {"body": "used like cached npmshrinkwrapjson nodemodules would make really easy check anything changed assuming cached version matches one tree nt seem cached file anymore anyone know happened", "d": "5/2015"}, {"body": "aravindtrue question asked repo repo probably close issue open regards", "d": "5/2015"}, {"body": "looking", "d": "5/2015"}, {"body": "alphatesters expressed need gitter channel stack overflow", "d": "5/2015"}, {"body": "yes please could extension video would absolutely perfect", "d": "5/2015"}, {"body": "see", "d": "5/2015"}, {"body": "dart simply use angulardart", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "reference first implementation using anchor element discussing mhevery decided browser capable resolving urls kept branch later point need implementation depend browser", "d": "5/2015"}, {"body": "always", "d": "5/2015"}, {"body": "pushed facade way solve different different platforms", "d": "5/2015"}, {"body": "event emitter instead promise reason usepolyfill api", "d": "5/2015"}, {"body": "ewinslow ca nt cancel promise", "d": "5/2015"}, {"body": "ok might good requirementgoal mention explicitly idea abort inflight request simply unsubscribe listener former always return custom cancelablepromise extends promise", "d": "5/2015"}, {"body": "hey ewinslow good question sorry issue vague opened hurry could tracked current milestone detail prototype project though readme little outdated presentation gave couple weeks ago also includes lot examples new http api regarding question fetch yes please use fetch like existing polyfills already native implementation polyfills work angular box fetch particular recently patched short story observablebased http implementation eventemitter name internal observable implementation provide robust api important http operations like polling retrying cancellation observing uploaddownload progress library also compose nicely parts angular observablebased like component events lot constructs based closely fetch spec request response headers interfaces minor variation", "d": "5/2015"}, {"body": "ewinslow also", "d": "5/2015"}, {"body": "thanks background helpful", "d": "5/2015"}, {"body": "syntax currently supported existing directive understand object literals syntax right last time discussed stringbased igorminar sounded like might want support makes easy hardcode css classes jsdart code probably rediscuss definitive stance one", "d": "5/2015"}, {"body": "current best option afaict rewrite example superfugly", "d": "5/2015"}, {"body": "jbdeboer similar problem used following syntax html also works object literals found inconvenient", "d": "5/2015"}, {"body": "sekibomazic yes approach would require us rewrite controller logic nt something eager thinking best option listed work well either since nt know string list map without inspecting controller transformation works strings", "d": "5/2015"}, {"body": "assigning mhevery also igorminar discussion something support else best recommendation handling pattern", "d": "5/2015"}, {"body": "think safe support evaluates simply adds classes already existing literal list", "d": "5/2015"}, {"body": "agree yjbanov think support", "d": "5/2015"}, {"body": "also fix ngstyle", "d": "5/2015"}, {"body": "cc vsavkin", "d": "5/2015"}, {"body": "far tell eliminates rest errors seeing igorminar somewhere else look", "d": "5/2015"}, {"body": "outsider obvious case", "d": "5/2015"}, {"body": "ewinslow required need xcompile dart keep size generated js reasonable mirrors disabled dart rely transformers generate required metadata info build time class tagged grabbed transformers", "d": "5/2015"}, {"body": "thanks context", "d": "5/2015"}, {"body": "change angulario introduced pr reverted issue resolved", "d": "5/2015"}, {"body": "alexeagle fyi tue may pm jeff cross notifications githubcom wrote change angulario introduced pr reverted issue resolved angularangulario reply email directly view github", "d": "5/2015"}, {"body": "jeffbcross close one issue days ago fixed alpha nt look exact commit switching fixes plunk", "d": "5/2015"}, {"body": "right sorry", "d": "5/2015"}, {"body": "dup", "d": "5/2015"}, {"body": "fixed via", "d": "5/2015"}, {"body": "thanks working misko really first developerhappinessrelated issue noticed tried dev preview glad see addressed thought like idea able declare schemas also need able declare exposed events reasons given magic symbols introduced makes bit nervous try avoid adding symbols api speaking bind attribute symbols asking become angular wat material sure also love encourage usercentered error messaging possible current error messages better nothing otherwise meaningless humble developer might also typos helping either looking something straightforward like wrote mean realize guessing developer intent bit hard general case apologize ready suggestion end suspect forgetting use declare variables going rather common issue great get helpful messages protecting developers pitfall", "d": "5/2015"}, {"body": "pipes something like using even event though means append rather bashlike syntax consistent also example changed direction update syntax changed", "d": "5/2015"}, {"body": "yeah fri may victor berchet notifications githubcom wrote closed via reply email directly view github", "d": "5/2015"}, {"body": "good call every example update since change using keyvalue", "d": "5/2015"}, {"body": "started", "d": "5/2015"}, {"body": "jeffbcross tbosch resolving remaining tests", "d": "5/2015"}, {"body": "started done", "d": "5/2015"}, {"body": "material needs source code tsified first", "d": "5/2015"}, {"body": "tsified well", "d": "5/2015"}, {"body": "use different api js vs dart plan unifying cc vsavkin", "d": "5/2015"}, {"body": "ok forms update", "d": "5/2015"}, {"body": "started done", "d": "5/2015"}, {"body": "tbosch take one might bug", "d": "5/2015"}, {"body": "thanks tue may pm jeff cross notifications githubcom wrote tbosch take one might bug reply email directly view github", "d": "5/2015"}, {"body": "chatted tbosch planning tackle tomorrow", "d": "5/2015"}, {"body": "started done", "d": "5/2015"}, {"body": "dialog still outstanding everything else done blocked", "d": "5/2015"}, {"body": "done", "d": "5/2015"}, {"body": "done", "d": "5/2015"}, {"body": "started done", "d": "5/2015"}, {"body": "supposedly unblocked want work igorminar matsko soon buildrelated work good state", "d": "5/2015"}, {"body": "matsko nt started chatted btford planning tackle afternoon", "d": "5/2015"}, {"body": "jeffbcross nt started yet welcome take planning monday brian", "d": "5/2015"}, {"body": "get done asap return", "d": "5/2015"}, {"body": "btford jeff today wo nt much help since nt done ts integration stuff yet person today", "d": "5/2015"}, {"body": "closed via", "d": "5/2015"}, {"body": "done", "d": "5/2015"}, {"body": "complete", "d": "5/2015"}, {"body": "cc matanlurey", "d": "5/2015"}, {"body": "relate used", "d": "5/2015"}, {"body": "juliemr making tests allowing one get hold directives elementref useful pocking around dev console well protractor", "d": "5/2015"}, {"body": "discussed offline eventually use ngprobe tests well applicable nt two systems similar things", "d": "5/2015"}, {"body": "cc ajoslin jbdeboer matanlurey jelbourn", "d": "5/2015"}, {"body": "like prototype something similar look back", "d": "5/2015"}, {"body": "cleanup related typescriptification", "d": "5/2015"}, {"body": "think also note type required used set attribute", "d": "5/2015"}, {"body": "working intended", "d": "5/2015"}, {"body": "see search find things ought exported tags longer used removed provide pointer exported", "d": "5/2015"}, {"body": "alexeagle documentation comments file taken source hand coded", "d": "5/2015"}, {"body": "copied source bit handediting removing exportedas iirc mon may pm pete bacon darwin notifications githubcom wrote alexeagle documentation comments file taken source hand coded reply email directly view github", "d": "5/2015"}, {"body": "right working today", "d": "5/2015"}, {"body": "great made quick work migration traceur typescript tue may pete bacon darwin notifications githubcom wrote right working today reply email directly view github", "d": "5/2015"}, {"body": "matanlurey token anything already", "d": "5/2015"}, {"body": "thanks leave open documentation additions", "d": "5/2015"}, {"body": "samccone could try submit smaller snippet triggers error would really help debugging issue thanks", "d": "5/2015"}, {"body": "alright vicb reduced test case created reproduce cloning repo check branch sjsbug visit click list item press enter boom bug", "d": "5/2015"}, {"body": "boom fixed pointdown obvious bug", "d": "5/2015"}, {"body": "whoops tiredface sorry going work reduced test case still able get error time original todo example put together must something overlooking trying recreate issue", "d": "5/2015"}, {"body": "unless one item original example try dump", "d": "5/2015"}, {"body": "good solution might add getter todos check one null access", "d": "5/2015"}, {"body": "closing reopen small use case", "d": "5/2015"}, {"body": "thanks guys reopen able reproduce smaller example", "d": "5/2015"}, {"body": "thank", "d": "5/2015"}, {"body": "referring events native dom events latter two separate issues bug proposal", "d": "5/2015"}, {"body": "referring event emitter event", "d": "5/2015"}, {"body": "furthermore mean events currently nt break component boundaries", "d": "5/2015"}, {"body": "could nt find existing documentation use evenemitter even using syntax nt seem work", "d": "5/2015"}, {"body": "docs show used", "d": "5/2015"}, {"body": "actionable", "d": "5/2015"}, {"body": "using angular dart version similar problem nwjselectron found solution please let know work would like switch angular sure ready production months", "d": "5/2015"}, {"body": "found problem status code check first xhr local file always return status code dirty way add condition check seems better way create nodejsspecfic implementation work file system second check looks quite strange since takes account redirect codes status code", "d": "5/2015"}, {"body": "personally find angular material design library great source inspiration instruction write highquality components something similar angular would helpful plus able use without taking dependency polymer plus", "d": "5/2015"}, {"body": "hi thought exact thing days ago angular work web components right nt polymer provide web components nt material design library polymer collection web components polymer expert came mind angular work box polymer web components", "d": "5/2015"}, {"body": "think one problem polymer uses web components web components natively available browsers polymer use shim slow things much polymer sure faster web components available use js shim angular work box polymer web components think remaining opened issues zonejs shortterm comprehensive answer jelbourn might", "d": "5/2015"}, {"body": "vicb polymer almost completely rewrited focusing performance stats incrediblely promising browser nt natively support wc made shim call much performante also polyfill use way shorter size", "d": "5/2015"}, {"body": "technical reasons angular material always perform faster predictable polymer one always use polymer since webcomponents work angular", "d": "5/2015"}, {"body": "looking", "d": "5/2015"}, {"body": "duplicate", "d": "5/2015"}, {"body": "repository angularjs repo type general support questions asked using dedicated support channel opened issues github see", "d": "5/2015"}, {"body": "link example code", "d": "5/2015"}, {"body": "updated still getting error null object method nosuchmethoderror method found receiver null arguments stacktrace objectnosuchmethod dart objectnosuchmethod dart locationnormalizeabsolutely package routerlinkonallchangesdone package dynamicchangedetectorcallonallchangesdone package abstractchangedetectordetectchanges package abstractchangedetectordetectchangesinshadowdomchildren package abstractchangedetectordetectchanges package abstractchangedetectordetectchangesinlightdomchildren package abstractchangedetectordetectchanges package abstractchangedetectordetectchangesinshadowdomchildren package abstractchangedetectordetectchanges package abstractchangedetectordetectchanges package lifecycletick package lifecycleregisterwith package rootrun dart zonedelegaterun dart ngzonerun package customzonerun dart customzonerunguarded dart customzonebindcallback dart asyncruncallbackloop dart asyncruncallback dart scheduleimmediatehelperhandlemutation dart", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "exact dart example ts repo error", "d": "5/2015"}, {"body": "error tracked null valuel function dart routeregistrydart string generate string name map params hostcomponent todo implement hierarchical routes var componentrecognizer mapwrapperget thisrules hostcomponent return ispresent componentrecognizer componentrecognizergenerate name params null results null value name child params hostcomponent class home rules index instance routerecognizer", "d": "5/2015"}, {"body": "router ready action", "d": "5/2015"}, {"body": "actually probably better simply get expression string upstream pass constructor would assign property example rather unnecessarily computing ast thoughts reason would nt work bad idea", "d": "5/2015"}, {"body": "think vicb", "d": "5/2015"}, {"body": "sure really valuable probably visitor could transform ast back expression takes might vsavkin think", "d": "5/2015"}, {"body": "links broken", "d": "5/2015"}, {"body": "apologies marked private public", "d": "5/2015"}, {"body": "working fine starter kit using", "d": "5/2015"}, {"body": "nope cloned repo built src kinda buggy back nt work ca nt open links directly etc tried build", "d": "5/2015"}, {"body": "provide repo", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "since bigger update router couple minutes ago updated latest rev still error btford idea going wrong", "d": "5/2015"}, {"body": "could linked bug angular", "d": "5/2015"}, {"body": "still working", "d": "5/2015"}, {"body": "modifications ziptypesandannotaions make possible use dependency injection angular alpha mostly check paramtypes undefined paramannotations used length result array paramtypes undefined result array filled values paramannotations javascript ziptypesandannotaions function paramtypes paramannotations var result typeof paramtypes undefined result listwrappercreatefixedsize paramannotationslength else result listwrappercreatefixedsize paramtypeslength could someone acknowledge solution bug please", "d": "5/2015"}, {"body": "please close fixed", "d": "5/2015"}, {"body": "putting njsproj file dependency injection works like charme thanks lot josef", "d": "5/2015"}, {"body": "angular checks first lifecycle annotation invoking least read code awhile back", "d": "5/2015"}, {"body": "yes proposal check method existence instead annotation", "d": "5/2015"}, {"body": "bukharin oops bad mobile nt read title seems like needs strict mode maintain better static analysis code annotations verbose purpose feature also seems hurting developer experience least smalltoy apps everyone building right", "d": "5/2015"}, {"body": "related", "d": "5/2015"}, {"body": "working intended", "d": "5/2015"}, {"body": "let talk person might little confusion protoviewref viewref viewcontainerref fri may pm matan lurey notifications githubcom wrote assigned tbosch reply email directly view github", "d": "5/2015"}, {"body": "actionable issue closing ping need clarification", "d": "5/2015"}, {"body": "sorry posted wrong repo", "d": "5/2015"}, {"body": "ngoneway ngonewayonetime supported ngtwoway", "d": "5/2015"}, {"body": "additional items hooking observable interface list wrong type querylist results", "d": "5/2015"}, {"body": "guess ask well anyway shadow light dom also upping internal priority behalf ted", "d": "5/2015"}, {"body": "works intended write decorator copy annotations subclass", "d": "5/2015"}, {"body": "think important user know whether something template hiding behind flag directive seems wrong however might different opinions", "d": "5/2015"}, {"body": "ever case want directive work template nontemplate mode even possible tend agree jeremy", "d": "5/2015"}, {"body": "current thinking works intended want transclusion need lot implication variable visibility tooling", "d": "5/2015"}, {"body": "err think mean", "d": "5/2015"}, {"body": "closed", "d": "5/2015"}, {"body": "dupe", "d": "5/2015"}, {"body": "approach", "d": "5/2015"}, {"body": "please land closed since ca nt generate api docs reflect rename", "d": "5/2015"}, {"body": "usecase", "d": "5/2015"}, {"body": "unbounded sounds much like unbound new user might mistake binding propose sancestorlocalancestor sunboundedancestor", "d": "5/2015"}, {"body": "implemented", "d": "5/2015"}, {"body": "checked master npm installed ran run opened saved file dart rebuilt tests run additional info missing", "d": "5/2015"}, {"body": "nope simply nt work tried saving file file file nothing triggers karma rebuild going rebase renpm everything try quite fresh", "d": "5/2015"}, {"body": "works master ubuntu", "d": "5/2015"}, {"body": "ca nt repro master clean npm install please reopen still problem", "d": "5/2015"}, {"body": "could help clarify removes necessity query select inserting dynamically", "d": "5/2015"}, {"body": "yes idea calling also creates host element component attach user manually attach dom get host element created method used", "d": "5/2015"}, {"body": "happening alpha", "d": "5/2015"}, {"body": "sorry learn still early stage developer preview still many rough edges sure make best users best possible experience moving fast sometimes might break things need time doc catch would really help us help submit detailed issues prs issue might encounter either repo doc repo nt give would regret", "d": "5/2015"}, {"body": "like help much possible sure offer terms details prs since get working angular environment running figure definitely submit notes love direction guys headed", "d": "5/2015"}, {"body": "since get working angular environment running open gh issue working could help us improve docs code sure detail steps done report detailed errors get love direction guys headed thanks", "d": "5/2015"}, {"body": "anakinjay also forgot mention gitter channel bunch early adopters ready help", "d": "5/2015"}, {"body": "thank much start posting specific ideas really appreciate help", "d": "5/2015"}, {"body": "nt expected case expression evaluated set expected behavior symptoms seems legit issue case", "d": "5/2015"}, {"body": "would solved elvis operator see", "d": "5/2015"}, {"body": "spoke misko learned actually intended behavior case problem behavior consistent nonroot expressions forgiving class userlist private mymodel constructor exceptions thrown looks like forgiving", "d": "5/2015"}, {"body": "tried master text interpolation generates expected error", "d": "5/2015"}, {"body": "ah original repro instructions used expression try instead updated instructions", "d": "5/2015"}, {"body": "would case think behavior expected js would throw", "d": "5/2015"}, {"body": "see could give info info called inside component bootstrap", "d": "5/2015"}, {"body": "could please also try reports helps", "d": "5/2015"}, {"body": "vicb calling fetch util api inject full component code looks like trying use zones sure right javascript import ngzone declare var fetch export class api add zones get working typescript run get new error javascript typeerror function typeerror function apigetbooks new app executereflectioncapabilitiesfactory elementinjectorexecuteelementinjectornew elementinjectorexecuteelementinjectorgetdirectivebykeyid elementinjectorexecuteelementinjectorinstantiatedirectives appviewmanagerutilsexecuteappviewmanagerutilshydrateview appviewmanagerutilsexecuteappviewmanagerutilsattachandhydrateinplacehostview appviewmanagerexecuteappviewmanagercreateinplacehostview got ta run back later give another try thanks", "d": "5/2015"}, {"body": "sorry seen gist afterwards property defined globally", "d": "5/2015"}, {"body": "ah bad definitely play around later something like look like right approach javascript declare var fetch zone export class api get error", "d": "5/2015"}, {"body": "hum bad could please try edit actually want return value", "d": "5/2015"}, {"body": "actually last version", "d": "5/2015"}, {"body": "works thank vicb", "d": "5/2015"}, {"body": "browser seems need patch chrome", "d": "5/2015"}, {"body": "oh yes testing chrome version dev", "d": "5/2015"}, {"body": "thanks", "d": "5/2015"}, {"body": "seems using promise polyfills might prevent bindpromisefn fixing issue issue fetch applying bindpromisefn fetch call still remove polyfill fetch authors recommend could get ui update got data response edit moving polyfill script loads angular also remedies issue looks like polyfill overwriting something probably nt", "d": "5/2015"}, {"body": "jonhall need use promise polyfill angular comes promise monkey patch based whether native promises available next release zonejs happen later week integrate patching api need manually", "d": "5/2015"}, {"body": "open issue", "d": "5/2015"}, {"body": "also think solved reopen think solved", "d": "5/2015"}, {"body": "depends whether want consumed js dart users rest issue think thinking js case fine", "d": "5/2015"}, {"body": "closing dupe info", "d": "5/2015"}, {"body": "mprobst insight alex setup sourcemapsupport", "d": "5/2015"}, {"body": "igorminar sent pull request fix issue fork repo correct fix hope pull request closing issue go soon let wait couple days see accepted otherwise switch fork", "d": "5/2015"}, {"body": "pr merged new release nt cut yet switch upstream git repo", "d": "5/2015"}, {"body": "however even depended fixed forked version library possible outdated library installation igor minar notifications githubcom schrieb mi mai pr merged reply email directly view github", "d": "5/2015"}, {"body": "nevermind nt notice depending fork already good tue may pm martin probst notifications githubcom wrote however even depended fixed forked version library possible outdated library installation igor minar notifications githubcom schrieb mi mai pr merged reply email directly view github reply email directly view github", "d": "5/2015"}, {"body": "ok closing issue", "d": "5/2015"}, {"body": "repo please reopen", "d": "5/2015"}, {"body": "right submitted pr thanks report", "d": "5/2015"}, {"body": "turned due ton files directory sublime tried watch caused problems tried setup watch directory recent change fixed tmp leak resolved confirmed yjbanov machine", "d": "5/2015"}, {"body": "requires reflect function extract dependencies way extract constructors doable const bindings appear annotations imperative bindings still require dependencies listed explicitly", "d": "5/2015"}, {"body": "dart please", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "someone gave link dart seems using code around", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "made fork link tried clean bit im getting odd behavior routerlink", "d": "5/2015"}, {"body": "already fixed master via reopen case", "d": "5/2015"}, {"body": "caitp could take care one please", "d": "5/2015"}, {"body": "sounds like issue possible see test source edit injected types imported", "d": "5/2015"}, {"body": "vicb issues test fails causes gulp generate stack trace confusing relevant", "d": "5/2015"}, {"body": "unwanted sideeffect mhevery fix progress", "d": "5/2015"}, {"body": "igor simplest fix bind done callback null first argument else wrap calling done closure right done callback used close event handler gulp eats exit code", "d": "5/2015"}, {"body": "followup pr adding tests chokidar thing fix available already", "d": "5/2015"}, {"body": "guess cases gulpfile calling done function already wrapped closure exit code explicitly passed needed pass get exit code ideal ci dunno", "d": "5/2015"}, {"body": "caitp came across bind null null approach breaks ci proposed fix", "d": "5/2015"}, {"body": "yes tried error fix locally works well enough think stack trace kind pointless case", "d": "5/2015"}, {"body": "nt way stop gulp printing stack trace exit nonzero error code also executing cleanup extra stack trace great trade wed may pm notifications githubcom wrote yes tried error fix locally works well enough think stack trace kind pointless case reply email directly view github", "d": "5/2015"}, {"body": "nt quote follow mean wild hacks never used angular dart angularjs angularjs world framework mostly agnostic ngaria nt anything make easier also nt make harder far see angular boat something specific mind want angular want examples check current radio buttons see done see kind thing part building component fyi marcysutton expert existing", "d": "5/2015"}, {"body": "one biggest issues angular lack discouragement binding nonsemantic elements although could easily bind click event div native javascript angular encourage best practices like ngclicking interactive elements like buttons avoid widespread accessibility issues previously encountered agree documented accessibility story would great best thing would include accessible examples throughout framework lead example rather siloing accessibility single document discussions around extending native elements supporting rolesattributes angular show accessibility considered module like ngaria nt necessary lot documentation", "d": "5/2015"}, {"body": "crazy hacks antipatterns injecting element changes", "d": "5/2015"}, {"body": "manually stuff element considered antipattern angular dart thinking angular makes lot stuff easier application engineer always going times need something complex requires get underlying platform think angular make things easier able set listeners event nt know enough universal behaviors accessible components could leverage framework anything significant value", "d": "5/2015"}, {"body": "manually editing element makes code mostly nonportable angular prime issue", "d": "5/2015"}, {"body": "afaik portability angular meant framework nt think goal able build components run arbitrary platform", "d": "5/2015"}, {"body": "fixed something went wrong scripts second attempt fixed", "d": "5/2015"}, {"body": "available probably thinking see example look source api though definitely changing", "d": "5/2015"}, {"body": "seems like targeting ng case please use repo ng", "d": "5/2015"}, {"body": "vicb fast reply thank", "d": "5/2015"}, {"body": "could please close na", "d": "5/2015"}, {"body": "sure thanks", "d": "5/2015"}, {"body": "thanks report submitting pr", "d": "5/2015"}, {"body": "fixed pr", "d": "5/2015"}, {"body": "thanks", "d": "5/2015"}, {"body": "help cache issue", "d": "5/2015"}, {"body": "firefox", "d": "5/2015"}, {"body": "concur eslem happens lot easiest fix disable caching dev tools open vicb though remove cache html updated", "d": "5/2015"}, {"body": "right since html fragments cached browser sure angular part solution closing happy reopen people believe something framework level make things easier", "d": "5/2015"}, {"body": "happened dart test similar issue browser get closed", "d": "5/2015"}, {"body": "repro js close browser", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "funny propose sth similar guess renaming mean overriding selector right syntax need work imo idea", "d": "5/2015"}, {"body": "yes overriding selector precise way saying", "d": "5/2015"}, {"body": "fixed reenable fakeasync tests disabled ref", "d": "5/2015"}, {"body": "pending zonejs release", "d": "5/2015"}, {"body": "good idea use latest version jasmine testing refactor tests replace old functions make use", "d": "5/2015"}, {"body": "already use via", "d": "5/2015"}, {"body": "great see used version jasmine already least normally release notes jasmine breaking changes", "d": "5/2015"}, {"body": "working upgrading protractor skipped due pending jasmine issues yes say go unit tests get jasmine karmajasmine sure need updates", "d": "5/2015"}, {"body": "also need update traceurjasmine runtime use cjs tests", "d": "5/2015"}, {"body": "jasmine update fakeasync reenable js tests ref", "d": "5/2015"}, {"body": "ok protractor done karmajasmine issue neither works looking", "d": "5/2015"}, {"body": "done js cjs vicb anything else need done update fakeasync close", "d": "5/2015"}, {"body": "thanks juliemr close submit pr reenable tests block later today", "d": "5/2015"}, {"body": "example property would available change detection first runned ie event register lifecycle hook see md button example need value ctor would use md checkbox example", "d": "5/2015"}, {"body": "thanks still dont think working like pretty much basic scenario described still work errors attribute null indexhtml attribute test loading", "d": "5/2015"}, {"body": "right work top level component reopening note works nested elements", "d": "5/2015"}, {"body": "throwing exception would better imho generating user expects", "d": "5/2015"}, {"body": "dupe", "d": "5/2015"}, {"body": "vsavkin please help vicb implementation details", "d": "5/2015"}, {"body": "something soon probably tomorrow one issue left dart create factory function arbitrary number args idea cc kegluneq kevmoo", "d": "5/2015"}, {"body": "nt know top head make work arbitrary length issue dev code running code generator limit number arguments take look reflective code though may bit get would file issue assign", "d": "5/2015"}, {"body": "matter practice nt think people try inject items clear solving limit number bindings elementinjector number args could injected wed may timothy blasi notifications githubcom wrote nt know top head make work arbitrary length issue dev code running dart mirrors code generator limit number arguments take look reflective code though may bit get would file issue assign reply email directly view github", "d": "5/2015"}, {"body": "got misko leave max number injected args kegluneq issue", "d": "5/2015"}, {"body": "clarification want able right assume takes url", "d": "5/2015"}, {"body": "right takes component aliases params takes urls maybe make explicit lets keep taking url answer question would", "d": "5/2015"}, {"body": "sgtm", "d": "5/2015"}, {"body": "duplicate", "d": "5/2015"}, {"body": "think required syntax important", "d": "5/2015"}, {"body": "think either synonym", "d": "5/2015"}, {"body": "vsavkin time take look issue seems happens try evaluate set works following update ts export class resortslistitem item name string constructor thisitem name null", "d": "5/2015"}, {"body": "hum took figure issue take look closing tag", "d": "5/2015"}, {"body": "iiuc fundamental difference application state stored compute store state component initialization component expected react new data source truth elsewhere component comparing two system purer correct components nt stale data therefore inconsistencies app however downside makes components much difficult write component author needs consider every sequence data updates never occur production application added complexity components angular support well make stale state bugs easier detect angular could implement check gives warning data dependencies component x updated component react new data app may inconsistent state", "d": "5/2015"}, {"body": "request fit resurrect oneshot bindings want", "d": "5/2015"}, {"body": "james sure mean every sequence amp onchange onchange would called properties updated single property update helps", "d": "5/2015"}, {"body": "vicb issue called multiple times determined user component component nt case view author component would like receive bound values forbid future updates could add explicit guard method workaroundpattern costs lines code therefore nt think big urgent issue dart class mycomponent bool initialized false setters onchange initialized throw onetime bindings supported initialized true application logic", "d": "5/2015"}, {"body": "updates spoke rkirov vsavkin adding lifecycle event act similar angular time use boolean flag workaround dart needs use interfaces source truth result dynamic call sites bad probably result memory leaks developers forget set lifecycle event extend components need without knowing", "d": "5/2015"}, {"body": "dart needs use interfaces lifecycle const source truth result dynamic call sites bad probably result memory leaks developers forget set lifecycle event extend components need without knowing strongly agree current lifecycle workaround js doesnt reified interfaces makes sense dart needless deviation angulardart existing api", "d": "5/2015"}, {"body": "vsavkin implementing right use implements addition create", "d": "5/2015"}, {"body": "vicb test really run twice reporter going crazy saw issues progress reporter past uses trick going back previous line terminal editing break depending terminal size", "d": "5/2015"}, {"body": "think actually executed twice exception messages displayed twice seems like executing times ended karma instances running parallel closing gets fixed", "d": "5/2015"}, {"body": "right dart formally supports operation using reflection mirrors disables treeshaking code unused including core libraries etc angular includes development transformer removes reflection replaces statically generated code makes size normal try", "d": "5/2015"}, {"body": "since transformers mostly transparent bug fixed added line quickstart pubspecyaml rightisleft success matanlurey suggestion could send pr", "d": "5/2015"}, {"body": "seeing change results pub build", "d": "5/2015"}, {"body": "ah think need tell transformer file entrypoint see angular example kegluneq nt transformer warn missing entrypoint default expected behavior", "d": "5/2015"}, {"body": "worked less terrifying open bug angulario", "d": "5/2015"}, {"body": "rough edge situations need run angular transformer without entry points warnings ways make work opened track", "d": "5/2015"}, {"body": "managed get missing following line top ts file wanted import modules also create folder get file ran following commands npm install g tsd tsd query action install way nt need entire package file load following scripts html", "d": "5/2015"}, {"body": "vicb yeh saw last updates npm dependencies beginning thought due npm version seems like things flipped back forth different forms compare prs send consecutive days npm version sure going guess igorminar might familiar shrinkwrap quirks", "d": "5/2015"}, {"body": "discussed igorminar changes shrinkwrap file harmless occur clean version leave pr opened igorminar amend readme info", "d": "5/2015"}, {"body": "least error cjs tests detected one failure current master travis still green", "d": "5/2015"}, {"body": "seems like started break see sure commit could break things yeh build fail case", "d": "5/2015"}, {"body": "mhevery solved commit", "d": "5/2015"}, {"body": "yeah commit looks right", "d": "5/2015"}, {"body": "help guess", "d": "5/2015"}, {"body": "sekibomazic yes see exceptions please explain import statement included helps note typescript problem dart fine", "d": "5/2015"}, {"body": "following fixes problem works nt know makes sense dart sample works typescript import bootstrap component view import parent component selector view template class component selector view template class constructor parent c consolelog c component selector app view template directives class app bootstrap app prints possible cause first snippet used inside declared looks like circular dependency since typescript cares deceleration order also tried putting component seperate file still got exception", "d": "5/2015"}, {"body": "sorry mixed typescript atscript proposal helps use atscripttraceur similar issues updating nt use typescript yet", "d": "5/2015"}, {"body": "ts definition file yet complete support annotations make pr since trying complete annotations without much luck", "d": "5/2015"}, {"body": "working complete definitions file see", "d": "5/2015"}, {"body": "alexeagle different error message alpha javascript import component view bootstrap import parent component selector yeha view template export class constructor parent myf var dd component selector app view template directives export class constructor var dfdf modified input javascript declare module error message javascript resolve parameters make sure valid type annotations error noannotationerrorbaseexception new noannotationerror extracttoken arraymap native functionexecutelistwrappermap dependenciesfor executebindingresolve functionexecutedirectivebindingcreatefrombinding functionexecutedirectivebindingcreatefromtype compiled project visual studio typescript emitdecoratormetadata included main html file together traceur could give us hint modify cause errors related type definitions thanks josef", "d": "5/2015"}, {"body": "typescript questions angular question put ts code ts playground javascript var baz foo bar consolelog baz class foo class bar see going transpiled js variable hoisting get foo bar undefined place usage yes order seem matter feel free take believe things improved language level", "d": "5/2015"}, {"body": "bug type script typings complete bootstrap component view nonbindable switch eventemitter add full typescript typings released", "d": "5/2015"}, {"body": "current set typings tsd incomplete right track autogened complete typings", "d": "5/2015"}, {"body": "even possible impression sort selector check would know ancestor chain", "d": "5/2015"}, {"body": "jelbourn tend agree also find current order intuitive propose said think switching stringbased host specification would make problem go away see", "d": "5/2015"}, {"body": "even nt used build system option transforming tests rapidrefresh cycle let chat offline", "d": "5/2015"}, {"body": "fyi ban codebase smells bad", "d": "5/2015"}, {"body": "ok external developers also banned using parts angular apps necessarily opposed case people really like", "d": "5/2015"}, {"body": "smell bad used tutorial even though nt work", "d": "5/2015"}, {"body": "people tend use parts create single library entire package means essentially creating single scope whole package likely naming conflicts also since privacy library level dart private variables accessed sometimes useful little things also annoying like find main library file want add import discover prefix used particular import much easier reason nonpart files general generally never leave current file get picture available classesvariables import new ones get nearly benefits without downsides using exports definitely prefer code", "d": "5/2015"}, {"body": "sure try avoid parts well dart limited expressing accessible times nt want everything file parts perfect still nt see would smell nt think good idea tools limit dart limited capabilities even", "d": "5/2015"}, {"body": "yes agree regardless feel nt banned angular opened bug", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "cc vsavkin", "d": "5/2015"}, {"body": "far initial gulp testunitjs slowest trees total diffingtraceurcompiler diffingtscompiler diffingtraceurcompiler destcopy mergetrees slowest trees cumulative total avg diffingtraceurcompiler ms diffingtscompiler mergetrees ms destcopy subsequent build touching single file slowest trees total funnel diffingtscompiler diffingtraceurcompiler funnel slowest trees cumulative total avg funnel ms diffingtscompiler mergetrees ms diffingtraceurcompiler ms replacefilter ms numbers look better numbers ci server hard tell running different jobs", "d": "5/2015"}, {"body": "cc vsavkin", "d": "5/2015"}, {"body": "igorminar personally finding change makes initial build significantly slower sure want least initial build behave sort tricky", "d": "5/2015"}, {"body": "able repro caitp could take look one well", "d": "5/2015"}, {"body": "nt think related build changes wonder kind karma misconfiguration", "d": "5/2015"}, {"body": "able narrow fact run karma server runner single process log thing terminal", "d": "5/2015"}, {"body": "related", "d": "5/2015"}, {"body": "matanlurey time discuss", "d": "5/2015"}, {"body": "later special zones allow micro leap hopefuly available week see", "d": "5/2015"}, {"body": "talked matanlurey also add feature allow query nested component", "d": "5/2015"}, {"body": "summary differences existing testbed ready made public ie exposing internal view provide api select child components something like angular dart element probe allow chaining partially created test components shared tests eventually deprecate testbed missing anything", "d": "5/2015"}, {"body": "wip commit still needs clarification getting children shadow children work especially directives like used docs", "d": "5/2015"}, {"body": "pavelgj think current xhr service used compiler fetch templates directives jeffbcross working fullyfeatured backendaccess service tbosch mhevery think similar issues already imo make clear current xhr compiler happy send pr agree current service compilerprivate", "d": "5/2015"}, {"body": "hi yes agree analysis", "d": "5/2015"}, {"body": "design doc lot work progress place putting ideas", "d": "5/2015"}, {"body": "merged", "d": "5/2015"}, {"body": "todo update renderer design doc", "d": "5/2015"}, {"body": "note nt implement seems like flexible enough", "d": "5/2015"}, {"body": "could improvement property probably type service could guessed like works java ee even better service implements interface like could use interface type abstract service implementation like javascript interface service class myservice implements service class acomponent inject aservice service sure possible typescript proposing way works javaee", "d": "5/2015"}, {"body": "would affect unit testing one pass mock dependencies reading seems like property initilizers executed constructor true setting mocks object instances constructor run constructor might accessing could without constructing instance running constructor verdier consider proposal would work unittesting environment", "d": "5/2015"}, {"body": "pkozlowskiopensource property decorator gives access property descriptor decorator could set function responsible returning service", "d": "5/2015"}, {"body": "attribute exists accessor properties according current babel implementation class properties property initialisers called constructor idea override initialiser looks like solutions wait proposal evolution", "d": "5/2015"}, {"body": "wrong repo one angular angular repo available answer question angular nt oficially support ondemand code download something looking release timeframe", "d": "5/2015"}, {"body": "available part definitelytyped repo wonder repo handles different apis different versions kind like idea distributing type definitions part release", "d": "5/2015"}, {"body": "jep thought currently playing webjar latest release packages yet therefore nt know typedefinitions definitelytyped repo fit release", "d": "5/2015"}, {"body": "introduced seems concussion change vsavkin best person confirm new required behavior case probably add note changelog", "d": "5/2015"}, {"body": "pkozlowskiopensource iswas intention mental model behavior components elements directives attributes", "d": "5/2015"}, {"body": "change makes sense take simple examples component element directive attribute would expect components templates reside element fully clear play viewport directives let see vsavkin say", "d": "5/2015"}, {"body": "reasons enforce constraint dynamically create components without constraint creation bit weird instance element would create selector one possible make work behavior may confusing one component element aligns better web components regular directives selector none reasons apply revisit easiest thing imo seems reasonable", "d": "5/2015"}, {"body": "personally like current behaviour would keep unless discover usecases road vote goes closing one changelog update", "d": "5/2015"}, {"body": "vsavkin makes sense course pkozlowskiopensource documentation also needs update remove add description section close everything clear", "d": "5/2015"}, {"body": "fully agree recommend pattern component element directive attribute think forced constraint negative impacts positive example able use root component provide template another comes mind button element accessibility still want use actual element times instance element would create selector one b possible make work behavior may confusing created element would made sense component author one component element like multiple directives needed isolate scope give error message expect agree best practice component element directive attribute constraint may negative affects require work arounds developers could still allowed documented always use elements components nt end world allowed wanted throw discussion points thanks", "d": "5/2015"}, {"body": "say marcysutton experts replacing custom elements also css frameworks expect exact names elements apply selectorsrules also think svg flexible able use custom tags nested elements everywhere without consequences although tested maybe wrong assumption like explicit limitation template per element nt think component exist element", "d": "5/2015"}, {"body": "reopening becouse clear solve use case chat vsavkin", "d": "5/2015"}, {"body": "jelbourn comments great developers encouraged use semantic elements reuse native behavior whenever possible nt limited also elements headings lists links many semantic elements could see people reinventing cause attributes instead custom tag names could leveraged keyboard assistive technology support definitely worth personally fan extending native elements know lot discussion whether right way forward trying dig recent info alice boxhall current situation find report back", "d": "5/2015"}, {"body": "dupe", "d": "5/2015"}, {"body": "alternative proposal say selector could inferred class name must say really big fan essentially replaces named arguments positional ones top currently one components sole selector argument basic components non trivial component need declare directives planning using argument would rather go convention selector rather implement proposal issue", "d": "5/2015"}, {"body": "thanks reply thoughts directives argument annotation think particular option nt affect case would assume selector would positional really required argument agree general named better positional huge fan basing name class hurts obfuscation", "d": "5/2015"}, {"body": "dart nt currently support union types proposal would nt work", "d": "5/2015"}, {"body": "nt need union types need two arguments", "d": "5/2015"}, {"body": "selector going optional see gets kind awkward without union types", "d": "5/2015"}, {"body": "ah well yes make things interesting nt thanks clarification", "d": "5/2015"}, {"body": "ewinslow right sorry confusion nt change parts comment huge fan basing name class hurts obfuscation hmm time would exporting directives nt think obfuscate", "d": "5/2015"}, {"body": "pkozlowskiopensource tell compiler whole world ahead time get rather fancy bundling modules rewriting names even names needed across modules sure hope continues supported", "d": "5/2015"}, {"body": "like way looks little concerned huge annotation class definition would good way tie things together nt looked decoratorsannotations spec yet hope available method level", "d": "5/2015"}, {"body": "noticed similar suggestion injectables though see already found", "d": "5/2015"}, {"body": "think confusion going regarding mixes configuration di container specifying injected previously configured di container example nt really need type annotation enough still need say available di container component using name nt make sense", "d": "5/2015"}, {"body": "type annotation enough type concrete class agree case info unnecessary would certainly nice may poor name sure come better one maybe could take array would decoupled component seems like positive decouple injector configuration component configuration actually wdyt", "d": "5/2015"}, {"body": "looks like related force autodetection problem disappears alexeagle rkirov proper fix issue angular", "d": "5/2015"}, {"body": "close issue sekibomazic ended workaround rx autodetection works", "d": "5/2015"}, {"body": "already use bundles right officially supported workflows bundles still dev preview ready custom builds angular app document deal somehow special steps", "d": "5/2015"}, {"body": "discussed tbosch would need catch error compile time nt want wait template instantiated probably need add metadata", "d": "5/2015"}, {"body": "sounds good thanks looking", "d": "5/2015"}, {"body": "adressed", "d": "5/2015"}, {"body": "closing duplicate reopen think need", "d": "5/2015"}, {"body": "someone needs send pr improves docs improve docs self improvement", "d": "5/2015"}, {"body": "record totally agree ewinslow", "d": "5/2015"}, {"body": "agreed angular forum would incredibly helpful", "d": "5/2015"}, {"body": "ewinslow get help gitter channel", "d": "5/2015"}, {"body": "thanks nt aware try next time still think would useful forum serve good reference material others", "d": "5/2015"}, {"body": "mlynch look like opened twice see", "d": "5/2015"}, {"body": "ah sorry dang tethered network", "d": "5/2015"}, {"body": "encountered demo example docs work mynamevalue throws exactly error margielm", "d": "5/2015"}, {"body": "code available somewhere", "d": "5/2015"}, {"body": "vicb one gets installed using code empty really appappts import component view component selector todoapp view template export class todoappcomponent boot file watched tsc appts import component view bootstrap import todoappcomponent appapp bootstrap todoappcomponent", "d": "5/2015"}, {"body": "confirm error appears alpha wanted try published yet", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "would agree would nice see total solution phase", "d": "5/2015"}, {"body": "repost", "d": "5/2015"}, {"body": "reposted", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "nt care styles limiting something like server rendered views styles wo nt show initial load angular bootstraps view also jsdom switch iojs node support would use", "d": "5/2015"}, {"body": "problem try rename files", "d": "5/2015"}, {"body": "although nt think good way fix issue quick workaround overwrote follows", "d": "5/2015"}, {"body": "jelbourn mhevery would trivial specialcase one special case merging different classes specified host element send pr later today think properties leaning towards using stringbased syntax sth like would close write templates users nt need learn new syntax nt hard implement got already parsing logic compiler wdyt", "d": "5/2015"}, {"body": "sort like pawel concept could go one step would likely toolable", "d": "5/2015"}, {"body": "matanlurey pascalprecht good idea vote hash need discuss vsavkin fits", "d": "5/2015"}, {"body": "vsavkin opinion think concern angular rather third party plugin could lots different ways may want limit would rather get business also already used pipe syntax ca nt reused", "d": "5/2015"}, {"body": "since events need handled way really events rather continuous behaviors would prefer bake mechanism framework unless imo done lowerlevel", "d": "5/2015"}, {"body": "jeremy could nt create function runtime eg javascript view template class widget onmousemove function constructor thisonmousemove debounce thischeckhoverposition checkhoverposition event", "d": "5/2015"}, {"body": "method prototype otherwise creating copy every component instance", "d": "5/2015"}, {"body": "decorators awesome component selector widget view template class widget onmousemove function debounce onmousemove event event", "d": "5/2015"}, {"body": "problem zones nt want trigger dirty checking denouncing decides ignore event denouncing inside event handler directive component always trigger change detection event handlers run inside angular zone think need think little thu may patrickjs notifications githubcom wrote decorators awesome view template class widget onmousemove function constructor thisonmousemove thischeckhoverposition debounce checkhoverposition event reply email directly view github", "d": "5/2015"}, {"body": "tbosch good point vsavkin kind rate limiting common looking current material design components uses text entry autocomplete text entry mdinput autoresizing element window resize events several components drawing ticks slider scrolling events things headers etc stickied parent components something based addition removal child relayout", "d": "5/2015"}, {"body": "implementation changed event handler actually runs outer zone outer zone test event target actual element match execute code angular zone triggers cd may generalize target actual test generic predicate support would also work w debounce", "d": "5/2015"}, {"body": "related", "d": "5/2015"}, {"body": "nt run problem updating", "d": "5/2015"}, {"body": "see", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "looks closer api want typically hide redistribution content selection logic separate component eg depend angular transclusion using tag instead intentional eg approach work opportunity strategies", "d": "5/2015"}, {"body": "jbdeboer could give example mean w trying get across component appends elements element matched selector think would straightforward implement custom component renderer feature tbosch working tbosch comment custom component renders might fit mhevery comment feedback alternatives", "d": "5/2015"}, {"body": "think component", "d": "5/2015"}, {"body": "mhevery seems similar difference able add something document body bootstrapped app underneath would important cases root component root document migration angular root component might small portion overall application", "d": "5/2015"}, {"body": "wonder formatting code previously karma preprocessor sure working nt think running dartstyle format package every file save looked right fix change broccoli wrapper format every file incrementally take look", "d": "5/2015"}, {"body": "sure debugged formatted code past perhaps integration tests unit tests two use different build targets", "d": "5/2015"}, {"body": "code formatted master looks like formatting incremental though slows iteration open new issue", "d": "5/2015"}, {"body": "new issue", "d": "5/2015"}, {"body": "cc matanlurey", "d": "5/2015"}, {"body": "often situation happen cause make parent property public make workaround possible another option would change injector provide following guarantee binding requests dependency gets parent", "d": "5/2015"}, {"body": "one usecase event bus pattern want hierarchy event buses given event bus delegates parent event bus even buses implement interface", "d": "5/2015"}, {"body": "make public injector leave issue later", "d": "5/2015"}, {"body": "caitp look please", "d": "5/2015"}, {"body": "relevant recent change", "d": "5/2015"}, {"body": "watching behaviour nt seem working locally nt seem get triggered modules sources change sure reproduce like still better emfile anymore edit cleaning nodemodules trying got sort working switching branch master seems rebuild though different branches need", "d": "5/2015"}, {"body": "nt nt done fri may notifications githubcom wrote watching behaviour nt seem working locally dont seem get triggered modules sources change reply email directly view github", "d": "5/2015"}, {"body": "done npm install broken completely cleaning nodemodules npm installing anyways nt drastically different branches locally artificially making changes files nt seem repro behaviour mac builds checkout", "d": "5/2015"}, {"body": "pull upstream tag use even easier see rebuild twice second rebuild noop fri may notifications githubcom wrote done npm install broken completely cleaning nodemodules npm installing anyways nt drastically different branches locally artificially making changes files nt seem repro behaviour mac builds reply email directly view github", "d": "5/2015"}, {"body": "bash dart sdk detected using gulpfile gitangulargulpfilejs starting buildcleanjs finished buildcleanjs ms starting buildjsdev starting buildcleantools finished buildcleantools ms starting buildtools starting buildtools finished buildtools finished buildtools starting broccolijsdev starting broccolijsdev tree diff duration changes detected files directories tree diff duration changes detected files directories tree diff duration changes detected files directories tree diff funneldestltxckptmp duration changes detected files directories slowest trees total diffingtraceurcompiler diffingtraceurcompiler diffingtscompiler destcopy slowest trees cumulative total avg diffingtraceurcompiler ms diffingtscompiler destcopy finished broccolijsdev finished broccolijsdev starting buildcheckcirculardependencies finished buildcheckcirculardependencies ms starting checkformat finished checkformat finished buildjsdev starting testunitjs starting testunitjskarmaserver finished testunitjskarmaserver ms starting testunitjskarmarun info karma karma server started info launcher starting browser chromecanary captured browser open finished testunitjskarmarun ms starting checkformat info chrome mac os x connected socket id chrome mac os x executed skipped success secs secs chrome mac os x executed skipped success secs secs another shell starting broccolijsdev tree diff duration changes detected files directories tree diff duration changes detected files directories tree diff duration changes detected files directories tree diff funneldestltxckptmp duration changes detected files directories slowest trees total funnel treemerger treemerger destcopy diffingtraceurcompiler diffingtraceurcompiler slowest trees cumulative total avg funnel ms treemerger ms diffingtraceurcompiler ms replacefilter ms destcopy finished broccolijsdev starting testunitjskarmarun chrome mac os x executed success secs secs chrome mac os x executed skipped success secs secs finished testunitjskarmarun starting checkformat finished checkformat looks like one build following touch behaviour git checkouts could seeing differences files git checkout finished running though", "d": "5/2015"}, {"body": "one thing gulpwatch gaze natively option defaults shamagaze master might useful switching branches gulpwatch seems option defaults especially clear debounce mass changes git checkout waits write stream instead gaze docs offer info avoiding emfile issues tried", "d": "5/2015"}, {"body": "debounce matter gulpwatchchokidar properly detects two files changed trigger output starting broccolijsdev tree diff duration changes detected files directories tree diff duration changes detected files directories tree diff duration changes detected files directories tree diff funneldestvbvqsbtmp duration changes detected files directories slowest trees total funnel treemerger diffingtraceurcompiler diffingtraceurcompiler treemerger destcopy slowest trees cumulative total avg funnel ms treemerger ms diffingtraceurcompiler ms destcopy replacefilter ms finished broccolijsdev starting testunitjskarmarun starting broccolijsdev tree diff duration changes detected files directories tree diff duration changes detected files directories tree diff duration changes detected files directories tree diff funneldestvbvqsbtmp duration changes detected files directories slowest trees total funnel treemerger treemerger destcopy slowest trees cumulative total avg funnel ms treemerger ms replacefilter ms destcopy finished broccolijsdev ms chrome mac os x executed success secs secs chrome mac os x executed skipped success secs secs finished testunitjskarmarun starting checkformat finished checkformat notice ran build twice second build contains diffs since first one picked src changes also notice karma runs onces think first rebuild triggers karma test running second rebuild happens done first karmarun finishes gulp nt rerun", "d": "5/2015"}, {"body": "caitp update", "d": "5/2015"}, {"body": "started work friday pr tonight tomorrow morning", "d": "5/2015"}, {"body": "another thing could help avoid false positives provide linter phase runs locally file checks declare classes blacklisted names gives warning would nt able catch package dependencies declare classes blacklisted names though nt angular transformer pubspec", "d": "5/2015"}, {"body": "closed", "d": "5/2015"}, {"body": "already supported reflective mode bit debate going field sure stay let wait dust settles topic", "d": "5/2015"}, {"body": "right currently logic flatten directives list", "d": "5/2015"}, {"body": "oh also", "d": "5/2015"}, {"body": "looks like set change detection interface csp environments source annotations", "d": "5/2015"}, {"body": "forgive ignorance would done using", "d": "5/2015"}, {"body": "peellavaj think something like js var bind angularbind var changedetection angularchangedetection var dynamicchangedetection angulardynamicchangedetection documentaddeventlistener domcontentloaded function angularbootstrap appcomponent bind changedetection toclass dynamicchangedetection unknown reasons contain function see plunker think bug cc igorminar pkozlowskiopensource", "d": "5/2015"}, {"body": "unknown reasons angular contain bind function see plunker think bug looks like bug defined even still see csp errors", "d": "5/2015"}, {"body": "okay able fix rest csp errors quick local patch using real functions instead use fxos apps", "d": "5/2015"}, {"body": "jbdeboer opened similar identical issue time ago see maybe would beneficial centralise discussion one place", "d": "5/2015"}, {"body": "yes closed dup issue trying open discussion answer yes angular framework demands verbose list possible outcome need open", "d": "5/2015"}, {"body": "vsavkin sure right person assign looks like background generation feel free reassign unassign etc thanks", "d": "5/2015"}, {"body": "cc rkirov", "d": "5/2015"}, {"body": "also tests", "d": "5/2015"}, {"body": "might lead problems dart transformers hard execute code transforming kegluneq think", "d": "5/2015"}, {"body": "let comment idea implementation idea would simple single responsibility resolving ie concatenating urls time added responsibility return relative path component app path idea template url would see code idea transformer would generate mappings dart sure generate js may better things idea time", "d": "5/2015"}, {"body": "tbosch agreed would difficult impossible may able use isolate spawnuri execute generated method calls implementation specified annotation think would least nasty sounds make work reference working inlining template code values discovered current url resolution nt anything intelligent looks relative file defined generating entries would much easier may necessary successfully inline templates", "d": "5/2015"}, {"body": "ping possible quick explanation issue two thanks", "d": "5/2015"}, {"body": "null resolved context current document would resolve would resolve null specified resolves note possible resolve starting reason would play well url resolver uses resolving urls used work first implementation decided switch resolving via link mhevery helps add information inline docs let know details would need", "d": "5/2015"}, {"body": "thanks good start", "d": "5/2015"}, {"body": "submitted pr could one review thanks", "d": "5/2015"}, {"body": "explanation good except describing default implementation angular confused need override implementation specific question answered cases null", "d": "5/2015"}, {"body": "pr null resolved context current document iirc used get application url call thisappurl urlresolverresolve null get base url application", "d": "5/2015"}, {"body": "case feels like urlresolver class many things split different interfaces", "d": "5/2015"}, {"body": "jbdeboer right currently possible current implementation uses anchor would much cleaner different interfaces", "d": "5/2015"}, {"body": "js", "d": "5/2015"}, {"body": "relates", "d": "5/2015"}, {"body": "js vicb hard say since dartium crashes case", "d": "5/2015"}, {"body": "related", "d": "5/2015"}, {"body": "ref sure help investigate flag found investigating zonejs issue edit", "d": "5/2015"}, {"body": "pkozlowskiopensource could try add config report helps", "d": "5/2015"}, {"body": "vicb talking karma config added nt seem help sure would related jasminenode", "d": "5/2015"}, {"body": "pkozlowskiopensource good point may", "d": "5/2015"}, {"body": "upon investigation nt think issue affects gt", "d": "5/2015"}, {"body": "pushed changes include typescript source files docgen bigger problem dgeni uses traceur read code source files unfortunately nt understand typescript syntax causing traceur fail parse parts newly migrated files example change use optional parameter syntax class module proper solution migrate using typescript language services parsing drop traceur altogether sure much effort case would good could pair someone knows services make happen faster", "d": "5/2015"}, {"body": "help still working set aside tomorrow morning pacific time", "d": "5/2015"}, {"body": "mprobst since alex next week euro time zone could pair petebacondarwin please figure going big fix small one unable update api docs resolved", "d": "5/2015"}, {"body": "fyi talked petebacondarwin apparently good progress already made standby case something pops", "d": "5/2015"}, {"body": "petebacondarwin update wondering push api doc update", "d": "5/2015"}, {"body": "wip", "d": "5/2015"}, {"body": "check existing typescript traceur plugins see incremental plugin usually", "d": "5/2015"}, {"body": "false alarm", "d": "5/2015"}, {"body": "jbdeboer changed error message recently hopefully bit better see would ideal wording would like see", "d": "5/2015"}, {"body": "please include test issue fixed", "d": "5/2015"}, {"body": "pulling keertip interested terms analyzer plugin", "d": "5/2015"}, {"body": "pulling keertip interested terms analyzer plugin", "d": "5/2015"}, {"body": "vsavkin discussed today", "d": "5/2015"}, {"body": "pulling keertip interested terms analyzer plugin", "d": "5/2015"}, {"body": "dup", "d": "5/2015"}, {"body": "yes", "d": "5/2015"}, {"body": "talking alexeagle different issue", "d": "5/2015"}, {"body": "repo case clone repo run pub serve devtools console see expect see value stack output", "d": "5/2015"}, {"body": "believe fix pass stack trace facadeasyncdart pass stack trace anywhere call handful places occurs code", "d": "5/2015"}, {"body": "jbdeboer fix stacks descendants arbitrary thrown objects yet strings dart capture stack non use special syntax supported typescript shimmed separate discussion proposal good news majority dart errors extending eg unlikely would encounter thrown non trouble debugging", "d": "5/2015"}, {"body": "repo case fixed happy reference codebase statements throw rest throwing strings would say nonerrors important", "d": "5/2015"}, {"body": "jbdeboer repro case throwing string brought wo nt fix fix repro case nt need statement get need goes things like thrown standard library code statements code constitute much smaller percentage total locations code result exceptions suggest close issue provide good enough solution remaining cases try fix side already tracked worked", "d": "5/2015"}, {"body": "closing one let fix non", "d": "5/2015"}, {"body": "please keep tracking bug issue open repo reproduction case posted fixed convinced bug", "d": "5/2015"}, {"body": "vicb could take look one", "d": "5/2015"}, {"body": "see", "d": "5/2015"}, {"body": "needed migrating gt calendar picker", "d": "5/2015"}, {"body": "naomiblack assigned could double check matan", "d": "5/2015"}, {"body": "cc kseamon matanlurey yjbanov", "d": "5/2015"}, {"body": "needed migrating gt calendar picker", "d": "5/2015"}, {"body": "surface seems reasonable know marked later finding dirtied bit dom flow might costly triggering event naively possible trigger event subsequent dirty check synchronously assume using promise makes asynchronous asynchronous user may perceive flicker ui readjusts", "d": "5/2015"}, {"body": "kseamon yes possible without leaving current vm turn ie flicker maybe right trying reduce number elements need checked might slower checking unless application give guarantees ways nt rely walking checking dom eg component could say encapsulated regarding changing positionsize elements shadowdom ie detect something inside component changed via intercepting renderer need dirty check listeners inside component children nowhere else could actually default setting components", "d": "5/2015"}, {"body": "like api run engineers tomorrow additional input", "d": "5/2015"}, {"body": "think probably need general debate whether want event dom readwrite queue back based concrete use cases gt talk isoos use cases gt uses dom readwrite queue right thirdparty like charted need know angular done work trigger additional reflows components need read size container know whether load extra data fill components ex search showing results drop space add events enabled component displayed avoid getting called rendering phase mhevery think", "d": "5/2015"}, {"body": "two cents keep readwrite queue option advanced use cases always cases integrate party libraries able consume events eg chart libraries still want synchronize renders implement experimental events size position visibility", "d": "5/2015"}, {"body": "naomiblack assigned could double check matan", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "fyi gt prototype version dom readwrite queue", "d": "5/2015"}, {"body": "matanlurey iirc di repo might info workaround bugs mirrors looking would great check following possible", "d": "5/2015"}, {"body": "sure possible would still need typeliteral get accurate typing said static mode may may necessary", "d": "5/2015"}, {"body": "talking offline yjbanov di would need support following angular di sees would invoke getter get const typeliteral gt type class typeliteral const typeliteral type get type gt kegluneq reference", "d": "5/2015"}, {"body": "kevmoo something could made easier dart side", "d": "5/2015"}, {"body": "internal tracking see b", "d": "5/2015"}, {"body": "pending language request", "d": "5/2015"}, {"body": "may duplicate", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "simplification done implementation component element based renderer done separate issue", "d": "5/2015"}, {"body": "believe already solved module definitions nested javascript const angularmodule cost const myapp cost const binding urlrewriter toimplementation myurlresolver injectables const angularmodule myapp solved problem could close issue", "d": "5/2015"}, {"body": "might good enough reopen run issues", "d": "5/2015"}, {"body": "done", "d": "5/2015"}, {"body": "think work work since equivalent html need special case bind object literals", "d": "5/2015"}, {"body": "would work style thinking could generally useful examples could think makes sense group related properties model object attributes however lot time actually want bind existing property config autoplay autobuffer controls loop muted preload etc style though rest usecases seem bit weak", "d": "5/2015"}, {"body": "getting something similar run dart build see", "d": "5/2015"}, {"body": "tried many things get work finally working setup sure fixed least switched node version used travis", "d": "5/2015"}, {"body": "still seeing issues using node vicb also reproduce trying change edit simplified issue run see errors", "d": "5/2015"}, {"body": "still see happens edit file", "d": "5/2015"}, {"body": "quite sure going way testunitjs setup right right local changes pending fix lands", "d": "5/2015"}, {"body": "landed morning guessing resolves particular issue well also pending important get solve additional issues testunit tasks", "d": "5/2015"}, {"body": "confirmed working thanks", "d": "5/2015"}, {"body": "someone needs define kind element router create component right using", "d": "5/2015"}, {"body": "also something makes sense components always want open dynamically overlays would totally reasonable absence selector use", "d": "5/2015"}, {"body": "wait create element matching selector containing element kind surprising agree jelbourn div would suffice default", "d": "5/2015"}, {"body": "btford yes", "d": "5/2015"}, {"body": "nt think behavior bad nt really imply definitely make sure documented use cases missing", "d": "5/2015"}, {"body": "using", "d": "5/2015"}, {"body": "repo please reopen", "d": "5/2015"}, {"body": "oops sorry open repo", "d": "5/2015"}, {"body": "decorator directive decorator gt directive", "d": "5/2015"}, {"body": "missed ok closing", "d": "5/2015"}, {"body": "important line means assertions already enabled dev mode remove line bundle code", "d": "5/2015"}, {"body": "resolved closed", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "link page step following instructions support ts note need prerelease bundle included github repo rest dev guides needs slight modification used ts errors reporting look like annotations decorators thus unsuitable used ts syntax using decorators bundle decorators available next release", "d": "5/2015"}, {"body": "page referring compared code getting started guide refered saw traceur script missing ts example main issue installed typescript npm used command line tool transpile ts", "d": "5/2015"}, {"body": "see explains decorators stay tuned released day", "d": "5/2015"}, {"body": "oh oke thanks pointing", "d": "5/2015"}, {"body": "getting error nt get error", "d": "5/2015"}, {"body": "nevermind change imports", "d": "5/2015"}, {"body": "works", "d": "5/2015"}, {"body": "getting error", "d": "5/2015"}, {"body": "copy paste bwiklund", "d": "5/2015"}, {"body": "started typescript preview fully expect something foolish annotations order new error import component view bootstrap component selector myapp injectables fooservice view template directives class myappcomponent name string list string constructor fooservice fooservice thisname ben thislist fooservicelist class fooservice list string constructor thislist foo bar baz bootstrap myappcomponent", "d": "5/2015"}, {"body": "issue bwiklund co like trying inject simple class using nt work without traceurruntime also missing tutorial ed version error stops putting fooservice injectables tidying related code", "d": "5/2015"}, {"body": "nt look like property implemented latest version annotation maybe rkirov knows", "d": "5/2015"}, {"body": "issue workaround", "d": "5/2015"}, {"body": "khyamay issues error injectables", "d": "5/2015"}, {"body": "samverschueren yeah used changed imports get", "d": "5/2015"}, {"body": "yes problem solved version imports look like try using version", "d": "5/2015"}, {"body": "tried version changed import get btw following step step guide every thing working tried create another class inject controller guess might issue like u said", "d": "5/2015"}, {"body": "yes injectables work yet guess tried take deeper look could nt find code", "d": "5/2015"}, {"body": "sorry confusion changelog reflect try improve time", "d": "5/2015"}, {"body": "vicb thanks clearing got injection working ca nt put fooservice class maints file throw error indicating ca nt find fooservice however show list view ca nt declare annotation throws error fooservicets typescript class fooservice list string constructor thislist foo bar baz maints typescript import component view bootstrap component selector myapp appinjector fooservice view template class appcomponent name string list string constructor fooservice fooservice thisname ben thislist fooservicelist bootstrap appcomponent indexhtml", "d": "5/2015"}, {"body": "found issue regarding directives documentation refers directives dived code found directives actually sure probably backward compatibility angular keeping mind using code file typescript import component view ngfor bootstrap component selector myapp appinjector fooservice view template directives ngfor class appcomponent name string list string constructor fooservice fooservice thisname ben thislist fooservicelist bootstrap appcomponent everything work like charm note use type definition compile type definition uses well", "d": "5/2015"}, {"body": "default npm published sources transpiled using commonjs module imports dom wrappers use feature modules transpile well commonjs modifying exported object required thus error seeing note directory nodemodule packages transpile favorite transpiler nt use commonjs get error looking fixing fastest way get started angular use bundles outlined quickstarted guides", "d": "5/2015"}, {"body": "couple notes poking around past days got singlefile bundle output working via jspm builder tool bit hacky moment workaround add overrride app packagejson follows jspm install npm get way add additional mapping configjs extension interim solution added registry pr still nt work box due file extensions rkirov could get js file extensions distributed files long term move overrides pr repo make zonejs exportable might able shim config", "d": "5/2015"}, {"body": "think known bug", "d": "5/2015"}, {"body": "currently annotation see", "d": "5/2015"}, {"body": "matanlurey totally right renamed developer preview", "d": "5/2015"}, {"body": "already possible latest development preview please check corresponding repo might still rough edges please report issues bump issues", "d": "5/2015"}, {"body": "provide steps reproduce errors coming dartium test failures noticed syntax errors ignored eg appending end file result emit failure nt somehow autocorrects file moves", "d": "5/2015"}, {"body": "igorminar nt investigate issue sure source way able reproduce past time would stop karma instances go dart file one dart extension modify way creates syntax error start karma tests run looks like karma hangs nt start running tests maybe problem dart preprocessor karma maybe solved since using preprocessor", "d": "5/2015"}, {"body": "igorminar sorry ca nt confirm still happens nt access machine hope steps reproduce clear", "d": "5/2015"}, {"body": "able repro fix", "d": "5/2015"}, {"body": "awesome thnx igorminar", "d": "5/2015"}, {"body": "sorry need context error reproduce", "d": "5/2015"}, {"body": "report simple provide reproducible way please wait", "d": "5/2015"}, {"body": "tried provide reproducible way used babel browserify however became unable convert babel added syntaxerror line illegal export esmodule expects transpiled modules contain marker todo remove longer use traceur export var esmodule true sourcemappingurldijsmap angular presently considered transition period wait see little phantomjs correspondence try situation changed", "d": "5/2015"}, {"body": "dupe", "d": "5/2015"}, {"body": "yes also dup closed without implementing externallyvisible testbed", "d": "5/2015"}, {"body": "also reported", "d": "5/2015"}, {"body": "reason ca nt put service binding bootstrap common parent component", "d": "5/2015"}, {"body": "technical reason works fine way feels unintuitive imho would difference importing services listing injectables needed importing everything required app top level components ensure services always single instances end world means certainly simple pull smaller applications honest surprised injectables array needs specified component level taking closer look dijs including type constructor specifying inject decorator class enough information injection container", "d": "5/2015"}, {"body": "dvlsg works expected got impression confusing registration available injector via versus using injecting available inject registered things need registered somewhere far registration goes hierarchy injectors register things level default component creating subinjector new entry hierarchy new injector registering new entry using suggested matanlurey could simply move registration bootstrap process thus configuring app root injector surprised injectables array needs specified component level quite accurate register things level child injectors child components see everything registered parent overridden alternative solution would register service parent component", "d": "5/2015"}, {"body": "going close one things work expected designed said see recurring confusion point mhevery vsavkin sure need better docs name things differently rework concepts see people bumping personally confusing things confusing people current design makes perfect sense easy understand yeh one keeps coming back questions", "d": "5/2015"}, {"body": "thanks clarification appreciate ca nt speak anyone else confusion probably stemmed using dependency injection methods would inject single instance even parentchild relationships used even dijs angular remembering correctly know parentchild relationships angular probably handled differently took surprise", "d": "5/2015"}, {"body": "sub vsavkin", "d": "5/2015"}, {"body": "think issue tsd actually filed", "d": "5/2015"}, {"body": "sure yet frequent problem going prioritize things bites us something like forcedelete typings every time maybe fixed upstream", "d": "5/2015"}, {"body": "fyi team fix", "d": "5/2015"}, {"body": "yes want support svg sure custom element inside svg really means svg shadow dom better describe use case", "d": "5/2015"}, {"body": "project less desided uix least part still discuss use case want working visual programming tool using nodesblocks connects via wires similar unreal engines bluprint system work area completely rendered svg able render advanced shapes keep event handling dom would lost canvas complexity work area built using multiple nested components everything single would feasible seen uix react short tested kind library may better fit template oriented approach angular anyway may first intended use something never meant use case", "d": "5/2015"}, {"body": "yes", "d": "5/2015"}, {"body": "get rid", "d": "5/2015"}, {"body": "perftest needs stay use currently working local travis machine manually pushing changes perftests executed mon may brian ford notifications githubcom wrote get rid newrouter reply email directly view github", "d": "5/2015"}, {"body": "cleaned", "d": "5/2015"}, {"body": "ran issue needing pass arguments well like proposed", "d": "5/2015"}, {"body": "missing good way register pipes think would like keep syntax unless technical reason bit confused probelm solve file bug correct order bit would file nt think understand mean wrong order one argument wrong order parentheses necessary", "d": "5/2015"}, {"body": "goes components also tries synchronous inject", "d": "5/2015"}, {"body": "seems like bug", "d": "5/2015"}, {"body": "looks like bug compiler valid use case fixed", "d": "5/2015"}, {"body": "syntax actually seems subtle issue w dynamically loaded components though investigate file new issue", "d": "5/2015"}, {"body": "sounds reasonable think annotation view cached", "d": "5/2015"}, {"body": "dynamic components nt annotation guessing view reuse nt apply dynamic case", "d": "5/2015"}, {"body": "yjbanov correct dynamic components load static components hence place put works great", "d": "5/2015"}, {"body": "sounds good updated proposal", "d": "5/2015"}, {"body": "strange behavior going postpone really looking full render compiler pipeline running transformer meantime manually populate workaround", "d": "5/2015"}, {"body": "apologies", "d": "5/2015"}, {"body": "ajoslin reproduce scenario would awesome many changes repo sure version angular used test", "d": "5/2015"}, {"body": "ajoslin nt see throwing ca nt seem make work either", "d": "5/2015"}, {"body": "ah actually works correctly proper syntax use seems work perfectly fine ajoslin going close one since seems working fine see plunker let know still see pbs versions going reopen look", "d": "5/2015"}, {"body": "need feature well since components use templateurl want unit test", "d": "5/2015"}, {"body": "implemented internally creating map templateurl html via build process using test bed custom angular may consider providing box", "d": "5/2015"}, {"body": "would nice solution nt involve build step eg could add karmaconf files served", "d": "5/2015"}, {"body": "blocking gt also found attribute selectors components cause lot confusion avoided eg component developers confused work realize particular syntax deprecated point stands", "d": "5/2015"}, {"body": "think main issue prefixing properties different directives applied element could use property nonprefixed properties ambiguous property apply know looking markup prefixing properties solves problem becomes long read perfectly understandable becomes long read alternative shorter syntax solves alternative compact syntax could pass properties object directive case developer want use prefixes lot shorter reads easily offers equal semantics summary proposal best practice properties would prefix properties pass properties object nt want prefix would make sense", "d": "5/2015"}, {"body": "yet another syntax assign properties directives based position tag think makes quite readable addition could require dash directive name disallow properties avoid name clashes properties directives alternative prefix properties symbol", "d": "5/2015"}, {"body": "timjacobi guarantees dom api iteration order attrs", "d": "5/2015"}, {"body": "pkozlowskiopensource familiar enough dom api answer worth investigating", "d": "5/2015"}, {"body": "timjacobi think may possible issues first approach html spec ignores duplicates result second one ignored cases may issue templating languages offer constructs allow determine exact order attributes example jade amp attributes converts object set attributes resulting html ca nt control order sure second approach valid html", "d": "5/2015"}, {"body": "familiar angular renders html relies html swallowing additional properties name syntaxes wo nt work understand html spec correctly special characters allowed nt angular property syntax anyway", "d": "5/2015"}, {"body": "two cents let introduce propsattribute contain attribute name directive properties example js directive selector directiveone propsattribute directiveone take directive properties attribute class directiveone color string size int directive selector element lt directive may attribute name selector propsattribute directivetwo class directivetwo directive selector element directivesingleline default class name converted dashcase used propsattribute class directivesingleline pros prevent property names collisions directives much shorter cleaner syntax prefixes cons maybe realized contradicts current directive concept", "d": "5/2015"}, {"body": "jvandemo latest proposal passing object hash except argue standardizing using passanobject approach eliminate prefixedextraproperties approach bother allowing pick one consistent across teams plus ca nt tell well whethere configures property foo directive whether directive entirely using object hash configuration makes unambiguous always nt let directives add extra properties", "d": "5/2015"}, {"body": "hi timjacobi think rename component overriding selector must enterprise grade applications opinion composition pattern good approach dealing small applications hell breaks loose start think massive enterprise grade apps keeping components loosely coupled looking easy simple feature great improvement pkozlowskiopensource know issue open nt able find one cheers", "d": "5/2015"}, {"body": "mhevery could add transparency reintroduced update ah nevermind ofc namespace actual question properties handled nt leave final opinion issue", "d": "5/2015"}, {"body": "mhevery great call prefixing directives makes lot sense however pascalprecht noticed consensus handling properties yet prefix prefix pass object would great hear thoughts instead letting thread valuable inputs multiple people die without kind best practice thanks update realized last sentence sounds bit rude completely intended meant say would great thread would end form conclusion link document conclusions case people find thread want know outcome", "d": "5/2015"}, {"body": "would nice know conclusion", "d": "5/2015"}, {"body": "think prefixing best approach avoid confusion leave space lighter syntax instead passing config object", "d": "5/2015"}, {"body": "serverside rendering would nice separate compiling instantiating api well would compile instantiate every request", "d": "5/2015"}, {"body": "quickstart replaced typescript includes renamings pls let us know still working", "d": "5/2015"}, {"body": "running workaround", "d": "5/2015"}, {"body": "believe fixed since switched chokidarfsevents basedwatching still issue please reopen", "d": "5/2015"}, {"body": "test using passing may something subtle", "d": "5/2015"}, {"body": "tested alpha still fails nt show errors running page chrome results output maybe missing something sample project fails", "d": "5/2015"}, {"body": "works first time refresh fails may issue seeing works", "d": "5/2015"}, {"body": "tedsander sure understand usecase could please look failing test confirm trying tbosch wonder treat injectables dynamic components shell make available dynamically loaded components requested issue", "d": "5/2015"}, {"body": "looks lot like seeing particular bug probably would fixed removing dynamiccomponent injectable parameters dynamiccomponent nt anything gone ok sat may pawel kozlowski notifications githubcom wrote tedsander sure understand usecase could please look failing test confirm trying pkozlowskiopensource tbosch wonder treat injectables dynamic components shell make available dynamically loaded components requested issue reply email directly view github ted sander software engineer tsander googlecom", "d": "5/2015"}, {"body": "tedsander ok looks like nonissue recent code changes feel free open new issue resurfaces form another", "d": "5/2015"}, {"body": "sounds like need wrap tryfinally block suppress firing result setting new value event happen due user interactions setting property needs documented best practice", "d": "5/2015"}, {"body": "mhevery could bit specific exactly tryfinally block exception thrown sure use construct suppress anything", "d": "5/2015"}, {"body": "proposed design", "d": "5/2015"}, {"body": "ie allow component based renderers", "d": "5/2015"}, {"body": "see", "d": "5/2015"}, {"body": "closing favor", "d": "5/2015"}, {"body": "issue fix solves problem", "d": "5/2015"}, {"body": "zonejs release earlier today", "d": "5/2015"}, {"body": "closed via", "d": "5/2015"}, {"body": "tbosch update", "d": "5/2015"}, {"body": "finish today", "d": "5/2015"}, {"body": "missing refactor needed want simplify renderer api see", "d": "5/2015"}, {"body": "also route annotations seems lot ways like uirouter state john papa suggestion would possible add smart defaults similar boiler plate annotations little simpler", "d": "5/2015"}, {"body": "think annotation near constructor would great moves information closer relevant", "d": "5/2015"}, {"body": "exactly thinking since months glad see planned sugarmilestone", "d": "5/2015"}, {"body": "cehoffman browser parser turns attributes lower case get chance look angular parser detect since valid subtraction", "d": "5/2015"}, {"body": "feasible", "d": "5/2015"}, {"body": "resolved", "d": "5/2015"}, {"body": "environment windows visual studio code w typescript latest node configure install python install clangformat add path patch support typescript add precommit hook every file formats makes travis ci build fail hook changes properly formatted files locally says ok travis ci fails files errors run manually neither hook finds file typescript files supported reason believe windows specific since travis based issues developers running linux macosx", "d": "5/2015"}, {"body": "bogatinov think running outdated nt handle arrow functions well see update npm package latest needed patch anything support typescript give right version exactly", "d": "5/2015"}, {"body": "mprobst formatting states added list support latest version website running edit yes latest works old version", "d": "5/2015"}, {"body": "exclusively using clangformat distributed node referenced packageshrinkwrapjson file avoid version skew problems tue may pm aleksandar bogatinov lt notifications githubcom wrote mprobst formatting states install first patch file add ts defaultextensions section added ts list support latest version website running reply email directly view github", "d": "5/2015"}, {"body": "obsolete", "d": "5/2015"}, {"body": "released includes fix", "d": "5/2015"}, {"body": "thanks alex let close rest", "d": "5/2015"}, {"body": "pkozlowskiopensource runtime settings set statically compiletime could acchieve described would perform well", "d": "5/2015"}, {"body": "mhevery ok right got sent", "d": "5/2015"}, {"body": "mhevery closed looks like", "d": "5/2015"}, {"body": "naomiblack pr got reviewed needs minor clean land hours close issue", "d": "5/2015"}, {"body": "done", "d": "5/2015"}, {"body": "davideast believe idea make work could update bug", "d": "5/2015"}, {"body": "another approach viewcobtainer moves add method gets records positions create delete impl create temporary new array may contain nulls move executed nt need change change detection still atomic operation fast", "d": "5/2015"}, {"body": "argument custom exception handler else need", "d": "5/2015"}, {"body": "believe fixed recent fixes", "d": "5/2015"}, {"body": "thanks", "d": "5/2015"}, {"body": "heads update original description consistency reflect current api make following changes rename add child injecting example bound anything use dart example example halfdart halftypescript interface types typescript erased therefore support feature described", "d": "5/2015"}, {"body": "real questions according description want able allow component publish children light dom publishes shadow dom fact pretty explicit fact support publishing light dom support feature described would first need introduce support publishing light dom introduce binding want usecase trying support", "d": "5/2015"}, {"body": "updated proposal based offline design discussions changes publishing component view ie shadow dom light dom parent bindings mixed made available declaring component counterintuitive put component list implementing", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "mhevery wondering solves issue looked checkin dont see provide information allow dynamically creating controlgroup controls field like ngmodel created dynamically formcontroller modelcontroller issue towards", "d": "5/2015"}, {"body": "hi think concept gets obsolete events render app side communication actions app render side communication imperative views together allow anything", "d": "5/2015"}, {"body": "wow good hear since nt keen message bus struggling bit impl look actions", "d": "5/2015"}, {"body": "may issue", "d": "5/2015"}, {"body": "hevery sorry sure connect issue could elaborate", "d": "5/2015"}, {"body": "yjbanov adding instead see dart problem goes away sure got pulled discussion", "d": "5/2015"}, {"body": "user lists directives builtin custom going use view performance benefits gruntgulpbroccoli task adds imports", "d": "5/2015"}, {"body": "nt think framework rely party tool work", "d": "5/2015"}, {"body": "mhevery tbosch naomiblack moment issue good resolution need one next couple weeks migrating large number components least could document proposed solution", "d": "5/2015"}, {"body": "personally find explicitness api refreshing means compilerstools treeshaking drop unused directives automatically lazyload correct order whatever distinction seems like good compromise gets people running quickly without boilerplate also offers control need want optimize app download size", "d": "5/2015"}, {"body": "current thinking annotations automatically adds angular core directives way time nt specify core directives user want core directives way", "d": "5/2015"}, {"body": "could apps add list core directives app developers encouraged extend view case ensure tools work correctly may mi\u0161ko hevery notifications githubcom wrote current thinking view baseview annotations view extends baseview automatically adds angular core directives way time nt specify core directives user want core directives way reply email directly view github", "d": "5/2015"}, {"body": "yeh initial thinking also kind registry people could list default directives ones used time available less templates core directives would registry default people could add custom directives", "d": "5/2015"}, {"body": "would nice inject directives similar bindings bootstrap example look bootstrapts including injectables services folder servicests also creating injectables service todoservicets nt story comes directives services todoservicets servicests bootstrapts directive directivests appts appts pattern people use something like might place place party injectablesdirectives kind work flow great medsmalltoy apps also allowing lazyloadlargeenterprise teams scope app", "d": "5/2015"}, {"body": "mhevery think closed confirm", "d": "5/2015"}, {"body": "nope pr review blocked decision transpire const dart", "d": "5/2015"}, {"body": "blocked", "d": "5/2015"}, {"body": "unblocked pkozlowskiopensource working merging", "d": "5/2015"}, {"body": "moving needed inlinetemplates js way inline html jelbourn use cases theming needed", "d": "5/2015"}, {"body": "closing todo items part mhevery opening issue change detector drain queue today queue broowser queue dart queue exposed ngzone", "d": "5/2015"}, {"body": "close latest simplifications render layer would extend instead messagebus use actions special bound element indices app side render side events communicating render app side general idea communication assume parts template component virtual element exist dom used communicating actionsproperty values renderer receiving events", "d": "5/2015"}, {"body": "implementation notes create also implements interface forwards calls right implementation already contain property dispatcher need know anything concrete classes", "d": "5/2015"}, {"body": "needed benchmarks ads next", "d": "5/2015"}, {"body": "hmm think got nonaddressed problem normally could use bind attribute currently dash camel case conversion compiler since attributes ex dash valid part attribute name crux problem got camel dashcased valid attribute names solution think specialcase svg attributes ex dash camel case conversion specialcase aria attributes used compiler would probably vote specialcasing svg attributes since ones browser allow camelcased attributes", "d": "5/2015"}, {"body": "duplicate allow overriding names", "d": "5/2015"}, {"body": "mhevery existing test bed api based internal classes lacks integration event loop specifically microtasks change detection vicb think proposal need start working asap blocked something urgent please reassign ok dropping static api short term solution", "d": "5/2015"}, {"body": "yjbanov think requested features available excepted via priority right make testbed public might good idea reassign item someone bandwidth amp knows render architecture better working lot zones lately come working solution microtasks jsdart hopefully sometime week resume work today js know microtask make impossible also think first focus imperative api starting think static api also need instrument cd fully cover proposal created separate issue", "d": "5/2015"}, {"body": "looking yegor proposal could work focusing dart report back blockers", "d": "5/2015"}, {"body": "matanlurey working atm making sure nt duplicate effort", "d": "5/2015"}, {"body": "using dart quivertestingasync library replaced ready", "d": "5/2015"}, {"body": "plan use fakeasync dart lolex js come dart amp js wrappers think easier js zone also", "d": "5/2015"}, {"body": "work", "d": "5/2015"}, {"body": "superseded closing", "d": "5/2015"}, {"body": "separate proposal mprobst completely get rid basic wrappers generate right code dart side closing needed", "d": "5/2015"}, {"body": "closed claims fix nt actually cover non angularcore developer case also asking thing", "d": "5/2015"}, {"body": "jelbourn thomasburleson story", "d": "5/2015"}, {"body": "vicb status", "d": "5/2015"}, {"body": "closer ever currently working zonejs help igorminar btford get bugs still resists kill hopefully something early next week", "d": "5/2015"}, {"body": "fixed via", "d": "5/2015"}, {"body": "ping", "d": "5/2015"}, {"body": "updates nt seen also nt time take look fixes root massive logs problem go cleanup milestone", "d": "5/2015"}, {"body": "close reopen shows wed may julie ralph notifications githubcom wrote updates nt seen also nt time take look fixes root massive logs problem go cleanup milestone reply email directly view github", "d": "5/2015"}, {"body": "ts fy closing", "d": "5/2015"}, {"body": "closing comments", "d": "5/2015"}, {"body": "fixed since last release zonejs", "d": "5/2015"}, {"body": "nice confirm works", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "assigning back mhevery decision assignment", "d": "5/2015"}, {"body": "closing may come back based user feedback road", "d": "5/2015"}, {"body": "think leave community", "d": "5/2015"}, {"body": "updated contributing doc", "d": "5/2015"}, {"body": "jelbourn still open", "d": "5/2015"}, {"body": "matanlurey nt able sit talk yet try today", "d": "5/2015"}, {"body": "talked matan today went dialog prototype built impressions existing primitives dynamiccomponentloader seem fine things like dialogs notifications etc apis still clunky things like menu select autocomplete thinking tbosch changes component renderers potential solve issue also talked adding intermediate overlay service top dynamiccomponentloader sentiment seems probably highly valuable addition stage would add another api surface would support like revisit closer release built style component see common elements going close track leftover concerns", "d": "5/2015"}, {"body": "superseded", "d": "5/2015"}, {"body": "closing favor", "d": "5/2015"}, {"body": "closing favor", "d": "5/2015"}, {"body": "tbosch guess much experience stack trace would mind looking", "d": "5/2015"}, {"body": "covered", "d": "5/2015"}, {"body": "yjbanov difference null suppression elvis operator sorry confusion", "d": "5/2015"}, {"body": "started work elvis parserast part ready cd part tricky need skip records amp mess coalesce records work next week", "d": "5/2015"}, {"body": "everyone forget already language extensions called pipes filters", "d": "5/2015"}, {"body": "actually nt need skip records submit pr soon everyone forget already language extensions possible implement via pipes meant", "d": "5/2015"}, {"body": "vicb meant response add one argument angular extending javascript true since surprising developer learn extensions binding syntax suggesting decision add extensions already made pipes pipes javascript syntax surprising developer rather assuming javascript saying argument stands ground also argue refactor pipes elvis macros simpler developer reason new syntax macros macro thing whole argument add elvis since breaking assumed angular conventions already pipes", "d": "5/2015"}, {"body": "examples working webkit nightly months june july safari update maybehopefully incorporate fixes babel least works around polyfilling collections safari maybe browsers sure ts bug probably closable since collections issue likely blocker moment", "d": "5/2015"}, {"body": "mentioned think safe close googletraceurcompiler seems like might fix remaining issues eventually since moving away traceur probably nt matter", "d": "5/2015"}, {"body": "issue probably broken smaller ones work done npm shrinkwrap make smaller bugs also one making shrinkwrap work better need npm node version travis fix rough edges everyone hits update shrinkwrap", "d": "5/2015"}, {"body": "obsolete", "d": "5/2015"}, {"body": "important unless hear user pain", "d": "5/2015"}, {"body": "closing already possible", "d": "5/2015"}, {"body": "changedetector implementation next actually use pregenerated change detectors available", "d": "5/2015"}, {"body": "closed", "d": "5/2015"}, {"body": "closing since really bug feature", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "see update extension exposes functions called via protractor see functions achieve approximately desired however nt know expected format profile json example corresponding specjs mentioned", "d": "5/2015"}, {"body": "solved problem access functions also webdriver tests mon may pm hank duan notifications githubcom wrote see update extension exposes functions startprofiler stopandrecord forcegc called via protractor see functions achieve approximately desired however nt know expected format profile json example corresponding specjs mentioned reply email directly view github", "d": "5/2015"}, {"body": "yes although certain fix might browser upgrade config change able try checking xpi github repo", "d": "5/2015"}, {"body": "plugin forward original data firefox keep simple possible add new webdriverextension class benchpress transformation outside plugin would think long takes move plugin repo add unit integration tests mon may pm hank duan notifications githubcom wrote yes although certain fix might browser upgrade config change reply email directly view github", "d": "5/2015"}, {"body": "want data forwarded right saves data specified file terms tests add integration test fairly quickly unit tests nt make much sense since wrapper core firefox", "d": "5/2015"}, {"body": "see", "d": "5/2015"}, {"body": "obsolete", "d": "5/2015"}, {"body": "planned ts guess nothing target", "d": "5/2015"}, {"body": "talking template syntax example since returning", "d": "5/2015"}, {"body": "applicable", "d": "5/2015"}, {"body": "already fixed different way", "d": "5/2015"}, {"body": "obsolete", "d": "5/2015"}, {"body": "relevant", "d": "5/2015"}, {"body": "jeff please carry thinking open issue anything needs workprs", "d": "5/2015"}, {"body": "nt work well typescript see", "d": "5/2015"}, {"body": "issue types nt reference runtime believe ms solve nothing angular", "d": "5/2015"}, {"body": "even test browsers later nice get issues way perhaps simple things vendor prefixes example would like patch elementmatches browseradapterts calls elementmatches string still prefixed msmatchesselector ie edge breaks template uses browsers everything else comes result well", "d": "5/2015"}, {"title": "vue amp polymer", "body": "hi anybody try using vue together polymer example designing view containing polymer components bound vue viewmodel technical limitation sense could make two layers clash thx", "num": "884", "d": "5/2015"}, {"title": "failed resolve component", "body": "moderate size app working time somehow broke stripped app find change broke got way small example even getting someone please tell nt work vue require vue vuecomponent header template hello world documentbodyinnerhtml new vue el body", "num": "883", "d": "5/2015"}, {"title": "filterby searches fields time", "body": "object inside another object data data employees name john age company name paul ice name paul age company name john deere trying filter employee name company name nt work seems like entire array searched js fiddle searching paul show paul paul amp john searching age nt return anyone something wrong bug", "num": "880", "d": "5/2015"}, {"title": "shit answer", "body": "", "num": "879", "d": "5/2015"}, {"title": "\u5199\u4e86\u4e2a\u81ea\u5b9a\u4e49\u6307\u4ee4directive", "body": "\u5199\u4e86\u4e2a\u81ea\u5b9a\u4e49\u6307\u4ee4directive", "num": "878", "d": "5/2015"}, {"title": "vmodel working without default values", "body": "initial value set checkbox three output working properly checkboxes selected object changed nothing changes output", "num": "877", "d": "5/2015"}, {"title": "bind dom stuff vel vue objects", "body": "might noobish question nt see would expect addremove class hidden div test toggle radio button case far tell array dom objects vue object bind dom object vue object hope makes sense", "num": "876", "d": "5/2015"}, {"title": "vrepeat", "body": "", "num": "875", "d": "5/2015"}, {"title": "vcomponent mount point classname brakes dynamic classes child elements", "body": "strange thing insect elements cases", "num": "874", "d": "5/2015"}, {"title": "add problem", "body": "html javascript var vue require vue var data globaldata foo bar something var app globalapp new vue data data template foobar foobao mount app var new vue data datafoo template bar mount invoke add console nothing happened think might datafoo observed root data invoke add helpfull trigger deps datafoo", "num": "873", "d": "5/2015"}, {"title": "pagination filterby issue", "body": "able update pagination data properties computed properties use filterby filter students property use filterby want able change computed properties reflect search make sense", "num": "872", "d": "5/2015"}, {"title": "order lifecycle events fired relative child components", "body": "particular like know events child components fired handled fired parent component", "num": "871", "d": "5/2015"}, {"title": "replace true nt play nicely multiple bindings via vwith", "body": "let say parent component template html element child component inside parent component option set consequent result child component receives binding whereas undefined let know need clarifications thanks dhruv", "num": "870", "d": "5/2015"}, {"title": "setting property array initialized empty object causes mayhem", "body": "hi thanks great work look fiddle imagine create vue instance attribute data hash initialized empty object attribute rewritten array full data one would expect directives like vrepeat etc pick however bindings seem get messed directives nt work expected fiddle exemplify issue let know need info dhruv", "num": "869", "d": "5/2015"}, {"title": "vshow ca nt used vrepeat", "body": "latest version vuejs use vrepeat vshow vshow appear abnormal example tip following error error evaluating expression requireremain typeerror read property remain undefined", "num": "868", "d": "5/2015"}, {"title": "", "body": "", "num": "867", "d": "5/2015"}, {"title": "\u9700\u8981\u4e00\u4e2a\u76d1\u542cview model\u6539\u53d8\u540e \u9875\u9762\u91cd\u65b0\u6e32\u67d3\u5b8c\u6210\u7684\u4e8b\u4ef6", "body": "\u4f7f\u7528ajax\u8bfb\u53d6\u6570\u636e\u7ed9 data\u8d4b\u503c \u9875\u9762\u6e32\u67d3\u662f\u5f02\u6b65\u7684 \u4f1a\u5bfc\u81f4\u5728ajax\u56de\u8c03\u4e2d\u8fdb\u884c\u7684dom\u64cd\u4f5c\u65e0\u6cd5\u540c\u6b65\u5b8c\u6210 \u6211\u60f3\u5e94\u8be5\u6709\u4e00\u4e2a\u80fd\u591f\u76d1\u542c\u6e32\u67d3\u5b8c\u6210\u7684\u4e8b\u4ef6 \u7136\u540e\u5728\u8fd9\u4e2a\u4e8b\u4ef6\u4e2d\u8fdb\u884c\u8fd9\u4e9bdom\u64cd\u4f5c", "num": "866", "d": "5/2015"}, {"title": "filter parameters spaces", "body": "writing filter date formatting using vue momentjs parameters split space filter uses first part filter parameter string contains single quote marks date rendered like", "num": "865", "d": "5/2015"}, {"title": "uncaught typeerror read property entrydeep null", "body": "attempt reproduce jsfiddle happens navigation able load external data vm component deep watcher set unset trying load new entry caused navigation", "num": "864", "d": "5/2015"}, {"title": "broken von inside component", "body": "used work upgrading versions nt work anymore cant figure js click click code generates errors depending call function inside generates generates would like pass event object method heres fiddle", "num": "863", "d": "5/2015"}, {"title": "multiple arguments custom directives", "body": "wanted build form element directive based upon arguments passed calling need way extract arguments object current api working tried far returns", "num": "862", "d": "5/2015"}, {"title": "delete model recursive component", "body": "trying build page tree similar tree view example would go adding way delete node example button would delete click example code looks like adding method makes sense nt know reference particular model root model help would appreciated", "num": "860", "d": "5/2015"}, {"title": "plugins vueresource vuevalidator", "body": "hi evan first thanks creating great framework using actively months building upcoming release open source cms called pagekit developing needed extra features available right started create vue plugins plugins work similar like angular counterparts know plugins mentioned discussions already want share efforts vue community let know think", "num": "859", "d": "5/2015"}, {"title": "\u5165\u95e8\u6587\u6863 \u5217\u8868\u5c55\u793a index \u6ca1\u6709\u8f93\u51fa\u7d22\u5f15\u5440", "body": "\u6a21\u7248\u91cc\u4f7f\u7528 index thinkphp\u7684\u6a21\u7248\u6807\u7b7e\u662f\u8fd9\u6837 xxxx \u9875\u9762\u4e0a\u663e\u793a\u662f\u8fd9\u6837 \u7684 bar \u6211\u628a\u6211\u7684\u9875\u9762\u5b8c\u5168\u5199\u6210\u9759\u6001\u7684\u6253\u5f00\u662f\u53ef\u4ee5\u663e\u793a \u7d22\u5f15\u7684 html index parentmsg childmsg", "num": "858", "d": "5/2015"}, {"title": "support dynamic property element", "body": "reason ignoring changes binding diff asrcdirectivesmodelselectjs bsrcdirectivesmodelselectjs moduleexports initoptionscall optionsparam thisnumber thischeckparam number null thismultiple elhasattribute multiple thislistener function var value selfmultiple var value selfelmultiple getmultivalue el elvalue value selfnumber moduleexports jshint eqeqeq false var el thisel elselectedindex var multi thismultiple amp amp isarray value var multi thiselmultiple amp amp isarray value var options eloptions var optionslength var option function buildoptions parent options function checkinitialvalue var initvalue var options thiseloptions var multiple thiselmultiple var l optionslength lt l options hasattribute selected thismultiple multiple initvalue initvalue push options value else", "num": "857", "d": "5/2015"}, {"title": "", "body": "\u5165\u95e8\u6587\u6863\u4e0d\u662f\u5f88\u8be6\u7ec6\u554a", "num": "856", "d": "5/2015"}, {"title": "\u5f02\u6b65\u83b7\u53d6\u5217\u8868\u6570\u636e\u9875\u9762\u6a21\u7248\u6709\u77ed\u6682\u7684 \u6a21\u7248\u6807\u7b7e", "body": "html name", "num": "855", "d": "5/2015"}, {"title": "npm install", "body": "wondering components working locally perfectly jsfiddle installs version instead", "num": "854", "d": "5/2015"}, {"title": "rangeerror maximum call stack size", "body": "html key nickname", "num": "853", "d": "5/2015"}, {"title": "ca nt get vtransition work nested vrepeat array object", "body": "repeating repeated arrayobject properties transitions seems work array object press add colors button show issue", "num": "852", "d": "5/2015"}, {"title": "orderby filter object vrepeat", "body": "discussed gitter chatroom nt work vrepeating object", "num": "850", "d": "5/2015"}, {"title": "", "body": "", "num": "848", "d": "5/2015"}, {"title": "\u8f7d\u5165html\u6a21\u7248\u6709\u6ca1\u6709\u7b80\u5355\u7c7b\u4f3cangular\u7684cache\u673a\u5236\u5462", "body": "\u5fae\u4fe1 hepking", "num": "847", "d": "5/2015"}, {"title": "vhtml \u91cc\u52a0 von", "body": "vhtml \u91cc\u52a0 von", "num": "846", "d": "5/2015"}, {"title": "mutating prototype object cause code run slowly", "body": "data", "num": "845", "d": "5/2015"}, {"title": "watch multiple properties single callback", "body": "think able array data properties given callback javascript watch x z function something watch x z function something exactly pressing easily make multiple statements", "num": "844", "d": "5/2015"}, {"title": "paramattributes unobserved data vmodel", "body": "trying use expression references potentially unobserved data property parent object would like pass attribute component represents value bound see jsfiddle example property works fine already defined fields nt effect intended behavior", "num": "843", "d": "5/2015"}, {"title": "breaks repeat using", "body": "issue seems present behaviour identical disclosed issue", "num": "842", "d": "5/2015"}, {"title": "attach multiple event handlers von directive", "body": "need track delete enter keypress event input field invoke different method anyone knows thanks", "num": "841", "d": "5/2015"}, {"title": "something like vm viewupdated callback", "body": "sometimes need use jquery plugin dependencyfree library view update read attributes properties element example form validation plugin point view nt updated wrapping code settimeout tricky guarantee work better method achieve", "num": "840", "d": "5/2015"}, {"title": "possible digest bug", "body": "length index result", "num": "838", "d": "5/2015"}, {"title": "using vwith paramattributes", "body": "use along param attributes ignored seems like nt merge attributes vwith object narrowed minimal app html also found jsfiddle expecting result instead says param simply ignored", "num": "837", "d": "5/2015"}, {"title": "replace true component vrepeat root node", "body": "case child component rendered properly vuejs version created fiddle way fiddle switch class toggle vclass condition value heavy calculation child component transition class blocked calculation completed know may bug fix", "num": "835", "d": "5/2015"}, {"title": "resetting forms", "body": "clears inputs data still", "num": "833", "d": "5/2015"}, {"title": "mixins use", "body": "hi could please elaborate little mixins sample like use order inherit common viewmodels behavior get thanks", "num": "832", "d": "5/2015"}, {"title": "vrepeat index param", "body": "hello since lasts commits param index working vrepeat class use like always shows undefined use com style works strange becase befoure using parameter users like user parameter worked", "num": "831", "d": "5/2015"}, {"title": "set paramattributes value component initialization", "body": "consider requirement avatar component accepts param specified use object directly otherwise retrieve user object code problem seems set paramattributes value component initialization maybe using computed attribute solve requirement wondering wrong code", "num": "830", "d": "5/2015"}, {"title": "priority vwith vrepeat", "body": "using component seem processed first angular ngrepeat higher priority know", "num": "829", "d": "5/2015"}, {"title": "class vcomponent override class first node", "body": "classes vcomponent override class first node template bug desired behavior maybe append classes first node good", "num": "828", "d": "5/2015"}, {"title": "vattr nt set paramattributes regression", "body": "also expression vattr changes value component updated see first click example using vwith second click fixes sure intended way would great vattr worked since works normal html elements eg class updates truefalse div causes change color", "num": "827", "d": "5/2015"}, {"title": "use dynamic arg vstyle", "body": "like html know use computed value issue ie html thanks", "num": "826", "d": "5/2015"}, {"title": "object list repeating orderby filter", "body": "got little bug vrepeat using orderby filter expected sorting object list using value key definition example", "num": "825", "d": "5/2015"}, {"title": "component inlinetemplate vrepeat", "body": "updating catch bug inline templates vue nt handle component variables template using template tag vrepeat vcomponent div tag replace option anything ok example", "num": "824", "d": "5/2015"}, {"title": "\u5b98\u65b9\u6587\u6863\u91cc\u6ca1\u6709\u63d0\u5230von\u80fd\u591f\u76d1\u542c\u7684event\u7684\u5217\u8868", "body": "example\u4e2d\u63d0\u5230\u4e86click\u548ckeyup\u4e24\u4e2a\u4e8b\u4ef6 \u8fd9\u663e\u7136\u4e0d\u662f\u6807\u51c6\u7684dom\u4e8b\u4ef6 \u5efa\u8bae\u628a\u80fd\u591f\u76d1\u542c\u7684\u4e8b\u4ef6\u8865\u5168", "num": "823", "d": "5/2015"}, {"title": "custom element tag vrepeat breaking regression", "body": "worked like champ components render raise warning", "num": "822", "d": "5/2015"}, {"title": "component comment", "body": "updated vue got error property component used comment node instead element reverting back fixed issue perhaps know straight away issue try make minimal testcase", "num": "821", "d": "5/2015"}, {"title": "vrepeat vcomponent ca nt use replace true cases", "body": "noticed ca nt use vrepeated component frustrating fortunately found solution see working child component see fiddle try comment got error local project got kind error like nt method design change feature think prevents develop fully independent components also thank great work", "num": "820", "d": "5/2015"}, {"title": "ca nt remove array item item", "body": "learned array item removed index given value item however try remove array item item working jsfiddle", "num": "819", "d": "5/2015"}, {"title": "ongoing transitions break browser tab background", "body": "open simple slider vue wait slider start open browser console page switch another browser tab wait minute come back fiddle look console see error open console separate window look wait error popus error", "num": "818", "d": "5/2015"}, {"title": "use comments view templates using", "body": "transcludetemplate function tries add attributes comment nodes believe check whether node comment may something wrong feel free correct", "num": "817", "d": "5/2015"}, {"title": "vrepeat vcomponent paramattributes", "body": "using able compile statement using properties item directive html however use values items within compiling component like html intended", "num": "816", "d": "5/2015"}, {"body": "think appropriate place question vuejsdiscussion repo", "d": "5/2015"}, {"body": "azamat said polymer based web components spec importantly custom elements use vue components custom elements see", "d": "5/2015"}, {"body": "info select line elements tab devtools inspector see", "d": "5/2015"}, {"body": "running vue chromeos browser version platform official build stablechannel samus firmware ubuntu", "d": "5/2015"}, {"body": "problem vue beta version packagejson dependency set accidentally got beta version nt expect set got everything worked intentional change bug", "d": "5/2015"}, {"body": "please refer thread upcoming breaking changes", "d": "5/2015"}, {"body": "need wrap quotes otherwise vue look data property vm instead need write", "d": "5/2015"}, {"body": "thank nt realize pass literal string thought employee scope", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "seems general problem new properties set", "d": "5/2015"}, {"body": "limitation current path parser nt handle dynamic path segments dynamic static thus able call keys exist improved future best practice always prefer providing default values use sparingly", "d": "5/2015"}, {"body": "ok understand second fiddle change set add also change output bug fixed yesterday", "d": "5/2015"}, {"body": "interesting works using", "d": "5/2015"}, {"body": "uwe unrelated fix simply calls hood key present path static checked step step path dynamic evaluate expression works keys along path already created observed", "d": "5/2015"}, {"body": "supported branch via however also warning suggesting preinitialize fields", "d": "5/2015"}, {"body": "simply gives reference raw dom node also use radio would suggest reading whole guide nt done please post nonbug issues", "d": "5/2015"}, {"body": "\u5728 repeat", "d": "5/2015"}, {"body": "vreapt", "d": "5/2015"}, {"body": "\u9664\u975e\u4f60\u52a0\u4e86 nexttick \u4f1a\u4e0d\u7cbe\u786e nexttick", "d": "5/2015"}, {"body": "fixed beta", "d": "5/2015"}, {"body": "yes seems work correctly fiddle", "d": "5/2015"}, {"body": "wo nt work case", "d": "5/2015"}, {"body": "actually instead", "d": "5/2015"}, {"body": "precisely question", "d": "5/2015"}, {"body": "quite sure get mean maybe code snippet", "d": "5/2015"}, {"body": "lifecycle events fire bottom child components hooks fire first", "d": "5/2015"}, {"body": "cool thanks documented somewhere", "d": "5/2015"}, {"body": "hmm nt think explicitly documented add updating docs", "d": "5/2015"}, {"body": "version using ca nt reproduce please include repro format jsfiddle", "d": "5/2015"}, {"body": "commented parent vm uncomment throw error console", "d": "5/2015"}, {"body": "thanks fiddle issue fixed current upgrade might want add toplevel element component eg", "d": "5/2015"}, {"body": "thank", "d": "5/2015"}, {"body": "fix landed beta however general would advice usage try use consistent data format block", "d": "5/2015"}, {"body": "thanks", "d": "5/2015"}, {"body": "closing bug see vuejsdiscussion", "d": "5/2015"}, {"body": "\u5b8c\u5168\u4e0d\u660e\u767d\u4f60\u7684\u610f\u601d", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "\u5199\u4e00\u4e2a\u81ea\u5b9a\u4e49\u6307\u4ee4 custom directive", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "vuenexttick", "d": "5/2015"}, {"body": "\u8fd9\u4e2aapi\u4f3c\u4e4e\u4e0d\u80fd\u6ee1\u8db3\u6211\u76ee\u524d\u7684\u4e1a\u52a1\u9700\u6c42 \u6211\u7684\u4f7f\u7528\u573a\u666f\u662f\u7ed3\u5408iscroll\u548czeptoajax ajax\u5f02\u6b65\u8bfb\u53d6\u6570\u636e\u8d4b\u503c\u7ed9vue\u5bf9\u8c61\u7684 data \u5728\u9875\u9762\u6e32\u67d3\u5b8c\u6210\u540e\u9875\u9762\u957f\u5ea6\u53d1\u751f\u53d8\u5316 iscroll\u5fc5\u987b\u5e94\u8be5\u6267\u884crefresh\u624d\u80fd\u6b63\u5e38\u4f7f\u7528 \u6211\u5728nexttick\u4e2d\u6267\u884c\u8fd9\u4e2a\u56de\u8c03\u662f\u4e0d\u8d77\u4f5c\u7528\u7684 \u6700\u540e\u88ab\u8feb\u4f7f\u7528\u4e86settimeout \u6211\u89c9\u5f97\u5e94\u8be5\u662f\u6709\u66f4\u597d\u7684\u529e\u6cd5\u7684", "d": "5/2015"}, {"body": "nexttick vrepeat", "d": "5/2015"}, {"body": "\u6211\u7406\u89e3\u4e86 \u5e94\u8be5\u662f\u6bcf\u6b21\u8d4b\u503c\u540e\u8c03\u7528nexttick \u6211\u770b\u6587\u6863\u4e0a\u5199nexttick\u662f\u5168\u5c40api \u8bef\u4ee5\u4e3a\u662f\u4e00\u6b21\u914d\u7f6e\u540e\u5168\u5c40\u90fd\u4f1a\u8fc7\u6765\u8dd1\u8fd9\u4e2a\u56de\u8c03", "d": "5/2015"}, {"body": "jsfiddle workaround", "d": "5/2015"}, {"body": "confirm quote passed upon time something thought ok behaviour removed quotes manually btw thing without momentjs", "d": "5/2015"}, {"body": "yeah think time nt want quotes would make sense vue strip need use alternating quotes", "d": "5/2015"}, {"body": "reason contains quotes filter differentiate raw strings vs dynamic bindings eg vs", "d": "5/2015"}, {"body": "ah see problem though someone writes filter without using stripquotes able accept parameters spaces example using pluralize", "d": "5/2015"}, {"body": "hmm good point two options autostrip quotes builtin filters although means every custom filter also need make filter syntax consistent strings quotes treated data property vm think may good opportunity introduce second", "d": "5/2015"}, {"body": "filter sometimes receives object instead simple string times string normal one href receives object two receive strings", "d": "5/2015"}, {"body": "looks like attributes cause become object", "d": "5/2015"}, {"body": "nkovacs noted fix next beta release", "d": "5/2015"}, {"body": "thanks", "d": "5/2015"}, {"body": "let move since likely caused router implementation", "d": "5/2015"}, {"body": "scoperelated breaking changes since content inside component transcluded compiled parent scope looking method parent instead child get old behavior adding component html content treated component template ref", "d": "5/2015"}, {"body": "comma separating list considered multiple clause item gets directive instance first instance second one seems case trying bend component directive directives vue supposed handle simple mapping data property dom manipulation want something encapsulates complex behavior especially accepting options use component instead", "d": "5/2015"}, {"body": "components good place dom manipulation", "d": "5/2015"}, {"body": "whatever want inside component leverage builtin directives direct manipulation", "d": "5/2015"}, {"body": "okay cool make sense angular says keep directives react says components vue says let fancy stuff components keep directives small manipulations", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "great missed somehow thanks seeing delete node something tells unrelated", "d": "5/2015"}, {"body": "directly accessing usually recommended case recursive components makes things easier otherwise could use event system send event parent make decoupled", "d": "5/2015"}, {"body": "wow really nice plans early obviously never enough bandwidth actually get would love standalone projects help get exposurecontribution", "d": "5/2015"}, {"body": "currently another vuevalidator project maintained kazupon vueresource definitely could fill gap missing", "d": "5/2015"}, {"body": "steffans want share efforts vue community welcome efforts hope vuejs community users increase", "d": "5/2015"}, {"body": "yes sure standalone projects plugins would nice vuevalidator plugin implementation differs current one works without provides form events kazupon might take look plugin maybe features merged", "d": "5/2015"}, {"body": "cool would testuse vueresource almost apps using vue ship standalone plugin npm possible many thanks sharing", "d": "5/2015"}, {"body": "steffans", "d": "5/2015"}, {"body": "steffans looked vuevalidator plugin implementation project maybe merge features builtin validators event merge forms attribute based validation design philosophy validation different vuejsvuevalidator vuevalidator project ca nt tell better", "d": "5/2015"}, {"body": "looked vueresource pagekitpagekit project cool think share standalone project vuejsvueresource maintained steffans", "d": "5/2015"}, {"body": "kazupon yes validator plugin based current angular implementation uses name attribute like idea moving resource plugin vuejsvueresource add repo move current code", "d": "5/2015"}, {"body": "steffans invited vueresource team vuejs org", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "hmm feels weird change type select end indeterministic data structure form specific use case example", "d": "5/2015"}, {"body": "use case rather anecdotal came demo selector component", "d": "5/2015"}, {"body": "see open pr proposed change ideally test case", "d": "5/2015"}, {"body": "fair enough ok rely mutationobserver", "d": "5/2015"}, {"body": "nt think vue bottom line support nt mutationobserver", "d": "5/2015"}, {"body": "\u8bf7\u770b\u5b8c\u6587\u6863\u518d\u5f00", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "belinchung", "d": "5/2015"}, {"body": "\u4e24\u4e2a\u9009\u62e9 \u4e0d\u8981\u76f4\u63a5\u5199\u5728 dom \u7684\u5f62\u5f0f \u7528", "d": "5/2015"}, {"body": "brings breaking changes see release notes pin specific version", "d": "5/2015"}, {"body": "also tagged default installed version", "d": "5/2015"}, {"body": "exactly figured happened thought would useful warn newbies like may messed doc see release notes wonder official replacements vcomponent vwith beacome fond way thank much awesome library", "d": "5/2015"}, {"body": "still development follow along discussion", "d": "5/2015"}, {"body": "appear error", "d": "5/2015"}, {"body": "data look like", "d": "5/2015"}, {"body": "look like", "d": "5/2015"}, {"body": "method line result triggers diff outer repeat mutated via diff setting index new array result diff algorithm thinks brandnew set data full rerender thus transitions triggered one option simply mutate current child array triggers update inner repeat outer one transitions would work expected note approach trigger update compare repeat one using index access register dependency expression tracks mutation", "d": "5/2015"}, {"body": "ah thanks much unclear part code worked well thought love vue", "d": "5/2015"}, {"body": "seems already fixed", "d": "5/2015"}, {"body": "vue \u672c\u8eab bug \u7684\u95ee\u9898\u8bf7\u53d1\u5230", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "\u4f7f\u7528 id", "d": "5/2015"}, {"body": "\u6211\u73b0\u5728\u57fa\u672c\u4e0d\u8bbe id \u53ea\u628a body", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "vhtml \u53ea\u7528\u4e8e\u8f93\u51fa\u9759\u6001", "d": "5/2015"}, {"body": "\u8fd9\u662f\u53ea\u6709 firefox \u624d\u4f1a\u62a5\u7684 vue", "d": "5/2015"}, {"body": "nt think improvement significant enough complicating api thanks suggestion", "d": "5/2015"}, {"body": "twoway binding using dynamic expression parsed static path thus vue generate dynamic setter basically nt call property nt already exist comparison static path generates setter loop path segments call key nt exist already case probably necessary ensure fields observed manually calling field", "d": "5/2015"}, {"body": "since available observed objects would possible use place directly setting path enable use dynamic expressions", "d": "5/2015"}, {"body": "would require nontrivial changes current path parser sure use case worth effort least", "d": "5/2015"}, {"body": "worries mostly curious familiar internals feel free close nt something plan implement time soon", "d": "5/2015"}, {"body": "take look comments pr", "d": "5/2015"}, {"body": "found answer thanks", "d": "5/2015"}, {"body": "ok saw vuenexttick", "d": "5/2015"}, {"body": "also helps somehow docs vm watch returns unwatch function stops firing callback", "d": "5/2015"}, {"body": "length evaluated block executed common pattern", "d": "5/2015"}, {"body": "yeah somehow nt work always updated pr check result truthy calling", "d": "5/2015"}, {"body": "closing error might thrown bug line mentioned source problem", "d": "5/2015"}, {"body": "recommended mix fulldata replace singleprop essentially trying mutate object passed component additional properties better pass object another property getting removed fulldata replace also longer supported", "d": "5/2015"}, {"body": "thanks fix second problem reproduct yosemite chrome yosemite safari chrome looks ok ok means browser wait calculation completed start transition yosemite chrome looks transition started button clicked refreshed calculation completed difficult describe behavior maybe put video animated gif helpful", "d": "5/2015"}, {"body": "probably chrome handles css transitions heavy computations computed property nt sound like good idea first place", "d": "5/2015"}, {"body": "closing since root node issue fixed branch", "d": "5/2015"}, {"body": "add listener form element reset data might bit inconvenient gives flexibility reset set nonempty default values", "d": "5/2015"}, {"body": "oh thought empty data automatically figured resetting form nt fire inputs change events", "d": "5/2015"}, {"body": "read example let know feel example nt clear enough work improving doc", "d": "5/2015"}, {"body": "spotted code snippet guide ca nt understand example leverage way order add private section hidden data members methods viewmodels also moduleexport require api shown sample come thanks il evan notifications githubcom ha scritto read example let know feel example nt clear enough work improving doc reply email directly view github", "d": "5/2015"}, {"body": "every field inside mixin mixed component object component instance component options contains fields fields merged together example may multiple components need hooks tedious define hooks extract hooks mixin let components use mixin sure mean hidden section always add object vm instance use namespace private stuff eg created hook set make sure key unlikely conflict people code assumes using commonjs module bundler build app explained section building larger apps", "d": "5/2015"}, {"body": "got thanks", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "component data nt field thus set nt trigger update think make sense default make paramattributes observed meanwhile get around using", "d": "5/2015"}, {"body": "great solved think make sense default make paramattributes observed think really good necessary api document paramattributes noted array attribute names set vue instance initial data useful passing data component seems equal options poor english", "d": "5/2015"}, {"body": "priority issue second case available property component bind parent scope property first case works outer provides extra layer scope", "d": "5/2015"}, {"body": "means proper way combine component using tag like little weird acceptable close", "d": "5/2015"}, {"body": "proper behavior attributes component template overwriting placeholder merging complex need compiled different scopes", "d": "5/2015"}, {"body": "hmm supposed work normal attributes although happened worked past versions nt really recommend usage instead simply", "d": "5/2015"}, {"body": "right got used vattr nt even think use normal attribute syntax saying components essentially custom elements would great worked normal elements", "d": "5/2015"}, {"body": "html accepts string inline css", "d": "5/2015"}, {"body": "works css split thank much", "d": "5/2015"}, {"body": "\u5b9a\u4e49\u4e00\u4e2acomponent javascript vuecomponent testa template aaaa \u518d\u5b9a\u4e49\u4e00\u4e2acomponent javascript vuecomponent testb template \u624d\u80fd\u5f97\u5230\u6b63\u5e38\u7ed3\u679c", "d": "5/2015"}, {"body": "dalphyx jsfiddle", "d": "5/2015"}, {"body": "\u5c31\u662f\u6807\u51c6\u7684 dom \u4e8b\u4ef6\u554a", "d": "5/2015"}, {"body": "\u6807\u51c6\u7684dom", "d": "5/2015"}, {"body": "onclick", "d": "5/2015"}, {"body": "\u57fa\u672c\u529f\u4e0d\u624e\u5b9e", "d": "5/2015"}, {"body": "thank really appreciate fast turnaround", "d": "5/2015"}, {"body": "accessing directly error thrown vue internally latter appreciate jsfiddle", "d": "5/2015"}, {"body": "directly indeed", "d": "5/2015"}, {"body": "probably using component toplevel elements result block instance basically manages block nodes defined vstart comment node vend comment node previously block instance points first toplevel element points comment node case curious trying block instance since conceptually nt root node", "d": "5/2015"}, {"body": "ah completely right popup element got moved root element zindex issues kept working never noticed course nt work thanks", "d": "5/2015"}, {"body": "example remove use following template main vm instance works nt work situation", "d": "5/2015"}, {"body": "oh actually works typo template", "d": "5/2015"}, {"body": "yeah jsfiddle works trying find cause local bug thank alot", "d": "5/2015"}, {"body": "second issue try instead", "d": "5/2015"}, {"body": "ca nt called vue internals", "d": "5/2015"}, {"body": "well show code", "d": "5/2015"}, {"body": "related", "d": "5/2015"}, {"body": "figured root tag template may need warning case debug mode", "d": "5/2015"}, {"body": "sjoerdvisscher fiddle uses see", "d": "5/2015"}, {"body": "telling vue tag asking vue output vrepeat item attribute value tag think error expected case course", "d": "5/2015"}, {"body": "yeah unclear create fiddle understand mistake think warning debug mode needed case", "d": "5/2015"}, {"body": "warning message would definetely helpful right let hear decide available", "d": "5/2015"}, {"body": "actually works correctly another regression fixed expect soon", "d": "5/2015"}, {"body": "oh thanks evan", "d": "5/2015"}, {"body": "sorry use", "d": "5/2015"}, {"body": "caused transitionend events firing page regains focus happens mode fixed branch", "d": "5/2015"}, {"body": "yeah known bug part refactored branch fixed release", "d": "5/2015"}, {"body": "worked around wrapping component separate contexts", "d": "5/2015"}, {"body": "note specific usecase using property name defined item access property parent data", "d": "5/2015"}, {"body": "yeah dynamic vcomponent able access repeated context special convenience although possibly confusing one using component directives repeat container compiled parent scope using wrapper case recommended solution", "d": "5/2015"}, {"body": "thanks clarification", "d": "5/2015"}, {"body": "swear going write like nt ca nt remember smile thanks evan", "d": "5/2015"}, {"body": "ah yes simple effective thanks", "d": "5/2015"}, {"body": "error fixed branch triplecurly html always static ie contents never compiled", "d": "5/2015"}, {"body": "ok thanks", "d": "5/2015"}, {"body": "closing actionable item regarding codebase", "d": "5/2015"}, {"body": "take consideration accept nested paths expressions cost precisely tracking propertypath changed composite watcher significantly expensive extra anonymous function reality almost never perf bottleneck", "d": "5/2015"}, {"body": "yea right forgot expressions", "d": "5/2015"}, {"body": "vue updates dom asynchronously right changed items array call callback dom would updated", "d": "5/2015"}, {"body": "vue autobind functions inside data objects binding fine", "d": "5/2015"}, {"body": "quick gist people want run autoprefixer using custom preprocessors", "d": "5/2015"}, {"body": "thanks sun may kris zima notifications githubcom wrote quick gist people want run autoprefixer using custom preprocessors reply email directly view github", "d": "5/2015"}, {"body": "closing inactivity", "d": "5/2015"}, {"body": "closing since actionable repro investigate feel free reopen pops", "d": "5/2015"}, {"body": "closing inactivity", "d": "5/2015"}, {"body": "closing inactivity", "d": "5/2015"}, {"body": "closing inactivity", "d": "5/2015"}, {"body": "fixed beta", "d": "5/2015"}, {"body": "guess using", "d": "5/2015"}, {"body": "closing since likely fixed transclusion refactor", "d": "5/2015"}, {"body": "going list settable properties dom nodeelement seems actual usage dedicated directive pretty rare probably meaningful use case since others covered cases needed also trivial write custom directive leave", "d": "5/2015"}, {"body": "still plans release", "d": "5/2015"}, {"body": "inclined preserve current behavior behavior actual custom elements web components similar angular components defaulting replace true makes bit weird manually mounting instances template replace node mounted using less breakagemigrating work existing apps", "d": "5/2015"}, {"body": "closing inactivity", "d": "5/2015"}, {"body": "closing inactivity", "d": "5/2015"}, {"body": "\u8fd9\u4e2a\u95ee\u9898\u5728", "d": "5/2015"}, {"body": "vue great really process replacing jquery buggy bulky things vue easy learn understand implement gets done one thing could really improve single place discuss learn ask vuejs questions place could pointed official website laravel laravelio foruns laracasts currently series vue thats place go want clarify something laravel specially laracasts forum vuejs could really use something like currently learning together guys vueslackslackcom documentation really good sometimes things dont click right away specially coming jquery implementations need place ask answer stupid questions really stupid edit read irc channel good bad irc easily searchable many times searched something ended old discussion forums ended solving issue old stackoverflow question best regards", "d": "5/2015"}, {"body": "dominiquedutra repo need invited slack group", "d": "5/2015"}, {"body": "dominiquedutra official gitter channel prefer slack gitter better code formatting support use github account", "d": "5/2015"}, {"title": "way load collection open session", "body": "backend spring mvc springdata springsecurity front end angularjs database using mysqli like add object class using ontomany relationship try run web appi error error browser firstly post code explain understand erros model code code value object design pattern repository services class service transactional public class sitesservice sites e result hibernateinitialize egetsiteestypesite result executequeryfindall lastpage maxresults return buildresult result public void save sites site siterepositorysave site transactional readonly true public siteslistvo findbycodegsmlike int page int maxresults string codegsm page result executequeryfindbyname page maxresults codegsm sites e result hibernateinitialize egetsiteestypesite result executequeryfindbyname lastpage maxresults codegsm return buildresult result private boolean shouldexecutesamequeryinlastpage int page page result return isuserafteroronlastpage page result amp amp hasdataindatabase result private page executequeryfindall int page int maxresults final pagerequest pagerequest new pagerequest page maxresults sortbycodegsmasc page siteslist siterepositoryfindall pagerequest sites e siteslist hibernateinitialize egetsiteestypesite return siteslist return siterepositoryfindall pagerequest page siteslist siterepositoryfindbycodegsmlike pagerequest codegsm sites e siteslist hibernateinitialize egetsiteestypesite return siteslist return siterepositoryfindbycodegsmlike pagerequest codegsm private boolean isuserafteroronlastpage int page page result return page gt resultgettotalpages controller class controller requestmapping value protectedsites public class sitescontroller angularjs code scopegetcontactlist function var url scopeurl scopelastaction list consolelog data consoledebug data scopefinishajaxcallonsuccess data null false error function scopestate error scopedisplaycreatecontactbutton false scopepopulatetable function data datapagescount gt scopestate list part displaying data jsp spring mvc xml web xml filter using spring jackson jpa understand better error let us see jpahibernate handles relationship every time query database jpa bring information class exception rule talk list collection image announcement object list emails receive announcement want display announcement name user screen imagine work jpa would emails loaded name jpa created technology named lazy loading classes attributes could define lazy loading desired information loaded database needed notice code database query return sitesobject access site collection container notice site collection lazy attribute ask jpa load collection database moment query bring site collection execution exception happen jpahibernate tries access database get lazy information jpa notice opened collection exception happens lack opened database connection try many solution ca nt fix error trying change filter filter bellow app nt run easier way bring lazy list object loaded annotation best approach always traying use annotation jsonignore solve lazy error like first solution nt work jsp ca nt displaying value list way load collection open session thank advance replay", "num": "3650", "d": "5/2015"}, {"title": "nested attributes modelsave", "body": "model contains subobject attempting save model explicit indication resave subobject run issues nested object picked eventsapi method map deconstructed change change b calls correct adding silent true solves fact want notified changes", "num": "3642", "d": "5/2015"}, {"title": "collection invoke working properly", "body": "calling collection previous versions would properly call models collection specified longer seems work caused issue upgrading one applications reduced sample case jsfiddle switching backbone produces different results backbone backbone full test code javascript var model backbonemodelextend defaults b var collection backbonecollectionextend model model updateall function data return thisinvoke set data var mylist new collection var new model var new model mylistadd mylistadd mylistupdateall b models show b consolelog mylisttojson possible issue also affects underscore methods within collections able reproduce", "num": "3641", "d": "5/2015"}, {"title": "collection fetch wrongly populates byid property subsequent fetches", "body": "found issue investigating collection get nt work half time fetching collection itunes need use parse collection model first fetch empty collection works fine keys collectionbyid object see models referenced property also indicates model parse called collection addreference expected behaviour fetching collection second time options passed collectionbyid basically investigation assuming problem collection set method marks models duplicatenonexistent based presence attribute variable thing attrs parsed model parse method might exist yet case nt models later considered nonexistent removed possible fixes might include instantinating class calling parse include pull request later mentioning documentation model parse method touch", "num": "3638", "d": "5/2015"}, {"title": "nt update history async request opera", "body": "singular question please bear faced strange issue executing backbone app rather ancient browser opera routes registered browser history little research saw would happen following scenario user interaction ajax request ajax callback handler executes cases url change app could navigate route nt update browser history hence user ca nt navigate back smell browser bug created small demo bingo happens updating ajax request handler question situation looking fix found use instead backbonehistoryupdatehash method works app testing green looks like problem solved question new issue although could nt find anything regarding strange one experience safe override backbone method way see preceding method name assume nt designed override fixed backbone instead case could pr alternative workaround think thank", "num": "3634", "d": "5/2015"}, {"title": "prevent new prototyped method appear loop keys object", "body": "function want make available objects mergeobject object function defined objectprototypemergeobjects function object typeof object object return var key object objecthasownproperty key key object key return events json events click retrybtn onretrybtnclick click cancelbtn oncancelbtnclick click dialogbutton ondialogbtnclick backbone view delegateevents delegateevents function events events events result events return thisundelegateevents var key events lt loops inherited properties var method events key isfunction method method events key method continue loop events iterates inherited properties gives error mergeobjects function encountered shouldnt loop check hasownproperty events iterate parent view stop iterating base object prototype", "num": "3624", "d": "5/2015"}, {"title": "remove root trailing slash wantpuststate", "body": "example browser pushstate server force trailing slash request receive redirection visit due commit replaced url server returns redirection lead additional request time hash lost ca nt reached read thinking tailing slash also optional means", "num": "3623", "d": "5/2015"}, {"title": "documentation delegate undelegate", "body": "ca nt get right needed something remember document later", "num": "3622", "d": "5/2015"}, {"title": "api function backward compatible changes", "body": "previously way defining events map passing context worked fine upgrading need set second argument undefined define context third", "num": "3621", "d": "5/2015"}, {"title": "view events property problem", "body": "updated project noticed different behaviour update ca nt set events property view initialize function anymore least callbacks nt get triggered set events directly view property extend context still works need create selectors events dynamically therefore build events property initialize ideas", "num": "3620", "d": "5/2015"}, {"title": "default complex attributes reference multiple instances model", "body": "object specified default attribute model instances model share reference object reason nt deep clone defaults object creating new model instance currently make changes deep attribute object updating model instances design", "num": "3619", "d": "5/2015"}, {"title": "documentation underscore", "body": "matches matcher bb documentation amp link underscore site needs updated matches deprecated", "num": "3618", "d": "5/2015"}, {"title": "add events raised unexpected order collectionset", "body": "stumbled upon feature surprised slightly reflection nt think bug wanted let know decide want anything collection defines comparator add add event handler collection create new view new model render add dom populate collection multiple models either calling calling collection populated sorted correctly add events raised original order models passed collection sorted order code worked around calling instead fetching instead created js bin demonstrates hope nt mind also created blog post describing behaviour anyone else encountered would know use reset instead set", "num": "3617", "d": "5/2015"}, {"title": "listento change behavior", "body": "using release listento able listen events objects provide typical interface case ace editor session emits change events eg editsessionon change function e used listento listen events editor session using release listento appear able listen events emitted editor session present view listeningto callback longer fired using listento automatic cleanup listener function curious never supposed work manner bug changes listening quite extensive bit difficult see might key difference one unfamiliar", "num": "3611", "d": "5/2015"}, {"title": "regression collectioninvoke calling expected methods", "body": "app noticed collectioninvoke stopped forwarding arguments individual method calls upgraded backbone created reduced example seeing log anything using example works properly save html run var samplemodel backbonemodelextend samplemethod function arg consolelog arg var samplecollection backbonecollectionextend model samplemodel var samplecollection new samplecollection samplecollectionadd new samplemodel samplecollectioninvoke samplemethod samplearg test succeeds see samplearg printed console", "num": "3610", "d": "5/2015"}, {"title": "modelid getter nt work polymorphic model getter", "body": "think found bug inside version collection contains different models used getter solve upgrading trobles app collection couldnt find already exsiting models inside digged source found bug nt always model function sometimes think everybody using function custom idattribute defined backbone wo nt find already existing models overridden function using inside collection works maybe function needs something like", "num": "3608", "d": "5/2015"}, {"title": "missing packagejson", "body": "dropping stops backbone working webpack box", "num": "3607", "d": "5/2015"}, {"title": "advice add function router give users chance populate callbacks routes", "body": "suggested change router add new function callback whatever name like router users override populate callbacks according name users specified routes change wo nt affect existing projects using backbone route function route name callback isregexp route route thisroutetoregexp route isfunction name callback name name callback callback thiscallback name changed name return users override function populate callback functions according name callback function name return name simple example modules router module", "num": "3601", "d": "5/2015"}, {"title": "event handlers executed stoplistening called", "body": "issue ran might unhandled case actual bug consider following setup views b amp c b amp c listen event triggered cases b destroys remove stop listening c event triggered event handler c still executed even c already destroyed b jsfiddle aware might ideal architecturally b destroy c rather c destroy use case unavoidable also guarantee order b c bound use case point expected behaviour calling event handlers executed anymore assuming backbone internal caching callback functions event fires check anymore callbacks unbound interim bug intended behavior supposed handle case", "num": "3599", "d": "5/2015"}, {"title": "annotated source version number misleading", "body": "published annotated source gives impression annotated source version misleading really whatever state master last lost bunch time thinking gone mad consequence nt ruled would consider bumping version number master generated docs less surprising generating docs tag contents match release publishing stable amp master docs labelled happy make pr wanted see route preferred", "num": "3597", "d": "5/2015"}, {"title": "possibble create tabs navigation drawer", "body": "since days researching topic possible create tabs navigation drawer android studio", "num": "3596", "d": "5/2015"}, {"title": "method get return value default", "body": "method get value object added couple useful arguments eg user age number return na thus age user overwritten null undefined interface look good besides define function checks data type", "num": "3595", "d": "5/2015"}, {"body": "post jsfiddle showing issue able confirm working properly suspect server response model side note backbone highly encourages simple primitive attributes nested objects", "d": "5/2015"}, {"body": "dupe fixed releasing accepted", "d": "5/2015"}, {"body": "thanks sorry dupe", "d": "5/2015"}, {"body": "thanks write taking look make sure right track could also post small jsfiddle shows issue", "d": "5/2015"}, {"body": "justin probably need run code locally though use plugin cors let quickly explain going attribute model created method fetching collection twice notice first time property contains keys ids cids expected second time keys cids", "d": "5/2015"}, {"body": "looking dupe know particular problem resolved setting", "d": "5/2015"}, {"body": "may worth mentioning documentation method even issues related underlying cause like edit also people might google issue solution actually makes problem worse property never populated model ids correct approach use make sure equivalent property persisted parse like", "d": "5/2015"}, {"body": "hi thanks pointing answers questions definitely new yes methods attached prototype otherwise hidden need check new releases case changes maybe certainly look pull sent thing concerns nt think anyone actively tests opera going entirely faith passing existing tests nah got nuthin", "d": "5/2015"}, {"body": "hi braddunbar noted tested simple fix working end nevertheless trying test prove right path got tangled since ca nt test current setup qunit create pull discuss make work", "d": "5/2015"}, {"body": "testing realized solved using jquery strange reason could figure using jquery fixes issue", "d": "5/2015"}, {"body": "certainly could check properties would mildly since plain object normal case breaking change however considered antipattern modify core js prototypes define modifications", "d": "5/2015"}, {"body": "say best modify use helper function instead", "d": "5/2015"}, {"body": "dupe", "d": "5/2015"}, {"body": "ah seems commits removed call calling best follow removed early implementation pr argument juggling nt cleanest api however implementation rewritten nt see ca nt supported", "d": "5/2015"}, {"body": "think relevant pull also build events method js var view backboneviewextend events function return geteventsfor", "d": "5/2015"}, {"body": "think relevant pull makes sense wanted make sure nt oversight", "d": "5/2015"}, {"body": "also use directly", "d": "5/2015"}, {"body": "extending views mixins dynamically inside initialize method work event handler defined mixin although ok calling method manually would nice document bc break", "d": "5/2015"}, {"body": "mean mixins getting called would nice document bc break sure let fix", "d": "5/2015"}, {"body": "far know mixin pattern insert functions one object another maybe wrong naming situation event handlers talking following js var mymixin eventhandler function consolelog mixin var myview backboneviewextend events click mybutton eventhandler initialize function chose mixin dynamically ie based arguments model etc extend mymixin registered called view extended mixin btw thanks docs", "d": "5/2015"}, {"body": "ah case want try extend instead instance js var myview backboneviewextend events click mybutton eventhandler extend myviewprototype mymixin really need nt need move call view think though maybe opt handle exceptional cases event handlers instead jridgewell noted delegate events directly", "d": "5/2015"}, {"body": "know solution using places sometimes need choose right mixin based constructor arguments extending instance mixin method calling wrote right done method also drawbacks nt remember moment", "d": "5/2015"}, {"body": "common gotcha javasscript backbone better using function returns defaults instead", "d": "5/2015"}, {"body": "backbone discourage use objects model attributes", "d": "5/2015"}, {"body": "yap see", "d": "5/2015"}, {"body": "feel free open pull", "d": "5/2015"}, {"body": "mind writing small test case take look interested see code looks like", "d": "5/2015"}, {"body": "javascript test case var events var obj non backboneevents event implementation work name callback events name callback name events name null var view new backboneview viewlistento obj test consolelog viewstoplistening sideeffect fixing since listener listenee able clean memory object share private state two objects internalon used private data never leaked outside backbone also means uses internal backbone code instead public able fix sharing state privately inside backbone instead private function look performance impact", "d": "5/2015"}, {"body": "ah say contract support events systems make work probably way singleton event jridgewell seems pretty hacky brittle", "d": "5/2015"}, {"body": "reverting also trick since listener keep track events", "d": "5/2015"}, {"body": "get us kind hard follow discussions", "d": "5/2015"}, {"body": "since baby jridgewell go ahead revert think reasonable appropriate fix", "d": "5/2015"}, {"body": "fixed pretty severe memory leak javascript objon event function obj event function still holds reference obj also allowed listenee clean references javascript obj event function objoff still holds reference obj cleaned implementation nt taking library interop account hence function instead using public let get test cases setup revert know fix library interop", "d": "5/2015"}, {"body": "oh man even revert previous implementation used private nt call public reverting wo nt fix look resolve going pretty solution", "d": "5/2015"}, {"body": "point clarification current approach fine except ca nt event different events library yes", "d": "5/2015"}, {"body": "current approach fine except ca nt event different events library yes exactly", "d": "5/2015"}, {"body": "let leave current approach stands bazineta viable approach ace editor session object mixin backboneevents", "d": "5/2015"}, {"body": "number viable approaches exist one agree fwiw nt seem good paths forward respect changing current behavior instead recommend documenting warning ie would worked fail silently addressed via means", "d": "5/2015"}, {"body": "jashkenas point clarification current approach fine except ca nt event different events library yes message maps broken code triggering b c wo nt fire event handler thislistento hello function thishello true", "d": "5/2015"}, {"body": "thanks spotting fix", "d": "5/2015"}, {"body": "thanks fix", "d": "5/2015"}, {"body": "fix merits anything else outstanding deserves make", "d": "5/2015"}, {"body": "jashkenas considered", "d": "5/2015"}, {"body": "jashkenas actually milestone particular considered well", "d": "5/2015"}, {"body": "plain function undefined line fall back catching common case models advanced idattribute override though would nt recommend creating new model instance get id property", "d": "5/2015"}, {"body": "thanks see reason submitted updating code nt work properly think one run issue especially mentioning documentation changelog without warnings", "d": "5/2015"}, {"body": "right totally document let put something together", "d": "5/2015"}, {"body": "antpaw", "d": "5/2015"}, {"body": "curious using webpack resolverplugin", "d": "5/2015"}, {"body": "nt use one try however perspective reason drop package description files", "d": "5/2015"}, {"body": "right probably nt huge deal keep around bower package certainly nt necessary besides webpack enhancedresolve unmaintained unsupported give resolverplugin try reopen still experiencing troubles", "d": "5/2015"}, {"body": "hi freegink already exists called hope works", "d": "5/2015"}, {"body": "different execute happens route function found callback inherited router either add route manually using route function add callback functions inherited router suggestion give users chance dynamically populate callback function according name specified routes nt put callback functions inherited router look example provided example accountlogin nt function inherited router override execute callback parameter would null", "d": "5/2015"}, {"body": "example accountlogin nt function inherited router override execute callback parameter would null right argument still use look function", "d": "5/2015"}, {"body": "right nt notice execute gotten name parameter looking backbone documentation thanks work execute routerexecute callback args", "d": "5/2015"}, {"body": "ah nt realize look getting fixed later", "d": "5/2015"}, {"body": "change master nt yet added release documentation website reflects current released version really release version bump soon", "d": "5/2015"}, {"body": "already exists called execute taken using event implement older backbone really release version bump soon think last change", "d": "5/2015"}, {"body": "cool saw new release hooray", "d": "5/2015"}, {"body": "assuming backbone internal caching callback functions event fires check anymore callbacks unbound interim exactly correct event triggered listeners already bound called bit discussion mutable events involved large amount code support", "d": "5/2015"}, {"body": "annotated source website version nt republishing docs version bump case", "d": "5/2015"}, {"body": "ran well case point search annotated source modelid occurrences source code search release occurrences", "d": "5/2015"}, {"body": "aye ing ghpages branch months ago", "d": "5/2015"}, {"body": "extend write get method nt think go core lib tho", "d": "5/2015"}, {"body": "extend backbonemodel write get method exactly special purpose simple method", "d": "5/2015"}, {"body": "ca nt see case would nt want wrap potentially errorthrowing code trycatch within change handler could deal uncaught errors probably nt mess backbone internal state thrown uncaught error program crashed difference make happens backbone ca nt wrap userland code trycatch would slow hell", "d": "5/2015"}, {"body": "thrown uncaught error program crashed turn event loop place think backbone break next turn well storing state support nested events ca nt wrap userland code trycatch definitely nt want suggest fine error breaking app end dev catch potential errors feels funny error break backbone api following event loops ca nt wrap userland code trycatch would slow hell mitigate wrapper function might appropriate underscore easily add private function backbone javascript function trycatch func try func return true catch e return false class model set key val options var model silent changeslength thispending options var ok trycatch function var lt changeslength modeltrigger change changes model current changes options", "d": "5/2015"}, {"body": "would nt sustainable potentially every event listener could screw backbone internal state ca nt wrap code throws error responsibility clean see coming though jridgewell change listeners different story valid point forgot deopt fix perf look applied change events potentially complex change events", "d": "5/2015"}, {"body": "would nt sustainable potentially every parse initialize event listener could screw backbone internal state completely agree ca nt wrap everything situation leave backbone inconsistent state initialize blows listener model data could inconsistent definitely dev concern listener longer trigger events seems like library concern perf look applied change events potentially complex change events", "d": "5/2015"}, {"body": "test nt using jbone try general note every edge case needs accounted building nuclear testing software sometimes added code handle edge cases makes rest code harder reason see latest events refactor eg sometimes say know thing bad idea nt nt going account nt responsible wrapping faulty dev code", "d": "5/2015"}, {"body": "test nt using jbone try man knew something fishy sometimes say know thing bad idea nt nt going account nt responsible wrapping faulty dev code works", "d": "5/2015"}, {"body": "real problem know proper course action state already broken exception handled user code future code executes broken contract alludes detailed long event system reasoned way user adjust inflight events even catch exception correct course fail fail hard change current correct behavior severely breaking", "d": "5/2015"}, {"body": "disruptek", "d": "5/2015"}, {"body": "like idea nt think reimplement would invalid encodings throw away take guess think common case expect well formed urls including percent encoding said would rather make bit easier deal errors", "d": "5/2015"}, {"body": "like idea nt think reimplement decodeuri decodeuricomponent oh definitely would nt backbone code since exposed really simple define", "d": "5/2015"}, {"body": "could", "d": "5/2015"}, {"body": "thejameskyle pass properties default options superclass constructor option stuckouttongue", "d": "5/2015"}, {"body": "instead relying setup class could simply function something javascript class documentrow extends backboneview", "d": "5/2015"}, {"body": "milesj hmm error immediately final class spec derived class must call super use even work never actually calling backbone constructor get initialization code see link first post", "d": "5/2015"}, {"body": "milesj thing call setting like since ensure element view constructor already created element ever set", "d": "5/2015"}, {"body": "milesj still allowed subclassing jridgewell oh sorry missed seem like natural option spoke jeffmo sebmck give guys backstory reasoning order support extending native types ie array nt determined call method otherwise run initialization issue dom presumably places", "d": "5/2015"}, {"body": "jridgewell thejameskyle simply call super first updated example really nt see issue done thing classes move views constructor logic method", "d": "5/2015"}, {"body": "lot expensive code run twice", "d": "5/2015"}, {"body": "milesj read original blog post running super first means properties nt processed see full depth explanation", "d": "5/2015"}, {"body": "yes read still curious solution everyone keeps talking views constructor needing called nt necessarily case nt something like following solution albeit bit contrived javascript var view backboneview function options thiscid uniqueid view extend ing options longer needed properties set directly viewprototypesetup function thisensureelement thisinitializecall arguments class documentrow extends backboneview constructor super thistagname li thisclassname documentrow thisevents click icon open click buttonedit openeditdialog click buttondelete destroy thissetup arguments guessing backwards compatibility", "d": "5/2015"}, {"body": "default class would nt work since constructor never calls forcing subclass call anything going super annoying", "d": "5/2015"}, {"body": "issue classes deal backbone personally solved using babel class properties spec", "d": "5/2015"}, {"body": "milesj stated class properties solve issue nt instantiated end constructor spoke jeffmo sebmck js class root rootprop root constructor consolelog root thisrootprop consolelog root thisderivedprop class derived extends root derivedprop derived constructor super consolelog derived thisrootprop consolelog derived thisderivedprop desugaring js function root thisrootprop root consolelog root thisrootprop consolelog root thisderivedprop function derived super thisderivedprop derived consolelog derived thisrootprop consolelog derived thisderivedprop still nt fix issue leads inconsistency", "d": "5/2015"}, {"body": "issue classes deal backbone hm personally solved using babel class properties spec gon na lot div elements see last point", "d": "5/2015"}, {"body": "see case suggest going pass properties default options superclass constructor option last line creating properties method nt touch constructor javascript class documentrow extends backboneview loadproperties return tagname li classname documentrow events click icon open click buttonedit openeditdialog click buttondelete destroy foo bar contrived example var view backboneview function options thiscid uniqueid view options options extend thisloadproperties pick options viewoptions thisensureelement thisinitializeapply arguments something similar toolkit seen", "d": "5/2015"}, {"body": "hi understand correctly discussion backbone developers discussing workarounds best practice intention actually making changes bb core deal issue suggesting would idea changes could words suggestion use either properties functions getters final word topic thanks", "d": "5/2015"}, {"body": "gotofritz discussing workarounds solution forcing properties live instances nt scale backbone class system right thing discussion adding static prototype properties classes far nothing concrete meantime say stick backbone", "d": "5/2015"}, {"body": "thanks try classes little longer benefit anyone else stumbling upon practice find pass properties default options superclass constructor better example app dynamic localized routes need passed instantiation time routes method nt work whereas following class router extends backbonerouter constructor localizedroutes defaults localizedroutes nonlocalizedroutea routea actions defaultroute super routes localizedroutes", "d": "5/2015"}, {"body": "seems like conversation run course still happy entertain pr explores notion continuous tracking unvalidated changes", "d": "5/2015"}, {"body": "reading old tutorial see model used validate set well save understand would reduced save ca nt understand efficiency option think option find useful simplifying invariant alternative complex semantics loading work handling contingencies client library", "d": "5/2015"}, {"body": "nt solve issue second instantiation meant ifmodified false fetching first time var gists new gists gistsfetch var new gists empty passing ifmodified false first fetch would grab new data needed second instance caching layer would solve since empty response body would replaced original request", "d": "5/2015"}, {"body": "pr address", "d": "5/2015"}, {"body": "jashkenas would solve breaking change", "d": "5/2015"}, {"body": "yes think intentional reason pass wish validate time docs make clear", "d": "5/2015"}, {"body": "validation supposed holistic resource fields nt exist isolation app means write function handle partial attributes passed", "d": "5/2015"}, {"body": "kolorahl op wants achieve clear current model attributes pass new json becomes new attributes model manner nt really want hit backend already json", "d": "5/2015"}, {"body": "somehow agree clear set method think one functionality needs considered something like backbonecollection reset", "d": "5/2015"}, {"body": "reason needed world changing backbone assumes model fetch xhr primary method loading data server lot stuff using websockets data gets pushed client redundant call fetch need decent way sideload data still get event hook trigger", "d": "5/2015"}, {"body": "nt using", "d": "5/2015"}, {"body": "jridgewell set make attributes dirty let try using set see happens actual outcome desired outcome set fine state changed outofsync server model reset needed way mark state synchronize w server", "d": "5/2015"}, {"body": "ended writing different monkey patch feature allow sideloading data server calling sync event afterwards param attributes param options backbonemodelprototypesyncset function attributes options var attrs attributes optionsparse attrs thisparse attrs options thisset attrs options thischanged thistrigger sync attributes options return probably needs unset missing items also sure model set attributes", "d": "5/2015"}, {"body": "utilitylib improve performance optimize code backbone code running mobile", "d": "5/2015"}, {"body": "yes adding items one time keeping list sorted going fundamentally slower case roll additions single addition operation would trigger one sort suggest finding way correct way deal issue one reasons exists", "d": "5/2015"}, {"body": "jashkenas possible kidplug suggests add new event modifying monkeypatching backbone support seem like fantastic solution either also involves modifying backbone internals seen way without bungling innards backbone raised issue nt seem compelling reason preventing correctlocation insertion item mergesort basically except sortedindex method nt accept comparators", "d": "5/2015"}, {"body": "thanks ur suggestions", "d": "5/2015"}, {"body": "let move conversation ticket", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "still problem come issue keeps getting closed", "d": "5/2015"}, {"body": "slavajacobson provide test case", "d": "5/2015"}, {"body": "think better solve irregularity", "d": "5/2015"}, {"body": "would nice switch browserify webpack way would best worlds multiple files single file easily", "d": "5/2015"}, {"body": "wrote little wrapper sorts routes specificity registering naive proof concept hope nt reopen issue", "d": "5/2015"}, {"body": "option", "d": "5/2015"}, {"title": "findwithassert ca nt used alone poorly named", "body": "name implies actual assertion run reality calling match found assume following test found test actually fails necessary actual call object made confusing believe method name changed object passed argument element found call something effect", "num": "11312", "d": "5/2015"}, {"title": "addons make registerhelper public", "body": "using several addons get around hyphenation requirement get get method made public", "num": "11311", "d": "5/2015"}, {"title": "inline unless broken canary", "body": "inline helper falsey first value value update inline unless helper nt truthy inverse update demo showing correct behavior stable demo showing broken behavior canary", "num": "11306", "d": "5/2015"}, {"title": "glimmer assertion linkto using ember data saving record", "body": "sorry jsbin one great reproducing issues involve ember data model relationship like js appbook dsmodelextend author dsbelongsto author appauthor dsmodelextend app list books list buttons action modify save book item list also link author something like action happens guessing book model goes loading state throws following assertion note app actions also cause render properties changed cause items move around far tell anything special app prevent", "num": "11302", "d": "5/2015"}, {"title": "emberradiobutton addon working betas includes jsbins", "body": "came trying get emberradiobutton addon working ember betas using detect component used block longer working jsbins help demonstrate behavior change working ember working beta", "num": "11301", "d": "5/2015"}, {"title": "arraylikeobject causes problem", "body": "facing unexpected behavior helper nt update updated empty array canary broken think patch fixes", "num": "11297", "d": "5/2015"}, {"title": "morph error unsupported content single binding", "body": "upgrading ember single route app throwing error morph class stack trace tracking single route comes single component single binding triggers error property component defaulting month thoughts", "num": "11296", "d": "5/2015"}, {"title": "warning binding style attributes binding isvisible", "body": "get warning nt bind style attribute anywhere tracked full warning template looks like dom", "num": "11295", "d": "5/2015"}, {"title": "test coverage", "body": "", "num": "11294", "d": "5/2015"}, {"title": "regression call get currentpath undefined object", "body": "usage currentpath longer working test suite suite passes using currentpath acceptance tests results following error sample usage suite javascript visit start andthen gt equal currentpath displayaccounts", "num": "11293", "d": "5/2015"}, {"title": "regression services longer extend emberobject", "body": "app session service defined extending suite passes introduced change breaks see following error test suite breaking fixing app trivial change extending instead", "num": "11292", "d": "5/2015"}, {"title": "meta emberapplicationvisit", "body": "placeholder see initializers run see causes reject need lowerlevel api create", "num": "11291", "d": "5/2015"}, {"title": "unable override serializequeryparam within route", "body": "seems like overrides applied serializequeryparam method route nt applied example could set controller something like route unrealistic expected work expect resulting param request look something like however remains like expected", "num": "11288", "d": "5/2015"}, {"title": "mixin applied controller uses wrong", "body": "create want use several etc expect call within mixin using right would obviously seems always main route wins expected behaviour bug jsbin example demonstrating issue hope console output", "num": "11287", "d": "5/2015"}, {"title": "else blocks rendered block uses itemcontroller", "body": "else blocks rendered block uses itemcontroller else blocks rendered correctly longer renders remove itemcontroller attribute else block starts rendering html color model itemcontrollerthing colorlabel else colors attached jsbin example know components way go want least make sure issue documented others", "num": "11284", "d": "5/2015"}, {"title": "emberrsvphash model hook return entire model one part loaded", "body": "sure expected behavior perplexing time set jsbin explanation note hit main link colors loaded via route model returned colorroute click one color links color object whereas navigate directly child route keys hash returned correctly check logs result think either totally getting relationship model setupcontroller works something seems like color already store hash ingores things promise returns color confused expected behavior get consistent across transitions thanks anyone investigating", "num": "11283", "d": "5/2015"}, {"title": "render regression error action", "body": "looking render custom errors without changing url path user using option far following method working since way make works seems related obtained error well understood normal able call action good way thank much", "num": "11282", "d": "5/2015"}, {"title": "component block array iteration modified xxx twice single render", "body": "hi guys set calendar components put together application loop sets data render component block using values sets hoping see really nice speed bump updating canary instead getting warning along app crashing locking browser rerender reproduced using example app put together clicking prevnext buttons would suggest opening chrome inspector first clicking button force quit pause execution gets stuck loop spitting warnings", "num": "11277", "d": "5/2015"}, {"title": "query params serializing properly default value", "body": "js bin screencast shown screencast value qp starts array transition happens new array value properly serialized url however qp starts nt want default value qp improperly serialized url seems though array converted string serialized rather serialized behavior happens set value qp try transition set array assumption would transition current value qp would wiped away new value passed would take place thing think desired query params change type whatever reason know reason love understand case first like voice opinion contrary good reason default value still allowed changed considering effectively type took hours track figure problem newbie run would almost zero recourse proceed since solution nonobvious even intended behavior think sort message user would appropriate thanks grinning", "num": "11275", "d": "5/2015"}, {"title": "angle brackets coexist nonember web components xfoo named elements", "body": "number html elements ember addon follow web component naming convention nt actual web components ember plain html elements named way make html stylesheets readable semantic elements functionality aside running number errors ember throws error xfoo component nt found ember perhaps throw warning happens instead throwing error ember fall back creating regular html element skipping", "num": "11269", "d": "5/2015"}, {"title": "input type phone works chrome ember", "body": "chrome following code returns text phone expected therefore emberjs following code shows text input jsbin ember correct type shown jsbin", "num": "11265", "d": "5/2015"}, {"title": "poor deprecation notice using template", "body": "needs include modulename line number possible along corrected syntax demo jsbin", "num": "11263", "d": "5/2015"}, {"title": "adding itemcontroller block changes iteration context", "body": "hi discovered issue week ago brought irc nt seem report yet back used random tutorial today encountered issue following official getting started guide page guide shows add block order wrap list item controller followed guide beginning using ember cli get following error console uncaught error assertion failed value loops must array passed minitodo controller array arraycontroller nothing displayed page tried possible combinations arguments block avail tutorial mentioned used ember nt issue nt able check ember due problem getting run ember cli earliest version seen issue version still issue right posting report thought discovered workaround instead adding block added js made error go away however add action input tag inside action handled parent whereas would expect handled", "num": "11259", "d": "5/2015"}, {"title": "add test check semver validity emberversion", "body": "format release channel ie nt appear valid according semver test like added", "num": "11256", "d": "5/2015"}, {"title": "expressions directly html comment start unbounded comments", "body": "posted maybe belongs tildeiohtmlbars using latest embercli emberclihtmlbars expression starting directly html comment start results expression unbounded verified also happens anywhere else nt specific two example results however results xref embercliembercli", "num": "11255", "d": "5/2015"}, {"title": "release blog post", "body": "ticket summary items discussed release post repo followers please consider guarantee even prediction behavior place notes issue locked keep us focused commit bit please edit description deprecations deprecations", "num": "11254", "d": "5/2015"}, {"title": "embercomputedsort fails", "body": "firebase claims unique ids naturally sorted however hasmany recordset sorted ascending get wrong order snippet model firebase table ids sorted asc computed give order instead gives interestingly using javascript sort nothing changes expected", "num": "11252", "d": "5/2015"}, {"title": "route vs resource resetnamespace option", "body": "since deprecated favour nested however difference namespacing behaviour requires large refactor involving moving route template files folders around changing many references calls addition requiring refactor also breaks analogy model tree routetemplate tree passing option results namespacing behaviour resource proposed easy way remove deprecated usage applications see erik bryn ember talk stackoverflow answer however documented public api understand code correctly merely flag router differentiate therefore would stand reason removed removed official statement regarding may save community lot unexpected grief users follow stability without stagnation plan", "num": "11251", "d": "5/2015"}, {"title": "canary unit tests components linkto fail", "body": "going canary found components use linkto fail unit tests error occurs tries generate url property undefined made repo demonstrating bug", "num": "11250", "d": "5/2015"}, {"title": "specifying keyword function", "body": "following snippet works lower breaks thanks fsmanuel reporting", "num": "11249", "d": "5/2015"}, {"title": "deprecation error routes defined", "body": "deprecation warning thrown routes resource routes folder deprecation using function getter setter deprecated see details", "num": "11248", "d": "5/2015"}, {"title": "instanceinitializer deferreadiness work", "body": "see example mentions deferreadiness available instance javascript appinstanceinitializerssleepjs export function initialize application applicationdeferreadiness wait continuing boot app emberrunlater application advancereadiness export default name sleep initialize initialize use deferreadiness", "num": "11247", "d": "5/2015"}, {"title": "glimmer anglebracket components ignores tagname", "body": "bug something deprecated", "num": "11245", "d": "5/2015"}, {"title": "glimmer removes ability access childviews component", "body": "longer exists never populated makes difficult build components need ordered access child views", "num": "11244", "d": "5/2015"}, {"title": "regression spaces inside values attribute helper break", "body": "html x would render expected fails following loop emberhtmlbarslibhookselementjs string also gets split whitespace inside value style attribute jsbin check console see verified fixed", "num": "11243", "d": "5/2015"}, {"title": "documentation computed properties", "body": "documentation special syntax dot notation following links nt mention next one especially found never really looked guide api still sight actually exist kind private api", "num": "11238", "d": "5/2015"}, {"title": "templatelayout resolution docs", "body": "docs currently state specify different layoutlayoutname however specifying different andor seems effect unless set within docs updated misunderstanding usage", "num": "11237", "d": "5/2015"}, {"title": "embersource gem released yet", "body": "seems emberjs released could someone publish rubytgemsorg", "num": "11236", "d": "5/2015"}, {"title": "glimmer helper receive correct view", "body": "javascript export default function props var options propspop var view optionsdataview code lt would component helper would called changed controllers view", "num": "11233", "d": "5/2015"}, {"title": "setting applicationadapter fixtureadapter according guide nt work", "body": "sections guide following simply attach applicationadapter property instance emberapplication var app emberapplicationcreate appapplicationadapter dsfixtureadapter unable get work even tried end ran changed contents import ds emberdata export default dsfixtureadapterextend sake reproducing issue changes made default app created embercli modelstaskjs import ds emberdata let task dsmodelextend summary dsattr string taskreopenclass fixtures id summary take bin bags id summary wash car export default task routestasksjs import ember ember export default emberrouteextend model function return thisstorefind task routerjs import ember ember import config configenvironment var router emberrouterextend location configlocationtype export default routermap function thisroute tasks templatestaskshbs task model taskname appjs import ember ember import ds emberdata import resolver emberresolver import loadinitializers emberloadinitializers import config configenvironment var app embermodelfactoryinjections true app emberapplicationextend moduleprefix configmoduleprefix podmoduleprefix configpodmoduleprefix resolver resolver loadinitializers app configmoduleprefix appapplicationadapter dsfixtureadapter export default app worth think documentation updated use embercli method assuming current documented method made work", "num": "11232", "d": "5/2015"}, {"title": "appinstanceinitializer receives undefined appreset", "body": "js bin canary boot reset", "num": "11230", "d": "5/2015"}, {"title": "", "body": "custom component inside component input field value input field gets updated property mycomponent reflect new value works work property latter get updated mycomponent tried mycomponent whenever even occurs always comes back undefined", "num": "11224", "d": "5/2015"}, {"title": "using attributebindings component nt bind form attr", "body": "upgrading emberxselect encountered odd bug using component bind attribute nt actually bind form provided two jsbins one binding works correctly binding nt work also failing test emberxselect ember going cc stefanpenner since reached twitter p", "num": "11221", "d": "5/2015"}, {"title": "mutable nonmutable binding property makes mutable", "body": "snippet snippet mutable demo", "num": "11217", "d": "5/2015"}, {"title": "poor warning message", "body": "warning message lacks context warning raised filenameline number warning", "num": "11216", "d": "5/2015"}, {"title": "glimmer ariarole applied", "body": "tests failing app role menu nt works nt work", "num": "11215", "d": "5/2015"}, {"title": "use error component name", "body": "component like template contains error string get error assertion failed canot use error component name component names must contain hyphen works ember beta using embercli tried make fiddle unable reproduce error think must ember cli resolver work around time", "num": "11214", "d": "5/2015"}, {"title": "exporting wrong object type route gives hard debug error", "body": "pairing someone today stupidly exported component instead route route file resulting message said error loading route code dealing lot going lost time debugging found extended wrong ember object would reasonable check exported route fact emberroute give helpful error message would good place put kind check", "num": "11212", "d": "5/2015"}, {"title": "error parentnode null using queryparam else", "body": "demo stack trace safari chrome dev", "num": "11210", "d": "5/2015"}, {"title": "number attributes nt convert values properly used input helpers", "body": "example model containing numeric field field change string edited input helper expected behavior could nt find place guides discouraging usage pattern case unintuitive misleading imo", "num": "11209", "d": "5/2015"}, {"title": "using computed property component isvisible property breaks glimmer", "body": "example jsbins ember broken ember working code js appapplicationcontroller embercontrollerextend isexpanded false actions toggle function thistoggleproperty isexpanded appfoomenucomponent embercomponentextend isvisible embercomputedbool attrsisexpanded would expect foomenu hidden page loads ember visible page loads however toggling button back forth get back sync causes start behaving expected", "num": "11206", "d": "5/2015"}, {"title": "stringlength returns undefined empty string", "body": "jsbin seems accessing length property empty string getter returns rather previously zero returned expected looks like got broken proposed fix", "num": "11204", "d": "5/2015"}, {"title": "improve error message double set attributes handlebar objects", "body": "lately odd problem safari took ever till figured set attribute one inputs two times nt matter one empty chrome firefox safari taking serious whole redefine values syntax thingy example code error code thing instance error got triggered var js code redefined accidentally still came fixed search js errors handlebar errors course wrapped js code maybe template engine could throw error case informations see issue embercli btw im open better title issue nt found better one", "num": "11202", "d": "5/2015"}, {"title": "null method anglebracket component", "body": "given export default embercomponentextend init function let x thisget attrstest returns case using", "num": "11200", "d": "5/2015"}, {"title": "view context changed", "body": "upgrading deprecation warnings saw breaking change bug view context handling jsbin sample short main template sample view template view context would contain iteration instance anymore instance view context saw nothing matter docs changelogs deprecations list blindly searching real issue moving", "num": "11199", "d": "5/2015"}, {"title": "contribution guideline links outdated jsfiddle https issues jsfiddle", "body": "contribution guidelines links sports two issues currently using ember least recent stable version try add another ember build complain http https however ember build server hang https requests serving instead wo nt render fiddle usable", "num": "11198", "d": "5/2015"}, {"title": "injectservice requires get", "body": "js export default emberrouteextend foo emberinjectservice model function return thisfooget bar get tried turning avail related", "num": "11197", "d": "5/2015"}, {"title": "multiple apps break view controller bindings", "body": "hi folks thanks ember upgraded app latest stable release noticed regression multiple ember apps single page view controller bindings stop working first app jsbin reproducing bug steps reproduce change links html link ember bindings work regression introduced guess related fastboot groundwork tried canary bug well love help get fixed need guidance turn failing test since involves multiple apps advice", "num": "11195", "d": "5/2015"}, {"title": "componentclassnamebindings adds first array element", "body": "items classnamebindingsarray component first item ignored means following result component class made quick jsbin show problem", "num": "11193", "d": "5/2015"}, {"title": "ca nt pass component controller", "body": "get access component controller set component property exposes controller link works ember fails also tried using embercli sure need change make work", "num": "11192", "d": "5/2015"}, {"title": "glimmer accessing view elementid viewname working", "body": "preglimmer version possible name view using property access parent template via current betacanary work jsbin", "num": "11188", "d": "5/2015"}, {"title": "rerendering component changing layout fails", "body": "following component definition details omitted js import ember ember var processraw function raw return sometemplatecontent var component embercomponentextend raw updatelayout function var raw processraw thisget raw observeraw function emberrundebounce thisupdatelayout observes raw export default component component dynamically changes layout based value attribute works expected ember ember method executes fine error thrown component renders nothing wrong", "num": "11186", "d": "5/2015"}, {"title": "trouble emberselect arrays", "body": "following emberselect docs causes following exception value loops must array passed object object object object assertarraylike force via instead get typeerror thisdefinenonenumerable function", "num": "11185", "d": "5/2015"}, {"title": "single function gettersetter deprecation warning show", "body": "trying update ember getting warning pretty frustrating nt know exactly offending code know one emberaddons depending call stack nt help would great warning improve", "num": "11184", "d": "5/2015"}, {"title": "glimmer inside component template binding property component name camelcase causes assertion error", "body": "component named property named component trying bind inside component template cause assertion error jsbin currently reproducible beta canary works", "num": "11183", "d": "5/2015"}, {"title": "meta remove reduce computed", "body": "pr tracks work needs happen remove reduce computed implement current rc macros simpler fashion array recomputes already pr wagenet extract current rc addon", "num": "11181", "d": "5/2015"}, {"title": "linkto active new route loads", "body": "way indicating loading via helper class routes take bit time load like give visual indication users", "num": "11180", "d": "5/2015"}, {"title": "new computed property syntax breaks super set", "body": "jsbin old arity syntax works jsbin new object syntax broken new computed property object syntax seems break invoked via calls set setter method called afterwards seems override entire property value edit improved jsbin output make things bit clearer", "num": "11177", "d": "5/2015"}, {"title": "component nt handle correctly", "body": "pass route action name string component component send action one actions triggered refer example js componentssomecomponentjs actions rightbuttonclick function thissendaction specialaction template given implementation js sendaction function action return object following format since result fails assertion extract value changing assignment suggestion though sure implications change", "num": "11176", "d": "5/2015"}, {"title": "regression currenturl broken acceptance testing ember", "body": "great deal tests check current url like upgrading emberjs seems broken upgrade url empty string odd reason deprecatedremovedbroken nt see mention blog post assumed nt planned thank advance", "num": "11175", "d": "5/2015"}, {"title": "registerresolve prioritize manually registered classes resolver", "body": "currently way replace factory comes resolver consider case testing currently work prioritizes resolver manually registered class fix either switching order caching result manually registered class", "num": "11174", "d": "5/2015"}, {"title": "calling registry clear container", "body": "containerregistry split test wanted stub methods tap particular class could done following however new world calling unregister registry work cache factory look calling unregister clear container factorycache cc dgeb clear think registry know containers seems wrong maybe could bring back container", "num": "11173", "d": "5/2015"}, {"title": "unable inject objects initial active routes using", "body": "attempting remove deprecation warnings ember data moved initializer code creates store unfortunately seems routes initially active eg visit page loaded created get change run looks like ordering steps function causes problem startrouting call ends creating route instances run bootresolver resolved later function example js bin", "num": "11172", "d": "5/2015"}, {"title": "glimmer nested components longer access parent", "body": "recently tried upgrading ivytabs ember ran issues around changes components prior nested component could access outer component using ivytabs register component contained among things seems upgrade always routable view rendered component nt see way components access example intended use case way want", "num": "11170", "d": "5/2015"}, {"title": "template inheritance", "body": "think something like supported especially push towards components want parent component template like hbs foo bar yield would expect child components extend parent component able define template hbs baz automatically put yield whenever used child component would show hbs foo bar baz", "num": "11167", "d": "5/2015"}, {"title": "recurring bug embermetalstreamstream undefined object evaluating thischildren n", "body": "regularly hit case production ca nt reproduce dev environment post js exceptions backend logging every receive followed stack trace looks like seems always happen iphoneipad even sure users experience glitches hunch thischildren sometimes still execution reaches point could linked bit code seems pretty old code could nt reproduce jsbin see production logs posting case someone else similar issues", "num": "11166", "d": "5/2015"}, {"title": "uncaught error assertion failed value loops must array passed gozooga controller array arraycontroller", "body": "updated morning ember ember cli ember data getting template worked fine ember ca nt retest handled deprecations new computed property syntax", "num": "11165", "d": "5/2015"}, {"title": "glimmer itemviewclass broken tagname amp else", "body": "using ember item view used always rendered html model itemviewclass listitem item item code html item actually renders html item used template rendered model falsey works fine html model itemviewclass listitem item item else data issues illustrated jsbin also seems issue thrown toggle action added set model data controller illustrate issue functioning fine ember", "num": "11164", "d": "5/2015"}, {"title": "regression appendchild longer accepts class", "body": "seen upgrading verified behavior ember master admittedly old code following errors instancetrigger function usage variable ie view instance rather view class", "num": "11163", "d": "5/2015"}, {"title": "using function getter setter deprecated non computed properties", "body": "receiving noncomputed properties models triggering properties click ember inspector link view related line takes example happens properties models matter declared", "num": "11162", "d": "5/2015"}, {"title": "read property destroy undefined", "body": "call notifypropertychange arrayproxy error line childview childviews idx aprox return empty object possible solution check object undefined version", "num": "11159", "d": "5/2015"}, {"title": "input generate void element", "body": "using following generates following html output demo", "num": "11157", "d": "5/2015"}, {"title": "strange canary deprecation", "body": "using useful pattern glimmer deprecation message modifications", "num": "11156", "d": "5/2015"}, {"title": "canary emberroute activate nukes parent route template", "body": "encountered bug app running canary reproduced jsbin jsbin routes explicitly defined one child another transitioning one routes application route within hook causes issue template disappears leaving behind navigate app clicking buttons notice still transition longer appear inside template issue seems affect hook uncomment hooks work expected also errors loggedthrown cc rwjblue", "num": "11152", "d": "5/2015"}, {"title": "glimmer idclassnames dasherized snakecase wupgrade", "body": "testing app glimmer ran discrepancy example used become upgrading htmlbars kept feel like would broken something prior hitting let know information provide thanks", "num": "11151", "d": "5/2015"}, {"title": "glimmer components fail unit tests", "body": "make component try unit test get failure due missing router worked canary prior glimmer merged", "num": "11150", "d": "5/2015"}, {"title": "chance ember officially support emblem optional markup syntax", "body": "top readme says looking new maintainer emblem much much less verbose handlebars nice would also great convert everything handlebars something happens emblem like incompatibility due lack maintenance", "num": "11147", "d": "5/2015"}, {"title": "error processing route propertyindex params defined referenceerror params defined", "body": "hi ember emberdata using embercli pod structure done ember g resource properties created podsproperties podsproperty folders main approuterjs podspropertymodeljs podspropertyroutejs podspropertiesroutejs podspropertiescontrollerjs podspropertiestemplatehbs property controller linkto property property propertyname linkto else properties found click page shows information fine refresh goes blank displays console error error processing route propertyindex params defined referenceerror params defined looking docs looks correct sure error could little info change main route sake full detail page still get error refresh achieve without error", "num": "11145", "d": "5/2015"}, {"title": "glimmer views receive newstyle lifecycle hooks", "body": "since lifecycle hooks inconsistent views components example hook renamed components views talked wycats plan remove new lifecycle hooks views views sufficiently crazy nt want try mix new semantics opening issue someone wants quickly please feel free grab otherwise latersoon", "num": "11143", "d": "5/2015"}, {"title": "else block causes problem", "body": "jsbin browser error looks like helper mutates model property sets null", "num": "11140", "d": "5/2015"}, {"title": "svg patterns unreachable using non hash location queryparams", "body": "hi working integrating charts devexpress ember app faced issue using location auto history providing queryparams svg ca nt find pattern use filling works location hash also without queryparams created demo repo issue ca nt use combination queryparams location auto jsbin find svg templatessvgcharthbs made filling hover easy see happens see displayed visiting wrong displaying visiting thanks", "num": "11139", "d": "5/2015"}, {"title": "emberroute enter hook missing super call die unhelpful error", "body": "using enter hook route set connections pusher app uses exit hook remove sure round googling suggested use using without calling ember totally fine nt given warnings messages upgraded ember app died firefox gave following error chrome bit helpful said pointed solution runspired offered call jsbin case necessary googling nt help hopefully people problem find post think best solution mind would ember gracefully handle error let user know messed edit maybe would nice mention transitionmigration detail since changed", "num": "11136", "d": "5/2015"}, {"title": "mixin injected service fails", "body": "mixin injected service trying instantiate object uses mixin fail error trying retrieve service commit shows setup line fails service retrieved mixin", "num": "11135", "d": "5/2015"}, {"title": "canary poor bindattr deprecation warning messages", "body": "bindattr deprecation warning error message yield context issue coming cc rwjblue", "num": "11133", "d": "5/2015"}, {"title": "glimmer render hook longer called components", "body": "using oldstyle function backwards compatibility trying patch render code object behaves like old buffer morph attributes used debugging found hook nt called components appended dom digging new view code found curiously named method nt used anywhere implies backwards compatibility would love get working canary asap since fairly wellused addon cheers", "num": "11128", "d": "5/2015"}, {"title": "pass classnamebindings input computed property", "body": "inside input component wrapper trying pass dynamic class names inner input errors due split method available simplestream would happy provide details needed thanks", "num": "11126", "d": "5/2015"}, {"title": "typeerror set property readonly object object getter", "body": "", "num": "11125", "d": "5/2015"}, {"title": "glimmer emberhtmlbarsregisterhelper longer backed view", "body": "table addon internally exposes declarative syntax like handlebars mytable modelarrayofpeople mycolumn headerfirst name firstname mycolumn mytable produces standard html table order work used internalprivate apis worknot supported glimmer call show examples addons using private apis broken documented issues facing jsbin along working example example comments make sense let know clarify ok changing anyall logic get functionality working want know recommended way going forward glimmer", "num": "11124", "d": "5/2015"}, {"title": "glimmer application template without view controller local template", "body": "", "num": "11121", "d": "5/2015"}, {"title": "glimmer longer displays inverse template", "body": "ember else block rendered helper given falsy argument eg ember canary inverse template longer shown fiddle ember fiddle ember canary", "num": "11118", "d": "5/2015"}, {"title": "glimmer need documentation providing key", "body": "dom elements maintained repositioned needed based provided default key index within user provide invoking sorting automatically destroy recreate elements needlessly example", "num": "11117", "d": "5/2015"}, {"title": "glimmer fix issues emberclifastboot", "body": "fastboot related unit tests skipped could focus mainstream client use case issue intended tracking issue get canary back speed emberclifastboot believe wycats tomdale spending bit time getting things wired back properly next couple weeks", "num": "11115", "d": "5/2015"}, {"title": "documentation dependancy injection guides scratch", "body": "please see post emberjs forum", "num": "11114", "d": "5/2015"}, {"title": "binding type attribute button element fails phantomjs", "body": "unit tests testing correct html attributes bound via component started fail suddenly using ember created separate repository isolate possible bug find button component set via tested unit test simple html element using old style attribute bindings compatibility tested acceptance test running run tests using embertry beta canary phantomjs well chrome results everything works expected chrome button component attribute phantomjs ember beta canary tests fail test ember succeeds though something probably must changed maybe related button html element fails phantomjs ember versions strange also added tests button properties like seem ok seems spacial case attribute phantomjs one could blame phantomjs solely would explain button component tests starts failing beginning ember although normal browsers seem affected would still nice fixed ci tests phantomjs plays role", "num": "11112", "d": "5/2015"}, {"title": "glimmer component compat inconsistency", "body": "inconsistency old component syntax angle bracket syntax use regards value ember canary using template todos item todoitem todoitem itemtitle todoitem itemtitle see components title mustache referencing components working properly whereas seems working expected accessed accessed using attrstodotitle mustache component component template seems work expected new angle bracket syntax", "num": "11111", "d": "5/2015"}, {"title": "glimmer view appendto working", "body": "app integrating ember existing web application uses server side rendering result need render ember components mostly top navigation outside ember application element otherwise way render anything serverside code glimmer expect word hello appear", "num": "11109", "d": "5/2015"}, {"title": "emberenumerable lacks findindex", "body": "found enumerable mixin implement method defined specification although implement cousin easy implement fancy pr", "num": "11108", "d": "5/2015"}, {"title": "reconsider components", "body": "would better use character new components ideally keep current syntax confusingly close html syntax reduce template readability may break future changes webcomponents", "num": "11100", "d": "5/2015"}, {"title": "glimmer views created using view nt controller property", "body": "", "num": "11098", "d": "5/2015"}, {"title": "glimmer template revision assertion longer present", "body": "added appears disabledremoved glimmer work", "num": "11096", "d": "5/2015"}, {"title": "question testing rsvp errors handled emberrsvpon error function", "body": "working feature error function testing functionality kept running issues default causing test failure handling error listening best way test errors handled global rsvp error handing currently monkey patching test nothing thanks advance help", "num": "11094", "d": "5/2015"}, {"title": "glimmer svg content rendering", "body": "content svg elements rendering correctly glimmer canary cases contents template rendered primary element component cases template rendering cases svg element shows size one dimensions even though explicit width height bound values elements chrome element inspector show width height element showing heightwidth hover element inspector", "num": "11091", "d": "5/2015"}, {"title": "renderer diddestroyelement sets element null", "body": "exception thrown view removed setting element null without using set view question component hosted within svg element tagname g child svg elements component removed removing object causing view render added render using component helper rendererprototypediddestroyelement function view viewelement null", "num": "11090", "d": "5/2015"}, {"title": "view helper wrong action target", "body": "unintended semver breakage glimmer used possible correctly component rendered helper action goes immediate parentview failing test case", "num": "11088", "d": "5/2015"}, {"title": "mutable bindings throw exception nonstream inputs", "body": "failing test case", "num": "11086", "d": "5/2015"}, {"title": "modularize tests", "body": "would really nice ember test file could module coffeescript coffeescript mocha test describe home stuff currently requires bootstrap file type test using mocha js import hometest home import foobartest foobar describe acceptance function hometest foobartest", "num": "11085", "d": "5/2015"}, {"title": "select views select appropriate value", "body": "based comment code broken due failure ever accurately compare using nothing try pass seem match sufficiently data coming emberdata make jsbin helpful appears solution match comments", "num": "11082", "d": "5/2015"}, {"title": "glimmer helper longer receiving", "body": "embercan got helper expects receive since glimmer merged longer defined exported plain function may well issue addon nt received previously fix addon thought worth checking regression different way", "num": "11080", "d": "5/2015"}, {"title": "interpolation jshint error defined never used", "body": "component following computed property getting following jshint error thanks", "num": "11079", "d": "5/2015"}, {"title": "value binding doest update changed password manager", "body": "login looks like html input idemail typeemail nameemail valueemail input idpassword typepassword namepassword valuepassword form autofilled submitted password manager mitro undefined controller login fails however correct email password password manager manually typing email password works expected moment workaround sets values text input retrived jquery submit", "num": "11078", "d": "5/2015"}, {"title": "glimmer willdestroyelement sometimes called outlet view destroys toplevel view", "body": "noticed failing unit test appreset reproduction based cases route transition nt made reduce reproduction yet wanted track", "num": "11077", "d": "5/2015"}, {"title": "retire commit tagging guidance contributingmd", "body": "contributingmd recommends using commit tag prefixes like looking last days commit history many follow guideline perhaps time consider retiring information shorten contribution guide", "num": "11076", "d": "5/2015"}, {"title": "missing component elementid", "body": "invoke component like resulting element global ember view table lists component key get exception due reuse id", "num": "11073", "d": "5/2015"}, {"title": "collectionview itemview itemviewclass support components", "body": "attributes used lookup views seen components poses issue want want build list components without nest component inside item view", "num": "11071", "d": "5/2015"}, {"title": "glimmer checkbox component missing", "body": "get htmlbars error could find component named checkbox component template name found following canary build beta latest work fine", "num": "11067", "d": "5/2015"}, {"title": "accessing attribute holds object component", "body": "checked app canary saw many warnings road ember rfc mentioned components take ember object attribute eg case inside component works generates deprecation warning nt work works starts verbose full jsbin example intended behavior", "num": "11065", "d": "5/2015"}, {"title": "installation guide improvement", "body": "installation instructions needing update finished installing ember following instructions provided site faced issue related version nodejs installed said steps get installation embercli tools nodejs version required knowing happening eventually ok reinstall everything let see get hope ember br", "num": "11064", "d": "5/2015"}, {"title": "bizard behaviour transition partially filled queryparams", "body": "route queryparams call controller thistransitiontoroute queryparams results transitionning route queryparams seems taken previous transition sure expected behaviour test think generalized transitioning route partially filled queryparams sets unfilled queryparams sticky values", "num": "11063", "d": "5/2015"}, {"title": "glimmer containerview issue", "body": "sure best describe issue experiencing made two fiddles demonstrate think happening new containerview hbs template loops views using helper rerending causing css animations fire time previously preglimmer", "num": "11062", "d": "5/2015"}, {"title": "glimmer helper generates extra div tag", "body": "know deprecated current canary break style existing apps canary workaround passing think legacyeachview tagname emptystring default correct", "num": "11056", "d": "5/2015"}, {"title": "glimmer mutable bindings flowing backward", "body": "example navigate among three routes component updates properly first two pages visit remains stuck change problem goes away makes guess twoway binding feeding backward nextpage component application controller causing value stuck", "num": "11054", "d": "5/2015"}, {"title": "breaking change view semantics", "body": "passing class view helper used unbound bound may nice behavior pretty sure unintentional breaking change", "num": "11053", "d": "5/2015"}, {"title": "deprecation separate cp getter setter unhelpful", "body": "offending cp app code hard find comes trace something like ember inspector much less obvious see attached trace believe inspector nonexpert users sorts warnings quite frustrating", "num": "11048", "d": "5/2015"}, {"title": "update uncaught error assertion failed calling set destroyed object", "body": "getting error happening help would greatly appreciated preventing updating", "num": "11047", "d": "5/2015"}, {"title": "ember computed properties properly unwrap nested promises", "body": "object field promise another object ember computed property depends promise properly update promise resolved example say build sort forum software thread model topicpost field promise post model post model field called owner string thread model would expect threadget topicpost resolves threadget op resolve owner string topicpost object nt instead ember get confounded dealing promise codepen illustrating", "num": "11046", "d": "5/2015"}, {"title": "glimmer data binding issue using component", "body": "reproduction working wout component interesting data displayed template kept date data access within action component sync", "num": "11044", "d": "5/2015"}, {"title": "allow partial accept content block", "body": "reason implemented yet", "num": "11043", "d": "5/2015"}, {"title": "glimmer component helper lookup works without dash", "body": "apptemplatesapplicationhbs whoops apptemplatescomponentswhoopshbs ruhrohraggy", "num": "11040", "d": "5/2015"}, {"title": "glimmer performance regression navigatinginteracting nested routes", "body": "although glimmer much faster raw rendering seem interacting nested routes causes whole view rerendered resulting significantly reduced performance glimmer", "num": "11039", "d": "5/2015"}, {"title": "embermutablearrayhtml propertylastobject always returning correct object", "body": "ember ember data jquery calling lastobject array get always odd entry even ones extract logs order illustrate use case commands label commandsget lastobject optionslabel commands label label commandsget lastobject optionslabel commands label label label commandsget lastobject optionslabel using commandsobjectat commandsget length expected behavior", "num": "11038", "d": "5/2015"}, {"title": "glimmer observing legacy component properties nt work", "body": "valueobserver demo never fires", "num": "11037", "d": "5/2015"}, {"title": "glimmer linkto breaks mutable cell unwrap chaining", "body": "mutable attr contains pojo bind properties template like works wrap binding breaks make work need switch jsbin demonstrating problem", "num": "11036", "d": "5/2015"}, {"title": "glimmer classnamebindings nt update", "body": "glimmer classnamebindings nt always work jsbin shows issue change controller directly see background changes red set action clicking click nt", "num": "11034", "d": "5/2015"}, {"title": "elementmorph cleardestroy methods", "body": "essentially sample template hbs input type checkbox checkedchecked demo", "num": "11032", "d": "5/2015"}, {"title": "error clearing attribute morphs", "body": "rendering block helper bound attributes templateinverse result error templateinverse removed sample template snippet hbs input type checkbox checkedchecked demo", "num": "11030", "d": "5/2015"}, {"title": "glimmer read property foreach emberinspector", "body": "seeing following error ember inspector installed inspector installed exception thrown emberobjectextendappendchildren emberobjectextendviewtree anonymous function fn queueinvoke queueflush deferredactionqueuesflush backburnerend backburnerrun executetimers anonymous function", "num": "11027", "d": "5/2015"}, {"title": "glimmer controller set view inside", "body": "handlebars controller itemcontrollercat cat view cat view cat controllercat guess implicit controllercontext switching stopped working array controller may may matter fix easy know itemcontroller deprecated moved away already adding aid bughunt", "num": "11025", "d": "5/2015"}, {"title": "glimmer separates classstring spaces", "body": "sure accepting string ever documentedpublic feel free close easy work around submitting aid glimmerbughunt code generates html looks like hello hello hello hello", "num": "11024", "d": "5/2015"}, {"title": "glimmer data binding issue using embercomputedalias", "body": "jsbin reproducing issue app fires action clicked component adds removes array manage selection current implementation uses alias inside alias attribute binding repeated checks cp component stops calculated sync see console logs action component continuing fire broken working w alias worked rwjblue bit asked open issue", "num": "11023", "d": "5/2015"}, {"title": "inject helper", "body": "export function initialize container application applicationinject component store store main applicationinject component application application main applicationinject component applicationcontroller controller application applicationinject helper applicationcontroller controller application applicationinject model device application application main applicationinject model room application application main applicationinject model setting application application main applicationinject route application application application main applicationinject transform application application main export default name injections initialize initialize notice helper defined import ember ember import environment utilsenvironment export function staticimg path options path var staticroot thisget applicationcontroller get modelstaticroot return new emberhandlebarssafestring else return export default emberhandlebarsmakeboundhelper staticimg docs says inject onto helpers exact setup working framework classes", "num": "11021", "d": "5/2015"}, {"title": "documention clarification", "body": "says ember container viewed implementation detail part supported public api see used suggested solution issues forums container provided property main framework objects nt contradictory also assuming using container lookup things ok long accessed way ca nt find public api docs accessing container property controller route etc discouraged ok docs container property framework classes", "num": "11020", "d": "5/2015"}, {"title": "javascript native sort nt trigger view update unless sortby initially used", "body": "javascript native sort function nt trigger view update resorting data however used first view updates correctly newly sorted data javascript data embera emberobjectcreate name tim bday april sortproperty null sorteddata function var sortprop thisget sortproperty var data thisget data property data sortproperty jsbin issue would issue solved using stay away since going discontinued", "num": "11018", "d": "5/2015"}, {"title": "template resetting", "body": "hello sorry vague title nt understand issue easy target problem clearly step reproduce bug open click users click gordon nav bar profile showing click stuffs nothing outputed great gordon stuff change user click alix click stuffs list containing one two three outputed great alix stuffs click gordon stuffs see alix stuffs multiple users stuffs every user added list issue related behavior return nothing gordon better illustrate issue explanations demo code tried mimic current architecture used fixtures replace real data specific adapter model use real method get stuffs reimplemented templates simplified demo course possible fix saw today seems related issue ca nt guarantee tried modify behavior reset properties nothing changed help welcomed", "num": "11017", "d": "5/2015"}, {"title": "amber indent syntax lovers", "body": "hi angularjs functional developer open new ideas like amber want learn framework first thing met nt follow html standard created template standard ok nt like indented syntax like jade jade indented language could transformed simple html jade angularjs templates easily angularjs nt dictate us question solution indent syntax lovers strict vision limits template engine consider efficient", "num": "11015", "d": "5/2015"}, {"title": "inflection broken word contains", "body": "would expect able mark foo uncountable see rule match foldersubfolderfoo instead nt match regex rules applied instead", "num": "11014", "d": "5/2015"}, {"title": "glimmer bug controller property available views routes anymore", "body": "hey tried bower glimmer build saw breaking change behavior relying controller available views routes bunch places eg application view see probably code smell something one automatically gets rid ports components completely still breaking change ie eg thisget controller application view init null interestingly undefined used application controller br dominik", "num": "11013", "d": "5/2015"}, {"title": "beta build page date", "body": "public website updated ideally automatically updated new release coined developers nt remember change", "num": "11011", "d": "5/2015"}, {"title": "expecting unicode escape sequence", "body": "trying put together pr run tests browser forked latest master start server access browser get following error build error embermetalcomputedmacrosjshintjs embermetalcomputedmacrosjshintjs expecting unicode escape sequence uxxxx syntaxerror embermetalcomputedmacrosjshintjs expecting unicode escape sequence uxxxx pass pass jshintnembermetalcomputedmacrosjs line col expected instead saw nembermetalcomputedmacrosjs line col missing semicolonnembermetalcomputedmacrosjs line col expected assignment function call instead saw expressionnembermetalcomputedmacrosjs line col missing semicolonnembermetalcomputedmacrosjs line col unexpected line col expected instead saw nembermetalcomputedmacrosjs line col missing semicolonnembermetalcomputedmacrosjs line col expected assignment function call instead saw expressionnembermetalcomputedmacrosjs line col missing semicolonnembermetalcomputedmacrosjs line col unexpected parserppraise parserppreadword parserppreadtoken parser parserreadtoken parserppnexttoken parserppnext parserppeat parserppparsesubscripts", "num": "11010", "d": "5/2015"}, {"title": "deprecation called registry api longer receives container use look objects container", "body": "updated emberjs app latest tried get ember fastboot running somehow managed run server ember giving warning browser however running ember fastboot produces following warnings console seem go anywhere lookupfactoryinitializerinstanceinitializer look objects container see details anonymous ember data lib initializers store initializestore anonymous objectember data lib setup container setupcontainer initialize anonymous anonymous visit visit dagtopsort namespacedefaultextendruninitializer deprecation called registry api longer receives container use look objects container see details anonymous ember data lib initializers store initializestore anonymous objectember data lib setup container setupcontainer initialize anonymous anonymous visit visit dagtopsort namespacedefaultextendruninitializer quite sure issue belongs emberdata hopping someone could guide right solution", "num": "11009", "d": "5/2015"}, {"title": "needs documentation", "body": "struggling basic use case nested route needs access parent found documentation missing really important language nomenclature think following post indicates problem solution well description hope future sake others incorporated future documentation btw helpful way get kind suggestion team open still pretty new", "num": "11007", "d": "5/2015"}, {"title": "browse api docs version similar guides", "body": "hi really nice ember guides browsed version since would great could get thing ember ember data api docs", "num": "11005", "d": "5/2015"}, {"title": "emberstring wrong conversions namespaced model name", "body": "methods nt work properly namespaced model names javascript emberstringclassify evilminionsyellowminion gt unexpected evilminionsyellowminion expected evilminionsyellowminion emberstringcamelize yellowminionsminipig gt unexpected yellowminionsminipig expected yellowminionsminipig tests patch", "num": "11000", "d": "5/2015"}, {"title": "using bootstrap dropdown toggle inside action destroys subsequent action handling", "body": "button dropdown toggle action button action work one time get destroyed moving forward using dropdown toggle inside action feels somewhat unexpected cases want use inside action subsequently keep action binding button clicked future action triggers relevant example clicking button first time increment count clicking shows count nt get incremented action never gets triggered commenting show work expected least thought would work number keeps getting incremented action gets triggered time click button maybe falls scope considered ember core issue feel free close issue dropdown trigger test count appindexcontroller embercontrollerextend count actions triggercount function ember dlabel dropdown toggle thisincrementproperty count", "num": "10998", "d": "5/2015"}, {"body": "suggesting pass custom assert current code essentially assert hardcoded param ellength hardcoded assert description aswell javascript old function findwithassert app selector context var el apptesthelpersfind selector context ellength throw new embererror element selector found return el assume solution could set previous test default previous one add optional parameters custom assert like function findwithassert app selector context desc test var el apptesthelpersfind selector context var desc desc element selector found defaults break existing code var test test element emberassert desc test return el assume solution could set previous test default previous one add optional parameters custom assert like function findwithassert app selector context desc test var el apptesthelpersfind selector context var desc desc element selector found defaults break existing code var test test element emberassert desc test essentially old code custom assert whatever reason spicy qunitassertok true selector found note confusing return el editclarification comments added code actually suggesting think oh silly", "d": "5/2015"}, {"body": "current code misleading within context test suite", "d": "5/2015"}, {"body": "random thoughts roughly created qunit terminology include suggested assert callback function argument added bit later name technically find assert even though seems silly mostly created private internal helper things error element found like etc really meant used standalone mention intro description", "d": "5/2015"}, {"body": "nb new went bit offpath nt realize reffering qunit thank rwjblue first thanks lot inputi kinda thoughts good know completely secondly think point changing bcardarella meant check edits", "d": "5/2015"}, {"body": "bcardarella going expose method exposes streams mixonic rwjblue rfc detailing path hyphenless helpers tl dr helpers require hyphen hyphens custom elements need implement strategy avoids tons unnecessary container lookups rfc details allow", "d": "5/2015"}, {"body": "mmun odds rfc going land without clear path addons work pretty much stuck nice rfc add better api eventually meantime nt think update addons test way", "d": "5/2015"}, {"body": "bcardarella planning landing", "d": "5/2015"}, {"body": "good news thank", "d": "5/2015"}, {"body": "superseded pr", "d": "5/2015"}, {"body": "look", "d": "5/2015"}, {"body": "olavisau deprecation similar nt think underlying issue setting property view besides passing parameter relationship seems might ember data issue since saving record happen queue run loop sure changing property render ether way think needs addressed ember emberdata since linking related record saving records normal behavor nt throw deprecations framework code igort thoughts", "d": "5/2015"}, {"body": "raycohen think use check block seems deprecated", "d": "5/2015"}, {"body": "orkon working either substituting jsbins effect", "d": "5/2015"}, {"body": "raycohen used template like looks like available within templates", "d": "5/2015"}, {"body": "use js code available templateland", "d": "5/2015"}, {"body": "ok way", "d": "5/2015"}, {"body": "general think would advise using helper render one component ultimately intend render via template instead changing demand", "d": "5/2015"}, {"body": "however definitely consider regression used work detect component invoked block form nt trying work fix deprecation", "d": "5/2015"}, {"body": "also related", "d": "5/2015"}, {"body": "fixed syntax warnings reproduce codes", "d": "5/2015"}, {"body": "patch looks great prefix commit message submit pr", "d": "5/2015"}, {"body": "thanks change commit message submit pr", "d": "5/2015"}, {"body": "share details setup things might important component component supporting cp attributebindings value supplying completely naive guess setting attribute components element invalid value", "d": "5/2015"}, {"body": "tag div value name binding either month day component super bare observer actions changing binding namea fixed error may robert jackson notifications githubcom wrote share details setup things might important component tagname attributebindings component supporting cp attributebindings name value supplying completely naive guess setting attribute components element name invalid value reply email directly view github", "d": "5/2015"}, {"body": "jsbin without jsbin neither jsbin trigger errors tweak simulate scenario bit hopefully get bottom", "d": "5/2015"}, {"body": "rwjblue matches component however using ember canary jsbin might affect things try upgrading ember canary see error persists", "d": "5/2015"}, {"body": "going close happy reopen repro", "d": "5/2015"}, {"body": "take look seems working simple case tweak jsbin show error introduced", "d": "5/2015"}, {"body": "rwjblue switched master test service issue tests pass also gist using master maybe also resolved commit pending release", "d": "5/2015"}, {"body": "worth still passes current beta instead canary", "d": "5/2015"}, {"body": "ok looks like working latest beta going close happy reopen reproduction", "d": "5/2015"}, {"body": "jakehow makes sense use emberservice going forward emberservice emberobject class property see", "d": "5/2015"}, {"body": "believe regression actually left comment pr introduced deprecationwarning cycle", "d": "5/2015"}, {"body": "note made appears addressed jakehow confirm", "d": "5/2015"}, {"body": "changed deprecation included latest beta builds going close happily reopen still issue current beta canary builds", "d": "5/2015"}, {"body": "working master", "d": "5/2015"}, {"body": "jakehow whoop thanks confirming", "d": "5/2015"}, {"body": "looks like timing issue nt setting property like change works", "d": "5/2015"}, {"body": "jmurphyau thanks lot changing indeed throwing error anymore also nt see log output console", "d": "5/2015"}, {"body": "resource explaining able grab hook ca nt find anything related within docs also possible write used controllers make use hook", "d": "5/2015"}, {"body": "updated jsbin example order fire seems gets never triggered", "d": "5/2015"}, {"body": "herom believe event available routes", "d": "5/2015"}, {"body": "question herom wanting change valuehave event fired want happen time enter router want happen controller created singleton app lifetime using events demonstrate issue better understand want behaviour occur might able find right place list events emberroute api docs give detail event fires also log transitions see doc log console particular transitions routes might help also options logtransitionsinternal gives even detail hooks called etc finally setupcontroller hook setupcontroller controller model transition transition param docs source code basic functionality want kick event work controller right property set could play around function sure trying trigger behaviour trying trigger could shed light someone else could suggest best place", "d": "5/2015"}, {"body": "jmurphyau thanks lot follow appreciate lot happen feeding several one components needs one model order show relevant data output second model needs first model order ask backend accompanied data also user change current date data shown specific date like forecast order show user recent data current day set date programmatically user enters route use tasks setup controller name indicates specific initialization want move method gets invoked hook fired easily overwrite without call trigger pulled several defined controller eg current date etc never fire something directly code jsbin get something simle fiddled together show issue meanwhile tend believe issue nothing issue also comes create proto controller extend main router afraid ca nt tell application confidential open source", "d": "5/2015"}, {"body": "think issue might fact relying controllers controllers singletons guess controller initialised route associated meaning ca nt yet send events want also ever happen likely first time user goes page uses particular controller every time navigate back page notice nt firing", "d": "5/2015"}, {"body": "relying fire anything use setting things used particular controller nothing triggered sorry ca nt express clearly enough english native really lack expressions investigation nt think also failing explicitly set controller target route question could like publisherbookauthor example call controller target indeed previously set publisherbookauthor first route going looked action publisherbookauthor one would expect publisherbook obviously ca nt provide desired routes looked action reverse order action declared gets checked really strange", "d": "5/2015"}, {"body": "ok sounded like might obviously create jsbin reproduces issue", "d": "5/2015"}, {"body": "try best come jsbin could need days isolate several calls backend data order get running thanks lot time amp patience jmurphyau rule", "d": "5/2015"}, {"body": "know components way go agreed want least make sure issue documented others absolutely regression definitely need fix thank reporting reproduction", "d": "5/2015"}, {"body": "seems working properly current betacanary builds pr affect legacy view implementation one specifically related blocks fixed", "d": "5/2015"}, {"body": "great update try", "d": "5/2015"}, {"body": "hmm makes somewhat clear case always pass id instead model loaded store think foolishly assumed model hook would get called least first time entering route", "d": "5/2015"}, {"body": "nt believe anything rather pass linkto confusingly telling ember providing model need call nt want speak soon general consensus nt great idea suspect move routable components adjust api amend", "d": "5/2015"}, {"body": "stefanpenner appreciate giving timethoughts agree somewhat confusing noted different ways documentation agree feels like route api could prescriptive especially wregards linkto helper maybe something like linkto color colorid linkto color color invoke model hook whereas linkto color modelcolor would explicitly telling ember want override something", "d": "5/2015"}, {"body": "would explicitly telling ember want override something ya something like although suspect want route better template", "d": "5/2015"}, {"body": "nt believe actually issue although maybe docs improved given newfound understanding doc improvement ideas", "d": "5/2015"}, {"body": "yeah submit docs pr friday usually day contribute", "d": "5/2015"}, {"body": "sounds good close issue", "d": "5/2015"}, {"body": "yep", "d": "5/2015"}, {"body": "one also noticed overrides applied method route nt seem take effect example could set controller something like route would expect resulting param request look something like however remains like expected", "d": "5/2015"}, {"body": "jfelchner design default serializer bases serialization type default value since deserializer must work strings browser window location nt necessarily know type string deserializing using default property type good guess suppose redirecting route property type could known technical reason nt passed serializer first array serialized call page refresh would deserialized back array since types know querystring string default value could imagine default query param serializer might smarter types nt ambiguity type deserializing fact sure nt always use data types arrays", "d": "5/2015"}, {"body": "fall back registered elements ones question registered", "d": "5/2015"}, {"body": "registered ember components hoping create number empty ember components zero functionality", "d": "5/2015"}, {"body": "definitely thing need allow likely done via whitelisting api disabled angle bracket component invocation feature new rfc submitted deal many issues identified", "d": "5/2015"}, {"body": "rwjblue bind registered components fallback ember registered components personally consider angle bracket tags blocked fallback nt think reasonable ember assume ownership error failed lookup could flag team discussion know wycats ebryn told past fallback requirement fine want add warning lint typos suppress declaration like global js", "d": "5/2015"}, {"body": "actually sure model driven views web component thing anymore ignore said nodebind", "d": "5/2015"}, {"body": "actually sure model driven views web component thing anymore ignore said nodebind yes nt believe", "d": "5/2015"}, {"body": "commit caused change type probably looking looks like chrome automatically falls back text type phone provided var e documentcreateelement input etype phone etype text version ember fallback rather relying browser prevent error according commit message", "d": "5/2015"}, {"body": "correct current behavior intentional though agree annoying deal browser inconsistencies like", "d": "5/2015"}, {"body": "get rid deprecation case", "d": "5/2015"}, {"body": "seem like bug recommend staying clear arraycontrollers itemcontrollers deprecated favor components immediate problem using arrayitem controller combo pretty sure syntax item controller however error got seems suggest parent controller using supposed arraycontroller", "d": "5/2015"}, {"body": "seem like bug following official guide assumes also using code shown guides nt work get error mentioned bug either code documentation recommend staying clear arraycontrollers itemcontrollers deprecated favor components already told week ago currently available tutorials explain ember concepts using controllers wanted understand building blocks ember following older tutorial migrate newer stuff following deprecation list would appreciate could point newer tutorial uses components instead arraycontrollers itemcontrollers immediate problem using arrayitem controller combo pretty sure syntax item controller nt seem work seeing using different combinations arguments everything rendered fine actions handled nothing rendered get console uncaught error assertion failed value loops must array passed dsfilteredrecordarray wrapped generated todosactive controller nothing rendered console uncaught error assertion failed value loops must array passed minitodo controller array arraycontroller", "d": "5/2015"}, {"body": "could point tutorial uses components instead arraycontrollers itemcontrollers helps although tutorial", "d": "5/2015"}, {"body": "artych thanks", "d": "5/2015"}, {"body": "alco least correct documentation work associated ember version get transition components really tough anyone trying learn ember moment nt official guide covering scratch transition guides well one already fully understands things right much use beginners", "d": "5/2015"}, {"body": "alco resolved problem", "d": "5/2015"}, {"body": "googya skipped part guide explained use itemcontroller finished rest afterwards able go back skipped part implement using components instead actual bug still unresolved big deal learned components", "d": "5/2015"}, {"body": "believe dunno review spec see needs change", "d": "5/2015"}, {"body": "rwjblue correct believe", "d": "5/2015"}, {"body": "truenorth double check", "d": "5/2015"}, {"body": "ok need bump gitrepoversion version used emberjsbuild release update emberjsbuild dep ember", "d": "5/2015"}, {"body": "rwjblue open second pr get new version tagged", "d": "5/2015"}, {"body": "need something", "d": "5/2015"}, {"body": "however resetnamespace documented public api understand code correctly merely flag router differentiate thisroute thisresource thanks asking personally consider private api moment opposed making public folks see need longer term sure preventing refactor nested layout justifies supporting concepts long term seems point deprecations refactoring better pattern definitely agree formally decide folks know going forward", "d": "5/2015"}, {"body": "pretty strongly favor way reset namespaces big app get really gnarly without pods dirs layers deep", "d": "5/2015"}, {"body": "example realize currently public api resetting namespace", "d": "5/2015"}, {"body": "realize currently public api resetting namespace technically deprecated yet still currently public api though think would agree long term good", "d": "5/2015"}, {"body": "duplicate would mind chiming repro", "d": "5/2015"}, {"body": "need reproduction able help deprecation seems unrelated fact route present", "d": "5/2015"}, {"body": "right related thought deprecation gone short time somehow generated new route beginner ember maybe stupid beginners mistake deprecation also appear ember inspector", "d": "5/2015"}, {"body": "quick review nt seem like deprecation coming code could either emberinspector issue recently fixed addon might using regardless source clearer coming created track fixing deprecation message going go ahead close", "d": "5/2015"}, {"body": "problem able reproduce jsbin", "d": "5/2015"}, {"body": "issue workaround better way app setup calling initializer register setup controller look run setup callback expected logs deprecation stating nt lookup initializer however move setup instance initializer app nt load instance initializer never called move instance initializer late nothing app loads setup called look setup controller initializer", "d": "5/2015"}, {"body": "rwjblue could include one milestone", "d": "5/2015"}, {"body": "sure possible defer readiness instanceinitializer currently instance initializers called actual boot process believe late defer readiness instance initializers definitely put code needs lookup various factories whatnot container everything registered noninstance initializers still place well completely deprecated one solution need defer readiness populate things onto factory container could use types initializer specific purpose something like following", "d": "5/2015"}, {"body": "ssured mupkoo solve problem fetch data initializer wait data come back register controller need inside right", "d": "5/2015"}, {"body": "experimenting making tag name details emerge shortly think work currently way", "d": "5/2015"}, {"body": "mixonic mean future eg create component", "d": "5/2015"}, {"body": "unlikely allow overriding nondashed element like example initial question intentionally support angle bracket components bit work needed general use cases currently bug closing issue stay tuned updates smilecat", "d": "5/2015"}, {"body": "confirm still plan allow creating components render alternate tag names opt mentioned point", "d": "5/2015"}, {"body": "elucid expect still alternate tag name solution yes discussion land anything", "d": "5/2015"}, {"body": "phew picky approach eventually supported way ability override would huge limitation thanks", "d": "5/2015"}, {"body": "populated cases others ember use determine children longer getting sync maintained nt notice would great jsbin demo disputing statement though", "d": "5/2015"}, {"body": "runspired jsbin would help us know directly related", "d": "5/2015"}, {"body": "mixonic containerview sure related actually containerview yesterday reworked components moved try glimmer found issue whip jsbin", "d": "5/2015"}, {"body": "working code demo broken glimmer working", "d": "5/2015"}, {"body": "yes know private api private api seen many need nt condone registering children way composable components case children children generated parent component", "d": "5/2015"}, {"body": "alternatives scenario pass parent child addons register pass registerunregister actions child think like latter better would possible use instead", "d": "5/2015"}, {"body": "rwjblue alternative implemented pass child child call int adds child orders according child content index content array", "d": "5/2015"}, {"body": "key difficult thing maintaining accurate order need mirror changes array changes generated childviews array", "d": "5/2015"}, {"body": "could reset array parents reregister childs always guarantee order sample", "d": "5/2015"}, {"body": "take called even array partial change", "d": "5/2015"}, {"body": "answered question think closable approach workable flexible difficult", "d": "5/2015"}, {"body": "workable flexible difficult also think easier understand even folks new ember since much declarative going dramatic lack magical private apis smileycat", "d": "5/2015"}, {"body": "also breaks implement easy way sure register linkto helper view component", "d": "5/2015"}, {"body": "yeah reworked way attributes calculated much saner way look backporting fix point doubt release another fix", "d": "5/2015"}, {"body": "must deprecate well", "d": "5/2015"}, {"body": "mixonic definitely deprecated already", "d": "5/2015"}, {"body": "yes find documentation array documentation documentation enumerable documentation", "d": "5/2015"}, {"body": "duplicate", "d": "5/2015"}, {"body": "rwjblue saw issue however work", "d": "5/2015"}, {"body": "ugh turning habit need update release docs properly sorry troubles", "d": "5/2015"}, {"body": "confirmed thanks lot dizzy", "d": "5/2015"}, {"body": "martndemus give us complete example think know saying want sure", "d": "5/2015"}, {"body": "talking canary unsure exactly rendered inside yielding components template component application view though believe new behavior correct case", "d": "5/2015"}, {"body": "martndemus believe may indeed changed going view change bugfix robert demo nt show view passed helper component however whatever keyword would place example reads reasonable expect template canary works predictable way across many situations whatever old view inappropriate us pass helper old behavior passing component view violation transparency yielded block idea component yields everything yield goes back scope component called", "d": "5/2015"}, {"body": "actually meant canary", "d": "5/2015"}, {"body": "martndemus great thank clarifying definitely seems like bug", "d": "5/2015"}, {"body": "problem hope get fixed soon", "d": "5/2015"}, {"body": "awesome", "d": "5/2015"}, {"body": "yes guide definitely updated use embercli focused narration done deployed guides published thanks reporting", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "attribute bindings standard builtin elements one way get initial value get automatic updates component think definitely get working long run likely use helper specifically created wrapping adding functionality need", "d": "5/2015"}, {"body": "see thanx rwjblue", "d": "5/2015"}, {"body": "oh dom", "d": "5/2015"}, {"body": "rwjblue looks like readonly property returning target form htmlselectelement", "d": "5/2015"}, {"body": "inclined thing actually bug explain considered ember bug", "d": "5/2015"}, {"body": "setattribute works correctly js documentcreateelement select gt ssetattribute form foo gt undefined sform confusingly gt null sgetattribute form gt bar", "d": "5/2015"}, {"body": "appears ember setting property attribute suspect attrnode needs aware actually property something seems extremely fishy cc mixonic believe familiar codepath wrote thoughts", "d": "5/2015"}, {"body": "ember always set property property exists decided around probably deem always attribute ensuring return value normalizeproperty", "d": "5/2015"}, {"body": "believe also affects likely suspect need nail heuristics see strange attributes exists need take account", "d": "5/2015"}, {"body": "wonder handle via", "d": "5/2015"}, {"body": "stefanpenner could cause calculations due reading properties alternative create list readonly attributes dom specification searching reveals", "d": "5/2015"}, {"body": "vectart across many elements combination permutation also dom changes time", "d": "5/2015"}, {"body": "vectart could likely cache outcome minimize chance issue", "d": "5/2015"}, {"body": "considering thinking building list readonly attributes checking element prototype solution overcomplicated js element documentcreateelement select attr form dictionaries might generated creating elements bruteforcing attributes htmlselectelementreadonlyattributes type form option htmlobjectelementreadonlyattributes form contentdocument check impossible set attribute element instanceof htmlselectelement amp amp htmlselectelementreadonlyattributesindexof attr gt set element attr value else element attr value", "d": "5/2015"}, {"body": "thinking building list readonly shipping list computing", "d": "5/2015"}, {"body": "stefanpenner possible ship performed speed test frequent used interfaces displays quite low overhead", "d": "5/2015"}, {"body": "purposes think limit map list entries list", "d": "5/2015"}, {"body": "rwjblue updated test recommendation", "d": "5/2015"}, {"body": "seems good integrate amp test vectart want take", "d": "5/2015"}, {"body": "stefanpenner glad contribute work today", "d": "5/2015"}, {"body": "prefer see dynamic system instead whitelist", "d": "5/2015"}, {"body": "prefer see dynamic system instead whitelist somewhat unsure well pro work done upfront rely heuristics guess something attr prop con lose sync dom changes time system current attempts detect driven", "d": "5/2015"}, {"body": "mixonic list converted idl definitions years old quite stable", "d": "5/2015"}, {"body": "mixonic hmm wont detection screwed glimmer reuses dom produced ssr current check merely existence property deems property attribute theory would confuse check suspect would result attributes incorrectly characterized properties suspect also confused overlap acceptable mixonic share", "d": "5/2015"}, {"body": "stefanpenner attributes become properties example set html become property think implying", "d": "5/2015"}, {"body": "ca nt really safely detect attributes throw set means copious amounts trycatch based detection debugging hazard want avoid think whitelist right way", "d": "5/2015"}, {"body": "also readonly suspect list larger suspect", "d": "5/2015"}, {"body": "edit content large display reasonably true list readonly appears far far big actually ship options detect attributes actually attempted support webidl level readonly attributes detect readonly attributes combination hardcoding common readonly attributes detection", "d": "5/2015"}, {"body": "thought although someone sanity check actually believe need care js var readonlyattrbytag select form option form input form textarea form button form label form fieldset form legend form object form documented readonly properties really meaning custom attributes users use attributes", "d": "5/2015"}, {"body": "interesting discovery thanks jayphelps following setattribute works please note read form element inserted also note order insertion nt matter", "d": "5/2015"}, {"body": "note might actually able detect instances htmlbars observe nt readonly technically nt setter makes effectively readonly hence error attempt write whether descriptor crossbrowser support different story", "d": "5/2015"}, {"body": "jayphelps correct also appears attribute one found far likely hardcode solution curious find ones", "d": "5/2015"}, {"body": "one workaround", "d": "5/2015"}, {"body": "jayphelps use gopd detect missing setter", "d": "5/2015"}, {"body": "stefanpenner working testing solution uses everyoneelse getownpropertydescriptor works dom objects running knowledge test whether prevent hardcoded list instead detect readonly behavior given property", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "stefanpenner stuckouttongueclosedeyes simple close could cause even browser nt custom components hold horses", "d": "5/2015"}, {"body": "jayphelps yes question setattribute used modes active", "d": "5/2015"}, {"body": "quick list attributes still unable find another attribute requires beyond basically think looking readonly meant updating", "d": "5/2015"}, {"body": "also crashes browser slows app significantly console open work app uses lot computed element positioning", "d": "5/2015"}, {"body": "thanks reporting try get fixed today", "d": "5/2015"}, {"body": "think related embercli resolver directly trouble replicating error similar circumstances simple jsbin attempt assertion triggered resolver jsbin figure scenario triggers", "d": "5/2015"}, {"body": "also seeing trying create reproducible case also noted looking many nondashed things container add template also look seems incorrect requested container", "d": "5/2015"}, {"body": "getting well", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "think simplest thing would implement resolver sort brand check adding returned factory assert check nt pass", "d": "5/2015"}, {"body": "thanks info able spend time issue week", "d": "5/2015"}, {"body": "going go ahead close issue definitely look forward reviewing pr", "d": "5/2015"}, {"body": "thanks reporting closing duplicate", "d": "5/2015"}, {"body": "sorry overlooked one searching similar bugs thanks", "d": "5/2015"}, {"body": "worries thanks taking time submit issue reproduction", "d": "5/2015"}, {"body": "browser behavior one ember adding mix calling element returning string see plain html js demo asking ember data automatically convert values back number attribute set take look attempted add autoconversion attribute set last comment igort almost certain still true think decided path hard properly transforming data coming record users code really user responsibility sure automagically record layer even works properly would probably create issue different parts app example transform select value without select knowing seems like selection could easily get mismatched backing data", "d": "5/2015"}, {"body": "rwjblue ok recommended practice case add computed property forces value integer trying understand ember way accomplishing", "d": "5/2015"}, {"body": "temporary workaround want functionality nt want leave beta switch observer workaround jsbin", "d": "5/2015"}, {"body": "intentional attributes available init legacy aka curly bracket component behavior using angle bracket invocation component must initialization didinitattrs blog postguide released soon review new life cycle hooks use definitely sorry confusion", "d": "5/2015"}, {"body": "problem busy playing around everything p thanks everything guys", "d": "5/2015"}, {"body": "bug fixed final", "d": "5/2015"}, {"body": "jamesarosen services must funky error though nt believe one normally see confirm failure", "d": "5/2015"}, {"body": "exactly use nt require", "d": "5/2015"}, {"body": "jamesarosen yeah bunch code nt use bit looking forward getless future", "d": "5/2015"}, {"body": "okay got big ugly integration test reproduces failure git bisect reveals caused regression completeness failing test nt understand ember internals well enough know best thing could always open pr adds test reverts commit think", "d": "5/2015"}, {"body": "botandrose helpful thank taking time bisect", "d": "5/2015"}, {"body": "problem let know anything else help", "d": "5/2015"}, {"body": "confirmed absolutely regression", "d": "5/2015"}, {"body": "fixed updated canary jsbin", "d": "5/2015"}, {"body": "wycats failing silently called proxy rendering imo either blow work blowing fine silently failing seems really weird oskarrough work around better well wrap see", "d": "5/2015"}, {"body": "mixonic thank way enable twoway binding well eg changing input change value component", "d": "5/2015"}, {"body": "oskarrough two way binding changing parent component rendering currently unsupported behavior might changing raise instead fail silently may consider regression unsure point", "d": "5/2015"}, {"body": "alright thanks looking jsbin changing input nt change component title needed make sure component updates well", "d": "5/2015"}, {"body": "oskarrough looks like another regression", "d": "5/2015"}, {"body": "mixonic interesting note issue may related issue render using property set parentview change causing rerender", "d": "5/2015"}, {"body": "using pass component another use action target seems broken reason canary", "d": "5/2015"}, {"body": "dschmidt description closely resembles almost certainly related issue", "d": "5/2015"}, {"body": "see comment description going better go forward pattern another jsbin demoing", "d": "5/2015"}, {"body": "demo jsbin", "d": "5/2015"}, {"body": "problem", "d": "5/2015"}, {"body": "browser error message latter case think browser confused click stack trace taken contentaddarrayobserver arrayproxyprototypesetupcontent one hypothesis prototype extensions", "d": "5/2015"}, {"body": "happen embercli addon intentionally disable prototype extensions addons developing addon", "d": "5/2015"}, {"body": "indeed", "d": "5/2015"}, {"body": "done help ensure addon authors require extensions since guaranteed available applications use addon", "d": "5/2015"}, {"body": "require prototype extensions code nt use prototype extensions ember core code calling native", "d": "5/2015"}, {"body": "emberselect require prototype extensions use requires thing iterated things like others case wrapping selects content need likely remove requirement pr stefanpenner work update docs meantime use", "d": "5/2015"}, {"body": "trick assumed wrapping wanted wrong wrapping thanks", "d": "5/2015"}, {"body": "closing duplicate", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "class new element old one", "d": "5/2015"}, {"body": "running ember see either elements transitions may pm damian senn notifications githubcom wrote class embertransitioningin new linkto element embertransitioningout old one reply email directly view github", "d": "5/2015"}, {"body": "agree seems like available pr sure nt see locally", "d": "5/2015"}, {"body": "ah added master six days ago", "d": "5/2015"}, {"body": "pr landed quite ago included ember going close seems question answered newer versions nt much point", "d": "5/2015"}, {"body": "welp good", "d": "5/2015"}, {"body": "cibernox happen time poke around one", "d": "5/2015"}, {"body": "time today", "d": "5/2015"}, {"body": "ok davewasmer looking bug code new cp equivalent code using old syntax example using old syntax always return getter setter correct way things example new syntax calling returning call returns property value set anything return setter function gets cached new value property jsbin new syntax change desired behaviour diff let parent emberobjectextend foo starting value foo embercomputed get consolelog parent getting foo return thisget foo set key value consolelog parent setting foo value return thisset foo value thisset foo value return thisget foo alternatively change jsbin old syntax match behavior new one diff let parent emberobjectextend foo starting value foo embercomputed function key value argumentslength gt thisset foo value return thisset foo value return thisget foo wrong behaviour", "d": "5/2015"}, {"body": "cibernox thank digging sorry nt catch reviewed jsbin davewasmer going close happy reopen explanation nt fixhelp", "d": "5/2015"}, {"body": "cibernox ah okay makes sense thanks help rwjblue think probably rtfm bit closely wink", "d": "5/2015"}, {"body": "really bad ember set nt return value super would work", "d": "5/2015"}, {"body": "yeah even really sure return cp instance anyways fixable would semver breakage", "d": "5/2015"}, {"body": "surprised refactoring cps maybe initial intention allow kind chaining", "d": "5/2015"}, {"body": "open changing least seeing breaks", "d": "5/2015"}, {"body": "schedule today given going investigate give better hint problem lies deprecated setter", "d": "5/2015"}, {"body": "would prefer mimic behavior would semver break likely coming soon rwjblue weeks change cd sure deprecate though", "d": "5/2015"}, {"body": "stefanpenner think check area return value setter descriptor raise warning could cause gazillions deprecation warning need set flag object something", "d": "5/2015"}, {"body": "stefanpenner rwjblue found happens apparently intentional although nt see utility chaining introduced commit exactly years ago last opportunity change ember never hand g scary modify something internal quick grep shows chaining used emberjs internally tests fail actually testing feature nt see deprecate either", "d": "5/2015"}, {"body": "last opportunity change ember never hand g scary modify something internal would love kill vote would brief ping core chat reveals nt realize even thing concerned deprecation path though incases like believe pain better future pain maybe nice blogpost doit", "d": "5/2015"}, {"body": "reverted ember bug gone implementation different course", "d": "5/2015"}, {"body": "attempted replicate scenario described jsbin properly triggers route action", "d": "5/2015"}, {"body": "ahh appears passing action name string template rather bound property resolves string like definitely triggering bug sendaction code demo", "d": "5/2015"}, {"body": "possibly related ca nt send actions components since isolated test cases included", "d": "5/2015"}, {"body": "working fix hour two", "d": "5/2015"}, {"body": "mixonic thanks lot assuming bugs arewere related tried dice testcase ideas", "d": "5/2015"}, {"body": "oskarrough issue completely unrelated", "d": "5/2015"}, {"body": "mixonic rwjblue thanks fixing", "d": "5/2015"}, {"body": "note built completely new ember app using embercli problem investigate see internal apps fail upgrade", "d": "5/2015"}, {"body": "toranb believe known issue ticket somewhere find", "d": "5/2015"}, {"body": "found related ticket rwjblue already working seems", "d": "5/2015"}, {"body": "using could related", "d": "5/2015"}, {"body": "broken app using location hash new embercli app tried auto hash seemed make difference", "d": "5/2015"}, {"body": "fails brand new app embercli", "d": "5/2015"}, {"body": "toranb take look proposed pr ran exact issue today could nt stop digging fixes issue eyes code would make feel better", "d": "5/2015"}, {"body": "fixed thanks elskwid", "d": "5/2015"}, {"body": "awesome plans release week rwjblue", "d": "5/2015"}, {"body": "release sure exactly small number regressions need fixed also meantime able use always latest build release channel get fix", "d": "5/2015"}, {"body": "cc dgeb", "d": "5/2015"}, {"body": "intentional allowed ember emberdata register default module could supplanted userprovided one cc stefanpenner", "d": "5/2015"}, {"body": "intentional another mechanism replacing registrations tests currently use service handle atypical backend adapters take advantage stubbing requires private apis found solution via discuss thread points information workaround stackoverflow post recommend stubresolver stublookup approach manually access container registry cache far tell best way today given done way stefanpenner emberjobs cc rondalesc using approach emberweekend", "d": "5/2015"}, {"body": "saladfork nt disagree issue feel pain despite technical level nt think solution easy igor describes perhaps something timeframe next weeks make sure things better moving forward like hear stef thoughts vacationing week worth approach mock party apis find good parallel ajax stubbed xhr object level acceptance tests work triggering user interactions means acceptance tests truly test code leaving isolating tests integration unit testing find several mocks project though everyone different requirements", "d": "5/2015"}, {"body": "mixonic thanks reply discussion irc though stubbing xhr level difficult api makes requests one endpoint longpolls another responses agree true test two points irc discussion mixonic suggested dynamically choosing service gets injected runtime using property environment normally tests override might also able service file avoid importing everywhere chrism suggested technique highlighted blog post write initializer inject normal service default allow passing alternate service used testing require naming service differently avoid conflict resolver course techniques applied adapters nonservices would nice see recommended way stubbing things", "d": "5/2015"}, {"body": "mixonic testing currently applicationregistry fallback registry even solving would nt fix however passed testregistry would solve problem without change register", "d": "5/2015"}, {"body": "otherwise emberemberdata providing fallback seems like case", "d": "5/2015"}, {"body": "think come across issue going file bug sure bmac would mind awfully clarifying issue", "d": "5/2015"}, {"body": "looks like issue", "d": "5/2015"}, {"body": "ok thank", "d": "5/2015"}, {"body": "believe running something similar noninstance initializer exists emits deprecation warning looks like instance initializer nt exist looks like two objects different", "d": "5/2015"}, {"body": "ah problem second nt instance application instance applicationinstance confusing", "d": "5/2015"}, {"body": "believe issues original issue whereby unable inject routes instance applicationdeferreadiness nt available fiddle according blog post documentation changes", "d": "5/2015"}, {"body": "would nice get fixed", "d": "5/2015"}, {"body": "btecu would happily ship fix pr submitted time take look", "d": "5/2015"}, {"body": "seeing thing well emberclihappysplitter among uses using parentview manually set target embercomponentsend sends actions right place create computed properties embercomputedreadonly parentviewsomeparentproperty structure similar also support arbitrary levels nesting handlebars happysplitcontainer happysplitview left panel happysplitview happysplitterbar happysplitview happysplitview happysplitcontainer", "d": "5/2015"}, {"body": "wycats seems maybe definition changed mean view managing light dom component", "d": "5/2015"}, {"body": "also seems affect use see ember vs ember", "d": "5/2015"}, {"body": "nearestoftype nearestwithproperty parentview seem changed common pattern follow child components pulling data pushing data wrapper sort", "d": "5/2015"}, {"body": "seeing canary potentially big change nested components commonly used", "d": "5/2015"}, {"body": "seems break large number addons", "d": "5/2015"}, {"body": "unfortunately preventing much indepth testing branch", "d": "5/2015"}, {"body": "given relatively large number addons affected think attempt match semantics within component given initial example inside instances calling return instance even though definitely fix issue believe better pattern would use block params provide instance parent example would become yes realize may aesthetically pleasing easier reason long run think following best api allows child component completely scoped parent without manual wiring still quite declarative syntax unlocked time work tldr think deprecate accessing suggest using block params", "d": "5/2015"}, {"body": "rwjblue would bring semantics closely line ruby conventions like mean deprecated well", "d": "5/2015"}, {"body": "truenorth unsure confer smart core team members trollface", "d": "5/2015"}, {"body": "mean nearestoftype nearestwithproperty deprecated well would like explore", "d": "5/2015"}, {"body": "fix issue decided deprecate accessing moment make much sense force component authors switch alternative switch scoped helpers based solution lands hopefully early release", "d": "5/2015"}, {"body": "ran similar use case sure whether semantically correct inherit template worked around specifying layout name child component rendering block", "d": "5/2015"}, {"body": "seems pretty unlikely adopted overriding component much something child component via inheritance would want imo want way call template accomplish want templates play absolutely role inheritance flow right making aware rough sell hm", "d": "5/2015"}, {"body": "mixonic seems counter intuitive able sort inheritance parent component lot common functionality dom elements obviously want child component extend js functionality provision pulling common dom parent template unless use partials blows away point component inheritance actually use component blocks forces duplicate code", "d": "5/2015"}, {"body": "managed get behaviour describing working sure would recommend likely going move away favour tagless components achieved setting components property parent component template property child current component using ember cli pod structure particular way get work basically component resolved ember try find file found uses template property completely ignoring explicitly set property need trick ember calling child component template something anyway sure explained well enough nt example might help previously logged issue ember cli issue link repo shows got inheritance work", "d": "5/2015"}, {"body": "layout represents components shadow dom template light dom contents yield gets rendered outer scope definitely nt think viable longterm solution may weird edge cases", "d": "5/2015"}, {"body": "let assume minute inheritance chain like parent child child child would recommended way use common elements level final child component would make sense way templates work together", "d": "5/2015"}, {"body": "compiled template object stored property like property instance way arbitrarily yank parts object replaced superclass property think suggested fairly viable idea implementation ramifications across apps unclear like always call super case parent seems onerous hope agree nt trivial solution problem require lot thought api design work", "d": "5/2015"}, {"body": "yeah definitely nt think trivial solution easier solutions could bad implications sure get right think would useful changing everything components still requiring use partials nt supported feels incomplete realize may implemented anytime soon agree need mixonic", "d": "5/2015"}, {"body": "could something like", "d": "5/2015"}, {"body": "outputs html calling grandparent component parent component child component wasis problem tagless components advantage end one div grandparent component parent component child component", "d": "5/2015"}, {"body": "jmurphyau consider option along lines wo nt wrapping like cause us pass variables back chain grandparent component", "d": "5/2015"}, {"body": "would expect yeah", "d": "5/2015"}, {"body": "like avoid may way around though would really like see implemented would slick", "d": "5/2015"}, {"body": "completely modified method found conversion method deprecation guide", "d": "5/2015"}, {"body": "hi chrishonniball moment struggling error uncaught error assertion failed value loops must array passed controller array arraycontroller following tutorial code code tell changes made", "d": "5/2015"}, {"body": "problem upgrading ember ember cli depend deprecated syntax helper seems remove itemcontroller error goes away solution", "d": "5/2015"}, {"body": "currently use helper get controller functionality going deprecated works know components new way ca nt organized nice ember cli directory structure method", "d": "5/2015"}, {"body": "know components new way ca nt organized nice ember cli directory structure method ca nt components nice directory structure", "d": "5/2015"}, {"body": "problem upgrading ember ember cli remove emberdisableproxycontrollers changes generally good new apps break usage depend deprecated syntax helper seems remove itemcontroller error goes away solution deprecated removed point future definitely suggest refactoring avoid using deprecated features", "d": "5/2015"}, {"body": "ca nt components nice directory structure able tried past nt work ca nt remember version ember cli back though adopted helper compensate would component look replaced", "d": "5/2015"}, {"body": "okay thank much rwjblue explanation", "d": "5/2015"}, {"body": "able ember g component pathtosomething yes tried past nt work supported ember sure blueprints updated support subdirectory paths though would component look replaced would invoke directory path component similar remember components need hyphen looked properly", "d": "5/2015"}, {"body": "thanks detailed bug report try investigate tonight see exactly going", "d": "5/2015"}, {"body": "addresses issue still looking one", "d": "5/2015"}, {"body": "raycohen greatly simplified implementation really get array may simple keep eye feedback coming making change scoured web anyone using nt find anything ability append child view removed api tied handlebars templates rendered would difficult implement fairly number old codebases let keep open get feedback unless guys compelling usecase likely invest time getting behave exactly handlebars", "d": "5/2015"}, {"body": "ember data issue using latest version", "d": "5/2015"}, {"body": "using ember data updated good thanks alot beers", "d": "5/2015"}, {"body": "provide jsbin reproduction help us understand issue", "d": "5/2015"}, {"body": "sorry forgot put js bin", "d": "5/2015"}, {"body": "yup happening well", "d": "5/2015"}, {"body": "deprecation actually correct bitten mistakenly suggested folks use exact use case past first let try explain deprecation correct executes executes new created invocation property set property changing new instance triggers rerender lets talk better strategy truly sorry gave original idea make computed property determine use computed property benefits multiple use much easier follow pattern percentage folks know relatively small controlling initial value avoid triggering nested rerenders deprecation hopefully resolves issue happy reopen", "d": "5/2015"}, {"body": "rwjblue tried modifying example generate input component within parent template would eliminate need explicitly define computed properties removing boilerplate however property evaluate handlebars expression rendering fundamental reason setter behave eg attribute", "d": "5/2015"}, {"body": "rwjblue got working custom concat helper", "d": "5/2015"}, {"body": "thanks jesenko solution much palatable components eventually use angle brackets get rid helper angle brackets work input helper", "d": "5/2015"}, {"body": "definitely weird need dig bit idea root cause", "d": "5/2015"}, {"body": "thanks reporting get fixed soon", "d": "5/2015"}, {"body": "hmm seem case quick demo get proper attributes share repro feel free tweak mine", "d": "5/2015"}, {"body": "demo work expected going close reopen reproduce thinking template compiler version something sort investigate thanks responsive apologizes putting together jsbin prior", "d": "5/2015"}, {"body": "worries please let us know track cause", "d": "5/2015"}, {"body": "looking similar issue morning although nt complaining missing router instead missing template view specifically never called", "d": "5/2015"}, {"body": "bdvholmes registered automatically unit tests emberqunit registered based integration tests due issue describe solution outlined nt time tackle yet", "d": "5/2015"}, {"body": "rwjblue awesome thanks leave missing router error", "d": "5/2015"}, {"body": "address need verify merged", "d": "5/2015"}, {"body": "appear solved issue still test failures using app", "d": "5/2015"}, {"body": "yep closer router available initialized properly whackamole play", "d": "5/2015"}, {"body": "made repo demonstrating issue", "d": "5/2015"}, {"body": "nt believe ember core capacity maintain two templating languages emblem almost certainly remain community project", "d": "5/2015"}, {"body": "updated approuterjs podspropertyroutejs refresh get error error processing route property unexpected end input syntaxerror unexpected end input either something weird docs nt explaining things correctly", "d": "5/2015"}, {"body": "jimmyjamieson better served opening issue embercli repo", "d": "5/2015"}, {"body": "stavarotti think cli issue give try", "d": "5/2015"}, {"body": "jsbin mean remove block problem disappears", "d": "5/2015"}, {"body": "thanks report jsbin help us isolate cause", "d": "5/2015"}, {"body": "created failing test case", "d": "5/2015"}, {"body": "also facing issue updates", "d": "5/2015"}, {"body": "glennfu private api use instead agree assertions helpful though", "d": "5/2015"}, {"body": "selvagsz maybe private time used widely examples easy way reset scrolltop using maybe oldest piece original code left app happened took well day trace error", "d": "5/2015"}, {"body": "always good idea much better looking version implementing framework methods hooks method marked private since prior may possible ensure called mentioned app linting perspective see way ember could determine runtime", "d": "5/2015"}, {"body": "rwjblue marked nt stopped examples google ember reset scrolltop second link first non emberdocs link", "d": "5/2015"}, {"body": "runspired sadly power make examples ever use public api give good advice smilecat end really nt issue publicprivate think way issue requesting enforce usage ember without also breaking capability override things might able done via build step ember cli though", "d": "5/2015"}, {"body": "issue object using mixin difference service injected object mixin object instantiated via container", "d": "5/2015"}, {"body": "et error correct create object provided container thus injection made need pull object container nullrocket factory instantiated container injected factory also container injection expected work nt reproduction would great going close ticket please reopen make new issue missed something", "d": "5/2015"}, {"body": "need add filename linecolumn info deprecation", "d": "5/2015"}, {"body": "tackle shortly", "d": "5/2015"}, {"body": "thanks raising issue looking", "d": "5/2015"}, {"body": "resolved", "d": "5/2015"}, {"body": "rwjblue thanks quickness", "d": "5/2015"}, {"body": "problem please continue testing report issues crop", "d": "5/2015"}, {"body": "fairly certain understand issue would mind throwing jsbin together make sure right track", "d": "5/2015"}, {"body": "sure one available soon", "d": "5/2015"}, {"body": "go", "d": "5/2015"}, {"body": "error coming attempt set property element error indicating setter function exists element browser please provide jsbin reproduction", "d": "5/2015"}, {"body": "rwjblue yes correct throws error current workaround happening zombie headless simulated browser need reproduce error", "d": "5/2015"}, {"body": "quick glance leads believe helper js emberhtmlbarsregisterhelper mycolumn function params hash options env var parentview typeof object amp amp thisisview envdataview var props template optionstemplate var prop hash hashhasownproperty prop props prop hash prop delete hash prop hashprops props hashcontext emberget parentview context hashmorph optionsmorph parentviewappendchild appmycolumncomponent hash aims accomplish following adds indirection arbitrary component based logic rendered inplace helper passes attrs forward possible missing something maybe help shape exploration would interesting could may able following maybe something like", "d": "5/2015"}, {"body": "guess instead", "d": "5/2015"}, {"body": "spot fixed", "d": "5/2015"}, {"body": "teddyzeenny thanks tracking making fix easy", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "rwjblue knew made pr submitting issue also fixed apparently sometimes also checks exists calling", "d": "5/2015"}, {"body": "bantic nah mention working fix comment trying responsive possible glimmer regressions got overeager", "d": "5/2015"}, {"body": "yeah got overeager realized easy fix", "d": "5/2015"}, {"body": "awesome thank much planning work angular components tomorrow try get running afterwards", "d": "5/2015"}, {"body": "huge thanks tackling", "d": "5/2015"}, {"body": "would love help adding section guides", "d": "5/2015"}, {"body": "mixonic nothing would love help nt know answer hence forum post", "d": "5/2015"}, {"body": "changed using jquery set using direct dom methods via internal domhelper works using using something like blows apparently phantom", "d": "5/2015"}, {"body": "ok thanks clarification quick check phantomjs behaves js var el documentcreateelement button elsetattribute type submit consolelog elgetattribute type output submit var documentcreateelement button submit consolelog type output null sure exact dom specification regarded bug phantom file bug report phantomjs chance workaround ember meantime", "d": "5/2015"}, {"body": "using setting property like apparently throws error phantomjs", "d": "5/2015"}, {"body": "yes understand tested example back question clearly blame phantomjs standards compliant nt supposed use phantomjs fault still chance workaround ember", "d": "5/2015"}, {"body": "tested example ha indeed sorry clearly blame phantomjs yes think still chance workaround ember possible us work around similar thing elements mixonic thoughts", "d": "5/2015"}, {"body": "rwjblue would fix issue whitelisted right", "d": "5/2015"}, {"body": "mixonic confirm yes think correct", "d": "5/2015"}, {"body": "experiencing something similar emberxselect form attr long binding select failing build suggestions", "d": "5/2015"}, {"body": "also blocking updating embercliasyncbutton", "d": "5/2015"}, {"body": "rwjblue", "d": "5/2015"}, {"body": "stefanpenner confirmed however returns setting type without", "d": "5/2015"}, {"body": "type reflected attribute enumerated attribute specific known values reflected attribute fix tests repo using instead use reading credit mixonic correct details mistakes mine smile", "d": "5/2015"}, {"body": "stefanpenner confirmed however getattribute returns null setting type without setattribute good point", "d": "5/2015"}, {"body": "thoughts", "d": "5/2015"}, {"body": "another one getting funny rwjblue thanks hint fixes one test expect button type submit default anyway however test buttontype button still fails way seems even property changed unless using see example", "d": "5/2015"}, {"body": "could somehow get travis update phantom avoid headache", "d": "5/2015"}, {"body": "could somehow get travis update phantom avoid headache think ie issue aswell", "d": "5/2015"}, {"body": "bcardarella tell travis use phantom credit truenorth", "d": "5/2015"}, {"body": "aware default causing headache people thursday may robert deluca notifications githubcom wrote bcardarella tell travis use phantom credit truenorth reply email directly view github brian cardarella ceo dockyard visit us call us dockyrd follow twitter follow us twitter", "d": "5/2015"}, {"body": "chiming confirm noncompliance spec phantomjs et al whack mole fixes assuming drunk pr fix", "d": "5/2015"}, {"body": "definitely regression fwiw strongly suggest use emberwormhole manage attaching app different places dom attaches application body lets target existing element ids dom rendering since skip using still proper event handling view live part rending cycle change routes instead still regression", "d": "5/2015"}, {"body": "thanks works", "d": "5/2015"}, {"body": "fixed lands", "d": "5/2015"}, {"body": "would actually like remove enumerable favor something aligned iterable think add things could get different library like corejs thorough cleaning legacy concepts area enumerable also introduces enumerable change events really nothing uses costs us also enumerable doesnt even correctly", "d": "5/2015"}, {"body": "fact use corejs polyfill stuff nt work hasmany relations stuff could upgrade path kind things", "d": "5/2015"}, {"body": "stefanpenner recently updated enumerableutils docs planned cleanup arrayproxy make clear methods kvo compliant versus nt put effort towards wait", "d": "5/2015"}, {"body": "anglebrackets framework components huge selling point angular since adopted reactjs recent frameworks similarly used anglebrackets framework components controversial syntax effectively consensus syntax feature time longterm likely become subclass shortterm web components landed many browsers still active flux nt going pin component api web components things settle never shy saying likely transition convenience library written web components like using html syntax many thing want components actually map directly things want tags attributes anglebracket components expect appear attribute component question achieve something similar ember model would need something like ember nt come helper would need build one would also need define component bunch papercuts html syntax quite clearly says means", "d": "5/2015"}, {"body": "path towards web components web components take flight solve reasons sceptic certainly trust pretty good idea web components heading still think confusing newcomers component get tag may decrease template readability less clear portions plain html already converted neutral smile", "d": "5/2015"}, {"body": "still think confusing newcomers component get tag may decrease template readability less clear portions plain html nt think would think would works today setting components property would likely automatic invocation via anglebrackets", "d": "5/2015"}, {"body": "nt think would div think would works today setting components tagname property would likely automatic invocation via anglebrackets correct default would derived invocation rather fact nt work yet part feature nt yet smile", "d": "5/2015"}, {"body": "well less defused smile", "d": "5/2015"}, {"body": "believe related dupe investigate confirm", "d": "5/2015"}, {"body": "error nt way handle error last resort hook tooling inform issues please use public promise api handle errors", "d": "5/2015"}, {"body": "stefanpenner good catch pattern apps handle like errors globally recommend adding handler application routes error action something else thanks guidance", "d": "5/2015"}, {"body": "write code adapter level handle promise catch far sweeping useful experience pain", "d": "5/2015"}, {"body": "stefanpenner curious looks like base xhr helper using today idea shouldcould modify supply something catch like rsvp use method ie hoping avoid something like production code today", "d": "5/2015"}, {"body": "seems like adding functionality ajax utility trixk", "d": "5/2015"}, {"body": "nt seems like conversation continue", "d": "5/2015"}, {"body": "hmm sounds pretty bizarre realize likely pain would mind making reproduction thank reporting", "d": "5/2015"}, {"body": "sure need tests addon anyway", "d": "5/2015"}, {"body": "see failing test cogilityemberdiagram test fails canary one fails passes canary", "d": "5/2015"}, {"body": "ran issue app well glimmer first merged latest canary seems fixed", "d": "5/2015"}, {"body": "failing time last comment retest later today", "d": "5/2015"}, {"body": "sure running issue component set svg tagname rendered svg element shows htmlunknownelement would result browser rendering svg could explain issues", "d": "5/2015"}, {"body": "jsbin would helpful", "d": "5/2015"}, {"body": "hopefully help nt example based code inspect element svg resolve htmlunknownelement changing canary release beta works expected svg svgsvgelement", "d": "5/2015"}, {"body": "thanks jsbin submitted pr htmlbars fix", "d": "5/2015"}, {"body": "ok fixed upstream please let know still issue reopen", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "address rendering issue one tests fails foreign object passing canary previously", "d": "5/2015"}, {"body": "technomage could kindly make jsbin please", "d": "5/2015"}, {"body": "salzhrani expect likely called manual element called htmlbars perhaps path skipped simple reproduction definitely first step", "d": "5/2015"}, {"body": "stated earlier tests cogilityemberdiagram reproduces foreign object issue", "d": "5/2015"}, {"body": "made jsbin show issue gathered htmlbars nt enough information set proper namespace specifically reset namespace element current namespace need svg namespace set parent currently default likely require changes ember think issue reopened", "d": "5/2015"}, {"body": "salzhrani definitely working htmlbars template always running creates dom would allow dom helper enter svg namespace tag encountered htmlbars outputting enter xhtml", "d": "5/2015"}, {"body": "note works elements svg foreign object one template failure components templates used assemble resulting set elements particular svg element comes one component nested foreign object contained component grandchild component case", "d": "5/2015"}, {"body": "maybe mmun wycats could advise", "d": "5/2015"}, {"body": "seems like observer setup renderer sets destruction mandatory setter assertion triggered provide jsbin demo showing happening", "d": "5/2015"}, {"body": "see observers aware check", "d": "5/2015"}, {"body": "yes element dependency computed computing bounding box element computations centering text etc removing resolved issue thanks still want recreation close", "d": "5/2015"}, {"body": "awesome glad got fixed intended observed triggered assertion observed set go ahead close since fix", "d": "5/2015"}, {"body": "test throws exception undefined", "d": "5/2015"}, {"body": "repo tracking issues ember nt seem like ember issue going close issue perhaps meant open embercli repo also aside pretty straight forward change test loader used emberclimocha case automatically", "d": "5/2015"}, {"body": "cool thanks try modify test loader", "d": "5/2015"}, {"body": "possible stay values returned emberdata need consistently integers consistently whatever value passed would need passed integer object", "d": "5/2015"}, {"body": "oh sorting attribute pretty sure blame lack selection", "d": "5/2015"}, {"body": "possible could issue using ember", "d": "5/2015"}, {"body": "also may someday resolved guess close", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "realised missed part manually registering helper hyphenated initializer js import ember ember import helper helperscan export default name setupembercanhelpers initialize function emberhtmlbarsregisterhelper helper using private imagine regression nt public api", "d": "5/2015"}, {"body": "using private regsterhelper imagine regression nt public api yes unfortunate true sorry disappointed", "d": "5/2015"}, {"body": "rwjblue different way getting", "d": "5/2015"}, {"body": "rlivsey helpers nt going access ambient environment anymore making sure reliably update extremely finicky thoughts make helper like possible different options pick good one see bigger set privateapi regressions glimmer caused", "d": "5/2015"}, {"body": "wycats updated use component covers usecases means longer compose liquidfire use easily change classes pretty rare anyway emberintl another addon run issue rely helper get lookup locales amp translations service", "d": "5/2015"}, {"body": "sound like legitimate use cases accessing envcontainer use embercan would love keep syntax", "d": "5/2015"}, {"body": "also need lookup localisation data", "d": "5/2015"}, {"body": "wanted mention also mix see", "d": "5/2015"}, {"body": "could somebody mention potential ideas accessing container helper pretty much stuck figure nt want set wrong foot thanks", "d": "5/2015"}, {"body": "essentially impossible right impossible mean technically nefarious means good idea afaict case core team gathering usecases seeing best public api suit needs", "d": "5/2015"}, {"body": "way track help issue exposing container several extremely popular addons updated work glimmer without idiomatic way using container good example probably preventing thousands devs multilingual apps trying glimmer", "d": "5/2015"}, {"body": "cibernox aware pain make mission today put together draft proposal kicked around chat sure solution ills optimistic", "d": "5/2015"}, {"body": "cibernox put api suggestions would help usecases rfc", "d": "5/2015"}, {"body": "issue blocking ability upgrade glimmer due breaking emberintl cry", "d": "5/2015"}, {"body": "also got bit due modal believe stateful helpers rfc solve issue", "d": "5/2015"}, {"body": "yes rfc intending solve issue", "d": "5/2015"}, {"body": "issue tracker bugs ember nt really sound like ember bug rather build tooling issue guess need update jshint using embercli make sure using latest version embercliqunit nt fix issue please create question stack overflow pretty good community cross link back", "d": "5/2015"}, {"body": "awesome thanks", "d": "5/2015"}, {"body": "ajrobertson string using quotes using must use backtick jshint right p", "d": "5/2015"}, {"body": "thanks mixonic totally right", "d": "5/2015"}, {"body": "briantmaurer password manager triggering change event inputs nt think way ember know update bound values without event kind triggered", "d": "5/2015"}, {"body": "briantmaurer maybe open issue repo mixonic says without change keyup etc event ember wo nt know manual workaround could custom code login action grab values manually guess deficiency password manager", "d": "5/2015"}, {"body": "event fire", "d": "5/2015"}, {"body": "mixonic exactly overly familiar ember internals imagine password managers work similar fashion direct input value manipulation followed form submission keyboard events would fired sandstrom im sure deficiency mitro password manager exactly expected setting username password input values submitting form triggering keyboard events ember specific events would odd workaround mitro automated form filler stefanpenner form submit event fires possible solution form submit event regardless triggered ember could update bound values form would cover mitro well automated form filling extension said nt know ember internals person decide wanted point something noticed development chance would helpful someone working ember", "d": "5/2015"}, {"body": "briantmaurer nt looked mitro source think something like would work better think fair code changing property trigger change event simple way notify code updating bound values submit would unexpected generally needed addition many ember based forms nt even using submit event sometimes even formtag", "d": "5/2015"}, {"body": "possible solution form submit event regardless triggered ember could update bound values form would cover mitro well automated form filling extension understand might address immediate issue would also super unexpected difficult explain new developers nt think comfortable making change narrow usecase", "d": "5/2015"}, {"body": "looks like result micro sending change events inputs setting input value property directly sending series keydown keypress keyup events manually nt trigger oninput event", "d": "5/2015"}, {"body": "stefanpenner form submit event fires input event also fire", "d": "5/2015"}, {"body": "krisselden progressupdates tracking", "d": "5/2015"}, {"body": "added test ensuring maintained render nodes removed", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "illustrates issue childviews willdestroyelement called twice", "d": "5/2015"}, {"body": "progress encountered evening via emberwormhole quickly spirals deathly recursion", "d": "5/2015"}, {"body": "contributing doc information commit prefixes correct last days activity documentation bug fixes smile", "d": "5/2015"}, {"body": "added failing test case", "d": "5/2015"}, {"body": "days ago glimmer pr landed standard invocation create nested view therefore number views specifying considerably faster special optimizations added glimmer rendering engine", "d": "5/2015"}, {"body": "great news mean deprecated well lieu approach", "d": "5/2015"}, {"body": "yes specifying properties likely deprecated", "d": "5/2015"}, {"body": "going close happy reopen issues direction", "d": "5/2015"}, {"body": "working demo using provide jsbin demonstrates error tests need emberqunit released yesterday use glimmer", "d": "5/2015"}, {"body": "yes tests checking", "d": "5/2015"}, {"body": "good thanks", "d": "5/2015"}, {"body": "correct jsbin", "d": "5/2015"}, {"body": "checked app canary saw many deprecation accessed content attribute directly please use attrscontent instead warnings deprecation removed flesh transition plan bit better nt work works starts verbose mutable values must use component js mutable value unwrapped template use template since using pretty annoying especially since may know care component given mutable value added new api still needs docs return attribute value regardless also want mutable value use subexpression become default ember access mutable value demo", "d": "5/2015"}, {"body": "rwjblue thanks thorough answer getattr sounds really nice addition", "d": "5/2015"}, {"body": "great point would mind reopening issue guides maintained link section found error", "d": "5/2015"}, {"body": "done robert jackson wrote great point would mind reopening issue guides maintained link section found error reply email directly view github", "d": "5/2015"}, {"body": "solve giving key prop means row stable key bonus works underlying array new array elements rendered wycats default item key index would least match prior behavior underlying array stable pushed onto", "d": "5/2015"}, {"body": "krisselden mean already key", "d": "5/2015"}, {"body": "sorry missed loop time nt recreating dom key stable", "d": "5/2015"}, {"body": "hibariya sounds like good solution submit pull request adding along test", "d": "5/2015"}, {"body": "rwjblue try bulb", "d": "5/2015"}, {"body": "provided jsbin seems working properly confirm close resolved", "d": "5/2015"}, {"body": "yes looks like recent changes already fixed bisect understand close may pm robert jackson notifications githubcom wrote provided jsbin seems working properly confirm close resolved reply email directly view github", "d": "5/2015"}, {"body": "guessing commit fixes would also love confirmation", "d": "5/2015"}, {"body": "guess correct fixed issue", "d": "5/2015"}, {"body": "awesome glad resolved next things", "d": "5/2015"}, {"body": "agreed enforce unbound backwards compatibility", "d": "5/2015"}, {"body": "happy fix little surprised cases people relying fact nt update changes", "d": "5/2015"}, {"body": "intentionally changing semantics think would ok seems intentional nt even know someone reported treated bug decide make dynamic future super simple reverse whatever fixing pr behind feature flag", "d": "5/2015"}, {"body": "little surprised cases people relying fact liquidfire relying accident design much doubt example nt think behavior crazy somebody nt relying mask bugs smile", "d": "5/2015"}, {"body": "jsbin demo", "d": "5/2015"}, {"body": "cibernox think get deprecation message", "d": "5/2015"}, {"body": "way get better debugging experience might wrap function debug mode emit deprecation used means deprecations fire called cp extend time tradeoff might worth", "d": "5/2015"}, {"body": "add deprecation message easily sure helpful check later", "d": "5/2015"}, {"body": "last comment referring fact neither object known time deprecation could context know things invoked", "d": "5/2015"}, {"body": "deprecations complaining runtime might better better debug information also worse deprecations code nt use often wo nt see deprecation using property log flooded repeated deprecation warnings first reason would disregard idea think defeats purpose deprecation", "d": "5/2015"}, {"body": "deprecations complaining runtime might better better debug information also worse current deprecation gives absolutely indication fix thing stack trace useful using ember cli sourcemaps come application code using property log flooded repeated deprecation warnings keep flag cp instance already logged prevents multiple deprecations single cp every access", "d": "5/2015"}, {"body": "warning ambiguity basically halted ability port sizable project canary try glimmer many emberaddons track offense taking place get tradeoffs weighed enjoy luxury knowing details simply say got better way either way printing file error coming extend time way force build errors informative runtime errors captured something go far say features nt merged migration path hazy useful deprecation warnings considered part feature", "d": "5/2015"}, {"body": "getting message idea look cli ember ember data", "d": "5/2015"}, {"body": "ok seems pain generalized try find solution give better hint location issue stack trace helpful problem code code triggers deprecation lives outside app clueless assume code fine try find time afternoon pursue solutions give better information", "d": "5/2015"}, {"body": "result", "d": "5/2015"}, {"body": "seem getting similar error alternate route versions", "d": "5/2015"}, {"body": "provide reproductiondemo hard track solution scenario without one", "d": "5/2015"}, {"body": "provide reproductiondemo closest find stackoverflow question links jsbin question see effect uncomment second containerview comment first notice console logs second time go tworoute marked initial property state destroying view problem example anything defined manner application tests reveal happens visit route second time leaving specific route", "d": "5/2015"}, {"body": "entire day diagnosis able fix one routes removing javascript route code setupcontroller function controller model thissuper controller model route code nt desired need set properties returning route", "d": "5/2015"}, {"body": "additional details using code javascript setupcontroller function controller model thissuper controller model get error follows uncomment expanded error hoping helps diagnose", "d": "5/2015"}, {"body": "guess test waiting model hook promise resolve means test already torn therefore destroyed called", "d": "5/2015"}, {"body": "error happens upon returning route first time visit navigate away first time goes without hitch assuming creating new instance controller first time trying reuse second model hook simply returning models specific type instantly resolves reproduce error routes hook also remedy removing routes model hooks use using infinite scroller loading pages models store would changed error rebuild get errors", "d": "5/2015"}, {"body": "directly related code reproduce error route application hook clear removing attempted move inside see wait set variables would avoid error runs get error surprising attempting anything get work test already torn therefore controller destroyed setproperties called returning route would nt controller resetup little confused would work fine since hook supposed type variable setting controller tried create jsbin duplicate issue unable duplicate jsbin differences jsbin application using ember cli build using rest adapter rather fixtures adapter routes nested steps deeper", "d": "5/2015"}, {"body": "interestingly error happens still navigate application entire ember data layer disabled assuming ember data script errored", "d": "5/2015"}, {"body": "able gain insight error modifying line jsbin produces error duplicate navigate route one route two back route one duplicate", "d": "5/2015"}, {"body": "widespread problem application help would greatly appreciated holding development back thanks", "d": "5/2015"}, {"body": "also applies new", "d": "5/2015"}, {"body": "encountered issue well seems pretty important seems quite different end users expect framework found pretty bad working workaround", "d": "5/2015"}, {"body": "providing invocation fixes issue work around component gotten updated data sure demo work around", "d": "5/2015"}, {"body": "added test", "d": "5/2015"}, {"body": "describe want template block sounds like really using component", "d": "5/2015"}, {"body": "struggling dry layouts got layout foo looks like layoutsfoohbs want layout bar look like layoutsbarhbs goal get rid code duplication ember views ca nt accept one layoutname could would simply possible thinking resolving issue writing bar like layoutsfoohbs layoutsbarhbs would resolve issue unfortunately ember partials nt accept content blocks seems trivial thing implement person familiar ember htmlbars internals two reasons ca nt use component instead block partial component would create extra dom element turn would interfere styles e g immediate descendant selector problems components isolated scope often want split large file smaller chunks without going hassle passing data actions boy hate passing actions much boilerplate code two prevents splitting templates distinct dry partials one function per partial menu title menu item collapseexpand button one unique html class namespace per partial like erbhaml also failed figure dynamically provide template name component seems deprecated wo nt work", "d": "5/2015"}, {"body": "use components composition demo component would create extra dom element turn would interfere styles e g display table display tablecell immediate descendant gt selector problems true customize attributes see jsbin components isolated scope often want split large hbs file smaller chunks without going hassle passing data actions boy hate passing actions much boilerplate code issue sending actionsbinding data components layout want send action block passed bind data work without passing anything boy hate passing actions much boilerplate code binding actions deeply nested components absolutely drag addressing making significantly easier ember land soonish canary", "d": "5/2015"}, {"body": "using components overkill create extra js file template file components much heavy machinery partials ram cpu usage components create extra dom element results three problems instead located one place html structure partial split two places top element rest template inconvenient extra elements litter dom becomes deeply nested without practical benefit reuse top element care customize html via freaking js one element ca nt list nodes top level e g ca nt provide list table cells component namespacing move portion template component manually pass every single value action used unreasonable use components way split long template file smaller files also misuse paradigm component supposed selfcontained reusable element unaware context organize large template number smaller portions portion meaningless context could use views instead components shared namespace still overkill partials ideal instrument task thing lack ability accept content block", "d": "5/2015"}, {"body": "create extra js file template file components work perfectly without js file even specify correct works calling sites scope eg calling within table body calling list components much heavy machinery partials ram cpu usage maybe yes maybe sure know absolutely working hard make viewcomponent usage much faster glimmer work part come components create extra dom element described times true reuse top element care customize html via freaking js required use js file mentioned future work via element fragment rfc make super easy components template namespacing move portion template component manually pass every single value action used concern important fact matter specific api things componentpartial require extremely helpful something avoided assumed flaw extremely easy get situation partials ability use multiple places partial assumed access absolutely everything massive refactoring hazard unreasonable use components way split long template file smaller files agree disagree smilecat splitting long file smaller files serves purpose without sort compartmentalization make many smaller files dig find given thing avoid paging seems like odd trade also misuse paradigm component supposed selfcontained reusable element unaware context completely disagree components isolated isolation allows nice reuse wonderful usecase reuse definitely sole purpose partials ideal instrument task benefits using component use case many made like helper eventually component invocation curly braces eventually deprecated removed", "d": "5/2015"}, {"body": "browser seeing took quick look chrome nt see list rerendering navigating items either version", "d": "5/2015"}, {"body": "chrome glimmer version slower may richard livsey notifications githubcom wrote browser seeing took quick look chrome nt see list rerendering navigating items either version reply email directly view github", "d": "5/2015"}, {"body": "hang seem made messup js fiddles", "d": "5/2015"}, {"body": "okay forget try another way replicate app much slower interacting anything nested route isnt showing clearly", "d": "5/2015"}, {"body": "problem using try build fiddle reproduce", "d": "5/2015"}, {"body": "added test branch", "d": "5/2015"}, {"body": "looks like happening generic components well", "d": "5/2015"}, {"body": "test would superhelpful suspect bug simple missing case somewhere mutable reference accepted mutable cell vice versa", "d": "5/2015"}, {"body": "troubling thing example yielded block sharing streams outer block fact behavior different implies something else going even patch case big problem performance investigate evening", "d": "5/2015"}, {"body": "upon investigation appears undefined definitely wrong falling back looks like similar object actually snapshot rather hash streams investigation forthcoming", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "changing visible makes work seems bug worse description", "d": "5/2015"}, {"body": "fixed thanks reporting", "d": "5/2015"}, {"body": "addressed upstream via", "d": "5/2015"}, {"body": "fix", "d": "5/2015"}, {"body": "dschmidt one form yes fixed another form think resolved definitely looking issues reported", "d": "5/2015"}, {"body": "adds required methods htmlbar attrmorph", "d": "5/2015"}, {"body": "probably related", "d": "5/2015"}, {"body": "yes emberinspector needs updates work well glimmer sure teddyzeenny aware would mind making tracking issue inspector repo crosslink keep open make sure working well time get beta branch point", "d": "5/2015"}, {"body": "closing favor issue", "d": "5/2015"}, {"body": "would like keep open folks look first close teddy chance look", "d": "5/2015"}, {"body": "mean quotes", "d": "5/2015"}, {"body": "oh see always using view provided specified unless manually wire", "d": "5/2015"}, {"body": "rwjblue yes exactly obviously line ember found old code barely touched since ember rc ages ago smile", "d": "5/2015"}, {"body": "disappeared transition rather glimmer specifically", "d": "5/2015"}, {"body": "reproduction glimmer broken working", "d": "5/2015"}, {"body": "specific case earlier behavior seems break semantics using prevent context switching glimmer version seems correct instance version ember using still overrides local controller property see canary version using preserves context outer controller property doubt breaking change canary wondering fixing really reintroducing bug present", "d": "5/2015"}, {"body": "said versions without show problem fixed glimmer broken working probably better described", "d": "5/2015"}, {"body": "take shot", "d": "5/2015"}, {"body": "raytiley different seems similar", "d": "5/2015"}, {"body": "thanks opening issue working", "d": "5/2015"}, {"body": "mixonic sure nt fully grok jsbin played around case though definitely regression glimmer works fine canary", "d": "5/2015"}, {"body": "bit work reduction jsbin", "d": "5/2015"}, {"body": "trying work test demonstrates bug", "d": "5/2015"}, {"body": "even simpler repro bug exists using binding backed cp bound attribute exists component upstream value changed second time trollface", "d": "5/2015"}, {"body": "test added", "d": "5/2015"}, {"body": "inject helpers believe docs updated please point noticed mentioned possible fix doc", "d": "5/2015"}, {"body": "ah crap update thanks ok direction go need access container stuff within helpers especially plain emberobject instances container property", "d": "5/2015"}, {"body": "atomkirk instead trying inject something helper inject controllercomponent pass injected object helper use computed property use component instead helper", "d": "5/2015"}, {"body": "container provided property main framework objects nt contradictory exists escape valve usecases initially understood assumed exist hence discouraged work dgeb remove discovered usecases", "d": "5/2015"}, {"body": "please take look chime thoughts going close believe rfc directly addresses concern", "d": "5/2015"}, {"body": "got help irc demo updated bug still", "d": "5/2015"}, {"body": "recreated example jsbin try figure going added log statements follow steps describe check log become clear hook fires correct user server responds expect actual returns records locally anyways usersuserstuffs route rendered username gordon server queried username gordon gt server returned empty array gt storefilter finished work returned array items usersuserstuffs route rendered username alix server queried username alix gt server returned records gt storefilter finished work returned array items usersuserstuffs route rendered username gordon server queried username gordon gt server returned empty array gt storefilter finished work returned array items actually works docs dsstore filter filter function called records type created newly loaded created record optionally pass query equivalent calling find query fetch additional records server results returned server could appear filter match filter function note second statements specifies additional records returns records type specified server queried extra records everything passed filter right everything passes everything store show page two solutions think without context particular situation change actual filter check relation currently nt relation objects demo might prove tricky nt use filter normal find query probably others said future probably belongs stack overflow similar github issues normally bugs framework", "d": "5/2015"}, {"body": "kimroen thanks detailed response closing", "d": "5/2015"}, {"body": "kimroen thinking bug opened issue yes using solves issue need live array reason used rwjblue closing yes response detailed would like know still possible live array thanks smiley", "d": "5/2015"}, {"body": "hywan like said array returned filter everything store specified type first suggestion solve checking relation object want achieve think using live array would accomplish array stuff updated every time enter route using", "d": "5/2015"}, {"body": "closed believe bug ember kimroen correct usage questions generally better suited stack overflow pretty active community issue actually filtering stuffs given user notice snippet items filtered record array result stuffs returned store javascript appusersuserstuffsroute emberrouteextend model function params transition return thisget store filter stuff username transitionparams usersuser userid function stuff return true want limit stuffs given user would either need keep list stuff id user use filter third argument setup real relationships let ember data normal relationship filtering", "d": "5/2015"}, {"body": "take look", "d": "5/2015"}, {"body": "thx", "d": "5/2015"}, {"body": "part repo", "d": "5/2015"}, {"body": "also fixed", "d": "5/2015"}, {"body": "see update package json cli", "d": "5/2015"}, {"body": "unclear depends emberdata upgrades", "d": "5/2015"}, {"body": "noticed issue cc grand master routing thoughts", "d": "5/2015"}, {"body": "working atm", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "thanks reporting date", "d": "5/2015"}, {"body": "version node using", "d": "5/2015"}, {"body": "running", "d": "5/2015"}, {"body": "deleted nodemodules rebuilt good", "d": "5/2015"}, {"body": "sunilshrestha thanks reporting afaik already solved ember data master nt issue opened repo think issue closed", "d": "5/2015"}, {"body": "sandstrom thanks continue emberdata", "d": "5/2015"}, {"body": "sunilshrestha welcome please click close issue box", "d": "5/2015"}, {"body": "ksnyde believe docs fixes generally submitted repo instead thanks suggestion", "d": "5/2015"}, {"body": "acorncom thanks", "d": "5/2015"}, {"body": "yep works pretty busy work glimmer ember lately take look see far mostly working needed", "d": "5/2015"}, {"body": "closing definitely works", "d": "5/2015"}, {"body": "rwjblue thanks looking forward", "d": "5/2015"}, {"body": "ember bug bootstrap implementation prevents event bubbling root element ember app usually case invoked bootstrap sets event listener element event triggered bootstrap prevents default bubbling happening ember handle event dispatch action event must bubble root element application default", "d": "5/2015"}, {"body": "fairly nebulous bug report extremely hard impossible provide help without example demonstrating issue", "d": "5/2015"}, {"body": "would interested know solution think really bug ember would mind creating stack overflow post crosslinking", "d": "5/2015"}, {"body": "mgenev ca nt call asynchronously try using instead nt work point stack overflow question happy look", "d": "5/2015"}, {"body": "yoranbrondsema correct documentation outdated far best practice also outdated guides well found feel free pr fix", "d": "5/2015"}, {"body": "jayphelps looked updating doc seems annotations source code recently gone helper master due commit anyone knows happened documentation annotations moved somewhere", "d": "5/2015"}, {"body": "yoranbrondsema imagine outdated since helper completely rewritten due recent glimmer engine merge recreated yet wycats would confirm though means readd updated", "d": "5/2015"}, {"body": "yes please add completely gone moved need bring back would love help", "d": "5/2015"}, {"body": "confirm funky believe timing issue observers confirm still bug glimmer branch lands recreate test", "d": "5/2015"}, {"body": "jsbin still exhibits bug postglimmer", "d": "5/2015"}, {"body": "imo subtle browser bug chrome would like repro open issue patch level lower emberselect", "d": "5/2015"}, {"body": "mixonic fair enough steps could take set path motion would original ember jsbin sufficient reproduction issue", "d": "5/2015"}, {"body": "seeing well upgrading ember routermap still called multiple times actual router instance nt remapped happens tests aforementioned commit nt failing second call routermap still happening app initialization imo nt reflect spirit enhancement practice second call routermap would happen initialization temporary workaround resorted mimicking behavior initrouterjs calling routermap least new routes recognized", "d": "5/2015"}, {"body": "honest aware supported lazily defining routes app initialization try confirm rest core team see intended public api", "d": "5/2015"}, {"body": "update", "d": "5/2015"}, {"body": "seanpdoyle think simply missing constraint action namely action triggered html model item itemname", "d": "5/2015"}, {"body": "seanpdoyle link working jsbin think closed", "d": "5/2015"}, {"body": "clekstro understand needs nt mention required fix might make clearer main concern tags without interfered surrounding form", "d": "5/2015"}, {"body": "lying said nt bit past think clarification docs would great way tried reason ember ca nt know nt want trigger event element wraps elements without triggering containing element unless specify scope elements define actions example instance nt clicking form well said agree case nt necessarily intuitive parent element called default especially impacts native behavior children tags maybe disconnect nt typically click forms submit sorry suggesting close looking clarification expected behavior cases like", "d": "5/2015"}, {"body": "close issue move knownasilya mentioned", "d": "5/2015"}, {"body": "moved ember data repo", "d": "5/2015"}, {"body": "believe intentional behavior use semantics determine template block renderd", "d": "5/2015"}, {"body": "decided go behavior falsyiness landed docs added thank reporting taking crack fixing issue", "d": "5/2015"}, {"body": "strange decision", "d": "5/2015"}, {"body": "link jsbin would help everyone understand exactly talking", "d": "5/2015"}, {"body": "knownasilya jsbin nt appear represent issue could update link working example", "d": "5/2015"}, {"body": "knownasilya think must prepend titleinput", "d": "5/2015"}, {"body": "ah new", "d": "5/2015"}, {"body": "knownasilya nt think new least since define property current view template must refer using", "d": "5/2015"}, {"body": "maybe since component since components nt require portion", "d": "5/2015"}, {"body": "hm yeah current view component maybe nt put prefix context already component enclosing controller", "d": "5/2015"}, {"body": "sounds like regression somewhere around never required since remember controller working", "d": "5/2015"}, {"body": "particular example supported past accident move label ahead input invalidate rendering label input created example anti pattern give label input id parent component instead", "d": "5/2015"}, {"body": "gave fairly detailed description based conversation krisselden using knownasilya using always required however component happens works without prefix take look demo definitely suggest reviewing reply updating declarative syntax", "d": "5/2015"}, {"body": "rwjblue thanks", "d": "5/2015"}, {"body": "chance new release could made gem please stuck monkey patching undefined change line emberdebugjs sure would nice gem reflect tagged release thanks", "d": "5/2015"}, {"body": "holy goodness screwing pooch issues published tricknotes please confirm close confirmed", "d": "5/2015"}, {"body": "thanks rwjblue works fine greenheart", "d": "5/2015"}, {"body": "thanks rwjblue", "d": "5/2015"}, {"body": "experiencing exact problem project uses embersimpleauth login redirection logic hood uses set false problem goes away obviously queryparams longer work right found scenario effectively performs causing bypass route model hook instead resolve model undefined obviously wrong possible retry causes undefined model queryparams unintentionally creates transactionaborted query param set see issue", "d": "5/2015"}, {"body": "updates", "d": "5/2015"}, {"body": "seawatts nope spent initial time trying resolve strapped work past months", "d": "5/2015"}, {"body": "seawatts solution drop use instead setup observer indevidual query params refresh wrapped edit also found situation route model hook would get triggered multipl implement manual debounce flag using route js import ember ember export default emberrouteextend model function setupcontroller function controller model controllerset queryparamsready true actions issuequerychanged function thisrefresh controller js import ember ember const queryparams foo bar baz export default embercontrollerextend needs application queryparams queryparams queryparamsready false issuequerychanged emberobserver queryparams function hope helps", "d": "5/2015"}, {"body": "problem could nt test glimmercanary app issue", "d": "5/2015"}, {"body": "able test glimmercanary", "d": "5/2015"}, {"body": "tcjr jsbin roughly error doubt broken trying get minimal reproduction start debugging", "d": "5/2015"}, {"body": "error reproduced creating new embercli app setting value see example using ember works ember fails", "d": "5/2015"}, {"body": "ok got app working adding method ember router nt feel comfortable enough ember source code anything like test pr least start working deprecation warnings app", "d": "5/2015"}, {"body": "rwjblue think jsbin might illustrating problem correctly get routes app work rooturl set router", "d": "5/2015"}, {"body": "broken auto location history location still working correctly", "d": "5/2015"}, {"body": "awesome thank confirming", "d": "5/2015"}, {"body": "means almost certainly result mostly modified autolocation", "d": "5/2015"}, {"body": "still issue released version said works", "d": "5/2015"}, {"body": "mean longer supported", "d": "5/2015"}, {"body": "definitely regression", "d": "5/2015"}, {"body": "issue well app loads correct quickly replaces app still runs normal obviously wrong switched works expected confirm autolocation", "d": "5/2015"}, {"body": "needs quick fix", "d": "5/2015"}, {"body": "idea bug since beta", "d": "5/2015"}, {"body": "could release anytime fixes already queued release channel bug nt fixed would prefer fixed releasing", "d": "5/2015"}, {"body": "could error line either way resolves true false location update bad resolve last value thx rwjblue hand pair glasses eyes", "d": "5/2015"}, {"body": "would true false general like returns last truthy value javascript var foo bar stuff var bar null foo amp amp foobar gt stuff bar amp amp barbar gt undefined see demo", "d": "5/2015"}, {"body": "rwjblue really appreciated would love able help one", "d": "5/2015"}, {"body": "feel free ping future location class issues particularly auto bad broken monthhad heard would pr immediately fix thanks rwjblue fixing", "d": "5/2015"}, {"body": "toranb current ember canary including glimmer breaks hack lamentably tried canary yet got workaround", "d": "5/2015"}, {"body": "canary allows bound outlet names", "d": "5/2015"}, {"body": "rwjblue sounds extremely elegant useimplement", "d": "5/2015"}, {"body": "rwjblue syntax bound outlet names like mention mean ember assert previously blew removed canary", "d": "5/2015"}, {"body": "yes assertion removed right thing", "d": "5/2015"}, {"body": "done", "d": "5/2015"}, {"body": "excellent verify hack works canary tonight update blog post wrote thanks", "d": "5/2015"}, {"body": "toranb great early adopter hack right thanks", "d": "5/2015"}, {"body": "rwjblue possible use jsbin w glimmer yet src ember get version", "d": "5/2015"}, {"body": "toranb use canary buildsemberjscomcanaryemberdebugjs buildsemberjscomcanaryembertemplatecompilerjs", "d": "5/2015"}, {"body": "mixonic thanks helpful js able get mostly working glimmer branch nested example issue still trying fixwork index zero ie first item loop anyone uses example link sure throw emberdebugjsand compiler bower install replace latest canary build shown", "d": "5/2015"}, {"body": "toranb came around problem using id record looping like rendertemplate", "d": "5/2015"}, {"body": "intuitivepixel would mind quick pr glimmer branch example tried use modelget id outlet disconnect outlet could reach controllermodel get id curios", "d": "5/2015"}, {"body": "toranb go pr two commits first used second added model used instead versions work fine looks like using outlet bound name working", "d": "5/2015"}, {"body": "intuitivepixel thanks pull request update blog tonight give legit mention", "d": "5/2015"}, {"body": "toranb great thx", "d": "5/2015"}, {"body": "anyone following along blog post put together help intuitivepixel", "d": "5/2015"}, {"body": "also running issue", "d": "5/2015"}, {"body": "believe currently canary fastboot currently sync hopefully work merged take another swing fixing leak", "d": "5/2015"}, {"body": "closing assume nt priority changes render nullvoid", "d": "5/2015"}, {"body": "closing think related", "d": "5/2015"}, {"body": "grantovich ever able get applicationloading substate working trouble rendering specific application outlet", "d": "5/2015"}, {"body": "discorick nt looked recently since xtian suggestion sufficient use case trying use outside action handler appears supported anymore find workaround using one circumstances probably encountering unrelated issue", "d": "5/2015"}, {"body": "grantovich thanks clears things guess need find workaround", "d": "5/2015"}, {"body": "thinking revisiting glimmer", "d": "5/2015"}, {"body": "wycats similar line thinking last comments implement glimmer engine also kind makes sense us include get helper ember honestly primitive like component would love see happen", "d": "5/2015"}, {"body": "use case markmurphy concatenation styles templates supported upcoming versions ember probably move computed property use maybe someone core team rwjblue shed light whether style concatenation templates supported think report warnings escaped version helper would probably track whether concatenated strings escaped mark safe", "d": "5/2015"}, {"body": "respecting safe strings absolutely maybe someone core team rwjblue shed light whether style concatenation templates supported course work safe strings today bug hence issue longer term would also like support safe usage requires bunch research security implications", "d": "5/2015"}, {"body": "mixonic thanks clarification sure status one two related issues already closed", "d": "5/2015"}, {"body": "jesenko research clarify relationship tickets would definitely useful familiar tickets updating repro jsbin canary still causes issue good enough", "d": "5/2015"}, {"body": "mixonic rwjblue probably good time update label one", "d": "5/2015"}, {"body": "chiming say error one discourse views hack worked sure pattern anywhere else app", "d": "5/2015"}, {"body": "see behaviour emberjs creating indirection computed property instead embercomputedalias also seems possible workaround javascript export default emberviewextend step function stepchanged function init function willdestroy function way fired mean view object wo nt destroyed route transition purpose bugmemory leak", "d": "5/2015"}, {"body": "reproduce ember", "d": "5/2015"}, {"body": "tests updated master beta", "d": "5/2015"}, {"body": "oskarrough found workarounds ran time appears variety mentioned took working component added embersortablemixin page seems load try inspect component inspector get error", "d": "5/2015"}, {"body": "note upgraded latest inspector load component although error remains guessing arrangedcontent undefined need dig case inspector latest", "d": "5/2015"}, {"body": "ok sorted problem least second variant oskarrough basic mistake nt populated property computed properties involved populating ones complaining going close issue unless compelling reason keep open", "d": "5/2015"}, {"body": "fixed", "d": "5/2015"}, {"body": "jeradg start application route copy amp paste url route entry shown history route redirect transitionto click backbutton state case always redirect", "d": "5/2015"}, {"body": "seeing test visiting function assert visit andthen function assertequal currenturl index page root route passes fails", "d": "5/2015"}, {"body": "problem upgrading release", "d": "5/2015"}, {"body": "tried testing still well", "d": "5/2015"}, {"body": "achambers saitheexplorer samcic comments helpful cause thread closed owners comment found workaround fix clue lead culprit", "d": "5/2015"}, {"body": "givanse fair given radio silence seems regression tests passed longer pass changelog nt mention deprecated comment attempt let owners know issue affects people op belabor point pretty detailed reproduction nt response either point taken though see debug come answers thanks", "d": "5/2015"}, {"body": "backspace hunting around today may tracked got pr see goes smile", "d": "5/2015"}, {"body": "fixed thanks elskwid", "d": "5/2015"}, {"body": "yes thanks figuring elskwid", "d": "5/2015"}, {"body": "getting error", "d": "5/2015"}, {"body": "go take care pull request change approved someone core team", "d": "5/2015"}, {"body": "lukemelia confirm fixed", "d": "5/2015"}, {"body": "rwjblue yes looks like takes care", "d": "5/2015"}, {"body": "thank checking", "d": "5/2015"}, {"body": "rwjblue please explain best practices working custom helpers looks like documentation shows simplest examples", "d": "5/2015"}, {"body": "fyi finally got around trying workaround nt work", "d": "5/2015"}, {"body": "rwjblue still getting old message however still uncertain getting error routes called new show also strangely use explicit index controller also get error autogenerated one fine written screen shots full description", "d": "5/2015"}, {"body": "runspired issue related discussion last friday example addon initializer sets customevents applicationcustomevents hash past custom events registered fine sure release broke behavior using initializer add custom events addon machty tomdale something help", "d": "5/2015"}, {"body": "machty tomdale runspired think advantage using customevents added addon defines customevents used app eg new events gestures mobile events perhaps event would example someone may want addon communication dom elements happen ember components actions may work cases use cases nearly impossible wire targetobject component nested chuck dom perhaps dom elements added via rendering outlet new context emberoffcanvascomponents addon chose use custom events used initializer add example app addon outer viewport component listens custom events toggles property openshut offcanvas component may outlet inside perhaps template rendered outlet component lives template scope controller template whatever new thing component template since nesting flexible needs happen outer viewport listens specific custom events eg work initializer successfully setup application addon dead water tried finagling wiring lot ceremony perhaps cases impossible emberoffcanvascomponents addon contextual solution loose communication components using custom dom events actions may sound favorable hotness bindings actions sounds opinion custom events still first class citizens ember app ember components arrive app via addon using initializer course crazy reopening private objectfactory course custom events hotness prior bindings actions well prior emberjs still work great provide solid solution communicating dom elements components components common parent element component", "d": "5/2015"}, {"body": "pixelhandler agree addons able register custom events right api nt really designed handle use case designed apps specify set events want addons would open prrfc added public api addons register events event dispatcher listen", "d": "5/2015"}, {"body": "tomdale ok great work rfc followup pr pull", "d": "5/2015"}, {"body": "beginning ember understand controllers removed entirely correct getting deprecation errors want things ember way trying avoid creating controllers creating new app today adding mentioned good way prepare", "d": "5/2015"}, {"body": "partway solution might resolve component location checking folder template uses resides found falling back components eg apppagesnavigationbarcomponentjs amp apppagesnavigationbartemplatehbs could use apppagestemplatehbs", "d": "5/2015"}, {"body": "rwjblue solution might introduce attribute web components spec example could cc wycats tomdale", "d": "5/2015"}, {"body": "yep definitely one ideas tossed around believe ebryn opposed though could mistaken", "d": "5/2015"}, {"body": "still fixed long debugging session saladfork grapho see jsbin", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "confirm triple curly behaviour solves problem ember really necessary add helper would reduce confusion users", "d": "5/2015"}, {"body": "seems unnecessary considering triple curlies exist issue mostly regression time passed please reopen still need helper would behave differently reason existing", "d": "5/2015"}, {"body": "ran issue well adding brocfilejs fixed", "d": "5/2015"}, {"body": "glimmer approaches tests passing phase pinging tomdale wycats since still issue nt heard core member asked whether addressable", "d": "5/2015"}, {"body": "jayphelps would like poke around provide reduced idiomatic example demonstrates issue jsbin uses createelement sure ease jsbining idiomatic nt ability take advantage rerendering improvements", "d": "5/2015"}, {"body": "would printing table rows cells cell component representative reported issue", "d": "5/2015"}, {"body": "rwjblue example representative us nt know similar jayphelps case guess might", "d": "5/2015"}, {"body": "rwjblue agreed anything shady irl key multilevel nesting components loops sandstorm example seems like great representation", "d": "5/2015"}, {"body": "one thing noticed extra binding data source content often sync initial render phase causing nested look essentially render nice straight though render issues exist like shear amplification existing costs post glimmer plans implement ideas ember conf talk make easier measure", "d": "5/2015"}, {"body": "stefanpenner found perf issues embernfgraph sure would caught said seen issue graphs nt present even graphs fixed nt think example graph components faster seconds", "d": "5/2015"}, {"body": "yes buts phrase non less uninterested perf work soon legacy work glimmer work nt quick fix problems makes possible people write idiomatic code dramatically faster common pathological cases also lays foundation many future improvements things caught nfgraph part problem fixed running glimmer gladly another pass use example way continue performance work suspect result combination nfgraph fixes ember fixes", "d": "5/2015"}, {"body": "stefanpenner put together example using glimmer branch perhaps useful similar blesh example except ember code external components b runs glimmer", "d": "5/2015"}, {"body": "fixed running glimmer stefanpenner nt care version projects need simply care components worked hard craft usable lists without completely destroying user experience way assist game hours day however many days takes tasked making app performant one issue rears head lot apps", "d": "5/2015"}, {"body": "game hours day however many days takes tasked making app performant one issue rears head lot apps awesome unfortunately wont consistent time till back vacation suggestion interim try break performance problem smaller chunks example attempting isolate nested initial render basic component basic binding approach takes time allow output become predictable actionable making incremental fixes hopefully notice reduction specific method calls hopefully several smaller examples derived isolate problem different perspectives one thing aware seeing many calls x one needs sure x actually called many times easily case noise stems several small isolated issues finally would sure tests examples glimmer code otherwise may targeting entirely different problems glad resources help", "d": "5/2015"}, {"body": "blesh tried ebryn metalcomponents sure compatibility glimmer due internals touches preliminary work prove ui backing objects need much less expensive create destroy aligned stefanpenner first bullet point emberconf talk talked less stuff", "d": "5/2015"}, {"body": "stefanpenner anyone else find documentation overview latest rendering architecture like read primer", "d": "5/2015"}, {"body": "blesh references robert often use especially bottom internalframework hooks broken general explanation list hooks comparisons reacts hooks", "d": "5/2015"}, {"body": "mixonic thanks", "d": "5/2015"}, {"body": "blesh source code typically good start trollface", "d": "5/2015"}, {"body": "stefanpenner ember core developed opinionated framework know look", "d": "5/2015"}, {"body": "stefanpenner ember core developed opinionated framework know look sickest burns", "d": "5/2015"}, {"body": "heh jerks", "d": "5/2015"}, {"body": "blesh stefanpenner curious either found anything looking friendly prod", "d": "5/2015"}, {"body": "sandstrom unfortunately focused embercli lately hope circle around soon unless someone beats", "d": "5/2015"}, {"body": "sandstrom definitely progress various fronts internally ember external efforts current biggest take away get major perf boosts canary strictly follow latest greatest conventions available canary blesh keeping example repo date running example comparisons ember react ebryn made notable change", "d": "5/2015"}, {"body": "also track performance benchmarking repo encourage contribute usecases project", "d": "5/2015"}, {"body": "created pretty plain example running canary basically bunch small components jayphelps anything canary know would speed", "d": "5/2015"}, {"body": "issue fixed", "d": "5/2015"}, {"body": "concern building node everyone uses node ember ruby php asp name", "d": "5/2015"}, {"body": "build rest api php asp ruby mean ca nt serve ember nodejs", "d": "5/2015"}, {"body": "yes making requirement concern", "d": "5/2015"}, {"body": "root concern see node requirement feature see actual problem", "d": "5/2015"}, {"body": "tsteuwer would run javascript code ruby php asp way emberjs could run runtimes without obvious enormous work maybe possible transpilation", "d": "5/2015"}, {"body": "work large company prototyping phase using ember wo nt converting consumer facing portion months find ember work well site currently large framework builds html payload user see load using php objects handle interaction moving forward js nt see arch agreeing must install node use render html get seo tools currently php php plugin well see understanding allowing implementation however install another runtime top already use may entirely different story", "d": "5/2015"}, {"body": "topaxi thats exactly ember users get benefits seo use node basically root issue", "d": "5/2015"}, {"body": "tsteuwer embercli already using static indexhtml generated node already stack served web server php addition node prerender ember app makes sense easy integration asking prerendering php effectively impossible honestly makes sense server side code one purpose ember providing rest api", "d": "5/2015"}, {"body": "nuckchorris completely agree however lots us nt get choose stack get work node u fortunately lamp stack past years would nt able get switched may find aa workaround possible point controllers specific ids tags let ember initiate docready \u00e0 la angular", "d": "5/2015"}, {"body": "tsteuwer willing bet company also uses memcached redis nginx thus c part stack despite nt think running c think servers utilities put place forget goal fastboot largely need write ember code intent need write nodejs happens ember code works server utility point nginx need run utility part stack though rejected like might reject mongodb server need find alternative solution nt see arch agreeing must install node use render html get seo tools currently php nt suggest make pitch fastboot allows write application run offline clients mobile clients web apps think today encourages organization adopt serviceoriented architecture single api used clients pitch takes discussion benefits javascript application api architecture hope benefits strategies outweighs installing new daemon language might trivial discussion might represent change direction organization nt suggest small thing lastly business require seo strategy fastboot needed current deployment solutions suit fine fact even need seo number strategies used apps today noscript prerendering dynamic serverside html still viable", "d": "5/2015"}, {"body": "possible point controllers specific ids tags let ember initiate docready \u00e0 la angular expert pretty sure ember nt built run part app huge concepts inside like router nt really make sense managing chunk dom big opinionated framework entire application", "d": "5/2015"}, {"body": "mixonic valid point thanks help", "d": "5/2015"}, {"body": "tsteuwer want support many platforms possible however fastboot requires running emberjs application server course written javascript means must javascript runtime hope community build many packages make integrating existing stacks easy ultimately though hard requirement javascript runtime ca nt evaluate javascript without one", "d": "5/2015"}, {"body": "anyone finds google minor typo correct methods amp", "d": "5/2015"}, {"body": "realize probably moved issue finally landed support supply compiler embedded final templates", "d": "5/2015"}, {"body": "one correction focusable child elements inside need control remove tab order otherwise show mystery controls screen reader bad nt see reason use attribute marking things completely hidden spec notes depends css implementation really hide something compound fact animatable property like usually set transitions time occur might nice thing work actually", "d": "5/2015"}, {"body": "seems still issue jsbin", "d": "5/2015"}, {"body": "looks like proposed fix jsc landed interested identify issue patch extremely interesting would suggest reviewing", "d": "5/2015"}, {"body": "looks like fix accepted may see seed late junejuly", "d": "5/2015"}, {"body": "stefanpenner great hear thanks work", "d": "5/2015"}, {"body": "update think useful feature need willing implement however need feedback direction viable", "d": "5/2015"}, {"body": "dropping support ie could consider fixing behavior true would seem consistent behavior would good occasion introduce api breaking change", "d": "5/2015"}, {"body": "wasted much time least put warning bold docs little misleading considering actions usage explained line checkboxes input helpers guide page", "d": "5/2015"}, {"body": "jkgisme feel ya nt give ember due problem fully believe ember core team going make nonissue ember", "d": "5/2015"}, {"body": "well working saving backend checkbox used combination xcheckbox jsbin explanation explanation really helpful nt know ember come seems like slippery slope delay workable solutions especially situation well documented already hard enough noob internets full old ember way trying implement things new ember way reason something like checkbox debacle could nt included ember guides checkboxes pretty basic element guess find equal part issue ember issue ember documentation", "d": "5/2015"}, {"body": "nt know ember come recent blog post provide detail", "d": "5/2015"}, {"body": "jkgisme open source project please help improve documentation really anything code community would greatly appreciate", "d": "5/2015"}, {"body": "rwjblue thanks link", "d": "5/2015"}, {"body": "restuta spent half sunday trying make checkbox nt think ember wants touching code since ember close let pause work projects come back contribute ember meantime", "d": "5/2015"}, {"body": "ran spent hour gave finally found hope gets fixed", "d": "5/2015"}, {"body": "inspired comments found workaround course disadvantage requiring explicit property called controller better eschew mapping using altogether", "d": "5/2015"}, {"body": "machty bug still ember click post get wierd error version without qpmapping works fine", "d": "5/2015"}, {"body": "future people google search wo nt fixed due upcoming refactoring", "d": "5/2015"}, {"body": "got bitten using rather use think make sense new people coming framework learn means", "d": "5/2015"}, {"body": "bind value select computed property set set value case underlying value backing computed property gets set triggers update emberselect component result update changes selected value emberselect bounces back setting computed property whatever new value emberselect emberselect value bound computed property computed property settable complex dynamic property backing set computed property computed property called example computed property called backing value computed property set rather make issue wait new emberselect", "d": "5/2015"}, {"body": "want use component action inside component blockhelper nt currently work", "d": "5/2015"}, {"body": "got also hit one think ember handle supposed encode decode potentially dangerous dynamic segment using hand nt see reason user care work outofbox", "d": "5/2015"}, {"body": "child route template link parent route link gets class see jsbin sure bug intended way disable behavior", "d": "5/2015"}, {"body": "mixonic glimmer arrived work ever make love see example action one handy", "d": "5/2015"}, {"body": "ability run would awesome", "d": "5/2015"}, {"body": "seeing bug emberrundebounce thoughts schedule emberrundebounce saying want code get run soon therefore willdestroy guarantee run outstanding debounced functions calling super nice way part framework", "d": "5/2015"}, {"body": "issue well reason unfortunate ca nt safely override outlet route template rendered makes wonder even exists following requirements project working parent route must active logical child route logical child route must replace parent route render area regression issues eg browser back button nt break rendering sad ca nt simple things spent many hours looking possible alternatives ca nt find one covers needs learned ember expects nested resource routes rendered time parent silly web naturally hierarchical start home page website nt click subsection times find levels content displaying instead see click going deeper nested hierarchy logically organized breadcrumbs exist url form breadcrumbs nt expect whining change anything want make clear scenario easy instead ember painful disappoint others interested understanding issue expected solution see fine article", "d": "5/2015"}, {"body": "absolutely router able instead bleed concern individual route", "d": "5/2015"}, {"body": "still issue many years later correct supported workaround sort", "d": "5/2015"}, {"body": "yes could always build computed properties level watch computed property instead property collection", "d": "5/2015"}, {"body": "tried something like nt work use observes property never evaluated really sort built ember stuff handle opinion", "d": "5/2015"}, {"body": "example essentially need aggregate values mid level", "d": "5/2015"}, {"body": "understand properties nt fire observes used", "d": "5/2015"}, {"body": "show example properties lazily loaded nt actually attempting get properties wo nt fire", "d": "5/2015"}, {"body": "never explicit get retrieve property question another computed property supposed listen though seems explicit get use template makes fire though another property observe", "d": "5/2015"}, {"body": "correct properties calculated demand watching property nt mean property calculated rightfully one wants use property need calculate property", "d": "5/2015"}, {"body": "recommend case supposed use observes anymore", "d": "5/2015"}, {"body": "example shows accomplish nested dependencies without observer nt recall anyone saying observers nt used anymore nt religiously pay attention", "d": "5/2015"}, {"body": "example uses property gives problem wo nt fire property another property needs observe property", "d": "5/2015"}, {"body": "approach definitely works suspect another issue code causing problem try posting jsbin showing problem figure", "d": "5/2015"}, {"body": "might understand getting could modify example clarify though", "d": "5/2015"}, {"body": "regarding observers take using observers cases interacting nonember code big code smell using observers eg trigger graph rendering app data changes totally legit using observers set one ember property another changes almost always easily accomplished different approach", "d": "5/2015"}, {"body": "alexspeller two properties one must change changes possible though properties nt evaluate second property never updates", "d": "5/2015"}, {"body": "one property changes another changes core feature computed properties sure describing show code using likely someone help", "d": "5/2015"}, {"body": "alexspeller converted using observes let attempt put back show property update valuelength however never fires forced change valuelength property observer sets valuelength instead like", "d": "5/2015"}, {"body": "dependency keys nt match getting dependency key", "d": "5/2015"}, {"body": "also ok actually get valuelength computing value cp generally speaking ending dependency nt going good time dependencies need consumed part cp calculation assume things stuff changing together stuff invalidated synchronously observers consume property lead race conditions dependencies align actually consume part making calculated value generally observers low level hard get right nt actually work lead race conditions overly frequent recalculations etc schedule work per event frame", "d": "5/2015"}, {"body": "ditto krisselden also assuming model controller property collection controller computed property length property sounds like array object ignoring controller", "d": "5/2015"}, {"body": "edit replace property dependent key becomes see krisselden explanation wrote previously wo nt work valuelength necessary use valuelength property property dependent key simplified nt used without property end want observe items added removed use instead observe nt need also observer", "d": "5/2015"}, {"body": "alexspeller actually ca nt", "d": "5/2015"}, {"body": "alexspeller get eachvalue unfortunately returns array values instead returning eachproxy kills chaining nt know done way nt know change given semver honest nervous enabling", "d": "5/2015"}, {"body": "squeaky wheel gets oil affecting larger portion ember community wo nt get prioritized plenty low hanging fruit helps community", "d": "5/2015"}, {"body": "alexspeller embercomputedalias worked thanks", "d": "5/2015"}, {"body": "krisselden chaining would awesome one tackled past years nt seem likely ever", "d": "5/2015"}, {"title": "focusout event fired element removed dom firefox", "body": "currently firefox version nt support focusin focusout events bugzilla however jquery jquery simulates focusin focusout events focus blur events accordingly firefox nt get fired element removed dom jquery version os windows enterprise works browsers google chrome google chrome canary opera internet explorer safari ios iphone work firefox snippet", "num": "2360", "d": "5/2015"}, {"title": "redundant cd jquery command readmemd", "body": "line readmemd following command suggested start grunt watch part seems redundant considering previous command instructions also part readmemd uses explicitly instructing enter jquery directory cloning jquery repo", "num": "2359", "d": "5/2015"}, {"title": "deal ua string microsoft edge", "body": "noted dmethvin see since tests mostly support tests depends", "num": "2357", "d": "5/2015"}, {"title": "selector removed since", "body": "documentation clearly states deprecated since removed since however fiddle proves otherwise missing", "num": "2355", "d": "5/2015"}, {"title": "many dropdowns page throwing stack error related caching", "body": "hi recently document mode application upgraded edge achieved simple change content attribute meta tag headcshtml application working expected pages breaks many dropdowns rendered dropdown kendo ui dropdown lists record however let user select value console find error stack space issue replicated ie gt three solutions came across allowed application run smoothly keep ie developer tool opened uncheck option disable script debugging ie update jquery core library line elem elemnodetype jquerycache elem jqueryexpando elem jqueryexpando elem elem jqueryexpando first two options error still persists console dropdown working properly last solution error goes away totally also tried updating jquery versions nothing helped please provide technical assistance regards kriti", "num": "2354", "d": "5/2015"}, {"title": "callback throws error subsequent calls fire ignored", "body": "see still exists similar problem except refers api using api callback added throws error breaks subsequent calls remaining listeners call ignored maybe could introduce option control exception handling eg onerror ignorelogthrowthrowcombined current behavior completely breaks object least call surrounded trycatch cleanup rethrowing", "num": "2353", "d": "5/2015"}, {"title": "post ajax change query version", "body": "simple code datos datosid cmbregion val datosusr txtusuario val datospsw txtpassword val var ajax type post async true datatype json url ajustesajaxgrabarcorreo data jsonstringify datos error function xhr status error alert ocurrio un error error eval xhr responsetext success function data deval data derror alert dmensaje else alert datos del correo actualizados con exito ajax ajax datospsw equal change value", "num": "2351", "d": "5/2015"}, {"title": "jqueryoff working documentdelegated events", "body": "open following html file least mode see working expected handler still ps could find sandbox put example jsfiddlejsbincodepen nt support", "num": "2350", "d": "5/2015"}, {"title": "requiring jquery within reactnative get error documentcreateelement defined", "body": "problem use case use page scrape within code using jsdomjscore build document downloaded html trying pass document jquery able parse code looks like var jquery require jquery jsdom require jsdomjscore var somehtmlidownloaded hello world jsdomenv somehtmlidownloaded function errors window var jquery window something parsescrape html body throws error documentcreateelement defined occurs within sizzle method happens creates global supported document object loaded environment globaldocument assumes documentcreateelement exists tries attach document check passes found looks like temp fix able fix locally building jquery source using command altering built jquery code never assume global document require custom build js code works actual solution proper way fix check method exists deciding pass factory", "num": "2349", "d": "5/2015"}, {"title": "mouseout fired tr changing column", "body": "simple table change row colour using jquery user mouses user moves mouse column column b row event fired jsfiddle test case move mouse cell foo move mouse right cell bar row remain red tested chrome workaround apply events use instead jsfiddle", "num": "2348", "d": "5/2015"}, {"title": "jquery trying parse content response", "body": "ajax request server return content response jquery try parse content get error nt know cause response got server error server http spec say code mean content jquery must nt try parse response used jquery", "num": "2347", "d": "5/2015"}, {"title": "standardize output html method decoded", "body": "hey guys found discrepancy browsers using method today latest chromefirefox following output safari html output special characters encoded actually jquery fault see difference use property thoughts always return decoded html string would nt good happy implement enhancement ps talking jquery", "num": "2346", "d": "5/2015"}, {"title": "jquery amd directory structure nt contained", "body": "existing src file structure looks like problem main entry point needs directory core dependencies someone use requirejs without special configuration entire contents src would need within baseurl ideally structure would nested makes things lot simpler directly consume amd module simply require jquery none contents would polluting base directory", "num": "2345", "d": "5/2015"}, {"title": "hello man", "body": "add friend", "num": "2344", "d": "5/2015"}, {"title": "ie delegate vs direct radio click handlers behave differently", "body": "ie found case click handler radio input behaves differently delegated vs directlybound jquery version testing done works browsers firefox ie amp opera chrome work ie version os windows created jsfiddle using jquery note actually clicking radio option everything works using arrows select value delegated event triggered", "num": "2343", "d": "5/2015"}, {"title": "extra parameters passed triggering focus", "body": "jquery version os osx yosemite browser firefox dev trying something like calling extra parameter undefined fiddle intended behavior events passes extra parameter fine", "num": "2342", "d": "5/2015"}, {"title": "getstyles element inside shadow dom", "body": "hi using polymer application found function javascript var getstyles function elem support ie lt firefox lt ie throws elements created popups ff meanwhile throws frame elements defaultviewgetcomputedstyle elemownerdocumentdefaultviewopener return elemownerdocumentdefaultviewgetcomputedstyle elem null throws exception shadow dom element undefined adding control works well", "num": "2341", "d": "5/2015"}, {"title": "deprecate property event object", "body": "following properties also copied event object though values may undefined depending event altkey bubbles button cancelable charcode clientx clienty ctrlkey currenttarget data detail eventphase metakey offsetx offsety originaltarget pagex pagey relatedtarget screenx screeny shiftkey target view property deprecated dom specification seems need add note possible properties deprecated show message migrate cc dmethvin", "num": "2337", "d": "5/2015"}, {"title": "interference window scroll", "body": "commonly leverage css hide anything flowing outside body horizontally like body overflowx hidden noticed entirety function uses window scroll negated css property sticky header bind data header function header data size big restickheader rearrange dom elements truncated header fnrestickheader function broad essentials header data size small unstickheader arrange dom elements back first place stickyheader function var stickyheader function document scrolltop gt header data size big header restickheader bind stickyheader function scroll window bind scroll stickyheader however change scroll click get response browser", "num": "2334", "d": "5/2015"}, {"title": "different result jquerymap executing chrome firefox", "body": "tested firefox chrome developing project noticed executing jquerymap object different browsers gives different result steps reproduce create javascript object follows pay attention last position numbers numbers works fine execute jquerymap take look actual result ff chrome expected result behavior supported browser", "num": "2333", "d": "5/2015"}, {"title": "input form attribute document submit handler produce error", "body": "use input attribute also handling document event get error easy way reproduce click input get error jsfiddle since jsfiddle nt work direct link result small research showed code responsible thing returns attribute value jquery ca nt get data", "num": "2332", "d": "5/2015"}, {"title": "change licenses license packagejson follow spdx format", "body": "npm warns running jquery repo field deprecated using field spdx format npm started check recently see", "num": "2331", "d": "5/2015"}, {"title": "create tests", "body": "would stop using methods like focus tests focus tests isdefaultprevented stopimmediatepropagation", "num": "2329", "d": "5/2015"}, {"title": "change form firing checkbox checked indirectly via prop checked true", "body": "js fiddle example explanation checkbox checked indirectly calling prop checked true location form change event fire linked jsfiddle clicking gray divs fact check input however hidden div bottom page appear checking actual input boxes also true radio buttons", "num": "2327", "d": "5/2015"}, {"title": "divoffsetheight takes long time document ready big document", "body": "hi using jquery detected long documents megas html method executed document ready calculates supportboxsizing supportreliablehiddenoffsets takes long time seems calls divoffsetx takes long time one second chrome seconds intel core windows marked points lt another way calculate better performance best regards run tests need body doc ready jquery function var container div tds margindiv divreset display block overflow hidden body documentgetelementsbytagname body body return frameset docs nt body return", "num": "2324", "d": "5/2015"}, {"title": "delete generated jsonpcallbacks", "body": "assign undefined function executed ca nt properly delete properties window objects oldie issue still exist supported think discuss using method branches instead", "num": "2323", "d": "5/2015"}, {"title": "strange behavior iframes titlecased css chromewebkit", "body": "migrated thread long story short working project using jquery write dom nodes iframe found odd behavior css classes containing capitalized characters narrowed seems issue jquery function wrapped html affects versions jquery chromiumwebkitbased browsers see following jsfiddle using google chrome safari minimal testcase hopefully comments pretty selfexplanatory see basic css class called color text red generate simple class name add dom via try append another dom node containing class name breaks styles class parent dom words style definitions disappear bunch odd workarounds seem suggest might bug jquery workarounds applying delay iframe manipulation giving affected dom element additional css class names dummy attributes resorting lowercase css class names manually removing readding class name dom elements passing string directly using another nonjquery method generate element append suspect problem lies jquery method treats html text vs jquery object nt able pinpoint exactly jquery source code", "num": "2322", "d": "5/2015"}, {"title": "serialize ignores input elements type submit", "body": "try click submit button whose name attribute value comentar expected output amp textolalala amp comentarcomentar observed output amp textolalala serialize serialize exact data would sent browser form sent normally includes input elements type submit jquery ignores ca nt believe reporting bug", "num": "2321", "d": "5/2015"}, {"title": "document invocation correctness development principle", "body": "ref modulo particularly hairy backwards compatibility issues consider safe assume function input matches documented signature therefore allow functions throw exceptions rather fail silently captured somewhere first thought contributingmd", "num": "2320", "d": "5/2015"}, {"title": "singlemember read methods always return undefined empty context", "body": "derived known offenders currently returns scrolltop scrollleft width height innerwidth innerheight outerwidth outerheight", "num": "2319", "d": "5/2015"}, {"title": "add support grab div text", "body": "hey would like add support jquery grab text div something would interested coffeescript fnselecttext index el documentselection range documentbodycreatetextrange rangemovetoelementtext el rangeselect else windowgetselection range documentcreaterange rangeselectnode el windowgetselection addrange range return", "num": "2318", "d": "5/2015"}, {"title": "jsonp combination timeout causes errors", "body": "solution seems make jquery leave callback around timedout jsonp calls maybe option", "num": "2317", "d": "5/2015"}, {"title": "jquery let certain element names xml document", "body": "create element name match w regex operation fail happens jquery tries set innerhtml line constructed buildfragment", "num": "2316", "d": "5/2015"}, {"title": "combination scroll selector working", "body": "hello nt know design fact bug noticed scroll events triggered use following code created test minimum required produce html lorem ipsum dolor sit amet consectetur adipiscing elit sed tristique vehicula lobortis integer libero augue laoreet id condimentum vitae ullamcorper sed mauris maecenas malesuada et lectus ac posuere donec suscipit ullamcorper malesuada vestibulum commodo fringilla urna ut feugiat est sodales phasellus nulla lacus hendrerit vel vestibulum nec vestibulum ac orci integer vel est sagittis elementum metus ac cursus sem etiam eu quam gravida felis luctus dictum duis vel eros cursus suscipit magna porttitor risus donec vel viverra quam nec ultrices tortor nulla sem leo hendrerit non placerat eget consequat sed diam etiam placerat sem ac accumsan varius etiam ac enim eget est facilisis sagittis sed id lacus donec eget ornare risus duis lobortis leo gravida sagittis ultrices sed tellus elit tempus eu posuere id pharetra eget nibh cras dictum rhoncus lobortis maecenas ac tincidunt mi sed vel turpis dui suspendisse maximus commodo erat et ultrices suspendisse sed nisl mollis fermentum leo commodo augue vivamus ullamcorper massa et rutrum consequat div scroll function consolelog working body scroll div function consolelog working k", "num": "2315", "d": "5/2015"}, {"title": "manipulation handlers jquery vs native", "body": "demonstration different behaviours onoff methods jquery addremoveeventlistener native js native way expectable think jquery bug nt ps checked version bug", "num": "2314", "d": "5/2015"}, {"title": "event handler called already detached", "body": "event handler called already detached hello description two handlers attached document event let say click first handler detaches second click occurs handlers called though first expected tested scenario using pure js first handler called also tested mouseup mousedown events behavior pure js second handler called like browsers suppose ie issue expected behavior first handler called steps reproduce open click inside result area see output demo link sample tested versions browsers ie chrome opera firefox safari os windows thanks", "num": "2313", "d": "5/2015"}, {"title": "jquery iphone jquery window height width dont work fix included", "body": "testing seductiveappscom software iphone recently found dialog resizing routines worked background resizing uses jquery window width height well worked changing orientation damn thing twice works start page lifetime mine found years ago somewhere browserindependent window widthheight detection code var height windowinnerheight windowinnerheight documentdocumentelement amp amp documentdocumentelementclientheight documentdocumentelementclientheight documentbodyclientheight jquery version seductiveapps seductiveapps commented minutes ago oh btw fix also works chrome windows vista amp chrome android ca nt test regular browser android versions chrome ubuntu firefox windows vista likely internet explorer since windows even vista ipad air ipad dunno earlier versions ca nt test", "num": "2311", "d": "5/2015"}, {"title": "changes offset break jquery ui", "body": "contains several breaking changes jquery ui first switch return undefined hidden disconnected elements broken interactions tests second allow offest throw called window agree probably valid use begin may break lot code expecting", "num": "2310", "d": "5/2015"}, {"title": "jquery jquerymask plugin error windows phone", "body": "hello guys problem use jquerymask plugin plugin problem add comment using append html file test windows phone emulation internet explorer example jsfiddle created sample html file jsfiddle problem windows phone emulation file html teste testando function values elem object comment name datamask sizzleattr function elem name set document vars needed elemownerdocument elem document setdocument elem added condition works sizzleattr function elem name set document vars needed elemownerdocument elem document setdocument elem", "num": "2309", "d": "5/2015"}, {"title": "slidedown show stopped working elements", "body": "test case div p display none stuffthattakesaheight stuffthattakesaheight p show div slidedown changing fixes issue regression caused", "num": "2308", "d": "5/2015"}, {"title": "firefox strange behavior iframe hidden inside", "body": "see demo firefox push left button see page scrolls color changes right button button except version jquery clicking button leads unexpected behavior happens firefox jquery gt", "num": "2307", "d": "5/2015"}, {"title": "create tests event aliases", "body": "like see", "num": "2302", "d": "5/2015"}, {"title": "remove internal args amp remove", "body": "nt exposing private apis even via undocumented additional params found occurrences amp", "num": "2301", "d": "5/2015"}, {"title": "events originalevent must empty object", "body": "since must make sure objects supposed events events thus code like originalevent must replaced", "num": "2300", "d": "5/2015"}, {"title": "internal server error updating jquery", "body": "jquery updater version causes site error internal server error running wp headway layerslider wp table press wpcopyrightprotection wordfence latest ideas reverting previous jquery resolves ok site many thanks pete", "num": "2299", "d": "5/2015"}, {"title": "remove jquerystyle make jquerycss consistent remove jquerystylejquerycss", "body": "amp undocumented need expose hide plan eg amp", "num": "2297", "d": "5/2015"}, {"title": "custom queue animation promise resolved animation run", "body": "promise returned jqueryfnanimate work expected custom queue used promise resolved animation even starts following code executes functions immediately jsbin worse run custom queue even set motion initial call jsbin standard queue contrast things work expected promise resolved animation completed jsbin bug present latest versions branches", "num": "2295", "d": "5/2015"}, {"title": "document ready", "body": "hey first let thank move promises awesome would really useful document ready seems like unlikely change useful use", "num": "2293", "d": "5/2015"}, {"title": "jquery ca nt find first child form form", "body": "hello jquery ca nt select first form inside form select second one please see jsfiddle explains every thing", "num": "2291", "d": "5/2015"}, {"title": "update requirejs dep available", "body": "causes small issue build version danger breaking things future aware issue update requirejs accordingly example fix ladnded still see incorrect output ref cc jrburke", "num": "2290", "d": "5/2015"}, {"title": "remove jquerysupport", "body": "deprecated since object used support tests would nt want remove think need figure way remove leave tests", "num": "2289", "d": "5/2015"}, {"title": "deprecated methods", "body": "guess time move module add warnings update docs", "num": "2288", "d": "5/2015"}, {"title": "remove deprecated event aliases", "body": "deprecated since ref", "num": "2286", "d": "5/2015"}, {"title": "effects finish call progress", "body": "hi see difference darkest blue block modified callback callback called last time value force end animation agree problem found put line fix problem", "num": "2283", "d": "5/2015"}, {"title": "css method returns incorrect backgroundcolor selectbox options firefox", "body": "firefox jquery method returning correct rgb value options select box works expected chrome obtaining color via native property works browsers though jsfiddle tested chrome version firefox version developers", "num": "2282", "d": "5/2015"}, {"title": "new feature pr proposal tree traversal", "body": "full proposal short would get first element found dom tree wo nt cut method tree traversal category use quite often suppose might good use feature sure elegant would javascript similar function work around found thanks answer question compatible using universal selector also pretty sure nt best implementation need works love hear comments improve well", "num": "2280", "d": "5/2015"}, {"title": "domcontentloaded handlers fail fire jquery loaded opera", "body": "weird interplay jquery standard listener registration issue manifests opera tested mac appear affect either stable dev channels safari chrome firefox jquery nt need used fact even used test case simply including jquery page specific point causes error removing jquery fixes issue steps reproduce add standard listener removes event listener appends iframe include jquery jquery must loaded listener per register listeners listeners never fire listeners registered jquery loaded nt matter long jquery listeners loaded offending listener fail fire minimal test case uses gist offending listener step includes jquery uses js pane register additional listener never fires minimal test case using jquery minimal test case using jquery", "num": "2279", "d": "5/2015"}, {"title": "disabled selector inconsistent different browsers", "body": "input disabled parent fieldset selector behaves differently ie version browsers browsers selector indicated input disabled parent fieldset ie say disabled first thought sizzle falling back qsa selector available working correctly ie qsa works correctly seems also related documentation issue docs say always checks disabled prop see jqueryapijquerycom", "num": "2275", "d": "5/2015"}, {"title": "odd using attr checkbox works first time", "body": "checkbox test ready function checkcontrol click function odd works first time whey click allnone input namecheckitems attr checked thischecked know work still code confused input namecheckitems prop checked thischecked allnone", "num": "2274", "d": "5/2015"}, {"title": "want submit pull request new feature", "body": "trouble finding proper process read docs still got clue better proceed context proposal please keep issue topic help future people", "num": "2273", "d": "5/2015"}, {"title": "jqueryfnjquery might indicate", "body": "line could instead current", "num": "2269", "d": "5/2015"}, {"title": "longer fails gracefully null undefined", "body": "isarraylike looks like javascript function isarraylike obj var length objlength type jquerytype obj looks like javascript function isarraylike obj produces error similarly causes specifically fail accidentally put numerical value sure issue nothing failed accidentally number caused tests fail fixed thought mention", "num": "2267", "d": "5/2015"}, {"title": "jsdom dropped support node nodeiojs smoke test needs modification", "body": "use jsdom node smoke tests unfortunately old version nt install iojs new one nt support node use something else", "num": "2266", "d": "5/2015"}, {"title": "remove ready event", "body": "", "num": "2264", "d": "5/2015"}, {"title": "html htmlstring wrong parse", "body": "attached example div inside p", "num": "2263", "d": "5/2015"}, {"title": "one referenceerror typeerror breaks document ready prevents ever firing", "body": "jsfiddle reproduction single exception thrown inside callee event never fire become entirely unresponsive new attempts call similar event bindings like click one callee list throws exception later callees wo nt called example however event nt shut become totally unresponsive time expected behaviour callee handled isolation one breaks throws exception break every later call time alternately expected behaviour could exactly working nt think documented left us hunting hours today", "num": "2262", "d": "5/2015"}, {"title": "could contains support regex solutions jquery", "body": "hi guys want get list elements whose text matches given pattern wrap highlight useful feature sure jquery instead writing would prefer writing", "num": "2261", "d": "5/2015"}, {"title": "javascript execution inmemory element", "body": "exactly sure right repository post issue please help direct bug filed might firefox bug think source jquery starting noticed inmemory element aka attached dom perform javascript execution cases nt happen javascript executed element attached dom thus making potential source xss injection attacks reproduces firefox using jquery repro chrome minimal repro script jquery injection example jquery script second repro using elementappend jquery injection example jquery script javascript equivalent example perform injection", "num": "2260", "d": "5/2015"}, {"title": "problem calling css parent within frame", "body": "hi well trying someelement css display someelement returned parent window passed iframe via function call firefox returns undefined due following code jquery getstyles function elem support ie lt firefox lt ie throws elements created popups ff meanwhile throws frame elements defaultviewgetcomputedstyle elemownerdocumentdefaultviewopener return elemownerdocumentdefaultviewgetcomputedstyle elem null return windowgetcomputedstyle elem null iframe firefox elemownerdocumentdefaultviewopener set elemownerdocumentdefaultviewparent suggest replace", "num": "2259", "d": "5/2015"}, {"title": "extend concat arrays", "body": "", "num": "2258", "d": "5/2015"}, {"title": "data align data accessors ultimate embrace direction", "body": "camelcasing always problematic attempts work around camelcasing whenever possible always caused problems decided always camelcase implementation align dataset spec makes everything lot simpler made separate issue broad enough scope pertains keys dashes digits also fixed separate commit solution laid comment per want embrace option camelcase attributes data object first access set camelcase key setter camelcase added keys bulk setter look camelcase key getter ignore direct manipulation operations", "num": "2257", "d": "5/2015"}, {"title": "load parts wanted", "body": "typical component require need model becoming familiar feels like way becoming standard current jquery supports amd commonjs lacks ability split let say know two jquery plugins need require basic dom manipulation setting attributes eventing click keydown event would need approximately jquery offered looking folder noticed actually uses load dependencies question rewrote file liking loaded modules wanted would result smaller jquery footprint currently using webpack project already managed bring bootstrap couple kbs excluding features want want jquery especially bootstrap reduced realized also need entire potential jquery instance see bootstrap would use ajax functionalities kind regards ingwie", "num": "2256", "d": "5/2015"}, {"title": "rearrange animation options logic", "body": "cc gnarf uses undocumented use fact manipulate options sending preserved original move manipulation fact claims", "num": "2255", "d": "5/2015"}, {"title": "jqueryfnmap inconsistent standard", "body": "currently jquerymap takes callback executing dataset index first argument value second per javascript array prototype map function two swapped reason jquery consistent javascript standard", "num": "2253", "d": "5/2015"}, {"title": "ajax callbacks triggered chrome", "body": "trying download header mjpg stream see stream available following code field refers mjpg stream works like charm jquery jquery chrome safari versions callbacks triggered query finishes tests done windows", "num": "2252", "d": "5/2015"}, {"body": "agree problem good repro sure reasonable way fix jquery even sure dom mutation observers help happen fact probably ca nt tell whether anything removed focus element removed nt appear focus event fires removed element blurs solution think update dom would see subtree affected fake whole focusfocusin sequence focus management ugly bugprone thing sure want go plus could serious performance issues possibilities possible work around app general seems like bad idea remove focus element user may interacting ideally firefox would fix bug pinging miketaylr bring loop", "d": "5/2015"}, {"body": "thanks ping dmethvin ideally someone find site two broken firefox due lack focusinfocusout make better case fixing", "d": "5/2015"}, {"body": "miketaylr thing known events widely supported ppl use jquery use important implement events please add properties window object since way correctly check support events important thing please follow spec chrome implementation", "d": "5/2015"}, {"body": "maybe something like", "d": "5/2015"}, {"body": "thank", "d": "5/2015"}, {"body": "yeah seems incorrect remove could report issue documentation issue code issue", "d": "5/2015"}, {"body": "mzgol oh bad thanks done idea long words still use current projects", "d": "5/2015"}, {"body": "bramvanroy anyways better use deprecated feature deprecated reason", "d": "5/2015"}, {"body": "changed behavior although nt documented removed completely nt use find needing use nondebugging purposes generally means api plugin needs selector passed reliable way know string selector represents current set elements jquery set", "d": "5/2015"}, {"body": "thank opening issue think needs debugged forums jquery irc channel determined issue jquery core please open new issue reduced test case help us assess potential problems", "d": "5/2015"}, {"body": "known issue point around long arguably feature cf jaubourg comments related tickets could use like would require careful consideration impact alreadylong list options would consider pull request inclined direct everyone towards native promises full deferreds whose interoperable jquery method exhibit seizing behavior case handled", "d": "5/2015"}, {"body": "imho intended behavior callbacks catch exceptions like recommend using deferreds wrapping code trycatch manually", "d": "5/2015"}, {"body": "sorry sure resolve problem deferreds problem see callback function executed call effect used api register listeners called specific events need listeners called every time called first time also need registered listeners called registered one throws errors one throws error rethrows error ok impact listeners subsequent calls wrapping listener trycatch would ugly cause lot intention behavior really desired maybe documentation improved tell users error handling", "d": "5/2015"}, {"body": "sorry sure resolve problem deferreds problem see callback function executed call effect right need specifically use newly interoperable method need listeners called every time called first time also need registered listeners called registered one throws errors wrapping listener trycatch would ugly cause lot jquery deferreds offer solution seems fit case perfectly option released version need nt ugly though could put wrapper function like attempt even", "d": "5/2015"}, {"body": "feel like leave documenting exception behavior needed encourage standardsbased instead", "d": "5/2015"}, {"body": "ok thanks lot understand mean nt aware requires jquery also thought wrapping callback function like suggested makes removing callback hard since would remove correct wrapper function callback would remember wrapper callback function think live without fix justed thought might problem know yet understand reasons leave appreciate would update documentation think best use api build sth", "d": "5/2015"}, {"body": "thank opening issue suspect duplicate", "d": "5/2015"}, {"body": "jsfiddlejsbincodepen nt support create test case jsbincom remove part url load example url editing might break url viewing work", "d": "5/2015"}, {"body": "thank opening issue problem named function expressions nt work place function declaration binding works", "d": "5/2015"}, {"body": "completeness found article describes exactly wrong creates issue", "d": "5/2015"}, {"body": "also good place signature nt need know function name details way", "d": "5/2015"}, {"body": "dmethvin think meant events namespaces like document clickmynamespace", "d": "5/2015"}, {"body": "nope meant", "d": "5/2015"}, {"body": "dmethvin suggestion unsubscribes handlers case need resubscribe back technique complicates things ps explain sort logic maybe suggest elegant way javascript document click mybutton function handler e var button epreventdefault var promise getsomepromisethatrunsasync promisethen function need undo epreventdefault need native button click since submits form post action handled serverside alternative way javascript document click mybutton function handler e var button buttondata bypassclickhandler return epreventdefault var promise getsomepromisethatrunsasync promisethen function need undo epreventdefault need native button click since submits form post action handled serverside", "d": "5/2015"}, {"body": "dmethvin suggestion unsubscribes handlers case need resubscribe back technique complicates things test case remove handler event handler might mean different things code trying inject code existing page nt control reason think something like", "d": "5/2015"}, {"body": "thanks report problem many libraries shimming core apis poorly react native may turn checking enough another library shims one nt shim necessary apis sure fix properly within factory reactnative create global document lacks basic methods", "d": "5/2015"}, {"body": "thanks digging issue good reason reactnative global variable single key need remove altogether added workaround early project needed anymore", "d": "5/2015"}, {"body": "nt seem like something support jquery library built work html dom expects basic document methods exist fyi removes ajax modules ajax folder well goes would make custom command lot shorter", "d": "5/2015"}, {"body": "anything desired behavior nt fail silently", "d": "5/2015"}, {"body": "ok since vjeux confirmed sth react native amp fix side going close issue thanks everyone input", "d": "5/2015"}, {"body": "thanks replies mzgol vjeux timmywil vjeux saying longer needed set global best solution get rid global document reactnative create issue repo", "d": "5/2015"}, {"body": "yes seems", "d": "5/2015"}, {"body": "use works expected", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "thanks opening issue drop accept header since content sure need set", "d": "5/2015"}, {"body": "copied code used case must include accept header server work relevant issue", "d": "5/2015"}, {"body": "drop accept header since content sure need set response may conditional entirely reasonable request returns either data success based original payload", "d": "5/2015"}, {"body": "entirely reasonable request returns either data success based original payload fair enough however unable reproduce jquery git", "d": "5/2015"}, {"body": "make server return contenttype header return", "d": "5/2015"}, {"body": "hunsu sure sure server nt returning content", "d": "5/2015"}, {"body": "ie empty string still content message body", "d": "5/2015"}, {"body": "test perhaps test using wireshark ca nt right", "d": "5/2015"}, {"body": "response may conditional entirely reasonable request returns either data success based original payload however ca nt expect since empty string content would invalid json server responds content something wrong server responds content still something wrong content invalid json", "d": "5/2015"}, {"body": "used wireshark see response server server returned null request body nt know jquery error message says try parse empty string pumpuli yes server something wrong question jquery try parse content included content response", "d": "5/2015"}, {"body": "means content browser free stop reading response headers end assuming body nt check may happening anything gets jquery definity incorrect return body jquery optimized workflow correctly configured servers incorrectly configured ones declare datatype text parse response expect json", "d": "5/2015"}, {"body": "problem code nt ask jquery parse response anyway", "d": "5/2015"}, {"body": "parsed response server told returns json need either fix server enforce datatype text", "d": "5/2015"}, {"body": "correct status say non content response parse response", "d": "5/2015"}, {"body": "response server incorrect assuming means response body valid json may lot invalid server configurations cant workaround server bug jquery easily workaround wrote", "d": "5/2015"}, {"body": "http spec say http nt body jquery must try parse feature live jquery nt respect http spec problem", "d": "5/2015"}, {"body": "http spec nt say anything parsing body well might well return text always beyond spec imo also according spec contenttype entityheader field indicates media type entitybody sent recipient case head method media type would sent request get set response nt contain data one exception head method response nt contain data definition argue server config invalid jquery nt specify behavior invalid input anything may theoretically happen", "d": "5/2015"}, {"body": "http spec say http nt body jquery must try parse spec nt say however spec say response must include messagebody thus always terminated first empty line header fields", "d": "5/2015"}, {"body": "case think actually helpful jquery tried parse response failed uncovered server issue leave asis", "d": "5/2015"}, {"body": "think right chromefirefox case think means include html tags values need encoding opinion afraid expressions may rude hard read good english thanks", "d": "5/2015"}, {"body": "thanks report examples valid semantically identical allows quoted attribute values contain character references arbitrary unescaped lessthan greaterthan considering cost performance library size parse normalize wo nt pursuing effort try force attribute values particular quoting style", "d": "5/2015"}, {"body": "understand makes sense", "d": "5/2015"}, {"body": "thank opening issue however nt released beta yet jquery folder src folder installing jquery", "d": "5/2015"}, {"body": "timmywil ah updated file tree ignore pulled repo looking adding pull request add brocfile exporting amd version jquery part", "d": "5/2015"}, {"body": "gotcha thanks", "d": "5/2015"}, {"body": "arises combination browser bugs lies code guard problem firefox regarding delegated rightclick events bubble tbh sure firefox still problem make worse use arrow keys example firefox chrome event says left mouse button clicked lie ie says button clicked true triggers firefox bug check think fix changing perhaps guard removed completely firefox fixed bug long ago btw ca nt find standard defines happens arrow keys radio button group", "d": "5/2015"}, {"body": "thanks quick response played code using everything appears work expected create local patch purposes overrides helper method added milestone", "d": "5/2015"}, {"body": "intended known nt applied fix yet size complexity proportion magnitude resolved issues", "d": "5/2015"}, {"body": "hmm sure necessary nt hurt copy", "d": "5/2015"}, {"body": "moved tickets apimigrate", "d": "5/2015"}, {"body": "remember keyboardevent mouseevent pretty screwy keyboard event supposed use instead long time preferred property copy normalized event present neither created another confusing set properties mouseevent also took years browsers get right supports natively time two properties screwed browsers decided normalize docs say nt copy lot people may using already nt care could deprecate migrate warn better choices problem would compat branch needs never normalized andor also note may high perf penalty see events like mousemove mouseover happen lot", "d": "5/2015"}, {"body": "copying already causes performance penalty firefox cases see fitzgen made aware nt time measure exactly slowing everything linked pr jquery patched use getters instead copying significantly speeds firefox understand", "d": "5/2015"}, {"body": "probably calculation force layout changing getter avoids long user event handler nt ask since deprecated properties nobody use supported present handy perf standpoint would best deprecate well even shim getter poison use", "d": "5/2015"}, {"body": "well deprecated may cause performance penalty could remove favor keeping deprecated perf issues bad thing especially bad parties patch code make palatable", "d": "5/2015"}, {"body": "normally copying bad forces style recalculation layout offsetposition properties see although frequent events mousemove copy loop pretty significant even without relayout", "d": "5/2015"}, {"body": "think deprecate feel comfortable removing market share low enough drop", "d": "5/2015"}, {"body": "although frequent events mousemove copy loop pretty significant even without relayout right pr changing copying multiple purelyjs stand point replacement slower seems actually reading property must causing perf penalty think deprecate feel comfortable removing market share low enough yeah causing perf issues might example change copying using getters cases supported would require actual examples test though guessing", "d": "5/2015"}, {"body": "browsers truly support seems like could define load time lazycopy lazyevaluate everything removes copy overhead event delivery complications code may define time execution expect next event delivery reflect changes would good deprecate behavior well could optimize future", "d": "5/2015"}, {"body": "like dmethvin said could prototype moves performance issues slow getter style recalc gettime also removes fix loop makes false though nt think see poc commit handled issue mentioned dmethvin", "d": "5/2015"}, {"body": "hey jbedard jbedard guy something smilecat love way handles dynamic adds fixhooks would able add perf test wondering fast enough", "d": "5/2015"}, {"body": "thanks opening issue please provide reduced test case help us assess problem", "d": "5/2015"}, {"body": "internally uses iterate object according spec order iteration object defined mechanics order enumerating properties specified must conform rules specified therefore rely order jquery nothing help", "d": "5/2015"}, {"body": "see also note microsoft stop supporting january really worth lot additional heroics point", "d": "5/2015"}, {"body": "dmethvin see point still think would nt hurt change maybe even wo nt make attribute suddenly work allow create solutions without hacking missing something", "d": "5/2015"}, {"body": "might prevent error wo nt make form elements work string property though big fan silent failure really nt support form features anyone wants support need deal", "d": "5/2015"}, {"body": "reason decide go using attribute know implement solution make work oldie nt know moment jquery throw errors instead planned polyfill dig jquery code understand error comes", "d": "5/2015"}, {"body": "replace prophook fix exactly analogous", "d": "5/2015"}, {"body": "oh true nt even think using prophook", "d": "5/2015"}, {"body": "timmywil changes necessary apart modifying works release script", "d": "5/2015"}, {"body": "nope sufficient copied release script", "d": "5/2015"}, {"body": "pr", "d": "5/2015"}, {"body": "see also", "d": "5/2015"}, {"body": "gon na log ticket desc need", "d": "5/2015"}, {"body": "supposed events fired browser direct user interaction elements", "d": "5/2015"}, {"body": "tried recent version code looks different performed asneeded basis", "d": "5/2015"}, {"body": "hi refer jquery version using version compatible old browsers", "d": "5/2015"}, {"body": "dave meant jquery micha\u0142 go\u0142\u0119biowski", "d": "5/2015"}, {"body": "ok tested latest version problem similar call divoffsetwidth takes seconds line supportinlineblockneedslayout val divoffsetwidth", "d": "5/2015"}, {"body": "rubenortizgonzalez thank making us aware could copy test case us", "d": "5/2015"}, {"body": "hi timmy impossible copy file jsbin shared file source testhtml file references jquery version modified print console times document ready functions", "d": "5/2015"}, {"body": "ing function makes semantic sense deoptimize objects properties something keep mind", "d": "5/2015"}, {"body": "pure guessing first object already deoptimized since lot bounded properties second special host object might another type optimizations play would nt rely assumptions proved performance benchmarking", "d": "5/2015"}, {"body": "timmywil dmethvin jaubourg need opinions also would like know perception nt change", "d": "5/2015"}, {"body": "agree pretty magic global doubt optimization comes play would make sense create single object initialization put jsonp callbacks would work since ing properties regular object rather global", "d": "5/2015"}, {"body": "would mean would expose three globals soon dead could eliminate cool although seems would need one browser", "d": "5/2015"}, {"body": "like idea using means delete every browser except receives change", "d": "5/2015"}, {"body": "reduced test case also able reproduce opposite text outside iframe red text inside iframe red", "d": "5/2015"}, {"body": "also created another test case use delay nt problems delay get different results differents runs hope helps", "d": "5/2015"}, {"body": "interesting switching order affects outcome outcome become inconsistent small settimeout intervals wonder kind race condition", "d": "5/2015"}, {"body": "right think problem chrome browsers bug nt happen tried replicate problem using native methods unfortunately could nt try later using jquery internal code see exactly causes chrome fail case fact passing string directly solves problem might mean possible add something avoid bug", "d": "5/2015"}, {"body": "technically invalid trying append nodes foreign document failure arguably bug chrome especially behaves unpredictably face timeoutsbreakpointsetc definitively one jquery explicit ownerdocument corrects issue", "d": "5/2015"}, {"body": "thanks help close things think something worth reporting webkitchromium teams fine changing approach application wonder behavior still investigated", "d": "5/2015"}, {"body": "think definitely weirdness could clean", "d": "5/2015"}, {"body": "documentation says note successful controls serialized string submit button value serialized since form submitted using button dup latter discussed discoverable via google", "d": "5/2015"}, {"body": "submit button value serialized since form submitted using button ok wrong design successful control must defined within form element must control name however form contains one submit button activated submit button successful definition form one submit button succesful says activated submit button nt say anything submitted using button submit event triggered clicking given submit button ca nt see way consider activated submit button", "d": "5/2015"}, {"body": "serialize using code button pressed wrong button press triggered submit event button press triggered code need add serialized input nt", "d": "5/2015"}, {"body": "documentation says method tickets explain reasoning submit button activated call within jquery besides would unfair change behavior penalize people read documentation", "d": "5/2015"}, {"body": "documentation says method got documented sorry missing yet behavior wrong tickets explain reasoning wrong submit button activated call serialize within jquery unless call listener triggered pressing button besides would unfair change behavior backward compatibility argument indeed considered whether fix behavior break bc keep wrong inconsistent behavior sake bc seen bc broken past jquery favour improved consistency also easy incur case change would actually harm though course possible penalize people read documentation indeed could penalizing people read documentation worked around incorrect documented behavior see", "d": "5/2015"}, {"body": "unless call listener triggered pressing button would jquery know opposed called way show code", "d": "5/2015"}, {"body": "omg reason aggressive dmethvin modify methode impossible linked event include something event maybe possible new look", "d": "5/2015"}, {"body": "aggressive frankly nt think one aggressive", "d": "5/2015"}, {"body": "modify serialize methode impossible may missing something could nt documentactiveelement used inside seriazize nt example demonstrate would work", "d": "5/2015"}, {"body": "activeelement current dom element actually focus jquery serializing form suppose ca nt guaranty focus still submit button", "d": "5/2015"}, {"body": "nt example would nt work either would", "d": "5/2015"}, {"body": "hmm yep use activeelem callback depending event callback call methode want callback", "d": "5/2015"}, {"body": "course call anything else submit event ok submit button included serialization automatically succesful input element definition question whether using activeelement reliable crossbrowser worth investigating issue reopened also turns work cases pretty sure ways explored issue always dismissed non existing also according definition successful given standard one submit button always included unless caveat seems trivial", "d": "5/2015"}, {"body": "question whether using activeelement reliable mean whether three cases submit button triggering event triggering serialize may active element reason", "d": "5/2015"}, {"body": "mean whether three cases submit button triggering event triggering serialize may active element reason extremely common occurrence forms frequently submitted via form controls see", "d": "5/2015"}, {"body": "extremely common occurrence forms frequently submitted via form controls occurrence talking sending form via form controls either one submit button case according definition succesful controls given standard submit button included trivial implement serialize search submit buttons inside form check one b one sent form via another form control none buttons succesful hence ok included serialize actually seems discrepancy definition succesful standard cited browser behavior least chrome chrome sending form without javascript sends first submit input element send form hitting enter correct behavior case definition standard either unclear missing something serialize behave trivial matter finding first submit element none activeelement", "d": "5/2015"}, {"body": "occurrence talking actually said call anything else submit event ok submit button included serialization automatically succesful input element definition since impossible know inside submit event suggested use detect implicit form submission shows check viable solution", "d": "5/2015"}, {"body": "since impossible know inside submit event suggested use documentactiveelement detect implicit form submission shows check viable solution meant submit event triggered clicking submit button implicit submission see last comment", "d": "5/2015"}, {"body": "implicit submission see last comment mmm sorry alone nt enough distinguish whether inside submit event impossible know inside submit event nt bit fast declaring impossible detect submit event right nt possible jquery store variable reference form jquery intercepts submit event userdefined listeners added via jquery executed reset variable null whatever jquery finishes processing submit event serialize would able check whether called within submit event guess trivial impossible", "d": "5/2015"}, {"body": "value notoriously unreliable set consistently browsers even throws errors versions ie jquery core jquery ui incorporate workarounds plus cases like detached elements crossframe access value wo nt correct available huge amount magic apply get value cases instead simple note docs saying nt add add big list conditions fail browser issues nt see worth inconsistency especially people nt read existing docs making complicated wo nt help things looking simple workaround put hidden input form namevalue pair want send submit button nt give submit button name wo nt successful submitted user without javascript", "d": "5/2015"}, {"body": "value documentactiveelement notoriously unreliable ok solution detect submit event right nt possible jquery store variable reference form jquery intercepts submit event userdefined listeners added via jquery executed reset variable null whatever jquery finishes processing submit event serialize would able check whether called within submit event looking simple workaround nt hoping better jquery one would nt need workaround order form guaranteed serialized always exactly way would sent browser understand lack mostly javascript fault apparently nt provide method obtain obliging ie jquery write scratch code serialization mimic browser would", "d": "5/2015"}, {"body": "seems like good place", "d": "5/2015"}, {"body": "boo plain objects right", "d": "5/2015"}, {"body": "following saying outerinner widthheight ones probably one pr scroll ones another think two tickets atomized issues helpful tracking progress helpful triaging broad issues guidelines specific actions need taken moved roadmap make sense", "d": "5/2015"}, {"body": "think runs risk incompleteness know eight methods need change might without tracking ticket could land fix scroll methods fix dimension methods erroneously consider work done really nt want look multiple places understand going", "d": "5/2015"}, {"body": "one place roadmap tracking instead ticket item roadmap need removed tickets closed leave sure done purpose another advantage longer leave tickets lying open unsure done ambiguity issues combined roadmap incompleteness", "d": "5/2015"}, {"body": "also roadmap keeping updated broader issues gives us one place see going without sifting issues know found many times looking one ticket explains ones proposing put one place", "d": "5/2015"}, {"body": "roadmap plus github issues makes two places mention former repository makes project even less accessible wouldbe contributors correctable though willing go honestly nt see advantage adding new issue tag", "d": "5/2015"}, {"body": "nt participate related ticket sorry question returned value sometimes known getters return nothing return believe done jquery first place better corresponds dom methods like common many languages although methods usually deal objects hand easy especially since return value already could correlates ecma spec jquery domcentric might make sense align case would like us documentally establish couple years would nt face opposite ticket would propose always return instead brendaneich rwaldron please help us", "d": "5/2015"}, {"body": "markelog dom arguments essentially nt apply ticket calling methods empty collections eg", "d": "5/2015"}, {"body": "see difference nothing return returned", "d": "5/2015"}, {"body": "difference context collections length valid input therefore defined output invalid context example undefined output might even throw exceptions", "d": "5/2015"}, {"body": "design documents think prefer see wiki like adding new features could imagine document described ideals jquery api calls behave including definition happen empty context set perhaps could also document apis know consistent philosophy reasons backcompat old jquery versions conformance output etc github issues nt good generating roadmap us way trac maybe missing open issues milestone report even sort milestone suppose future best obviously finegrained future milestones want back subject ticket seem like benefit consistency outweigh work potential compat breakage seems like one weighed separately given separate ticket ultimately thrown vagaries jquery code plugin ecosystem see badly break web", "d": "5/2015"}, {"body": "right really rather use issues anymore let use roadmap please atomize issues", "d": "5/2015"}, {"body": "way add note roadmap represents contributingmd gone issues updated", "d": "5/2015"}, {"body": "difference context collections length valid input function return nothing return difference context collections length valid input therefore defined output invalid context scrolltop example undefined output might even throw exceptions plain objects supported sure undefined output call nt makes sense inputs supported could imagine document described ideals jquery api calls behave including definition happen empty context set would awesome", "d": "5/2015"}, {"body": "function return nothing return nothing return calldependent eg currently returns returns recently tried change return values invalid input unspecified trying establish consistency around returning plain objects supported sure undefined output call nt makes sense inputs supported plain objects supported present operations supported plain javascript objects wrapped jquery see also", "d": "5/2015"}, {"body": "plain objects supported present operations supported plain javascript objects wrapped jquery data prop trigger triggerhandler see also jqueryapijquerycom hm missed link okay nothing return calldependent eg jquery body val currently returns prop nonexistent returns undefined recently tried change attr nonexistent undefined null asking returns asking return return values invalid input unspecified trying establish consistency around jquery getter returning undefined whatever getters would return think follow general idea explain specifically empty string etc right seems trading one value another without reason", "d": "5/2015"}, {"body": "asking returns asking return still calldependent maintain return like dom return like javascript property accessors even though backwards compatibility makes change difficult right seems trading one value another without reason methods return etc trading values bringing exceptions line", "d": "5/2015"}, {"body": "trading values okay changing return values phrasing suiting think need verbose explanation one value follow general principal recommended plugins", "d": "5/2015"}, {"body": "thanks opening issue think mean like get selected text case think best left plugin like get text content already done using", "d": "5/2015"}, {"body": "provide test case jsbincom jsfiddlenet showing mean", "d": "5/2015"}, {"body": "sure see write timeouttester purpose ticket maybe jsbin reproduce issue yes", "d": "5/2015"}, {"body": "thanks opening issue confused looks like right behavior since done called timeout", "d": "5/2015"}, {"body": "problem gets called timeout nt exist gets removed timeout period likely solution keep callback around timeout replace", "d": "5/2015"}, {"body": "oh oh sorry", "d": "5/2015"}, {"body": "think decision remove timedout jsonp handlers made haste mistaken gives user nice warning script errors least ability keep timedout jsonp handlers around optional move reopen application throws errors way handle using forked version jquery", "d": "5/2015"}, {"body": "haste discussed two years see discussions tickets fighting death used throws errors way handle using forked version jquery argument couple times summoned browser vendors showed way inconsistent bunch things maybe another life", "d": "5/2015"}, {"body": "polling every seconds jsonp calls continue time would pretty large pile uncollected function callbacks might ever collected understand firefox correct", "d": "5/2015"}, {"body": "dmethvin like suggestion bug affects chrome well tested ie", "d": "5/2015"}, {"body": "dmethvin said three years ago chrome affected since opera dropped engine time ago option always generates error supported environments documentation outdated yeah would pretty large pile uncollected noop function callbacks might ever collected yes thing happens instead proposed value would point function point thing discuss seems proposed solution would eat less memory secrettriangle good suggestion although obvious drawbacks case jsonp request returns something js js executed callback would throw error function would never collected workaround using jsonpcallback name let jquery generate", "d": "5/2015"}, {"body": "still seeing", "d": "5/2015"}, {"body": "works fine issue latest production version versions earlier", "d": "5/2015"}, {"body": "ok wanted sure fixed next major release", "d": "5/2015"}, {"body": "forgot mention tested osx chrome version k", "d": "5/2015"}, {"body": "event nt bubble elements ca nt used delegated events mentioned documentation browsers load scroll error events eg element bubble", "d": "5/2015"}, {"body": "dupe", "d": "5/2015"}, {"body": "mzgol ok true solution click event must handled next listeners", "d": "5/2015"}, {"body": "actually dup please comment want get reopened let avoid spreading discussion accross multiple issues", "d": "5/2015"}, {"body": "thank opening issue exists", "d": "5/2015"}, {"body": "dup", "d": "5/2015"}, {"body": "see jquery love jquery wo nt leave even could guys sources utterly unreadable outsiders like p ca nt check problem remains sorry try", "d": "5/2015"}, {"body": "thanks opening issue please provide reduced test case help us assess issue issue already addresses issue please close ticket duplicate thanks", "d": "5/2015"}, {"body": "first case think accurate retrieving offset disconnected element nt make much sense think second support failing silently returning undefined", "d": "5/2015"}, {"body": "nice thing returning naive caller expecting object die code easier debug nt document returns anything object okay since unhandled cases mentioned docs", "d": "5/2015"}, {"body": "failures stuff like element window offset use method return context collection empty part larger story though kinds things expect see failures mild api misuse easy consumers fix serious valid vs invalid input code want know end backing every change", "d": "5/2015"}, {"body": "serious valid vs invalid input code want know end backing every change case returning undefined still one way handle invalid input everything needs throw error right", "d": "5/2015"}, {"body": "yes things like agree easy fix fix regardless outcome however problem pretty buried code hard track", "d": "5/2015"}, {"body": "also return disconnected hidden nodes would throw window return undefined cases returning undefined invalid case would seem better", "d": "5/2015"}, {"body": "case returning undefined still one way handle invalid input everything needs throw error right nt want handle invalid input creating errors exposing assuming input valid check conditions tell consumers avoid creating words input invalid explicitly check", "d": "5/2015"}, {"body": "input invalid explicitly check see point", "d": "5/2015"}, {"body": "return undefined disconnected hidden nodes would throw window well looking side slightly different disconnected elements still window current behavior reflects native way", "d": "5/2015"}, {"body": "good point arschmitz guess consider element valid input output literally layout boxes", "d": "5/2015"}, {"body": "another side release yet current stable jquery work version ui sure really care though", "d": "5/2015"}, {"body": "bright side returning makes error happen caller side expecting minor plugin rare user mistake say let leave asis breaking current past ui gon na make mess", "d": "5/2015"}, {"body": "failures stuff like element window offset use element offset method return undefined context collection empty code arschmitz showed simplified reality happens determining element operate default element window later get offset element getting error already guards windows parts code adding another one fine", "d": "5/2015"}, {"body": "also nature implementation nolayout elements ignored truly invalid input output would indistinguishable valid input since returns coincides elements located origin", "d": "5/2015"}, {"body": "scottgonzalez yeah like said think fix regardless core backs change", "d": "5/2015"}, {"body": "like point disagree invalid input handled problem figuring much change right without causing much ruckus would nt interpret change policy change applied throughout codebase arschmitz breaking change noticed far regards well previous versions ui work jquery", "d": "5/2015"}, {"body": "timmywil yes think breaking change within actual code point scottgonzalez aware others think couple come got backed", "d": "5/2015"}, {"body": "sorry came across strong thinking precisely changes got reverted feedback jquery ui valuable cases see us expanding domain valid input support broader use maybe one would nt consider unreasonable ui lt ui break core without migrate purpose migrate opinion allows us flexibility move forward preserving temporary backwards compatibility nt want see us stuck particularly important still healthy downstream consumer happens currently misuse functionality", "d": "5/2015"}, {"body": "saying migrate fix least right", "d": "5/2015"}, {"body": "would nt consider unreasonable ui lt ui break core without migrate agreed handle ui regardless also push support core history going back unexpected releases get support new versions core since eases upgrade path users", "d": "5/2015"}, {"body": "arschmitz", "d": "5/2015"}, {"body": "say caused much problems ui cause lot problems userland would go safest way possible blog post explicitly mention incorrect use api document yeah sounds weird put warnings migrate next major technically speaking absolutely right practically way dangerous taste", "d": "5/2015"}, {"body": "record breaking things mobile well though nearly extent", "d": "5/2015"}, {"body": "arschmitz would mobile breakages addressed stands", "d": "5/2015"}, {"body": "behavior invalid input undefined since getting offset window defined behavior may throw error may going let migrate take one turns causes much uproar user code address beta release", "d": "5/2015"}, {"body": "think letting migrate handle seems like good way go agree calling window make sense timmywil believe addressed us gabrielschulhof would know better since debugged issue submitted patch", "d": "5/2015"}, {"body": "arschmitz timmywil test pr flatout mobile", "d": "5/2015"}, {"body": "arschmitz timmywil actually fix assertions fail", "d": "5/2015"}, {"body": "timmywil issue discussion change thought changes first part opening comment returning undefined hidden detached elements tests however wrong think potential break things userland change handled comes ui mobile quite bit turns jquery ui mobile allow widgets instantiated default element detached state via also general allow instantiating widgets detached elements improved performance among reasons also many many situations widget plugin sort may instantiated called inside hidden container major issue plugin authors cant ever reasonably know may inside hidden container think popups panels etc jquery mobile everything hidden page initialized means past could call element worry need always check return value using make lot code go knows would surprise start seeing things used lot something like worry change essentially makes plugin author never safe use first checking return value unless direct response user action essentially cant happen hidden detached elements example dragging mouse interaction type stuff case many cases ui", "d": "5/2015"}, {"body": "fact used setter also crashes bad way avoid crash calling setter find first whether element disconnectedhidden code hugely bad element disconnected querying setting coordinates close succession causes reflows", "d": "5/2015"}, {"body": "well either wo nt thrash dom dunno block", "d": "5/2015"}, {"body": "gabrielschulhof correct wrong wont really work call collection one elements either hidden disconnected terminate soon hits first hidden disconnected element continue rest collection", "d": "5/2015"}, {"body": "true need try inside callback", "d": "5/2015"}, {"body": "timmywil seems need discuss", "d": "5/2015"}, {"body": "arschmitz gabrielschulhof good point checking element disconnected setting seem expensive would comfortable continuing allow throw returning zeros disconnected elements nt necessarily make sense get offset disconnected elements behavior would actually line native gbcr", "d": "5/2015"}, {"body": "gabrielschulhof code hugely bad element disconnected querying setting coordinates close succession causes reflows already inherent part offset setter arschmitz knows would surprise start seeing things used lot something like worry explicitly providing default data later code like old behavior entirely appropriate expected libraryplugin code fact briefly setter call collection one elements either hidden disconnected terminate soon hits first hidden disconnected element continue rest collection hand strikes problem may sufficient reason back arschmitz gabrielschulhof often simultaneously set offset one element", "d": "5/2015"}, {"body": "would comfortable continuing allow window offset throw returning zeros disconnected elements yes would would recommend window change rare simple fix long handled migrate see issue issues offset hidden elements specifically seems like much bigger problem honestly make pita use often simultaneously set offset one element im aware case either library done think one case ever first thing thought looking code documentation says set current coordinates every element set matched elements relative document specifically mentioning collections supported behavior would actually line native gbcr seems like valid point", "d": "5/2015"}, {"body": "note jquery method docs regarding text nodes also applies general comment nodes passing html jquery note text nodes treated dom elements exception methods content generally ignored removed looks like added docs", "d": "5/2015"}, {"body": "agreed pr open adjust docs text nodes making clear supported operations added note requesting comment nodes included adjustments", "d": "5/2015"}, {"body": "phistuck confirm break client site happened using jquerygitjs seeing identical behaviour", "d": "5/2015"}, {"body": "wow nt use jquerygitjs production ever", "d": "5/2015"}, {"body": "mzgol haha yep never since site happened first paid job many year ago definitely bad idea surprised survived long", "d": "5/2015"}, {"body": "intended behavior change jquery fixes longstanding issues", "d": "5/2015"}, {"body": "extremely common case presented recommended solution", "d": "5/2015"}, {"body": "somewhat related supposed go changing", "d": "5/2015"}, {"body": "jzaefferer currently mirrors mirrors ie development lines set way time ago tools like jsfiddlejsbin pull newest jquery testing still works jsfiddle amp jsbin use new urls remove amp", "d": "5/2015"}, {"body": "see well start permanent redirects deleting jquery ui use testing projects might kind official information changes would quite useful", "d": "5/2015"}, {"body": "jzaefferer amp point file effectively testing twice amp", "d": "5/2015"}, {"body": "meant test", "d": "5/2015"}, {"body": "getting back track though recommended solution extremely common use case presented", "d": "5/2015"}, {"body": "hide class remove class eg put element done beforehand html later js said behavior change trial run tickets like think solutions performance cascade issues fixed", "d": "5/2015"}, {"body": "possibly revert live certain issues", "d": "5/2015"}, {"body": "hide class remove class eg removeclass hidden eliminate unnecessarily complicate use basic animations also impossible plugin author put style display none element done beforehand html later js css display block hide inline styles using javascript set preferred initial rendering state said behavior change trial run tickets like think solutions performance cascade issues fixed say must reverted end massive uproar", "d": "5/2015"}, {"body": "eliminate unnecessarily complicate use basic animations different setting inline styles", "d": "5/2015"}, {"body": "say must reverted end massive uproar nt think simple basic usage showhide causing noticeable performance issues", "d": "5/2015"}, {"body": "still discussing reopen", "d": "5/2015"}, {"body": "reason exactly see much effect would wip nt yet done beta release blog post changes certainly valid use cases gun unfortunately common use seems shooting feet compatibility arguments definitely keeping quirky edge cases existing code change revert go back recommending people avoid showhide use classes since nuances hard developers understand nt say disrespectful methods evolved lot complex expensive developer intuition says", "d": "5/2015"}, {"body": "well matter much recommend never viable solution plugin authors", "d": "5/2015"}, {"body": "alluded animating cascadehidden elements still accomplished bring trivial many cases damn near impossible others builtin allsinging alldancing iframe implementation completely untenable reliable way us figure proper display value arbitrary hidden elements", "d": "5/2015"}, {"body": "scottgonzalez mentions new method make things difficult plugin authors new method nt override hidden attribute demo would need use nt understand iframe needed previously given display option finite number settings would nt even need supported like amp could nt crossreference display settings based element work well", "d": "5/2015"}, {"body": "content hideshow candidate unlikely add remove hidden attribute dynamically spec says hidden attribute must used hide content could legitimately shown another presentation example incorrect use hidden hide panels tabbed dialog tabbed interface merely kind overflow presentation one could equally well show form controls one big page scrollbar similarly incorrect use attribute hide content one presentation something marked hidden hidden presentations including instance screen readers", "d": "5/2015"}, {"body": "could nt crossreference display settings based element work well aside enormous necessarily incomplete custom elements possible headed towards standardization list could also rendered inaccurate css overriding default display values edge cases like first drove us look default values iframe clearing inline display failed show element drive us stop trying like keep saying know application better therefore know right way reveal element animation could leverage crossplatform way inspect full cascade getting right absent nt seem worth necessary contortions said however special case clear every show animation would willing", "d": "5/2015"}, {"body": "said however hidden special case clear every show animation would willing like dave pointed nt even seem like correct usage", "d": "5/2015"}, {"body": "like keep saying know application better therefore know right way reveal element animation playing devil advocate second totally true sometimes making best guess better nothing nervous behavior change stylesheethidden elements still get feeling going cause uproar however nt want revert everything done falling back stylesheethidden elements would nt need read display value performance issue obama website nt display data user cares different display values responsive layouts would still way make work ie hiding elements stylesheet", "d": "5/2015"}, {"body": "mentioned possibility curious intend detect stylesheethidden elements without reading display value cf replaced", "d": "5/2015"}, {"body": "happens use", "d": "5/2015"}, {"body": "timmywil still strange behavior different", "d": "5/2015"}, {"body": "look console firefox giving nserrornotavailable try get display property element crossframe crosswindow access always dicey even two origin take look comments area particular instead child frame try manipulate parent call back function parent job", "d": "5/2015"}, {"body": "okay actually could avoid problem reordering codes interesting points crossframe access fails iframe hidden problem nt occur older jquery browsers anyway problem easily avoided eg calling function parent dmethvin mentioned nt say needs fixed would natural leave", "d": "5/2015"}, {"body": "agree got rid several earlier sure stayed around", "d": "5/2015"}, {"body": "took liberty assigning markelog", "d": "5/2015"}, {"body": "timmywil sure thing since must make sure objects supposed events events", "d": "5/2015"}, {"body": "simulated focus event nt methods", "d": "5/2015"}, {"body": "mentioned may able get rid fake altogether", "d": "5/2015"}, {"body": "issue way vague us anything need construct minimal reproducible test case without external dependencies shows error act", "d": "5/2015"}, {"body": "ok thanks set something get back", "d": "5/2015"}, {"body": "please also test nt use production main development line good know issue persists", "d": "5/2015"}, {"body": "set copy site error enabling lastest jquery updater sure create minimal text case suggested set admin ftp account could send details emailpm see issue clearly reproducible enabling plugin nt occur many thanks", "d": "5/2015"}, {"body": "one thing checkout jquery repository run compile jquery try file works type go back point nt work type go back point end find commit introduced issue post commit hash amp look read go", "d": "5/2015"}, {"body": "currently use jquery ui sure switch uses though", "d": "5/2015"}, {"body": "upon time ticket make methods nt know enough save though", "d": "5/2015"}, {"body": "yea think bit different actually prefer using methods sometimes forcing users create new jquery collection getset css unnecessary", "d": "5/2015"}, {"body": "goal retroactively bless use current public apis going pretty haphazard set lowlevel apis inconsistent calling conventions guess ca nt get worse vs though smilingimp rather setter getter going one similar least would give us consistency low level api may break current users undocumented interface figure args", "d": "5/2015"}, {"body": "rather jquerycss elem name value setter jquerycss elem name getter going one similar jquerydata least would give us consistency low level api may break current users undocumented interface figure extra styles args definitely moment today staring amp immediately seeing responsibility division looks extremely confusing especially taking account fact getter amp setter private positional params public apis also seems bad", "d": "5/2015"}, {"body": "agreed case rather see us move dave suggested drop completely", "d": "5/2015"}, {"body": "agreed case rather see us move dave suggested drop completely works well edit issue title updated", "d": "5/2015"}, {"body": "nt return promise returns context collection queuedependent defaulting fx invoke custom queue everything works expected", "d": "5/2015"}, {"body": "indeed thanks", "d": "5/2015"}, {"body": "thank opening issue might deprecated future might recommend form instead better create docs issues appropriate repo although useful information already suggest though use static one", "d": "5/2015"}, {"body": "opened interested api perspective documenting would mean adding api surface hence issue ca nt find information getting deferredpromise readiness document works tell also promisebacked version", "d": "5/2015"}, {"body": "ready might deprecated future info come mention deprecating ready contrary would get ahold promise resolves ready otherwise", "d": "5/2015"}, {"body": "ready might deprecated future discuss point future documented status yet determined", "d": "5/2015"}, {"body": "right asking discussion since already likely wo nt removed useful might well expose", "d": "5/2015"}, {"body": "benjamingr right asking discussion ready since already likely wo nt removed useful might well expose could report issue documentation issues discussed", "d": "5/2015"}, {"body": "mzgol sure impression api issue documentation issue opened one thanks", "d": "5/2015"}, {"body": "benjamingr thanks", "d": "5/2015"}, {"body": "invalid document forms nested inside forms", "d": "5/2015"}, {"body": "comment terribly important", "d": "5/2015"}, {"body": "think need comment saying rjs strip use strict added", "d": "5/2015"}, {"body": "comment terribly important might confuse people would check build source think need comment saying rjs strip use strict added sounds awkward issue might cause real failures ticket created would aware fix appropriate fix landed", "d": "5/2015"}, {"body": "rather leave issues lying around reminders cross bridge ifwhen come mon may oleg gaidarenko notifications githubcom wrote comment terribly important might confuse people would check build source think need comment saying rjs strip use strict added sounds awkward issue might cause real failures ticket created would aware fix appropriate fix landed reply email directly view github", "d": "5/2015"}, {"body": "ok misunderstood issue thought latest requirejs would strip use strict since action item update requirejs", "d": "5/2015"}, {"body": "work jquery ui amp mobile would need create nt exist currently rely said nt breaking support module components mainly first need figure keep support tests running would likely require testing amd support module instead built file", "d": "5/2015"}, {"body": "point think using jquery ui", "d": "5/2015"}, {"body": "hm last time discussed removing jquerysupport uproar need least set empty object since uimobile attach support tests jquerysupportui assume jquerysupport exists remember wrong", "d": "5/2015"}, {"body": "sounds familiar sun may pm micha\u0142 go\u0142\u0119biowski notifications githubcom wrote hm last time discussed removing jquerysupport uproar need least set empty object since uimobile attach support tests jquerysupportui assume jquerysupport exists remember wrong reply email directly view github", "d": "5/2015"}, {"body": "never existed jquery ui nt relied existing year", "d": "5/2015"}, {"body": "ok maybe mobile see eg cc arschmitz", "d": "5/2015"}, {"body": "yeah use pretty extensively mobile however extend extend places see second switch one simple changing worry part long know advance", "d": "5/2015"}, {"body": "yes please", "d": "5/2015"}, {"body": "okay todos although nt think actually remove quickly given much code still around uses small stubs anyway", "d": "5/2015"}, {"body": "dmethvin agreed nt think worth removing time soon extremely small size amp widespread adoption discouraging use seems ok said current setup migrate users amp people looking docs see warnings maybe core well", "d": "5/2015"}, {"body": "long nt actually remove time soon warning migrate fine", "d": "5/2015"}, {"body": "yeah definitely hurry", "d": "5/2015"}, {"body": "decide also need migrate docs tickets", "d": "5/2015"}, {"body": "takes care migrate part", "d": "5/2015"}, {"body": "since using animation would need call deferred method rest us agree seems like animations", "d": "5/2015"}, {"body": "dmethvin okay done", "d": "5/2015"}, {"body": "method seems returning wrong value firefox", "d": "5/2015"}, {"body": "inconsistent browsers worth filing mozilla issue really wrong thought remembered special rules option elements ca nt find correct computed style option element visible virtue selectedness anyway mikesherov", "d": "5/2015"}, {"body": "agree option elements bit strange thing extent clarification nt explicit style element one style nt work either firefox put miketaylr shaped signal light one nt think critical enough jquery fix either", "d": "5/2015"}, {"body": "agreed nothing jquery", "d": "5/2015"}, {"body": "opinion would best implemented plugin least gains enough traction receive requests put core would consider adding wary adding new methods core point", "d": "5/2015"}, {"body": "opinion would best implemented plugin least feeling", "d": "5/2015"}, {"body": "never really used plugins let go ahead research would work well looks like directory self maintained code whoever created suppose think beyond point since really planning maintain dancer", "d": "5/2015"}, {"body": "thank opening issue tests seems pass opera current opera current means opera respectively versions opera jquery supports", "d": "5/2015"}, {"body": "argh fooled opera page told latest version thanks", "d": "5/2015"}, {"body": "hemming hawing size probably land going ie selector pick children disabled fieldsets modern browsers get right except selection goes sizzle engine opposed ielike behavior relying solely upon property", "d": "5/2015"}, {"body": "seem case look jsbin works correctly selector children fieldsets ie gt course", "d": "5/2015"}, {"body": "actually sorry regular css selector work ie children fieldsets work correctly", "d": "5/2015"}, {"body": "bug jsbin returns nodelist always truthy want check property", "d": "5/2015"}, {"body": "ah right sorry sure enough fail ie", "d": "5/2015"}, {"body": "yea guess time grrrr arschmitz", "d": "5/2015"}, {"body": "lands probably address extra wrong related documentation consider element disabled ie selector work however work browsers jquerysizzle address well", "d": "5/2015"}, {"body": "left note test case explicitly", "d": "5/2015"}, {"body": "relates difference attr prop confused remember checked attribute affects defaultchecked property checked property one showing checked", "d": "5/2015"}, {"body": "please read documentation boolean attributes", "d": "5/2015"}, {"body": "well opening issue good start however recommend editing issue actual feature proposal like issue open concerning clarity contributejqueryorg get involved tell open issue repo thank willingness contribute", "d": "5/2015"}, {"body": "sure like issue open clear contributejqueryorg wo nt bother opened new issue feature proposal would edit first comment one remove think fine leave thanks timmywil", "d": "5/2015"}, {"body": "ok thank cauerego", "d": "5/2015"}, {"body": "need drop suffix release process", "d": "5/2015"}, {"body": "actually wo nt", "d": "5/2015"}, {"body": "noticed tag suffix wrong buildjs updated", "d": "5/2015"}, {"body": "basically dup nt guarantee invalid inputs silently ignored", "d": "5/2015"}, {"body": "agreed", "d": "5/2015"}, {"body": "dmethvin right starting wonder would nice failed silently string case obscure would expect changing behavior much problematic", "d": "5/2015"}, {"body": "timmywil agreed also implementations like lodash silently ignore things like", "d": "5/2015"}, {"body": "use three places protected sounding like request change signatures former two despite fact reported instances passing invalid input corrected since correcting mistakes usually easy adding correctness andor performance critical nt see benefit change end quite opposite seem like good thing", "d": "5/2015"}, {"body": "exceptions jqueryeach noniterable fn seem like good thing cases numbers strings agree passing variables may times seems common enough throwing going annoying users question convenient everyone going add code may well jquery", "d": "5/2015"}, {"body": "question convenient everyone going add code may well jquery good point also document noops think behavior could prefer callerlevel change add documents subsequent readers value expected rather happening work change docs least old calls retroactively correct far jquery api usage goes smile", "d": "5/2015"}, {"body": "actually another solution would install different versions jsdom using npm module running tests", "d": "5/2015"}, {"body": "would quicker path success anyone suggestions alternatives jsdom quick searches nt really turned anything promising", "d": "5/2015"}, {"body": "feared would become issue jsdom works fine iojs breaks newest major release installing unfortunately means skipping packagejson nt see better option nt think anything else comes anywhere near close jsdom dom support denissokolov know something domenic anything else could except install different jsdom versions based nodejs iojs", "d": "5/2015"}, {"body": "using newest jsdom iojs advantage easier windows users nt require compilation done contextify users reported harder jquery repo", "d": "5/2015"}, {"body": "get contextify patched support iojs jsdom continue work everywhere someone work though", "d": "5/2015"}, {"body": "contextify already patched could install latest version contextify toplevel jsdom uses seems like shortterm solution", "d": "5/2015"}, {"body": "contextify already patched could install latest version contextify toplevel jsdom uses seems like shortterm solution needed jsdom depends contextify catch newer vesion nt bump minor newest contextify though even contextify patched nt released yet case seems best wait", "d": "5/2015"}, {"body": "actually think misunderstood patch issue", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "unaware anything similar think use separate versions different platforms switch programatically without much problem using version shims optional dependencies shim module see example semiblessed npm issue optional dependencies handle installation failures wrong platforms", "d": "5/2015"}, {"body": "denissokolov solution would make installation fail iojs causing confusion amongst users especially way npm currently informs failure installing optional dependency far ideal using special field hook would check proper version already installed would install", "d": "5/2015"}, {"body": "dislike way npm informs failing install optional dependencies suggest comment issue npm use case jsdom fits description optional dependencies well besides jsdom development dependency jquery thus users would see warning jquery developers expected rather informed likely run regardless find work lot manual steps fail major benefit would choose avoid hook certainly solution probably work", "d": "5/2015"}, {"body": "dislike way npm informs failing install optional dependencies one issue misleading message another trying install dependency compile amp fail know beforehand indeed fail seems wasteful amp slow especially happen every single even invoke twice row", "d": "5/2015"}, {"body": "check proper version require packagejson jsdomversions already installed would install pretty much thinking since need jsdom node smoke tests thinking check install tests run otherwise needed like copy prs", "d": "5/2015"}, {"body": "one issue misleading message another trying install dependency compile amp fail know beforehand indeed fail seems wasteful amp slow especially happen every single npm install even invoke twice row meaningful concern although think could addressed setting correct requirements package let npm know right bat incompatibilities pretty much thinking since need jsdom node smoke tests thinking check install tests run otherwise needed like copy prs sounds best achieved simply", "d": "5/2015"}, {"body": "pr", "d": "5/2015"}, {"body": "contextify released amp jsdom works fine iojs imo solution still better though also testing agains current jsdom amp easier people installing iojs compilation step needed", "d": "5/2015"}, {"body": "pr ready review", "d": "5/2015"}, {"body": "p inline element default div block element spec says block element placed inside inline element", "d": "5/2015"}, {"body": "browser jquery divide p tag two element normal behavior pls refer specs p element represents paragraph contain blocklevel elements including p", "d": "5/2015"}, {"body": "yup opening implicitly closes opened see also particular comment", "d": "5/2015"}, {"body": "thank quick reply", "d": "5/2015"}, {"body": "think support least case easy enough fix since follow promises standart events say open discussion", "d": "5/2015"}, {"body": "duplicate see also related changes", "d": "5/2015"}, {"body": "relevant agree discussion also event handlers execution", "d": "5/2015"}, {"body": "read part incidental primary content issue regarding duplicating standalone issue event handlers throwing exceptions remember aliases rather might warranted though", "d": "5/2015"}, {"body": "remember ready aliases jqueryreadypromise done rather ontrigger yeah since wrote easy enough fix since follow promises standart could also represented mentioned fix least one mind would apply think discuss exceptions event handlers", "d": "5/2015"}, {"body": "event deprecated though breaks particularly problem since multiplex events single handler right error one prevents others running would take significant redesign event subsystem avoid sure big problem", "d": "5/2015"}, {"body": "ready event deprecated though correct probably remove", "d": "5/2015"}, {"body": "probably remove yes", "d": "5/2015"}, {"body": "guess better things open", "d": "5/2015"}, {"body": "yes mention events incidental used comparison future clicks still call event chain even one callee throws exception chain break point time documentready gives stops forever ready event deprecated though breaks particularly problem event deprecated documentation nt seem suggest anything sort says one form also deprecated jquery offers using recommended", "d": "5/2015"}, {"body": "jdahobbs others nt use ready event could defined custom jquery event fired document ready event add ready handler using one methods custom jquery event involved custom jquery event deprecated", "d": "5/2015"}, {"body": "custom pseudo selectors nonportable much slower longer recognized valid native browser engines best practice use valid selectors filter resulting collection manually also make step explicit eg", "d": "5/2015"}, {"body": "thanks opening issue able produce test case involve svg jquery first foremost html dom library guarantee support svg side note proper way create svg elements use svg namespace raw js example also invalid", "d": "5/2015"}, {"body": "javascript executed element attached dom code like execute code firefox chrome browsers", "d": "5/2015"}, {"body": "also repros img tags though svg dom element like element supports onload potential injection using inmemory element common mechanism people sanitize html blobs safe text use inmemory element set html grab innertext means svg notsvg nt issue methods xss protected input string fairly certain repro tag supports onload see html tags support onload minimal repro second repro using elementappend interestingly one also repros chrome javascript equivalent using img tag repro", "d": "5/2015"}, {"body": "potential injection using inmemory element common mechanism people sanitize html blobs safe text use inmemory element set html grab innertext means svg notsvg nt issue methods xss protected input string sounds like terrible idea jsfiddle nt need jquery exploit ps last repro example broken even fix method", "d": "5/2015"}, {"body": "pretty much expected discrepancy whether onload handler executed different ways chrome firefox deal svg elements created wrong namespace undefined behavior comes inline events html leave user guard plausible expect jquery guard every possible xss attack documented security considerations", "d": "5/2015"}, {"body": "jquery developers need aware execute javascript several different ways design code things like uses untrusted input shooting foot", "d": "5/2015"}, {"body": "thank opening issue may well bug would helpful could create test case similar", "d": "5/2015"}, {"body": "way define unambiguous semantics suggestion change would break extant code relying documented behavior", "d": "5/2015"}, {"body": "current extend behavior feel right clearly extend extend arrays replace totally value extending", "d": "5/2015"}, {"body": "yes treat array object index property last property name win look like js extend null b result b", "d": "5/2015"}, {"body": "also lodash assign objectassign behavior definitely right", "d": "5/2015"}, {"body": "yep designed used cross section well known implementations", "d": "5/2015"}, {"body": "yep designed nt jumped", "d": "5/2015"}, {"body": "thought posted question mobile morning guess nt go mention maybe missed use case definitely broken intentional fine guess needs made really clear docs undoubtedly code expects able serialize deserialize data without jquery screwing", "d": "5/2015"}, {"body": "right intentionally broken case covering migrate plugin docs", "d": "5/2015"}, {"body": "said still works", "d": "5/2015"}, {"body": "require individual modules app need ignore completely webpack support amd nt magic ignore modules outside dependency tree nt work", "d": "5/2015"}, {"body": "indeed webpack supports amd commonjs umd format awesome godo know thanks reply", "d": "5/2015"}, {"body": "problem method lot logic argument options nt know could keep original options case really nt want make responsible options manipulation complete function could probably moved defaultprefilter since knows little queue wish knew less still think needs step aliases options", "d": "5/2015"}, {"body": "thinking would still bundle speedeasingcallback object object would free default values initial assignment current rest logic could applied converting duration number zero animations instant defaulting fx queue add final step dequeueing understand wanting keep external though especially one moves list adding argument options preprocessing used js tail jqueryspeed function queuewrap options var opt jqueryextend true options complete optcomplete head jqueryspeed var options speed amp amp typeof speed object jqueryextend speed complete callback callback amp amp easing jqueryisfunction speed amp amp speed duration speed easing callback amp amp easing easing amp amp jqueryisfunction easing amp amp easing animation initialization var anim animation jqueryextend prop options queuewrap might even opportunity function take", "d": "5/2015"}, {"body": "like idea almost feel like passing makes sense perhaps let exist used", "d": "5/2015"}, {"body": "put inside seperate file methode public scope maybe rename way", "d": "5/2015"}, {"body": "think tried versions back something somewhere used nt remember remember thinking horrible function smile", "d": "5/2015"}, {"body": "anything get rid", "d": "5/2015"}, {"body": "yeah probleme reuse code several files need set methode public right", "d": "5/2015"}, {"body": "use one place think something else externally used jquery ui maybe nt need method proposing", "d": "5/2015"}, {"body": "nt take long find people using", "d": "5/2015"}, {"body": "jquery ui", "d": "5/2015"}, {"body": "gnarf one good example remove works fine exactly like reading jqueryui code send", "d": "5/2015"}, {"body": "jquery ui ugh bright side basically reproduces nonqueue aspects looks like ui would need one change still think work like idea almost feel like passing makes sense perhaps let exist used possibly feels like conflation separate concerns suppose worse passing preprocessor document thereby reserve property decide nest rather clone eg would input would input", "d": "5/2015"}, {"body": "around developer convenience used anything wrote think would fine reuse passed us passed", "d": "5/2015"}, {"body": "yes agree wanted make decision explicit", "d": "5/2015"}, {"body": "last time add easingdefault would reason user read instead attribute nt find example github", "d": "5/2015"}, {"body": "exact reference user input might valuable two reasons passing data outwards animation callbacks retrieving configuration exactly specified application defaultsspeed translationsetc thing ajax calls", "d": "5/2015"}, {"body": "first two arguments consistent may thinking vs known issue", "d": "5/2015"}, {"body": "sorry confusion meant jquery selector map fn jquerymap array fn per jquery documentation", "d": "5/2015"}, {"body": "see updated description accordingly quite unfortunate still nt think anything late juncture", "d": "5/2015"}, {"body": "expected better known", "d": "5/2015"}, {"body": "thank opening issue please provide reduced test case using jsbincom help us assess issue mocking ajax responses useful resource", "d": "5/2015"}, {"body": "closing due inactivity information issue reopened", "d": "5/2015"}, {"body": "bloodyowl amen yes library jquery responsibility towards community pretending nt straight blind ignorance warning yes way go helps lot react given advantage knowing environment dev prod based nodejs env variable wo nt able let honest builds jquery source offer different builds download explicit suggest one env variable rule similar future cases", "d": "5/2015"}, {"body": "think direction good nt seem like anything done within jquery core action items directed browser development tools accurate jdalton", "d": "5/2015"}, {"body": "correct opened easier cross browser vendor collaboration get input jquery core warning implemented browsers would want input direct users newer version jquery perhaps", "d": "5/2015"}, {"body": "way mention case sweeping changes prepared", "d": "5/2015"}, {"body": "way mention case showhide sweeping changes prepared yap referenced opening comment one things mentioned coordinating warning release able point devs solutionworkaround issue", "d": "5/2015"}, {"body": "thanks heads miketaylr pinged firefox devtoolers thread looking warnings provided faster optimized alternatives like proto case op", "d": "5/2015"}, {"body": "correct opened easier cross browser vendor collaboration get input jquery core well mine personally resent statement slow simple nt dom api methods consider great amount edgecases make enduser happy cut thus drastically break lot usecases necessary sacrifice make faster users though oh users face great issues updating new jquery since appssites break unexpected places yeah wonder blame punch line nt dom api would right api jquery methods could fast could thorough give couple examples thanks bzbarsky firefox introduced given us avoid crazy slow logic still used one standardize method one beside ff implemented honestly nt work right since still hacks make work insertadjacenthtml great method right simplifies speed lot usecases perfectly aligned jquery manipulation api right tricky lots edgecases considered ca nt used element traversal api ways mimics jquery traversal api got ta right api use inside jquery nope specification nt thorough nt consider nonelement nodes api obsolete awesome method make things faster wait four years reintroducing without conjunction page visibility api method nt bring needed effect one edgecase everything breaks waited received kinds storms criticism slow jquery animation api could add lot examples like like gon na surprised tryout fate examples soon great possibility claimed slow already imagine nice tweets flowing around blaming us yeah could say jquery core members could active discussions could advocate position us side thing us real jobs whereas spec threads time consuming unrewarding quite possibly without expected endresult nt think warns necessary since least currently timmywil pull mentioned already ticket description btw really weird things using various apis achieve desirable effect problems imagining codepath would need take predict slowness think right dom api could introduced would relieve us circumstance warning people anything", "d": "5/2015"}, {"body": "one things mentioned coordinating warning release able point devs solutionworkaround issue right saying barring revert reasons unknown time right release point edit understanding paul irish analysis subsequently revealed bottleneck example retrieving computed display value webkit took time proposed changes drop use instead effectively circumventing performance issue issue concerned css cascade overriding stylesheet settings required lot magic get working named likely performance culprit originally drop become basic methods longer potential performance penalties least ones encountered far mean breaking changes rather break code continue allow phantom performance issues sneak user code", "d": "5/2015"}, {"body": "dmethvin could take look interesting using mouseevent works differently", "d": "5/2015"}, {"body": "looks like difference behavior firefox straightforward repro jquery analogous calling native dom method seem work detached elements firefox custom event like myclick would delivered whether need fix particular bug depends whether firefox radar maybe miketaylr knows patch fixing issues happen trigger native events nt deliver resisted quite bit code edge cases", "d": "5/2015"}, {"body": "makes sense given analysis inclined close wontfix opened issue firefox", "d": "5/2015"}, {"body": "looks like closed nt jquery supposed fix browser incompatibilities otherwise use standard click method jquery implementation might workarounds make work firefox ie even using mouseevent click issue firefox specific behavior different three major browsers ie chrome firefox ie event fired issue fixed clicking detached checkboxes would use standard buggy apis jquery", "d": "5/2015"}, {"body": "testing issue firefoxspecific ie chrome behavior workaround set checked use firefox quick iterations fix wo nt need add fix jquery fri may anton ivanov notifications githubcom wrote looks like closed nt jquery supposed fix browser incompatibilities otherwise use standard click method might workarounds make work firefox ie even using mouseevent click issue also firefox specific behavior different three major browsers ie chrome firefox issue fixed clicking detached checkboxes would use standard buggy apis jquery reply email directly view github", "d": "5/2015"}, {"body": "thanks filing timmywil set bug blocker", "d": "5/2015"}, {"body": "actually looks like proposed solution breaks case jquery considers hidden", "d": "5/2015"}, {"body": "ah slight behavior change still favor approach", "d": "5/2015"}, {"body": "case dropping", "d": "5/2015"}, {"body": "would make decision entirely performance untested supposition offset properties faster therefore worth including even though redundant", "d": "5/2015"}, {"body": "testing", "d": "5/2015"}, {"body": "ok looks like performance necessitates keeping difference hidden elements slower chrome visible elements use", "d": "5/2015"}, {"body": "pr", "d": "5/2015"}, {"body": "sorry late proposed accepted pr fix issue please refer original issue description follow comment", "d": "5/2015"}, {"body": "shimonenator wanted keep logic suggestion would right however change intentional", "d": "5/2015"}, {"body": "landed", "d": "5/2015"}, {"body": "unwilling call issue fixed jquery still wrong thing input", "d": "5/2015"}, {"body": "good point", "d": "5/2015"}, {"body": "tada sparkles heart fireworks", "d": "5/2015"}, {"body": "closing due inactivity", "d": "5/2015"}, {"body": "per meeting like see code take would anyone like take shot", "d": "5/2015"}, {"body": "timmywil would like take crack", "d": "5/2015"}, {"body": "great thanks jdphenix looking forward seeing pr", "d": "5/2015"}, {"body": "okay timmywil nt realize ref hash spammed every time otherwise would pushing changes fork apologies noobiness git aside first run implementing initial test case used tests wrote", "d": "5/2015"}, {"body": "seems script executing illegal return statement causing error regardless script retrieved executed", "d": "5/2015"}, {"body": "hi came across bug writing ios app using uiwebview jquery minified hosted available fixed version jquery", "d": "5/2015"}, {"body": "nokuno bug fixed jquery maybe experience different issue", "d": "5/2015"}, {"body": "mzgol right issue one thank", "d": "5/2015"}, {"body": "think agree need address change casebycase basis assess impact community rather making sweeping changes across board asking everyone make lots adjustments code going incrementally stages niche use cases done first common cases introduced every major release already changes pipeline changes let specific issues opened one closing issue reached consensus broad", "d": "5/2015"}, {"body": "closed without making specific tickets going independently address unsolicited pull requests removing guards even answer affirmative think include assume function input matches documented signature repository future reference maybe contributingmd", "d": "5/2015"}, {"body": "right like move away leaving issues open could closed single pull request opening issue discussion fine discussion resolves closed track broader guidelines overarching goals roadmap", "d": "5/2015"}, {"body": "thank opening issue however would quite bit code support option probably would get used much besides would much rather trust separate library tests stays date encoding rather include support directly jquery library like could used conjunction headers option team member disagrees reopen", "d": "5/2015"}, {"body": "timmywil reason options still documented", "d": "5/2015"}, {"body": "sure mean options used open xhr", "d": "5/2015"}, {"body": "timmywil kind authentication set using options xml open reference user optional user name use authentication purposes default empty string password optional password use authentication purposes default empty string", "d": "5/2015"}, {"body": "maybe misunderstanding issue issue username password options currently useless day age useful conjuction header setting header necessary sometimes options adequate certain cases", "d": "5/2015"}, {"body": "cc jaubourg", "d": "5/2015"}, {"body": "timmywil options seem absolutely nothing situation looking networking tab dev tools extra headers added etc means unauthorized way basic authentication manually setting header", "d": "5/2015"}, {"body": "madlittlemods real question xhr spec let see julian say subject reassess", "d": "5/2015"}, {"body": "wait jaubourg urls xhr passing username passwords work unless use crossorigin request ignored issue already come could read nt use crossorigin request please create testcase jsfiddle similar site", "d": "5/2015"}, {"body": "ah thanks issue markelog helps tremendously", "d": "5/2015"}, {"body": "markelog perfectly right sorry late party lot things take care work since take vacation starting end week usual situation remedied prefilter check request option set option appropriately could get bit hairy wan na account situations", "d": "5/2015"}, {"body": "check request crossdomain username password option set headers option appropriately could get bit hairy wan na account situations right exactly wanted avoid due encoding issue thank clarification jaubourg markelog", "d": "5/2015"}, {"body": "checkmark already blog post", "d": "5/2015"}, {"body": "given jquery promises wrapped promise libraries jquery deferreds consume standard thenables nt much need also concerned opening possibility replacing internal use promises promise implementation would add list things need support cost vs benefit ratio nt seem high enough", "d": "5/2015"}, {"body": "hi ca nt use exists third handler current must invoked vote behaviour", "d": "5/2015"}, {"body": "hello behavior", "d": "5/2015"}, {"body": "add onabort handler master", "d": "5/2015"}, {"body": "yes looks like need add one compat master behavior", "d": "5/2015"}, {"body": "nt sound like animus make change feel free reopen necessary", "d": "5/2015"}, {"body": "thank everyone gave input nt look like realistically going happen still happy review code matter issue reopened necessary", "d": "5/2015"}, {"body": "pr", "d": "5/2015"}, {"body": "", "d": "5/2015"}, {"body": "yes thanks arthurvr", "d": "5/2015"}, {"body": "chance get fix stable branches", "d": "5/2015"}, {"body": "problem using instead", "d": "5/2015"}, {"body": "really make sure always use jquery attaching events", "d": "5/2015"}, {"body": "mzgol agreed", "d": "5/2015"}, {"body": "since data attached nodes close think angular case would longer issue", "d": "5/2015"}, {"body": "yep close", "d": "5/2015"}, {"body": "thank opening issue sitting would possible create test case lot change chrome months", "d": "5/2015"}, {"body": "closing due inactivity reopened test case", "d": "5/2015"}, {"body": "fixed latest sizzle update", "d": "5/2015"}, {"body": "fixed compat", "d": "5/2015"}, {"body": "data changes landed needs done", "d": "5/2015"}, {"body": "attach couple handlers elements amp without removing elements still leak way less serious removing elements makes data go away say part issue still applicable", "d": "5/2015"}, {"body": "looks like take care nomoreevents case", "d": "5/2015"}, {"body": "dmethvin indeed seems everything done would good test behavior though would nt", "d": "5/2015"}, {"body": "dmethvin mzgol quite compat also clears expando", "d": "5/2015"}, {"body": "pr submitted", "d": "5/2015"}, {"body": "updated change originally using event speed test deleted try get jsperf test going probably something simulates mouse events different handlers access different properties dmethvin specific type test like try", "d": "5/2015"}, {"body": "yeah realistic test going messy guess might possible make layout change via modifying class fire mouseevent mousemove goes plumbing", "d": "5/2015"}, {"body": "consensus change behavior jquery", "d": "5/2015"}, {"body": "yes list", "d": "5/2015"}, {"body": "hi guys state issue fixed jquery", "d": "5/2015"}, {"body": "aurelioderosa well milestone least", "d": "5/2015"}, {"body": "arthurvr saw label well nt reply question", "d": "5/2015"}, {"body": "aurelioderosa planned assigned need get try soon like land tag first beta", "d": "5/2015"}, {"body": "love see would make using jquery babel palatable", "d": "5/2015"}, {"body": "know actually", "d": "5/2015"}, {"body": "cool natively even simple", "d": "5/2015"}, {"body": "biggest problem size guess following increases gzipped size bytes forms seem larger", "d": "5/2015"}, {"body": "since definite decision yet let reopen", "d": "5/2015"}, {"body": "concept already described jakearchibald dec nodelist", "d": "5/2015"}, {"body": "closed via laded", "d": "5/2015"}]