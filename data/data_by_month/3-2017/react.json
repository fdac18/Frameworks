[{"title": "guidance tutorial", "body": "apologies first appears already issue going check pr detailing hi followed tutorial fine storing history confused telling change function inside component needs changing change rest completed section somewhere honest struggled documentation hit losing interest help greatly appreciated", "num": "9308", "d": "3/2017"}, {"title": "thisprops undefined", "body": "sidebardemo class sidebardemo extends reactcomponent constructor props context super props context render return app static createdefaultgraph thispropslayout hierarchial something render consolelog thispropslayout return use consolelog thispropslayout app able get value layout calling thispropslayout createdefaultgraph method gives typeerror read property layout undefined", "num": "9307", "d": "3/2017"}, {"title": "thisprops undefined", "body": "sidebardemo class sidebardemo extends reactcomponent render return app static createdefaultgraph thispropslayout hierarchial something render consolelog thispropslayout return use consolelog thispropslayout app able get value layout calling thispropslayout createdefaultgraph method gives typeerror read property layout undefined", "num": "9305", "d": "3/2017"}, {"title": "maybe could use accurate description componentwillmount", "body": "current doc componentwillmount says called render therefore setting state method trigger rerendering thinks would better say called render therefore setting state directly method trigger rerendering batch setting state indirectlyasynchronous trigger rerendering", "num": "9304", "d": "3/2017"}, {"title": "define specific browser support guidelines", "body": "stands real solid guideline browser support support many outdated browser versions unreasonable support worry would useful specific guidelines browsers target safari ios matter firefox get idea welldocumented range browser version know work would make lot easier run dom fixtures browserstack know safe maybe internal core team work internally analytics see browsers facebook needs support work forward cc gaearon nhunzaker", "num": "9301", "d": "3/2017"}, {"title": "bug updating style ignores", "body": "current behavior react component rendering styles user via interface changes background url background size style longer applied fiddle demonstrates issue note clicking image container causes grid become twice large size ignored also causes large background start tiling ignored look generated dom see value longer composite backgroundbackgroundsize declarations first render reflects background value expected behavior would expect react reactdom combine two style rules consistent way following two render calls versions react browser os affected issue work previous versions react happening react fiddle tested safari chrome verified nt browser issue", "num": "9295", "d": "3/2017"}, {"title": "ca nt use async function", "body": "shows uncaught promise referenceerror defined avoid using async", "num": "9286", "d": "3/2017"}, {"title": "reactcomponenttreehook undefined", "body": "want request feature report bug current behavior throws error codes shown follows bundlejs used webpack entry versions react browser os affected issue work previous versions react chrome macos", "num": "9282", "d": "3/2017"}, {"title": "confusingly structured installation section", "body": "hey guys want bring issue docs install section happened one colleagues guess others may get confused example want use createreactapp approach installing react means need follow section right colleague followed thought follow things like words installation docs nt say follow first link gave example following second link necessary createreactapp includes babel example nt think doc mention approach either use section etc", "num": "9275", "d": "3/2017"}, {"title": "stop masking context", "body": "feature return contextprops available via wildcard prop would helpful want comparisons props state context possible solutions", "num": "9266", "d": "3/2017"}, {"title": "bring classnames library core react", "body": "want request feature report bug new feature current behavior expected behavior renders classname string wrapped object classnames versions react browser os affected issue work previous versions react nt know anyone would using current behaviour benefit trivial thing add yet provides great value every react developer know understand react tries light possible ca nt help wonderis worth extra trouble deferring trivial thing react ecosystem worth extra http request worth extra npm dependency whole function like lines long consensus react community best way transform objects classnames yes npm react downloaded million times last month classnames million times seems like comfortable majority uses classnames library already maybe let add core pretty please", "num": "9263", "d": "3/2017"}, {"title": "document happens keys used", "body": "would nice doc explicitly stated happens one nt use keys performance issue", "num": "9260", "d": "3/2017"}, {"title": "add helper", "body": "created component roughly like serving wrap behavior svg element add sophisticated handling string imagine something similar generating simple tags key point taken prop assigned locally makes assumption string split however reactchildren docs discuss dealing thispropschildren opaque data structure emphasis mine technically code assumption could break future would propose helper would guarantee stable behavior code specifically children represents single text node return string value otherwise throw assertion error would behave much like reactchildrenonlychild logic invariant check expecting rather see also", "num": "9255", "d": "3/2017"}, {"title": "unstablehandleerror seems work initial render", "body": "component error boundary seems invoked error occurs initial render subsequent renders example following code visible component rendered initially recovers renders component javascript const triggererror gt return b class innercontainer extends reactcomponent constructor props super props unstablehandleerror e consolelog unstablehandleerror consolelog continuing render thisstateerror return error reactdomrender reactcreateelement innercontainer documentgetelementbyid root however triggererror component rendered delay unstablehandleerror never gets invoked component never recovers javascript const triggererror gt return b class innercontainer extends reactcomponent constructor props super props componentwillmount settimeout gt thissetstate triggererror true unstablehandleerror e consolelog unstablehandleerror consolelog continuing render thisstateerror return error reactdomrender reactcreateelement innercontainer documentgetelementbyid root", "num": "9253", "d": "3/2017"}, {"title": "flat badge facebook", "body": "repository making badges acceptable documenting hope flat badge used awesome project", "num": "9250", "d": "3/2017"}, {"title": "uncaught invariant violation element type invalid expected string builtin components classfunction composite components got undefined likely forgot export component file defined", "body": "want request feature report bug think probably bug uncaught invariant violation element type invalid expected string builtin components classfunction composite components got undefined likely forgot export component file defined ever exported component properly formsjs mainjs", "num": "9249", "d": "3/2017"}, {"title": "add jest tic tac toe tutorial", "body": "want request feature report bug would interest adding jest section tic tac toe tutorial doc currently working tutorial based eric code figured ask beyond scope react docs could also added another bullet point wrapping section", "num": "9248", "d": "3/2017"}, {"title": "rfc throw commonjs entry points nodeenv development test production", "body": "whether best way fact rely checks tell production environment catches people surprise default build react development one often ship slow large development bundles production gives advantage libraries ship without development mode could however think would net loss ecosystem way differentiate debug release builds possible every native platform find way preserve distinction web ux vs dx compromise false unnecessary choice case since react commonjs entry points rely distinction propose nt allow empty custom values nether throw hard error might best solution long term least consistent treating flag could add reactspecific aliases reactenv finer grained configuration people use nodeenv different purposes still opinion default need pick environment working error would link page provides exhaustive list configure different environments well possible workarounds use right umd build umd builds rename distinction useful people inexperienced build systems start anyway think hurt beginners know probably going controversial believe explicit opting either mode right decision undoubtedly annoy people think update perhaps better go reactenv instead everyone", "num": "9245", "d": "3/2017"}, {"title": "refs reacttestrenderer typeerror read property ownerdocument null", "body": "want request feature report bug bug snapshots current behavior seems problem snapshots use libraries like antd snapshot launch mock library snapshot almost empty current behavior bug please provide steps reproduce either replit demo minimal repository github download example github account find step step full proccess besides opened issue yesmeck said problem jestreacttestrenderer opened issue time thymikee confirmed yesmeck said problem reacttestrenderer expected behavior expect snapshot full html code json format sense snapshots fail library use works use please provide exact configuration mention jest node yarnnpm version operating system use dependencies os ubuntu", "num": "9244", "d": "3/2017"}, {"title": "unable render images android device", "body": "using react cordova build hybrid mobile application images rendering inspect browser actual device tried following approach render image import redcar redcarpng var redcar require redcarpng copied image androidassets folder tried indexhtml way rendering image son device giving background image css file need read image paths json ca nt use approach backgroundimage url redcarpng also tried changing webpack output publicpath assets making use urlloader fileloader could nt get right images supposed render device react version", "num": "9243", "d": "3/2017"}, {"title": "event handler react component invoked react component rendered inside web component", "body": "want request feature report bug bug current behavior react component event handler example onclick rendered inside web component component clicked event receive react component specified callback invoked current behavior bug please provide steps reproduce possible minimal demo problem via similar template reproduce web component example contained react repository replace element button add example onclick event handler find modified version web component example based codebase expected behavior event handler called testing modified return target property instead original addition works event handler called find modified version also gist versions react browser os affected issue work previous versions react tested chrome firefox safari nt know works previous versions react nt think", "num": "9242", "d": "3/2017"}, {"title": "reactjs rendering", "body": "", "num": "9241", "d": "3/2017"}, {"title": "warn dev shouldcomponentupdate defined purecomponent", "body": "currently define nothing bad happens acts like probably warn dev since defaults point", "num": "9239", "d": "3/2017"}, {"title": "odd behavior installed react bower", "body": "reporting seems bug installed react project using bower inside sailsjs sits top nodejs wanted bring attention effecting nt tried use react anyway yet using current version react safari things using conjunction mostly fyi", "num": "9237", "d": "3/2017"}, {"title": "feature request improved suggestion invalid element type", "body": "feature request current behavior called using component name declared later file resulting error suggests component nt exported file defined element type invalid expected string builtin components classfunction composite components got undefined likely forgot export component file defined example code suggestion inappropriate javascript var mountnode documentgetelementbyid mountnode reactdomrender mountnode oops class hellomessage extends reactcomponent render return hello thispropsname expected behavior suggestion help instance would helpful error message also suggested reactdomrender may called early example element type invalid expected string builtin components classfunction composite components got undefined likely forgot export component file defined tried render component declared current file experienced developer new react finished tictactoe tutorial attempting apply learned one web sites made mistake since mistake plausible made someone getting started especially taking tutorial code starting point new would useful suggest alternate possible fix might help beginners ok send pr asap thank consideration latest version react affect environments thank", "num": "9231", "d": "3/2017"}, {"title": "boolean attributes web components", "body": "setting boolean attributes web components get rendered attributevalue pairs instead causes problems amp components eg attribute gets rendered results non valid amp content developers crying blood tears keyboards attribute resizable tag ampiframe set invalid value true see reason current behaviour changing break something else", "num": "9230", "d": "3/2017"}, {"title": "reactdom fails load latest nodejs missing dependencies clean install travisci", "body": "want request feature report bug bug current behavior reactdom successfully required node current behavior bug please provide steps reproduce possible minimal demo problem via similar template reproduction travisci build expected behavior reactdom successfully required node versions react browser os affected issue work previous versions react nt know install latest version react latest version nodejs travisci", "num": "9229", "d": "3/2017"}, {"title": "react app triggers ie", "body": "hi react based product developed works fine browsers comes ie times error occurs responsive page page already loaded whole page buttons text field etc hung error occurs frequently connections http direct connections connected local host machine using ip error frequency low error output console time however since browser dev tool also hangs way dig deep problem possibility kind condition occur due way react implemented workaround overcome", "num": "9228", "d": "3/2017"}, {"title": "obscure errors react webpack generated static site", "body": "spent lot time battling two errors today project setup kinda complicated trying put together minimal working example said trying anything weird generated webpack bundle requires react reactdom staticsitegeneratorwebpackplugin meantime wanted put check whether anyone knows possible reasons obscure errors import reactdom importing react import react reactdom", "num": "9227", "d": "3/2017"}, {"title": "create new jsfiddle issue template", "body": "right current jsfiddle pain use nt syntax highlighting defaults using almost every case people going reproducing issues", "num": "9224", "d": "3/2017"}, {"title": "compiler optimization umbrella", "body": "spinoff wanted create umbrella task start working compiler level optimizations tag open fairly primitive optimizations want able go nt think start project immediately soon fiber stuff place compiler infra baseline crossmodule full javascript aot compiler compiler infra structure fits well existing tooling fb webpack rollup based ecosysem etc support parallelism incremental builds solve things like npm ecosystem compile publishing probably optimizations enable multiple levels host instances dom elements managed single fiber think probably key requirement many optimizations sure fiber children single placement point parent get inserted could multiple insertion points manually insertion children later would work optimizing pure hostdom elements string components reasoned core compiler level inlining pure functional components result reasoned flat component basic constant folding static configuration optimizing across component boundaries without inlining optimizing stateful functional components runtime optimizations deadcode elimination library code nt needed particular application certain events controlled components complex attributes stretch goals computing delta updates code changes lets service workers update based come", "num": "9223", "d": "3/2017"}, {"title": "feature request new lifecycle behavior allow components delay unmounting", "body": "sort animation right component unmounts currently difficult able delay unmounting adding callback componentwillunmount like react transition group componentwillleave adding new lifecycle method functionality componentisreadytounmount would helpful use case come list item button clicking button dispatches redux action causes async work done instead right component success item removed list removed like give feedback action successful showing checkmark button second ideally logic would live button component making really easy reuse anywhere button order work button component needs able delay unmounting ideally something like js buttonjs componentisreadytounmount callback thispropsissuccessful settimeout gt callback else callback currently done preventing parents button unmounted also current implementation handles redux delaying state updates caused async work logic purely display purposes though nt really belong also makes hard replicate behavior across different types lists also looked react transition group also works transition group element unmounted would make hard keep around object like button deeply nested inside element removed recognize misuse feature would lead confusinghard debug behavior poor performance think risk worth considering way kind behavior currently needs implemented think risk could also mitigated useful development mode warnings one example could warning logged component holds unmounting x seconds x could globally configurable somehow sensible default", "num": "9222", "d": "3/2017"}, {"title": "document react treats different attributes", "body": "quite lot tests html boolean properties tags according tests html properties get rendered empty strings set eg render render look tests similar things render means take property value know result issue react currently clearlydefined documented way handle props could docs updated specify type prop result eg number gets parsed string using numbertostring object gets stringified using key val booleans toggle property short bugsundocumented featurescontradictions tests expect happen plus expectations gets parsed prop prop true select properties expected either per checkedchecked html standard gets parsed prop expected might get parsed either prop prop prop even expected gt prop prop foo expected gt prop false expected gt prop handtested automatic test available expected gt prop prop foo bar baz handtested automatic test available expected per style object transform hacky showcase features bugs bugs work going done props value parsing following might nice addition gt render keys disregard keys like classnames", "num": "9220", "d": "3/2017"}, {"title": "feature granular forceupdate", "body": "called long list least whole list must traversed example following list push reconciler go elements add end list suggestion add support following forceupdate signature passed integer start index number items traverse similar works function encounters number argument changes start index start reconciling components children argument set changes end index end traversal components children mentioned example wanted optimize reconciliation process append updates could following target update middle list items allow precise updates know ahead time data change possible counterpart js setstate functionobject b functionnumber c number usage setstate arr thisstatearrlength", "num": "9218", "d": "3/2017"}, {"title": "ref replace reactdomfinddomnode", "body": "notice react deprecated encourage developers use insteadi agree cases works finebut think something like class extends reactcomponent render return content class b extends reactcomponent render return cars example want know ca nt add ref instance containerb dom node use course add use add method called pass imo make app complexwhat thoughts", "num": "9217", "d": "3/2017"}, {"title": "documentation addons incorrect prev next links", "body": "articles addons incorrect prev next links example first prev link actually fourth prev next links think easiest way remove prev next links addons articles allow addupdateremove articles without need update prevnext links think", "num": "9216", "d": "3/2017"}, {"title": "browser back button working reactrouter react", "body": "want request feature report bug bug current behavior installing react next fiber clicking new page inside domain app clicking back button nt move page back works correctly react current behavior bug please provide steps reproduce possible minimal demo problem via similar template see expected behavior clicking back button move back previous location versions react browser os affected issue work previous versions react react chrome osx sierra works correctly react reactrouter", "num": "9214", "d": "3/2017"}, {"title": "feature request proptypeselement", "body": "currently checking required prop within passed children need implemented props validator function less ideal would suggest following another idea vein would extend current proptypesinstanceof", "num": "9213", "d": "3/2017"}, {"title": "inconsistent behavior keyed select options value", "body": "current behavior component composed multiple select elements tied different variables state settimeout changes one select value causes select values changed steps reproduce webpack bin instance works expected chrome safari firefox issue firefox value select elements ones set inside reverts back first value instead previously set one react version os mac browser affected change firefox please feel free close issue bug known bug firefox something wrong tried searching issues related firefox select elements could nt find looked similar", "num": "9212", "d": "3/2017"}, {"title": "bad debugging spread errors", "body": "bug spread operator missused compiler goes crazy nt give developper hint something went wrong inside react class trying render array jsx elements follow class modal extends component render let actions let label action thispropsactions actionspush actions already know written got incredible load errors filled terminal babel compiler first error message recognize object type jsxspreadchild objectgetfieldnames would expect error message telling missused spread operator using react npm babelruntime meteor", "num": "9211", "d": "3/2017"}, {"title": "chrome optimized optimized many times updatedomproperties unmountchildren", "body": "react chrome profiling chrome render performance components noticed couple deoptimizations react message chrome reports optimized optimized many times apparently happens optimizes function running found reason deopt happened setting currently set information clicking profile looks like time perhaps spent line sure clue deopt might case might worth spending time digging sure still relevant react", "num": "9208", "d": "3/2017"}, {"title": "plan addons react", "body": "outline think addons react tldr done poor job supporting pose significant maintenance burden due repo build process set going release final versions maintaining plan anything reactaddonsperf internal dependencies break plan anything plan releasing package right migration path planned fiber works differently instead would use browser timeline integration polyfill environment may later reintroduce something like renderers however like took us figure work take us figure better alternative would compatible fiber plan fix forget reactaddonscreatefragment internal dependencies break plan copy internal dependencies package make sure works standalone ensure umd build standalone package documented package readme make sure accessing via via package warns suggests using umd build instead release without peer dependency restriction forget forever plan releasing package nevertheless version keep working indefinitely reactaddonslinkedstatemixin internal dependencies break plan copy internal dependencies package make sure works standalone ensure umd build standalone package documented package readme make sure accessing via via package warns suggests using umd build instead release without peer dependency restriction forget forever plan releasing package nevertheless version keep working indefinitely reactaddonspurerendermixin internal dependencies break plan copy internal dependencies package make sure works standalone ensure umd build standalone package documented package readme make sure accessing via via package warns suggests using umd build instead release without peer dependency restriction forget forever plan releasing package nevertheless version keep working indefinitely reactaddonsshallowcompare internal dependencies break plan copy internal dependencies package make sure works standalone ensure umd build standalone package documented package readme make sure accessing via via package warns suggests using umd build instead release without peer dependency restriction forget forever plan releasing package nevertheless version keep working indefinitely reactaddonsupdate internal dependencies break plan copy internal dependencies package make sure works standalone ensure umd build standalone package documented package readme make sure accessing via via package warns suggests using umd build instead release without peer dependency restriction forget forever readme mention maintained alternative plan releasing package nevertheless version keep working indefinitely reactlinkedinput internal dependencies break plan copy internal dependencies package make sure works standalone release without peer dependency restriction forget forever extra step exposed plan releasing package nevertheless version keep working indefinitely plan deprecate forget reactaddonscsstransitiongroup internal dependencies break plan deprecate maintain suggest using instead work maintainers ensure umd build instructions readme plan releasing package reactaddonstransitiongroup internal dependencies break plan deprecate maintain suggest using instead work maintainers ensure umd build instructions readme plan releasing package plan undecided reactaddonstestutils internal dependencies break plan one yet technically still going coupled package technically two completely different things thin wrapper around introspection shallow renderer perhaps would make sense completely move except shallow renderer could published", "num": "9207", "d": "3/2017"}, {"title": "react value setter overwrite lib value setter", "body": "bug react value setter overwrite lib value setter save call old setter ie react", "num": "9206", "d": "3/2017"}, {"title": "need ui automation help react ui application", "body": "hi guys developing ui application project using react read css selectors supported earlier ui automation using coded ui c css selectors anyone please guide right approach continuous integration testing ui application thanks tarun babbar varian medical systems pune", "num": "9205", "d": "3/2017"}, {"title": "missing proptypes warning calling proptypes directly spread operator", "body": "want request feature report bug bug current behavior according react throw warning proptypes called directly however nt use spread operator validation function current behavior bug please provide steps reproduce possible minimal demo problem via similar template minimal demo expected behavior components example throw warning versions react browser os affected issue work previous versions react see issue version chrome nt think browser related nt know worked past", "num": "9204", "d": "3/2017"}, {"title": "use react component lifecycle methods", "body": "equal getinitialstate return liked false", "num": "9203", "d": "3/2017"}, {"title": "old props state render function", "body": "want request feature report bug feature current behavior render function returns would result current state properties expected behavior old properties state previous render parameter example would useful trigger animations reactmotion currently something similar checkboxes checked state changes ripple animation started", "num": "9198", "d": "3/2017"}, {"title": "fiber infinite loop caused rendering error", "body": "want request feature report bug bug current behavior component returns something valid react element throws infinitely renderblocking freezes window current behavior bug please provide steps reproduce possible minimal demo problem via similar template happened creating providertype component rendered children directly specifically eg js class provider extends reactcomponent render return thispropschildren throw elsewhere works correctly freaks codepen fiddle etc somewhere use demonstrate expected behavior throw freeze browser versions react browser os affected issue work previous versions react react yes see ps know alpha version", "num": "9193", "d": "3/2017"}, {"title": "equivalent mountcomponent fiber", "body": "extjsreactor use react internal methods like mountcomponent unmountcomponent receivecomponent well reactmultichild mixin defer rendering ext js interface helpful anyone looking make generic js component libraries work react opposed built specifically react equivalentalternative way control mounting component new fiber architecture helps code references react internal methods", "num": "9192", "d": "3/2017"}, {"title": "n scroll", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9191", "d": "3/2017"}, {"title": "", "body": "want request feature report bug current behavior current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior versions react browser os affected issue work previous versions react", "num": "9190", "d": "3/2017"}, {"title": "expose devmode warnings devtools ui", "body": "react made recent developer experience improvements lifecycle error handling logging errors thrown render recovered using errors thrown lifecycle methods also automatically logged console component stack location make easier identify see team discussed similar improvements warnings using yellow box approach make warnings stand developer mode see prs pushback though idea react modifying dom warning purposes see issue sure play yet meanwhile could improve least use cases making better use devtools example react exposed new api allowed associating warning one components devtools panel eg method called recorded current component stack notified devtools present react could use things like missing nonunique keys party libraries may also benefit eg reactvirtualized could use warn missing incomplete positioning styles cells rough outline features components warnings could highlighted emphasized way eg yellow background devtools make easier spot new toolbar option could added show warnings eg filter tree view show components warnings warning message could shown inline settings panel selected component rough mockup limitations everyone uses devtools would help lot people would address issues like using development mode react production sites thoughts ideas suggestions", "num": "9189", "d": "3/2017"}, {"title": "feature request new proptype check prop valid react component fed createelement", "body": "proptype check whether prop valid react component prop could supplied first argument would nice feature composable component user could supply different components maninthemiddle component creates elements supplied component feeds props example edit clarification work", "num": "9186", "d": "3/2017"}, {"title": "working", "body": "want request feature report bug bug current behavior react nt work documentation says react supports popular browsers including internet explorer shows blank page versions react browser os affected issue work previous versions react react phone nokia lumia ps instagram also nt works phone shows blank page know instagram also uses react", "num": "9183", "d": "3/2017"}, {"title": "finding whether event true synthetic event html element", "body": "want request feature report bug requesting feature far knowledge sorry wrong currently ca nt able find whether event valid synthetic event html dom element example onchange valid event would helpful api check whether given method valid synthetic event html element use case lets say write component child would like pass synthetic event props parent component child component would loop see prop valid synthetic element attach props child element nt attach html element parent component child component render validsyntheticeventscallback include props valid synthetic events help making parent components generic write also logic included parent component current behavior currently need manually assign every event dom versions react browser os affected issue work previous versions react related browser os version issue", "num": "9182", "d": "3/2017"}, {"title": "proptypesoneof relies upon stringification using symbols", "body": "want request feature report bug bug current behavior prints less helpful error message passed symbol target value set current behavior bug please provide steps reproduce possible minimal demo problem via similar expected behavior prints similar helpful error message primitive types get versions react browser os affected issue work previous versions react react macos safari chrome never worked", "num": "9181", "d": "3/2017"}, {"title": "featureissue throw warning defaultprop set isrequired proptype", "body": "want request feature report bug feature current behavior currently declare declare go ahead use component without declaring title prop error thrown like supposed happen using isrequired based documentation states proptypes typechecking happens defaultprops resolved typechecking also apply defaultprops expected behavior think user using least warning change proptype typechecking optional also love try fix could get pointers would much appreciated never contributed react versions react browser os affected issue work previous versions react react version running chrome mac os x el capitan v", "num": "9180", "d": "3/2017"}, {"title": "simulateclick nt call click handler click handler passed via state component", "body": "hi component like import react proptypes react import drawer materialuidrawer import muithemeprovider materialuistylesmuithemeprovider import injecttapeventplugin reacttapeventplugin import list listitem materialuilist import divider materialuidivider import settings materialuisvgiconsactionsettings import helpoutline materialuisvgiconsactionhelpoutline import speakernotes materialuisvgiconsactionspeakernotes import exittoapp materialuisvgiconsactionexittoapp import close materialuisvgiconsnavigationclose import badge materialuibadge import rightmenubutton rightmenubutton require stylecss injecttapeventplugin const badgestyle top right width height backgroundcolor class rightmenu extends reactcomponent constructor props super props thisstate open false directionleft true componentwillreceiveprops props thissetstate width propswidth directionlefttoright propsdirectionlefttoright onconfigclick propsonconfigclick onhelpclick propsonhelpclick onnotificationsclick propsonnotificationsclick onsignoutclick propsonsignoutclick handletoggle thissetstate open thisstateopen handleclose thissetstate open false render const closebuttonstyle thisstatedirectionlefttoright float left float right return onclick thisstateonconfigclick onclick thisstateonhelpclick onclick thisstateonnotificationsclick gt onclick thisstateonsignoutclick rightmenudefaultprops width directionlefttoright false onconfigclick null onhelpclick null onnotificationsclick null onsignoutclick null rightmenuproptypes width proptypesnumber directionlefttoright proptypesbool onconfigclick proptypesfunc onhelpclick proptypesfunc onnotificationsclick proptypesfunc onsignoutclick proptypesfunc export default rightmenu trying implement unit test codes testing import react react import reactdom reactdom import testutils reactaddonstestutils import listitem materialuilist import rightmenu srccomponentsrightmenu describe rightmenu gt let onconfigclickhandler let onhelpclickhadler let onnotificationsclickhadler let onsignoutclickhadler let view let menuitems let configbutton beforeeach gt onconfigclickhandler jestfn onhelpclickhadler jestfn onnotificationsclickhadler jestfn onsignoutclickhadler jestfn view testutilsrenderintodocument call click handler clicked gt menuitems testutilsscryrenderedcomponentswithtype view listitem configbutton reactdomfinddomnode menuitems children however test fails change component way passed handler starts work handler called expected anyone explain works thanks advance", "num": "9175", "d": "3/2017"}, {"title": "validatechildkeys fails nested arrays", "body": "want request feature report bug bug current behavior pass children component nested array check nt throw warningerror missing properties eg asked problem stackoverflow user pointed problem current behavior bug please provide steps reproduce possible minimal demo problem expected behavior react warn missing even nested arrays versions react browser os affected issue work previous versions react latest version affected think browsers affected nt know worked previous react versions", "num": "9174", "d": "3/2017"}, {"title": "happens encounter custom properties supported react", "body": "need use attributes react support properties", "num": "9173", "d": "3/2017"}, {"title": "setstate update mounted component warning", "body": "getting following warning console snippet component causing warning setting state tried making jsfiddle many dependencies error logged increment resize nt always happen", "num": "9171", "d": "3/2017"}, {"title": "componentconstructed life cycle step", "body": "want request feature report bug feature current behavior life cycle component creation constructor componentwillmount render componentdidmount expected behavior new method like constructor componentconstructed componentwillmount render componentdidmount cases high order component needs prepare child instance gets created replacing child constructor trivial using work needs extra logic prevent multiple initialization called updates name suggested method important idea might better options", "num": "9169", "d": "3/2017"}, {"title": "possible issue warning element nt explicit key assigned", "body": "want request feature report bug bug current behavior think might issue warning element nt explicit key assigned following component javascript const data first second third const mycomponent gt data reactdomrender documentgetelementbyid root dev mode triggers console warning expected behavior course warning child array iterator unique key prop however nested array warning gone javascript const data first second third const mycomponent gt data reactdomrender documentgetelementbyid root warning current behavior bug please provide steps reproduce possible minimal demo problem demo expected behavior understand well way keys work would expect get warning nested array like one flat array since cases attributes set versions react browser os affected issue work previous versions react spot react tested chrome firefox safari macos sierra", "num": "9168", "d": "3/2017"}, {"title": "coffeescript react fiber", "body": "could little bit early got confused usage coffeescript react fiber read comment watching react conf moving another package removing wonder able wrote react released best approach use coffeescript react react require react div reactdom view reactcreateclass displayname hello render gt div classname hello hello react moduleexports reactcreatefactory view thanks", "num": "9167", "d": "3/2017"}, {"title": "concatenated prefixed css properties nt work react", "body": "want request feature report bug bug current behavior react nt set property display string display webkitbox display webkitflex display msflexbox display flex omit properties contains concatenated strings like webkitlineargradient top rgba rgba background mozlineargradient top rgba rgba background lineargradient top rgba rgba mentioned current behavior bug please provide steps reproduce possible minimal demo problem via similar template expected behavior expected root div property display display webkitbox display webkitflex display msflexbox display flex like react versions react browser os affected issue work previous versions react react cromium calculate linux yes worked previous versions react", "num": "9166", "d": "3/2017"}, {"title": "warn overwriting react component instance property", "body": "want request feature report bug feature current behavior react component silently overwrites instance property expected behavior would useful raise warning dev mode case versions react browser os affected issue work previous versions react react work previous versions react yes", "num": "9164", "d": "3/2017"}, {"title": "tutorialmd tictactoe example", "body": "think react tutorial significant problems question maintainers whether appetite overhaul take effort think one big problem separate tictactoe example overall conceptual discussion adding disparate nonrunnable examples muddles focus tutorial split opinion tictactoe example many structural design issues probably glaring repetition render function board class etc hint one could use programmatic approach another issue use everywhere often makes things harder interpret introduces bugs always etc think version fewer arrow functions andor something meant react tutorial example tutorial many people familiar lot syntax also bit tendency er overuse arrow functions tictactoe example useful know one teach flooding student many concepts current example site current versions connect option plus jsx think plus jsx", "num": "9162", "d": "3/2017"}, {"title": "define create assign use engineer otherwise use either props property state class component button", "body": "want request feature report bug answer current behavior foot high level frustration relieved reading different articles doc articles pluralsight courses stack overflow answers many useless leads code provided js class firstcomponent extends component render return first component export default firstcomponent class button extends component constructor props super props consolelog handleclick thisstate counter export default button expected behavior something works good plain html maybe using react chrome browser edge ff windows works previous versions react using var foo reactcreateclass able get work new class version ca nt find examples work trying well week need start migrating react modules telling give move react may fast pita start update knowledge glorified docs nt help", "num": "9156", "d": "3/2017"}, {"title": "serializing html much js necessary", "body": "sort feature request mostly nt able make current react tooling need massively huge article consists single page reactmanaged content bulk passive html content paragraphs headings kind stuff however also active components js interaction bindings trying figure way turn article reactmanaged client thin ui managed client reactbuilt offline solution look reactdomserverrendertostaticmarkup generates html nicely also loses js bindings necessary keep ui working article counting static assets images top notion first loading plain markup content loading react bundle top hook preloaded markup would terrible experience people slightlylesswealthy parts world way would sense developing way render react content html much possible preserving react management interactive ui components essentially solution prevent much data duplication pregenerated html react application seems heavy payload bytes certainly clientside processing well incurred using fully reactmanaged bundle could relieved significantly content guaranteed passive regular html could serialized html react hooking back code elements require active management idea much work would pretty sure would help bring average page size global scale would save quite lot time money allowing content loaded people parts internet currently inaccessible due load time byte cost", "num": "9154", "d": "3/2017"}, {"title": "badly timed update makes impossible determine new value checkbox handler", "body": "want request feature report bug feature guess despite subject formulation current behavior update performed exactly wrong moment native capture document root happens moment react decides handler checkbox called moment called result impossible tell new value inside handler words particular case back old unchanged value handler called current behavior bug please provide steps reproduce possible minimal demo problem demo note clicking checkbox never checks expected behavior discussion probably expect triggered warning issued easier figure remove cause took quite time even nicer would special property holding correct changed value might big change edgecase scenario versions react browser os affected issue work previous versions react chrome win react likely applies browsersos", "num": "9151", "d": "3/2017"}, {"title": "csspropertyoperationsjs failing setup", "body": "uncaught syntaxerror unexpected token getting error loading page using react following webpack configuration anyone understands whats issue thanks", "num": "9150", "d": "3/2017"}, {"title": "bad reading number digit using reactjs nvda firefox", "body": "want request feature report bug bug current behavior write application accessibility using reactjs problem nvda firefox nvda ca nt read number correctly found solution use settimeout delay think better created proof concept show problem reproduce sad path run jsfiddle firefox run nvda open speech viewer click sometimes random works example check results first value ok next sometimes fe sometimes missing first digit reproduce happy path run jsfiddle firefox run nvda open speech viewer click sometimes random works example check results every value ok resolve problem without settimeout expected behavior versions react browser os affected issue work previous versions react windows firefox", "num": "9149", "d": "3/2017"}, {"title": "blur event fired button disabled", "body": "want request feature report bug bug current behavior focussed button becomes disabled react dispatch blur event current behavior bug please provide steps reproduce possible minimal demo problem via similar template attach blur event button focus button make button disabled expected behavior blur event dispatched versions react browser os affected issue work previous versions react sure worked previous versions isolated test case", "num": "9142", "d": "3/2017"}, {"title": "misleading wording documentation", "body": "lifting state nt special meaning popular name handler props starting implementations misleading special references syntheticevent handlers instead documentation give brief description used reference section syntheticevent allow users see available handlers", "num": "9141", "d": "3/2017"}, {"title": "learning error find module error", "body": "hello first time react issue title browser wrong edit details error print", "num": "9137", "d": "3/2017"}, {"title": "autocompletetype attribute unknown prop warning", "body": "want request feature report bug bug current behavior add autocompletetype attribute input react warn fiddle shows issue expected behavior autocompletetype seem standard warn versions react browser os affected issue work previous versions react tested version browsers", "num": "9135", "d": "3/2017"}, {"title": "solved", "body": "recently updated react app nt work works great problem click button use reactrouter jump another page click browser back button code indexjs import babelpolyfill import dialogpolyfill import react react import render reactdom import provider reactredux import createstore redux import configurestore storeconfigurestore import assetsjsmaterialminjs import assetscssmaterialmincss import assetscsscsslibcss import assetscssstylecss import assetscssreactdatepickercss import reducer reducers import routes routes let initialstate windowinitialstate const store configurestore initialstate render documentqueryselector root routesjs import react react import router browserhistory route indexroute reactrouter import app container import dashboard dashboard import users users import test test const routes export default routes key component child container appjs works fine react appjs import react component children cloneelement react import connect reactredux import actions actions import modal componentsmodal import windowloading componentswindowloading import style stylecss class app extends component constructor props context super props context function mapstatetoprops state return state function mapdispatchtoprops dispatch const actionnames objectkeys actions let actionprops dispatch actionnamesforeach name gt objectassign actionprops name rest gt dispatch actionsname return actionprops export default connect mapstatetoprops mapdispatchtoprops app tried put child components dashboard users test side container error", "num": "9134", "d": "3/2017"}, {"title": "rn app reject apple", "body": "jspatch applications rejected apple rn app rejected", "num": "9133", "d": "3/2017"}, {"title": "impure state allocation list ca nt append props listitem declaration parent", "body": "believe list able interface listitem props parent knows listitems display list listitem props declared parent parent manage listitems nt know list directly interface listitems instead parent class defining list list components render return thinking sending class names props list instantiate nt seem way dynamic jsx class saw promoted seem update cloned element props initial construction updating child styles times per second nt want clone object reason may cost react", "num": "9132", "d": "3/2017"}, {"title": "dynamically rendering react component jsx", "body": "using react node assigning component passed props var trying render var renders nothing example properly renders javascript class extends reactcomponent render return class extends reactcomponent render const dynamiccomponent thispropsdynamiccomponent return class childcomponent extends reactcomponent render return hey reactdomrender reactdomrender opposed", "num": "9131", "d": "3/2017"}, {"title": "use reactnative", "body": "create application use reactnative repository movieplate nt use redux flux want kown app whether use correct", "num": "9129", "d": "3/2017"}, {"title": "switch using createfactory compiler steps", "body": "originally intended compile jsx format allows us generate factory optimized resolves problems generating optimized factory many cases slow start however optimizing compiler resolve turn cases another thing function simple functional component return functional component becomes straight function call least element nt key slight change semantics mostly optimizing compiler vm aware type foo known babel transform infer function function call proceed actually inline heavy functions would bad though since expand time render executed work time slicing mechanism fiber therefore might want use heuristic determine functional component gets inlined eg function length something good data point use heuristic whether component part loop closure part map could change transform treat special flag part hot path calling special createfactory neat part model transform pretty simple readable optimization createfactory createfactoryhot also nt reason crossmodule transforms taken care optimizing compiler vm", "num": "9128", "d": "3/2017"}, {"title": "mark prop using custom proptypes validation", "body": "want request feature report bug bug missing feature rather current behavior ca nt define prop using custom validation simple stateless component demonstrates issue js const component content gt content componentproptypes content props propname componentname gt propscontent allow return null expected behavior somehow define prop required versions react browser os affected issue work previous versions react react nt think ever worked might black sorcery needed simplified example posted could nt find way adding prop either adding end function abstracting validation function away even returning chain return", "num": "9125", "d": "3/2017"}, {"title": "mapping function returning jsx list containing returns weird element debugger", "body": "sure confirmed react debug extension firefox using webpack babelcore code html actual page fine debugger turns familiar js expected behavior apologize", "num": "9123", "d": "3/2017"}, {"title": "missing tic tac toe tutorial throws errors codepen", "body": "want request feature report bug report bug current behavior line located throws errors codepen missing closing tag versions react browser os affected issue work previous versions react using starter code using", "num": "9122", "d": "3/2017"}, {"title": "mistake tutorial instructions", "body": "struggling learner trying learn years still really confused everything nt found good way learn yet apologies advance sort thing category super obvious audience aiming reach tutorial trying follow along tutorial half way page says passing two props board square value onclick latter function square call let changing render square think mistake instructions says render render square class return final result share shows button return maybe instructions replace render return thanks", "num": "9120", "d": "3/2017"}, {"title": "reactcsstransitiongroup nested transitions", "body": "issue apply animation parent route children inherit animations want different animations parent route children routes one help render method return method children component children routes get instead animation", "num": "9118", "d": "3/2017"}, {"title": "componentdidmount guarantee dom node document", "body": "read source code find comment method invoked component mounted dom representation however guarantee dom node document meaning", "num": "9117", "d": "3/2017"}, {"title": "programmatically trigger onchange ie", "body": "trying test script programatically triggering onchange class doesnt seem work kindly advice proceed created jsfiddle show top part shows typical reactjs code wherein values typed input field automatically appears separate dom element bottom part code wherein try programatically set value reactjs input field trigger change event jsfiddle execute chrome firefox safari code works executed example fails kindly advice programmatically onchange event thanks franz", "num": "9116", "d": "3/2017"}, {"title": "questionbug report higherordercomponentsmd", "body": "hey moment docs say static methods need copied however class inheritance javascript also works static properties looking recommended looks like copies properties supposed prototypical inheritance anyway error docs time classes used extension nt work classes", "num": "9112", "d": "3/2017"}, {"title": "getting", "body": "getting bug file loading react app react reactdom version issue nt browser specific tried couple older versions reactreactdom", "num": "9104", "d": "3/2017"}, {"title": "rfc reactfiberreconciler release artifact", "body": "issue intended discussion distribute reactfiberreconcilerjs file dependencies custom renderers currently firstclass renderers within react codebasefacebook ecosystem concerns haste access reactjs build publish tooling within codebase party renderers currently adding dependency list requiring build expose custom renderer ideally would distributed package standalone package whether idk think root better continue discouragement looking anything understand flat bundles coming know block could flat bundle alternative something team ready commit support came decision approach put together pr related issues create separate copies renderer include flow type definitions flow type distribution proposal sebmarkbage spicyj", "num": "9103", "d": "3/2017"}, {"title": "fiber check requestanimationframe throws reactdom required server", "body": "want request feature report bug bugish current behavior serverside rendering react requiring transitively requires throws exception raf defined happen universal component toplevel imports clientside libraries like require instead expected behavior would expect get error unless requestanimationframe actually called ex lazily check raf define ric versions react browser os affected issue work previous versions react react node started happening alpha shipped enabled fiber", "num": "9102", "d": "3/2017"}, {"title": "pasting text text box fire change event", "body": "found bug react version pasting text text box fire change event", "num": "9100", "d": "3/2017"}, {"title": "nt convert third later arguments reactcreateelement array use babel", "body": "babelthe member babel nt know much thisso want know thoughts thisthanks", "num": "9099", "d": "3/2017"}, {"title": "thisprops inside method longer works", "body": "want request feature report bug believe might bug sure little ago could something like work fine says read property name undefined still tried reproduce project ps commit results failure tests expected behavior expecting work used work wo nt work intended behavior something wrong", "num": "9095", "d": "3/2017"}, {"title": "locate corresponding src code react", "body": "notice sometimes want find implement details functions features eg every time add code step enter method want look ide press click identifier enter file code promiscuous nested diffcult read want know good way solve guess maybe internal system work fine", "num": "9094", "d": "3/2017"}, {"title": "getting rid string refs reacttransitiongroup", "body": "line making use string refs make pr fix", "num": "9093", "d": "3/2017"}, {"title": "fiber missing error causes infinite loop", "body": "getting issue throwing unhandled error turns infinite loop guarded callback wrapper fails extract error event causes reconciler ignore error thus triggering reproduce flipped sure important started redux added component", "num": "9092", "d": "3/2017"}, {"title": "fiber make treehook devonly", "body": "recently started pulling treehook production bundle sake fiber stacks error boundaries trueadm observed breaks umd bundle could remove gate still bad pull whole hook prod bundle use small part fiber think separate need dev prod pull extra code prod bundle linked", "num": "9090", "d": "3/2017"}, {"title": "maybe ref attribute usage could cause performance problem", "body": "doc ref attribute thinks maybe cause performance problem arrow function event bind handle event bound within handleclick return doc mention performance problem problem syntax different callback created time loggingbutton renders cases fine however callback passed prop lower components components might extra rerendering generally recommend binding constructor using property initializer syntax avoid sort performance problem ref attribute section tips want know thoughts thisthanks", "num": "9086", "d": "3/2017"}, {"title": "value array lost setting timeout", "body": "hello getting issue regarding timeout react code issue user clicks submit state value push array set set timout get array list sec shows undefined saying array undefined remove timeout code works fine dont know weather issue wrong please help thank", "num": "9085", "d": "3/2017"}, {"body": "could please fix formatting provide full example calling componentpassing props", "d": "3/2017"}, {"body": "sidebardemo class sidebardemo extends reactcomponent constructor props context super props context thisstate layout hierarchial return layout hierarchial organic circular busedgerouter reactdomrender documentgetelementbyid container app class app extends reactcomponent static createdefaultgraph var thispropslayout hierarchial hierarchiclayout return graph render consolelog thisstatelayout return", "d": "3/2017"}, {"body": "nt access react props method need either make component method nonstatic pass necessary fields arguments function calling", "d": "3/2017"}, {"body": "hey sughanpandita sorry hear trouble think nehero right try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow", "d": "3/2017"}, {"body": "thanks nehero aweary working", "d": "3/2017"}, {"body": "need information help", "d": "3/2017"}, {"body": "assuming asynchronous action finishes time component mounts sure needing set state instead direct people actions component mounts", "d": "3/2017"}, {"body": "like idea getting browser list facebook additionally recently sent couple prs removing legacy code still quite bit left reactdomfiberinput controlled radio check reactdominput controlled radio check reactdom compat mode check csspropertyjs css property shorthand enterleave plugin ownerdocument reactbrowsereventemitter mountat settextcontent syntheticuievent view polyfill geteventcharcode x geteventmodifierstate safari support getmodifierstate", "d": "3/2017"}, {"body": "another useful chart", "d": "3/2017"}, {"body": "thanks report bengotow essentially issue described get around using instead hope helps", "d": "3/2017"}, {"body": "use nonarrow function", "d": "3/2017"}, {"body": "try something like arrow functions main changing context time means able use context arrow function context already", "d": "3/2017"}, {"body": "uncaught promise referenceerror defined sounds like babel bug please report babel unfortunately nothing repo help closing", "d": "3/2017"}, {"body": "pietrasiak oleglustenko thank try time nt use async await try", "d": "3/2017"}, {"body": "fixed error moving requires indexhtml replaced traditional body knows", "d": "3/2017"}, {"body": "think missed react import importing commonjs entry point mistake internal file probably meant instead ca nt mix commonjsonly entry points umd entry points also nt think use umd bundles commonjs environment without making resolve react umd bundle otherwise way communicate easy answer use umd bundles browser use commonjs entry points commonjs environment nt mix", "d": "3/2017"}, {"body": "ooh thanks raising also saw people trying add babel top confused explains would like send pr make clearer", "d": "3/2017"}, {"body": "ideally think make tabular installation page like react native docs user chooses one way top rest instructions specific", "d": "3/2017"}, {"body": "gaearon dear dan please feel free add improvement indeed docs make clear path take undertake steps nt necessary gaearon also nt send pr previous issue using keys react remember also invite someone else improve fine know opened issues helped somehow delegate rest people know subject matter", "d": "3/2017"}, {"body": "giorgim gaearon created pr wanted help final solution done", "d": "3/2017"}, {"body": "could also used case reactdomrender inside component want preserve things like redux store reactrouter", "d": "3/2017"}, {"body": "great point brigand passing cloning even serializing context data could benefit feature", "d": "3/2017"}, {"body": "hey capaj thanks bringing idea definitely popular way manage dynamic classes react think assuming much solution problem react explicit goal maintaining small api surface making prop polymorphic would extending api minimal gains said lines big dependency pull would also make parsing slower everyone default since react would always check type prop instead assuming string integrating communitydriven packages core library also rarely good longterm maintainability package since fight attention core issues think likely best stays way thanks taking time share thoughts though", "d": "3/2017"}, {"body": "worth extra http request clear use library bundler like webpackbrowserifybrunchrollup nt actually make extra request gets bundled code like existed react people nt need use custom way wo nt pay bandwidth implementation question brought might come back probably soon", "d": "3/2017"}, {"body": "gaearon talking http request install npm aweary minimal gains said lines big dependency pull give examplei midsized project yet use props files means extra lines imports extra calls typical project final bundle size would actually go react supported would also make classname parsing slower everyone default since react would always check type classname prop instead assuming string could easily mitigated using alternative name propsomething like sounds silly probably better integrating communitydriven packages core library also rarely good longterm maintainability package since fight attention core issues agree general think might rare case good idea whole thing implemented like good programmer bet left pinky bugs might fall something nasty js env like extend implementation problem edit standalone property would totally trivial", "d": "3/2017"}, {"body": "mentioned requested might consider future versions like time revisit styling done react would nt like introduce new api break everyone later means extra lines imports importing something react less expensive importing something another library terms bundle size seems like problem bundler", "d": "3/2017"}, {"body": "importing something react less expensive importing something another library terms bundle size seems like problem bundler would import anything javascript import classnames classnames gt vs like time revisit styling done react heart", "d": "3/2017"}, {"body": "ah got sorry confusion yea might support future part larger effort probably table next versions", "d": "3/2017"}, {"body": "nt specify keys react use indexes keys potentially performance correctness issue items reordered performance instead reordering dom nodes react would na\u00efvely update components even though every single one changed due reordering correctness state first item deep state inside stay attached first item even moved data source confusing inputs retaining values original places even parent components reorder help would like submit pr make docs better", "d": "3/2017"}, {"body": "hi gaeron thanks say react use index keys important information since case indeed one may get corrupt data one could naively think heshe ignores keys performance issue think doc mention explicitly ps pr", "d": "3/2017"}, {"body": "meant could send pull request documentation page add information pressing edit github", "d": "3/2017"}, {"body": "used question see one comments person also thought performance thing", "d": "3/2017"}, {"body": "gaearon actually ca nt reproduce issue thought would happen using indexes keys new array elements still correctly rendered expected updates would happen ui since new array indexes miss something", "d": "3/2017"}, {"body": "giorgim think gaearon means something like interesting pen keyed box never loses value others corrected see next comments", "d": "3/2017"}, {"body": "hi thanks demo maybe change key position achieve gaearon means edited", "d": "3/2017"}, {"body": "yep totally right monkindey fixed pen", "d": "3/2017"}, {"body": "submitted pr add information documentation provide example issue state caused using indexes keys", "d": "3/2017"}, {"body": "yep unstable please try latest react alpha complete implementation", "d": "3/2017"}, {"body": "hey thanks suggestion think adding badges quite already", "d": "3/2017"}, {"body": "gaearon welcome", "d": "3/2017"}, {"body": "looks like importing component wrong exporting default importing named export fix change line work", "d": "3/2017"}, {"body": "yep problem", "d": "3/2017"}, {"body": "could possibly add another bullet point linking test utilities doc page mentions jest common tools", "d": "3/2017"}, {"body": "sounds good submit pr", "d": "3/2017"}, {"body": "propose nt allow empty custom nodeenv values nodeenv nether development test production throw hard error", "d": "3/2017"}, {"body": "use enviroment value", "d": "3/2017"}, {"body": "gaearon think change would help improve understanding builds react still far common production apps shipped development versions react impact performance", "d": "3/2017"}, {"body": "since react commonjs entry points rely distinction propose nt allow empty custom nodeenv values nodeenv nether development test production throw hard error seen many folks run problem daily shipping slower dev mode production strongly supportive throwing would also help issues seeing", "d": "3/2017"}, {"body": "sergiodxa use staging enviroment value maybe could support separate environment variable takes precedence set use throw invalid otherwise fallback throw undefined invalid", "d": "3/2017"}, {"body": "catches people surprise default build react development one often ship slow large development bundles production true ca nt begin explain many react apps encountered using development rather production build ultimately enforcing stronger build pipeline would headache beginning needed keeping everyone line shipping products", "d": "3/2017"}, {"body": "fallback mechanism would really appreciated following order reactnav nodeenv production default", "d": "3/2017"}, {"body": "propose nt allow empty custom nodeenv values problem custom values", "d": "3/2017"}, {"body": "one problem falling back everyone would specify otherwise dead code stripping via uglify work able turn expression known compile time basically problem great solution except maybe would require folks update uglify great", "d": "3/2017"}, {"body": "compile time known undefined already works fine nodeenv eliminate production checks env unspecified would specified", "d": "3/2017"}, {"body": "custom values absolutely supported else react bad node citizen", "d": "3/2017"}, {"body": "compile time known undefined already works fine nodeenv eliminate production checks env unspecified would specified webpack works leaves polyfill empty touch use explicitly replace matches sure others work", "d": "3/2017"}, {"body": "custom values absolutely supported else react bad node citizen react already bad node citizen use custom value get slow version production punishing users instead least punishing developers seems fairer", "d": "3/2017"}, {"body": "personally think drop entirely going forward new react instead adopt would throw everyone currently least error would give context explicitly set would also give context webpackrollupbrowserify users stripreplace variable use uglify remove deadcode ca nt really use fallback variable deadcode elimination take following code current webpack users strip would get wo nt get stripped uglify unless people additionally strip would nt apparent though bundle would include dev prod code", "d": "3/2017"}, {"body": "going would also let us introduce profiling environment without screwing checks currently check anything", "d": "3/2017"}, {"body": "idea webpack uglify works seems like would stripped uglify even unknown stripping results empty block also board going", "d": "3/2017"}, {"body": "acdlite regards nested statements guessing else statement would also load production code case would nt production dev code still get loaded uglify would strip either development mode", "d": "3/2017"}, {"body": "trueadm yeah ignore comment nt think", "d": "3/2017"}, {"body": "gaearon iirc envify reifies every processenv value inline kind shocked webpack nt", "d": "3/2017"}, {"body": "ljharb common webpack configurations really envification usual suggested way use basically way replace arbitrary globals happens work envspecific bump things", "d": "3/2017"}, {"body": "least punishing developers seems fairer fair point strongly prefer reactenv system babel uses similar system long first checks falls back seems best worlds get use standard system sensible get warningfailure nt", "d": "3/2017"}, {"body": "ljharb webpack plugin like envify called npm like browserify done default", "d": "3/2017"}, {"body": "unfortunately nt see good way getting dead code elimination work fallback see discussion either use think migrating fully makes sense case", "d": "3/2017"}, {"body": "full check surely nt nested unless dense need coffee", "d": "3/2017"}, {"body": "abritinthebay check comment reasoning", "d": "3/2017"}, {"body": "hmm seems argument catering users poor development practice replacing one env var like asking problems guess key anyhow tho trying avoid people footgunning sure something react take upon entirely people screw reactenv somehow get desire reactenv least fixes problems without causing issues nodeenv", "d": "3/2017"}, {"body": "always get production version nt explicitly define people would missing debug features first timer advanced developer unaware setting least first experience would nt nothing working best idea either least would nt break every single tutorial similar document starts similar nonissue browser builds going way would even better think going custom nodeenvs would end kinds weird edge cases like say someone using staging like mentioned", "d": "3/2017"}, {"body": "less disruptive option warn set use copy compels action", "d": "3/2017"}, {"body": "always get production version nt explicitly define nodeenvdevelopment reactenvdevelopment people would missing debug features first timer advanced developer unaware setting nodereactenv least first experience would nt nothing working think lot development build parts specifically newer users warn possible problems defaulting production would mess lot people assumptions fan reactenv throwing fallback long react follows semver releasing people nt accidentally hit problem existing projects", "d": "3/2017"}, {"body": "great idea would make harder beginners get started yet another step build system tutorial hell started coding idea environment variable even", "d": "3/2017"}, {"body": "alternative beginners ship development code production later find library development mode bundle becomes much smaller", "d": "3/2017"}, {"body": "yet another idea would rendering warning directly view impossible miss least build works", "d": "3/2017"}, {"body": "seems like great idea long made clear set environment variable", "d": "3/2017"}, {"body": "lot people get react might even know environment variables means teach first use react going easy teach people use env vars platform", "d": "3/2017"}, {"body": "personally fond idea requiring environment values js library work would require work start hacking react blank project ideal devs want try thing like idea rendering something obvious might bit intrusif doubt eventually deployed prod time time nt play well package separation would work reactdom would nt consolewarn suffice web dev working website always devtools open anyway would quickly catch warning", "d": "3/2017"}, {"body": "requiring environment variables values embedded build time nt relationship actual environment variables system unless talking server rendering think discussion showing much confusion enabling right behavior nt agree affect beginners much beginners either use umd browser bundles keep working create react app requires configuration would affect people custom webpack configs webpack config learn need two one development one production", "d": "3/2017"}, {"body": "oh course proposing error link page clearly explaining fix issue nt think big problem beginner click link follow instructions", "d": "3/2017"}, {"body": "ca nt get behind one seems fly face pit success another configuration step beginners deal feels like consolewarn right approach", "d": "3/2017"}, {"body": "gaearon personally heard createreactapp react dev using webpack awhile majority beginner resources read effectively webpack config works worried could break beginners accidentally going webpack pretty detrimental tutorials", "d": "3/2017"}, {"body": "also explain requiring environment variables saying env variables nt necessarily part beginner discussion umd create react app", "d": "3/2017"}, {"body": "would nt consolewarn suffice web dev working website always devtools open anyway would quickly catch warning everyone pays attention console especially developers like beginners issue personally heard createreactapp react dev using webpack awhile jaitaiwan around since july last year installation documentation mentions right top landscape likely changed lot beginners since one saying env variables nt necessarily part beginner discussion umd create react app see section gaearon initial post umd builds rename reactdevelopmentjs reactproductionminjs distinction useful", "d": "3/2017"}, {"body": "majority beginner resources read effectively webpack config works worried could break beginners accidentally going link clear instructions fixing issue problem saying env variables nt necessarily part beginner discussion umd create react app also mean contrary comments thread seem imply need set actual environment variables system need add two lines webpack config", "d": "3/2017"}, {"body": "gaearon cool board", "d": "3/2017"}, {"body": "ca nt get behind one seems fly face pit success another configuration step beginners deal stephengrider problem current setup far pit success right easy users run minified development builds production severely hurts performance think success context nt simple fewer configuration steps also running performant build production developers pay cost learning requirement users reap rewards rest application lifetime", "d": "3/2017"}, {"body": "oof requiring one nodeenv values would break lot folks build flows require something agree going full reactenv ecosystem adjust path fine another line webpack config tell everyone use taion copy devexpression babel plugin well p bonus nt hijack dang nodeenv variable let make experienced folks lives frustrating make beginner case easier sure meet needs", "d": "3/2017"}, {"body": "side question ca nt count ppl looking console see warning think going check error seems like react work inexplicably nt super beginner friendly either", "d": "3/2017"}, {"body": "bring every time think vue right default development always show message build production minified without setting nodeenv", "d": "3/2017"}, {"body": "really nt like idea idea react developers especially need handholding nt see problems practice people accidentally shipping production apps without far aware really think buildtime thing one handled correctly latest webpack release default maybe better idea would split setting though instead using unidiomatic enum control specific debug instrumentation leaving control things like minifying debug messages frankly given lessthannecessary support burden added maintainers thirdparty libs around things like react portal warnings unknown prop warnings might better enable specific debug instrumentation default anyway", "d": "3/2017"}, {"body": "think whole issue bit vocal minority situation vast majority react developers either work productiondevelopment nodeenv nt care performance size react somethings needs change think boils forcing nodeenv specific values break current usage might require considerable code changes user perhaps adding new environment value custom staging enviornment getting everything use changing behavior production default probably cause headache exists node ecosystem populated lot code relies fact empty nodeenv production development path least surprise changing reactenv simple breaking changes easy deal inheriting value nodeenv probably done way code optimizers remove dead code choosing production default development default really prioritizing whether developers without enough experience support harder time getting started react ship slower bigger bundles production personally vote new developers able open devtools get type errors without mess finding change environment variables banging head devtools blank easy access key ecosystem growth react already complicated setup alternatives experienced devs find production flag easily enough new developers probably worried build size speed production forcing people choose reactenv resulting defaults best option something must change", "d": "3/2017"}, {"body": "expand idea vocal minority issue every skeleton boilerplate guide discussing react uses determine code minified either weird setup ship code unminified production latter react size speed least problems former able handle adding environment variable using minifiedunminified version react happen", "d": "3/2017"}, {"body": "nt worry much people want develop react yet ca nt bothered learn set environment variable confusion worst support idea throwing error nodeenv nt set leaning towards using nodeenv rather another one reactenv", "d": "3/2017"}, {"body": "personally think drop nodeenv entirely going forward new react instead adopt reactenv would throw everyone currently least error would give context explicitly set reactenv reading different responses thread far sounds like reactenv would cleanest path forward messaging breakage wise would affect people custom webpack configs webpack config learn need two one development one production", "d": "3/2017"}, {"body": "overspecified debug onoff toggle react ever going something differently test v nontest environments per flag hope seems like better setting make imo precedents elsewhere default default make sense", "d": "3/2017"}, {"body": "think intended behavior see try enzyme", "d": "3/2017"}, {"body": "unrelated using issue behavior intentional workaround need figure dom nodes library using expects mock extent care ie enough make test pass read mocking refs snapshot testing hope helps", "d": "3/2017"}, {"body": "hello thanks gaearon quick answer confused must check besides check packages use packages using packages using repeate process instance case project uses antd project uses rctabs using must check sources rctabs searching references mock example file inktabbarmixin confused must make nav root inkbar activetab fact funcion fails null nt get wrong strong advocate react amp jest think getting seriously complicated want snapshot component forces analyze code besides code packages packages packages probably confused better way avoid thanks patiente gaearon yesmeck amp thymikee best regards", "d": "3/2017"}, {"body": "well sure wo nt get solution least waiting answer cry please one last question want generate snapshots jest must look packages packages packages use mock nodes example ok thanks advance", "d": "3/2017"}, {"body": "aaronplanell see comment", "d": "3/2017"}, {"body": "thanks gaearon quick answer confused must check refs besides check refs packages use packages using packages using refs repeate process mean need literally check every ref mean write snapshot test fails look methods expected refs mock think find places confused must make createnodemock nav root inkbar activetab fact offset funcion fails wrapnode null need hardcode etc specifically dom apis component relies eg properties use jest also mock components eg would let skip components coupled dom similarly try mocking away particular mixin", "d": "3/2017"}, {"body": "thanks gaearon answer wrote found snapshot matchs think found another stone path cry confussed working work ca nt see think arrived culdesac thanks help best regards", "d": "3/2017"}, {"body": "confussed working reacttestrenderer refs work finddomnode ca nt see think arrived culdesac yes mock", "d": "3/2017"}, {"body": "perfect wrote js jestmock rctabslibscrollableinktabbarjs gt return props gt propschildren jestmock reactdom gt finddomnode return null render return null said snapshot js content tab pane check three tabas make snapshots children thanks lot gaearon", "d": "3/2017"}, {"body": "glad helped", "d": "3/2017"}, {"body": "think mostly issue webpack config cordova share reproducible repo maybe help", "d": "3/2017"}, {"body": "hey zeegeek sorry hear trouble said would agree viankakrisna likely issue build tooling try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow may also want reach support channels cordova offers provide test case reproducing issue demonstrating react issue definitely look hope helps", "d": "3/2017"}, {"body": "nilshartmann path composedpath instead way almost entirely solves issue events captured web component encapsulated reactdom", "d": "3/2017"}, {"body": "want render component specify html element rendered need specify element use code", "d": "3/2017"}, {"body": "must use jsx babel compiler either write without using jsx", "d": "3/2017"}, {"body": "thanx lot", "d": "3/2017"}, {"body": "unrelated also wanted suggest warning setting instances seen people class properties syntax maybe somebody could three warnings together", "d": "3/2017"}, {"body": "great idea happy help anyone wants give shot", "d": "3/2017"}, {"body": "like give shot", "d": "3/2017"}, {"body": "kind warning message trying write test first", "d": "3/2017"}, {"body": "writing simple test code realized test code ensure overridden expected behavior overridden", "d": "3/2017"}, {"body": "misoguy responded question pr", "d": "3/2017"}, {"body": "nt include page work without try go first note used production files used development hope helps", "d": "3/2017"}, {"body": "thanks issue nycdotnet welcome react community definitely one scenario warning may helpful since usually single call application essentially community standard call bottom entry file think gt time current warning suffice verify new users experience specific issue definitely consider stands think edge case might distract common case confuse new react developers maybe fail fast element current warning little confusing case since toplevel component usually file call validate early throw descriptive error message specifically addressing issue gaearon think", "d": "3/2017"}, {"body": "thanks considering", "d": "3/2017"}, {"body": "hey nickdima behavior described docs old jsx gotchas basically pass prop without value defaults true quick edit digging deeper behavior react docs also point standard behavior boolean attributes simply put input element presence attribute represents value without would fall back", "d": "3/2017"}, {"body": "digging deeper behavior react docs also point standard behavior boolean attributes well yeah react contrary case id nt render know works known tags like nt work unknown tags attributes", "d": "3/2017"}, {"body": "thanks report nickdima current react passes attributes element custom element pass attribute get set via set attribute value verify exepcted behavior according spec boolean attributes attribute present value must either empty string value caseinsensitive match attribute canonical name leading trailing whitespace workaround able render sure accomplish want probably depends amp reading attributes attributes like reflected properties sets assuming web components take care react potentially smarter coerce comply boolean attribute spec", "d": "3/2017"}, {"body": "thanks aweary workaround seems trick document somewhere", "d": "3/2017"}, {"body": "nickdima glad hear sure yet depend whether want coerce internally custom element attributes cc spicyj think", "d": "3/2017"}, {"body": "nt remember history think assume custom elements stringtyped booleantyped stringtyped attributes coerce strings even boolean values like makes inclined say leave current behavior", "d": "3/2017"}, {"body": "spicyj reason assume booleans coerced strings cases rendered leave current behavior definitely document render boolean attributes", "d": "3/2017"}, {"body": "looks like nt install package please make sure installed versions match", "d": "3/2017"}, {"body": "thx works fyi using autogenerate apidocs reactdom", "d": "3/2017"}, {"body": "yeah react hang make certain errors throw wrong locations moment always emit error almost certainly swallowing errors somewhere enable pause exceptions able find way", "d": "3/2017"}, {"body": "unfortunately ca nt help much without clear reproduction issue mentioned likely issue application code react try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow provide reproduction demonstrates issue react let us know", "d": "3/2017"}, {"body": "thank much quick response support forum links used google tag manager application error occurs downloading sometimes used gtm anyway still trying find app crashes ie process thanks", "d": "3/2017"}, {"body": "might able help provide project reproducing likely something getting bundled incorrectly eg multiple react copies one bundle", "d": "3/2017"}, {"body": "nt manage get bottom ca nt reproduce error minimal environment must something deeper configuration application halfwaysensible way see whether two copies react bundled could react make injection checks warn multiple copies loaded", "d": "3/2017"}, {"body": "thinking maybe suggest codepen instead", "d": "3/2017"}, {"body": "", "d": "3/2017"}, {"body": "gaearon codepen could use one thing nt like codepen prompts create account every time fork pen totally understandable advertising might annoy people like webpackbin probably favorite ui among options want sure use something people familiar popular webpackbin also need verify whatever choose works supported browsers tried testing jsfiddles nt work makes debugging issues big pain", "d": "3/2017"}, {"body": "sure popular maybe christianalfoni chime", "d": "3/2017"}, {"body": "hi guys wepbackbin launched bins created previous version period months opening main menu left webpackbincom see stats created viewed bins webpackbin week old nearly popular others course yeah marketing stuff thing focused supporting cause makes angry need webpackbin fun project happy receive prs probably needs polyfills style fixes", "d": "3/2017"}, {"body": "regarding syntax highlighting simple solution would change setting setting", "d": "3/2017"}, {"body": "think jsfiddle safest solution moment codepen feels like better product prompt setup account everytime go fork pen specific situation nt make lot sense got updated jsfiddel using language works well", "d": "3/2017"}, {"body": "perhaps short answer entire thread issue", "d": "3/2017"}, {"body": "syranide solution wo nt work know currently effort made address problem pretty common problem response thread linked made sound like effort would made fix", "d": "3/2017"}, {"body": "bdwain problem react need adjust extend components necessary easily provable solvable different ways need find one works best usecase asking react nt really work practice even would break lot important assumptions react react takes data renders nt exist ca nt rendered want something stay rendered removed need find way retain data render even technically considered removed app eg soft remove", "d": "3/2017"}, {"body": "ps need indepth help recommend community forum stackoverflow", "d": "3/2017"}, {"body": "since dupe going close recommend post feedback topic bdwain split conversation", "d": "3/2017"}, {"body": "boolean html properties treated separately regular string properties ie boolean true ends dom string properties htmldom dictates boolean properties look certain way value react internal property config reflecting use js see behavior simply htmldom works really quirk htmldom explained would certainly good thing hard know draw line html react imho case html html react needs done", "d": "3/2017"}, {"body": "case html html react needs done react needs done bare minimum different props resulting inconsistent behaviour also filters drops custom attributes like part html spec makes even difficult predict behaviour react combination css styling etc react specified proptype always renders way save quite bit debugging edit clicked wrong button mobile reopened issue finished comment", "d": "3/2017"}, {"body": "react needs done bare minimum different props resulting inconsistent behaviour mmeent works browser react specified proptype aalways renders way save quite bit debugging page lists specialcase properties react anything funny nt expect provide valid domvalues react work exactly expect provide nonboolean value boolean prop react htmldom turn boolean", "d": "3/2017"}, {"body": "provide nonboolean value boolean prop react htmldom turn boolean props dom node returns corresponding value either string null function writing jsx basically html curly braces jsextensions want values interpreted consistently meaning results read differently something else entirely react programmers problem know exactly neigh intents purposes", "d": "3/2017"}, {"body": "nt consider actual attribute source truth element properties react consistent htmldom standards dom properties property names reflect javascript api accessing dom properties instead instead etc conceptualize interface api instead number internal property config options determine react sets propertiesattributes remains consistent htmldom", "d": "3/2017"}, {"body": "ok documented implementation notes say react uses code nt mention props way also note vdomlibraries use getsetattribute propertyattribute diffing preact vuejs inferno name might indicate preference htmllike behaviour domelementlike behaviour", "d": "3/2017"}, {"body": "totally agree clearer docs prs welcome implementation notes say react uses setattribute code nt mention props way use without qualification cases also set property node normalize boolean values also note vdomlibraries use getsetattribute propertyattribute diffing preact vuejs inferno name might indicate preference htmllike behaviour domelementlike behaviour example showing inferno rendering one showing preact conforming htmldom spec rather important library manages dom think pretty consistent behavior", "d": "3/2017"}, {"body": "call child", "d": "3/2017"}, {"body": "gaearon changes exist examples small use case array children large idea allow optin optimization appendprependinsert pinpoint startindex endindex operation large lists instead n", "d": "3/2017"}, {"body": "ah see generally solve two techniques children shortcircuits rendering child changed still n items bail super quickly windowing many items rendering bad anyway web use reactvirtualized native use new list views recycling help", "d": "3/2017"}, {"body": "meant avoid n internal operation altogether example wanted lazy load components infinite scroll list grows subsequent operations append list since n allowing way pin point specific granular update case end list operation reduced say someone wanted prepend one item top list lazy loaded could done operation known ahead time update go past first item list point list could grown multiple initial size", "d": "3/2017"}, {"body": "may n operation using reduce total work required significantly making performance difference reasonable number items negligible rendering enough items performance issues windowing way go virtualizing list give better beyond append runtime since rendering required number items also abstract cost expanding public api changing signature done carefully good reasons sure would enough justification since performance improvements nt likely substantial windowing better familiar approach large lists api would also make possible users introduce inconsistent render state would defer reconciliation path user may get wrong", "d": "3/2017"}, {"body": "aweary meant way expose lower level interface isolated updates highlevel constructs like windowing use reduce operational complexity update", "d": "3/2017"}, {"body": "api would also make possible users introduce inconsistent render state would defer reconciliation path user may get wrong target use case know child ren need updated like much lower level version sure shoot foot explicit optin", "d": "3/2017"}, {"body": "meant way expose lower level interface isolated updates highlevel constructs like windowing use reduce operational complexity update likely form unlikely level maybe bvaughn provide additional insight", "d": "3/2017"}, {"body": "thanks ping dan api would also make possible users introduce inconsistent render state would defer reconciliation path user may get wrong concern example mentioned meant avoid n internal operation altogether example wanted lazy load components infinite scroll list grows subsequent operations append list since n allowing way pin point specific granular update case end list operation reduced forceupdate arrlength say someone wanted prepend one item top list lazy loaded could done operation forceupdate known ahead time update go past first item list point list could grown multiple initial size expected behavior case unclear called would react know appended child vs replacing previous first child likely form unlikely level maybe bvaughn provide additional insight think early speculate approach take sebastian chatted bit high level things like domelement recycling restoring transient state list items unmounted remounted etc nt thought much api changes might made react side think kind virtualization component abstracts away concern userland", "d": "3/2017"}, {"body": "called forceupdate would react know appended child vs replacing previous first child bvaughn insert cases probably need fine tuning way see given list old new short circuits forceupdate diff replaces short circuits stringsubstr start length low level know avoid shooting foot right could reduce cost updates", "d": "3/2017"}, {"body": "deprecated deprecated would see deprecation notice calling api reference discouraged cases people often use unnecessarily useful exactly edge case describe", "d": "3/2017"}, {"body": "sorry careless change log say moved little sensitive see word deprecated cry", "d": "3/2017"}, {"body": "gaearon notice reacteslint rule link previous discuss actually say want deprecate eventually right mean change idea", "d": "3/2017"}, {"body": "would like send pr fixing", "d": "3/2017"}, {"body": "sure create pull request", "d": "3/2017"}, {"body": "isolate issue react love look unfortunately hard help involves third party libraries least need minimal example demonstrating issue", "d": "3/2017"}, {"body": "thanks dan look stripped version project soon get moment fiber looks extremely promising breeze migrate couple helpful warnings render needing pure makes think fact swapped libs react reactdom issue happen try isolate", "d": "3/2017"}, {"body": "yea could slight difference behavior either intentional unintentional hard say without way reproduce", "d": "3/2017"}, {"body": "created basic project createreactapp reactrouter swapped fiber reproducing works ok dig deeper main project fairly large take rather wait least beta version fiber close revert reproduce reliably", "d": "3/2017"}, {"body": "sounds good one thing note fiber component replaces another component order mounting unmounting lifecycle hooks swapped react replaced b unmount create mount b acomponentwillunmount bconstructor bcomponentwillmount bcomponentdidmount fiber create b first later unmount mount b bconstructor bcomponentwillmount acomponentwillunmount bcomponentdidmount relied somewhere app eg triggering side effects unmounting mounting might break", "d": "3/2017"}, {"body": "thanks issue ajainarayanan looked example able pinpoint things going wrong problem stems fact using problem return random number every time render react see key changed event though element really nt changed assume needs recreate element resolve use key semantic meaning like way react knows needs consider recreating element value changed working version example seem concerning behavior inconsistent browsers keep open investigate normalize hope helps", "d": "3/2017"}, {"body": "aweary thanks quick response resolves", "d": "3/2017"}, {"body": "ajainarayanan glad hear doc page lists keys great reference", "d": "3/2017"}, {"body": "please file issue babel parses jsx actionable react repository since nt maintain jsx compiler thanks", "d": "3/2017"}, {"body": "nt think line exists react fiber implementation please feel free experiment file issues though", "d": "3/2017"}, {"body": "reference line removed time spent direct indicator function might deopt profile would great idea", "d": "3/2017"}, {"body": "note self released tagged versions change updated readme mentions deprecation message ready pull trigger publish final non tag version deprecate npm npm deprecate reactaddonscsstransitiongroup package deprecated longer work react recommend use csstransitiongroup reacttransitiongroup instead npm deprecate reactaddonstransitiongroup package deprecated longer work react recommend use transitiongroup reacttransitiongroup instead also verified addon releases seem correct swap npm tags like", "d": "3/2017"}, {"body": "perhaps would make sense completely move testutils reactdom except shallow renderer could published reactshallowrenderer make sense", "d": "3/2017"}, {"body": "little confused status still considered feature rely phased", "d": "3/2017"}, {"body": "syranide plan releasing package nevertheless version keep working indefinitely", "d": "3/2017"}, {"body": "hey firevolkhov thanks report using third party library control input value nt using controlled input eg providing prop since input value nt really controlled react able integrate party input library using uncontrolled component react expects elements renders managed react important approach party dom integrations carefully hope helps", "d": "3/2017"}, {"body": "hey tarunvarian try use issue tracker bug reports feature requests usage support question recommend checking one great communitydriven platforms like reactiflux discussreactjsorg stackoverflow may find doc page reacttestutils helpful enzyme also popular option testing react applications need specific recommendations definitely checkout support channels mentioned hope helps", "d": "3/2017"}, {"body": "thanks report bkozera expected behavior see explained fixing false positive third party proptypes section doc page author third party proptypes library let consumers wrap existing react proptypes might start seeing warning coming library happens react nt see secret last argument passes detect manual proptypes calls since passing arguments including secret warn documented workaround thirdparty libs hope clears things bit", "d": "3/2017"}, {"body": "guess fire someone aweary thanks lot explanation", "d": "3/2017"}, {"body": "", "d": "3/2017"}, {"body": "react context equal otherwise using class okay intialize state constructor like", "d": "3/2017"}, {"body": "rewrite favor", "d": "3/2017"}, {"body": "using cra create react app also use property initializer syntax nt need constructor eg", "d": "3/2017"}, {"body": "updated please check close issue", "d": "3/2017"}, {"body": "doest work", "d": "3/2017"}, {"body": "check incorrect import order reactdom react", "d": "3/2017"}, {"body": "closing correct answer", "d": "3/2017"}, {"body": "thanks lot", "d": "3/2017"}, {"body": "feel like niche enough implement example usage", "d": "3/2017"}, {"body": "think relatively rare use case people also expect arguments current props state guaranteed generate confusion canonical way implement keep track already possible current api maybe build helper often need", "d": "3/2017"}, {"body": "brigand already implementing decorator using agree niche specific", "d": "3/2017"}, {"body": "cc acdlite might errorutils bug mentioned rthor verify whether get equal", "d": "3/2017"}, {"body": "random hypothesis maybe happens error rethrown later tick like react redux", "d": "3/2017"}, {"body": "gaearon reach point", "d": "3/2017"}, {"body": "experiencing happens whenever anything undefined", "d": "3/2017"}, {"body": "believe identified issue fix jaredpalmer would mind posting jsfiddle exact code triggers bug sure fix solves ok fiddle nt running fiber paste environment", "d": "3/2017"}, {"body": "acdlite happens whenever anything throws", "d": "3/2017"}, {"body": "support using react like fiber please refer replies create custom renderer fiber want full control would mean using reactdom look reactartfiber example renderer nt offer public api create one userland yet intend expose one coming months hope helps", "d": "3/2017"}, {"body": "thank look reactartfiber nt think go route hate lose good functionality reactdom generally way integrate generic js components render target div passed along generic component constructor componentdidmount really need way around rendering target div component creates unnecessary dom elements break extjs layout system way around even live rendering target div root component ext js component hierarchy seems like close original approach may even complicated", "d": "3/2017"}, {"body": "want create dom nodes via nonreact library make dom nodes part react output", "d": "3/2017"}, {"body": "yes exactly think ability coupled existing public lifecycle methods gives need", "d": "3/2017"}, {"body": "allow putting nonextjs components extjs components", "d": "3/2017"}, {"body": "yes sometimes wrap base extcomponent instance current implementation something like totally doable container ext js component class", "d": "3/2017"}, {"body": "think custom renderer like way go use together fine means code duplication tradeoff", "d": "3/2017"}, {"body": "trying renderer route suggested seems promising struggling case html elements inside ext js component example implementing reactfiberreconciler way reactdom render update html elements need worry handling ext js components would nt want recreate functionality reactdom", "d": "3/2017"}, {"body": "think could container composite component calls reactdomunstablerenderintocontainer componentdidmount didupdate help plan simplify crossrenderer portals implemented yet plan provide", "d": "3/2017"}, {"body": "fully exploring custom rendering think got something preserves functionality old extjsreactor implementation minor changes api see new implementation general approach handle ext js components directly use reactdomrender child html elements seems work well two side effects developers need add new component called extreactprovider root anywhere want use ext js components ideal acceptable given component libraries materialui require something similar react chrome tools nt seem render component tree correctly children extreactprovider listed root tree think chrome tools need updated support fiber something else need rendering custom elements would mind taking quick look code letting know line public api intend offer custom rendering anything likely break near future overall feel like reactfiberreconciler api lot easier understand old apis kudos guys guessing one first third parties use api love chance help guide direction api future offer helpfeedback needed", "d": "3/2017"}, {"body": "react chrome tools nt seem render component tree correctly children extreactprovider listed root tree think chrome tools need updated support fiber something else need rendering custom elements nt support crossrenderer portals idea future instead calling lifecycle hooks would use portal api method something like crossrenderer support currently implemented although love see contributions space sure hard would kudos guys guessing one first third parties use api love chance help guide direction api future offer helpfeedback needed yes", "d": "3/2017"}, {"body": "anything likely break near future think code makes sense would note available inside likely offer separately somehow react soon worked details exposing yet", "d": "3/2017"}, {"body": "agree would nice addition love try solve issue nt want", "d": "3/2017"}, {"body": "currently little busy projects want make work go ahead", "d": "3/2017"}, {"body": "anyone stumbling upon issue currently implemented like maybe js const hasprototype f p gt let proto objectgetprototypeof fprototype proto proto objectgetprototypeof proto proto p return true return false proptypesoneoftype proptypesstring props propname componentname gt const f props propname stateless function component objectgetprototypeof f function class f instanceof reactcomponent class hasprototype f reactcomponentprototype return return new error untested", "d": "3/2017"}, {"body": "either string function valid way tell function valid component call though specific gets reason think close", "d": "3/2017"}, {"body": "really anyway probably need provide relevant errorsstack traces determined whether problem react could likely unsupported thirdparty libraries code breaks", "d": "3/2017"}, {"body": "syranide seems right right tested fine hard configure correctly babel webpack especially webpack damn smile ps problem webpack hot amp dev server production works fine development bad issue closed", "d": "3/2017"}, {"body": "say intention create wrapper component best course action extract remove new magic properties propsobject pass rest along dom element", "d": "3/2017"}, {"body": "syranide agree basically base forming hoc cuts synthetic events still would still comparing props check valid event particular element know whether valid event particular element words onchange valid event api check need populate list valid events check", "d": "3/2017"}, {"body": "api currently checking prop valid property dom element warn find unknown property rendered dom element extent likely go away future agree syranide extract custom props pass rest element", "d": "3/2017"}, {"body": "aweary thanks comment agree point said warnings since wo nt future think would make sense ignore warning", "d": "3/2017"}, {"body": "nt emitting warnings aweary showed", "d": "3/2017"}, {"body": "thanks issue ethanarrowood using together kind contradictory prop default value user nt actually required provide since already valid value would recommend either removing making optional since value already provided removing prop making required since default exists could provide proptype validation function warns prop value equal defaultvalue nt recommend defeats purpose default value since pattern nt recommended solvable user space going go ahead close hope helps", "d": "3/2017"}, {"body": "sorry dupe", "d": "3/2017"}, {"body": "dupe", "d": "3/2017"}, {"body": "could called occurs component mounted dom", "d": "3/2017"}, {"body": "hmm thought removed componentwillunmount still happening", "d": "3/2017"}, {"body": "timurtu pass listener like bind constructor pass directly instead wrapping arrow function calls could pass", "d": "3/2017"}, {"body": "oh okay like says setstate function", "d": "3/2017"}, {"body": "also tried binding gives error", "d": "3/2017"}, {"body": "would need set bind", "d": "3/2017"}, {"body": "worked ty", "d": "3/2017"}, {"body": "cases high order component needs prepare child instance gets created describe detail clear practical scenario describing", "d": "3/2017"}, {"body": "short answer generally useful outer component needs reference child instance gets rendered change needs happen either heavy makes sense long answer high order component adds support callback chains theming even mousekeyboard state tracking later passed template trigger animations using react motion make additions heavy rind prepares properties like lists handlers event proxies used raise handlers chain etc", "d": "3/2017"}, {"body": "end made anonymous class extending child simpler solution", "d": "3/2017"}, {"body": "hmm actually sure whether intended subarrays definition always lack keys nt warn seems like makes sense however nested elements lacking keys intuitively emit warnings also make sense emit warnings keys nt necessarily wrong nesting already nonobvious stuff entirely sure dev hopefully knows", "d": "3/2017"}, {"body": "likely keep move another package still import package settled name yet could look like coffeescript react require react createclass require reactcreateclass hypothetical name div require reactdomfactories hypothetical name view reactcreateclass displayname hello render gt div classname hello hello react moduleexports reactcreatefactory view two problems however export result calling bad pattern today react export component example call importing need declaring components coffeescript already supports classes inherit like suggested changes code would look like coffeescript react require react div reactcreatefactory div div reactdom works today div require reactdomfactories hypothetical name react class view extends reactcomponent render gt div classname hello hello react moduleexports view hope helps", "d": "3/2017"}, {"body": "thanks", "d": "3/2017"}, {"body": "berkaey might interested looking official coffescript", "d": "3/2017"}, {"body": "thanks molszanski", "d": "3/2017"}, {"body": "seems known looks like react used concatenate together string convert dom allows invalid css converting use createelement setting style property invalid style gets ignored dom", "d": "3/2017"}, {"body": "yep intentional never officially supported", "d": "3/2017"}, {"body": "good idea would good first pr", "d": "3/2017"}, {"body": "happy help issue", "d": "3/2017"}, {"body": "rogeliog cool feel free open pr ping questions", "d": "3/2017"}, {"body": "pr open comment others know already claimed", "d": "3/2017"}, {"body": "acdlite pr opened awaiting feedback rogeliog hope nt mind stealing issue bit extra time front screen evening", "d": "3/2017"}, {"body": "tomaszlakomygp sure", "d": "3/2017"}, {"body": "", "d": "3/2017"}, {"body": "lacker please provide direction", "d": "3/2017"}, {"body": "also setstate async nt need worry whether last setstate finished running running click event handler queued already clever manner", "d": "3/2017"}, {"body": "think basically appetite overhaul souptonuts tutorial fundamentally something involves stylistic decisions one designed match teach react internally facebook lot stylistic decisions aligned way focusing one example points feedback seem reasonable also somewhat matter opinion take differentlyopinionated feedback end something feels inconsistent react team ca nt maintain overall would suggest different way would prefer react tutorial work write put site use exact tictactoe example like like react tutorial explain react way react team thinks many react tutorials world adhere different principles good thing", "d": "3/2017"}, {"body": "thanks might would suggest making grid template render least programatically generated instead typing", "d": "3/2017"}, {"body": "dunno part seems ok big grid nt really need tic tac toe app extensible n x n keeps simple comprehensible like said stylistic github pull requests nt even ideal tool working writing like trying produce great novel via crowdsourcing encourage get write tutorial way better one", "d": "3/2017"}, {"body": "like said stylistic yes guess dunno part seems ok big grid nt really need tic tac toe app extensible n x n keeps simple comprehensible yes perspective must one look tutorial immediately know put array elements curly braces maybe really necessarily making flexible showing done done smaller modification well perhaps", "d": "3/2017"}, {"body": "docs state show use calling reassigning example additionally due way works javascript need bind event handlers constructor also described documentation hope helps", "d": "3/2017"}, {"body": "gaearon thanks prompt answer stated beginning question foot high level frustration read doc several times light bulb refused turned get read articles reread docs able create first app painful though like see regarding example need props argument constructor used function binding good lead went back refactored code changing handlers reading docs article stated binding functions render creates duplicate functions binding functions constructor creates one binding instance thanks help patience ps also watched videos pretty good", "d": "3/2017"}, {"body": "need props argument constructor used nt pass base class possibly assign constructor people get surprised available recommend passing consistency longer term hope class properties become part language currently proposal could assign without declaring constructor altogether see declared experimental syntax well autobinds need bind manually constructor similar methods work javac etc syntax proposal enabled default create react app please keep mind experimental", "d": "3/2017"}, {"body": "nice keeps code cleaner react making understand heck lot sheer brute force since tight schedule learn library move another platform put microsoft using tool chains microsoft basically chosen react basic ui library vs angular lightweight features tks", "d": "3/2017"}, {"body": "thanks dan play put use understand always looking shortcuts luiscarlos rodriguez dan abramov notifications githubcom sent monday march pm facebookreact cc l carlos rodriguez author subject facebookreact define create assign use engineer otherwise use either props property state class component button need props argument constructor used nt pass reactcomponent base class possibly assign thisprops constructor people get surprised thisprops available recommend passing consistency longer term hope class properties become part language currently proposal could assign state without declaring constructor altogether class counter extends reactcomponent state counter handleclick e gt epreventdefault consolelog button handleclick thissetstate counter see declared handleclick experimental syntax well autobinds need bind manually constructor similar methods work javac etc syntax proposal enabled default create react app please keep mind experimental receiving authored thread reply email directly view github mute thread", "d": "3/2017"}, {"body": "understand correctly want basically serverside textual content whereas clientside would essentially passive textual content replaced null react reuse whatever textual content already dom instead problematic many reasons one markupmismatch dom needs regenerated necessary textual content nt actually exist textual content may also modified translated enhanced etc serverbrowser make trickyimpossible correctly resume strip textual content components also assumes client logic requiring textual knowledge eg clientside word counter word lookup tool opinion feature nt really make practical sense react really useful massively passive pages intended usecase react also requires buildtool somehow able identify passive textual content inside react components strip active content substitute react sure would even work seems intuitively near impossible accomplish meaningful way imho solution case write page regular htmlpage render react interactive areasexamples way overlap minimal necessary react designed progressive enhancement designed rich interfaces nothing wrong breaking react documents render parts raw html using something else want also render passive content prefer raw html", "d": "3/2017"}, {"body": "sure might instances problematic cases apply one interaction canvas surfaces manipulation modify dom translation way letting client run translation print pages content locale dedicated page content appropriate particular locale afterthefact modification intended usecase react last thing want judge sites intended use want judge world actually uses react far pure ui management ca nt write regular html pages briefly considered quickly conclude would completely unmanageable ton processing needs done content option structure build system ultimately yields webpage reality written components easily managed isolation reality someone needs build framework web content internet tells use react babel webpack absolutely grant common use react also highly doubt one needs functionality first one filed issue immediately prompted two people indicate would appreciate functionality people already active repo miniscule fraction react users function works level creates pure html without way hook react back creates massively overly verbose markup increasing page size tapping react class property indicates whether component passive would extremely useful others could instance mark component active mark components passive get mix output generate reacthooking attributes applied markup associated active components react bundle hook without react also trying hook dom nt going change", "d": "3/2017"}, {"body": "sure might instances problematic cases apply one interaction canvas surfaces manipulation modify dom translation way letting client run translation print pages content locale dedicated page content appropriate particular locale afterthefact modification google chrome language translation way automatically many cases also extensions modify page content invasive ways react tags nodes ids consistently overcome invasive modifications page content without breaking intended usecase react last thing want judge sites intended use want judge world actually uses react far pure ui management people use outside intended purpose aware limitations exactly debatable scopefeature creep feature function works level rendertostaticmarkup creates pure html without way hook react back rendertostring creates massively overly verbose markup increasing page size impression wanted get rid textual content submitted twice first prerendered html later js bundle well concerned react nodeids markup suggest measure size compression compress well imho problem requesting reactdom apps number passive components always approach time also making implementation detail user responsibility make even single mistake mark nonpassive element passive ui break horrible upcoming fiberrenderer react might mean gracefully recover silently discarding rerender tree instead case may reasonable react drop nodeids well longer critical", "d": "3/2017"}, {"body": "google chrome language translation way automatically many cases also extensions modify page content invasive ways react tags nodes ids consistently overcome invasive modifications page content without breaking person runs extensions break websites react ca nt overcome dom manipulation reactincompatible form react failing would happy supply users website nt transfer twice means react wo nt try overcome external content manipulation impression wanted get rid textual content submitted twice first prerendered html later js bundle well concerned react nodeids markup suggest measure size compression compress well correct talking kb talking difference document gzip document gzip even compression difference appreciable least users targeting basically trying support people less well connected expensively connected parts world trying find ways reduce transfer size operational activity text gets rendered html either static markup react string ideally something react app served addition html ideally longer already sent text ideal setup react smart enough see react html case react strings able recreate needs order job without needing transfer bundle gzip heavier due content duplication course happily take react nt use specialized webpack loader like know loaders certainly nt expertise react time available dedicate writing loader", "d": "3/2017"}, {"body": "person runs extensions break websites react ca nt overcome dom manipulation reactincompatible form react failing would happy supply users website nt transfer twice means react wo nt try overcome external content manipulation site broken eyes correct talking kb talking difference document gzip document gzip even compression difference appreciable least users targeting imho overhead nt seem like big deal obviously perfect ideal setup react smart enough see react html case react strings able recreate needs order job without needing transfer bundle gzip heavier due content duplication like said previous post less impossible react runtime renderer knows nothing code even kind processing jsfiles would truly daunting task taking bunch jsfiles figuring strings inside components static would enormously complicated reading strings back dom hugely fragile react simply tool lowinteraction largedocument pages payload size concerns jquery instance would perfect tool like wrote design base page react render separately render interactive widgets ontop really far react go mind simply feasible even usecases would interested spending effort develop tooling course happily take react nt use specialized webpack loader like know loaders certainly nt expertise react time available dedicate writing loader reactdom one react frontend least fiber easily forked implementation either passive tagging simply one tag nodes virtue fragile like seems like smaller concern content duplication far important avoid", "d": "3/2017"}, {"body": "cc aweary nhunzaker jquense", "d": "3/2017"}, {"body": "would say probably unsupported pattern avoided provide capture listeners need eg issue call capture phase forces reactdominputupdatewrapper set checked property whatever newly updated value reset time toplevel event listener invoked since call issued capture phase occurs toplevel listener invoked would difficult know dom update would disrupt pending event dispatch may able implement warning situations like happy work back vacation want go route might much edge case worry", "d": "3/2017"}, {"body": "hehe aweary beat agree tho think falls outside reasonably supported use case hard address imagine usecase extremely nichey could talk bit need general gon na hurt preempting react event system", "d": "3/2017"}, {"body": "sure usecase managing library basic ui components eg need listen events outside component falls outside component basic scope want close interact something outside simple function subscribing event document root capture phase avoid prevented ideal worked fine point apart problems unittesting created issue mostly hoping save someone else time warning took quite figure suddenly place checkboxes returning wrong value created workaround resolve properly probably provide service handling documentlevel tasks context make use react event system bonus injecting service context make components using nicely testable yeah get issue playing dirty", "d": "3/2017"}, {"body": "might want check managed sort functionality reactoverlays think avoid issue tagging event anything bubble phase", "d": "3/2017"}, {"body": "great advice going close since unsupported pattern ways around regardless thanks much bringing attention", "d": "3/2017"}, {"body": "jquense thanks tip sure check", "d": "3/2017"}, {"body": "line locally", "d": "3/2017"}, {"body": "thats line csspropertyoperationsjs", "d": "3/2017"}, {"body": "looks normal hard say breaking likely unrelated react tell need see build setup tried use supported build environment like create react app", "d": "3/2017"}, {"body": "experimenting using react components benefit aurelia framework current application support virtualization well react experimental try using aureliareactwebpack try create virtualizedlists components decided install following packages react reactdom babelloader babelpresetreact lodash added following configuration webpack file anyways paste whole code module loaders test scss loader extracttextpluginextract fallbackloader styleloader loader cssloader sourcemap sassloader outputstyleexpanded amp sourcemaptrue amp sourcemapcontentstrue publicpath test js exclude nodemodules loader babelloader query plugins transformdecoratorslegacy presets loose true modules false cachedirectory true test jsx loader babelloader exclude nodemodules query presets react test json loader jsonloader test css loader extracttextpluginextract fallbackloader styleloader loader cssloader publicpath test html loader htmlloader exclude pathjoin metadataroot indexhtml test pnggifsvgjpg loader url query limit name images hash ext babelrc following", "d": "3/2017"}, {"body": "take look project reproducing copy pasting configs trying make work hopes reproducing issue unlikely experience take much time ready", "d": "3/2017"}, {"body": "since response yet reproduction issue us check going go ahead close hmarcelodn mentioned likely build tooling issue issue react put together small test case reproducing issue help determine issue stems", "d": "3/2017"}, {"body": "tried demo nvda firefox workedcould please provide nonreact version ensure issue caused react", "d": "3/2017"}, {"body": "made investigation issue found problem version reactjs new jsfiddles nt work works", "d": "3/2017"}, {"body": "confirm regression scenario", "d": "3/2017"}, {"body": "reason implementation changed reproduced issue using plain js sure whether fixed react though", "d": "3/2017"}, {"body": "yeah would recommend seeing existing issue exists nvaccessnvda filing one nt scenario support possible thanks bringing though dszymczuk", "d": "3/2017"}, {"body": "mentioned nvda issue", "d": "3/2017"}, {"body": "hmm nt want mutate dom disabled field state want use rendering", "d": "3/2017"}, {"body": "use see", "d": "3/2017"}, {"body": "calling act identically renders triggered react recreate element case watch devtools oliverjash tried demo see events working fine using chrome specific browser issue also sounds like using trigger render actual application using rerender application recommend avoiding cases", "d": "3/2017"}, {"body": "aweary please see gif demo demo see vanilla event listener logged react event listeners button becomes disabled updated code", "d": "3/2017"}, {"body": "oliverjash verify browser using ca nt reproduce chrome reproduce chrome looks browserspecific button focus behavior well defined inconsistent browsers example using example plain javascript neither firefox safari osx fire events buttons sure normalize behavior yet probably also worth noting listening event element receive focus default chrome seems ignore notice example nt work firefox safari osx even nt set resolve need set div lets receive focus", "d": "3/2017"}, {"body": "verify browser using using chrome dev channel button focus behavior well defined inconsistent browsers example using example plain javascript neither firefox safari osx fire focus blur events buttons sure normalize behavior yet probably interesting nt realise also worth noting listening blur event div element receive focus default chrome seems ignore blur event bubble div listened using event capturing way opposed way would expect using follow behaviour chrome event model", "d": "3/2017"}, {"body": "oliverjash tough problem reason chrome event ignored explicitly ignore events reconciliation occuring react internal transaction system make sure updates atomic new transaction initialized calls nt get bunch events might dispatched react messing dom since chrome event dispatched right react updates attribute transaction closed gets ignored support would special case scenario quite sure yet way well", "d": "3/2017"}, {"body": "seems job track currently focused element reconciliation restore reconciliation unable restore focus silently ignore focusnode operation fails dispatch blur event since know blur must happened result reconciliation case", "d": "3/2017"}, {"body": "think fine special case already special case focus management nt plan atm possibly introducing pivot points reconciler avoids touching active trees nt need manual focusselection management however even requires us special case focus pivot point seems pretty inherent need something like special case regardless", "d": "3/2017"}, {"body": "seems job reactinputselection track currently focused element reconciliation restore reconciliation unable restore focus silently ignore sebmarkbage happy work adapting something also supports focus focusnode operation fails dispatch blur event since know blur must happened result reconciliation case event consistently dispatched browsers would create native event cases afaik react nt moment synthetic events created trusted native event acceptable unless missing already happening", "d": "3/2017"}, {"body": "issue native event object nt always representative native event basically event type eg get keyboard event react event think probably fine let native event case", "d": "3/2017"}, {"body": "agreed want fix think intended meaning inside matters call custom prop component", "d": "3/2017"}, {"body": "pick one else jumping", "d": "3/2017"}, {"body": "react build ready browser probably want development production said recommend trying create react app cohesive supported learning experience", "d": "3/2017"}, {"body": "add autocompletetype right line also add list supported props", "d": "3/2017"}, {"body": "seem standard point standard", "d": "3/2017"}, {"body": "afaik proposal never became standard chrome implemented replaced autofill uses attribute react already whitelists", "d": "3/2017"}, {"body": "findings well", "d": "3/2017"}, {"body": "ok get working paymentjs repo recommends approach see got confused", "d": "3/2017"}, {"body": "usually means somewhere swallowing exception coming code see reproduce reliably sure swallowing exceptions please create minimal project demonstrating problem posting snippets code nt helpful unfortunately thanks", "d": "3/2017"}, {"body": "going close tens issues like always due swallowed exceptions happy reopen provide reproducing case nt swallow errors", "d": "3/2017"}, {"body": "rn apps get rejected using rn course apple reject app match requirements", "d": "3/2017"}, {"body": "create tiny example demonstrating problem exactly clear struggling want pass additional props received children yes another option pass function like prop list call back data seen tried solve hard help fix issues", "d": "3/2017"}, {"body": "gaearon thanks reply man work example essentially list communicate listitem amp without going way back parent think antipattern parent nothing interaction", "d": "3/2017"}, {"body": "seem accounted cloneelement jsx interface element adding props way rendered element", "d": "3/2017"}, {"body": "yea noted render callbacks another way way could pass additional data function would use data return elements", "d": "3/2017"}, {"body": "jsx works change work fine explanation", "d": "3/2017"}, {"body": "support questions please visit appropriate venues use issue tracker bugs react core also clear exactly asking", "d": "3/2017"}, {"body": "sorry create issue thank u answer question much", "d": "3/2017"}, {"body": "worries discord good place get help", "d": "3/2017"}, {"body": "thank u much got", "d": "3/2017"}, {"body": "cc trueadm", "d": "3/2017"}, {"body": "sebmarkbage could optimize use lightweight blueprint kind like inferno used work earlier versions better inferno went overkill optimization example fairly common property ca nt avoid creating time instead pass parameter given told first argument always bail noncommon props example element although intelligent compiler might analyze code say hey every element seems heavy usage prop let hoist imagine could generalize common props would passed possibly expect improve runtime perf reduce bundle size parse times", "d": "3/2017"}, {"body": "trueadm inferno go overkill optimization know blueprints nt used anymore wonder went", "d": "3/2017"}, {"body": "hi seems like impression something react adds prop types runtime really convention builtin prop types support want functionality custom prop types add example add custom validators js factory function also called higherorder function function createcustomproptype isrequired factory returns custom prop type return function props propname componentname const prop props propname prop null prop missing isrequired prop required nt specified throw error throw new error prop optional nothing else put validation logic using factory create two different versions prop type const customproptype createcustomproptype false customproptypeisrequired createcustomproptype true work mycomponentproptypes optional customproptype required customproptypeisrequired essentially react builtin prop types hope helps", "d": "3/2017"}, {"body": "thanks acdlite exactly looking right impression react sort runtime analysis tidbits think worthwhile update docs regard example posted something along lines think", "d": "3/2017"}, {"body": "hey szhongren thanks report tested component firefox using react devtools assuming mean react debug appears displaying elements fine would make sure latest version react devtools installed also devtools separate project issue tracker facebookreactdevtools would recommend post instead provide reproducible test case look", "d": "3/2017"}, {"body": "ah ok thanks work reproducing post", "d": "3/2017"}, {"body": "tutorial says try changing opening tag returned render function square class ask change whole expression opening tag", "d": "3/2017"}, {"body": "cc lacker came many times think rephrase", "d": "3/2017"}, {"body": "gaearon oh right bad", "d": "3/2017"}, {"body": "worries part confusing think people attempted fix least three times", "d": "3/2017"}, {"body": "think people attempted fix least three times rather impressive sunglasses fwiw got right comment maybe needed something like whole expression", "d": "3/2017"}, {"body": "hi mincepie believe render fn square take look starter example codepen line", "d": "3/2017"}, {"body": "immediately obvious code along tutorial point square class changes class square extends reactcomponent constructor super thisstate value null render class square extends reactcomponent render time later functional components becomes function", "d": "3/2017"}, {"body": "hi bug tracker rather support forum encourage check suggested support channels help issues like cheers", "d": "3/2017"}, {"body": "code would fire mounting happened however see mounting actually part page dom therefore component dom node also document even though mounted container use documentbodycontains node check something document", "d": "3/2017"}, {"body": "hey franzsee react uses synthetic event system lot behindthescene work normalize events across browsers likely run strange issues try trigger native events manually like specific use case need support also tested appears work trying get working specifically worth nothing react longer supports", "d": "3/2017"}, {"body": "hey benjamingr static properties base classes may work using inheritance higherorder components use composition instead recommend well see doc page composition vs inheritence mixins harmful blog post details recommend look examples doc page see hoc never actually base class wraps new class renders base class hope helps", "d": "3/2017"}, {"body": "check using minified version nonminified version also bit confused seeing something client side app using server rendering", "d": "3/2017"}, {"body": "gaearon project working", "d": "3/2017"}, {"body": "far unable run project reason two webpack modules id tried using something official like create react app instead configuring webpack hand hard help seems something wrong webpack configured project nt know", "d": "3/2017"}, {"body": "wanted setup working last year sure changed lane probably related module version breaking thank gaearon looking", "d": "3/2017"}, {"body": "removed files causing troubles sure webpack bug game appears run fine going assume something build toolchain causing issue problem react please use create react app supported experience", "d": "3/2017"}, {"body": "oh ok fix shift create react app thank", "d": "3/2017"}, {"body": "ask reupload project webpack folks interested digging broke", "d": "3/2017"}, {"body": "also convenient meantime interested seeing stats look like verbose flag gaearon still locally could share screen cap", "d": "3/2017"}, {"body": "thelarkinn forgot local copy still go archivezip", "d": "3/2017"}, {"body": "awesome make bandwidth tonight", "d": "3/2017"}, {"body": "gaearon fwiw archive builds runs fine albeit looking like screenshot feeling uploaded archive may version without scss files causing issues thus overly helpful thelarkinn may wrong course thought better say something case", "d": "3/2017"}, {"body": "oops right version changes archivezip", "d": "3/2017"}, {"body": "see goal repo layout lerna style repo layout one package reconciler core etc depend separate package like since nt let renderers release new versions separately without lockstep main package packages like depend devdependency prepublish actually compile bundled flat bundle copy eg rollup includes entirety allows us dce inline renderer specific pieces renderers strong dependencies sure fully support dependency shared outside devdependencies since might global state safe share two renderers time compiling single package avoids problem", "d": "3/2017"}, {"body": "could also expose build tooling rollup dce toolchain buildtime dependency like create react app way could share setup thirdparty renderers", "d": "3/2017"}, {"body": "basically mkdir myrenderer cd myrenderer npm init npm install savedev reactrendererscripts edit hostconfigjs write renderer nodemodulesreactrendererscripts build hostconfigjs produces umds buildmyreactrendererjs buildmyreactrendererminjs", "d": "3/2017"}, {"body": "awesome thanks sebastian dan future step intended initial publishing blocking issues need land tackled", "d": "3/2017"}, {"body": "wild suggestion nt know going way going start working flat bundle infra next week trueadm keep posted", "d": "3/2017"}, {"body": "workaround achieves expected behavior consumer react define little polyfill file imported others expect many people run issue looks like", "d": "3/2017"}, {"body": "could fix lazily initializing polyfill think seems unfortunate merely importing likely components runs whole client reconciler init code", "d": "3/2017"}, {"body": "could reproduce using fiddle ie ver", "d": "3/2017"}, {"body": "use ver", "d": "3/2017"}, {"body": "ie ver able reproduce thing use keyboard shortcut ctrlv update however using right click paste trigger updating also noticed press small x end input box wo nt trigger update either edit added native event listener input check event type looks like right clicking paste ie dragevent type paste chrome firefox clipboard event type paste leaving could small hint addressing bug updated fiddle used", "d": "3/2017"}, {"body": "official doc maybe mean argument optional type see second argument props third props object", "d": "3/2017"}, {"body": "monkindey know mean api doc usually thisbut point babel converts array instead append argument would better avoid step create array copy elements mark step using red rectangle link check", "d": "3/2017"}, {"body": "sorry misunderstanding maybe helps", "d": "3/2017"}, {"body": "hello", "d": "3/2017"}, {"body": "hello mar pm notifications githubcom wrote hello receiving subscribed thread reply email directly view github mute thread", "d": "3/2017"}, {"body": "lets us differentiate multiple children explicitly written jsx js vs multiple children passed array js itemsmap item gt distinction useful silently infer values index first case since know user wrote statically emit warning missing second case since likely generated dynamic data perfect heuristic works well experience hope helps", "d": "3/2017"}, {"body": "gaearon thanks explainationso mean babel convert syntax trigger warning key react ca nt automatically assign every element array react treat arrays dynamic data like use ca nt differentiate even though wrote statically like wrong please let knowthanks", "d": "3/2017"}, {"body": "yes", "d": "3/2017"}, {"body": "til thanks gaearon related code found reactelementvalidatorjs", "d": "3/2017"}, {"body": "first snippet looks perfectly fine nt see first snippet code project provided clarify three different code snippets two post one commit provided expect work fails please update project show failing version could take look reliably reproduce confuses", "d": "3/2017"}, {"body": "cyberhck missing argument props constructor pass props super try console log instead", "d": "3/2017"}, {"body": "first example compile error extra matched fix extra parens works fine definitely something like component props change time way risk stale props always use render particular commit problem explained passing undefined constructor finishes passed would problem case write code way use everywhere assign instance fields closing see bugs react recommend read official documentation get comfortable react many runnable codepen examples hope helps", "d": "3/2017"}, {"body": "ahh stupid thanks works looks like faulty constructor otherwise first snippet working fine thanks gaearon", "d": "3/2017"}, {"body": "codebase overview implementation notes give initial context currently rewriting core scratch one reasons much code removing quite lot soon hope helps", "d": "3/2017"}, {"body": "gaearon thank dan read codebase overview implementation notesbefore image internal way like enter key according rules eg enter even convenient visual operations answer rofl another question want read contribute react fiber read contribute watch youtube videolater read react fiber architecture umbrella remaining features details notice also many content old architecture reconciliation want know necessary learn go learn fiber", "d": "3/2017"}, {"body": "system usually want find something search project matching name think beneficial learn work fiber complicated", "d": "3/2017"}, {"body": "gaearon thanksye usually search github ide find results much filter find result want little difficult waste timebut answer believe know codebase architecture time goes familiar thanks", "d": "3/2017"}, {"body": "nt plan make changes transitiongroup repository please contribute instead thanks", "d": "3/2017"}, {"body": "look", "d": "3/2017"}, {"body": "problems arrows events prevent shallow comparison optimizations components affect refs part props creating new function per se expensive modern engines makes little difference aside perfsensitive cases extra work react needs detach attach ref function changes worry worrying makes app slow dozens things slow app matter however determined specifically problem profiling app sure using arrow may help", "d": "3/2017"}, {"body": "gaearon thanks dan sorry forget refs part props make consider another question attributes part props except refs last question days ago notice reactpurecomponent src code nt implement compare function mean like purerendermixin know wii deprecated soon know implement nt know find src code could tell thanks", "d": "3/2017"}, {"body": "make consider another question attributes part props except refs nt know find src code could tell yea sets flag react reads current react version implements next react version check note flag public api may change future", "d": "3/2017"}, {"body": "gaearon thanks finally reason post issue forget refs part props nt mean creating new function per se expensive modern engines read lot twiiter know explain many times performance hope issue make plaint oh god say many times function call create objects key performance project issue still misunderstand performance good day", "d": "3/2017"}, {"body": "haha worries happy chat", "d": "3/2017"}, {"body": "use instead push", "d": "3/2017"}, {"body": "im pushing value array", "d": "3/2017"}, {"body": "mean nt leave use source truth nt need pass values another object got", "d": "3/2017"}, {"body": "sure trying pushing nt look like idiomatic react code particular problem works javascript calling inside function different component either capture variable bind function use arrow function syntax preserve article explains works javascript closing bug react question javascript recommend asking stackoverflow support forums use github issues tracking bugs react cheers", "d": "3/2017"}, {"body": "im new react dont know state use used making single object please let know state props react", "d": "3/2017"}, {"body": "ghayyas follow documentation", "d": "3/2017"}, {"body": "alright got resolved instead question", "d": "3/2017"}, {"body": "explained using arrow function capture value please read arrow functions resource like mdn cheers", "d": "3/2017"}, {"body": "hey thanks question unfortunately entirely sure asking ca nt provide clear answer also use issue tracker bug reports feature requests support usage question recommend using one many communities oriented around stackoverflow reactiflux discussreactjsorg hope helps good one", "d": "3/2017"}, {"body": "really react intended work throw relevant warning", "d": "3/2017"}, {"body": "think clear enough shows console property type invalid start prop type function proptypes object", "d": "3/2017"}, {"body": "augustomoura rightbut point nt know react treat undefined func check confused maybe spend lot time figure especially new peopleand doc nt mention agree already know easy realize error meansbut new people friendly", "d": "3/2017"}, {"body": "hi neeksandhu related code reactcompositecomponent information", "d": "3/2017"}, {"body": "found cdn links worked well retrieving dist build files absence release zip event issue fell cracks pinging gaearon", "d": "3/2017"}, {"body": "particular reason find zip useful files always available npm unpkg", "d": "3/2017"}, {"body": "particular", "d": "3/2017"}, {"body": "added manually release adding future releases", "d": "3/2017"}, {"body": "particular reason find zip useful reason used zip habit noticed could use unpkg instead thanks taking look", "d": "3/2017"}, {"body": "got thanks added note release process attach next time", "d": "3/2017"}, {"body": "sorry late answer using zip files using update newer versions nt know unpkgcom learned thanks adding files release koen", "d": "3/2017"}, {"body": "aweary hi find doc refsandfunctionalcomponents may use ref attribute functional components nt instances think edited may use ref attribute functional components nt instances actually internal take care much", "d": "3/2017"}, {"body": "understanding broad nonassertion obligations react license patents qiita", "d": "3/2017"}, {"body": "yupp recommend using reactdevtools inspecting debugging react applications", "d": "3/2017"}, {"body": "aweary think worth solving", "d": "3/2017"}, {"body": "could provide another oneventname authentic change event textemailpassword inputs instead discarding useful simple updates get fired blur enter", "d": "3/2017"}, {"body": "seems resolved edge", "d": "3/2017"}, {"body": "jdalton thanks update think close since unlikely could want make changes fix older edge versions", "d": "3/2017"}, {"body": "concur non issue also think would open pandora box go shape also handle similar situations etc also agree comments pointer right direction enough extra details worth effort", "d": "3/2017"}, {"body": "checking value possible type could define mismatch score based following rules type agrees value give score type disagrees value top level eg give score type average scores fields type take minimum score among cases type take maximum score among items propagate scores could carry forward manipulate error message end output error message likely helpful user acknowledge pretty heavyweight approach worth thinking carefully whether actually worth effort", "d": "3/2017"}, {"body": "honestly experience software developer proposed revisions message already works revisions would need go extensive review difficult say whether detailed message adds anything smart thing leave alone rather sink bunch time", "d": "3/2017"}, {"body": "niole arshabh reasonable argument perhaps issue closed case", "d": "3/2017"}, {"body": "agree risk surface effort required achieve result weighs reward much justify going ahead also feel closed", "d": "3/2017"}, {"body": "agree points made nonissue close", "d": "3/2017"}, {"body": "gaearon nt need bind function turn arrow function make access correct", "d": "3/2017"}, {"body": "yea think right need", "d": "3/2017"}, {"body": "maybe p nt remember whether react takes care call right instance try let know", "d": "3/2017"}, {"body": "tested make sure undefined apart works perfectly fixed snippet also added missing", "d": "3/2017"}, {"body": "thanks fixed comment people nt get confused", "d": "3/2017"}, {"body": "plan revive licensing react library right patents added along bsd licensing become debatable topic many enterprises back foot using react reason", "d": "3/2017"}, {"body": "salmankhann sure see latest thinking know seen threads believe everything say already including reach still want argue would appreciate technical threads derailed demotivating thanks", "d": "3/2017"}, {"body": "noticed added list proptypes used context plans changing context api", "d": "3/2017"}, {"body": "curious proptype checking really necessary context seems like merely opting key would sufficient simplify api", "d": "3/2017"}, {"body": "probablyup plans rethink context wo nt happen near future", "d": "3/2017"}, {"body": "acdlite thanks got use proptypes context like need install separated package proptypes using context js import react react import proptypes reactproptypes something const box text theme gt boxproptypes text proptypesstring boxcontexttypes theme proptypesstring", "d": "3/2017"}, {"body": "posted plan addons", "d": "3/2017"}, {"body": "first another round thanks react team sebmarkbage gaearon tomocchino others discussing issue us open talking us performance amp mobile blinkon syncs quarter status check per aweary yellow box solution particular problem put hold react highprio work gets completed still happening needs land implemented fiber good public api exposing hooks also needs crafted keeping fingers problem appears still prevalent quite production apps come across desk still shipping dev mode production see debug string builds tombraidercom dawnofwarcom threadcom sothebyscom still view preyellow box move logging dev mode warning console might impact sebastian suggestion throwing console error crash reporting might pick also something felt worth consideration else move needle better advocacy happy commit continuing advocate folks shipping dev mode production want see land official solution post shortterm looks like good place help new projects avoid problem improvements installation docs everyone else would support including clear visible callout heading reminding folks mindful dev mode production user nt feel great incentive read first glance otherwise thoughts", "d": "3/2017"}, {"body": "main reason team use production build ca nt run js unit tests since test utils included confused running tests production website prevents using production build production website development build development", "d": "3/2017"}, {"body": "everyone else would support including clear visible callout installing react heading reminding folks mindful dev mode production sure want send pr", "d": "3/2017"}, {"body": "sure want send pr happy", "d": "3/2017"}, {"body": "maybe word benchmarks would nice help educating compare perfs react dev mode", "d": "3/2017"}, {"body": "hi like add also wish key exposed mainly able unit test components key since wrong missing key break ui especially useful generated key based props happens mainly lists might items nt unique id use", "d": "3/2017"}, {"body": "michelebertoli also similar issue well kind tests render components use different generators therefore get ids conflicts reported funny thing get conflict even render component two utils difference generated text elements generates incrementally getnextdebugidjs uses parent id opposite sign still sure got whole thing right though anyway agree case pretty edgy", "d": "3/2017"}, {"body": "flik still issue", "d": "3/2017"}, {"body": "thanks", "d": "3/2017"}, {"body": "looking issue believe dupe probably closed", "d": "3/2017"}, {"body": "patch included react tried problem still real problem feel free close issue intention report strange behavior", "d": "3/2017"}, {"body": "contributor looking issue affecting application looks like commit fixed tagged one alphas confirm upgrading alpha fixed performance issues seeing", "d": "3/2017"}, {"body": "shortenda tried latest alpha problem gone close issue thanks info", "d": "3/2017"}, {"body": "released github branch display commits messed alpha completely rewritten maybe nt hit bad path would nice learn causing like reopen least investigate time future confirm causing", "d": "3/2017"}, {"body": "interesting may make sense mstijak provide react code wrote", "d": "3/2017"}, {"body": "monkindey unfortunately difficult isolate pure react example working framework uses react rendering provides features top eg twoway data binding want run example machine clone cx repo start application using", "d": "3/2017"}, {"body": "think maybe line code according documentation mention last problem syntax different callback created time loggingbutton renders", "d": "3/2017"}, {"body": "monkindey read original post find strange behavior happens type number first input field first time creating event handlers render cycle optimal nt explain delay happening something else going", "d": "3/2017"}, {"body": "bit stuck one modify react flags via query strings mechanism quickly switch fiber standard dom renderer react expose ability touch feature flags umd build", "d": "3/2017"}, {"body": "jquense aweary added names next checklist test cases write based work progress created work feel free remove names", "d": "3/2017"}, {"body": "nhunzaker sounds good claimed unclaimed ones", "d": "3/2017"}, {"body": "think react treat nested setstate calls sequential setstate calls useful atomic state update simplified example js import react component react class app extends component state count click gt thissetstate state gt const newcount statecount thisload newcount return count newcount load count gt thissetstate initialized true loading true fetch something count gt thissetstate loading false render return jsonstringify thisstate export default app second click uncommenting commented line leads updating stateloading", "d": "3/2017"}, {"body": "anvish could nt achieve result calling within optional callback argument javascript import react component react class app extends component state count click gt thissetstate state gt const newcount statecount return count newcount initialized true loading true gt thisload thisstatecount load count gt fetch something count gt thissetstate loading false", "d": "3/2017"}, {"body": "abfx looked found still render server without extra dom attributes documentation need updated try cloning changing lines serverjs following see items server rendered without dom attributes", "d": "3/2017"}, {"body": "zpao close issue original question still possible render server without extra dom attributes answer yes means documentation nt need updated", "d": "3/2017"}, {"body": "yes close thanks sugargreenbean triage generate string without extra attributes currently generate string every node used behavior browser well however starting rendering browser changed things work skip specifically strong association dom nodes created nt generate string markup server string keep mind plan mounting dom made serverside rendering actually want one inline allows us reuse existing nodes mount something generated entire dom tree get thrown away potentially dangerous form elements ps actively involved project days gaearon probably best bet want quick response somebody latest knowledge", "d": "3/2017"}, {"body": "looks like fix merge rebased hopefully get", "d": "3/2017"}, {"body": "hi leondragan still face issue reorder transform plugin added thanks", "d": "3/2017"}, {"body": "issue dev mode production mode adding fixes bug", "d": "3/2017"}, {"body": "fixed", "d": "3/2017"}, {"body": "workaround handle error", "d": "3/2017"}, {"body": "thecodejack require changing react", "d": "3/2017"}, {"body": "yeah also ended convincing authors webcomponent allow mutability case sat mar pm frankie bagnardi notifications githubcom wrote thecodejack require changing react receiving authored thread reply email directly view github mute thread", "d": "3/2017"}, {"body": "ok also attached noop function objectfreeze used web components handled issue", "d": "3/2017"}, {"body": "", "d": "3/2017"}, {"body": "closing favor", "d": "3/2017"}, {"body": "", "d": "3/2017"}, {"body": "gaearon want work doc troubleshooting common issues explain right away like wrong element casing loaded dom container missing react scope etc see inspiration still open contribution", "d": "3/2017"}, {"body": "think troubleshooting doc often good idea topic broad like everything react hard core team keep date since good way detecting particular troubles later resolved also hard people find since rarely debugging troubles searching troubleshooting doc react website instead common issues lead people finding bug fixing people likely look somewhere like stack overflow search find heavilyseo site like stack overflow suggestion would run troubleshootingtype troubles try put stack overflow rather react docs specific troubleshooting section like troubleshooting using web components might useful put existing guide pages", "d": "3/2017"}, {"body": "know experience troubleshooting doc least redux incredibly helpful fixing commonly asked questions think would huge win react even documents promises swallowing errors inside solution use carefully updating right solution use updater overload solution use arrows bind property initializers", "d": "3/2017"}, {"body": "ok sound like pretty interesting list things read linearly actually", "d": "3/2017"}, {"body": "also good candidate troubleshooting basically nt state update often comes data derived wrong place especially props used old docs yanked", "d": "3/2017"}, {"body": "animation react motion perhaps animation general broad topic many parts hard implement react first glance problems run due reconciliation hardimpossibleveryhardtocontrol animate removal component animate removalchangingreordering list animations animate changes components reuse underlying dom structure undoubtedly others reparenting quite often mentioned twitter give quick example keep components stateless clarity code js appjsx let observablestate login const loginform gt return login password const registerform gt return login password access code const app gt observablestate login return else observablestate signup return reactrender switching forms react removeadd access code update button text handlers quite questions animating animate one form disappearing another appearing rely handle props animate disappearing appearing switching forms controlled animate removal component moreover sprouts third input longer removedadded updated like rest elements etc etc anyone figured stuff would great service community describe deal situations react larger community whole problem exists similar frameworks snabbdom virtualdom inferno", "d": "3/2017"}, {"body": "need use react router show use setstate history api point rr componentbased api might generate backlash community name implies directly endorsed andor supported react team however version major backwards incompatible changes api leaving many developers hanging ca nt find big discussion right may cleaned keep civil upd editing issue add context bring line comments documentation review routing libraries react router known introduce major breaking changes deprecation policy promotes bad coding practices see issue example multiple unaddressed issues past ignored despite active community requests search named routes probably starting early linked issues also worth read definitely", "d": "3/2017"}, {"body": "tiny possible typo referencereactmd code reactchildrencount omits react could slightly confusing newcomers jayjaycross want fix typo create pr", "d": "3/2017"}, {"body": "kkemple go", "d": "3/2017"}, {"body": "", "d": "3/2017"}, {"body": "need never helped anybody far looks like application bug rendering components recursively evidence suggest otherwise experience problem want see fixed best publish project reproducing problem link project issue since reproducing example long time closing application bug happy reopen show bug react", "d": "3/2017"}, {"body": "also encountered problem ajainarayanan pointed adjusted html solves problem", "d": "3/2017"}, {"body": "would agree simplicity creates could nt think impact reconciliation lets say root component simple string actually help diff algorithm passing keys elements diffing algorithm work based type elements without elements guess would tough", "d": "3/2017"}, {"body": "interested see could drop part name altogether async versions looks cleaner longer need define component paradigm obvious means smaller bundles gt async throws returned gt sync gt deprecated functions gt async throws returned gt sync gt deprecated functions bothered actual names believe making clear distinction bit like node async vs sync makes lot sense well understood pattern", "d": "3/2017"}, {"body": "swapping related insertion order juggle react ieedge perf", "d": "3/2017"}, {"body": "wish would least one example somewhere docs copypaste instead historical perspective changed addons deprecated still copypaste code old addons docs ca nt get new stuff", "d": "3/2017"}, {"body": "sure mean open optimizing performance code example looking different page", "d": "3/2017"}, {"body": "wrote simple blog post explaining purecomponent hope helps", "d": "3/2017"}, {"body": "recommended heuristic detect wo nt work order take different code path try catch could work nt clear edit elaborate component library mocking inside library least option", "d": "3/2017"}, {"body": "fully address think closed", "d": "3/2017"}, {"body": "state issue still encountering", "d": "3/2017"}, {"body": "nksfrank believe plan ship", "d": "3/2017"}, {"body": "addressed merged number input pr leave ticket open nt know protocol closing tickets release fix published", "d": "3/2017"}, {"body": "cc aweary realized ca nt close", "d": "3/2017"}, {"body": "thanks putting proposal together treshugart think would great frameworks supported contract custom element set everything property including events traditional html attributes react preact js class customelement extends htmlelement set props props let prevprops thisprops check prevpropsonsomething propsonsomething check prevpropsarialabel propsarialabel thisprops props debounce thisrender get props return objectassign thisprops ce setter add event listeners set attributes necessary call equivalent function ce also support setting props attributes long knows deserialize mostly declarative html documents example declarative html html like setup simple single setter drastically reduces boilerplate ce authors supports async upgrades ce constructor something like expensive deserialization race conditions properties source truth curious guys thoughts cc addyosmani robdodson developit justinfagnani", "d": "3/2017"}, {"body": "nt use oninput alternatively makes hard typing language japanese chinese languages needed select convert typed characters determine word phrase oninput event sometimes happens determine word finishing converting characters", "d": "3/2017"}, {"body": "changeset fix become stale never got buy correctness fix", "d": "3/2017"}, {"body": "andersekdahl longer issue twitter follow button using react also tried reproduce without success think close", "d": "3/2017"}, {"body": "issue left following took time find easier find future arbeitsbekleidung props gt ps today issue indirectly nested valid html move element get unable find element id error const props gt", "d": "3/2017"}, {"body": "solved problem style inline", "d": "3/2017"}, {"body": "switched using oninput broke amp following disgusting hack ended fixed yuck import ieversion utilbrowserdetection export default function getinputonchangeprops handler return ieversion oninput handler onchange handler", "d": "3/2017"}, {"body": "also want follow post august last year months waiting last year hoped far away however assumptions seems wrong would nt super yucky thing ok constantly answer question ca nt fix", "d": "3/2017"}, {"body": "frontendphil maybe note", "d": "3/2017"}, {"body": "anyone else stumbles across issue submit form element need dispatch submit event example", "d": "3/2017"}, {"body": "updates issue implemented controlled inputsforms instantly first defect qa reported maybe workaround could implement code unfortunately main browser customers use without proper autocomplete support might revert react based forms something else creating kind frankenstein monster react components rendering nonreact forms", "d": "3/2017"}, {"body": "simonvizzini ran problem running selenium tests test would type search box onchange event triggered react problem qa experiencing hack add onkeyup listener input selenium test could correctly insert text", "d": "3/2017"}, {"body": "bug happens using decimal input type number adding decimal number problem removing decimal places number removing first decimal place prior removing decimal decimal disappears cursor jumps beginning input instance value type value event event though input controlled allowed remain input value delete value event decimal disappears cursor jumps start", "d": "3/2017"}, {"body": "see", "d": "3/2017"}, {"body": "addressed merged number input pr", "d": "3/2017"}, {"body": "wow thread thank", "d": "3/2017"}, {"body": "issue react ssr", "d": "3/2017"}, {"body": "add new webpackdefineplugin processenv nodeenv jsonstringify production still show warning looks like using minified copy development build react deploying react apps production make sure use production build skips development warnings faster see details anyone tell resolve problem", "d": "3/2017"}, {"body": "also getting message production despite envifying", "d": "3/2017"}, {"body": "keep getting even added new webpackdefineplugin processenv nodeenv jsonstringify production run build crossenv nodeenvproduction webpack progress colors p even run webpack p defineplugin settings still im getting warning", "d": "3/2017"}, {"body": "found passing p webpack fixes error webpack longer looking nodeenv", "d": "3/2017"}, {"body": "plan relax warning see problem build shipping lot unnecessary code users react also slower development mode instructions popular bundlers still problems please provide project somebody might help thread cheers", "d": "3/2017"}, {"body": "webpack longer looking nodeenv webpack never looked need manually specify described", "d": "3/2017"}, {"body": "see problem build shipping lot unnecessary code users even read description issue first comment hell cases like described problem build one shipping unnecessary code users completely unreasonable reason close issue", "d": "3/2017"}, {"body": "yes missed clarification first comment nevertheless every single comment thread legitimate issue attempts circumvent nt want people get wrong impression since issue open warning could false positive vast majority people except legitimate issue fixed builds might provide minified development build nt decided yet changing build process could cc trueadm please keep mind request special nt reflect majority people issue discussing finally need rude sat next would also yell please tone comments future even disagree something made mistake need use caps hell thanks", "d": "3/2017"}, {"body": "finally need rude sat next would also yell please tone comments future even disagree something made mistake need use caps hell thanks completely right character respond like looking back sure reacted way sorry apologise bowingman", "d": "3/2017"}, {"body": "japgolly running via nodenpm via umd bundle tooling run client server via node", "d": "3/2017"}, {"body": "fixed issue combination running webpack p using uglify plugin causes issue omitted p running build im using uglify plugin fix issue", "d": "3/2017"}, {"body": "similar issue resolved soon closed firebug window could nt get root cause least might help others well took hours find", "d": "3/2017"}, {"body": "confirm joshunger observation happens uncaught exception see thing react chrome ie console shows trace three times row luckily display error caused bug able locate bug fix", "d": "3/2017"}, {"body": "joshjg gaearon recently chrome team changed approach documentlevel touch events making passive default since react attaches events documentlevel get new behaviour see indirectly changed way react behaves suppose react explicitly mention attaching events hence change behavior hit well need register touch events hand addeventlistener", "d": "3/2017"}, {"body": "jimfb ideal basically reencoding logic unmounting tree components deepest child data type unnecessary error prone boilerplate want clean component children unmounted principle seems like reasonable thing want nt think reasonable rebuild lifecycle method externally additionally always option rewriting data store sometimes interfacing legacy code current personal situation", "d": "3/2017"}, {"body": "could still really use jide solution great cases case modal injected outside app", "d": "3/2017"}, {"body": "reference small yet nontrivial usecase let say want toggle light dark themes text nodes certain element parent set variable effectively acts context child element explicitly chooses use specific css variable jsx rendered testing extra js indirection needed cc spicyj", "d": "3/2017"}, {"body": "seems like something may well support unless sebmarkbage gaearon objection sounds like would additional two lines code style logic", "d": "3/2017"}, {"body": "", "d": "3/2017"}, {"body": "think want special case way set based key materialize compare inspect key string un fortunately already floats already makes everything slower guess fine always slowpath want slowpath sure", "d": "3/2017"}, {"body": "curious trueadm done benchmarking vs", "d": "3/2017"}, {"body": "benchmarking vs relevant benchmarking info done source seems faster environments", "d": "3/2017"}, {"body": "ran benchmark cases slower though need browsers support css variables anyways could always environment detection ie like use ieedge", "d": "3/2017"}, {"body": "looks like css typed om well typed lol strings seems pretty future proof direction", "d": "3/2017"}, {"body": "always fastest use discussion back guys mozilla jsconf optimizations added time could nt add property accessing route due legacy web reasons something furthermore regards edgems also applying fast path optimization browsers behind bunch web related quirks sure nudge apply fast paths scenario others", "d": "3/2017"}, {"body": "created testcase comparing setproperty style setter custom native properties strangely setproperty faster using custom properties chrome obviously makes happy looked left right check messed anything test difference speed immense feedback welcome", "d": "3/2017"}, {"body": "going keep track next units work", "d": "3/2017"}, {"body": "solves problem", "d": "3/2017"}, {"body": "note docs think close", "d": "3/2017"}, {"body": "jimfb sure necessarily duplicate specific testutils render necessarily refs end ticket chain mentioned currently issue phantom mocha", "d": "3/2017"}, {"body": "hi seeing exact issue experienced stopping propagation child nt prevent parent picking event contrary shows find solution nt get stackoverflow answer fixes thanks", "d": "3/2017"}, {"body": "rickitan try reactjs implements events synthetic events", "d": "3/2017"}, {"body": "hi used eventpreventdefault react work demo extract logic code npm package may easy use hope helps", "d": "3/2017"}, {"body": "hi monkindey thanks help demo work monkindey went codebase found issue components different trees due ongoing migration backbone react nt root therefore stopping propagation one nt prevent ran thank much", "d": "3/2017"}, {"body": "nt use functional components use language use default parameters function", "d": "3/2017"}, {"body": "trick", "d": "3/2017"}, {"body": "sum discussion current state functional components always rerendered even props unchanged right different nonfunctional components correct wrong understanding react compare props state unless provide hand compares virtual dom representation find actually changed", "d": "3/2017"}, {"body": "sum discussion current state functional components always rerendered even props unchanged right correct different nonfunctional components provide check prevent diffing algorithm run potentially adding performance gains functional nonfunctional use dom diffing process understanding", "d": "3/2017"}, {"body": "klaasvaak trick looks like nt", "d": "3/2017"}, {"body": "looking code thought might work guess nt", "d": "3/2017"}, {"body": "think works js var nodeshape value nodeshapechildren ptarrayof ptshape nodeshape isrequired var node ptshape nodeshape", "d": "3/2017"}, {"body": "hi related issue trying use svg aria attributes component react complaining unknown props tag looking docs seems attributes allowed svg enhance accessibility good practice right workaround use ideal", "d": "3/2017"}, {"body": "bad tried attribute works attributes working though", "d": "3/2017"}, {"body": "sure working using long time works fine", "d": "3/2017"}, {"body": "hi bad investigated issue found issue looks like something related loader using sorry", "d": "3/2017"}, {"body": "hey would willing pick someone points right direction section docs already covers dealing linters", "d": "3/2017"}, {"body": "really sure would add right issue bad recommend create react app beginners includes necessary lint rules perhaps really super important", "d": "3/2017"}, {"body": "recommend docs issues need attention", "d": "3/2017"}, {"body": "kkemple may issues mentioned might good look also appreciate feedback pending doc prs", "d": "3/2017"}, {"body": "know couple years late discussion found experiencing similar issues understand want line spec fine would great added option focus render could docs warn people behavior multiple things call focus ideally would nt happen app good ux would specific conditions calling different inputs one particular case need full screen editor inputs want focus whichever input first filled simple enough plain issue full screen editor multiple pages input change page inputs rerendered nt changed thus focus happens plan use similar solution one found would great see could added react happy pr yall agree apologies something like already added", "d": "3/2017"}, {"body": "getting warning rendering", "d": "3/2017"}, {"body": "nt makecancelable solution effectively ismounted call looking point ismounted deprecated calling setstate component completely unmounted strong indication asynchronous callback nt properly cleaned unfortunately mainstream js apis makes easy avoid cleaning hanging asynchronous callbacks one callback nt big deal however callback hangs objects intermediate callbacks promises subscriptions alot components quickly run memory issues makecancellable creates another promise ends holding reference functions hold reference component makecancellable solution moving boolean property ismounted promise order solve gc issue need nulling something cancel called otherwise still reference chain async process component would jquery deferred objects nt really familiar promise api nt know would look also nt reject deferred cancel called deferred resolved probably people different opinion work chain looks something like ajax request closure cancellabledeferredinstance jquery deferred component cancel looks like ajax request closure cancellabledeferredinstance object reference null jquery deferred component ajax request longer preventing component gcd assuming nt screwed implementation somewhere accidentally holding reference deferred yay closures", "d": "3/2017"}, {"body": "hi benmmurphy super familiar js garbage compiling may work differently react different understanding allows react component garbage collected unmounted explain makecancellable creates another promise ends holding reference functions hold reference component makecancellable solution moving boolean property ismounted promise without without still reference component garbage collected unmounted case cancellable promise fail handler called soon component unmounted nt references hanging around anymore", "d": "3/2017"}, {"body": "vpontis nodejs code illustrates problem foo component gc asynchronous callback set null example lets say fire ajax request takes resolve component unmounted component gcd one problems trying solve deprecating ismount edit sorry talking past first time read post nt understand point trying make think think trying say error callback nt contain reference component nt follow reference component component considered referenced promise actually true well first part true however problems reasoning even though error handler example nt reference component callback usually example handle usually even though error handler example nt reference component error handlers example something like even though know code follow callback know exit function check variable gc know anyone uses example something based make sure test actually gcs correctly nt tested mine yet would nt surprise nt work made silly error", "d": "3/2017"}, {"body": "terms promise api works nodejs terms gc though would prefer params near closures sure guaranteed work according js spec happens work node optimizations implementation capture variables visible variables referenced closure dunno maybe someone actually understands js chime explain", "d": "3/2017"}, {"body": "interlinking future googlers bug reported edge also talked", "d": "3/2017"}, {"body": "still getting solutions", "d": "3/2017"}, {"body": "please report issues removing transitiongroup repository maintaining sorry", "d": "3/2017"}, {"body": "mnsr put lines code", "d": "3/2017"}, {"body": "lukemorse put lines code webpackconfigjs worked using webpack", "d": "3/2017"}, {"body": "usually problem directory different casing disk example rather workarounds configs sometimes work root issue easy solve make sure whole project path shell correct go", "d": "3/2017"}, {"body": "lukemorse webpackconfigjs file gaearon sure op using windows pc like windows systems think sort case insensitive option webpack", "d": "3/2017"}, {"body": "problem confuses underlying tools eg watchers anyway nt know sure webpack warnings nt things would silently break anyway probably best place discuss since react repo", "d": "3/2017"}, {"body": "nt know real usecase tleunen stumbled upon issue implementing reusable component responsiblity pass props children end worked around issue found elegant solution like much better since dependency explicit role becomes apparent way props given nested component evaluated relevant applied fiddle", "d": "3/2017"}, {"body": "would expected onchange event triggered instead dom attaches would breaking change makes sense reason behavior correct", "d": "3/2017"}, {"body": "super late followup nt quite understand original example clicked nt receive new props risks stale data wo nt reflect changes state think clicked rerenders given new state also rerender prop changed prop inline function inline functions creates new identity time evaluated missing something trying solve generic case render callback may inline function", "d": "3/2017"}, {"body": "scottcheng understanding threepointone shouldcomponentupdate always return true properly rerender would prefer restrictive shouldcomponentupdate method following one methods original bulleted list ca nt due inability introspect closures", "d": "3/2017"}, {"body": "spicyj thanks reply sorry nt clear enough assuming pure component shallow compares inline arrow function create new identities every time always return short think even pure component still work", "d": "3/2017"}, {"body": "fyi found issue investigating getting warnings setstate even though shallow rendering working perfectly fine could look removing warnings using setstate shallow rendering thanks", "d": "3/2017"}, {"body": "decided happen today fun even though worked fine till narrowed setstate shallow rendering", "d": "3/2017"}, {"body": "bug fbjs release update new version", "d": "3/2017"}, {"body": "problem jsdom react", "d": "3/2017"}, {"body": "gaearon added warning check block fine", "d": "3/2017"}, {"body": "curious issue romulof talks sure use define default properties want use context useful generic modal component props sometimes want use modal props completely different parts app works fine however handler happens decent chunk code requires context uses prop populated connecting redux currently way abstract code context ca nt used set props parent class trying nt really anti pattern least think nt wonder another way hoped would able something like nt work", "d": "3/2017"}, {"body": "facing react native though doubt much rn example thoughts fix", "d": "3/2017"}, {"body": "sankety probably missing call constructor add everything fine nemo one mistake see example declaring wrong right", "d": "3/2017"}, {"body": "gaearon good catch nt change anything", "d": "3/2017"}, {"body": "reproduce issue opened app nt provide description reproduce problem", "d": "3/2017"}, {"body": "gaearon look logs section click errors bottom bar see props undefined reproduction done launch app launch simulator browser turning preview bottom bar", "d": "3/2017"}, {"body": "thanks took find logs bar repro happen without expo", "d": "3/2017"}, {"body": "gaearon going try without expo bit report back", "d": "3/2017"}, {"body": "gaearon looks like expo specific works without issues actual app", "d": "3/2017"}, {"body": "nemo thanks confirming mind filing issue", "d": "3/2017"}, {"body": "gaearon already", "d": "3/2017"}, {"body": "hava issue input placeholder value onchange event fired", "d": "3/2017"}, {"body": "nt fit requirements", "d": "3/2017"}, {"body": "see issue closed find better place post developed small module handles caching react elements variable props declarative way replace shouldcomponentupdate moment working improvement automatically detect transpilation phase cache function", "d": "3/2017"}, {"body": "spicyj true facebook existing components branch based type position child usually better idea pass separate components explicitly always example got dropdown menu wraps child encountering throws exception presumably even empty children lol broken design nt work somehow messes", "d": "3/2017"}, {"body": "hi made quick small library functions children structure also recursive ways find map stuff check let know add thanks", "d": "3/2017"}, {"body": "setstateifmounted small harmless callbacks making user install another library promise cancellation track unmounting tedious", "d": "3/2017"}, {"body": "see lot posts discussing handling error rendering error string blank span etc fine dandy really interested seeing error initial step currently stack trace nt even hint code broke know something rendered wrong wherever react swallowing error could would amazing first step instead letting invalid code slip unnoticed devs get meaningful clue fixing bugs", "d": "3/2017"}, {"body": "fine dandy really interested seeing error initial step currently stack trace nt even hint code broke know something rendered wrong stevendesu fiber implementation provides component stack error reference", "d": "3/2017"}, {"body": "stevendesu fiber also gives info nicely formatted console warning example threw string something gone wrong real errors would meaningful", "d": "3/2017"}, {"body": "aweary bvaughn guesses fiber productionready uncertain point", "d": "3/2017"}, {"body": "nt know yet follow along remaining work interested things working nownext include smaller optimized renderer bundles release reactnative use fiber getting ready enter couple week period internal testing facebook renderer serverside rendering nice failing unit tests thanks sasha see isfiberreadyyetcom shallow renderer work remains well think leland co working see andrew working toward one last release probably next week adds deprecation notices things going away changing meanwhile alpha release available like play reactdom renderer fiber", "d": "3/2017"}, {"body": "thinking future maintenance app cases need write custom key write automated test testing exists value key important test scenario", "d": "3/2017"}, {"body": "react currently warns replaced recommended way update state may mask potential bugs however still support likely continue support detect warn direct modifications state properties though eg think okay nt think would worth additional cost cloning shallow comparison lifecycle method warn something actually support even though recommended going close issue", "d": "3/2017"}, {"body": "mrmatten use", "d": "3/2017"}, {"body": "looking calling kinda defeats purpose using reactdom replace component tree onneeded basis", "d": "3/2017"}, {"body": "spicyj hi bug still need get fixed work want contribute development react project anyway possible", "d": "3/2017"}, {"body": "great able set react prop", "d": "3/2017"}, {"body": "week react conf react fiber react planning work following supposedly react means async react lifecycle methods could coming", "d": "3/2017"}, {"body": "well nt fiber stuff mostly fastersmoother rerendering server render sure changes effect serverside rendering", "d": "3/2017"}, {"body": "vancoding updated message bit unclear meant plans fiber", "d": "3/2017"}, {"body": "folks landing like ended creating custom implementation using react might help key asynccomponentwillmount runs server available entry point components components avoid issues mentioned", "d": "3/2017"}, {"body": "siddharthkp nt really see component tries solve supports asynccomponentwillmount top level application react component use library could resolve promise outside call render miss something", "d": "3/2017"}, {"body": "fkrauthan could resolve promise outside call render right exactly appeal get async ssr code splitting hmr one command saw lot folks implementing ssr super easy motivation supports asynccomponentwillmount top level application react component one application component fetch data pagescreenentry point promoting multiple entry points pattern intentional every component tree wants data might end encouraging bad pattern performance fetching data top level component passing children props keeps check", "d": "3/2017"}, {"body": "siddharthkp repo improve nextjs also presented react conf btw anyway discussion thirdparty libraries imho offtopic interested support within react", "d": "3/2017"}, {"body": "discussion thirdparty libraries imho offtopic interested support within react completely agree discuss specific questions reaqt issues", "d": "3/2017"}, {"body": "sad", "d": "3/2017"}, {"body": "problem really annoying", "d": "3/2017"}, {"body": "plan fix issue next version react", "d": "3/2017"}, {"body": "spicyj syranide hints add spaces child divs class b given generating child elements loop whose length fixed", "d": "3/2017"}, {"body": "dhruvbalhara push string array generating want spaces misunderstanding", "d": "3/2017"}, {"body": "syranide ah right sorry completely missed apologies dumb question", "d": "3/2017"}, {"body": "aweary think got", "d": "3/2017"}, {"body": "read article found way got bandwidth number input issue less wrapped anyone working anything keep mind get started", "d": "3/2017"}, {"body": "working fix change allows reactbrowsereventemitter responsible attaching event listeners make decision casebycase basis events attached document vs element still nt gotten touch events serious wheel testing confirm gets rid window scroll jank nolanlawson example time find mouse wheel", "d": "3/2017"}, {"body": "nhunzaker chat strategy several considerations want minimize amount work initial render includes minimizing checks events currently way much work figure already attached event noticed moving event listeners locally many unexpected consequences parts system harder initially seemed eg break select event plugin works need make sure stuff plays nicely together", "d": "3/2017"}, {"body": "absolutely reactiflux discord room best really medium fine known bottlenecks could point totally hard test would good get dom fixtures place uncover issues going next step", "d": "3/2017"}, {"body": "probably best start wanted highlight issue aware ensurelisteningto steps reactbrowsereventemitter currently executed every event listener entire page several slowish dom operations map lookups hasownproperties property look ups per every listener show first screen theory attached listeners every event document eagerly would nt event listener think wheel specifically probably pretty safe believe least one platform might possible change value wheel might might related", "d": "3/2017"}, {"body": "sebmarkbage recently prs merged remove work browsereventemitter support checks nt need next going see kind savings actually get assigning event listener every supported event without changing things much want figure slow eliminate work evaluate reworking reactbrowsereventemitter less moving parts better understand happening also curious reduce number calls special cases reactdomcomponent reasonable approach", "d": "3/2017"}, {"body": "", "d": "3/2017"}, {"body": "jumping another user deeply interested feature every environment allows isolate testing nodejsreact integration testing deterministic unique ids extremely important building larger applications enterprise setting", "d": "3/2017"}, {"body": "years nothing yet shame", "d": "3/2017"}, {"body": "came across different use case issue checkbox wrapped div decided change state checkbox onclick event instead onchange onclick event div element executed onchange event component looks something like example dosomethingelse executed first stop propagating event however used onchange instead onclick checkbox element dosomething executed dosomethingelse case able stop propagating event example point onclick provided checkbox input warning", "d": "3/2017"}, {"body": "used solution order able create controlled inputs using fixed tweak made call order able access object", "d": "3/2017"}, {"body": "referencing fix uglifyjs properly eliminate dev code even references never changes new option default see context", "d": "3/2017"}, {"body": "spicyj issue still something want implement", "d": "3/2017"}, {"body": "cytgithub seems source reasonable", "d": "3/2017"}]