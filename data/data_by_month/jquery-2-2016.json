[{"title": "deprecate jqueryisnumeric", "body": "created internal use nt needed", "num": "2960", "d": "2/2016"}, {"title": "deprecate jquerynow", "body": "already reference", "num": "2959", "d": "2/2016"}, {"title": "deprecate jqueryproxy", "body": "seems use mostly fulfilled signatures limited use", "num": "2958", "d": "2/2016"}, {"title": "license tags", "body": "jquery javascript files users run tagged free software people want run free software web could jquery free software might free software since tagged either allow proprietary javascript well run jquery librejs project gnu make possible want run free software browsers allow files free software ps license file jqueryorg rest page matter completely unaccessible tor", "num": "2957", "d": "2/2016"}, {"title": "keyup keydown keypress event fire programmatically created dom elements", "body": "testing app seems jquery fire events jquery version try bind events dom elemets created handlebars code reproduce javascript document ready function tested emulator maybe affects emulator wonder jquery contain unit test scenario", "num": "2956", "d": "2/2016"}, {"title": "error compiled debian", "body": "info worked ends ok verbose cli usrbinnodejs usrbinnpm run build info using npm info using node verbose runscript prebuild build postbuild info prebuild jquery info build jquery verbose unsafeperm lifecycle true info jquery failed exec build script error jquery build error exit status error failed jquery build script error likely problem jquery package error npm error tell author fails system error npm install amp amp grunt error get info via error npm owner ls jquery error likely additional logging output error system linux error command usrbinnodejs usrbinnpm run build error cwd rootjquery error node v error npm v error code elifecycle verbose exit true", "num": "2955", "d": "2/2016"}, {"title": "delegated events nt work middle clicks", "body": "example leftclicking element triggers normal listener delegated listener middleclick delegated listener triggered tested google chrome jsfiddle", "num": "2954", "d": "2/2016"}, {"title": "jquerysrcintrojs file lacks end brackets", "body": "new jquery js global ide mentioned missing bracket close ever going jquerysrcintrojs nt know caused bug recent commit programmer code nt make sense", "num": "2953", "d": "2/2016"}, {"title": "read property createelement undefined", "body": "trying load module test using mocha chai sinon loading module get following error jquery really sure bug within jquery", "num": "2952", "d": "2/2016"}, {"title": "width outerwidth innerwidth sets incorrect value certain conditions webkit browsers", "body": "hi noticed tdth borderwidth gt child table bordercollapse collapse width x sets width equal x borderwidth webkit borwsers seems appear jquery versions jsfiddle code reproduce bug", "num": "2951", "d": "2/2016"}, {"title": "problem ssl handshake", "body": "hi using proxy mcafee web gateway enterprise external websites reference fetching jquery code get message proxy host codejquerycom reason ssl routines alert handshake failure site better switch tls", "num": "2950", "d": "2/2016"}, {"title": "mouseenter amp mouseleave events settimeout callbacks wrong", "body": "example page illustrates issue event", "num": "2947", "d": "2/2016"}, {"title": "stop modifying value provided boolean attributes", "body": "similarly stopped lowercasing attribute names workaround ie lt might want stop modifying value provided boolean attributes also afaik needed ie lt kept branch api compatibility", "num": "2946", "d": "2/2016"}, {"title": "jquery breaks webpack builds loading individual modules", "body": "hi change webpack builds broken loading individual modules think happening selectorsizzlejs trying load sizzle dependency externalsizzledistsizzle file exist unlike instance loads sizzle set simple example thank much advance", "num": "2945", "d": "2/2016"}, {"title": "initprototye nested loop", "body": "read source code one question whether stop cycle javascript var function test init initprototypeinit count test initprototypeinit return count test jqueryprototypeinit uncaught rangeerror maximum call stack size exceeded", "num": "2944", "d": "2/2016"}, {"title": "please demote dmethvin abusive maintainer behavior", "body": "mgol cc scottgonzalez arschmitz related foundation board members final reply abusive lock abridging dmethivin wrote welcome come html communities current solution bug professionally say dmethivin asked refrain interacting issue clearly proven abusive unprofessional fully documented unfortunate poor behavior tolerated establishing owners especially independent consultant md incorrectly claims language barrier thank moment time consideration", "num": "2943", "d": "2/2016"}, {"title": "jquery load ajax reported depreciated incorrectly", "body": "jquery load event depreciated version see jquery load ajax modal deprecated see try use ajax load command like jqmigrate incorrectly reports jqueryfnload deprecated believe bug jqmigrate", "num": "2942", "d": "2/2016"}, {"title": "parsehtml creates anchor elements empty href property chrome", "body": "parsehtml seems broken jquery later chrome code shows empty string chrome testhtml browsers jquery chrome ok html function test var html lt href testhtml gt lt gt var ref parsehtml html alert ref href edit mgol modified alert property anchor element originally test case alerting element meant relied stringification", "num": "2941", "d": "2/2016"}, {"title": "bug exists points nonlatest question", "body": "validating documentation seems latest version link version series eg specific like tia", "num": "2940", "d": "2/2016"}, {"title": "bugsjquerycom", "body": "trying view tickets related potential bugs seeing greeted bad gateway anyone working restoring service", "num": "2937", "d": "2/2016"}, {"title": "jquery popup issue", "body": "trying use basic pop jquery mobile use jquery version get following error bellow replace jquery version jquery version everything works fine error jquery version uncaught typeerror apreventdefault functionneventpreventdefault anonymous function anonymous function eventspecialnavigateselfpopstate anonymous function extendgo mobilenavigate widgetopen anonymous function anonymous function fn anonymous function mobilepopuphandlelink anonymous function anonymous function widgettriggerwithdeprecated anonymous function widgettriggerpagebeforechange anonymous function widgetchange anonymous function anonymous function fn anonymous function mobilechangepage anonymous function following page markup basic popup completely basic popup options set", "num": "2936", "d": "2/2016"}, {"title": "deep extend overwrites good objects null objects", "body": "added comments fiddle bottom end one array extend previous possible null value overwrite previous effort null would expect behavior suddenly encountered empty object place array feels like null behave like empty array array extended like empty object object extended erase previous effort", "num": "2935", "d": "2/2016"}, {"title": "throw internal jquery error first time", "body": "hi figure example change firefox combobox item throw error first time works next change function change c var cm c var ok cmparent typeerror null return neach parent function var baparentnode return b amp amp bnodetype", "num": "2934", "d": "2/2016"}, {"title": "ajax nt emit textstatus timeout error gateway timeout occurred", "body": "error occurred callback parameter prototype according description error though conflicts try comprehend jqueryajax gateway timeout jquery api documentation error type function jqxhr jqxhr string textstatus string errorthrown function called request fails function receives three arguments jqxhr object string describing type error occurred optional exception object one occurred possible values second argument besides http error occurs receives textual portion http status found internal server error jquery note handler called crossdomain error usually occurs use longtimepending request wait events proxy reverse proxy especially reverse proxy nginx vhost means proxy configuration gateway set smaller timeout limit browser ajax option never error get part hypertext transfer protocol reference gateway timeout server acting gateway proxy receive timely response upstream server specified uri eg http ftp ldap auxiliary server eg dns needed access attempting complete request", "num": "2932", "d": "2/2016"}, {"title": "show childnodes parent div", "body": "following divs want show childnodes hold div modalbody get error click anchor open modal", "num": "2931", "d": "2/2016"}, {"title": "figure fix possible use variable", "body": "master branch builded branches builded run use throw error right away see", "num": "2930", "d": "2/2016"}, {"title": "add issuetemplate pullrequesttemplate files", "body": "avoid cluttering root repo also support folder file take advantage sure form issue template take would good look examples like idea checklist think pr template really simple asking people reference ticket reminding sign cla", "num": "2929", "d": "2/2016"}, {"title": "ajax using context settings sets contenttype get requests", "body": "example ajaxsetup statuscode function var settings var auth link relauthenticate prop href var opts xhrfields withcredentials true causes statuscode handler trigger turn sends reauthentication request successful retries request retries request contenttype header get request set applicationxwwwformurlencoded due settings object undesirable side effects certain serverside frameworks get function partial getmodal find modaldialog html partial would like use handling across get post requests open workarounds anyone idea", "num": "2928", "d": "2/2016"}, {"title": "ajax calls", "body": "think agree day forward ajax calls renamed francis look like favor", "num": "2926", "d": "2/2016"}, {"title": "jquery working ui dialog plugin", "body": "earlier comfortably using jquery ui dialog plugin versions jquery prior soon upgraded jquery ui dialog plugin stopped working used work well jquery get error typeerror dialog function code changed way timeout dialog autoopen false modal true", "num": "2924", "d": "2/2016"}, {"title": "taglike attribute values modified html htmlstring", "body": "use taglike text attribute value via gets improperly modified example get instead expected produced according specification taglike values seem fine ambiguous ampersands escaped", "num": "2922", "d": "2/2016"}, {"title": "opera fails one css test", "body": "see failure one", "num": "2920", "d": "2/2016"}, {"title": "data getter creates data", "body": "sure intended calling without arguments creates data object given node hasdata div false div data object hasdata div true", "num": "2919", "d": "2/2016"}, {"title": "removing parent node event bubbling nt result pure javascript code", "body": "following code clicking button triggers form submission google chome html ok function form submit false button click function form remove however test case without using jquery trigger form submission html ok expected behavior examples functionally equivalent browsers affected google chrome jquery version tested jquery also tested firefox problem happen", "num": "2918", "d": "2/2016"}, {"title": "epreventdefault undefined", "body": "commit check ensure exists defined removed line believe though may seem redundant guards checks place ensure original event actually event conforms expectations event namely containing method rather json object contains bare minimum example bare minimum may look like pulled jquery mobile method however case jquery mobile used call jquerymobilenavigatorgo function creates contain method thus called check fails detect event infact function may issue needs addressed jquery mobile side traced back historically check existed causes issue popup newer versions jquery jquery mobile", "num": "2917", "d": "2/2016"}, {"title": "husky lint git hook vulnerable path changes", "body": "linter git hook added significant fault creates precommit file path hardcoded one end initial subsequent nt update poses problem tools like nvm removing older node version eg new patch release comes might want remove older one keep vulnerable amp outdated releases disk previous path stops valid hook stops working packages need reinstalled", "num": "2915", "d": "2/2016"}, {"title": "nt manually lowercase attribute name passed", "body": "changed lowercasing logic setter better conform spec lowercasing much lowercase ie lt nt need logic removing may even accidentally make api sortof work svgs see", "num": "2914", "d": "2/2016"}, {"title": "jqueryremoveprop disabled enable input disabling jqueryprop disabled true", "body": "recently upgraded noticed change behavior javascript var input consolelog inputis disabled false would expect inputprop disabled true consolelog inputis disabled true inputremoveprop disabled consolelog inputis disabled expected false actual true inputprop disabled false inputremoveattr disabled reenable input", "num": "2913", "d": "2/2016"}, {"title": "inarray void foo bar void returns real ie", "body": "return searching array contains mentioned title problem reproduced newer version ie using ie compatibility mode real ie code running page jquery ui", "num": "2912", "d": "2/2016"}, {"title": "iterator skip first element", "body": "sure messing something really strage code result reference second form jquery", "num": "2911", "d": "2/2016"}, {"title": "attr attributename value turns attribute name lowercase", "body": "seems using attr attributename value attributename turned lowercase causes issue trying set viewbox attribute using jquery attribute upper case b test cases setting attribute without jquery using works expected setting attribute using jquery nt work expected attribute set lowercase instead", "num": "2910", "d": "2/2016"}, {"title": "add tests certifying offset nt broken recent revert", "body": "basically need tests certifying amp work revert done land branches", "num": "2909", "d": "2/2016"}, {"title": "implement unhandledrejection event", "body": "implemented problem called irrespective whether error handled handler instead behave follows jquerydeferredexceptionhook called deferred resolve gt throw new error xx jquerydeferredexceptionhook called deferred resolve gt throw new error catch gt jquerydeferredexceptionhook called deferred resolve gt throw new error catch gt throw new error instead fixing behavior think best implement unhandledrejection eg bluebird currently", "num": "2908", "d": "2/2016"}, {"title": "siblings bug", "body": "", "num": "2907", "d": "2/2016"}, {"title": "node package jquery uses windowsettimeout", "body": "use jquery node hueapi called huepi combined domino xml see untill recently worked fine latest release npm gives error windowsettimeout defined window defined example settimeout function consolelog done works node windowsettimeout function consolelog done nt work window undefined could please use settimeout without window node release thx", "num": "2906", "d": "2/2016"}, {"title": "absolutely positioned inline elements become blocklevel using hide show", "body": "test case test case shows even inline element display inline explicitly stated css using hide show jquery sets display block happens elements position absolute reproduced bug following environments chrome x firefox x firefox x opera x firefox edge bug occur ie ie ie test internet explorer versions bug also occured using jquery core", "num": "2905", "d": "2/2016"}, {"title": "focus inoutblur test reliability", "body": "seeing following two test failures intermittently edge chrome tests also explicitly disabled firefox testuniteventjs unreliable recommendations improving reliability tests happy help pull request event check order focusinfocusout events ms assertions run ms source global code event focusblur order ms text focus ms source anonymous function oeventdispatch rhandle", "num": "2904", "d": "2/2016"}, {"title": "issue thank note", "body": "", "num": "2902", "d": "2/2016"}, {"title": "css support multiple url backgroundimage", "body": "following example var require jquery require jsdom jsdom defaultview var div divcss backgroundimage url data imagejpeg url data imagejpeg consolelog divget outerhtml run browser works code output try run serverside response", "num": "2900", "d": "2/2016"}, {"title": "jquery codejquerycom cdn points wrong sourcemap", "body": "originally filed viewsource observe expected actual see debugging site cdn suddenly debugger wrong context jquerydev chatting dmethvin sure change would nice could", "num": "2899", "d": "2/2016"}, {"title": "ignore sizzle working amd modules", "body": "hi everyone using jquery requirejs amd wan na use ajax module everything working fine obligated config sizzle anyway avoid ignore sizzle working directly amd modules lab configjs appjs tks", "num": "2898", "d": "2/2016"}, {"title": "offset adds scrolltop top coordinate ie jquery", "body": "context collaborator jquery ui month picker project recently setup demo page used latest compat version jquery plugin allows user click button uses jquey ui position method position menu input field demonstrated page everything worked fine except internet explorer seems positions menu far input scrolled important happens first time position element reproduce issue refreshing page tried first thought something jquery ui version using switching several different versions jquery ui nt solve issue tried use jquery version everything working fine even ie tried version run tests everything worked find also tried different version jquery ui jquery everything worked fine tried use jquery version one everyting working fine except ie going code user clicks button open method code called open method calls fadetoggle method using callback option start callback called right removed right animation begins mentioned jquery ui position docs required work start callback calls jquery ui position method eventually call elemoffset eventually jqueryoffsetsetoffset method calls get elements offset eventually method calls rect elemgetboundingclientrect seems add top property return tldr sure problem result us something wrong happens work every different configuration tested issue jquery needs resolved", "num": "2897", "d": "2/2016"}, {"title": "click return window obj", "body": "jq click returned click click return window object ca nt bug feature", "num": "2896", "d": "2/2016"}, {"title": "svgelementoffsetparent removed chrome around april", "body": "google chrome says svgelementoffsetparent deprecated removed around april see details may radar already may also implications", "num": "2895", "d": "2/2016"}, {"title": "upgrade jquery breaks bootstrap dropdowns", "body": "upgrade jquery breaks bootstrap dropdowns", "num": "2894", "d": "2/2016"}, {"title": "npm package nt documentation", "body": "referring page least example usage people know import library use least show people", "num": "2893", "d": "2/2016"}, {"title": "reduce jquery size", "body": "tl dr would love help reducing jquery size keeping performance compatibility creator umbrella js made lightweight jquery alternative modern browsers started javascript jquery many years ago love contribute back things learned try reduce jquery size reading jquery code realized many things made way name performance however modern browsers engines different take example loop vs traditionally considered performance improvement vs however methods speed within margin error jsperf shows jsperf test similar speed second one could really help addclass methods since function could put beginning similarly get reused slimming code said love try contribute back cleaning reducing reusing much source code possible jquery couple questions though wanted improvement last thing want waste jquery developers time time something one calling shots concerned test jquery performance currently performance tests willing try add need help setting manually testing every change jsperf viable reproducible setup umbrella js run circle ci ps discussion going issue", "num": "2892", "d": "2/2016"}, {"title": "try insight package get info custom builds", "body": "see", "num": "2890", "d": "2/2016"}, {"title": "chrome deprecating offsetwidth offsetheight", "body": "got warnings today working app svgelementoffsetwidth deprecated removed around april see details svgelementoffsetheight deprecated removed around april see details stem getwidthorheight function row", "num": "2889", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "api terribly intuitive expect people code sth like need", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "since requesting suggest mean specifically tagged needs changed note repo license file", "d": "2/2016"}, {"body": "dmethvin page info make librejs understand license scripts tried edit original post clarify editing function nt seem work currently really sensible browser browser plugin try find license javascript library would ungodly amount work get working instead us humans tag javascript easy parse automatically recognize license scripts", "d": "2/2016"}, {"body": "embedding entire license distribution file header even compressed file references license suggest way want without embedding full license submit pr", "d": "2/2016"}, {"body": "dmethvin misunderstood nt embed whole license would need top license magnet xturn btih amp dnexpattxt bottom licenseend wo nt many bytes current license notice lot functionality", "d": "2/2016"}, {"body": "understand make license available via bittorrent magnet link used different way also worry introducing code handle cases officially standardized could name popular javascript libraries include license comments", "d": "2/2016"}, {"body": "mgol librejs recognizes magnet link proper expat license user wants get license download via magnet link jquery nt make new magnet urls anything include one proper expat current license use order help users use free software people done realize everyone thought like world would proprietary software effort put kind standard place even ad hoc one currently way automatically parsing licensing information javascript files", "d": "2/2016"}, {"body": "tsutsukakushi nt think opposed necessarily good way specify license seems like good thing document rather preachy dogmatic rather approaching problem one automate issue license recognition perhaps would help separate two issues make page focused technical details", "d": "2/2016"}, {"body": "dmethvin agree page technical details would ask mailing list however nt think librejs couple guys working might get top priority maybe experienced javascript developers could help wink wink", "d": "2/2016"}, {"body": "totally messed first sentence let try agree page technical details would good ask mailing list", "d": "2/2016"}, {"body": "thanks report could create test case could reproduce", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "ca nt get jsbin run real browserstack get error see screenshot general jquery forward event browser generates browser nt fire event ca nt much keyupkeydown events pretty reliable platforms keypress also test real never various compatibility view modes", "d": "2/2016"}, {"body": "sorry noise guess confused morning browser flood confirm key events fire even thanks much efforts", "d": "2/2016"}, {"body": "try remove folder execute command", "d": "2/2016"}, {"body": "also nodejs instance really old please upgrade least stay upgrade node newer find wellmaintained repository various linux flavors including debian", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "yep duplicate", "d": "2/2016"}, {"body": "yeah intentional wrappers modules included jquery builded", "d": "2/2016"}, {"body": "jspm manages dependencies browser nt error means sounds like trying get executed node requires additional implementation like one provided jsdom even fail earlier situation looks weird jquery version also need full example perhaps strippeddown version project could reproduce bug hard anything looking error", "d": "2/2016"}, {"body": "code trying run basically test verifies module loaded module question used ejs page wanted test module isolation add details project also github nt pushed test recently import chai expect chai import sinon sinon import sinonchai sinonchai import system systemjs import publicconfigjs chaiuse sinonchai describe helpermodule gt let module", "d": "2/2016"}, {"body": "think jquery bug report nt even see jquery code snippet", "d": "2/2016"}, {"body": "happens chrome edge firefox seems related subpixel values borders", "d": "2/2016"}, {"body": "update gbcr result well includes borders result includes one since borders collapsed least interpretation", "d": "2/2016"}, {"body": "switched tls yet", "d": "2/2016"}, {"body": "yes already least proxy supports tls problems specific type admin told", "d": "2/2016"}, {"body": "could create ticket detail cdn repo resolve likely need network people talking cdn people much information configuration", "d": "2/2016"}, {"body": "ca nt use native due several browser bugs synthesized could fixed making new copy entire object delivered element bubbled would horrible performance penalty need properties copy used settimeout function", "d": "2/2016"}, {"body": "thanks solved saving event variable calling edit think better restore true event type like", "d": "2/2016"}, {"body": "agree dmethvin assessment nt think make change", "d": "2/2016"}, {"body": "btw problem persists jquery version well", "d": "2/2016"}, {"body": "thanks solved saving event variable calling settimeout nt deep extend extremely expensive need variables event type save variables", "d": "2/2016"}, {"body": "dmethvin yeah thought minute changed see updated comment", "d": "2/2016"}, {"body": "ca nt use native due several browser bugs precise none browsers supported jquery experience bug last one safari dropped still support ios think important reason synthesize make event delegation work see comment", "d": "2/2016"}, {"body": "yes true want delegated requires either deriving bubbling using capturing handler via special event hook could try latter via approach similar focusinout", "d": "2/2016"}, {"body": "would put wrong event order good idea", "d": "2/2016"}, {"body": "actually nt ie lt ie lt required setting property boolean like continue although browsers may treat value true like users see value set always truthy value regardless passed forcing values comply spec educating users fact even set string false still treated true another helpful sideeffect ability tell difference boolean enumerated attribute quickly already consulted spec users", "d": "2/2016"}, {"body": "wanted educate users difference boolean amp nonboolean attrs might set empty string instead attribute name nt work ie lt normally specify boolean attribute writing html hand providing value unless consider change much breaking change would break cases someone incorrectly retrieved attribute value checked truthiness doubt code would actually anything already broken though", "d": "2/2016"}, {"body": "empty string provide attribute name", "d": "2/2016"}, {"body": "visual clue developer tools well closer standards dev tools foo exactly attributes natively reflected property modifications behave eg setting results attribute set empty string represented like makes jquery behavior closer native one trying amp recently", "d": "2/2016"}, {"body": "spec says closer browser behaviour sometimes good idea since jquery tries fix exactly saying pro would cool see doc says", "d": "2/2016"}, {"body": "visual clue developer tools well closer standards get board first second standard", "d": "2/2016"}, {"body": "attribute present value must either empty string value caseinsensitive match attribute canonical name leading trailing whitespace", "d": "2/2016"}, {"body": "also possible using empty string issues xhtml", "d": "2/2016"}, {"body": "seems spec agrees behaviour even though dev tools shows absence value shows", "d": "2/2016"}, {"body": "also", "d": "2/2016"}, {"body": "ok forgot xhtml seems stay", "d": "2/2016"}, {"body": "forgot xhtml well seems xhtml dom behaves exactly html ie seems nt contradicts xhtml spec either sure want give easily", "d": "2/2016"}, {"body": "markelog violate xhtml spec tho dmethvin pointed even browser implementations nt care besides nt see much gain using empty string know works think leave", "d": "2/2016"}, {"body": "xhtml requires set value quotes could empty string native behaviour believe point initial request nope nt violate nt see much gain using empty string know works think leave like said oppose pro", "d": "2/2016"}, {"body": "xhtml requires set value quotes could empty string tried forget horror xhtml years ago seem recall code breaking expected nonfalsy attribute values empty string falsy probably would timeframe timmywil attributes refactor", "d": "2/2016"}, {"body": "years ago like five", "d": "2/2016"}, {"body": "xhtml requires set value quotes could empty string yea recall time setting empty string ended value specified html probably whole attroperties issue maybe looking devtools represents without value also unassigned value return empty string possible browser implementors differentiate means former could still issue nt think worth finding", "d": "2/2016"}, {"body": "indeed experiencing thing possible add alias config fix would indeed much better jquery loaded sizzle webpack fetch nodemodules folder wherever resolving", "d": "2/2016"}, {"body": "seems included published package could check starts working copy directory jquery repo", "d": "2/2016"}, {"body": "yup included could actually fix npm", "d": "2/2016"}, {"body": "include fix", "d": "2/2016"}, {"body": "fixed", "d": "2/2016"}, {"body": "thank", "d": "2/2016"}, {"body": "fix find version still available cdn", "d": "2/2016"}, {"body": "working", "d": "2/2016"}, {"body": "discuss monday might need fix things nt want release every days", "d": "2/2016"}, {"body": "thanks bertez worked used jquery sizzle", "d": "2/2016"}, {"body": "please look help stack overflow place report bugs jquery", "d": "2/2016"}, {"body": "damn think lucky deal dave matter language barrier selfentitled behaviour exhibited could sign complete lack professionalism dave nice guy kept giving benefit doubt quite franckly noone else would tolerated repeated unwarranted attacks solution problem getgo nt say description bug would saved dave ten thousands people following repository onesided conversation clearly makes look like internet troll suggest tone notch operatics contributor feels obligated report abuse", "d": "2/2016"}, {"body": "right venue issue", "d": "2/2016"}, {"body": "duplicate fixed next release jquerymigrate later week", "d": "2/2016"}, {"body": "thanks wasted couple hours trying figure reporting depreciated updating legacy code", "d": "2/2016"}, {"body": "result dom case element seems correct code depends stringifying dom elements example", "d": "2/2016"}, {"body": "closing worksforme please provide test case reopen", "d": "2/2016"}, {"body": "checked code firefox ie chrome firefox ie show chrome empty string use jquery browsers show", "d": "2/2016"}, {"body": "vmagik thanks update impression report stringifying dom elements seems href property indeed set empty string chrome need investigate", "d": "2/2016"}, {"body": "ok nailed issue commit nonjquery test case also posted test case fails chrome succeeds firefox safari edge ie support opera even android see reported upstream", "d": "2/2016"}, {"body": "vmagik using code real application calling something else calling trying determine impact", "d": "2/2016"}, {"body": "call parsehtml code gets string like tries get href nt invent code first message stringfication found example somewhere", "d": "2/2016"}, {"body": "result though trying determine seriousness bug based way things used real code", "d": "2/2016"}, {"body": "open window show resulting href also use ajax call", "d": "2/2016"}, {"body": "mean show user trying get sense work flow occurring type html parsed come href shown window", "d": "2/2016"}, {"body": "show user click link page first ajax request result either one link several links one link show new window dialog several links need show user choice", "d": "2/2016"}, {"body": "guess workaround need back master", "d": "2/2016"}, {"body": "start removal going wait removing", "d": "2/2016"}, {"body": "seems fixable something simple dirty first time spackle browser behavior", "d": "2/2016"}, {"body": "nice", "d": "2/2016"}, {"body": "since caller pass document work set base empty string way href propertyattribute would equal still would suggest back nt using consistently documented", "d": "2/2016"}, {"body": "like going like experiment point changes seem risky trying stop developed soon agree dmethvin back", "d": "2/2016"}, {"body": "links latest good practice one", "d": "2/2016"}, {"body": "links latest good practice one may good practice also good document etiquette favoritism specific version looks like jquery bug thank confirming", "d": "2/2016"}, {"body": "martii read blog post referenced see chaos caused snide comment wo nt change anything", "d": "2/2016"}, {"body": "snide comment perception skewed bug exists references usages based said please refrain snarky responses", "d": "2/2016"}, {"body": "dmethvin appease bad maintainer response cc mgol roughly documentation reading elsewhere neutral documentation sake latest version url used currently jquery core however jquery maintainers suggest latest version used meta link updated actual latest jquery core series possibly part due statistics gathering please follow link specifics additional specific isolated versions may found cdn including recent versions jquery core please let community know jquery going fix bug url rewriteroute andor remove altogether thank moment time realist industry three decades nt appreciate accused snide", "d": "2/2016"}, {"body": "martii think may language barrier apologies understand response request bug asking us please let community know jquery going fix bug url rewriteroute andor remove altogether bug", "d": "2/2016"}, {"body": "bug asking us bug latest version url used currently jquery core seems latest url nt returning actual latest either removed mod rewrite apache change redirect route node web server configuration point latest seems like latest url strongly discouraged response latest presumed link done best keep documentation neutral possible understand link referenced agree specific versions always used maximum compatibility minimal breakage documentation tricky code examples keep neutral nt maintain constantly version bumping added foot notes docs help alleviate confusion users communities time", "d": "2/2016"}, {"body": "seemed like blog post pretty clear nt use pretend file exist ignore suggestive name official word development team used part official documentation fact found file cdn made assumptions based name make supported ca nt update change file anymore break lots web sites internet misused remove without punishing users sites developers made unfortunate decisions past whose sites may longer maintained another nt break web decision make regular basis need latest version file want automate process could get npm since publish releases versions tagged", "d": "2/2016"}, {"body": "pretend file exist lol official word development team used hence transformation issue simple question bug report footnotes latest url remain communities documentation officially endoflifed removed jquerycom domain unfortunate development team nt accommodate neutrality code samples work around footnotes misused remove without punishing users sites developers made unfortunate decisions past whose sites may longer maintained deprecated end life using standard industry nomenclature jquery supporting fashion link still around bad nt see industry standard http status codes deprecation end life let servers know codes perhaps time interest get around writing rfc adoption ca nt update change file anymore break lots web sites internet misused remove without punishing users sites developers made unfortunate decisions past whose sites may longer maintained understandable minus blame pointed next jquery actively supporting exists active deprecated endoflife common terms presume assume difference english language replies blog post deprecation state servers usually wo nt know may cause unnecessary maintenance workflow made unfortunate decisions past unprofessional blame maintainers cc mgol fact found file cdn made assumptions based name make supported blame cc mgol nt find communities around predating blog post referenced fact defacto standard described blog post issues raised pertaining statistics gathering cdn usage want automate process could get npm since publish releases versions tagged thanks reiteration something know already use node projects wiki including gollum gh allura sometimes mediawiki nt automation hence external servers use mod rewrite node routing point files change http status headers adding another job task determine latest version documentation waste resources believe anyhow bug nt want get addressed nt reading least wontfix label would hope positive role javascript community would want achieved project something else latest url know discouraged initial tone dmethvin set somewhat rectified dissuade colleagues contributing", "d": "2/2016"}, {"body": "wiki including gollum gh allura sometimes mediawiki nt automation hence external servers use mod rewrite node routing point files change http status headers adding another job task determine latest version documentation waste resources believe saying want automatically update jquery sites release without testing please nt automatically update things like exactly jquerylatest deprecated every update even patch release opportunity incompatibilities creep see every release people depend undocumented functionality bugs code broken update", "d": "2/2016"}, {"body": "saying want automatically update jquery sites release without testing quite done best keep documentation neutral possible understand link referenced agree specific versions always used maximum compatibility minimal breakage documentation tricky code examples keep neutral nt maintain constantly version bumping added foot notes docs help alleviate confusion users communities time communities prefer remain neutral possible version used including pushing pointed abridged quote remove without punishing users sites developers whose sites may longer maintained wish automation process updating docs especially features nt exist newer wiki software due dumbing security reasons every update even patch release opportunity incompatibilities creep see every release people depend undocumented functionality bugs code broken update speaking choir aphorism goes actual usage production personally would discourage well latest url however favoritism specific version nt recommended communities documentation shieldsio helps great deal node projects ex quoting syntax working code snippet supposed neutral technically impossible gollum related markdown ed software example unwanted maintenance task showing html code snippet modern media type per rfc requires routine maintenance ca nt automated gh issue tracking also gollum gh wiki html", "d": "2/2016"}, {"body": "sounds like looking something beyond scope repository past tried simple solution failed horribly welcome come distribution mechanism beyond offer distribute publish npm tags available github possible automate", "d": "2/2016"}, {"body": "thanks notice look", "d": "2/2016"}, {"body": "since nt edit tickets google cached version complete", "d": "2/2016"}, {"body": "back thanks", "d": "2/2016"}, {"body": "thanks opening issue please provide test case help us assess problem", "d": "2/2016"}, {"body": "pretty sure dup close", "d": "2/2016"}, {"body": "fixed changing function", "d": "2/2016"}, {"body": "copying intentional see array weirdness compare past releases regardless outcome might satisfied customizable generalpurpose library like lodash use case", "d": "2/2016"}, {"body": "sure intentional nt see clearly documentation says properties inherited object prototype copied fine copy null undefined also says deep extend object array extended stands true already array extend null would expect try extend existing array null give original array happens null property copied case even intentional behavior ca nt see intended since end product fully extended array one would expect", "d": "2/2016"}, {"body": "also bring one argument seem like intentional order objects extended changes outcome extending extending sound like extend", "d": "2/2016"}, {"body": "final argument take look would ever expect result deep extend", "d": "2/2016"}, {"body": "sure intentional nt see clearly documentation says properties inherited object prototype copied fine copy null undefined line immediately preceded undefined properties copied implication properties also says deep extend object array extended stands true already array extend null would expect try extend existing array null give original array happens null property copied deepextend behavior applies data types match scalars overwrite nonscalars nonscalars overwrite scalars objects overwrite arrays arrays overwrite objects case even intentional behavior ca nt see intended since end product fully extended array one would expect final argument take look would ever expect result deep extend yes nt fit needs recommend customizeable lodash mergewith", "d": "2/2016"}, {"body": "array weirdness compare past releases deepextend preserves array element index behavior identical way back jquery given counterintuitive leave ticket open decide tomorrow whether address", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "change makes nervous agree creating api today might worthwhile ignore rather replace target array behavior present long time", "d": "2/2016"}, {"body": "turns behavior standard", "d": "2/2016"}, {"body": "code function see docs passing function executes passed function document ready instead creating new jquery object see docs trick expects executed method regular function throws invoked document ready loses context object way get function get error tried following even also note discouraged mix jquery inline event handlers use method instead", "d": "2/2016"}, {"body": "dilemma defined timeout period specified request elapsed would coopt also mean components network chain reporting timeout periods independent one specified caller call although change seems almost trivial could easily compatibility impacts help code reported", "d": "2/2016"}, {"body": "used condition cause ajax failed timeout code aoscdevwebsitesiteng realized need everywhere express condition ajax timeout least implementation event upstream server timeout may caused two condition mean another thing except upstream server timeout one said gateway said may contain later condition chain opposite says deployed proxies known return dns lookups time however fuzzy unclear tell eg timeout exactly happened clear enough", "d": "2/2016"}, {"body": "since clear happened would say coopting even less necessary checking status seems like right thing way separate timeout somewhere network case timeout locally waiting network case", "d": "2/2016"}, {"body": "discussed meeting nt want make timeout ambiguous", "d": "2/2016"}, {"body": "thanks suggest add tips docs eg tip ajax timeout may cause proxies middlewares http error network chain earlier ajax", "d": "2/2016"}, {"body": "trying access collection single element also problem nt anything jquery please look help stack overflow", "d": "2/2016"}, {"body": "maybe supportjquery global lying around", "d": "2/2016"}, {"body": "seeing master used amd think happening amd mode testinitjs still runs global code synchronously jquery loads async adds back", "d": "2/2016"}, {"body": "examples deargithubdeargithub railsrails googlecloudplatformgcloudcommon dotnetcorefx golanggo", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "zenorocha wow nice thank", "d": "2/2016"}, {"body": "workaround applied", "d": "2/2016"}, {"body": "seems like support request rather bug report feature request start stackoverflow see help", "d": "2/2016"}, {"body": "dmethvin support needed already found workaround issue post primary intent reporting issue secondary intent way thoughts temporary fix issue second time around request passing ajax settings used first request header sent", "d": "2/2016"}, {"body": "investigate need repro case version jquery used etc code snippet nt enough us help help us feel needs addressed inside jquery", "d": "2/2016"}, {"body": "provide thanks", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "nt think", "d": "2/2016"}, {"body": "please give plunk", "d": "2/2016"}, {"body": "create codepen well locally ca nt get issue please give detail code snippet", "d": "2/2016"}, {"body": "tomorrow send html pages shows issue left work place monday february yashdeep hinge notifications githubcom wrote please give plunk reply email directly view github thank regards dr sharad kelkar", "d": "2/2016"}, {"body": "thanks please file issue small test case", "d": "2/2016"}, {"body": "problem related incompatibility jquery migrate plugin resolved migrate plugin changed issue jquery simply required proper version migrate plugin mon feb pm timmy willison notifications githubcom wrote closed reply email directly view github", "d": "2/2016"}, {"body": "happning due return htmlreplace rxhtmltag nt know done method htmlprefilter function html return htmlreplace rxhtmltag", "d": "2/2016"}, {"body": "duplicate resolve escaping characters attribute values using documentation yet released", "d": "2/2016"}, {"body": "thank would never find fine job", "d": "2/2016"}, {"body": "posterity test screenshot", "d": "2/2016"}, {"body": "see fixed timmywil mentioned commit messages closing issue", "d": "2/2016"}, {"body": "yes intended way method give data object attached element make one let check one already", "d": "2/2016"}, {"body": "also docs mention", "d": "2/2016"}, {"body": "well docs also say data associated element data object data object empty method returns false test case provided returns empty object", "d": "2/2016"}, {"body": "agreed legitimate", "d": "2/2016"}, {"body": "code behaving way want though correct docs wrong", "d": "2/2016"}, {"body": "getter actually create data object reason", "d": "2/2016"}, {"body": "args defined return data object one nt creates one attaches element returns new empty object ten years ago api could defined return element data would needed set new data item explicitly way defined though lots code doubt depends behavior assumption trying get full data item actually wanted use current behavior makes simpler created way see data element without creating presumably less common case", "d": "2/2016"}, {"body": "ok dmethvin right note jquery event system uses jquery data api store event handlers therefore binding event element using one shorthand event methods also associates data object element case hasdataattrs private data makes essentially useless separate issue", "d": "2/2016"}, {"body": "goal give caller way avoid accidentally creating unneeded data object still useful nt matter whether private public data whether already object agree useless user making inferences put data object okay get object enumerate hey empty never happen", "d": "2/2016"}, {"body": "think need fix docs saying return empty data objects true", "d": "2/2016"}, {"body": "agreed created", "d": "2/2016"}, {"body": "jquery code standard ui events spec apply event objects dispatched event target beginning dispatch implementations must first determine event object propagation path dom implementations applies even element propagation path moved within dom removed dom attribute part ancient behavior covered standard nt know pull rug clarify case consider problem example jsbincom jsfiddlenet", "d": "2/2016"}, {"body": "inline event handlers nt follow specification attached addeventlistener nt know assumption codes functionally equivalent light said jqueryless version functionally equivalent would like html ok documentqueryselector form addeventlistener submit function return false documentqueryselector button addeventlistener click function evt evttargetformremove indeed behave way jquery version jquery bug", "d": "2/2016"}, {"body": "getfree thanks following closing ticket", "d": "2/2016"}, {"body": "would fine really sure mobile trying adding plainobject property arschmitz clarify", "d": "2/2016"}, {"body": "bug fixed side see current code", "d": "2/2016"}, {"body": "reference see", "d": "2/2016"}, {"body": "oh yeah remembered ticket vaguely thought old tracker thanks", "d": "2/2016"}, {"body": "would nt call significant fault since change node version always good idea reinstall modules like change without reinstall nt expect everything would work correctly", "d": "2/2016"}, {"body": "really change major node versions usually needed even want safe amp reinstall necessary update newer major node version upgrade lts", "d": "2/2016"}, {"body": "upgrade lts would use nvm switch back forth patch versions node would nt always use case say pretty unconventional even want safe say yeah would really want safe switch major versions cc typicode nt use nt issue ca nt relate ticket say problem really exist repo anyway", "d": "2/2016"}, {"body": "would use nvm switch back forth patch versions node would nt always use case say pretty unconventional course always use since moment released seems nt understand let describe scenario newest node use jquery directory node comes install via nvm amp remove want says run luck remove amp make work seems like issue indeed report", "d": "2/2016"}, {"body": "let describe scenario say hard consider raaare case significant fault nevertheless frustrating us could grounds removal commithook", "d": "2/2016"}, {"body": "affect anyone uses nvm manage nodejs installs removes older nodes installing patchminor updates nvm popular nt think qualifies edge case significant fault prevents committing even locally unless bypass hooks additional barrier new contributors", "d": "2/2016"}, {"body": "proposed solution see couple possibilities remove git hook suspect would also fix issue seems common suggestion fixing issues husky browsing issues list given inclined leave asis leave git hook open issue husky repo sure fix admittedly sure mean path hardcoded assumed husky copy hook runs specific npm scripts sure different node versions would affect", "d": "2/2016"}, {"body": "admittedly sure mean path hardcoded cat githooksprecommit binsh husky path usersmgoldocumentsprojectspublicjqueryjquerycorenodemoduleshuskynodemodulesbin usersmgoldocumentsprojectspublicjqueryjquerycorenodemodulesbin usersmgolbin usersmgolcabalbin usrlocalherokubin usrlocalbin usrlocalsbin applicationscrossoverappcontentssharedsupportcrossoverbin usrbin bin usrsbin sbin librarytextexbin nodemodulesbin usrlocaloptdartlibexecbin cd f packagejson amp amp cat packagejson grep q precommit ne amp amp exit npm run precommit ne echo echo husky precommit hook failed add noverify bypass echo exit fi assume provided hardcoded path derived current shell path moment invoking note inside string", "d": "2/2016"}, {"body": "nvm popular nt think qualifies edge case nt believe said edge case said switching node lts patch versions rare case edge though rare one affect anyone think behaviour affects clear issue nt reinstall node modules run command changing major node versions seems nvm also favours reinstall approach given flag exist", "d": "2/2016"}, {"body": "said switching node lts patch versions rare case think people upgrading local node instances new major versions nt think upgrading patch minor rare issue nt reinstall node modules first npm package ever encountered forces nonmajor nodejs upgrades seems nvm also favours reinstall approach given flag affects global packages relevant case", "d": "2/2016"}, {"body": "think people upgrading local node instances new major versions nt said trying precise would nt repeat ie see husky first npm package ever encountered forces nonmajor nodejs upgrades yeah one common things maintainers package ask thoroughly reviewing issue try advice solves lot cases suspect user switches node versions lot packages needs reinstalled change node versions seems easy solve issue find happened affects global packages relevant case install packages local viseversa nt really matter installed point nvm would reinstall packages rebuild saying global packages need reinstalled local modules rebuilded", "d": "2/2016"}, {"body": "assume provided hardcoded path derived current shell path moment invoking npm install note inside string yea interesting surprised nt work without setting path", "d": "2/2016"}, {"body": "mgol seems going particulars things suggest move focus want want remove precommit", "d": "2/2016"}, {"body": "hi markelog thanks heads time hard coded mainly sublime text users problem may appear tools nt checked using sublime text git package problem modifies terminal tools nt aware committing sublime text git hook failing could nt find sublime hardcoding path makes possible run hooks terminal yeah tradeoff think check warning message code like could enhancement verify issue still present sublime maybe need setting git hooks anymore removed", "d": "2/2016"}, {"body": "typicode know hooks discouraged seems perfect case always replaced hook would nt surprise much path issue general issue os x gui apps different path terminal ones even regular nondynamic path modifications done reflected gui apps guess securityrelated measure nt able make extended reflected popular sourcetree git client os x means currently ca nt commit sourcetree cc jzaefferer nt use hack commit hook choose poison", "d": "2/2016"}, {"body": "regarding commitplease open issue still looking steps reproduce", "d": "2/2016"}, {"body": "mgol updated nt hardcoded anymore also noticed current sublime text build inherits started using cli point storing anymore new version supports installed use node version future release guess could handled well nt installed simply check skip avoid blocking gui tools users tested os x ubuntu sublime text feedbacks welcome", "d": "2/2016"}, {"body": "also noticed current sublime text build inherits path started using subl cli point storing anymore start eg launchpad gui apps os x nt inherit terminal started terminal eg currently ca nt commit via sourcetree without bypassing commit hooks find binary used new version supports installed use node version future release guess could handled well done work gui apps default", "d": "2/2016"}, {"body": "start launchpad work new hook scripts loads way loaded terminal sh githooksprecommit export nvmdir userstypicode nvmdirnvmsh amp amp nvmdirnvmsh even though gui tool nt aware terminal start modified run become available moment works sublime text started spotlight thing need set default version make available gui apps started terminal", "d": "2/2016"}, {"body": "typicode great thanks guess treat ticket reminder update husky jzaefferer think supporting way know applying workaround one app considering popularity managing node installations", "d": "2/2016"}, {"body": "pr", "d": "2/2016"}, {"body": "note use method remove native properties checked disabled selected remove property completely removed added element use prop set properties false instead", "d": "2/2016"}, {"body": "got test machine", "d": "2/2016"}, {"body": "looks like page using jquery two years ago bug present like submit patch could consider otherwise wo nt fixed since longer supported microsoft last month jquery patches needed consist lowrisk regression fixes", "d": "2/2016"}, {"body": "dmethvin also problem version reason testing version make sure nt something new kidsysco try jquery version", "d": "2/2016"}, {"body": "thing", "d": "2/2016"}, {"body": "sparse array detection culprit values indistinguishable holes easy fix though nt skip holes technically divergence forcing hand sparse arrays obviously broken anywhere needing support anyway plus damage confined rare scenario", "d": "2/2016"}, {"body": "technically divergence fix nt think diverge especially way long time point apply critical fixes branches", "d": "2/2016"}, {"body": "fix nt support", "d": "2/2016"}, {"body": "ah lol nt read carefully enough would nt changing breaking change though imagine people use jquery even nt test ie treating undefined differently would break code nt seem safe patch release", "d": "2/2016"}, {"body": "mmm works browsers except looks bug reaaaly edgy since array", "d": "2/2016"}, {"body": "side note sure consider edgy function used succinct way check value equal one many values sometimes one instead could", "d": "2/2016"}, {"body": "side note sure consider edgy five years since culprit added seems first reported pretty confidant", "d": "2/2016"}, {"body": "going use wonderful opportunity rant ie lt think bug happens real ie number users searching array probably counted one hand place find real ie without download gb vm one companies old production servers one ever opens web browser besides even code searches array user likely able execute code javascript page throw famous people know including test using ie emulation page laid correctly browser slow user likely give browser finishes laying rendering page even fix issue nt change fact workaround plugin fact self sure good idea introduce breaking changes markelog perhaps mention somewhere api docs something", "d": "2/2016"}, {"body": "mgol current case nt return fix cost breaking since browsers use native purely question supporting either sparse arrays search elements browser request latter fulfilling wo nt even break unit test afaict", "d": "2/2016"}, {"body": "thanks explanation get still think risky obviously wo nt requests keep current behavior change people report something expect different behavior oth think nt received lots requests change logic ie considering fact stop development lines sounds risky tamper especially patch release", "d": "2/2016"}, {"body": "yeah comes single bug report several years reporter says worked around code fix side may break opposite case nt know one exists wild appears one longer even companies running old legacy code compat view wo nt encountering problem", "d": "2/2016"}, {"body": "let get one thing straight since seems us confused would fix without touching anything else decided release would need according semver release patch version bump minor major version would violate semver policy adhere think nt invent new policies releases otherwise perspective every change could considered breaking absurd", "d": "2/2016"}, {"body": "would fix without touching anything else decided release would need according semver release patch version disagree fix one bug introducing another one would breaking change", "d": "2/2016"}, {"body": "disagree fix one bug introducing another one would breaking change question agree agree semver pretty clear bugfix patch version", "d": "2/2016"}, {"body": "even still discussed years wild one bug report reporter even says fix wo nt help affected environment nt even supported anymore suggest close issue move", "d": "2/2016"}, {"body": "question agree agree semver pretty clear bugfix patch version bug fix breaks public api bug fix bug fix breaking change semver indeed clear means major version x xyz x gt must incremented backwards incompatible changes introduced public api may include minor patch level changes patch minor version must reset major version incremented agree scottgonzalez close issue wontfix", "d": "2/2016"}, {"body": "scottgonzalez agreed let leave one alone", "d": "2/2016"}, {"body": "major version x xyz x gt must incremented backwards incompatible said interpretation suggest every bugfix could interpreted backincompat since could code depends bug agree scottgonzalez close issue wontfix", "d": "2/2016"}, {"body": "works browser could create fiddle", "d": "2/2016"}, {"body": "note forms nested main form sorry forgot paste detail example", "d": "2/2016"}, {"body": "dom expect fiddle nested forms strange things second form first removed parsing browser end two toplevel forms two nested forms given actual dom structure jquery behaving correctly", "d": "2/2016"}, {"body": "sorry nt notice domok thanks", "d": "2/2016"}, {"body": "thanks report afaik always case since made conforming spec see detailed description comment spec explicitly requires lowercasing attribute name description applies html right thing algorithm nt apply svgs jquery nt support svg manipulation rare exceptions though nt think change anything determining current context applying different algorithm would messy however seems might well avoid lowercasing let browsers magic mostly problem old ie would make work automatically thoughts ps agcolom keep mind though use jquery svgs find amp cases going support svg library", "d": "2/2016"}, {"body": "mgol yes thanks info checked list html attributes appear lowercase wonder whether might worth adding note docs", "d": "2/2016"}, {"body": "might add note would nt want end situation explicit warnings svg every api page still want investigate whether may drop lowercasing jquery regardless lack official svg support", "d": "2/2016"}, {"body": "see trail tears", "d": "2/2016"}, {"body": "dmethvin yeah issue lowercasing much perhaps nt need", "d": "2/2016"}, {"body": "mgol think probably right lowercased old ie could nt remove consistency ca nt recall discussion seems like try remove altogether", "d": "2/2016"}, {"body": "think probably right lowercased old ie could nt remove consistency yes think exactly case prepare patch", "d": "2/2016"}, {"body": "issue pr api issue continue dicscuss howif want document nt seem actionable actions possible ticket going close thanks investigation agcolom amp dmethvin", "d": "2/2016"}, {"body": "land branches mm nt seem worth okay", "d": "2/2016"}, {"body": "thanks", "d": "2/2016"}, {"body": "markelog tests broken browsers could fix reopen", "d": "2/2016"}, {"body": "seems caused using instead surprised works test using correct jquery version", "d": "2/2016"}, {"body": "also noticed variable assign called better align tests previous nomenclature would called different usual either way", "d": "2/2016"}, {"body": "reason work amd reason missed called done stop think fine", "d": "2/2016"}, {"body": "think fine stopping anything notifies test runner finished called old api resuming test suite calling also almost universally called test runners code switched new api place whole suite called", "d": "2/2016"}, {"body": "notifies test runner finished whole process called stopping whereas stop synonym finish think free choice name variables long names sufficiently reflects purpose", "d": "2/2016"}, {"body": "discussed length team meetings decided would add much code reduce performance show otherwise via pull request could consider perhaps hook would allow implement unhandled rejections plugin without enlarging code code andor harming performance note example implement stack trace plugin cuts performance half record stack trace every deferred however let say promiselike implementation jquery five years given jquery popularity use think widely used implementation javascript years ever remember anyone asking unhandledrejection hook think common reason people need one developing things like misspell method name try parse invalid json jquery things throw immediate error console say oh silly fix promisea compliant swallow exceptions like everyone else would cruel give developers clue mistakes code examples explicitly throwing errors different implicitly thrown errors like undefined developers rarely expect misspell things anticipate json returned server may malformed thrown error part api contract lot easier developer understand need handle example rejects cases like nt received complaints", "d": "2/2016"}, {"body": "years ever remember anyone asking unhandledrejection hook promisea compliant swallow exceptions like everyone else yea nt need hook either exactly promisea compliant added began think given chance errors explicitly without yelling every time wtbs must agree common use case misspellings etc developer choose error would still guard eg determining callback error one expects something truly unexpected else would still swallowed still promise sees wider adoption used conjuction deferreds gets implemented browsers experienced devs might start want behavior even jquery meaning able disable explicitly errors needed event handle rest though said creating plugin might best way go least still able need access pool bound handlers nt look get jquery inside", "d": "2/2016"}, {"body": "yea nt need hook either exactly promisea compliant added catch began think given chance catch errors explicitly without jquerydeferredexceptionhook yelling every time remove hook entirely add filters differently meant minimal default way report errors prevent people tearing hair still promise sees wider adoption used conjuction deferreds unhandledrejection gets implemented browsers experienced devs might start want behavior even jquery meaning able disable jquerydeferredexceptionhook explicitly catch errors needed unhandledrejection event handle rest goal jquery basic promisea compatibility without bloating library loaded millions times day need different behavior example know platforms support native promise willing load minified bluebird library though said creating plugin might best way go least still able need access pool bound catchthen handlers nt look get jquery inside exceptionhook yes requires bunch extra bookkeeping nt perhaps done strategically placed hooks nt know definitely seemed like wanted incorporate jquery close ticket ways facilitate better implementation without big code performance impact let us know", "d": "2/2016"}, {"body": "clear without live test case demonstrating expected observed guess invalid html rather jquery fault elements allowed nest attempts result closest valid ancestor node adopting note elements allowed contain elements either although consequences violating content model less severe going close feel free follow jsfiddle live case believe mistake upon reconsider possibly reopen issue", "d": "2/2016"}, {"body": "found total windowsettimeout srcqueuedelayjs line srccorereadyjs line probably one causing code executed srcajaxxhrjs line thx", "d": "2/2016"}, {"body": "node release code posted npm runs supported environments exactly environment running using something like jsdom see discussion release search settimeout", "d": "2/2016"}, {"body": "thanks report see use domino module provide implementation nodejs side module nt define etc breaks jquery work outside browser requires implementation browser apis jquery uses switched use taking almost browser globals global inconsistent meant someone run jquery environment nt globals provide complete implementation methods would still work bug reports see eg fix issues considered using fall back global one provided pr would add size amp complexity decided consistent take provided two choices switch implementation provides amp friends eg jsdom submit pr domino adding support apis", "d": "2/2016"}, {"body": "thanks time feedback request domino made try update code less dependent switched jsdom happy coding", "d": "2/2016"}, {"body": "jquery hides something remembers computed display called would set previous display elements forces value case pretty much case computed property value", "d": "2/2016"}, {"body": "excellent bug report test cases clear description note changing logic jquery still changes planned may check current development version beta tried use versions checked behavior fine experience problem great", "d": "2/2016"}, {"body": "thanks tried versions absolutely positioned span gets know correct value first time shown well guess bug opposite thought", "d": "2/2016"}, {"body": "need browser window amp tab run tests focused duration test case nt noticed tests flakey ci nt fail randomly except firefox even giving window focus nt always help disabled observations", "d": "2/2016"}, {"body": "wish way make things reliable think crazy edge case browser nt expect focus bouncing around inside page browser window background seeing failures browser foreground messing window tests may something need investigate", "d": "2/2016"}, {"body": "introduction integration tests fix issues also roadmap btw feel free explore provide alternative solutions", "d": "2/2016"}, {"body": "please nt promote website submitting issues jquery", "d": "2/2016"}, {"body": "jsdom problem jquery problem think need investigate bit", "d": "2/2016"}, {"body": "works browser sounds like jsdom issue reopen test case reproduce", "d": "2/2016"}, {"body": "figured worth miketaylr open ticket discuss wow jquery released years ago today pretty easy edit source point correct map file cdn concerned may trigger sort alerts people nt expect old files ever change bits", "d": "2/2016"}, {"body": "nt known bug sure look bug tracker find ticket", "d": "2/2016"}, {"body": "oh see different bug one thinking", "d": "2/2016"}, {"body": "another thing could delete discouraging use plainnamed jqueryjs jqueryminjs anyway", "d": "2/2016"}, {"body": "since verge recommending people use subresource integrity seems like editing file less less appealing idea always bothered two files version different cdns could different hashes time put map comments file true way different cdns paths mind deleting map file seems like best solution need apply one", "d": "2/2016"}, {"body": "agree deleting map file", "d": "2/2016"}, {"body": "opened cdn issue", "d": "2/2016"}, {"body": "thanks help everyone", "d": "2/2016"}, {"body": "suppose could hard code path sizzle given sizzle separate module treating path could changed nt keep nodemodules", "d": "2/2016"}, {"body": "would hardcoding path sizzle prevent users resetting something else", "d": "2/2016"}, {"body": "believe solution could simple would remove leave guy wants use sizzle appjs sizzle else use jquery selector appjs without sizzle totally modular optional", "d": "2/2016"}, {"body": "unfortunately solution wo nt work alternative selector engine gets swapped sizzle removed custom build also still hardcode path sizzle selectorsizzle", "d": "2/2016"}, {"body": "mgol answer question path sizzle could changed think would look like check", "d": "2/2016"}, {"body": "looks like reason ajaxjs potentially needs constructor one rare call related according docs must dom object even calling sizzle supported case might possible avoid pulling selector engine refactoring", "d": "2/2016"}, {"body": "turned easier thought originally thinking sizzle position could change used bower node modules given sizzle position static repo external folder think safe use path", "d": "2/2016"}, {"body": "timmywil still forcing sizzle possible make follows doubt option amd standard possible requirejs", "d": "2/2016"}, {"body": "lagden different issue plan fix specify path sizzle done sizzle continue default selector engine module swapped build time want users explicit swapping module considered dangers qsa bug fixes still apply modern browsers selector extensions fix qsa scope issue etc said still possible specify like use selectornative instead sizzle amd mode", "d": "2/2016"}, {"body": "timmywil wow much better tks", "d": "2/2016"}, {"body": "looks like duplicate let follow", "d": "2/2016"}, {"body": "works simple examples please always provide test case site run like going assume duplicate may check works nt put development version production though nt please provide complete test case wait jquery", "d": "2/2016"}, {"body": "found problem nt exists jq returned return window obj", "d": "2/2016"}, {"body": "yeah definitely fixed jquery", "d": "2/2016"}, {"body": "thanks info related sure support scenario svg support limited basically interoperability html amp class manip", "d": "2/2016"}, {"body": "example getting position svg element using position left position top works great apparently stop working chrome removes svgelementoffsetparent", "d": "2/2016"}, {"body": "yeah seems good replacement bad removing api without providing replacement chrome status dashboard erroneously says replacement really like remove new api ready see nt time back maybe suggest sth cssom would fill role would best pursue kborchers know considering chrome team plans seems pretty urgent paulirish could chime", "d": "2/2016"}, {"body": "crbug blinkdev thread would suggest someone chime bug ask philip boris jquery usecases gbcr used", "d": "2/2016"}, {"body": "posted blinkdev thread", "d": "2/2016"}, {"body": "note nt exist svg elements firefox never worth doubt whatever agcolom actually works great unless different definitions great", "d": "2/2016"}, {"body": "agcolom post minimal test case", "d": "2/2016"}, {"body": "true replacement may ask see code using deployed web another code path firefox", "d": "2/2016"}, {"body": "general find offsetparent usages jquery ui jquery mousewheel plugin relies well general usage svgspecific though", "d": "2/2016"}, {"body": "tried knock something quickly chrome firefox give different results need look bit may well code nt work great pure fluke getting correct results may go hide cave try afternoon got get ready go work meetings", "d": "2/2016"}, {"body": "nt exist svg elements firefox also nt exist ie btw interesting though judging previous discussion seems consider changing logic module try using offset properties since seems properties road removal htmlelement", "d": "2/2016"}, {"body": "since seems properties road removal htmlelement nt think ever happen would basically break current jqueries use extremely high number one would thing", "d": "2/2016"}, {"body": "nt change fact worth stop using apis considered deprecated amp legacy though", "d": "2/2016"}, {"body": "right roughly zero chance browser attempt removing offset htmlelement measure usage things deprecationremoval blink certainly used far widely", "d": "2/2016"}, {"body": "maybe nt articulate right nt mean hurry something asap measure usage things deprecationremoval blink certainly used far widely aside vendors measuring usage constructions also integrated tests popular libs tests process behaviour spec sure one removed tomorrow seems removed eventually since properties already take account new features new specs basically deprecated", "d": "2/2016"}, {"body": "think would good idea consider changing api behaviour next major things mentioned", "d": "2/2016"}, {"body": "seems removed eventually optimist unless eventually means years agree switch implementation anyway", "d": "2/2016"}, {"body": "one planning remove offset said switching away good idea anyway lies fact returns integer css pixels means often gives incorrect answers world highdpi screens subpixel text layout browser developer hat would love understand exact use cases expose better apis accomplishing", "d": "2/2016"}, {"body": "bzbarsky foolip use case follows developing tool students help learn programming draw flow chart svg graphical representation code writing everything scratch javascript output part flowchart composed various svg elements ellipse text rectangles polygons polylines statement example order line polyline represent arrow rectangle text inside rectangle today drawing end ifelse statement would check whether already arrow draw using polyline end position longest branch one closed another ifelse statement longer longer need detect nt one always case hopefully drawn line going horizontally meet branch halfway branch one could use elementfrompoint guarantee element position view hidden part div ie need scroll get everything crashes instead checked polyline positions compare position draw absolutely correct svg element return different value pixels chrome firefox chrome gives would expect ie draw line left top positions values firefox pixels however get position value another element page reference difference position looking seems consistent browsers use reference point changed longer require detect svg element position let know get new case require however may make think use cases ps future would nice leave sarcasm github comments terribly useful tends drive people away contributing open source", "d": "2/2016"}, {"body": "agcolom ok specific use case find position element page general relative element ignoring transforms moment ok since offset nt handle anyway sane way would covered getboundingclientrect transforms involved things get bit complicated apis added handle apologies perceived sarcasm nt intention meant acknowledgement fact people fact different definitions works great means depending exact situations", "d": "2/2016"}, {"body": "bzbarsky thank yes trying find whether specific element position draw imagine could common use case", "d": "2/2016"}, {"body": "agcolom absolutely correct svg element return different value pixels chrome firefox chrome gives would expect ie draw line left top positions values firefox pixels hmm return something useful firefox edge well chrome html elements nt looked jquery implements perhaps answer lies within", "d": "2/2016"}, {"body": "jquery maintainers issues heard deprecation based volume feedback compared changes past clue painful actual removal would users jquery", "d": "2/2016"}, {"body": "ok wonder getting confused jquery jquery alpha give results upload simple test case", "d": "2/2016"}, {"body": "jquery jquery may want launch live preview also interesting note difference getboundingclientrect ff chrome using jquery left right", "d": "2/2016"}, {"body": "changes likely jquery mean btw version one", "d": "2/2016"}, {"body": "fixed via width height fixed via worked pro though", "d": "2/2016"}, {"body": "scottgonzalez arschmitz afaik ui uses could present couple use cases get new appropriate api specced considering considered legacy api", "d": "2/2016"}, {"body": "uses draggable sortable rewritten scratch nt think uses persist rewrites", "d": "2/2016"}, {"body": "seems one really needs equivalent nonlegacy apis close issue nt support svg nodes exceptions since never implemented every popular browser webfacing code depend", "d": "2/2016"}, {"body": "plans patch jquery calling visible wont crash chrome quickly slimmed comments seems determination dont support offsetparent svgs regardless many people want dont want support jquery still nt error encounters elements", "d": "2/2016"}, {"body": "idontusenumbers crash even exception wo nt happen attributes removed happen using jquery older selector match svg element match svg elements ie svg elements always considered hidden jquery fixed nt need anything", "d": "2/2016"}, {"body": "break please provide detailed explanation", "d": "2/2016"}, {"body": "likely fixed master close assumption something else please provide test case reopen", "d": "2/2016"}, {"body": "sorry guess nt testing quite right evedently simply typed link jquery wrong turns nonissue thanks", "d": "2/2016"}, {"body": "make good point distribution repo general information say least would link jquery documentation could also include information common ways include library imports environments support none yet babel require node require webpack require browserify amd script tag", "d": "2/2016"}, {"body": "would love contribute code would increase perf reduce size also want reach us irc freenode jquerydev channel test jquery performance mainly use jsperf sometimes manual profiling talking years create reliable benchmark suite graphs every commit would show us performance changed every commit like plato perf second way integrate benchs testsuite cap like project third create lodashlike bench comparing previous jquery versions like also sizzle also requires manual execution would much cooler execute saucelabs browserstack core something similar tests much outdated removed", "d": "2/2016"}, {"body": "also note comparing size gzipped minified file care smaller compression nt necessarily smaller compression generally favor size performance except particularly hot paths difference exceptionally stark", "d": "2/2016"}, {"body": "markelog trying reduce size increase performance asking performance tests decrease however realized test suite completely different knew need first understand works even dream adding anything like graphics time reliable benchmark would really good sometimes difficult opinionated optimize example nt know size important performance take account checking gzipped see know literal repetitions take almost space gzip unique character strings like error messages take lot times result smaller bigger gzipped file mistery tips really thankful", "d": "2/2016"}, {"body": "always good new people reviewing rethinking code nt comprehensive performance tests would love lot work create far optimize guess usage apis since nt reliable way gather actual usage would guess adding classes function probably rare case would unusual performance bottleneck real code one thing keep mind benchmarks jsperf manipulating dom structures time takes execute code may really small compared potential force layout rendering engine see results areas like showhide dom reading one batch followed dom changing finally keep mind support really broad set browsers support modern apis nt want android throwing error dying although may willing let less right cases long nt blow able test browsers browserstack saucelabs", "d": "2/2016"}, {"body": "however realized test suite completely different knew need first understand works even dream adding anything like graphics time graphics stuff would ideal result relatively hard time consuming task point necessary shoot stars would tool integrated ci build process either would compare numbers ones checking cap would already awesome start project integrate perf tests testsuite case whereas already automatically run tests supported browsers paradigm might fit nicely optimize addclass test addclass function return test example like dmethvin said cause reflow browsers process expensive performance wise comparing hottest path method perf tests would important like method like newest beta improved animation cases huge win echoing statement like show example pull heavily improve perf increase size expensive method always used event module makes sense accept pull since would reflect events change would indeed improve perf hand improve rps something increasing size probably would nt enough counter example remember time improved traversing methods nt landed added bytes something like traverse methods already fast enough following experience would provide pull would worsen perf traversing methods decreasing size consider time probably would nt accept pull would decrease perf event module improving size", "d": "2/2016"}, {"body": "thank willingness help us improve jquery new contributors always welcome would appreciate fresh eyes codebase please feel free look code submit many pull requests deem appropriate evaluate criteria always used based size performance readability closing ticket nt want reduce size use roadmap track issues definite end rewriting internal speed framework however wo nt adding one roadmap reducing size central everything nt think need bullet point remind us ps think markelog meant pull", "d": "2/2016"}, {"body": "ps think markelog meant pull oh right sorry fixed comment", "d": "2/2016"}, {"body": "evaluate criteria always used based size performance readability btw think would makes sense document", "d": "2/2016"}, {"body": "think would makes sense document sure needed pretty standard judge pull requests based things besides sometimes x factor vote", "d": "2/2016"}, {"body": "mm okay every project different like nowadays emberangular people example use transpilers friendly size whereas consider size priority comments like nt know size important performance turned couple times", "d": "2/2016"}, {"body": "nt know size important performance certainly statement would want document depends right case performance cost great size becomes less important performance performance cost great percentage maybe factors like much performance cost impact real use cases also subjective subject opinions", "d": "2/2016"}, {"body": "nt general position though think generally favor size performance impression", "d": "2/2016"}, {"body": "anyway guess fruitless discussion nt feel strongly", "d": "2/2016"}, {"body": "include dev dependency track build command usage remove causes problems", "d": "2/2016"}, {"body": "thanks report nt aware plans nt officially support svg apis recently switched see land jquery test beta mostly avoid rounding integers good know advantages", "d": "2/2016"}, {"body": "thank quick reply take look", "d": "2/2016"}, {"body": "also issue branch filter applied svg element", "d": "2/2016"}, {"body": "jeremywadsack harmless properties get removed method automatically start using check", "d": "2/2016"}, {"body": "ca nt repro fail nt including compat mode via browserstack thing saucelabs mgol could check correct browser spawned think someone verify absence failure real thing would need disable test", "d": "2/2016"}, {"body": "markelog nt fail browserstack ie version might related run iframe rather exclude test investigate real reason failure easy mask real bug way edit joined swarm manually browserstack fails nt run outside testswarm", "d": "2/2016"}, {"body": "good catch mgol check", "d": "2/2016"}, {"body": "definitely interested improvements although far enough away nt think say browsers environments support remember people use jquery places like chromefirefox plugins node jsdom well ideas might go roadmap", "d": "2/2016"}, {"body": "fine sufficiently dry nightmare one side spectre fine nightmare problem highly related tests without sufficient abstraction issue related bit different kind say problem highly related tests without sufficient abstraction guilty recently tests question defense nt yet upgraded version qunit encourages actually could long time new way convenientexplicit seems nt provide much existing functionality clear creating ticket pursuing idea blaming anyone anything tests one oldest js tests seems came time update ideals", "d": "2/2016"}, {"body": "seems general guidance ticket rather concrete task timmywil consistently moving things roadmap keep zombie tickets open long", "d": "2/2016"}, {"body": "seem like roadmap item since nonspecific", "d": "2/2016"}, {"body": "said like improve showhide tests approach would acceptable consider writing tests like would like provide example new tests could structurized discuss pull approach acceptable land new show hide tests maybe add note docs close ticket close ticket nevertheless think zombie ticket need find time ticket", "d": "2/2016"}, {"body": "waited adding roadmap like see example signing across tests", "d": "2/2016"}, {"body": "even though tests nt matter element taken work understand train thought commit lands master branch claiming correct selections would propose gradually since could lot work action one commit would preferable yeah hard example take module tonight agree closing indistinguishable wontfix point avoid reoccurrence looking objective characterization well always comment tests fix lot already even counting aforementioned commits think longer write fragile tests", "d": "2/2016"}, {"body": "hi decided hijack limiting test suit operations module markelog immediately hit bump mentions attributesjs one candidates explicit limiting necesserily first one look test see element used obvious element ie nt need explicitely filtered becomes obvious looking inside", "d": "2/2016"}, {"body": "ticket operation safety appropriate leave selections like problematic cases almost always start element selectors since likely inadvertently match content beyond control eg qunit", "d": "2/2016"}, {"body": "ok ignored selections use id onthefly created markup explicit wrap element like xml element context like left unlikely possible select outside inheritance used lines mentioned question want fixed inheritance context selection personally understand thingy defined", "d": "2/2016"}, {"body": "ok ignored selections use id onthefly created markup explicit wrap element like xml element context like explicit wraps necessarily good begins section code manipulates attributes rather content dynamically generated bad form purview issue selections would question want fixed inheritance context selection straightforward means would reserved exceptional cases selection broader required proper testing nt attributesjs personally understand thingy defined fixed copy would better named independent one test see testindexhtml testjqueryjs used whenever test needs rely jquery functionality tested eg manipulation tests could succeed even jquery flaws selection doubt ever get level separation honestly mostly academic issue core functionality jquery stable rarely see problems relying system test however distasteful practice", "d": "2/2016"}, {"body": "another offender child adjacent selector test running whole test suite chrome almost always fails p gt gt assertion", "d": "2/2016"}, {"body": "heh actually first identified offender", "d": "2/2016"}, {"body": "pr", "d": "2/2016"}, {"body": "concision decision removed tests completely unrelated note complete absence", "d": "2/2016"}, {"body": "completely unrelated note complete absence toggle tests done support show hide logic toggle logic showing hiding something equivalent show hide toggle basically choosing call show hide also incapsulated logic choice ps sorry verbosity", "d": "2/2016"}, {"body": "precisely point whether call different effects ideally would coincide always equivalent always equivalent", "d": "2/2016"}, {"body": "deciding whether call yes exactly logic deciding logic one reflect obvious relation think discrepancy ideally nt think ideally correct word seems logically point", "d": "2/2016"}, {"body": "nt think ideally correct word seems logically point agree case past", "d": "2/2016"}, {"body": "agree case past would count bug", "d": "2/2016"}, {"body": "seem like arguing fix", "d": "2/2016"}, {"body": "arguing keeping old logic whereas fix bug could additional old behaviour argument replacement position comes two statements use exact condition determining element hidden think given truth previous behaviour line first condition battle tested arguments change", "d": "2/2016"}, {"body": "use exact condition determining element hidden think given truth never need determine element hidden needs guess setting nonempty inline display necessary sufficient give element layout distinction significant determining element hidden matters methods might need show already know priori previous behaviour line first condition battle tested arguments change repeating claim nt make true arguments change principally eagerness permanently unnecessarily set inline display values derived circumstantial style cascades already demonstrated inconsistency", "d": "2/2016"}, {"body": "show hide never need determine element hidden simple true nt understand trying say way determining element hidden repeating claim nt make true repeated seems confused position summarized arguments change principally eagerness permanently unnecessarily set inline display values derived circumstantial style cascades already demonstrated inconsistency still sets inline display cases still wo nt go away preferred end result improve performance asked us one asked us change logic one found unexpected confusing yes case responsive stylesheets said still words principally eagerness permanently unnecessarily set inline display values derived circumstantial style cascades sufficient argument stand position leave perf part improvement hook new logic contradict change logic back would nt need fix ticket would need consider fixing inconsistency showed", "d": "2/2016"}, {"body": "show needs guess setting nonempty inline display necessary sufficient give element layout distinction significant determining element hidden matters methods might need show already know priori call significant say needs guess say nt matter whatever way determining stands anyhow", "d": "2/2016"}, {"body": "fadeto btw", "d": "2/2016"}, {"body": "summarize position completely ignore hiddenness elements except deciding try forcing layout specific goal ie desirable empty inline display computed possible nondisconnected etc need know elements hidden affects behavior use logic determine believe assume disconnected elements hidden ticket determine", "d": "2/2016"}, {"body": "hide completely ignore hiddenness elements logic determination nothing explore show toggle fadeto animate etc need believe assume disconnected elements hidden", "d": "2/2016"}, {"body": "come agreement reason ask blocker also ca nt even grasp warn shim old behavior migrate without list behavioral changes also need docs", "d": "2/2016"}, {"body": "yeah need submit pull request details bit swamp lately one week sorry dave", "d": "2/2016"}, {"body": "note also affects google chrome ubuntu way ie tag ceefour", "d": "2/2016"}, {"body": "antonnz problem bug fixed jquery please try amp report new issue still broken let clutter one", "d": "2/2016"}, {"body": "work fine see", "d": "2/2016"}, {"body": "pr let later ca nt move stuff excluded slim build", "d": "2/2016"}, {"body": "later ca nt move stuff excluded slim build nt believe true semver dictates deprecation minor version bump case might mean slim build volatile full build arguably makes sense since explicitly excluding functionality think would perfectly acceptable eg deprecate jqueryisnumeric jquery resulting immediate removal slim build alternatively could include deprecated functionality probably makes sense adhering semver said course fine deprecating", "d": "2/2016"}, {"body": "getting exact error jquery full stack last thing within code happens jquery kind like either browser b extension c piece code running something set textcontent thats bit causing see anything suggesting jquery think likely extension breaking dom seeing problem chrome windowsmac browser see", "d": "2/2016"}, {"body": "backported amp changed milestone used say", "d": "2/2016"}, {"body": "tried getting error version please help error object readystate responsetext undefined status statustext typeerror read property open undefined", "d": "2/2016"}, {"body": "awaiting sizzle update label fixed sizzle btw need keep ticket open considering nt know get", "d": "2/2016"}, {"body": "awaiting sizzle update nt mean fixed sizzle means requires fix sizzle however agree might well close see solution right rely sizzle address performance issues", "d": "2/2016"}, {"body": "fwiw fixed sizzle agree keeping closed anyway", "d": "2/2016"}, {"body": "oste sure create local html file contents provided works fine chrome tried multiple times", "d": "2/2016"}, {"body": "per meeting decided pseudos", "d": "2/2016"}, {"body": "reported chrome deprecating amp svg elements nt officially support good know buy fractional data switching", "d": "2/2016"}, {"body": "changes provoked new issues meeting decided revert offending commit three branches tackle issue", "d": "2/2016"}, {"body": "changing sounds like breaking change might need wait added needs review label nt forget doubt mine", "d": "2/2016"}, {"body": "changing sounds like breaking change might need wait", "d": "2/2016"}, {"body": "hmm ok maybe mean surely break code may considered bug fix due description api wait fixes edge cases may break code least minor release though set milestone nt forget reschedule later", "d": "2/2016"}, {"body": "clear exactly going whether original report even bug could definitely use better unit tests somebody knew right answers smilecat", "d": "2/2016"}, {"body": "guess jsbin output clear enought", "d": "2/2016"}, {"body": "run across old nonjquery bug simple", "d": "2/2016"}, {"body": "right already using inside tag", "d": "2/2016"}]