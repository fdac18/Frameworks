[{"title": "controller instantiated dynamically added directive element", "body": "angularjs script demonstrates controller dynamically added directive element instantiated script two directives element meant contain one elements add necessary html markup see example code page run app controller elements available via however added dynamically controller available controller reported complete example demonstrating problem run browser viewscontainer display block outline solid red padding view display block outline solid blue padding var angularmodule testapp mdirective viewscontainer function return restrict e controller function var registeredviews thisregisterview function ctrl registeredviews ctrlviewname ctrl link function scope element attrs viewsctrl scopeviews viewsctrl inner view components mdirective view function return restrict e require view viewscontainer controller function element attrs thisviewname attrsname link function scope el attrs ctrls var viewctrl ctrls var viewsctrl ctrls consolelog view attrsname link function called viewscontainer controller viewsctrl view directive controller viewctrl viewsctrlregisterview viewctrl code allow adding viewscontainer view dynamically code mrun function rootscope compile rootscopeaddviewscontainer function html lt viewscontainer gt lt p gt lt code gt viewscontainer lt code gt lt p gt lt button ngclickaddview event gt add view lt button gt lt viewscontainer gt postlinkfunction compile angularelement html element postlinkfunction rootscope angularelement documentbody append element rootscopeaddview function event viewelement angularelement eventtarget parent parent viewname aview new date gettime html lt view name viewname gt lt gt view viewname lt gt lt p gt look web developer console lt p gt lt p gt see lt code gt view viewname view controller undefined lt code gt lt p gt lt p gt undefined solution lt p gt lt view gt rawelement angularelement html angularelement viewelement append rawelement postlinkfunction compile rawelementcontents element postlinkfunction rootscope consolelog view viewname viewscontainer controller elementcontroller viewscontainer consolelog view viewname view controller elementcontroller view consoleerror help", "num": "838", "d": "2/2015"}, {"title": "upgrade jasmine report async errors", "body": "right async errors report stack traces tests fail makes hard debug issues", "num": "830", "d": "2/2015"}, {"title": "impossible inject default appdocument di dart", "body": "today default app document registered using applicationjs like injected another class would write javascript import appdocumenttoken export class title appdocument constructor inject appdocumenttoken appdocument thisappdocument appdocument works perfectly fine js fails dart compilation time internal error package error line pos expression valid compiletime constant title inject appdocumenttoken appdocument sure transpilation problem dart limitation ca nt overcome case probably change document registered example introducing new type using token di blocks", "num": "827", "d": "2/2015"}, {"title": "demo toast incorrectly pushes fab", "body": "head unselect toast position checkboxes open toast options notice bottom right fab move even though top left toast appears container also bottom left toast move bottom right fab would expect two toasts appear without affecting fab moving breaks paperness material design spec image showing issue", "num": "822", "d": "2/2015"}, {"title": "benchpress report fps spf missed frame count", "body": "fps average min max frames per second spf average min max seconds per frame missed frame count number frames took", "num": "821", "d": "2/2015"}, {"title": "create scriptspublishpubpublishsh", "body": "similar script must scrub pubspecs prior publishing", "num": "820", "d": "2/2015"}, {"title": "relying asi auto semicolon insertion atscript makes tooling harder", "body": "stock webstorm gives warning statements nt end semi could turn warning ide rather rely asi like format codebase clangformat nt understand javascript syntax enough understand statement terminates linebreak instead semicolon instead removes linebreak breaking code general pity carry forward asi atscript since complicates tooling anyone strong desire omit semicolons atscript code mprobst suggests well working mechanism finding asi abuses codebase", "num": "817", "d": "2/2015"}, {"title": "bug ngmessages ngmessagesinclude crashes inside ngrepeat", "body": "bug introduced using ngmessagesinclude inside ngrepeat ngform might relevant crashes error see demo code working fine crash occur empty must content ie paste demo code html matsko related", "num": "816", "d": "2/2015"}, {"title": "use static di benchmarks", "body": "tbosch really use static di benchmarks configuration pain maintain would great switch dynamic di ie reflection dart", "num": "815", "d": "2/2015"}, {"title": "feat ngmessages allow using template tags included messages", "body": "projection", "num": "810", "d": "2/2015"}, {"title": "fix foreach nt add initial iterator item", "body": "started work turned bug directive pass collection items collection empty still iterates least one empty item bug visualised right vicb asked add test fix created issue forget work gon na try fix ngconf", "num": "809", "d": "2/2015"}, {"title": "terminate compilation early style elements", "body": "currently step encounter style element set true disable steps terminating compile process earlier case would speed compilation see two ways returning value add method export class compilecontrol exit boolean internalprocess results startstepindex parent compileelement current compileelement thisexit false var istartstepindex istepslength amp amp thisexit terminate thisexit true tbosch think", "num": "808", "d": "2/2015"}, {"title": "stop minifying benchmark code", "body": "gives unhelpful error messages clue li without minifying", "num": "805", "d": "2/2015"}, {"title": "allow directive guard changeddetection", "body": "directive able disable change detection light dom knows current view visible needs annotation level information html compiler generate additional class current view presence type injection let compiler know artificial change detection boundary child elements decorator selector pane bind selected selected class pane interface cdc changeddetectioncontrol constructor cdc changedetectioncontrol thiscdc cdc set selected value thiscdcenable value would allow", "num": "795", "d": "2/2015"}, {"title": "allow directive control changedetection contract", "body": "currently changedetection supports pruning branches updating components binding changes current mechanism imperative declarative one suggested property set default", "num": "794", "d": "2/2015"}, {"title": "port dart changedetection generator", "body": "need implement see example", "num": "793", "d": "2/2015"}, {"title": "support query injection elementinjector", "body": "cases component would like inject list child components light dom list needs observable component notified child component creationdestruction example would inject could databound inside component template querylist works list like data bound children apis allow component listen additionremovereposition children change content response child components adderemoved light dom support control direct child match light dom", "num": "792", "d": "2/2015"}, {"title": "elvis operator expressions", "body": "currently thrown error expression suppress null dereferencing support would short circuit evaluation null way could explicit notation would show values could syntax fallow dart proposal", "num": "791", "d": "2/2015"}, {"title": "dart dom facade innerhtml", "body": "wired thing going dart dom facade property gt false gt true gt exists gt null basically means ca nt use name test property name lookup setter dart going specialcase property unblock person familiar dart could give hand one would awesome", "num": "789", "d": "2/2015"}, {"title": "add support css files build system", "body": "css copied dist folder possible add css files examples", "num": "788", "d": "2/2015"}, {"title": "support alternative ways firing events components", "body": "current support support injection streamcontroller support retrieval streams component eventssource close closestream class mycomponent closestreamcontroller closestreamcontroller closestream stream constructor closestreamcontroller new streamcontroller closestream closestreamcontrollerstream", "num": "781", "d": "2/2015"}, {"title": "improved style support components rough proposal", "body": "part emulating shadow dom implement solution loading css inside components embedding style rules directly component template undesirable makes templates harder read makes much harder use css preprocessors sass less would lead duplicating common styles problems element normal way loading css inert shadow dom css generally frowned upon performance reasons opportunity since angular control styles actually rendered component shadow dom emulation extend ideathe process give component authors power proposal angular core implements directive include style file via url discussion sake let call probably end something like though used component native shadow dom output element rendered inside shadow dom component using emulated shadow dom one common element added document head component instances also used provide component authors means apply arbitrary transformation embedded style could look vaguely something like purposefully handwaving lot details want get idea across main usecase mind creating style rules defined terms theme eg would let people whatever arbitrary transformation incoming rules including applying sass less fly wanted reason css shimming enabled process would occur userdefined transformations css shim could potentially another transform notes possible mechanism nt tightly coupled styles could instead part interceptorstransforms work http requests depending http support looks built", "num": "779", "d": "2/2015"}, {"title": "viewcontainer hydrate element injector linking", "body": "consider following parentdirective childdirective used follows example work currently throws throws hydrating child element injector attaching tree find parentdirective", "num": "777", "d": "2/2015"}, {"title": "compiler reliably know element properties ahead time", "body": "line checks order setup element property binding however element web component properties known element part live dom simplest solution skip check altogether always bind element property however directive element bound property bind directive", "num": "776", "d": "2/2015"}, {"title": "ensure versions shared packages pubspecyaml", "body": "already done done way", "num": "775", "d": "2/2015"}, {"title": "special case attrfoo bindings", "body": "allow binding attributes escape hatch binding properties working fallow philosophy would bind attribute property element", "num": "773", "d": "2/2015"}, {"title": "compiler run build step", "body": "x fix core workaround circular dependencies nodejs x refactor changedetection remove circular dependencies x create dom adapter compiler execute outside browser implement nodejs dom adapter x implement dart dom adapter protoview serializer deserializer", "num": "760", "d": "2/2015"}, {"title": "consider renaming eval methods disallowed strict mode", "body": "trying get running babel stumbled issue methods named disallowed strict mode opinion one plans change name something wo nt conflict strict mode", "num": "755", "d": "2/2015"}, {"title": "verify role whitelist allowed roles", "body": "discussed would hugely valuable validate role values whitelist allowed roles relatively fixed ones want allow include widget document landmark roles abstract roles throw warning along invalid ones examples throw errors error valid role error abstract roles used directly specifying valid replacements like instead would add complexity would super helpful roles whitelist widgets composite widgets document structure landmark roles", "num": "754", "d": "2/2015"}, {"title": "transpiler nt fully support promisethen promisecatch", "body": "promisethen nt currently support argument promisecatch generates transpiler error example following samples fail integrationspecjs support promisecatch done gt tplresolversettemplate mycomp new template inline compilercompile mycomp gt done catch err gt generates identifier expected exception done support promisethen done gt tplresolversettemplate mycomp new template inline raises incorrect number arguments passed method named compilercompile mycomp gt done err gt done", "num": "753", "d": "2/2015"}, {"title": "ngrepeat render order reversed ngif", "body": "expected behaviour element created reversed behaviour root element using issue exist using instead", "num": "752", "d": "2/2015"}, {"title": "delete analyzerdart files successful analysis", "body": "could see leaving analysis fails aid debugging analysis succeeds confusing", "num": "751", "d": "2/2015"}, {"title": "update changedetection take advantage localvariables", "body": "depends currently know vars locals query runtime change compile time resolution done", "num": "748", "d": "2/2015"}, {"title": "error build benchmarksexternal macos", "body": "hi running gulp build results error benchmarksexternal macos stating null object getter isempty find attached gists", "num": "746", "d": "2/2015"}, {"title": "benchpress add cloud reporter", "body": "", "num": "744", "d": "2/2015"}, {"title": "list local variables known statically", "body": "order decide runtime time executes negative perf implication need know vars locals compilation information collected html compiler available work need proper initialization pull things compileelementvariablebindings verify vars get added", "num": "741", "d": "2/2015"}, {"title": "form email validation issue", "body": "looking guide forms within angular noticed first example email field validates value like following myemail mail still valid email example looking page", "num": "740", "d": "2/2015"}, {"title": "upgrade traceur", "body": "landed fixes syntax error builds would nice pull", "num": "733", "d": "2/2015"}, {"title": "injector create singletons", "body": "hi changed like javascript use matching binding available function var injector new injector bind car toclass sportscar defaultbindings true thought injector always returns singletons test fails correct behavior injector", "num": "731", "d": "2/2015"}, {"title": "hammerjs template interaction causes npe", "body": "assume template get turned gets instantiated attempt register event issue element clone yet inserted main document rendering try register listener wrong document null see hammerjs issue null since main document proposed fix use documentimportnode element true instead", "num": "723", "d": "2/2015"}, {"title": "samplebenchmark apps broken safari", "body": "running helloworld app one benchmarks safari get following errors btford related zonejs see", "num": "721", "d": "2/2015"}, {"title": "use travis cache", "body": "related nt really depend use travis cache cache following dependencies directory npm dependencies directory pub dependencies example commit done angular docs travis caching", "num": "719", "d": "2/2015"}, {"title": "lock external dependencies", "body": "build currently nondeterministic therefor hard reproduce many external dependencies resolved build time possible single sha create many different build artifacts depending build happens fix need lock external dependencies include npm dependencies locked via pub dependencies locked via file dart sdk dartium dependencies locked fetching concrete version rather whatever latest version dependencies locked use travis cache cache dependencies speed build startup time like angularjs repo", "num": "718", "d": "2/2015"}, {"title": "change shorthand template syntax", "body": "currently reads confusing use instead", "num": "717", "d": "2/2015"}, {"title": "remove", "body": "turns replaced component selector myapp template inline directives bind container toclass tabs pane class myapp component selector tabs template class tabs extends container directive selector pane class pane constructor c container", "num": "711", "d": "2/2015"}, {"title": "support binding", "body": "add bindingbuilder return instance typea bind typeb toalias typea implies injectorget typea injectorget typeb", "num": "710", "d": "2/2015"}, {"title": "templatedirectives take bindings types", "body": "take full binding support update reason issue something like component selector tabs class tabs component selector pane class pane constructor tabs tabs inject would like write different tab participates imagine would work even thought implements fix would would work expected", "num": "709", "d": "2/2015"}, {"title": "directive dependency looku either elementinjector injector optional injection", "body": "currently lookup directives starts proceeds dom tree parents used point lookup switches see instead vs choice made statically template compilation time based type means either service directive current cross replaced", "num": "708", "d": "2/2015"}, {"title": "transpiler erases implements generated dart code remove import well", "body": "testcorecompiler viewspecjs viewcontainerspecjs use annotation generated dart code nt leading unused import warning", "num": "704", "d": "2/2015"}, {"title": "remove import dart mirrors", "body": "imports dart mirrors need remove source currently examplessrchelloworldindexdart directly imports amp creates possible avoid user deal directly made bit complicated since transformers write across package boundaries one option would use seam probably move file avoid rewrite imports new file maybe could move say generated code rewrite user calls use generated call involves moving around files messing around imports completely ignores would affect js side things may appropriate solution somewhere start discussion", "num": "700", "d": "2/2015"}, {"title": "rename", "body": "needs add mapping dart", "num": "699", "d": "2/2015"}, {"title": "locationchangestart nt fire routing variables changed", "body": "set application routing like appconfig routeprovider function routeprovider routeproviderwhen templateurl myviewhtml controller mycontroller b myvar templateurl controller add listener application like scope locationchangestart function event nexturl currenturl consolelog location changed route changes b listener get called however change route bfoo bbar listener nt get called way listener gets fired routing variable changes", "num": "698", "d": "2/2015"}, {"title": "add zippy example", "body": "hey everyone playing angular code last days built rudimentary zippy component wonder would interested added examples folder sure others would interested send pull request polish together want", "num": "696", "d": "2/2015"}, {"title": "error building seems like run build", "body": "thoughts yjbanov", "num": "694", "d": "2/2015"}, {"title": "benchpress smoke tests", "body": "selenium server use one protractor add example uses plain dom button loop versions js direct usage via jasmine command line test dart via guiness command line test dart via guiness command line test", "num": "693", "d": "2/2015"}, {"title": "refactor test suffixes folders", "body": "change gulpfile suffixes protractor benchpress enabled previous protractor benchpress disabled previous karmajs karmadart tests previous jasmine guiness command line tests previous toolstranspilerunittesttranspilertestjs folders move unit tests folder well see eg see move tests folder contains html page test", "num": "692", "d": "2/2015"}, {"title": "helloworld example dart nt work", "body": "built project launch servers works fine returns console", "num": "691", "d": "2/2015"}, {"title": "locationabsurl undefined base href", "body": "running angular base href load assets specific subdirectory enable html mode routes setup like upon loading application following error thrown n times believe per anchor href page debugging issue found line returns guess base href throwing matching routes undefined", "num": "690", "d": "2/2015"}, {"title": "add support reading static attributes components", "body": "would useful read components static attributes bindings probably prerequisite many usecases example use case imitating native input api standard radio buttons put one singleinputcanbechecked group name attribute component author wants support api custom radio button author needs able read name attribute usually need though create binding property", "num": "688", "d": "2/2015"}, {"title": "support event bindbubbleevent syntax", "body": "", "num": "686", "d": "2/2015"}, {"title": "remove cyclic dependencies", "body": "cyclic dependencies work modules loaders eg systemjs nt work commonjs get rid issue also includes changing build ensure wo nt get cyclic dependencies back eg walking nodejs dependencies via done module module fashion avoid many merge conflicts", "num": "683", "d": "2/2015"}, {"title": "move min version dart", "body": "x update readme x disable stable release travis file hits stable x update pubspecs define sdk version constraint", "num": "681", "d": "2/2015"}, {"title": "dgeni honor new lines tags", "body": "see html exp render html exp renders", "num": "680", "d": "2/2015"}, {"title": "emulatedshadowdomstrategy error component around another binding", "body": "using following works mdbutton however component followed preceded seemingly binding error thrown lightdomjs html header demo click html demo click header error pretty easy see error occurring tracing back route cause much faster someone familiar shadow dom emulation", "num": "679", "d": "2/2015"}, {"title": "add support optional parent ancestor", "body": "required work injector look either ca nt cross boundaries determined compile time makes sense property take verify x support binding remove couple usecases optional injection custom radiobutton radiobutton appear inside radiobuttongroup standalone inside group user interacts radiobuttons group one focus stop keyboard shortcuts standalone radiobuttons placed anywhere inside cells mdradiobutton needs able use injected mdradiogroup register use different code path absent theming currently ngmaterial lets specify theme section app using html defaultthemed content everything inside uses ponies theme applying theme obviously optional optional injection would necessary check theme applied element", "num": "675", "d": "2/2015"}, {"title": "self closing components", "body": "self closing components time around", "num": "673", "d": "2/2015"}, {"title": "build fails due unavailable option command", "body": "hi pulled latest changes repository ran output dart super familiar command line tool however error says flag apparently supported might due outdated version gon na verify letting know might want update readme accordingly specific version required", "num": "670", "d": "2/2015"}, {"title": "improve css shim", "body": "emulated shadow dom strategy used compiler update html css scope styles current implementation needs improvements x works component selector tag name selector complex ie would fail reason try add selector name attribute child nodes valid attribute name fixed x selector replaced component tag name use tag name see first bullet point need generate distinct attribute component notice attribute component attribute inside component fixed support see x way shim dynamically added nodes done adding arbitrary html view view prevent view reuse", "num": "669", "d": "2/2015"}, {"title": "global resolve", "body": "think helpful provide kind mechanism initially wait optional global resolve app initialization scenarios fetch auth role based permission data model structures etc etc executing router handler put resolve login route feels super ugly also really first app execution nothing afterwards resolves routes useless sure plan include way angularjs also thanks", "num": "662", "d": "2/2015"}, {"title": "methods resolved right context presence context locals", "body": "template f throws seems evaluated local context", "num": "660", "d": "2/2015"}, {"title": "markdown collides special chars docs", "body": "interesting docs table noninformative screenshot", "num": "659", "d": "2/2015"}, {"title": "empty option select shows last position using ngoptions ngif empty option", "body": "check options loaded http request plunkr use timeout empty option apears last position using ngif use ngshow everything works well", "num": "658", "d": "2/2015"}, {"title": "routeupdateparams replaces variable adds search parameter", "body": "let say route optional use replace parameter job also adds search parameter end url following code demonstrate issue angular bug monkeytalk angularmodule app ngroute config function routeprovider routeproviderwhen page variation param template variation param controller function scope route routeparams consoleinfo set param routeparamsparam routeupdateparams param walk consoleinfo set template default traced problem line angularroutesjs", "num": "656", "d": "2/2015"}, {"title": "cssshim crashes browser encountering css import", "body": "reproduce create component following template try render emulatedshadowdomstrategy land something cssshim infinite loop crashes chrome tab firefox instance add comment immediately crash occur elements added empty", "num": "654", "d": "2/2015"}, {"title": "benchpress params broken pub serve", "body": "tries load corresponding utility file hardcoded location fails", "num": "653", "d": "2/2015"}, {"title": "question join early adopter program", "body": "consultant recommend application built angular want understand changes happening provide feedback framework get shape get involved", "num": "650", "d": "2/2015"}, {"title": "application able override shadow dom strategy", "body": "currently application able override root shadow dom strategy primordial injector", "num": "649", "d": "2/2015"}, {"title": "flip attrvalue componentbind", "body": "currently reason right multiple properties mapping property name silly given property single mapping possible attribute mapped multiple properties especially", "num": "648", "d": "2/2015"}, {"title": "make component bindings optional", "body": "component bindings optional currently elementbinderbuilder throws error binding attribute value empty might useful eventually add support specifying optional vs required bindings simplest shortterm approach make bindings optional far angular concerned component perform assertions", "num": "647", "d": "2/2015"}, {"title": "support function types typescript aka typedefs dart", "body": "transpile currently atscript nt support", "num": "645", "d": "2/2015"}, {"title": "support enums", "body": "dart typescript basic syntax note dart vm supports enums outofthebox dartanalyzer need enable flag enableenum", "num": "644", "d": "2/2015"}, {"title": "question planning support datadriven views angularjs", "body": "use angularjs develop suit enterprise applications heavily rely datadriven views views definitions derived database known compile time planning support datadriven views angularjs datadriven views would fit componentbased directives planning keep compile available compiling arbitrary fragments html", "num": "642", "d": "2/2015"}, {"title": "static properties initialized dart output", "body": "transpiles initialized atscript dart", "num": "640", "d": "2/2015"}, {"title": "abstract methods body dart", "body": "transpiles method body", "num": "639", "d": "2/2015"}, {"title": "strip final const abstract annotations dart output", "body": "pollute dart code example import const final abstract abstract class blah final const constructor thisi transpiles library import package show const final abstract abstract class blah final const const blah removed still imported unnecessarily", "num": "638", "d": "2/2015"}, {"title": "abstract effect dart output", "body": "transpiles", "num": "637", "d": "2/2015"}, {"title": "support const fully", "body": "class const constructor like class blah final int const constructor int thisi correctly transpiled however way use wrong transpiler allows supported", "num": "636", "d": "2/2015"}, {"title": "support parameter properties", "body": "per typescript parameter properties example atscript dart", "num": "635", "d": "2/2015"}, {"title": "add support flag attributes components", "body": "way component check whether attributes provided example end user html boo ahh component able know difference attribute present empty top example vs attribute absent bottom example", "num": "633", "d": "2/2015"}, {"title": "add support setting default component role", "body": "component configuration include option default element role", "num": "631", "d": "2/2015"}, {"title": "handling structural change detection transformers", "body": "agreed upon registries differs directives store snapshot compose supported thinking component selector foreach bind collection list field prop gt gt class todos collection list formatter name observable input observable class observable apply input return input formatter name filter input list class observable apply list predicate return listfilter predicate", "num": "627", "d": "2/2015"}, {"title": "support lifecycle methods", "body": "lifecycle sure depending structural changes issue shakes see", "num": "626", "d": "2/2015"}, {"title": "allow directives export variables", "body": "exporting variables different exports variables child change values runtime happens reaction function exports variables current view change values runtime happens view hydration directive instantiation change detection", "num": "625", "d": "2/2015"}, {"title": "add support const bindings", "body": "think addition bindings directive able get list static values injectable constructor reasons might good idea explicit certain properties meant static defining bindings forces implement setters throw someone tries rebind semantically properties bindings rather directive configuration allows write directives init work constructor right delay first onchange lack properties cripples forms api consider formvalue formvalid example form constructed html construct binding fires example work value valid modified binding comes next static properties could construct form change detection kicks hydration example would work closed issue text would useful read components static attributes bindings probably prerequisite many usecases example use case imitating native input api standard radio buttons put one singleinputcanbechecked group name attribute component author wants support api custom radio button author needs able read name attribute usually need though create binding property closed issue text way component check whether attributes provided example end user html boo ahh component able know difference attribute present empty top example vs attribute absent bottom example jelbourn would nt proposal sufficient cover usecase proposal one could", "num": "622", "d": "2/2015"}, {"title": "declaratively bind events properties", "body": "goal dom reference directive decorator selector input typetext events click onclick class somedirective constructor property value valuesetter function thisvaluesetter valuesetter onclick event something thisvaluesetter clear", "num": "621", "d": "2/2015"}, {"title": "dialog service", "body": "", "num": "620", "d": "2/2015"}, {"title": "correct capitalization bindings", "body": "attr vs prop attr vs prop others general list overrides correct discrepancies compiler", "num": "619", "d": "2/2015"}, {"title": "port angularjs router atscript", "body": "", "num": "618", "d": "2/2015"}, {"title": "transpile atscript comments dart", "body": "allow generation dartdoc source code", "num": "616", "d": "2/2015"}, {"title": "syntactic sugar instantiating components tests", "body": "prerequisite describe mycomponent gt instantiate injectable tb testbed gt var element element tb directive mydirective override new template new component compile html lightdom instantiate instance type element component selector mycomponent class mycomponent", "num": "615", "d": "2/2015"}, {"title": "way override instances primordialinjector unit tests", "body": "tests needs separate instance primordial injector delay creating injector execute method add method test vocabulary overriding injector main describe test gt bind bind tovalue bind tofactory bind toclass bind toasyncfactory see di", "num": "614", "d": "2/2015"}, {"title": "title service", "body": "injectable service would allow application update title needed since longer place bindings indexhtml", "num": "612", "d": "2/2015"}, {"title": "readwrite dom queue", "body": "", "num": "611", "d": "2/2015"}, {"title": "add support component selectors", "body": "selector pseudoclass probably supported component selector would let things like js component selector scarybutton href template new templateconfig inline class scarybutton component selector scarybutton href use anchor instead button template new templateconfig inline class scarylinkbutton might also worth exploring based performance pseudoclass optional syntax excludeselector eg", "num": "609", "d": "2/2015"}, {"title": "cleanup npm publish", "body": "rename rename source folder change transpile options use instead change depend change use name rename npm name angular change publish changes packages angular npm adjust script use new path adjust script use prefix npm tag name run unpublish previous versions via npm repo npm repo", "num": "607", "d": "2/2015"}, {"title": "add support role aria attribute bindings", "body": "angular currently supports data binding properties aria spec however extension html relies attributes end result would need allow user things like html", "num": "606", "d": "2/2015"}, {"title": "ngclass doenst evalute object changes", "body": "faced problem project using ngclass ajax call return array objects wanted use property object css class property like example span tag rendered ajax call yet finish ngclass nt choose class expected ajax call finished condition ajaxarray type true ngclass changed inspected element via chrome ourdinamicclass true appeared element sure nt work fix put span certain bug strange behavior decided report", "num": "605", "d": "2/2015"}, {"title": "add todo app examples", "body": "davideast already running app locally", "num": "604", "d": "2/2015"}, {"title": "angular forms support form attribute inputs", "body": "making use form attribute inputs contained table nt lend wrapped form correctly using form attribute still make use ngsubmit form attribute submit form however pass form submit function nt additional inputs available outside form assumption due form directive access part dom inputs ca nt attach form object information could look plans later version angular", "num": "603", "d": "2/2015"}, {"title": "passing static attributes components", "body": "designing components wrap native components lot attributes enddeveloper would want apply underlying native element example take common wrap component order manipulate appearance add animation still using native button underneath html spec attributes etc still work expected would super fantastic component authors easy way passcopy type attribute without manually creating binding one types elements quite attributes time attributes like completely static thus using data binding feels like overkill element types think would apply things someone could conceivably want wrap custom component passes static attributes also global attributes passing static attributes would useful class tabindex additionally passing event bindings would also keep boilerplate wrapping kinds components especially media events could usecases considering since set elements seems limited could something scoped specifically elements example something like", "num": "602", "d": "2/2015"}, {"title": "dart put package imports file imports", "body": "dart import package show future promisewrapper import package show map list mapwrapper listwrapper import package show functionwrapper type ispresent isblank import bindingdart show binding bindingbuilder bind import exceptionsdart show providererror noprovidererror invalidbindingerror asyncbindingerror cyclicdependencyerror instantiationerror import keydart show key", "num": "599", "d": "2/2015"}, {"title": "dart avoid leading importingexporting subdirectory", "body": "dart library export srcdirectivesforeachdart export srcdirectivesifdart export srcdirectivesnonbindabledart export srcdirectivesswitchdart dart library export srcdirectivesforeachdart export srcdirectivesifdart export srcdirectivesnonbindabledart export srcdirectivesswitchdart", "num": "598", "d": "2/2015"}, {"title": "support multiple templates per component", "body": "prerequisite goal given component needs able use different templates per locale device type test requires decouple definition rename example simple component separate annotation local devices get added system add note different templates different directive imports works existing reflector since rewritten class mycomponent reflectoraddannotation mycomponent new component selector mycomponent reflectoraddannotation mycomponent new template url someurl directives dira dirb reflectoraddannotation mycomponent new template locale en url someurlen directives dira dirc rewritten reflector form properly tree shaken based locale compiler support compiler needs aware current compiling templates compiler need new dependency select right per also used tests override templates compilation pipeline start component use convert use covert html", "num": "596", "d": "2/2015"}, {"title": "rename template viewport", "body": "rename needed", "num": "595", "d": "2/2015"}, {"title": "support array arrays templateconfig directives", "body": "currently templateconfigdirectives takes list means importing whole list enumerated supporting array arrays arbitrary deep var coredirectives ngforeach ngif var appdirectives coredirectives new templateconfig directives appdirectives", "num": "592", "d": "2/2015"}, {"title": "warn user defining binding capitals", "body": "fail html attributes case insensitive actually bound variable however currently error thrown descriptive option detect bindings template loading option print current context evaluation fails user see inside", "num": "591", "d": "2/2015"}, {"title": "change detection provide previous value flipping array null", "body": "assuming watching structurally array changes ex foo bar reference changes null need know form change detection system foo bar removed today information delivered change detection system changes got bot currentvalue previousvalue equal null ones would keep state manually based discussion vsavkin working directive", "num": "588", "d": "2/2015"}, {"title": "proposal singlesource documentation site", "body": "think build angular documentation site autogenerate shared sources supported languages motivation users angular choice programming language maintaining separate documentation site every supported language would wasteful also strive consistency accuracy completeness across supported languages proposal generate site atscript html markdown sources use atscript code snippets use html markdown prose code snippet boxes show little tabs next allowing reader switch languages sticky query parameter would set language globally across code examples accuracy keep docs accurate code snippets tested ci server", "num": "579", "d": "2/2015"}, {"title": "events break tree element injectors", "body": "try submit div button point proto element injector correct angular throw trying hydrate view easy way fix change protoelementinjectorbuilder add sure good fix though", "num": "577", "d": "2/2015"}, {"title": "benchmarks track code size", "body": "", "num": "575", "d": "2/2015"}, {"title": "benchmarks track app build times", "body": "implementation transformers could affect build time application influences developer productivity track", "num": "574", "d": "2/2015"}, {"title": "implement formatters", "body": "", "num": "573", "d": "2/2015"}, {"title": "breaks cookies", "body": "seems unless put fully qualified url cookies set nt survive refresh example problem developmentstaging domain domains protocols non dev change", "num": "569", "d": "2/2015"}, {"title": "illegal invocation infinite digest deep watch property dom jquery object", "body": "example jsbin steps reproduce create scope set property scope dom element create watch scope set objectequality property true angularmodule app controller somectrl function scope scopedata test documentbody", "num": "566", "d": "2/2015"}, {"title": "track compile time benchmarks", "body": "good metric developer experience", "num": "565", "d": "2/2015"}, {"title": "angular plans virtual dom", "body": "per suggestion transferring issue project active member southern california angular community noticed trend lately angular starts loosing traction reactjs impression formed minds developers angular slow large apps due direct dom manipulation plans angular switch virtual dom maybe better technology view layer similar reactjs think would huge win minimize number developers may loose frameworks like react please share vision share socal angularians thank", "num": "561", "d": "2/2015"}, {"title": "gulp build copy license file proper places dist", "body": "", "num": "558", "d": "2/2015"}, {"title": "transpile merge patches traceur upstream remove", "body": "see see patches added transpile run removed changes land upstream traceur", "num": "555", "d": "2/2015"}, {"title": "perfciangularjsorg", "body": "deferring atscript rewrite fixed shortly thereafter", "num": "552", "d": "2/2015"}, {"title": "implement largetable benchmark angular", "body": "", "num": "550", "d": "2/2015"}, {"title": "execute html compiler outside angular zone", "body": "", "num": "544", "d": "2/2015"}, {"title": "ngmodel nt change value input tag case type hidden", "body": "input tag typehidden ngmodelname inside controller changed value name variable found value attribute input tag updated works used ngvalue input tag typehidden ngvaluename ngmodel directive update value attribute input tag case type hidden", "num": "536", "d": "2/2015"}, {"title": "select get null failed filters", "body": "choose default null want empty string use filter get correct answer", "num": "535", "d": "2/2015"}, {"title": "create exceptionservice", "body": "create service see fix todo", "num": "533", "d": "2/2015"}, {"title": "drop ng prefix angular directives rename ngrepeat foreach", "body": "gt gt gt", "num": "532", "d": "2/2015"}, {"title": "add missing support binding string literals", "body": "given decorator decorator selector test bind test test class test constructor consolelog test nametest property", "num": "531", "d": "2/2015"}, {"title": "throw errors binding property found element dev mode", "body": "would catch errors imported", "num": "527", "d": "2/2015"}, {"title": "switch shadowdom strategy emulated default", "body": "must also update benchmarks change check todo app example vsavkin doc outlines options", "num": "526", "d": "2/2015"}, {"title": "integration protractor need expose protractor testing api", "body": "", "num": "525", "d": "2/2015"}, {"title": "support overriding templateconfig compiler", "body": "currently compiler takes extracts hack allows us supply different element mostly used testing actually incorrect general need override need either general mechanism overriding need way pass compiler", "num": "524", "d": "2/2015"}, {"title": "support", "body": "depends would nice create pseudo events keys would extended would need understand named keys letters modifiers implementation done event manager see", "num": "523", "d": "2/2015"}, {"title": "support syntax", "body": "current syntax allow short hand syntax syntax replaces attribute prefix also pulls keyword value attribute name", "num": "522", "d": "2/2015"}, {"title": "compiler macro pass", "body": "new compiler needed work macro selector mybutton class mybutton constructor injectable created transform el element called multiple times matches happen perform dom transformation template used transforming transforming migrated", "num": "521", "d": "2/2015"}, {"title": "publish angulardart", "body": "angulardart needs published single module", "num": "520", "d": "2/2015"}, {"title": "di instantiate dependencies wrong injector", "body": "seems like di instantiate dependencies using injector binding resolved instead requesting injector dependency present requesting injector would fail resolve deps function var parent new injector car var child parentcreatechild bind engine toclass turboengine possible override dep child injector expect fails returns resolve deps function var parent new injector car engine var child parentcreatechild bind engine toclass turboengine", "num": "519", "d": "2/2015"}, {"title": "variables exist", "body": "issue html file debug firefox", "num": "518", "d": "2/2015"}, {"title": "lexer support utf javascript", "body": "currently lexer change detection uses dart returns supports utf js returns support utf", "num": "517", "d": "2/2015"}, {"title": "typeerror undefined function evaluating scopecheckagain", "body": "scopecheckagain controller error undefined know reason", "num": "516", "d": "2/2015"}, {"title": "hello world example url", "body": "hello instruction run hello world seems wrong built angular package per instruction gulp dev server starts ok url seems wrong per readme url gives get exampleswebhelloworld please suggest run example", "num": "511", "d": "2/2015"}, {"title": "transpiler output dart constructors checked", "body": "force habit made write following atscript code meant define treat method dart becomes constructor transpiler fail sees", "num": "510", "d": "2/2015"}, {"title": "transpiler wrong handling string templates", "body": "dart string interpolation works regardless quote style string templates perform interpolation oldstyle strings transpiler unaware therefore produces wrong result transpiles wrong believe currently results bug dom event binding", "num": "509", "d": "2/2015"}, {"body": "yes check tracking duplicates section info", "d": "2/2015"}, {"body": "sorry waste time thank much", "d": "2/2015"}, {"body": "wrong repo sounds like support question asked one support channels", "d": "2/2015"}, {"body": "dart requires annotations const dart like js custom object needs fields needs done opaquetoken needs made transpile object dart using const transpiler annotation see afaik dart treat string interpolation compiletime constant needs changed string addition initializer list become sure transpiler output yes fundamental limitation might need traspiler work make happen", "d": "2/2015"}, {"body": "rkirov thnx info try change use annotation report back hit pbs", "d": "2/2015"}, {"body": "sorry wrong repo", "d": "2/2015"}, {"body": "context rules automatic semicolon insertion essentially safe time except return break continue throw statements course code occasionally fail sucks might feasible error cases essentially unreachable code cases relying asi simple fix makes tooling easier also stuff like error recovery compilers martin alex eagle notifications githubcom schrieb feb um uhr stock webstorm gives warning statements nt end semi could turn warning ide rather rely asi like format codebase clangformat doesnt understand javascript syntax enough understand statement terminates linebreak instead semicolon instead removes linebreak breaking code general pity carry forward asi atscript since complicates tooling anyone strong desire omit semicolons atscript code mprobst suggests well working mechanism finding asi abuses codebase reply email directly view github", "d": "2/2015"}, {"body": "dropping asi also dart nt asi nt see transformer add already mostly using mandatory semicolons", "d": "2/2015"}, {"body": "wrong repo", "d": "2/2015"}, {"body": "benchmarks measure fast create pages objects reflection used finding dependencies classes also creating even ignored compilation time would still affect view instantiation", "d": "2/2015"}, {"body": "right thanks", "d": "2/2015"}, {"body": "let add also move method found step waits promise replace element text also get parts via method otherwise compiler could return protoview styles yet resolved promise might waiting cases go local fields", "d": "2/2015"}, {"body": "tobias thanks explanations resolvecss return promise inline hence fetch via xhr css however nt want wait ready rather parallelize nested templates download done style promises pushed protoviewstylepromises promises compiler delay protoview resolution resolved also think ignore children step shims dom adding attribute element still run le f\u00e9vrier tobias bosch notifications githubcom \u00e9crit let add also move method found step waits promise replace element text also get parts via method otherwise compiler could return protoview styles yet resolved promise might waiting cases go local fields reply email directly view github", "d": "2/2015"}, {"body": "overall js dart land minify minify eventually think want run benchmarks minified code could change performance characteristics need measure though anyways set source maps correctly even nt minify actually would like real dart source code line hint could change pr instead turning minification", "d": "2/2015"}, {"body": "actually even source maps wo nt applied stack traces read via webdriverprotractor following create source maps running translate stacktraces using source maps tests print errors use translation logic", "d": "2/2015"}, {"body": "davideast fyi", "d": "2/2015"}, {"body": "vsavkin suggest better name add thoughts", "d": "2/2015"}, {"body": "working", "d": "2/2015"}, {"body": "landed master", "d": "2/2015"}, {"body": "thoughts based discussions mhevery work css import generally frowned upon performance reasons use stay close web components performance issue would inlined build system would lead duplicating common styles styles scoped current styles rewritten per component hence duplicate styles component however plans emulated strategy shared styles strategy take care deduplicating ie styles inserted main usecase mind creating style rules defined terms theme eg backgroundcolor primarycolor could nice require thinking rules would possible share styles ie different components could different including applying sass less fly wanted reason also something discussed mhevery currently possible probably include support however ideas mind support css transformations handling css transformations need quite flexible need inline rewrite urls optionally scope rules dev mode prod mode none happen templates preprocessed designing support easy add sass less whatever arbitrary transform support", "d": "2/2015"}, {"body": "use import stay close web components vicb mean close web components css around long time popular sentiment avoided even browsers improved still common perception slower may still problem ie ms blog post less year ago still advises probably need testing styles scoped current emulatedshadowdomstrategy styles rewritten per component hence duplicate styles component style component scoping want able build components explicitly use css shimming mainly performance reasons plan building styles components work native emulated shadow dom modes rules would possible share styles ie different components could different primarycolor left background whole point build components primary color etc coming way material design prescribes selecting palette choose primary color accent color lighterdarker hues rest colors determined choice palette affects every material component", "d": "2/2015"}, {"body": "conversion w misko different idea moving forward work currently place", "d": "2/2015"}, {"body": "actually bug arv already fixed afaik", "d": "2/2015"}, {"body": "mean allow methods named eval bug cc sebmck", "d": "2/2015"}, {"body": "mean allow hang trying dig bug", "d": "2/2015"}, {"body": "particularly one maybe still different version bug either accident", "d": "2/2015"}, {"body": "ah interesting thanks clarifying closing", "d": "2/2015"}, {"body": "order avoid difficult locate problems angularjs validate role get changed set preferred done create entirely new node delete replace old one see spec ideally setting role done node gets inserted dom current javascript execution ends implicit roles associated elements might get picked immediately node gets inserted validate required parent child roles example menuitem exist without parent menu menubar role stretch goal validate interim structures need role presentation order handle correctly quoting spec roles element types authors must change role values time user actions authors wishing change role must deleting associated element children replacing new element appropriate role following invalid menu markup html deals vegas caracas whereas valid markup interim structures hierarchy annotated role presentation html deals vegas caracas", "d": "2/2015"}, {"body": "blaporte may add", "d": "2/2015"}, {"body": "ok thanks thought promisewrapper used create promises ie wrap etc realize also used call functions returning promises least want pass error function solves problem live without would much added value imo close issue thanks", "d": "2/2015"}, {"body": "wrong repo please move issue angular repo", "d": "2/2015"}, {"body": "previous implementation needs use new interface needs unit tests", "d": "2/2015"}, {"body": "thanks", "d": "2/2015"}, {"body": "vizuaalog file issue repository angular", "d": "2/2015"}, {"body": "ok sorry", "d": "2/2015"}, {"body": "sekibomazic think slight confusion nutshell turning option allows instantiate di bindings previously registered encountering nonregistered binding option injector create new binding using method use new binding create new instance mentioned magic happens case could view sugar hope desugared version makes obvious separate bindings separate keys di separate instances hope clarifies things", "d": "2/2015"}, {"body": "pkozlowskiopensource thanks explanation yes clarifies definitely", "d": "2/2015"}, {"body": "note solved master branch hammer gesture example embed custom build based master part latest official release hammer guess even better fixes", "d": "2/2015"}, {"body": "fixed", "d": "2/2015"}, {"body": "slightly complicated due npm vulnerable cache poisoning workaround though see", "d": "2/2015"}, {"body": "noticing things seem like could removed generated dart might allow removal import entirely many cases const type int abstract", "d": "2/2015"}, {"body": "merge", "d": "2/2015"}, {"body": "yup", "d": "2/2015"}, {"body": "discussing issue team decided current approach safest dependencies lt lt assume code reflectionreflector new reflectioncapability var module mytype bind mycomponent toclass mycomponentimpl var injector createinjector module code call requires us lookup constructors means correct reflector already set notice wrapped method short hand syntax means call delayed inside createinjector implications declaring dependencies module creating injector requires correct application runtime must module declaration since bindings delayed lookup imagine application setup google analytics reflectionreflector new reflectioncapability createinjector googleanalytics get googleanalytics run bootsrap angular app bootstreap myapp get application going register di totally reasonable means ca nt change reflector since configured think two problems standalone library depends must configured first use depends assume first user result configure think means developer correct position know needs configured transformer simply rewrite statement", "d": "2/2015"}, {"body": "going close issue think correct implementation correct reopen feel otherwise", "d": "2/2015"}, {"body": "thanks explanation disagreement approach going reopen bug track work rewrite import amp assignment couple questions understand correctly call whatever generated method replace assignment example appear immediately call status separate package mean codegenwise need transformer independent things stand declared service one dependencies included codegen since signal start searching annotations", "d": "2/2015"}, {"body": "assigned answers looks like emails may sent issue reassign updated", "d": "2/2015"}, {"body": "kegluneq yes setupreflection take assignment yes long term want pull di separate package happens transformer think need think deeper break transformers", "d": "2/2015"}, {"body": "wrong repo guess wanted open though please provide runtime reproduce scenario", "d": "2/2015"}, {"body": "yes please send pr", "d": "2/2015"}, {"body": "cool gon na tomorrow", "d": "2/2015"}, {"body": "get try", "d": "2/2015"}, {"body": "gulp clean fixes although wondering pub install pub upgrade tue feb pm yegor notifications githubcom wrote get gulp build try gulp clean gulp build reply email directly view github", "d": "2/2015"}, {"body": "probably use worried hits server time making build longer", "d": "2/2015"}, {"body": "hmm true travis happens anyway since pubspeclock file locally run issues since may building outdated set dependencies least latest pay bit local build time travis avoid issues like one reported make sure local build matches happens travis even forget clean tue feb pm yegor notifications githubcom wrote probably use pub get worried pub upgrade hits server time making build longer reply email directly view github", "d": "2/2015"}, {"body": "perhaps add gulpdartupgrade target would consistent use pub use pub get pub build mostly pub upgrade occasionally tue feb pm kevin moore notifications githubcom wrote hmm true travis happens anyway since pubspeclock file locally run issues since may building outdated set dependencies least latest pay bit local build time travis avoid issues like one reported make sure local build matches happens travis even forget clean tue feb pm yegor notifications githubcom wrote probably use pub get worried pub upgrade hits server time making build longer reply email directly view github reply email directly view github", "d": "2/2015"}, {"body": "fixed", "d": "2/2015"}, {"body": "benchpress smoke tests command line tests", "d": "2/2015"}, {"body": "iminar think", "d": "2/2015"}, {"body": "think get rid separate test tree move unit tests level source files move perf tests separate directories called perf within individual src directories way things stay together logically split nt hundreds files directory reason unit tests mixed source files mirror source closely also serve documentation source file separate directory makes discovery hard extensions proposed fine", "d": "2/2015"}, {"body": "update description", "d": "2/2015"}, {"body": "ca nt build project last version brew required somebody knows please let know install dart", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "kevmoo thanks new error urgent important", "d": "2/2015"}, {"body": "try running say", "d": "2/2015"}, {"body": "finally finished build still gives gulp serveexamplesdart even chromium dart", "d": "2/2015"}, {"body": "try per readme", "d": "2/2015"}, {"body": "kevmoo yes result", "d": "2/2015"}, {"body": "found could find asset webhelloworld package examples", "d": "2/2015"}, {"body": "bad didnt realize angular repo", "d": "2/2015"}, {"body": "cc vsavkin think dup", "d": "2/2015"}, {"body": "example usecase radio part control", "d": "2/2015"}, {"body": "precise commonjs handle cyclic deps albeit particular way returning halfbaked module objects case getting rid cycles good thing", "d": "2/2015"}, {"body": "cycles type annotations natural example planning break", "d": "2/2015"}, {"body": "current list circular dependencies generated madge also used validation build time changedetection part quite easy solve extract constants separate file compiler part around much challenging", "d": "2/2015"}, {"body": "actually workaround could use types nt import include whole module includes tested nodejs yet work theory eg import vc viewcontainer class view viewcontainers list", "d": "2/2015"}, {"body": "kevmoo curious required prefer dev stable channel dev channel could unstable sometimes", "d": "2/2015"}, {"body": "vicb hitting issue fixed", "d": "2/2015"}, {"body": "problem markdown renderer treats backticked code blocks inside html elements case inline code spans nt extract code language case first line wrap code block tag needed preserve whitespace", "d": "2/2015"}, {"body": "probably simplest solution without hacking party rendering engine ditch tables use headings", "d": "2/2015"}, {"body": "switching instead backtics would solve would change code keep table format tue feb pm pete bacon darwin notifications githubcom wrote probably simplest solution without hacking marked party rendering engine ditch tables use headings reply email directly view github", "d": "2/2015"}, {"body": "tried switching fine lose syntax highlighting switching headings would mean losing tables horrible hard coded method would render code elsewhere copy paste actual html table cells", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "jelbourn small repro case somewhere reproduce modified hello world", "d": "2/2015"}, {"body": "branch error occuring see action run hit", "d": "2/2015"}, {"body": "vsavkin fix", "d": "2/2015"}, {"body": "believe", "d": "2/2015"}, {"body": "vsavkin vicb confirm seems fixed", "d": "2/2015"}, {"body": "injector look either ca nt cross boundaries determined compile time makes sense property take verify support binding remove", "d": "2/2015"}, {"body": "probably html parsing issue nt able fix way browser parses html", "d": "2/2015"}, {"body": "lol self close top level app component assume everything belows belongs light dom", "d": "2/2015"}, {"body": "well fix problem html parsing would moved javascript probably webworkers", "d": "2/2015"}, {"body": "closing would make templates compatible html caitp per html spec browser parsers work use browser parser", "d": "2/2015"}, {"body": "could allowed shorthand template compilation output long version would happy example gain expressive powers small components small components wo nt need access light dom reason use another example simple cmp thing really teach new users use shorthand index page something users probably anyways teach new users set systemjs zonejs traceur index page anyways well bootstrapping etc", "d": "2/2015"}, {"body": "browser parses dom ca nt tell element self closed information lost asking possible unless parser break html spec nt think good idea", "d": "2/2015"}, {"body": "maybe ask see button chrome ff safari missing something sorry", "d": "2/2015"}, {"body": "asking totally works problem probably nt work ie etc keep mind developing chrome like developing instagram filter lot constructive feedback opinion add convo submit work focus work stuff lolz suggesting something like example using pseudo code rather using use similar api like since extending native element still end missing one attributes self closing", "d": "2/2015"}, {"body": "jamm planker example works becouse html parsing rules meaningless try parsing inspect dom browser customelement sibling child", "d": "2/2015"}, {"body": "mhevery thanks see looks like standardized bug think purposes much easy use attribute decorator instead component", "d": "2/2015"}, {"body": "okay turns required version gon na send pull request accordingly", "d": "2/2015"}, {"body": "vicb sorry forgot close one", "d": "2/2015"}, {"body": "works component selector tag name assign unique id every component use id compiling templates styles wo nt depend selector way shim dynamically added nodes one way implement inject prebuilt object component cssshimservice use compile dynamicallygenerated dom", "d": "2/2015"}, {"body": "vsavkin first two items fixed sure dynamically adding node good idea would prevent view caching", "d": "2/2015"}, {"body": "actually really easy current setup importing configrun block module app afterwards think ways fix affect appjs import bootstrap import config run appconfig import todoapp componentstodoapptodoappjs export function main config runs app bootstraps run return config gt bootstrap todoapp gt run indexhtml html systemimport app function module return modulemain catch consoleerrorbind console", "d": "2/2015"}, {"body": "nice mentioned documentation", "d": "2/2015"}, {"body": "lot flexible compared one neat benefits get even use systemjs wanted since promises", "d": "2/2015"}, {"body": "great nt play watch conferences talking looks really promising ca nt wait thanks", "d": "2/2015"}, {"body": "sure action one fully control bootstrap process guess thing need assure people easily get hands fundamental services might needed prebootstrap ex equivalent going close one possible current design think making things easier users framework stabilises bit see reallife usecases", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "sometimes information duplicated following text important info missing", "d": "2/2015"}, {"body": "pr", "d": "2/2015"}, {"body": "wrong repo see", "d": "2/2015"}, {"body": "wrong repo see", "d": "2/2015"}, {"body": "vicb bug addressed closed", "d": "2/2015"}, {"body": "mhevery fixed yet working currently hopefuly close sometime week going close item left", "d": "2/2015"}, {"body": "nt official program one would recommend build simple app gage api going would recommend checking todo app davideast would also suggest submit issues concerns may api long check previous issues submitting", "d": "2/2015"}, {"body": "closing actual work us", "d": "2/2015"}, {"body": "also good closely matches angular directive scope structure every time write binding far remember right backwards", "d": "2/2015"}, {"body": "mhevery sent pr wondering still got bindings described leftover docs", "d": "2/2015"}, {"body": "yes bindings part sure implemented yet tue feb pm pawel kozlowski notifications githubcom wrote mhevery sent pr wondering still got event bindings described leftover docs reply email directly view github", "d": "2/2015"}, {"body": "seems like covered sure actual syntax used make happen", "d": "2/2015"}, {"body": "thanks prompt response nt played angularjs yet ca nt work whether code reference answer questions understand thus far componentdirectives need put routes instead controllers would serve views case need predefined list directives going use something known compile time us derived database would able explain would angurlarjs way dealing cases thanks advance", "d": "2/2015"}, {"body": "see saying want actually define directives compile time database nt info imagine post boilerplate code shows someone could look figure might work might change time least developers could see usecase move forward", "d": "2/2015"}, {"body": "put together example jsfiddle simplified shows generate database derived views angular two pages available home book book one datadriven could please explain example would look like angular", "d": "2/2015"}, {"body": "jelbourn would nt proposal sufficient cover usecase proposal one could", "d": "2/2015"}, {"body": "pkozlowskiopensource yes issue really detailrequirement reading static attributes implemented", "d": "2/2015"}, {"body": "interesting nt thought specifying role component level somehow makes sense sent pr bind role attribute templates sure idea issue template bindings needed guess", "d": "2/2015"}, {"body": "yeah needed letting bind role saying given component always role x default", "d": "2/2015"}, {"body": "makes sense", "d": "2/2015"}, {"body": "take stab jumping impl though advantage expressing role js opposed attribute template guess makes things easier multiple templates", "d": "2/2015"}, {"body": "want make component always particular role would annoying boilerplate specify role every time like obviously component always component author save user boilerplate", "d": "2/2015"}, {"body": "jelbourn sure meant moving attribute template component realise would probably wrong place since role would marked element child element right", "d": "2/2015"}, {"body": "pkozlowskiopensource right would potentially inside shadow dom would invisible screen readers", "d": "2/2015"}, {"body": "jelbourn fine screen readers seems like break shadow root barrier mhevery rkirov would best place add logic special case directiveparser step maybe worth dedicated pipeline step", "d": "2/2015"}, {"body": "think would compile step since want update template nt clone assume template compiling template would come across would know component could see component update element template would one time thing resulting template", "d": "2/2015"}, {"body": "mhevery yep totally agree compile step reason work view creation question create new specific compiler step modify existing one best think would directiveparser slightly leaning towards creating new step nt feel strongly asking", "d": "2/2015"}, {"body": "think new think may things may need question mind decorator matches component adding role would trigger decorator think fine", "d": "2/2015"}, {"body": "agree misko note goes design goal templates fully describe happening without going annotations case developer productivity gains outweigh also pawel make sure mark steps mutate template nodes vs ones read far viewsplitter mutates step second", "d": "2/2015"}, {"body": "rkirov mhevery ok separate sounds good thnx input rkirov mean exactly mark steps mutate template nodes documenting special flag", "d": "2/2015"}, {"body": "yeah add comments", "d": "2/2015"}, {"body": "attribute scope solution generic aria", "d": "2/2015"}, {"body": "jelbourn comment", "d": "2/2015"}, {"body": "funny enough starts sound like place similar things previously discussed compiler macro pass", "d": "2/2015"}, {"body": "mlaval role attribute mind becuase see needed frequently aria attributes could make sense sometimes though arialive ariaatomic maybe really want specify set static attributes want applied component element role one", "d": "2/2015"}, {"body": "set attributes applied component", "d": "2/2015"}, {"body": "vsavkin ca nt remember decided wanted capture", "d": "2/2015"}, {"body": "implemented via", "d": "2/2015"}, {"body": "vsavkin need forms makes sense cc jelbourn", "d": "2/2015"}, {"body": "mhevery yes currently use components implements forms change would allow using decorators instead addition exporting properties directive able export otherwise would use following workaround", "d": "2/2015"}, {"body": "example usecase feature", "d": "2/2015"}, {"body": "jelbourn forms api example template html", "d": "2/2015"}, {"body": "injection values empty string", "d": "2/2015"}, {"body": "remarks traceur support types arrow functions compile ok see reflexion information added anonymous functions retrieve reflexion info anonymous function see", "d": "2/2015"}, {"body": "since testing important part angular story great see design test infrastructure start implementing example support following use cases running tests synchronously using mockzone running tests asynchronously without mocking zones api testing components isolation without html testing components html replacing injectables injector tree replacing directives component tree good answer angulardart everything hierarchical even harder solve", "d": "2/2015"}, {"body": "take stab creating design doc issues", "d": "2/2015"}, {"body": "duplicate", "d": "2/2015"}, {"body": "first example using pseudoclass javascript component selector scarybutton href template inline class scarybutton use anchor instead button component selector scarybutton href template inline class scarylinkbutton introducing optional syntax may lead us back directive api trying get away", "d": "2/2015"}, {"body": "nt access npm actually publishunpublish things sent relevant code changes", "d": "2/2015"}, {"body": "published following packages rttsassert", "d": "2/2015"}, {"body": "nothing changed recently based discussion mhevery going specialcase compiler", "d": "2/2015"}, {"body": "correct looking forward pr", "d": "2/2015"}, {"body": "got initial improved support binding attributes via", "d": "2/2015"}, {"body": "initial support attr bindings added via", "d": "2/2015"}, {"body": "guess next step improve existing impl based yjbanov idea yjbanov ping whenever got time discuss", "d": "2/2015"}, {"body": "sounds like angular question angular repo reopen issue", "d": "2/2015"}, {"body": "list examples needs built", "d": "2/2015"}, {"body": "davideast example probably dependent firebase", "d": "2/2015"}, {"body": "time work still interested", "d": "2/2015"}, {"body": "mhevery yup still interested need update refactor open pr get filters working would need update zonejs watch location hash manually trigger change detection alternatively could filter collection user clicks link rather update zonejs html active completed", "d": "2/2015"}, {"body": "btford think", "d": "2/2015"}, {"body": "going example pr soon think would best work example get example merged review prs also ideas examples please let us know", "d": "2/2015"}, {"body": "mhevery davideast got everything working used link initial state set component todofooterjs location service made add router need opinions code organized since move logic around fit suggested style example storing state business logic todosfilterediting todostore small refactor could switch design glorified flux architecture also known pubsub architecture could also refactor todo logic app component pass state children unidirectional whole app rerender mindset could make mvp version lot less code one component sidenote refactor css nt built components mind make example one example todo app suggestions todo location router service todofooterjs pluralize service todofooterhtml todofooterjs filter foreach todomainhtml todomainjs todostorejs filter currently function todomainhtml repo live view component overview update push small fix traceur nt binding arrow functions todostore", "d": "2/2015"}, {"body": "vsavkin makes sure support use case", "d": "2/2015"}, {"body": "believe able support use case input handling tied html forms something like submitform receive object containing name age", "d": "2/2015"}, {"body": "think looking simple extending native component said think create facade native component extend assuming propagate correct events etc html submit template inline lt button gt lt content gt lt content gt lt button gt component selector awesomesubmitbutton class awesomesubmitbutton extends htmlbuttonelement constructor el ngelement thiselement el", "d": "2/2015"}, {"body": "mhevery today returns max directive per type seems like need update support multiple directives ie case updating also support multiple directives cases think second decorator annotation currently effect use case want support could create prerequisite issue", "d": "2/2015"}, {"body": "yes supporting multiple directives supporting multiple sure would mean two also sure part primordialinjector due different apps may different", "d": "2/2015"}, {"body": "mhevery could discuss terminology making actual change think current good name good name makes hard distinguish list reference proposal would keep current rename annotation line documentfragment html doc uses terminology chose rename could rename prefer latest container methods like collection views", "d": "2/2015"}, {"body": "vsavkin rkirov please add thoughts goal rename something else freed component template annotations thoughts people seem allergic reaction interesting proposal vsavkin rkirov thoughts liked controller manages viewport create collision current point valid opinion", "d": "2/2015"}, {"body": "current favorite vicb arguments valid argument want evoke connection html really right connection directives live elements since ca nt use pick name connection", "d": "2/2015"}, {"body": "prefer viewport views viewport viewcollectionviewcontainer works", "d": "2/2015"}, {"body": "ok", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "wrong repo", "d": "2/2015"}, {"body": "wrong repo", "d": "2/2015"}, {"body": "moved", "d": "2/2015"}, {"body": "track full build times require pub build let track time require transformers part build thanks", "d": "2/2015"}, {"body": "angular developer wanted give experience building large applications angular far experienced performance problems big angular applications really due dom operations rather due way change detection bindings implemented well inability disconnect certain parts ui change detection resulting huge digest loops afaik reading design docs well read source code repo angular problems heavily addressed angular course might gains made something like virtual dom react think would minor wo nt result much bettermore performant user experiences course developers run performance problems angular unable work around inability figure performance problems happen blame framework case might right move onto next shiny framework fail see problem angular community though developers run different performance problems new shiny frameworks sooner later scenario maybe losing developers much loss community course opinion based experience developers frameworks last years believe respectable application developer really understands browser rendering javascript engines work able make application performant framework curious hear members core angular team answer question something like virtual dom might actually cool thing especially since interaction dom handled facade already also understand correctly get compiler work server without dom available way related well", "d": "2/2015"}, {"body": "tommym thank sharing feedback think explain show developers addressed likely retain talent course framework chasers switch anyway big portion quality developers greater confidence investment angular separate note onetime bound expressions help disconnect certain ui parts watch array understanding intention course available", "d": "2/2015"}, {"body": "demisx thank asking question concerns things like performance maintainability large applications driven much development effort angular tommym thank views make lot sense application developers find balance expecting framework using provide good performance options making wise decisions applications make options rather focus question whether angular implement feature x framwork team done spend lot time designing better system highly performant maintainable lot ideas going expanded upon coming months especially ngconf read new approach change detection victor savkin excellent blog post describes reactive structure angular apps combined intelligent disconnecting components need checked give us fantastic performance gains hope helps", "d": "2/2015"}, {"body": "petebacondarwin thanks pete definitely read later today broadcast far dom manupulations go guys forsee major changesimprovements common complaint hear long web forms pages lots ui elements greatly affect performance reactflux virtual dom usually pitched alternative right question angular use virtual dom question angular plans make dom manipulations superior thank", "d": "2/2015"}, {"body": "petebacondarwin thanks linking blog post nt read yet demisx separate note sometimes want disconnect things watch nt necessarily onetime bound think tabs complete views ui nt visible ui states want ability disconnect reconnect speed change detection angular rather hacky see example angular material implementation tabs victor blogpost source code yet completely reimplemented change detection show solved angular combined much better implemented change detection general result huge performance wins even take step try get point let data flow one direction would result scenario run digest loops could done example use twoway data binding rather get data ui state helper methods like new implementation forms landed angular codebase today get back ontopic believe important retain talent within community done explaining angular sometimes performant improvedfixed angular", "d": "2/2015"}, {"body": "demisx saw response wrote previous might wrong experience reason long web forms pages lots ui elements greatly affect performance often dom manipulations due pages generally resulting huge tree result slow change detection course always careful create big relative dom structures since result slower browser layouts perform dom operations dom tree usually work around disconnecting parts dom setting position absolute example stretch scrollable content area using position absolute top right bottom left prevent manipulations dom inside cause browser layout whole page thus resulting much faster manipulations shadowlight dom probably also help prevent huge browser layouts havent tested yet though another problem people often run reading writing multiple times dom within one rendering frame browser every time read something dom pending writes applied layout recalculation done many times within one frame result application feeling sluggish benefit something like virtual dom react apply dom changes thus shielding developer think stuff like however prevent happening dom reads first apply dom writes browser automatically queue writes till end frame apply one layout recalculation resulting much smoother user experience course usually applies people creating custom components directives people writing frameworks nt concern developers using angular frameworks something always keep mind general believe responsibility application developers learn platform case browser write applications help write performant applications regardless framework use ps sorry long rants worked frameworks long time sometimes gets tiresome see developers blame frameworks inability use properly think great trying convince developers stay community explaining run problems", "d": "2/2015"}, {"body": "tommym yeap make good example disconnects totally see value also thank dom disconnect tips appreciate time writing make sure share counterparts great stuff know thank petebacondarwin everyone chiming great info help us explain better community done address current shortcomings major breaking redesign great going many great angular developers want continue feel superheroic", "d": "2/2015"}, {"body": "fixed", "d": "2/2015"}, {"body": "see well", "d": "2/2015"}, {"body": "see well", "d": "2/2015"}, {"body": "see well", "d": "2/2015"}, {"body": "see well", "d": "2/2015"}, {"body": "see well", "d": "2/2015"}, {"body": "depends", "d": "2/2015"}, {"body": "wrong repo guess wanted open issue spare effort supposed work elements reason handle data binding ca nt data binding hidden elements users ca nt interact use interpolation attribute use ngattrs", "d": "2/2015"}, {"body": "elvismacak wrong repo probably looking frankly kind support question asked elsewhere see", "d": "2/2015"}, {"body": "actual link mentioned todo", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "kind late party curious reasoning behind change public explanationdiscussion somewhere github issueforumgoogle doc", "d": "2/2015"}, {"body": "also interested reasoning behind change nt drop prefix less future proof decide come native attribute cc pascalprecht", "d": "2/2015"}, {"body": "rkirov think one depends strategy made global currently strategies native emulated something could bind strategy native shadow dom supported emulated think", "d": "2/2015"}, {"body": "yes get asap given shim build compatible switching native emulated per browser something want avoid app developer might test chrome ship app might completely broken firefox limitations emulated mode", "d": "2/2015"}, {"body": "prototype change good news emulated shadow dom works examples benchmarks bad news slower tree benchmark native script time emulated script time", "d": "2/2015"}, {"body": "rkirov look today", "d": "2/2015"}, {"body": "tried binding shadowdomstrategy emulatedshadowdomstrategy root bindings applicationjs loading simple components components work native strategy emulated make crash browser chrome firefox", "d": "2/2015"}, {"body": "rkirov could please status update", "d": "2/2015"}, {"body": "issue reported jelbourn pb strategy moved application level injector root bindings", "d": "2/2015"}, {"body": "rkirov sure worth strategies api ctor change see change pr landed", "d": "2/2015"}, {"body": "vicb yes handle merged also blocked adding dom readwrite queue getting close done without emulated strategy bit slower native tree benchmark finally features missingbugs emulatedshadowdomstrategy would need fixing final switch see", "d": "2/2015"}, {"body": "incomplete list x decide whether angular compatible protractor exists whether create new branch protractor x scaffolding exporting testability api window x provide way protractor know application stable pending requests promises see provide testability api exposes useful ways finding elements compatible existing protractor would model binding rethink best options angular see provide way add modules may override modules app page load see provide way turn animations element speed tests pending concrete animation lib consider tests hooks would useful instrumentation debugging tools need vague future work best guess time estimate think doable februarymarch edit hahaha", "d": "2/2015"}, {"body": "juliemr please update status issues", "d": "2/2015"}, {"body": "progress see work progress pr", "d": "2/2015"}, {"body": "superseded", "d": "2/2015"}, {"body": "started investigate identify physical key keycode however different key codes events generated printable characters ie char code ref keyjs", "d": "2/2015"}, {"body": "like idea vicb probably saw already wanted mention anyway could design based keyboardeventkey instead keycode since targeting future browsers angular polyfill keyboard events using keycode charcode etc one available polyfill could find nt used sure good commits since may guys would probably write anyway p", "d": "2/2015"}, {"body": "got another idea would like share since investigating probably belongs separate issue scenario particularly relevant keyboard events start built apps smart tv prototypes wanted use scopecontext maintain life cycle key binding bind dom element attribute used needed document handler would trigger regardless focused element position way approach angular write directives bind everything document use scope createdestroy bindings appropriate moments translate approach syntax could look like sure still using character situations intend syntax referencing item ngrepeat addition case multiple bindings key often needed way distinguish scenarios multiple handlers called scenarios one highest priority called case scope created last usually highest priority modaldropdown example would enable specify pressing dropdown closed pressing modal closed projects returning false expression simply nt thought anything better yet resemblance maybe inspiration take designing better syntax would nice additions keyboard handling would use often helped keep controllers clean easily control key binding life cycles even document", "d": "2/2015"}, {"body": "sure whether allow macro directives use app injector otherwise need run app server precompile templates server would require services run server well tue feb mi\u0161ko hevery notifications githubcom wrote new macro compiler needed work macro selector mybutton class mybutton constructor injectable app level injector created transform el element called multiple times matches happen perform dom transformation template used transforming transforming exp migrated reply email directly view github", "d": "2/2015"}, {"body": "agree sure useful macro directives would without injector guess try without injection add later macro directive different compiler step", "d": "2/2015"}, {"body": "opinion compiler step although nicer api tue feb pm mi\u0161ko hevery notifications githubcom wrote agree sure useful macro directives would without injector guess try without injection add later macro directive different compiler step reply email directly view github", "d": "2/2015"}, {"body": "let punt revisit experience", "d": "2/2015"}, {"body": "create new package phase development", "d": "2/2015"}, {"body": "document track publishingreleasing decisions", "d": "2/2015"}, {"body": "live pub see", "d": "2/2015"}, {"body": "known issue talked misko vojta come good solution one easy understand performs well", "d": "2/2015"}, {"body": "note need fix templateloader pr makes shadow dom strategy global strategy injected compiler bindings declared root bindings fix enables overriding strategy bootstrap time application injector without fix strategy would always retrieved root injector impossible override", "d": "2/2015"}, {"body": "thinking merge operation lists bindings driven config benchpress provide defaults think might easier using child injector let talk person wed feb victor berchet notifications githubcom wrote note need fix templateloader pr makes shadow dom strategy global strategy injected compiler bindings declared root bindings fix enables overriding strategy bootstrap time application injector without fix strategy would always retrieved root injector impossible override reply email directly view github", "d": "2/2015"}, {"body": "actually along lines binding provide default bindings dependencies uses wed feb tobias bosch tbosch googlecom wrote thinking merge operation lists bindings driven config benchpress provide defaults think might easier using child injector let talk person wed feb victor berchet notifications githubcom wrote note need fix templateloader pr makes shadow dom strategy global strategy injected compiler bindings declared root bindings fix enables overriding strategy bootstrap time application injector without fix strategy would always retrieved root injector impossible override reply email directly view github", "d": "2/2015"}, {"body": "vicb sounds like natural thing would child rebinds dependency would invalidate instance lives parent however consider resolve deps function var parent new injector car engine var child parentcreatechild bind engine toclass turboengine however poses question instance live store child injector breaks expectation injector holds instances bindings never bound explicitly trying convince bug rather design decision among different options messy semantics going abithardertouse explicit option rebind dependency explicitly rebind dependent bindings want affected example work rebind doubt surprises everyone first considering different solutions would warn prevent getting error got", "d": "2/2015"}, {"body": "tbosch guarantee last binding wins repeated binding injector", "d": "2/2015"}, {"body": "vsavkin add test case show intentional behavior", "d": "2/2015"}, {"body": "consider rule parent injector reference child injector need able reason lazy loaded code unload unused child injectors rule broken order loading child injector matter want explicitly allow creating child injector way effect someone reference parent injector rule prevents asking", "d": "2/2015"}, {"body": "created pr adding test case showing intentional behavior", "d": "2/2015"}, {"body": "repo angular js please reopen issue", "d": "2/2015"}, {"body": "class shimcssjs shadowdomemulation limitation", "d": "2/2015"}, {"body": "sorry skipped", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "tried reproducing issue existing tests langspecjs however test passes incorrectly reason test run transpiler well assertion executed test becomes words bug applied expected well actual think right solution new test fixture allows us simply execute compiler small snippet assert dart code produces without executing run node browser think could use mocha test runner add simple test case added advantage easy debug since nt transpile test easily step transpiler webstorm nt possible gulptranspilekarma setup send pr", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "closed", "d": "2/2015"}, {"body": "needed animation needs little work find actually", "d": "2/2015"}, {"body": "need also style", "d": "2/2015"}, {"body": "support added support added remains support", "d": "2/2015"}, {"body": "moving blocked structural changes", "d": "2/2015"}, {"body": "support pipes added issue unblocked", "d": "2/2015"}, {"body": "vsavkin yup saw commits working topic right could please review going need pipe objects least persuaded going need", "d": "2/2015"}, {"body": "seems like complicated issues list mention pretty straightforward complete", "d": "2/2015"}, {"body": "handing mlaval done experiments", "d": "2/2015"}, {"body": "fixed", "d": "2/2015"}, {"body": "per mhevery comment syntax changed map flipped annotation", "d": "2/2015"}, {"body": "making sure annotations nt lost transform looking define different way final code similar js annotations attached constructor object property", "d": "2/2015"}, {"body": "kegluneq sorry updated text", "d": "2/2015"}, {"body": "long requiring user specify entry point nt problem nt seem different angular polymer right nt seem like take long famous last words", "d": "2/2015"}, {"body": "package initialize designed situation used similar things polymerdart able make work also", "d": "2/2015"}, {"body": "remove import dart mirrors", "d": "2/2015"}, {"body": "dom facade good example could get rid static class toplevel members dart export functions directly instead exporting class exports", "d": "2/2015"}, {"body": "poking bit run problem many functions angular atscript code nt declare return type return statement means ca nt check type info determine void peek ahead ast see return scope infer truly void", "d": "2/2015"}, {"body": "could annotate methods per", "d": "2/2015"}, {"body": "yes discussing possibility tobias concern wo nt useful long devs still adding void functions declaring void think need kind tooling like linter", "d": "2/2015"}, {"body": "make atscript compiler yell one creates function without return type definition seriously light lot great analysis dart mention making apidocs lot clear users", "d": "2/2015"}, {"body": "personal preference explicit typing discussing rkirov get sense team would rather explicitly type functions void note even put void bug nt make transpiler dart probably fixing unless intend start typing atscript functions void without types declared input think hard transpiler infer", "d": "2/2015"}, {"body": "strongly disagree return type omitted user expect something returned return types argument types explicit possible problem atscript ambivalent void dart style absolutely opinion generating dart api follow best practices", "d": "2/2015"}, {"body": "slight misunderstanding proposed solution unacceptable replacing lack return type void lack type declaration atscript source left lack type declaration dart transpiler job infer add types bug omitted transpiration valid fixed finally agree dart style guide however current time clear exactly angular public api apis kept internal alexeagle said ok omitting types get closer defining public api surface annotate argument return types including reopen issue time likely rolled larger issue defining style guide codebase cleaning code", "d": "2/2015"}, {"body": "awesome thanks fri feb pm rado kirov notifications githubcom wrote slight misunderstanding proposed solution unacceptable replacing lack return type void lack type declaration atscript source left lack type declaration dart transpiler job infer add types bug void omitted transpiration valid fixed finally agree dart style guide however current time clear exactly angulars public api apis kept internal alexeagle said ok omitting types get closer defining public api surface annotate argument return types including void reopen issue time likely rolled larger issue defining style guide codebase cleaning code reply email directly view github", "d": "2/2015"}, {"body": "brian pr looking good", "d": "2/2015"}, {"body": "try using solve problem", "d": "2/2015"}, {"body": "", "d": "2/2015"}, {"body": "working updated designs roadmaps publish proposals feedback within next couple weeks starting new http library thanks benjamingr", "d": "2/2015"}, {"body": "intentionally leaving issue open", "d": "2/2015"}, {"body": "cool thanks jeffbcross", "d": "2/2015"}, {"body": "done", "d": "2/2015"}, {"body": "done", "d": "2/2015"}, {"body": "done", "d": "2/2015"}, {"body": "closed", "d": "2/2015"}, {"body": "rado reviewed pr looking good little xhr open issue di needs resolved", "d": "2/2015"}, {"body": "ref", "d": "2/2015"}, {"body": "closed", "d": "2/2015"}, {"body": "implemented", "d": "2/2015"}, {"body": "update newest release chromedriver shadow dom support seeing issues filed issue chromedriver see also latest comment edit update turns issues bad nt updated chromedriver appropriately fixed via", "d": "2/2015"}, {"body": "since done chromedriver using bycss deep myclass work note latest protractor release installs chromedriver manually upgrade todos update protractor new default version consider creating helper element locator", "d": "2/2015"}, {"body": "fyi thanks julie digging sat feb pm julie ralph notifications githubcom wrote since done chromedriver using bycss deep myclass work note latest protractor release installs chromedriver manually upgrade todos update protractor new default version consider creating helper element locator bydeepcss myclass equivalent tobycss deep myclass reply email directly view github", "d": "2/2015"}, {"body": "release new version protractor installs chromedriver webdrivermanager look updating use today sun feb pm tobias bosch tbosch googlecom wrote fyi thanks julie digging sat feb pm julie ralph notifications githubcom wrote since done chromedriver using bycss deep myclass work note latest protractor release installs chromedriver manually upgrade todos update protractor new default version consider creating helper element locator bydeepcss myclass equivalent tobycss deep myclass reply email directly view github", "d": "2/2015"}, {"body": "done", "d": "2/2015"}, {"body": "wo nt implemented", "d": "2/2015"}, {"body": "implemented needed concrete benchmark", "d": "2/2015"}, {"body": "doc tracking plan packaging releasing", "d": "2/2015"}, {"body": "modules done benchpress rewritten atscript part folder see transpiler published", "d": "2/2015"}, {"body": "maintained", "d": "2/2015"}, {"body": "current implementation lives publish modules except subfolders yet npm today tomorrow", "d": "2/2015"}, {"body": "tbosch mean right", "d": "2/2015"}, {"body": "done", "d": "2/2015"}, {"body": "closed", "d": "2/2015"}, {"body": "integrate charting dart nt", "d": "2/2015"}, {"body": "initial version iosdriver almost working", "d": "2/2015"}, {"body": "hankduan taking look", "d": "2/2015"}, {"body": "wo nt implemented", "d": "2/2015"}, {"body": "nt need graph results time via dart team", "d": "2/2015"}, {"body": "looks like fixed already added passing test case", "d": "2/2015"}, {"body": "may late conversation would like type annotations available templates could validated ide build time gulpgrunt task atscript typescript ngtype attribute could removed template build task would needed development build otherwise would get ignored production could help ides issues trying understand angular template system", "d": "2/2015"}, {"body": "think reason people voting rob dot syntax looks good semantically think works seems flexible would implore angular team mhevery please listen people suggestions frankly seen video alpha release syntax looks visually terrible hope never write syntax", "d": "2/2015"}, {"body": "tonypee see votes compared size thread nothing wonder ngnl presentation current docs templates still promoting parts new syntax opening post thread contains elementsetattribute foo exp work especially svg requires valid xml valid xml problems solved somehow nt know please let us know", "d": "2/2015"}, {"body": "jamm voting followed positive multiple comments support prefixsuffix style defining binding originally eisenbergeffect suggested bind etc people supporting pascalprecht sanderelias donaldpipowitch yamafactory recently dot suffix mhevery suggested semantically positive support deborahk alxandr akircher nborelli circlingthesun seems readability amp usability might taking backseat perceived restrictions feel comments suggest people would rather elegant syntax interested see full examples syntax understand change hard initially perception important syntax looks elegant readable", "d": "2/2015"}, {"body": "tonypee actually voting anything withdraw mine favor current syntax using using create todo app found pretty clear keep mind also use current syntax since considered shorthand problem solved using facade api dom aka using", "d": "2/2015"}, {"body": "thanks example code think agree long new use make syntax easier beginners experienced user use shorthand readable terse code think good solution", "d": "2/2015"}, {"body": "like syntax markers aesthetically would like confirmation refutation mhevery igorminar et al break svg broader xml interoperability", "d": "2/2015"}, {"body": "read summary syntax two forms shorthand canonical form canonical forms basically could use using angular inside svg x ht ml documents", "d": "2/2015"}, {"body": "petebacondarwin document evolved quite bit since last looked thanks pointing updates", "d": "2/2015"}, {"body": "thanks petebacondarwin finally resolved", "d": "2/2015"}, {"body": "davidsouther indeed true attribute syntax incompatible applicationxhtmlxml document dots however valid eg onclick foo agree attribute syntax readable prefix proposal think using sigils general place keywords results things terse ultimately harder comprehend feel way sigilheavy programming languages also strongly recommend two different ways writing templates really confusing new developers results inconsistent hardtoread templates developers write one way others write another reminds developers would use datang others ng three different ways dependency injection one ban despite used every sample talk internet case would ban syntax xml metatemplating tools would nt able parse given lack xmlsvg compatibility would say syntax simply fails meet constraints eliminated altogether favor prefix proposal", "d": "2/2015"}, {"body": "obsolete", "d": "2/2015"}, {"body": "added unit test dart transpiler resolve issue also want example unit testing particular transformer transpiling", "d": "2/2015"}, {"body": "actually never removed hack transpiler never used new feature traceur see", "d": "2/2015"}]