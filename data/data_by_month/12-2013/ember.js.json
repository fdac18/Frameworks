[{"title": "fails local windows", "body": "able build ember using latest code get command runs fine previous versions ember including still relying available globally think something local dependency sure go fixing something simple missing end windows may also part problem", "num": "4027", "d": "12/2013"}, {"title": "emberjs addobserver call", "body": "base view javascript emviewextend function controller javascript emcontrollerextend null emcomputedalias set value setter observers called apart callback addobserver help", "num": "4019", "d": "12/2013"}, {"title": "seeing docs handle nested json responses", "body": "maybe overlooking something ca nt figure supposed json coming server looks like articles user name user username user id id v content content title title created template accessing content created fine try get username nothing comes article model articletitle articleusername articlecreated noticed model whatever nt define wo nt appear template looks like title dsattr string content dsattr string created dsattr date try add user name dsattr string match nested json get error ember able handle nested json thanks", "num": "4006", "d": "12/2013"}, {"title": "register prebuilt repository bower", "body": "currently pull repository propose another repository registered name bower contains prebuilt tagged versions ember would ideal would like use bower", "num": "4005", "d": "12/2013"}, {"title": "transitiontoroute qp change", "body": "hey manual states possible reroute route changing qp causing error ember today build specifying route name works okay error thanks", "num": "4000", "d": "12/2013"}, {"title": "provision avoid observer calls cases", "body": "following piece logic displaying alert via reusable view using displaymessage observe changes message controller issue arises set message value value undefined initially handle add conditional statement thisget controllererrortype amp amp thisget controllererrortype possible avoid observable call cases", "num": "3998", "d": "12/2013"}, {"title": "resource without callback nt create index route", "body": "resource nt provide callback argument index route nt generated method creates route etc brings another issue machty looks like route wo nt get generated either resources lacking callback nt tested pr sufficiently playing presents", "num": "3995", "d": "12/2013"}, {"title": "composed arraycomputed fails", "body": "using composed properties fails changing underlying source content see simple test case tested latest release version error", "num": "3994", "d": "12/2013"}, {"title": "using thistransitionto skips loading model", "body": "sure whether intentional behavior let explain use transitionto route dynamic segments model method destination route never gets called essentially passing params id still want load right model refresh page right url though model gets loaded fine put together codepen demonstrate current version log console look indexroute commented transition enabled never triggers expected loading model confirmation route", "num": "3989", "d": "12/2013"}, {"title": "controller initialized route hook fires", "body": "seems route controller initialized route hooks firing intentional assume hooks would fire route controller initialized way things feels bit counterintuitive since sometimes need take action model resolved controller initialized b already many places put code runs controller initialized", "num": "3985", "d": "12/2013"}, {"title": "setproperties nt really batching observers", "body": "according documentation batch observers however observer depends two properties called twice even changes batched realized arguments include name observed property however batching could send multiple arguments one key changed repro steps jsbin", "num": "3981", "d": "12/2013"}, {"title": "strange error", "body": "shown img strange idea", "num": "3976", "d": "12/2013"}, {"title": "proposal emberrunproxy", "body": "like provides proxy invoked wrapped runloop would prevent needing define allocate extra closure feels like good devergo integrating libraries enforce async", "num": "3973", "d": "12/2013"}, {"title": "error substates return undefined models parents", "body": "hi sure bug intended behaviour new ember error handling substates change models parent routes code example viewed output window reason parent routes erroneous one losing initial models hooks relevant routes invoked reason possible still use initial models parent routes used transition error state", "num": "3972", "d": "12/2013"}, {"title": "consider making jquery optional", "body": "hi new project target modern browsers thinking carry extra weight jquery would great thinking ember context get feeling ember rely small subset jquery features would love framework make jquery optional drop replacements like lightweight option use instead limited dom querying reduce loading time quicken app bootstrapping well think richard", "num": "3971", "d": "12/2013"}, {"title": "methodapply fails", "body": "emberdebugjs line following line cause error methodapply solution typeof methodapply undefined", "num": "3970", "d": "12/2013"}, {"title": "emberrunlater fires immediately chains", "body": "sure wrapped chains appear fire immediately acts nicely inside function would fire given context previous deferred resolved take following example using jquery functions return deferred resolves time get play nicely ember would require anonymous function either outer reference wrapped function eg proposing make act like possible delaying firing contained deferred function without compromising performance allowing something like opened related improvement run functions could return deferred", "num": "3966", "d": "12/2013"}, {"title": "emberrun could return deferred resolved run", "body": "currently emberrun nt seem return anything think would pretty handy return deferred resolved function runs allowing chaining var self emrun popin function return emrunlater self popout function return emrunlater self popin", "num": "3965", "d": "12/2013"}, {"title": "dom ready document loaded action fire", "body": "page use requirejs dom loaded click button load component component close action action close click action responseon document loaded click ok", "num": "3950", "d": "12/2013"}, {"title": "write inline template component view", "body": "appmsg embercomponentcreate template emberhandlebarscompile template classnames pushmessage close function thisdestroyelement like right call actions action call appmsgclose called code help thank", "num": "3948", "d": "12/2013"}, {"title": "removeat throws error", "body": "attempt call empty array leads error think nt", "num": "3945", "d": "12/2013"}, {"title": "vagrant setup nt actually work nt since release", "body": "opening issue see interest still including vagrant setup repository things keep mind nt worked since release vagrant osx mavericks comes ruby default still interest supporting happy get date newest release vagrant", "num": "3938", "d": "12/2013"}, {"title": "arraycontroller indexof return valid index objectcontroller content wrapped controller", "body": "use comparable stefanpenner", "num": "3931", "d": "12/2013"}, {"title": "outlet inside weird behavior", "body": "trouble template two outlets one inside branch one inside else happens everything starts fine eventually markup supposed go outlet ends inserted twice jsfiddle demonstrating behavior run fiddle start edit view click three names see properly rendered outlet click thumbnail view link purposes example thumbnail view looks like edit view except names reverse order secondary outlet click one names takes back edit view name rendered correctly outlet click different name sudden name rendered twice get bad mode nt seem way get without reloading", "num": "3929", "d": "12/2013"}, {"title": "make noise render helper ca nt find supplied template", "body": "quiet quiet", "num": "3926", "d": "12/2013"}, {"title": "linkto nonblock form syntax text update correctly changing linked value", "body": "example changing value variable also text shown linkto use linkto linkto block format order value binding correctly update dynamically seems get one keypress breaks see example", "num": "3925", "d": "12/2013"}, {"title": "support target attribute linkto helper", "body": "propose support target attribute linkto helper know linkto purpose support transitions within application setting target blank mean automatically external link perfectly feasible use case list resources loaded clicking one get resource page clicking back browser loosing context default ember gets loaded page simple solution would open resource target blank nt want hack around pretty sure use case within application transitions ember philosophy", "num": "3924", "d": "12/2013"}, {"title": "error deleting todos", "body": "following tutorial get error deleting todo page first double clicked todo deleted content make empty gets removed list clicked remove button delete todo location get uncaught typeerror call method deleterecord null template controller previous step", "num": "3923", "d": "12/2013"}, {"title": "emberselect breaks inside group helper", "body": "put within helper content select box properly shown number items select box correct label incorrect value preselected selecting value select box correctly change bound value however jsbin illustrates problem", "num": "3922", "d": "12/2013"}, {"title": "emberstring class support transforming strings namespaces", "body": "similar way rails activesupport inflector inflections class camelize timeentrylaborcamelize timeentry labor decamelize timeentry labordecamelize timeentrylabor underscore timeentry laborunderscore timeentrylabor", "num": "3921", "d": "12/2013"}, {"title": "form action inside nt trigger submit keyboard", "body": "consider form like intercept submit pressing return keyboard focused submit form right happens button action triggered instead removing intercept button yields expected behavior jsfiddle", "num": "3920", "d": "12/2013"}, {"title": "indexof eventlistener performance bug", "body": "continuing performance tuning ie found another possible performance bug seems like used group indexof function line begins take inordinate amount time seen seems happening target method flags add end event array later point indexof called indexof starts beginning array nt find till end chrome modern ies fast enough nt mater fortunately simple fix start searching end array search reverse event system uses series nested hashes store listeners object listener registered event arrives hashes consulted determine target action pair invoke hashes stored object meta hash look like function indexof array target method var index var arraylength gt target array amp amp method array index break return index wo optimization w optimization ideal fix might replace array tree like datastructure index nt need called everytime lookup needed", "num": "3917", "d": "12/2013"}, {"title": "legacy loadingroute example uses deprecated defaultcontainer", "body": "documentation suggests creating view like triggers error per recommended way append view", "num": "3916", "d": "12/2013"}, {"title": "apply emberjs existing element", "body": "page apply emberjs existing element think necessary like github render first page browser", "num": "3914", "d": "12/2013"}, {"title": "overriding index route causes issues linkview", "body": "overriding index route given resource like apparently supported according guide quote cause issues using linkview ie linkto helper eg linkview resolve books booksindex route faulty piece code called fullroutename javascript function fullroutename router name routerhasroute name name name index would suggest implementing router getindexroute equivalent would return index route given resource ie route path fail supplied param valid resource use router getindexroute instead thoughts thanks", "num": "3913", "d": "12/2013"}, {"title": "router ignores queryparams index route", "body": "new queryparams feature seems fail index route live demo code demo nonindex route working ok demo index route failing would expect routes see second argument model method something like home route object would expect route empty object", "num": "3912", "d": "12/2013"}, {"title": "clicks external links inside actions get eaten action handler", "body": "plain old links nested inside element action clicks links nt work problem creating navigation menus toggled open closed external links inside wo nt work internal works great jsbin demonstration", "num": "3911", "d": "12/2013"}, {"title": "array property value shared instances component", "body": "quite sure done something wrong made component properties working correctly scope component instance however added property array value behaves unexpectedly element pushed array component via set pushed property component", "num": "3908", "d": "12/2013"}, {"title": "routeviewname routecontrollername documented", "body": "sure reason nt documented found useful browsing source code properties use case simplified javascript var childroute emberrouteextend controllername userslist appusersindex childrouteextend appusersconfirmedroute childrouteextend appusersunconfirmedroute childrouteextend matter kind array content child routes return use controller passed methods anyway intended use property think documented", "num": "3906", "d": "12/2013"}, {"title": "page rendering issue displaying data fixturesadapter", "body": "sorry trouble coming better title emberjs bug emberdata bug markup used elements render properly data displayed fixturesadapter try resizing window output visible fix expected actual", "num": "3901", "d": "12/2013"}, {"title": "add hook views", "body": "view hook triggered every time view contents updated ember reuses views much possible therefore always recommended rely hook update view contents might therefore useful add hook triggered whenever view template updated stack overflow question illustrates uncommon use case hook short whenever view displays list items rendered using handlebars block helper selecting first item list using jquery works fine using hook however navigating different route trigger hook due ember reusing view already inserted dom approach used", "num": "3894", "d": "12/2013"}, {"title": "using group wo registering result error", "body": "using group wo registering result error wo w leads higly confusing state user uses group block handler nothing happens", "num": "3893", "d": "12/2013"}, {"title": "weird broken bindings behavior", "body": "debug ember emberjs debug ember data emberjs debug handlebars emberjs debug jquery emberjs actorid item content itemname possibleactoroffsets actorid actorid view emberselect valueitemactoroffset contentpossibleactoroffsets bbb updated updates correctly however update always shows initial value seems binding bug updated updates expected however options content select view never update also seems binding bug", "num": "3892", "d": "12/2013"}, {"title": "possible performance bug using inside", "body": "run major performance bug used conjunction takes chrome render elements statements statements elements statements elements takes gt seconds using prod nt seem major effect edit replacing bound helper statement fixes problem unfortunately nt exactly graceful fix zip basic example js bin html ember starter kit lt gt click populate create list slowly lt gt lt p gt like pain try lt p gt outlet lt button action populateelements amp gt populate lt button gt filteredgroups lt div gt lt table class tabledefault id previewergroupstable gt lt tr gt lt th gt previewer group lt th gt lt th gt previewers lt th gt lt th gt batches lt th gt lt tr gt filteredgroups lt tr gt lt td class left gt asdf lt td gt lt td class colnumeric gt shownopreviewerswarning group previewers gt lt gt asdf lt td gt lt td class colnumeric clickable gt shownobatcheswarning group preview reports lt gt asdf lt gt lt td gt lt tr gt lt table gt lt div gt javascript app emberapplicationcreate approutermap function put routes appindexcontroller emberobjectcontrollerextend properties numberofelements filteredgroups embersubscribe render function name start payload return start function name end payload start var duration mathround end start var template payloadtemplate consolelog emberinspect payload var title var view payloadobjecttostring consolelog rendered template view took duration ms", "num": "3874", "d": "12/2013"}, {"title": "startkit params test test improved", "body": "startkit params test test improved currently focus tests use test related query params swapping runnerjs check instead fixes", "num": "3873", "d": "12/2013"}, {"title": "rake dist failing tag", "body": "trying build tag ember get following error rake aborted file directory defeatureify block generateoutput generateoutput create invokewithcallchain block levels invoke block invoke invoke block invoke invoke inblock levels", "num": "3872", "d": "12/2013"}, {"title": "need better error setting arraycontroller model nonarray", "body": "uncommon refactors spikes etc say return object hook controller define get crappy error occurs note nice errors opposite case often exposed try object controller think perhaps router level try detect stashing non array", "num": "3869", "d": "12/2013"}, {"title": "query params stickiness resources", "body": "query params currently remain sticky going resources example say resources users accountroles dont want sorts remain sticky going", "num": "3868", "d": "12/2013"}, {"title": "itemview property nt properly documented", "body": "cc bfbriggs", "num": "3867", "d": "12/2013"}, {"title": "input type text passed empty path getpath", "body": "something messed involving combination componentyield keywordtext input causes passed empty path error getpath details", "num": "3860", "d": "12/2013"}, {"title": "bug nt recompute within falsified block", "body": "see explanation cliffsnotes probably cases recalcs cp even block lives falsified cc kselden", "num": "3859", "d": "12/2013"}, {"title": "bubblesfalse onsubmit nt work well together", "body": "maybe fundamental misunderstanding believe bug way works action within scope action first action never sent example jsbin based modal example code wondering similar requires propagating top caught browser", "num": "3857", "d": "12/2013"}, {"title": "enumerablearray indexof likely also use embercompare comparable", "body": "added", "num": "3856", "d": "12/2013"}, {"title": "weird posttransition logging using parentprefixed thisresource naming", "body": "recall people use trick preserve route naming subresources undesirable discard parent resource name entirely sure solution", "num": "3853", "d": "12/2013"}, {"title": "action parent container prevents interaction child inputs", "body": "short mustache prevent inputs reacting clicked openfile dialog open checkbox checked jsbin illustrates compare seeminglyequivalent jquery code issue", "num": "3851", "d": "12/2013"}, {"title": "transition static segment dynamic nt clear content outlet", "body": "hi trying make modal dialog static segment dynamic segment jsfiddle production emberjs also tested latest canary release behaves exactly works ok first go dynamic segment open dialog static segment transition static segment within dynamic clicking second link transition route content dynamic segment removed outlet seems kind bug within ember guess also could something within bootstrap javascript problem well also nt matter use linkto helper transitiontoroute controller always effect old content outlet cleared rendering route", "num": "3850", "d": "12/2013"}, {"title": "allow attribute bind binding", "body": "works like charm attributebindings dataisbeingsent disabledw dataisbeingsent gt get parentviewcontrollerisinvitationbeingsent property parentviewcontrollerisinvitationbeingsent nt got lot head scratching", "num": "3849", "d": "12/2013"}, {"title": "ditch favor", "body": "see two benefits error handling kept one place avoid doublereporting errors case error handler rethrows error emberhandleerrors catches errors pass used two places eventdispatcher emberrun catches errors pass ie thing terms error handling proposal unless missed codepath cases wrapped emberrun albeit code perhaps could remove think", "num": "3848", "d": "12/2013"}, {"title": "observing isdestroyed causes assertion failure", "body": "want react object destroyed adding observer target object property causes destruction calls object cause assertion failure due fact internals simply assign problem property watched jsbin illustrates problem one provides workaround tedious add everywhere", "num": "3844", "d": "12/2013"}, {"title": "inconsistent api among builtin views", "body": "extending whilst extend view creates confusion among api obstacles write common mixins builtin views piece code would work since method controller view following would work since extends sake consistency builtin view extend", "num": "3843", "d": "12/2013"}, {"title": "invoke across array created reducecomputed seems borked", "body": "following works following fails appears affect first entry source grabbing todos project make quite simple replicate needed extract jsbin", "num": "3836", "d": "12/2013"}, {"title": "uncaught typeerror object function method find", "body": "hi please help try find model data store give error js app emapplicationcreate appstore dsstoreextend adapter dsrestadapter appuser dsmodelextend firstname dsattr string lastname dsattr string birthday dsattr string mainphoto dsbelongsto mainphoto appindexroute emrouteextend model function consolelog appuserfind debug ember debug ember data debug handlebars debug jquery", "num": "3833", "d": "12/2013"}, {"title": "dryness emberlogger makes failure scenarios quite terrible", "body": "experiment less fancy less dry see logs log assertions originate incredibly cryptic scary place", "num": "3832", "d": "12/2013"}, {"title": "uncaught exception bubbling karma qunit phantomjs", "body": "running amp switching ember seeing test continues running even though controller throwing error switch error caught properly handled within karmaqunitphantomjs shows proper error code controller throwing error init function thissuper test runner log ember appears fail silently continue causing template rendered causing integration tests fail", "num": "3829", "d": "12/2013"}, {"body": "asaf could test resolves issue additional background info fixes default context templateless component updates docs tests ensuring context triggered actions correct", "d": "12/2013"}, {"body": "nt resolve issue could provide simplified jsbin exhibiting issue happy track reproduce issue seeing", "d": "12/2013"}, {"body": "rjackson reason pushing repo try compile fork test needed deprecated appropriate approach components registered application initialized thanks", "d": "12/2013"}, {"body": "rjackson uh read code moves templatename layoutname think important merge least time components transition properly hard debug confusing since exist registering component via handlebars helper supported valid issue safe closed thanks", "d": "12/2013"}, {"body": "asaf deprecation using component without also using using together deprecated pr ensures using behaves way allowing component autolooked believe main issue folks assume components template thing register fact template actually injected components see block provided component called", "d": "12/2013"}, {"body": "asaf agree hope merged released", "d": "12/2013"}, {"body": "issue likely guess executing path like nt work take look fixing tonighttomorrow need windows tester patch", "d": "12/2013"}, {"body": "thanks something help test end happy", "d": "12/2013"}, {"body": "think know fixes needed pointing two places modify make work open issue emberdev repo details put reference instead", "d": "12/2013"}, {"body": "brzpegasus awesome thank tracking", "d": "12/2013"}, {"body": "curious happens thisget controller addobserver instead chaining", "d": "12/2013"}, {"body": "nothing change add question view extension custom view based emview controller implemented using hierarchy created base controller called baseadvancedcontrolcontroller shared code different controllers reopen baseadvancedcontrolcontroller implement onmapadvancedcontrolcontroller last mixed onmapadvancedcontrolcontroller different controllers implement exampleviewcontroller previous example", "d": "12/2013"}, {"body": "please post jsbin example showing issue pretty confident nt bug", "d": "12/2013"}, {"body": "reproduce problem example try investigate possible coding errors cache problem", "d": "12/2013"}, {"body": "believe cp needs accessed observers begin fire", "d": "12/2013"}, {"body": "know implemented addobserver using observes function want exclude events view inserted", "d": "12/2013"}, {"body": "believe related lazy cp although actually bug currently scenarios like confusing cp lazy compute accessed marked invalid happen also begin life invalid state become invalid dependentkeys change cp never computed value unknown observing unknown value nt meaningful cp accessed first time value becomes known observing meaning nt really meaning computed likely giving kick solve im closing issue nt believe actually bug rather expected although obvious behavior clear example demonstrating issue presented gladly reopen", "d": "12/2013"}, {"body": "good reminder alias regular cp nt even occur prob", "d": "12/2013"}, {"body": "better venue ask help stack overflow try keep issue tracker framework bugs issues", "d": "12/2013"}, {"body": "sorry thought issue explained stackoverflow forum ember looked pretty inactive try", "d": "12/2013"}, {"body": "get responses stack overflow ember forum looks like stuff still making documentation unavailable makes quite difficult use ember production right issue opinion sure aware would say ember ready real life project", "d": "12/2013"}, {"body": "course ember ready real life project production ready consult incomplete list users problem easily handle embedded records serializer try specific difficulties try asking stackoverflow could even join emberjs channel freenode irc ember community helpful respect questions", "d": "12/2013"}, {"body": "ah thank nt found document ember site sure found help irc also great idea perhaps response faster", "d": "12/2013"}, {"body": "wesleycho componentsember shim repo contains final builds registered bower repo maintained ember release management team normal release publishing process prevent confusion future either remove registry point componentsember", "d": "12/2013"}, {"body": "ahh realize nt easily searchable via unfortunately", "d": "12/2013"}, {"body": "created issue get additional documentation website also requested package updated point proper repo wesleycho closing issue favor others mentioned thank bringing take care properly", "d": "12/2013"}, {"body": "keep open implementation query params going change currently canary", "d": "12/2013"}, {"body": "machty design doc upcoming changes btw also problem reroute occur new qp see model hook invoked reason template rendered new model result report bug better wait new changes committed first thanks", "d": "12/2013"}, {"body": "asaf take look post discussion forums believe sample gist info", "d": "12/2013"}, {"body": "asaf template different data technically nt rerender update bindings refer anything marked would nt rerender anything like maybe talking something else", "d": "12/2013"}, {"body": "machty forget last comment works expected close issue verifying works expected new upcoming qp changes thanks", "d": "12/2013"}, {"body": "showhide links page demonstrate working", "d": "12/2013"}, {"body": "machty sure changed works thanks paying attention", "d": "12/2013"}, {"body": "oh sorry new code router refactor merged shortly", "d": "12/2013"}, {"body": "clear proposing please reopen generalized suggestion observers always going fire upon changes whether value blank", "d": "12/2013"}, {"body": "double check might simple maybe better pull latest take quick peek", "d": "12/2013"}, {"body": "documented behaviour maybe design excerpt guides note define resource using thisresource supply function implicit resourceindex route created", "d": "12/2013"}, {"body": "machty mr router would mind clarifying bit", "d": "12/2013"}, {"body": "ugisozols kind looks like document fix later commit", "d": "12/2013"}, {"body": "intended including bit loading states generated fn nt provided", "d": "12/2013"}, {"body": "would mind elaborating nt seem intuitive edge nested resources wo nt loading routes honestly index route less important confusing point new embere\u00f1os", "d": "12/2013"}, {"body": "fwiw seems fail underlying content different lengths", "d": "12/2013"}, {"body": "change transition work expect iirc pass primitives string number transition instead full model figures id uses build params call pass anything complex case object treats passed model nt call model hook api docs could probably example passing ids instead full models hope makes sense", "d": "12/2013"}, {"body": "makes sense initial gut question comment pass multiple parameters looks like pass separate arguments works well", "d": "12/2013"}, {"body": "thoughts define explicit lifecycle controllers really instantiated time even fully specified instantiation time like suggesting still possible controller another route hierarchy controller causing instantiated nt think really nail specifics instantiation time apps nt built depend exact time either", "d": "12/2013"}, {"body": "machty makes sense ended taking advice restructuring code depend controller case", "d": "12/2013"}, {"body": "corrected devastating omission word correctly reads thoughts define explicit thanks response though closing", "d": "12/2013"}, {"body": "machty ensure possible router spawned controller instantiated hooks fulfillment value", "d": "12/2013"}, {"body": "stefanpenner nt think use cases want needs controller check model loaded would nt able materialized time model loaded", "d": "12/2013"}, {"body": "machty please reread wrote crafted comment way leave scenario untouched possible create controllers models rather creating immediately setting model causes unneeded change events fire", "d": "12/2013"}, {"body": "stefanpenner ahh gotcha agree", "d": "12/2013"}, {"body": "believe prevent observer fired property course nt clear docs", "d": "12/2013"}, {"body": "kselden think better equipped say bug documentation issue", "d": "12/2013"}, {"body": "setproperties uniques property change events syntax highlighted adds observers want", "d": "12/2013"}, {"body": "kselden neat trick thanks clarifying makes sense thinking one observer two separate properties instead two different observers btw realized documentation different sent pr", "d": "12/2013"}, {"body": "miguelmadero sorry understand confusing try clear docs", "d": "12/2013"}, {"body": "lancezh looks like stackoverflow question would mind asking", "d": "12/2013"}, {"body": "appears emberdata related would suggest looking", "d": "12/2013"}, {"body": "think good idea addition enable function prototype extension like save typing something like", "d": "12/2013"}, {"body": "think prefer one without prototype", "d": "12/2013"}, {"body": "", "d": "12/2013"}, {"body": "ilovett idea inspired issue refactoring today love hear thoughts otherwise someone time pr feature flagged", "d": "12/2013"}, {"body": "ilovett assume would resolve open issues", "d": "12/2013"}, {"body": "tomdale would love feedback implement", "d": "12/2013"}, {"body": "wagenet yep sure wood", "d": "12/2013"}, {"body": "like drilled brain much usage however would suggest naming since understand correctly would mostly used async callbacks third parties essentially taking care run loop issues context binding developer decides make callback return thenables could allow nice chaining syntax sugar syncs runloop maintains context removes wrapping anon func closure boilerplate mmm mmm delicious", "d": "12/2013"}, {"body": "stuff another idea js popout emrsvpmethod function thisget foo false throw new error something went wrong return thefilfullmentvalue third idea js var bro value increment function amount thisvalue amount rsvpresolve bind bro broincrement", "d": "12/2013"}, {"body": "stefanpenner last one would cool", "d": "12/2013"}, {"body": "closing favor pr", "d": "12/2013"}, {"body": "tchak ya want drive idea oo promise usage examples specifically utilizing promises state machine async interactions otherwise feel like jumping interim solution", "d": "12/2013"}, {"body": "nt totally follow jsbin see one still demonstrating behavior", "d": "12/2013"}, {"body": "somehow related", "d": "12/2013"}, {"body": "would good architecture clear interface isolates jquery usage", "d": "12/2013"}, {"body": "seems nt difficult inside ember sure option would big plus project could convince people jump", "d": "12/2013"}, {"body": "thinking maybe zepto could work since dom part similar jquery also default option looks like jqlite", "d": "12/2013"}, {"body": "seems would remove another external dependency leaving handlebars external dep swapping jquery zepto seems like lateral move", "d": "12/2013"}, {"body": "even better dependency case ember still needs something like jquery decides make jquery optional swappable compatible api zepto others could", "d": "12/2013"}, {"body": "already planned roadmap eliminate jquery dependency move htmlbars interaction emberjs dom gets smaller probably treat jquery optional dependency use available via globals amd module", "d": "12/2013"}, {"body": "think right good approach sure need wait htmlbars", "d": "12/2013"}, {"body": "right require jquery significant inconsistencies browser html handling htmlbars html parsing within ember means wo nt issue anymore likely remove jquery want something lightweight recommend jquery", "d": "12/2013"}, {"body": "would good though even clear boundary currently jquery kinda api rely", "d": "12/2013"}, {"body": "stefanpenner would like take stab could document modules used limited test suite could make sure regress reduce requirements even", "d": "12/2013"}, {"body": "sounds good good place", "d": "12/2013"}, {"body": "cc teddyzeenny", "d": "12/2013"}, {"body": "schartier seems like code line executed time missing using polyfills", "d": "12/2013"}, {"body": "planning rewrite bunch code resolve issues", "d": "12/2013"}, {"body": "wagenet lt", "d": "12/2013"}, {"body": "thenable returned wrap base new async frames runloops downstream thenables using rsvp correctly runloop wrapped addition adding helper another path would expand rsvp promise api change binding exist today unsure", "d": "12/2013"}, {"body": "please note though would work returned promises promises fulfill actions complete", "d": "12/2013"}, {"body": "thanks functions return get resolved end animation complete callback obviously based input would need resolve within probably going wrong way look using rsvp style rather jquery deferred let know findings guess suggestion along lines thenable actual invoking run delayed wrapped function allowing less boilerplate like invoke helper comes chaining promises let check rsvp sure already taken care use correctly", "d": "12/2013"}, {"body": "ilovett would suggest using promises enforce async step ember friendly must wrap handlers runloops instead use rsvp sync step comes runloop need wrap source async step animation callback ajax request callback runloop additionally error handling composing semantics easily reasoned", "d": "12/2013"}, {"body": "thanks stefanpenner", "d": "12/2013"}, {"body": "ilovett wrap single source true async runloop wont need intermediate loops problem go away also detecting thenables becoming async would breaking change counter purpose like idea returning promise opposed exploring theme", "d": "12/2013"}, {"body": "looked looks like could easily take optional argument binding context nice forced provide first argument resolver function know talk back redoing whole promise still progress implemented already using", "d": "12/2013"}, {"body": "third argument promiselabel language gt polifilled feature solves another idea js popout emrsvpmethod function thisget foo false throw new error something went wrong return thefilfullmentvalue third idea js var bro value increment function thisvalue rsvpresolve bind bro broincrement", "d": "12/2013"}, {"body": "believe addressed", "d": "12/2013"}, {"body": "ilovett think issues synchronous always runloop finished line making promisereturning seems unnecessary indeed schedule runloop future returning promise little odd schedule function ala complicated fact promise resolution ember apps via rsvp happens inside runloop ember promises need runloop resolve chaining outside runloop wo nt work fairly confident another way handle usecase ilovett happy help drop jsbin somewhere", "d": "12/2013"}, {"body": "ilovett also note indeed return whatever function returns consider following example var somevalue emberrun function return coolio alert somevalue coolio returned", "d": "12/2013"}, {"body": "thanks mixonic rjackson would definitely scheduled runs syncronous think need look proper usage rsvp using popin function currently looks like popin function var new deferred based input stefanpenner would need swap ember style promising", "d": "12/2013"}, {"body": "returning promise seems like goodinteresting idea", "d": "12/2013"}, {"body": "one seems closed microproposals formed", "d": "12/2013"}, {"body": "could provide jsbin jsfiddle would help us quickly diagnose", "d": "12/2013"}, {"body": "occasionally occur picture slow loading time please hurry intend use em shortly test deleted ember suitable technique suitable use", "d": "12/2013"}, {"body": "concerned keeping example likely good idea use similar place example investigate time permits", "d": "12/2013"}, {"body": "intelligentcode honestly sure looking either definitely use jsbin jsfiddle please annotate code make clear steps take expected happen", "d": "12/2013"}, {"body": "intelligentcode please reopen issue provide us example", "d": "12/2013"}, {"body": "stackoverflow likely better venue ask help im closing issue please reopen stackoverflow tag question feel free crosslink", "d": "12/2013"}, {"body": "please erious bad real situation", "d": "12/2013"}, {"body": "think error correct docs says remove object specified index using replace primitive method pass either single index start length pass start length beyond length method throw outofrangeexception sample use array empty beyond length", "d": "12/2013"}, {"body": "nt see removing elements ca nt explicit op", "d": "12/2013"}, {"body": "nt see removing elements ca nt explicit op either faced bug tried remove items array leaving original array object used failed ampty array", "d": "12/2013"}, {"body": "btw use clear empty array existing array without recreate", "d": "12/2013"}, {"body": "closing favor pr", "d": "12/2013"}, {"body": "personally say delete altogether certainly nt current nt need something else maintain publishing builds every commit channel likely makes unneeded want current build", "d": "12/2013"}, {"body": "think deleting makes sense fact nonfunctional since september nobody noticed indicates people nt using feature", "d": "12/2013"}, {"body": "kill fire", "d": "12/2013"}, {"body": "believe embers around sunday december stefan penner wrote kill fire reply email directly view github", "d": "12/2013"}, {"body": "bfbriggs first thing notice cps nt dependent keys nt seem source problem definitely defining", "d": "12/2013"}, {"body": "way one shows make work currently", "d": "12/2013"}, {"body": "wagenet going part discussion", "d": "12/2013"}, {"body": "briefly discussed core team believe consensus fix someone want submit pr", "d": "12/2013"}, {"body": "think nt possible use outlet one template use example based fiddle get behavior using outlet outside like lt gt peeps lt gt lt href thumbs gt thumbnail view lt gt lt href gt edit view lt gt iseditorvisible peep controller lt p gt linkto peep peep peepdescription linkto lt p gt outlet give look", "d": "12/2013"}, {"body": "see two outlet scope could problem given two effectively different scopes nt see template compiler nt smart enough deal possible nest es compiler notion context stack way know move outlet outside jsfiddle example ca nt real code real code surrounding blocks different imagine nt practical way move outlet outside case", "d": "12/2013"}, {"body": "looks like duplicate", "d": "12/2013"}, {"body": "would nt surprised underlying cause manifested behavior actually opposite instead view disappearing nt case appearing nt possible different issue", "d": "12/2013"}, {"body": "closing favor pr", "d": "12/2013"}, {"body": "also confirm mastercanary", "d": "12/2013"}, {"body": "stefanpenner included canary build seems produce behavior", "d": "12/2013"}, {"body": "seems like test case work properly try dig bit see going wrong", "d": "12/2013"}, {"body": "ok tracked going call text changes fine tears observer basically currently handle single name change created failing test really change name twice existing test hopefully able submit pr resolving soonish", "d": "12/2013"}, {"body": "submitted pr resolving", "d": "12/2013"}, {"body": "closing favor pr", "d": "12/2013"}, {"body": "want open new window use standard tag pointing url want ember app would boot app proper location fresh history stack romanior perhaps understanding goal could elaborate preferably jsbinjsfiddle example", "d": "12/2013"}, {"body": "rjackson point good reliable linkto helper awesomely figures right href based parameters messing href active states etc manually already features", "d": "12/2013"}, {"body": "seems fine experiment featureflagged feature", "d": "12/2013"}, {"body": "seems good want submit pr romanior", "d": "12/2013"}, {"body": "known issue ember data tracker fixed future sorry", "d": "12/2013"}, {"body": "tracked cause bug binding inside template specifically rewrites binding path used templates grouped case context select view rather item view collectionview would normally created solution come right detect inside grouped conditionally use handlebars context rather parent view", "d": "12/2013"}, {"body": "maybe settle final naming conventions better discussion discourse recommend reopening try keep issue tracker specific issues", "d": "12/2013"}, {"body": "button default type hence pressing return button action invoked updated fiddle", "d": "12/2013"}, {"body": "ooh interesting explains thanks", "d": "12/2013"}, {"body": "clever workaround submit pr make sure tests still pass", "d": "12/2013"}, {"body": "able solve like applicationviewjscoffee applicationhbs applicationcontrollerjscoffee appapplicationcontroller emcontrollerextend isloading false actions loading return get isloading isloading property prevent rendering multiple times several routes nested require loading state otherwise get multiple views also empty controller necessary breaks ember inspector plugin looks controller view view nt contain controller causes exception", "d": "12/2013"}, {"body": "example u showed actually uses route controller one really render anything append anything via controller", "d": "12/2013"}, {"body": "actually opened issue website guides reside", "d": "12/2013"}, {"body": "stefanpenner done also found loading action called defined application route nt investigated", "d": "12/2013"}, {"body": "documented following guide", "d": "12/2013"}, {"body": "rjackson thanks want attach event existing element like link", "d": "12/2013"}, {"body": "sort question appropriate stackoverflow still questions please start new question", "d": "12/2013"}, {"body": "think support idea", "d": "12/2013"}, {"body": "machty need discuss", "d": "12/2013"}, {"body": "bites every time want give route semantic name", "d": "12/2013"}, {"body": "totally using route index route great idea idea property better think holding thing see want something describe index maybe segment random first last item list loaded resource something else descriptive urls case property would clearer give ability", "d": "12/2013"}, {"body": "qps getting rewrite make sure incorporate test make sure properly handled", "d": "12/2013"}, {"body": "thanks committing getting test plan keep api ie would still valid rewrite qps sent route hood", "d": "12/2013"}, {"body": "api pretty different trying post gist latest ideas going bed tonight", "d": "12/2013"}, {"body": "latest", "d": "12/2013"}, {"body": "pr new api approach slightly different pretty sure taken care", "d": "12/2013"}, {"body": "perhaps missing obvious point nt think would work plain html jsbin", "d": "12/2013"}, {"body": "think want html click toggle nav updated jsbin works like want", "d": "12/2013"}, {"body": "thanks comments bring excellent points rjackson completely right pre ember world would stopped event propagation one line jquery feels like unember thing guess mind helper something would make external links behave right box truenorth right works example gave actual app ran using background image nav element span element attach action attach top level ended working around adding action redirects using seems work great going close since working follow thoughts would love hear think would like see ember like way handle nested plain old link inside another element bound action might edge case seem surprising ember generated link plain link nt behave way", "d": "12/2013"}, {"body": "assume got something like use instance array components evaluated class defined instantiated fix instantiating array component initialized get new array instance component instance things behave expect hth", "d": "12/2013"}, {"body": "thanks lot intended behavior come nt work way strings example", "d": "12/2013"}, {"body": "geokoumpa due javascript prototypal inheritance thorough blog post wycats useful learn aspect javascript", "d": "12/2013"}, {"body": "bschaeffer interest sending pr", "d": "12/2013"}, {"body": "sure", "d": "12/2013"}, {"body": "closing favor", "d": "12/2013"}, {"body": "jlsuttles markup exactly without metamorph markers metamorph markers sure affects rendering worth investigating angle", "d": "12/2013"}, {"body": "seems something way content redrawn fixtures loaded change template use variables attached directly app object problem nt occur least example specifically think problem anchor tags nt ever width component viewed chrome devtools computed section changing css appears fix though entirely sure", "d": "12/2013"}, {"body": "hm looks like webkit bug safari chrome problems initial render firefox nt could nt find open tickets related issue getting rid element using css bold text nt really help", "d": "12/2013"}, {"body": "jlsuttles ember data bug likely related browser rendering", "d": "12/2013"}, {"body": "possible could reduce jsbin minimum amount css app code would make easier others digest may help isolate problem", "d": "12/2013"}, {"body": "think recreated issue completely separated ember using jquery insert text value anchor tags page loaded two css declarations removing either stops bug happening also happens another tag nested underneath link text inserted directly link tag works fine", "d": "12/2013"}, {"body": "duncanparkinson thanks much super helpful css forte person wrote css threw hands air able work around issue knowledge", "d": "12/2013"}, {"body": "bartjacobs replied gon na post well brain dump", "d": "12/2013"}, {"body": "first thoughts notinfact something want clearly must provide examples convince otherwise something actually detect granularity changes property", "d": "12/2013"}, {"body": "answer suggested make use run loop ensure view rendered ps think necessary add event emberview since lists often slow render wo nt work", "d": "12/2013"}, {"body": "ponderance encapsulate changes inside notified would apply view update complete since apply next cycle", "d": "12/2013"}, {"body": "stefanpenner writes bartjacobs asks generically possible individual properties template observed updated without view informed child views rerendered without parent views informed notifying way view hierarchy every updated case view hook likely negative performance connotations said understand legitimate developer ergonomics issues solution understand run loop well take advantage queue however tough topic grok right away beginning ember developers", "d": "12/2013"}, {"body": "gone comments issue seen solution stack overflow understand easy implement probably necessary indeed negatively impact rendering performance solution presented stack overflow works great lukemelia mentions thorough understanding run loop key solve problem thank help issue learning rendering queue ember run loop close issue agree stefanpenner something ember needs", "d": "12/2013"}, {"body": "bartjacobs need better way conveying ideas concept often foreign", "d": "12/2013"}, {"body": "agree currently someone proper understanding ember run loop queue architecture far know possible tackle type issues discussed stack overflow question suggestions", "d": "12/2013"}, {"body": "maybe would help show commented example scheduling afterrender queue didinsertelement api docs sent mailbox iphone tue dec bart jacobs notifications githubcom wrote agree currently someone proper understanding ember run loop queue architecture far know possible tackle type issues discussed stack overflow question suggestions reply email directly view github", "d": "12/2013"}, {"body": "lukemelia would help scenarios instance backbones gets triggered anything downstream changes", "d": "12/2013"}, {"body": "ya totally needs helpful error cc machty", "d": "12/2013"}, {"body": "even simpler version using embelmjs work expected", "d": "12/2013"}, {"body": "would mind putting jsbin together", "d": "12/2013"}, {"body": "nt think bindings support path traversal although handlebars feature unsure support bound properties", "d": "12/2013"}, {"body": "twokul yes could later stefanpenner simple solution problem make select update parent variable changes", "d": "12/2013"}, {"body": "btw use docs state using syntax change scope alternative form change scope inner template useful cases need access property outer scope within loop", "d": "12/2013"}, {"body": "itemcontroller controller pair could provide aliases itemcontroller would continue keep templates nice simple keeping responsibility controlling data flow controller", "d": "12/2013"}, {"body": "update ghetto fix discussing someone knowledgeable mentioned way prevent ember creating views etc property element goes like appgroupviewmixin emmixincreate init function thissuperapply arguments thisset templatedatainsidegroup true appgroupwrapperview emviewextend appgroupviewmixin html follows view appgroupwrapperview previewer group previewers batches view note view must outside table around ember starts really odd stuff like add rows table outside view also view specified like ember seem like block handlers look like element elements use elements fix changes rendering time chrome gt", "d": "12/2013"}, {"body": "second aproach using internal flags grouphelper recommend use grouphelper instead flags include code use give look jsbin updated code", "d": "12/2013"}, {"body": "oh nt ember give error use block helper nt registered tried group wo registering helper saw performance changes marcio helper commented thanks marcio huge help", "d": "12/2013"}, {"body": "andrewkl open block helper error message new issue", "d": "12/2013"}, {"body": "created case thanks help andrew", "d": "12/2013"}, {"body": "continuing performance tuning ie found another possible performance bug seems like used group indexof function line begins take inordinate amount time seen seems happening target method flags add end event array later point indexof called indexof starts beginning array nt find till end chrome modern ies fast enough nt mater fortunately simple fix start searching end array search reverse event system uses series nested hashes store listeners object listener registered event arrives hashes consulted determine target action pair invoke hashes stored object meta hash look like function indexof array target method var index var arraylength gt target array amp amp method array index break return index wo optimization w optimization ideal fix might replace array tree like datastructure index nt need called everytime lookup needed", "d": "12/2013"}, {"body": "skiplist", "d": "12/2013"}, {"body": "went created new issue previous issue", "d": "12/2013"}, {"body": "related discussion issue", "d": "12/2013"}, {"body": "going close issue favor feel free reopen specific suggestion", "d": "12/2013"}, {"body": "resolved", "d": "12/2013"}, {"body": "", "d": "12/2013"}, {"body": "run first use npm package strip feature flagged code blocks final builds", "d": "12/2013"}, {"body": "packagejson stupid", "d": "12/2013"}, {"body": "nope stupid change global packages local ones happened branched need", "d": "12/2013"}, {"body": "good thanks", "d": "12/2013"}, {"body": "alexspeller may useful enhancement", "d": "12/2013"}, {"body": "see discussion case query params completely rewritten moment new implementation unlikely behave current one", "d": "12/2013"}, {"body": "ok gotya thanks pretty excited feature dec pm alex speller notifications githubcom wrote see discussion case query params completely rewritten moment new implementation unlikely behave current one reply email directly view github", "d": "12/2013"}, {"body": "think solution different query params resource yes", "d": "12/2013"}, {"body": "feels like hack say want make paging bar component simply uses linkto set page param would pretty sweet change different param resource would kinda headache dec pm alex matchneer notifications githubcom wrote think solution different query params resource yes reply email directly view github", "d": "12/2013"}, {"body": "query params global want refer different things give different names hack urls work serverside frameworks notice less one handler generally responds url however spas multiple handlers active time making paging bar component headache pass param name although params rewritten moment unlikely change fact due global nature query params name collisions must avoided", "d": "12/2013"}, {"body": "think global url scheme seen probably keep scoped resource route yea dec pm alex speller notifications githubcom wrote query params global want refer different things give different names hack urls work serverside frameworks notice less one handler generally responds url however spas multiple handlers active time making paging bar component headache pass param name pager paramname postspage although params rewritten moment unlikely change fact due global nature query params name collisions must avoided reply email directly view github", "d": "12/2013"}, {"body": "always global unless syntax changes eg using matrix uris way avoid url scheme seen perhaps thinking server side frameworks work differently ember router", "d": "12/2013"}, {"body": "davydotcom want", "d": "12/2013"}, {"body": "yea thinking server side frameworks router url scheme looks similar server syntax params could confusion point newcomers query params global yea linkto pagenewvalue would pretty sweet thats gon na happen via custom component page whatever sure could make pageparam adjustable feels odd saying dec pm alex speller notifications githubcom wrote always global unless syntax changes eg using matrix uris way avoid url scheme seen perhaps thinking server side frameworks work differently ember router reply email directly view github", "d": "12/2013"}, {"body": "currently running problem several pages use query parameters sortingfilteringpagination using parameter simply makes perfect sense would sorting param differently named independent route describes operation agree two sorts active time also way without issue different names think problem avoidable query params addon used persist link parameters shared routes link tree instance link would merge query parameters whereas ones would discarded way could share name query parameter without issue note explicitly specify query parameter would still included course merged nt implementation probably slightly complicated certain desired behavior", "d": "12/2013"}, {"body": "new api takes different approach still issue please create new issue see", "d": "12/2013"}, {"body": "great thanks letting know take look sent iphone dec alex matchneer notifications githubcom wrote new api takes different approach still issue please create new issue see reply email directly view github", "d": "12/2013"}, {"body": "fixed included see updated jsbin", "d": "12/2013"}, {"body": "thanks update", "d": "12/2013"}, {"body": "appears simply using native function available see think always use modified version polyfill uses instead", "d": "12/2013"}, {"body": "stefanpenner current thinking", "d": "12/2013"}, {"body": "believe duplicate markprzepiora confirm issue", "d": "12/2013"}, {"body": "rjackson yes right sorry", "d": "12/2013"}, {"body": "markprzepiora worries", "d": "12/2013"}, {"body": "believe resolve", "d": "12/2013"}, {"body": "machty ping", "d": "12/2013"}, {"body": "kselden mentioned issue something like talking", "d": "12/2013"}, {"body": "hi ryrych using issues pretty much softdeprecated favour using computed aliases try instead", "d": "12/2013"}, {"body": "hi bradleypriest using bindings using suffix many places app noticed warning got tried use configuring view handlebars emblem think change bindings using alias bit longer", "d": "12/2013"}, {"body": "always top file use thereafter", "d": "12/2013"}, {"body": "closing bradleypriest suggestion nt work let know", "d": "12/2013"}, {"body": "thanks wagenet yesterday works good day", "d": "12/2013"}, {"body": "seems reasonable", "d": "12/2013"}, {"body": "sandstrom want close issue file pr", "d": "12/2013"}, {"body": "sandstrom plan tackling", "d": "12/2013"}, {"body": "wagenet rjackson filed pr sorry delay busy week", "d": "12/2013"}, {"body": "believe design choice kselden confirm teroparvinen also provide exact scenario need functionality", "d": "12/2013"}, {"body": "design choice docs least updated indicate observable properties bound rather special values best used also assertion warning trying observe might order would much rather see put proper use properties think would vastly useful scenario time need view level proxy objects svg shapes insert view bound model level object indicating details shape well knowing remove view model level object destroyed uses would include tracking relationships customized model layer controller level dependencies etc etc", "d": "12/2013"}, {"body": "teroparvinen provide jsbin something exact reduced usecase would helpful discussion", "d": "12/2013"}, {"body": "stefanpenner included two jsbins original comment first one reduced example", "d": "12/2013"}, {"body": "examples nt explain actual usecase highlevel problem trying solve low level implementation problem", "d": "12/2013"}, {"body": "issue low level irregularity performs something else docs say ultimately think convenient way monitor object destruction stands building first think feature useful whenever need software design pattern adapter facade proxy observer even iterator basic data structures linked lists trees also whole lot easier handle get convenient notification link breaking either direction one ember strengths ability use object model whole lot basic routing mechanism elaborate specific case model system implemented using ember data multiple shapes drawing canvas shapes stored model level coordinates identifiers user activates view canvas element created used drawing surface using snapsvg shapes ca nt drawn using basic ember view templates svg objects encapsulated snap ca nt simply rerendered view layer creates proxy objects tie model level shapes controller level action destroys model level shape view level proxy needs release svg resources remove would straightforward proxy could simply track existence model monitoring property", "d": "12/2013"}, {"body": "teroparvinen willdestroy method intended teardown data something like based problem maybe could help", "d": "12/2013"}, {"body": "marcioj point tear data based destruction another object appshapeproxy emberobjectextend contain reference model level shape object shapemodel null destroying proxy result example anything might happen useful aware destruction object used", "d": "12/2013"}, {"body": "teroparvinen suggest mix method send notification things watch get point actually begun destruction process observers nt really useable anyway", "d": "12/2013"}, {"body": "wagenet feel suggestion correct think actual issue would like suggest close", "d": "12/2013"}, {"body": "wagenet assume reasoning behind event property observers might day become asynchronous current workaround illustrated jsbin property requires one mixin allows trivial observation property evented solution far tell jsbin event requires lot boilerplate limited everything tied property observer issue tagged documentation assume meant indicate documentation corrected still wish argue convenient way observing destructions would nice could would probably enough", "d": "12/2013"}, {"body": "seems entirely reasonable assure goal merely bandwidth problem", "d": "12/2013"}, {"body": "bolshchikov let us know like work conversion", "d": "12/2013"}, {"body": "pr submitted convert extend", "d": "12/2013"}, {"body": "closing favor changes subclasses", "d": "12/2013"}, {"body": "turns ember data issue see emberjsdata", "d": "12/2013"}, {"body": "method example also look transitionmd document future questions better asked stackoverflow tagged emberjs", "d": "12/2013"}, {"body": "thank", "d": "12/2013"}, {"body": "stefanpenner fixed", "d": "12/2013"}, {"body": "ebryn definitely improvement imo stefanpenner could elaborate mind", "d": "12/2013"}, {"body": "breaking insanely scary purely dry method", "d": "12/2013"}, {"body": "follow wrap code trycatch template appears rendered returns result however course controller properly initialized", "d": "12/2013"}, {"body": "suspicion scenarios errorsassertions thrown async would escape normal test failures im working try resolve improve situations could use help instance reproduce failure small acceptance test submit pr add would awesome", "d": "12/2013"}, {"body": "sure happy contribute", "d": "12/2013"}, {"body": "uses tests created includes fix closing issue favor discussion pr", "d": "12/2013"}, {"body": "seems good aaronshaf submit pr", "d": "12/2013"}, {"body": "kselden yup thanks pointing key takeaway anyone reading thread future nt try modify proxy content time call event", "d": "12/2013"}, {"body": "closing favor pr", "d": "12/2013"}, {"body": "machty", "d": "12/2013"}, {"body": "hmm sure fan seems like would quite noisy types legitimately change time", "d": "12/2013"}, {"body": "closing since way", "d": "12/2013"}, {"body": "trek control even around still removed", "d": "12/2013"}, {"body": "stefanpenner master believe", "d": "12/2013"}, {"body": "yeah slated removal probably waited long", "d": "12/2013"}, {"body": "trek hmm surprising good gone", "d": "12/2013"}, {"body": "seems like straightforward addition right would use set model want submit pr selvag", "d": "12/2013"}, {"body": "looking forward change addressed routerjs refactoring machty", "d": "12/2013"}, {"body": "refactor place lot stuff going way easier reason addingit shortly", "d": "12/2013"}, {"body": "think another good scenario feature flags release could allow opting deprecation without breaking backwards compatibility see examples wagenet stefanpenner thoughts would willing run update feature flag stable idea acceptable", "d": "12/2013"}, {"body": "update spent minutes looking found jquery custom build system made easy create builds nt work complex expected figure modules necessary", "d": "12/2013"}, {"body": "run main modules build jquery without one time run test suite document failureserrors module start picking lowest hanging items one time lukemelia sound like decent plan yes devote time first pass week", "d": "12/2013"}, {"body": "seems reasonable robert sent mailbox iphone sun dec pm robert jackson notifications githubcom wrote run main modules build jquery without one time run test suite document failureserrors module start picking lowest hanging items one time lukemelia sound like decent plan yes devote time first pass week reply email directly view github", "d": "12/2013"}, {"body": "luck modern browsers using custom jquery build flags htmlbars require even less", "d": "12/2013"}, {"body": "fyi described exact problem another issue", "d": "12/2013"}, {"body": "nt think bug believe keeping reference scheduled debounce cancel inside", "d": "12/2013"}, {"body": "closing favor", "d": "12/2013"}, {"body": "machty fastresolving example index template shows correctly nested template broken example index template nt even getting shown loading template blank slow promise causing behavior example get nested template show explicitly telling render index template unfortunately wo nt help initial broken example index template never even renders screen nested template nothing connect", "d": "12/2013"}, {"body": "closing favor pr", "d": "12/2013"}, {"body": "actually run issue think bug unless missing something jsbin help would appreciated jsbin two versions functions see differences testing one cc twokul hjdivad", "d": "12/2013"}, {"body": "alexdiliberto changing nonintuitive naming something simpler grocery list nt see bug", "d": "12/2013"}, {"body": "endash woahstrange looked code difference casing properties changed mine camelcase like seems working fine fails works cc twokul hjdivad", "d": "12/2013"}, {"body": "alexdiliberto ah starting property path capital letter template treated global relative context fwiw could also template", "d": "12/2013"}, {"body": "endash thank thumbsup", "d": "12/2013"}, {"body": "capitalized considered global strikes believe actual issue although capitalized global stuff thought thoroughly", "d": "12/2013"}, {"body": "seems like expose option disable prevent default probably add well", "d": "12/2013"}, {"body": "yeah would address issue nicely providing helpers call default would make predictable interface easy explain docs", "d": "12/2013"}, {"body": "working pr", "d": "12/2013"}, {"body": "implements machty suggestion", "d": "12/2013"}, {"body": "stefanpenner renamed changed mixin semantics setter intended bridge old code nt easily moved", "d": "12/2013"}, {"body": "want use observe promise instead using setter", "d": "12/2013"}, {"body": "may want update uses injection model example", "d": "12/2013"}, {"body": "arkadiyk mind giving update try would ver appreciative", "d": "12/2013"}, {"body": "stefanpenner", "d": "12/2013"}, {"body": "case error generated uppercase global variable used condition inside template renaming variable lowercase fixed", "d": "12/2013"}, {"body": "seeing opened new issue test case", "d": "12/2013"}, {"body": "hoping land time give backburner additional love point address someone beats wont sad leave open reminder quite annoying quirk queue play order note nt ember bug rather exposing quirks browser tasklist implementations", "d": "12/2013"}, {"body": "upcoming query param api supports example see", "d": "12/2013"}, {"body": "good news wo nt problem query params rewrite finishing since hash properties scoped inside subexpression syntax coming soon handlebars example", "d": "12/2013"}, {"body": "would need scenario programmatically create views controllers want delegate property look ups parent controller", "d": "12/2013"}, {"body": "would useful well using easyform assumes controller objectproxy", "d": "12/2013"}, {"body": "default rsvp error handler implemented modifiedupdated since details implement backburners stitched stacktraces issue safe close remaining issues", "d": "12/2013"}, {"body": "issue resolved things document linked rjackson says implement emberonerror hook log errors production misleading going offer api like actually report unhandled exceptions including ones thrown inside backburner rsvp least need change documentation explain catch wo nt completely opaque users nt understand ember internals", "d": "12/2013"}, {"body": "docs updated reflect components controller parent view see", "d": "12/2013"}, {"body": "agree makes sense remove query params portion agree remaining url portion also normalized issue routerecognizer incorrectly normalizes globstar route contains trailing part actual segment contents static route dynamic route normalizing nt actually change contents route modifies presence separator also normalizing already normalized route noop static nonnormalized normalized contents still staticroute normalized normalized contents still staticroute dynamic nonnormalized normalized content normalized normalized content globstar nonnormalized normalized normalized normalized path end using globstar route assume whatever contents placed segment available unmodified hook case globstar segment followed static dynamic segments final segment globstar route followed static dynamic segments test match url url parsed globstar route last segments test match url url parsed", "d": "12/2013"}, {"body": "update ember ships sane handle prevents normally swallowed exceptions going totally unnoticed", "d": "12/2013"}, {"body": "megafixed via", "d": "12/2013"}, {"body": "issue qunit tests reproducible app error happens whenever running ca nt find root cause unfortunately eltehupkes solution nt work ember ember data update narrowed inside controller deals user keyboard input basically test waiting scheduled item run", "d": "12/2013"}, {"body": "mjallday tried setting capture stack trace items enqueued run loop navigate call stack see", "d": "12/2013"}, {"body": "said would neat could integrate ember inspector cc teddyzeenny", "d": "12/2013"}, {"body": "seems like longer issue comment misguided reference another notsorelated issue reopen seems like things still broken", "d": "12/2013"}, {"body": "update like abobwhite wenbing would like rerender application user changes display language calling appreset seems bit drastic need rerender current view", "d": "12/2013"}, {"body": "case anyone still interested solving cleaner approach gt apppromiseobjectproxy emberobjectproxyextend emberpromiseproxymixin getuser function return appuserfind user function return apppromiseobjectproxycreate promise thisgetuser property promise gets fulfilled result made available content promiseproxymixin use objectproxy makes sure forward properties defined proxy proxied content object", "d": "12/2013"}, {"body": "bindings generally softdeprecated favor using nt think likely fix", "d": "12/2013"}, {"body": "looks like changed yet current relevant docs basically child model render child model controller expect find hope helps future readers", "d": "12/2013"}, {"body": "first thought could check issue issue nt distinguish gets called basically watching observer cp call many times unwatches cp well sure solve without additional bookkeeping", "d": "12/2013"}, {"body": "since reference counting need calls balanced ok making error metawatching", "d": "12/2013"}, {"body": "kselden problem higher level example case never goes suspect would tore viewmodels nt", "d": "12/2013"}, {"body": "nt consider bug adding error message seems good like wagenet said going keep people making mistake", "d": "12/2013"}, {"body": "agree seems bad eagerly consume ghempton provide example actually producing undesired effect need add array observers content property upon initialization got kind recordarray set nt trigger data loading far imagine", "d": "12/2013"}, {"body": "kselden knows fix needs find time", "d": "12/2013"}, {"body": "", "d": "12/2013"}, {"body": "", "d": "12/2013"}, {"body": "hate bump old thread anymore news", "d": "12/2013"}, {"body": "nathggns wycats comment still thoughts additional thoughts theory inferring syntax work syntactically obvious emberscript function offers idea could extended dependencies aligned internal branching property", "d": "12/2013"}, {"body": "possible defer dependencies without using syntax use use function similar knockout also nt need call creation time decide dependencies value irrelevant needed point called anyway", "d": "12/2013"}, {"body": "nathggns true extra complexity tracking get cp invocation supporting arbitrary branching within cp vs annotating cp dk nt created motivating situation fact motivated bandwidth would invite investigate", "d": "12/2013"}, {"body": "currently looking adding computed properties altogether angular automatic dependency tracking let know goes december stefan penner notifications githubcom wrote nathggns true extra complexity tracking get cp invocation supporting arbitrary branching within cp vs annotating cp dk nt created motivating situation fact motivated bandwidth would invite investigate reply email directly view github thanks nathaniel higgins nathggns", "d": "12/2013"}, {"body": "nathggns believe implements nice improvements reduce much duplication", "d": "12/2013"}, {"body": "rather get inline honest sent iphone dec robert jackson notifications githubcom wrote nathggns believe implements nice improvements reduce much duplication reply email directly view github", "d": "12/2013"}, {"body": "got stuck one found register custom events mouseover propagates handle parent view", "d": "12/2013"}]