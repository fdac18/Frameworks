[{"title": "document error trick", "body": "version reproduction link steps reproduce expected reactive actually happening reactive", "num": "7581", "d": "1/2018"}, {"title": "", "body": "version reproduction link steps reproduce pass sync prop parent grandson child expected warning actually happening", "num": "7580", "d": "1/2018"}, {"title": "listeners updated correctly component reuse", "body": "version reproduction link steps reproduce click alert something problem click switch click alert expected expected alert click button actually happening alert click button considering edge case listeners removed component reuse perhaps bug line", "num": "7579", "d": "1/2018"}, {"title": "setting dynamic path template src property", "body": "problem feature solve sure whether good alternative problem yes exist would help users dynamically set path src template need one ts file src script tag multiple html files one template tag one time per request users set dynamic path src needed binding starts work proposed api look like example look like seen src binded would change path setting component passed parent component props way path becomes dynamic nt write script everytime different html work", "num": "7578", "d": "1/2018"}, {"title": "work vhtml truncate", "body": "hello try make vhtml messagecontent truncate work use messagecontent truncate okey html code render please help", "num": "7577", "d": "1/2018"}, {"title": "happens object change detection caveats", "body": "vma reactive vmb reactive html html value null b value b null js js var vm new vue el app data vma vmb result value b value", "num": "7576", "d": "1/2018"}, {"title": "capture event always trigger bubble event element", "body": "problem feature solve see suggest two buttons trigger capture bubble similar \u5fae\u4fe1\u5c0f\u7a0b\u5e8f \u4e8b\u4ef6\u7684\u6355\u83b7\u9636\u6bb5 example trigger click inner view proposed api look like need change api feature", "num": "7575", "d": "1/2018"}, {"title": "capture event trigger capture event element", "body": "problem feature solve users nt need care order bind capture capture events got result capture events always trigger capture one click button proposed api look like", "num": "7574", "d": "1/2018"}, {"title": "pitfalls vue dependency detection may cause redundant dependencies", "body": "version reproduction link steps reproduce click app component update expected app component updates actually happening app component updates twice props used child component detected dependencies parent component possible stop dependency detection entering child component", "num": "7573", "d": "1/2018"}, {"title": "want append html template modal previous website body tag built jquery possible way using vuejs", "body": "", "num": "7572", "d": "1/2018"}, {"title": "vfor key effectless abstract render function", "body": "version reproduction link steps reproduce toggle items notice uuid expected component instance created destroyed actually happening abstract one works like index btw works expected", "num": "7571", "d": "1/2018"}, {"title": "allow props different internal external names", "body": "problem feature solve consider element maintains internal state value browser irrespective whether driven looking vue component libraries components externalize state props meaning parent component must define value component data use wire component used without nt maintain state internally component ideally like author input components satisfy following requirements used without component maintains state used state driven entirely prop emitting events results somewhat messy code like js vuecomponent checkbox template internalvalue checked unchecked props value type boolean default false data return internalvalue false watch value immediate true handler value thisinternalvalue value methods toggle thisinternalvalue thisinternalvalue order distinguish prop data used respectively problem rarely used code used watcher remember use throughout component code template instead since mutable source truth avoid could instead name prop data would use ideal external prop called simply value proposing feature specify internal name prop exposed within component without changing external name prop templates kind like method arguments work objectivec proposed api look like js vuecomponent foo props value internalname valueprop template valueprop", "num": "7569", "d": "1/2018"}, {"title": "vmodel resets slot", "body": "version reproduction link steps reproduce type input second box expected second input component bound behave differently first bound ie behaves like tag actually happening two things second input box resets short amount time second input box seems delete end string unchanged try typing two keys quickly discovered working custom input component using slot way put content next box seems like common usecase reporting could nt find issue docsrepoforums", "num": "7568", "d": "1/2018"}, {"title": "", "body": "version reproduction link steps reproduce \u5173\u4e8e\u8ba1\u7b97\u5c5e\u6027 \u5230\u5e95\u662f\u6307 computed \u8fd8\u662f\u6307computed \u91cc\u9762\u5b9a\u4e49\u7684 \u952e\u503c\u5bf9 expected \u5173\u4e8e\u8ba1\u7b97\u5c5e\u6027 \u5230\u5e95\u662f\u6307 computed \u8fd8\u662f\u6307computed \u91cc\u9762\u5b9a\u4e49\u7684 \u952e\u503c\u5bf9 actually happening \u5173\u4e8e\u8ba1\u7b97\u5c5e\u6027 \u5230\u5e95\u662f\u6307 computed \u8fd8\u662f\u6307computed \u91cc\u9762\u5b9a\u4e49\u7684 \u952e\u503c\u5bf9 \u5173\u4e8e\u8ba1\u7b97\u5c5e\u6027 \u5230\u5e95\u662f\u6307 computed \u8fd8\u662f\u6307computed \u91cc\u9762\u5b9a\u4e49\u7684 \u952e\u503c\u5bf9", "num": "7567", "d": "1/2018"}, {"title": "keepalive nt call destroy view actived", "body": "version reproduction link steps reproduce navigate pagea make keepalive cache pagea component navigate pageb make keepalive cache pageb component remove cache pagea pagea destroyed correctly navigate back pagea remove cache pageb pageb destroyed expected pageb destroyed actually happening pageb destroyed", "num": "7566", "d": "1/2018"}, {"title": "\u65e0\u6cd5\u963b\u6b62 productiontip", "body": "version reproduction link steps reproduce \u8fd9\u91cc\u65e0\u6cd5\u963b\u6b62 vue \u8fd8\u6ca1\u662f vueconfigproductiontip false \u5982\u679c\u5728\u8fd9\u91cc\u963b\u6b62 vueconfigproductiontip false expected \u963b\u6b62 productiontip actually happening \u65e0\u6cd5\u963b\u6b62 productiontip", "num": "7565", "d": "1/2018"}, {"title": "serverrendered output id attribute different guide clientside hydration amount app browser", "body": "version reproduction link steps reproduce js cliententryjs import createapp appjs const app router store createapp windowinitialstate consolelog xixii storereplacestate windowinitialstate routeronready gt let element documentqueryselector dataserverrendered true app mount element app mount app js serverjs const express require express const path require path const server express const renderoption template require fs readfilesync dirname indextemplatehtml const renderer require vueserverrenderer createrenderer renderoption const serverbundle require distbundleserverjs serveruse expressstatic pathresolve dirname dist const createvueinstance serverbundledefault const clientbundlefileulr bundleclientjs serverget apigetbloglist function req res consolelog bloglist resjson list title \u54c8\u54c8\u54c8 title \u5475\u5475\u5475 title \u563b\u563b\u563b serverget req res gt requrl faviconico resend return consolelog requrl const templatedata title vue \u670d\u52a1\u7aef\u6e32\u67d3\u5b9e\u8df5 bundleurl clientbundlefileulr const context url requrl createvueinstance context vueinstance gt vueinstancecode consolelog find router else \u6b64\u65f6store\u91cc\u9762\u9884\u8bf7\u6c42\u7684\u6570\u636e\u5df2\u7ecf\u88ab\u5b58\u5165contextstate\u4e86 \u6253\u5165\u6a21\u677f\u6570\u636e\u91cc templatedatastate contextstate rendererrendertostring vueinstance templatedata err html gt err consolelog err resstatus end internal server error return else resstatus end html onreject gt consolelog onreject serverlisten expected html actually happening html serverrendered output id attribute", "num": "7564", "d": "1/2018"}, {"title": "use vnodes without dom representation", "body": "problem feature solve thread forum attempting use vue manner similar aframe state graphics engine managed vue components template composition really nt need actual dom nodes since actual rendering delegated underlying framework right able represent scene state custom components way actually components initialized rendering empty dom nodes seems unnecessary add overhead actual dom representation leads strange cascading empty div structure document proposed api look like component property marks virtual vnode property marks virtualonly", "num": "7563", "d": "1/2018"}, {"title": "vueconfigproductiontip false working anymore", "body": "version reproduction link steps reproduce current tools freshly installed generate new webpackbased project expected nt show annoying warning actually happening warning shown reported railstation closed automatically", "num": "7562", "d": "1/2018"}, {"title": "vshow display flickering component ios", "body": "version reproduction link steps reproduce vshow display opacity transition flicker expected show opacity css animation actually happening show opacity css animation flickering test case recurrent ios iphone plus ios iphone record video bug", "num": "7561", "d": "1/2018"}, {"title": "mousemove event executed watcher", "body": "version reproduction link steps reproduce use chrome winxp click inner component see console log expected mousemove event triggered affter watcher actually happening mousemove event triggered watcher maybe say use latest chrome version customers use winxp version last version winxp nt known vue bug chrome bug chrome user click component triggered click mousemove event works well vue version demo seen vue release log change von event handler macro task still understand log", "num": "7560", "d": "1/2018"}, {"title": "component cached passed property case iterating descending ordered array", "body": "version steps reproduce use component property display loop ordered descendant array expected actual value actually happening cached value previous object displaying new vuejs probably issue dummy one still realized fix situation collection objects sorted lodash iterating also display one object property usage vuejs component like finally add new objects array going first elements ordered array component display newly added object proper way continue display previous one actualty second duplicate page refresh fixing situation pretty sure code issue know clear hope someone could figure wrong let know example also provided thank", "num": "7559", "d": "1/2018"}, {"title": "component cached passed property case iterating descending ordered array", "body": "new vuejs probably issue dummy one still realized fix situation collection objects sorted lodash iterating also display one object property usage vuejs component like finally add new objects array going first elements ordered array component display newly added object proper way continue display previous one actualty second duplicate page refresh fixing situation pretty sure code issue know clear hope someone could figure wrong let know example also provided thank", "num": "7558", "d": "1/2018"}, {"title": "remove attribute merging functional components prop definition", "body": "problem feature solve currently using functional components without definition attributes rendered using jsx spread remain merged current usage implementation export default functional true render data props const type fill props output proposed api look like explicit attributes render dom using functional component prop definition fix lt code gt delete dataattrs lt code gt explicitly passing attributes use spread notation get remaining replacing object usage implementation export default functional true render data props const fill type attrs props dataattrs attrs output explicitly passing attributes usage implementation export default functional true render data props const fill type formtarget props output conclusion examples show behaviour attributes left child dictating attributes shoud rendered either approach explcititly name attributes pass onto element original propsattrs rendered attributes adds polution dom especially attributes arraysobjectsfunctionssymbols", "num": "7557", "d": "1/2018"}, {"title": "way update recalculate filtered values", "body": "problem feature solve hi angular filters use stateful values updated automatically modulefilter translate function rootscope function translate value return rootscopetranslate value value translate stateful true return translate vue filters recalculate filter undefined methods recalculate methods filters recalculate use forceupdate method proposed api look like link filters use context data vuefilter translate function value gt return storetranslate value value auto manually rerender value change object storetranslate", "num": "7556", "d": "1/2018"}, {"title": "way update recalculate filtered values", "body": "hi angular filters use stateful values updated automatically modulefilter translate function rootscope vue filters recalculate filter undefined methods recalculate methods filters recalculate use forceupdate method would like get link filters use context data auto manually rerender value change object storetranslate", "num": "7555", "d": "1/2018"}, {"title": "class attribute ignored functional components", "body": "version reproduction link steps reproduce create functional component render parent component classes applied classes wo nt expected would expected class attribute would present dom like regular stateful components actually happening class attribute lost appear dom think issue might related", "num": "7554", "d": "1/2018"}, {"title": "vue warn", "body": "problem feature solve warnings vue looks like errors might little confusing would better changing consoleerror consolewarn improve convenience browser console filtering feature proposed api look like replacing consoleerror consolewarn warnings", "num": "7553", "d": "1/2018"}, {"title": "htmlprogresselement value attribute nt removed fed false null undefined", "body": "version reproduction link steps reproduce per documentation null undefined false remove attribute expected value attribute removed actually happening specific htmlprogresselement attribute removed giving false exception failed set value property htmlprogresselement provided double value nonfinite giving null undefined value htmlprogresselement without value attribute changes visual represent indeterminate state link", "num": "7552", "d": "1/2018"}, {"title": "method exec twice use axios", "body": "version reproduction link steps reproduce real exist url method url would ok test run console show result twice twice expected one twice output actually happening happen twice full code put", "num": "7551", "d": "1/2018"}, {"title": "\u7ec4\u4ef6\u7ee7\u627f", "body": "problem feature solve proposed api look like export default name render h return thisparenth", "num": "7550", "d": "1/2018"}, {"title": "scoped class leaks children", "body": "version reproduction link steps reproduce parent component apply scoped class div child name class make sure scoped use different css properties overwriting expected would expect scoped classes actually scoped actually happening scoped styles leaking children divs sharing datav attributes bad", "num": "7548", "d": "1/2018"}, {"title": "wrong bracket error caught version", "body": "working javascript export default name app components message lt change parentheses working error message data return", "num": "7547", "d": "1/2018"}, {"title": "ipadiphone keyboard shown input gets focus works vue", "body": "version reproduction link steps reproduce open link ipad iphone tap text expected input becomes visible gets focus onscreen keyboard ipadiphone shown actually happening input becomes visible gets focus onscreen keyboard ipadiphone shown works vue test stopped working vue test web app use ui pattern clicking text icon start editing something many places vue ipadiphone users would need tap show inputtextarea onscreen keyboard appear ipadiphone need tap twice one time show inputtextarea one time make onscreen keyboard appear", "num": "7546", "d": "1/2018"}, {"title": "filter empty arguments cause error chrome", "body": "version reproduction link steps reproduce chrome filter empty arguments html text somefilter parentheses html text somefilter expected error error actually happening chrome report error invalid expression unexpected token f somefilter text raw expression text somefilter found error also examined chrome errors guess bug occurs chrome", "num": "7544", "d": "1/2018"}, {"title": "loading slot props", "body": "version reproduction link steps reproduce loading true false control slot loading source expected loading prop actually happening loading prop", "num": "7543", "d": "1/2018"}, {"title": "set variable component created hook finished", "body": "problem feature solve like wait page finished loading ie hook finishes running display certain elements unfortunately nt work prevents mustache templates appearing nt stop incomplete elements waiting data api ready proposed api look like would good variable available component like automatically set hook finishes use template hide elements show loading spinners currently need manually every component need add end created hook set would good handled automatically least way set created hook across components rather needing component way add variable set aftercreated mounted hook components done one central place components use", "num": "7542", "d": "1/2018"}, {"title": "\u7236\u7ec4\u4ef6\u80fd\u4e0d\u80fd\u76f4\u63a5\u4f20\u9012\u6240\u6709\u6765\u63a5\u6536\u7684props\u7ed9\u5b50\u7ec4\u4ef6", "body": "problem feature solve proposed api look like", "num": "7541", "d": "1/2018"}, {"title": "webpack author talked vue better react", "body": "webpack author talked vue better react", "num": "7540", "d": "1/2018"}, {"title": "vuejs awesome", "body": "sorry silly issue wanted thank maintainers vue totally changed workflow made developing frontend applications pleasure donating get involved", "num": "7539", "d": "1/2018"}, {"title": "vue component dont updating", "body": "version reproduction link steps reproduce yarn amp amp yarn dev run chrome click button expected current time replaced initial value actually happening initial value updated", "num": "7538", "d": "1/2018"}, {"title": "component per row inlinetemplate", "body": "problem feature solve moment seems impossible create one component per row table using inline templates collected unsuccessful attempts fiddle link suggested linusborg open issue apparently never happended proposed api look like considering limitations involved restrictions allowed elements tables would seem likely supported although pretty ugly form understanding would valid html honor child requirement vue", "num": "7537", "d": "1/2018"}, {"title": "make vue support complete attribute syntax", "body": "problem feature solve runtime set attribute failure compliant parsers generate attributes string names vue library create compiler ok library builtin dom setattribute method fails example numeric attribute perfectly standard settable javascript nonetheless css responds usefully js code read strange numeric attributes got useful running code converted vue without tiny patch others proposed api look like change api poc monkey patch fixes problem anybody care fork investigate fix fully monkey patch proper way fix library call site modified", "num": "7536", "d": "1/2018"}, {"title": "empty props compile wrong thing", "body": "version reproduction link steps reproduce expected props compile playsinline autoplay mute actually happening props compile playsinline autoplayautoplay mutemute nt work either problem things like hack solution onload", "num": "7535", "d": "1/2018"}, {"title": "empty props compile wrong thing", "body": "vue version writing produces rendered setting props empty strings still produces thing problem things like hack solution onload", "num": "7534", "d": "1/2018"}, {"title": "focus handler vmodel change cancels selection input text tab", "body": "version reproduction link steps reproduce click results window jsfiddle hit tab first input selected text inside highlighted hit tab expected second input selected text inside highlighted actually happening second input selected text inside highlighted cursor end text encountered issue vue numeric formats number focusblur tabbing number user needs change user needs manually backspace left arrow key instead typing number directly", "num": "7533", "d": "1/2018"}, {"title": "add global config show event handlers development", "body": "problem feature solve development hard find method used handle events element using browser dom inspector able see handler name content development easier developer locate handler code proposed api look like set global config handlers seen dom inspector html hahaha since valid elementsetattribute changed von", "num": "7532", "d": "1/2018"}, {"title": "layout calculations beforeenter hook cancel entering animation transition elements", "body": "version reproduction link steps reproduce click toggle slide enable transition currently working remove scrolltop layout calculations beforeslideenter element slide smoothly transition working expected gradual sliding right actually happening scrolltop calculations entering transition gone found wrapping child component additional div solve problem however seems like hack apologize bug raised questions forum discord stackoverflow one able answer started think might bug stackoverflow link", "num": "7531", "d": "1/2018"}, {"title": "silence prop mutation warning", "body": "problem feature solve case using pulling vuetable component mixin fine use prop defaults define want defaults even use cssmodules vuetable without modifying template problem comes using prop matter parent needs transformed passed template using component mixin good technique override defaults third party components way transform prop passing template mutating prop since use technique docs creating separate data computed attribute want avoid modifying template keep name come reasonable workaround triggers warning mutating prop works case technique used makes warning less obsolete would like disable example technique using vuetable override import vuetable export default mixins vuetable props nodatatext type string default return data available nodatatemplate type string default return data available mounted thisnodatatemplate lt div class styleempty gt thisnodatatext lt div gt happening effectively using different prop parent use mutating prop used parent effectively become data attribute using mixin must remain prop means danger child mutating parents state warning trying cover proposed api look like thinking simply another option props currently another one could added thinking something like default props parent mutate state turn data attribute lives props main use overwriting component change true use prop data attribute without triggering warning help make sure cause people add mutate state without warning without proper handling warning added component uses prop like normal something like basically reversal current warning", "num": "7528", "d": "1/2018"}, {"title": "functional component wrapping native input control ca nt work correctly vmodel", "body": "version reproduction link steps reproduce input text field expected output actually happening output add modifier resolving issue like maybe add modifiers exact value transforming method sometimes want customize behavior text field like", "num": "7526", "d": "1/2018"}, {"title": "custom command vfocus ca nt used mobile browser pc browser", "body": "problem feature solve set input box get focus mobile browser current pc browser solves problem proposed api look like vfocus", "num": "7525", "d": "1/2018"}, {"title": "vshow triggers transition every time value changes irrespective value truthiness", "body": "version reproduction link steps reproduce bind nonboolean truthy value number string periodically change value different truthy value triggers enter transition every time value changes expected anything element classes change actually happening triggers enter transition every time value changes even though value remains truthy causes element momentarily classes triggers css transition briefly especially noticeable safari check instead see transition occur see srcplatformswebruntimedirectivesshowjs workaround bind boolean values", "num": "7523", "d": "1/2018"}, {"title": "error nexttick typeerror read property createelement undefined", "body": "", "num": "7522", "d": "1/2018"}, {"title": "", "body": "evan help", "num": "7521", "d": "1/2018"}, {"title": "async templates", "body": "problem feature solve like propose adding async modifier template directives loops svelte breeze ideally would allow using async lists wait promise resolve displaying list item passing promises component properties delay rendering component props resolved problem solve well first would move lot promise complexity components keeping lean instead handling passed promises automatically would allow devs manually need break backwards compatibility proposed api look like js promised values loops use foo expected promised props", "num": "7520", "d": "1/2018"}, {"title": "vueserverrenderer file sync resolve webfont support query string", "body": "problem feature solve elementui custom theme scss font file using query string resulting failure load file use npm package report error see elementui issue sure handle issue proposed api look like na", "num": "7519", "d": "1/2018"}, {"title": "automatically fix javascript errors pull requests", "body": "run sticklerci service aimed improving code quality simplifying code review automating code feedback pull requests launched autofixing javascript pull request commits javascript open source project service save time brain power automatically fixing style errors interested trying product submit pull request configuration file maintainer need enable webhooks logging enabling webhook thank", "num": "7517", "d": "1/2018"}, {"title": "vue warn mutating nested parent props", "body": "version reproduction link steps reproduce open console click counter expected show warning mutating object prop actually happening warning shows mutating primitive props", "num": "7516", "d": "1/2018"}, {"title": "vueextend mutates original object", "body": "version reproduction link steps reproduce run fiddle look code vs html expected still array extending actually happening normalized using vueextend", "num": "7515", "d": "1/2018"}, {"title": "vueextend mutates original object", "body": "failed creating issue", "num": "7514", "d": "1/2018"}, {"title": "vue js select bind data row wise get data select item", "body": "", "num": "7513", "d": "1/2018"}, {"title": "", "body": "\u62a5\u9519 avoid mutating prop directly since value overwritten whenever parent component rerenders instead use data computed property based prop value prop mutated status", "num": "7512", "d": "1/2018"}, {"title": "computed property getter setter handling camel kebab case conversion", "body": "version reproduction link steps reproduce html contains kebabcase eg per jsfiddle vmodel agedays computed property defined new vue uses camelcase getter setter agedays jsfiddle expected page loads without error actually happening chrome amp firefox dev unable render failed generate render function referenceerror invalid assignment lefthand side changing lowercase name html vmodel attribute computed property case jsfiddle changing agedays fixes problem", "num": "7511", "d": "1/2018"}, {"title": "npm run build \u7684\u65f6\u5019\u62a5\u7684\u9519", "body": "error ebusy resource busy locked open \u5c0f\u7a0b\u5e8f\u5f00\u53d1\u5e93miniapppattern\u6a21\u677f\u56db\u671f\u780d\u4ef7fourdistindexhtml error native npm err code elifecycle npm err errno npm err four build npm err exit status npm err npm err failed four build script npm err probably problem npm likely additional logging output npm err complete log run found npm err c", "num": "7509", "d": "1/2018"}, {"title": "npm run build \u7684\u65f6\u5019\u62a5\u9519 \u770b\u4e0d\u5230\u4ec0\u4e48\u9519\u8bef", "body": "error ebusy resource busy locked open \u5c0f\u7a0b\u5e8f\u5f00\u53d1\u5e93miniapppattern\u6a21\u677f\u56db\u671f\u780d\u4ef7fourdistindexhtml error native npm err code elifecycle npm err errno npm err four build npm err exit status npm err npm err failed four build script npm err probably problem npm likely additional logging output npm err complete log run found npm err c", "num": "7508", "d": "1/2018"}, {"title": "vueconfigproductiontip false working anymore", "body": "version config vueconfigproductiontip false running vue development mode back console checked vue working version output console desired", "num": "7507", "d": "1/2018"}, {"title": "checkboxes nt keep explicitly declared checked state", "body": "version reproduction link component version without component steps reproduce toggle checkboxes times expected checkbox always stay checked toggling actually happening see example manually bind change event checked attribute input would like control state even though always force value true checkbox always toggles checkedunchecked makes template data sync even calling help case", "num": "7506", "d": "1/2018"}, {"title": "checkboxes nt keep explicitly declared checked state", "body": "version reproduction link steps reproduce toggle checkboxes times expected checkbox always stay checked toggling actually happening see example manually bind change event checked attribute input would like control state even though always force value true checkbox always toggles checkedunchecked makes template data sync even calling help case", "num": "7505", "d": "1/2018"}, {"title": "unknown custom element using parcel sfcs typescript", "body": "version reproduction link steps reproduce open expected test custom element rendered actually happening error learning vue rewrite times try making work tried lookin unknown custom element issues could nt find solution name provided children put object parent sfc", "num": "7504", "d": "1/2018"}, {"title": "text interplation work one time", "body": "hi simple component like vuecomponent lookup props message type string required false messagetwo string template lookuptemp data function return labletitle thismessage labletitletwo thismessagetwo template markup like first line interplation shown time pobolem ps use vue script want add extra functionality current project", "num": "7503", "d": "1/2018"}, {"title": "simplify usage css modules", "body": "problem feature solve css proposed api look like \u901a\u8fc7\u6307\u4ee4\u7684\u6765\u6307\u5b9a\u5173\u8054\u7684css module\u540d vue vue \u901a\u8fc7\u6839\u7684\u6807\u7b7e\u5c5e\u6027\u8868\u660e\u5f53\u524d\u6a21\u677f\u5185\u7684\u5168\u90e8class\u5e94\u8be5\u81ea\u52a8\u8f6c\u6362\u4e3acss vueloader vue vue vue vue div divfoo div class bar vue \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6307\u4ee4\u4e13\u95e8\u7528\u4e8e\u5904\u7406css vue vue vue vue vue div divfoo vcssmodule divbar vcssmodule class baz vue", "num": "7502", "d": "1/2018"}, {"title": "namespaced mixins", "body": "problem feature solve want able create namespaced mixin let take notification mixin example function use strict import component use function use strict nt scale since nt really know method comes already solved using prefix method function use strict seems bad implementation proposed api look like let take first example function use strict could injected component function use strict", "num": "7501", "d": "1/2018"}, {"title": "use puppeteer instead phantomjs tests", "body": "problem feature solve pr check existence really carry polyfill production builds phantomjs solutions drop code build time move tests personally prefer cons reduce vuejs size better tests performance proposed api look like", "num": "7500", "d": "1/2018"}, {"title": "refs bug vue", "body": "version reproduction link steps reproduce count try click export default data return mounted consolelog thiscount consolelog refsreference thisdemo computed count \u8be5\u8ba1\u7b97\u5c5e\u6027\u662f\u76f4\u63a5\u88abvuex\u6302\u8f7dvue\u5b9e\u4f8b\u4e0a\u8fb9\u53bb\u7684 return storestatehi methods demo refsreferenceonclick gt consolelog box width height border solid red position relative btn width height border solid yellow background position absolute left top transform translate expected consolelog actually happening consolelog print inconsistency", "num": "7499", "d": "1/2018"}, {"title": "vue\u4e2d", "body": "count try click export default data return mounted consolelog thiscount consolelog refsreference thisdemo computed count \u8be5\u8ba1\u7b97\u5c5e\u6027\u662f\u76f4\u63a5\u88abvuex\u6302\u8f7dvue\u5b9e\u4f8b\u4e0a\u8fb9\u53bb\u7684 return storestatehi methods demo refsreferenceonclick gt consolelog box width height border solid red position relative btn width height border solid yellow background position absolute left top transform translate", "num": "7498", "d": "1/2018"}, {"title": "return promise support asyncawait", "body": "problem feature solve may situations use multiple calls single function case using asyncawait functionality useful prevent overly nested unreadable code right use either js async mymethod js mymethod proposed api look like return promise may also take closure parameter compatibility reasons could use three variants", "num": "7497", "d": "1/2018"}, {"title": "", "body": "version reproduction link steps reproduce mounted async function let vm pageno pagesize expected actually happening \u4e2d props\u7684options\u59cb\u7ec8\u6709\u503c \u4e2d props\u7684options\u59cb\u7ec8\u4e3a\u7a7a", "num": "7496", "d": "1/2018"}, {"title": "", "body": "mounted async function let vm pageno pagesize \u4e2d props\u7684options\u59cb\u7ec8\u6709\u503c \u4e2d props\u7684options\u59cb\u7ec8\u4e3a\u7a7a", "num": "7495", "d": "1/2018"}, {"title": "async transformation component spec difficult work", "body": "problem feature solve vue export default props bar js import foo foovue consolelog props sync fooprops bar settimeout gt consolelog props async fooprops bar type null object mutated hard work make constant make easy library authors consume transform vue specs synchronously proposed api look like proposed api mutate component spec asynchronously", "num": "7494", "d": "1/2018"}, {"title": "async transformation component specs confusing", "body": "vue export default props bar js import foo foovue consolelog props sync fooprops bar settimeout gt consolelog props async fooprops bar type null object mutated hard work make constant", "num": "7493", "d": "1/2018"}, {"title": "functional single file component components option", "body": "version reproduction link ng pattern functional ok pattern functional steps reproduce found ca nt use option single file component html import somechildren somechildren export default components somechildren occure expected occure use child component actually happening occure workaround occure use js import vue vue import somechildren somechildren vuecomponent somechildren somechildren export default use", "num": "7492", "d": "1/2018"}, {"title": "injections resolve differently functional components", "body": "version reproduction link steps reproduce open repro link verify component tree component provides verify two components inject verify output expected receive provided actually happening receives provided nt found information behavior docs looks like functional components resolve injections functional context parent component intended work works", "num": "7490", "d": "1/2018"}, {"title": "vue rerender view arraysplice", "body": "version reproduction link steps reproduce use vue try sort nested array thisdataproparraysplice index thisdataproparraysplice index expected update data view actually happening update data view back step", "num": "7489", "d": "1/2018"}, {"title": "multiple nested vfor keys transition", "body": "nt know issue trying figure transitions multiple nested loops given code link transitiongroup working", "num": "7488", "d": "1/2018"}, {"title": "\u8fd9\u53ef\u80fd\u662fvirtualdom\u4e2d\u4e00\u4e2a\u5f88\u9690\u853d\u7684bug", "body": "version reproduction link steps reproduce \u65e0 expected \u65e0 actually happening \u65e0 \u6240\u4ee5\u6211\u5224\u65ad\u8fd9\u884c\u4ee3\u7801 \u4f46\u6211\u4e0d\u6562\u76f4\u63a5\u63d0pull", "num": "7487", "d": "1/2018"}, {"title": "vue ssr \u6e32\u67d3\u5185\u5b58\u76f4\u6da8", "body": "vue ssr", "num": "7486", "d": "1/2018"}, {"title": "multitype props defined without value gets empty string true boolean string", "body": "version reproduction link steps reproduce define multitype boolean string prop call component specifying prop name without value expected prop contains true boolean type actually happening prop contains empty string sequence change result give result version change result either vue version edge jsfiddle", "num": "7485", "d": "1/2018"}, {"title": "add information boolean props acting flags docs", "body": "problem feature solve docs request undocumented boolean prop say writing lead set leads bugs due resolved verbose code people nt stumble upon fact proposed api look like add docs make pull request russian english docs nt know appropriate place information maybe end props sections near type validation", "num": "7484", "d": "1/2018"}, {"title": "uglifyjs alioss build\u65f6\u5019\u62a5\u9519", "body": "error uglifyjs unexpected token name mime", "num": "7483", "d": "1/2018"}, {"title": "vue ssr \u6e32\u67d3list \u51fa\u73b0\u62a5\u9519\u7684\u60c5\u51b5", "body": "version reproduction link steps reproduce \u8fd9\u662f\u5728\u4f7f\u7528 vue ssr expected \u4e0d\u4f1a\u62a5\u9519 actually happening \u9875\u9762\u65e0\u6cd5\u6e32\u67d3 q", "num": "7482", "d": "1/2018"}, {"title": "beforeupdate actually executed render", "body": "version reproduction link steps reproduce add render beforeupdate hook instance trigger data value change means expected per api beforeupdate supposed fired render state changes hook trigger additional rerenders actually happening beforeupdate actually invoked render current version could result infinite update loop state changes beforeupdate trigger another rerendering", "num": "7481", "d": "1/2018"}, {"title": "double value appear textarea using render function create vue file", "body": "version reproduction link steps reproduce sorry things could use vue file definition jsfiddle please follow steps create textarea component like export default props value type string render function h var return h textarea input function e emit update value etargetvalue import vue file use vue component run codes expected type textarea character would appear textarea actually happening type textarea characters would appear textarea time use component definition html everything goes well ie chrome like example running jsfiddle using definition vue file compiled would get wrong still ok safari chrome", "num": "7480", "d": "1/2018"}, {"title": "template renderer csp", "body": "problem feature solve context state provided template renderer inline script created may useful provide nonce gets attached script tag unsafeinline csp nt enabled proposed api look like", "num": "7479", "d": "1/2018"}, {"title": "content security policy ignoring xframeoptions frameancestors directive", "body": "version reproduction link steps reproduce yarn run dev expected expect see facebook customer chat actually happening iframe partially loaded fbdialog seem prevent rest plugin showed", "num": "7478", "d": "1/2018"}, {"title": "list nodes recreated shuffled downwards", "body": "version reproduction link steps reproduce say array computed property extracts items list based start run computed list increase decrease use item value inspect resulting dom chrome see filtered list moved right index increased dom nodes replaced index moved left first node replaced expected would expect increasing decreasing index would yield dom patch either recreating first last node list actually happening increasing index causes full dom refresh decreasing index yields expected behaviour", "num": "7477", "d": "1/2018"}, {"title": "big dom change vue blocks ui", "body": "version reproduction link steps reproduce start devserver build serve nginx open page last generate store data configures used amounts click toggle showinfo reflects itemcomponent wich renders stuff click jop nope times expected expect clicks happening imediatly actually happening whole ui freezes sek click events processed experienced problem production investigating", "num": "7476", "d": "1/2018"}, {"title": "ability create full independent clone vue constructor", "body": "problem feature solve multiple concurrent independent applications clean independent vueprototype event bus reactive data without global mixinshooks pollution eg beforecreate eg vuex uses global vue may polluted global mixins vuebased templating tools serverside email creation using vue template proposed api look like currently kept common work", "num": "7475", "d": "1/2018"}, {"title": "parent component styles leak child components svg", "body": "version reproduction link steps reproduce always happen ca nt set styles svg child component parent component child component parent component set style svg page see relevant style picture shows nt work edit current node browser development tools hit two spaces works picture shows also tried binding style expected expected actually happening always happen set styles eg background svg child component works english good description may clear go clone projectand reproduce thank", "num": "7474", "d": "1/2018"}, {"title": "refs error", "body": "version reproduction link check real web page steps reproduce check console expected refs vue component actually happening refs array contain vue component", "num": "7473", "d": "1/2018"}, {"title": "typescript support style styles option componentoptions", "body": "problem feature solve developer vue typescipt need add new styles option componentoptions feature allow developer import styles import template example javascript import component vue vuepropertydecorator component template require homehtml style require homescss possible import multiple styles styles require homescss proposed api look like optionsdts case import multiple styles need modify typewebpackenvindexdts adding new require function", "num": "7472", "d": "1/2018"}, {"title": "uigthujkp", "body": "", "num": "7471", "d": "1/2018"}, {"title": "", "body": "version reproduction link steps reproduce \u65e0 expected \u65e0 actually happening \u65e0 oldvnodetext \u4e3a true", "num": "7470", "d": "1/2018"}, {"title": "", "body": "oldvnodetext \u4e3a true", "num": "7469", "d": "1/2018"}, {"title": "passing listeners functional component jsx", "body": "version reproduction link steps reproduce try pass listeners like const decorator functional true render h props listeners return export default decorator expected events emitted emitted parent component actually happening parent component nt receive anything examples docs maybe using wrong way", "num": "7468", "d": "1/2018"}, {"title": "prop sync modifier warning vue", "body": "prop sync modifier used vmodel control dialog visibility vueesmjs vue warn avoid mutating prop directly since value overwritten whenever parent component rerenders instead use data computed property based prop value prop mutated visible", "num": "7467", "d": "1/2018"}, {"title": "allow specifying parameter names custom events", "body": "problem feature solve besides event handling vue saying amp still easy use angularjs angularjs allow developers specify name event callback argument example implementing custom dropdown selector every item label value customizable user wrote code blow angularjs html vue write method handle ca nt get parameter template magic parameter works native events ca nt implement normal way custom events proposed api look like good naming things", "num": "7466", "d": "1/2018"}, {"title": "simple nested scoped slot", "body": "problem feature solve provide slot grandchildren proposed api look like example components parent gt groupedlist gt simplelist want provide slot parent simplelist currently write groupedlist like simple way nt work like", "num": "7464", "d": "1/2018"}, {"title": "vuessrclientplugin bug caused copywebpackplugin", "body": "version reproduction link steps reproduce clone repo view source code prefetched client plugin expected resources copied copywebpackplugin nt prefetched actually happening client plugin prefetches resources copied copywebpackplugin use clientplugin copywebpackplugin bundle\u51fa\u6765\u7684\u6e90\u7801\u603b\u662f\u5c06copywebpackplugin", "num": "7461", "d": "1/2018"}, {"title": "history\u6a21\u5f0f\u7a81\u7136\u5931\u6548", "body": "version reproduction link steps reproduce export \u8def\u7531\u793a\u4f8b export default new router mode history scrollbehavior savedposition savedposition return savedposition else return x routes expected url\u6309\u7167history\u6a21\u5f0f\u663e\u793a actually happening url\u6309\u7167hash\u6a21\u5f0f\u663e\u793a \u4e0d\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898 \u5728chrome \u6d4f\u89c8\u5668\u4e2d\u7684\u6548\u679c \u5728safari\u4e2d\u7684\u6548\u679c", "num": "7459", "d": "1/2018"}, {"title": "history\u6a21\u5f0f\u7a81\u7136\u5931\u6548", "body": "", "num": "7458", "d": "1/2018"}, {"title": "vue\u6587\u4ef6\u7684this\u6307\u5411\u95ee\u9898", "body": "version reproduction link steps reproduce return expected function return \u8fd9\u6bb5\u4ee3\u7801\u7684this\u6307\u5411window actually happening function return \u8fd9\u6bb5\u4ee3\u7801\u7684this\u662fundefined", "num": "7457", "d": "1/2018"}, {"title": "embedding class interpretering render function first parameter", "body": "problem feature solve may want add class vnode draw supposing selectorlike style might helps little alternative methods proposed api look like", "num": "7455", "d": "1/2018"}, {"title": "slots work differently based way defined tag template string", "body": "version reproduction link steps reproduce render another component within component directive handle component slots differently based define template define template tag works expected injected component uses slot contents intended decide use template string use slot contents also whole slot content slot injection provide slot like injected template string whole tag injected expected use slot contents exclude slot tag actually happening slot tag injected example clearly see difference methods notice footer red slot css applying style", "num": "7453", "d": "1/2018"}, {"title": "question non spa web app", "body": "question work classical single page app app views generated server side added vue enhance user experience components bundled one webpack file included every page obviously get components current page question impact perfs", "num": "7451", "d": "1/2018"}, {"title": "watch\u591a\u4e2a\u5c5e\u6027\u6307\u5411\u5230\u540c\u4e00\u4e2a\u51fd\u6570\u80fd\u5426\u66f4\u52a0\u7b80\u6d01\u7684\u5199\u4e3a\u4e00\u884c\u4ee3\u7801", "body": "problem feature solve watch\u591a\u4e2a\u5c5e\u6027\u6307\u5411\u5230\u540c\u4e00\u4e2a\u51fd\u6570\u80fd\u5426\u66f4\u52a0\u7b80\u6d01\u7684\u5199\u4e3a\u4e00\u884c\u4ee3\u7801 proposed api look like watch\u591a\u4e2a\u5c5e\u6027\u6307\u5411\u5230\u540c\u4e00\u4e2a\u51fd\u6570\u80fd\u5426\u66f4\u52a0\u7b80\u6d01\u7684\u5199\u4e3a\u4e00\u884c\u4ee3\u7801", "num": "7449", "d": "1/2018"}, {"title": "emit\u548c on\u80fd\u5426\u52a0\u4e0a\u540c\u65f6\u7ed1\u5b9a\u6216\u8005\u89e6\u53d1\u591a\u4e2a\u4e8b\u4ef6", "body": "problem feature solve emit\u548c on\u80fd\u5426\u52a0\u4e0a\u540c\u65f6\u7ed1\u5b9a\u6216\u8005\u89e6\u53d1\u591a\u4e2a\u4e8b\u4ef6 proposed api look like emit\u548c on\u80fd\u5426\u52a0\u4e0a\u540c\u65f6\u7ed1\u5b9a\u6216\u8005\u89e6\u53d1\u591a\u4e2a\u4e8b\u4ef6", "num": "7448", "d": "1/2018"}, {"title": "vue\u4e8b\u4ef6\u80fd\u5426\u52a0\u4e0a\u7c7b\u4f3cjquery\u7684\u547d\u540d\u7a7a\u95f4", "body": "problem feature solve vue\u4e8b\u4ef6\u80fd\u5426\u52a0\u4e0a\u7c7b\u4f3cjquery\u7684\u547d\u540d\u7a7a\u95f4 proposed api look like vue\u4e8b\u4ef6\u80fd\u5426\u52a0\u4e0a\u7c7b\u4f3cjquery\u7684\u547d\u540d\u7a7a\u95f4", "num": "7447", "d": "1/2018"}, {"title": "data passing bug", "body": "version reproduction link steps reproduce fill modal setting form save player component display according settings still works fine second time editing modal setting form input without saving player component reacts immediately latest settings expected everytime editing modal setting player component nt react immediately save actually happening child component modal setting mutating parent component score counter even though props object array read also know object array auto mutate parent due javascript passed reference therefore reproduction source see use vbind settings child component instead vbind settings settings somehow still mutating parent data", "num": "7446", "d": "1/2018"}, {"title": "need judge styles transitionprop duration undefined", "body": "version reproduction link steps reproduce run unit test shows var transitiondurations styles transitionprop duration split typeerror read property split undefined think need judge styles transitionprop duration undefined expected styles transitionprop duration defined actually happening styles transitionprop duration defined fixed var styles windowgetcomputedstyle el var transitiondelays styles transitionprop delay styles transitionprop delay split var transitiondurations styles transitionprop duration styles transitionprop duration split var transitiontimeout gettimeout transitiondelays transitiondurations var animationdelays styles animationprop delay styles animationprop delay split var animationdurations styles animationprop duration styles animationprop duration split var animationtimeout gettimeout animationdelays animationdurations", "num": "7444", "d": "1/2018"}, {"title": "emit passes arrays reference", "body": "version reproduction link steps reproduce open jsfiddle link mark check boxes child container click notify parent button emit event watch counter parent event updates click pop button pop local data notice checkboxes child component affected expected clicking pop button counter parent go affecting child component selection actually happening child component selection affected appears passing array additional argument reference array passed around tried objects place arrays able create issue expecting copy array passed reference seems like way cheat twoway binding parentchild components p", "num": "7441", "d": "1/2018"}, {"title": "\u5728\u56fd\u5185\u9489\u9489\u6d4f\u89c8\u5668\u5185\u6838\u4e2d\u4f7f\u7528vue", "body": "import babelpolyfill", "num": "7440", "d": "1/2018"}, {"title": "allow jsxcreateelement inside template prop functions", "body": "problem feature solve allows inlining render functions inside template quick expressive rendering using render functions pass component define method vue instance returns jsx would nice small functions could define inline anonymous proposed api look like allow jsx inside feature would accepted would interested looking contributing could point right direction thanks", "num": "7439", "d": "1/2018"}, {"title": "custom errors prop validators", "body": "problem feature solve loving way prop specification validation works compared react one thing wish custom validator functions could explain validation failed nt hunt validator function follow logic check data proposed api look like javascript props foobar type object required true validator function value default error message valuefoo return false", "num": "7438", "d": "1/2018"}, {"title": "vmodel nt work properly checkbox", "body": "version reproduction link steps reproduce click checkbox expected one checkbox selected actually happening two checkboxes selected happens two element content", "num": "7437", "d": "1/2018"}, {"title": "issue use vm destroy routercomponent keepalive cached component work anymore", "body": "", "num": "7435", "d": "1/2018"}, {"title": "using one props vmodel access prop created hook first modification prop via vmodel reset", "body": "version reproduction link steps reproduce select text text input press backspace delete expected text inside input deleted actually happening text inside input deleted restored immediately deletion also modification reset first modification", "num": "7434", "d": "1/2018"}, {"title": "", "body": "problem feature solve proposed api look like", "num": "7433", "d": "1/2018"}, {"title": "", "body": "init webpack", "num": "7432", "d": "1/2018"}, {"title": "reintroduce triple curly braces vhtml alternative", "body": "problem feature solve moment whenever use vhtml introducing another wrapping element top element want include template eg generate following code cool paragraph however inline paragraphs first paragraph second paragraph third paragraph introduced many unnecessary wrapper elements surrounding element lose ability style paragraphs different colours whatnot css paragraph margin set via fail well stopped relationship soon divs introduced ps reason used p p margin applied set paragraphs proposed api look like ideally usage would like generate following first paragraph second paragraph third paragraph result much cleaner highly intuitive easy read importantly regain ability style paragraphs anyway want method", "num": "7431", "d": "1/2018"}, {"title": "native", "body": "problem feature solve flutter sdk \u662f\u4e00\u4e2a\u53ef\u4ee5\u7528\u5355\u4e00\u4ee3\u7801base\u8de8\u4e09\u4e2a\u5e73\u53f0 android ios fuchsia proposed api look like \u6211\u7684\u5efa\u8bae\u662fvue\u53ef\u4ee5\u5728flutter \u4e4b\u4e0a\u5f00\u53d1vue", "num": "7430", "d": "1/2018"}, {"title": "failed resolve directive still works", "body": "version reproduction link steps reproduce register directive use directive component html refresh expected tooltip show log errors actually happening tooltip displays normally however console logs error found srcjsvuepagescomponentsmodulevue tooltip works properly vue warns error", "num": "7429", "d": "1/2018"}, {"title": "watchers nt triggrered nested changes", "body": "version reproduction link steps reproduce click button reproducer content passed child component corrrently however watcher never getting triggered even tho value changed workaround delete property set uncomment line expected watcher get called value changing actually happening watcher getting called object nt changed", "num": "7428", "d": "1/2018"}, {"title": "methods event defined firefox", "body": "version reproduction link steps reproduce open reproduction link chrome firefox click image see console error firefox expected work actually happening throws error firefox", "num": "7427", "d": "1/2018"}, {"title": "mapgetters twice", "body": "", "num": "7426", "d": "1/2018"}, {"title": "use datatable forloop using http request", "body": "hello sir u show example datatable using hhtp request forloop", "num": "7425", "d": "1/2018"}, {"title": "run meteor project problem like fix", "body": "processing files akryum vuecomponent target webbrowser watch homesourdesktopposnewposimportsmodulesaccclientpagesaccounttypevue enospc errnoexception fswatcherstart objectfswatch componentwatcherwatchpath componentwatcherupdate vuecompoaddcompileresult replenish", "num": "7424", "d": "1/2018"}, {"title": "add cloneslot directive", "body": "problem feature solve take child component default slot recursively clone allowing user define child sample declarative way consider example following template declaration formsetmanager component takes formsetrow definition example internally clone many formsetrow components user demands note plain formsetrow component cloned children well means sample provided cloned recursively unable get build clean solution use case using scoped slots believe solution use case implies user needs fully implement render function formsetmanager component proposed api look like proposed api could look something like following template also consider previously described formsetmanager template key example proposed cloneslot directive shown example takes formsetrow child clones arbitrary number times case dictated vfor rows used cloneslot defined data rows changes appropriate number formsetrows clonedgenerated", "num": "7423", "d": "1/2018"}, {"title": "bind boolean values accessibility attributes", "body": "problem feature solve know vue currently removes html attributes bound boolean evaluates false currently renders perfect however work well aria attributes per spec many aria attributes need values set screen readers ideally renders fiddle demonstrates desired output current workaround works gets messy multiple aria attributes know could also use feels even messier hackish proposed api look like easiest way think fixing modifier renders thoughts guidance", "num": "7422", "d": "1/2018"}, {"title": "allow unescaped attribute value", "body": "problem feature solve situations desirable html entities value attributes good example would obfuscating email address bots replacing character attribute value unicode character entity character something like would become vue escaping character entities making code invalid trying user land filters directives even using directive managed get success directive creating whole element children needs attribute value unescaped highly impractical especially child elements mix proposed api look like use modifier vbind directive", "num": "7421", "d": "1/2018"}, {"title": "possibility pause", "body": "problem feature solve example application timeout bar pause hover proposed api look like div width height background venteractive transition width venter width venterto width", "num": "7420", "d": "1/2018"}, {"title": "change property appvue affect property vuex store", "body": "version reproduction link steps reproduce suppose object vuex store data name john lname doe name george lname doe appvue follow prop data thisgetfetcheddata returns prop vuex store follow thisdatasplice expected expected remove first element data prop appvueonly actually happening besides also removed first element vuex store property think javascript issue dont know something wrongcheck jsfidlle link understand mean", "num": "7419", "d": "1/2018"}, {"title": "transition bug multiple ul", "body": "version reproduction link steps reproduce expected transition actually happening code transition ok first element array ul second ul hidden without work solved", "num": "7418", "d": "1/2018"}, {"title": "change property appvue affect property vuex store", "body": "suppose object vuex store data name john lname doe name george lname doe appvue follow prop data thisgetfetcheddata returns prop vuex store follow thisdatasplice changes prop appvue also prop vuex store also tried like jsfidlle think vuex issuemaybe javascript issue something wrong", "num": "7417", "d": "1/2018"}, {"title": "change property appvue affect property vuex store", "body": "suppose object vuex store data name john lname doe name george lname doe appvue follow prop data thisgetfetcheddata returns prop vuex store follow thisdatasplice changes prop appvue also prop vuex store also tried like jsfidlle think vuex issuemaybe javascript issue id something wrong", "num": "7416", "d": "1/2018"}, {"title": "transition bug multiple ul", "body": "hello version vue code transition ok first element array ul second ul hidden without work solved", "num": "7415", "d": "1/2018"}, {"title": "", "body": "", "num": "7414", "d": "1/2018"}, {"title": "vmodel working input type vue modal", "body": "lt div class modalheader gt lt slot name header gt default header lt slot gt lt div gt lt div class modalbody gt lt slot name body gt name lt input type text vtext myname gt myname lt br gt lt br gt age lt input type number gt lt br gt lt br gt mobile lt input type number gt lt br gt lt br gt lt slot gt lt div gt lt div class modalfooter gt lt slot name footer gt lt button von click pushtotable gt submit lt button gt lt button style display none gt edit lt button gt lt button class modaldefaultbutton click emit close gt close lt button gt lt slot gt lt div gt lt div gt lt div gt lt div gt input data student info name age mobile export default name app data return showmodal false myname age mobile", "num": "7413", "d": "1/2018"}, {"title": "extends option behavior mixins", "body": "version reproduction link steps reproduce see console expected compb created compa created actually happening compa created compb created doc says option similar difference components options takes higher priority source component extended however fact source component extended higher priority mixins see source code vuejs js export function mergeoptions parent object child object vm component object const extendsfrom childextends extendsfrom parent mergeoptions parent extendsfrom vm childmixins let l childmixinslength lt l parent mergeoptions parent childmixins vm extendsmixins almost", "num": "7412", "d": "1/2018"}, {"title": "transition leaveto class removed properly", "body": "version reproduction link steps reproduce click showhide button switch another browser tab seconds go back jsfiddle see message displayed expected clicking showhide button fiddle waits seconds hides message fiddle waits second shows message actually happening clicking showhide button switching another browser tab seconds come back see message class fadeleaveto element behave", "num": "7411", "d": "1/2018"}, {"title": "vue \u7ec4\u4ef6\u9500\u6bc1", "body": "problem feature solve \u6700\u8fd1\u505a\u4e86\u4e00\u4e2a\u9879\u76ee \u6280\u672f\u6808vuejs vuex vecharts elementui \u5177\u4f53\u505a\u6cd5\u662f \u5728\u7ec4\u4ef6beforedestroy\u8fd9\u4e2a\u51fd\u6570\u5f00\u542floading proposed api look like \u65e0", "num": "7410", "d": "1/2018"}, {"title": "disable comment stripping vue template", "body": "version reproduction link steps reproduce add html block contains comments directive root level rendered notice inline comments stripped expected inline comments markup remains untouched vue actually happening vue still seems parsecompile contents inside directive supposed work way love find another way disable comment stripping reason need using legacy knockoutjs markup inside larger vue vm knockoutjs syntax allows using comment bindingsdirectives stripped vue", "num": "7409", "d": "1/2018"}, {"title": "bind implementation slower native modern browsers", "body": "version reproduction link steps reproduce run tests across modern browsers see result expected custom bind implementation performance level native actually happening custom bind implementation performance lower native tested safari native slower chrome native faster edge native faster firefox native faster believe issue think something improved", "num": "7408", "d": "1/2018"}, {"title": "document vmodel nt work inheritattrs", "body": "problem feature solve per sounds like number people expecting vmodel work inheritattrs attrs listeners also caught assumed bug googling found rejected pr nt see anything docs suggested trying would nt work would possible document nt expected work maybe would made pr nt time right perhaps assign might get chance weekend cheers david proposed api look like na", "num": "7407", "d": "1/2018"}, {"title": "bind checked properties checkbox bidirectional render method", "body": "version reproduction link steps reproduce bind checked properties checkbox bidirectional render method mycheckbox component ca nt set otherwise appear warning understood modifies attribute value mycheckbox vue nt allow operation expected setting ischecked value externally shown display mycheckbox component actually happening ischeckedtrue mycheckbox component rendered checkbox fails selected default", "num": "7405", "d": "1/2018"}, {"title": "dynamic input type longer works vmodel value time", "body": "version reproduction link steps reproduce open js console see vue warn error compiling template testitem testvalue value testitem conflicts vmodel element latter already expands value binding internally found expected template compiled without errors like vue actually happening errors template compilation codepen still renders component webpack wont build bundle error code worked", "num": "7404", "d": "1/2018"}, {"title": "valid versions available pinkiepromise", "body": "version reproduction link steps reproduce npm install global vuecli cnpm install global vuecli expected vue work actually happening vue work", "num": "7403", "d": "1/2018"}, {"title": "valid versions available pinkiepromise", "body": "", "num": "7402", "d": "1/2018"}, {"title": "valid versions available pinkiepromis", "body": "", "num": "7401", "d": "1/2018"}, {"title": "webpack path aliases componentvue files", "body": "problem feature solve webpack aliases work properly import statements however sections componentvue would great add feature componentvue works fine even location changes would super cool btw love vue thanks lot great work proposed api look like cases might listed", "num": "7400", "d": "1/2018"}, {"title": "webpack aliases vue section", "body": "problem feature solve basically today noticed webpack aliases work properly import statements however section vue component example given src alias works fine import smth smth section tried failed thought would great able write code way componentvue works even location changes would super cool btw love vue thanks lot great work proposed api look like webpack aliases vue section", "num": "7399", "d": "1/2018"}, {"title": "last webpack template update broke assets routing", "body": "version reproduction link steps reproduce run default installation create new project run dev server webpack nt allow put images assets folder created vue cli transfer images static folder took hour figure would imagine confuse lot people issue last update created one routing expected confuse people actually happening confuses people requires transfer images assets static folder dev server", "num": "7398", "d": "1/2018"}, {"title": "optionally allow scoped lots behave like normal ones", "body": "problem feature solve find creating simple list component want able provide multiple entries single want provide multiple subtitle elements like subtitles item write work fine subtitles going stack nt want static use scoped data instead yes use scoped slots wo nt stack anymore last one rendered reproduce problem uncomment line since returns single vnode ca nt either use render function manually replicate normal slot stacking behavior scoped ones proposed api look like probably something like", "num": "7397", "d": "1/2018"}, {"title": "internet explorer app div gets deleted", "body": "hello new vue made implementation vue cdn link script using package manager everything works fine chrome ff make work ie already try babelpolyfill thing nothing worked indexhtml vuejs controller open console view seems deletes app div help please", "num": "7396", "d": "1/2018"}, {"title": "forceupdate update computed fields", "body": "version reproduction link steps reproduce build project open buildbuildhtml wait seconds expected last update time change actually happening last update time change", "num": "7395", "d": "1/2018"}, {"title": "typescript computed properties correctly infer even simple return types", "body": "version reproduction link steps reproduce cloning repo run yarn load webpack attempt build project point typescript compilation fail errorreproductionvue file alternatively open vscode something else good typescript integration see errors expected affected file would expect computed methods behave standard type inference due straightforward return types indeed access member shows data members methods even correct values computed properties actually happening time try return data member computed properties method gives type error implicitly return type return type annotation referenced directly indirectly one return expressions value gives error property exist type note longer includes computed properties data members additionally hovering type view even method shows return type even though trivial vue figure type simple string return", "num": "7394", "d": "1/2018"}, {"title": "handle vmodel bindings correctly", "body": "version reproduction link steps reproduce type first input type second input type third input type first input expected input longer updates value used actually happening first input regular input field using vmodel second input custom component bound using inside input third input second uses seems vmodel related handling inputs applied case authoring reusable form components application ran treating text inputs textareas identically using application seems component receiving new prop reason updating actual value dom happy try fix would appreciate someone pointing right direction looked internal vue code yet", "num": "7393", "d": "1/2018"}, {"title": "ca nt import vue using typescript node", "body": "version reproduction link steps reproduce clone repo git clone install dependencies npm install compile ts tsc launch app see error constructor node buildmainjs expected create new vue instance using constructor actually happening get error typeerror constructor believe related issue included comments using output typescript webpack one similarity op using typescript option something definitely wrong standard import typescript using vue setting ssr node typescript looks like tried number workaround including trying load vueesmjs file via property without success getting exact error op", "num": "7392", "d": "1/2018"}, {"title": "cancelled transitions vshow still add entertoclass leavetoclass", "body": "version reproduction link steps reproduce cancel transition next frame example cancelling fadeout transition expected classes added element actually happening classes still added element despite transition cancelled lines likely put guard", "num": "7390", "d": "1/2018"}, {"title": "ssr support inline resource specified files server side rendering", "body": "problem feature solve using ssr commonschunkplugin often generate time always small without ssr using inline resource plugin able make transformed inline html file ssr html output generated automatically proposed api look like", "num": "7389", "d": "1/2018"}, {"title": "", "body": "version reproduction link steps reproduce expected \u7236\u7ec4\u4ef6\u5176\u4ed6\u7ec4\u4ef6\u72b6\u6001\u66f4\u65b0\u7684\u65f6\u5019\u4e0d\u8981\u5f71\u54cdslot\u7ec4\u4ef6\u7684render actually happening \u5b50\u7ec4\u4ef6\u6e32\u67d3\u4e24\u6b21", "num": "7386", "d": "1/2018"}, {"title": "generated style passing shadow root boundary", "body": "version reproduction link steps reproduce seems vue nt consider happens vue component mounted inside shadow root component style gets placed web app therefore style able style elements generated vue component inside shadow root reproduction pen works one nt see app works click buttons nothing styled expected app styled actually happening nt styles placed nt propagate shadow root way configure vue place element sibling rendered output somewhere else need generated placed inside shadow root otherwise effect", "num": "7385", "d": "1/2018"}, {"title": "value bindings eventtargetvalue", "body": "version reproduction link steps reproduce run jsfiddle select value select box check console event value string object expected eventtargetvalue selected object actually happening string saying object object since supports objects value bindings select boxes expecting event return object", "num": "7384", "d": "1/2018"}, {"title": "wrong generated js code typescript amd umd version", "body": "version reproduction link steps reproduce run app opening vueproblemappvueproblemappindexhtml file see error console expected typescript compiler take vue typings produce right code actually happening resulted js code right see comments detail explonation several days ago created wrong generated js code typescript amd umd bug click link see detail explanation problem got answer noob js nt get right first time get right problem still relevant evan answered seems nothing config points vue module vuejs umd build included ts compiler resolving nodemodulesvue using main field packagejson commonjs build need specify mapping using compileroptionspaths tsconfig get evan right thought requirejs download wrong vuejs file right one umdamd module system ts compiler makes reference vuejs file commonjs module system got error right ts compiler make reference mysite case mysitevuejs matter vuejs file vuejs link error also try change main config nodemodulesvuepackagejson like main distvuejs gives error checked vuejs file loading requirejs right file requirejs parse right problem typings also make import like like offered everything works fine loading vuejs file mysitevuejs get right problem still remains", "num": "7383", "d": "1/2018"}, {"title": "components transtiongroup able distribute props components declared tag props", "body": "problem feature solve example row component includes cols wan na cols transition effect give row propsbut props wrote effect row componentand use row gt transtiongroup combination css lose effect proposed api look like", "num": "7382", "d": "1/2018"}, {"title": "typeerror use operator search names", "body": "version reproduction link steps reproduce run open console debugger expected target variable type checked string trying perform line prevent big error message actually happening big error message comes going look fix post figure", "num": "7381", "d": "1/2018"}, {"title": "\u4f7f\u7528provide inject", "body": "version reproduction link steps reproduce expected inject\u7684\u503c\u6b63\u5e38 actually happening", "num": "7380", "d": "1/2018"}, {"title": "long vuecli support typescript", "body": "hi everybody chinese question really want use typescript build project support vuecli vue author said support future long see support long vuecli totally support using typescript", "num": "7379", "d": "1/2018"}, {"title": "support module methods options", "body": "problem feature solve app growing bigger bigger divide method option small modules module things help us work clear proposed api look like javascript mounted thisinitinitui methods init initui work", "num": "7378", "d": "1/2018"}, {"title": "would better add alias elem el", "body": "version reproduction link steps reproduce var vm new vue el app \u8fd9\u91cc\u6bd4\u8f83\u559c\u6b22\u7528 el \u52a0\u4e00\u4e2a\u522b\u540d elem data expected var vm new vue elem app \u8fd9\u91cc\u6bd4\u8f83\u559c\u6b22\u7528 el \u52a0\u4e00\u4e2a\u522b\u540d elem data actually happening el gt elem", "num": "7377", "d": "1/2018"}, {"title": "vue\u4f7f\u7528keepalive\u7684\u65f6\u5019\u5982\u679c destroy\u540e\u9875\u9762\u518d\u4e5f\u65e0\u6cd5\u88ab\u7f13\u5b58", "body": "vue\u4f7f\u7528keepalive\u7684\u65f6\u5019\u5982\u679c destroy\u540e\u9875\u9762\u518d\u4e5f\u65e0\u6cd5\u88ab\u7f13\u5b58", "num": "7376", "d": "1/2018"}, {"title": "wrong generated js code typescript amd umd", "body": "version reproduction link steps reproduce run app opening vueproblemappvueproblemappindexhtml file see error console expected typescript compiler take vue typings produce right code actually happening resulted js code right see comments detail explonation want use vuejs typescript application try add via npm packagejson tsconfigjson try use see tsconfig file use amd module system means produce information define function result js file problem step something goes wrong get wrong generated code js code vue constructor right get instead course undefined gives error note use vuejs file version right one amd umd module system problem try use umd module system vie tsconfig used typescript version", "num": "7374", "d": "1/2018"}, {"title": "wrong generated js code typescript amd umd", "body": "want use vuejs typescript application try add via npm packagejson tsconfigjson try use see tsconfig file use amd module system means produce information define function result js file problem step something goes wrong get wrong generated code js code vue constructor right get instead course undefined gives error note use vuejs file version right one amd umd module system problem try use umd module system vie tsconfig used typescript version", "num": "7373", "d": "1/2018"}, {"title": "gesture library", "body": "version reproduction link steps reproduce want know gesture library use expected recommend gesture library actually happening project need gesture library ca nt understand methods vuetouch", "num": "7372", "d": "1/2018"}, {"title": "\u624b\u52bf", "body": "version reproduction link steps reproduce expected \u63d0\u4f9b\u89e3\u7b54 actually happening \u63d0\u4f9b\u53ef\u7528\u624b\u52bf\u5e93", "num": "7371", "d": "1/2018"}, {"title": "", "body": "", "num": "7370", "d": "1/2018"}, {"title": "handle compositionevent android", "body": "version reproduction link steps reproduce android select input tag ime google japanese example contents expected update data compositionend event fired according issue actually happening see screen shot vmodel sync input data compositionend fired suggestion replacing check code", "num": "7367", "d": "1/2018"}, {"title": "elementui requires peer vue none installed", "body": "create project version want use elementui write npm install elementui save get error elementui requires peer vue none installed resolve", "num": "7366", "d": "1/2018"}, {"title": "using sync watch time cause dead cycle error", "body": "version reproduction link steps reproduce using async watch time expected execute actually happening repeat execution", "num": "7365", "d": "1/2018"}, {"title": "\u5728mainjs \u4e2d \u5f15\u5165import iconfontscss \u62a5\u9519", "body": "", "num": "7363", "d": "1/2018"}, {"title": "improve compiler rendering boolean attributes", "body": "problem feature solve issue related previously discussed problem way compiler deals boolean attributes quite counterintuitive enabled attributes get different treatments quite hard make sense honest list preregistered booleans render key key unknown booleans render key means custom attributes expected consider empty string true statement hard reason since languagelibrary actually cast empty string true statement making quite implicit behaviour preregistered boolean attributes behave differently unknown ones quite unexpected believe would quite simplecommon inexperience developer confused boolean attribute hard differentiate normal string attribute ca nt checked false true thus reliable way right would manually declare booleans strings hardcoded userdeclared accepted values myboolean true false instead elegant standard boolean promotes unstableunreliable code proposed api look like sake userfriendliness code stability overall safety would suggest changed future proposal would handle booleans unless require documented custom default value sake compatibility boolean attribute declared render key true even better key true improved performance passing native implementation declared nt need render", "num": "7362", "d": "1/2018"}, {"title": "using isandroid check adding composition event listener vmodel", "body": "problem feature solve code talking isandroid check added commit since event listener added enabled device pc wonder vue need think check proposed api look like none", "num": "7361", "d": "1/2018"}, {"title": "ie\u517c\u5bb9\u6027", "body": "", "num": "7360", "d": "1/2018"}, {"title": "\u517c\u5bb9\u6027", "body": "", "num": "7359", "d": "1/2018"}, {"title": "\u5916\u94fe\u8fd4\u56devue\u89e6\u53d1\u4e8b\u4ef6", "body": "problem feature solve proposed api look like", "num": "7358", "d": "1/2018"}, {"title": "watching space delimited path", "body": "thought vue watcher able watch path accessed via edited regex responsible parsing sure break anything sure intention anyway trying parse strings create functions like b example bit confused anyway hope consider change going use privately need commitpull request anyway", "num": "7357", "d": "1/2018"}, {"title": "npm run build getting error", "body": "hello recently started learning vuejs made simple app want build im getting errors saying typeerror requestshortenershorten functionetc uploaded picture easier understanding", "num": "7355", "d": "1/2018"}, {"title": "error compiling template using parsing markdown text vue laravel", "body": "im using parsedown package parsing markdown use blade input pre code triple backtick parsing markdown show error compiling template also page return blank could happen", "num": "7354", "d": "1/2018"}, {"title": "vbind bug", "body": "version reproduction link steps reproduce need click next img look border around img also nt forget read explanation bug img expected expected nothing empty img cause src actually happening appearance gray border", "num": "7353", "d": "1/2018"}, {"body": "would useful custom elements accept either attributes props name adding whole extra amount awesome convenience", "d": "1/2018"}, {"body": "worth noting attribute prefixed legal dom throw taking symbol vue templates nt get way dom usage", "d": "1/2018"}, {"body": "although interestingly dom element starts attribute like html string attribute gets parsed forbidden set via example", "d": "1/2018"}, {"body": "great idea consider", "d": "1/2018"}, {"body": "reactive changing caused rerender happens pull latest value b well reactive means mutating value trigger rerender", "d": "1/2018"}, {"body": "role child component component wrapper sth like", "d": "1/2018"}, {"body": "reemit child passes prop remember syntax sugar", "d": "1/2018"}, {"body": "sync across multiple layers bad practice anyway unless coupled components used app context consider using global state management solution", "d": "1/2018"}, {"body": "looks like reused component keeping event listeners workaround moment add attribute one components", "d": "1/2018"}, {"body": "checking git version looks like already fixed thanks reporting edit duplicate", "d": "1/2018"}, {"body": "well ca nt work sfcs processed build time javascript code component run later runtime browser", "d": "1/2018"}, {"body": "ca nt even considered enhancement future could possible way achieve ca nt possible", "d": "1/2018"}, {"body": "ca nt even considered enhancement future simply logically impossible could possible way achieve sure context want something like sure something similar stitched together would question forumvuejsorg suggest start discussion topic information requirements feature wo nt happen would would happen vueloader vue would thewrong repository anyways", "d": "1/2018"}, {"body": "nt put script js file use several components", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "misunderstanding capturing event effect interceptnig event triggered nested child element use capture element triggered event real effect see mdn topic event listeners attached event target event target phase rather capturing bubbling phases events target phase trigger listeners element order registered regardless parameter mode works browsers dont think work around behaviour gets vote", "d": "1/2018"}, {"body": "nt understand want making feature request please make proper one", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "hm indeed odd completeness version using prop updates", "d": "1/2018"}, {"body": "linusborg nt think anything wrong going prop used template root instance normal render changes matter update comes", "d": "1/2018"}, {"body": "yeah ok update twice row nt make sense", "d": "1/2018"}, {"body": "especially since updates nt access prop child see fiddle", "d": "1/2018"}, {"body": "mmh point showed maybe nt see correctly bad", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "decademoon looks like nt need maintain js vuecomponent checkbox template value checked unchecked props value type boolean default false methods toggle emit input thisvalue gives additional control eg html allows maintain model changes outside component mean emitting event nt mean state changed indicates change full control believe exists", "d": "1/2018"}, {"body": "oevgeny thank response solution wo nt allow component used without check fiddle see checkbox component still toggled without requiring state specified hence necessary", "d": "1/2018"}, {"body": "checkbox probably bad example ca nt imagine use case want checkbox without better example would tabs component sometimes nt care selected tab component maintain state situations need control selected tab parent component prop binding needed", "d": "1/2018"}, {"body": "solution wo nt allow component used withou exactly think ok want components datastate driven want control outside create uncontrolled one utilizing controlled checkbox note nt prop means pass initial value ca nt use hand also emits input event listen changes gives us cleaner separation checkbox state mix controlled uncontrolled outside state one components example becomes unclear state use like shown make sense better example would tabs component approach used driven components guess", "d": "1/2018"}, {"body": "component nt new component wraps necessary state duplicate props forward emitted events order fully mimic checkbox bad example lot components complex nt checkbox wo nt methods checkbox", "d": "1/2018"}, {"body": "believe controlleduncontrolled input something nt mixed usage example provided uncontrolledcheckbox component nt checkbox yes nt hand need generic component checkbox could wrap one time set use explicitly know checkbox although nt solve problem props routing", "d": "1/2018"}, {"body": "think achievable userland via global mixin need manually set watchers provide additional keys", "d": "1/2018"}, {"body": "mixin created automatically update prop value response event emitted component demo js vuemixin created optionsprops const prop objectkeys optionsprops const config optionsprops prop const checkbox template value checked unchecked props value type boolean default false syncon input methods toggle emit input thisvalue vue output warning prop mutated", "d": "1/2018"}, {"body": "disable console error like sweat js const error consoleerror consoleerror gt prop value consoleerror error", "d": "1/2018"}, {"body": "decademoon updated implementation support mapping prop another field added case internal state could sync state provided parent component see", "d": "1/2018"}, {"body": "solved elegantly using computed setter vue vuecomponent checkbox template internalvalue checked unchecked props value type boolean default false computed internalvalue get return thisvalue set v emit input v methods toggle thisinternalvalue thisinternalvalue", "d": "1/2018"}, {"body": "posva component wo nt work without done hide emitting input event setter make writing controlled components easier since nt litter throughout code still original problem needing use everywhere wanted avoid first place oevgeny believe controlleduncontrolled input something nt mixed agree think settle making components controlled even means need use make work even nt plan using data parent component thank help everyone", "d": "1/2018"}, {"body": "prop getting set changing definition template fixes issue want change vue behavior pass prop see documentation model information", "d": "1/2018"}, {"body": "\u4e0d\u8981\u7528 issue", "d": "1/2018"}, {"body": "vue line vue settimeout \u6539\u6210 settimeout", "d": "1/2018"}, {"body": "\u53d1\u73b0 vueconfigdevtools \u6539\u6210 settimeout", "d": "1/2018"}, {"body": "looking like custom renderer", "d": "1/2018"}, {"body": "couple considerations using custom renderer resolution use case api design allow nodes analogue xml tags eg rendered output tag name possibility run custom renderer alongside standard renderer eg using standard vue renderer create canvas element dom use custom one scene would great able use existing vue devtools custom renderer otherwise fine suggestion future solution thank time edit looking proposed api perhaps would possible implement argument differently custom renderer accepts constructor function etc first point may need consideration", "d": "1/2018"}, {"body": "reproduction please", "d": "1/2018"}, {"body": "fyi video accessible", "d": "1/2018"}, {"body": "link weibo link china upload videos vk try link posva", "d": "1/2018"}, {"body": "lol case appreciate somebody test nt devices", "d": "1/2018"}, {"body": "also seeing webview android transition finishes quickly flickers complete also first link video works takes bit time load also similar seeing", "d": "1/2018"}, {"body": "also upload video vimeo try posva", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow please provide minimal repro reporting bug", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "stateful filters bad idea explicitly removed vue method calls refers reactive state update automatically either state reactive bug believe bug please open bug report reproduction", "d": "1/2018"}, {"body": "method refer reactive state wanted use global value way restart method const storemixin beforecreate const options options const translatemixin methods translate value return storetranslate value value", "d": "1/2018"}, {"body": "define reactive property translate method see", "d": "1/2018"}, {"body": "thanks forceupdate worked component new vue instance", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "expected need pass object realising note docs though create pr", "d": "1/2018"}, {"body": "understood thanks much", "d": "1/2018"}, {"body": "posva would happen know possible vueloader", "d": "1/2018"}, {"body": "nt written code handles functional components vueloader think blakenewman sorry nt know", "d": "1/2018"}, {"body": "think intentional vue warning ignored scenarios use instead eg vuerouter", "d": "1/2018"}, {"body": "unfortunately warnings nt come stack traces", "d": "1/2018"}, {"body": "documentation referring boolean attributes sure want add magic specific attributes removed value moment use workaround js vuecomponent myprogress functional true render h data gt numberisfinite dataattrsvalue delete dataattrs return h progress data", "d": "1/2018"}, {"body": "workaround implicitly removing falsy values would breaking change nogo time adding modifier seems like overkill since niche use case also explicit control condition attribute removed", "d": "1/2018"}, {"body": "template compiled js codes function changed called function called", "d": "1/2018"}, {"body": "jounqin delete loop template fragment see console happen also changed different result loop tempate influence method strange", "d": "1/2018"}, {"body": "misunderstanding question removed template vue render changes vue knows reference template", "d": "1/2018"}, {"body": "expected calling method template vue call every time renders also come handy", "d": "1/2018"}, {"body": "posva jounqin seems behavior react framework methods relationship data model method recalled data model change little strange change title function way also console twice", "d": "1/2018"}, {"body": "exactly react", "d": "1/2018"}, {"body": "yes mistakes test react framework behaviorand one question axios scenario fact want load data sync request render response template one time need rerender changed data idea", "d": "1/2018"}, {"body": "please follow reporting issue guidelines", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "valid object way vue know intended", "d": "1/2018"}, {"body": "generating fails older browsers fyi arguments", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow open bug report please add repro provide different versions expected vs actually happening", "d": "1/2018"}, {"body": "even better way intercept hooks components something like set function one place get called beforeafter component hooks modify vuex store update templates however like show loading progress", "d": "1/2018"}, {"body": "doable global mixin point anything want hook well count", "d": "1/2018"}, {"body": "hook defined guaranteed run hooks individual components", "d": "1/2018"}, {"body": "called", "d": "1/2018"}, {"body": "case would set false set true component initialization work done rely templates would already true even though component hook nt completed would nt work solve problem", "d": "1/2018"}, {"body": "use different mixin make execute", "d": "1/2018"}, {"body": "demonstrates exact problem want hidden end set true beginning even using mixin suggested set false beginning true hook component finished", "d": "1/2018"}, {"body": "oh sorry meant using instead updated snippet want trigger timeout may consider using promises waiting finish able achieve method showed please move conversation discord forums want help", "d": "1/2018"}, {"body": "try codepen example nt work either timeout example would normally asyncawait request codepen nt support nt work locally asyncawait either may consider using promises waiting finish mean component issue component nt set vue set global mixin nt working", "d": "1/2018"}, {"body": "\u53ef\u4ee5\u770b\u770b vm attrs", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "javoski attrs\u6ca1\u6709\u5305\u542b\u901a\u8fc7vmodel\u4f20\u5165\u7684value", "d": "1/2018"}, {"body": "ziqiangwang \u5bf9 component \u7684 \u548c dom \u5143\u7d20\u7684 \u548c \u5b83\u4f1a\u5305\u542b \u7684 value", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "thank kind words find donate project cheers", "d": "1/2018"}, {"body": "ca nt run right code write consolelog print vue component sure current component instance docs vueclasscomponent state work", "d": "1/2018"}, {"body": "ran linusborg said vue instance closing since something need fixed one libraries fix anything vue core", "d": "1/2018"}, {"body": "oki", "d": "1/2018"}, {"body": "something need fixed one libraries posva nt think real fix array functions behave classes assigned class properties", "d": "1/2018"}, {"body": "maybe thinking transform code passing babel plugins therefore black magic", "d": "1/2018"}, {"body": "dealing tables html templates general careful browser html vue gets parse take vue take look html see vue sees gets templates help understand one template nt work creates documentfragment think fixable nt checked behaves consistently among browsers", "d": "1/2018"}, {"body": "use case attributes starting numeric chars doubt use case worth extra handling", "d": "1/2018"}, {"body": "sorry clear issue nonalphabetic attributes numeric attributes one use case nonalpha attributes second use case amazing forms one encode valid attributes use cases indeed academic motivated wanting abuse attributes kind cheap dsl certainly commercial usage know possible ultimately agree nonalpha attributes marginally useful shall close puppy thank much time", "d": "1/2018"}, {"body": "price progress compliant parsers create dom element attributes subsequently js unsettable via setattribute following workaround albeit slower accesses full possible attribute namespace using setattributenode function attrnode ele attr value", "d": "1/2018"}, {"body": "working expected attributes set names purpose works older browsers", "d": "1/2018"}, {"body": "posva okay fine nt really suggesting solution appropriate one", "d": "1/2018"}, {"body": "reason muted autoplay browsers require value nt something working tested mobile browsers everything worked fine", "d": "1/2018"}, {"body": "posva safari iphone nt recognize throws notallowederror try play", "d": "1/2018"}, {"body": "tested safari worked correctly could give information please versions could share stackstrace", "d": "1/2018"}, {"body": "posva actual use case navigatormediadevicesgetusermedia mediastream true work ios devices ipads particular iphones iphone users day telling nt work reason muted autoplay browsers require value muted muted makes sense default behavior eg bare nt understand nt able override", "d": "1/2018"}, {"body": "case may probably related something else feel free come back manage get information ps need set codesandbox simple repro much faster use jsfiddle", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "example without vue thing happens fix need call native method select text case vue additionally need call method handler dom updated", "d": "1/2018"}, {"body": "sqal said", "d": "1/2018"}, {"body": "related answer personally think add development would potentially create problems would make debugging harder also necessary keep sync updating html would take quite effort questionable gain aware vue devtools make vue apps debugging much easier", "d": "1/2018"}, {"body": "posva actually quite easy add feature already using development function createelement function bind", "d": "1/2018"}, {"body": "mmh weird may something wrong version without vue mimics vue also fails chrome think layout calculation may enforcing values early thus triggering transition", "d": "1/2018"}, {"body": "truly strange maybe chrome bug vue example issue safari firefox solution wrap child component additional div seems solve problem wonder bug solution", "d": "1/2018"}, {"body": "maybe chrome triggers event layout calcultion", "d": "1/2018"}, {"body": "vue example nt limited chrome though happening firefox safari able solve wrapping child component another parent div makes think might vue bug solution", "d": "1/2018"}, {"body": "props meant readonly able suppress warning acknowledging sometimes acceptable otherwise may want wrap vuetable component best option contact author send pull request create fork wrap component use template sometimes render function may make things easier", "d": "1/2018"}, {"body": "component wrapped via mixin issue stems wanting edit template editing template use different prop name wo nt work understand idea read actually conforms render defining prop based another prop however default use another prop initialized moves setting little lifecycle using key idea solution effectively anything lets set default later lifecycle without triggering warning cover use case tried making pull request got lost code lifecycle witch decided make issue open discussion first keep thinking may open another issue pull request example discussion manage add", "d": "1/2018"}, {"body": "talking pull request vuetable vue wrapping component done via mixin wrapping code showed template vue myvuetablevue", "d": "1/2018"}, {"body": "guess using example vuetable bad idea really related problem nothing could add pull request helps also wrap described well issue want adjust styles especially case using css modules nt think would also happen scoped css though needs context active component parent brings interesting easy get around issue needing override component keeping template intact see example first message wrapping prop div passes css module class normally would think override prop vuetable set default since readonly see prop within default function mean end day looking suppress warning dev set default prop value point values props available used defer prop props set", "d": "1/2018"}, {"body": "nt work automatically correct neither work automatically nrmoal components set", "d": "1/2018"}, {"body": "linusborg nt really understand answer could provide complete working example please tried implement vmodel functional component ended far complex implementation one assignment", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "1/2018"}, {"body": "vshow bind none boolean value", "d": "1/2018"}, {"body": "definitely something convenience exactly like using", "d": "1/2018"}, {"body": "mounting components work want properly test vue components recommend check want render components server check please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "adding directly templates would big overhead template compilation also runtime handle async data completely doable userland scoped slots though created small package basic functionality showcase", "d": "1/2018"}, {"body": "feature request", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "answer", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "vue nt handle kebapcase camelcase attribute values expressions prop attribute names nt makes sense attribute values forced lower case browser", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "even calling help case hmm apparently made mistake component version guess need call specific comoponent root instance fixes issue version without custom component still seems need even call forceupdate make template rerender", "d": "1/2018"}, {"body": "workaround moment change value force render works noncomponent approach edit another workaround would disable checkboxes unticked easiest one force checked status checkbox works cases unsure something component scenario since browser toggling state make sure prop nt change therefore component never rerenders afraid may scenario noncomponent version nt render state changed", "d": "1/2018"}, {"body": "workaround mind manually trigger data change js ontogglestate key event const checked eventtarget thisstate key checked nexttick gt thisstate key true", "d": "1/2018"}, {"body": "setting value checkbox setting value seems work scenarios", "d": "1/2018"}, {"body": "missed without touching dom part previous comment", "d": "1/2018"}, {"body": "hi posva thank solution settings indeed fixes issue yeah also wonder whether improved inside vue react somehow least explain users docs current behaviour confusing say even working vue almost years could nt figure another example opinion user easily fall trap simple text field want control value field accept case reproduce issue follow steps set new value value goes back expected set time stays would expect", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "sorry akryum opened new one p closing", "d": "1/2018"}, {"body": "likely issue parcel ts plugin vue plugin working together properly vue core problem please open issues related projects instead", "d": "1/2018"}, {"body": "ok opened issue", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "use text shown put different tag first one shown", "d": "1/2018"}, {"body": "one thing causing fact vue renders one root node try html lt div gt lt div gt labletitletwo lt div gt lt div gt labletitle lt div gt lt div gt", "d": "1/2018"}, {"body": "api", "d": "1/2018"}, {"body": "would even better nt see need nt scale since nt really know show method comes yes know comes mixin explicitly included component idea mixin reuse behaviour across components explicit transparent way would apply things like hooks want namespace functions related component want use mixin add namespace easily way proposed dynamic name using function js function buildnotificationmixin namespace return created namespace namespace show gt componentvue const component mixins buildnotificationmixin notifications use computed group things related", "d": "1/2018"}, {"body": "nt vue core mixin mechanism already flexible enough", "d": "1/2018"}, {"body": "tests vue may need run phantomjs based tools like scrapers backwards compatibility", "d": "1/2018"}, {"body": "strange costs bytes every build maybe support delete code building time rly dont need carry users", "d": "1/2018"}, {"body": "wait carry polyfill case vuejs site scrapped increase bundle size every build case nt understood", "d": "1/2018"}, {"body": "evan said backwards compatibility would breaking change wont mjor release plan one near future general", "d": "1/2018"}, {"body": "fyi extra size small enough worth happens multiple things also supported browsers like internet explorer", "d": "1/2018"}, {"body": "site built vue site scraper built phantomjs used able scrape site patch update site suddenly break scraper tradeoff bytes vs use case bytes vs backwards compat", "d": "1/2018"}, {"body": "nothing vue number big", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "already returns promise specify callback", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "bet transformation done vueloader", "d": "1/2018"}, {"body": "would useful library authors might use spec create modules interesting things example tool generates custom elements vue components specs internal rendering custom element content rendered defined component people may try want map custom element attributes object properties based definition need define standardized custom element classes problem custom element class defined asynchronously means library author simply export class synchronously provide promise callback end user receive class order use would ideal", "d": "1/2018"}, {"body": "foo component spec mutated tested code samples poi produces array logs please make sure error nt come one dependenciesloader provide repro opening bug report", "d": "1/2018"}, {"body": "using vuecli make basic app part code think triggers sure yet let investigate push get desktop", "d": "1/2018"}, {"body": "alright found causing simple reproduce vue export default props bar js import foo foovue import vue vue consolelog foo props sync fooprops bar vueextend foo mutates consolelog foo props sync fooprops bar type null async case turns someone relying component spec may control someone else extends therefore becomes async problem without deterministic way run logic happened", "d": "1/2018"}, {"body": "forgot say passed message mutating original component come back confirmation", "d": "1/2018"}, {"body": "one solution normalize vueloader component definition already normalized state imported", "d": "1/2018"}, {"body": "made new issue", "d": "1/2018"}, {"body": "closing favour", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "reopened", "d": "1/2018"}, {"body": "expected side effect way functional components work since functional components nt instances immediatly evaluated parent scope generated vnodes passed slot content means component already run rendered normal component like immediatly rendered parent context passed component vnode rendered render cycle functional component ca nt inject content provided already run content provided indeed documented clearly context provideinject generally another side effect example functional component main instance example reason functional component rendered parent render cycle would kind open issue docs team take care would course also open pr first shot documenting feel", "d": "1/2018"}, {"body": "another side effect example contextparent functional component main instance example ah see thank detailed response although nt expect behavior mismatch would great update docs according added proposal though see linked issue", "d": "1/2018"}, {"body": "using array index doesnt work changes uniquely identify distinct item array use real id", "d": "1/2018"}, {"body": "please open issues using guide", "d": "1/2018"}, {"body": "\u624b\u52a8\u827e\u7279\u5927\u4f6c", "d": "1/2018"}, {"body": "\u5728 test coverage", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "\u7ed3\u5408 chromedevtools", "d": "1/2018"}, {"body": "hmm looks like pr nt fix supposed fix curious around year since also looks like nt take account ordering ordering nt impact", "d": "1/2018"}, {"body": "feel free open pr docs repo propose improvement", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "called data changes virtual dom rerendered patched means exactly means generated ed virtual dom node applied real dom tree hand api means method generate virtual dom mean drawn real dom admittedly overloaded chrisvfritz idea", "d": "1/2018"}, {"body": "think indeed mismatch since description indicates mutate state applied entails hooks called virtual dom render functions called give proper thought next week", "d": "1/2018"}, {"body": "saw updated guys really think good idea resolving simply revising wording api docs nt think first never exactly meaning target following term ie dom especially vue using virtual dom people coming react background always consider running function using terms generating virtual dom nodes course unless vue wants unique one secondly decide take path updating docs match current behavior api description needs revised also lifecycle diagram link since two places consistently indicate like current behavior nt believe deliberately designed called hence functional bug instead documentary allowed changeupdate states component without triggering additional lifecycle hook much less useful developers point view common case developers matter coming react angular updating states components per changes props know called various cases like state changed props changed even parent forcing update react similar separate hooks allow developers detect changes even update states calling link however unlike react vue one lifecycle hook documented able detect changes update states becomes hopeful place suppose perform common practices", "d": "1/2018"}, {"body": "nobelhuang nt worry nt considered resolved yet fault issue accidentally closed nt remove pr discussing problem detail herringtondarkholme", "d": "1/2018"}, {"body": "thanks passionate discussion doc issue accidentally closes reopen issue since still review api description needs revised also lifecycle diagram think beforeupdate called render give example called beforeafter render give significant difference old doc said state change occur however think might inappropriate state changing lead infinite loop whether called render however disallow state changing dispatch action flux store words triggering rerender wonder matters call beforeafter render allowed changeupdate states component beforeupdate changing state use case discussed suspect proper usage react recommend course vue nt want unique vue one lifecycle hook beforeupdate becomes hopeful place suppose perform common practices real proposal right difference prop change topdown component execute lifecycle trigger state change execute finally one state change however lead infinite loop request use perform state change", "d": "1/2018"}, {"body": "herringtondarkholme thanks comments give example called beforeafter render give significant difference surely said state changing disallowed nt matter called doc diagram indicate allows tried found led infinite loop calling order matters way also tried changing states beginning know wrong operation see circumvent situation turned infinite loop calling order matter also ticks given never read vue source code correct wrong changing state use case nt think changing state running use case react still provides allow operation developers need yes think keep current behavior would better new lifecycle hook like request use watch perform state change actually curious could nt find filed bugs regarding weird behavior filed guessed mentioned people could use achieve goal cases however think component rerendered changed could also parent forcing update even changed approach sufficient addition one uncommon case many say want state changes matter prop changed way specify props watched explicitly anyway think functional bug would good like lifecycle thanks guys awesome works", "d": "1/2018"}, {"body": "doc diagram indicate allows imho whenever called new doc removed suggestion beforeupdate executed beforeafter render differs change state probably issue yet reported please provide concrete example need change state beforeupdate nt think changing state render running use case react provides componentwillreceiveprops allow operation developers need agree useful indeed uncommon component large prop set eg bridging component google map seen developers uses helper function dynamically watch props change say summarize discussion list points whether allow state change call vue provide helper wrap thread", "d": "1/2018"}, {"body": "okay seems provide couple examples came examples randomly example jsfiddle imagine timer initially set years months days hours minutes seconds respectively count values also changed anytime want start new timer however new timer starts counting would short pause signal countdown indicate currently paused counting see whenever matter time props timer changed need update states like could done easily efficiently state changing allowed course achieve result using might invoked times time props change example jsfiddle imagine jigsaw puzzle game board component host puzzle pieces pieces added board board could show different background color hint player indicating heshe approaching goal see actually changes detected component state change based reactive parent forcing rerendered convenient update state course know use method work value replacing use used many times template method would called many times one render process case know write function alleviate nt think easier feeling lost point thread wrap want state api doc lifecycle diagram consistently indicate change states nt think initially designed allow hence think functional bug", "d": "1/2018"}, {"body": "progress", "d": "1/2018"}, {"body": "hi fujisunny able reproduce issue ie following code vue export default props value type string render h return h textarea input e gt emit update value etargetvalue still facing issue suggest open github repro upload problematic code give repo address back us", "d": "1/2018"}, {"body": "jkzing still facing problem push reproduction code ie version hope reproduction would help", "d": "1/2018"}, {"body": "provide little bit background think related vue also sharing cpomplete project us minimal runnable reproduction", "d": "1/2018"}, {"body": "ho sorry maybe report vue template thought would config could allow facebook iframe load site", "d": "1/2018"}, {"body": "would ask question post makes think related template", "d": "1/2018"}, {"body": "probably use forum aka help implementing feature", "d": "1/2018"}, {"body": "linusborg said please use whole project repro boil repro feel free open new issue repro", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "hopefully screenshot help reproduce configfiltercount visible items configitemcount existing vuex", "d": "1/2018"}, {"body": "supposed attached screenrecording well seems got attached mail thread sorry anyway seemed lil bit laggy trying freeze ui thomas kle\u00dfen notifications githubcom image bildschirmfoto um hopefully screenshot help receiving subscribed thread reply email directly view github mute thread telefon", "d": "1/2018"}, {"body": "thx quick reply add screenrecording tidy code bit", "d": "1/2018"}, {"body": "click toggle showinfo reflects itemcomponent wich renders stuff click jop nope times buttons nt exist app assume referring add toggle counter main counter shows items right toggle takes around seconds nothing unusual situation generally vue fact needs time updating elements rendering list items never good idea justifiable common use case opinionexperience real problem situation specifically getter performance sinkhole items called times running times array items normalize data keeping ids array content object keyed id lookups much much faster adding since returning function getter update components everytime add remove items really cachable like normal getters suspicion would much rendering getter calculation killing performance short bug problem implementation sidenote machine running", "d": "1/2018"}, {"body": "linusborg refactoring prototyp bit solve real problem right assume real problem amount data reactivness clients handle long story short dev everything fine macbook production tablet ui got freezes items render expected build performance prototype played bit got freezes macbook started panicking thats wrote issue apologies investigated seems problem limitations device right change prototype something like benchmark devices abilities want know affects itemcount usecases affects dummycount usecases affects filtercount usecases usecases change single itemdetailcount showcounter onoff items vshow instead vif add itemdetailscount press button increment counter done next thing want showing time freeze include benchmark button witch test defined values three variables provides graph somehow decide much items target", "d": "1/2018"}, {"body": "sorry items expected behavior bug fixed expect us help tune performance app becomes support request simply nt issues rendering many items almost always call bad idea especially mobile ddevices suggested consider using virtual scrolling library", "d": "1/2018"}, {"body": "please implement like", "d": "1/2018"}, {"body": "edge case people encounter nt need added vue core since extracted single function separate package", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow nt use full project repro take look", "d": "1/2018"}, {"body": "misusing usually static string reference like array using array see also", "d": "1/2018"}, {"body": "jounqin got source code insert ref vfor tag parent children mean children ref record array know good solution nt know fire children function parent function", "d": "1/2018"}, {"body": "define element children inside difference repeated inside matter repeated self change code use work correctly", "d": "1/2018"}, {"body": "thanks explanation jounqin", "d": "1/2018"}, {"body": "users interface augmenting already please read official typescript doc", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "alias sure syntax jsx pass spread whole object something working work everything looks fine fire issue also think could improve docs adding sample code guide make sure open pr", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "1/2018"}, {"body": "already handle events callback well magic parameter event works native events ca nt implement normal way custom events also work custom events nt know trying vue already know angularjs normal use vue tools therefore different implementation use forum discord server want share thoughts devs get feedback", "d": "1/2018"}, {"body": "oh definitely documented seeing doc vm emit event arguments string event args trigger event current instance additional arguments passed listener callback function event handling listening events method event handlers methods inline handlers nothing else", "d": "1/2018"}, {"body": "may want pr guide end js function passing objects another js pattern", "d": "1/2018"}, {"body": "ok understood vue support specifying param name support full js spec surprise template define arrow function template extract first object param simulate named params event works arrow function template edit straightforward way guessing works", "d": "1/2018"}, {"body": "support full js spec surprise template define arrow function template extract first object param simulate named params nt support reuses code makes browser execute yes ways please hijack issue post usage question use appropriate channels suggested also take look source code generates function provide one", "d": "1/2018"}, {"body": "generates function provide one supported files still think good idea support named params natively less confusing less code need write arrow function straightforward maybe allow using raw string templates please hijack issue post usage question use appropriate channels suggested also take look source code generates function provide one ok", "d": "1/2018"}, {"body": "possible duplicate", "d": "1/2018"}, {"body": "asking way using templates", "d": "1/2018"}, {"body": "looking way nt work see slot template parent slot data number grandchild", "d": "1/2018"}, {"body": "simply need repeat pattern used", "d": "1/2018"}, {"body": "way via templates", "d": "1/2018"}, {"body": "nope least moment closing duplicate", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow also related vuerouter turns bug make sure open issue boiled reproduction", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "dot think want put additional logic tagname string", "d": "1/2018"}, {"body": "extra parsing hurts performance even users use feature add h wrapper though", "d": "1/2018"}, {"body": "ok determined tag name tag skipped closed sorry inconvenience", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "receive data changed callback watch multiple properties one call know one triggered watcher", "d": "1/2018"}, {"body": "please precise opening feature request fr short translator gives meaningless sentences done multiple times", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "referring already namespace events vue gives plain event familiar anyone already dealt native events js", "d": "1/2018"}, {"body": "coming object passed reference change deep copy object via jsonparse could via objectassign external library see code achieve desired result nt know better method making deep copy case take look vuex way store data unrelated components could also update modalsetting object modal component click save", "d": "1/2018"}, {"body": "antoninarquey said bug", "d": "1/2018"}, {"body": "alright works thanks", "d": "1/2018"}, {"body": "please make sure boil repros strict minimal reporting bug error looks like providing transitionduration animation fail ever styles initialized empty string default may want know forum discord server lot people active ask questions", "d": "1/2018"}, {"body": "made repros bug look please thanks please clone project npm install amp npm run unit show errors posva remove directive vloading error", "d": "1/2018"}, {"body": "still many things like vuerouter elementui sure used though please use forums discord first come back find bug", "d": "1/2018"}, {"body": "javascript works want pass copy need copy", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "embedding jsx parsing inside template parser lot work plus related issues regarding syntax highlighting tooling support etc nt think justifies use case", "d": "1/2018"}, {"body": "well validator function could nicer sent builtin errorwarn handler get nice component trace something likely add", "d": "1/2018"}, {"body": "bind value objects compared using shallow equality need give option unique property differentiated", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "issues bug reporting ask questions discord forums props readonly trying mutate thus change input value prop modified value restored next update use data property computed setter instead computed setters prop sync modifier", "d": "1/2018"}, {"body": "\u628a\u8fd9\u4e24\u4e2a\u5143\u7d20\u5305\u5728\u4e00\u4e2a\u7ec4\u4ef6\u91cc\u5c31\u884c\u4e86", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "nt play well virtual dom render function approach ya pen vue would require major changes underlying architecture something likely nt want point opinion curiosity kind app building relies heavily inserting html like perception escape hatch edge cars something one replies regularly experience", "d": "1/2018"}, {"body": "using prismic headless cms prismicdom library returns field values html course example use illustrate make use triple curly braces prismicdom returns field values cms html string frontend components structure values way eg imgimg p love know better way approach though", "d": "1/2018"}, {"body": "joining potential html together html", "d": "1/2018"}, {"body": "maybe make work tags", "d": "1/2018"}, {"body": "wo nt work", "d": "1/2018"}, {"body": "admittedly hacky less performant way would render vue instances pievce html extract vnodes use dnymaically created functional component display ugly works edit updated fiddle reusable", "d": "1/2018"}, {"body": "thanks linusborg akryum really helpful think go akryum solution see takes definitely works example shown report back gets tricky sophisticated use case", "d": "1/2018"}, {"body": "\u53d1\u81ea\u6211\u7684vivo\u667a\u80fd\u624b\u673a andyqin notifications problem feature solve flutter sdk \u662f\u4e00\u4e2a\u53ef\u4ee5\u7528\u5355\u4e00\u4ee3\u7801base\u8de8\u4e09\u4e2a\u5e73\u53f0 android ios fuchsia proposed api look like \u6211\u7684\u5efa\u8bae\u662fvue\u53ef\u4ee5\u5728flutter \u4e4b\u4e0a\u5f00\u53d1vue receiving subscribed thread reply email directly view github mute thread", "d": "1/2018"}, {"body": "\u672a\u6765\u53ef\u80fd\u66f4\u591a", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "weex \u548c nativescript", "d": "1/2018"}, {"body": "weex\u5f3a\u70c8\u63a8\u8350", "d": "1/2018"}, {"body": "solved put custom directive instantiation main vue instance still strange works yet generates warning", "d": "1/2018"}, {"body": "need use option looks like option", "d": "1/2018"}, {"body": "please open issues involves party libs repos first", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "sorry difficulty understanding part done scoped slots try explain assume want passing props cloneslot component directive think want props passed instance formrow component difference nt want pass props like html want happen instead props passed kind background could use", "d": "1/2018"}, {"body": "want happen instead props passed kind background exactly props generated component user nt need specify template last example user knows nothing props note nt exist component proposed way clone default slot n times rescursively put proposed api look like section maybe nt given enough context problem trying solve trying build set generic components vuejs handle django formsets purpose split problem basically three components well defined responsibilities responsible generating whatever user provides children component example would generate n components properties exclusively generated passed whatever defined children precise need pass row index initial data prefix boolean value component charge cloninggenerating whatever defined children example inputs props need passed children generated component exclusively also responsible hidingdisplaying delete button accordingly acts proxy component mediator example two components functionality irrelevant trying explain mention think generates children nothing regular text input field notifies changes parent still difficulties understanding scoped slots solves problem without without specifying etc template template raised issue read people solutions similar use cases vuejs forum websites fall back implementing render function plus custom js function clone vnodes never seen something different scoped slots provideinject assumed way go felt use case simple enough yet way code straightforwardeasy way even implementing render function currently experimenting path got stuck call createelement pass custom props slotsdefault think possible correct wrong could something like still need provide detailed implementation trying achieve set jsfiddle nonworking implementation comment everything detailed way discuss proposing scopedslot plus pi fits use case thanks time update formsets note added better expose trying achieve working moment hope piece code better exposes difficulties facing come solution also reread pi documentation due suggestion problem provide prop generated vfor think nt possible thing right pi designed inject objects wellknown point injection trying provideinject something generated template", "d": "1/2018"}, {"body": "thanks detailed input something work short time right trx answer long form later", "d": "1/2018"}, {"body": "values always booleans explicit imo include whitelist aria attributes impractical modifier seems unnecessary cast", "d": "1/2018"}, {"body": "escaping using happens html put js nt work vue escaping found working", "d": "1/2018"}, {"body": "see thanks clarification", "d": "1/2018"}, {"body": "ca nt pause css transitions afaik use js transitions instead certainly possible depoending animation lib used outside scope vue solved party library developer", "d": "1/2018"}, {"body": "unfortunately nt think even technically possible", "d": "1/2018"}, {"body": "copy array modifying next time please ask kind questions forum discord channel stackoverflow", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "transition applies direct child div rather use also reproduction code functional issue fullfil requirements", "d": "1/2018"}, {"body": "thank solved problem", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "think correct higher priority nt mean priority calling behavior mixin extends seems", "d": "1/2018"}, {"body": "order seems correct think classes always call right beginning would also breaking change feasible right", "d": "1/2018"}, {"body": "posva difference maybe doc needs modified", "d": "1/2018"}, {"body": "contributions improving docs always welcome make sure open pr think could clearer", "d": "1/2018"}, {"body": "\u8fd9\u4e0d\u662f feature issue", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "please read use latest vue version using example", "d": "1/2018"}, {"body": "sqal awesome thanks", "d": "1/2018"}, {"body": "thanks report js engines nt optimize fnbind past record fact comment js engines constantly evolving implementation slower haha since functionprototypebind used js world believe js engines optimize native usage like seems better use native one", "d": "1/2018"}, {"body": "issues concerning documentation opened", "d": "1/2018"}, {"body": "update ok misled vue document link thinking written enough understand bidirectional binding js vmodel ischecked const mycheckbox props value render h return h input attrs type checkbox domprops checked thisvalue change e gt emit input etargetchecked js vbind checked const props checked render h return h input attrs type checkbox domprops checked thischecked change e gt emit input etargetchecked \u6211\u88abvue vmodel\u5176\u5b9e\u662f", "d": "1/2018"}, {"body": "warning message added able see", "d": "1/2018"}, {"body": "ok want dynamic input type", "d": "1/2018"}, {"body": "actually think warning nt emitted inputs dynamic type binding may skip conflict check actual available yet compiler made pr resolve issue", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "thank hard work", "d": "1/2018"}, {"body": "vuecli installed", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "reinitialize existing project", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "1/2018"}, {"body": "moved", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "please post template related issues template repo", "d": "1/2018"}, {"body": "sorry bad", "d": "1/2018"}, {"body": "nt really see duplicated scoped slots name necessary even good idea", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "know forceupdate used force update ui inter computed data see also", "d": "1/2018"}, {"body": "jounqin pointed force view rerender computed properties computed property contain external nonreactive variable time makes impure", "d": "1/2018"}, {"body": "known limitation type system manually annotate computed properties likely wontfix otherwise would already implemented part herringtondarkholme ktsn might able provide insights", "d": "1/2018"}, {"body": "documented also issue tracking underlying type system improvement however evan said fixed vue side", "d": "1/2018"}, {"body": "herringtondarkholme thanks info keep eye underlying ts issue", "d": "1/2018"}, {"body": "vue nt know element end bound attribute instead property need explicitly bind property using", "d": "1/2018"}, {"body": "confronted something strange vue rescue totally reasonable answer even docs could worth adding note guide somewhere entirely sure thanks quick reply building vue given reason enjoy frontend development", "d": "1/2018"}, {"body": "worth mentioning nt work use using syntax", "d": "1/2018"}, {"body": "well known issue typescript community use webpackrollup workaround esmcommonjs interop issue sadly fix vue community alternatively please patiently await proper interop", "d": "1/2018"}, {"body": "may get answer", "d": "1/2018"}, {"body": "duplicate said jkzing", "d": "1/2018"}, {"body": "way configure instances placed next dom generated component instance would sweeeeeeeeeeet would mean could keep styles cascading child components using shadowdom see comment", "d": "1/2018"}, {"body": "alright thought workaround nt tried yet set vueloader option extract styles using location knowing filename shadow roots duplicates styles shadow root bunch unnecessary styles components least work official solution would great idea yet could", "d": "1/2018"}, {"body": "vue nt consider shadow dom designed way vue move style around know move anyways however insert style right next element mont make work like described article please provide smaller repro next time todo list unnecessary showcase problem save us time said could also handled bundler level maybe loader top vueloader closing since something solved vue core", "d": "1/2018"}, {"body": "posva thanks insight make shorter pen next time thing converting vue component custom element skatejs like nt access style inside sfc may even written sfc general purpose tool looked imported component object nt see style content anywhere miss super helpful tool could easily inject shadow root thought vueloader adding component spec gets exported vue file see imported object could runtime extract rules stylesheet based id inject styles shadowdom heavier", "d": "1/2018"}, {"body": "ah looking nt seem like difficult give go", "d": "1/2018"}, {"body": "components generated designed nonshadowdom usage moment likely alternative loader generates web component directly", "d": "1/2018"}, {"body": "got styles working shadow roots copying global new element inside shadow roots copy rules match components rendered inside given shadow root implemented vuewebcomponent meets requirements vuecustomelement able elements instantiated elements nestable composable elements distribute expected shadowdom elements generated tool otherwise work exactly expect custom element without knowing caring internal implementation uses vue", "d": "1/2018"}, {"body": "expected behavior dom inout elements automatically stringifies anything set property behavior nothing vue", "d": "1/2018"}, {"body": "sorry really scope question specific setup resolved issues issues bug reports originates vue", "d": "1/2018"}, {"body": "solved following langts import vueconstructor vue const vue require vue vueconstructor cast vueconstructor get typings const app new vue template hello world similar different situation using output typescript webpack one similarity op using typescript option something definitely wrong standard import typescript using vue setting ssr node typescript looks like tried number workaround including trying load vueesmjs file via property without success getting exact error op put together reproduction opened new issue", "d": "1/2018"}, {"body": "ran issue understanding vuejs file setting variable like vueclasscomponent vueclasscomponentjs line vueclasscomponent file special case handle missing default export vue works vueclasscomponentjs line unfortunately typescript compiler output special case handling missing default however typescript new option fixes issue set output contains function called handles missing default property properly", "d": "1/2018"}, {"body": "duplicate", "d": "1/2018"}, {"body": "believe fix appropriate setting string really actually ca nt string variables seem bit weird take look think alright simply make code say properties set strings always undefined technically value set value becoming undefined next tick evidenced open node terminal type wordletter terminal output reason error also consolelog wordletter straight try access property via key undefined nt see harm returning undefined", "d": "1/2018"}, {"body": "feel free submit pr adds warning development mode test ofc", "d": "1/2018"}, {"body": "posva wo nt issues reactivity", "d": "1/2018"}, {"body": "set must used object anyways", "d": "1/2018"}, {"body": "yes look warnings implemented tested add warning method", "d": "1/2018"}, {"body": "look vue get ready start working guys", "d": "1/2018"}, {"body": "hi sent pull request issue", "d": "1/2018"}, {"body": "according documentation supposed using way think", "d": "1/2018"}, {"body": "\u5e94\u8be5\u7528function\u4f5c\u4e3aprovide\u7684\u503c \u539f\u56e0\u7c7b\u4f3cdatamustbeafunction", "d": "1/2018"}, {"body": "thanks", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "app grows bigger split components instead cramming methods component", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "\u76f8\u5bf9\u4e8e el \u6765\u8bf4\u53ea\u662f\u4e2a\u4eba\u66f4\u559c\u6b22", "d": "1/2018"}, {"body": "\u81ea\u5df1\u559c\u6b22\u52a0\u4e2a mixin \u5c31\u597d\u4e86\u554a \u4e0d\u8981\u603b\u60f3\u7740\u5f80 vue \u6838\u5fc3\u5305\u52a0\u975e\u901a\u7528\u6027\u529f\u80fd\u6765\u89e3\u51b3\u81ea\u5df1\u7684\u4e2a\u4eba\u9700\u6c42", "d": "1/2018"}, {"body": "\u6dfb\u52a0\u4e00\u4e2a api api", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "problem trying fix see default export vue min js workaround try use import vue vuepropertydecorators way get working keep mind real solution", "d": "1/2018"}, {"body": "thanks works use normal fix deployed", "d": "1/2018"}, {"body": "seems nothing config points module umd build included ts compiler resolving using main field commonjs build need specify mapping using tsconfig", "d": "1/2018"}, {"body": "thanks sorry mistake", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "1/2018"}, {"body": "related vue project need read document popular gesture libs carefully", "d": "1/2018"}, {"body": "\u770b\u4e0d\u61c2\u8bf7\u597d\u597d\u5b66\u82f1\u8bed", "d": "1/2018"}, {"body": "want know gesture library use", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "giving pull request according suggestion", "d": "1/2018"}, {"body": "thanks sounds reasonable suggestion ktsn kazupon op suggests vmodel update value composition happens discussed especially affects japanese input android ime like google chinese input nt exhibit problem android check dates back long ago looks like leave untouched code base yup chinese input stop firing input event composing japanese input correctly fires input correctly set eventiscomposing true however vue uses btw whitey test case almost valuable collected album hehe", "d": "1/2018"}, {"body": "translate english extensive discussion thank reasonable reply", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "prop created template changed every time updated trigger watcher", "d": "1/2018"}, {"body": "jounqin explained using object literal prop binding causes child component think prop changed every render behavior likely improved future manually compare new old values watcher avoid unnecessary updates", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "proposal would handle booleans unless require documented custom default value sake compatibility vue moment attributes need explicit values browsers work probably ie end syntaxes valid boolean attribute declared render key true even better key true improved performance passing native implementation unfortunately browser works attributes always stored strings declared nt need render happens right put nutshell remove current behaviour adding values would break browser support make attributes always string value would differ native html attribute handling ps make sure use lowercase attribute html browser convert anyway", "d": "1/2018"}, {"body": "reading spec boolean attribute without value assigned eg checked implicitly equivalent one empty string assigned ie checked consequence represents true value values true false allowed boolean attributes represent false value attribute omitted altogether two points absolutely blow mind implicit behaviors yuck choice choice anyway helped understand inner logic better thanks", "d": "1/2018"}, {"body": "nt use feature requests ask questions", "d": "1/2018"}, {"body": "since two types provided issue tools", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "\u90a3\u662f windows \u4e0a\u7684 ie", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "special use case application developers design nofitication event sorry framework handle", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "hello issue closed conform issue requirements please use issue helper create issue thank", "d": "1/2018"}, {"body": "datacards array items", "d": "1/2018"}, {"body": "problem solved wujunchuan said used instead look exactly case try use ajaxloader loading images empty images src", "d": "1/2018"}, {"body": "expected please use", "d": "1/2018"}, {"body": "javoski want use ajaxloader temporary empty images alright project border remove", "d": "1/2018"}, {"body": "issue related vue ask questions stackoverflow forums", "d": "1/2018"}, {"body": "asifarran right create event subscriptions add condition handler case need even events would never fire actually another simple way handle case pass computed property listeners object null condition met example", "d": "1/2018"}, {"body": "maybe need", "d": "1/2018"}, {"body": "kingwl still adds listener op wants avoid sqal suggestion actually valid workaround simplified", "d": "1/2018"}, {"body": "yes sqal solution good one inlining like shows close enough mind thanks leads deeper issue though rebind happens data change upon evaluation condition changes generally event spec object passed von different existing event subscriptions cleaned still hopefully disposed end component lifecycle von rebinds may edge case large impact scenarios reference scenario complex svg need optionally attach mouse overout handlers specific elements based logic component long lived one underlying data changes leading rebinding need attach event handlers different elements rebind hence need dispose previous subscriptions nt dangle orphaned sad drink memory typical solution going end set one top level event listener per event type let events bubble explain motivation trying vue way first quite bit processing happen handlers intended precalculate bake right event subscriptions handlers less quicker fluid response invoked elements nt require opposed filtering relying dom queries handler", "d": "1/2018"}, {"body": "vsevolodtrofimov whole point avoid event subscription happening applying condition handler satisfy requirement please note comments provide satisfactory resolution closing issue reflect", "d": "1/2018"}, {"body": "possible pass arguments handler", "d": "1/2018"}, {"body": "pmayer curry handler use", "d": "1/2018"}, {"body": "playing around however found strange nt produce current work around right referenced cloned actually clone need use clonenode however also caused problem tag one another exposing vnode api propose expressed like avoid cluttered", "d": "1/2018"}, {"body": "thank richardtallent detailed proposal would argue limit reactivity within custom properties thus would totally doable userland actually example extracted standalone vue plugin", "d": "1/2018"}, {"body": "josephuspaye", "d": "1/2018"}, {"body": "link fortuitous slot discovery slot scope compiling perhaps choice calling runtime arises learning nuxt framework ssr serversiderendering vuejs see exploding templates later ssr clientside runtime evaluation", "d": "1/2018"}, {"body": "enough", "d": "1/2018"}, {"body": "\u6211\u4e5f\u9047\u5230\u4e86\u540c\u6837\u7684\u95ee\u9898 \u4e0d\u8fc7\u73b0\u5728\u5df2\u7ecf\u89e3\u51b3\u4e86 \u4e3b\u8981\u539f\u56e0\u662f static \u9759\u6001\u6587\u4ef6\u4e2d\u6709 \u7684\u8bed\u6cd5 \u800c babel \u7f16\u8bd1\u65f6\u4e0d\u4f1a \u7f16\u8bd1 static \u4e2d\u7684\u6587\u4ef6 \u89e3\u51b3\u65b9\u5f0f \u7b2c\u4e00\u79cd gt \u628a static \u6587\u4ef6\u653e\u5230 src \u4e2d \u7b2c\u4e8c\u79cd gt \u624b\u52a8\u628a static \u6587\u4ef6\u4e2d\u7684\u6539\u6210 \u9700\u8981\u6267\u884c npm run build \u4e4b\u540e\u518d\u770b npm run dev \u7684\u65f6\u5019\u6682\u65f6\u6211\u8fd9\u8fd8\u4e0d\u884c \u53ef\u80fd\u662f dev \u7684\u65f6\u5019\u4e0d\u4f1a\u6267\u884c babel \u8fdb\u884c\u7f16\u8bd1 \u4f46\u662f build \u4e4b\u540e\u7684\u6587\u4ef6\u662f\u53ef\u4ee5\u5728 \u9489\u9489\u6216\u8005\u4e0d\u652f\u6301", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "\u4e00\u4e2a\u5f88\u5c0f\u7684\u503c \u521d\u59cb \u7684 transform \u4ee5\u4e0a\u4e24\u70b9\u7f3a\u4e00\u4e0d\u53ef", "d": "1/2018"}, {"body": "niceue", "d": "1/2018"}, {"body": "\u6211\u6ca1\u52a0transition\u4e5f\u9047\u5230\u4f60\u8fd9\u4e2a\u95ee\u9898", "d": "1/2018"}, {"body": "use case would like get suggestion workaround method main container call ajax init get user info commit vuexstore child inside would like call different api calls stage according user role come vuexstore lifecycle call asyncawait flow would follow order parent beforecreate parent create child beforecreate child create child mounted understand correctly component lifecycle currently get user info get workaround would like keep init api called inside used many pages container vuerouter posted question stackoverflow thanks", "d": "1/2018"}, {"body": "time ago interested creating vetur integration quasar framework rstoenescu delayed approaches quasar deliberately huge toyed simple jstoveturlike json converter make things sane brief experience two cents community going settle custom block approach js eg object import custom logic seems like better alternative structuredtext formats like yaml jsdoc due use cases avoid duplication thus improving maintainability like following components extending components components sharing common properties disconsider message doable otherwise missing something", "d": "1/2018"}, {"body": "shameleo hit problem think sort feature along lines suggested excellent idea aside valid drawbacks highlight basic problem repeated boilerplate case generations also current boilerplate might reducing composability several components injecting via common component ui used across projects even current two slots ugly", "d": "1/2018"}, {"body": "honest question even need wrap everything single root element technical limitation arbitrary decision technical due diff algorithm written technical implement easily transpiled thus solving problem idk easy", "d": "1/2018"}, {"body": "proof works nt seem like requires update diff algo", "d": "1/2018"}, {"body": "trusktr technical challenge conversion template render function implementation virtualdom render function builds nodes child component represented parent virtual dom single current implementation diffing algorithm responsible comparing current old virtualdom patching differences real dom rely fact every vnode child component single matching html element real dom next vnode virutaldom child component vnode guaranteed match next html element real dom sidenote fiddle functional components nt restriction represented vnode parent since nt instance nt manage virtualdom allowing fragments requires significant changes algorithm since would somehow keep parent informed times many root nodes child currently managing real dom parent rerenders knows many htmlelements skip reach next html element nt belong child component intricatecomplicated piece code heart vue critical render performance important make work correctly also make highly performant pretty hefty task evan mentioned react waited complete rewrite rendering layer remove restriction", "d": "1/2018"}, {"body": "implying opting convert multiple roots template multiple roots render function works performance nonetheless would work make fiddle shows nt work", "d": "1/2018"}, {"body": "implying opting convert multiple roots template multiple roots render function works performance nonetheless would work saying current virtualdom diff amp patch algorithm heavily relies fact child component always exactly one root element would break completely one root node child component saying making work one root component complicated adds additional logic challenge make change without negatively impacting render performance current implementation", "d": "1/2018"}, {"body": "still convinced multiple roots even needed core team currently working supporting great nt feel like roadmap already every time thought hey might need multiple root nodes puts dangerous path adding much complexity single component always end better simpler solution lives well within single root node paradigm solutions usually rely scoped slots highly recommend learning use well never need think multiple root nodes", "d": "1/2018"}, {"body": "core team currently working supporting great nt feel like roadmap already nice roadmap wo nt happen anytime soon would also breaking change component written multiple root nodes would nt work otherwise solid advice complexity scoped slots", "d": "1/2018"}, {"body": "one show rewrite fiddle scoped slots show possible output two elements time component outer component like example using template instead render function tried using slots wouldnt let put slot element root component linusborg ability return array function removed", "d": "1/2018"}, {"body": "linusborg ability return array render function removed would think would remove anything returning array render function nt work never worked continue work vue notable exception functional components reasons l laid need help specific challenge implementing feature forumvuejsorg chatvuejsorg approriate place issue", "d": "1/2018"}, {"body": "functional components nt restriction represented vnode parent since nt instance nt manage virtualdom last checked though possibly changed since vue sfc support multiple root elements within given comment would fairly straightforward allow within functional template sfcs think might go long way addressing many desired usecases without requiring rewrite fundamental architecture", "d": "1/2018"}, {"body": "oh see works well nt need help writing singleroot components converting singleroot components multiple roots allows useful patterns otherwise certain patterns doable without multiroot components react added community needed trying understand removed useful issue hoping feature added seems valid let people compose freely fwiw sort composing nt currently doable custom elements virtual component systems allow moment component instances nt actually get placed dom css style coming soon currently behind flags allow web components achieve thing ie achieve multiroot rendering would vue among things example chatter problems stackoverflow", "d": "1/2018"}, {"body": "trying understand removed useful refers removal vue vue design decision mainly much easier performant virtualdoms generally worked vue nt use virtualdom react rewrite whole rendering engine get setup performant way understand useful scenarios tradeoff usefulness amount work required make happen", "d": "1/2018"}, {"body": "understand useful scenarios tradeoff usefulness amount work required make happen linusborg thoughts earlier question allowing functional template sfcs would sufficiently low work", "d": "1/2018"}, {"body": "tbh nt aware nt work still test yeah rust fixable problem template compilation", "d": "1/2018"}, {"body": "would nice allowed multiple root elements", "d": "1/2018"}, {"body": "could someone open issue vueloader", "d": "1/2018"}, {"body": "\u4ee3\u7801\u7cbe\u7b80\u5230 \u53ea\u6709\u4e00\u4e2a iframe", "d": "1/2018"}, {"body": "zjxpcyc \u6211\u6700\u540e\u5728\u81ea\u5df1\u5de5\u7a0b\u5185\u5bb9\u91cd\u65b0copy\u4e86\u4e00\u904d\u4ee3\u7801", "d": "1/2018"}, {"body": "also work slotscope", "d": "1/2018"}, {"body": "tried fix issue encountered problem got way access vnode html element want get vnode path find good way missing something better solution", "d": "1/2018"}, {"body": "xlotlu really like approach making use existing slot mechanism component extension sure whether proposed syntax best least good starting point discussion finally decided add two cents still bit surprised frustrated hours research thinking tinkering stumbled upon article helped feel completely dumb unable figure solve problem existing means someone else already said fact people use templating libraries like pug component inheritance proof enough demand completely ignored problem approaches think using existing mechanisms like mixins slots want change javascript markup always end implementing composition elements least two times slot mechanism expects data passed parent child parent template resides child actually whereas class inheritance within javascript works opposite way something couples together would useful nt think using scopes define potential child component able merge additional content parent template bad op points nt see feature would collide conventional scopes feature request defining rules existing scopes could used way round within child component enable semantically correct component inheritance said neither vue javascript expert therefore certainly overlooked important points speak feature also anyone think elegant way implement component inheritance like described linked article pure vue please share thoughts", "d": "1/2018"}, {"body": "xlotlu sorry really nt see provides get right example whole new instance parent component created proposed approach child component parent actually instance created situation parent either serves prototype child directly used level markup tree equivalent independent instances possibility inherit extend parent within child template makes possible couple class extension script level would therefor enable full component inheritance imho template inheritance makes sense conjunction component class extension also understand aiming help look content distribution templates component class extension separately claimed mechanism bring two together therefor provide api content manipulation child parent destroying original semantics slots system see want", "d": "1/2018"}, {"body": "know put vif parent tag redundancy invalid", "d": "1/2018"}, {"body": "want control existing since nt make sense invalid add wrap like", "d": "1/2018"}, {"body": "mix require export ca nt mix import moduleexports skottiewang notifications githubcom maysnow mint\u7684\u6e90\u7801\u4e5f\u8fd9\u6837\u5199\u7684 receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "hey made mixin wraps component methods tracks status returned promises lets use thisasyncpending inside components intercepts async errors passes vue errorhandler kinda hacky also super useful think javascript import vue vue vueconfigerrorhandler err gt consolelog handling error err mixin tracks component asyncpending state catch async errors wrapping methods vuemixin data gt asyncpending beforecreate const methods optionsmethods const key objectkeys methods const method methods key methodbusytracked return const wrappedmethod function args const result methodapply args const ispromise result amp amp typeof resultthen function ispromise return result", "d": "1/2018"}, {"body": "encounter exactly problem sirlancelot hot reloading becomes useless case vuex use manually refresh time", "d": "1/2018"}, {"body": "please revisit issue think listening camel case events dom templates impossible talked wish could consistent components default solved problem implementing helper function issues events versions edit seems like vue introduced solves dom issue still think aim consistency", "d": "1/2018"}, {"body": "hi issue still active", "d": "1/2018"}, {"body": "yes", "d": "1/2018"}, {"body": "know older thread setting throws uncaught referenceerror sanitizehtml defined know sanitizehtml defined previously imported used vue called", "d": "1/2018"}, {"body": "ran issue nt need poll transition poll el still present dom", "d": "1/2018"}, {"body": "unbinding removed elements page resulting jarring transition elements created directives bad practice", "d": "1/2018"}, {"body": "elements created directives bad practice using native js plugins like packery comfortable way go directive destroy packery instance unbind directly layout goes drain nt destroy producing memory leak slows every following instance packery think relevant issue", "d": "1/2018"}, {"body": "\u521a\u770b\u5230\u7684", "d": "1/2018"}, {"body": "also agree builtin officially endorsed way uniquely identifying component would nice expecially since useful making things properly accessible using library returning id number components particularly unique go forward mixin method outlined", "d": "1/2018"}, {"body": "going create new issue found one bug different seems might help solve current issue created simple situation reproduce transition bug reproduction link steps reproduce click showhide button switch another browser tab seconds go back jsfiddle see message displayed expected works like switching browser tabs clicking showhide button fiddle waits seconds hides message fiddle waits second shows message actually happening clicking showhide button switching another browser tab seconds come back see message element", "d": "1/2018"}, {"body": "alexbazilev think case different situation created separate issue nvm situation saying sorry spam", "d": "1/2018"}, {"body": "\u5b98\u65b9\u6587\u6863\u597d\u50cf\u6ca1\u6709\u5199\u554a", "d": "1/2018"}, {"body": "dengshenkk \u4f7f\u7528\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u7684\u8868\u5355\u8f93\u5165\u7ec4\u4ef6 \u4e2d\u6709\u6d89\u53ca", "d": "1/2018"}, {"body": "posva understanding vue reactivity returning null would definitely better option rather returning string", "d": "1/2018"}, {"body": "renders expected", "d": "1/2018"}, {"body": "haowu javoski disagree safari part tried google chrome ipod touch also renders", "d": "1/2018"}, {"body": "javoski says web inspector error shown photo seems like tick read properly", "d": "1/2018"}, {"body": "hey guys problembut solved problem found problem due structure dom tree case two nested html elements think makes frame render wrong", "d": "1/2018"}, {"body": "good solution problem changing key triggers complete rerender component even nothing changed another way triggering transitions", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "add new modifier", "d": "1/2018"}, {"body": "xiguaxigua found way fix problem", "d": "1/2018"}, {"body": "aarbel nt found way fix", "d": "1/2018"}, {"body": "case button type submit", "d": "1/2018"}, {"body": "leonnylino use axios looking ajax based solution", "d": "1/2018"}, {"body": "transition worked vif vshow resort solution work", "d": "1/2018"}, {"body": "implemented", "d": "1/2018"}, {"body": "yes dynamic types work", "d": "1/2018"}, {"body": "nt need end anyway since wanted ensure number input field realized good future projects suppose", "d": "1/2018"}, {"body": "chance support portal natively vue although portalvue working nicely cases still side effects like leaving empty wrapper element thus may interfere something especially styles relying dom structure like work abstract components would great imo eliminate empty wrapper still get everything right unless feature supported vue core hacking render functions return inner may still cause problems", "d": "1/2018"}, {"body": "maybe start feature request portalvue quite open nt portals roadmap vue moment", "d": "1/2018"}, {"body": "alternatively could consider wrap functional component return multiple root nodes functional component component instance linusborg also work single files components getting error", "d": "1/2018"}, {"body": "although highly respect opinions knowledge would like present different view developer may want know boolean prop defined two examples component developer external use may want build logic determine property defined various internal checks robustness realistic impose use mybool undefined especially trying make component robust flexible fortunately workaround impose external changes explicity set default undefined multivalue prop includes boolean value may desired example simplifies usage component assumes happy default following example scenarios prop false icon displayed b undefined defined true display default icon c string custom icon name however since vue forces undefined false manage case b since observe undefined state would forced add second prop thus requiring two props boolean string something could done one additionally ask user pass string false true string since could icon name since undefined fasly negative impact keeping however loss functionality removing additional irritant define boolean string prop undefined default prop defined component receive empty string instead expected true value maybe submit seperate issue see following jsfiddle examples", "d": "1/2018"}, {"body": "defcc fergaldoyle update", "d": "1/2018"}, {"body": "think casting null would make sense number type used angularjs removing object null would suffice thats initially declare model text field nt populated placeholder text also show properties null", "d": "1/2018"}, {"body": "nt like setting properties controllers created component set views project called vueheadful based headful generic library set meta tags javascript vueheadful supports setting title description keywords language properties use vueheadful register component js import vue vue import vueheadful vueheadful vuecomponent vueheadful vueheadful new vue configuration use component every views", "d": "1/2018"}, {"body": "johnleider issue believe unclear pre render work text site prerendering nt appropriate userspecific content route like myprofile prerendering wo nt effective content page different depending looking sometimes update routing strategy compensate eg users usernameprofile public profiles otherwise risk leaking private information world says appropriate user specific content sometimes update routing strategy", "d": "1/2018"}, {"body": "also implementing virtual scroll feature came across exact problem unfortunately problem seems hurt performance quite lot smooth scrolling eg macbook pro touchpad scrolling upwards buttery smooth scrolling downwards creates microstutter caused many dom updates capture shows problem well", "d": "1/2018"}, {"body": "reason ca nt import vue files completly fresh vue init webpacksimple folder run npm run dev initially soon try import vue component error occurrs nodemodulesbabelloaderlib nodemodulesvueloaderlibselectorjs typescript amp srcappvue module found error ca nt resolve componentsheadervue c laragonwwwvuetutorialsvueclitutorialvuejsroutervueroutersrc nodemodulesbabelloaderlib nodemodulesvueloaderlibselectorjs typescript amp srcappvue srcappvue srcmainjs multi webpack devserverclient webpackhotdevserver srcmainjs", "d": "1/2018"}, {"body": "get back kind problem dynamic components static async component passed absolutely way find children finished rendering parent component must execute code child components done loading problem parent lifecycle done children created called solution mdreizin posted work components nt known", "d": "1/2018"}, {"body": "donnysim preventing applying mixin would add hook component", "d": "1/2018"}, {"body": "akryum kind requires know many components wait loading requires different implementations code second time enter page components already resolved normal lifecycle runs", "d": "1/2018"}, {"body": "big problem component appear list resolved late lifecycle detect components many loaded yet case kind work around problem injecting global mixin emits mountedcreated events components count many loading loop sadly case async components increase difficulty dealing lifecycle something needs happen mounted event async components get created mounted", "d": "1/2018"}, {"body": "got error trying watch literal path spaces still work thought act square bracket property access syntax", "d": "1/2018"}, {"body": "possible emit functional components", "d": "1/2018"}, {"body": "unless mistaken short answer functional component instance therefore methods hackery believe actually emit context object render fn receives contains always vue instance could choose take global approach see event emitting functional component depending use case likely best solution", "d": "1/2018"}, {"body": "hey researching optimizing dashboard elements making sfc component functional sounds awesome wont able methods computed props right use render function jsx least define inside render function self correct", "d": "1/2018"}, {"body": "possible emit functional components access object functional context example call listener like method inside use render function jsx least define inside render function self correct yes", "d": "1/2018"}, {"body": "akryum thanks larger template heavy func components might better jsx standard render functions would make things bit harder read advanced tutorial would really sweet", "d": "1/2018"}, {"body": "nt need use render function functional components anymore use templates fri jan dobromir hristov notifications githubcom wrote akryum thanks larger template heavy func components might better jsx standard render functions would make things bit harder read advanced tutorial would really sweet receiving commented reply email directly view github mute thread", "d": "1/2018"}, {"body": "blocka use function something instantiate chart example", "d": "1/2018"}, {"body": "unless rendering chart completely vnodes would need regular component lifecycle methods fri jan dobromir hristov notifications githubcom wrote blocka use function something instantiate chart example receiving mentioned reply email directly view github mute thread", "d": "1/2018"}, {"body": "akryum solution works leaves feeling functional sfc templates could use little love process rewriting several components could functional getgo little disappointed experience sfc already context accessible template could nt properties mapped root props emit listeners allowing type sfc work api requestsomething propshello propsworld export default props hello world could become hello world export default props hello world", "d": "1/2018"}, {"body": "nt add damn information vue tutorial", "d": "1/2018"}, {"body": "think actually correctness issue performance one seems chrome least actually result small indent start paragraph presumably honouring rendered natively browser html gross annual salary normally indent", "d": "1/2018"}, {"body": "issue closed even nt bug seems reasonable api would support works fine limitation weird unreadable", "d": "1/2018"}, {"body": "implemented", "d": "1/2018"}, {"body": "updates", "d": "1/2018"}, {"body": "sibling components like case button lives different slot parent use bus instance example use dedicated state management solutions like vuex info meaningless container components hold part state children meaningless may good solution make maintainable use case", "d": "1/2018"}, {"body": "akryum use case", "d": "1/2018"}, {"body": "solution provide inject without using reactive data documentation provideinject", "d": "1/2018"}, {"body": "problem", "d": "1/2018"}, {"body": "well", "d": "1/2018"}, {"body": "necessary feature dry code opinion right create watchers thing form lot input custom modifier would solve everything", "d": "1/2018"}, {"body": "make end value variable", "d": "1/2018"}, {"body": "pls change delimiters using vue webpacksimple new vue delimiters el app render h gt h app nt work pls help", "d": "1/2018"}, {"body": "yeah im need thats helper", "d": "1/2018"}, {"body": "sorry revive old issue could nt find relevant discussion elsewhere encounter problem trying separate presentation logic vue vm clientside business rules persistence code model model class instance pretty natural fact vm attributes support class instances mean vue vm instance intended contain presentation business persistence logic pattern nt considered thanks creating reactive view library used progressively instead taking app way", "d": "1/2018"}, {"body": "bumped since remove doesnt work since dont perform change trough assignment reverse assign remove returns removed array reverse condition assign result back case works perfect", "d": "1/2018"}, {"body": "recently ran discovered much easier way shortcircuit vue observation logic define property nonconfigurable background application work party library openlayers creates class instances hold data nt support reactivity system trying shoehorn one caused many headaches let tell viable solution large scale application using library let openlayers things way wants make vue play nicer horribly nested uber objects doom prior finding issue application using gigs ram largest dataset caused vue making objects reactive also really slow loading tried vuenonreactive helped get us gig prior using vue application sitting around solution anything nt want reactive simply mark simple stops property properties observed vue dependency arguably even incorrect application largest dataset simple easy required documentation change vue side make official way making something nonreactive", "d": "1/2018"}, {"body": "interesting definitely seems like viable alternative", "d": "1/2018"}, {"body": "think directive would help greatly performance instance template array parsed every time need display property object html findsubtotal paymentterm shortdescription anfloat findsubtotal paymentterm int anfloat findsubtotal paymentterm cap anfloat findsubtotal paymentterm ins findsubtotal paymentterm fee anfloat findsubtotal paymentterm ter js findsubtotal termindex return thissubtotalsfind st gt sttpterms termindex workaround missing improve performance think reopening issue could solve problem thanks", "d": "1/2018"}, {"body": "alexandrebonneau", "d": "1/2018"}, {"body": "volcanicpenguin nt know use case check worked use case may ideal solution working none less", "d": "1/2018"}, {"body": "keen support", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "future plans add support technical reason vue could support map set", "d": "1/2018"}, {"body": "actually able reproduce different way putting ngif input element", "d": "1/2018"}, {"body": "weex like reactnative doesnt render webview create real native app like react native", "d": "1/2018"}, {"body": "weex looks well built hard get support looks nice little bit behind vs weex support use many existing nativescript plugins", "d": "1/2018"}, {"body": "like said weex framework building native mobile crossplatform uis moreover evan help weex already supported vuejs one frontend frameworks words use vuejs syntax develop native apps based weex", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "think bigger problem lack clear pattern init proposed using using proposed prograhammer job neither solution explicitly saying non reactive properties instance logic related component lifecycle obviously waiting something happen really mind simply wanting define non reactive instance state also pattern since everyone call properties whatever want otoh using seems hackish exposes vue guts also distinction reactive non reactive state either live level better solution imo would explicit syntax declare non reactive component state personally really like first idea ardoramor using underscores non reactive properties", "d": "1/2018"}, {"body": "well repeat saying nt feel usefulimportant enough worth adding dedicated api neither solution explicitly saying non reactive properties instance anything reactive nt enough everything needs dedicated api react takes extreme everything prop local state little nothing else otoh using options seems hackish exposes vue guts also distinction reactive non reactive state either optionsmystring live level optionsdata optionsmethods nothing reactive options used create component since nonreactive data experience mostly exactly constants options actually find place quite fitting react want provide abstractions use case justfies added technical debt maintaince burden personally nt feel like case better solution imo would explicit syntax declare non reactive component state personally really like first idea ardoramor using underscores non reactive properties data would breaking change definite", "d": "1/2018"}, {"body": "nothing options reactive reactive natural state things javascript justify sticking non reactive component state anywhere non reactive options used create component since nonreactive data experience mostly exactly constants options actually find place quite fitting quite contradictory argue putting component state directly reactive component state live alongside etc instead living directly assume means component state reactive component state either case logical non reactive state would either go inside inside property eg directly would breaking change definite makes sense arguing something need done", "d": "1/2018"}, {"body": "quite contradictory argue putting component state directly options passage quoted explicitly says experience nonreactive state usually constant options sense state wo nt change constant use code talk directly options put dedicated object established pattern many many plugins party components use define config options constants etc pp also flags like functional true inheritattrs false live directly options well nt doubt instances one actual component state mutated reactive eg performance reasons experience edge case deserving api arguing something need done arguing issue seeing severe enough warrant action leads additional api everything needs api things sufficiently solved establishing pattern personally think one cases could add something docs define official pattern deal extending api surface wo nt get vote least agree looking offical pattern switch vuejsorg repo open issue", "d": "1/2018"}, {"body": "sense state wo nt change constant use code state means ok talk directly options put dedicated object yes nt solve problem consistent official pattern solving arguing issue seeing severe enough warrant action leads additionbal api ok", "d": "1/2018"}, {"body": "official way declaring nonreactive state", "d": "1/2018"}, {"body": "simplesmiler thanks excellent advice please consider points sirlancelot passing data relevant ever props provideinject parent vuex revisiting issue years wiser think legitimate use case presented passing data parent component possibly deep child reason complained prop syntax passing children deep results ridiculous amount code repetition believe caught long time ago taken long time provideinject address use case still nt fully address look deeply nested child component uses mysterious property idea inherited parent chain hints template actual composition happens check implementation details every component chain figure one introduced property scope evan sound lot like closures js sounds great well said whole point components break code logically isolated units well turns component logically isolated whether using props closures runtime parent context must provide required attribute parent component declaratively pass attribute prop child components access parent attributes via parent parent component arrtibute suggestion parent component data available reference via closure regardless passing method required attribute must exist parent scope good reason methods logical isolation runtime question input need declared twice component props code ca nt props inferred code like closures js want declarative input props parameters want inferred input convenient familiar way like closures provide js decision made ultimately understand performance king vue prevents shooting feet vuex inject global state provideinject selectively inject state parent dangerous walk chain options exist carefully limit select must passed regarding jochantrelle nt jerk think gets however rant may rest us admit awe brilliance find ironic requested solution implement differently provideinject introduced vue let quote injected property inject would traverse parent chain first provider reached provideinject provide data distant descendant allows create amazing functionalities indeed smarter teams people developing frameworks vue included may get resume well familiar react provideinject similar react context feature ngcontroller looks like came right side regarding decoupling explicit data passing makes individual component decoupled usage context makes easier reason maintain makes component reusable necessary evan nt component need prop prop come runtime comes context parent component runtime real difference declarative vs implied decoupling well sometimes want declarative props sometimes nt nt vue give dev sharp knives let use right tool job like js would even argue provide inject solution unfortunately even tighter coupling parents children wanted parent explicitly declare providing closure scenario child free reference parent data without parent knowing cleaner less dependent admittedly poorly performing solution key child says need thismyattr nt walk chain find regarding modularityreusability loss dry repeating data declarations props etc small violation considering benefits modularity reusability except modularity reusability nt lost dependency somewhere component chain whether dependency expressed using vuex explicitly props parent inject etc dependency still exists component still reusable matter approach used child component still ideologically requires whether passed explicitly parent provide reason performance dev option components nt need start like solution better provideinject attribute component uses nt func data attr computed etc automatically added props list runtime prop passed parent check parent scope chain nothing yet still found default prop value used default silently fail alternatively powerful inject provide avaliable injects data root descendants injects descendants thisx like vuex store inherits parent attributes current instance walk chain inject first x regardless provided parents inherits levels parent attributes current instance better provideinject syntax", "d": "1/2018"}, {"body": "hello new vue made implementation vue cdn link script using package manager everything works fine chrome ff make work ie already try babelpolyfill thing nothing worked indexhtml vuejs controller open console view seems deletes app div help please", "d": "1/2018"}, {"body": "mariomenjr provide reproduce please", "d": "1/2018"}, {"body": "mariomenjr please use new issue tool open new issue", "d": "1/2018"}, {"body": "please provide way update actually replace object referenced data eg etc", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "akryum thank much try", "d": "1/2018"}, {"body": "revati could show example use saying way without explaining rest us still poking dark", "d": "1/2018"}, {"body": "wickedsik go little bit expresive way handle optional props", "d": "1/2018"}, {"body": "found action firefox chrome different updated event triggered firefox fall stuck never come chrome deal correctly", "d": "1/2018"}, {"body": "accepted practiceanswer issue", "d": "1/2018"}, {"body": "christophernewton best solution far", "d": "1/2018"}, {"body": "big thankyou trying directly assign properties vue instance going nuts smile", "d": "1/2018"}, {"body": "hi body using vuejs laravel dynamic custom form fields coming database followed vmodel form name field works problem get field values laravel controller anybody using tylerotwell formjs class help greatly appreciated thanks", "d": "1/2018"}, {"body": "help forum one dedicated answering questions", "d": "1/2018"}, {"body": "someone needs receive undefined boolean prop multitype prop include boolean simply set default value undefined see jsfiddle comparison results various boolean props scenarios", "d": "1/2018"}, {"body": "try recursive functions nt know compares performance javascript var f g var c e var b new object copy reference var b consolelog true alter one object alters hence copy reference consolelog true", "d": "1/2018"}, {"body": "pixelbacon return false vue working fine", "d": "1/2018"}, {"body": "", "d": "1/2018"}, {"body": "also edge use case involves needing reference dom element may hidden depending breakpoint hidden underlying data changes computed values end incorrect features nt rendered properly window resize method could simply recompute window resize dom element available", "d": "1/2018"}, {"body": "dom nt sources truth using vue dom simply view data data exists dom gon na bad time", "d": "1/2018"}, {"body": "sirlancelot nt sources truth dom vue incrementallyadoptable javascript framework like use vue jquerylike tool entrusted dom vue admit vue fullabstract power let need operate dom sometimes want use vue simple action", "d": "1/2018"}, {"body": "sirlancelot bit tough explain datacomputed values remain source truth go detail referencing dom elements render indicator element selected tab ui indicator transitionsanimates width left position new tab clicked smallmobile screens different ui used select dropdown select tabs utilize data let call render widthleft position indicator computed method let call returns width left offset button corresponds value problem arises user changes via select ui small viewport since value changes tabs nt displayed ca nt get widthleft offset selected tab therefore nt return correct value user switches medium breakpoint tabs redisplayed indicator nt styled properly edge case bueno current solution move tabs offscreen via css instead still inspected whenever changes causes headaches buttons tab hierarchy could manually breakpoint change little saner explicit sorry length think enhancement warrants investigation could useful", "d": "1/2018"}]