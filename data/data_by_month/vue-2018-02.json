[{"title": "unable passing props component define order treated", "body": "version reproduction link steps reproduce given following template want modify props time would proceed expected first modified actually happening however vue first taking account leading vueautonumeric component incorrectly update internal raw value instead since defines number allowed decimals instead default order set super important component since first set autonumeric check many decimal places needs keep default means convert given first chance take account modifies allowed number decimal places would first set given value would correctly kept decimals would allow displaying question way passing props component define order treated instance previous example using component want modify time using single object need make sure modification done first modifying otherwise particular case decimal places dropped see example easily see bug far reliably get correct result manually first change change block wondering could automatically inside component prevent user manually time want update optionsvalue context issue", "num": "7723", "d": "2/2018"}, {"title": "ambiguous combined usage slotscope vfor", "body": "version reproduction link steps reproduce see codepen link use following code html propsitemtext itemtext js consoleclear vuecomponent mylist props items template mylisttemplate new vue el app data items id x text item message message id text item message message id z text item message message red z expected warning way solve warning working solution actually happening console warning template solves warning breaks functionality html propsitemtext neither works html propsitemtext", "num": "7722", "d": "2/2018"}, {"title": "webview loads blank", "body": "", "num": "7721", "d": "2/2018"}, {"title": "vue warns missing required prop default value", "body": "version reproduction link steps reproduce specify required prop default value render component without specifying value prop expected component render following without prop validation errors html number actually happening component renders ok warns missing required prop true prop specified since default value warning message exactly check appears checks two things prop provided least prop value nonnull nonundefined think case required prop default value relaxed otherwise enforce prop never null also providing default value prop value provided", "num": "7720", "d": "2/2018"}, {"title": "\u600e\u6837\u8ba1\u7b97virtual dom \u6e32\u67d3\u7684\u8017\u65f6", "body": "version reproduction link steps reproduce \u6bd4\u5982 expected \u8fd9\u4e0d\u662f\u4e00\u4e2abug report actually happening \u4f46\u662f\u6ca1\u6709\u5408\u9002\u7684\u5206\u7c7b \u5177\u4f53\u8bf4\u660e\u89c1", "num": "7719", "d": "2/2018"}, {"title": "use vmodel array prop update prop unexpected someway", "body": "version reproduction link steps reproduce open click tab detail wrote comments expected component update share data parent component strict wish statement work actually happening statement work unexpected modified share data parent component", "num": "7718", "d": "2/2018"}, {"title": "async component add api reload load failed async component", "body": "problem feature solve currently vue asynccomponent use http load js file may fail due network break timeout api exposed way make lead user interact try reload component instead refresh whole page addition detailed error exposed show different states based error tks advance proposed api look like vue asynccomperrormessage click reload export default methods reload asynccompreload", "num": "7717", "d": "2/2018"}, {"title": "warnings lead different behavior", "body": "version reproduction link steps reproduce check working example using minified vue compare failing example using dev vue expected expect minified dev versions vue result outcome property defined parent expect render child even though nt explicitly defined prop preferably vuejs warnings would nt lead components failing compile actually happening minified production build code works expected developer build getting warning prevents component compiling assume prevent making typo forgetting add data property child component warning super useful general thanks taking time make let know need examples help issue thanks", "num": "7716", "d": "2/2018"}, {"title": "global window modifier von listeners new property listeners", "body": "problem feature solve solves issue components like keys called focused element leads windowaddeventlistener keyup thisevent destroy windowremoveeventlistener keyup thisevent solve issue beforemount registering events beforedestroy vue handle vue way like handling keycodes proposed api look like keyup event like input keyupglobal close keyupwindow close maybe vue instance listeners keyup thisevent", "num": "7715", "d": "2/2018"}, {"title": "incrementing variable vfor loop increments hundred times expected", "body": "version reproduction link steps reproduce click run notice speed rendering value variable incr rendering expected expect variable incr increases vfor finishes actually happening variable incr increases vfor finishes app works slow also getting vue error may infinite update loop console want ids example instead", "num": "7714", "d": "2/2018"}, {"title": "use better types model prop type", "body": "version reproduction link steps reproduce expected typescript error actually happening typescript report error property gettime exist type string use vue typescript want set component prop type date find something could userful optionsdts make simple test still nt know solve thanks suggestion", "num": "7713", "d": "2/2018"}, {"title": "html keyboard input element supported", "body": "version reproduction link steps reproduce add element expected render element correctly actually happening", "num": "7711", "d": "2/2018"}, {"title": "slots resolving issue subsequent components", "body": "version reproduction link steps reproduce stated docs slots fn components used component knows otherwise pass along children next component could deal expected would expect children component would resolve slots correctly long children passed along actually happening initial component gets resolved slots well subsequent component gets children passed along nt", "num": "7710", "d": "2/2018"}, {"title": "vue get new props data hook activated", "body": "problem feature solve let suppose component child prop child use query data server found prop id value try use get new id work work think right way way get right value prop data proposed api look like like", "num": "7709", "d": "2/2018"}, {"title": "instanceof expressions work", "body": "version reproduction link steps reproduce create class set data use instance class create expression example vif using instanceof note expression return true span rendered example expected expected expression evaluates true actually happening expression return true resulting displayed span workaround create expression form instancecontructorname typesafe stringlytyped instead thus toolable", "num": "7708", "d": "2/2018"}, {"title": "styles updated time", "body": "version reproduction link steps reproduce open scroll inside region black border top bottom see another div black border text inside expected text always right midline visible area smaller bordered div actually happening text sometimes midline produces visible lags see wrongly rendered frames developer tools eg note clarity temporarily set red border div text online demo available effect achieved modifying text inside smaller div every scroll seems modified styled applied time newly scrolled frame rendered using old style highly suspect styles also data applied time possible scenarios problem browser since raw dom solution works well source demo angular react suffer problem react source react demo angular source angular demo", "num": "7707", "d": "2/2018"}, {"title": "class change transition working mounted lifecycle", "body": "version reproduction link steps reproduce component mounted change class initiate transition working element snaps left right without transition expected element gradually transition left right actually happening element jumps left right wrapping class change settimeout would allow transition effect work however without settimeout element simply jumps left right issue replicated class binding apologize bug mystery posting last resort ps", "num": "7706", "d": "2/2018"}, {"title": "events modifiers always return undefined", "body": "version reproduction link steps reproduce create event modifier create directive get event instance vnode call event maybe dummy event required expected event without modifiers return function value actually happening event without modifier return value events modifiers always return undefined fixed pr", "num": "7705", "d": "2/2018"}, {"title": "ssr webpack vueextends throws property method ssrnode defined", "body": "version reproduction link steps reproduce clone repo details see readme linked repo expected output console follows actually happening following error vue warn property method ssrnode defined instance referenced render make sure property reactive either data option classbased components initializing property see found srccomponentsappvue found srccomponentsappvue found srccomponentsappvue typeerror vmssrescape function narrowed case vueextend actually want use typescript vueclasscomponent", "num": "7703", "d": "2/2018"}, {"title": "extra blank spaces elements rendered template", "body": "version reproduction link steps reproduce run jsfiddle expected background green styled children conditionally rendered empty evaluate false actually happening background red used blank space inside tags css nt consider multiple children elements important single element produce correct result appears vue putting blank space elements even conditionally rendered appearing instead worth noting manually remove extra spaces using developer tools everything looks expected affect furthermore reproduces newline elements modifying provided jsfiddle two produce correct result newline vue seems turning newline elements single space causing issue", "num": "7701", "d": "2/2018"}, {"title": "adding reactive array state", "body": "component would like add new reactive array sst vuex tried beforecreate hook added array reactive plain one add plain fields beforecreate sst reactive dynamically created array sst note updating existing array sst aware array change detection gotchas trying dynamically add entirely new array sst make reactive", "num": "7700", "d": "2/2018"}, {"title": "", "body": "problem feature solve proposed api look like", "num": "7699", "d": "2/2018"}, {"title": "", "body": "problem feature solve gt proposed api look like", "num": "7698", "d": "2/2018"}, {"title": "contenteditable input nt fire", "body": "version reproduction link steps reproduce create contenteditable input event binder test possibly happening according searches expected fire input event actually happening nt fire input event problem found mediumeditor issue contains proposed fix", "num": "7697", "d": "2/2018"}, {"title": "internet explorer opens white screen", "body": "version reproduction link project complex located specific problems steps reproduce build vuecli project development completed use chrome open normal opens white screen expected open use applications normally actually happening hang console error strict \u6a21\u5f0f\u4e0b\u4e0d\u5141\u8bb8\u4e00\u4e2a\u5c5e\u6027\u6709\u591a\u4e2a\u5b9a\u4e49", "num": "7696", "d": "2/2018"}, {"title": "modal nt work", "body": "help please modal nt work", "num": "7693", "d": "2/2018"}, {"title": "modal nt work", "body": "help please modal nt work", "num": "7692", "d": "2/2018"}, {"title": "modal nt work", "body": "help please modal nt work", "num": "7691", "d": "2/2018"}, {"title": "array properties reactives", "body": "version reproduction link steps reproduce click change array property button array property reactive click change array property push button item added array property reactive expected array property reactive case actually happening array property reactive array change reactivity array properties even length array change use proxies fix issue use case init array isloading property set true fetch db x results db add items array set isloading false reactive great result db array change set isloading property false reactivity stay loading state", "num": "7690", "d": "2/2018"}, {"title": "computed variable arrow functions second argument setter", "body": "problem feature solve one guy finded computed getter may use arrow function destructed variablesmethods went ahead appended case failed setter called component later tried use vuex ca nt use undefined think api looks nice reduce many new lines proposed api look like", "num": "7688", "d": "2/2018"}, {"title": "strange behavior setinterval", "body": "version reproduction link steps reproduce create simple square vmodel input changethe width height styling create method upon pressing enter stepwise undos alteration width reseting back html dif js css expected following function expect block reset width input actually happening value width becomes width dif becomes becomes strange thing use reverse dif value lt condition works fine", "num": "7686", "d": "2/2018"}, {"title": "love", "body": "", "num": "7685", "d": "2/2018"}, {"title": "writable isserver", "body": "problem feature solve added method vuetestutils wrapper around let users test ssr code without sometimes users running tests ssr code browser target code process window defined means false even though rendering serverrenderer proposed api look like unsure best way one solution make writable", "num": "7684", "d": "2/2018"}, {"title": "regression returning input element render function fails twoway binding", "body": "version reproduction link steps reproduce write functional component render function returns input element clear button clear value input element expected twoway binding returned component work html input element actually happening click clear button nt clear value input element use older version vue older eg works ok", "num": "7683", "d": "2/2018"}, {"title": "returning string array containing strings render functions nt work", "body": "version reproduction link steps reproduce write functional component render function returns string array containing strings expected component renders strings text nodes actually happening uncaught typeerror create property isrootinsert string test works also like able use html templates vueloader also fails", "num": "7681", "d": "2/2018"}, {"title": "extended components fall back global component definition instead local one superparent", "body": "version reproduction link steps reproduce codepen shows bug opening expected expect extcomp behave exactly like basecomp since extended actually happening extcomp uses global mycomp definition instead one superparent component might expectedintended behavior however people asked agree counter intuitive feels like bug feature cheer jm", "num": "7680", "d": "2/2018"}, {"title": "iphone safari displays blank page", "body": "safari iphone ios showing blank page new website enabled disabled gzip change iphone site works fine newer ipad iphone", "num": "7679", "d": "2/2018"}, {"title": "template compiler ignores svgdefsstyles element", "body": "version steps reproduce expected exprected element inside also genreated render method actually happening generated render method omits", "num": "7678", "d": "2/2018"}, {"title": "pass dataprop root vue instance", "body": "version reproduction link steps reproduce message var app new vue el app data message hello vue one way data passing vue dom transfer dom vue eg message please note sub component root node expected sometime part html thing needs passed vue root instance actually happening could figure pass data root vue instance", "num": "7677", "d": "2/2018"}, {"title": "keypressprevent preventing caret input moving", "body": "version reproduction link steps reproduce click input press right left arrow expected caret input nt move actually happening caret input moving", "num": "7675", "d": "2/2018"}, {"title": "vue warn computed prop never consumed anywhere", "body": "problem feature solve computed props lazily evaluated computed prop never consumed evaluated misleading appearance chrome vue devtools reactivity failure expected behavior developer would assume writing computed props possibly consumed prop dom console warning appropriately explain natural write computed props inspect consuming consuming depends prop written long time source confusion unpredictability proposed api look like computed property x become reactive consumed templatedom", "num": "7674", "d": "2/2018"}, {"title": "better watcher syntax", "body": "problem feature solve multi dependency watchers scale poorly exponentially poorly typically computed function would used many cases user needs nonlazy evaluation need cause side effects multi dependency watcher cases current watcher syntax verbose see fiddle proposed api look like", "num": "7673", "d": "2/2018"}, {"title": "computed documentation mention lazy evaluation", "body": "problem feature solve truth computed variables evaluated lazily documentation says computed props evaluated time underlying data changed difference computed props often reevaluated underlying data changes development example template yet consumes hidden due conditional rendering proposed api look like please add special notecaveat red exclamation point explaining lazy evaluation computed props suggest watcher used continuous evaluation required", "num": "7672", "d": "2/2018"}, {"title": "strange behavior nested arrays checkboxes", "body": "version reproduction link steps reproduce open codepen click checkboxes expected clicking first row checkboxes trigger watcher actually happening triggered changes upper row performed one checkboxes lower row clicked might something wrong", "num": "7670", "d": "2/2018"}, {"title": "assign ref zero result missing element refs", "body": "version reproduction link steps reproduce assign element ref expected p exist refs actually happening p nt refs workaround put additional char ref p refs reference", "num": "7669", "d": "2/2018"}, {"title": "vue server renderer nt render inner routerview", "body": "hi vue server renderer nt render inner routerview server side", "num": "7668", "d": "2/2018"}, {"title": "\u52a8\u6001\u5207\u6362transition\u7684enterleaveactiveclass\u4e0ename\u5c5e\u6027\u5bfc\u81f4\u52a8\u753b\u6548\u679c\u65e0\u6548", "body": "version reproduction link steps reproduce expected \u52a8\u6001\u6539\u53d8\u503c\u540e\u4f9d\u65e7\u663e\u793a\u52a8\u753b actually happening \u52a8\u6001\u6539\u53d8\u503c\u540e\u8df3\u8fc7\u52a8\u753b\u663e\u793a\u7ed3\u679c \u5f53transition\u4f7f\u7528name\u5c5e\u6027\u7684css", "num": "7667", "d": "2/2018"}, {"title": "use instead", "body": "problem feature solve change since soon going depreceated proposed api look like nothing", "num": "7664", "d": "2/2018"}, {"title": "suggestion cache vm emit data", "body": "problem feature solve listener instantiated event emitted get triggered value cached listener triggered even event emitted proposed api look like add flag parameter cache value thank people awesome job lt", "num": "7662", "d": "2/2018"}, {"title": "support ref attribute slots", "body": "problem feature solve composition component like child component slot html child export default name child parent component html parent import child childvue import customcomponent customcomponent export default name parent components child customcomponent would great access customcomponent component element using currently done using statement use case calling child slot component methods thanks proposed api look like accessing slot component using", "num": "7661", "d": "2/2018"}, {"title": "spanish translation", "body": "problem feature solve hello would like collaborate spanish translation done proposed api look like would like collaborate spanish translation done", "num": "7660", "d": "2/2018"}, {"title": "spanish translation", "body": "hello would like translate project spanish already translated", "num": "7659", "d": "2/2018"}, {"title": "add debounce event modifier", "body": "problem feature solve add standard debounce feature events like input keyup etc data driven apps debounce functionality must overloading backend proposed api look like example", "num": "7658", "d": "2/2018"}, {"title": "transform data properties set component", "body": "problem feature solve would nice components ability normalize properties without create additional computed property unwanted property name like myprop computed version mypropnormalized one ever touch inside component mypropnormalized myprop might well exist normalized would allow components consume properties multiple formats input work single format easier consumers component coders component proposed api look like best api designer suppose would prop validation", "num": "7657", "d": "2/2018"}, {"title": "regarding vue class extending support feature request", "body": "able find current documentation wondering plans vue supporting class syntax like know exists vue files part vuejs", "num": "7656", "d": "2/2018"}, {"title": "undefined importing typescript", "body": "version reproduction link steps reproduce using typescript importing vue results reproduce create blank ts file fixed importing like returns ts error testts use new expression whose type lacks call construct signature changing resolves ts error results node error typeerror vuedefault constructor expected errors actually happening see note using webpack example assume happening referencing recommended config statements asis typescript webpack pick use properly however think improved work typescript directly without requiring webpack enter mix would benefit serveronly environments code transpilation nt necessarily required", "num": "7655", "d": "2/2018"}, {"title": "question exist clean solution passing string literal attribute custom directive without error", "body": "problem feature solve hey guys trying write simple custom directive got problem console error told trying solve make directive trigger modal component action mutating vuex store state simple directive hooks looks like example html js problem disappears use single quotes inside double quotes proposed api look like convenient would adding param directive object found online nt work probably older version vue something like case found seems working anymore anyway jumped docs guide nt find suggestion maybe solution nt come across thanks advance help", "num": "7654", "d": "2/2018"}, {"title": "errorhandler working promises async", "body": "version reproduction link steps reproduce vueconfigerrorhandler function err vm info alert handler new vue el app mounted function return new promise function resolve reject throw new error err expected errorhandler called actually happening uncaught promise error err vueconfigerrorhandler called error occurs inside promise awaitasync function want use created hook await call async errorhandler ignored", "num": "7653", "d": "2/2018"}, {"title": "one loop json", "body": "problem feature solve key value write tdata key line key varaible reach proposed api look like like mentioned case", "num": "7652", "d": "2/2018"}, {"title": "von keyupenter work android", "body": "version reproduction link steps reproduce open link minimal reproduction android chrome browser click second field contains text hello vuejs click enter key expected alert box message hello vuejs shown actually happening nothing apparently android recognize command von keyupenter focus changed next field maybe something related may lead errors sites use vue accessed via mobile", "num": "7651", "d": "2/2018"}, {"title": "firefox windows html select flickers", "body": "version reproduction link steps reproduce go open fruit selector dropdown hover option apple lemon orange expected html select dropdown focus back currently selected option cherry model updates actually happening witnessing unexpected html select dropdown flickering looks triggered unrelated model updates tested working fine", "num": "7650", "d": "2/2018"}, {"title": "scoped css applied programmatically added elements", "body": "version reproduction link steps reproduce vue add elements programmatically scoped css applied elements inside given vue file add styling style tag remove scoped attribute work example export default created const item documentqueryselector item iteminnerhtml box background red intended bug expected expect css applied actually happening applied", "num": "7649", "d": "2/2018"}, {"title": "scoped css applied programmatically added elements", "body": "vue add elements programmatically scoped css applied elements inside given vue file add styling style tag remove scoped attribute work example export default created const item documentqueryselector item iteminnerhtml box background red intended bug", "num": "7648", "d": "2/2018"}, {"title": "handle undefined boolean prop value set instead coersing false", "body": "problem feature solve due compositional nature vuejs apps often necessary define props simply passed child component without otherwise using parent coercing unset undefined prop value false vue prevents usage default values props type boolean also context boolean typed props make difference wether something explicitly usage scenario suppose two components props uses instance know values provide props childprop hence moves responsibility providing childcomp props outer scope defining props simply passing child user provide correct input props default values props define defaults remember know use simply moves responsibility away letting user decide setup described leads following useful behavior user may decide provide values may also ommit one props values ommited defaults child kick provide useful values problem bahavior described works prop types except ommiting parent prop values usually leads child prop using default values case props however parent prop without default value undefined always transformed effectively breaking pattern use child default parent prop value ommited child defined boolean prop default value always overwritten parent prop parent prop explicitly define prop default value words needs know implementation detail child proposed api look like props props template usage resulting values currently implemented vue proposed change", "num": "7646", "d": "2/2018"}, {"title": "unexpected reevaluating computed property", "body": "version reproduction link steps reproduce see console expected computing appears actually happening computing appears twice", "num": "7645", "d": "2/2018"}, {"title": "filter executed route change", "body": "version reproduction link steps reproduce alert pop start indicates filter called route change alert pop ups meaning filter executed expected filter called route change actually happening filter called route change behaviour normal", "num": "7644", "d": "2/2018"}, {"title": "different nested transitions working expected root transition gets applied", "body": "version reproduction link steps reproduce create transition inside transition different effects expected two different effects shown actually happening effect root transition shown", "num": "7643", "d": "2/2018"}, {"title": "widthheight without unit style bindings give warning dev mode", "body": "problem feature solve really bad brainfart today trying figure elements nt updating width correctly eventually found missing px bindings everything fine imo would helpful warn author least development mode binding pure number might developer intended could also used properties like height paddings margins proposed api look like api warning widthheight pure number maybe missing unit", "num": "7642", "d": "2/2018"}, {"title": "typings typescript", "body": "version steps reproduce create simple component using typescript import vue vue vueextend props myprop type array computed mycomputed string return hello othercomputed string return thismycomputed following error change type prop smtg else nt problem anymore expected error actually happening errors problem happening previous typescript versions least", "num": "7640", "d": "2/2018"}, {"title": "\u65e0\u6cd5\u83b7\u53d6\u672a\u5b9a\u4e49\u6216 null \u5f15\u7528\u7684\u5c5e\u6027 split", "body": "version reproduction link steps reproduce copy code jsfiddle indexhtml sorry jsfiddle nt support document mode reproduce bug way open indexhtml file ie browser browser open debugger choose useragent must browser simulation tool click datepicker component see error \u65e0\u6cd5\u83b7\u53d6\u672a\u5b9a\u4e49\u6216 null \u5f15\u7528\u7684\u5c5e\u6027 split expected error ie browser mode incompatible document mode know bug caused transition fix actually happening error \u65e0\u6cd5\u83b7\u53d6\u672a\u5b9a\u4e49\u6216 null \u5f15\u7528\u7684\u5c5e\u6027 split js run vue add feature remove tansition", "num": "7639", "d": "2/2018"}, {"title": "use webpack dllplugin server side rendering scenario", "body": "problem feature solve webpack dllplugin reduce build time client build already done write code use dllplugin server side rendering put vendor bundle proposed api look like noop", "num": "7638", "d": "2/2018"}, {"title": "selector name ca nt use special symbols", "body": "version reproduction link steps reproduce selector name contain expected selector name contain work actually happening selector name contain work", "num": "7637", "d": "2/2018"}, {"title": "vbind class work", "body": "selector name contain example work work", "num": "7636", "d": "2/2018"}, {"title": "version mismatch erro bash", "body": "shows vue packages version mismatch vue vuetemplatecompiler", "num": "7635", "d": "2/2018"}, {"title": "ad", "body": "", "num": "7634", "d": "2/2018"}, {"title": "", "body": "found srccomponentsmdbuttonmdbuttonvue srccomponentsmdbottombarmdbottombaritemvue srccomponentsmdripplemdripplevue srccomponentsmdbottombarmdbottombarvue srccomponentsmdcardmdcardvue resourcesassetsjscomponentsuseruservue using", "num": "7633", "d": "2/2018"}, {"title": "vue router push \u5230\u7684 route \u53c2\u6570\u65e0\u6cd5\u4f20\u9012\u5230\u65b0\u5730\u5740", "body": "version reproduction link steps reproduce vuerouter vue vue \u901a\u8fc7name params \u5982\u679c\u8def\u7531\u76ee\u6807\u6709\u914d\u7f6e redirect \u90a3\u4e48\u7b2c\u4e00\u4e2a\u76ee\u6807\u8def\u7531 \u548c\u6700\u7ec8\u7684redirect\u90fd\u6536\u4e0d\u5230params expected vuerouter vue vue \u901a\u8fc7name params \u5982\u679c\u8def\u7531\u76ee\u6807\u6709\u914d\u7f6e redirect \u90a3\u4e48\u7b2c\u4e00\u4e2a\u76ee\u6807\u8def\u7531 \u548c\u6700\u7ec8\u7684redirect\u90fd\u6536\u4e0d\u5230params actually happening vuerouter vue vue \u901a\u8fc7name params \u5982\u679c\u8def\u7531\u76ee\u6807\u6709\u914d\u7f6e redirect \u90a3\u4e48\u7b2c\u4e00\u4e2a\u76ee\u6807\u8def\u7531 \u548c\u6700\u7ec8\u7684redirect\u90fd\u6536\u4e0d\u5230params", "num": "7632", "d": "2/2018"}, {"title": "warn assignment vif development mode", "body": "problem feature solve may fix errors made misktake quickly eg piece code like want proposed api look like nothing", "num": "7631", "d": "2/2018"}, {"title": "vscode eslint\u6309 airbnb \u89c4\u8303\u89e3\u6790 vue \u6587\u4ef6\u6709\u8bef", "body": "vscode version setting eslintrcjs \u914d\u7f6e\u5b8c\u6210\u540e js \u6587\u4ef6\u53ef\u4ee5\u6b63\u5e38\u9a8c\u8bc1 airbnb \u89c4\u8303 \u4f46 vue \u6587\u4ef6\u53ea\u80fd\u9a8c\u8bc1\u90e8\u5206\u89c4\u8303 \u4f46\u50cf missing semicolon \u8fd9\u6837\u7684\u89c4\u8303\u5c31\u65e0\u6cd5\u8bc6\u522b \u4f46\u8fd0\u884c \u662f\u53ef\u4ee5\u8bc6\u522b", "num": "7630", "d": "2/2018"}, {"title": "consider additional naming convention single file component", "body": "problem feature solve consider additional naming convention single file component within directory autoload js css file name vue file help single file component separation concern reduce code proposed api look like", "num": "7629", "d": "2/2018"}, {"title": "suggestion wrapped von invokers return internal result", "body": "problem feature solve trying implement loading button component internally keeps track specified event handlers changes state based resolution state said handlers assuming event handler returns button internally waits promise resolve shows loading state handles accordingly approach inside component keeping track event handler passed let say want look handlers inside event handler internal button wrapping function change state something like typescript thisisloading true await thishandlerfunc thisisloading false consumer using binding like fine works expected problem however try use component use inline method handler optional parameter somehow lose context returned curious issue dug bit deeper found pain point inside wrapper function inline handler returning returned proposed api look like suggestion return result internal handler really way regardless handler written get context internally result handler also makes sense would nt swallow returned value wrapped function thinking solve problem please advise wrong regarding take different approach thanks time ps nt get time yet dive source vue plan fine actual source problem code", "num": "7628", "d": "2/2018"}, {"title": "access html elements anywhere", "body": "problem feature solve vue application along vuex webrtcl calls application u need use html elements jsl api functions able due callbacks api written functions storejs access html elements need send html elements callback function access need access html elements defined inside component template modal template different components chrome gives error proposed api look like access html elements anywhere like element access getelementsbyid etc", "num": "7627", "d": "2/2018"}, {"title": "read property undefined proxyrenderstatic", "body": "version reproduction link steps reproduce run jsfiddle use render function maybe lack vue element lead problem expected normal display actually happening show cause error typeerror read property undefined proxyrenderstatic unpkgcomvue proxyeval eval createfunction unpkgcomvue vuecomponentvuerender unpkgcomvue vuecomponentupdatecomponent unpkgcomvue watcherget unpkgcomvue new watcher unpkgcomvue mountcomponent unpkgcomvue vuecomponentvue mount unpkgcomvue vuecomponentvue mount unpkgcomvue init unpkgcomvue thanks", "num": "7626", "d": "2/2018"}, {"title": "", "body": "template", "num": "7625", "d": "2/2018"}, {"title": "bind checkbox state using vbinded type", "body": "version reproduction link steps reproduce let vue set attribute element via expected vue state updated actually happening vue state updated set input type checkox explicitly", "num": "7624", "d": "2/2018"}, {"title": "using svg template throws warning use builtin reserved html elements component", "body": "version reproduction link steps reproduce import vue component see also chinese expected working whitout warning actually happening throws warning", "num": "7623", "d": "2/2018"}, {"title": "drgewrwer", "body": "version reproduction link steps reproduce dfhsfghfgs expected fsdfgsdh actually happening sfhdfghdg fdghdghj", "num": "7622", "d": "2/2018"}, {"title": "", "body": "version reproduction steps reproduce vplateinputvue javascript export default props value type string default mounted function thisformatvalue methods updatevalue function value var result valuetouppercase emit input result formatvalue function refsvinputvalue thisvaluetouppercase html expected actually happening \u7528\u641c\u72d7\u8f93\u5165\u6cd5\u65e0\u6cd5\u8f93\u5165\u4e2d\u6587", "num": "7621", "d": "2/2018"}, {"title": "report empty vmodel attributes nice debug message", "body": "problem feature solve accidentally creating markup empty vmodel attribute strange debug message displayed vue element renders empty error seen following hello world empty vmodel attribute yes user error may save someone lot time better message displayed message new vue el app data message hello vuejs proposed api look like provide better error message vs vmodel attribute empty syntaxerror unexpected token return c tr attrs id taxrow c td staticclass right totlabel v c span staticclass paddingnone textright staticstyle margintop c input directives name model rawname vmodel attrs type checkbox value name id field taxoverride domprops checked arrayisarray gt change function event var el eventtarget c elchecked true false arrayisarray var v ii v elchecked lt amp amp aconcat v else amp amp aslice concat aslice else c c input attrs type hidden id name value v v c span staticclass paddingnone textright staticstyle margintop c input directives name model rawname vmodel value taxexempt expression taxexempt attrs type checkbox value name id vmodel taxexempt field taxexempt domprops checked arrayisarray taxexempt taxexempt gt taxexempt change function event var ataxexempt el eventtarget c elchecked true false arrayisarray var v ii v elchecked lt amp amp taxexempt aconcat v else amp amp taxexempt aslice concat aslice else set tax exempt c c input attrs type hidden id name value v c td staticclass right strong c input staticclass attrs datainputlength dataplaceholder datacallback ressalestaxcallbackstaxselectphp datawidth type hidden dataid datatext id taxlocation name v c div staticclass inputgroup staticstyle paddingto", "num": "7620", "d": "2/2018"}, {"title": "build project nt request mainjs", "body": "", "num": "7619", "d": "2/2018"}, {"title": "", "body": "appjs file require bootstrap windowvue require vue import vue vue import vuerouter vuerouter vueuse vuerouter import sidebar componentssidebar import dashboard componentsdashboard import transactions componentstransactions const routes name dashboard path dashboard component dashboard name transactions path transactions component transactions const router new vuerouter routes mode history vuecomponent sidebar require componentssidebarvue const app new vue el app router components sidebar sidebar sidebarvue file rendering vuelink tag tag hello chemicals chem chem chem transactions export default name sidebar data return sidebar border width backgroundcolor position absolute height sidebar ul liststyletype none sidebar ul li sidebar ul li active sidebar ul li visited textdecoration none padding color display block borderbottom solid fontsize sidebar ul li hover color caret float right margintop sidebar ul li submenu display none sidebar ul li hover submenu display block borderleft solid footer background padding color textalign right media screen maxwidth sidebar width backgroundcolor position absolute height sidebar ul li span nthchild fontsize textalign center sidebar ul li span nthchild display none please help hours stuck basic stuff using laravel packagejson file case anybody also wants see private true scripts dev npm run development development crossenv nodeenvdevelopment nodemoduleswebpackbinwebpackjs progress hidemodules confignodemoduleslaravelmixsetupwebpackconfigjs watch crossenv nodeenvdevelopment nodemoduleswebpackbinwebpackjs watch progress hidemodules confignodemoduleslaravelmixsetupwebpackconfigjs watchpoll npm run watch watchpoll hot crossenv nodeenvdevelopment nodemoduleswebpackdevserverbinwebpackdevserverjs inline hot confignodemoduleslaravelmixsetupwebpackconfigjs prod npm run production production crossenv nodeenvproduction nodemoduleswebpackbinwebpackjs noprogress hidemodules confignodemoduleslaravelmixsetupwebpackconfigjs devdependencies axios bootstrap popperjs crossenv jquery laravelmix lodash vue dependencies vuerouter", "num": "7618", "d": "2/2018"}, {"title": "tags rendering laravel application", "body": "", "num": "7617", "d": "2/2018"}, {"title": "building local css components getting overridden global css", "body": "version reproduction link steps reproduce added global css mainjs say bootstrapmincss adding css class component level scope build production build expected priority component level css actually happening priority global css", "num": "7616", "d": "2/2018"}, {"title": "pointer custom directive", "body": "version reproduction link steps reproduce first created directives like vuedirective demo bind el binding vnode gt el el update el binding vnode gt consolelog el second use one demo directives like view expected update variable elements output console corresponds instruction bound two different elements actually happening elements output console last one innerhtml", "num": "7615", "d": "2/2018"}, {"title": "undefined var vue instance", "body": "let vm new vue el app data omdbdata movie casts methods getdatafromomdb get function response vmomdbdata response vmgetdatafromthemovie created vmgetdatafromomdb", "num": "7614", "d": "2/2018"}, {"title": "case discrepancy regular event names sync modifier event names", "body": "version reproduction link case consistent across entire framework comes emitting events repo see using snakecase events works using snakecase sync modifier fails sync expects camelcase inconsistency leads confusion mistakes", "num": "7613", "d": "2/2018"}, {"title": "allow data binding inside comments", "body": "problem feature solve data bindings inside html comments ignored sometimes would useful especially using conditional ie comments proposed api look like allow using mustache syntax inside html comments", "num": "7612", "d": "2/2018"}, {"title": "userdef undefined", "body": "come situation got userdef undefined error caused could someone add warning would tell error caused", "num": "7609", "d": "2/2018"}, {"title": "", "body": "version reproduction link steps reproduce dont example cant register component please ignore website example runnig dev mode webpack get error component name dpinput import import dpinput componentsinputsinput components dpinput template dpinput vmodel data expected error need saved html element actually happening get error", "num": "7608", "d": "2/2018"}, {"title": "vmodel nt work attribute", "body": "version reproduction link steps reproduce select one expected selected text appear actually happening value change code works changed native manually binding change works", "num": "7607", "d": "2/2018"}, {"title": "vue fragments react fragments", "body": "problem feature solve solve issue multiple root components allowed like instance trying slots using component page loading checking loading loading state checking valid render main component js vif loading color secondary div velseif loaded slot vcontainer fluid fillheight velse vlayout justifycenter aligncenter slot name noresult result export default name page props loading type number default valid type boolean computed loaded return thisvalid amp amp thisloading part template makes another div prevent multiple root issue like would help know thing done somehow render functions vueish anymore proposed api look like slots template syntax got idea", "num": "7606", "d": "2/2018"}, {"title": "support rendercreateelement", "body": "problem feature solve requirement add quotes around using render functions somewhat annoying seems reasonable support recommend using instead nt need quote single oddball property proposed api look like", "num": "7605", "d": "2/2018"}, {"title": "using reserved keywords computed props inside template expressions", "body": "version reproduction link steps reproduce check error console log expected consistent behavior explained additional comments actually happening vue throws following error indeed something needs fixed propose one following disallow use special keywords like default used create computed properties allow people create computed props names case computed props used inside template expressions", "num": "7604", "d": "2/2018"}, {"title": "decrease fps cesiumjs deep reactivity", "body": "version reproduction link steps reproduce need load array computed position vuejs run cesiumjs create deep object expected array reactivated inner object actually happening array object deep reactivated cesiumjs used object calling getter object fps decreased fps maybe cases need deep set reactivity case needed array items forum help question", "num": "7603", "d": "2/2018"}, {"title": "allow component props read original prop expression", "body": "problem feature solve author dynamic form component porting metawidget vue difficulty passing prop component nt seem able access prop original expression example vue component html could vue component access text string contained attribute fiddle proposed api look like several approaches would suitable extend component props object notation pass second parameter validator could capture original expression well value allow attrs array hold original expression prop angular", "num": "7602", "d": "2/2018"}, {"title": "slot shows information one step past", "body": "version reproduction link steps reproduce click radio buttons see checked state previous one expected pressed button checked state actually happening previous pressed button checked state", "num": "7601", "d": "2/2018"}, {"title": "use loop ios run twice", "body": "version reproduction link steps reproduce let array right wrong run twice nt know ios first find iphone ios second open bugs github demo third see image run code view demo url readme expected forloop run actually happening forloop run twice", "num": "7599", "d": "2/2018"}, {"title": "ssr component cache nt cache strings", "body": "version reproduction link steps reproduce run runkit code prefer git repository provide one expected value passed function string actually happening value passed function object properties html containing rendered component components containing nothing function depending context subcomponents think issue breaks external cache possibility redis case possible cache process memory like lrucache seems impossible scale processes share common cache moreover documentation explain clearly cached value string even provides small redis example implementation could work think documentation describe expected behavior nt want fix documentation think fix behavior try help may need explanations parts rendercontext ask questions thread", "num": "7595", "d": "2/2018"}, {"title": "\u4e07\u80fd\u7684\u5c24\u5927\u5927 \u8bf7\u6559\u4e00\u4e2a\u5173\u4e8e\u73af\u5883\u7684vue\u90e8\u7f72\u95ee\u9898", "body": "problem feature solve \u6211\u73b0\u5728\u6709\u8fd9\u6837\u4e00\u4e2a\u95ee\u9898 \u6211\u4eec\u516c\u53f8\u6709\u591a\u4e2a\u73af\u5883 \u672c\u5730\u5f00\u53d1\u5f00\u53d1\u5c31\u4e0d\u8bf4\u4e86 \u4ec0\u4e48\u5185\u5916\u6d4b\u8bd5 \u5916\u7f51\u6d4b\u8bd5 \u6b63\u5f0f\u73af\u5883\u7b49 \u6211\u4eec\u4f7f\u7528\u7684\u662fhomestead\u96c6\u6210\u7684laravel php \u5404\u79cd\u5730\u5740\u7684baseurl\u5728\u6bcf\u4e2a\u73af\u5883\u4e2d\u90fd\u4e0d\u4e00\u6837 \u5982\u4f55\u624d\u80fd\u505a\u5230\u4e0a\u4f20\u6253\u5305\u4e4b\u540e\u7684\u4ee3\u7801 \u81ea\u52a8\u5207\u6362baseurl proposed api look like", "num": "7594", "d": "2/2018"}, {"title": "ssr component cache nt cache strings", "body": "version reproduction link steps reproduce need running redis server setup project load page gt works reload page error cache wrong expected variable passed component cache string explained documentation actually happening variable passed component cache javascript object tried jsonstringify parse get method object contains set javascript functions loose data stringify issue breaks external cache possibility possible cache process memory like lrucache seems impossible scale processes share common cache moreover documentation explain clearly cached value string even provides small redis example implementation could work", "num": "7593", "d": "2/2018"}, {"title": "velse vfor ca nt used together", "body": "version reproduction link steps reproduce velse vfor ca nt used together expected rendering results actually happening rendering results undefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefinedundefined", "num": "7592", "d": "2/2018"}, {"title": "condition erros vuejs", "body": "trying check variable empty think code looks fine working code javascript empty good export default data function return myvalues new object", "num": "7591", "d": "2/2018"}, {"title": "add wrap directive", "body": "problem feature solve sometimes need wraper element sometimes title title proposed api look like need directive like value haswraper false perform title gt", "num": "7590", "d": "2/2018"}, {"title": "vleave nt work correctly", "body": "version reproduction link steps reproduce click toggle cond expected transition element text button become red first vleave slowly turn green vleaveto actually happening transition element become red first frame vleave nothing green background works fine change version top html panel watch vleave worked since vleaveto available ps beginner", "num": "7589", "d": "2/2018"}, {"title": "functional component rendered prematurely", "body": "version reproduction link steps reproduce check console logs expected foo component rendered ajax call completed setting false actually happening card component render placeholder text fetching data line otherwise render children although foo initially hidden somehow render function gets gets called important note happening foo functional component remove foo see gets rendered log", "num": "7588", "d": "2/2018"}, {"title": "functional component used named slot another component", "body": "version reproduction link steps reproduce ust run demo expected default slot fallback inner actually happening inner named slot fallback like", "num": "7587", "d": "2/2018"}, {"title": "functional component used named slot another component", "body": "vuejs version reproduction link steps reproduce run demo expected default slot fallback inner actually happening inner named slot fallback like", "num": "7586", "d": "2/2018"}, {"title": "refs lost component rerendered", "body": "version reproduction link steps reproduce follow jsfiddle link click see refs printed console expected click switch condition click see console refs empty array expected refs remain valid component rerendered actually happening refs lost", "num": "7585", "d": "2/2018"}, {"body": "issue goes away remove suspect actually safari bug", "d": "2/2018"}, {"body": "imo problem implementation vueautonumeric description component using separate watchers imperatively produce side effects changes different values two values coupled order importance correct implementation get rid order dependence use watcher watches values watch getter function expression produce desired side effects even better use computed properties", "d": "2/2018"}, {"body": "warning telling use template", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "tldr maybe indeed allow required default value check saying prop required expect user always provide value making default value defeats purpose prop required require prop means need information user way provide fallback value otherwise enforce prop never null also providing default value prop value provided values always skip validation want take deeper look prop validation works check research past issues found comment hmm yeah needs accurate indicates value explicitly marked present remain indicates value present default value used available indicates neither allowed unless default used agree could confusing existence vs language design trying stay close values designed represent js changing would break", "d": "2/2018"}, {"body": "yeah currently issue implies prop absent prop value nully validation skipped altogether way enforce prop nonnully times without hence prop omission disallowed also think docs could clear precise definition option", "d": "2/2018"}, {"body": "validation always skipped nully values though validation always skipped nully values though contributions docs always welcome", "d": "2/2018"}, {"body": "validation always skipped nully values though given", "d": "2/2018"}, {"body": "javoski confirmed section code", "d": "2/2018"}, {"body": "right undefined validation skipped nonrequired props", "d": "2/2018"}, {"body": "issue issue issue", "d": "2/2018"}, {"body": "coolzjy", "d": "2/2018"}, {"body": "\u8bf7\u81ea\u884c\u5173\u95ed\u8fd9\u4e2a issue", "d": "2/2018"}, {"body": "coolzjy konw\u4e86", "d": "2/2018"}, {"body": "\u5230forumvuejsorg team member \u68c0\u7d22\u73b0\u6709\u95ee\u9898", "d": "2/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "2/2018"}, {"body": "inherent javascript nature objects passed reference components end modifying object btw declare initial data sure hardcoding values example maybe want please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "2/2018"}, {"body": "nt think good idea easier handle application level displayed internet connection need dynamic approach retry fetching component implement userland using data property set result promise resolves component making easy trigger new request", "d": "2/2018"}, {"body": "done wrapper component nt need builtin", "d": "2/2018"}, {"body": "expected behavior inline template nt access parent scope fact one reasons recommend using inline templates", "d": "2/2018"}, {"body": "thanks evan pretty impressive response time added code inline templates simple example nt mean draw attention aspect github issue clarify main concern warning causing minified unminified versions vue different things lead code working production development chose use unminified version development updated issue name make clear thanks ryan", "d": "2/2018"}, {"body": "looks like warning displayed scenario", "d": "2/2018"}, {"body": "warning displayed usage wrong development breaks app since deploying app breaks development production nt think really need fix behavior behavior dev production guaranteed consistent app works properly development production lot runtime checks removed assume fix development", "d": "2/2018"}, {"body": "ups sorry thought failing parse property simply misread", "d": "2/2018"}, {"body": "solved userland actually already exist made together shentao", "d": "2/2018"}, {"body": "incrementing value attribute also reading vue observing rerendering everytime changes stops rendering times template modify values use index iteration instead method compute value based parameters", "d": "2/2018"}, {"body": "rule thumb never produce side effects templates", "d": "2/2018"}, {"body": "problem call signature returns ts gets wrong inference think best solution await conditional type ts cc ktsn", "d": "2/2018"}, {"body": "yes seems handle dateconstructor without conditional types fyi manually annotate", "d": "2/2018"}, {"body": "valid issue misspelled", "d": "2/2018"}, {"body": "yaodingyd right misspelled", "d": "2/2018"}, {"body": "ups thanks nt see typo either", "d": "2/2018"}, {"body": "passing children specify place although would agree would make things easier assigned automatically corresponding think writing template way would note explicitly name slot say slot need things render functions example functional nonfunctional components sure giving right solution think pr document although sure approach take cc chrisvfritz documentation shows attribute nt section pass slots render functions", "d": "2/2018"}, {"body": "posva think difference templates nt concept since meant used transparent wrappers components exactly transparent wrapper know slots child order explicitly pass sound like bug", "d": "2/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "2/2018"}, {"body": "feature request methods resolve vue give handsome", "d": "2/2018"}, {"body": "actually sent wrong reply issue looks like bug report would like see boiled repro", "d": "2/2018"}, {"body": "need let vue know use templates either add data", "d": "2/2018"}, {"body": "thanks fixed issue still suboptimal make huge list types using solve automating possible write proper fix vue make happen limitation workaround fixes second searched docs instanceof find anything related miss something fix explaining somewhere", "d": "2/2018"}, {"body": "fix need explicitly add classes way add data using instances data usually good idea serializable making hard use ssr applications nt found docs", "d": "2/2018"}, {"body": "seems regression feature internal change tried seems work well found workaround yet", "d": "2/2018"}, {"body": "likely related considered fix related issue", "d": "2/2018"}, {"body": "would argue vue intended used animations rapidly changing style value bindings would horrible performance simple components rerender whole component every scroll event opinion rather done dom level ie custom directive dedicated animation library biger things", "d": "2/2018"}, {"body": "add class right element added dom browser able trigger css transition browser checks transform also check transform applied turns none therefore skips transition need make work demo vue", "d": "2/2018"}, {"body": "previous understanding transition nt work vanilla js example event loop finish task queue clear stack first proceed render queue case first renders already rendering element test loaded class thus transition possible reference pensive however vue case thought mounted means executing code component already mounted rendered already initial transition state rendered first different vanilla js case one initial state already element test loaded class", "d": "2/2018"}, {"body": "currently option called preservewhitespace vue loader choose strip empty text nodes using single file components actually option vuetemplatecompiler afaik exposed runtime api yet", "d": "2/2018"}, {"body": "thing happens regular html empty lines css apply html want spaces however remove white spaces template html item closing sure new line replaced empty space behaviour consistent automatically removing whitespaces using newlines regular html would yield result", "d": "2/2018"}, {"body": "want spaces however remove white spaces template really practical solution though putting everything one line turns unreadable mess anything trivial templates closing sure new line replaced empty space behaviour consistent automatically removing whitespaces using newlines regular html would yield result vue collapse everything inside single line already chomping newlines turning spaces instead wants preserve newlines sure would consistent vanilla html acts nt currently results unintuitive justineo using seem get intended result said available via moment way activate single node bit icky turn entire project want behavior single template even single part single template great directive like could used individual node briefly looked writing directive get end result reasonable hook use seemed changing element point led inconsistent results probably good place touch html", "d": "2/2018"}, {"body": "way activate single node like evan said except might solved css think better keep consistent across whole project custom directives may work remove whitespaceonly text nodes instead setting directly", "d": "2/2018"}, {"body": "like evan said except might solved css think better keep consistent across whole project nt really work reusable components library ca nt least nt force users change projectwide settings also applicable using moment custom directives may work remove whitespaceonly text nodes instead setting innerhtml directly right seemed make work nicely example directive anyone comes across looking solution javascript function trimemptytextnodes el let node elchildnodes nodenodetype nodetextnode amp amp nodedatatrim noderemove vuedirective trimwhitespace inserted trimemptytextnodes componentupdated trimemptytextnodes open question remains regarding vue chomping newlines single space rationale behavior chomped newlines nothing rather single space would work box", "d": "2/2018"}, {"body": "collapsing new lines white spaces consistent behavior html", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "maybe meaning", "d": "2/2018"}, {"body": "jounqin yeah changed description", "d": "2/2018"}, {"body": "perhaps means behave like von works way something like passed sure nt executed template parsed event emitted", "d": "2/2018"}, {"body": "jangjoe exactly", "d": "2/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "2/2018"}, {"body": "ie problem firing input event happens without vue listen another event also emitted ie", "d": "2/2018"}, {"body": "guess problem webpackdevserver instead vue try replace directory ie wo nt recognize babel wo nt work anyway solved mine worth try", "d": "2/2018"}, {"body": "much without minimal reproduction consider using forum discord server stackoverflow ask help need share code want others help", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "oltika use forum discord server stackoverflow questions", "d": "2/2018"}, {"body": "please actually read responses keep opening issues ignoring policies block", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "supported intentional extra properties arrays jsonencodable", "d": "2/2018"}, {"body": "wo nt work even future", "d": "2/2018"}, {"body": "point consistency reassign different empty array extra properties reactives change array content extra properties reactives change extra property array extra properties reactives extra properties array jsonencodable impossible get work nt want support", "d": "2/2018"}, {"body": "property never reactive reassign change array content triggers component rerender accidentally pulls latest value property update caused property technical limitation bestpractice enforcement state jsonencodable leads problems debugging tools serverside rendering", "d": "2/2018"}, {"body": "know getterssetters array extra properties meant feels like reactive confusing reactives metadata array wrap object big deal well arrays objects thanks explaination ssr amp debug needs", "d": "2/2018"}, {"body": "duplicate make sure open issue right repo", "d": "2/2018"}, {"body": "value got string modifier helpful", "d": "2/2018"}, {"body": "thanks quick reply works charm", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "forgot prop component", "d": "2/2018"}, {"body": "posva mean add warn change version really works well without adding", "d": "2/2018"}, {"body": "course also need remove using correctly", "d": "2/2018"}, {"body": "please update document copied code straight away posva", "d": "2/2018"}, {"body": "done nt forget also nice contribution", "d": "2/2018"}, {"body": "think returning string definitely worth better writing string regarding array containing strings could create textnodes", "d": "2/2018"}, {"body": "nkovacs problem creating root node output returning would look like valid within vue requires root element either wrap tag directly instead defining template pass wrapping element tag name like component", "d": "2/2018"}, {"body": "functional component multiple root elements allowed example works fine even workaround works fine strings converted text nodes", "d": "2/2018"}, {"body": "okay bad never used functional components way ended multiple roots", "d": "2/2018"}, {"body": "consistent indeed name components camelcase fix error btw probably normalization going working correctly", "d": "2/2018"}, {"body": "yes mostly use pascalcasing actual code camelcasing thought name comes third party library help though bit tricky naming done party libraries consistent normalization good cheers", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "intentional even error telling templates responsible mapping state ui avoid placing tags sideeffects templates", "d": "2/2018"}, {"body": "hmm thinks bit unfortunate inlining svgs may ship default styles", "d": "2/2018"}, {"body": "agree styles inside svg maybe kept", "d": "2/2018"}, {"body": "root vue component always created javascript land would pass data using standard javascript objects want query dom data away", "d": "2/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow maybe looking", "d": "2/2018"}, {"body": "need use instead even without vue", "d": "2/2018"}, {"body": "please provide proper reproduction believe behavior correct misleading jumping directly feature requests makes difficult evaluate enough context", "d": "2/2018"}, {"body": "thought bit warning like nt make sense perfectly normal computed prop collected dependency initial render used part template conditionally rendered yet would create strange warnings perfectly fine situations hand useful rare ones think evan misunderstood request bit would agree keep closed really doable way creating unnecessary misleading warnings", "d": "2/2018"}, {"body": "linusborg thinking would warn computed prop never consumed anywhere including conditional logic computed way would extra warnings idea warn computed props legitimately unused possibility ever evaluated current logic", "d": "2/2018"}, {"body": "thinking would warn computed prop never consumed anywhere would require vue go meta component analyse understand component code data flow wo nt even possible included babel vue generating warning question could maybe write eslint rule eslintpluginvue statically checks sure eslint clever", "d": "2/2018"}, {"body": "afraid would say", "d": "2/2018"}, {"body": "use imperative api", "d": "2/2018"}, {"body": "imperative api called lifecycle hook degree defies point watch simple semantic convenience layer internal api course could use watch api craft solution way think worthwhile give users watch syntax track multiple dependencies beginning least leaving considerationdiscussion vs closing prematurely", "d": "2/2018"}, {"body": "thought bit build pluginmixin concerning quickly closing issues practically api freeze add things large usability impact lot people order keep size api surface small enough useful lot people come wo nt probably nt invest limited resources", "d": "2/2018"}, {"body": "linusborg thought end number priority keep components clean possible also consistent documentation others reuse edit yes could add code component even fork vue code mentioned every component soon cross line code longer consistent understandable also know internals well yet lot easier yell guys", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "documentation mention lazy evaluation reported documentation linked disclose lazy evaluation misleading documentation", "d": "2/2018"}, {"body": "described computed properties often reevaluated underlying data changes bug aware situations case need provide bug report reproductions", "d": "2/2018"}, {"body": "true false computed property used dom anywhere else reevaluate even data changes", "d": "2/2018"}, {"body": "long discussion forums mainly refers computed props evaluated accessed access directly indirectly render function example wo nt value devtools example think mention docs would fine since otherwise people confused computed prop nt update even though one dependencies changed reason might part render tree using next rerender skipped conditional people using computed prop might confused nothing logging console documentation issues opened vuejsvuejsorg repository", "d": "2/2018"}, {"body": "linusborg thanks translating apologize posting wrong repo nt see one initially thanks tip", "d": "2/2018"}, {"body": "related issue mentioned well user understand computed props updated accessed think critical point otherwise mistaken bug source frustration", "d": "2/2018"}, {"body": "since works makes sense also support checkbox", "d": "2/2018"}, {"body": "looks like bug probably check replaced", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "translate may good job looks want way abort transition", "d": "2/2018"}, {"body": "\u4f60\u7684\u65b9\u6cd5\u4e2d\u6a21\u7248\u5b57\u7b26\u4e32\u6f0f\u4e86", "d": "2/2018"}, {"body": "\u540c", "d": "2/2018"}, {"body": "feel free submit pr feature request", "d": "2/2018"}, {"body": "actually already done", "d": "2/2018"}, {"body": "accepted", "d": "2/2018"}, {"body": "would reallife scenario useful trying yo bff earns situation would apply listener child component later upfront", "d": "2/2018"}, {"body": "nt think good idea replay previously cached events whenever attach event listener looks like specific use case implemented userland replacing custom implementation call original one", "d": "2/2018"}, {"body": "usage sound like good idea slots definition indeterministic may single component may also multiple components single element multiple elements ref behavior really ambiguous directly calling methods ref component code smell use events state management pattern", "d": "2/2018"}, {"body": "agreed", "d": "2/2018"}, {"body": "wip translation effort nt know active suggest get touch anyway correct repo discussing documentation including translations vuejsvuejsorg", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "hello intentionally removed see details", "d": "2/2018"}, {"body": "asking coerce come back intentionally removed favour computed properties", "d": "2/2018"}, {"body": "problem computed properties nt replace functionality creating unwanted aliases need one variable", "d": "2/2018"}, {"body": "point method manually implementing coerce vue via plugins essential use case", "d": "2/2018"}, {"body": "may able use prop read value coerce removed basically computed property realiased better values explicit approach", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "duplicate may want enable", "d": "2/2018"}, {"body": "note double single quotes vue directive values javascript expression recommended way represent string literal compiles plain javascript see directive literal modifier removed", "d": "2/2018"}, {"body": "thanks replies know singledouble quotes trick still looks ugly easy miss make typo different solution mentioned solution appropriate", "d": "2/2018"}, {"body": "quote another api change occur think reasoning proposal might rejected similar issue proposal syntax eg prop result different values based component prop type expectations consumer component need understand complex conversion rules gets casted b props expects type amp b together order infer eventual value something casted comparison simpler rule set prop xxx always string prop xxx always expression true false use well prop true type boolean special case makes sense easy tell", "d": "2/2018"}, {"body": "sirlancelot said", "d": "2/2018"}, {"body": "like idea since getting common would probably nice thing", "d": "2/2018"}, {"body": "pass without curlies vue nt magic interpolation javascript expression", "d": "2/2018"}, {"body": "use button android event something vue fix need site work mobile avoid relying keyup events submit logic", "d": "2/2018"}, {"body": "looks like firefox selecting value vue rerenders happens timestamp updating every second vue needs rerender case renders whole template solution actually quite simple isolating select component nt rerender outer content rerenders", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "duplicate need things booleans set different type prop reality booleans", "d": "2/2018"}, {"body": "whenever call set array whole array flagged dirty track array index access expected behavior trade prioritize correctness improved switch proxies", "d": "2/2018"}, {"body": "expected behavior router view functional component registers route dependency component using", "d": "2/2018"}, {"body": "need add nested one appearing nt apply transition first time rendered", "d": "2/2018"}, {"body": "posva thanks working used inside single file component code ideas", "d": "2/2018"}, {"body": "work well create reprodiuction open issue reproduce", "d": "2/2018"}, {"body": "would mean check properties accept units opposite checking unit provided unit provided many possible units em rem px ms well people probably expect check validity units prevent typos like pb depends keyboard try plain page set style element number see browser nt print warning error nt even add element ignores browser problem frontend libraries suffer rather see warning browser console warning emitted different frontend frameworks imo belong vue", "d": "2/2018"}, {"body": "true also good alternate behavior would least lead tohint path discovering working vue converted number without unit simple invalid value", "d": "2/2018"}, {"body": "vue converted number without unit simple would strange afaik vue nt mess strings style bindings way", "d": "2/2018"}, {"body": "vue nt convert unit absolute works units nt need one try console see nothing happens", "d": "2/2018"}, {"body": "following example updating input width correctly stuck unless specifically add px unit style binding", "d": "2/2018"}, {"body": "think warn styles frontend framework good idea style behaviors defined specific platform put warnings plugin appropriate way css length could number without unit weex seen taking default unit another word pass number could valid using vue weex", "d": "2/2018"}, {"body": "spacemon ys expected behaviour like guide shows vue doesnt add add posva explained validating css syntax even development surely complex integrate", "d": "2/2018"}, {"body": "alright seeing mentions even feature weex guide section must missed fine asis guess something put nt work check list", "d": "2/2018"}, {"body": "believe bug typescript cast ts import vue propoptions vue vueextend props myprop type array propoptions", "d": "2/2018"}, {"body": "herringtondarkholme know specific issue track related", "d": "2/2018"}, {"body": "\u8fd9\u662f element ui vue \u8fd9\u91cc\u6765\u62a5", "d": "2/2018"}, {"body": "got thx", "d": "2/2018"}, {"body": "like", "d": "2/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow", "d": "2/2018"}, {"body": "jounqin thank help dll bundle prebuilt uploaded cdn later think may necessary write dll file webpack mfs use dllplugin webpack server build require statement built app bundle like normal node require statement fine", "d": "2/2018"}, {"body": "sharing codes development simply add dll script template html like", "d": "2/2018"}, {"body": "yeah script necessary", "d": "2/2018"}, {"body": "hi thanks filling issue due fact javascript object literals key please quote key instead", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "use vue expecting valid javascript expression attribute value neither values js expressions want surround value single quotes like since providing static string better remove entirely vbind documentation", "d": "2/2018"}, {"body": "ok thanks", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "oops sorry thought posted somewhere else", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "fiddle nt params actually pass params way want please next time consider using forum discord server stackoverflow questions first feel free come back open issue vuerouter repository turns bug", "d": "2/2018"}, {"body": "js common pitfall beginners vue said editor linter", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "\u8fd9\u4e2a\u5230", "d": "2/2018"}, {"body": "think better explicit magical imo easily made painless editor snippet", "d": "2/2018"}, {"body": "see", "d": "2/2018"}, {"body": "coolzjy thanks response think issue regarding unless failing see connecting dots agree comments nt want propagate return values saying expected return value handlers exactly method returns unexpected apparent called inline handler wo nt return result case specifically", "d": "2/2018"}, {"body": "think makes sense behaviour consistent", "d": "2/2018"}, {"body": "nothing prevents using getelementbyid code also pass elements around dispatching actions closing since nothing vue preventing access html elements looks like question check forum discord server stackoverflow questions", "d": "2/2018"}, {"body": "come ask question nt answer forum chat keep issues bug reports feature request please respect maybetry sharing code forum question likely people help provide code", "d": "2/2018"}, {"body": "already think share code forum help element problem really really need help people known vuejs well", "d": "2/2018"}, {"body": "template add tag name need send somewhere pass argument usual ref documentation", "d": "2/2018"}, {"body": "pass function missing need put everything yes xxx please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "2/2018"}, {"body": "staticrenderfns vuecompile yes xxx staticrenderfns add correct thanks", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "need change bind method copy example reference", "d": "2/2018"}, {"body": "thanks gotraveltoworld taking time reply works expected still considering behaviour example buggy api docs states used without argument used bind object containing attribute namevalue pairs note mode class style support array objects example mentioned whats wrong use case note set attribute wanted take advantage gon na try set explicitly rest argument", "d": "2/2018"}, {"body": "altered example surprise solution bind argument specifically use bind rest arguments dont understand behavior updated example", "d": "2/2018"}, {"body": "probably creating component named could nt reproduce jsfiddle next time please take time provide proper repro using one links provided vue issue helper thanks", "d": "2/2018"}, {"body": "posva mistake component named thanks much", "d": "2/2018"}, {"body": "\u76d1\u542c\u4e2d\u6587\u6587\u672c\u8f93\u5165\u4e0d\u80fd\u7528 input", "d": "2/2018"}, {"body": "get value composition ends please next time consider using forum discord server stackoverflow questions first feel free come back open issue turns bug", "d": "2/2018"}, {"body": "handled", "d": "2/2018"}, {"body": "used development runtime faster building also using ts", "d": "2/2018"}, {"body": "sorry bug report nt help debug apps", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "thank interest project however issue usagesupport question issue tracker reserved exclusively bug reports feature requests outlined contributing guide encourage ask forum stack overflow discord chat happy help", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank issue issue issue \u5411\u5bfc \u6765\u521b\u5efa\u65b0", "d": "2/2018"}, {"body": "make sure include css libraries first js mainjs import vue vue import bootstrapcssbootstrapcss nt know import app app rest code please next time consider using forum discord server stackoverflow questions first feel free come back open issue relevant repository template vueloader case turns bug", "d": "2/2018"}, {"body": "thanks comment fixed way already used write css component scope overridden global css component level css priority right wrong please correct", "d": "2/2018"}, {"body": "also depends css rule specificity completely different topic unrelated vue", "d": "2/2018"}, {"body": "arrow functions nt please refer updated demo", "d": "2/2018"}, {"body": "also directives longer instances means inside directive hooks instead receive everything might need arguments really must persist state across hooks el", "d": "2/2018"}, {"body": "sqal know used nt think good way child els may removed must write another data container saved child els status avoid conflict container connected parent made redundance associatefor example destroy container destroy directive manually", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "consistent happens expands onto something reconsider next version change breaking change feel free improve section docs could definitely small example instead would great could submit pr", "d": "2/2018"}, {"body": "posva sure glad open pr get chance another approach instead breaking change would slowly introduce eg start printing console warning event names emitted snake case deprecated transition period several versions snake case camel case event names could supported eventually snake case would phased", "d": "2/2018"}, {"body": "hhm usually goes header outside nt think use content use browser detection include scripts want even better serve different page based browser using useragent using vue inside ie comment looks like overkill", "d": "2/2018"}, {"body": "also conditional comments nt go inside head example outlook use case could email editor ui", "d": "2/2018"}, {"body": "hi thanks filling issue conditional comments gets translated ie soon html parsed elements therefore manipulated meant static manipulated javascript verify behavior going open example ie say open inspector wo nt see conditional comments dom tree even add one manually editing html comment gets transformed real html elements comment seen edited", "d": "2/2018"}, {"body": "easier use package like browser detect toggle content", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "component exported property input looks like might eg nt able change componentsinputsinput file could override name using vueextend", "d": "2/2018"}, {"body": "hi thanks filling issue repro ca nt put jsfiddle try using github repo thanks", "d": "2/2018"}, {"body": "thank right changed name", "d": "2/2018"}, {"body": "also getting warning using name marked reserved tag name html tags transformed lower case svg tags fnlctrl consistent", "d": "2/2018"}, {"body": "hi thanks reporting however elements teated component vue compiler generates different code component native element kind issue guess please use directly", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "actually add directly like besides already working like react fragment", "d": "2/2018"}, {"body": "jzking emits errors use component root element may contain multiple nodes", "d": "2/2018"}, {"body": "duplicate", "d": "2/2018"}, {"body": "requirement add quotes around class using render functions hu would news elaborate", "d": "2/2018"}, {"body": "nt keyword used property key identifier also code goes compiler like babel quote wo nt break even obsolete browsers", "d": "2/2018"}, {"body": "ah thanks linusborg docs led astray", "d": "2/2018"}, {"body": "actually valid point docs would open issue vuejsorg repository", "d": "2/2018"}, {"body": "check implies define reactive property using keywords including computed properties adding extra check comouted seems redundant", "d": "2/2018"}, {"body": "user defines computed prop allowed expect use template ca nt inconsistent behavior", "d": "2/2018"}, {"body": "use objectdefineproperty prevent vue picking reactivity large datasets", "d": "2/2018"}, {"body": "need matters actual value data", "d": "2/2018"}, {"body": "agree value important however case trying dynamically generate nested subcomponents based toplevel json schema json schema lets describe generated ui using richer metadata eg required fields alternate label texts etc important understand path eg foobarbaz original expression navigate path json schema", "d": "2/2018"}, {"body": "could something like job", "d": "2/2018"}, {"body": "understand fiddle passing original expression via second parameter nt seem dry nt relying second parameter exactly mirroring first without enforcement would seem prone copypaste errors", "d": "2/2018"}, {"body": "actually custom directives provide less functionality want con nt know bug feature element ca nt twice directive arguments fiddle notice using arbitrary arguments", "d": "2/2018"}, {"body": "already vue working demo wonder done frameworks feature highly reflective nature like asking source string arguments parameters passed function", "d": "2/2018"}, {"body": "leopiccionia like custom directives approach however componentlevel custom directives used child components seems way use toplevel component", "d": "2/2018"}, {"body": "think kennardconsulting problem probably solved stated reading prop expression highly reflective use case mentioned probably nt weigh performance overhead would incur", "d": "2/2018"}, {"body": "modifying active array nt work vue reactivity must use vueset one vueset thistabs idx active true", "d": "2/2018"}, {"body": "please fork test solution first switching tabs works fine problem related code breaks works think something wrong vue reactivity thinks need rerendered fact necessary", "d": "2/2018"}, {"body": "hi thanks filling issue direct reason updated child component render function call modified demo demonstrate behavior due vue updates view render function gets called parent child example updated root render function called first render function calls tab slotsinput outdated finally render function updates slotsinput therefore nothing vue could code actually working vue fundamental update logic trying get child render result inside parent child rendered please consider changing implementation", "d": "2/2018"}, {"body": "nice sample", "d": "2/2018"}, {"body": "hi thanks filling issue loops accesses properties prototype need hasownproperty check related vue common javascript pitfall", "d": "2/2018"}, {"body": "hi fact vue property computed property run twice forloop yes may vue changed property doubt way vue doest similar performance common js add demo common js see", "d": "2/2018"}, {"body": "may reopen", "d": "2/2018"}, {"body": "old issue rejected heavy example", "d": "2/2018"}, {"body": "nt think ssr cache behavior expected either however component cache also needs cache component lifecycle rendering type definition documentation outdated", "d": "2/2018"}, {"body": "actually nt see cache component lifecycle rendering component rendered template cached string html part currently stored object component get fetched cache template static depend store nt see register child components course browser takes back hand make dynamic like every components miss something", "d": "2/2018"}, {"body": "tried remove component registration see breaks inline styles cached version still looking solution store cache external data store", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "\u0441\u043e\u0432\u0435\u0442\u0443\u044e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c angular js \u043c\u044b \u0447\u0435\u043c vue \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u043e\u0447\u043d\u0443\u044e \u043e\u0441\u043d\u043e\u0432\u0443 \u0434\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 \u043c\u043e\u0441\u043a\u0432\u0435 \u5728 notifications githubcom receiving subscribed thread reply email directly view github mute thread", "d": "2/2018"}, {"body": "\u8fd9\u79cd\u8c04\u5a9a\u7684\u6807\u9898\u8ba9\u4eba\u770b\u7740\u5c31\u6765\u6c14 \u8fd8\u6307\u671b\u6709\u4eba\u613f\u610f\u5e2e\u4f60", "d": "2/2018"}, {"body": "please provide minimal repro opening issue example redis nuxt redis example working docs please open pr instead", "d": "2/2018"}, {"body": "expected vfor higher priority conditionals like vif vshow put one element executed item vfor loop use template tag", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "hello achieved userland component similar untested", "d": "2/2018"}, {"body": "thank u", "d": "2/2018"}, {"body": "added fontsize vleave vleaveto result expect transition fontsize", "d": "2/2018"}, {"body": "relevant vue try fiddle removes vue dependency use web transition need specify fontsize explicitly like", "d": "2/2018"}, {"body": "hi thanks interest github issues bug reports feature requests ask questions forum discord server gitter stackoverflow maybe want repro issue talking properties", "d": "2/2018"}, {"body": "hey thanks opening issue actually expected behaviour functional components get rendered parent component passed component however simple trick using function example scopedslots make sure functional component rendered call course also use function prop", "d": "2/2018"}, {"body": "happens functional component taking named slot nothing need pass child using expect would quite problematic could produce unexpected side effects slots leaking descendant children specific example functional component look like", "d": "2/2018"}, {"body": "hello issue closed conform issue requirements order ensure every issue provides necessary information us investigate require use issue helper creating new issues thank", "d": "2/2018"}, {"body": "wait component fully patched use nexttick", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "made mistake code complex event listeningbinding place forgot unregister event listeners beforedestroy hook hence still old context empty refs working thanks much help", "d": "2/2018"}, {"body": "think set path object case stuff like following elements js elrotation elrotationy following could convenient template", "d": "2/2018"}, {"body": "anything shorthand beyond original scope proposal nt think magic path extensions good idea like reaching child component private state", "d": "2/2018"}, {"body": "interesting suggest refactor custom elements attributes properties like following makes javascript api less clean live could even automatically map etc", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "yeah easy work around concerned performance like follows adding properties custom elements plus makes clear attributes map directly properties without reaching places represented attributes maybe good thing looking forward prefix notation", "d": "2/2018"}, {"body": "plus makes clear attributes map directly properties without reaching places represented attributes maybe good thing well maybe moot also possible exists custom element instance without attribute part element html api example ssr would send data client attribute js hydration send data element instance property case notation like would work", "d": "2/2018"}, {"body": "posva make sense way get rid things make wrapper lighter weight like react", "d": "2/2018"}, {"body": "akryum make lot vue files really nt want", "d": "2/2018"}, {"body": "ok lot html files smile", "d": "2/2018"}, {"body": "javoski think would best data whole child component initialization think reactive dependency child component", "d": "2/2018"}, {"body": "xiaodemen sorry ambiguity pr title component props reactive nt collect dependencies initialization data option", "d": "2/2018"}, {"body": "javoski know data option case nt collect dependencies eg component created hook mount hook immediate watch many cases think better pause dependency collection restart perspective lifecycle rather simply reseting case occuring", "d": "2/2018"}, {"body": "xiaodemen yes right nt aware try figure better solution", "d": "2/2018"}, {"body": "public option vue components yet see vuejsvuejsorg might problematic use outside vue core atm suggest give details current use case help core team consider thoroughly behavior finally make public", "d": "2/2018"}, {"body": "closing due inactivity", "d": "2/2018"}, {"body": "work though maybe talking checkbox appearing checked", "d": "2/2018"}, {"body": "posva main idea create component state could driven without provided uses falls back internal state providing way react state changes", "d": "2/2018"}, {"body": "thanks answering really appreciate", "d": "2/2018"}, {"body": "working expected according tests", "d": "2/2018"}, {"body": "verified yes seems work intended think typo javoski pointed recommend closing issue", "d": "2/2018"}, {"body": "nt typo still destroyed even empty forgot leave comment last time tried dig issue", "d": "2/2018"}, {"body": "fnlctrl tried fiddle posted saw digging little deeper keeping clear watch array issue actually related vue click multiple times multiple cached versions cache vue actually tracks element still completely destroyed screenshot see multiple versions living array try empty cache repeatedly till gone also throws function accordingly might want use set instead array prevents duplicates", "d": "2/2018"}, {"body": "ca nt find way stop production tip directly change vuejs file", "d": "2/2018"}, {"body": "shepelevstas", "d": "2/2018"}, {"body": "codepen demo show", "d": "2/2018"}, {"body": "fixed", "d": "2/2018"}, {"body": "hi iphone se ios vue transitions seems work like final state displayed short time transition plays expected maybe bit faster played transitions official vuejs transition site play strange way animation animatecss velocity plays expected ios pc vuejs version edit updated device latest ios version seems animations work properly", "d": "2/2018"}, {"body": "tested nt reproduce issue guess appears ios", "d": "2/2018"}, {"body": "think classes correctly applied original video showing custom application thanks checking jkzing", "d": "2/2018"}, {"body": "hi thanks filling issue able get results latest chrome vue vue following logs seen either vue version vue version nt matter watcher watcher closing simply race condition caused implementation whether move mouse immediately clicking nothing oschromevue version", "d": "2/2018"}, {"body": "easy way intelligently merge classes way docs mention normal components", "d": "2/2018"}, {"body": "sure vue issue ios really terrible detecting show onscreen keyboard web browsers times likely ios bug could reproduce simple vanilla javascript showhide", "d": "2/2018"}, {"body": "giwayume exact code showing keyboard focus vue vue show keyboard ios device try links edit using vanilla js thing keyboard shown", "d": "2/2018"}, {"body": "arnesten understand nt change code pointing vue would coding workarounds ios bugs phone responsibility show keyboard since javascript api tell", "d": "2/2018"}, {"body": "giwayume nt know classified bug ios since specification onscreen keyboard behave think problem much delay user click vue updating dom setting focus input vue delay shorter worked fine ios quite common search icon mobile web app click show focus search input opening keyboard instead requiring second click relatively big ux issue case hopefully fix least workaround downgrading vue found situation", "d": "2/2018"}, {"body": "guess another issue micromacro task introduced ios requires user input showing keyboard vue uses micro task user click counts valid trigger keyboard however uses macro task ios longer treats trigger", "d": "2/2018"}, {"body": "see point implementing thing dedicated devtools unit tests useless one testing everything executed anyway", "d": "2/2018"}, {"body": "hi thanks filling issue works vue template compiler special logic taking first argument input handler like manually nt work functional components case compiler could nt know whether use input handler since impossible know render function would return runtime therefore always uses default generating input handler instead way make work linusborg said though entirely correct add native html elements nt use manually call demo cc shameleo closing nothing vue without putting great effort trying analyze arbitrary runtime behavior manually written render functions", "d": "2/2018"}, {"body": "ran exact issue nice workaround", "d": "2/2018"}, {"body": "learning vue struggling past hours thanks bringing", "d": "2/2018"}, {"body": "reopening kingwl probably closed accidentally pr fork", "d": "2/2018"}, {"body": "fujisunny investigation found get work simply replace vue patch mechanism caused root cause different behavior chrome see fiddle sure need improvement wontfix", "d": "2/2018"}, {"body": "jkzing much thanks investigation scenario would like use solution hope would happen situation", "d": "2/2018"}, {"body": "use method work", "d": "2/2018"}, {"body": "posva reason put two options", "d": "2/2018"}, {"body": "worth aforementioned typescript issue fixed requires one add make things work done however run another roadblock error message raised idea possible use build contains compiler typescript tired trying get work go back react", "d": "2/2018"}, {"body": "issue got gulpfile transpile typescript bundle browserify app bundles one vendor bundle got working mostly however followed code results tried setting flag nt work dependencies ideas resolve", "d": "2/2018"}, {"body": "managed get working using plugin flag transform rather using passing result", "d": "2/2018"}, {"body": "thank explanation", "d": "2/2018"}, {"body": "tested realized last night vue existing attributes used set custom css properties reactively properties used child pseudoelement selectors one would expect thought autowiring css variables block compilation match hyphenatedprefixed propdatacomputed element feels bit conventionbased could cause issues variable intended defined modified child component root tag since vue compiler would naive regex search since reasonable solution already go ahead close issue thanks everyone making vue awesome", "d": "2/2018"}, {"body": "posva thx reply hard find mistake", "d": "2/2018"}, {"body": "multiple root elements template would nice js libraries ui frameworks seems necessary far reached workaround like defining dummy component export default data function return parent null children null beforemount function thisparent elparentelement thischildren elchildnodes thisparentremovechild el jquery thisparent append jquery thischildren mounted function consolelog dummy thischildren test import header componentsheader import nav componentsnav import dummy componentsdummy export default components dummy header nav mounted function consolelog index mounted way could nt manage fix without using jquery", "d": "2/2018"}, {"body": "another use case struggling parent component defines grid multiple named templateareas ideally child component would since child component single wrapping element nt work work around causes problems", "d": "2/2018"}, {"body": "could someone open issue vueloader", "d": "2/2018"}, {"body": "also struggling lack support multiple root elements components reviewed comments issue written problem layout uses css grid css grid grid areas apply direct child element since vue component must single root element possible component represent multiple grid areas eg multiple rows columns essentially problem tochoromero raised single component represent multiple elements use case best workaround found forgo component use instead second example trusktr mentioned coming soon used imperfect workaround problem css grids say imperfect semantically equivalent replacing parent div children dom seen first example selector applies div children response sirlancelot created fiddles show issue keen see sirlancelot would work around issue problem since useful range options available example using single root div component example workaround tables want component represent multiple possible using root element discussed possible component represent multiple nt think help us linusborg permit meta question best place continue discussion implementation feature", "d": "2/2018"}, {"body": "euoia real place yet middle setting seperate repository rfcs suggested discussed community would probably best place available soon properly announced time come", "d": "2/2018"}, {"body": "pretty compelling realworld case sure proceed without access multiple root nodes developing essentially tableaccordion table adds rows click show details entry table located researcher groups component subcomponent appresearchergroupentry researchergroupentry using vuematerial problem would using plain anyway structure kind like researchergroupentryvue keyboardarrowdown keyboardarrowright indexvalue groupdatalabel group addbox add client client type settings settings problem comes want able expand clients like mockup would trivially easy could add another researchergroupentry component unfortunately wrapping div span tag wo nt work messes table wasnt using vue material might considered using jsx component could simply use map parent create array components based two variables might still able vfor directives sure may create props crazy pseudo array merging parents children uuuuugly code", "d": "2/2018"}, {"body": "ktsn vue util contains useful outside internal api maybe move somewhere else", "d": "2/2018"}, {"body": "also would like able use mentioned syntax resulta resultb able access deep properties without use long names like", "d": "2/2018"}, {"body": "sort style notation like javascript thoughts javascript keyword blockscoped consistent ed values accessible child nodes", "d": "2/2018"}, {"body": "declare nt", "d": "2/2018"}, {"body": "alexandrebonneau nt make sense", "d": "2/2018"}, {"body": "thoughts would still need computed property method cases data coming api bc possibility nullundefined keeping separation template presenting data marginally verbose gains clarity also reduction size vue core", "d": "2/2018"}, {"body": "userland solution works highly recommend use may useful move logic separate component make template cleaner", "d": "2/2018"}, {"body": "oevgeny nice workaround thanks however simpler directive could prevent cluttering template additional tags think feature request still valid", "d": "2/2018"}, {"body": "nt looked deeply whole updaterender pipeline speaking conceptually curious dependency changes alone ca nt determine componentslot rerender", "d": "2/2018"}, {"body": "plans ahead supporting local directives functional components would allow among others convert advanced components functional features could replaced directives assume technical limitations would like know planned requires etc least know must keep using normal components", "d": "2/2018"}, {"body": "looks like warning possible solve cases see", "d": "2/2018"}, {"body": "herringtondarkholme undesirable add functionality universal behavior would possible add explicit operation instead something like instance counterpart would called working something quite similar mokkabonna library representing async action function invoke action properties representing state approach option vue reactivity system lends really clean way represent state async behavior ui opinion anyway may pure way go packaging state invocation single entity keeps things nice clean concise selfcontained end something like html fetchcommentsisloading loading fetch comments commentbody fetchcommentserrormessage", "d": "2/2018"}, {"body": "add able make work manually calling property want reactive", "d": "2/2018"}, {"body": "listeners intervalstimeouts state need store somehow could cleared unbind", "d": "2/2018"}, {"body": "either store directly element save using element key", "d": "2/2018"}, {"body": "cztomsik still cleanup code sample provided describes share common state different hook calls want add cleanup", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "sorry replying closed issue think belongs get plenty warnings come kind iterations key could use warnings dont add value instead clutter console mean dom content simple live warnings", "d": "2/2018"}, {"body": "changed mind regarding suggested signature callback function think would better make callback signature somehow compatible react make easy wrapper whatsoever libraries provide something could used react vue instead would suggest means myrefcallback either called rendering removing react second argument ref callbacks first argument would behave exactly like react", "d": "2/2018"}, {"body": "example using vbind", "d": "2/2018"}, {"body": "another use refactoring component order make easier maintain form various parts fall css grid extra wrapper required group several related elements component causing grid treat whole component one griditem sure work around hope end fragment syntax like react nt already thing", "d": "2/2018"}, {"body": "marktnoonan point looked issue begin trying solve css grid end use vue could nt achieve without either nested elements creating big giant vue file", "d": "2/2018"}, {"body": "curious tools using profile vue dave", "d": "2/2018"}, {"body": "hi guys might seems nowhere write vue component inside tsx file", "d": "2/2018"}, {"body": "right coming nowhere forum chat questions encourage ask forum stack overflow discord chat happy help", "d": "2/2018"}, {"body": "issue ie without event expected behavior", "d": "2/2018"}, {"body": "issue css selector work", "d": "2/2018"}, {"body": "possible put exemple correct code", "d": "2/2018"}, {"body": "magicdawn found solution example common pattern would say seems quite tricky accomplish lot custom handling render method", "d": "2/2018"}, {"body": "esbenam yet templates tired writing function try vue jsx supports object spread pattern express vue terminologies eg directives events prop way", "d": "2/2018"}, {"body": "magicdawn yeah ended", "d": "2/2018"}, {"body": "try javascript vuecomponent fo template fo new vue el svg", "d": "2/2018"}, {"body": "nt work import materializecss question", "d": "2/2018"}, {"body": "bhoop try input events input event nt supported ie however textinput event supported also thinking nicely provide alternative facade within vuejs eventing core permission", "d": "2/2018"}, {"body": "paulredmond thank seeing strange async issues ie could recreate chromeedge etc using loaded truefalse check form executing vfor fixed", "d": "2/2018"}, {"body": "got answer use plugins vueheadful prerenderspaplugin troxler sorry downvote man information provided already vueheadful plugin problem rendering spas crawlers please check", "d": "2/2018"}, {"body": "downvoting post first asking help seems rather impolite even invest time help get return downvote anyway vueheadful sets title javascript google search engines support running scripts indexing page caveats google crawl tool mean fetch google part google search console yes button click fetch fetch render might want look help article use fetch google websites fetch fetches specified url site displays http response request run associated resources images scripts page fetch render fetches specified url site displays http response also renders page according specified platform desktop smartphone operation requests runs resources page images scripts", "d": "2/2018"}, {"body": "heyup want able codepen popup test asked react developers stack overflow rather giving sort direction go say noo ca nt think like jquery anymore well let tell thinking like javascript want able put element anywhere page want nicer version script site code github account vhtml look like shows promise thank advance vue type people", "d": "2/2018"}, {"body": "better way vue deal possible provide better kind error handling instead dumping half dom inside console happens", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "implemented template compiler options trim whitespaces around text nodes collapse sequences whitespace characters within text nodes production build sizes reduced different projects absolute terms please look pr", "d": "2/2018"}, {"body": "thank cerlestes good work excited see feature vue wondering difficulties find topic explain activate neat feature pr accepted", "d": "2/2018"}, {"body": "davidrot sadly bit tricky vue devs completely integrated currently generic way specify option parameters outside manually calling template compiler pr added vueloader would least make possible change values webpack configuration file similiar could toggled far quickest way manually patch vuetemplatecompiler package actually need patch buildjs patch forcefully set option constants desired values within project nodemodules directory also created another commit like push vueloader would allow disable enable whitespacerelevant options attribute inside sfc like useful turning options globally disabling components example require due elements wait actions devs push sure changes imho long run ideally options turned default nt make sense send compiled template like network note patch disables optimizations within elements default browser strip away anyway adds overhead bundle size lowers performance popularity vue probably amounts megabits junk whitespaces transferred internet given time edit talking vuerouter obviously meant vueloader", "d": "2/2018"}, {"body": "hi expression attribute require reactivity computed something else internal vue logic always child undefined html child typeof refsmychild thank", "d": "2/2018"}, {"body": "fwiw running exact problem vue anybody else coming google solution wrap element vuecomponent maincomponent template edit may ramifications relative positioning", "d": "2/2018"}, {"body": "current problem vueset method plain object triggers way many subscribers property added object actually subscribers properties triggered one property added performance view badly impacted map like collection contains hundredth keys example project thousands subscribers triggered one element added map using vueset operation look deeply vuejs code see problem comes dependencies triggered object means object one property key dependencies keys triggered adding one key using plain objects mimic map look right solution therefore support map vue welcomed large collections items", "d": "2/2018"}, {"body": "native app webview app like react native", "d": "2/2018"}, {"body": "guys forget mobile app development solution uses js lot experience cordova reactnative even recently made app ios using vue result pretty unreliable piece garbage really must using common language use xamarin otherwise go kotlin android swift ios", "d": "2/2018"}, {"body": "agree today think pwa recommended want hibrid app hibrid go kotlin swift", "d": "2/2018"}, {"body": "weex based webview rendered native components mobile however weex also downgraded web render pages webview", "d": "2/2018"}, {"body": "thanks say see compatibility lol ca nt complete hybrid app pwa actually", "d": "2/2018"}, {"body": "one says pwa native hybrid", "d": "2/2018"}, {"body": "another resource says soon weex", "d": "2/2018"}, {"body": "nativescriptvue looks amazing", "d": "2/2018"}, {"body": "passing object directly vbind might readable using object shorthand make look nice imo instead", "d": "2/2018"}, {"body": "boolean modifier would great", "d": "2/2018"}, {"body": "given base component possible extendmixin component custom options case instead explicitly like export default name implementation extends base privates objectassign privatesecond override baseprivates", "d": "2/2018"}, {"body": "fnlctrl need change", "d": "2/2018"}, {"body": "hey pablohpsilva ro listen width child component pass parent component element", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "", "d": "2/2018"}, {"body": "mapssets useful stuctures urgent support vue otherwise inefficient use vue apps", "d": "2/2018"}, {"body": "really struggled trying function invoked find value example trying build date range picker looks like presets coming array looks like also two dates input fields component amp really want compare date user selected dates passed preset configuration set value either unable nt accept conditions ca nt nt allow alias passed function ca nt something like allowing conditional statements least solve problem easily also may something fundamentally wrong please point could achieve different way", "d": "2/2018"}, {"body": "currently solved problem exploiting fact computed properties function calls script template really seems like hack sure please suggest", "d": "2/2018"}, {"body": "ended looking object looks like take note brackets", "d": "2/2018"}, {"body": "think sirlancelot solutions pose risks performance construct entirely new object sake hashing multiple watchers particularly dangerous want hash large number watchers together wouldnt safer define watchers beginning component constructed spread operator simple reducer done relatively little clutter guess pretty similar vuex would nice utility function map watchers provided allowing something like even want provide access key allowing programmatic generation watchers", "d": "2/2018"}, {"body": "bummer", "d": "2/2018"}, {"body": "want ask add upload file used change event uploaded file also tried von change thanks", "d": "2/2018"}]