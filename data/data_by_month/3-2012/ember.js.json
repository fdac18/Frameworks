[{"title": "emberselect slow many options", "body": "fairly slow many options say country select countries choose slow views created one every option useful underlying collection changes changes reflected typically select options static following code solves problem drawback static options something would like include open pull request also please let know improvement suggestions static select options nt childviews plain option tags implementation currently much faster emberselect large collections function var set emberset get emberget getpath embergetpath emberselect emberviewextend staticlabels false render function buffer", "num": "633", "d": "3/2012"}, {"title": "observers nt triggered view helper", "body": "coffee windowa emberapplicationcreate adata ahomeview emberviewextend template emberhandlebarscompile view bar datachanged consolelog changed ahomeview observes adata bar emberviewextend template emberhandlebarscompile bar datachanged consolelog changed bar view observes adata ahomeviewcreate append console aset data changed ahomeview observer inside bar view nt triggered", "num": "632", "d": "3/2012"}, {"title": "arrayproxy get object key", "body": "desperate trying work arrayproxy getting element key javascript function use strict best way get array element key like regards michael", "num": "631", "d": "3/2012"}, {"title": "accessing scope inside arraycontrollerothers", "body": "documentation examples web still rare sorry asking javascript create app object var app create application app emberapplicationcreate create components appcontroller emberobjectextend display controller appcontrollerdisplay emberarraycontrollercreate init init function preserve scope var access hit logical idiot", "num": "630", "d": "3/2012"}, {"title": "avoid adding inline styles", "body": "ember always add inline styles elements rendered view view template lt div class event gt lt gt hello name unbound name unbound age years old lt gt lt div gt result hello name tom years old way avoid automatic insertion inline styles like display block inline workaround figured could guess happy regards michael", "num": "626", "d": "3/2012"}, {"title": "emberbinding reopen work suggested docs", "body": "tried add custom transformation via stated docs nt work since method failing test javascript module emberbinding reopen test new transformation added via emberbinding reopen function var mytransformationcalledcount emberbindingreopen mytransformation function return thistransform function value binding mytransformationcalledcount return var obj emberobjectcreate value boundvaluebinding emberbindingfrom value mytransformation objset value emberrunsync equal mytransformationcalledcount mytransformation called equal objget value value set equal objget boundvalue value transformation returned error message died test object function topath frompath var self instanceof binding self else self new k private selfdirection fwd private selffrom frompath selfto topath return self method reopen", "num": "624", "d": "3/2012"}, {"title": "metamorphs wrecking havoc first firstchild css bootstrap", "body": "think see using emberjs handlebars loop collection spit items like bootstrap handle nice responsive like issue bootstrapresponsive css declrations like rules seem target first children loop collection handlebars end bunch metamorph code around items restaurantlist view gsvhomepagerestlist contentthis class produced view view question tell css ignore script tags edit css bindings skip script tags selecting first first child structure ember uses fewerno metamorph tags", "num": "623", "d": "3/2012"}, {"title": "prefixpostfix specialized view controler interact jqmobile", "body": "create new repo repo extend view controler embejs allow easy interaction jquery mobile base work luissala conventionstandard naming class mix library emberjs want avoid conflict stay short name could prefix postfix use complete different namespace library thomas bartelmess question stackoverflow told get feedback core team reckon new namespace understand application sure library actually name new class emberpageview conterpart page element jqmobile emberheaderview conterpart toolbar header element jqmobile embercontentview conterpart content element jqmobile emberfooterview conterpart toolbar footer element jqmobile emberlistitemview conterpart element list view jqmobile emberlistview conterpart list view jqmobile sorry english mother tongue", "num": "622", "d": "3/2012"}, {"title": "handlebars template rendered immediately", "body": "handlebars template fired immediately gives timing problem template generates html jquery ui control page something like render testtabs emberview thistabs testtabscreate thistabsappendto centercontainer fails template nt rendered yet centercontainer tabs windowsettimeout calling centercontainer tabs work ugly also tried calling emberrunsync call centercontainer tabs effect accomplish", "num": "618", "d": "3/2012"}, {"title": "uncaught error notfounderr dom exception", "body": "new emberjs familiar internals working project nesting views within one another run error message nt know deal use emberlatestjs get uncaught error notfounderr dom exception error see simplified example something incorrectly", "num": "617", "d": "3/2012"}, {"title": "uncaught error notfounderr dom exception", "body": "new emberjs familiar internals working project nesting views within one another run error message nt know deal use emberlatestjs get uncaught error notfounderr dom exception error see simplified example something incorrectly", "num": "616", "d": "3/2012"}, {"title": "textinput change method fires blur", "body": "might intentional behaviour wanted log case appears ember firing change event textinput field field loses focus rather value actually changes created fiddle type text field nothing happens click away field change method fires intentional feel free close issue", "num": "612", "d": "3/2012"}, {"title": "ca nt call super inside computed property", "body": "example", "num": "607", "d": "3/2012"}, {"title": "emberselect support multiple selection", "body": "expect able something like following work normal way particular binding selection something else", "num": "606", "d": "3/2012"}, {"title": "action helper click events nt fire touch devices", "body": "", "num": "605", "d": "3/2012"}, {"title": "willrerender missing downloadable builds", "body": "looking hook like people referencing willrerender actually wish something like afterrerender another topic anyway looked could search gave try code nothing happened using debug build downloaded started digging source find unfortunately neither mingzip debug build currently referenced fronpage find mention willrerender cloned project build generate emberjs containing reference reason missing builds frontpage", "num": "602", "d": "3/2012"}, {"title": "link buttons also receive click events", "body": "given link button sometimes clicking link fire event since handles bubbles page navigates fix easy add happening harder nt narrowed something could go jsfiddle yet", "num": "600", "d": "3/2012"}, {"title": "hook coffeescript", "body": "given coffeescript wo nt likely integrate extended hook override generated method coffeescript provides would make make use emberjs object model messed around coffeescript compiler make generate code like even nt look like clean way integrate ember way guys havehad mind thinking using fork coffeescript hook apply ember object model classes involved reading emberjs source looks like places yet still ca nt get code emberjs stuck coffeescript gives vs ideas oneliner way make coffeescript use emberjs model using fork coffeescript viable option thanks", "num": "599", "d": "3/2012"}, {"title": "textfield defaultvalue lost field became empty", "body": "value attribute textfield view thisget element defaultvalue lost current value became empty example", "num": "598", "d": "3/2012"}, {"title": "state manager reserve send keyword", "body": "jsfiddle showcasing issue choose function name works fine", "num": "594", "d": "3/2012"}, {"title": "prototype initialization chains subclasses", "body": "needs move till prototypemixin applied still issues reopen subclasses parent class reopened chain added subclassed subclass instances created", "num": "591", "d": "3/2012"}, {"title": "arrays respect deep argument embercopy", "body": "see nativearray implemented copy slice perhaps could enhanced something like", "num": "588", "d": "3/2012"}, {"title": "flexible way append emberview dom", "body": "got code looks like boring background loads json via xhr asynchronously returns jquery deferred object data populated know create view consumes data anyway situation dom element gets created prepended appended another dom element method emberview little scrounging emberview source realized copy paste internal body logic whole thing since sure copied content body erring side caution using uses fancy processing setup element inserted ideally like copy method body several times since nt want fall sync update emberjs nice better way prependingappendingwhatevering element dom javascript appcontrollersalbumlistsetup done function var view appviewscontrolpanelalbumlistcreate viewappendelementlater done function prependto albums going wrong way", "num": "587", "d": "3/2012"}, {"title": "action handler work touch devices", "body": "adding action helper tag clicking tag touch enabled device tested ios fire attached event see understand default action uses click however click action probably firereceive touchend event touch devices", "num": "586", "d": "3/2012"}, {"title": "embermetakey property array prototype breaks libraries", "body": "many javascript libraries seem written assuming array recursive properties ember however seems add embermetakeyproperty array prototype although nonenumerable property sadly browsers eg ie lt support objectdefineproperty properly using browser libraries use stuff like jqueryextend recursive deepcopying simple arrays objects get infinity loop could possible ember would extend array prototype without adding embermetakey behavior may conditional emberextendprototypes true problem new methods selfreferencing properties", "num": "585", "d": "3/2012"}, {"title": "ca nt build todos app rake pipeline", "body": "system windows installed ruby using rubyinstaller also installed devkit following directions wiki done far download current version todos sample executed gem install bundle gt gem install bundle fetching fetching successfully installed successfully installed gems installed installing ri documentation installing ri documentation file lib found installing rdoc documentation installing rdoc documentation file lib found switched embertodos directory contains current source downloaded executed bundle embertodos bundle updating updating fetching gem metadata using rake using chunkypng using fssm using sass using compass installing json native extensions installing rack installing thor using rakepipeline master using rakepipelinewebfilters master using bundler bundle complete use see bundled gem installed finally run bundle exec rakep build embertodos bundle exec rakep build c map c c generateraketasks c c block generateraketasks c generateraketasks c block invoke internal invoke c invoke c run c dispatch c load c build todos sample aware get started ember without working build tool kit really want organise project files way make sense application grows got bpm working understanding bpm longer supported officially current projects transitioning rake pipeline since starting new project like start using correct tools supported way", "num": "584", "d": "3/2012"}, {"title": "annotated todo sample app uses sc em namespace", "body": "starting learning ember found sc correct namespace todo app referenced readmemd would suggest critical got sorted quickly thought important note", "num": "583", "d": "3/2012"}, {"title": "simplify emcheckbox lowest common denominator", "body": "see rationale behind making emcheckbox default template include wrapping frequently finding apply styles specifically label input individually involves either adding selectors emberspecific checkbox markup rewriting default template least projects worked needing labelless checkbox view common case able use provided labelwrapped template people noticing thing simplify default template input element", "num": "582", "d": "3/2012"}, {"title": "sendevent longer receiving param change", "body": "using sendevent monitor changes objects release sends foo foo change event sendevent currently seeing foo event example anotherbetter way monitor changes object properties", "num": "581", "d": "3/2012"}, {"title": "idea template html validation", "body": "nt like malformed html handlebars templates spent days trying figure problem like blah way validate html came handlebars would awesome might already possible outside ember betting way talk emview get html representation put html fragment validator", "num": "580", "d": "3/2012"}, {"title": "unit tests failing", "body": "trying get ember app work running problems particularly metamorph got working without emberrelated issues trying isolate issues ran unit tests internet explorer windows build currently tests failing tests pass firefox safari chrome mac os x", "num": "579", "d": "3/2012"}, {"title": "function findnamespaces error accessing window property", "body": "error operation supported code system ff ubuntu ember build master seeing loading html page local file system triggers ember tries reference window sessionstorage javascript function findnamespaces var namespace embernamespace obj namespaceprocessed return var prop window snip snip adding trycatch around obj window prop resolves issue first noticed trying run emberlayoutexample project locally simplified test", "num": "578", "d": "3/2012"}, {"title": "current state yet set invoking enter function state", "body": "following jsfiddle produces error lt subclass emberstatemanager gt could respond event loaded state creating think happens statemanager calls new state sets current state new one comparison jsfiddle works like intended bug intentional thanks helping understand ember better", "num": "577", "d": "3/2012"}, {"title": "enable partial prototype extension", "body": "emberjs extend arrayprototype would still want rest function amp string prototype extension defined function directly call extendprototypes set false ie string way call extendstringprototype manually even extendprototypes false", "num": "576", "d": "3/2012"}, {"title": "sorting content array arraycontroller update view", "body": "work seems workaround like even design performance whatever seems like confusing gotcha ember case point helped someone stackoverflow workaround issue", "num": "575", "d": "3/2012"}, {"title": "ca nt build", "body": "hey trying run tried get encoding error didnt happen last week cc wagenet", "num": "572", "d": "3/2012"}, {"title": "wrong url readmemd", "body": "hie links guides repository wrong thanks work", "num": "571", "d": "3/2012"}, {"title": "multiple action helpers templates", "body": "code first registered later fired mouseenter second click ignored jsfiddle reporting think would really nice folks emberjs recommended well cc ebryn", "num": "569", "d": "3/2012"}, {"title": "performance view creation", "body": "please look makes slow used unbound faster", "num": "565", "d": "3/2012"}, {"title": "idea proxyview", "body": "hi guys current app renders everything javascript every single element rendered handlebars works great chrome firefox osx things start get pretty grim move ie page loads stays white seconds user starts see something could put loading app type screen kinda sucks ca nt start showing page chrome things page could render server navigational elements footer elements forms etc problem dynamic behaviour maybe click small hover event could jquery things nt want pull things ember run loop idea html proxy id someelement sort object rendering proxy dom element ember event run loop stuff set write proxy view object result disclaimer code hacked together tried explain parts still needs work using app gotten load time seconds seconds ie nt render entire app anymore logic goes something like static element render server behaviour use proxyview dynamic content use emview really successful us means bind proxy views data site add dynamic behavour wanted share code see rest ember community thinks", "num": "563", "d": "3/2012"}, {"title": "little question addlistener return value allways undefined", "body": "function addlistener embermetallibeventjs comment return ret following content ret value might allway undefined seems mistake either code comment", "num": "561", "d": "3/2012"}, {"title": "dynamic injection views requires rerendering", "body": "using ember requirejs injecting views dynamically problem facing approach views get stuck context used upon initial rendering reflect context changes probably get fixed way overcome issue call directly view example found admit might something wrong please point right way thanks advance", "num": "560", "d": "3/2012"}, {"title": "chained bindings set templates nt work", "body": "see", "num": "557", "d": "3/2012"}, {"body": "broken regression post", "d": "3/2012"}, {"body": "one problem nt escaping values var escape handlebarsutilsescapeexpression escape get prompt escape get valuekey escape get labelkey", "d": "3/2012"}, {"body": "yes good point thanks", "d": "3/2012"}, {"body": "nt think problem likely rendering options done work improve performance sandstrom version ember using", "d": "3/2012"}, {"body": "ebryn using", "d": "3/2012"}, {"body": "sandstrom give try", "d": "3/2012"}, {"body": "minutes took quick look emberselect options faster nt time benchmark nt know much however still instantaneous feeling hack gives generating views nt something one often select labels seems like exception", "d": "3/2012"}, {"body": "aside lack escaping nt think hack unbound stuff like needed app code responding changes surprising replacement general purpose control", "d": "3/2012"}, {"body": "yes agree maybe regenerating options one changed eg observer close since performance improvements mitigated problem", "d": "3/2012"}, {"body": "version ember browser copied code reproduce results aset data changed ahomeview changed bar view", "d": "3/2012"}, {"body": "use edge version right update source test works time thanks time", "d": "3/2012"}, {"body": "", "d": "3/2012"}, {"body": "nt work sorry bothering looked docs web examples non associative arrays", "d": "3/2012"}, {"body": "", "d": "3/2012"}, {"body": "", "d": "3/2012"}, {"body": "mediastuttgart ember arrayproxiescontrollers made traditional javascript arrays numerically indexed using named keys unlikely get benefit", "d": "3/2012"}, {"body": "tchak unfortunately non working wagenet yep right kind use supposed used intend class handles timeoutsintervals store objectarray accessedaddedremoved part application key wishful thinking handling emberobject make use embers getset methods instead writing application logic getting setting values start scratch dan gebhardt said post kind things stackoverflow thanks responding quickly keep good work", "d": "3/2012"}, {"body": "might interested", "d": "3/2012"}, {"body": "also array use key somekey key someotherkey findproperty key somekey", "d": "3/2012"}, {"body": "kselden thanks pointing see embermap available emberlatestjs anyway seems one looking thanks kristofor", "d": "3/2012"}, {"body": "would suggest also add isempty embermap maybe function get size works far agree turned feature request", "d": "3/2012"}, {"body": "ask using vs calling property function", "d": "3/2012"}, {"body": "good question currently trying get depth ember discover things work ideal case actually want create controller function listen next want store inside controller finally notify controllers need know window dimensions slideshow eg javascript preserve scope var gt access preserves scope arraycontroller thisaddobserver windowwidth function notify others controllers access appcontrollerdisplayget windowwidth emberloggerlog thisget windowwidth looses scope arraycontroller window bind resize function thatset windowwidth window width something like thisaddlistener window onresize function emberloggerlog know code kinda nonsense testing real question access controller another one function inside controller without loosing scope notify controllers changes", "d": "3/2012"}, {"body": "put better example", "d": "3/2012"}, {"body": "", "d": "3/2012"}, {"body": "mediastuttgart general usage questions please ask stackoverflow tagged emberjs questions like typically answered within day often within hours github issue tracker used primarily bugs feature requests particular scenario typical pattern use wagenet suggests andy matthews wrote blog post observes see fiddle nt correctly instantiating emberobject using instead please check post covering basics emberobject still questions please post someone else answer soon", "d": "3/2012"}, {"body": "thanks dan go stack future questions", "d": "3/2012"}, {"body": "mediastuttgart seen sort thing happen put together jsfiddle reproduce", "d": "3/2012"}, {"body": "sure look html output firebug fyi used jquery edge framework jsfiddle using issue nt happening seems ralated jquery", "d": "3/2012"}, {"body": "oh interesting nt tried things yet definitely looks like jquery issue best guess actually causing problems", "d": "3/2012"}, {"body": "code issue appears simplest setup ember view jquery guess report jquery", "d": "3/2012"}, {"body": "mediastuttgart pretty sure point happens anyway sure actually problem something bring jquery think", "d": "3/2012"}, {"body": "really problem issue puts span elements inline set stylesheets ember related try talk jquery thanks peter", "d": "3/2012"}, {"body": "emberbinding emberobject performance reasons assume example", "d": "3/2012"}, {"body": "ok cool nice repository go solution thanks want check wycats tomdale wagenet solution shall used instead working", "d": "3/2012"}, {"body": "pangratz think tchak solution right one docs definitely updated", "d": "3/2012"}, {"body": "wagenet ok publishing blog post emberjs bindings soon use tchak solution soon time update docs", "d": "3/2012"}, {"body": "two options change selectors simplest supported every browser use standard instead makes metamorph views item list want avoid either use helper subclass directly use helper", "d": "3/2012"}, {"body": "guess ultimately serious issue use metamorphs", "d": "3/2012"}, {"body": "looks like specific selector causes things break rowfluid gt class span firstchild marginleft maybe chrome nt treating script tag span seems", "d": "3/2012"}, {"body": "fiddle", "d": "3/2012"}, {"body": "helped fix problem made cross browser safe look collectionview way notified view rebound tried didinsertelement view calls first time put view scoured source could find willdosomething need know finished please", "d": "3/2012"}, {"body": "following helped get rid metamorphs thanks peter template view emcollectionview itemviewclass gsvhomepagerestlist contentbinding restaurantlist class rowfluid view class", "d": "3/2012"}, {"body": "recommend new namespace create new namespace", "d": "3/2012"}, {"body": "tanks try evening", "d": "3/2012"}, {"body": "views rendered asynchronously call inside callback", "d": "3/2012"}, {"body": "hey fantastic thanks", "d": "3/2012"}, {"body": "accidentally created duplicate issue closing", "d": "3/2012"}, {"body": "setup definitely looks odd intended embed init calls generally defined app level view level furthermore nesting content array within within may found bug definite questions way setting things explain bit actually trying would help us point right direction", "d": "3/2012"}, {"body": "yeah example nt good one project using statemanagers nothing deciding view show particular time one button clicked render view inside div another button clicked render view b within div reason using statemanagers nt want manually create destroy views depending one shown particular time proper way dynamically rendering one several views within containing element depending state guess could toggle visibility one views wo nt hidden views still update whenever bindings updateget updated trying avoid statemanagers destroy views nt visible", "d": "3/2012"}, {"body": "another contrived example one demonstrates workaround issue earlier think must trying nested views improperly example implements nested views using approach similar mentioned last update toggle visibility one views except toggling visibility attribute ember seems taking care destroying views based block best place read socalled run loop", "d": "3/2012"}, {"body": "davidkellis general ember lot tricky stuff remove parent view teardown children block actually creates view toggled ember create remove internal views necessary runloop runloop basically batches changes make properties way make two successive changes effect computed property binding view nt trigger update twice generally nt worry manually dealing runloop except writing tests run issues runloop usually indicator architecture could improved anyway think since nt seen issue normal operation close issue", "d": "3/2012"}, {"body": "commadelimited fiddle provided nearly blank", "d": "3/2012"}, {"body": "crap nt save lem recreate go peter apologies", "d": "3/2012"}, {"body": "use jquery event handling sure nt firing said nt ever watching events ember already handles events updates value property either bind observe value", "d": "3/2012"}, {"body": "nt insertnewline event assumed since ember provided helper function allowed others nt yet worked directly observables yet still getting feet wet ember", "d": "3/2012"}, {"body": "instead recommend", "d": "3/2012"}, {"body": "commadelimited sort special case nice actions someone hits return yes recommend something along lines updated fiddle", "d": "3/2012"}, {"body": "commadelimited closing issue concerns please let know", "d": "3/2012"}, {"body": "nope fine thanks input", "d": "3/2012"}, {"body": "added release currently like use grab latest build github downloads section build release present website callback might useful", "d": "3/2012"}, {"body": "fiddle", "d": "3/2012"}, {"body": "think wycats best one answer", "d": "3/2012"}, {"body": "sounds like expecting act like placeholder attribute instead property bound current value input element nt see bug mistaken please let know reopen ticket", "d": "3/2012"}, {"body": "look dom firebug see value attribute input tag lost believe happen lost defaultvalue text field see updated example", "d": "3/2012"}, {"body": "lcoq use jquery method set value sounds like maybe pleased jquery handling things anyway nt know trying set things way could provide example actual use case might help understand goal", "d": "3/2012"}, {"body": "problem messing reset button form see fiddle believe problem jquery may binding value attribute use jquery attr val see would think ember use jquery val method updating field value right happy try write patch", "d": "3/2012"}, {"body": "fiddle provided works fine", "d": "3/2012"}, {"body": "also nt think rely functionality reset even work would hesitant use", "d": "3/2012"}, {"body": "reset button set text field value test default value wrote dom previously let text field blank delete value text field default value lost", "d": "3/2012"}, {"body": "lcoq able reproduce issue button deleting field contents anyway like said nt think relying reset button interacting ember text fields since ember textfields intended bound values want reset something actually updates value within ember", "d": "3/2012"}, {"body": "agree reset form button understand ember implement ember reset act data bound textfield simple example one field got yellow background value changed sure use ember store initial value duplicate object example use stored value compare actual field value believe script work ember without modification odd behaviour losing defaultvalue input field fix nt", "d": "3/2012"}, {"body": "lcoq honestly still nt see issue reopen see getting input wycats tomdale anyone else interested", "d": "3/2012"}, {"body": "fixed", "d": "3/2012"}, {"body": "might work also make sure test deep copying elements implement copyable", "d": "3/2012"}, {"body": "create view advance bindings toggle visible data ready", "d": "3/2012"}, {"body": "creating view xhr request dealing large somewhat buggy party script element inserted empty party script kind craps didinsertelement need make sure object bindings populated first little aside really issue needing prepend emberview wanting cargo cult body case changes future", "d": "3/2012"}, {"body": "wagenet right add observer binding propertymethod something telling data loaded method want prepend view", "d": "3/2012"}, {"body": "observer would fire every time binding changes need oneshot initial data load anyway issue needing emberviewprependto something similar", "d": "3/2012"}, {"body": "pretty simple would essentially", "d": "3/2012"}, {"body": "issue related add pull request", "d": "3/2012"}, {"body": "pretty cool thing", "d": "3/2012"}, {"body": "discovered overwrite touchend event browsing source really perfect solution fixed problem", "d": "3/2012"}, {"body": "version emberjs jquery addressed making fail extend would nt go meta property", "d": "3/2012"}, {"body": "running seems fixed latest version sorry", "d": "3/2012"}, {"body": "never mind found fixed issue problem rake pipeline specifically windows documented fix", "d": "3/2012"}, {"body": "looked readme references actual todos sample app longer annotated sure annotations removed intended restored tomdale may know options remove reference readme annotate todos appjs deploy github pages update readme", "d": "3/2012"}, {"body": "agree", "d": "3/2012"}, {"body": "trek send pr", "d": "3/2012"}, {"body": "sure thing follow questions keep using defaulttemplate bindattr move using attributebindings use attributebindings value property renamed checked renamed checked add computed property value backwards compatibly difference two tests overlooking copypaste error", "d": "3/2012"}, {"body": "currently master currently", "d": "3/2012"}, {"body": "sorry master", "d": "3/2012"}, {"body": "affect direct set object causes change event fire maybe issue binding", "d": "3/2012"}, {"body": "bad added deferevent capture event target set endpropertychanges nt capture behavior deferevent used property changes think feature anything public api property observing", "d": "3/2012"}, {"body": "kselden still appears broken something able fix", "d": "3/2012"}, {"body": "question anotherbetter way monitor changes object properties think new issue", "d": "3/2012"}, {"body": "observers definitely priority", "d": "3/2012"}, {"body": "handlebars already validation ie return html blah append element observe valid markup", "d": "3/2012"}, {"body": "stas sure browser fixing stage view already created element appropriate html think getting browser ended rendering", "d": "3/2012"}, {"body": "pixelcort sure something want bother place would probably debug library", "d": "3/2012"}, {"body": "wagenet well used console output testing whats true wo nt work view", "d": "3/2012"}, {"body": "stas denying console output point html already inserted dom element someplace pulling html dom element point browser already parsed corrections seeing browser handlebars pixelcort saying ie nt parse correctly would help case", "d": "3/2012"}, {"body": "oh see know thanks clearing", "d": "3/2012"}, {"body": "stas problem", "d": "3/2012"}, {"body": "way get string html would inserted dom view could take throw html validator sure worth kind validation within ember since people nt get validation errors templates", "d": "3/2012"}, {"body": "pixelcort sent html strings renderbuffer might possible add hook render buffer would validate string definitely would want special debug mode", "d": "3/2012"}, {"body": "wrote sloppy documentfragment validator meant use case example blah got expected reddit markup passes returns example yields indeed correct markup currently really broken", "d": "3/2012"}, {"body": "duplicate", "d": "3/2012"}, {"body": "sounds like another item add list", "d": "3/2012"}, {"body": "call event looks action current state present looks parent case event state parent causes error helpful", "d": "3/2012"}, {"body": "thanks clear causes error think example type error happen let try explain better see problem statemanager gets created goes initial state statemanager receives event tells invoke statemanager enters state event state invokes function delegate function delegate sends event statemanager get error event state although understanding statemanager state point event since case think current state gets updated event new state happened hope clear description issue", "d": "3/2012"}, {"body": "stravid whoops sorry examining carefully issue entering state yet see deciding either way personally seems like calling events statemanager process", "d": "3/2012"}, {"body": "tricky question current implementation event useful asynchronous processes use synchronous environment like example run problems decide pick one solution provide two events one current state changed yet second one current state already updated way programmer decide one wants needs javascript state machine even provides two exit events four default events every state personally would like similar approach think", "d": "3/2012"}, {"body": "wycats tomdale thoughts", "d": "3/2012"}, {"body": "find sometimes specific case would like move another state enter process working state state router like example show really nt know correct way thinkdesign app states wanting provide feedback first approach work current implementation", "d": "3/2012"}, {"body": "updates wagenet", "d": "3/2012"}, {"body": "stravid yet waiting hear wycats tomdale", "d": "3/2012"}, {"body": "eishay curiosity ca nt extend array", "d": "3/2012"}, {"body": "see app hosted page using prototypejs libs break extend array", "d": "3/2012"}, {"body": "maybe could make hash", "d": "3/2012"}, {"body": "would perfect means would easy introspect runtime one thing raise warnings", "d": "3/2012"}, {"body": "eishay try fix prototype", "d": "3/2012"}, {"body": "reason nt try get controlled test figure", "d": "3/2012"}, {"body": "eishay ok worked others using prototype shims nt play well prototype turns independent ember extensions", "d": "3/2012"}, {"body": "wagenet nt available master perhaps using", "d": "3/2012"}, {"body": "true eishay using give feature try master", "d": "3/2012"}, {"body": "note saw behavior using collection instead", "d": "3/2012"}, {"body": "definitely seems odd", "d": "3/2012"}, {"body": "adamjmurray ah problem sorted array still array ember looks like object still nt like duplicate array also may also glad know special work improve sorting case well closing ticket since actual bug", "d": "3/2012"}, {"body": "cool makes lot sense thanks improved workaround", "d": "3/2012"}, {"body": "hmm os using nt issues", "d": "3/2012"}, {"body": "os x nt happen emberdata", "d": "3/2012"}, {"body": "also nondefault language settings computer wycats know lot ruby encodings chime", "d": "3/2012"}, {"body": "dmathieu run command line get", "d": "3/2012"}, {"body": "looks like nonbreaking space os x frenchgermanother locales gets inserted pressing altspace often happens accidentally special characters mapped crazy places require altkey example german locale mac os yields curly brace fast typing result altspace pressed helped fix problem mac", "d": "3/2012"}, {"body": "found odd spaces code removed dmathieu latest master work run ruby command thanks", "d": "3/2012"}, {"body": "ok bad defaultexternal usascii set works fine", "d": "3/2012"}, {"body": "dmathieu set scripts well permanent fix", "d": "3/2012"}, {"body": "indeed test submit pull request", "d": "3/2012"}, {"body": "updating rakepipeline get livingsocialrakepipeline makes work", "d": "3/2012"}, {"body": "benjaminbd shoot somehow cleared description reenter", "d": "3/2012"}, {"body": "removed links working new guides", "d": "3/2012"}, {"body": "open debating nt think want support right thing use view", "d": "3/2012"}, {"body": "hmm use case define action mouseenter almost always want also define action mouseleave well currently possible without using view suggest", "d": "3/2012"}, {"body": "thought different syntax less dry think", "d": "3/2012"}, {"body": "pangratz suggestion much concise", "d": "3/2012"}, {"body": "use views type interaction", "d": "3/2012"}, {"body": "workaround use achieve make nested elements different action handlers click avoid making custom views much possible prefer throw templates", "d": "3/2012"}, {"body": "pixelcort avoiding custom views seems bad particular reason", "d": "3/2012"}, {"body": "ebryn enjoy one place find logic templates using action place use views within viewstate instances unfortunately sublassing emtextfield friends add features said fine continuing use nested element workaround specific case", "d": "3/2012"}, {"body": "pixelcort seems like misuse ember templates intended hold much logic job views add extra markup templates workaround like sounds like bad idea", "d": "3/2012"}, {"body": "hmm question provide limited support action tags templates", "d": "3/2012"}, {"body": "pjg point provide support simple cases ie single action ones nt need special handling good use simple buttons links use css hover states like", "d": "3/2012"}, {"body": "imo would better either fully support multiple action helpers templates deprecateremove feature altogether wrong approach things", "d": "3/2012"}, {"body": "pjg definitely sympathize position think something discuss however custom views powerful part ember definitely utilized templates becoming complex", "d": "3/2012"}, {"body": "fpauser short answer creating views free investigating performance looking improving", "d": "3/2012"}, {"body": "note followup change suspect find much faster due removal additional view course nt want end user think things still working making faster", "d": "3/2012"}, {"body": "interested added profiling", "d": "3/2012"}, {"body": "removed inner view performance good emproxyview proposed would nice handling events", "d": "3/2012"}, {"body": "fpauser landed number performance improvement mind giving check", "d": "3/2012"}, {"body": "another technique trying shared template server client use mustache server render element proxyview needs change something rerender internals template loose magical dom bindings handlebars gives us get major speed improvements", "d": "3/2012"}, {"body": "keithpitt seems like interesting idea discussing make views faster could play part", "d": "3/2012"}, {"body": "benefit app start move path still functioning javascript turned app building unfortunately part airline lot corporate customers means lot ie machines lot well html featuressomethingturnedon proxy id someelement allows turn magic elements slow ie means still provide nice user experience ie parts turn", "d": "3/2012"}, {"body": "sounds really interesting maybe whole eventhandling move emview emproxyview sure naming would dryup things give us ability either use fullblown emview plain performant emproxyview eventhandling", "d": "3/2012"}, {"body": "fpauser thats pretty much way see working emview subclass something proxyview use base class proxy elements", "d": "3/2012"}, {"body": "anybody working emview adopt emproxyview done convinced get emberjs", "d": "3/2012"}, {"body": "fpauser significant changes like nt happen overnight need spend time considering work involved unexpected ramifications ember core dedicating time weekend consider ways improve view performance suspect end part discussion", "d": "3/2012"}, {"body": "wagenet sounds great know good things need time evolve nt hurry much", "d": "3/2012"}, {"body": "arumons good point far tell history never actually worked nt see tests code rely behavior inclination remove wycats tomdale seem ok", "d": "3/2012"}, {"body": "interesting use directly conditionals works problem faced computed properties", "d": "3/2012"}, {"body": "properties file line number jsfiddle isolated issue probably get faster better help pointing app means people hunt", "d": "3/2012"}, {"body": "nvm double checked docs adding proper dependencies properties solves issue stasemberjsrequirejs", "d": "3/2012"}, {"body": "verified work either", "d": "3/2012"}, {"body": "sure bug set binding fashion global prefixes binding context declared view see case wycats tomdale right thinking actually expected behavior", "d": "3/2012"}, {"body": "wagenet yeah nt expect version work since wo nt resolve parent expect work though", "d": "3/2012"}, {"body": "jamesarosen yeah question may make sense us check add case like hear wycats tomdale make sure considered consistent behavior", "d": "3/2012"}, {"body": "jamesarosen fairly confident change pr simple task", "d": "3/2012"}, {"body": "jamesarosen hmm take back change straightforward obvious right use behavior things like change discussed earlier would conflict behavior would two possible meanings wycats wanted change way view context handled seems like would something consider point", "d": "3/2012"}, {"body": "actually alias plan modify scoping nt modify scope name always present meant recent view thoughts", "d": "3/2012"}, {"body": "using forin loop array iteration using loop ca nt change array iteration whatever reason disable us touching object prototypes lose lot syntactic sugar ember disable prototype extension add code ember loads", "d": "3/2012"}, {"body": "added whole app basically blow probably using array extensibly javascript app using forin loop directly hosted third party ecommerce platforms majority using library using forin loop cases anyway point forin loop discouraged still part ecmascript forin statement libraries using actually larger ecommerce platform using libraries since embedding emberjs application page change expected behavior language may break libraries ca nt use sad invested lot building top ember took time get use case breaking expected behavior language one reasons many problems prototypejs eg bad emberjs acting similar way way around ie keep using full emberjs functionality play nicely libraries love emberjs ca nt use libraries break language expected behavior even others", "d": "3/2012"}, {"body": "disagree reading spec fact forin precisely supposed enumerating properties object including everything prototype chain one way avoid problem include hasownproperty check forin loop enumerating array using forin definitely wrong semantics imo stack overflow seems back said sensitive plight sorry compatibility issues added ability disable extending prototypes specifically cases like need call arrays wish make observable ecommerce platform using open source consider asking fix array enumeration bug", "d": "3/2012"}, {"body": "fwiw could mark properties enumerable browsers would still broken browser", "d": "3/2012"}, {"body": "try work workaround suggested thanks far javascript expert sure stackoverflow authority mozilla site much better documents loop iterate properties nt want get philosophical probably get wrong clear thing vanilla ember breaks libraries nice specific ecommerce platform magento popular libs seem broken using forin prototypejs know better sure many", "d": "3/2012"}, {"body": "tomdale please show make one work", "d": "3/2012"}, {"body": "eishay mean something like", "d": "3/2012"}, {"body": "yes thanks added foron loop still broken assume must extendprototypes settings set ember loads side effects extendprototypes may trigger ember changes expectedexisting language behaviors", "d": "3/2012"}, {"body": "eishay correct must configure env loading ember know patch native prototypes turn extending native prototypes every feature relies stop working example patch functionprototype add things like method things like instead invoke function adds methods perfunction basis true things like want clear ember actually changing language possible anything crazy unexpected spent lot time ensuring ember behaves good citizen javascript ecosystem suggestion improve glad hear obvious add convenience methods builtin objects loop behaving precisely expected reason use place loop semantics array enumeration obvious problems seen stack overflow post linked behaving exactly spec", "d": "3/2012"}, {"body": "tomdale selective prototypes extend ie must disable array prototype extension would hope could sustain least ember sugar disable prototype extension still able work full feature set ember using constructs like embera embercomputed agree changing language change behavior libraries comes majore browsers amp libraries depending behavior regardless good practice believe ember breaking commonly used libraries sooner later bite rare ember picked companies", "d": "3/2012"}, {"body": "api suggest would conflict current api setting computed properties also sure benefit great enough added code complexity", "d": "3/2012"}, {"body": "least specific code algesten example binding took list operands would great reduction boilerplate noted easy change", "d": "3/2012"}, {"body": "builds rake task well", "d": "3/2012"}, {"body": "ebryn made solution basically idea nt pass property bind class always show", "d": "3/2012"}, {"body": "addresses", "d": "3/2012"}, {"body": "fixed", "d": "3/2012"}, {"body": "jstates explain bit also version ff os would helpful hard us fix ca nt reproduce", "d": "3/2012"}, {"body": "ticket appears inactive given information inability reproduce closing", "d": "3/2012"}, {"body": "seems possible could make noop sure downsides would", "d": "3/2012"}, {"body": "according works", "d": "3/2012"}, {"body": "", "d": "3/2012"}, {"body": "", "d": "3/2012"}, {"body": "sorry taken long respond guilhermeaiolfi nt something intended support select implementation quasipickle could provide robust example usage better understand use case jsfiddle would great", "d": "3/2012"}, {"body": "ebryn see people using select bind object property whole object using given number users trying think definetly something consider", "d": "3/2012"}, {"body": "guilhermeaiolfi definitely willing consider need good use casesexamples could put together jsfiddle", "d": "3/2012"}, {"body": "quasipickle jsfiddle illustrating use case nt url anymore hopefully remembers meanwhile another jsfiddle created trying help another user irc channel", "d": "3/2012"}, {"body": "think fiddle", "d": "3/2012"}, {"body": "fixed", "d": "3/2012"}, {"body": "docs missing properly formatted jsdoc show jsdoc quite picky looking better solutions handling docs clue status", "d": "3/2012"}, {"body": "course jsdoc filled file sorry checking regarding jsdoc try alternatives curious", "d": "3/2012"}, {"body": "circlecode alternatives mind", "d": "3/2012"}, {"body": "wagenet times ago look pdoc looked really promising maybe documentjs last seems cute fact nt opportunity try real projects wondering already tested one", "d": "3/2012"}, {"body": "searching could leave without speaking jsduck sencha labs tool use generate extjs documentation good point previous ones seems require new syntax tags convert html comments", "d": "3/2012"}, {"body": "truly unexpected behavior ran multiple occasions last two weeks coding ember would instance ever want share property fellow instances content property instance unique definition", "d": "3/2012"}, {"body": "ralfschimmel instances unique point object unique", "d": "3/2012"}, {"body": "consider following case var parent emberobjectcreate myappchild emberobjectextend parent parent var myappchildcreate myappchildcreate sort feel like clone parent ember object", "d": "3/2012"}, {"body": "often confusing aspect javascript objects inherit objects classes prototype shared instance pass ember extend becomes prototype create create call init resulting instance setup instance properties", "d": "3/2012"}, {"body": "wagenet agree use case though term create implies different using extend one expects class object least using create one expects object class copypaste class defined extend actually object problem definition actual problem ember though think agree ember could handle javascript lack classical inheritance better way ps java company makes confusion described kselden even true", "d": "3/2012"}, {"body": "example javascript mvc framework fixes java developer eyes strange javascript prototypal inheritance see also see john resign example implementation real question emberjs provide classical way inheritance option personally think would great feature ember", "d": "3/2012"}, {"body": "ralfschimmel vincentheet would propose example handled unless suggest way handle consistently nt see much", "d": "3/2012"}, {"body": "well seems passing initialized objects class would define class parent null using extend set parent initializing object using create feels oo however totally depends bigger ideas behind ember want mimic oo way", "d": "3/2012"}, {"body": "ralfschimmel agree example nt really provide model good practice however problem run also instantiated object type essentially issue", "d": "3/2012"}, {"body": "wagenet mean issue array maybe would helpful maybe using jquery", "d": "3/2012"}, {"body": "vincentheet ralfschimmel said seems passing initialized objects class comment initialized object seems fair say nt pass class definition either know use jquery extend clone objects sometimes object data needs handled also think intended behavior still ambiguous think maintain current behavior consider adding new api tells properties defaults cloned instantiation", "d": "3/2012"}, {"body": "extending api also conclusion discussing yesterday morning vincentheet something like instance accompany extend create sounds like possible solution problem", "d": "3/2012"}, {"body": "say definitely mind doubts might help hear detail thinking", "d": "3/2012"}, {"body": "discussed copyableproperties like concatenatedproperties main issue copying arrays easy fast copying objects could easily get situation poorly considered app code ends putting deep cloning deeply nested object hot path could happen instance added copyableproperty view used often deeply nested object people would probably expect putting arbitrary ember objects copyable property work even complicated potentially slow", "d": "3/2012"}, {"body": "given complexity right coupled fact workaround one solid proposal inclined close wycats", "d": "3/2012"}, {"body": "course say would nt welcome suggestions pull requests implement feature", "d": "3/2012"}, {"body": "ok concerns seem valid implemented framework using init method initialize instances resulting code neat use case creating instance like example java remains", "d": "3/2012"}, {"body": "ralfschimmel initialize method setup nt seem crazy might able make things little simpler honestly nt seem complex", "d": "3/2012"}, {"body": "addressed forgot add test", "d": "3/2012"}, {"body": "fixed", "d": "3/2012"}, {"body": "anything new unbound blocks collection items item sub collection items takes render according profiler bindings really costly content static guys quick workaround also binding helper view xxx myvarbinding somestuff way oneway binding thanks", "d": "3/2012"}, {"body": "etabard working improving collection performance tried using build master", "d": "3/2012"}, {"body": "ebryn tried using latest version based master quick really simple example use firebug full profiling takes mb pro extra views binding takes blocker case releasing two weeks ideas improving performance also tweaked parameter envuseaccessors true helps little nt know side effects", "d": "3/2012"}, {"body": "etabard notice improved performance app emberlatest use unbound helper property output also improve performance example", "d": "3/2012"}, {"body": "ebryn faster latest yeah forgot unbound helper test case update jsfiddle reproduce real test case", "d": "3/2012"}, {"body": "killing completely correct generic solution probably possible touch presence embutton red herring", "d": "3/2012"}, {"body": "also view primarily concerned looking nice important help binding values dom nt mainly provides sugar around button states definitely think something pursued plugin core", "d": "3/2012"}, {"body": "wagenet precompiled handlebars via npm package work ember npm package provide features ember supports already created rakepipeline filter however specific templates nt output correct html", "d": "3/2012"}, {"body": "get general idea", "d": "3/2012"}, {"body": "", "d": "3/2012"}, {"body": "partially addressed", "d": "3/2012"}, {"body": "trek sorry delay updated jsfiddle changes nt seems fix bug change line", "d": "3/2012"}, {"body": "dang stopped getting notifications bug let keep playing around see create metamorphspecific failing test case", "d": "3/2012"}, {"body": "trek sounds good", "d": "3/2012"}, {"body": "given ember sticks pretty closely dom events least jquery ones sure quite fits going full implement add complexity event dispatcher including registering view current mouse handler wycats tomdale think something want attempt", "d": "3/2012"}, {"body": "think implement jquery special event", "d": "3/2012"}, {"body": "tomdale maybe still register view globally mouse control know send event along mouse goes outside view probably also want trigger mouse events views state", "d": "3/2012"}, {"body": "multiple jquery plugins drag events using eventspecial tomdale mentioned specify events customevents create application views receive", "d": "3/2012"}, {"body": "kselden something want integrate ember", "d": "3/2012"}, {"body": "ember already dispatch jquery special events ember views specify app customevents property plugins like add events ember prepackage one plugins rewrite special events drag ember examples integrating plugins useful need different levels complexity drag event depending like enter leave drop targets beter leave plugins", "d": "3/2012"}, {"body": "since making forward progress ticket way plugin kselden pointed going close", "d": "3/2012"}]