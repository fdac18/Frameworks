[{"title": "using backbone models serverside", "body": "hi wanted ask anyone explored using backbone models serverside interested exploring understand backbone uses jquery backbone versions use server side wo nt using jquery anything happily remove ca nt see examples serverside backbone models amp collections views wo nt using either help would greatly appreciated found far client side looking thanks help mark", "num": "3286", "d": "8/2014"}, {"title": "url error create new record", "body": "occur version url property function must specified error occurred create new record code shown blow examined collectionpreparemodel function attrs options method changed attrs instanceof model attrscollection attrscollection return attrs attrs instanceof model return attrs think bug", "num": "3284", "d": "8/2014"}, {"title": "support optscontext ajax callbacks", "body": "jquery ajax docs state attribute specified specify refer ajaxrelated callbacks many model server calls callbacks wrapped way provided methods already invoked default context rather provided context see examples success error callbacks source somewhat mentioned closed points issues tangentially related use context understand workarounds reason callbacks nt use even respect thanks", "num": "3283", "d": "8/2014"}, {"title": "timeout issue", "body": "written frontend using angularjs database mongodb used mongoose also server nodejs developed intelj idea pushed cloud works fine sometime everything stops minutescan anyone say may problemmy project code one server database another server using multiple servers causes issue", "num": "3280", "d": "8/2014"}, {"title": "backbone sends get request instead patch patch true set", "body": "hi trying save changed attributes model code patch true given options hash browser send get request patch true used everything ok sends put request override behavior make something like regards", "num": "3278", "d": "8/2014"}, {"title": "backbonehistorystart issue root param produce effect", "body": "trying change default root backbonehistorystart starting routerjs appjs example trigger fire home main page entirely served server side ie successful login user redirected mydomaincomhome prepared render client side want set root mydomainhome mydomain default backbonehistorystart missing something fired always two cases", "num": "3277", "d": "8/2014"}, {"title": "adding index method backbonemodel", "body": "often necessary get index specific model resolve case use following approach looks ugly could better add something like method possible get index specific model like following", "num": "3276", "d": "8/2014"}, {"title": "reducing fetchbased promise boilerplate", "body": "pains method resolves data returned server data returned server largely irrelevant outside model really temporary data really exposed publicly find often wanting pass promise model view makes job rendering progress indicators really simple make really simple would nice problem promise resolves plain data server obviously changing resolution fetch promise going break sorts things propose either option call changes resolved another method would probably need appropriate way handling failures also name nt great general principle stands currently resolves pretty pointless value thoughts", "num": "3274", "d": "8/2014"}, {"title": "production version js file nt version", "body": "nt version top file devel edge versions underscorejs file devel production edge assuming backbonejs production missing version number pretty important devs determining need upgrade andor costs upgrading viewing changesets", "num": "3273", "d": "8/2014"}, {"title": "backbone prototype events", "body": "var gui backboneviewextend events click clickhandler var gui guiextend events click deletehandler want use prototype inheritance incident use prototype backbone", "num": "3271", "d": "8/2014"}, {"title": "backbone prototype events", "body": "var gui backboneviewextend events click clickhandler var gui guiextend want", "num": "3270", "d": "8/2014"}, {"title": "backbonejs ie compatibility view", "body": "backbone api works ie compatibility view list browsers supported backbonejs", "num": "3269", "d": "8/2014"}, {"title": "validation validate currently set attributes", "body": "need always pass model attributes method due inside never know exactly need validated example create new model two required attributes empty default trying set one error validated second one invalid approach logical method entire model valid saved definitely remove line example add something like one", "num": "3268", "d": "8/2014"}, {"title": "fix unrecognizable characters bug safari", "body": "cause unrecognizable characters safari call especially page data get router according url leads page data show abnormally call function better", "num": "3267", "d": "8/2014"}, {"title": "input validation needed", "body": "line backbonejs preface locationhash fragment fragment fragmentreplace javascript", "num": "3264", "d": "8/2014"}, {"title": "add default value support optional routes", "body": "let say following route catname parameter optional would great could set default value lot php frameworks support functionallity know check defined mapped function think makes logic define default value route think implementations perhaps similar customizable", "num": "3263", "d": "8/2014"}, {"title": "flat ui andorid", "body": "using flat ui android application using android studio unable find autocompletetextview inside flat ui use autocompletetextview application anyone suggest way use", "num": "3262", "d": "8/2014"}, {"title": "object passed listento extend backboneevents throw descriptive error", "body": "currently message bit confusing people familiar implementation listento open happy pr", "num": "3261", "d": "8/2014"}, {"title": "virtual attributes feature", "body": "recently needed compute virtual attributes models used marionette templates use method nt nicest cluttering views added ability apps model models extend allow definition virtual attributes declaring model coffeescript class entitiesmodel extends backbonemodel tojson extend super getvirtualattributes allows object containing helpers construct attributes fly extend attributes returned proposing included backbonejs im sure impact would users backbone found useful wanted least share proposed feature therefore would something backbonejs community would want", "num": "3260", "d": "8/2014"}, {"title": "fire error overriding parse method", "body": "trying throw error server response receive within method valid tried setting key options parameter call method within overidden method model none causing callback method trigger clue actual example javascript backbonemodelextend parse function parse resp options", "num": "3257", "d": "8/2014"}, {"title": "delegateevents called initialize view constructor", "body": "hi seems latest unpublished version call moved see making break change previously modify event listeners mostly debounce function wo nt triggered frequently events delegated nt work reason change also found seems indicate original behavior expected behavior", "num": "3256", "d": "8/2014"}, {"title": "dynamic view attributes rerendering", "body": "really would welcome ability update view dynamic attributes gets rerendered take instance view two states ie selectedunselected differentiate adding selected class view el javascript var model new backbonemodel selected true var view backboneviewextend classname function return thismodelget selected selected initial render works well however rerendering view model changes view class attribute nt get updated since attributes capture instatiation view changes would reflected future rerenders view goes tagname property static per view instance", "num": "3255", "d": "8/2014"}, {"body": "please use stackoverflow mailing list questions like error gives information need know", "d": "8/2014"}, {"body": "thanks url property defined model class scope collection code works version change logs modification used statckoverflow help answer decide read backbone source code code really need break user space least change log upgrade notei think", "d": "8/2014"}, {"body": "impossible help debug without small reproducible test case try creating jsfiddle shows problem look changes", "d": "8/2014"}, {"body": "thanks preparemode function collection dropped attrscollection attrscollection add line ver works may official way create new model must let know collection information though may necessary", "d": "8/2014"}, {"body": "yup added back lines later optionscollection nt work", "d": "8/2014"}, {"body": "attrs instanceof model attrscollection attrscollection return attrs attrs instanceof model return attrs code called model constructor get model instance call collection create method realized oddly attrs instanceof model true problem solved mei change code thank", "d": "8/2014"}, {"body": "naganowl underscore bind method case", "d": "8/2014"}, {"body": "aware solution brought linked issue person stated workaround rather solution given part ajax options backbone leverages callbacks would think backbone also take advantage option well", "d": "8/2014"}, {"body": "try asking stackoverflow", "d": "8/2014"}, {"body": "browser using key lines around", "d": "8/2014"}, {"body": "using firefox archlinux emulatehttp false yes already found lines tried find bug nt seen nothing wrong", "d": "8/2014"}, {"body": "make small test jsfiddle show problem never case sending sends get request instead feel comfortable debugger try track", "d": "8/2014"}, {"body": "well something like shame never used jsfiddle ca nt get work backbone undefined error console despite attached backbonemin underscoremin jquery regards", "d": "8/2014"}, {"body": "recall correctly backboneorg downloads point github servers nt allow hotlinking updated one keep mind backbone call sync post model id", "d": "8/2014"}, {"body": "try one", "d": "8/2014"}, {"body": "yep forgot id attr fiddle case models fetched server already id attr thought mean create instead update id firstly found bug added debug consolelog modelisnew function expected case isnew false bug repeats fiddle see patch query nt want waste time proofs bug pls give time collect information unexpected behaviour report nearest future regards answer", "d": "8/2014"}, {"body": "closing find genuine bug backbone feel free post reopen", "d": "8/2014"}, {"body": "option specifying first part url pattern match let say route mydomaincomprojectsmyapphome could set projectsmyapp use home route instead writing whole projectsmyapphome line key router saying like direct home route pass keys", "d": "8/2014"}, {"body": "wrote exactly documentation says point nt work least imagine wan na entirely path unique root follow example", "d": "8/2014"}, {"body": "domain pass home root paths absolute domain would help short example jsfiddle show mean example first example empty string second example space", "d": "8/2014"}, {"body": "difference spacing mistake cuz wrote code default backbone consider root mydomaincom wan na change default root home mydomaincomhome wrong", "d": "8/2014"}, {"body": "really ca nt help without working testable example wan na try mailing list irc channel stackoverflow kinds questions github issues really problems framework continuing creates noise everyone following repo", "d": "8/2014"}, {"body": "nt real problem apologies perhaps proper documentation would nice one simple problem change default root home nobody answered documentation makes easier taking fact work thanks anyway", "d": "8/2014"}, {"body": "term index meaning context model relevant relation collection models collections type interlocking dependency nt exist elsewhere model nt think would great place start find useful definitely add application model class", "d": "8/2014"}, {"body": "available code minified version strips comments including header though sure nt consistent underscore backbone better ways keep track thirdparty libraries app either use package manager name files need example", "d": "8/2014"}, {"body": "thanks makes sense thu aug pm adam krebs notifications githubcom wrote available backboneversion code minified version strips comments including header though sure nt consistent underscore backbone better ways keep track thirdparty libraries app either use package manager name files need example reply email directly view github", "d": "8/2014"}, {"body": "please use stackoverflow mailing list irc channel questions github issues maintaining framework", "d": "8/2014"}, {"body": "backbone work every commonlyused browser find one nt working file bug", "d": "8/2014"}, {"body": "test case", "d": "8/2014"}, {"body": "donfranke avoid something like trying understand", "d": "8/2014"}, {"body": "updatehash function input validation performed href value fragment value caught app scanner xss vulnerability recommend giving fragment value treatment href value", "d": "8/2014"}, {"body": "possibly using fortify incorrectly flags xss problem see others", "d": "8/2014"}, {"body": "know check defined mapped function think makes logic define default value route think makes sense defaulting mapped function", "d": "8/2014"}, {"body": "wrong repo", "d": "8/2014"}, {"body": "", "d": "8/2014"}, {"body": "backbone generally pretty conservative comes throwing custom errors said seems reasonable", "d": "8/2014"}, {"body": "current message", "d": "8/2014"}, {"body": "js backbonemodelextend initialize function thislistento wow function new", "d": "8/2014"}, {"body": "error stack points directly back line code called invalid object think fine error debugging maybe fine nt right word sufficient far javascript errors go", "d": "8/2014"}, {"body": "might fine sufficient seasoned javascript developer assume entire point backbone many regards make programming javascript fun easier nonseasoned engineers use correctly thinking noble goals might worthwhile consider unseasoned developers comes usability aspects documentation apis even error messages words easy obvious library author might case consumers said library", "d": "8/2014"}, {"body": "absolutely true possible pass wrong type object every single method backbone api thing trying nt work nature programming dynamic language validated type threw error whenever object incorrect type passed public method would effectively statically typed library would probably double download size errors useful development wasted bandwidth production javascript developer level seasoning learn debug problems trying use objects places nt fit particular place nt special example error common one", "d": "8/2014"}, {"body": "seen templatehelpers think want since view concern much model concern cent", "d": "8/2014"}, {"body": "yea look view template helpers used great project using mustache templates revisit fwiw works fairly well could possibly extended allow direct model use even adding attributes", "d": "8/2014"}, {"body": "templatehelpers nt limited helpers sense handlebars helpers used extra data attributes want keep model handles performance issues dealing large datasets", "d": "8/2014"}, {"body": "needed compute virtual attributes models used marionette templates problem right pass references models templates call useful methods directly real attributes virtual attributes huge part nice model", "d": "8/2014"}, {"body": "thank guys looking changing template library mustache handlebars use function ability combination template helpers turn solve underlying issue smile", "d": "8/2014"}, {"body": "still use template helpers concept mustache like marionette define custom renderer template helpers would mixed data passed template", "d": "8/2014"}, {"body": "error callback actual network connection error server error local errors might way trigger nt place try instead", "d": "8/2014"}, {"body": "jashkenas would nt describe local error understand correctly apis give valid response json even kind error particular example looks like django tastypie something similar responses like used however think would make sense case overwrite backbonesync error get json response containing server error might interpreting wrong roundrobin", "d": "8/2014"}, {"body": "nt seem correct api even returning error json object return error code indeed trigger error callback", "d": "8/2014"}, {"body": "jashkenas yeah true sometimes control", "d": "8/2014"}, {"body": "thejameskyle got right", "d": "8/2014"}, {"body": "problem api calls go cdn cdn properly handles status code something fails ca nt set status code anything cdn wo nt properly handle also imagine cases sending status code acceptable eg something happens internal server error code nt explicit enough", "d": "8/2014"}, {"body": "braddunbar got comment change ordering", "d": "8/2014"}, {"body": "hi gildorwang sorry breakage relevant pull could nt think reasons ordering stood", "d": "8/2014"}, {"body": "braddunbar see suggestion modify listeners constructor guess reasonable matter code refactoring would expect lot apps broken release next version thoughts", "d": "8/2014"}, {"body": "yes correct usually see somewhat like following actually said feel break things many users fine changing", "d": "8/2014"}, {"body": "agreed work nt want inline callback anyway fine update code use constructor way looks better indeed", "d": "8/2014"}, {"body": "correct ca nt change html tag name keep dom element preserved instead sticking classname root element put toplevel element inside template listen changes change classname nt want add div", "d": "8/2014"}, {"body": "worth mentioning backboneconditionalclassnames although unless lot probably easier manually render", "d": "8/2014"}, {"body": "thanks check", "d": "8/2014"}, {"body": "reset escape hatch allows easily efficient rendering bulk know need case use", "d": "8/2014"}, {"body": "set without making attribute changes dirty aug jeremy ashkenas notifications githubcom wrote reset escape hatch allows easily efficient rendering bulk know need case use set reply email directly view github", "d": "8/2014"}, {"body": "got thank", "d": "8/2014"}, {"body": "nope would nt fly avoid confusion need model objects pass null first argument nt need", "d": "8/2014"}, {"body": "emulatehttp option causing backbone code override jquery beforesend sure intended behavior", "d": "8/2014"}, {"body": "khodorammar think emulatehttp option override jquery beforesend anyboby could comment", "d": "8/2014"}, {"body": "", "d": "8/2014"}, {"body": "considered developing binary search approach suggested part pull request issue however decided probably common large number items added one time especially initial load app opposed separately case adding u items finally n item list would take n lg n binary insertion method would take u n reckon would usually higher least noticable higher could try estimate approach would faster change implementation fly would make code complicated increase file size", "d": "8/2014"}, {"body": "know adding models stops use manually sort finished", "d": "8/2014"}, {"body": "trying maintain dependent collections complete set models subset b filtered function x kept synchronized using addremoveetc events b since singleadd events limited adding one model time currently hardcoded sorting insertion sorting much faster previous method fine still nt heard convincing arguments singleinsertion made slow order optimize multiinsertions ca nt easily tell difference two cases", "d": "8/2014"}, {"body": "figured test see kind performance boost one would get using calling done appears actually slow things tested use case dts outlined", "d": "8/2014"}, {"body": "thejameskyle awesome test tweaked bit even slower nt sort collections end", "d": "8/2014"}, {"body": "also nt know benchmark computer opts per second results suspect take look according test backbone sort implementation way faster native array sort makes sense backbonecollection uses either native javascript array sort underscore sortby method behind scenes sortby ends using arraysort built javascript", "d": "8/2014"}, {"body": "suspect jabberfest native tests backbone sort addition collection extra native sort ever growing array whereas ones backbone sort", "d": "8/2014"}, {"body": "megawac collectiona plain javascript array collectionb backbone collection confused results showed sorting backbone collection significantly faster sorting javascript array sorry confusion collectiona really named appropriately", "d": "8/2014"}, {"body": "ah nevermind misread tests differences backbone collection length whereas native array grow tests afaik calls benchmarkteardown tests fixed show seem want see", "d": "8/2014"}, {"body": "would awesome swamped work right love take crack help couple months", "d": "8/2014"}, {"body": "", "d": "8/2014"}, {"body": "longer expected back priority list looks like someone else ends taking interest dives post everyone knows", "d": "8/2014"}, {"body": "hope see oo backbone soon", "d": "8/2014"}, {"body": "braddunbar correct wrong believe jquery solution problem dom custom events", "d": "8/2014"}, {"body": "yea stopimmediatepropagation hard draw parallels since backbone events bubbled like jquerydom events", "d": "8/2014"}, {"body": "true closer pattern jquery request would stopimmediatepropogation similar functionality would certainly useful nested views sharing model", "d": "8/2014"}, {"body": "seems like mention backbonecourier order courier mesh backbone events jquery events provides structured approach event flow issue would come courier model since listener control event received", "d": "8/2014"}, {"body": "jashkenas nt railsspecific url structures avoid multiple identifiers aka shallow routes common api pattern ie vs", "d": "8/2014"}, {"body": "came across issue although conclusion made also think bug need fix lots people come across confuse people backone really depends whatever jquery zepto ca nt assume need nodejs commonjs browserify hypothesis wrong otherwise many people came across problem two way solve problem fix selfly add export interface surely well docs set think code following also problem see bowerjson using jquery amd using jquery commonjs", "d": "8/2014"}, {"body": "yeah issue continuing cause friction backbone fix solve problem nonobvious awkward easily lead multiple copies jquery loaded since jquery generally need explicit dependency view classes packaged modules reason cited simply including query packagejson load backbone node probably nt want jquery dependency folks might jashkenas problem jquery unused dependency node cares takes virtually disk space time load happens thread starts let bite bullet go back simple practical", "d": "8/2014"}, {"body": "actually using modelset modelparse data right since parse option missing would really nice consistency collectionreset etc", "d": "8/2014"}, {"body": "thanks much comment chrome giving better error messages firebug helped us solve problem", "d": "8/2014"}, {"body": "welcome", "d": "8/2014"}, {"body": "another add flexibility understand points brought quoted article really opinions end day good opinions things aware nt use delete routes still opinion driving baseline backbone users quite ridiculous", "d": "8/2014"}]