[{"title": "child component data parent component", "body": "way get data input component back form component html markup bad practice separate elements", "num": "991", "d": "6/2015"}, {"title": "arrayprototype remove longer returns removed element", "body": "using splice works fine since documentation imply functions similarly removing element think makes sense return removed element previous versions ended slight pain trying upgrade feel free close", "num": "990", "d": "6/2015"}, {"title": "implementing ckeditor", "body": "trying implement ckeditor tabbed form generated vue every tab different translation store database nl en fr language moment remove attributes div get editor seems vrepeat something strange get working see discussion", "num": "989", "d": "6/2015"}, {"title": "watcher behavior", "body": "created watcher binding also using computed property dependent value watched positively surprised computed property executed watcher standard behavior think better documented watcher section", "num": "988", "d": "6/2015"}, {"title": "vif working partials", "body": "following code compiling even index deal template tag wrapping partial order make works", "num": "987", "d": "6/2015"}, {"title": "subcomponents", "body": "way create nested components vuejs case newform component rendered nested components files", "num": "986", "d": "6/2015"}, {"title": "memory leak uncleared ref static components", "body": "brief static component eg caused wo nt invoke clean ref context leads situation component destroyed destroyed deferred cleanup context still manipulate ref unexpected example detail check demo", "num": "985", "d": "6/2015"}, {"title": "twoway directivevmodel", "body": "got questionissue hidden form input gets updated via jquery function part autocomplete tried putting vmodel form input learned wo nt update tried adding custom directive added vmemberid newmemberid form input newmemberid getting updated thanks", "num": "984", "d": "6/2015"}, {"title": "using computed properties w vmodel", "body": "vue longer use computed properties directive super helpful input masking better way workarounds", "num": "983", "d": "6/2015"}, {"title": "rework boolean attributes", "body": "reason boolean attributes go completely spec since blindly following spec break compat suggest following middleground boolean attribute nt exist set false per spec boolean attribute exists either true false use current handling since spec prohibits values maybe deprecate syntax boolean attribute exists either empty string name attribute set true per spec values trigger warning map undefined technically spec mandates case insensitive comparison unsure would translate vue believe properties case sensitive javascript end nt know handled edit seems attribute mapping works lowercase properties case insensitive comparison acceptable", "num": "981", "d": "6/2015"}, {"title": "surprising behavior using filter object inside vrepeat", "body": "nt know intentional better documented object passed vrepeat gets transformed array containing objects key value passing filter", "num": "980", "d": "6/2015"}, {"title": "someway easy know objects exists array", "body": "currently project validation would cool something like", "num": "979", "d": "6/2015"}, {"title": "alternate props syntax", "body": "currently properties defined array names array objects first syntax okay enumerating properties second one bit awkward inconsistent way entries specified propose following syntax extensions inspired mongoose believe could implemented without breaking compatibility", "num": "978", "d": "6/2015"}, {"title": "lifecycle hooks like componentdidupdate let refresh iscroll", "body": "working sth like change filter view update insert remove nodes refresh iscroll make iscroll work react things use hook refresh iscroll vue tried sure work normally leave enough rest try refresh iscroll something like works", "num": "977", "d": "6/2015"}, {"title": "please provide forum", "body": "hi new noob vuejs javascript please provide forum asking simple questions like add data using json remote url thanks lot sorry bad english", "num": "976", "d": "6/2015"}, {"title": "problem using webcomponentsjs firefox", "body": "using latest version vuejs webcomponentsjs try load simple component firefox throws error com console examplehtml html vuecomponent mycomponent template lt span gt hello nome component lt span gt data function return nome awesome var vue new vue el body bowerjson dependencies json dependencies vue webcomponentsjs console log", "num": "975", "d": "6/2015"}, {"title": "watcherspecific options namely", "body": "current version currently defining watcher via vue constructor register watcher deep watcher however passing property constructor options sets watchers deep nice able set specific watcher possibly like could accomplished modifying function follows special case necessary since method nt support options argument thus making tad less flexible future watchers may get added however would work", "num": "974", "d": "6/2015"}, {"title": "default value component props", "body": "would nice apologies easy ways implement ie setting manually constructor", "num": "973", "d": "6/2015"}, {"title": "twoway component binding broken", "body": "please check demos jsfiddle version version click parent checkbox component switcher child changes passed parent view examples code vue version chnaged", "num": "972", "d": "6/2015"}, {"title": "duplicating data object", "body": "hello order duplicate object children use jquery function please better way vue using vue duplicatethis function field var currentfield thisfields fieldindex thank", "num": "971", "d": "6/2015"}, {"title": "handle array checkboxes input", "body": "need result multiple select tag using array input checkboxes like posttypes field box array contains values related checked checkboxes", "num": "970", "d": "6/2015"}, {"title": "render extra html component", "body": "bootstrap dialog use backbone bootstrapdialog write coffeescript think understand add extra html show like vue idea", "num": "969", "d": "6/2015"}, {"title": "reserved word char breaks minification", "body": "think use char identifier getpathchartype function causing yuimin minifiers break reserved possible future keyword ecmascript specification swapping character fixes issue", "num": "968", "d": "6/2015"}, {"title": "vue\u4e2d\u80fd\u5426\u5728 compiled resolve \u6548\u679c", "body": "\u539f\u6765\u7528 ng resolve defer ng hook compiled", "num": "967", "d": "6/2015"}, {"title": "prevent propagation lifecycle hooks super vueextend classes", "body": "base class create subclass instantiate compile subclass normal behaviour shows classes methods called anyway force class method called class compiled method overridden thanks", "num": "966", "d": "6/2015"}, {"title": "waitfor rendering child components even emit correct event", "body": "created fiddle illustrating experience ideally templates rendered block however nothing happens advice", "num": "965", "d": "6/2015"}, {"title": "von change triggered filters", "body": "hey working form fields want fire method input changed working expected fields without filter input changed filter event isnt working searching events might work also tried avail example form inputs first doesnt work filter changes input exit field work exit field debounce kicks expected second field works fine sure expected behaviour recommended workaround thanks", "num": "964", "d": "6/2015"}, {"title": "bring vcomponent back configurable", "body": "noticed line release notes vcomponent removed components use custom tag syntax dynamic components new syntax introduced today switched cms building vuejs wrap vuejs renaming require setting custom prefix specifically made change move away using syntax site building also uses vuejs vue would one catch custom elements rather renamed one race condition reckon goes way entirely sure could two vuejs play without race condition thoughts smilecat", "num": "963", "d": "6/2015"}, {"title": "components registering", "body": "new vuejs library creating little example ca nt get components work correctly even tried copying example net progress example trying replicate page code lt p gt helloworld lt p gt app script js vuecomponent thatscool template myowntemplate replace true data function return helloworld thats cool var demo new vue el demo data name richard griffin ubicacion tijuana bc foto using demo object another div tha loads correctly component part working using lates dev version vuejs help appreciated", "num": "962", "d": "6/2015"}, {"title": "problem variables like", "body": "bug example props x data variable x twoway binding also x working number try jsfiddle html javascript lt input type text name name vmodel value gt props data json html data json js javascript vuecomponent mycomponent template mycomponenttemplate props name value new vue el demo data x", "num": "961", "d": "6/2015"}, {"title": "gruntcoveralls missing packagejson", "body": "used gruntfile nt packagejson", "num": "960", "d": "6/2015"}, {"title": "hide component tag", "body": "recently updated project encountered problem html somecomponent content rendered prev like example list components html content output html content hide somecomponent tag think rendering types usage case list need hide tag css get messy otherwise", "num": "959", "d": "6/2015"}, {"title": "custom directives attributes broken well attrs dashes accessibility", "body": "see fiddle provided attributes class role etc work properly well attributes dashes like ariavaluemin ariavaluemax since invalid left assignment using string eg thisel ariavaluemin also work obviously problem accessibility", "num": "958", "d": "6/2015"}, {"title": "orderby using natural sort", "body": "way achieve natural sorting ootb orderby filter default sort works like item item item item instead expected item item item item", "num": "957", "d": "6/2015"}, {"title": "using vue data html image source", "body": "hi html tag see biding data imagelink html image src tag works image displayed normal chrome shows found image link since checking html img src syntax way correct better way", "num": "956", "d": "6/2015"}, {"title": "logic expressions working vclass", "body": "using binding value boolean enable class two subexpressions work combine get errors vclasschecked pagemode tags lt lt works vclasschecked curshowtags value lt lt works vclasschecked pagemode tags amp amp curshowtags value lt lt nt work error message vue warn error evaluating expression pagemode tags amp amp curshowtags value typeerror read property tags null", "num": "955", "d": "6/2015"}, {"title": "odd issue currency filter", "body": "currency gt", "num": "954", "d": "6/2015"}, {"title": "applying currency filter returns", "body": "created filter add tofixed currency symbol", "num": "953", "d": "6/2015"}, {"title": "subcomponents", "body": "ran following problem possible access data passed inside components except component nt possible add subcomponents inside components missing something code course example hope get point", "num": "952", "d": "6/2015"}, {"title": "force update data", "body": "method vue js component relativedate function date return moment date fromnow html relativedate notification datetime would like update every obviously reason way wit vuejs", "num": "951", "d": "6/2015"}, {"title": "maxupdatecount causing false positives", "body": "constant causing false positive reports way adjust", "num": "950", "d": "6/2015"}, {"title": "el text node using inlinetemplate", "body": "provide inlinetemplate get text node back produce template string get element code see happening", "num": "949", "d": "6/2015"}, {"title": "read property previoussibling null", "body": "upgrading get weird error update data shown vrepeat filter uncaught typeerror read property previoussibling nullfindprevvm first two updates clicks work fine third time throws error", "num": "948", "d": "6/2015"}, {"title": "nested vrepeat access parent index inside child", "body": "unable candy index", "num": "947", "d": "6/2015"}, {"title": "csp version error minified", "body": "building chrome app use minified version using uglifyjs get following error help using browserify babel templates inlined script", "num": "946", "d": "6/2015"}, {"title": "\u52a8\u6001\u7ec4\u4ef6\u4f7f\u7528\u7591\u95ee", "body": "", "num": "945", "d": "6/2015"}, {"title": "keepalive", "body": "using keepalive switch different component back scrolling overflow auto div component always appears scrolled back top expected behavior changed show code need", "num": "944", "d": "6/2015"}, {"title": "vif reevaluated nested components", "body": "given setup like following container avatar components reevaluated root data updated fiddle demonstrates problem console outputs despite template tag dom updates warning expected code working thank", "num": "943", "d": "6/2015"}, {"title": "mustache evaluation work directives unless isliteraltrue", "body": "fiddle demonstrates problem related indicated mustache evaluation work directives general apparently currently restricted directives marked isliteral note trying achieve dynamic twoway binding would like onetime mustache evaluation directives isliteral directives enjoy ie directive isdynamicliteral false update function case", "num": "942", "d": "6/2015"}, {"title": "restore vcomponent lists", "body": "hi prototyping app vue nestedsortable working vue nb demo works firefox amp opera chrome ie vue end vcomponent nt succeeded porting code nestedsortable library made use custom components always something working variation tried would possible make exception ulolli elements still vcomponent directive like exception table elements order break usage jquery plugins use list elements thanks", "num": "941", "d": "6/2015"}, {"title": "suggestion vtransition done callback vs transitionend", "body": "docs done callback described following finally enter leave optionally take second callback argument indicating want explicitly control transition end instead waiting css transitionend event vuejs expect eventually call callback finish transition would loved use done callback fallback method failed inexistent transitionend events chance could implement concurrent handling end transition marked either transitionend event done callback whatever comes first easiest way patch current behaviour something like", "num": "940", "d": "6/2015"}, {"title": "", "body": "component conponent", "num": "939", "d": "6/2015"}, {"title": "dynamic component vrepeat alias breaks computed properties", "body": "needed computed property vrepeat alias check data available came across following problem without alias computed property works perfectly add alias vrepeat variable ca nt access computed property alias anymore working example without alias jsfiddle javascript html html text timestamp working example alias jsfiddle html html msgtext msgtimestamp mentioned reason adding alias reference item vclass directive", "num": "938", "d": "6/2015"}, {"title": "multiple transclusions changed", "body": "hi trying port app vuejs unexpected behaviors components transclusion multiple content insertion points selectors vue multiple content insertion point selectors one without elements matched selectors removed selectorless content vue component matched selectors removed selectorless content star operator vue possible use star operator vue anymore operator vue possible use negation operator vue anymore last points operators behavior seems match first element", "num": "936", "d": "6/2015"}, {"title": "documentfragment undefined", "body": "trying make vue work necessary shims polyfills facing troubles line something case", "num": "935", "d": "6/2015"}, {"title": "keep vevents special way pass callbacks hooks", "body": "know callbacks passed props cases use simple way listen hook events like ready dynamic components like controlled course expose property accept hook callback call explicitly component couple component check callback", "num": "934", "d": "6/2015"}, {"title": "pass one time value props watch", "body": "find long pass variable matter one time prop component always create directive watcher fact pass one time binding want compiler resolve value without watching especially case pass callbacks", "num": "933", "d": "6/2015"}, {"title": "throws error transcluded content undefined", "body": "component uses template cnotents embed comipler throw error example demo see error console html issue raises commit", "num": "932", "d": "6/2015"}, {"title": "data delete method bug", "body": "key mlist datamdata mlist datamdata key middatamid mlist datamdata delete key consolelog jsonstringify mlist datamdata break key item nt remove output null", "num": "931", "d": "6/2015"}, {"title": "single class vclass", "body": "need add two classes based condition classes currently like also add class without adding another attribute without appending current value fact expected following work", "num": "930", "d": "6/2015"}, {"title": "error append component vrepeat svg", "body": "javascript var vue require vue var arr name foo isshowing true name goo isshowing true name bar isshowing true new vue data items arr template components test template mount body settimeout function arr isshowing false settimeout function error happen arr isshowing true code run error version code", "num": "929", "d": "6/2015"}, {"title": "filterby false property nt work", "body": "use true condition filterby nt work use false condition ps sorry poor english", "num": "928", "d": "6/2015"}, {"title": "vif multiple conditions", "body": "could nt find part documentation wanted ask way vif evaluated multiple condition something like", "num": "927", "d": "6/2015"}, {"title": "switch rc version", "body": "done vue app using stable documented version considering jumping latest rc version rather finishing app converting stable enough develop features stable enough would nt rewrite things others switching figure feature documentation differences issue two new docs progress already pulled attributes switched big changes thanks advance", "num": "925", "d": "6/2015"}, {"title": "mustache evaluation fails props attribute contains newline", "body": "see fiddle formatting purposes would nice able use newlines formatting attribute value", "num": "924", "d": "6/2015"}, {"title": "improve communication transcluded components", "body": "ref would nice expose formal apis component work child components transcluded content", "num": "923", "d": "6/2015"}, {"title": "template tag still svg", "body": "use vrepeat template tag svg compiled template tag still", "num": "922", "d": "6/2015"}, {"title": "suggestion support string paramattributes value", "body": "would nice strings much less noise typing", "num": "921", "d": "6/2015"}, {"title": "prop assertions", "body": "nice components able check props receives makes reusable components robust eg could backwardscompatible totally optin", "num": "920", "d": "6/2015"}, {"title": "type number \u65e0\u6cd5\u8f93\u5165\u5c0f\u6570", "body": "input type number vmodel amount \u65e0\u6cd5\u8f93\u5165\u5c0f\u6570", "num": "919", "d": "6/2015"}, {"title": "componentlevel delimiter option", "body": "pointed global delimiter option makes application custom delimiters incompatible components assumes default delimiter settings solution would either allow components define componentlevel delimiter setting overwrites global components intended generally reusable lock delimiters b remove global delimiter setting make strictly componentlevel option backwards compatible requires component authors aware requirement option b breaking requires option every component needs custom delimiters however noted cases component needs custom delimiter root instance html compatible serverside templating languages also uses mustaches", "num": "918", "d": "6/2015"}, {"title": "use safehtmlstring syntax", "body": "currently syntax escape html use triple mustache like safehtmlstring would really neat change variable like laravel easier see unescaped variables also emphasizes potential danger thoughts make pull request found normal delimiters far", "num": "917", "d": "6/2015"}, {"title": "data inheritance tag", "body": "hi trying create generic form component handles bunch stuff like validation formatting etc tried mix vue components use tag structure x root view gt x customform component tag gt n x customforminput component example markup problem ca nt access data customform component customforminput component probably transcluded contents compiled parent component scope child scope way without polluting data root view", "num": "916", "d": "6/2015"}, {"title": "possibly silly request", "body": "nt like mustache bindings think noisy hurt readability managed avoid vue app except one place component dynamically bound logical way remove need would suggest change made things orthogonalconsistent overall maybe argument like", "num": "915", "d": "6/2015"}, {"title": "multiple validators", "body": "", "num": "914", "d": "6/2015"}, {"title": "filter ca nt sync value", "body": "hi used filter change select value option still stay selected value input text right try trigger select change input nt work fix fix", "num": "913", "d": "6/2015"}, {"title": "directive parser nt properly parse regular expression directive expression contains", "body": "recreate console javascript vueparsersdirectiveparse pattern ab expression lt ab vueparsersdirectiveparse pattern ab expression lt seems like work least vuevalidator expects work seems like reasonable workaround javascript vueparsersdirectiveparse pattern new regexp ab expression lt new regexp ab nt work vuevalidator coded work directive literal expression instead value even though set directive definition sure opened", "num": "912", "d": "6/2015"}, {"title": "sort vmodel value nt update", "body": "name", "num": "911", "d": "6/2015"}, {"title": "able access data json array vrepeat", "body": "array json items trying use vrepeat output series table rows row empty cells output every item json vuejs getting property values even though confirmed definitely exist get values vrepeat something like getting errors warnings json output vue data object", "num": "910", "d": "6/2015"}, {"title": "vrepeat nt remove elements change", "body": "jsfiddle fiddle show problem approximates clicking populate show list values three sections left center right arrays problem items array stay display get removed listeners elements get stripped away looks something like found two changes help issue remove issue disappears line removed restore lines problem also goes away need couple small changes", "num": "909", "d": "6/2015"}, {"title": "vrepeat singleitem errors trackby", "body": "jsfiddle though probably good way write things constructing array fly single item throws", "num": "908", "d": "6/2015"}, {"title": "vrepeat requires data properties create using objectdefineproperty", "body": "demonstration see nt render", "num": "907", "d": "6/2015"}, {"title": "vrepate \u6307\u4ee4", "body": "\u6709\u8fd9\u4e48\u4e2a\u9700\u6c42 \u4e00\u4e2a \u5217\u8868items \u624d\u6362\u4e00\u884c \u8bf7\u8d50\u6559", "num": "906", "d": "6/2015"}, {"title": "cordova \u73af\u5883\u4e2d\u8fd0\u884c", "body": "\u7528 vuejs \u642d\u914d\u81ea\u5df1\u5199\u7684\u6846\u67b6\u505a\u7684\u4e00\u4e2a spa vue \u6ca1\u6cd5\u5728 cordova compontent mgview", "num": "904", "d": "6/2015"}, {"title": "objectobserve", "body": "hi think great piece code although ca nt use currently trying use within atom point using eval forbidden hand supported ask plan support maybe hidden behind flag replacing function runtime like rivets would willing help able looked code gettersetter generation seems pretty entangled everything thanks", "num": "903", "d": "6/2015"}, {"title": "vue devdocs", "body": "posted suggestion include vue devdocs site best way get site provide docs format understand opensource pr already form api docs machineread like json file", "num": "900", "d": "6/2015"}, {"title": "proposed changes prop work computed setters", "body": "hi trying build components use settable computed property bound parent vm components may also need set default value calling property setter compilation rather setting custom events duplicate role seemed cleaner make changes vue think", "num": "899", "d": "6/2015"}, {"title": "key set repeating object", "body": "got object called like repeating like results key root element working fine descendent element undefined would really nice access key inside repeated element well possible", "num": "898", "d": "6/2015"}, {"title": "question regarding components data scoping", "body": "got question regarding components data scoping hope right place ask got root vue instance two vue components instantiated via component array called responsible creating showing items component b responsible deleting items array would access list component component b delete item", "num": "897", "d": "6/2015"}, {"title": "\u5173\u4e8e\u6a21\u677f\u4e2d\u8c03\u7528\u8c03\u7528\u6570\u7ec4 length \u7684bug", "body": "\u6211\u7684\u4ee3\u7801\u91cc\u6709\u4e00\u4e2a info event infolength length", "num": "896", "d": "6/2015"}, {"title": "trigger animation dynamic vcomponent exchanged", "body": "several components live exchangeable pages within container way trigger vtransition behaviour switching component would usable implement page transitions", "num": "895", "d": "6/2015"}, {"title": "url routing", "body": "proper way route values url hash respond url changes", "num": "891", "d": "6/2015"}, {"title": "dynamic select attr", "body": "writing component content dynamic would great support expressions inside attribute tag example template html tabtext usage way make components dynamic like also possible access components content case inside components", "num": "890", "d": "6/2015"}, {"title": "staggered vrepeat transitions", "body": "like staggered animations like angular ngrepeat tried implement using transitiondelay getting index transitiondelay enter animation really ugly hack also nt look right first animation finished yet eg click add items click add three items first ten finished animating also nt know calculate index leave animation think could get repeat directive check oldvms another ugly hack another problem click add items click empty transitions finish elements remain stuck forever dom looks like transitionend event never called transition cancelled start", "num": "889", "d": "6/2015"}, {"title": "passing vmodels arguments filters working", "body": "judging page appears possible pass vmodels arguments filter functions however working working example expected see values inputs combined however get value first input name string lname returned always appears filter parameter lname passed string vmodel actual value", "num": "888", "d": "6/2015"}, {"title": "filter write detected correctly checkfilters warning vmodel filter readonly", "body": "code buggy filter read write hasread set get warning vmodel filter readonly", "num": "887", "d": "6/2015"}, {"title": "vmodel properly updated used vrepeat", "body": "hi currently running issue vue latest stable version basically variable list input fields dynamic vmodel like facing issue values input fields get updated immediately changed happen using method pushes string mails array jsfiddle entering values input fields nothing happens soon press add another input field appears current values shown something wrong love hear", "num": "886", "d": "6/2015"}, {"title": "\u63d2\u4ef6\u4e8b\u4ef6", "body": "", "num": "885", "d": "6/2015"}, {"body": "seems wrong try need props vrepeat bind data child iterance", "d": "6/2015"}, {"body": "miljanaleksic yes work work sake consistancy work repeat identifier commonstandard way loop thing", "d": "6/2015"}, {"body": "read", "d": "6/2015"}, {"body": "please read example nt work component expression prop compiled parent scope case prop needed simply access inside component", "d": "6/2015"}, {"body": "use communicate data childparent components website documentation communicating instances bad practice separate elements thats employ modularity helps simplify", "d": "6/2015"}, {"body": "use twoway props also please use vuejsdiscussions questions", "d": "6/2015"}, {"body": "found solution vuenexttick", "d": "6/2015"}, {"body": "yep computed properties directives considered internal watchers always get notified user watchers closing opened issue docs repo", "d": "6/2015"}, {"body": "see use tag insert content", "d": "6/2015"}, {"body": "sorry nt see den documentation working thanks", "d": "6/2015"}, {"body": "thanks detailed report really appreciated", "d": "6/2015"}, {"body": "getting called", "d": "6/2015"}, {"body": "weird put right shows page gets loaded", "d": "6/2015"}, {"body": "note setting value programmatically either via trigger event update model directly without relying hidden inputs closing vue bug feel free continue discussion though", "d": "6/2015"}, {"body": "oh make sense thanks way recommend way set model directly via jquery function thanks", "d": "6/2015"}, {"body": "setting model nt via jquery function", "d": "6/2015"}, {"body": "well thing autocomplete function chose member depending chose id set use jquery plugin autocomplete learned vuejs set", "d": "6/2015"}, {"body": "initialize autocomplete lifecycle hooks component needs reference component instance good practice also teardown autocomplete component hook", "d": "6/2015"}, {"body": "course thanks lot", "d": "6/2015"}, {"body": "update looks like breaking change might early", "d": "6/2015"}, {"body": "using filters", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "note vue prop system semantics aim map strictly html attributes semantics agree prop expects boolean type makes sense map absence prop nt like making map even give bogus value boolean attribute set true eg spec design imo quite confusing literal nt think necessary deprecate simply spec nt allow", "d": "6/2015"}, {"body": "disagree change think create confusion prop attribute like think prop always needs value instead prefer say template partially rendered server comes would nt want casted boolean would like restrict prop boolean purpose prop assertion also vue directive params used without value eg confusing", "d": "6/2015"}, {"body": "yeah maybe deprecation bit extreme suggestion within suggestion notice terminating question mark azamatsharapov precisely initially proposed prop somethingexceptprop trigger warning map undefined consideration realizing browsers nt care value much going backtrack say presence attribute always bind true except using old syntax value false describe legit use case want single expression truefalsestring opposed using exception mechanism explicit exceptions node err value pair rust option", "d": "6/2015"}, {"body": "zacreature sorry sure understand mean describe legit use case want single expression truefalsestring opposed using exception mechanism said template may partially rendered server meant something like returns error want error casted true course prevent error simple example everybody expert may make mistake mainly mentioned confusion introduced proposed changes", "d": "6/2015"}, {"body": "legit case meant piece code average programmer would write particular purpose maybe optimist like believe average programmer sense returning error instead using language built error handling mechanism believe php two nt agree newbies favor tolerating mistakes eventually designing functions behave way get trouble see example modern languages builtin error handling mechanisms reason things fail good code always fail safe technically errors propagated crossing language barriers php html js propagation needs explicit framework unless ask since realm confusion sooner later someone expect regular html components work truefalse thing way expected vue handle boolean attributes per html spec would result checkbox always checked even returns error proposal attempts mitigate half sources confusion deprecation would long run remove confusion vue components would behave way html components", "d": "6/2015"}, {"body": "would want vuejs strictly follow html spec prop assertion must support casting right still nt agree opinion let see people maintainer framework say thank detailed explanation", "d": "6/2015"}, {"body": "modern languages builtin error handling mechanisms yes many argue using exceptions unless absolutely needed trycatch slow operation also lose much context caused error many including prefer deal errors happen mon jun azamat notifications githubcom wrote would want vuejs props strictly follow html spec prop assertion must support casting right still nt agree opinion let see people maintainer framework say thank detailed explanation reply email directly view github", "d": "6/2015"}, {"body": "markhahn intentionally used error handling opposed exception handling effort avoid confusion obviously failed point generally better send errors separate channel opposed returning low memory environments c functions manipulate data pointers sent arguments return integer status code nodejs continuations expect called rust haskell scala use course lots languages good old fashioned propagating exceptions big fan agree downsides even situation mandates errors sent results checking return code special values equivalent handling errors one expect backendagnostic mvvmframework", "d": "6/2015"}, {"body": "evan changed looked changes looks like missing prop boolean assertion casted false", "d": "6/2015"}, {"body": "azamatsharapov yes affect write code falsy anyway simply longer warns prop expected boolean missing assuming prop assertion html", "d": "6/2015"}, {"body": "hmm thought would useful case prop value prop nt passed could logical imo false false true true undefined missing yeah big deal", "d": "6/2015"}, {"body": "falsy anyway ca nt see use case differentiating boolean property vs one want make sure provided still add", "d": "6/2015"}, {"body": "meant kind case yes solves nt realize thanks", "d": "6/2015"}, {"body": "yeah documented somewhere preprocessed array array filters work object well", "d": "6/2015"}, {"body": "vue extends observed objects ensure change detection help therefore part vue responsibility", "d": "6/2015"}, {"body": "right way", "d": "6/2015"}, {"body": "use", "d": "6/2015"}, {"body": "share variables trough componentes new vue ready function access socket variable component nt want repeat code", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "nt work print console object root show io object right use show undefined", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "hmm better like current props syntax first array object array string identical format array second format keyvalue pair nt know value means type configuration target property rather configuration like validate require although type configuration might used widely doubt bit confusing", "d": "6/2015"}, {"body": "key", "d": "6/2015"}, {"body": "butsalt talking consistency attribute keyvalue map arrays string work well excellent readability want enumerate list properties also want add options reading list becomes difficult imo thing shortcut designed condense stuff like easy read", "d": "6/2015"}, {"body": "yes keyvalue map style consistent options used array syntax mostly extended original array processing logic landed without breaking backcompat", "d": "6/2015"}, {"body": "list items async transitions", "d": "6/2015"}, {"body": "oh u r right actually use hooks", "d": "6/2015"}, {"body": "transitions gets bit tricky need nested nextticks transitions buffered another tick reflow happens think make less ugly", "d": "6/2015"}, {"body": "use vuejsdiscussion gitter chat ask questions also check contributing guide", "d": "6/2015"}, {"body": "looks like webcomponentsjs bug mount directly instead everything works firefox returns wrapped object wrong attributes array", "d": "6/2015"}, {"body": "thanks suggestion landed although difference", "d": "6/2015"}, {"body": "cool thank much taylorzane", "d": "6/2015"}, {"body": "props data return become default parent nt provide although agree default directly seems better", "d": "6/2015"}, {"body": "usually key defined observed defined default value without also defining breaks assumption", "d": "6/2015"}, {"body": "without also defining data breaks assumption nt everything props independent data whether default thu jun pm stephen young notifications githubcom wrote usually key defined data observed defined props default value without also defining data breaks assumption reply email directly view github", "d": "6/2015"}, {"body": "love see prop property set natural assume default value provided nt necessarily needs come parent", "d": "6/2015"}, {"body": "markhahn hmm yeah maybe wrong", "d": "6/2015"}, {"body": "closed via", "d": "6/2015"}, {"body": "thanks fast catch detailed repro fixed release soon", "d": "6/2015"}, {"body": "yeah thanks", "d": "6/2015"}, {"body": "tried", "d": "6/2015"}, {"body": "please use questions nt codebase use approach nirazul mentioned use external utility lib function eg underscore lodash type functionality fall within vue scope", "d": "6/2015"}, {"body": "sorry try options afraid use nirazul approach may working browsers thank", "d": "6/2015"}, {"body": "fselias actually quite safe side", "d": "6/2015"}, {"body": "issue tracker help platform please go stackoverflow receiving help code think found bug please make sure read contribution guidelines first describe bug experiencing", "d": "6/2015"}, {"body": "vue documentation example handle array input checkboxes solution tried work correctly already posted issue different place nobody give solution", "d": "6/2015"}, {"body": "suggested please use questions example anyway", "d": "6/2015"}, {"body": "thank much apologies posting wrong section", "d": "6/2015"}, {"body": "oh submit discussion sorry", "d": "6/2015"}, {"body": "change variable name nt really see would break things maybe update minifier use uglifyjs instead", "d": "6/2015"}, {"body": "vuerouter", "d": "6/2015"}, {"body": "resolve vue", "d": "6/2015"}, {"body": "\u7b80\u5355\u7684\u529e\u6cd5\u5c31\u662f\u52a0\u4e2a \u8bbe\u6210", "d": "6/2015"}, {"body": "vshow vuecomponent mgslider page \u9875\u9762beforecomplete", "d": "6/2015"}, {"body": "loadview loadview \u4f20\u8fdb\u53bb\u7684\u4e00\u4e2a defer", "d": "6/2015"}, {"body": "\u8fd9\u4e2a\u5c31\u8ddf vuerouter", "d": "6/2015"}, {"body": "loadview", "d": "6/2015"}, {"body": "\u5f53\u7136\u5f97\u662f\u5f02\u6b65\u7684\u5566", "d": "6/2015"}, {"body": "\u4f60 readmemd bug", "d": "6/2015"}, {"body": "\u770b", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "point extension subclass inherit everything superclass looks like case use mixins instead", "d": "6/2015"}, {"body": "also rendering works take attribute block", "d": "6/2015"}, {"body": "played around little seems like event run current tick picked updated previous fiddle illustrate seems like bug think support synchronous eventfiring", "d": "6/2015"}, {"body": "read link seems like solve problem going close issue apologies spam hope helps someone else", "d": "6/2015"}, {"body": "listener simply listens native change event fire blur input work type need provide jsfiddle reproduction finally want react data changes nt rely dom listeners better way use underlying data directly", "d": "6/2015"}, {"body": "saying compiling template two versions vue nt sound like would work properly two versions vue probably better clearly divide areas managed eg use version compile element use version b compile element compiling piece dom two versions vue sounds like really bad idea", "d": "6/2015"}, {"body": "also like directive nice way turn html element component dynamically basically like custom element spec element turned custom element using attribute vue html item component pseudo code template lt div gt item lt div gt need order get result dynamic components work tag attribute like vue html item component pseudo code replace true needed remove lt component gt template lt div gt item lt div gt directive makes dynamics components easier apply existing elements keep semantics html good semantics wrong semantics", "d": "6/2015"}, {"body": "sure understand correctly would nt replace option solve problem like dynamically attach component different contexts like", "d": "6/2015"}, {"body": "steffans plan default always include correct semantic element use component template leave case raw template looks like html rendered result would semantically correct", "d": "6/2015"}, {"body": "recent commit replace option default probably combat exact problem thing note less obvious actually without digging template using component nt seem like huge problem knowing html element type styling etc useful", "d": "6/2015"}, {"body": "example tag would need added component template html item component pseudo code template lt li gt lt div gt item lt div gt lt li gt actually liked directive behavior exactly using custom elements nt replace element extendenhance way replacement optional needed times web component vue component default replace could somehow confusing element always part template html auto replace true implicit template lt button gt mega button lt button gt recreate button element vue directive would actually never use new syntax directive looks nicer html works maybe nicer", "d": "6/2015"}, {"body": "disagree proposal adds need know exactly element type megabutton targeting good", "d": "6/2015"}, {"body": "steffans nt use", "d": "6/2015"}, {"body": "post default true recommended usage would always include root element component template use custom element component whenever possible use dynamic components use table elements guess relaxing restriction bit nt hurt strong preference style", "d": "6/2015"}, {"body": "yes would first choice well previous comments mainly using dynamic component case applying directive existing element seems easier creating generic tag relaxed", "d": "6/2015"}, {"body": "keeping configurable prefixed around trick purposes appreciative smile", "d": "6/2015"}, {"body": "vote shorter vcomponent works tables provide flexibility replacing", "d": "6/2015"}, {"body": "fail see advantage know use megabutton component need know requires button tag p", "d": "6/2015"}, {"body": "thelinuxlich normally custom element used whenever possible however using directive actually intended apply component certain tag like way component could work multiple tags always considered replace option disabled current would replaced anyway wink", "d": "6/2015"}, {"body": "relaxed limitation since still useful tablesvg elements cases provide component different element type functionality changing could get confusing time breaking change", "d": "6/2015"}, {"body": "please use vuejsdiscussions repo questions code looks fine although nt post template component please make jsfiddle show problem", "d": "6/2015"}, {"body": "thanks fixed", "d": "6/2015"}, {"body": "ok found replace answer expected directive functionality", "d": "6/2015"}, {"body": "btw directive could solve table issue", "d": "6/2015"}, {"body": "oops thiselsetattributes proper method", "d": "6/2015"}, {"body": "always write custom sort filter make sure call copy array", "d": "6/2015"}, {"body": "hmmm thing happened last issue deleting code rewriting memory everything works problem development environment try harder submitting issues sorry trouble", "d": "6/2015"}, {"body": "known issue fixed", "d": "6/2015"}, {"body": "nt think understanding mean", "d": "6/2015"}, {"body": "closing inactivity feel free reopen could provide jsfiddle demonstrating issue clearly", "d": "6/2015"}, {"body": "try computed property view synced property also check", "d": "6/2015"}, {"body": "provide context curious know use case would need recursively update watcher times", "d": "6/2015"}, {"body": "editor arbitrary json data widgets components responsible various subsections json data widgets appear editor template many times widget responsible subsection json via key defines json looks like within subsection creates manages ui widget updates editor overall document json realtime via watcher tried twoway binding nt work well bootstrap scenario ie json document blank widget needs initialize subsection problem coming initialization sure exact path execution basically editor template compiled widget initializing subsection json overall json document managed editor overall json document one getting many updates one widget widget initializes finds needs initialize subsection json causes update editor document json wrestling trying come elegant way implement vue suggestions welcome", "d": "6/2015"}, {"body": "saying toplevel json object passing sub trees child components child component modifies sub tree gets initialization", "d": "6/2015"}, {"body": "yep put way makes think work around registering watch nexttick", "d": "6/2015"}, {"body": "nt quite understand component needs mutate sub tree gets though give example initialization", "d": "6/2015"}, {"body": "instance widget manages address city etc nt want editor know understand create proper default value widget start blank ie overall document want widget initialize subsection sane default let bindings inputs ui take", "d": "6/2015"}, {"body": "guess make number configurable lifting max update count make app work intended", "d": "6/2015"}, {"body": "yes templates max complexity tens widgets would probably set around", "d": "6/2015"}, {"body": "thanks btw really appreciate admire work vue", "d": "6/2015"}, {"body": "welcome", "d": "6/2015"}, {"body": "please make sure upgrade provide jsfiddle reproduction issue", "d": "6/2015"}, {"body": "fiddle found click moreless link first two times works third time throws error mentioned", "d": "6/2015"}, {"body": "use please read issue reporting guidelines opening issue thanks", "d": "6/2015"}, {"body": "fixed", "d": "6/2015"}, {"body": "thanks lot", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "\u8fd9\u91cc\u9700\u8981\u7528 \u53e6\u5916\u4ee5\u540e\u7528", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "realized easy way showing template compiled", "d": "6/2015"}, {"body": "simply removes instance dom reinserts later likely reset scrolling position behavior different", "d": "6/2015"}, {"body": "behavior different nt implement upgraded guess save position leave page restore return nt big deal thinking maybe way use keepalive changed maybe make plugin mon jun evan notifications githubcom wrote keepalive simply removes instance dom reinserts later likely reset scrolling position behavior different reply email directly view github", "d": "6/2015"}, {"body": "yeah common issue spas nt think could potentially offer option behavior", "d": "6/2015"}, {"body": "application need router jun pm evan notifications githubcom wrote yeah common issue spas nt think keepalive vuerouter could potentially offer option behavior reply email directly view github", "d": "6/2015"}, {"body": "think domfragment state preservation plugin alternative directive keepalive replace using name new directive something different directive pr core code enhance keepalive nt think performance problem since happens component changes code set scroll position fast", "d": "6/2015"}, {"body": "code works fast notice functionality placed scrolling element ca nt figure add scrollable elements entire page replacing keepalive option guessing proper way add feature make new directive needs added scrollable element although work developer hoped give control choose elements fix need develop new directive maybe called vkeepscroll adds functionality element assume put two handler functions global code nt studied write directive template methods onscroll e gt ele etarget elesetattribute datavuescrllft elescrollleft elesetattribute datavuescrltop elescrolltop attached gt ele elqueryselectorall datavuescrllft elescrollleft elegetattribute datavuescrllft elescrolltop elegetattribute datavuescrltop let know posting much detail thought maybe someone would let know heading wrong path", "d": "6/2015"}, {"body": "custom directives pretty easy", "d": "6/2015"}, {"body": "mean reevaluated seems thing different warning", "d": "6/2015"}, {"body": "wrapper prevents signedin content appearing consider following javascript initial load application state rootdata profile null user authenticates ui updates reflect rootprofile username foobar image user signs ui updates reflect rootprofile null vue warn error evaluating expression profileimage warning implies something done incorrectly approach replacing logged user object incorrect warning misleading thank help", "d": "6/2015"}, {"body": "due internal changes relating order prop changes synced practice affect app behaves safely ignore warnings next release restore old behavior longer throw warnings case", "d": "6/2015"}, {"body": "well tried patch method immediately ran situation since passing value needed directive expression prop instead using constant directive expression proper value directive expression evaluated ie guess really asking two way dynamic binding sigh case curious use case need create user interfaces json data hardcoded values template bind inputs model based runtime information", "d": "6/2015"}, {"body": "think misread code sample mustaches supported nt recommend usage either reason appearance interpolation tags explicitly indicates whole thing evaluated string mixing interpolation inside expressions makes difficult read understand whether something string expression meant following usage supported", "d": "6/2015"}, {"body": "completely agree drawbacks struggling find good way deal dynamic binding issues tested jsfiddle worked safe top level attribute binding", "d": "6/2015"}, {"body": "yes fine", "d": "6/2015"}, {"body": "great think gives need solve", "d": "6/2015"}, {"body": "put outer component template use custom element replaced one additional note following line needs changed empty textnode want make sure accessing first element child fixed example", "d": "6/2015"}, {"body": "wow great many thanks best", "d": "6/2015"}, {"body": "want prevent called twice using flag variable", "d": "6/2015"}, {"body": "good catch implement like anyone looks working solution use one vuetransition fade leave function el done var isdone false", "d": "6/2015"}, {"body": "\u5347\u7ea7\u5230 content \u786e\u5b9e\u6709", "d": "6/2015"}, {"body": "\u5347\u7ea7\u5230\u4e86", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "\u66f4\u65b0\u5230\u6700\u65b0\u7684 dev \u770b\u4e0b mon jun pm \u6728\u98ce notifications githubcom wrote reply email directly view github", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "getting property like works nt equal msg since alias", "d": "6/2015"}, {"body": "vrepeat identifier instead passing repeated object component pass prop instead expected behavior however noted actually bug code working without attribute content inside compiled parent content discarded component nt template", "d": "6/2015"}, {"body": "computed properties behaving expected mentioned bug fixed", "d": "6/2015"}, {"body": "thanks reporting issue fix asap", "d": "6/2015"}, {"body": "thanks works great", "d": "6/2015"}, {"body": "sorry vue never work way polyfill", "d": "6/2015"}, {"body": "use troubles documentfragment part", "d": "6/2015"}, {"body": "none polyfills make work nondom objects limitation browser even get past fragment error still wo nt work properly", "d": "6/2015"}, {"body": "cry", "d": "6/2015"}, {"body": "like communication parent child explicit passing callback may mean check presence callback makes possible side effects child component actions explicit look callback passed parent problem events although decoupled idea many listeners could triggered side effects emit something hand like reduce amount apis serve similar purposes feel fit use case better check implemented past commits use custom directive", "d": "6/2015"}, {"body": "official release fact one time one way syntax uses different syntax", "d": "6/2015"}, {"body": "use splice method right key mlist datamdata mlist datamdata key middatamid mlist datamdata delete key mlist datamdatasplice consolelog jsonstringify mlist datamdata break", "d": "6/2015"}, {"body": "work objects need use arrays", "d": "6/2015"}, {"body": "yes correct mentioned discarded solution read care note condition classes would performancewise perform condition check instead twice", "d": "6/2015"}, {"body": "yes sorry nt paying attention enough \u0433 \u0447 j bruni wrote yes correct mentioned discarded solution read care note condition classes haserror field would performancewise perform condition check instead twice reply email directly view github", "d": "6/2015"}, {"body": "cases going cause performance issues unless method takes must serious problem implemented said directly pass object returned computed property inside computed property call", "d": "6/2015"}, {"body": "work tried also please read issue guidelines opening one questions opened vuejsdiscussion", "d": "6/2015"}, {"body": "thank much worked sorry posting discussion great library getting hands wet", "d": "6/2015"}, {"body": "nt wan na upset anyone think worth reading issue reporting guidelines following", "d": "6/2015"}, {"body": "sorry forum somewhere general discussion", "d": "6/2015"}, {"body": "post non featurebug related issues", "d": "6/2015"}, {"body": "btw changes far documented release notes officially later week might breakage since still early project think switch", "d": "6/2015"}, {"body": "thanks suggestion home page", "d": "6/2015"}, {"body": "could give example necessary mustache tags directive values contain one expressionstatement", "d": "6/2015"}, {"body": "large constant particular case documentation purposes value best kept model template", "d": "6/2015"}, {"body": "thanks", "d": "6/2015"}, {"body": "love see happen perhaps something like template might look like var mycomponent new vue data function foo name bar name bat exports function return thisfoo template something want support think possible custom directive", "d": "6/2015"}, {"body": "mechanism restricts parent children context signatures situation eg menu sub menu good way communicate parent children", "d": "6/2015"}, {"body": "latest branch changes related issue transcluded components considered children host component means following case two use event system communicate content still properly compiled parent scope note issue specifically transcluded components host", "d": "6/2015"}, {"body": "content still properly compiled parent scope currently would compiled scope changing next release misunderstand", "d": "6/2015"}, {"body": "azamatsharapov even current version compiled parent scope scope template belongs", "d": "6/2015"}, {"body": "oh course thinking instead get", "d": "6/2015"}, {"body": "nt think good idea opens possible typing errors eg missing comma adds internal overhead converting array get purely stylistic preference", "d": "6/2015"}, {"body": "opens possible typing errors many fewer current typing requirement adds internal overhead converting array kind conversion fast maybe usecs vue compile time nt hotspot means get purely stylistic preference nt precedence done elsewhere vue personally nt see need current array syntax tue jun evan notifications githubcom wrote nt think good idea opens possible typing errors eg missing comma adds internal overhead converting array get purely stylistic preference reply email directly view github", "d": "6/2015"}, {"body": "see typing errors latter would throw former would result unknown run time behavior", "d": "6/2015"}, {"body": "understand also ca nt find similar examples use coffeescript teacup coffeescriptbased template noisy things like mustaches really stand typical vue code looks like note looks compared rest vuecomponent showlist paramattributes curshowidx allshows template render gt div showlist gt div showlistinner gt div show vrepeat show allshows vtext showtitle vclass selected showshowidx curshowidx way plugin current option maybe different name converted like could multiple things like call plugin", "d": "6/2015"}, {"body": "possible implement mixin", "d": "6/2015"}, {"body": "looks like easy solution lucky run used vue expandability impressive impressive vue code small clean begin notice used instead planned change like ps atom editor currently trying decide recommended framework arguing use vue time", "d": "6/2015"}, {"body": "yes renamed checkout upcoming changes beta rc release notes", "d": "6/2015"}, {"body": "markhahn unfortunately realized mixin example would work properly data initialization process relies initialize props happens hook however think easier write small helper function similar using preprocess template", "d": "6/2015"}, {"body": "thanks thinking educational greedy want exactly way grown appreciate vue complaints sat jun evan notifications githubcom wrote markhahn unfortunately realized mixin example would work properly data initialization process relies optionsprops initialize props happens created hook however think easier write small helper function similar using render preprocess template vuecomponent showlist props parseprops curshowidx allshows reply email directly view github", "d": "6/2015"}, {"body": "wow reactjslike looks pretty good prefer", "d": "6/2015"}, {"body": "interesting could give real world use looks cool ca nt think way using", "d": "6/2015"}, {"body": "looks good required prop provided", "d": "6/2015"}, {"body": "mostly intended shipping standalone reusable components props essentially api exposed component required prop provided type mismatches vue throw warning", "d": "6/2015"}, {"body": "thank evan think good addition current component system", "d": "6/2015"}, {"body": "shipped", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "closing repro inactive", "d": "6/2015"}, {"body": "option b makes sense think vast majority users rely classic mustache tags arguing custom tags akin spacesvstabs debate option b opinionated component remains compatible ecosystem opinionated app still use common third party components", "d": "6/2015"}, {"body": "change normal delimiters triple changes would turn triple general want avoid breaking changes stylistic preferences", "d": "6/2015"}, {"body": "like syntax escaped variables would opposed adding config option specify unescaped delimiters could still default triple mustache", "d": "6/2015"}, {"body": "sounds like good idea probably consider part", "d": "6/2015"}, {"body": "awesome thanks", "d": "6/2015"}, {"body": "please report bugs questions posted seems similar think discussed", "d": "6/2015"}, {"body": "markhahn sure helps always change delimiters something prefer eg", "d": "6/2015"}, {"body": "hmm think see pass dynamic props dynamic component syntax although different still needs mustaches think tags somewhat necessary attribute start since otherwise way tell databound plain string attribute", "d": "6/2015"}, {"body": "thanks tip replacing mustaches necessary attribute start v well another request mine wish vue components used v mon jun pm evan notifications githubcom wrote hmm think see vwith pass dynamic props prop something dynamic component syntax although different still needs mustaches think tags somewhat necessary attribute start v since otherwise way tell databound plain string attribute reply email directly view github", "d": "6/2015"}, {"body": "chosen something much less noisy", "d": "6/2015"}, {"body": "btw nt use mustaches problem including modules use", "d": "6/2015"}, {"body": "hmm interpolation config global might issues use thirdparty component template probably add componentlevel option delimiters", "d": "6/2015"}, {"body": "probably add componentlevel option delimiters would cool seems global one useless deprecated think modules important issue global like general globals suck mon jun pm evan notifications githubcom wrote hmm interpolation config global might issues use thirdparty component template probably add componentlevel option delimiters reply email directly view github", "d": "6/2015"}, {"body": "kinda unusual use case instead using write filter probably use watcher since vmodel locks writing model need use wait unlocks overwrite affect select vmodel", "d": "6/2015"}, {"body": "thanks lot help", "d": "6/2015"}, {"body": "tricky parse regex literals inside directives easily confused division operator think reasonable change making vuevalidator also accept string pattern validator", "d": "6/2015"}, {"body": "sounds like reasonable solution means regexp literals used inside directive expressions documented", "d": "6/2015"}, {"body": "yes rare use case since validation probably use case would happen cases possible use filter computed property avoid add note docs", "d": "6/2015"}, {"body": "sounds good thanks", "d": "6/2015"}, {"body": "closing resolved", "d": "6/2015"}, {"body": "\u4f60\u8fd9\u4e2a \u662f\u60f3\u5e72\u5565 \u4e0d\u662f\u8fd9\u4e48\u7528\u7684\u554a", "d": "6/2015"}, {"body": "sort \u518d\u7528 sort", "d": "6/2015"}, {"body": "\u5c31\u4f1a\u6539\u53d8 dom dom nodes jquery \u52a8\u753b\u5b8c\u6210\u7684\u65f6\u5019\u4fee\u6539\u6570\u7ec4\u987a\u5e8f", "d": "6/2015"}, {"body": "\u4f60\u8fd9\u4e2a\u4e0d\u5c5e\u4e8e", "d": "6/2015"}, {"body": "update initialize items array strange get errors though empty rows still output could access data", "d": "6/2015"}, {"body": "vue works converting data fields gettersetters nt initialize field want add later call mentioned model section guide", "d": "6/2015"}, {"body": "tried updating latest", "d": "6/2015"}, {"body": "yes updated comment unfortunately nt help still trying figure missing fiddle reproduce problem", "d": "6/2015"}, {"body": "okay think finally got reproduced steps reproduce click one number list repeatedly click first number second list second list grow length repeated elements three factors contributes problem outer component inner component uses inner component uses css transition new fix found implement function transition simple call", "d": "6/2015"}, {"body": "applied css animation using time vue running transition detects element css animation vue assumes want trigger transition based css animations listen animationend event determine transition ends however case leave animation leave transition never finishes providing explicit leave callback fixes problem think unexpected side effect new mixed cssjs transition mode maybe need allow js transition indicate knows pure javascript transition try detect css properties", "d": "6/2015"}, {"body": "added give transition things work properly", "d": "6/2015"}, {"body": "okay makes sense nt think css animations anything took little longer reproduce fast thanks updates think also nice either give warning simply require transitions present happens would nt first thing think searching", "d": "6/2015"}, {"body": "obvious reading updated transition docs yet", "d": "6/2015"}, {"body": "indeed recommended usage error fixed anyway btw expose prop use", "d": "6/2015"}, {"body": "see second section faq vuejs nt support custom gettersetters data objects however use computed properties instead", "d": "6/2015"}, {"body": "well completely rules vue im using breezejs get data server uses getters setters everything sun jun pm evan notifications githubcom wrote closed reply email directly view github", "d": "6/2015"}, {"body": "surprised client data management solution nt offer sort unwrap plain json functionality guess bad match", "d": "6/2015"}, {"body": "unwrapping objects plain javascript object would defeat purpose breezejs objects entities lots nice behavior built find getting breezejs entities working mvvm library choice keen writing one rather working app instead fighting tools shame getterssetters vue supposed chosen one", "d": "6/2015"}, {"body": "well possible vue wrap original property descriptor support objects gettersetters performance implications take account aware could become potential issue rare use case decided implement", "d": "6/2015"}, {"body": "\u5f00 issue \u975e bug \u95ee\u9898\u8bf7\u53d1\u5230", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "\u6211\u521a\u7528 cordova cordova android cordova \u770b\u770b\u5427", "d": "6/2015"}, {"body": "htc \u5199\u9053 \u6211\u521a\u7528 cordova cordova android reply email directly view github", "d": "6/2015"}, {"body": "\u5199\u9053 \u6211\u521a\u7528 cordova cordova android reply email directly view github", "d": "6/2015"}, {"body": "branch rely precisely used csp enforcing environments observation mechanism nothing moment supporting objectobserve really high priority chromechromium still environment supports requires pretty heavy changes made nt think spec reaches stage browsers start implement", "d": "6/2015"}, {"body": "hmm doc source markdown work", "d": "6/2015"}, {"body": "nt know nt studied contribution guidelines surely markdown would easier port html plain text use atom editor lets bring devdocs selection source selfishly asking one experienced area willing may take stab fri jun pm evan notifications githubcom wrote hmm doc source markdown work reply email directly view github", "d": "6/2015"}, {"body": "docset dash osx app asume easy apply devdocs experience devdocs", "d": "6/2015"}, {"body": "good idea guidelines documentation using scraper", "d": "6/2015"}, {"body": "demonstrate use case change necessary getting first glance", "d": "6/2015"}, {"body": "full context vueformidable built vue branch scenario without changes compile parent vm passes value child child computed property setter type casting sets default value issues watcher fire compilation value parent stays sync also component casting set watcher fire anyway props missing data initialized rather seems appropriate problem json schema primitive type", "d": "6/2015"}, {"body": "possible plugin work without proposed changes ran tests changes prop test cases failing agree initializing props would reasonable change though", "d": "6/2015"}, {"body": "yes work less straightforward ways using custom events maybe adding one level nesting data model initializing props would already help way", "d": "6/2015"}, {"body": "thanks props initialized think initial set order needs maintained behavior consistency past versions", "d": "6/2015"}, {"body": "make jsfiddle", "d": "6/2015"}, {"body": "self closing tag syntax xhtml need close properly templates", "d": "6/2015"}, {"body": "please post questions vuejsdiscussion thanks", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "\u9ebb\u70e6\u770b\u4e0b\u5f00 issue", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "\u4e0d\u8981\u518d\u50cf\u4e0a\u6b21\u90a3\u6837\u4e0a\u4f20\u6574\u4e2a\u4ee3\u7801\u4e86 jsfiddle", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "change component vue fires transition misunderstood", "d": "6/2015"}, {"body": "ah ended transition nt actually anything right works expected", "d": "6/2015"}, {"body": "using vue version refer routing section guide page vuerouter progress yet already work check issue reporting guidelines report appropriate issues repo", "d": "6/2015"}, {"body": "thanks exactly looking also support hashbang", "d": "6/2015"}, {"body": "sounds like useful improvement think possible requires changes current content resolution algorithm static probably look actually makes realize rewrite elementdirective would make transclusion logic much simpler", "d": "6/2015"}, {"body": "wow turns works", "d": "6/2015"}, {"body": "use inside hooks points instance animated yeah staggering tricky get right take look improved", "d": "6/2015"}, {"body": "list already elements add another one nt want delay transition ca nt use index need element index array newly added elements", "d": "6/2015"}, {"body": "nkovacs nt think task javascript managed achieve effect wanted writing confess ugly custom css selectors looks like tedious approach quite manageable preprocessor mostly even unwanted animate classes still perfect pressing soon", "d": "6/2015"}, {"body": "interesting thing items stuck leave applying exactly opacity css transition triggered item removed transition delay passed fix behavior giving small nonzero opacity eg", "d": "6/2015"}, {"body": "experiments branch simply add container looks like working alright possible add finergrained control maybe reverse order eg", "d": "6/2015"}, {"body": "looks pretty good exactly looking", "d": "6/2015"}, {"body": "awesome played around bit added animation reorder first emptying array repopulating nexttick perfect try pin elements place animation nt jump around also ran bug version nexttick hack click add items click empty finishes try adding items give time get uncaught typeerror read property removechild null", "d": "6/2015"}, {"body": "one suggestionwish hook control staggering eg speed slow element instead constant really important would nice", "d": "6/2015"}, {"body": "fixed jumping around giving leaving elements absolute position reorder animation looks good remove items broken assumes every element current one beforeleave going leave gives absolute position", "d": "6/2015"}, {"body": "alternative solution fixes remove items makes reorder empty look bad", "d": "6/2015"}, {"body": "ok managed get look way want think need hook runs stagger settimeout started give elements going removed absolute position animation starts hooks need run beforeleave hooks", "d": "6/2015"}, {"body": "made bunch improvements fiddle work without errors", "d": "6/2015"}, {"body": "define custom stagger amount providing hooks transition object", "d": "6/2015"}, {"body": "ship part", "d": "6/2015"}, {"body": "thanks", "d": "6/2015"}, {"body": "doc example indicates passed string retrieving value example fixed note filter syntax changed behave like expected original fiddle", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "good catch", "d": "6/2015"}, {"body": "general avoid binding like array primitive values use objects mutate object", "d": "6/2015"}, {"body": "ah see thanks taking time headsup works looking forward", "d": "6/2015"}, {"body": "\u5f00 issue \u7c7b\u4f3c\u95ee\u9898\u8bf7\u53d1\u5e03\u5230", "d": "6/2015"}, {"body": "vuenexttick", "d": "6/2015"}, {"body": "believe similar issue array objects data using populate list front end using use filter show certain records works great nt seem way access filtered records within javascript make calculations perform actions records total filter filterby show easy way get array data filtered records", "d": "6/2015"}, {"body": "using vref", "d": "6/2015"}, {"body": "wow exactly looking thank", "d": "6/2015"}, {"body": "closing original author nt provided explanation also nonbug moved vuejsdiscussion anyone wishes continue discussion", "d": "6/2015"}, {"body": "iscroll touchstart refresh \u5f53\u524d\u7684 iscroll ng reslove vueroute vueroute", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "closing since really marginally useful clear proper way access attribute value changes within directive code", "d": "6/2015"}, {"body": "objects supported via", "d": "6/2015"}, {"body": "cool thank much great work way help push project forward", "d": "6/2015"}, {"body": "moment helpful thing probably hanging gitter channel vuejsdiscussions help people also writing tutorials blog posts would great", "d": "6/2015"}, {"body": "implemented", "d": "6/2015"}, {"body": "jcoffland thinking making template syntax cleaner taking another look proposal think makes sense start feel actually fall category directives deserve better semantic syntax want support dom events vue component events gets bit tricky comes naming think clean well suited dom events means need use different syntax vue event handlers currently thinking would look like would trigger child emits event", "d": "6/2015"}, {"body": "proposed way looks good would impose restrictions event naming right use complex event names like namespaceeventname action submit etc possible guess though may good thing ps agree jcoffland something like would nice", "d": "6/2015"}, {"body": "agree cleaner current directives vs one disadvantages see conflict ca nt name prop like onclick example never named props like people may highlighting caveat guide would helpful though", "d": "6/2015"}, {"body": "like v prefixes simply says reader vue attributesyntax makes kind vue namespace", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "azamatsharapov pass data props prop name like nt make much sense internally throw warning people actually name props", "d": "6/2015"}, {"body": "yeah know everyone english speaker around globe warning would good yes", "d": "6/2015"}, {"body": "agree v prefix good", "d": "6/2015"}, {"body": "think vue events different dom events cleaner separation good vue similar dom event system would prefer another way like events looks new event directives looks good usable", "d": "6/2015"}, {"body": "prefer v prefix vue related attributesproperties", "d": "6/2015"}, {"body": "prefer prefix", "d": "6/2015"}, {"body": "prefix useful working team tell designer colleagues mess anything prefixed long also since everybody prefers prefix changing everything vue related html prefix example directive nt prefix", "d": "6/2015"}, {"body": "azamatsharapov depending docs directive params", "d": "6/2015"}, {"body": "since deprecated one component related directive", "d": "6/2015"}, {"body": "oevgeny thanks reminding directive param takes argument anyway saying changing everything vue related html prefix ask ok without prefix anyway sound weird prefix", "d": "6/2015"}, {"body": "azamatsharapov also said directive nt prefix sounds weird like also look", "d": "6/2015"}, {"body": "oevgeny meant directive items things earlier said everything vue related let argue nonnative english speakers also said depending docs probably meant according docs anything related languagegrammar terminology mistakes discussed", "d": "6/2015"}, {"body": "azamatsharapov want say others list directive params ok according docs reason nt prefixes hope english bad know agree mistakes sorry", "d": "6/2015"}, {"body": "looks like community prefers stick current syntax think worth giving better clearer name changed going move forward prefix", "d": "6/2015"}, {"body": "agree sticking prefix vuejs directives original feature request user already create component parameters namespace via issue asks ability create user defined callbacks similar manner perhaps using component option named", "d": "6/2015"}, {"body": "big fan functionality pretty much achieved using already come long way reducing api removing multiple ways thing abbreviation entirely clear unless already know used functionality would good candidate mixin really desired", "d": "6/2015"}, {"body": "jcoffland mentioned original proposal usage already simulated directly calling parent easy abstract mixin although like idea well mostly style preference seems others prefer directive style also youngsteveo mentioned like avoid vue official api multiple ways thing best left userland strongly prefer style", "d": "6/2015"}, {"body": "agree keeping api simple angular went wrong still bothered squirrelly nature event system vs direct callbacks mentioned return values supported thing nt like events run tree caught explicitly stopped component emits event nt use event runs willy nilly around component tree direct callbacks happen cases one receiver easy default case events multiple receivers default also need three different functions amp emit events first place could wire components together explicitly method callbacks code would readable simpler imho note work around call parent method works want map callback parent would also nice able map callbacks siblings using ref id example example defines callback user maps defines callback mapped method would also like able put expressions callbacks", "d": "6/2015"}, {"body": "aha realized wanted already works due internal compilation improvements", "d": "6/2015"}, {"body": "even works sibling calling idea", "d": "6/2015"}, {"body": "awesome looks like pretty much exactly looking documentation syntax", "d": "6/2015"}, {"body": "normal props paramattributes renamed props except pass methods methods autobound parent", "d": "6/2015"}, {"body": "got thanks tried passing methods beginning great allows asking adding extra option never really liked name anyway attempt conform existing scheme like better tried run fiddles nt work load although appears run browser console get expression run expression evaluated vuejs load time function call usage work return values eg like", "d": "6/2015"}, {"body": "call braces treated statement return value remove braces work", "d": "6/2015"}, {"body": "oh see mean parenthesis braces though", "d": "6/2015"}, {"body": "oops yes", "d": "6/2015"}, {"body": "dgerber use get count", "d": "6/2015"}, {"body": "masoodahm please post solution im trying load laravel pagination ajax get pagination instead actually works pagination huuge hehe", "d": "6/2015"}, {"body": "hi anything changed vue introduction business need use typescript application self made set small medium size independent decoupled components vue looks like natural choice lack ts support big blocker us rivetsjs looks like abandoned option neither however way bind js object jquery node object nice fact solves problem possible vue implement reasonable time amount behavior mean implementing way embedding custom object inside vuecomponent object anything like likely cause problems road anyway options far tell quick looking vue code concept goes quite deep ca nt see easy solution solutions indus sure understood correctly byt must say beginning big app rewrite feelings strong avoid hacking unusual use libraries really happy hack vue extend concept way anyway indus manage solve otherbetter way think possiblereasonable alter vue extend mechanism hard eventually would", "d": "6/2015"}, {"body": "slcodenine think would possible simulate using annotations similar angular declare options static property simply add decorator maybe even make look classy bit plumbing decorator sure feasible end vue subclass defined prototypally inheriting static object contains component options merge step happens decorator extracting options class declaration seems static properties obviously requires using typescript", "d": "6/2015"}, {"body": "one issue vuets end fighting internal nature vue vue elegant api use js objects cramming ts via classes ts language features may best choice using vue ts simply typing values directly using classmodules would love see deeper integration typescript something lost process unless done ground similar approach one key issue misalignment model definitions model instance use within vue makes ts compiler go stir crasy model properties created one place yet used runtime somewhere else mapping hard wrap typescript definition properties app specific something vue knowledge take example var demo new vue el demo data message hello vuejs demomessage hello vuets typescript see el data message part app model definition problem comes demomessage set typescript know came thus clearly error compiler perspective vuets solution class extend vue define properties class members thus instance api sync class definition sort favoring vue instance api generating vue constructor api suit works ideal pretty sure great solution would love see ts vue work closer together would happy help projects using vuets would love better solution ted", "d": "6/2015"}, {"body": "thinked gwt vue small project github repos test uses vue gwt generate application skeleton compile time ts requirement would nice solution java developers", "d": "6/2015"}, {"body": "never used gwt honestly idea needed make work vue", "d": "6/2015"}, {"body": "btw able write decorator talked albeit transpiled using babel decorator work ts familiar ts packagingbuild setups want try adapting ts welcome", "d": "6/2015"}, {"body": "seems going offtopic try explain better typescript java features mentioned gwt enables compile java source code javascript code furthermore gwt let reuse preexistent javascript code java code interested make fork contribute java version api vuegwt vuets would great", "d": "6/2015"}, {"body": "welcome find useful although probably wo nt able help much since nt use gwt java", "d": "6/2015"}, {"body": "slcodenine still using tsclass based approch works well couple projects made adoptions reflect newer versions ts eg union types vue eg newer version ts definition file found hack using tsclasses inherit vue would normal way block ts extend function extend manually vue even never problems would happy see first class support", "d": "6/2015"}, {"body": "indus sorry late response nt much time test options anyway thanks help helped lot overall decided go class decorator pattern looks less invasive rest ts code needs annotation managed make work ts mean solution created pr would cool confirm correct work road looks like working indeed end one knows vue better maybe see possible problems ready work make usable everyone basically business done basic transformations make typescriptish removed part introducing error basically sure necessary anyway ps would nt better provide write access everyone master branch one contribute small example style repo without need fork", "d": "6/2015"}, {"body": "slcodenine cool glad get working necessary make sure instance gets fresh copy initial data otherwise object shared among instances class class function called plain function otherwise would easier needs bit work deal maximum call stack issue likely handling circular references public write access sounds bit open fork pr pretty standard imo since long run may use official recommendation ts users", "d": "6/2015"}, {"body": "", "d": "6/2015"}, {"body": "started experimenting picking hints part branch got simple text binding far looks like html soon vue initialized overwrite serverside text clientside text could skipped making linking functions aware run first time would skip dom manipulation set watchers", "d": "6/2015"}, {"body": "nkovacs wow nice please keep updated wondering possible expose compilation hooks made optional plugin", "d": "6/2015"}, {"body": "vmodel seems work box tried implement vrepeat reusing elements generated server think works pretty ugly hack though edit fixed handling vrepeat initialization items rerendered vstart vend anchors correctly placed nt need render separate template last normal element", "d": "6/2015"}, {"body": "nkovacs looks great could combine serverside vuelike rendering would work completly perfect", "d": "6/2015"}, {"body": "nkovacs mean already able things like", "d": "6/2015"}, {"body": "opened issue fork todo list stuff already works box great", "d": "6/2015"}, {"body": "running issue trying build form based data one part model need bind input values another part model based data would happy entertain work arounds far watches ends model order make work think would work completely dynamic two way binding onetime evaluation mustache reactive expressions sort like dynamic literal evaluated directive update function powerful complex completely dynamic two way binding would solve problem well enough instance right fails", "d": "6/2015"}, {"body": "already work long initialized data properly provide fiddle working intended", "d": "6/2015"}, {"body": "think demonstrates", "d": "6/2015"}, {"body": "chance reopen happy open new issue", "d": "6/2015"}, {"body": "sorry annoying reason new versions nt pushed jsdelivr", "d": "6/2015"}, {"body": "greenify nt set auto updating use cdnjs though", "d": "6/2015"}, {"body": "darn really hoping find built way push copy whole object case breaks lot pointless repetition instead using jquery since already", "d": "6/2015"}, {"body": "internal equivalent although documented", "d": "6/2015"}, {"body": "awesome looking created stackoverflow q hopefully help others run includes fiddles show", "d": "6/2015"}, {"body": "think understand right updating data run asynchronously instance calling updates vm dataitems things asynchronously calling jquery check element right changing data might return one would expect dom nt updated yet take fiddle example question wait items propagate entirely running jquery realworld case faced loading select options calling call fits width select element prior dataitems loading select box stays really small another damn question see fiddle running jquery wait long enough fiddle nt case app guess app lot processing going dom nt updated tick", "d": "6/2015"}, {"body": "dutgriff see call right changed data dom updated callback", "d": "6/2015"}, {"body": "darn right mentioned previous comment tried nt work must something going app missing fiddle shows nexttick working example hmmm side note thank much dedication vuejs really killing man", "d": "6/2015"}, {"body": "deleted key object used dom reflect change html js vue data snippet data tenants id name john id name joe id name sarah id name mary somewhere code inside vm method delete vmtenants element kept unchanged although object modified", "d": "6/2015"}, {"body": "jbruni need use reason mentioned docs scroll red tip section", "d": "6/2015"}, {"body": "perfect thanks lot including amazing ultrafastspeed support", "d": "6/2015"}, {"body": "accroding also possible expose data prop passed value must object replace component default data raise error", "d": "6/2015"}, {"body": "kikyous believe bug please open separate issue reproduction", "d": "6/2015"}, {"body": "kikyous btw seems trying bind unobserved data prefixed wo nt work", "d": "6/2015"}, {"body": "recommended best practices section al properties model objects defined case huge object string array values set fields using direct assignment ajax success display view get console warnings saying error evaluating expressions code snippet view file line throws warning correct way need iterate response object set properties object one one using set", "d": "6/2015"}, {"body": "abhijitghogre actually safely ignore warning suppress expression evaluation warnings setting initialize data specifically although verbose benefits know shape ajax response looks like", "d": "6/2015"}, {"body": "thanks evan", "d": "6/2015"}, {"body": "evan used set image src change coverimagepath model image nt update workaround", "d": "6/2015"}, {"body": "work show code creates andor passes value sat jun abhijitghogre notifications githubcom wrote evan used set image src change coverimagepath model image nt update workaround reply email directly view github", "d": "6/2015"}, {"body": "coverimagepath get computed automatically college changes right college model changed ajax success declared data javascript data college", "d": "6/2015"}, {"body": "abhijitghogre looks like work open issue vuejsdiscussion make fiddle reproduction please", "d": "6/2015"}, {"body": "fiddle also created issue discussion repo", "d": "6/2015"}, {"body": "aristidesfl thanks repo thats first guess works fine forum slack group dunno filled info chatting minutes later evan didnt know gitter guess tell guys vueslack think dont know either since vue getting visibility laracasts think people kinda lost comunity think point gitter chat repodiscussion vuejs website session called comunity something thats always look thanks best regards", "d": "6/2015"}, {"body": "dominiquedutra actually guy created slack channel called users gitter channel gitter knows think knew making slack channel sure nt like gitter much users growing everyday gitter meant open source project hosted github even activity sidebar shows activity repo real time also look readme main repo see questions section telling use gitter month already laracasts maybe comment vuejs videos gitter channel already first lesson even vuejs videos", "d": "6/2015"}, {"body": "azamatsharapov thanks glad know place chat must admit really didnt even glance readme used cdn vuejs started coding still going trough docs", "d": "6/2015"}, {"body": "great looking project would consider ready production planning using large application framework evolve time need always maintain backward compatibility would consider api final release new versions would maintain backward compatibility deprecated features remove completely", "d": "6/2015"}, {"body": "fergaldoyle intended last point release yes think suitable production", "d": "6/2015"}, {"body": "hi newbiequestion related trying something similar troubles vcomponent element repeat like put registred subcomponent computed property sorry coffescript get error directive component nt resolve compiledirectives turns undefined vcomponent dirdef resolveasset options directives dirname vtext stuff inside works fine component optionsdirectives passed built stuff like text without underscore wrong thanks viktor", "d": "6/2015"}, {"body": "hi fiddle pointing quite old version vue vuejs version want using", "d": "6/2015"}, {"body": "nah code seems legit still", "d": "6/2015"}, {"body": "could come around current issue simply using filter compute property simple data object iterated think still need computed properties involved things future", "d": "6/2015"}, {"body": "hedefalk fiddle nt loading vue correctly also note using component treats content inside external content redistributed template need give component template options use attribute working", "d": "6/2015"}, {"body": "yes reworked using coffeescript", "d": "6/2015"}, {"body": "thanks guys exactly would wanted using inlinetemplate however real app still get vue warn failed resolve directive component trying put vcomponent element vrepeat guess something different nt understand guess need try isolate issue production code back", "d": "6/2015"}, {"body": "hedefalk using real app deprecated use custom element components", "d": "6/2015"}, {"body": "oh guess dependencies vue next", "d": "6/2015"}, {"body": "oh definitely sooo really nt want stay behind would achieve something like nt want break template mean use case simply iteration lot elements retrieved json backend use vrepeat everything fine done realize need one thing inner thing needs computed json data nt yet nt want rearrange templates would like able add computed attribute elements use inside vrepeat makes sense vcomponent removed need stuff around template vrepeated computed property needs actual element vrepeat case styleclass thanks patience", "d": "6/2015"}, {"body": "nt think understand problem fiddle using custom element component notice option component", "d": "6/2015"}, {"body": "thanks lot trying use approach production code nt seem work tried boil particular problem wild guess would something related use table custom elements nt know figured might jsfiddle first moved repeat table element giving template js problem remains even though used scripttag template custom element seems moved table thanks patience guess real wtf", "d": "6/2015"}, {"body": "hmm okay indeed due browsers allowing nontable elements inside tables use table elements something overlooked deprecating official release make still usable table elements", "d": "6/2015"}, {"body": "ah ok thanks investigating guess moving template script nt help since shadow dom thing going transformations applied template put dom browser already fixed template starting vuejs nt want get stuck old version rather follow development bleeding edge couple followups strongest reason choosing vuejs instance mithriljs react ones looked dumping angular fan kind templating coming background used liftscala done server side rendering using functional transforms pure correct documents mock data adding data attributes know times changing frontend people need js really liked way able work design person htmlcss git repo adding unobtrusive data attributes binding data guess bit interested rationale deprecating vcomponent expect future attributes attributes correct instance using vtext mustache bindings guess esthetic preference due background possible kind want sometimes large correct document mock data bind shit js without external templates thanks help", "d": "6/2015"}, {"body": "sorry bug much one last question need styleclass tr depends data repeated ca nt seem find way use vrepeat vcomponent vclass tr seems vclass evaluated outside vrepeatvcomponent scope", "d": "6/2015"}, {"body": "hedefalk", "d": "6/2015"}, {"body": "azamatsharapov sorry nt help looking way use element iterated set style class simply added text evaluating static value true thanks viktor", "d": "6/2015"}, {"body": "hedefalk quite forgiving terms custom tags attributes nt substantial downside using hand custom elements actually worked official spec going common future component props firstclass concept vue get dedicated syntax directives remain prefixed attributes scoping question see blog post", "d": "6/2015"}, {"body": "thanks read blog post ca nt seem understand use get want current example since inlinetemplate gives inner template subcomponent seems ca nt fix thing without resorting external templates correct thanks viktor", "d": "6/2015"}, {"body": "two options use component include root node component template recommended use block repeat", "d": "6/2015"}, {"body": "sorry thick brick makes original element replaced case adding loose altogether", "d": "6/2015"}, {"body": "avoid inline template case", "d": "6/2015"}, {"body": "yeah afraid actually trying really hard avoid find little better would rather able one template transform explained come idea superhappy thanks viktor", "d": "6/2015"}]