[{"title": "add missing onanimationstartonanimationend event handlers", "body": "react currently nt handle aforementioned events patch works webkit work needs done make work browsers support standard css tags", "num": "1196", "d": "2/2014"}, {"title": "renderintodocument working", "body": "hi guys jasmine backbone fault javascript describe cnotice function lol function consolelog notice present consolelog return constructor error invariant violation addcomponentasrefto reactowner refs usually means trying add ref component nt owner created inside another component render method try rendering component inside new toplevel component hold ref code problem javascript describe cnotice function var notice null beforeeach function notice reactcreateclass want import notice component external file thanks", "num": "1191", "d": "2/2014"}, {"title": "inconsistent calling setstate callback", "body": "passing callback unclear whether callback called synchronously asynchronously specifically seems callback executed synchronously react decides effect state changes unclear whether react effect state changes asynchronously synchronously makes hard reason callback called seems consistency even react effects state changes synchronously callback shoved event loop called asynchronously sake consistent api example case shows example callback passed setstate gets called synchronously state change effected synchronously look console numbers start getting logged clicked ok alert box example case shows example callback executed asynchronously state change effected asynchronously see comments fiddle", "num": "1187", "d": "2/2014"}, {"title": "reacttestutilssimulateclick work jsdom", "body": "testing react application nodejs mocha jsdom reacttestutilssimulateclick affect component sample app reproduce problem test", "num": "1185", "d": "2/2014"}, {"title": "special case arrays dom properties", "body": "often code uses heavy handed often times want add class style based option currently want looks something like bad sometimes well longer classnames multiply large number situation adds lot duplicate work developers want make better us talked different ideas want combination explicit much magic one idea magical prop could used pass surface looks great need bake knowledge certain props composite components string guaranteed component using prop way used dom settled least surprising line special casing react dom properties right booleans get handled specially planning ability special case arrays allows us would need individual properties apply handling every property example would basically need flatten join space style would need flatten merge objects diverge slightly current behavior stringifying allmost properties", "num": "1179", "d": "2/2014"}, {"title": "inputs slower update tags", "body": "compare one swapped input span notice second one twice fast update maybe optimize reactdominput bring line", "num": "1178", "d": "2/2014"}, {"title": "html characters parsed", "body": "hi possible react compiler turns html characters like inside react code literal characters compiled causing problems opened browser way fix", "num": "1177", "d": "2/2014"}, {"title": "jsx html entities without surrounding text produce bad js", "body": "html entities work interspersed plain text ex becomes space middle genuine nbsp often nonbreaking space used style background element without collapsing work react currently becomes parse", "num": "1176", "d": "2/2014"}, {"title": "react support svg opacity attributes", "body": "none svg attributes seem work", "num": "1171", "d": "2/2014"}, {"title": "mobilesafariclickeventplugin requires touch events initialized", "body": "event trigger node cursor pointer style example", "num": "1169", "d": "2/2014"}, {"title": "jsxtransformer error", "body": "jsxtransformerjs included script html produces error arrfoo function firefox jsx file transformed offline javascript produces error error invariant violation registercomponent target container dom element line line points back line contains arrfoo", "num": "1168", "d": "2/2014"}, {"title": "react escaping causing markupchecksum match", "body": "noticed lately app throwing following warning load running code debugger found difference generated markup inpage lot lines like following inbrowser generated markup includes prerendered page something misconfigured bug", "num": "1165", "d": "2/2014"}, {"title": "reactcomponentisvalidcomponent returns true component classes", "body": "last two assertions new test nt pass ducktyping check added sebmarkbage quite sure mind every object whose component class valid right js identify valid components correctly function var component reactcreateclass render function return expect reactcomponentisvalidcomponent toequal true expect reactcomponentisvalidcomponent toequal true expect reactcomponentisvalidcomponent null toequal false expect reactcomponentisvalidcomponent true toequal false expect reactcomponentisvalidcomponent toequal false expect reactcomponentisvalidcomponent string toequal false expect reactcomponentisvalidcomponent reactdomdiv toequal false fail expect reactcomponentisvalidcomponent component toequal false fail", "num": "1164", "d": "2/2014"}, {"title": "docs componentdidupdate etc says", "body": "componentspecs says several places prior dom node passed last argument using still access dom node calling thisgetdomnode pretty sure change made", "num": "1163", "d": "2/2014"}, {"title": "working jsx", "body": "react docs say valid html attributes accepted jsx let please make exception working ps found supposed way via value really convenient generate please let honor basic promises", "num": "1162", "d": "2/2014"}, {"title": "provide way handle browserautocompleted form values controlled components", "body": "controlled component form names user saved browser common usernamepassword fields browser sometimes render page values fields without firing onchange events user submits form component state reflect showing user experimenting appears data load tested logging thisrefsmyinputgetdomnode value", "num": "1159", "d": "2/2014"}, {"title": "download react devtools already installed", "body": "getting console already installed google chrome latest using stable included browserify shimmed aliased react react see use react tab chrome devtools", "num": "1158", "d": "2/2014"}, {"title": "remove todomvc examples", "body": "related todomvcs updated pass todomvc tests sync back wondering simpler put readme examples docs site point react todos todomvc repo", "num": "1154", "d": "2/2014"}, {"title": "extract html mutation setinnerhtml module consistent behavior", "body": "see", "num": "1153", "d": "2/2014"}, {"title": "trigger change events value input changed programmatically", "body": "bind event input using change value input programmatically change event fired example changing input result triggering done manually like", "num": "1152", "d": "2/2014"}, {"title": "reactrendercomponenttostring wo nt render nested image tag", "body": "see fiddle img tag nested one level fails render uncaught typeerror read property firstchild undefined self closing paragraph fine reproduce issue current master img tag special case way work around issue", "num": "1149", "d": "2/2014"}, {"title": "obscure domchildrenoperations error multiple updates", "body": "throws js jsx reactdom var x reactcreateclass getinitialstate function return render function thisstates return else thisstates return else return go function thissetstate thissetstate thissetstate thissetstate var reactcreateclass render function return var z reactcreateclass render function return componentwillupdate function xgo var xnode documentgetelementbyid x var ynode documentgetelementbyid var x reactrendercomponent xnode reactrendercomponent ynode reactrendercomponent ynode maybe simplified simplest repro could make thanks fforw sending repro case", "num": "1147", "d": "2/2014"}, {"title": "jsx tool weird things providesmodule", "body": "ca nt reproduce making files public instead publicjs repro making autofocusmixinjs", "num": "1145", "d": "2/2014"}, {"title": "polygon missing transform reactdom", "body": "blames", "num": "1144", "d": "2/2014"}, {"title": "getinitialstate called component lifecycle", "body": "reproduce simple code looks like post whole code wrong look pictures first one right panel state null second already populated", "num": "1142", "d": "2/2014"}, {"title": "svg changing classname nt work", "body": "still nt work workaround refs", "num": "1139", "d": "2/2014"}, {"title": "mixed callback mixins", "body": "think mixed callback mixins called moment applying mixin component component spec argument var sometrickerymixin mixin function spec redefine render dangerous things besides overriding callbacks used want implement custom policy methods wrap method callbefore callafter downside would make things little less straightforward mixin user perspective", "num": "1138", "d": "2/2014"}, {"title": "unique component identifier", "body": "reactasync reactmultiplayer need components unique identifiers case reactasync maintain mapping component state make serialisable send wire map components keys ca nt used case reactmultiplayer unique url per component instance currently libraries use added public api something", "num": "1137", "d": "2/2014"}, {"title": "remove usage docs examples", "body": "whitespace fix remove soon", "num": "1136", "d": "2/2014"}, {"title": "convert camelcasing data properties hyphens", "body": "background properties specialcased allow works naturally jsx looks great however breaks directly using reactdom api particularly transpilers instance coffeescript div reactdom div datafoo bar silently ignored hyphen required attributes picked custom property regex hypens allowed literal object property names requires ugly extra set quotes proposal camelcased custom properties convert every uppercase character hyphen followed character downcased wo nt conflict builtin properties since would ignored anyway nt introduce regressions makes custom properties behave like standard ones also reverse transformation jquery makes data attributes seems quite natural", "num": "1134", "d": "2/2014"}, {"title": "reactrendercomponenttostring executionenvironmentcanusedom", "body": "using test generated output forms library sharing set qunit tests firefox chrome nodejs using qqunit function always thrown errors used browser tests still worked seemed call callback throwing error custom assertion function using trying browser test suites complaining function synchronous error thrown get hold generated html run nodejs tests bombing navigator check chrome becuase qqunit fakes global using jsdom patch check navigator undefined get results running browser edited nodemodules version add process check tests run nodejs complains assertions boolean html attributes longer part generated markup biggie edited version test browsers using following errors thrown call errors html differences getting running nodejs tl dr react always using equivalent executing stops throwing errors", "num": "1129", "d": "2/2014"}, {"title": "add support schemaorg attributes itemscope itemtype itemprop", "body": "", "num": "1126", "d": "2/2014"}, {"title": "unable set audio tag attributes", "body": "limitation api tags see maybe react work around like normalize tags etc would like able something like pseudocode react pick attribute change take care invoking javascript interface attributes etc", "num": "1124", "d": "2/2014"}, {"title": "reactbootstrap builds move reactjs org", "body": "hi like separate builds source time move org looks like good place like repos like move source later date sad losing stars thanks", "num": "1123", "d": "2/2014"}, {"title": "document expose reactperf", "body": "think said wanted", "num": "1121", "d": "2/2014"}, {"title": "warning code shows min build", "body": "see search either change warning implementation warn strip build step b change callers check cpojer", "num": "1120", "d": "2/2014"}, {"title": "reacteventemitter error upgrade react", "body": "upgraded previously working app running app throws following error chrome nt get detailed stack trace though sorry app previously working without errors react also upgraded reacttouchlib dependency created fork reacttouchlib repo update react dependency case existing dependency react causing issue", "num": "1119", "d": "2/2014"}, {"title": "inaccurate warning value props set without onchange", "body": "create input component set without providing handler react log console provided prop form field without handler render readonly field field mutable use otherwise set either nt entirely accurate however example app rely event bubbling set single form component thereby saving sanity preventing add every single field lot app working", "num": "1118", "d": "2/2014"}, {"title": "support anchor tag attributes", "body": "react currently support anchor tag attributes know current status adoption attributes know chrome supports pretty sure firefox supports well could really care less thought mention completeness see also", "num": "1115", "d": "2/2014"}, {"title": "reacttools npm package broken", "body": "returns object method undefined", "num": "1114", "d": "2/2014"}, {"title": "strange cursor jump", "body": "situation nt modify value onchange working like charm modify value cursor jumping end prevent behaviour without control state cursor position update", "num": "1113", "d": "2/2014"}, {"title": "csstransitiongroup working safari", "body": "changed replaced reactaddonstransitiongroup reactaddonscsstransitiongroup transistions leave leaveactive longer work safari mac os x understand safari regarded bit old eg github react meant support browser transistions work fine safari chrome", "num": "1111", "d": "2/2014"}, {"title": "docs componentdidupdate get called initial render", "body": "documentation states lifecycle method nt get called initial render whereas opposite true rightly due opportunity capture dom state occasions think needs updating", "num": "1109", "d": "2/2014"}, {"title": "browserify r react takes almost seconds", "body": "react react think envify switched recast submitted patch envify uses jstransform instead recast brings us back delivers advantages recast version preserves code formatting think blocker", "num": "1108", "d": "2/2014"}, {"title": "changing node type breaks invariant", "body": "example var failingcomponent reactcreateclass getinitialstate function return selecting false handleaddclick function e thissetstate selecting true render function thisstateselecting cause invariant violation return reactdominput null else return reactdomdiv onclick thishandleaddclick press reactrendercomponent failingcomponent documentgetelementbyid example one tries click div error raised invariant violation reactmount two valid unequal nodes break pair instead tag well maybe tags well nt checked nt break tag others works flawlessly react nt work master", "num": "1107", "d": "2/2014"}, {"title": "handletoplevel throw removing event target", "body": "throws click text", "num": "1105", "d": "2/2014"}, {"title": "reactchildrenonlychild throws text child", "body": "text child string fails would make sense accept string frankly confused api", "num": "1104", "d": "2/2014"}, {"title": "document clonewithprops", "body": "", "num": "1103", "d": "2/2014"}, {"title": "consider backporting change", "body": "would help people using reactrails version node shipping rails buildpack laughably ancient", "num": "1101", "d": "2/2014"}, {"title": "bring descriptor warning", "body": "warning point great change end point right gist documentation documentation update fbme url launch", "num": "1098", "d": "2/2014"}, {"title": "make sure whitespace codemod correct", "body": "see syranide comment", "num": "1093", "d": "2/2014"}, {"title": "make consoletable work firefox perf", "body": "need petehunt cc joshduck going block nt think people using perf stuff fix asap", "num": "1091", "d": "2/2014"}, {"title": "sync vendored modules", "body": "", "num": "1090", "d": "2/2014"}, {"title": "tutorial revamp", "body": "would like include routing model objects integration jquery plugin sortable related", "num": "1089", "d": "2/2014"}, {"title": "error invalid operand object expected gt", "body": "hi getting following error click dom node nt mounted yet least think happening occurs clicking element multiple times transitions fixed issue updating getselection function selecteventpluginjs flipping test seems work wanted check adverse impact", "num": "1083", "d": "2/2014"}, {"title": "rendering strings newlines inconsistent rererender", "body": "rerender sometimes use innertext causes inconsistencies rendering whitespace see demo make sure nt happen", "num": "1080", "d": "2/2014"}, {"title": "componentdidmount run server render", "body": "fails might fixed nt tried related swannodetteom", "num": "1079", "d": "2/2014"}, {"title": "monkeypatch mathrandom new date datenow render dev", "body": "talking adam wolff today rxjs ton common bugs functions gon na bad time use react methods monkeypatched warn could prevent bugs jordwalke seemed like idea", "num": "1077", "d": "2/2014"}, {"title": "fix", "body": "since nt call gets hella confused", "num": "1074", "d": "2/2014"}, {"title": "fix transitions example use csstransitiongroup", "body": "let remember merging", "num": "1071", "d": "2/2014"}, {"title": "map undefined json object passed", "body": "reactjs library using underscorejs right see map function nt work json object data passed using map consists json schema excerpt would like use built map function rely external library wrong", "num": "1068", "d": "2/2014"}, {"title": "expose csstransitiongroup reactaddons", "body": "", "num": "1064", "d": "2/2014"}, {"title": "support lowercase vendor prefixes stylenames", "body": "tldr let allow stylenames recommend javascript keys start capital letter vendor prefixes presumably hyphenation trivial start single leading hyphen forces user put vendorspecific key nt even valid produces css nt really work probably need rework build awareness vendorspecific prefixes core react style building comes", "num": "1063", "d": "2/2014"}, {"title": "react ignores form attributes", "body": "passing react ignores enctype nt parse", "num": "1062", "d": "2/2014"}, {"title": "use merge withcontext means prototype values nt copied", "body": "written context class planned use turns implemented using copies properties understand desired places reason could nt merge properties clear example troublesome code", "num": "1061", "d": "2/2014"}, {"title": "reactemptycomponent nullcomponent", "body": "people varying hacks allow component render nothing add stopgap standard solution support components returning propose something like title maybe aka probably render one thing people another thing ideally something nt break flow", "num": "1058", "d": "2/2014"}, {"title": "add support iframe attributes seamless sandbox srcdoc", "body": "", "num": "1057", "d": "2/2014"}, {"title": "write docs statics", "body": "since descriptor warning references statics probably document releasing", "num": "1056", "d": "2/2014"}, {"title": "jstransform longer works", "body": "jsfransform sourcemap uses nt support shimsshams nt either", "num": "1053", "d": "2/2014"}, {"title": "react incorrectly identifies component root presence textnodes container", "body": "quoting andreypopp react incorrectly identifies component root presence textnodes container removed whitespaces tags template everything ok fixed react though see commit fix", "num": "1050", "d": "2/2014"}, {"title": "jsxcompilerhtml nt show livecompiled switcher", "body": "chenglou", "num": "1049", "d": "2/2014"}, {"title": "allow disable guard feature", "body": "see", "num": "1047", "d": "2/2014"}, {"title": "unmounting react node", "body": "trying unmount reactjs node handleclick function returns fired click element unmount rootnode tried well selector works unmounting documentation states like would use tests turns works elementsselectors somehow works selector element generated reactjs plain html returns soon try select different generated reactjs returns wo nt work either though essentially return thing also nt work simple way select node via without resort jquery selectors know somewhere", "num": "1044", "d": "2/2014"}, {"title": "error removing without", "body": "got template like got error debug session found happened parent node removed element child node table solution wrap think many people nt wright tag", "num": "1043", "d": "2/2014"}, {"title": "allow html conditional comments doctype", "body": "hacking fully server client compatible app using react one obstactle running seems react nt like exclamation marks jsxstyle code example pretty standard boilerplate html think getting stuck conditional comments example would prefer keep code html style render server without making major changes needs inside react class open trying hack together may take stab sometime coming week", "num": "1035", "d": "2/2014"}, {"title": "android simple form fails", "body": "created gist illustrating getting output adb console", "num": "1031", "d": "2/2014"}, {"title": "tags nt supported", "body": "tl dr nt work background make tags work one needs something along lines js function var header footer nav article section menu var lt documentcreateelement well create css rule running code behave sanely elements manipulating document nodes however nodes nt attached document decides sad work specifically detach nodes document whenever set reactcomponentbrowserenvironmentjs jquery gets around creating elements document fragment inserting document probably something similar", "num": "1030", "d": "2/2014"}, {"title": "behavior differs chrome manually removing component dom", "body": "recently came across following js jsx reactdom var countdownview reactcreateclass componentdidmount function thistimeout setinterval thisforceupdatebind function rerender documentbodyinnerhtml reactrendercomponent documentgetelementbyid container rerender live demo note manually removing component element dom using instead clicking timestamp thereafter cause js error findcomponentroot every second chrome firefox errors thrown addition would nice could give useful message instead clear completely render get somewhathelpful warning reactmount root element removed original container", "num": "1029", "d": "2/2014"}, {"title": "error message passing string instead function handler could clear", "body": "accidentally wrote code react responded technically correct somewhat vague error message undefinedhandlechange string function clear", "num": "1028", "d": "2/2014"}, {"title": "sending state current component parameter another external method possible", "body": "", "num": "1025", "d": "2/2014"}, {"title": "update latest esprima jstransform", "body": "need pick latest changes fix parse errors", "num": "1024", "d": "2/2014"}, {"title": "remove warnings old react module", "body": "", "num": "1023", "d": "2/2014"}, {"title": "todo list application react home page working", "body": "sure best place report application todo example react homepage seems bug adding new item fact adds two one created empty jsfiddle works fine nt know whether conflict something else page setup details", "num": "1020", "d": "2/2014"}, {"title": "error raised disabling input element focus", "body": "sure qualifies bug feature request let decide steps reproduce load url jsfiddle nt play well host open developer tools click submit button call handler sets disabled property submit button notice error console worked around application calling documentbodyfocus disabling button active focus would nice react input component could detect focus remove disabling", "num": "1015", "d": "2/2014"}, {"title": "shouldcomponentreceiveprops something", "body": "talked spicyj chat back agreed something like whether component simulate would sometimes great means resolving confusion two components type completely different data would normally considered say zpao briefly mentioned one could wrap component provide really quite hack two components would intricately bound methods put outer outer possibly reading state inner also quite tedious background opinion solution reconciling reordered children synonymous identity component could index array objects thus replaced array component would update rather remount identical even though also something decided handled component opposed parent speaking zpao seemed agree could nt see much use believe definite usecases like array primarily thirdparty integration reusable components alternatives could simulated using mixin simply invokes full chain methods component dom inputs would incorrectly remain unless also assign identity root node component could also still dirty feel issue addressed properly react minor change believe although intersects significantly refactoring may advisable naming probably shitty name feel like remain true meaning thus form really rather kill", "num": "1014", "d": "2/2014"}, {"title": "update docs supported properties", "body": "let hold sure cut release least going add couple entirely possible add", "num": "1008", "d": "2/2014"}, {"body": "called items added existing transitiongroup see think accomplish want ideas documenting better way runtime warnings new features nt fit use case please reopen thanks", "d": "2/2014"}, {"body": "oh right missed existing part sorry", "d": "2/2014"}, {"body": "take look currently listening right events", "d": "2/2014"}, {"body": "yah seen file clear suggesting use strategy handle multiple browsers use component directly", "d": "2/2014"}, {"body": "comment long time ago might still relevant nt reading dom order reconcile kind point reconciling able detect changes without resort touching dom sure possible types things want without resorting dom touching", "d": "2/2014"}, {"body": "definitely happening seems like asking question rather actual issue quick testing side shows issues issue would great could provide code reproduces error", "d": "2/2014"}, {"body": "well using gulpreact uses reacttools example result transformation get", "d": "2/2014"}, {"body": "ah yes react actually render straight html htmlentities strings issue somehow curious", "d": "2/2014"}, {"body": "yes issue browser somehow set encoding iso believe forcing encoding solve issue thanks", "d": "2/2014"}, {"body": "onionsoup ah also worth knowing unable use document charset ps correct also unless using xhtml technically using selfclosing slash", "d": "2/2014"}, {"body": "believe works correctly confirm also try", "d": "2/2014"}, {"body": "indeed right using browser copy gulpreact stale sorry ben", "d": "2/2014"}, {"body": "problem glad figured", "d": "2/2014"}, {"body": "reference even react codebase assuming weird ios bug react might able work around though", "d": "2/2014"}, {"body": "guess issue around quite interesting timing ran thing different context morning see bunch workarounds add empty handlers page loads address nt seem like react problem fix either add cursor pointer empty event handlers causes issue", "d": "2/2014"}, {"body": "mattkunze try fix things fixed would nt surprise temporarily add clickhandler touch solve like", "d": "2/2014"}, {"body": "yes fix exact problem sounds like perhaps working", "d": "2/2014"}, {"body": "plugin registered automatically something enable confirm original jsfiddle posted nt working ios", "d": "2/2014"}, {"body": "digging repository found event plugin seems related similar bug problem seems little wider chrome ios also affected mobile webkit issue", "d": "2/2014"}, {"body": "adding component workaround seems like plugin working moment", "d": "2/2014"}, {"body": "exception wrapped trycatch block exception nt bubbling causing trouble please file issue browserify buffer module code comes", "d": "2/2014"}, {"body": "fwiw works fine firefox", "d": "2/2014"}, {"body": "react nt actually look instead compares checksum servergenerated markup computed sent browser clientgenerated markup could try running server client compare outputs make sure passing props cases render function looks props state date mathrandom etc", "d": "2/2014"}, {"body": "thanks quick response give shot escaping manner must data mismatch somewhere run work follow close issue back thanks feb ben alpert notifications githubcom wrote react nt actually look outerhtml instead compares checksum servergenerated markup computed sent browser clientgenerated markup could try running reactrendercomponenttostring server client compare outputs make sure passing props cases render function looks props state date mathrandom etc reply email directly view github", "d": "2/2014"}, {"body": "escaping part used constructing html part list chars escape however done client server nt issue seeing react recently released running different version serverclient", "d": "2/2014"}, {"body": "syranide thanks narrowed differences whitespace handling realized updated versions libs yet updated resulted mismatch whitespace files imported node built browserify updating fixed issue thanks help guys hope anyone else comes across issue show google search", "d": "2/2014"}, {"body": "intermediate step currently duck typing flawed regardless descriptors probably get inheritance chain instanceof reactdescriptor works safer check descriptors pass could probably check props expected component classes fail test therefore also renamed feb ben alpert notifications githubcom wrote last two assertions new test nt pass ducktyping check added sebmarkbage quite sure mind every object whose type component class valid right identify valid components correctly function var component reactcreateclass render function return expect reactcomponentisvalidcomponent toequal true expect reactcomponentisvalidcomponent toequal true expect reactcomponentisvalidcomponent null toequal false expect reactcomponentisvalidcomponent true toequal false expect reactcomponentisvalidcomponent toequal false expect reactcomponentisvalidcomponent string toequal false expect reactcomponentisvalidcomponent reactdomdiv toequal false fail expect reactcomponentisvalidcomponent component toequal false fail reply email directly view github", "d": "2/2014"}, {"body": "right current code returns true passed component class wrong", "d": "2/2014"}, {"body": "right add unit test curiosity find feb pm ben alpert notifications githubcom wrote right current code isvalidcomponent returns true passed component class wrong reply email directly view github", "d": "2/2014"}, {"body": "adding warning passing component class rendercomponent stack overflow question", "d": "2/2014"}, {"body": "brigand thanks", "d": "2/2014"}, {"body": "flockonus problem nt make sense react options would uncontrolled controlled time generally act way would expect react naming convention would make controlled thus unable change options option would uncontrolled adding possible nt even see point sure could represent uncontrolled terms naming would quite misleading right better way point leading people inconvenient path react nt aim copy html deviate makes sense like alternative kind broken assume", "d": "2/2014"}, {"body": "way html work nt pretty nice helper react expectation noob user react nt remove valid attribute html deny apply case nt specify nt work like fine see number people frustrated", "d": "2/2014"}, {"body": "flockonus using development unminified version react seen warning console specifically", "d": "2/2014"}, {"body": "spicyj sounds like upgraded error reason would ever want ignore perhaps leaves react unstable state", "d": "2/2014"}, {"body": "want many things warnings possible compile prod", "d": "2/2014"}, {"body": "petehunt ah makes sense thanks", "d": "2/2014"}, {"body": "seems discuss bit", "d": "2/2014"}, {"body": "unfortunately nt hide error even devtools installed right see", "d": "2/2014"}, {"body": "let replace readme", "d": "2/2014"}, {"body": "correct mirrors events fired outside react expected value changes trigger event good way make infinite loop want call change handler manually mentioned", "d": "2/2014"}, {"body": "looks like forgot save fiddle", "d": "2/2014"}, {"body": "whoops bad", "d": "2/2014"}, {"body": "eelkeh believe fixed earlier today check build using also use builds easier", "d": "2/2014"}, {"body": "right build behind seems fixed thanks", "d": "2/2014"}, {"body": "wow really bug narrowed little still rediculously complex big props fforw repro anyway glancing code experience safely assume issue receives multiple updates node intuitively nt make sense since always calls done basically recursive however taking another peek code pretty sure issue case makes invalid assumption updates belongs root case component updates another root everything done updates root root always greater practice means whenever updates another root dom updates root batched one opposed batching component updates violation assumptions also inefficient intuitively seems happen component updates within call sure exactly solved practice sure right sure happening repro ingredients", "d": "2/2014"}, {"body": "speaking bit spicyj chat feel like issue called within become asynchronous opposed synchronous usually leads issue also possibly lot subtle issues", "d": "2/2014"}, {"body": "apparently blame", "d": "2/2014"}, {"body": "narrowed even apparently breaks immediately first error nt show later unless prodded still nt feel enlightened issue though", "d": "2/2014"}, {"body": "syranide latest two jsbins amp throw different error x one removes z x throws render wo nt refs render thisrefs undefined react docs warn never access refs inside component render method component render method even running anywhere call stack nt know relevant", "d": "2/2014"}, {"body": "plievone yeah different error sure cause issue span actually ever rendered old repro nt actually turn error later", "d": "2/2014"}, {"body": "syranide ok perhaps reduced test case see console called twice row first time span dom even though rendered already one culprit behavior may effectively calling setstate sibling component setstate would allowed component triggered via componentwillupdate", "d": "2/2014"}, {"body": "plievone huh end rendered test case error", "d": "2/2014"}, {"body": "syranide nt want throw error see componentdidupdate called double point first span one would try access refgetdomnode would throw see console flow", "d": "2/2014"}, {"body": "plievone defined error regardless react expects node nt throws error even still nt physically dom something wrong unless missing something", "d": "2/2014"}, {"body": "syranide yes definitely problem said sorry clear wanted reduce refs forceupdates may bring problems one could throw error componentdidupdate clarity innerhtml definitely empty interesting called right away span", "d": "2/2014"}, {"body": "benjamn sounds like commoner trying many things", "d": "2/2014"}, {"body": "commoner happy scale back advise wrapping components amd ca nt think anything outside playbook", "d": "2/2014"}, {"body": "michaeljarosik sorry zpao meant library executable uses", "d": "2/2014"}, {"body": "ahh thanks clarifying probably accurate way read relatively speaking least btw thanks answering recent questions stack helped ton first react app", "d": "2/2014"}, {"body": "content question stack overflow since possibly bug flagged question removal trying precompile react jsx files nonminified file subdirectory compiles react source becomes along renamed source moved parent directory happens use nonminified version react compiled file minified using nonminified source debugging similar problem version instead named autofocusmixin resulting file named also parent directory solution manually copy nonminified source correct location anyone come better solution see wrong assume offending code react source see unclear purpose confirmed file using react core without addons var autofocusmixin componentdidmount function thispropsautofocus thisgetdomnode focus moduleexports autofocusmixin", "d": "2/2014"}, {"body": "file unminified probably contains directives confusing commoner michaeljarosik problem persist remove file", "d": "2/2014"}, {"body": "michaeljarosik regarding reason autofocus mixin gt nt support attribute polyfilled used react form elements", "d": "2/2014"}, {"body": "benjamn problem persist removed file needs copied manually since source file present transfercompile", "d": "2/2014"}, {"body": "benjamn stuff default commoner primary purpose long time ago reconsider use executable", "d": "2/2014"}, {"body": "seems l incorrectly storing reusing virtual components call least create component instance creates virtual component react may choose promote virtual component component instance reusing object allowed reuse virtual component ie render multiple times even different executions nt looked deeply ca nt really tell going seems like going wrong", "d": "2/2014"}, {"body": "yes component rendered added first time replaced added messed stuff maybe reactjs nt allow thanks time", "d": "2/2014"}, {"body": "allowed right check enforce yes", "d": "2/2014"}, {"body": "sure falls class things start warning aware problems reuse pattern led moving towards solution cc sebmarkbage closing though since currently user error even done bad job communicating sorry", "d": "2/2014"}, {"body": "problem thanks support time thu feb pm paul shannessy notifications githubcomwrote closed reply email directly view github melhores cumprimentos webdesignportocom", "d": "2/2014"}, {"body": "firefox bug also makes error crash things hard find reduced case bug hack fix", "d": "2/2014"}, {"body": "thanks report tracking", "d": "2/2014"}, {"body": "magically overriding seems like bad idea seems like would better mixin explicitly state implements method instead implement also assuming would nt fly come around", "d": "2/2014"}, {"body": "another use case implement custom overriding policies methods like", "d": "2/2014"}, {"body": "redundant even enough however unique id implementation detail afaik likely removed future ifwhen ever let go innerhtml also possible concatenated id wo nt available soon node hold relative id possibly monotonic unique id innerhtml implementation detail also unique single point time unique time unsure ca nt solved example via mixin creates unique id component incrementing global counter", "d": "2/2014"}, {"body": "syranide shared multiple composite components correct seems like something fragile cases need unique id one client nt need consistent across clients make autoincrementing counter cases want ids consistent across clients nt think rely rendering components different order server rendering different servers cause node ids different need think really want force person using mixin specify unique key", "d": "2/2014"}, {"body": "spicyj must unique point time describes hiearchy indices keys component removed likely immediately assumed another component taking place anyway andreypopp messages chat seemed like mixin approach good solution", "d": "2/2014"}, {"body": "syranide mean two composite components nested dom node share rootnodeid", "d": "2/2014"}, {"body": "spicyj ah right right emphasis excellent point unique dom loosely speaking", "d": "2/2014"}, {"body": "see also", "d": "2/2014"}, {"body": "sgrove definitely something react attributesproperties listed time getting result could submit pr however must warn tags barely practically functional react today ancestors siblings reordered audio likely pause pending pr landing", "d": "2/2014"}, {"body": "great happy send pr later week thanks syranide appreciate speedy response", "d": "2/2014"}, {"body": "nt know bugfree yet", "d": "2/2014"}, {"body": "let hold", "d": "2/2014"}, {"body": "think functions warnings nt actually executed least avoid including warning message", "d": "2/2014"}, {"body": "think make look identical thing", "d": "2/2014"}, {"body": "think fix use case perhaps also make code work dependencies listed probably event plugins dependencies maybe best leave required asis", "d": "2/2014"}, {"body": "thanks fixes issue", "d": "2/2014"}, {"body": "darthapo twoway binding may something want use instead even implement one provided addon nt ideal case ps also helpful warning quite ocd annoying ca nt turned though", "d": "2/2014"}, {"body": "related note wondering making custom control needs properly support event bubbling good reason use actual input element propagate target maybe", "d": "2/2014"}, {"body": "beers", "d": "2/2014"}, {"body": "replaced see", "d": "2/2014"}, {"body": "aetet generic version problem unsolvable without directly accounting cursor updating cursor cases solvable without additional hurdles jump implemented versions nt npmed yet specific case restoring cursor updating value enough supply function gettingsetting selection one react exposed", "d": "2/2014"}, {"body": "syranide thanks nt find enough crossbrowser setcursor solution nt work chrome android another usecase filtered input work direction", "d": "2/2014"}, {"body": "aetet check react implementation uses internally interested preventing input forcing certain text case work", "d": "2/2014"}, {"body": "update going block", "d": "2/2014"}, {"body": "works original poster shims", "d": "2/2014"}, {"body": "seems true", "d": "2/2014"}, {"body": "pretty sure nt try", "d": "2/2014"}, {"body": "joecritch updating state chance possibly parent updating props tested quickly correctly getting called barring bugs everything", "d": "2/2014"}, {"body": "ca nt repro closing feel free reopen repro", "d": "2/2014"}, {"body": "command running directory trouble reproducing slowdown", "d": "2/2014"}, {"body": "chime say something definitely funky also breaks even wrapped one divs specific root although bad never go higher least", "d": "2/2014"}, {"body": "cc zpao seems like showstopper", "d": "2/2014"}, {"body": "exactly", "d": "2/2014"}, {"body": "plievone seems weird try worked oh well yeah probably root cause", "d": "2/2014"}, {"body": "syranide without keys may reuse instance id something cases unmounting event target thus erroring guess", "d": "2/2014"}, {"body": "plievone think tried think anyway whole issue seems magically weird", "d": "2/2014"}, {"body": "syranide problem occurs well", "d": "2/2014"}, {"body": "yeah definitely launch blocker", "d": "2/2014"}, {"body": "dupe breaks input reactmount node cache nt get populated render span without ever calling getdomnode", "d": "2/2014"}, {"body": "nt understand use case like either making public point may mistake", "d": "2/2014"}, {"body": "petehunt nt think enough docs write wink want somebody else want grab", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "nt two kind contradictory children prop break try render multiple times", "d": "2/2014"}, {"body": "eh going leave gist look official site hurry actually want whole section site dedicated warnings put even warning going live", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "inspired consoleshim", "d": "2/2014"}, {"body": "fixed still trouble master let know", "d": "2/2014"}, {"body": "hi spicyj yes still issue using master code show nt cause issue thanks", "d": "2/2014"}, {"body": "guard immediately precedes call debugger see", "d": "2/2014"}, {"body": "sorry spicyj thought using master mistaken get master test thanks", "d": "2/2014"}, {"body": "yep fixes thanks", "d": "2/2014"}, {"body": "switched use broke contenteditable stuff internal fb zpao knows", "d": "2/2014"}, {"body": "switching back regardless innertext issue browsers nt textcontent suffer", "d": "2/2014"}, {"body": "looks like brought", "d": "2/2014"}, {"body": "right also right thing", "d": "2/2014"}, {"body": "jquery empties adds text node relevant commits", "d": "2/2014"}, {"body": "okay interesting", "d": "2/2014"}, {"body": "jbonta patch almost ready", "d": "2/2014"}, {"body": "spicyj curious simpler solution newline problem works innerhtml", "d": "2/2014"}, {"body": "hmm interesting definitely want preserve whitespace though", "d": "2/2014"}, {"body": "also clarification plea", "d": "2/2014"}, {"body": "even sure run componentwillmount", "d": "2/2014"}, {"body": "changed new problem", "d": "2/2014"}, {"body": "new problem", "d": "2/2014"}, {"body": "clarify wrongly trigger browser server without dom see rendercomponenttostring mountcomponent gettransactionwrappers native components define may error stringified browser work correctly rendered server side", "d": "2/2014"}, {"body": "internal diff fixes", "d": "2/2014"}, {"body": "give example bug", "d": "2/2014"}, {"body": "respectfully say meh generally nt agree overriding builtins would love hear bugs encountered", "d": "2/2014"}, {"body": "anytime call anything render uses may break server rendering make interactions behave strangely bug instagram read rng clock reactive system since code may rerun time", "d": "2/2014"}, {"body": "petehunt would deal information relative current time ie blog post x hours old person x years days old message received x seconds ago", "d": "2/2014"}, {"body": "agreed think far common guys want least tip entry lol", "d": "2/2014"}, {"body": "actually sure made separate going comment pr", "d": "2/2014"}, {"body": "objects nt function iterate object like", "d": "2/2014"}, {"body": "would help react map function converted way underscore way nt convert nested elements", "d": "2/2014"}, {"body": "react nt provide map function part javascript standard provided browser", "d": "2/2014"}, {"body": "ah okay thought may case would useful though thanks info", "d": "2/2014"}, {"body": "wait silly", "d": "2/2014"}, {"body": "would nice rather auto prefixing css hacks guys provide consistent dom vm consistent css rules would awesome", "d": "2/2014"}, {"body": "work see list supported attributes", "d": "2/2014"}, {"body": "oh capitalize type though little annoying", "d": "2/2014"}, {"body": "like contexts explicitly designed used plain js objects get merged contexttypes childcontexttypes similarly expected plain objects inclined wontfix leave others used contexts course use whatever objects want values within context object also note api contexts experimental may change time", "d": "2/2014"}, {"body": "moves use hasownproperty see perhaps separate set merge functions could used would look enumerable properties could even pooled variants heavy use", "d": "2/2014"}, {"body": "might want invariant children", "d": "2/2014"}, {"body": "ok solution return work renders something like way always return node even guys think", "d": "2/2014"}, {"body": "chenglou little weird api would like becomes reality sounds good", "d": "2/2014"}, {"body": "actually see master srcdoc nt", "d": "2/2014"}, {"body": "want add going cut soon like whenever happens time also backportable one", "d": "2/2014"}, {"body": "beat thanks", "d": "2/2014"}, {"body": "thechriswalker sorry nt sure planning", "d": "2/2014"}, {"body": "oops fix", "d": "2/2014"}, {"body": "would nice sure without changing code nt care much makes testing bit convenient maybe disable sourcemaps defineproperty nt exist", "d": "2/2014"}, {"body": "yeah disable source maps browsers cause problems think valuable modern browsers keep possible", "d": "2/2014"}, {"body": "blocklevel elements obvious could ignore whitespace text nodes without much problem inline element though spacing could change appearance tempted warn still require", "d": "2/2014"}, {"body": "cc petehunt", "d": "2/2014"}, {"body": "need change use", "d": "2/2014"}, {"body": "related", "d": "2/2014"}, {"body": "ah yes closing one", "d": "2/2014"}, {"body": "see", "d": "2/2014"}, {"body": "thing thought reacterrorutils", "d": "2/2014"}, {"body": "guard function know one linked question", "d": "2/2014"}, {"body": "seems like misunderstood works first internal identifier used asks dom element giving string nt anything second docs stated pass container node mounted react component container really simple nt play either reselect element keep reference", "d": "2/2014"}, {"body": "really root container rather trying remove manually simply modify owner component render method render node anymore", "d": "2/2014"}, {"body": "ok target selects clicked element wont remove however works put reference element rendering reusing initial variable stored element used also returns false consoles one selected vm", "d": "2/2014"}, {"body": "gives dom node component like said need call unmount wrapper element component aside like plievone said generally nt unmounting stuff way example might better suited situation jsx reactdom var app reactcreateclass getinitialstate function return displaymessage true handleclick function thissetstate displaymessage false render function var message thisstatedisplaymessage message hi return reactrendercomponent whateverwrapper use sparingly react way render whatever based component props state render arbitrary modify since everything harder track otherwise", "d": "2/2014"}, {"body": "ok might better solution situation however still curious selector work necessarily remove reference dom object note different selectors might point different elements far know type last example would hide reference whole div instead message", "d": "2/2014"}, {"body": "make parent hide instead trying hide gives dom object", "d": "2/2014"}, {"body": "specifically important maintainability able component hierarchy clearly define visible screen parent component displays confusing remove dom looking parent render method expect exist hand amp amp clearly see included presumably also see change certain cases parent might want show confirmation box reason honoring child request gassorr make sense", "d": "2/2014"}, {"body": "currently react requires tbody work properly found pull request open warn common error", "d": "2/2014"}, {"body": "awesome", "d": "2/2014"}, {"body": "checking seem break doctype well", "d": "2/2014"}, {"body": "jsx html want look html jsx compiler wo nt able generate doctypes conditional comments react technically impossible design want functionality like might consider creating script addon htmljsx generate javascript jsx equivalent", "d": "2/2014"}, {"body": "true sucks people want fullpage server rendering think claim support fullpage server rendering least support doctype", "d": "2/2014"}, {"body": "see good reason leaving portions html spec ended adding branch reactappmiddleware changes allow pulling static html template initially rendering components results see example used repo see serverjs", "d": "2/2014"}, {"body": "petehunt agree also think really practical render full pages inside react", "d": "2/2014"}, {"body": "think good reason react used many client side library therefore kept light possible perhaps could extension made implements rest spec could mixed server side client nt need render stuff like doctype server", "d": "2/2014"}, {"body": "guess could use reactdominjection modify jsx transform read", "d": "2/2014"}, {"body": "natew deal void tags like right selfclose embedding would use tool like htmljsx transform html syntax jsx transformer understands", "d": "2/2014"}, {"body": "images working like problems played html jsx transformer thats react site currently nt needed yet personally document outlines supported tags nt checked also nt gotten deep things yet edit selfclosing yea always felt accustomed using anyway", "d": "2/2014"}, {"body": "second thought think may missed point adding something like would useful would little impact react code could probably done conditional comments inserting conditional comments using innerhtml might work sure updating work though nt think document issues seen htmljsx transformer strips tags strips tags tag content nt transformed namespaced attributes nt work issues css styles attribute casesensitivity another github issue since uses browser dom use jsdom nt use browser tags supported browsers work worked pretty well htmljsx transformer things like turn class classname style strings objects turn void tags selfclosing tags creating tools transform userprovided htmldata asis components make use", "d": "2/2014"}, {"body": "would like see jsx support html conditional comments things jhiswin described going implement jsx preprendering tool found could nt even write html comments doctype", "d": "2/2014"}, {"body": "sure html comments deal breaking use case conditional comments solution problems doctype prepended web server request handler static build system", "d": "2/2014"}, {"body": "prepending doctype easy conditional comments harder easiest way conditionally load ie shims short option write bunch js preshims browser detection fiddle webserver config may always access users still market difficult elevate html comments status js comments esprima fork", "d": "2/2014"}, {"body": "jeffmo", "d": "2/2014"}, {"body": "wyuenho another take could preprocessor like htmljsxlib turn x something like conditionalcomment add reactdomx view need preprocessor deal differences html jsx anyways", "d": "2/2014"}, {"body": "jhiswin better yet preprocess jsx hack work make sure spit right string called extra setup hassle tho also denies claim react designed easily rendered server", "d": "2/2014"}, {"body": "still think best jsx support many constructs possible fewer surprises", "d": "2/2014"}, {"body": "btw rendering server nt necessarily mean need able render full pages especially since browser support updating sketchy gone back forth whether want actually support reason could probably get comments core little work mostly cloning reacttextcomponent work comments figuring look id sure jsx transform sure prioritize relative things especially since worked around think pr would definitely considered", "d": "2/2014"}, {"body": "look weekend release schedule", "d": "2/2014"}, {"body": "sometime tuesday friday", "d": "2/2014"}, {"body": "rush", "d": "2/2014"}, {"body": "comments interesting typical setup number row without closing tag sure syntax tricks build root level component opening tags conditionals", "d": "2/2014"}, {"body": "headsup bunch bugs comments particular think get merged get lost iirc nt problem serverrendering may mess clientside etc", "d": "2/2014"}, {"body": "make sure using polyfills described", "d": "2/2014"}, {"body": "spicyj thanks tip however nt seem make difference updated gist", "d": "2/2014"}, {"body": "possible jsxtransformer nt work old android react version work better", "d": "2/2014"}, {"body": "spicyj something going gist get idea play tomorrow helpful thanks", "d": "2/2014"}, {"body": "fwiw would strongly suggest precompiling jsx js sending browser", "d": "2/2014"}, {"body": "spicyj bug new adding document fragments come slight cost probably significant context", "d": "2/2014"}, {"body": "fixed cc jnetterf", "d": "2/2014"}, {"body": "seems ie example clears dom nodes whole subtree zero also null old component instance still attached child container element replace whole tree innerhtml call dom elements including rootnode detached wo nt anymore detached old container dom node usual browsers traversal root node impossible causes return false used processing old component dom node old container elements detached behavior starts differ error happens browsers perhaps old component instance runs happily detached container dom element without knowing problem might something one could get better view problem enable helpful warning", "d": "2/2014"}, {"body": "curious called many times query dom", "d": "2/2014"}, {"body": "yeah queries dom time", "d": "2/2014"}, {"body": "sure technically acceptable use case child might actually want misleadingly named string display text nothing event coincidentally called detect put though", "d": "2/2014"}, {"body": "well certainly complain dom events dom elements get similar error tags", "d": "2/2014"}, {"body": "send state one component another method parameter like onclick thispropshandle thisstate", "d": "2/2014"}, {"body": "let try keep github issues react support forum google groups stack overflow better suited answer question though yes would pull call another function binding render adds", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "thanks reporting dupe", "d": "2/2014"}, {"body": "also turns unintentional update website making use code master instead release fixed website work", "d": "2/2014"}, {"body": "send state one component another method parameter like onclick thispropshandle thisstate", "d": "2/2014"}, {"body": "sounds like bug", "d": "2/2014"}, {"body": "cc sebmarkbage jordwalke", "d": "2/2014"}, {"body": "could expand bit rationale nt consider key synonymous identity see key encapsulates identity child however since could multiple instances user may also encapsulate positional information addition rarely ever see use case identity part child could expand use case note key hack also used top level feature hacked simply wrapping concerned two ways general future direction moving even responsibility updates parent eg parent needs reason update child gets handled gets placed may affect siblings also bring interesting point state inner child able cause child unmount nt think able may break assumptions parent love see real use case", "d": "2/2014"}, {"body": "sebmarkbage became little longer hoped think makes sense nt consider key synonymous identity solution efficiently reconciling children key really mapping keys collection rendered components rendered list visual mirror map objects key removed component removed one moved one added component key identifies specific key collection data associated key key function data simply often convenient solution guarantee consider collection non unique database objects rendered reconciling keyless component optimization heuristic guaranteed correct take example rendering single component user selects image rendered first selects video component remounted different component classes however user picks two different files type component explicitly required support changing content explicitly support internally resetting state focus uncontrolled dom nodes break although likely nonproblematic ways rather allow simply exclaim imagevideo overrule implicit heuristic sure parent provide key nt believe concern child really knows supports also guaranteed simple key equals filename could potentially opaque object far parent concerned really boils fact heuristic fact false would expect also allowed false true simply class thus ignoring effect properties far real usecases go still nt put react production yet currently breaks swfplugin unless explicitly add support think also makes sense theoretically especially thirdparty integration reusable components happens due onetomanyunique data objects applications rarely run issue effects may negligible focus remaining field previous animation still playing nt make right could see lot reusable components falling trap explicitly support resetting avoid taking chances ps makes sense perhaps clear association props relevant", "d": "2/2014"}, {"body": "set unique values identity value favored key since clearly identifies reorders map eg dictionary key map used key list item often though list item generic item wrapper around value value represented different component therefore gets key based identity value checks currently available except based keys live parent makes strong contract parent decides something gets places something gets placed even component travels though multiple intermediates removed would example strange child allowed unmount therefore think concept unmountremount wrong abstraction see problem though true would nt want leak details internals value parent possibly breaks encapsulation currently component able handle change major changes props also affect state componentwillreceiveprops allowing internal state component reset albeit necessarily entire component tree however ideally entire tree resilient use key wish reset part tree would much comfortable api helps reset internal state flush children rather telling parent remount child never responsible lifecycle responsible children lifecycle something like something would nicer affords less control keys since ca nt applied subtree could accompanied easier way handle operations want mounts updates example", "d": "2/2014"}, {"body": "sidenote really wish components nt much boilerplate stigma associated components felt lightweight would nt much problem since would wrap function call", "d": "2/2014"}, {"body": "sebmarkbage slept see coming think words put good heuristic better heuristic still nt represent parents true intent child know parents intent ie act changing filename component could either represent parents intent changing viewed file reset image viewport parents intent open new tab new image image viewport reset parent example set even make intent explicit put like actually makes perfect sense childs decision say parent make explicit choice matter either give different reference new instance keep key understanding childs expected behavior changing file ie loosely speaking difference traditional agree general understanding actually totally agree think diverges people interpretationexpectation react certainly something definitely documented thoroughly case makes perfect sense", "d": "2/2014"}, {"body": "sebmarkbage sidenote would make sense able provide arrayobject key would cheaply serialized idea nt ie arbitrary separator rather also saves escape keys potentially unclean much edgecase", "d": "2/2014"}, {"body": "sebmarkbage would suggest use case", "d": "2/2014"}, {"body": "spicyj incrementing id fine anything else uniquely identifies switch guess boils need explicitly manage life cycle need give identifies instance", "d": "2/2014"}, {"body": "already work properly master moved props addition props always copied react never mutate passed", "d": "2/2014"}, {"body": "spicyj fix arrived released", "d": "2/2014"}, {"body": "nt include changes master time two changes interested", "d": "2/2014"}, {"body": "spicyj awesome much much cleaner another element makes react great", "d": "2/2014"}, {"body": "soon", "d": "2/2014"}, {"body": "petehunt says need change use srcbrowsergetreactrootelementincontainerjs", "d": "2/2014"}, {"body": "thumbsup actually still nontrivial number attributes nt currently supported mostly oversight", "d": "2/2014"}, {"body": "suppose assumed would treat arrays terminals underscore nt implement deep hard decisions like", "d": "2/2014"}, {"body": "one issue utility requires specify array resolution front apply arrays graph may want resolve different array conflicts differently tough think api makes sense use starting point pretty comprehensible thorough test case", "d": "2/2014"}, {"body": "addon coming help stay tuned", "d": "2/2014"}, {"body": "seen really great implementations allow resolving arrays arbitrarily quite smart array diff algos jsondiffpatch", "d": "2/2014"}, {"body": "petehunt truly addon solve multiple uses key", "d": "2/2014"}, {"body": "believe cover use case please reopen disagree", "d": "2/2014"}, {"body": "sebmarkbage particular reason currently reconcile transactions nest without issue see", "d": "2/2014"}, {"body": "thomasboyt still happening", "d": "2/2014"}, {"body": "benjamn updated yep js grunt requirejs running requirejs app requirejs task tracing dependencies librequirejsrequire typeerror undefined function file jscomponentsformsuseraddjs module tree jsapp jsrouter jsflowsclaimappview jsflowsclaimbankfirst jsx error typeerror undefined function file jscomponentsformsuseraddjs module tree jsapp jsrouter jsflowsclaimappview jsflowsclaimbankfirst jsx originalerror typeerror undefined function file jscomponentsformsuseraddjs requiremodules jsx jscomponentsformsuseradd moduletree jsx jsflowsclaimbankfirst jsflowsclaimappview jsrouter jsapp filename usersthomasboytvenmodevopsvenmowebviewsbasepubliclibjsxrequirejspluginjsjsxjs unfortunately still maintain branch", "d": "2/2014"}, {"body": "issue", "d": "2/2014"}, {"body": "think could probably get away calling server rendering thoughts anyone zpao jordwalke sebmarkbage spicyj", "d": "2/2014"}, {"body": "petehunt issue see breaks expectation ie explicitly prevent changes state ca nt change state actually useful set timers requests eventbus subscribing etc works equally well today sure longterm plan currently relies althought bit unique case accessing props nt feel clean perhaps", "d": "2/2014"}, {"body": "workaround moment", "d": "2/2014"}, {"body": "work around publish new react package update envify modify installed react package use different version", "d": "2/2014"}, {"body": "chance official version similar greater zero", "d": "2/2014"}, {"body": "nm started working least upstream version issue esprima must changed", "d": "2/2014"}, {"body": "mattkunze version use still improvement quite blocker", "d": "2/2014"}, {"body": "zpao modify installed react package install react", "d": "2/2014"}, {"body": "info version fixes problem", "d": "2/2014"}, {"body": "yeah working well sorry nt get back initial question traveling weekend think issue us envify dependency well since also depends esprima", "d": "2/2014"}, {"body": "closed", "d": "2/2014"}, {"body": "try used phantomjs plugin small shim implement missing functionality chromefirefox plugins", "d": "2/2014"}, {"body": "shim referring tried karma initially could nt get phantomjs play along nicely", "d": "2/2014"}, {"body": "include snippet make react work phantomjs", "d": "2/2014"}, {"body": "fixed", "d": "2/2014"}, {"body": "related", "d": "2/2014"}, {"body": "yeah dupe", "d": "2/2014"}, {"body": "found also used react codebase well supported modern mobile browsers", "d": "2/2014"}, {"body": "canonical method reading input value nt touch dom directly would also convenient shimming events like might want people see different currently dom", "d": "2/2014"}, {"body": "happened", "d": "2/2014"}, {"body": "seems fixed current master", "d": "2/2014"}, {"body": "mostly fixed though seems extraneous whitespace surrounding js syranide know fixes", "d": "2/2014"}, {"body": "spicyj pr fix output weirdness yes", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "nt sound like closing", "d": "2/2014"}, {"body": "believe fixed", "d": "2/2014"}, {"body": "nt chance verify according om user issue still fixed tested recent react commit", "d": "2/2014"}, {"body": "well works", "d": "2/2014"}, {"body": "filed probably underlying cause even though symptoms changed", "d": "2/2014"}, {"body": "confirmed longer problem om w react master", "d": "2/2014"}, {"body": "swannodette works", "d": "2/2014"}, {"body": "spicyj actually work custom component cases work", "d": "2/2014"}, {"body": "fixed", "d": "2/2014"}, {"body": "vjeux actually going leave open remember version update", "d": "2/2014"}, {"body": "fixed", "d": "2/2014"}, {"body": "might interest", "d": "2/2014"}, {"body": "written combining react create reusable charting components example bar line charts examples bar chart stacked bar chart line chart", "d": "2/2014"}, {"body": "totally agree andreaferretti", "d": "2/2014"}, {"body": "chenglou fixed", "d": "2/2014"}, {"body": "eh guess personally dont feel api like solve problem sure explicit way retrieving child know one point often nt less ok api close swannodette fine", "d": "2/2014"}, {"body": "clarify idea still set function call get", "d": "2/2014"}, {"body": "onlychild used components soon become component descriptors still set prop function assume function call function would nt second argument component constructors though translates children property ie children position jsx swannodette need use second argument use explicit property named", "d": "2/2014"}, {"body": "currently using argument component constructors however easily switch via works fine closing one thanks", "d": "2/2014"}, {"body": "fingermark going add immutable deepupdate addon starting think could useful addition get right think syranide suggested provide helper google closure compiler think", "d": "2/2014"}, {"body": "petehunt would make sense use uptospeed issues closure compiler syntax already use work right", "d": "2/2014"}, {"body": "yes would equivalent today need want minify correctly would turn final invocation would", "d": "2/2014"}, {"body": "petehunt ah right right forgot supposed used another possibility get rid linkstate alltogether using much compact arbitrary use would require coresupport think would make sense basically deprecates use nt however helper function could make sense one solution depth redundancy everyone gets closure compiler support linkstate additionally could get rid weird mixin would still addon could even cook prefer nt bad bad idea ofc", "d": "2/2014"}, {"body": "ideally immutable setter ig uses opensourcing addon could combined build omcortexstyle cursors could used implement linkedstate", "d": "2/2014"}, {"body": "petehunt curious idea sound ok fundamentally broken way think would makes sense simpler uses alternative current linkstatemixin could easily cook nt bad idea ig better solution everyone write blog posts already", "d": "2/2014"}, {"body": "wondering people wtf object literal syntax since people nt care closure compat would personally prefer think kind api would fly npm official addon", "d": "2/2014"}, {"body": "petehunt wait release", "d": "2/2014"}, {"body": "makes nt triggered browser special keys", "d": "2/2014"}, {"body": "separated addon js reactaddons easy inclusion browserify projects previously getting invariant violations using parts app others appears fix lightweight fashion version corresponds react version files pulled", "d": "2/2014"}, {"body": "mhart pass array something broken remember worked old react", "d": "2/2014"}, {"body": "steida specify broken", "d": "2/2014"}, {"body": "pass array children second arg see child array unique key prop pass array children var params nt see error message take look line works chang factorycall props concat children apply instead call helped", "d": "2/2014"}, {"body": "yeah intended behavior see thing array format often used situation often want pass persist across renders", "d": "2/2014"}, {"body": "oh bug feature know key property thank", "d": "2/2014"}, {"body": "chenglou saying pass array element property would thought would good still worked without ie passing array effect passing variable number arguments", "d": "2/2014"}, {"body": "hmmm friendly warning seems extreme completely legitimate use case way turn appears node console well completely spams server logs", "d": "2/2014"}, {"body": "heuristic typical use case variable number arguments always provide set number items eg nt need keys typically two slots children predictable update occur keys inferred however providing dynamic data set growsshrinks eg based data way react determine updates without keys never legitimate provide dynamic set without keys even always order instead waiting race condition screw issue warning based heuristic dynamically ca nt tell dynamic array static set always one never legitimate ignore warning always provide keys default heuristic helpful way avoid keys common case fairly safely infer also convenient way provide keys based property names object", "d": "2/2014"}, {"body": "note even dynamic set always order still provide index key explicitly declares fine interpretation state gets preserved based order list rather persistent identity item keeps safe heuristic would ever need change almost communicates considered problem tracking changes set", "d": "2/2014"}, {"body": "ok clarifying chenglou said incorrect legit case think general point issue error messages could bit nicer probably stands check render method undefined helpful", "d": "2/2014"}, {"body": "scratch said meant legit works", "d": "2/2014"}, {"body": "think key pun intended debugging warnings highlight react developer tools could add feature way enough context backtrack component ultimately caused problem unfortunately lacking displayname property likely less context react developer tools highly recommend manually adding displayname components nt use jsx help debugging", "d": "2/2014"}, {"body": "heuristic pattern seems heuristic case code perfect valid still see child array unique key prop check render method undefined using arrays childrens render function return thisheader thisp content sun feb pm sebastian markb\u00e5ge wrote think key pun intended debugging warnings highlight react developer tools could add feature way enough context backtrack component ultimately caused problem unfortunately lacking displayname property likely less context react developer tools highly recommend manually adding displayname components nt use jsx help debugging reply email directly view github", "d": "2/2014"}, {"body": "array issue displayname better wrapper around react like hyper nt get around polish hopefully point", "d": "2/2014"}, {"body": "since help work compiletojavascript languages frameworks typescript f funscript websharper", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "would cool support pointer events particularly regarding responsiveness modern ie ie mobile browsers hate add proprietary viewport tags css properties get rid infamous click delay instance update", "d": "2/2014"}, {"body": "thauburger edit internal diff coming making onclick work without delay", "d": "2/2014"}, {"body": "chenglou nt work right though believe", "d": "2/2014"}, {"body": "chenglou spicyj thanks update", "d": "2/2014"}, {"body": "spicyj one disable click delay something like suggested fastclickjs", "d": "2/2014"}, {"body": "sure best place love see blog post sample code", "d": "2/2014"}, {"body": "also cool context keydown like context hokeys keyboard driven apps", "d": "2/2014"}, {"body": "aetet sadly though operate assumption uswestern keyboard layouts unless willing avoid support also could easily make mixin spicyj petehunt specific pr simply exposing could useful leaving confines react like mixin could take care cleaning depending usecases guess could even although might end lot mixins depending size problem could even single mixin attaches events defined handlersmethods etc mixins could even implemented addon although kind feels like native implementation would nice", "d": "2/2014"}, {"body": "way get events really needed though whenever difference could exist react changes basically match spec", "d": "2/2014"}, {"body": "masklinn world difference comes practical usefulness though", "d": "2/2014"}, {"body": "basically match spec world difference comes practical usefulness though yes positive one behaviour react much useful dom event", "d": "2/2014"}, {"body": "need simple editor create contenteditable component basically target browser support normalize contenteditable better useful inaccessible due quirks weirdness poor crossbrowser compatibility full normalization would probably complex react core though", "d": "2/2014"}, {"body": "love see well reason brigand work simple richtext editor prose", "d": "2/2014"}, {"body": "edwardmsmith may work older browsers modern browsers use oninput callback like initial content edit sure use app state initial content make controlled component gets rerendered every time user cursor jump beginning text every keypress", "d": "2/2014"}, {"body": "fixed current master least", "d": "2/2014"}, {"body": "zpao sure custom dom nodes imported local scope jsx converts like react components work addition svg tags supported react eventually also custom tags needed legacy code proprietary systems tags never part react obvious alternative beside patching react use little tedious clean way expand supported dom nodes something like createdomcomponent", "d": "2/2014"}, {"body": "sverrejoh somebody works react saying merely exposing function nt add tags jsx list want able run code new tags converted need react jsx", "d": "2/2014"}, {"body": "fixed", "d": "2/2014"}]