[{"title": "backbone collection create work existing model wait set true", "body": "please checkout jsfiddle error thrown longer sets model problematic called server response problem introduced try make pr fix indeed bug", "num": "3028", "d": "2/2014"}, {"title": "feature remove item", "body": "calling modeldestroy model removed collection server returns status code accepted", "num": "3027", "d": "2/2014"}, {"title": "bower install issue", "body": "sure related backbone bower whenever trying upgrade getting following error", "num": "3022", "d": "2/2014"}, {"title": "success method triggered collection fetch params", "body": "hello new backbone strange problem issue pass params collection fetch never triggers success call back method without params triggers code never goes success call back remove data params goes success call back give alert message ps know another way attribute ca nt use coffee showphotolist projectid gt photolistsfetch data param projectid projectid success renderphotolist renderphotolist gt alert hellow render", "num": "3021", "d": "2/2014"}, {"title": "bb lodash requirejs", "body": "hi implement lodash new version bb amd wrapper exports backbone global scope requirejs without amd wrapper works good thnk", "num": "3019", "d": "2/2014"}, {"title": "button view clicked automatically backbonejs", "body": "view button associated tap event sounds normal except view user directed view button seem get tap event even though user touch button animation associated button animation start view opens", "num": "3018", "d": "2/2014"}, {"title": "collection create nt trigger request sync error events", "body": "creating model model collection create nt bubble request sync error events falls category", "num": "3017", "d": "2/2014"}, {"title": "oldie iframes never removed history stop", "body": "new created every call never removed likely causing memory leaks oldie see", "num": "3015", "d": "2/2014"}, {"title": "adding model collection sets model collection property set", "body": "checked source setting collection added options preparemodel method collection possible tell set collection model want create selection existing collection collections created models want keep reference original collection collections immutable", "num": "3014", "d": "2/2014"}, {"title": "collectionclone use options", "body": "clone empty collection would nt work options new collection undefined clone function return new thisconstructor thismodels second parameter thisoptions need store constructor", "num": "3013", "d": "2/2014"}, {"title": "backbone unable find dynamic div created template", "body": "sorry guys new backbonejs everything working fine goes method view div doesnot founded verified firebug everything run checked dom rowfluid div exist looking issue hours looking forward help guys coffee class myapproutersprojectsrouter extends backbonerouter initialize gt projects new myappcollectionsprojectscollection routes projects projects projects gt projectsfetch done gt view new myappviewsprojectsindexview collection projects projects html viewrender el class myappviewsprojectsindexview extends backboneview addall gt collectioneach addone addone project gt view new myappviewsprojectsprojectview model project rowfluid append viewrender el render gt elhtml addall class myappviewsprojectsprojectview extends backboneview template jst backbonetemplatesprojectsproject render gt elappend template", "num": "3009", "d": "2/2014"}, {"title": "breaks routing encoded newlines query strings", "body": "release introduced uri decoding path query params meaning encoded newlines query strings prevent matching route since regular expression dot nt match newlines broke things pretty badly us frustrating pointrelease sure best fix thinking probably updated match newlines well least documentation explaining query params contain encoded newline characters thoughts happy attach pr consensus resolved", "num": "3007", "d": "2/2014"}, {"title": "backbone model attributes error", "body": "hello every one baning head last hours still unable figure solutions looking forward help guys simply calling follow error", "num": "3005", "d": "2/2014"}, {"title": "use titanium", "body": "noticed use underscore issue mentions problems titanium values used sure backbone even used titanium thought pass along", "num": "3004", "d": "2/2014"}, {"title": "cause loaderror typing gt require money irb", "body": "following online tutorial manipulating currency irb downloaded files using installation completed switched ird ranwhich returned instead returned require irb could someone help solve problem thanks", "num": "3002", "d": "2/2014"}, {"title": "breaks browserify minified file", "body": "bug fixed backbonejs file minified file", "num": "3001", "d": "2/2014"}, {"title": "need use config testamdhtml", "body": "need use config testamdhtml since underscore amd support", "num": "2999", "d": "2/2014"}, {"title": "sync event destroying model", "body": "seems model destroyed event sent coffeescript line listento model sync alert sync never alerts sync model destroyed result model collection get request event beginning process matching sync end catastrophe manually trigger events server answers fixed need revisit code eliminate double triggering", "num": "2998", "d": "2/2014"}, {"title": "breaks browserify", "body": "hello version breaks browserify build backbone trying require jquery although backbone nt dependency know try catch around nt work browserify try resolve require fails causes build fail", "num": "2997", "d": "2/2014"}, {"title": "release breaking changes", "body": "using backbonejs requirejs application release works fine use rjs optimizer reduce project single javascript file point application stops working get message backbone defined message originates marionette explicitly depends backbone requirejs config explicity declares backbone dependency marionette confirmed nt happen", "num": "2996", "d": "2/2014"}, {"title": "removing callbacks working expected", "body": "docs eventsoff sample code var chai require chai expect chaiexpect sinon require sinon sinonchai require sinonchai var backbone require backbone var require lodashdistlodashunderscore chaiuse sinonchai describe backboneevents function var myobj beforeeach function myobj extend myobj backboneevents remove custom events objects function var sinonspy var sinonspy var sinonspy expectation callbacks already removed event time trigger called even unbinding event thereby failing pass test", "num": "2994", "d": "2/2014"}, {"title": "error file backbonejs", "body": "error line file backbonejs uncaught typeerror call method undefined", "num": "2992", "d": "2/2014"}, {"title": "bower issues", "body": "try add backbone package using bower two issues whole repository included ignores respected backbone dependencies included underscore issue command bower install targz repository downloaded issue think inside file bowerjson componentjson files present main repository", "num": "2989", "d": "2/2014"}, {"title": "route exception", "body": "routes throw exceptions due use iframes gon na bring old issue started iframe approach refresh memory even get find fix issue would really nice backbone least provide flag completely disable use iframes cost losing history support course", "num": "2988", "d": "2/2014"}, {"title": "remove item list tutorials", "body": "link tutorial even says page story demo tutorial remove please", "num": "2987", "d": "2/2014"}, {"title": "generate url routes", "body": "please u realize function realy need example", "num": "2982", "d": "2/2014"}, {"title": "docs move examples section separate page", "body": "documentation page backbone already fairly large api docs changelog faq totals around pixels spent examples section great show real world uses backbone think wrong place information navigating docs machine scroll wheel finger scroll also nightmare since scroll bar almost half height could propose move remove examples section whole", "num": "2981", "d": "2/2014"}, {"body": "yep brought tickets see end solution wherever backbone first referenced", "d": "2/2014"}, {"body": "yeah actually tried trouble due way ender modules created way add reference without losing ability integrate ender integrates modules methods via attempt add reference first eg like results infinite loop max stack size limit reached presumably due circular reference somewhere managed work around integrating means one global variable updating references backbone methods wondering gained breaking usage pattern least reference might well removed latter block first post since block unreachable backbone part ender library", "d": "2/2014"}, {"body": "hi ixxerri suspect problem parsing json status code jquery considers empty response invalid json fails request send instead request fine hope helps smiley", "d": "2/2014"}, {"body": "hi think misunderstood request gets accepted success problems asking model deleted collection response rather means accepted worked wednesday february brad dunbar notifications githubcom wrote closed reply email directly view github faithfully matthew xerri", "d": "2/2014"}, {"body": "right completely misread sorry smiley think instead nothing", "d": "2/2014"}, {"body": "yes nothing least maybe trigger sort event since always success callback might even necessary think would apply methods well put post february brad dunbar notifications githubcom wrote right completely misread sorry image smiley think instead nothing reply email directly view github faithfully matthew xerri", "d": "2/2014"}, {"body": "feel like would bit special case want handle custom sync method since presumably way backbone know specific action handled server", "d": "2/2014"}, {"body": "true backbone would nt update action occurred server unless user implements sort sockets assuming nodejs server still valid http response backbone nothing beneficial interfere anything else allows handle responses february tim griesser notifications githubcom wrote feel like would bit special case want handle custom sync method since presumably way backbone know specific action handled server reply email directly view github faithfully matthew xerri", "d": "2/2014"}, {"body": "think original read ticket correct accepted request accepted processing processing completed request might might eventually acted upon might disallowed processing actually takes place facility resending status code asynchronous operation response intentionally noncommittal purpose allow server accept request process perhaps batchoriented process run per day without requiring user agent connection server persist process completed entity returned response include indication request current status either pointer status monitor estimate user expect request fulfilled remote action may eventually taken presumably time taken confirmation happening band since backbone default optimistic remote actions default optimistic well clientside act happened patched method fine way change default handling", "d": "2/2014"}, {"body": "backbone optimistic set wait true though think huge effect end user experience handling would fall category features instead flag condition", "d": "2/2014"}, {"body": "backbone optimistic set wait true though yes nt think would expected behavior treat differently wait true enabled default either way mostly academic esoteric status codes", "d": "2/2014"}, {"body": "given nature status code fact interfere status codes think would great addition fits perfectly something handled immediately like simple db query status sent thanks february jeremy ashkenas notifications githubcom wrote backbone optimistic set wait true though yes nt think would expected behavior treat differently wait true enabled default either way mostly academic esoteric status codes reply email directly view github faithfully matthew xerri", "d": "2/2014"}, {"body": "problem running following command anyway could due temporary issue", "d": "2/2014"}, {"body": "thanks fixed cleaning bower cache done", "d": "2/2014"}, {"body": "hi awaisilyastkxel suspect syntax incorrect try instead hope helps try irc channel mailing list problems", "d": "2/2014"}, {"body": "try asking questions stackoverflow irc channel listserve github issues problems framework", "d": "2/2014"}, {"body": "without actual code difficult debug problem seems handling quite well view lifecycle", "d": "2/2014"}, {"body": "code within mobile app using phonegap jquerymobile code apologies paste code forum code segment view events tap transferinputfindanother function alert bypass check backbone causing double tap findanother function scroll box displayed code showtransferto function e e thischecktransferfrom return hide show settimeout function", "d": "2/2014"}, {"body": "backbone nt deal events looks like jquery mobile issue perhaps might luck posting documentcloud irc channel backbone mailing list github issues problems framework", "d": "2/2014"}, {"body": "fair never supposed ever call sure", "d": "2/2014"}, {"body": "yeh huge bug worth fixing probably", "d": "2/2014"}, {"body": "sorry invalid issue model already backbonemodel instance preparemodel called collection property changed", "d": "2/2014"}, {"body": "glad worked ya", "d": "2/2014"}, {"body": "filed pr ages ago agree model", "d": "2/2014"}, {"body": "storing options sets bad precedent really need probably override would things like saving comparator initialize arguments right", "d": "2/2014"}, {"body": "storing options prerequisite able clone correctly right cloning invokes constructor without passing options passed original made collection uses foomodel cloned collection happily keep using vanilla backbonemodel makes sense", "d": "2/2014"}, {"body": "js var backbonemodelextend url foo var backbonemodelextend url bar var collection backbonecollectionextend model var new collection id consolelog first instanceof true var new collection id model consolelog first instanceof true", "d": "2/2014"}, {"body": "javascript var backbonemodelextend var col new backbonecollection id model colat instanceof true var clonedcol colclone clonedcoladd id clonedcolat instanceof true clonedcolat instanceof false", "d": "2/2014"}, {"body": "ah passed requisite options ctor instead", "d": "2/2014"}, {"body": "well pass every option constructor every new option introduced subclass require overriding clone well saving copy options constructor lot easier", "d": "2/2014"}, {"body": "yeah ai nt gon na need overridden prototype like would guess people best left every new option introduced subclass require overriding clone well eh would right", "d": "2/2014"}, {"body": "introduce new option save reference collectionmodel instance need grab back put constructor clone yeah right looks like subclasses override anyway options actually supplied construction inheritance", "d": "2/2014"}, {"body": "yeah lets leave one developer", "d": "2/2014"}, {"body": "wait nt default implementation clone sane least within context vanilla collection model", "d": "2/2014"}, {"body": "actually yeah would agree thinking something along lines", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "otherwise take snapshot options anyway get passed way", "d": "2/2014"}, {"body": "yeah figure wanted could save reference pass back later feb pm jimmy yuen ho wong notifications githubcom wrote otherwise take snapshot options anyway get passed way reset add set references reply email directly view github", "d": "2/2014"}, {"body": "yeah figure wanted could save reference pass back later nt quite make sane vanilla collectionmodel default nt think escape copying options", "d": "2/2014"}, {"body": "ok screw defaults idea need override base collection something", "d": "2/2014"}, {"body": "yeah changed defaults back extends mistake unless talking defaults thing want know expected semantics obviously nt exactly cloning sure dozens incompatible overrides varying semantics good idea", "d": "2/2014"}, {"body": "mornin awaisilyastkxel search document elements matching however rendering index view yet inserted document need search views element instead instead generally try irc mailing list type question github issues questions backbone nt used debugging hope helps smiley", "d": "2/2014"}, {"body": "hi kainosnoema fixed apologies breakage thanks reporting alone concerning point release take look interested", "d": "2/2014"}, {"body": "braddunbar thanks quick turnaround new query string handling nice ca nt wait another version bump try", "d": "2/2014"}, {"body": "property undefined check exists getting set correctly constructor try asking questions mailing list irc channel documentcloud github issues problems framework", "d": "2/2014"}, {"body": "let tag em close em", "d": "2/2014"}, {"body": "titanium mvc framework alloy built top backbone", "d": "2/2014"}, {"body": "titanium mvc framework alloy built top backbone rock fix similar handled underscore either making default adding guard", "d": "2/2014"}, {"body": "hi cyzanfar fairly certain wrong place perhaps ask irc browse issues", "d": "2/2014"}, {"body": "thank mon feb pm brad dunbar notifications githubcomwrote closed reply email directly view github", "d": "2/2014"}, {"body": "problem smiley", "d": "2/2014"}, {"body": "built release maybe jashkenas release emergency release amd folks need remove shims upgrade requirejs way around running problems", "d": "2/2014"}, {"body": "good catch thanks", "d": "2/2014"}, {"body": "np", "d": "2/2014"}, {"body": "take look kind need event triggered also project working", "d": "2/2014"}, {"body": "far tell looking code sync event wo nt trigger model returns true using isnew method", "d": "2/2014"}, {"body": "confirm cause behaviour case", "d": "2/2014"}, {"body": "oops issue closed mistake yes right point issuing sync event communication server new isnew true model destroyed however one would expect sync event bubble collection nonnew model destroyed stated doc typically works well dim view collection sees request event undim corresponding sync received always works except destroy model code proves point server file called dummymodelphp client code coffeescript class mod extends backbonemodel initialize id val url phpdummymodelphp isnew get id else class col extends backbonecollection model mod collection new col collectionon destroy collection destroy ev collectionon add model consolelog collection ev add modelisnew new else modelget id collectionon request consolelog collection request ev collectionon sync consolelog collection sync ev newmod new mod newmodon change consolelog new model changed ev newmodon request consolelog new model request ev newmodon sync consolelog new model sync ev newmodon destroy consolelog new model destroy ev collectionadd newmod consolelog collection size collectionsize newmodfetch success gt consolelog fetched value newmodget val consolelog destroy error gt consolelog fetch error note delay give time follow activity log code produces following console log collection ev add collection size new model request ev collection request ev new model changed ev fetched value destroy new model sync ev collection sync ev destroying new model request ev collection request ev new model destroy ev collection destroy ev destroy method executed model new model sync ev sync event missing collection end workaround simple trigger event success callback destroy method fixed backbone event triggered twice", "d": "2/2014"}, {"body": "problem running due order operations model destroyed collection severs ties discontinue proxying events nt know call bug since sure ever discussed true intended functionality cc jashkenas braddunbar", "d": "2/2014"}, {"body": "facing exactly issue backbonereact library", "d": "2/2014"}, {"body": "hi great deal precedent one amp think reasons still stand time triggered model already removed collection", "d": "2/2014"}, {"body": "close issue program behaviour contrary stated documentation already surmised first post reason behaviour destruction model happened chance properly trigger events guessing probably happening makes kind sense good reason close issue otherwise would raised documentation says triggers destroy event model bubble collections contain request event begins ajax request server sync event server successfully acknowledged model deletion makes sense clear program doingthere sync event neither model collection correction sync event model bubble collection reread previous paragraph guess one could say bubbling mentioned destroy event others would counter request event bubble collection therefore sync event nt something need fixed", "d": "2/2014"}, {"body": "nt think anything needs fixed believe documentation correct well event triggered containing collections thus model removed collections proxy events models contain attempting fake event lead confusion", "d": "2/2014"}, {"body": "makes sense sync would fire destroy though since nt able destroy pessimistically request comes back nt seem bit strange could receive proxied request event never receive subsequent proxied sync event", "d": "2/2014"}, {"body": "second thought makes sense destroy name guess would work better event double duty moment means request successful client state sync server", "d": "2/2014"}, {"body": "well destroying model collection nt actually sync collection may new models services nt synced destroying yes request ending event highly needed use case call sync", "d": "2/2014"}, {"body": "sync event meant let us know collection synced issued also whenever single model saved server many models may synced moment disturbing lack sync event destroying model bit like html tag without matching closing tag request event says communication initiated server nt need know operation related adding deleting patching etc expressed words event would symetrically expect event shortly meaning process completed successfully details concerning nature operation original request event events paired cases except model destroyed may stubborn fail see logic exception", "d": "2/2014"}, {"body": "events paired cases except model destroyed events still paired correctly model triggers happens triggered model longer member collections previously belonged", "d": "2/2014"}, {"body": "imagine scenario view renders collection bind view collection events add remove change request sync instance rely request sync events start stop loading spinner achieve though clearly understand event nt bubbling right feel thing developer would expect happen edit binding model sync event removal ugly inserts lot clauses view code", "d": "2/2014"}, {"body": "happens sync triggered model longer member collections previously belonged think magalhas valid use case happens nt really strong argument current behavior would agree particular reason want call", "d": "2/2014"}, {"body": "right particularly strong argument explaining reason behavior order several good reasons think triggered first optimistic choice trigger first triggered asynchronously point future triggered last request complete implicit assumption fact already removed containing collections breaking assumption would likely break lot code mirrors way attributes set triggered several good ways toggle spinner use success callback xhr promise global events assuming using jquery work mmikeyy", "d": "2/2014"}, {"body": "sure going outside backbone eg global events would good idea could get triggers unexpected places script template loading relying ajax could tedious write code discriminate events triggered requests backbone wrote earlier easy circumvent problem manually triggering sync event collection success callback destroy method code however remain bothered fact collection get request event matching sync event event signals start process one reliably signals end interest process case server interaction whatever happens collection model plenty specialized events add destroy change etc available act model collection worth suggestion would new event always match request event signal request completion ideally parameters would indicate success failure pair events would useful manage aspects user interface eg request start request success request fail request end update documentation state clearly sync events bubble destroyed models longer exist rtfm reply would sufficed cut lengthy discussion short buti probably still would felt need another event described discussion would whether bug understand really one", "d": "2/2014"}, {"body": "hrrm good suggestions pinging substack", "d": "2/2014"}, {"body": "let clear something probably lot developers using backbone browserify use together jquery smart use jquery npm since available problem resolved already got jquery nodemodules folder currently working project jquery nt available started shimmed stumbled issue basically everyone wants use backbone together browserify without jquery uses jquery shim probably issues workaround include jquery npm nt think really nice hard dependency get working backbone actually nt really dependency jquery", "d": "2/2014"}, {"body": "hit issue problem jquery npm nt really jquery looking one intended use server shim sure best solution iirc setting jquery path browser paths nt fix", "d": "2/2014"}, {"body": "tgriesser problem anymore since jquery officially available npm nt need version use", "d": "2/2014"}, {"body": "run browserify debowerify transform never run assume way stub jquery within browserify", "d": "2/2014"}, {"body": "wow looking transform like idea missed iraytje ah yeah must problem think needed plugin compatibility reason", "d": "2/2014"}, {"body": "change make seems like attempting load jquery available within node likely right thing instead take position running backbone serverside never looking use views want models collections", "d": "2/2014"}, {"body": "nah loading jquery serverside definitely valid use case wiki page write blog post shim desirable jquery browser whats issue seems like small edge case", "d": "2/2014"}, {"body": "think shame backbone npm nt work browserify requiring module even conditionally dependency backbone even attempt load jquery within backbone even server side want use together load jquery assign backbone like always fix issue everyone nt require blog post using backbone browserify shim", "d": "2/2014"}, {"body": "backbone npm designed work node natural order things also happens work browserify bonus", "d": "2/2014"}, {"body": "even attempt load jquery within backbone even server side want use together load jquery assign backbone like always tend agree though", "d": "2/2014"}, {"body": "fair enough used change come introduced trycatch attempt load jquery node", "d": "2/2014"}, {"body": "somewhere around", "d": "2/2014"}, {"body": "goal make common case serverside node browserbased commonjs using jquery work without hassle opposed reverting add note docs changelog common case js commonjs var backbone require backbone backbone require jquery amd define backbone jquery function backbone backbone", "d": "2/2014"}, {"body": "nt need note amd though since taken care earlier block code", "d": "2/2014"}, {"body": "running seems like also issue amd projects use bower requirejs getting automatically upgraded seems like issues shimming plugins thinking really since breaking things lots people real culprit write configs first notice things working ci blowing across projects", "d": "2/2014"}, {"body": "recently pointed configuration within packagejson may help", "d": "2/2014"}, {"body": "nt backbone include packagejson dependencies field idea module would ever require package without putting package dependencies field seems really weird", "d": "2/2014"}, {"body": "perhaps", "d": "2/2014"}, {"body": "substack historical reasons makes sense since old jquery package something ever want downloaded project", "d": "2/2014"}, {"body": "backbone nt depend jquery unlike say underscore node package nt exist throws", "d": "2/2014"}, {"body": "nt backbone include jquery packagejson dependencies field load backbone node probably nt want jquery dependency folks might", "d": "2/2014"}, {"body": "getting something thread naive understanding dependencies work package dependency dependencies go packagejson dependencies field thread people telling despite present code jquery dependency jquery dependency backbone code take jquery actually dependency backbone belongs packagejson dependencies field weird thirdcase middleground shenanigans going take hacks like nt belong", "d": "2/2014"}, {"body": "addendum like tbranyen already pointed problem want something different happen node vs browser use something like browser field specify different entrypoint perfile overrides", "d": "2/2014"}, {"body": "substack jquery optional light dependency backbone load use backbone fine without jquery present first reference jquery lazily set anytime", "d": "2/2014"}, {"body": "mentioned add docs somewhere", "d": "2/2014"}, {"body": "care making egal amd feb pm jeremy ashkenas notifications githubcom wrote closed via reply email directly view github", "d": "2/2014"}, {"body": "raynos says backbone code relying set leave user would one need another name jquery", "d": "2/2014"}, {"body": "mean also remove amd jquery require using module system make sure underscore visible set backbone seems little odd probably fine", "d": "2/2014"}, {"body": "looks like best option jquery library also interface", "d": "2/2014"}, {"body": "jquery jquery zepto ender way code run browser user power choose one backbone way set jquery interface implementation way go neither amd npm notion interface optional dependency afaik", "d": "2/2014"}, {"body": "jquery zepto whatever optional backbone effort assign right library user code like backbone jquery nt depend jquery please", "d": "2/2014"}, {"body": "mean also remove amd jquery require nt think amd browerside packaging browser jquery usually dependency backbone", "d": "2/2014"}, {"body": "subset jquery used backbone huge possible provide api drop jquery jquery dependency force people make custom version backbone order use something else", "d": "2/2014"}, {"body": "kof take look", "d": "2/2014"}, {"body": "nt think amd browerside packaging browser jquery usually dependency backbone since modules names arbitrarily defined amd config requiring module named forces people name zepto jquery custom ender build jquery want use backbone something jquery amd causes actual problems might create confusion", "d": "2/2014"}, {"body": "thing lodash though imagine using something jquery either know legacy code base used incompatibilities requirejs makes pretty easy alias modules", "d": "2/2014"}, {"body": "good point", "d": "2/2014"}, {"body": "requiring something dependency straight bug think thanks quick fix someone push npm forward looking solution could class method explicitly allows developer assign value throwing later calls nt setup found global browser dependency one generally swapped variety libraries others point", "d": "2/2014"}, {"body": "fix exists backbonejs file minified version backboneminjs still require jquery someone fix please", "d": "2/2014"}, {"body": "wookiehangover real culprit npm install save backbone bower install save backbone write configs first notice things working ci blowing across projects heads behavior changed use means packages updated released see", "d": "2/2014"}, {"body": "jdalton interesting decision obviously nt gotten wind change", "d": "2/2014"}, {"body": "great default modules complying semver probably good applications", "d": "2/2014"}, {"body": "longer possible integrate backbone ender library modules loaded part ender library always exists context nt actually possible reach loading block passed argument solution use ender nt autointegrate modules module needs loaded via optionally integrated via backbone currently integrated must used separately like instead", "d": "2/2014"}, {"body": "try opening issue marionette recall need use amd build load backbone properly", "d": "2/2014"}, {"body": "many backbone plugins nt support amd even though adding backbone window happens asynchronously function passed define called meanwhile plugins included built file may looking windowbackbone immediately nt defined yet seems valid issue compatibility", "d": "2/2014"}, {"body": "ianmetcalf requirejs shim configuration nt work", "d": "2/2014"}, {"body": "nt using rjs optimizer shim wrap plugin discussed bit specifically comments toward bottom", "d": "2/2014"}, {"body": "exactly issue well seems solved marionette backbonerelational", "d": "2/2014"}, {"body": "seeing backbonevirtualcollection good excuse get plugins include amd compatibility", "d": "2/2014"}, {"body": "good excuse get plugins include amd compatibility want start list amd offenders open pulls take minutes amd baked bb proper harder excuse lack support", "d": "2/2014"}, {"body": "ha open pr", "d": "2/2014"}, {"body": "amd baked bb proper harder excuse lack support really tragic amd infect every single file javascript existence order useful external libraries nt want include prerogative sigh", "d": "2/2014"}, {"body": "jashkenas even loyal requirejs user agree little sad see support added personally fine shim setup", "d": "2/2014"}, {"body": "another option consider marionette two builds one amd support one without", "d": "2/2014"}, {"body": "upgrade rjs optimizer config fix build issue amd version backbone downstream dependencies shim config details", "d": "2/2014"}, {"body": "solves thanks jrburke", "d": "2/2014"}, {"body": "spies nt reset call counts tests comment first trigger see call counts", "d": "2/2014"}, {"body": "sounds like underscorejs nt loaded", "d": "2/2014"}, {"body": "added cut use master get benefits ignores", "d": "2/2014"}, {"body": "clear thanks clarification", "d": "2/2014"}, {"body": "everything set correctly routes throwing exceptions ie ran backbone test suite without errors feel free submit failing test case like pursue", "d": "2/2014"}, {"body": "started project recently permission denied exceptions seems like nt happens workaround working fine ignore exception gethash method original modified", "d": "2/2014"}, {"body": "page quirks mode different document mode normally without reproducible case really much", "d": "2/2014"}, {"body": "running compatibility mode ie throwing exception ayresbarcelos saying exception caused iframe nt really want add try catch suppress error going gather details ie environment using jashkenas tests running version compatibility mode mean everything setup correctly", "d": "2/2014"}, {"body": "running compatibility mode valid way test actual behaves quite differently might one areas tests run whatever run working real real real real real", "d": "2/2014"}, {"body": "ok confirmed also tested native run another round tests", "d": "2/2014"}, {"body": "wiki remove pull request needed give try", "d": "2/2014"}, {"body": "seems reasonable", "d": "2/2014"}, {"body": "submit pull request", "d": "2/2014"}, {"body": "thanks", "d": "2/2014"}, {"body": "thoughts topic", "d": "2/2014"}, {"body": "put bottom bothering folks documentation single page nice", "d": "2/2014"}, {"body": "would argue nt documentation like anecdotal evidence important folks use backbone", "d": "2/2014"}, {"body": "agree think important information earlier clear backbone widely used", "d": "2/2014"}, {"body": "sorry boys examples stay feel free move faq docs like", "d": "2/2014"}, {"body": "also examples real world backbone apps function though monday february sam breed notifications githubcom wrote would argue nt documentation like anecdotal evidence important folks use backbone reply email directly view github", "d": "2/2014"}, {"body": "looks like someone already rearranged sections nt deployed site yet", "d": "2/2014"}, {"body": "optional parts backbone routes support nesting", "d": "2/2014"}, {"body": "would welcome pull request", "d": "2/2014"}, {"body": "would say pr please release plugin nt know jashkenas opinion nt see nt part backbonerouter core", "d": "2/2014"}, {"body": "depends fancy ends yes sure feel free take crack", "d": "2/2014"}, {"body": "moral story ing duplicate models breaks passed directly calling works also pass see results hazard guess point say line new idattribute parsing server response nt parsed yet expose models ids thus check fails lines later maybe braddunbar shed little light solution algorithm still incorrect duplicates nonnested attributes becomes different nt throw due array getting priority array setting collection models probably best detect dups early throw wrap around line", "d": "2/2014"}, {"body": "updated spec use method correct running problems using option intended behavior silently reject duplicate model throw error case opinion throwing error developer friendly server clientside code giving duplicate want know upfront alternative creating bugs downstream much harder identify track want go route wrote couple specs expected behavior", "d": "2/2014"}, {"body": "dropped support case think need function solve issues like would also make composite keys easy js default generateid function attrs return attrs thisidattribute eschwartz test case generateid function attrs return attrsnestedid instead using use change would nonbreaking thoughts", "d": "2/2014"}, {"body": "definitely relying data parsed passed cruel else could composite keys called would function used multiple places", "d": "2/2014"}, {"body": "working quick pr get details", "d": "2/2014"}, {"body": "still nt solve problem duplicate models passed call though", "d": "2/2014"}, {"body": "use case example building library uses backbone interface various mapping apis case directly interacting dom views rather map library apis stands forced use entire backbone library along flavor fo though really using fyi able stub without side effects using implementation rely", "d": "2/2014"}, {"body": "apis stands forced use entire backbone library along flavor fo though really using models collections fyi able stub without side effects using implementation backbonesync rely ajax sounds like exactly supposed using backboneview minuscule loading without needing may unaesthetically appealing ca nt imagine mattering almost conceivable js environment", "d": "2/2014"}, {"body": "jashkenas using browserify complete backbone pulled project uglifyjs able strip away parts would bundle size would lot smaller router code would pulled bundle fact prevents using backbonerouter project would double bundle size code nt need also lot upsides like code would logically split files would divide code modules modules would reusable also outside complete backbone context would much fit nodejs philosophy help browserify taking browser side development would work splitting code providing way build browserify would accept pull request would wasting time", "d": "2/2014"}, {"body": "nnarhinen get away supporting modern environments might look exoskeleton backbone fork modular components work paul miller said doubt backbone size sincere concern app extra kb browserify pulls likely among smallest dependencies", "d": "2/2014"}, {"body": "kilobytes something care dangerous path go end bundle half something nt need pulled nt want reinvent wheel nt see nt work towards web development would reintroduce performance terms bundle size memory footprint supporting backbonejs would make sense ca nt really see downsides", "d": "2/2014"}, {"body": "backbone tiny interested see dependencies backbone limiting factor downsides increased complexity much benefit backbone one file needs one file adding complexity makes confusing people unfamiliar commonjs", "d": "2/2014"}, {"body": "would argue building unified file including unfamiliar commonjs would add little complexity yet still support real valid performance reuse concerns users niklas backbone aims limit supporting lowest common denominator may enough encourage users pursue projects use foundation certainly gives pause would nt bothered respond issue except fact fair technical argument met untechnical arbitrary response seemed run counter goals project maybe statement goal monolithic design added project description help differentiate backbone modern approaches", "d": "2/2014"}, {"body": "strictly followed semantic versioning would probably backbonejs nt help anyone evaluate actual progress project minor maybe nonexistent problem following semver big problem", "d": "2/2014"}, {"body": "semver musthave big project", "d": "2/2014"}, {"body": "knowtheory looks bit odd think would fine one would get surprise breakage", "d": "2/2014"}, {"body": "cares version numbers high standard use use nt even understand discussion going long", "d": "2/2014"}, {"body": "would prevented issues problems others w several backbone releases", "d": "2/2014"}, {"body": "braddunbar rest reasons sounds like valuing aesthetics version number actual meaning", "d": "2/2014"}, {"body": "thanks strictly following semantic versioning would nt work well backbone think backbone working well users dependency management following semver would", "d": "2/2014"}, {"body": "frequent releases would help catch showstopper bugs faster think much ask people constantly run edge versions backbone get bugfixes need", "d": "2/2014"}, {"body": "issue removed leading seems working jashkenas another post read removal leading slash handled automatically incorrect", "d": "2/2014"}, {"body": "leading hash seems problem leading slash since got rid working properly", "d": "2/2014"}, {"body": "underscore sortedindex nt actually available included mixins whitelist", "d": "2/2014"}, {"body": "obviously guys jashkenas braddunbar coded lot backbone know ins outs keep returning problem raised alexeypetrushin yes made discovery per brad reply subsequent event tantamount really quite bit also new backbone time discovery took quite bit thinking stepping code know trying really hard keep backbone lean issue keeps cropping alexeypetrushin suggestion trigging event local state goes would helpful addition heft using abovedescribed approach also awkwardness setting keeping around indefinitely know therefore interpreted last validation error still think awkward short code changes method described checking really best approach common use case view needs toggle presenting valid invalid valid render underlying model model attribute use case huge", "d": "2/2014"}, {"body": "", "d": "2/2014"}, {"body": "change constructor behavior problem blindly passing ajaxspecific options straight model constructor", "d": "2/2014"}, {"body": "backbone always flexible less opinionated frameworks nt understand different native windowhistorypushstate understand people wo nt like however decision using left final user please rethink", "d": "2/2014"}, {"body": "one may useful anyone looking functionality backbonecollectionsubset backbonevirtualcollection", "d": "2/2014"}]