[{"title": "keyup event alt key working properly", "body": "used work nt windows firefox quantum edge chrome works try press keys press nt release keep pressing releasing want stop release usually release releasing time like windows right nothing happens upon releasing able capture moment key released way capture release pressing release first fiddle test", "num": "3989", "d": "2/2018"}, {"title": "height return edge elements table", "body": "description jquery version browser edge sample code html actual bug height return expected height return proper valaue jquery chrome ff link test case note use edge", "num": "3988", "d": "2/2018"}, {"title": "jquery issue autocomplete", "body": "hi working mvc project come across situation use textbox autocomplete feature included ajax call retrieve data database used following jquery scripts requirement everything seems fine writing code intellisense automatically shows autocomplete feature visual studio executing facing exception states autocomplete function additional information placed scripts layout page tried placing views well facing issue placed scripts order mentioned swapped scripts fix nothing worked case browsers please help fix issue thanks advance", "num": "3987", "d": "2/2018"}, {"title": "nt fill jquerycssprops mapping nt needed", "body": "working tests failed indicating using still somewhat insidious way time someone accesses css property populating properties like makes hard migrate warn since anything end fault external code wo nt land warning leave open change logic populate needs actually change property name", "num": "3986", "d": "2/2018"}, {"title": "jquery function position returning wrong values properties left top", "body": "hi scenario got aware following issue much complex post moreover company property extent highly reduced example reproduce least jquery function position returns different values properties left top version html document ready function var id alert idposition top idposition top idposition left idposition left tablecell borderwidth borderstyle solid bordercolor padding cell cell tested jquery versions except get result idposition top idposition left exclusively jquery get idposition top idposition left divergences still much bigger business code values fall zero container lands longer actually belongs tell css property relation plays central role jquery version although find note seen amp fixed bug version bye mf", "num": "3984", "d": "2/2018"}, {"title": "feature support colon character event namespaces", "body": "description issue unbind event created component colon character id colon character used separator jsf api event bind like function unbing event issue appear function line regex pattern failed test expression escape character change line escaping character seem works chrome debugger expect happen event must unbind actually happens event unbind browsers affected browsers link test case", "num": "3983", "d": "2/2018"}, {"title": "outerheight true handle negative margins properly starting release", "body": "hello outerheight true handle negative margins properly starting release working fine", "num": "3982", "d": "2/2018"}, {"title": "element lifecycle new event afterloaded beforeunloaded dom elements", "body": "description far option react removal element also react elements added something like lifecycle dom elements would great mutation observer could come handy maybe example javascriptts create couple elements like point added dom would come really handy could react give element properties impossible assign loaded dom example calculate elements width could nt right creation element javascript since dom yet furthermore would powerful think following many use cases would come handy let know nt make sense think would great would start building concept", "num": "3981", "d": "2/2018"}, {"title": "svg data uri breaks jquery", "body": "description following code breaks data uri jquery src uri breaks data imagesvgxml link test case", "num": "3980", "d": "2/2018"}, {"title": "jquery nodejs ca nt used dependency", "body": "status jquery nodejs environment one modules nodejs project imports jquery plugin requires jquery dependency try initialize get error thus plugin ca nt attach turns jquery ca nt properly initialize without object returns ca nt initialize manually passing object substitute executed plugin code ca nt modify stackoverflow question overwhelmingly large number recent answers suppose many people recently encountered similar problem thank boris", "num": "3979", "d": "2/2018"}, {"title": "expose keyboardeventcode jquery event", "body": "background keyboard events introduce new properties latter especially useful normalizes keyboard layouts eg dvorak different locales description register keydown event listener using addeventlistener event code property present however thing using jquery code property absent presumably removed key property curiously present documentaddeventlistener keydown function e consolelog etype ecode ekey ekeycode document keydown function e consolelog jquery etype ecode ekey ekeycode results jquery keydown undefined arrowright keydown arrowright arrowright link test case see ie implemented older spec use left right versus arrowleft arrowright arrowup arrowdown may differences still consider abstraction library would love could help pull ie hill", "num": "3978", "d": "2/2018"}, {"title": "jquery vs change behavior appending rows table", "body": "following code append appendto body results slightly different dom structures get get one tbody one causes problems later selectors like id tbody tr get body rows header rows reviewed jquery core upgrade guide ca nt see anything might related question expected behaviour bug jquery stackoverflow question forum question", "num": "3976", "d": "2/2018"}, {"title": "synchronous xmlhttprequest warn jqueryfnload jqueryhtml jqueryparsehtml", "body": "version tested dev description try load external document like indexhtml loading container load contenthtml contenthtml javascript foo bar get warning trackback load scripts link test case deprecationsynchronousxmlhttprequestzip", "num": "3975", "d": "2/2018"}, {"title": "ajax response empty body runs error function instead success function", "body": "given following ajax request encountered returning empty body rest api seems like legitimate scenario appears body treated error case since json process given errorthrown also occurs xml however perhaps case root element actually valid jsonxml parsing held case current workarounds return empty object rest api success block hit expected change datatype expected text automatic parsing done manually handle body empty using pattern error situations thus handled error function", "num": "3973", "d": "2/2018"}, {"title": "edge fails manipulation tests", "body": "fail manipulation html script type module expected assertions run jan fail jan fail jan last pass last pass manipulation html script type module evaluated module evaluated inner module evaluated module src evaluated inner module src", "num": "3971", "d": "2/2018"}, {"title": "working correctly radio buttons", "body": "listening changes radio buttons seems fully working expect event triggered also radio gets unchecked event listener works pretty fine checkboxes user click uncheck reason radio buttons works differently user selects radio button afterwards selects radio button b part group event triggered try code never able log unchecked console edit tested firefox chrome mac os option option option option function change function let prop id let checked prop checked checked unchecked consolelog checked", "num": "3970", "d": "2/2018"}, {"title": "getscript requires unsafeinline csp rule", "body": "jquery able load scripts via without causing csp violations look following test case indexhtml html consolelog start btnjquery click function getscript payloadjs btnscripttag click function let scriptel documentcreateelement script scriptelonload function consolelog onload arguments scriptelonerror function consolelog onerror arguments scriptelsrc payloadjs documentheadappendchild scriptel payloadjs click button following error shown browser console chrome case refused execute inline script violates following content security policy directive scriptsrc self either unsafeinline keyword hash nonce nonce required enable inline execution hand click button script loaded without issues text shown console note reporting issue thirdparty libraries use consider jquery issue rightly wo nt fix expect fix jquery example see issue security considerations using constructs require generally recommended security community considers bad practice mozilla mdn states following disallowing inline styles inline scripts one biggest security wins csp provides google recommends web fundamentals guide must inline script style enable adding unsafeinline allowed source scriptsrc stylesrc directive also use nonce hash see really nt banning inline script biggest security win csp provides banning inline style likewise hardens application enable adding unsafeeval allowed source scriptsrc directive strongly discourage hope consider changing current behavior sake safer web taking account widespread library", "num": "3969", "d": "2/2018"}, {"title": "jqueryeach generating bug string parameter", "body": "jquery version description jqueryeach generating bug string parameter reproduce var jeach function jqueryeach function consolelog jeach null jeach jeach jeach string", "num": "3966", "d": "2/2018"}, {"title": "faster dom element creation", "body": "description understanding use either create new attributes set use would expect bit faster either currently valid approaches reason latter approach supported look code see reason could supported looks like would minimal code size impact maybe missing something thanks link test case", "num": "3965", "d": "2/2018"}, {"title": "outerwidth svg yields nanpx previously yielded number", "body": "description yields expected number prior versions eg yielded number issue reproduces osbrowser combo tried mac chrome firefox safari windows edge firefox chrome link test case yields yields number", "num": "3964", "d": "2/2018"}, {"title": "feature adding key code filter directly keyboard events", "body": "cases whenever keyboard events like used devs write single inside handlers work inside often seen idea would really helpful nicer write would optional parameter events could single integer array integers representing used filter event trigger example could look somehow like example key codes js input keyup function eventwhich eventwhich eventwhich something input keyup function something would produce way less code write often used easy understand would compatible current api wrong", "num": "3963", "d": "2/2018"}, {"title": "closest unrelated work", "body": "code closest runs loop iteration checks array length always hidden reason js closest function selectors context var cur l thislength matched targets typeof selectors string amp amp jquery selectors", "num": "3960", "d": "2/2018"}, {"title": "css relative modifiers work expected", "body": "description calling css using relative syntax twice row second call ignored different behaviour using normal absolute notation observed safari ios safari chrome jquery jquery slim link test case", "num": "3959", "d": "2/2018"}, {"body": "thanks opening issue checked weekly meeting people check ff edge ff checked mac windows worked us check browser extensions global keyboard shortcuts nt interfering nt think anything", "d": "2/2018"}, {"body": "apparently shortcuts use see adblock plus installed remove browser issue persist try press keep way press release release message combitation stop fiddle doe nt show", "d": "2/2018"}, {"body": "problem occur jquery page led conclude jquery cause", "d": "2/2018"}, {"body": "mcanepa followed directions message shows even nt jquery might able anything browser send events", "d": "2/2018"}, {"body": "dmethvin right issue persist even jquery involved timmywil nt know see message nt coworker exact behaviour maybe report ff sorry bad issue report", "d": "2/2018"}, {"body": "even edge dev tools report even though highlights correct area quote sure standards require case like report edge bug might get fixed soon wo nt help ie", "d": "2/2018"}, {"body": "hate say nt know anything old code used getboundingclientrect wrong cf microsoft user agents giving us information go best bet probably sub use gbcr using jquerycsshooks really need", "d": "2/2018"}, {"body": "closing based analysis anyone time probably worth opening ticket edge", "d": "2/2018"}, {"body": "stackoverflow thing bug report", "d": "2/2018"}, {"body": "fixing messier like unit test making pretty crazy assertions certain aliasing one standard css property another intended use case thought even need mapping vendorspecific properties point", "d": "2/2018"}, {"body": "dmethvin unit test checking mapping would nt expect anyone real life aliasing need mapping cache vendor prefixed values still used browsers although really new apis lots prefixed properties ie think useful handle users could introduce another internal object would consulted match write vendorprop resolved values separate object would influence size slightly negatively hopefully much another solution iirc migrate used differentiate user calls amp jquery internal ones setting certain flag beginning method uses deprecated thing resetting end nt remember would nt something like work", "d": "2/2018"}, {"body": "thanks opening issue prefer see reduced test cases rather whole applications worries seen bug fix match native behavior spec defines offsetparent closest element nonstatic position table td th element case table native offsetparent issue track update docs else fails get offset ancestor desire offset td element subtract eg", "d": "2/2018"}, {"body": "thanks report id element nt matter issue caused namespace working well special chars see test case problem lies line constructs regexp namespaces without escaping special characters nt sure support nonalphanumeric namespaces docs nt mention restrictions unfortunately generic regexp escape function", "d": "2/2018"}, {"body": "discussions rejected proposal", "d": "2/2018"}, {"body": "see would still prefer keep namespaces alphanumeric rather allowing anything period space already meanings", "d": "2/2018"}, {"body": "per meeting keep namespaces strictly alphanumeric document strip colon character selector constructing namespaces well", "d": "2/2018"}, {"body": "problem seems nt affected negative margins able account", "d": "2/2018"}, {"body": "best way would use mutation observers modeling events nt really work mutation notifications batched asynchronous actual insertremove operation used nonstandard mutation events browsers describing horrible performance drag specifically synchronous peraction", "d": "2/2018"}, {"body": "ahh okay thanks use could achieve described without events mutation observer", "d": "2/2018"}, {"body": "probably exactly described code unrelated caller wants catch something inserted document mess opposed modifying soon inserted would need synchronous interface think design needs good design welcome experiment", "d": "2/2018"}, {"body": "attribute chars example seems work identically bare dom one reason jquery changes html sees nested new tag tries change per documentation disable modify changing method seems easier correct change string", "d": "2/2018"}, {"body": "using plugin code snippets shown please provide complete test case asked issue template", "d": "2/2018"}, {"body": "dmethvin minimal complete isolated test case reproduce issue sample jquery plugin try execute nodejs umd wrapper tries require jquery jquery initialization fails due absence object nodejs js function global factory umd wrapper around plugin typeof define function amp amp defineamd define jquery factory else typeof exports undefined factory require jquery else var mod exports factory globaljquery function jquery use strict var interoprequiredefault jquery interop assume function interoprequiredefault obj return obj amp amp objesmodule obj default obj var typeof typeof symbol function amp amp typeof symboliterator symbol function obj return typeof obj function obj return obj amp amp typeof symbol function amp amp objconstructor symbol amp amp obj symbolprototype symbol typeof obj function classcallcheck instance constructor instance instanceof constructor throw new typeerror call class function var testjqueryplugin function code plugin consolelog require jquery tostring try importing jquery printing results run naturally get function w wdocument throw new error jquery requires window document return factory w fn testjqueryplugin testjqueryplugin typeerror set property testjqueryplugin undefined object modulecompile objectmoduleextensionsjs moduleload trymoduleload functionmoduleload modulerunmain", "d": "2/2018"}, {"body": "sure got code also seems like sure based assume comment problem begins looks like assuming babel compilation run able step code see fails command print url explains attach debugger", "d": "2/2018"}, {"body": "dmethvin hi dave thank link node debugger code babel umd preset generates debugger get error jquery fails initialize lack window object node inspectbrk testjqueryjs debugger listening ws help see debugger attached function w wdocument throw new error jquery requires window document return factory w fn testjqueryplugin testjqueryplugin typeerror set property testjqueryplugin undefined slightly modified running handle variable instead browser environments js function global factory typeof define function amp amp defineamd define jquery factory else typeof exports undefined factory require jquery else var mod exports factory globaljquery globalmetismenu modexports function jquery use strict var interoprequiredefault jquery function interoprequiredefault obj return obj amp amp objesmodule obj default obj var typeof typeof symbol function amp amp typeof symboliterator symbol function obj return typeof obj function obj return obj amp amp typeof symbol function amp amp objconstructor symbol amp amp obj symbolprototype symbol typeof obj function classcallcheck instance constructor instance instanceof constructor throw new typeerror call class function var testjqueryplugin function consolelog require jquery tostring", "d": "2/2018"}, {"body": "think safe say point debugging something issue jquery would agree plumbing around javascript pain get right many cases commonjs native es modules babel webpack loading amd script tags sympathy time help remotely debug stackoverflow probably good place ask provide complete example including build steps required", "d": "2/2018"}, {"body": "dmethvin dave solved practical issues nt need jquery nodejs please take note jquery fails initialize nodejs take note people run problem stackoverflow jquery ca nt used nodejs side dependency explicitly initialize pass upon initialization thank time efforts maintain jquery sympathy", "d": "2/2018"}, {"body": "yep definitely need mentioned original issue part missed executed plugin code ca nt modify would probably true using babel turn es module declarations cjs requires would need require", "d": "2/2018"}, {"body": "agreed thinking typo char key nt even see listed anywhere specs jbedard know around since jquery recent know specs changed several times years keycodecharcode keychar problem trying normalize names especially bloating put comprehensive mapping like jquery every person ever used jquery needed might make sense people need one two keys also mention get property raw properties", "d": "2/2018"}, {"body": "nt think jquery ever supported default standard property add list", "d": "2/2018"}, {"body": "appreciate feedback understand bloat argument use regex make arrow bit optional use multiple case statements satisfy implementations slightly odd abstraction library abstract away differences hopefully prioritize standards compliance lost bet step getting code back event object cheers feb dave methvin notifications githubcom wrote agreed thinking typo char key code nt even see char listed anywhere specs jbedard know around since jquery recent know specs changed several times years keycodecharcode keychar problem trying normalize names especially bloating put comprehensive mapping like jquery every person ever used jquery needed might make sense people need one two keys receiving authored thread reply email directly view github mute thread", "d": "2/2018"}, {"body": "behavior expected included fix failed mention upgrade guide probably fix first included immediately reverted accidental breaking change disrupting milestone tracking", "d": "2/2018"}, {"body": "see problem adds tbody", "d": "2/2018"}, {"body": "jakecigar browser behavior jquery adding", "d": "2/2018"}, {"body": "know browser think jquery lots people use tbody css", "d": "2/2018"}, {"body": "might expected append children either tbody node special ways", "d": "2/2018"}, {"body": "fix failed mention upgrade guide thoughts else might affected breaking change howwhere refile issue upgrade guide gets updated breaking change", "d": "2/2018"}, {"body": "rmacfadyen upgrade guide file ticket pr repo would great jakecigar could propose description would new item manipulation near generally want succinctly describe change propose alternate solution behavior tbody tables always strange browsers multiple tbody elements table makes even stranger already tbody select one insert rows create new one jquery bunch fiddly logic wanted remove person inserting markup knows best go", "d": "2/2018"}, {"body": "want document jquery broken regard tbody tag even native code like gives table jquery code one child table think get rid manipulationtarget match rest behavior jquery", "d": "2/2018"}, {"body": "maybe say sometimes jquery running browsers give tbody times care getting tbody make sure code followed ways make sure get tbody", "d": "2/2018"}, {"body": "dmethvin added issue thanks pointing right spot nt done pr pretty uncertain understand scope breaking change really sure document say either", "d": "2/2018"}, {"body": "jakecigar example invalid specifically valid insert elements siblings elements per spec fortunately jquery prevents creating invalid table adds element sure seeking errors counting elements css adding explicitly much better way go readable prevents confusion sometimes jquery running browsers give tbody times care getting tbody make sure code jquery longer involved autoinsertion agree useful users know browsers automatically insert tbody something useful docs upgrade guide", "d": "2/2018"}, {"body": "timmywil jquery involved manipulationtarget appends tbody user specifically asks append table tbody present could happy completely one way like idea less kind", "d": "2/2018"}, {"body": "jakecigar meant longer insert tbody browser natively help prevent creation invalid tables example actually demonstrates argument rather", "d": "2/2018"}, {"body": "far tell reason nt come across difference code write inject html expect see seems like long problems appending tr table nt done completely agree behavior change mentioned upgrade guide", "d": "2/2018"}, {"body": "request says describes value must returned request empty body valid json", "d": "2/2018"}, {"body": "disagree scenario one two things happen hitting api endpoint post request generates resource server side responds containing proper location header identifying url resource body none necessary post generates error case json object containing error information returned required send back empty object get jquery post process successful request handling error case manually using datatype text doable requires much work handle endpoints potentially return multiple data formats ie xml json", "d": "2/2018"}, {"body": "asked json nt get request failed http status may constraint put request met endpoint consistently return json client expects nt control endpoint sometimes returns json sometimes nt getting data text sniffing type probably best bet", "d": "2/2018"}, {"body": "jhorvathmaxetatech server well behaving always returns data correct may omit option jquery listen server claims returns may eg responses data responses empty bodies server returns empty body json broken rely manual parsing", "d": "2/2018"}, {"body": "edge passes browserstack looks like test flakey", "d": "2/2018"}, {"body": "yeah restarting manually testswarm succeeds well sounds like flake still make less flakey", "d": "2/2018"}, {"body": "thank opening issue however default browser behavior unrelated jquery note bind radio inputs one checked gets change event please refer stackoverflowcom support", "d": "2/2018"}, {"body": "thanks report looks like duplicate closing", "d": "2/2018"}, {"body": "sure linked pr resolves problem similar problem sure opened issue", "d": "2/2018"}, {"body": "yeah nt think avoid problem adding nonce hash discuss whether always inject script tag external files", "d": "2/2018"}, {"body": "would great workaround could add global flag jquery setting enabled jquery would use method every request could disabled default course afais could workaround disabled usage csp", "d": "2/2018"}, {"body": "ideally suggested feature detect support use approach supported possible feature detect though maybe introduce flag enables csp support avoid stuff violates even makes old browsers unusable feature detection ideas welcome", "d": "2/2018"}, {"body": "add milestone sounds like something resolve", "d": "2/2018"}, {"body": "hmm instead detecting support could detect csp enabled similar eg angularjs think", "d": "2/2018"}, {"body": "agreed landing would nice order deal csp issues one release think would better consistent always use script tag regardless csp make exception android work geteval koczkatamas general sworn global flags make difficult large page full plugins written different times different people depend consistent behavior documentation already pretty difficult understand options way interact changing rules retroactively makes worse subtle behavior changes like also difficult jquery migrate detect warn keep mind wo nt help original case linked since using jquery maintained would need update get fix", "d": "2/2018"}, {"body": "dmethvin autodetect support consider superior solution feel free forget global flag idea issue linked opened somebody else using jquery prepared switch latest jquery time especially csp fix lands mgol please note technically tests afaik send warning endpoint configured csp cause unnecessary traffic sure think angular least latest versions solves otherwise use angular nt get errors", "d": "2/2018"}, {"body": "think would better consistent always use script tag regardless csp make exception android work geteval dmethvin android lt would make exception android browsers without uasniffing", "d": "2/2018"}, {"body": "mgol yeah looks like although android sets property function create attribute nt run function maybe script error nt try", "d": "2/2018"}, {"body": "document discussed meeting today support restrictive csp configuration must break currentlyworking strict ordering script evaluation property proper fix probably adopt script elements even samesite content also implement manual serialization similar suggestion leveraging something like relpreload performance issue", "d": "2/2018"}, {"body": "per last meeting workaround set options force script tag may get changed behavior change switching sync async", "d": "2/2018"}, {"body": "strings supported parameters objects arrays may pass parameters documented eg", "d": "2/2018"}, {"body": "thanks quick response know supporting array array objects accident instead using proper parameter array case used string guess nothing instead firing error message thanks", "d": "2/2018"}, {"body": "jquery general nt validate inputs relies correct adding consistent validation would increase library size lot want validation consider using typescript contains jquery type definitions typesjquery package", "d": "2/2018"}, {"body": "case convoluted way call jquery methods plainobject methods set attributes documentation explains actually prefer deprecate makes think would faster speed causing issues code", "d": "2/2018"}, {"body": "thank opening issue however looks like microperformance optimization existing api fast enough yes always make things faster going native lose convenience without actually making difference speed noticeable humans", "d": "2/2018"}, {"body": "hmm interesting svg elements nt gets nan trying calculate scroll gutters fixed adding final adjustment covering svg dimension getters unit tests would like contribute pr alexedgcomb", "d": "2/2018"}, {"body": "appreciate offer pass round thanks", "d": "2/2018"}, {"body": "like give shot could assigned", "d": "2/2018"}, {"body": "github nt allow assign issues people without commit access repo ca nt set feel free take shot pr", "d": "2/2018"}, {"body": "thank opening issue bad idea moving away event aliases promoting closely match native possibly take advantage new event apis think best implemented plugin", "d": "2/2018"}, {"body": "selects closest div paragraphs document incoming set length certainly something", "d": "2/2018"}, {"body": "understood thanks", "d": "2/2018"}, {"body": "extra space makes value invalid use instead", "d": "2/2018"}, {"body": "thanks correction instead ignoring second command ignores first div shrinks instead increasing would make sense dealing absolute values would overwrite previous one would expect adding subtracting would end net increase", "d": "2/2018"}, {"body": "thanks updated reproduction reopening", "d": "2/2018"}, {"body": "behavior caused css transition would say expected target value relative adjustment determined right away set css stretch height adjustments time set height immediately adjust first animation completes makes adjustment relative intermediate value", "d": "2/2018"}, {"body": "ok think get transition property property wo nt change instantly aiming target solve could wait transition finishes set second value although think would make sense operators read target instead current value", "d": "2/2018"}, {"body": "although think would make sense operators read target instead current value api read final value nt really choice", "d": "2/2018"}, {"body": "generally also miss changes big breaking change currently revisitng issue trying fix parts foundationsites still confusing one mentioned code part affects", "d": "2/2018"}, {"body": "also imo deprecation still directly change code part warning console deprecated feature used one step much think never saw solutions introducing deprecations broke production code threw warnings especially comes node modules see different", "d": "2/2018"}, {"body": "time also change code move deprecated apis module excluded custom build deprecation unrelated issue though still need test case", "d": "2/2018"}, {"body": "reproducible testcase try ok test results issue starts method short test yields use contains javascript var length obj amp amp length obj amp amp objlength type totype obj isfunction obj iswindow obj return false results reverting javascript var length obj amp amp length obj amp amp objlength type totype obj type function iswindow obj return false fixes move deprecated apis deprecated module excluded custom build deprecation unrelated issue though still need test case see change module also nt jquerymigrate meant misinterpret mission upgrading libraries jquery lot work breaking changes introduced jquery migrate makes easier restoring apis removed additionally shows warnings browser console development version jquery migrate removed andor deprecated apis used", "d": "2/2018"}, {"body": "cc ncoden guess issue sure another testrunner testframework headless browser testing framework would solution many still use mochajs phantomjs", "d": "2/2018"}, {"body": "thank much finally providing test case issue mochaphantomjs dependency depends upon ancient version phantomjs instead latest version suffers bug nodelist objects functions thus causing iterate objects rather arrays catastrophic results observe proof run following invocations free equivalents root directory mochajquerytest repository nt support ancient versions phantomjs correct fix get dependency updated mochaphantomjs", "d": "2/2018"}, {"body": "understandable see big reason change internal check thing changed commit case documented support phantomjs anymore sure caught like parts jquery fixes phantomjs specific browsers", "d": "2/2018"}, {"body": "point longer sure asking behavior change necessary fix already could know function really nodelist environments fully support listed although could add note describing besteffort support others prs welcome", "d": "2/2018"}, {"body": "issue timmy said complete rewrite using next generation javascript want use modules would make sense remove support browsers nt implement latest web features let continue using jquery way huge amount cruft removed old dated browsers", "d": "2/2018"}, {"body": "thecodingdude still support ie foreseeable future least ie currently ie nt change much ca nt unfortunately", "d": "2/2018"}, {"body": "mean already president removing browsers blog post mentions need support older browsers like internet explorer opera safari use jquery would different right want ie use jquery ie literally supports modern web platform features plan using next generation js like modules supporting mystery starting modern foundation ie would much easier attract pull requests rather working old codebase conceivable reason think support ie capacity version require people use want support idea let go browsers time ie certainly day thoughts", "d": "2/2018"}, {"body": "plan using next generation js like modules supporting mystery use modules development transpile using something like rollup final bundle one js script nt use modules conceivable reason think support ie capacity version require people use want support work latest version jquery releasing version nt support ie would mean users would nt upgrade version would nt get new features amp bug fixes worth basically every library world supports ie way many users browser", "d": "2/2018"}, {"body": "makes sense thanks clarification imagine case would able make builds config want removing code designed could satisfy best worlds", "d": "2/2018"}, {"body": "ie still popular edge desktop marketshare safari ref available microsoft browser windows still supported microsoft really early think dropping support imho back topic think makes sense support last versions ios ios combined less market share ios according", "d": "2/2018"}, {"body": "timmywil thanks explanation future jquery appreciate efforts especially full time jobs terms jquery release thinking end year", "d": "2/2018"}, {"body": "dotnetshadow yep thinking least getting beta end year", "d": "2/2018"}, {"body": "wondering error caused us manually evaling downloaded script cross domain already differently via script tag src attribute set see reason restricted crossdomain", "d": "2/2018"}, {"body": "loooong time think onerror event scripts relatively recent supported everywhere avoid silent failures script errors grabbed source evaled", "d": "2/2018"}, {"body": "dmethvin tested test case nt work ie works ie also works ios support unfortunately also nt work android browser fortunately android browser nt seem support csp perhaps work extend crossdomain way loading scripts modern browsers sure check though android browser satisfies even though unknown attributes value", "d": "2/2018"}, {"body": "hi using jquery version trying implement content security policy webpage getting following error refused execute inline script violates following content security policy directive scriptsrc self error produced line jqueryminjs script file content line function e n var ttr createelement script way around problem without use unsafeinline looking internet desperate solution tried brian suggested avail", "d": "2/2018"}, {"body": "hi aimeekatherine following comments assume dynamically generating script tags issue related could try adding hash script csp although nt something tested dynamically generated script tags tested attributes tag stripped alternatively patched work dynamically generated tags work fine tag generated using jquery nonce possibly hash applied comments nt help example creating script tags test case would help immensely", "d": "2/2018"}, {"body": "code mentioned sergiorighi working direct event binding example indirect event binding like seems working idea indirect event binding", "d": "2/2018"}, {"body": "would need attach event handler delegation seeing elements path class", "d": "2/2018"}, {"body": "dmethvin thank suggestion trying create custom event delegation ca nt really close jquery made plunker demo also post question stackoverflow regarding please give light jquery event delegation thanks advance", "d": "2/2018"}, {"body": "bayucandra stackoverflow right place discussions ticket tracking feature", "d": "2/2018"}, {"body": "oriadam websites deep tree native closest much times faster jquery see gmail example try dev console", "d": "2/2018"}, {"body": "need find closest ancestor nodes short period time would definitely recommend using native method directly would good optimization case like would nt profiler shows actual bottleneck code suspect rarely case", "d": "2/2018"}, {"body": "real problem ie works significantly slower chrome nt support native optimization", "d": "2/2018"}]