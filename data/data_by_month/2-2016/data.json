[{"title": "svg elements missing", "body": "built run alpha still use svg elements like issue closure messages implied related tiedin issues fixed closed issues fixed passed reopen general svg issue ticket address", "num": "6146", "d": "2/2016"}, {"title": "way update react child components", "body": "parent element child component child elements showing anything componetwillrecieveprops componentdidupdate code working well change code like use first one code make wizard like content thanks advance", "num": "6145", "d": "2/2016"}, {"title": "componen render call lifecycle functions", "body": "project creates html layout based json file step components call lifecycle functions example component code basenode empty class rendering result console output mini project reproducible error project", "num": "6144", "d": "2/2016"}, {"title": "allow specifying new children append vs prepend reacttransitiongroup", "body": "reacttransitiongroup given dynamic array children eg first reacttransitiongroup holds exiting dom nodes see dom called see fine however transition entirely new array dom see instead see following fiddle seems next child mappings merged previous child mappings order probably fine cases would great could control order got version working locally adding prop type boolean defaults false happy turn pr perhaps another way achieve missing edit looking clear currently works actually intended behaviour looks comment like fact trying add new item existing ones object preserving intended source order bug implementation", "num": "6142", "d": "2/2016"}, {"title": "validation reactproptypesoneof compare values using objectis", "body": "check value proper also related", "num": "6131", "d": "2/2016"}, {"title": "implement reactproptypesexactly", "body": "took use case gitter chat justblackbird wanted property exactly use case instead implement make sense", "num": "6130", "d": "2/2016"}, {"title": "reactdom cost extra bytes", "body": "reactdom react good separation concerns however except special cases react applications almost always require reactdom well special cases obviously builds remove unnecessary dependency react officially serve single library includes reactdom single resource absolutely makes sense extra network request library bytes gzipped cost even multiplied since official cdns seem already redirection place moment filing issue request ends similar redirects reactdom requests place could requests mere bytes words taking overhead tcpip http add fact included part file due binary compression honestly quite surprised even decided separate libraries terms deployment", "num": "6128", "d": "2/2016"}, {"title": "spanish docs", "body": "hi noticed docs translated multiple languages right see italian japanese chinese korean would like contribute spanish version start", "num": "6126", "d": "2/2016"}, {"title": "use static get proptypes classes", "body": "regarding could something like jsx class thing extends component static get proptypes return name proptypesstringisrequired render return hello thispropsname", "num": "6125", "d": "2/2016"}, {"title": "elements visible user chrome hidpi displays", "body": "chrome hidpi displays elements exist dom react components properly displayed exist dom visible part dynamic list filtered try link recreation issue soon", "num": "6122", "d": "2/2016"}, {"title": "improve error message objects valid react child found object keys", "body": "error takes significant amount time debug reason offending object put tree information error message could provide keys would help know line code setting object child stack trace reference code render forced step thru lines code always reveal culprit least starting given line would speed process elimination keys help still enough determine precise cause code would help way detect condition debugger tried things like references", "num": "6120", "d": "2/2016"}, {"title": "requires value attribute property due inputs", "body": "landed still one final issue fix ironically initial reason problem managed property purpose requires attribute attribute correctly removed null discussed second comment seems right approach actually remove special property logic dompropertyoperations instead implement appropriate wrappers instead reactdominput etc repro original issue cc jimfb spicyj", "num": "6119", "d": "2/2016"}, {"title": "datatransfergetdata xxx handler ondragover available chrome", "body": "ca nt get data handler ondragover eventdatatransfergetdata", "num": "6118", "d": "2/2016"}, {"title": "demo page rendering properly", "body": "happening chrome safari os x", "num": "6117", "d": "2/2016"}, {"title": "way render subcomponents different dom roots would huge win", "body": "trying accomplish something could figure way would killer paradigm elegant reusable view components gotten habit rendering views like etc magic components actually render component injected via context means instance one fell swoop reskin view bootstrap modal panel etc jsx class modal extends component static childcontexttypes headerskin proptypesany titleskin proptypesany getchildcontext return headerskin modalheaderskin adds modalheader class titleskin modaltitleskin adds modaltitle class class panel extends component const modalview const panelview awesome highly recommend one pesky little thing ca nt cases animate transitions individually switching views created component provides special animate transitions one view another crossfades header pans body horizontally like typical drilldowns transitions work two views react component type different react ca nt keep component instance mounted wondering could welldesigned system rendering components like etc kind wormhole placeholder controlled ancestor component capability would possible drop view components type animate transitions subcomponents remember trying create wormhole less experienced react quickly became hacky never got working completely basically revolved around passing elements callback inside methods callback would put rendered element desired location ancestor seem remember problem things like refs though also needing use delay rendering wormholed component since triggering rendering kosher anyone tried similar things thoughts", "num": "6116", "d": "2/2016"}, {"title": "cloneelement vs createelement", "body": "anyone let know using cloneelement exist element instance createelement react element class one better term performance sometimes cloning something faster create new instance please let know thanks", "num": "6115", "d": "2/2016"}, {"title": "warn calling setstate getchildcontext", "body": "code causes maximum call stack getchildcontext thissetstate foo bar return foo thisstatefoo sort errors hard track stack trace deep react place give user invariant let know wrong", "num": "6114", "d": "2/2016"}, {"title": "button href updated component rerendered", "body": "using react seems reason react diffs dom buttons replaces text updating href attribute anchors correctly updating text href attribute code illustrates issue component cycles internal state renders link button move state next stage link works fine button href updated text var bug reactcreateclass", "num": "6111", "d": "2/2016"}, {"title": "html jsx compiler broken", "body": "displays referenceerror htmltojsx defined", "num": "6110", "d": "2/2016"}, {"title": "test swipe testutils", "body": "anyone knows simulate swipe using testutils event simulation", "num": "6108", "d": "2/2016"}, {"title": "navigator defined", "body": "running tests watch mode results eventual error navigator defined happening test run executionenvironmentcanusedom becomes true", "num": "6107", "d": "2/2016"}, {"title": "proposal bind component syntheticevent", "body": "common way send additional properties onclick handlers jsx thispropsitemsmap x gt x eslint suggests constant bind calls render good performance recommends pass data child onclick handler back parent handler jsx var list reactcreateclass render return thispropsitemsmap item gt var listitem reactcreateclass render return onclick thispropsonitemclick thispropsitemid however feel bit detrimental readability mention bit pain write something simple partial functions get used everywhere seemingly another programmer need go child definition could well another file find exactly child passing parameter list mention complex onclick handler may become another developer coming modifying code handle event properly well god help propagate amp modify params multiple layers example jsx function foo text return text class bar extends reactcomponent handleclick e consolelog ecomponentpropstext idea attach component event originated synthetic event would something like possiblefeasibleeven needed bind really bring much impact another better way without", "num": "6105", "d": "2/2016"}, {"title": "string proptype proptypesstring boolean proptype proptypesbool", "body": "one abbreviated match typeof", "num": "6103", "d": "2/2016"}, {"title": "way handle setstate changes output ssr", "body": "wondering best way render serverside without rendering client handle state changes mean get html server component state changing example server gets requests generate html server requires react component passing props react component renders server ajaxsocket query get info event sent response comes later react component changes state changing output hmtl generated ready latest state changes happening reactdomrendertostaticmarkup expected nt wait component finish state changes case wait data rerender achieve queries first passing data props way thanks", "num": "6102", "d": "2/2016"}, {"title": "testutils simulate nt set synthetic event type", "body": "undefined received handler nativeevent type matter needs added somewhere realize sustainable set possible fields simulated event type least makes sense verification getting right sort event", "num": "6100", "d": "2/2016"}, {"title": "warning iecompatibilitymode undefind", "body": "read snippet source reactdomjs pic show confused documentdocumentmode value undefined running react compatibility mode got errors like pic show without warning compatibilty mode may know meaning snippet whether add code deal case suffered", "num": "6098", "d": "2/2016"}, {"title": "shouldcomponentupdate vs componentshouldupdate", "body": "choose former latter matches bit better componentdidmount", "num": "6096", "d": "2/2016"}, {"title": "react addons make react code imported application bundle", "body": "stumbled problem days getting really famous error two copies react inside project nt know project decided bundle react one file application code another one happening even explicitly saying wanted react external browserify still getting inside application bundle two bundles react addons something like following entry point reacttransitiongroup statement telling browserify webpack treat react external still get react code inside application bundle forget treat addon external since last importing react inside npm package declared external browserifywebpack chance changing future like example exporting addon code completely outside react code imports react npm package concern react project developers using asking saw dozens questions addcomponentasrefto error people asking seem error described demo", "num": "6093", "d": "2/2016"}, {"title": "testutils search custom component within dom element", "body": "old issue invariant violation findallinrenderedtree instance must composite component know brought somehow declared ok keeps causing trouble tests thought give one shot problem search custom component within dom node made sample illustrate problem sample simplified version real problem facing datagrid component renders bunch row components turn render bunch cell components cell either render readonly text custom component passed via props custom editor want turn cell functional stateless component better performance problem tests given row find custom editor cell given index previously react v lt think possible find div rendered given cell within div find custom editor longer possible also since cell stateless functional component locate using test api really believe testing api incomplete right change guys could take another look", "num": "6088", "d": "2/2016"}, {"title": "onchange event input type number", "body": "seen altering value input type number element triggered thing case react pen illustrate case view console", "num": "6087", "d": "2/2016"}, {"title": "allow cite attribute blockquote element", "body": "currently supported element attribute since unknown react thrown away render cite url designates source document message information quoted attribute intended point information explaining context reference quote", "num": "6084", "d": "2/2016"}, {"title": "calling rendertostring twice second time nt fire lifecycle events", "body": "trying implement server side rendering reactredux components use start fetching data rest api use simple counter redux store see many fetching requests pending code server side javascript reactdomrendertostring rootele storesubscribe gt const state storegetstate statewait const html reactdomrendertostring rootele resrender html would work except fact second fires componentwillmount events increase wait counter results infinite loop ideally wondering way call wait seconds wait counter go zero edit temporary fix unsubscribing redux store reach wait javascript reactdomrendertostring rootele const unsubscribe storesubscribe gt const state storegetstate statewait unsubscribe const html reactdomrendertostring rootele ressend html though still bunch useless async calls second rendertostring calls componentwillmount methods", "num": "6083", "d": "2/2016"}, {"title": "add optout contenteditable warning", "body": "", "num": "6081", "d": "2/2016"}, {"title": "environment checks done", "body": "going source react npm install noticed blocks like calls warning feature ternary environment check wrapping environment conditional seems unnecessary already gone foundreplaced instances wanted see philosophical reason submitting pr thanks", "num": "6080", "d": "2/2016"}, {"title": "issue native change event select valuelink", "body": "hello trying make validator forms want make possible usage linkedstatemixin validator inputs validation use native events addeventlistener make following actions approximate algorithm event handlers change blur keyup code perform setstate method valid state chaged input tag works fine value changed expected select tag stateselectvalue changed one time problem think issue possible make things work wrong way jest tests share needed", "num": "6079", "d": "2/2016"}, {"title": "frameworks", "body": "facebook recommend good backend go react maybe something already login page features built", "num": "6078", "d": "2/2016"}, {"title": "html jsx compiler broken", "body": "hi today tried use html jsx compiler looks broken", "num": "6077", "d": "2/2016"}, {"title": "reactjs setstate bugmy fault", "body": "hello guys made exemple see exactly talking used context storeinput function app passes one component sorry short message nt best writing english skills easier show nt understand something please let know thanks", "num": "6075", "d": "2/2016"}, {"title": "thispropschildren rerender", "body": "example js class parent extends reactcomponent componentdidmount settimeout gt thisforceupdate render return thispropschildren class child extends reactcomponent render return thispropsrandom class app extends reactcomponent render return", "num": "6072", "d": "2/2016"}, {"title": "disabled radio button fires onchange event double click internet explorer", "body": "internet explorer disabled radio button fire onchange event double clicked checked state change onchange event fires nonetheless", "num": "6069", "d": "2/2016"}, {"title": "proposal componentwillprepareunmount continuecallback", "body": "edit discussion thread amended proposal working lot animations combination react lately lifecycle methods make transitions components walk park struggled get scenario unmounting pleasant experience end though come lifecycle method proposal could incredibly powerful would declared component delay actual unmount nothing happened component calls provided callback would resume actual unmounting component pending unmount state restored actual unmount takes place unmount canceled component treats change regular update fires etc addition called give chance react specifically event edge case mitigation ancestors override descendants ancestor component using unmount preparation unmounts descendant unmounts instantly without preparation unless ancestor also utilizes would give arbitrary time prepare would allow us gracefully perform animation components right really unmounted letting component specific code decide disappear example javascript var styles styling var tweenoptions tween options menu item fades scales mount fades scales unmount class menuitem extends reactcomponent componentwillmount thistweens opacity new tween tweenoptions scaley new tween tweenoptions thisanimateshow usage javascript class menu extends reactcomponent render var itemelements thispropsitemsmap item gt return return menuproptypes items reactproptypesarrayof reactproptypesshape id reactproptypesany label reactproptypesstring isrequired think", "num": "6067", "d": "2/2016"}, {"title": "dynamic proptypes", "body": "hi trying construct mixin takes devdefined component specification constructs proptypes defaults accordingly trying something like code work anyway something similar many thanks", "num": "6066", "d": "2/2016"}, {"title": "locate line number react makes warning like unknown dom property class mean classname", "body": "locate line number react makes warning like unknown dom property class mean classname hint code made warning", "num": "6062", "d": "2/2016"}, {"title": "seperate react reactdom original react", "body": "past import react react import hello componentjsx main function main reactrender documentgetelementbyid app import react react import hello componentjsx import reactdom reactdom main function main reactdomrender documentgetelementbyid app look like past easy import react post indicate react change", "num": "6061", "d": "2/2016"}, {"title": "try statements vs perf", "body": "profiling app noticed warnings app reallly slow code tryfinally even without catch reasons use", "num": "6057", "d": "2/2016"}, {"title": "performance unmounting amp mounting component vs hiding", "body": "preferred method performance benefit hiding node dom via css vs mounting unmounting example render function following code javascript const map thiscontext let selectedfeature let content infer selected feature info window mapinfowindow amp amp mapinfowindowgetselectedfeature selectedfeature mapinfowindowgetselectedfeature selectedfeature undefined content else content return content wondering preferred something like first snippet mounts unmounts node feel cleaner analysis component since know selectedfeature always defined nt need conditional code snippet analysis component change frequently application wondering one method preferred performant performance probably go first snippet feels cleaner im guaranteed value selectedfeature", "num": "6056", "d": "2/2016"}, {"title": "react unmount components upon event", "body": "event fired eg tabwindow closed page reloaded react unmount components prevent memory leaks", "num": "6055", "d": "2/2016"}, {"title": "elements altattribute default true used without value", "body": "consider following result fails load user displayed instead nothing fiddle alt attribute defines alternative text describing image users see displayed image url wrong image one supported formats image yet gt downloaded usage note omitting attribute indicates image key part content textual equivalent available setting attribute empty string indicates image key part content nonvisual browsers may omit rendering", "num": "6054", "d": "2/2016"}, {"title": "reactdom define react", "body": "reactrender works fine reactdomrender name version description main indexjs scripts test echo error test specified amp amp exit build webpack dev webpackdevserver devtool eval progress colors hot contentbase build author eason license isc dependencies babelcore babelloader react webpack webpackdevserver devdependencies babelpresetreact", "num": "6053", "d": "2/2016"}, {"title": "programmatically access warnings errors rendering", "body": "let say component proptypes want ensure contract broken test unfortunately nt throw error display warning statement like warning statement available thus able alter test thus ensuring contract maintained", "num": "6051", "d": "2/2016"}, {"title": "breaking change testing events", "body": "test passing context selectchange function var eventstub var rendered assertion last line failing seems related change perhaps cleaning error objects next tick mean time work around", "num": "6050", "d": "2/2016"}, {"title": "oncancel event", "body": "nt see event list supported events would possible add list used dialog element already available chrome", "num": "6049", "d": "2/2016"}, {"title": "following npm getting started guide incomplete results errors", "body": "decided try react today began following getting started guide using react npm unfortunately unable get example running first problem encountered missing html file scavenged lower page adapted however loaded file html page received following error browser console step missed somewhere", "num": "6047", "d": "2/2016"}, {"title": "property key allowed", "body": "heads anybody going debugging hell fancy component eg think smart passing prop named component set know one react complains needing multiple elements level undefined within component key ref reserved words allowed passed props renaming prop resolves issue bad react nt warn many things would great would reflected prominently docs reserved names similar", "num": "6045", "d": "2/2016"}, {"title": "failed execute write document", "body": "try something like react example append embedcode render return examplejs like raise error failed execute write document insert script tag like react", "num": "6043", "d": "2/2016"}, {"title": "react lenient returning jsx expression render", "body": "random hello react fiddle plucked google var hello reactcreateclass render function return hello thispropsname reactdomrender documentgetelementbyid container reference suppose formattingstylistic purposes want format inline return expression like var hello reactcreateclass render function return hello thispropsname reactdomrender documentgetelementbyid container react throws invariant violation put actual expression new line instead line return statement reference react made lenient example allowed react version referenced fiddles", "num": "6042", "d": "2/2016"}, {"title": "async routes cause serverside checksum invalid error", "body": "note may issue react router instead please inform notify using webpack reactrouter react got error using reactrouter async routes serverside rendering routescjsx coffee routes path game getcomponent location cb gt requireensure require gt cb null require viewsgame change longer get error coffee routes path game getcomponent location cb gt cb null require viewsgame bug something else", "num": "6041", "d": "2/2016"}, {"title": "dangerouslysetinnerhtml warn markup invalid", "body": "expects valid sanitized markup library like may able guarantee markup sanitized spot many obvious errors indication markup unsanitized things like instead per also good thing warn catch subtle ssr markup checksum issues markup nt validate warn tricky part nt want markup validation library required production build", "num": "6040", "d": "2/2016"}, {"title": "use mixed arrays strings warning", "body": "js var hello reactcreateclass render function return thispropsname reactrender working gt documentbody warning jsfiddle", "num": "6038", "d": "2/2016"}, {"title": "libraries version jquery marked old tutorial", "body": "seeing indexhtml found libraries jquery marked version old jquery latest version version indexhtml marked latest version version indexhtml nt update libraries", "num": "6036", "d": "2/2016"}, {"title": "dynamic pure components reinitialized despite key attribute using jsx", "body": "hello using pure components generating dynamically registers change react diffing algorithm despite key attribute therefore components state ex focus resets rerender example expect weird way using components example function internal work assign state event handlers form components returns bound components array additional props provided assigned using destructuring case functions return input controls stateevent handling work bit repetitive depending number fields lot trying new ways extracting components used elements diffed get reinstantiated time lose focus key stroke alternatively write view portion follows everything works fine since components functions bit odd looking especially considering old deprecated component syntax suspect issue something changed way appreciate help thanks", "num": "6035", "d": "2/2016"}, {"title": "extending reactdom", "body": "would like create renderer extends reactdom overrides parts goal able keep reactdom swap parts ultimately since reactdom buried inside react created script downloads reactdom files created jscodeshift transform rewrites imports files like customize fun seems react bring significant changes regarding reactdom react separation work around end custom try render something custom get error since injection called custom injection possible missing something suspect global tying things somehow ca nt figure created repo little experiment", "num": "6033", "d": "2/2016"}, {"title": "profile attribute supported", "body": "profile missing meanwhile profile attributes standards kind blatant copy hey worked also anticipating need glance mozilla developer site one day closed wo nt issue anymore", "num": "6029", "d": "2/2016"}, {"title": "render reconciliation causes npe", "body": "view controlled select onchange event fires resulting function actually changes view removing select get error reproduced react also noticed nt get error older version line throws reactdomselect javascript function handlechange event var props thiscurrentelementprops wrapper state null var returnvalue linkedvalueutilsexecuteonchange props event thiswrapperstatependingupdate true wrapperstate null executeonchange happens reactupdatesasap updateoptionsifpendingupdateandmounted return returnvalue able see fix similar situation nt know similar check could applied maybe nt remove select result onchange event", "num": "6027", "d": "2/2016"}, {"title": "optional href property removed render set empty", "body": "optional specific meaning set without value ie vs former link back current uri latter placeholder link especially irksome react app unexpectedly set easily change meant full page reload fiddle demoing bug see rendered instead", "num": "6026", "d": "2/2016"}, {"title": "getting started docs ambiguous", "body": "working user new would run following nt work webpack throws error correct webpack invocation know note default react development mode slower advised production use react production mode set environment variable nodeenv production using envify webpack defineplugin example new webpackdefineplugin processenv content go filename", "num": "6025", "d": "2/2016"}, {"title": "reactjs app wo nt run android webview", "body": "getting following error upon loading app runs well modern browsers pcmac ios uiwebview mobile safari android also chrome android gt consulting table shows android supports well run reactjs applications fine ideas", "num": "6024", "d": "2/2016"}, {"title": "setters preserved reactcreateclass", "body": "setters ignored work class syntax would nt possible create component class object given preserve settersgetters", "num": "6023", "d": "2/2016"}, {"title": "respondereventplugin assumes touch events", "body": "based comment implemented dragndrop browser respondereventplugin worked like charm upgrading breaks plugin problem assumption plugin used touch events besides plugin referencing touch events throughout code breaking line expects properties enabling also breaks reactbrowsereventemittertest multiple tests break adding respondereventplugin commenting call appears fix plugin like continue using plugin concerned longer intended used use case expected reactnative configurationconcept missing nt tested releases believe case", "num": "6021", "d": "2/2016"}, {"title": "porting reactperf new devtools api", "body": "concerns heard order importance gated react native wants way enable production builds pass accumulated info systrace often broken refactoring appears generic depends specific module method names obscure bugs hard fix coupling visualization poor working new devtools api align mistaken please let know started introducing new set apis firstclass instrumentation makes sense transition new api fix issues talked people react native understand far asap want remove function wrapping completely addresses somewhat mitigates overhead fixing want create devtool like eg addresses unlike gated addresses methods profiling functions addresses granular methods specific parts react lifecycle needed addresses calls gated runtime flag eg addresses future rather reach profiled functions accept arbitrary arguments addresses would separate generating usermeaningful data accumulation would easy test addresses bonus use noop decorator babel plugin insert calls mitigates pain potential breakage addressing bonus rather api provide component interprets data displays overlay web native addresses decorator babel plugin part one sure would involve complicating tooling hand allow adding performance measurement functions codebase without risking early missing calls similar breakage refactorings first actionable step opinion would remove function wrapping gate existing replace explicit calls gated wherever used would still pass function argument rewrite everything would give rn team freedom unlock future refactorings also combine introducing decorator babel transform way want go avoid adding manual calls place make sense missed", "num": "6015", "d": "2/2016"}, {"title": "input rerender happen expected value null", "body": "building app series singlecharacter text inputs auto advances input app syncs data servers input one list characters null minimal demo illustrate happening const clearedvalue null const component reactcreatecomponent getinitialstate function return myinputvalue clearedvalue validateinput function value return value valuematch g getstorablevalue function value value return clearedvalue return value onchange function e consolelog onchange event fired thisvalidateinput etargetvalue consolelog onchange event accepted thissetstate myinputvalue thisgetstorablevalue etargetvalue else consolelog onchange event rejected epreventdefault render function return notice clear field type anything valid onchange fired suspect something culprit since tells react component nt controlled nt know rerender input correct state changing empty string corrects issue issue really nt want convert nulls empty strings since data server nulls intentionally obviously nothing stopping getinputvalue function thisstatemyinputvalue null return return thisstatemyinputvalue return workarounds discussion tell input element controlled avoiding constant lt null conversion would ideal situation since lot moving parts app may times per render definitely edge case multicharacter input validation second character would kick validation would good", "num": "6014", "d": "2/2016"}, {"title": "closer control reconciliation", "body": "running use case nt seem supported react using redux reactredux example problem could potentially extend component takes children trying build set components independent one another point included page script tags component stateless component container connects redux store const widget data update gt data data const widgetcontainer connect state gt data statedata dispatch gt update val gt dispatch type update payload val widget redux store present welldefined location want render component way store present want render way written helper functions generic way initially render component target dom node store becomes present fires event helper functions listening render container component wrapped target dom node works great dom state however want allow user interact widget store present instance example able enter text dom state persist rendered place currently possible due react reconciliation algorithm two components different react attempt reconcile subtrees relevant code causes existing node thrown away along anything user may typed way tell react want two components reconciled foreknowledge generate identical dom structure want know workaround issue nt valid enough use case consider adding way force react reconcile two elements different one potential solution may infeasible due unfamiliarity codebase consider two elements different identical candidates reconciliation", "num": "6013", "d": "2/2016"}, {"title": "svg clippath wrong namespace", "body": "hi svgclippath created dynamically ie via button click wrong namespace details press button test use react latest react thought work thanks pull request see added works ok", "num": "6012", "d": "2/2016"}, {"title": "link expired", "body": "hi link got expired update", "num": "6010", "d": "2/2016"}, {"title": "remove event listener used bind syntax", "body": "trying communicate iframe postmessage api issue eventlisteners management stated docs react every method automatically bound component instance except using class syntax problem done event ca nt remove listener ca nt keep reference handler could try encapsulate function encapsulating function would also need binding could try super constructor sure good idea plus nt know args need quite sure missing important point help would much appreciated export default class somecomponent extends component handleiframedata event stuff need set component context get props example componentdidmount windowaddeventlistener message thishandleiframedatabind false componentwillunmount wo nt work thishandleiframedatabind thishandleiframedata windowremoveeventlistener message thishandleiframedata false render return thanks anyway", "num": "6007", "d": "2/2016"}, {"title": "reactcloneelement onclick work", "body": "hi im trying add onclick handler already existing element example jsx render let element return reactcloneelement element onclick function consolelog test result nothing happens click element setting directly works", "num": "6006", "d": "2/2016"}, {"title": "defer execution unmount life cycle hooks", "body": "unmounting take significant unbounded time traverse tree call lifecycles smallest problem incremental reconciliation mount arbitrary location gt update boundary gt mount boundary gt unmount theory remove node tree first call lifecycles later idle time means refs wo nt access nodes document anymore reading information would longer work problem space might also related animations exit animations want componentnode exist tree long needs finish animation offscreen asynchronously get deleted tree eventually get cleaned calling unmount lifecycles", "num": "6003", "d": "2/2016"}, {"title": "fails called spec created", "body": "hi react team right following code fails fails function called references created nt regular prototype methods like patch fixes issue let know based explanation agree worth fixing submit pr motivation fixing experimenting building react bindings language called skew skew compiles javascript among languages maptype skew compiles instances skew code translates roughly sensible need map inherit skew like able something like regular function defined react library fails passes skew map javascript instead something like wrap input something inherits passing real works means api wo nt mirror react directly means harder people learn", "num": "6002", "d": "2/2016"}, {"title": "eventpersist present running tests", "body": "nt seem give event function result event handler debouncedthrottled becomes null actual handler called", "num": "5998", "d": "2/2016"}, {"title": "console shows error uncaught invariant violation", "body": "making app based boilerplate ref gist app building fine console shows error uncaught invariant violation element type invalid expected string builtin components classfunction composite components got undefined", "num": "5995", "d": "2/2016"}, {"title": "license offline use", "body": "hi react utilized offline commercial product free needs done license file cryptic understand xdvarpunen", "num": "5993", "d": "2/2016"}, {"title": "visit official site writing language default english", "body": "visit link gettingstarted english page read page writing language", "num": "5991", "d": "2/2016"}, {"title": "updates queued properly using unstablerendersubtreeintocontainer", "body": "cursor jump end text field editing text probably nt need fixed milestone get fixed point cc jquense", "num": "5990", "d": "2/2016"}, {"title": "pull request htmltojsx", "body": "hi put pull request htmltojsx reactmagic fix improperrenderingofbrackets issue days ago wondering typical timeline reviewing cheers", "num": "5985", "d": "2/2016"}, {"title": "chrome dev tools warning reactdomcomponent access props dom node", "body": "created component uses ref attribute read width height dom node looks like javascript import styles makewrappercss import react component react import makeheader makeheadermakeheader import makebarchart makebarchartmakebarchart export default class makewrapper extends component render return resize width height offsettop offsetleft thispropsonresizemakewrapper width height offsettop offsetleft everything looks good open chrome dev tools look properties div element get following warning console warning reactdomcomponent access props dom node instead recreate props render originally read dom propertiesattributes directly node eg thisrefsboxclassname dom node rendered message actually shown twice console also noticed two different properties exists might causing error show twice chrome looping dom properties something wrong code side effect using chrome dev tools", "num": "5984", "d": "2/2016"}, {"title": "error boundary catch errors componentwillunmount", "body": "", "num": "5983", "d": "2/2016"}, {"title": "finddom audio tag nt work", "body": "assuming audio tag correctly playing audio file currenttime seconds run following code output console replace first line everything works expected beginning thought deep copy issue would nt explain consolelog inside try", "num": "5981", "d": "2/2016"}, {"title": "error boundaries attempting unmount notyetmounted siblings", "body": "shows failing component composite sibling within error boundary yet rendered", "num": "5980", "d": "2/2016"}, {"title": "componentdidmount called visual rendered", "body": "trying get visual attributes width precise component rendered css applied trying width still sure wrong output click header button reroute back page ie trigger update called proper width missing something bug thanks lots folks javascript import react component react export default class ribbonheader extends component componentdidmount consolelog component mount ribbon width thisrefsribbonsvgwidthanimvalvalue thispaintinsvg shouldcomponentupdate consolelog component update never called return true componentdidupdate automatically called generate routing event updates consolelog component update ribbon width thisrefsribbonsvgwidthanimvalvalue width good thispaintinsvg paintinsvg const refribbon thisrefsribbonsvg dosomesvgmagicthatdependsonthewidth refribbon render consolelog rendering edit adding timeout componentdidmount job although probably normal", "num": "5979", "d": "2/2016"}, {"title": "defined", "body": "class trying get request componentdidmount function however initially load page component get following error followed example xxx changed perhaps using something improperly class nativeapp extends reactcomponent state banners loadbanners thisserverrequest get apibanners function res thissetstate res bind componentdidmount thisloadbanners render return manually load banners export default nativeapp", "num": "5975", "d": "2/2016"}, {"title": "react reactdom split proposal", "body": "following bit planning understand reactdom split completely react shared global owner referenced sebmarkbage gist relevant part owner owner concept relies able track shared global state flag time creating elements means create dependency single shared global stateful module react components also means effectively react render function truly pure function since creating element depends global state idempotent means ca nt reliably use things like memoized functions kind functional goodies react native currently appears migration path following two files reactlibreactnativejs reactlibreactdomnativejs solutions need way share module rn get free understand works correctly future npm solution reactdom apply rn react reactdom npm distro shared npm module accomplish shared dependency react reactdom browser distro likely need similar hack current first two pretty straightforward create new package purely file split published never changed add react reactdom packagejson files publish fin carry browser distro need custom build files current idea react browser distro gets hook reactdom hook onto majority purely chore work curious would provide attack vector leaking internal state current reactdom hook leak internals far aware although may important since reactdevtoolshook also allows visitor react page get internal state continuing work proposal make sense alternative solutions team considered", "num": "5974", "d": "2/2016"}, {"title": "touch events android", "body": "hello touch events android nt working using react according issue fixed still working ideas", "num": "5972", "d": "2/2016"}, {"title": "docs run demo code get false true docs", "body": "doc code test comes false somebody help", "num": "5971", "d": "2/2016"}, {"title": "include sri hashes fbme links download page", "body": "need little bit hard code since actually want generate release time could least manually generate hashes need docs display sri", "num": "5970", "d": "2/2016"}, {"title": "uiexplorer crash", "body": "execute gradlew examples uiexplorer android app installdebug open uiexplorer app crash crash log reacttxt", "num": "5969", "d": "2/2016"}, {"title": "typeerror set property initialvalue null reactdomselectpostupdatewrapper", "body": "issue using latest running issue error select navigating away one place another place causing select throw even though unmounted error reports happening setup currently integrating app pieces render empty container renders components render appropriate dom containers seemingly error narrowed calling occurs removed error stops happening realize mounting existing node react root cause unmount mount correct things repro attempted reproduce luck moment even though narrowed call click originating different reactdomrender container sure eventing thing clicks different reactdom roots applying everywhere else stack trace code code causing issue looks like import react component proptypes react import render unmountcomponentatnode reactdom import provider reactredux import applicationsrenderer applications let getcontainer gt documentgetelementbyid dashboardbody export default class dashboardrenderer extends component constructor props context super props context thisrenderintocontainer thisrenderintocontainerbind componentdidmount thisrenderintocontainer renderintocontainer let store container container thispropsroute let router thiscontext thissection getcontainer thissection unmountcomponentatnode thissection render thissection componentdidupdate prevprops let container thispropsroute let container prevcontainer prevpropsroute componentwillunmount unmountcomponentatnode thissection render return null dashboardrenderercontexttypes router proptypesobject", "num": "5968", "d": "2/2016"}, {"title": "", "body": "looking tests stating nt get fired click button disabled nt seem shown anywhere documentation slightly tangental parent element somebody clicks button fired parent element", "num": "5967", "d": "2/2016"}, {"title": "attributes set ssr used", "body": "maybe nt care attributes currently set ssr used sure worse old behavior different initial render compared subsequent renders could tricky one people debug hit since depends subtle difference ssr vs csr imagine people frequently fail test components ssr difference likely catch surprise", "num": "5966", "d": "2/2016"}, {"title": "bug jsx allow tag use property", "body": "node ver babel deps babelcli babelcore babeleslint babelloader babelpluginaddmoduleexports babelpolyfill babelpresetreact babelpresetreacthmre seems cause custom html tag", "num": "5964", "d": "2/2016"}, {"title": "validate attributes element", "body": "mistakenly used attribute style element html label required color red soon found attribute removed running code attribute still element realize attribute standard attribute elements like etc think allowed render component mount phase like arbitrary names xyz else cause people confusion notice solves problem flag rendered component mount removed correctly inconsistent attributes selectchecked rendered react validate attributes element like", "num": "5963", "d": "2/2016"}, {"title": "jquerybootstrap example uses exist", "body": "introduced", "num": "5959", "d": "2/2016"}, {"title": "enhancement build way generate function sets state variable", "body": "created mixin morning handle creating functions call setstate component mounted would nice built react component since think pretty common pattern handle ui events setting state variable", "num": "5958", "d": "2/2016"}, {"title": "bug resolving default props htmlallcollection fix", "body": "introduction found bug resolving default props component props property htmlallcollection react ignores value uses default value take collection look end topic simple function test internet explorer version lower simple use case chromefirefoxmodern ie yeah know returns htmlallcolection documentall old ie returns true htmlallcollection weird collection source bug fix release file reactjs line code bug typeof props propname undefined code fix props propname undefined btw undefined faster typeof undefined chrome ie reproduction open firefox chrome higher fiddle raw workaround change", "num": "5957", "d": "2/2016"}, {"title": "nesting components fails latest stable react typescript amdrequirejs", "body": "currently working example project uses latest react typescript using tsx files together amd module loading system requirejs buildingrunningdebugging visual studio ce however try nest react components parent react component getting exceptions requirejs running app child react components working fine individually problem really seems come nesting run project using older version react using amd modules app works fine also nesting react components made test repository public hellopenguin old project using react using amd new project latest react using amd remove lines applicationviewtsx see app runs fine individual react components also work fine must something overlooking ca nt seem pin anyone know could wrong fix problem thanks", "num": "5956", "d": "2/2016"}, {"title": "add new without namespace", "body": "list elements push new elements added without namespace ideas", "num": "5954", "d": "2/2016"}, {"title": "controlled inputs update order causing cursor jump", "body": "subtle change introduced dominput component switched current lighter weight wrappers order ensure things like nt happen inputs defer update updates flushed controlled gives incoming props chance make component inadvertently resets value last essentially old set dom node new chance pushed input props causes cursor jump end originally seen addressed however recent changes removed call directly difference enqueues update queue whereas updatewrapper leads cases input actually updates parents finished updating related issue however cause nothing actually async relevant userland implementations uncontrolled components create situations parent component input also deferring update tried bit put together pr address nt know easy fix long domcomponent using something like test case demonstrating bug expected set manually set actual set js var wrapper reactcreateclass eventuallyupdate e thisvalue etargetvalue render return var inst reacttestutilsrenderintodocument var inputnode reactdomfinddomnode instrefsinput var setcount inputnodevalue bar var desc objectgetownpropertydescriptor inputnodeconstructorprototype value objectdefineproperty inputnode value get function return descgetcall set function val setcount descsetcall val reacttestutilssimulatechange input target value bar expect setcount tobe", "num": "5952", "d": "2/2016"}, {"body": "pinged cpojer look might want downgrade jest meantime", "d": "2/2016"}, {"body": "mean use get error message get filtered fail subtle ways specifically issue would helpful provide minimal testcase jsfiddle feel free fork describes expected behavior demonstrates actual behavior differs", "d": "2/2016"}, {"body": "entirely clear mean child elements showing anything componetwillrecieveprops componentdidupdate tried pulling code jsfiddle nt run missing setup code among things anyway looks like probably usage question use github track bugs react core rather usage questions appropriate place usage questions stackoverflow going close issue feel free continue conversation thread move discussion stackoverflow provide jsfiddle demonstrates bug react core happy reinvestigate", "d": "2/2016"}, {"body": "sorry explain prop called data initially set data thisstatedata executed first shows props values thisstatedata change parent element shows nothing child element normally componentwillreceiveprops work prop changes share entire code call react wizard import react component react import reactwizard reactwizardjs class autoplaylistvideo extends component constructor super openautovideomodal addautovideoform modal show render return video play lists create class theadelement extends component constructor super render let theadtitles var titlevalues thispropsheadingssplit titlevalueslength gt theadtitles titlevaluesmap function value index return return theadtitles class tbodyelement extends component render return class createautoplaylistmodal extends component constructor super thisstate data render export default autoplaylistvideo react wizard component use stricts import react component react import reactwizarditem reactwizarditemsjs import categorystore storecategorystorejs import subcategorystore storesubcategorystorejs class reactwizard extends component constructor props super props thisstate childitems step styleclass null category null data thisdivstyle thisdivstylebind thischangestep thischangestepbind thisupdatewizard thisupdatewizardbind componentwillmount thisupdatewizard updatewizard var wizarditems thissetstate childitems wizarditems thisforceupdate componentdidmount thissetstate styleclass thisdivstyle thisstatestep divstyle step return width thisstatechilditemslength px transform translatex step px render var currentbutton switch thisstatestep case currentbutton prev cancel next next prevclass btndefault nextclass btnprimary break case thisstatechilditemslength currentbutton prev back next finish prevclass btnprimary nextclass btnsuccess break default currentbutton prev back next next prevclass btnprimary nextclass btnprimary break var childitems thisstatechilditemslength gt childitems thisstatechilditemsmap value index gt return var currentstep thisstatestep return childitems next current var var currentstateelement datawizard current find formcontrol var currentdata var currentstatedate thisstatedata currentstateelementval currentdata currentstateelementattr name currentstateelementval var newobject extend currentstatedate currentdata thissetstate data newobject switch current case thischangestep thisstatestep break case thisstatechilditemslength thischangestep thisstatechilditemslength break default thischangestep thisstatestep break prev current var switch current case thischangestep break case thisstatechilditemslength thischangestep thisstatechilditemslength break default thischangestep thisstatestep break changestep step thissetstate step step styleclass thisdivstyle step export default reactwizard react wizard child components created sibin import react component react import categorystore storecategorystorejs import subcategorystore storesubcategorystorejs var reactwizarditem class reactwizarditemstart extends component constructor super thisstate categories null componentdidmount thissetstate categories categorystoregetcategories render var mycategoriesr null thisstatecategories null mycategoriesr thisstatecategoriesmap function value index return return category select mycategoriesr reactwizarditemstart reactwizarditemstart class reactwizarditemcenter extends component constructor props super props componentwillreceiveprops nextprops consolelog nextprops consolelog props updated componentwillupdate consolelog run state changes render consolelog render return subcategory select reactwizarditemcenter reactwizarditemcenter class reactwizarditemfinish extends component render return playlist reactwizarditemfinish reactwizarditemfinish export default reactwizarditem", "d": "2/2016"}, {"body": "mini project minimal example appear using extensions like could certainly contribute lifecycle weirdness repro little complex see going first glance clear bug react something else going create minimal repro within masterfuture jsfiddle would help us identify issue base jsfiddle includes use starting point", "d": "2/2016"}, {"body": "polyfilled", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "seems reasonable inlined couple places short probably", "d": "2/2016"}, {"body": "zpao point places maybe time use polyfill instead inlining", "d": "2/2016"}, {"body": "discussion elsewhere least time trying avoid another polyfill", "d": "2/2016"}, {"body": "absolutely makes sense extra network request library bytes gzipped bytes aims keep postsplit compatibility version since still support warning standalone react build include reactdom avoid breaking people updated code yet since want duplicate code use trick reexporting hidden export old new code works however next versions support old anymore deprecated ongoing work really splitting two packages track split bytes anymore", "d": "2/2016"}, {"body": "gaearon true even move code around still eating second round trip apparent reason common case user want iff using makes sense default packaged together notable counterexamples like reactart people using commonjs anyway deduplicate easy make argument bundled default", "d": "2/2016"}, {"body": "thanks explanation however seems little harsh requests could divide scenarios present time discussion separation terms deployments make sense could well remained library exported separately future user scenarios pretty much almost always browser libraries going taken even including redirects take place mention longer relevant however seem prudent deployment option include single unit", "d": "2/2016"}, {"body": "jimfb prasannavl yeah definitely seeing points hand feels like different packaging commonjs umd might get really confusing", "d": "2/2016"}, {"body": "yeah could maintain api export react reactdom mentioned thread going close thread favor reopening", "d": "2/2016"}, {"body": "would awesome one day might change way look languages pattern open pull request ideally could find another native spanish speaker could review translations would help us ensure quality lot docs get updated may want find people help working branch fork commit review would recommended workflow go route", "d": "2/2016"}, {"body": "would code spanish", "d": "2/2016"}, {"body": "going traditional spanish yes going use different locale use appropriate code eg", "d": "2/2016"}, {"body": "thanks", "d": "2/2016"}, {"body": "montogeek maybe join efforts inside org mantain docs people think enough spanish community need etc", "d": "2/2016"}, {"body": "spanish community countries speak spanish language spain", "d": "2/2016"}, {"body": "hi paul hola montogeek montogeek bjrmatos would love help translatereview spanish docs based nyc come mexico would love contribute making react accessible hispanos", "d": "2/2016"}, {"body": "yes truth community need translate eses", "d": "2/2016"}, {"body": "hi could help guys count make space tomorrow", "d": "2/2016"}, {"body": "keeping translations uptodate ongoing effort rather actionable issue nt need separate issue track language tracking improved translation management going close issue valuable discussion please continue discussion thread move discussreactjsorg", "d": "2/2016"}, {"body": "lucyorbach foxplatevevo normancarcamo feel free comment", "d": "2/2016"}, {"body": "sorry forgot mention montogeek sweatsmile", "d": "2/2016"}, {"body": "yes technically however nt like static getters avoid one reason nt match behavior static properties getter could something mutative allocating call could return different things time nt match expected behavior preferred syntax property initializers spec reached point standardization process comfortable recommending documentation", "d": "2/2016"}, {"body": "please suspecting issue end never seen hidpi anything special would love proven wrong", "d": "2/2016"}, {"body": "zpao jimfb created demo application attempt recreate issue using identical code app issue replicated possibly due dependency configuration process go ahead close", "d": "2/2016"}, {"body": "try include name object currently rendering ensuring components important warnings also throw catch error turn pause caught exceptions option js debugger inspect stack bit getting exact line number probably something want follow along going close nt anything else actionable nt tracked elsewhere", "d": "2/2016"}, {"body": "fixed fix site next minutes", "d": "2/2016"}, {"body": "entirely sure trying think looking experimentalunstable feature undocumented look unit tests source code find info use github track bugs react core rather usage questions appropriate place usage questions stackoverflow usage question duplicate something like going close issue feel free continue conversation thread move discussion stackoverflow", "d": "2/2016"}, {"body": "jimfb oh cool thanks letting know", "d": "2/2016"}, {"body": "use github track bugs react core rather usage questions appropriate place usage questions stackoverflow usage question going close issue feel free continue conversation thread move discussion stackoverflow regards question roughly speed want superaccurate results benchmarking use case data", "d": "2/2016"}, {"body": "warn call setstate getchildcontext", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "reproduced error console", "d": "2/2016"}, {"body": "good way start", "d": "2/2016"}, {"body": "raineroviir find places called places defined warn called think already basically thing calling within use thing copy", "d": "2/2016"}, {"body": "ok thank", "d": "2/2016"}, {"body": "give pointers stuck figuring whether called tried got type error trying access context nt revealed clues either warning code shown trying within shows pretty simple predicate warning curious try well", "d": "2/2016"}, {"body": "getchildcontext might immediate caller wo nt work going need set state getchildcontext already warn users call setstate render take look code", "d": "2/2016"}, {"body": "reactcurrentownercurrent set getchildcontext call looks like currently seen", "d": "2/2016"}, {"body": "danweaver think set owner render", "d": "2/2016"}, {"body": "fyi worked", "d": "2/2016"}, {"body": "appears work latestfuture fiddle desired behavior", "d": "2/2016"}, {"body": "yes indeed seems fixed fiddle show code working button", "d": "2/2016"}, {"body": "ok thanks going close fixed master", "d": "2/2016"}, {"body": "workaround backport expect stable", "d": "2/2016"}, {"body": "issue nt actually supported property nt mean anything support focused valid case anchor tags set anchors property linked attribute happens buttons changed default use attribute things stable soon ultimately though case would generally argue use attributes really need read data dom even better would write code nt write read dom nodes instead manage state component", "d": "2/2016"}, {"body": "aha right realise href actually standard button attribute thanks lot clarification", "d": "2/2016"}, {"body": "looks like already fix master edit load page without need", "d": "2/2016"}, {"body": "correct fixed", "d": "2/2016"}, {"body": "great question stackoverflow bug tracker bugs", "d": "2/2016"}, {"body": "thanks yaycmyk", "d": "2/2016"}, {"body": "running seems work fine react repository looks like running tests repository may providing sufficient test isolation tests provide minimal sequence calls react demonstrate bug react reinvestigate", "d": "2/2016"}, {"body": "using mock global object whatever using passing execution env check probably needs add well", "d": "2/2016"}, {"body": "creating component probably least much overhead using bind choosing two options personally use bind point one solution define constructor nt rebinding render problem binding event component event might passed via component api app attaches event handler bar would expected value naturally would want instance app ca nt instance app since react way knowing app ultimate source event handler handler passed along thus think model proposed broken general case going use one workarounds described", "d": "2/2016"}, {"body": "conceptually agree however proptypes mostly legacy maintenance mode replaced tools like flow probably worth api churn feature legacy", "d": "2/2016"}, {"body": "duplicate", "d": "2/2016"}, {"body": "red errors say", "d": "2/2016"}, {"body": "jimfb says object nt support property function", "d": "2/2016"}, {"body": "jacty print page also url post results please assume exposed polyfill truly native simulated", "d": "2/2016"}, {"body": "show little devtools screenshot document mode visible like say standards guessing one properly set", "d": "2/2016"}, {"body": "syranide spicyj thank allhere pic snapshot could get documentmode console write code log documentmode reactdomjs get nothing red errors think something leads errors blocks code loging documentmode", "d": "2/2016"}, {"body": "nt know would probably digging figure going want fixed since nt heard anyone else hitting anything like", "d": "2/2016"}, {"body": "question returning boolean", "d": "2/2016"}, {"body": "came facebookreact discussed reactjsreactfuture", "d": "2/2016"}, {"body": "ah ok sorry guys good point tundrax", "d": "2/2016"}, {"body": "pen appears demonstrate react triggering correct time least browser chrome browserversion using", "d": "2/2016"}, {"body": "chrome stable suggesting increasingdecreasing value using arrows cast change event input one", "d": "2/2016"}, {"body": "ah ok event firing native event different type reason listen native event want fire character typed unlike input event change event necessarily fired change element value details sometimes call change handler underlyingnative change event pass thus reason always pass input event instead want change event oppose input event", "d": "2/2016"}, {"body": "actually want handle way done natively ie changing value clicking arrows bluring possible things without adding native listener", "d": "2/2016"}, {"body": "want handle onchange way done natively ie changing value clicking arrows bluring rarely intendeddesired behavior people generally want onchange fire time change current behavior always add native listener want bail get behavior escape hatches going close intended behavior bug therefore nt anything actionable feel free continue discussion thread reopen thinking matter changes dramatically", "d": "2/2016"}, {"body": "thank responses jimfb resolve suggest passing native listener", "d": "2/2016"}, {"body": "like take", "d": "2/2016"}, {"body": "aprilarcus let know questions", "d": "2/2016"}, {"body": "cool", "d": "2/2016"}, {"body": "think asking closing duplicate", "d": "2/2016"}, {"body": "spicyj think optout grab ref set contenteditable attribute imperatively reason need something mind", "d": "2/2016"}, {"body": "devonly warning also prod also prod perhaps limiting dev would enough", "d": "2/2016"}, {"body": "devonly", "d": "2/2016"}, {"body": "see also", "d": "2/2016"}, {"body": "thanks closing one primary motivation", "d": "2/2016"}, {"body": "intentional though nt remember reasoning hand maybe spicyj remembers iirc might dead code elimination wrapping warning call block avoid invoking noop function outside module makes code path easier optimize many cases block necessary anyway want avoid work like warning deduplication logic creating values print error message warning never going shown", "d": "2/2016"}, {"body": "yes warning calls completely eliminated minifier", "d": "2/2016"}, {"body": "ahh makes perfect sense thanks", "d": "2/2016"}, {"body": "entirely sure asking looks like usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue feel free continue conversation move stackoverflow regards specifics code mentioned using aware native events synthetic events nt play nicely together may work case pattern generally avoided going shoot foot going deprecated recommendation set directly entirely sure mean select tag stateselectvalue changed one time think found bug react please create simple jsfiddle demonstrates issue using onchange handler reinvestigate", "d": "2/2016"}, {"body": "jimfb tnx answer describe situation sure bug going depricated nt think following investigation needed", "d": "2/2016"}, {"body": "recommended architecture flux facebook uses backend called relay use github track bugs react core rather usage questions appropriate place usage questions stackoverflow usage question going close issue feel free continue conversation thread move discussion stackoverflow", "d": "2/2016"}, {"body": "thank following detailed response jimfb ca nt really use stackoverflow community would attack everything say glad kind enough answer question thank", "d": "2/2016"}, {"body": "mixed content page loaded https requested insecure script request blocked content must served https edit", "d": "2/2016"}, {"body": "fixed", "d": "2/2016"}, {"body": "thank", "d": "2/2016"}, {"body": "solution storeinput inputname inputvalue const state thisinputs thisinputs inputname inputvalue thissetstate state form stateform thisinputs", "d": "2/2016"}, {"body": "use github track bugs react core rather usage questions appropriate place usage questions stackoverflow usage question going close issue feel free continue conversation thread move discussion stackoverflow", "d": "2/2016"}, {"body": "executed component parent grandparent rerendered rerender component want also use github track bugs react core rather usage questions appropriate place usage questions stackoverflow usage question going close issue feel free continue conversation thread move discussion stackoverflow", "d": "2/2016"}, {"body": "duplicate", "d": "2/2016"}, {"body": "first glance actually seems pretty clever cc sebmarkbage vjeux", "d": "2/2016"}, {"body": "essentially transition group except one nt allow abstraction child hierarchy control animation consequently want something like however parent parent aware stage thing still alive nt delete set completion propagation mentioned make work would also need kind completion propagation parent know child supposed remain undeleted safe remove parent also happens key gets restored still happening components eg parent allowed update state happening something like api certainly something need dependent complexities make work", "d": "2/2016"}, {"body": "sebmarkbage good point restoration thinking safe assume reattached component cancel ongoing unmount preparation ignoring continuecallback called one following imitate mount procedure ultimately triggering componentwillmount etc seems bit aggressive though made think component instead gets updated like react update though special follow another lifecycle method would give granularity customize event although scenarios probably run code", "d": "2/2016"}, {"body": "probably component also needs know removal interrupted animate back previous state", "d": "2/2016"}, {"body": "sebmarkbage amended proposal addressing issues mentioned", "d": "2/2016"}, {"body": "nt essentially deduce component child finished animating calls ie tells parent delete list children perhaps missing something sounds like suggested possible design reusable baseclassmixinwhatever today issue recommends core instead parents needs keep track children removed also keep rendering somehow handled transparently generic case one also provide abstraction simplifying dealing even hiding", "d": "2/2016"}, {"body": "syranide true achieve result ways another great way use reacttransitiongroup addon solution wrapping logic required idea proposition able perform unmount transition solely using component wrapping also explain handled transparently generic case", "d": "2/2016"}, {"body": "also explain handled transparently generic case parent simply stop rendering child still child remain rendered animating least child ordered among children without child actively rendered information simply available react consider three children removed starts animating away new child added rendered implicit removed placed information available unless parent still rendering entirely removed rendering unless missing something proposal requires mine one way another transparent parent seems core nt actually provide obvious benefit edit solution wrapping logic required solution require wrapping logic requires child extend different base class apply mixin unless want reimplement shared logic every time", "d": "2/2016"}, {"body": "chenglou thought lot resulted reactmotion found thoughts animation quite insightful", "d": "2/2016"}, {"body": "discussions sebastian thinking issue agree nt elegantly handle edge cases reasons mentioned classic problem proposed solutions animation reason going close issue feel free continue discussion thread reopen thinking changes dramatically", "d": "2/2016"}, {"body": "little hard tell without able run code fragment especially since nt tell us error messageproblem getting assume failing expression assuming case note mixin object accessible going restructure code avoid using context also use github track bugs react core rather usage questions appropriate place usage questions stackoverflow looks like usage question going close issue feel free continue conversation thread move discussion stackoverflow", "d": "2/2016"}, {"body": "yes todo list", "d": "2/2016"}, {"body": "like take crack jimfb imagine warning like full filenameline number warning component name", "d": "2/2016"}, {"body": "mxstbr honestly probably nt greatest first bug first blaze trail providing example replicate desired output would something like welcomed take stab know probably rough time terms code review get idea structure need look want emit event start processing element event operation think event already exists event finish processing element devtool grab source element enabling reactjsxsource use display fileline information part error least would first approach alternate approach process element replicating control logic detects invalid props feels sucky relies two totally separate code paths behavior never getting sync sure approach would ultimately pan preferred", "d": "2/2016"}, {"body": "want emit event start processing element event operation think event already exists event finish processing element need three separate events thought using onsetvalueforproperty add information warning missing", "d": "2/2016"}, {"body": "mxstbr nt access element ca nt access source passing element source would require routing data core internal apis sole purpose warnings nt make sense dompropertyoperations api perspective avoiding one motivations moving warnings devtools want cleanup core internals currently pass data allover place", "d": "2/2016"}, {"body": "fair enough makes sense leave anything might better first bug ping", "d": "2/2016"}, {"body": "mxstbr whole list recommended ones particular jumped", "d": "2/2016"}, {"body": "done closed open pr tleunen reserved keep lookout list though", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "cauburtin also first glance looks like using development build react try reactjsminjs better performance generally try avoid try blocks within production codepaths extent possible performance reasons using try block reset current owner probably go away owners go away", "d": "2/2016"}, {"body": "ok thanks yes dev version saw try statements min version less though ok", "d": "2/2016"}, {"body": "yeah far know necessary find one removed love accept pr", "d": "2/2016"}, {"body": "hiding via css slightly faster downside means domreact tree bigger means reconciliations bigger slower app using memory even tree visible ca nt tell difference two terms performance would recommend unmounting since cleaning memory keeping tree small ultimately usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue takes radar feel free continue conversation move stackoverflow", "d": "2/2016"}, {"body": "thanks response recommendation ca nt notice difference performance yet since app still relatively small go unmount route something wanted make sure figured going apologies posting wrong place keep mind future questions", "d": "2/2016"}, {"body": "works cause memory leaks want behavior unmount unload degrade performance navigating away site", "d": "2/2016"}, {"body": "tab closedpage reloaded whole page destroyed browser memory leak come", "d": "2/2016"}, {"body": "saw leaks firefox event listeners registered component reloads tab memory usage went added cleanup code though fine something added react", "d": "2/2016"}, {"body": "also observed memory leaks firefox independent react clearly browser bugs react bugs syranide correct want waste cpu time unload would degrade performance navigating away", "d": "2/2016"}, {"body": "equivalent thus props become since string property boolean stringified want", "d": "2/2016"}, {"body": "syranide specifying indicate usage error warning", "d": "2/2016"}, {"body": "jimfb saying disagree intentionally stringified react really sure stand personally much prefer type strictness would nt mind warning really js general current behavior also kind logical sense would get passed user component expected string prints concatenates something else js strictly typed would nt problem flow technically handle afaik possible", "d": "2/2016"}, {"body": "saying disagree true intentionally stringified true react agree saying behavior change image probably makes sense actually nt feel super strongly wonder makes sense add warning imgalt props probably bunch others similarly nonsensical", "d": "2/2016"}, {"body": "jimfb applies nonboolean props nonboolean props nt really benefit accepting boolean also kind tricky practice decide draw line booleans strings warning nt number strings warning objects booleans actually leak memory sense would nt mind type strictness nt seem js nt go way type strictness seems really rather arbitrary draw line makes sense kind makes sense", "d": "2/2016"}, {"body": "personally lean favor strict warnings sure rest team feels course dom bunch edge cases probably prevent blanket rule string props general think rule holds", "d": "2/2016"}, {"body": "imho sensible way would value provided browser would browsers decide either obviously happens much going option leads least havoc would way go agree throwing errors cases make sense good thing also think lead worst plain something must always provided rendered prop markup would even partial approach caveats aware", "d": "2/2016"}, {"body": "agree throwing errors cases make sense good thing also think lead worst plain tabindex tabindex tabindex something must always provided rendered prop markup petetnt seems rather arbitrary means jsx treating etc react seems super weird would even partial known attribute value render attribute name markupapproach caveats aware js strings treated numbers anything treated boolean etc different depending types problematic first would whereas second would would even want context current behavior makes lot sense", "d": "2/2016"}, {"body": "syranide sake particular issue talking elements known attributes values attached", "d": "2/2016"}, {"body": "petetnt problem though result jsx transform giving value even though nt explicitly provided transform adds shorthand enabled initial jsx transform carried babel becomes react idea intentional could end firing lot warnings false positives tried determine intent order insert blank string must explicitly going one quirks jsx html", "d": "2/2016"}, {"body": "zpao yeah right guess something live closing feel free reopen ideas", "d": "2/2016"}, {"body": "nt dependency package", "d": "2/2016"}, {"body": "nt require reactdom using reactrender shortcoming rather using reactdom", "d": "2/2016"}, {"body": "deprecated react generic library independent specific frontend ie need use want target dom etc", "d": "2/2016"}, {"body": "syranide correct usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue takes radar feel free continue conversation move stackoverflow", "d": "2/2016"}, {"body": "look within unit tests react repository either way usage question rather bug core usage questions better addressed sites like stackoverflow", "d": "2/2016"}, {"body": "persisting event", "d": "2/2016"}, {"body": "correct api always required events persisted want use outside scope event handler strictly enforced", "d": "2/2016"}, {"body": "think would need added source code", "d": "2/2016"}, {"body": "wanted nt really know category shoul put events used dialog ui category", "d": "2/2016"}, {"body": "goes ui category properties otherwise would probably go category", "d": "2/2016"}, {"body": "jsfiddle dialog element events reference works chrome canary", "d": "2/2016"}, {"body": "fyi subcategory", "d": "2/2016"}, {"body": "npm beast first time try use troubles npm distribution try guide without npm", "d": "2/2016"}, {"body": "maybe add tiny html file npm version", "d": "2/2016"}, {"body": "npm section already getting really long starter pack designed help get started working demos files preconfigured readytogo", "d": "2/2016"}, {"body": "sure think adding would help beginner never worked browserify idea need include file file like normally loc like", "d": "2/2016"}, {"body": "thanks jimfb recommendation got quiet bit experience working npm node browser based applications got zero minutes practical experience react however looks like code may executing prior dom load event simple box method like delay safe manipulate dom like jquery function opinion experienced js developer npm section extremely short compared starter pack viewport versus viewports browser especially since npm example nt work box transition guide using react standard build tool pipelines like npm bower starter pack mxstbr example html file great confirmed problem encountered result script tag child head element opposed body element thanks eager find keep script tag within head element", "d": "2/2016"}, {"body": "think starting browserify idea wrong thing make obvious really thinking completely separate page getting started npm browserify webpack prerequisites get started end immediate distraction issues going close one mean time meschbach step missed probably putting script runs markup need able find node render", "d": "2/2016"}, {"body": "effectively", "d": "2/2016"}, {"body": "makes sense let know help", "d": "2/2016"}, {"body": "thanks pointer zpao incomplete documentation glanced starter pack however nt integrate nicely build system already using npm could tell many know would nt consider started framework using obtained via dependency management system particular tutorial attractive using getting started could begin obtain experience framework using tools otherwise knew yet told inexperienced use tools react little confused issue marked closed documentation nt complete root cause issue despite knowledgable person offering fix incomplete documentation could please explain reasoning behind closing issue may better understand way react uses issues", "d": "2/2016"}, {"body": "meschbach paul already answered said think starting browserify idea wrong thing make obvious really thinking completely separate page getting started npm browserify webpack prerequisites get started end immediate distraction issues going close one mean time specifically read last sentence nt use github issues track usage issuesquestions usage questions better addressed sites like stackoverflow", "d": "2/2016"}, {"body": "since seem two different view points please allow elaborate mine filed issue documentation incomplete since directed github project documentation wrong create issue documentation incomplete resulting error could nt worked around new users additionally searched issues regarding problem prior creating one could nt find others would mind adding references issues", "d": "2/2016"}, {"body": "thinking though got closed pr accident intended longer lived ultimately helpful us hundreds open issues track slight variations issue multiple places gotten aggressive closing issues right away know tracked elsewhere wrong create issue", "d": "2/2016"}, {"body": "duplicate", "d": "2/2016"}, {"body": "please followup stack overflow try keep focused bugs usage questions unless linked bugs case sounds like script getting inserted fine code executed quick google search sounds like left half error failed execute write document nt possible write document asynchronouslyloaded external script unless explicitly opened blog post discussing relation adwords lessons widely applicable find discussions searching error nt think anything react specific really think", "d": "2/2016"}, {"body": "see thanks anyway", "d": "2/2016"}, {"body": "example actually returning undefined due automatic semicolon insertion good thing look lots js nothing react put opening paren line return ok going close since inactionable feel free follow questions", "d": "2/2016"}, {"body": "zpao oh well least technical explanation problem thanks heads", "d": "2/2016"}, {"body": "sawtaytoes already mentioned threads stackoverflow appropriate place usage questions likely issue codeconfiguration rather bug react core reason going close issue simple jsfiddle demonstrates bug react core happy reinvestigate", "d": "2/2016"}, {"body": "using without", "d": "2/2016"}, {"body": "legal mentioned", "d": "2/2016"}, {"body": "jimfb html way legal may bad practice wrong follows valid entity much like valid even intentionally designed allow omitting closing tags urgh someone smart optimizing markup size markup manually written handy write may enjoy emitted warnings also good thing warn catch subtle ssr markup checksum issues nt see would affect always get ssr markup checksum error markup different invalid markup factor", "d": "2/2016"}, {"body": "syranide threw gave validation error despite followed valid entity appears may function doctype validator default doctype html transitional code fails doctypes nt complain mutation case mind markup looks like chrome automatically converts assumed chrome mutating markup comply validation rules like moves tags markup cleanup perhaps cleanup browser exercising prerogative right checksum validated browser touches markup nonissue think got confused assuming wrong think close since validating html appears harder initially thinkingexpecting part due doctypes validation differences valueadd less initially thinkingexpecting", "d": "2/2016"}, {"body": "nt think anything strings passing react element inside array rendering children add key element react identify element", "d": "2/2016"}, {"body": "case give key whatever like warning goes away", "d": "2/2016"}, {"body": "bfwg yes", "d": "2/2016"}, {"body": "thank", "d": "2/2016"}, {"body": "update every using latest version important tutorial would like submit pull request upgrade references update sooner", "d": "2/2016"}, {"body": "createelement generated element field assigned first argument used internally optimizations update unmount create new instance identity comparison creating new identity render making react think teardown amp recreate operation simple update means tearing dom nodes entirely especially bad form elements since nt really applying state sense really setting props use jsx spread achieve thing really unlikely able optimize case would come costs think likely maintain current behavior hopefully provides insight come different pattern", "d": "2/2016"}, {"body": "yes thank much explanation thinking kind internal tracking appreciate taking time provide details mechanism", "d": "2/2016"}, {"body": "potentially try requiring react entrypoint main react lib still reactdom therefore likely calling defaultinjection typical caveat playing nonpublic apis break time", "d": "2/2016"}, {"body": "sure understand mean requiring react like app get different error must say absolutely nt understand react points reactlibreactisomorphic could prevent react using reactdom thank helping yeah know private apis bad", "d": "2/2016"}, {"body": "nt files calling", "d": "2/2016"}, {"body": "okay got imports assigns methods error root component node", "d": "2/2016"}, {"body": "phone ca nt dig things would start ensure require react funnels reactisomorphic debug starting error message work way backwards ensure missing required internal properties custom renderer", "d": "2/2016"}, {"body": "tried tweak webpack conf resolve require differently instead seems good way post findings go thank pointing right solution", "d": "2/2016"}, {"body": "since discussion topic bug react core would appropriate place discussion alternatives include reactiflux irc regardless bug core going close issue feel free continue discussion thread move another medium", "d": "2/2016"}, {"body": "reasoning issue related implement custom renderers get point", "d": "2/2016"}, {"body": "guess obsoleted fine would like add", "d": "2/2016"}, {"body": "embarrassingly nt know whole lot though like learning seems like would pretty straightforward copy change solved want double check would required", "d": "2/2016"}, {"body": "terms obsoleted still seems use opensearch imagining useful around", "d": "2/2016"}, {"body": "pretty much important thing check updating value would look like even case server rendering common way test load data uri manipulate dom via js set propertyattribute see works visit open console use result right diff ends pretty identical leave docs update though try batch changes release time", "d": "2/2016"}, {"body": "confident know talking noticing currently wrap property null instead admitting ignorance sure value means tracked file even lost going ask zpao hold hand little longer", "d": "2/2016"}, {"body": "saiichihashimoto recently changed using using default whole variety reasons learn properties vs attributes values updated via attributes set value null html elements must updated using property instead attribute otherwise changes wo nt take effect browser case value must verify browsers especially something like tends behave weirdly verify browser honoring new value case entirely sure browser even anything attribute presence lack thereof actually influence browser behavior using attributes certainly fine", "d": "2/2016"}, {"body": "jimfb nt tested specifically browsers actually use however according opensearch specs html element include profile attribute contains value part specs opensearch clients future well may check", "d": "2/2016"}, {"body": "saiichihashimoto right browsers nt actually use almost certainly sufficient set attribute property therefore answer question probably appropriate value", "d": "2/2016"}, {"body": "ah mistake forgot switched attributes default mentioned test code property nt work need use attributes", "d": "2/2016"}, {"body": "probably affects unstablesubtree also nt think need fix milestone since regression introduced first hearing valid bug", "d": "2/2016"}, {"body": "jimfb would check pr linked sufficient check add would happy add", "d": "2/2016"}, {"body": "sambev sorry sure understand question pr linked merged problem still exists master specifically would fix", "d": "2/2016"}, {"body": "jimfb sorry nt clear simply applied conditional pr however nt know full impact change", "d": "2/2016"}, {"body": "fixed verified", "d": "2/2016"}, {"body": "works reactfuture", "d": "2/2016"}, {"body": "assuming intended instructions written nt work error pops syntaxerror unexpected token reactdomrender hello world documentgetelementbyid example parserppraise parserppunexpected parserppparseexpratom parserppparseexprsubscripts parserppparsemaybeunary parserppparseexprops parserppparsemaybeconditional parserppparsemaybeassign parserppparseexprlistitem parserppparsecallexpressionarguments guide missing jsx js step", "d": "2/2016"}, {"body": "yeah agree npm super complexconfusing piece software familiar npm first got started uphill battle installing npm hard guide missing jsx js step reactpresets babel conversion npm hard never used kind wish made nonnpm instructions prominent new users perhaps reversing order two sets instructions anyway scroll gettingstarted page find nonnpm instructions much easier follow checking react first time", "d": "2/2016"}, {"body": "would nt better nonnpm instructions rather instructions nt work written", "d": "2/2016"}, {"body": "would nt better nonnpm instructions rather instructions nt work written yes", "d": "2/2016"}, {"body": "looks like fixing webpack docs tracked", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "surprises strongly suspect usage error facebookcom uses react mean unable load news feed within web view simple repro", "d": "2/2016"}, {"body": "left line number debug info would helpful jump appropriate line number bundle copypaste code along previous subsequent lines context see failing", "d": "2/2016"}, {"body": "ok", "d": "2/2016"}, {"body": "mostly certain nt react one common cases seen happen less obvious duplicate props jsx eg result props object duplicate keys lookout maybe enable lint rule prevent", "d": "2/2016"}, {"body": "ok go full error line one marked function interoprequiredefault obj return obj amp amp objesmodule obj default obj var electronname function react component inherits electronname react component default component", "d": "2/2016"}, {"body": "thought properties object nt react issue something code going close ca nt actually provide better error syntax error comes runtime", "d": "2/2016"}, {"body": "zpao well babel could warnthrow transformation time matter babel probably produce validlegal output filed", "d": "2/2016"}, {"body": "fwiw valid strict mode think computed properties one reasons reasons change sticky situation different runtimes see babel ends meantime suggest linting like reactjsnoduplicateprops rule", "d": "2/2016"}, {"body": "issue solved removing dup refs thanks support bug filing say however strange problem surfaced android webview browser", "d": "2/2016"}, {"body": "probably remotely performant way performance module initialization directly influences initial load time would fatal going close edge case people rarely hit nt think support performant way workaround use classes feel free continue discussion thread reopen reexamine thinking matter changes dramatically said curious hear use case trying", "d": "2/2016"}, {"body": "discussion amp give background nt think intend make fundamental changes way createclass works really unlikely make setters work", "d": "2/2016"}, {"body": "ah ok thanks guys performance see even mixins possible nt manage well jimfb html wysiwyg editor components bit dirty updated many different events selectionchange keydown mousedown quite frequently even throttled sometimes choose update position popovers div overlays manually rather vanilla js put less things state sometimes even nothing another example ca nt use react react slow sort things could something like important thanks", "d": "2/2016"}, {"body": "cc spicyj wrote original comment", "d": "2/2016"}, {"body": "nt recall history mix repo rn nt currently use browser supposed work going close since nt really support send pr unit tests makes compatible probably take looks like set emitted events nt want lose rn least though", "d": "2/2016"}, {"body": "existing issue aop style measurement nt always convenient wrap recursive function calls difficult measure self time component another issue numbers intuitive necessarily actionable would probably require thinking around design turning seems like good first step however like even something like avoids indirection runtime look callsite becomes constant jit compiler safely exclude code paths downside ca nt turn profiling onoff already running nt think required use case though another alternative simply build three different builds prodprofiledebug packager choose wants profile production case maybe something", "d": "2/2016"}, {"body": "points care reactperf reach internal properties event component names etc everything needs colocated code change implementation details without breaking one way achieve could fire events tree reconstructed perf tool however also rely execution order events eg probably want render children different stack frame parent therefore inclusiveexclusive perf measurement parent ca nt depend child rendering within stack parent rendering might mean react code needs high level knowledge use case rather spewing events b make things slower add profiling even temporarily need way disable completely day one", "d": "2/2016"}, {"body": "turning measure reactperfisactive startmeasurement seems like good first step downside ca nt turn profiling onoff already running nt think required use case though tadeuzagallo told use case rn team details maybe provide meantime suggested first measure perf impact making lookup reconsider use case compelling enough another alternative simply build three different builds prodprofiledebug packager choose wants profile production one reasons rn team wants revamp reactperf unnecessary friction getting trace results adding another build would increase friction compared runtime switch even runtime switched computed start time would amount less friction therefore going runtime flag reconsider later find good reasons separate build example performance regression flag turn worse expectations reactperf reach internal properties event component names etc everything needs colocated code change implementation details without breaking one way achieve could fire events tree reconstructed perf tool keep mind bigger priority seemed first implementing would require significant revamp reactperf hand seems require us start emitting lifecycle events may useful react devtools extension later need explore much work remove reliance implementation details reactperf make things slower add profiling even temporarily need way disable completely day one start adding onetime runtime switch measure regress noise resort making special profiling build frustrating rn team switch builds make build default one cases except shipping appstore guess", "d": "2/2016"}, {"body": "thing worries usage pattern inside react increase plus less noise inside react eg layout start noticeable become hot paths really satisfied noise today also seems wasteful switch always production builds rn wants easy toggle always run profile build development friction feb dan abramov notifications githubcom wrote turning measure reactperfisactive startmeasurement seems like good first step downside ca nt turn profiling onoff already running nt think required use case though tadeuzagallo told use case rn team details maybe provide meantime suggested first measure perf impact making lookup reconsider use case compelling enough another alternative simply build three different builds prodprofiledebug packager choose wants profile production one reasons rn team wants revamp reactperf unnecessary friction getting trace results adding another build would increase friction compared runtime switch even runtime switched computed start time would amount less friction therefore going runtime flag reconsider later find good reasons separate build example performance regression flag turn worse expectations reactperf reach internal properties event component names etc everything needs colocated code change implementation details without breaking one way achieve could fire events tree reconstructed perf tool keep mind bigger priority seemed first implementing would require significant revamp reactperf hand seems require us start emitting lifecycle events may useful chrome devtools later need explore much work remove reliance implementation details reactperf make things slower add profiling even temporarily need way disable completely day one start adding onetime runtime switch measure regress noise resort making special profiling build frustrating rn team switch builds make profile build default one cases except shipping appstore guess reply email directly view github", "d": "2/2016"}, {"body": "rn wants easy toggle always run profile build development friction ok however also rely execution order events eg probably want render children different stack frame parent therefore inclusiveexclusive perf measurement parent ca nt depend child rendering within stack parent rendering putting logs better idea currently works saying best rely happening inside part parent future plan allow deferring child updates next batches would mean child could reconciled next parent stack however every change would still happen inside keep existing result structure every single entry corresponds batch thing would need change count times differently without relying execution order components would even make sense world like child update deferred another batch parent reconciliation count inclusive time towards parent understanding issue correct far", "d": "2/2016"}, {"body": "superseded", "d": "2/2016"}, {"body": "reactperf reach internal properties event component names etc everything needs colocated code change implementation details without breaking turned fairly important working internal id composite component using key measurements object removed broke perf code ended require keys component seems bad reactperf attaching properties reactperfinstanceid something obscure avoid future name collisions components break well", "d": "2/2016"}, {"body": "update title misleading issue react nt know rerender input value changes null character ui stops reflecting state data", "d": "2/2016"}, {"body": "switching component controlled uncontrolled bad idea prohibited react get warning try need convert nulls empty strings", "d": "2/2016"}, {"body": "jimfb think missed point implying way setting inputs controlled uncontrolled implicit override like understand system currently place nt make application less predictable dealing data includes nulls", "d": "2/2016"}, {"body": "warning help catch situations accidentally pass null part added user accidentally switching controlled uncontrolled components", "d": "2/2016"}, {"body": "fair enough thanks", "d": "2/2016"}, {"body": "seems constraint tight store present want render way would nt render behave properly definition render without store undefinednull", "d": "2/2016"}, {"body": "way reactredux implemented required prop requires present since created could create wrapper sort would similar would bubble problem since eventually going different components", "d": "2/2016"}, {"body": "store present first render could pass fake store", "d": "2/2016"}, {"body": "nt want components require store present page render throw errors store included script tag later page reason company chosen use something called adobe experience manager aem build components essentially allows content authors draganddrop components onto pages means ca nt guarantee order anything appears nt think aem good solution building applications money spent contracts signed really end goal build components nt care whether store present hook automatically store onceif available", "d": "2/2016"}, {"body": "think passing fake store initially might work trying figure get around fact nt support swapping store fly looks like due changes version reactredux seems related hotreloading dynamically changing store rendered", "d": "2/2016"}, {"body": "looking ca nt figure would implement intuitively seems like possible something missing ca nt put finger maybe gaearon would kind take look", "d": "2/2016"}, {"body": "constrained situation p required prop requires present since created would look could write provider provides default store undefined wrapper around current provider could write wrapper around provides store one unavailable etc forcing react reconcile two elements different types element probably good would confusing edge case people among things keys automatically introduced things like arrays ca nt use keys reconciliation identity anyway nt see anything actionable think problem coming using bunch different technologies including redux aem others imposing semicontradictory constraints challenge ahead figure mitigate one constraints nt think actionable fix within react core going close issue guys continue discussion thread", "d": "2/2016"}, {"body": "however want allow user interact widget store present instance widget example able enter text input dom state persist widgetcontainer rendered place would state stored associated store ephemeral storage like component state would reconcile changes real redux store becomes available", "d": "2/2016"}, {"body": "may come back explore later disabling inputs store available think might possible create save dom state component would store state input dispatch action based state store dispatch available pretty sure possible think issue thanks help", "d": "2/2016"}, {"body": "try fiddle also fiddle trying map prop never pass thus error", "d": "2/2016"}, {"body": "fiddle works ok new react solved could recommend patch react since stable react fiddle new react also updated link original message sorry bad fiddle", "d": "2/2016"}, {"body": "ok going close since fixed master could try cherrypicking commits honestly would recommend waiting released really hurry play could try using future build eg aware nt guarantee stable", "d": "2/2016"}, {"body": "thanks found fixed via problem thanks guys work", "d": "2/2016"}, {"body": "seems working cc benigeri case closing react bug", "d": "2/2016"}, {"body": "providing screenshot", "d": "2/2016"}, {"body": "banned users shown expired link fwiw", "d": "2/2016"}, {"body": "issue tracker bugs react general support use stack overflow irc said generic solution problem keep reference bound handler around eg bind method constructor see also blog post introduced classes", "d": "2/2016"}, {"body": "fkling exactly going say p correct points thanks", "d": "2/2016"}, {"body": "sry thanks", "d": "2/2016"}, {"body": "found set handler directly component inside component something like", "d": "2/2016"}, {"body": "interesting api direction might consider example assumes available instance method entire component lifecycle components would keep reference count causes unmount time reaches zero components would start reference count created would decremented longer rendered parent calls would increment reference count return idempotent function called would decrease reference count example assume action completed component deparented causes called call inside could halt unmounting process returned function called imagine would called second time sure whether would defer entire parent chain unmounted suspect would would unify deferred unmount mechanic normal component lifecycle seem like potentially dangerous feature particularly exception safe prone leaks etc maybe could coupled method maybe said tool building libraries react think would open number opportunities exit animations major use case thought nt good understanding edge cases around love feedback think would play nicely well", "d": "2/2016"}, {"body": "skew support classes classes exist largely allow language interoperability also mostly legacy anyway regards specifics patch seems fine looks like virtually zero perf impact see reason take", "d": "2/2016"}, {"body": "jimfb going take patch let super thorough see places supporting prototypeless objects", "d": "2/2016"}, {"body": "jimfb thanks fast response mostly legacy unaware going dig find make things work similarly extending skew post back update zpao makes sense move ahead take stab looking around else would come", "d": "2/2016"}, {"body": "jimfb update skew seems support classes nt solve problem two reasons classes nt firstclass objects skew ca nt pass class function like could keep using might workaround trick skew compiler letting pass class around bigger problem zpao anticipated many places react api takes would like take prototypeless map examples problem spec could prototypeless var spec reactcreateclass spec usecases cause exception called expect find play around proposal would happy find update apireachable calls write tests make sure specific calls nt regress seems like sizable piece work wanted sure board please let know board note scope task examples prototypeless could run issue method would sweep codebase apireachable methodcalls might belong instead instance far seems primary offender react codebase others nt account much alternative proposal instead finding apireachable uses could change every use codebase since nt see reasonable case calling method instance want calling nt may simpler approach would easier maintain codebase guideline always use objectprototypeblahblahblah instead objblahblahblah lint rule would still write tests make sure parts api currently break longer break change let know think", "d": "2/2016"}, {"body": "ryankaplan personally agnostic whole change change helpful youothers nt cause undue code complexity perf regressions nt appear generally lean favor taking however person team value proposition case fairly marginal would possible someone find reason block proposals seem fine best guess would likely take change since nt see reason take ca nt make promises", "d": "2/2016"}, {"body": "jimfb fair enough thanks response prepare pr time next days let know ready see goes mean time think reason likely blocked particular people team think likely issues please let know", "d": "2/2016"}, {"body": "ankeetmaini create unit test demonstrates problem", "d": "2/2016"}, {"body": "two weeks responserepro unable reproduce", "d": "2/2016"}, {"body": "need return statement common use arrow function situation maybe saw one example confusing arrow functions needing return statement use brackets", "d": "2/2016"}, {"body": "maartenbusstra nt help either updating gist", "d": "2/2016"}, {"body": "import statement working", "d": "2/2016"}, {"body": "almost certainly usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue takes radar feel free continue conversation move stackoverflow", "d": "2/2016"}, {"body": "maartenbusstra yes also things working fine long pass string value object like able render tasklist component", "d": "2/2016"}, {"body": "hmm seems issue reacttransformboilerplate since code working fine another setup maartenbusstra since pass tasklist object string value instead array objects able render fine", "d": "2/2016"}, {"body": "far software licensing goes license super simple clear lawyer give legal advice specifics situation recommendation check organization legal department able give clear answer general yes utilize react offline commercial products free long nt remove copyright notice react code per conditions mentioned license file", "d": "2/2016"}, {"body": "duplicate", "d": "2/2016"}, {"body": "thanks jim", "d": "2/2016"}, {"body": "thanks pruning noise original repro much clearer seems like firstclass subtree concept would probably address probably larger discussion concept would also helpful tooling thinking modals particular case likely way fix without fair amount work", "d": "2/2016"}, {"body": "reference solugebefola talking want poke someone diff creating new issue different repository correct solution appropriate technique would add comment diff question like would love get merged get code review cc people context leaving comment ccing people maintain repository help bring attention case missed tell people looking commit history repository", "d": "2/2016"}, {"body": "thanks info still pretty new saw original bug posted forum thought origin react issues", "d": "2/2016"}, {"body": "psumstr dont think component provided throws warning could something happening within child components add context would great", "d": "2/2016"}, {"body": "jenriquejr created example js bin reproduced run js inspect element comment box div chrome click properties tab expand divcommentbox see messages console", "d": "2/2016"}, {"body": "yes sideeffect inspecting dom node dev mode getter dom nodes refs support previous pattern refs react components chrome devtools reading every property results warning nothing right gone next major release", "d": "2/2016"}, {"body": "good know zpao open issue use reference", "d": "2/2016"}, {"body": "jenriquejr open issue already fixed master", "d": "2/2016"}, {"body": "thanks jimfb", "d": "2/2016"}, {"body": "suspect user error provide simple jsfiddle demonstrates issue investigate", "d": "2/2016"}, {"body": "safe assume typo code actually looks like assuming since said works fine", "d": "2/2016"}, {"body": "audio tag zpao correct indeed rewrote code instead copying pasting updated main post", "d": "2/2016"}, {"body": "nicolabortignon need use ref react component work fine either way see example open browser console see log result", "d": "2/2016"}, {"body": "nicolabortignon working fiddle demonstrate issue", "d": "2/2016"}, {"body": "created fiddle work trying understand going current codebase cose problem assume safe mark able reproduce february jim notifications githubcom wrote nicolabortignon working fiddle demonstrate issue reply email directly view github", "d": "2/2016"}, {"body": "hmm \u30c4 try", "d": "2/2016"}, {"body": "slightly better still looking timeout", "d": "2/2016"}, {"body": "hmm get times even check full second later honestly svg expert looks like usage question react responsible creating domsvg nodes calling componentdidmount everything seeing seems indicate react done correctly beyond browser looks like usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core nt see anything indicate react nt job suspect kind race condition svg nodes created browser still svg layout something perhaps command force svg flush perhaps bug chrome something able come clear examplejsfiddle demonstrates bug react core let know reinvestigate otherwise recommend asking stackoverflow", "d": "2/2016"}, {"body": "cc sebmarkbage ideas", "d": "2/2016"}, {"body": "add header usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue feel free continue conversation thread move stackoverflow", "d": "2/2016"}, {"body": "ahh known simple sorry wasting time", "d": "2/2016"}, {"body": "let keep discussion main thread unless distinct alternative proposal looks like continuation proposaldiscussion single proposal discussed multiple separate threads confusing harder track", "d": "2/2016"}, {"body": "initial discussion happened twitter current pr minute thing twitter convo taking step back issue ensure requirements clear solution agreed upon continuing pr", "d": "2/2016"}, {"body": "pr closed favor discussion", "d": "2/2016"}, {"body": "since additional feedback took smaller step direction", "d": "2/2016"}, {"body": "provide two jsfiddles one showing nt work react another showing touch events work without react try dig phone test end", "d": "2/2016"}, {"body": "sorry fucked everything working", "d": "2/2016"}, {"body": "comes word true jsfiddle demonstrates coming false", "d": "2/2016"}, {"body": "would absolutely fantastic making things simple copyandpaste would go long ways towards increasing sri adoption", "d": "2/2016"}, {"body": "repository react core react native reactnative repository gradlew failing box guess environment issue end related reactnative codebase", "d": "2/2016"}, {"body": "first glance suspect probably duplicate without repro really nt whole lot end since suspect duplicate since nothing actionable end since ca nt repro issue issue going close able find good repro jsfiddle let know reopenreinvestigate", "d": "2/2016"}, {"body": "jimfb sounds good thanks pointing issues spend time later attempting create reproduction reopen", "d": "2/2016"}, {"body": "browniefed able figure causing problem fix facing problem nested components one containing select rerendered unmounted mounted new props constantly getting error mentioned remove select completely render wrapper component everything works fine", "d": "2/2016"}, {"body": "lkay entirely using instead calling new component dom container worked fine seemingly sync mounting issue moved pretty quickly converted things full react app nt integration work", "d": "2/2016"}, {"body": "probably included part html specification see section", "d": "2/2016"}, {"body": "ah okay", "d": "2/2016"}, {"body": "css selectors use dom attribute nt generating markup inserting initial values also set way updates uses property attribute unless everything set via attribute nt possible need cases nt possible catch could potentially start using attributes everything possible cc spicyj", "d": "2/2016"}, {"body": "essentially dupe gon na call wontfix", "d": "2/2016"}, {"body": "bug duplicate", "d": "2/2016"}, {"body": "jimfb thx", "d": "2/2016"}, {"body": "whitelist attributes nt check ensure used corresponding tags regards validation probably headed opposite direction issues like however may reason set attribute even already setting property", "d": "2/2016"}, {"body": "tested removed removeattribute run keep required", "d": "2/2016"}, {"body": "ah correct fwiw also nt specify attributes unless using server side rendering", "d": "2/2016"}, {"body": "mistake edited checkedselected rendered use nodexx set", "d": "2/2016"}, {"body": "going close favor since actionable part issue far tell", "d": "2/2016"}, {"body": "theblasfem beat haha noticed though fix nt address fact event listener added hidden event begin also event name actually made changes mine addition responding prop also implemented", "d": "2/2016"}, {"body": "nice catch markmurphy thanks notice continue solution", "d": "2/2016"}, {"body": "whole point warning useful mixin automatically calls opposite would recommend details", "d": "2/2016"}, {"body": "jimfb good read thanks without ismounted still find function useful edit especially multiple buttons component control multiple state variables", "d": "2/2016"}, {"body": "without could write without mixin mixin version without mixin syntactically shorter readable nt depend details mixin therefore still would nt recommend mixin find mixin useful power", "d": "2/2016"}, {"body": "fair enough nt use transpiler nt think looks lambda functions", "d": "2/2016"}, {"body": "haha browsers suck want submit pr looks like thing unnecessarily places react codebase note need use typeof binding might exist need look case individually make sure change valid", "d": "2/2016"}, {"body": "went react repo configuration build tests execution fix nt break anything far nt find solution make good test phantomjs nt documentall property documentall htmlallcollection probably exception typeof documentall html standard longer supported starting internet explorer use getelementbyid info see compatibility changes suggestions unit test fiximprovement", "d": "2/2016"}, {"body": "long tested manually worked ie think accept change without unit test", "d": "2/2016"}, {"body": "fixed", "d": "2/2016"}, {"body": "lol even", "d": "2/2016"}, {"body": "ca nt reproduce ie ie windows either standards quirks mode missing", "d": "2/2016"}, {"body": "ie lt fine problem occurs using modern browser like chrome firefox ie gt edge returns set component prop chrome react compare prop default prop chrome react treats missing value default prop selected end prop always set modern browser case", "d": "2/2016"}, {"body": "oh sorry totally misread yes repro", "d": "2/2016"}, {"body": "looks like probably usage question related environmentconfiguration rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue feel free continue conversation thread move stackoverflow reduce problem demonstrable bug react core reinvestigate", "d": "2/2016"}, {"body": "ok jim right usageconfiguration issue really react bug someone also found issue meantime fixed path prefix subcomponents needed prefix sorry noise", "d": "2/2016"}, {"body": "see support yet pity first time render correct", "d": "2/2016"}, {"body": "work fiddle", "d": "2/2016"}, {"body": "yeah work fine mean", "d": "2/2016"}, {"body": "ok check time", "d": "2/2016"}, {"body": "spicyj syranide", "d": "2/2016"}, {"body": "know fairly obscure seeming bug one could call bug actually affecting lot code running lot libraries iwe provide done check smaller percentage affected reactbootstrap instance since use controllable helpers encapsulate behavior lots components using context wrap bunch field read inputs big form component really common use case parent form props needs settled children inputs fields update values right uncontrolled parent elements exhibit sort bug also realize using bad form since internal api impossible correctly implement controlleduncontrolled components without would love see form larger aside", "d": "2/2016"}, {"body": "sorry trouble understanding issue reactupdatesasap public api use settimeout requestanimationframe would expect behavior describe incorrect using reactupdatesasap case", "d": "2/2016"}, {"body": "reason test case using mostly demonstrate updates seem order even occur tick illustrates something worked nt covers case settimoutraf per discussion problem seems intractable reason using actual modules reason reactdominput uses correctly implement controlleduncontrolled api components practical use case something like course entirely possible expecting something work never intended work fine want say least inadvertently relying behavior behavior changed figure adjust bunch code potential cost using private apis thought make sure behavior change intendedacceptable", "d": "2/2016"}, {"body": "clarity problem use internal ultimate cause bug avoid bug", "d": "2/2016"}, {"body": "draftjs might somehow related", "d": "2/2016"}, {"body": "think opt keep core clean provide building blocks nt support every possible property node might focusing markup attributes markup generation another example could described declaratively supported", "d": "2/2016"}, {"body": "assume comments etc referring primarily homepage keep mind homepage sales pitch users see deciding framework use ease useunderstanding paramount stage users ready learn best practices read full docs learn various features design patterns reason nt want introduce two different componentdefinition styles homepage two concepts harder understand one wanted submit pr two pages mentioned seems like appropriate place surface stateless functions prominently", "d": "2/2016"}, {"body": "yes referring homepage keep mind homepage sales pitch two concepts harder understand one gotcha", "d": "2/2016"}, {"body": "pretty sure close", "d": "2/2016"}, {"body": "yep thanks", "d": "2/2016"}, {"body": "thought looked like good first bug", "d": "2/2016"}, {"body": "would completely agree fact people would good designing apps scratch would probably still use jshtml heavy oop structure would better example problematic access child properties grandparent even though scenario quite reccuring especially considering heavy folding popular actually context would trick children prop access default cascading magic one context midchildren even would fp way biggest problem child component might universal suitable current grandparent usecase example coming everupdating library hence youde update everything even small change child component happened question still remains nt want hear live without want hear might dangerous leading bad practices", "d": "2/2016"}, {"body": "agree texttechne requires implicit knowledge component works general component black box soon start peaking component implementation things get really messy esseswann said actually kind nt want know works want set props occur likewise nt know make selector css understand going imho one worst properties css lack style isolation least double edged sword imagine designing page like big checkboxes double size checkboxes page using css selector component used checkbox internally depending size checkbox align size another node things broken longer import arbitrary components components depend ambient styles page danger bad practice interesting discussion thanks proposing going close reasons texttechne mentioned feel free continue discussion thread fwiw think could use context achieve behavior looking", "d": "2/2016"}, {"body": "jimfb ty response gave good explanation still concerns general component black box soon start peaking component implementation things get really messy feel bit dumb nt understand controlling props component grandparent differs controlling props parent corresponding use case expose props parent context anyways component used checkbox internally depending size checkbox align size another node two ways make dependant something abstract add logic component would make less reusable thing unlike css affect almost everything cascading props affect obviously props component made recieve without breaking", "d": "2/2016"}, {"body": "esseswann parent reason possible props chooses forward child ca nt easily reason things grandparent might grandparent allowed bypass parent api", "d": "2/2016"}, {"body": "far checked parent context overrides grandparent context props btw webpack hmr somehow ignores deletion contexttypes parent renders thiscontextsomething undefinied overall subject referenced inversion control", "d": "2/2016"}, {"body": "thought thinking something included react possible write custom prop type validators", "d": "2/2016"}, {"body": "using trycatch rather windowonerror get access thrown error object browsers support unfortunately still includes ie safari error object also gives us stack trace ie safari windowonerror nt give us access error object stack trace react would call type onerror hook catch block root event handler could get access error information need issues see", "d": "2/2016"}, {"body": "biggest issue performance would require wrapping every event even mousemove events fire super frequently trycatch block causes jsvm deopt also gets complicated used errorboundary catch point clear semantics parent error boundary passes callback child error boundary exception thrown child invokes grandparent function case grandparent broken component ie one potentially erroneous state child exception pops system thus nt know fatal grandparent probably best solution would figure solution smooth interface", "d": "2/2016"}, {"body": "must missing something performance point look call stack one react event handlers see three react functions stack already trycatchfinally blocks lastchance error handling could integrated one existing exception handlers performance cost anyway thought deoptimization occurs function level adding trycatch block otherwise trivial dispatcher function practical impact please correct know otherwise since mind simple change seems shame get wrapped complications error boundaries issue react team nt see good fit core project guess go ahead implement fork meet needs system", "d": "2/2016"}, {"body": "think fit probably best solution would figure solution smooth interface super high priority us since upside ability log slightly detailed error information specifically stack traces legacy browsers nt far tell affect control flow program nt affect primary browsers ultimately think request synthetic version specific global event seems relevant nt see solutions cleaner missing something let know simple change performanceapi impact submit pr happy take look", "d": "2/2016"}, {"body": "please see pr meets needs project hope find fits well design react welcome suggestions improve", "d": "2/2016"}, {"body": "fixed", "d": "2/2016"}, {"body": "think bug pretty clearly equal", "d": "2/2016"}, {"body": "made pr", "d": "2/2016"}, {"body": "would restore default value behavior would expect intuitively", "d": "2/2016"}, {"body": "mattzeunert otherwise could create element using could created using", "d": "2/2016"}, {"body": "cc sebmarkbage nt recall talked expected behavior defaultprops resolution explicitly resolved createelement adding second pass cloning", "d": "2/2016"}, {"body": "yea think bug reason jimfb mentioned gives way guarantee type prop never going idea guarantee never get undefined another example explain semantic roughly equivalent", "d": "2/2016"}, {"body": "sure pr going get merged reused defaultprop process used createelement cloneelement fix bug", "d": "2/2016"}, {"body": "try get test case put together", "d": "2/2016"}, {"body": "cdonohue ping", "d": "2/2016"}, {"body": "tried putting together different scenarios honestly think something iframes within iframes open another issue find root cause reason keep open problem intermittent sorry delay", "d": "2/2016"}, {"body": "per comment proptypes mostly sort maintenance mode really planning add right would breaking change would inverting default requiredness something proptypes replaced static analyzers like flow reason thinking probably would nt", "d": "2/2016"}, {"body": "provide simple usage example component creates problem", "d": "2/2016"}, {"body": "hi seem problem side started raise warning soon decorated components cssmodules reactcssmodules", "d": "2/2016"}, {"body": "hi could nt separate error repoexample ca nt identify source problem romaingweb nt use reactcssmodules problem came using implementing server side authorization anyway last time nt saw error", "d": "2/2016"}, {"body": "reasonably sure fixed masterfuture since reactdataid numeric ssr", "d": "2/2016"}, {"body": "either method works optimal solution probably depends use case usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue takes radar feel free continue conversation move stackoverflow", "d": "2/2016"}, {"body": "sorry comment ignorant bit noob key path always unique immutable would need counter short reactgetuniqueid localid would return unique id based key path optional second argument provided function would pure would always return output given inputs ie counter one id needed within component optional second argument could provided differentiate two course key paths nt immutible unique obviously wo nt work", "d": "2/2016"}, {"body": "problem fixed removing unused refs one components getting error check refs nt use rendering component giving error", "d": "2/2016"}, {"body": "made pr", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "duplicate warning useful cases pretty sure get paste event nodes contenteditable capturing events preventing browser changes specified avoid warning bail react call reactrender contenteditable container node cause us warn afaik", "d": "2/2016"}, {"body": "needs contenteditable order enable browser cursor behavior input events etc render different mount point preventing events bubbling parent components longer works correctly see stopgap solution ended overriding app ignoring messages match regex pretty silly works course enabled production anyway definitely love option component say hey react know though", "d": "2/2016"}, {"body": "capture input events without content editable simulate cursor behavior basically need anyway order implement good editor per browsers different behaviors regards cursor position works want truly nice editor end using almost nothing contenteditable get trying reuse browser functionality optimistic assumption contenteditable gets way regards hack better stopgap solution hack would probably set contenteditable imperatively demonstrated fiddle way react nt even know set share component without overwriting people method", "d": "2/2016"}, {"body": "yeah google docs method reimplement everything however nonword processors possible get way using content editable code manage selection even medium new facebook notes made react still use content editable degree like new hack much better thanks", "d": "2/2016"}, {"body": "jimfb spicyj seems like something could take look internal discussion optout would look like could imagine function exposed similar back day another property specified component could make bit hard work purpose similar benefit also drawback first option appwide whereas second one would specified every component", "d": "2/2016"}, {"body": "generally avoid global configuration like plague would almost certainly prefer specified component first glance kind like second proposal bikeshed little ben see come", "d": "2/2016"}, {"body": "two best naming proposals right like little", "d": "2/2016"}, {"body": "mirrors", "d": "2/2016"}, {"body": "like suppress better silence allow also fine problem implies possible change behavior rather merely disabling warning reason think favor", "d": "2/2016"}, {"body": "fixed", "d": "2/2016"}, {"body": "document content editable doc", "d": "2/2016"}, {"body": "want send pr sure", "d": "2/2016"}, {"body": "graue proposal object spread syntax simpler eventually built js emphasis mine hopefully risk involved using worth considering whether something want encourage users case would suggest consider including note mentioning helper mainly useful nested objects cases object spread helpful also addressed albeit verbosely zpao nt shipped react though somebody came better name split tomorrow filed long time ago let sit closing somebody oss wanted take ship version fine sorry misunderstanding something nt already split shipped better names eg reactaddonsupdate remaining issues things like bundling react changing internal usage putting separate repo etc", "d": "2/2016"}, {"body": "hmm well see shell reexports better name take mean something even referencing react", "d": "2/2016"}, {"body": "fixed", "d": "2/2016"}, {"body": "spent hours tracking one tried googling something like could nt find anything useful maybe documentation due", "d": "2/2016"}, {"body": "jackielii documented pretty clearly big red note box also render function pure function state without side effects supposed nt able tell many times called", "d": "2/2016"}, {"body": "news issue", "d": "2/2016"}, {"body": "tested unable reproduce fiddle", "d": "2/2016"}, {"body": "lucaspin verify nt work version ie andor provide fiddle demonstrates issue", "d": "2/2016"}, {"body": "jimfb fiddle works fine ie however nt understand realize using version react maybe reason nt work fiddle", "d": "2/2016"}, {"body": "ok cool going assume fixed issue unless hear otherwise let know discover repro reinvestigate", "d": "2/2016"}, {"body": "jimfb thanks man one question new version going released", "d": "2/2016"}, {"body": "lucaspin current thinking probably month subject change", "d": "2/2016"}, {"body": "reopening track longer term ideas", "d": "2/2016"}, {"body": "fixed", "d": "2/2016"}, {"body": "pretty sure artifact order documentlevel event listeners get registered react uses synthetic event system interaction native events synthetic events strictly undefined sebastian wrote post onceuponatime native synthetic event systems large inherently interoperable", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "nt think presence refs elements docs referring say refs nt supported regardless using string refs legacy pattern likely go away eventually would try avoid relying code linked appears rely", "d": "2/2016"}, {"body": "nt need button illustrating problem", "d": "2/2016"}, {"body": "passed dom component", "d": "2/2016"}, {"body": "running similar issue onleave calls delayed onenter animation time v", "d": "2/2016"}, {"body": "also seeing exactly situation internal ui library written react uses refs since want develop time main application ed whenever try test component via running webpack build fine probably due deduping going get following error javascript import react react export const foo reactcreateclass render return foo javascript import react react import reactdom reactdom import testutils reactaddonstestutils import foo uilibraryfoo shouldnt blow gt const foo testutilsrenderintodocument reactdomfinddomnode foo textcontentshouldequal foo crashes following output", "d": "2/2016"}, {"body": "also still happens latest node npm versions", "d": "2/2016"}, {"body": "anyone gets stuck workaround works fine", "d": "2/2016"}, {"body": "ran today link babel old documentation leads page link take endorsement swap docs inbrowser transforms directly link update text accordingly", "d": "2/2016"}, {"body": "babelstandalone nt actually transforming script tags write wrapper done need get shipping somewhere update docs stop linking entirely", "d": "2/2016"}, {"body": "got issue handle transforming tags babelstandalone however nt time implement built looks like work happy accept pull requests add babelstandalone smile", "d": "2/2016"}, {"body": "pr submitted tonight actually", "d": "2/2016"}, {"body": "wrote intention building us ship docs though think need fix something nt tested couple weeks nice thing code jsxtransformer mostly changed transform call problem throwinthetowel nt things learned along way jsxtransfomer biggest thing going actually creating script tags right order vital sourcemaps fun issues forget exactly figure pr worth going feel free cc", "d": "2/2016"}, {"body": "anybody looked guy bedford systemjs babel plugin possible solution", "d": "2/2016"}, {"body": "mentioned could export two globals issue keeps coming eg good reason common case user want iff using makes sense default packaged together notable counterexamples like reactart people using commonjs anyway deduplicate easy make argument bundled default least could provide optional bundled build cdns", "d": "2/2016"}, {"body": "jimfb optional build seems best option keep everyone happy without downsides eventually natural course things terms browser requests pulling combined bundle ensuring sensible browser caches", "d": "2/2016"}, {"body": "completeness would arguably want reactcore reactdom separate requests still optimal scenarios asking react team maintain minimum following distributions npm reactcore npm reactdom cdn reactcore cdn reactdom cdn reactcoredom cdn reactcoremin cdn reactdommin cdn reactcoremindommin potential builds prod profile dev", "d": "2/2016"}, {"body": "least could provide optional bundled build cdns sounds better providing single build need one two new builds though confused umd would work builds think library two independent exports global environment work exactly like commonjs umd builds currently support today using umd builds hypothetical umd would either look like merged public api potential name clashes inconsistent import vanilla builds saying importing commonjs umd build common use case worried potential confusion maybe understand umd builds work sweatsmile", "d": "2/2016"}, {"body": "wo nt single build replace another bundled build probably umd set globals", "d": "2/2016"}, {"body": "imagine another renderer page would need use still shared global state still needs separate distributions one well maybe combine want add seems complicated", "d": "2/2016"}, {"body": "wild suggestion even though may apply explicitly react facebook considered cdns take optional request like google eg google fonts facebook cdn take request multiple keys say ends providing one request facebook needs cache requests dependency arithmetic side solve problems quite succinctly would render entire discussion irrelevant dependencies matter sizes usage patterns kept clean separate", "d": "2/2016"}, {"body": "also adding usage patterns isolated provided cleaner requests eg instead usage b could pull set predefined dependencies example typical browser request react dom could either would even enable unknown potential future use cases clean way ps something done dashes true dependency arithmetic used could ignored well considering additions course details spec requests would decided consistency idea", "d": "2/2016"}, {"body": "take even could actually make react lot smaller since optional flag since opens possibility sending custom builds open browser specific requirements removing compatibility layers based react dependency served directly cdn specific particular browser less code smaller network packages lesser latency smiling faces react starting modularizing even allowing custom builds removing compatibility layers could interesting area explore", "d": "2/2016"}, {"body": "dropping say observing still case react", "d": "2/2016"}, {"body": "afaik nothing actionable assuming understanding comment correctly browser behavior nt anything end", "d": "2/2016"}, {"body": "lovedota looks like hitting error callback called three times animating three elements refactor code call work better resilient behavior reacttransitiongroup though original code also works", "d": "2/2016"}, {"body": "seems work per wrong feel free reopen please provide fiddle", "d": "2/2016"}, {"body": "yes fixed", "d": "2/2016"}, {"body": "issue mean nonstandard characters removed", "d": "2/2016"}, {"body": "ampersand non standard character normally would escape via", "d": "2/2016"}, {"body": "jimfb might something could look adding next", "d": "2/2016"}, {"body": "nt looked sounds reasonable", "d": "2/2016"}, {"body": "two added ie support still add seperate events fine asis", "d": "2/2016"}, {"body": "solution added component superclasses could easily import assign fn class nt require changes scu garbage collects properly component dies js class supercomponent extends reactcomponent preserve reference equality costs creating bound function storing reference based identity source function consider like bind except always returns fn callback amp data bindcallback callback data thiscallbacks thiscallbacks new map let datamap thiscallbacksget callback check already got datamap amp amp datamapget data return datamapget data else datamap datamap new map could also make support multiple arguments making params using", "d": "2/2016"}, {"body": "nice goal hopefully make functional example wouldnt work stateless components", "d": "2/2016"}, {"body": "true seems generally would nt problems stateless components stateless component generally leaf node nt make much sense use stateless component instantiate array children usually want bind data callback", "d": "2/2016"}, {"body": "agreed strml experience stateless components difficult optimize anyway", "d": "2/2016"}, {"body": "yeah going argue playing around elm kinds architectures entire state held atom passed stateless components entire ui stateless", "d": "2/2016"}, {"body": "supposed fixed cpojer", "d": "2/2016"}, {"body": "yet fix need add tests tests performance definitely fixed final though", "d": "2/2016"}, {"body": "publish new version prerelease fixes issue today", "d": "2/2016"}, {"body": "may gods praised sun feb pm christoph pojer notifications githubcom wrote publish new version jestcli next prerelease fixes issue today reply email directly view github", "d": "2/2016"}, {"body": "problem still present cause unexpected breakage older browsers production builds since profiling shown function call actually bottleneck think makes sense put back table blessed api even somewhat undocumented break apps production would great interop optimizing runtimes fast path alternative fewer validations alternatively could constructor simply exposed babel helpers interesting desire remain pure nt consider relying symbol polyfill failing interop polyfill native pure seems longterm solution fix good", "d": "2/2016"}, {"body": "work also shared symbol need handled way library code", "d": "2/2016"}, {"body": "case symbol would polyfilled library code would used symboliterator polyfills would fall back globalsymbol present crux problem react fallback symbol present polyfill use magicnum possible user code uses polyfill say via babel library thus uses magicnum magicnum polyfill thinking way fix fix babelplugintransformreactinlineelements make existence unnecessary originally thought replacing function call inline object would faster turns true transform uses function function create react elements faster production nt actual implementation production mode aware may loss context error conditions errors generally thrown away production anyway could configured", "d": "2/2016"}, {"body": "inlining part story point decouple react package needing dependency think missing point though point explore generic solution around nominal branding eg polyfilling pattern matching react particular value type number similar data structures would nt use one library use trick used forever also larger issue polyfills work across boundaries suspect partial polyfilling solution thing broken break ways particular case others similar problems feature library authors able use therefore transpilepolyfills story fixed obvious react fallback different feature tests standard practice eg also use obviously problem feature testing per say global identity required needs polyfill would best way polyfill library code eg react immutablejs check string possible property name nt cause problem similar problem would occur anything requires global state spec intentionally tried avoid global state example zones proposal would similar requirement suppose global state really need shared object reference global polyfill solution maybe global polyfills best practice", "d": "2/2016"}, {"body": "purpose tostringtag nt rather reactelement defining typeof define environments ca nt prevent xss way matters robust solution aside using types jsonserializable course oneanddone library uses actually works could set inlineelements would set typeof tostringtag think magicnum ditched entirely would fix bug check exists returns otherwise return objectassign thing objectassign polyfills real thing result definition symbol polyfill actual symbol reference equality reference equality primary use symbol bug also affects resolved fact previously problems simply multiple instances polyfill returning different symbols reproduction say pass iterable react environment without native symbol userland code polyfill libraries iterable property symboliterator polyfill react checks global symbol exists nt checks also nt exist assumes collection iterable error thrown ca nt iterate plain object run verify indeed fails case runtime missing support node succeeds newer runtimes like specific case react actions taken remove typeof next release simply return global symbol input object real security environments without global polyfill unless willing claim even nt save us structured cloning vectors add check evaluate whether inlineelements transform even exist since function call still fast ca nt production react make optimizations decided optimization still exist update babel set symboltostringtag checking global", "d": "2/2016"}, {"body": "hoping able find way share objects across api workers even crossorigin part would allow symbols transfer workers shared across workers spoofable however true shares identity maybe neither share identity lot research needed space admit long shot many pieces need fit together something consider meantime way read three variables using global polyfills everywhere local polyfills using branding strategy using detect iterability use local polyfills breaks code broken fix something fix still breaks code broken b fix changing works code works c avoid use local polyfills ensure everyone uses global polyfills work fine option nt fix anything helpful option b wo nt work unless change libraries feature detection change specification neither seems realistic option c seems plausible manage fix option c point changing react works options", "d": "2/2016"}, {"body": "mentioned intentional objects would work across boundaries instead explicitly put constructor tag chance raw data coming across boundary interpreted element", "d": "2/2016"}, {"body": "idea would work across default unless explicitly provided way share symbol", "d": "2/2016"}, {"body": "looks like fixed thinking picking upon investigation appears fixed maybe closed", "d": "2/2016"}, {"body": "nt explicitly call whitespace yeah hopefully clear enough", "d": "2/2016"}, {"body": "updates well ca nt use inside svg ie svg preexisting ca nt render entire thing react either", "d": "2/2016"}, {"body": "think works masterfuture wrong let know reinvestigate", "d": "2/2016"}, {"body": "thanks jimfb seems fixed latest fixed futurenext glad know resolved stable release soon", "d": "2/2016"}, {"body": "fixed master let add test make sure continues working interest sending pr", "d": "2/2016"}, {"body": "sealed object consuming property expensive", "d": "2/2016"}, {"body": "hi sebmarkbage use case might help working grommet ux framework top react decided move components stateless functions following guidelines defined release notes things working well us except fact started receive issues existing clients ref applied components got converted stateless functions use cases focus management positioning resize could document components support refs nt really good solution opinion feel exposing internals components good idea result thinking adding stateless functions internal components scenario internal components ones used inside core exposed users", "d": "2/2016"}, {"body": "also would like refs stateless components taking measurements wrapped components hocs possible first wrap another hoc make ref one need real dom node", "d": "2/2016"}, {"body": "vlinder yes common strategy recommend nt need dom node", "d": "2/2016"}, {"body": "react really seems less ideal able treat components opaque things instead think whether functional", "d": "2/2016"}, {"body": "taion discussed means creating instances means loose benefits making stateless functions first place attaching refs really escape hatch anyway avoided extent possible people use refs often probably largely refs give access imperative api aligns way historically trained write programs get functional midset writing react code life much easier anyway whole discussion", "d": "2/2016"}, {"body": "agree refs avoided general jquense mentioned often unavoidable dom manipulation many cases eg displays overlays really need get dom node corresponding react element like burden users libraries think whether components stateless think precisely refs bit dirty okay attach suboptimal behavior like creating instances elements refs attached philosophy use refs feature may incur performance costs", "d": "2/2016"}, {"body": "stands though stateless components actually instances assume concern lets block future optimizations even still refs conversation really standin root dom node render probably always going known react least internally right right refs mechanism reliable access child dom node aside annoying sort stuff parent si think folks want see something first class even acknowledging would first class escape hatch", "d": "2/2016"}, {"body": "taion think missing point missing vlinder said nt need burden users wrap user component stateful component attach ref stateful component jquense yes future optimizations ca nt dom node reference referenced dom node could change stateless component rerenders would need handle component could updated react part rerender aka instance", "d": "2/2016"}, {"body": "future allow multiple components returned render finddomnode wo nt work likewise might return null component chooses drilling using finddomnode really thing recommend however due artifacts css convenient way handle layout likewise focus useful however currently rethinking layout focus able handle using react concepts alone future", "d": "2/2016"}, {"body": "right refs mechanism reliable access child dom node aside annoying finddomnode children firstchild sort stuff parent note pass refs props need kind access js function componentwithinput inputref return function parent return whatever breaking encapsulation pretty much explicit equivalent breaking encapsulation worse way", "d": "2/2016"}, {"body": "gaearon work stateless components also set refs maybe string refs case nt quite solve issue child components would need coordinate parent ones provide specific data discussed big win encapsulation nt work components like need measure arbitrary children say nothing currently impossible current api taion said less ideal able treat components opaque things instead think whether functional also amazing focus able handle using react concepts alone future seriously would anything get focus model nt dom one think could demonstrate uncomfortably large percentage bugsfrustrationhacks ui libraries focus related", "d": "2/2016"}, {"body": "nt null nan values still get error updating style via dispatcher store gt changelistening thoughts divstylerendernull", "d": "2/2016"}, {"body": "essekia added fontsize need create new style object instead changing existing one", "d": "2/2016"}, {"body": "used jquery extend clone object solved thanks spicyj", "d": "2/2016"}, {"body": "ran issue using set target empty object new memory reference", "d": "2/2016"}, {"body": "looks like usage question rather bug react core usage questions better answered sites like stackoverflow try use github issues tracking bugs react core reason going close issue feel free continue conversation move stackoverflow", "d": "2/2016"}, {"body": "looks like nt discussion topic scope appropriate general type checker", "d": "2/2016"}, {"body": "hi got problem used densejs tried set custom data attribute xxx behavior accepted future", "d": "2/2016"}, {"body": "sure densejs issue think duplicate fixed appears work latest", "d": "2/2016"}, {"body": "jimfb thanks answer mentioned dense got problem using check jsfiddle problem looks working great however work jsfiddle attribute nt show correctly", "d": "2/2016"}, {"body": "imgarylai bugfix git version jimfb fiddle using released react", "d": "2/2016"}, {"body": "cody correct imgarylai yes works", "d": "2/2016"}, {"body": "cody jimfb thank", "d": "2/2016"}, {"body": "anyone feel like sort consensus model something like react least enough ya would open pr explores gather conversation single serializable state treeatom allows use cases folks want see state continues exposed local components changing current component api disagreement api expose state tree user", "d": "2/2016"}, {"body": "gajus link broken exact problem", "d": "2/2016"}, {"body": "gajus link broken exact problem appears react turned monolithic repository specific issue likely component including often scenario developing multiple components using link using webpack make sure one version used forcing primary resolution path webpack config eg let know addresses issue", "d": "2/2016"}, {"body": "going close say nt going", "d": "2/2016"}, {"body": "realistically probably nt going fact pulling reactlink stuff core really beneficial pattern threw reactlink stuff addon try pull even later effort make easier community fork provide utilities community finds useful let die community nt find useful anyway feel free fork add improvements", "d": "2/2016"}, {"body": "think official recommendation point would use context things like also allows simulate serverside render initial mount client side pretty handy trickfeature make nodeschecksums align", "d": "2/2016"}, {"body": "issue nt seen activity six months fixed classes nt think likely make change old style classes", "d": "2/2016"}, {"body": "ping kureev simple testcase", "d": "2/2016"}, {"body": "response six months closing", "d": "2/2016"}, {"body": "similar issue checked two copies react ref success tried small test created two library project x one application project first test made react reactdom peerdependencies library projects project depends project x application project depends react reactdom projecty error reported second test project x used refs made project use component project x refs application project used project component time error reported though library project react reactdom external also resided peerdependencies turns library project using main property packagejson pointing distributable version path rather pointing npm module version path caused trouble thought sharing guys double check library packagejson", "d": "2/2016"}, {"body": "proptypes mostly maintenance mode probably nt making big api changes point", "d": "2/2016"}, {"body": "spicyj also looking answer question mikkoh asked", "d": "2/2016"}, {"body": "spicyj may possible feasible add refs children nodes case one query dom node downstream reference", "d": "2/2016"}, {"body": "miguelguedes vinspee miguelguedes look solution madlittlemods provided solution correct somethingthatwillfindstuff simply clone props obviously immutable immutable props prevent cloning may possible feasible add refs children nodes case one query dom node downstream propschildren reference use callback refs always feasible new callback ref also call previous callback ref making completely transparent whomever ref pass reference actual dom node call walk dom recommended solution attach ref said usage questions better answered sites like stackoverflow try use github issues tracking bugs react core generally answer usage questions github", "d": "2/2016"}, {"body": "directly require react react dom min get error even though using reactcreateclass webpack directly requiring min versions server build reason wanting directly require min versions", "d": "2/2016"}, {"body": "discussion six months nt see anything actionable going close", "d": "2/2016"}, {"body": "wanted circle back think blocks changes wanted look streaming async started implementing suggestion moving recursion tests updated yet basic examples working unfortunate thing calls depended mounted images executed within components move logic actual mounting happening think best way resolve would move forks respective return simpler meta objects would use call implementation specific adapters thoughts best way decouple methods", "d": "2/2016"}, {"body": "speciel field serialized confused elaborate", "d": "2/2016"}, {"body": "jimfb thanks question see clear confused elaborate output text file", "d": "2/2016"}, {"body": "yes relevant serializability anything", "d": "2/2016"}, {"body": "generally document differences react behavior web standards case far tell simply conforming web standards clear remains documented particular way deviating web standards unclear", "d": "2/2016"}, {"body": "yes know way react web standards input file simulated reacts virtual dom", "d": "2/2016"}, {"body": "mean input file simulated virtual dom mean possible render", "d": "2/2016"}, {"body": "virtualdom virtualdom types properties explained typefile even mention page", "d": "2/2016"}, {"body": "nt call prop particular nt different web nt call instance block quoted call ones exceptional previous bullet point applies others think consistent think reasonable mention deviate expectation going close", "d": "2/2016"}, {"body": "think might worth mentioning something eg ca nt actually programmatically set value file input pretty big deal means susceptible issues reconciliation read also read work even outside react still might worth mentioning", "d": "2/2016"}, {"body": "zpao thanks reply think might worth mentioning something eg ca nt actually programmatically set value file input pretty big deal means susceptible issues reconciliation meant could explain", "d": "2/2016"}, {"body": "wait", "d": "2/2016"}, {"body": "would also like see nicer way suppressing message using zombiejs execute tests react app unless suppressed using hack message appears middle mocha output spoiling party", "d": "2/2016"}, {"body": "caused current react library handle properly right avoid using supported yet extra information error easily reproduced plain html javascript long know want change href value existing svgaelement reproduce error react version record nt produce error called inside library however enough set value href means still use", "d": "2/2016"}, {"body": "however enough set value href means still use svg sorry super familiar svg elaborate wrong", "d": "2/2016"}, {"body": "nothing wrong react support nobody use tried explain error occurs react runs fails getter property also tried instead assigning seems run inside library nt throw error time still fails update value want support chance guess would hard current architecture distinguish", "d": "2/2016"}, {"body": "piglovesyou sure true current architecture distinguish already things like enable tagsattributes within tag would speculate handling would technically possible cc spicyj think bigger question many svg tagsattributes use getters like singular special case going see type thing cropping dozens situations svg", "d": "2/2016"}, {"body": "surprising setting attribute nt work writing html works calling", "d": "2/2016"}, {"body": "fixed", "d": "2/2016"}, {"body": "comments six months nt clear want change bug nt actionable might get changedfixed part bigger docs rework let close", "d": "2/2016"}, {"body": "actually like code snippet posted bc preprocessing initializing default props thanks mentioning", "d": "2/2016"}, {"body": "spargonaut provide two fiddles one demonstrates works without react second demonstrates work react", "d": "2/2016"}, {"body": "nt seen people running old issue nt repro going close reinvestigate get repro", "d": "2/2016"}, {"body": "killed", "d": "2/2016"}, {"body": "document reactdomunstablebatchedupdates", "d": "2/2016"}, {"body": "spicyj since start documenting features nt always left intentionally undocumented also unstablerendersubtree unstablehandleerror others thought decision document become stable document part release process different situation addon issue made sense time", "d": "2/2016"}, {"body": "sure", "d": "2/2016"}, {"body": "sorry entirely sure issue requesting internal api seems meet internal use cases going close", "d": "2/2016"}, {"body": "think fixed nt notes anymore nt see factory mentioned anywhere page", "d": "2/2016"}, {"body": "fixed", "d": "2/2016"}, {"body": "update taking cue could submit pr adding still wanted cc zpao", "d": "2/2016"}, {"body": "think pretty unlikely take next release soon hopefully get point next release attrs work without whitelist super inclined spend effort moment", "d": "2/2016"}, {"body": "fair enough reckon closed", "d": "2/2016"}, {"body": "nt come often probably worth cluttering documentation something one ever remember reading however probably could warn warn", "d": "2/2016"}, {"body": "ran issue well trying highlight parts string programatically ie replace tags ended creating module based spicyj solution anyone interested iansinnottreactstringreplace", "d": "2/2016"}, {"body": "controlled components reactive defaultvalue former never lets change latter necessary necessary change default value reason allow user enter value", "d": "2/2016"}, {"body": "updates", "d": "2/2016"}, {"body": "would happy take pr sets back old value places mutate", "d": "2/2016"}, {"body": "trying get interactive product tour hoping drive ui events like user would bloodyowl said problem looks jquery react issue probably closed use code instead", "d": "2/2016"}, {"body": "yagudaev sir saved us lot time thank", "d": "2/2016"}, {"body": "im issue jquery react jquery used react components onchange events never hear onchange event tried shimming val like var originalval fnval fnval function var result originalvalapply arguments first arguments undefined amp amp instanceof amp amp thislength var event uaisie event documentcreateevent htmlevents eventinitevent input true true else event new event input bubbles true react still hear anything works weve also tried polyfilling ie custom events", "d": "2/2016"}, {"body": "react listen onchange use non production react testutilssimulate works even way replicate production react seems like combination objectdefineproperty event propertychange pubsubbed way around rather use dom events definitely issue listening programmatic propertychange events", "d": "2/2016"}, {"body": "transformation potentially dangerous", "d": "2/2016"}, {"body": "happens try", "d": "2/2016"}, {"body": "deceived transformer hoist constant element nt time playing dispute opponent examples realised transform works properly sorry false alarm", "d": "2/2016"}, {"body": "stumbled across ca nt issue closed looks like svg nt support drag events mousedown mouseup etc", "d": "2/2016"}, {"body": "fine closing nt support nt support", "d": "2/2016"}, {"body": "due recent blog post going close issue guys", "d": "2/2016"}, {"body": "ping yibuyisheng site still showing react despite fact going keep pace might make sense point reactjscn", "d": "2/2016"}, {"body": "update experiment using jsonstringify indeed make web workers implementation faster react running ui thread numbers also able get events working created simple todo app pfraze understand comment reactworkers plugin sandbox please explain", "d": "2/2016"}, {"body": "axemclion workers run different thread vm page making better sandboxing iframes threadindependence scales better prevents dos attack capturing thread workers havent good ui work didnt dom access solved using react think could build good plugins framework react apps though need evaluate workersandboxing somewhat first csps help", "d": "2/2016"}, {"body": "latest thinking workers definitely want solve concurrency major issue let work get way particularly scrolling highpriority interaction requires immediate feedback one way solve cooperative scheduling ie making react everything around react yieldy another adding preemptive scheduling os threads workers adds additional guarantees hitting frame deadlines one initial step could take move everything worker proposed reimplementreplace dom however one major limitation text measurement browser layout currently available main thread even implement layout algorithm would nt access text measurement even implemented text measurement would nt access browser font files internationalization fallback unless browsers willing give us text measurement worker option layout main thread react native nt limitation get text measurements worker thread means soon work worker dependent layout going sending blocking work executed main thread wait round trip probably stall animationscrolling however luckily us compositor workers moving along spec would allow us keep executing main thread also put code compositor thread could build react compositor allow us easily build components thread clear react web worker buys us much potential parallelism cost lost scheduling ability module initialization overhead shared code executed twice serialization overhead added complexity compositors nt happening wanted render entire page webgl would wait text measurement workers moving model could potentially use effect intermediate step going less ideal would also require lot work port code move community model completely seems safer wait compositor workers suspect implementation go quick one browser popular websites utilizing spec might take might fatally underpowered first version see long takes meantime react native relay worker hand seems plausible", "d": "2/2016"}, {"body": "relay worker hand seems plausible yup actively exploring", "d": "2/2016"}, {"body": "hi sure understand full problem understand message passing worker main thread expensive sebmarkbage instead focusing using powerful workers nt focus making message passing worker main thread efficient like example supporting native support immutable values allowing pass worker immutable object reference without serialization", "d": "2/2016"}, {"body": "even implemented text measurement would nt access browser font files internationalization fallback sebmarkbage little question would completely silly think could able use embedded font would work pretty much language remember version arial developed purpose embed corresponding font metrics js", "d": "2/2016"}, {"body": "slober terrible expensive ways around also focusing orthogonal problem issue edit also note starting modules code worker nt free neither increases start time lot overlap fdecampredon unicode characters turn glyphs large number ligature combinations makes number explode cjk language fontglyph design character explodes set fixed size maybe could optimizecompress embedded font even glyph sizes would quite large proper sizing shaping need information even would still exact font combination particular browser ie gets rasterized screen would end win cases incorrect measurements", "d": "2/2016"}, {"body": "ok silly p thanks answer developed simple word wrap algorithm svg element past thanks canvas perhaps offscreencanvas could help gets adopted major browsers", "d": "2/2016"}, {"body": "developing react native react dom find react native way merging styles convenient would great could give higher priority thanks", "d": "2/2016"}, {"body": "fixed", "d": "2/2016"}, {"body": "possible seems weird way found validate work", "d": "2/2016"}, {"body": "graue thinking rewrite first suggest using array spreadobject spread syntax suggesting feature needs transpilation seems reasonable mentioned risk involved makes worth considering whether want encourage people tip risk experience wellwritten react code rarely needs update state nested one level deep disagree current doc implication deep nesting common natural think fwiw probably common something like redux mentions using helper obviously libraries beside point want ship document helper available independent package anyway item covered reactaddonsupdate", "d": "2/2016"}, {"body": "bitten well actions triggered nonreactevents calls handlers handled synchronously may trigger component become unmounted halfway handler causing subsequent calls emit warning unintuitive would expect always asynchronous documentation even indicates likely scenario abstraction leaky need know handler invoke call somewhere call stack example componentdidmount windowaddeventlistener componentwillunmount windowremoveeventlistener handlewindowkeyboardpress event thispropsonkeypressed triggers datastore update emits change event ends invoking setstate call parent somewhere checking really necessary must code fear component unmounted point exacerbated fact deprecated thus almost way block warnings aside tracking manually", "d": "2/2016"}, {"body": "mobile browsers already fixed also per probably going opposite direction pulling tap event plugin core", "d": "2/2016"}, {"body": "allowing multiple class names also important cssmodules demo api", "d": "2/2016"}, {"body": "fixed", "d": "2/2016"}, {"body": "pretty sure recommendation point", "d": "2/2016"}, {"body": "hi everyone issue still open guess nothing settled even though imo input textarea work dont deep knowledge dont get conversation implemented guys wrote btw good link nevertheless final call waiting confirmation target implementation know change code anytime soon cheers", "d": "2/2016"}, {"body": "iboxgithub rely behavior believe issue warning", "d": "2/2016"}, {"body": "mean feb pm andreas svensson notifications githubcom wrote iboxgithub rely behavior believe issue warning reply email directly view github", "d": "2/2016"}, {"body": "thanks feedback best practice", "d": "2/2016"}, {"body": "iboxgithub input either uncontrolled value always undefnull controlled value string empty string rather null entire lifetime", "d": "2/2016"}, {"body": "jimfb discussion reparenting without remounting descendants would never expected thing concerned unexpected behavioral changes could result app future versions react gets introduced want stay informed discussion", "d": "2/2016"}, {"body": "another use case contexts stumbled upon component beneath multiple transition groups example would like able focus input ancestor transition groups actually appearenter rather initially mount registering callbacks ancestor appearedentered via methods passed context would convenient way", "d": "2/2016"}, {"body": "honest nt remember discussed entirely possible inperson discussion many reparenting discussions online maybe find", "d": "2/2016"}, {"body": "ping", "d": "2/2016"}, {"body": "going close track part", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "hey folks hate resurrect old issue trick seems work cases add onclick element render method react class using end unable find element error runtime directly modifying assignment resolves issue scenario important impossible use shared react component large multitenant system different versions react might already included page left wondering missed something nt better way solve since seems way solve right fork react change", "d": "2/2016"}, {"body": "way solve right fork react change domproperty issues since far ideal far workable solution", "d": "2/2016"}, {"body": "facing issue nelix quite edge case would nice support", "d": "2/2016"}, {"body": "zpao api suites fine really happy rip dynamically generated css manual style manipulation chrome extension iframe armor", "d": "2/2016"}, {"body": "jimfb example would use flow define types props ca nt quite connect dots disappointing hear going away found useful dynamically creating typechecking falcorshapesproptypes", "d": "2/2016"}, {"body": "please nt remove proptypes", "d": "2/2016"}, {"body": "example would use flow define types props ca nt quite connect dots curious point well assume might pretty type aliases describe", "d": "2/2016"}, {"body": "since people coming proptypes removed anytime soon", "d": "2/2016"}, {"body": "fwiw one best uses proptypes personally eslint config via standard points props use nt defined helps spot fix countless typos cause real problem especially refactors suspecthope sublime equally useful integration however flow defines proptypes", "d": "2/2016"}, {"body": "flow runs command line tool server boilerplate comment file want run flow option hope proptypes continue developed time facebook considers flow type notation useful enough legitimately propose part js standard", "d": "2/2016"}, {"body": "proptypes ships react production apps log console warnings invalid proptypes pretty useful since flow local development react still log kinds warning proptypes removed", "d": "2/2016"}, {"body": "please read earlier comment proptypes removed anytime soon proptypes log production applications either development mode flow current form would log ci explicit execution static checks idea flow gaining support development transform would embed runtime typechecks discussed yet", "d": "2/2016"}, {"body": "let also clarify idea unify type system semantics flow equivalent concepts either direction case people prefer early adoption syntax extension flow provides unified similar systems eventually end standardization track could compile development time runtime warnings however would likely runtime alternative without syntax sugar available although might less convenient compare something like nt want use syntax extension nt wo nt requirement use language extensions use react however hypothetical ideas becomes real adopted proptypes remain maintained unlikely evolve direction incompatible flowunification new unified system evolve suitable upgrade plan", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "maintain really think nt want originally thought wanted react async rendering others thread convinced otherwise even relay basically hoist dependencies tree root container declarations relay containers etc synchronous rendering way go asynchronous rendering nightmare speak experience working company codebase backbone hacked individual updates request animation frames", "d": "2/2016"}, {"body": "agreed used think needed actually backwards view specify data load view function application state function request possibly user state session react allowing components specify data loaded goes one way data flow idea imo", "d": "2/2016"}, {"body": "actually backwards view specify data load entirely sure true sometimes component thing knows data load instance suppose expandable tree view allows user browse massive graph nodes impossible know advance data needs loaded component figure regardless discussion might become much relevant pursue idea running react code within web worker async required communicate across bridge", "d": "2/2016"}, {"body": "example large tree view really wanted able render path already open server side would add path url structure several complex components like would represent states get parameters way components get benefits ssr crawlable navigated using history users share links node within etc also way server determine data needs fetched order render response update bad mistaking graph tree still feel state user view graph represented url structure also nt realize actually work react working framework integrating data layer view isomorphically awesome think agree goes beyond domain view react take role full stack controller", "d": "2/2016"}, {"body": "nt read whole thread sorry discussed already one thing would really help would method would startinstantiate component fire lifecycle methods let developer decide ready render component html string example developer could use settimeout something reliable wait async methods complete hack using redux moment achieve javascript startinstantiate component fires componentwillmount methods fetch async data reactdomrendertostring rootele async methods increment counter decrement resolve const unsubscribe storesubscribe gt const state storegetstate result pending promises wait counter statewait unsubscribe data redux store render element synchronously const html reactdomrendertostring rootele ressend html problem approach second fires methods results unnecessary data fetching", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "basically became request classes released", "d": "2/2016"}, {"body": "documentation basic issue shallowrender components tearing tests get clues docs alternatively getting started tutorial sections tests nt really considered optional", "d": "2/2016"}, {"body": "resurfacing cc zpao spicyj wip diagram notes concise terminology amp toneofvoice developers learn speak language eg composition ecosystem etc etc taxonomy web dev general limited react separation dom vs custom components point view consuming developer lot differences even though components tips could incontext necessary categories articles currently unorganised next step matching jekyll pages precisely categories pretty confident fit rough outline guides section based diagram think anything covering basics belongs getting started section docs x basics prev quick start getting started tutorial thinking react dom components events synthetics styles inline styles forms controlled vs uncontrolled dangerouslyinnersethtml custom components definition vs createclass stateless functions static methods autobinding state take interactivity dynamic uis lifecycle rendering mounting unmounting getinitialstate ref key composition abstraction child components ownership validation proptypes flow performance memoized renders shallow compare immutability measurement api integration dom libraries web components x jsx jsx overview prev jsx indepth html differences prev jsx gotchas conditional statements prev ifelse jsx spread attributes community x community support conferences videos complementary tools x facebook flux relay immutable jest flow", "d": "2/2016"}, {"body": "unodgs seen approach wild nt rely experimental feature like context especially useful nt know children components advance spicyj think alternative", "d": "2/2016"}, {"body": "landed practically solved except specialcase", "d": "2/2016"}, {"body": "landed solves underlying issue due separate issue actually solved tracked", "d": "2/2016"}, {"body": "discussions internally consensus people assume hint reconciler permitted ignore hint related", "d": "2/2016"}, {"body": "pr fix decided abandon per mixins mostly legacy nt really adding things recommended reading", "d": "2/2016"}, {"body": "jpunt able convert react component static markup client came handy sometimes", "d": "2/2016"}, {"body": "jpunt benkeen available client side include", "d": "2/2016"}, {"body": "jimfb da man thanks helpful", "d": "2/2016"}, {"body": "better due", "d": "2/2016"}, {"body": "ustun specifically evidence hotspot", "d": "2/2016"}, {"body": "per mixins legacy feature really adding things point issue untouched year closing due inactivity", "d": "2/2016"}, {"body": "ran ability render full page react help deal seo title many things much flexibility wo nt even need something like helmet reactdocumenttitle simply seems logical handle whole application state within react prepending doctype easy things really hard impossible sigh", "d": "2/2016"}, {"body": "well found people say changing head virtual dom push browsers go crazy definitely worse whole app within react maybe nt good idea", "d": "2/2016"}, {"body": "baygeldin specifically define go crazy browsers changing nodes", "d": "2/2016"}, {"body": "jimfb guess said unexpected behavior could nt find good example understood main arguments browsers expect replacing whole nodes head behavior standardized common practice browserextensions inject external resources head react override handles head tag also according mdn documenthead readonly sorry nt concrete examples time investigate decided go standard way things", "d": "2/2016"}, {"body": "excellent example almost feel like part main documentation weird issue try nail controlled form attempted mask", "d": "2/2016"}, {"body": "seen lot react components aim introduce control flow behavior personally prefer keep pieces functional part language personal preference think component based approaches mentioned fantastic pieces work published really simple function used compose conditional render blocks pretty much might expect inline expression named function composed function jsx const ifeven number gt renderif number const ifodd number gt renderif number class mycomponent extends component render return ifeven thispropscount thispropscount even ifodd thispropscount thispropscount odd vanilla jsx const ifeven number gt element gt elseelement gt number return element return elseelement class mycomponent extends component render return ifeven thispropscount thispropscount even thispropscount odd main goal stay flexible composable feel solved issue seeking nt", "d": "2/2016"}, {"body": "ajwhite suffers problems mentioned one post prior ca nt solved without transform per need something like", "d": "2/2016"}, {"body": "jimfb thank links terrific points approach promotes idea block evaluated predicate fails yet certainly warning warning warning mentioned thought using callback avoid evaluation thread keep discussion moving ty feedback", "d": "2/2016"}, {"body": "would nt easily circumvented stateless components function listspans props propscondition return null little syntax solves issue hand", "d": "2/2016"}, {"body": "milesj lot syntax statement also means nodes longer place scroll different file least different part file see going get rendered condition true also stateless components ca nt return list bottom line nt solve", "d": "2/2016"}, {"body": "imo returning multiple tags complex conditionals like condition condition name name null hello name null probably better extract component syntax nt necessarily bad components updated support arrays", "d": "2/2016"}, {"body": "would love see fixed dealt problem use simply added event event works ie edge nt give exact result value changed event think case anyway degrades beautifully", "d": "2/2016"}, {"body": "tap standard event probably going rip core let people detect taps user land current implementation probably needs bit cleanup anyway detect things like double taps long holds anyway lines code available someone wants fix publish external librarymodule might useful people", "d": "2/2016"}, {"body": "maybe", "d": "2/2016"}, {"body": "revolunet works like charm handle simple tap double tap long tap needs calculated hand plugin", "d": "2/2016"}, {"body": "topic patterns stronglydiscouraged days took cue wrote code handle csrf tokens component passes data via child receives would etc solid direction", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "looking forward fix would like use svg icons dangerously setting bummer", "d": "2/2016"}, {"body": "ajfarkas works already", "d": "2/2016"}, {"body": "true tags nt appreciate attempt giving people heads producing major headache since change svg code change back gets updated", "d": "2/2016"}, {"body": "tags svg tags attributes work master work mean changing code", "d": "2/2016"}, {"body": "hey props making react awesome pun intended trying use inert html attribute disable div polyfilling works browsers react nt seem letting way get work currently thanks", "d": "2/2016"}, {"body": "tnrich yet supported attributes put element call manually example", "d": "2/2016"}, {"body": "awesome thanks gaeron thu feb pm dan abramov notifications githubcom wrote tnrich yet supported attributes put ref element call setattribute manually example return reply email directly view github", "d": "2/2016"}, {"body": "tnrich dropped standard drafts time ago pending standard", "d": "2/2016"}, {"body": "dantman may reason use polyfill kind misnomer case given listed caveats npm module using sorry stray topic everyone", "d": "2/2016"}, {"title": "ca nt import component transpiled babel outside app source folder", "body": "version trying create project uses style components webpack babel babelrc works fine reference components defined somewhere within project main directory subdirectory instance successfully created app mybutton component app import use mybutton fine however create duplicate project transpile src babel configuration attempt import duplicate mybutton original project app component get obscure errors also tried import duplicate mybutton component without transpiling via babel work identical still get errors using webpackdevserver serve basic bundle brought believe minimum necessary dependencies index file indexjs import import rxjs import bootstrap import app componentsappapp bootstrap app mybuttonjs import component class mybutton export default component selector mybutton template inputs label onclick mybutton appjs import works import mybutton mybuttonmybutton import nt work import mybutton uxtlibcomponentsmybuttonmybutton import mylist mylistmylist import component import httpproviders http export class app constructor http thisloaddata thisloaddatabind thiscleardata thiscleardatabind thishttp thisitems setitems gt thisitems resjson loaddata thissetitems cleardata thisitems export default component directives mybutton mylist providers httpproviders selector myapp template app", "num": "7346", "d": "2/2016"}, {"title": "support named optional parameters injectable ctors", "body": "right named optional parameters work ctors maybe named optional parameter implicitly annotated", "num": "7344", "d": "2/2016"}, {"title": "use iterablesize iterablecountiterablelength deprecated use iterablesize iterablecount", "body": "ignore", "num": "7343", "d": "2/2016"}, {"title": "canactivate called child parent", "body": "think parent canactivate tested child canactivate case typescript canactivate gt new promise resolve gt consolelog child canactivate settimeout gt resolve true component selector child template child template class child canactivate gt new promise resolve gt consolelog parent canactivate settimeout gt resolve true component selector parent template directives routeroutlet routeconfig path name child component child class parent component selector root template directives routeroutlet routeconfig path name parent component parent export class appcomponent result think", "num": "7342", "d": "2/2016"}, {"title": "missing controlvalueaccessor file input", "body": "notice control value accesor inputs type file", "num": "7341", "d": "2/2016"}, {"title": "forms allow array controlgroups", "body": "trying create sort cms content team populate spaces page based template define like create form structure looks like seems like controlarray accept controls means limited array singular values managed hack around storing extra array controlgroups class checking validity like starting get really painful form structure gets deeper", "num": "7340", "d": "2/2016"}, {"title": "strictly typed functional templates", "body": "would great another possibility template representation besides string inspired react jsxtsx exists custom jsx factory creates javascript object tree consumed angular alternative string template use javascript x typescript template see inline html templates second case could eg component attribute pure javascript example strictly typed typescript example angular accepts angularjsxlike template representation rest almost completely covered typescript ide benefits refactoring intellisence syntax highlighting autoindent etc developer writes javascript component selector myapp class appcomponent templatejsx title itemsmap gt displayitem okbutton doclick okbutton doclick reactmouseeventhandler return items doclick alert onclick typescript transpiler generates external template encodes template javascript object tree consumed angular string alternative", "num": "7339", "d": "2/2016"}, {"title": "responsetype integer expected string", "body": "response associated type basic cors default error opaque opaqueredirect unless stated otherwise default type defined enum type typescript use enum index integer typescript let response new response new responseoptions body err type responsetypeerror responsetype error false responsetype line fix example fix", "num": "7338", "d": "2/2016"}, {"title": "angular typings visual studio aspnet", "body": "integrating definitions package directly including aspnet project uses systemjs really easy put file definitelytyped project typescript file everything worked fine nt fit anymore case since single file definitions using import statement path js file resolved systemjs visual studio knew definition file declaring module achieve visual studio know tried many hours without success except using old alpha stage file changing slightly declare problem resolved without using new project system aspnet", "num": "7337", "d": "2/2016"}, {"title": "feat querylist update list demand", "body": "currently way trigger update querylist using ngfor querylist reset probably others way aware adding elements dynamically component view using renderer createelement problem querylist idea add element satisfies directive clear plnkr see plnkr view button add inputs clicked want viewchildren triggered viewchildrenchanges etc add new input rechecking view everytime sounds really heavy task thinking method querylist get list inputs found view typescript directive selector input class input component selector myapp directives input export class app viewchildren input inputs ngafterviewinit addelement let element thisrenderercreateelement thiselementrefnativeelement input thisrenderersetelementattribute element type text missing something already possible would appreciate comment using ngfor course thanks smile", "num": "7336", "d": "2/2016"}, {"title": "loadintolocation example api docs work", "body": "plunkr using example code shown api docs dynamiccomponentloaderloadintolocation running throws errors", "num": "7334", "d": "2/2016"}, {"title": "router creates invalid query parameters routeparams reads params incorrectly", "body": "found using something like create url like navigate happens set null reload set inconsistent also certain characters example truncate rest query string result params read correctly reloaded gets cut", "num": "7333", "d": "2/2016"}, {"title": "error find name tabcomponent", "body": "using designing simple composite tabscomponent class houses one tabcomponent classes parent export class tabscomponent implements aftercontentinit contentchildren tabcomponent tabs querylist ngaftercontentinit output gt gulp using gulpfile gulpfilejs starting clean finished clean ms starting less finished less ms starting sass finished sass ms starting error find name tabcomponent typescript semantic error typescript emit succeeded errors finished refuses compile", "num": "7331", "d": "2/2016"}, {"title": "dynamically created input type checkbox work ngmodel", "body": "creating options list allows user change different settings found problem type checkbox take component ngfor loop combining dynamic setting inputs types ngmodel work second checkbox although first dynamically set im guessing problem ngmodel determines input type checkbox example found sorry work typescript able use typescript plain hope still interpret meaning maybe someone translate typescript", "num": "7329", "d": "2/2016"}, {"title": "support async pipes input promises returned function invocation", "body": "right async pipes break templates promise passed result function invocation directly template think would nice allow behavior example component selector asyncpipetest template delayedmessage async export class asyncpipetestcomponent constructor work obvious think work least use case pass function template evaluates promise", "num": "7328", "d": "2/2016"}, {"title": "angular breaks silently mysteriously zone shim loaded incorrectly", "body": "zones loaded correctly angular end weird state everything initially seems work fails subtle mysterious ways loading app manifests change detection always running supposed app startup tests manifest fakeasync flushes seeming nothing incorrect loading happen pretty easily load polyfill shim may overwrite angular zone shim thus loaded polyfillsshims angular perform kind zone sanity check bootstrap informative error message cc mhevery", "num": "7327", "d": "2/2016"}, {"title": "submit ngsubmit", "body": "please add changelog information breaking change", "num": "7326", "d": "2/2016"}, {"title": "angular router url parameter forward slash gets truncated", "body": "use angular router url parameter contains forward slash url becomes truncated eg changed try access parameters using routeparams get truncated url parameter value atest instead atestwithaslash idea happening fix slashes valid characters url parameter issue goes away urlencode forward slash additionally retrieving routeparam value returned value contains escaped slash eg sure latter considered bug though", "num": "7324", "d": "2/2016"}, {"title": "fix ngcontrolgroup ngcontrol errors propagated outer control group", "body": "control groups track errors inner controls meaning whenever error exists single form control validity state outer control group becomes invalid give access errors control group example invalid gets invalid however stays note templatedriven form might issue modeldriven form", "num": "7323", "d": "2/2016"}, {"title": "route parameters datatypes", "body": "may already implemented feature request looking set datatype requirements route params example take following route would like match number would match route would match route", "num": "7321", "d": "2/2016"}, {"title": "zonejs memory leak observableinterval", "body": "performing testing guys reactivexrxjs project trxcllnt kwonoj seems like behave well environment standalone seems perform fine see plunk whenever inside angular starts leak memory overtime caused mobile browsers crash seen issue chrome linux well safari ios webkit based browser zetakey see plunk see example leak tip run web inspector timeline hit garbage collection every seconds look graph notice minimums keep rising sure exactly causing problem moment think might recursive problem involving zonejs posted alternative code implementation observableinterval works fine inside one nt recursion would appreciate comments would really like get resolved", "num": "7320", "d": "2/2016"}, {"title": "radio buttons working ngcontrol", "body": "saw radiocontrolvalueaccessor recently added selector rules defaultvalueaccessor exclude maybe related", "num": "7316", "d": "2/2016"}, {"title": "fix ngif ngfor element throw", "body": "based putting multiple template directives single element nt work angular throw however plunk demonstrates nt throw plus see instead buttons rather confusing", "num": "7315", "d": "2/2016"}, {"title": "routeparams appended matrix query location router", "body": "method routeparams appended twice url causing url like transformed url like angular pretty cause problems especially allow forward slashes url query parameters propose question fix issue would propose append routeparams query parameters drop matrix variables however nt know easily done said matrix parameters need supported would suggest supported sort strategy pattern prevent duplication parameters url anybody opinion", "num": "7314", "d": "2/2016"}, {"title": "simple way start without npm full source tree", "body": "using visual studio compiles ts expected need add js files dts typings start second version must cleaner easier said research got use modules loader inbrowser compiler things really nt need readytouse solution tried download npm got whole sources vs even compile due bunch errors vs fault project really raw found dts definitelytyped found rx typings need still getting stupid errors like find module rxjsrx guys wrong nt need nodejs need angular types", "num": "7313", "d": "2/2016"}, {"title": "changedetectorrefdetach detectchanges working expected", "body": "want implement simple logviewer list strings input rerender every seconds several strange effects trying implement behaviour detaching changedetector via changedetectorref logviewer component never refresh even detectchanges call setup log export class logviewer input logs logs constructor private changedetector changedetectorref ngoninit thischangedetectordetach setinterval gt effect thischangedetectordetectchanges ngonchanges change printed input binding changes consolelog change change detaching component via decorator component rerendered every change effect still renders change changedetection changedetectionstrategydetached export class logviewer input logs logs constructor private changedetector changedetectorref ngoninit setinterval gt ngonchanges change consolelog change change plnkr demonstrates behaviour", "num": "7311", "d": "2/2016"}, {"title": "mditems updating suggesion list properly mdautocomplete angular material ajax http call", "body": "using mdautocomplete mditems updating response list properly obtained service host ajax call html source code angularjs script bind autocomplete list text change function querysearch query var results scopesearchtext scopesearchtexttrim querylength gt results loadautocomplete query return results load list service call function loadcptautocomplete id testcalculatorservicesearchautocomplete id function result resultdata null scopeilist resultdata else scopeilist return scopeilist getting autocomplete list service host getting response properly update ui properly screen shot searching shows result debugged issue firebug see screen shot shows request sent search term got response two matching items json object shown screen shot screen shot full issue posted stackoverflow", "num": "7309", "d": "2/2016"}, {"title": "feature request global key event filtering", "body": "component wants listen global key events using crashes whereas works fine actually worked roadmap use case trying build modal component want dismiss user presses escape listener tied modal never triggers need listen keyup solution see right catch every keyup filter feels dirty open alternative solutions smile thanks help", "num": "7308", "d": "2/2016"}, {"title": "ngonchanges called ngdocheck implemented", "body": "according docheck api documentation directive implement docheck onchanges time ngonchanges would called directive implements docheck reaction changes handled within ngdocheck callback called see plunker", "num": "7307", "d": "2/2016"}, {"title": "token key mapping using name constructor rather token passed constructor", "body": "believe cause possibly app looks like following javascript var function component var function component ngcore component selector template class constructor ngcore component selector template class constructor var appcomponent ngcore component selector testapp template directives class constructor function windowapp documentaddeventlistener domcontentloaded function ngplatformbrowserbootstrap appcomponent output change first two lines output app plnkr minified code creates core components name e rather ngif ngfor etc goes inject one usually finds wrong one", "num": "7306", "d": "2/2016"}, {"title": "request compatible api", "body": "far know api compatible exist use case deprecated currently missing cc igorminar", "num": "7305", "d": "2/2016"}, {"title": "mock window dom objects", "body": "although encouraging users directly use window dom objects ca nt stop anyone using need mocks window objects angular app runs server web worker mobile device etc app nt break", "num": "7304", "d": "2/2016"}, {"title": "universal storage service", "body": "need universal service ie client server used angular app access localstorage similar repositories issue coming design service implementing core place server side implementation storageservice use redis something else implemented angular universal repo", "num": "7303", "d": "2/2016"}, {"title": "universal cookie service", "body": "need universal service ie client server used angular app manage cookies issue coming design service implementing core place server side implementation cookieservice implemented angular universal repo", "num": "7302", "d": "2/2016"}, {"title": "universal head service", "body": "need universal service ie client server used angular app manage head section html document example also able set values declaratively component decorator potentially part router issue coming design service implementing core place server side implementation headservice implemented angular universal repo", "num": "7301", "d": "2/2016"}, {"title": "hidden hide bootstrap class", "body": "angular work elements including etc bootstrap hide works hide works well", "num": "7300", "d": "2/2016"}, {"title": "proposal host projection", "body": "design copying api ease discussion appts componentts resulting dom", "num": "7297", "d": "2/2016"}, {"title": "component template html strings require attribute quotes", "body": "using angular certain html template strings cause error following strings work link link strings work image render link exception see link exception see link motivation using quoteless attributes hope use existing html minification tools like webpack reduce size component html strings one ways tools save bytes removing attribute quotes safe component import component component selector html string valid according html spec angular throws templatenormalizer error template link export class constructor exception exception template parse errors unexpected closing tag link error gt exception template parse errors unexpected closing tag link error gt anonymous function anonymous function promise internal trycatch promise internal invokecallback promise internal publish anonymous function anonymous function promise asap flush stacktrace browserdomadapterlogerror anonymous function anonymous function promise internal trycatch promise internal invokecallback promise internal publish anonymous function anonymous function promise asap flush error template parse errors unexpected closing tag link error gt new baseexception templatenormalizernormalizeloadedtemplate templatenormalizernormalizetemplate templatecompilernormalizedirectivemetadata arraymap native arraymap templatecompilercompilecomponentruntime templatecompilercompilehostcomponentruntime runtimecompilercompileinhost dynamiccomponentloaderloadnexttolocation routeroutletactivate zonerun zonerun zoneboundfn lib promise internal trycatch lib promise internal invokecallback lib promise internal publish microtask zonerun zonerun zoneboundfn mutationobserverlib promise asap flush async gap also raised angularclass team raised back question asked", "num": "7295", "d": "2/2016"}, {"title": "empty href attribute navigates app base", "body": "would nothing angular navigates app base angular desired behavior bug former would equivalent", "num": "7294", "d": "2/2016"}, {"title": "need ngmodel formatters parsers like", "body": "value always", "num": "7291", "d": "2/2016"}, {"title": "create zoneaware httprequest wrapper dart", "body": "see try creating dart httprequest wrapper api ngzone get information needs", "num": "7290", "d": "2/2016"}, {"title": "need way component add css classes host nondestructively", "body": "say user wants add margin around component component need set dynamic css class host element component completely overwrite property wiping away user classes situations serves purpose component apply directive host element using syntax also nt solve variable part proposal component conceptually two distinct lists one user one comes component could resolved independently angular rendering union time user uses syntax override whatever set class cc mhevery", "num": "7289", "d": "2/2016"}, {"title": "typescript files throwing errors modifying file gulp tries recompile", "body": "stackoverflow information problem detail well ever since upgrading beta beta beta issue gulp builds throw whole bunch errors like following successful initial build builds first made modification ts file causes errors subsequent attempts save continues working think really failing still files nt seem emitted changes errors beta think part due size project currently solving module error typing defined declares module variable typing reference beta located bootts file nowhere else completely throwing wrench ability recompile typescript files gulpwatch think something angular", "num": "7286", "d": "2/2016"}, {"title": "feature request add support xml http module", "body": "today supports text json symmetrical desirable xml xml still popular regards sean", "num": "7284", "d": "2/2016"}, {"title": "ngfor calls right hand side loop", "body": "hi let say got smth like plunker wondering ngfor would call function right hand side operator tested found nt bit performance killer even example gave may strongest reason possibility define initial variable would helpful something like sincerely", "num": "7283", "d": "2/2016"}, {"title": "radio button data binding form validation working", "body": "used ngmodel two way data binding ngformcontrol control mapping builder error occurs choosing radio button html follow html preferred language english component follows ts constructor private formbuilder formbuilder error follows case default value radio button mandatory input use required validator preferredlanguage thiscontactdetailpreferredlanguage validatorsrequired simply handle click event manually set model example click contactdetailpreferredlanguage languageafrikaansvalue form becomes invalid data binding validation working", "num": "7282", "d": "2/2016"}, {"title": "find name promise beta", "body": "hi upgraded beta get errors full version dependencies packagejson help", "num": "7280", "d": "2/2016"}, {"title": "error component created viewencapsulationemulated", "body": "component import component import viewencapsulation import authservice servicesauthservice import routerlink component templateurl appcomponentspublictemplatehtml encapsulation viewencapsulationemulated directives routerlink export class publiccomponent constructor private authservice authservice instantiated get following error remove constructor works", "num": "7279", "d": "2/2016"}, {"title": "proposal parentchild selectors", "body": "hi know cheat sheet says parentchild relationship selectors asking totally needs case missing another super fancy yet documented way creating new components also injecting behavior already existing views nothing angular far example existing bootstrapmaterial view code two toggle buttons toggle button disabled toggle button two check boxes checkbox disabled checkbox want inject custom behavior components checkbox togglebutton behave differently one would select cases right problem starts togglebutton checkbox would selector therefore two controller instances created element constructor directives climb tree check really need checkbox togglebutton harm already done problem would simply solved parentchild selectors togglebutton checkbox needs parentchild selectors even better full compliance css selector syntax think missing fancy functionality", "num": "7278", "d": "2/2016"}, {"title": "way stop propagation event web worker", "body": "least find documentation often used feature", "num": "7277", "d": "2/2016"}, {"title": "missing event property error raises silently web workers", "body": "sure big issue quite annoying web worker methodproperty nt exists defined event example raising error however console seen switch pause caught events switching feature nice time convinient", "num": "7276", "d": "2/2016"}, {"title": "first async validation status emit", "body": "hi wondering first async validation status emited fact error message component listening statuschanged update input run asyncvalidation input first time check errors status input status ok far async new status dispatched threw statuschanged ca nt update error message status reason dispatching first async status workaround", "num": "7275", "d": "2/2016"}, {"title": "add cors support jsserve task", "body": "would like use resources made available task another server cors error since systemjs tries load js files cross domain requests could add module middleware file implemented angular fork branch see commit", "num": "7273", "d": "2/2016"}, {"title": "route changed event", "body": "quick question anything inform component route changed result navigation might initiated component", "num": "7272", "d": "2/2016"}, {"title": "moduleid missing typings unresolved variable type module", "body": "get unresolved variable type module specify component metadata temporary fixed chunk code interface moduleinterface id declare var module moduleinterface think something like missing dts file checked metadatadts see nt exactly know moduleid comes documentation says module id module contains component needed able resolve relative urls templates styles dart determined automatically need set commonjs always set moduleid guess defined somehow", "num": "7271", "d": "2/2016"}, {"title": "bug lifecycle lifecycle hooks called unless defined prototype", "body": "lifecycle hooks component router called defined class function prototype called defined constructor js class mycomponent implements oninit ngoninit works class mycomponent implements oninit ngoninit gt typescript warning never called function mycomponent mycomponentprototypengoninit function works function mycomponent thisngoninit function never called expect lifecycle hook called either scenario design cc mhevery", "num": "7270", "d": "2/2016"}, {"title": "routing hard refresh forward tilde quick start guide", "body": "going quick start guide put path forward slash path hard refresh eg application breaks tried updating paths absolute success get unexpected token lt route exist way handled application", "num": "7267", "d": "2/2016"}, {"title": "consider creating new test bed encapsulate test injector test component builder", "body": "cc vikerman goal would reduce coupling specific test frameworks ie jasmine dart package test package unittest reduce boilerplate around tcb potentially could also control fakeasync encapsulate test zones intent would public api could used someone interested testing another framework eg mocha testing without jasmine wrappers", "num": "7266", "d": "2/2016"}, {"title": "formdata support coming anytime soon", "body": "", "num": "7265", "d": "2/2016"}, {"title": "injecting service service leads exception error instantiation", "body": "hello going step step hit another rock although till learning curve nt seem steep successfully created service injected component use page want inject service native service need get errors exception error instantiation initobject listitem initobject original exception unimplementedtlogerror stacktrace tlogerror unimplemented new objecti unimplemented eobjectdefinepropertyget nativeelement new initobject einstantiate einstantiateprovider enew egetobjbykeyid egetbykeydefault tlogerror context tried follow examples online able solve component looks like import component view elementref enableprodmode import bootstrap import initobject servicesinjectorhelpers enableprodmode component selector listitem view templateurl itemhtml export class listitem bootstrap listitem initobject elementref app gt err gt consoleerror err service looks like import injectable elementref injectable export class initobject value isnull boolean tried even using inject inject elementref public instead injectable without passing elementref bootstrap without injection elementref service making service assign constants value everything works fine wrong thanks lot edit specify debugging chrome get error try access myelementnativeelement", "num": "7264", "d": "2/2016"}, {"title": "quickstart syntaxerror", "body": "followed angular quickstart page works fine chrome firefox browser use work dumps following error console syntaxerror expected evalexpression createviewfactoryruntime anonymous function run anonymous function zoneboundfn lib promise internal trycatch lib promise internal invokecallback anonymous function anonymous function async gap error getstacktracewithcaughterror anonymous function bind bindarguments anonymous function anonymous function run anonymous function zoneboundfn lib promise internal trycatch async gap error getstacktracewithcaughterror anonymous function bind bindarguments anonymous function compilecomponentruntime compilenestedcomponentruntime anonymous function foreach anonymous function async gap error getstacktracewithcaughterror anonymous function bind bindarguments anonymous function compilecomponentruntime compilehostcomponentruntime compileinhost loadasroot usefactory async gap error getstacktracewithcaughterror anonymous function createinnerzone ngzone createngzone application bootstrap execute eval ensureevaluated execute using dependencies", "num": "7263", "d": "2/2016"}, {"title": "data binding attribute", "body": "nt seem like currently possible angular using series polymerjs components conjunction angular app many form elements created reflect value attribute element allowing binding would make life much simpler plans allow view data source binding attributes", "num": "7261", "d": "2/2016"}, {"title": "import nodemodules component", "body": "hi struggling around getting marked imported component see nodemodules folder since excluded tsconfigjson per tutorial remove nodemodules entry allows get marked npm package imported component fine well makes sense tutorial nt really tell exlude nodemodules import specific packages components use kind regards", "num": "7259", "d": "2/2016"}, {"title": "developer guide forms tutorial missing stylecss end", "body": "hello went documentation forms found error conclusion part forms documentation big deal product structure missing stylecss file", "num": "7258", "d": "2/2016"}, {"title": "canactivate base class invoked work", "body": "following typescript canactivate next componentinstruction prev componentinstruction gt return bool promise return true export class basecomponent export class usercomponent extends basecomponent navigate user route invoked base class question supported future see note unlike lifecycle hooks one uses annotation rather interface function called component instantiated wonder something thanks steve", "num": "7256", "d": "2/2016"}, {"title": "feat abstractcontroldirective implement haserror geterror", "body": "due realised building templatedriven forms nt apis control instances eg tiny form like short always walk properties instance access error type however form built modeldriven sudden additional apis short makes difference even though seem work instance well building modeldriven forms form model built component associated form dom using model consists happens extends implements nt templatedriven forms using directive extends extends one nt implement expect apis template matter building templatedriven forms modeldriven forms propose extending accordingly access make sense", "num": "7255", "d": "2/2016"}, {"title": "unique message id messagebroker", "body": "cases message travels ui worker get message id generated millisecond generate unique id reason use date", "num": "7254", "d": "2/2016"}, {"title": "router urparserparseparam ignore arrays", "body": "array parameters urparser join one example automatically replaced parsequeryparams use file urlparserjs line angular version like associative array parameter name filter createdat case like key", "num": "7253", "d": "2/2016"}, {"title": "upgrading updating watched value settimeout ends outside ngzone", "body": "consider following code var x hello would expect watch would always called inside ngzone however fixing watch report run zone thus breaking change detection changing upgadeadapter back ngzonerun gt rootscope apply fixes issue", "num": "7252", "d": "2/2016"}, {"title": "interpolation options viewstyles argument", "body": "app requires overloading stylesheet properties usecase example app defines one style api remote backend defines theming option eg logo primary color et cetera opinion able interpolate styles argument like templates taken angulario website example something like please note styles applied globally received dynamic fashion service outputs json example sofar unable find proper hook interpolate styles argument render style sheets overall please advise", "num": "7251", "d": "2/2016"}, {"title": "ngfor causes custom directives undefined", "body": "custom attribute directive placed inside ngfor loop reference error thrown saying directive undefined example code follows js document ready function ngplatformbrowserbootstrap apptesting function app apptestingngcorecomponent selector testing template directives appmultiattr class constructor function thisattributes attr min value attr max attr step value windowapp windowapp function app appmultiattrngcoredirective selector multiattr inputs multiattr multiattrelem class constructor function ngafterviewinit function multiattr consolelog code throws error referenceerror multiattr defined even though directive works fine inside ngfor loop", "num": "7249", "d": "2/2016"}, {"title": "router views displaying properly mobile webcomponentsjs", "body": "overview mobile site includes webcomponentsjs uses angular router switch views user goes one view another using back forward buttons amp view structural directives properly displayed called may affected version least amp motivation building basic seed site developers interested using angular polymer components well rebuilding personal site realized components views using structural directives respectively rendered properly navigating using back forward browser buttons order get render properly must navigate route calls view way use seems browser amp os fails least mobile chrome ios android reproduce simplest example could boil modifying lots alerts well including webcomponentsjs angular hero tutorial making plnkr use mobile browser reproduce feeling something polyfills polymer interacting well together view visited browser history called show perhaps caching issue conflicting something polymer stated way could get views work navigate without using browser history click menu link takes advantage navigation course refresh page keep looking fairly new current workaround may use structural directive pass data polymer component utilizes feature iterate show data going try", "num": "7247", "d": "2/2016"}, {"title": "case built control validators minlength maxlength inconsistent", "body": "hey loving way forms implemented angular say however confused quite bit validators accessed want check control must use lowercase consistency probably", "num": "7246", "d": "2/2016"}, {"title": "input properties always undefined", "body": "hello guys tried badly make component takes input parameter directly html something like tried every solution using input inputs properties never success component looks like import component view input enableprodmode import bootstrap enableprodmode component selector mycmp view templateurl itemhtml export class mycmp input parm string constructor ngoninit consolelog thisparm bootstrap mycmp app gt err gt consoleerror err html template something straightforward like parm result dom generated empty consolelog parm returns undefined wrong code thank", "num": "7245", "d": "2/2016"}, {"title": "router paths match star seem consume url variables", "body": "angular new matrix url type variables seem get consumed star matching routes path constructed like produces objects like", "num": "7244", "d": "2/2016"}, {"title": "native shortcuts cmd ctrl seem open links new window", "body": "holding cmd ctrl clicking link angular application typical behavior nt seem hold true route changes new window opened", "num": "7243", "d": "2/2016"}, {"title": "angular tutorial ts js files build", "body": "", "num": "7242", "d": "2/2016"}, {"title": "feature request allow specifying extra providers route", "body": "child routes nt work unable provide extra providers child route component would great able specify extra providers right route useful child component relies provider available parent provides", "num": "7241", "d": "2/2016"}, {"title": "invalidcharactererror attribute name", "body": "getting following error invalidcharactererror failed execute setattribute element classshow valid attribute name using version", "num": "7240", "d": "2/2016"}, {"title": "ngfor recreates items populated start arrayunshift", "body": "hi guys looks like ngfor preserve items list populated start plunk created plunkr every item entry animation adding item arraypush end list works expected animation run added item deleting end also works fine however unshift used insert item head causes animations rerun problem removing first item bug", "num": "7239", "d": "2/2016"}, {"title": "feat forms easy way access validation error objects", "body": "one validators fail say control like enter something input nt satisfy validator object might look like want display error message accordingly access object using reference way short however want access information provided particular error walk entire property path honest sure properties actually meant used yes maybe would nicer find way access properties easier", "num": "7238", "d": "2/2016"}, {"title": "control value wo nt update dynamic selectbox input", "body": "values select box defined dynamically form created value control wo nt change description problem plunker example found short control bind selectbox like time filter applied value selectbox change value controller", "num": "7237", "d": "2/2016"}, {"title": "refactor ngcontrolname exportas ngcontrol instead ngform", "body": "something like discuss first turns exported quite unintuitive instances referenced say want display error message control invalid need instance control check validity field invalid works unsure way rather expect exported something change reasoning behind exported would breaking change", "num": "7236", "d": "2/2016"}, {"title": "difference selectrootelement createviewroot angularjs", "body": "renderer section official documentation specify yet documented oficial page", "num": "7235", "d": "2/2016"}, {"title": "npm install failing source build", "body": "trying build source npm failing file directory chmod varwwwangularnodemodulesbowernodemodulescardinalnodemodulesredeyednodemodulesesprimabinesvalidatejs running npm version running node version running vagrant box ubuntu installed node installed using nvm following guide", "num": "7233", "d": "2/2016"}, {"title": "ngclass working", "body": "followed docs exactly ng class key value method value boolean nt working beta", "num": "7232", "d": "2/2016"}, {"title": "tutorial docs need typings reference promises", "body": "tour heroes tutorial code uses quickstart targets beginning part makes use promises feature introduced aka typescript compilers fail stage tutorial code currently reference typings file promises feature specified breaking changes section changelog top section file part tutorial begin", "num": "7231", "d": "2/2016"}, {"title": "exported member lifecyclehooksvalues", "body": "seems exported via interfacets file interfacedts", "num": "7230", "d": "2/2016"}, {"title": "testing testing form", "body": "let say simple modeldriven form typescript component export class register login control userform controlgroup constructor fb formbuilder thislogin fbcontrol validatorsrequired thisuserform fbgroup login thislogin template html following unit test would come mind typescript describe register component gt let fixture componentfixture beforeeachproviders gt beforeeach injectasync testcomponentbuilder tcb testcomponentbuilder gt tcbcreateasync register f gt fixture f display form register gt test fail form still valid encountered issue writing ebook early alphas test green looks like works normal cc juliemr mhevery", "num": "7229", "d": "2/2016"}, {"title": "bundled", "body": "dear angular team could please explain create bundle wondering ts file contains indication name bundle belongs instance write however contain information belongs module produce used later external typescript program also wondering pipeline workflow amp toolset used create", "num": "7228", "d": "2/2016"}, {"title": "uncheck radio button", "body": "set radio button state checked view element updated could solved changing srccommonformsdirectivesradiocontrolvalueaccessorts works environment nt know side effects change", "num": "7227", "d": "2/2016"}, {"title": "dynamic ngcontent position", "body": "hi following component template change anything defined css selectors third party framework wondering could make position ngcontent based conditions like work nt show anything since always selects second ngcontent even though condition nt even match", "num": "7226", "d": "2/2016"}, {"title": "performance take almost seconds display item lists", "body": "hi today made performance test different browsers found slowness issue refer", "num": "7225", "d": "2/2016"}, {"title": "angular routing nt work firefox case special character", "body": "link nt work firefox refreshing component nt running chrome works fine without refreshing works properly", "num": "7224", "d": "2/2016"}, {"title": "enable circular reference check generated output", "body": "vicb see added gulp task probably called anywhere also gulp task passes manual run madge command line shows circular reference generated code madge c gulp buildcheckcirculardependencies dart sdk detected using gulpfile angulargulpfilejs starting buildcheckcirculardependencies finished buildcheckcirculardependencies command raised error", "num": "7223", "d": "2/2016"}, {"title": "routerlink inside component work", "body": "hello posting read multiple issues regarding subject could find wanted issue located inside component displayed links change url page update ui plunker exact copy provided example minor change change button link also order added file note select details page hero link work anymore thank help", "num": "7222", "d": "2/2016"}, {"title": "dropdown validation ngformmodel", "body": "create form using ngformmodel maintain model component using form builder validators able validate dropdown selection using builtin validatorsrequired plnkr select back initial value form getting invalidated yes use custom validator custom validators fine terms framework questions validatorrequired uniform across types form elements nt api invalidate form imperatively within code component scenarios would like invalidate form point time nt want rely default custom validators already api pipeline invalidating form code ugly solution", "num": "7221", "d": "2/2016"}, {"title": "design concept input instead routeparams", "body": "developer know component use routeoutlet child template special reason add routeparams concept instead using input routing", "num": "7220", "d": "2/2016"}, {"title": "external libs angular patching", "body": "importing plotlyjs change detection breaks removing lib placing fixes issue plunker provides simple example kind issue may may able fixed angular could cause major confusion regarding expected change detection behavior way prevent external lib clobbering angular patches would possible provide warning development mode thoughts feedback would appreciated", "num": "7218", "d": "2/2016"}, {"title": "add ability pass reviver function http response json method", "body": "method supports passing reviver function especially useful correctly handle date parsing json", "num": "7217", "d": "2/2016"}, {"title": "svg child element render without svg namespace", "body": "describes possible svg child elements via attribute selector expected following work however render circle typescript issue component selector g issuechild template class issuechildcomponent constructor component selector issue directives issuechildcomponent template class issuecomponent constructor get working adding svg namespace works counterintuitive opinion class fixchildcomponent constructor component selector fix directives fixchildcomponent template class fixcomponent constructor plnkr", "num": "7216", "d": "2/2016"}, {"title": "routing removes hash problem", "body": "using openid receive token payload hash part url callback problem router removes hash part use configure app keep hash use inside service authorized required resets authorized use hash part callback greetings damien", "num": "7215", "d": "2/2016"}, {"title": "input nt support typed input variables", "body": "playing around tour hero appherodetailcomponentts different types ways declare attribute directive inputs notice work declare string nothing failed work declare hero exact code shown check try input decorator way additional approaches achieving thing pass object type hero note sections template depending whether variable hero myhero set need input decorator allows us assign property ie hero set another variable ie myhero import component input import hero hero component selector myherodetails approach inputs hero template export class herodetailcomponent approach public hero hero input hero input hero myhero private myhero hero input set hero heropassedin thismyhero heropassedin try approach one one commenting uncommenting appropriate lines see work remove type work well notice declared type declare type hero wo nt work chrome get following printed console fact absurd thing work even declare type string", "num": "7214", "d": "2/2016"}, {"title": "user router link ngfor", "body": "html menudisplayname submenudisplayname typescript import component oninit import router import routerdirectives import menuservice menuservice import menu menu component selector mymenu templateurl appmenumenucomponenthtml directives routerdirectives export class menucomponent implements oninit public menus menu public selectedmenu menu getting error error component menucomponent route config new baseexception routeregistrygenerate routeregistrygenerate", "num": "7213", "d": "2/2016"}, {"title": "debugnodedart needs docs", "body": "right none points need clarification difference difference functions include root search would thought yet trying think nt write test find basic info like", "num": "7211", "d": "2/2016"}, {"title": "difficult making modal dialog work", "body": "ca nt find documentation sample code modal dialog tried follow way make modal dialog work two plunkers came neither work someone help take look see wrong", "num": "7210", "d": "2/2016"}, {"title": "injecting ngcontent dcl hard", "body": "took lot digging find dynamically insert content via dynamical component loader solution still nt ideal detailed another user stack overflow requirement pretty limiting however means ca nt easily done within directive seems odd feature necessarily ties template least think documentation obvious regards feature pretty common pattern component creation", "num": "7208", "d": "2/2016"}, {"title": "infinite loop using", "body": "hi guys get infinite loop using safari stacktrace packages tsd boot import bootstrap import appcomponent appcomponent import routerproviders import httpproviders import rxjsaddoperatormap import rxjsaddoperatorretry bootstrap appcomponent routerproviders httpproviders rooting class import component import routeconfig router location instruction routerdirectives import maincomponent componentssectionsmaincomponent import notfoundcomponent componentssectionsnotfoundcomponent import eventemitterservice serviceseventemitterservice import navigationservice routes servicesnavigationservice component selector myapp template directives routerdirectives providers eventemitterservice navigationservice routeconfig path name routesmain component maincomponent useasdefault true path notfound name routesnotfound component notfoundcomponent export class appcomponent public constructor private router router location location routerrecognize locationpath instruction instruction gt instruction routerrecognize notfound instruction instruction gt routernavigatebyinstruction instruction true using everything works well", "num": "7207", "d": "2/2016"}, {"title": "displaying data guide angular unusably broken", "body": "trying teach use new angular framework read minute introduction okay angular cheat sheet seemed place given reader presumably nt know anything cheat sheet fits angular went displaying data tutorial uselessly awful could nt get code run tells start creating html page okay first fragment html page nt give instructions reference required javascripttypescript got part says reload got list friends realized nt yet run anything idea make work apart trying reference correct files reread preceeding part document several times ca nt make heads tails basic example get message says angular defined oh supposed make part package set npm minute tutorial something else completely incoherent hate squeaky wheel able learn angular documentation however would happy help feedback help make better", "num": "7206", "d": "2/2016"}, {"title": "try use phantom render file html angular show err", "body": "error injector modulerr failed instantiate module app due injector nomod module app available either misspelled module name forgot load registering module ensure specify dependencies second argument ensure module foreach loadmodules createinjector dobootstrap bootstrap angularinit trigger eventhandler foreach loadmodules createinjector dobootstrap bootstrap angularinit trigger eventhandler err show test application yellowlab thanks", "num": "7205", "d": "2/2016"}, {"title": "minificated version broken", "body": "see example derived simple form example works change line indexhtml changed form working anymore exception thrown typeerror read property subscribe undefined", "num": "7204", "d": "2/2016"}, {"title": "ca nt get http actually make request test method", "body": "code simple http get beta let results http get apiuri map resp gt consolelog map resp return resp data gt consolelog data eyeball results console catch error response gt response return observablethrow error server error works run app browser need work tests use exact code test method import inject injectasync beforeeach beforeeachproviders import provide import xhrbackend http response httpproviders responseoptions headers requestoptions import rxjsrx import observable rxjsobservable see actual request made use fiddler watch requests also actually check request made angular mean without external tools like fiddler", "num": "7201", "d": "2/2016"}, {"title": "issue tsc find module", "body": "hello first congrats work made user brand new framework already problems bootstrapping simple component open issue since nt able find solution previous issues simple filetree like nt list files tsconfigjson packagejson bowerjson bowercomponents nodemodules components table contactmanagerts content tsconfigjson compileroptions target module system sourcemap true experimentaldecorators true emitdecoratormetadata true watch false removecomments true exclude bowercomponents nodemodules typings bundles components files componentsts config declaration true outdir minify true sourcemap true excluded folders actually bundles property config part npm module tsproject use gulp compile ts files code contactmanagerts file import component view import bootstrap component selector contactmanager view template welcome title export class contactmanager title string bootstrap contactmanager app gt consolelog bootstrap successful err gt consoleerror err fact simply run tsc even try compile ts file gulp tsproject get errors componentstablecontactmanagerts error find module componentstablecontactmanagerts error find module wrong configuration setup systemjs able resolve paths also browserdts good replacement previous thanks best regards stefano", "num": "7200", "d": "2/2016"}, {"title": "two components class name instance minification mangling first component rendered template second component", "body": "see situation occurs minification mangling tried reproduce without minification using class name components since nt know easily provide minified example plunkr mangling typically convert class names something like see components rendered template unless switch back found several issues minification open one exactly mentions might name collisions templatecompiler", "num": "7199", "d": "2/2016"}, {"title": "hide show div within template", "body": "hi clarification hide show divs angular", "num": "7196", "d": "2/2016"}, {"title": "ngfor trackby error", "body": "getting error bunch changes using trackby appears happen whenever outstanding changes swap put source array ngfor offending component implementation tasks available export class tasklistcomponent constructor private dispatcher dispatcher", "num": "7193", "d": "2/2016"}, {"title": "output attributes emitting events subclass input defined", "body": "following class export class addanimalcomponent public st string public dyn string public errmessage string output added new eventemitter constructor add throw new error implemented clearerr thiserrmessage normalize thisst thissttrim thisdyn thisdyn thisdyntrim clear thisclearerr thisst thisdyn thisdyn subclass component selector addexpansion templateurl templatesaddexpansionhtml directives multivalueinput export class addexpansioncomponent extends addanimalcomponent implements afterviewinit input expansion expansiontype string constructor private animalservice animalservice inject appconstants private constants private toastr toastsmanager super ngafterviewinit thisexpansiontype throw new error expansion synonym type specified add thisclearerr thisnormalize onduplicate item thistoastrwarning input expansiontype defined line emitting events however got expansiontype commented emit works", "num": "7191", "d": "2/2016"}, {"title": "component initialization infinity loop", "body": "hi got infinity initialization loop add component plain js defined like important points empty directives constructor function dublicated name code like got using babel preset workaround made preset without plugin generate dublicated name reproduce open work add constructor name components press run browser crashed", "num": "7190", "d": "2/2016"}, {"title": "bind nonsingleton dependency singleton application wide service", "body": "first sorry many grammar errors example two applicationwide singleton services servicea serviceb wrappers collectionservice collectionservice constructor dependency two services must store various data application lifecycle services pass data collectionservice collectionservice singleton service regular dependency create new object time parent created also collectionservice used somewhere else application dependency nonsingleton services tried set servicea serviceb inside bootstrap throug usefactory imports bootstrap appcomponent provide servicea usefactory gt rerturn new servicea new collectionservice provide serviceb usefactory gt rerturn new serviceb new collectionservice code got error ca nt put collectionservice directly bootstrap collectionservice becomes singleton data passed service servicea serviceb shared also want use servicea inside canactivate routehook need use singleton injector inside hook must give servicea resolved collectionservice export const appinjector injector injector injector gt injector appinjectorref injector bootstrap appcomponent appref componentref gt appinjector apprefinjector question correct bind services ps stackoverflow nt help tried", "num": "7189", "d": "2/2016"}, {"title": "output type wrong error message impossible understand", "body": "suppose output incorrectly connected nonstream suppose use like html lines template code notice use tag nt even use angular aggressively try listen stream fail error message sort like caught exception type gt void subtype type stream dataloaded foocomponent original exception type gt void subtype type stream original stacktrace observablewrappersubscribe package dynamicchangedetectorhydratedirectives package listforeach dart dynamicchangedetectorhydratedirectives package abstractchangedetectorhydrate package appviewinit package runtimeviewfactorycreateviewfactory package appviewmanagercreateembeddedviewincontainer package viewcontainerrefcreateembeddedview package ngifngif package localinstancemirrorsetfield dart reflectioncapabilitiessetter package dynamicchangedetectorupdatedirectiveorelement package dynamicchangedetectordetectchangesinrecordsinternal package abstractchangedetectordetectchangesinrecords package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchangescontentchildren package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchangescontentchildren package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchangesinviewchildren package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchangesinviewchildren package abstractchangedetectorrundetectchanges package abstractchangedetectordetectchanges package changedetectorrefdetectchanges package applicationreftick package listforeach dart applicationreftick package applicationrefapplicationref package rootrun dart zonedelegaterun dart ngzonerun package customzonerun dart customzonerunguarded dart ngzonerun package applicationrefapplicationref package stackzonespecificationregisterunarycallback package stackzonespecificationrun package stackzonespecificationregisterunarycallback package rootrununary dart customzonerununary dart customzonerununaryguarded dart bufferingstreamsubscriptionsenddata dart bufferingstreamsubscriptionadd dart syncbroadcaststreamcontrollersenddata dart broadcaststreamcontrollerforeachlistener dart syncbroadcaststreamcontrollersenddata dart broadcaststreamcontrolleradd dart ngzonenotifyonturndone package ngzonerun package customzonerun dart customzonerunguarded dart ngzonerun package domeventspluginaddeventlistener package stackzonespecificationregisterunarycallback package stackzonespecificationrun package stackzonespecificationregisterunarycallback package rootrununary dart customzonerununary dart customzonerununaryguarded dart customzonebindunarycallback dart wrapeventlistener dart jsobjectcallmethod dart jsnativecallmethod dart blinkjsnativedomexceptioncallmethod dart dart htmlelementclick dart futurefuturemicrotask dart stackzonespecificationrun package stackzonespecificationregistercallback package rootrun dart customzonerun dart customzonerunguarded dart customzonebindcallback dart stackzonespecificationrun package stackzonespecificationregistercallback package rootrun dart customzonerun dart customzonerunguarded dart customzonebindcallback dart microtaskloop dart startmicrotaskloop dart scheduleimmediatehelperhandlemutation dart mutationobservercreate dart notice obscure error nt point erroneous line nt mention faulty component complains nearest enclosing fault might really far away issue wasted hours debugging still needed angular engineer help figure please improve error message make situation debuggable eg failed produce inner contents reason seemed get swallowed bet nt way", "num": "7188", "d": "2/2016"}, {"title": "doubt encapsulation component recursion", "body": "next plunker want know one expected behavior get something like native encapsulation emulated encapsulation usage press toggle button text color one component change childrens instead independent like use native encapsulation problem know browser app run nt support native encapsulation proceed", "num": "7184", "d": "2/2016"}, {"title": "quickstart fails", "body": "updating quick start app nt start following error displayed console uncaught syntaxerror unexpected token lt evaluating error loading", "num": "7181", "d": "2/2016"}, {"title": "internationalising application", "body": "hi continuing upgrade angular project starting make good progress app used dutch english clients used angulartranslate past translate application trying see could use inbuilt internationalisation capabilities angular could find anything use could see source files angular package way translate angular applications today require another rewrite future kind regards jusef", "num": "7179", "d": "2/2016"}, {"title": "external plugins form controls", "body": "hello create directive simply add jqueryinputmask plugin ngafterviewinit callback work great except one thing get whole form value value control plugin applied empty string seems angular nt detect changes input", "num": "7175", "d": "2/2016"}, {"title": "bug setting readonly elementref nativeelement", "body": "setting property script nt set attribute dom element please see plnkr edit updated plnkr link preview", "num": "7173", "d": "2/2016"}, {"title": "request way get components attached app", "body": "currently way get components list attached application add codes constructor lifecycle components like want way debug application finally want lint application component metadata example want know whether components named camelcase difficult reasonless request", "num": "7168", "d": "2/2016"}, {"title": "ca nt build bundles calculating path rxjscoreoperatorsjs", "body": "release blocker fyi matsko ca nt run rxjs upgrade jeffbcross think coreoperatorsts valueside system builder gets confused empty files indicated", "num": "7167", "d": "2/2016"}, {"title": "settimeout ignores additional arguments run inside angular class constructor", "body": "short version settimeout fails inside class cosntructor works fine outside context full example find contains function run starts coutdown inside console inside code outside expected behavior countdown hit zero time ps tested newest chromefirefox ubuntu system ps found two issues settimeout arguments sure related", "num": "7165", "d": "2/2016"}, {"title": "http client call angularjs work", "body": "followed steps described http client developer guide soon took lines tohcomponentts related inmemory web api work please see plunker someone help", "num": "7164", "d": "2/2016"}, {"title": "missing example contentchild works refs docs", "body": "", "num": "7160", "d": "2/2016"}, {"title": "type error using", "body": "following code seems throw type error using ambient angular typings files typescript seems angular typings file expects either passed casting component solves issue figured might want looked integrates smoothly typescript", "num": "7159", "d": "2/2016"}, {"title": "templates need distinguish imports refs", "body": "current semantics correct context templates consider example item works breaks accessed anywhere outer template accessed inner template means possible get reference inner template issue declaring reference input example written way references inputs declared clear way changing semantics consistent separate syntax template inputs proposal create reference visible anywhere parent template shorthand syntax creates input template used template item works works consequences template syntax change item item long form change deprecation temporarily support switch new syntax depreciation warning using", "num": "7158", "d": "2/2016"}, {"title": "postmessagebussink postmessagebussource undefined injectable metadata", "body": "postmessagebus constructor tries inject nt defined yet", "num": "7156", "d": "2/2016"}, {"title": "strange behavior change detection inside electron ipc events", "body": "today ran issue change detection angular tldr needed setinterval call empty function get angular pick changes component created sample project recreates behavior found long story currently working desktop works usb encryption hardware display user encryption device present wanted display icon interface created component listens events electrons node process sent via electron ipc channel browser sample code issue event sent appindexjs line seconds main window created event listener located securityindicatorcomponent browsersecuritylevelindicatorcomponentts line case wondering global ipcrenderer defined created browserindexhtml file line workaround get reference ipcrenderer systemjs replaces require function able get load electron stuff iam wondering elegant way require setinterval call securitylevelindicator component help appreciated", "num": "7154", "d": "2/2016"}, {"title": "exception typeerror function elementcolumn rowiteratorcomponent", "body": "updated core files angularjs beta beta incomprehensible error beta works perfectly coce import component forwardref import rowiteratorcomponent rowiteratorcomponent import moduleiteratorcomponent moduleiteratorcomponent component selector columniterator template inputs columndata directives forwardref function return rowiteratorcomponent moduleiteratorcomponent export class columniteratorcomponent use forwardref component works loop thus runs smoothly el rowiteratorcomponent code import component forwardref import columniteratorcomponent columniteratorcomponent import moduleiteratorcomponent moduleiteratorcomponent component selector rowiterator template inputs rowdata directives forwardref function return columniteratorcomponent moduleiteratorcomponent export class rowiteratorcomponent problem angularjs beta going crazy", "num": "7153", "d": "2/2016"}, {"title": "api docs make exported message visible", "body": "consider page bottom small text reads exported defined line relatively difficult locate feel like maybe put visible place next title entity viewed placing makes information needed write complete statement one place suggestion smile keep great work", "num": "7151", "d": "2/2016"}, {"title": "angular signalr", "body": "angular beta anything built party handling signalr", "num": "7150", "d": "2/2016"}, {"title": "ionic multilingual support", "body": "using ionic application application want give multilingual supportwe know using ionic implement nt know use ionic version", "num": "7149", "d": "2/2016"}, {"title": "angular multilingual support", "body": "using angular application application want give multilingual supportwe know using angular implement nt know use", "num": "7148", "d": "2/2016"}, {"title": "use angualr router component using ngupgrade", "body": "hi trying embark upgrade process one angular applications managed get angular angular working together creating angular component bootstrapping using ngupgrade adapter tried use angular router component wire portions application got following error bootstrap least one component injecting router mean possible use angular router going ngupgrade path case upgrade story becomes lot complicated start writing component using angular work angular ca nt write angular component routable child components use angular application misunderstanding something kind regards jusef", "num": "7147", "d": "2/2016"}, {"title": "form input fields content nt reset destroy submit", "body": "problem somehow similar question problem form ngswitch structural directive submit form fields wo nt reset removed dom take plunker example template looks like submit hide show form text input value one way rebuild form onsubmit check rebuild form submit hide show form insert null matter type probably rebind input new control", "num": "7146", "d": "2/2016"}, {"title": "add shimsforiejs bundle", "body": "see issue question fold polyfills required already make shims easily accessible realize npm package buried way concern far broader testing also need plunkers", "num": "7145", "d": "2/2016"}, {"title": "angular apps broken internet explorer", "body": "angular applications crash internet explorer last working version looks like die messages vary stacktrace seems always try sample applications documentation including quickstart shimmed plunkers crash try quickstart template syntax plunkers discovered last working version rolling plunker indexhtml scripts back version version tested ie update windows", "num": "7144", "d": "2/2016"}, {"title": "exception object object http error occurs without error handler", "body": "angular beta see plunker check console expected something descriptive object object relevant bit javascript handles error map res gt restext subscribe body gt consolelog body err gt consolelog error err try breakpoint looks like problem exceptionhandlerts exception tostring nt anything meaningful sure best way fix", "num": "7143", "d": "2/2016"}, {"title": "proposal add syntax template vars elements", "body": "want use instantiate embedded view anywhere template location ie inability grab templateref directive instance template element becomes cumbersome real way accomplish use retrieve decorating exposes templateref example html template content nt work since assumption something template rather template proposal add new syntax referencing template html template content uses prefix variable standard since going somewhat uncommon usecase shorthand syntax nt strictly necessary desired possible shorthand syntaxes cc vsavkin tbosch", "num": "7142", "d": "2/2016"}, {"title": "testability whenstable work xhrs routing", "body": "branch showing correctly wait xhrs route changes", "num": "7141", "d": "2/2016"}, {"title": "quickstart angular nt work", "body": "run quickstart tutorial nt work angular nt problem new version launch following error displayed", "num": "7138", "d": "2/2016"}, {"title": "support passing element custom selector", "body": "important multiple applications page", "num": "7136", "d": "2/2016"}, {"title": "mockconnectionmockerror result returned response instead error", "body": "base implementation link error detected object created returned observer called error directly passed observer link means error use cases ca nt easily tested error payload object different browser testing mean time pass object function get around problem break typescript compiler lots warnings suggestion either accept object package object done notice already todo class consider using response type", "num": "7135", "d": "2/2016"}, {"title": "lifecycle hooks executed", "body": "using babel seems lifecycle hooks executed understand nt need import anything hooks like oninit executed ngoninit present plunk", "num": "7133", "d": "2/2016"}, {"title": "router changing views breaks polymerjs component", "body": "markup look routing routing new page pressing browser back button becomes polymer uses tag templates inner html custom element becomes content said element seems everything inside tag getting thrown element outer html sure anything routing since issue crops using routing functionality assume related way", "num": "7130", "d": "2/2016"}, {"title": "proper way accessing native element diff ways docs scarce", "body": "proper way accessing native element diff ways seen code uses well code uses native dom via browserdomadapter wondering pro cons proper way things docs seems scarce still assuming latter give webworkers support interface assumption regards sean", "num": "7129", "d": "2/2016"}, {"title": "router order imports breaks app", "body": "defining basic route config order importing router components seems matter found angularclass ngnl igor debugged application saw happening using version systemjs following import sequence fails import component import routerproviders import bootstrap import contactheadercomponent componentscontactheadercontactheadercomponent import contactslistcomponent componentscontactslistcontactslistcomponent import contactsservice commoncontactsservice import routeconfig import routerdirectives import contactdetailcomponent componentscontactdetailcontactdetailcomponent component selector contactsapp template directives contactheadercomponent routerdirectives routeconfig path component contactslistcomponent name contactslist path contacts component contactdetailcomponent name contactdetail export class contactsapp bootstrap contactsapp contactsservice routerproviders defined follows works import routerproviders routerdirectives routeconfig import component import bootstrap import contactheadercomponent componentscontactheadercontactheadercomponent import contactslistcomponent componentscontactslistcontactslistcomponent import contactsservice commoncontactsservice import contactdetailcomponent componentscontactdetailcontactdetailcomponent component selector contactsapp template directives contactheadercomponent routerdirectives routeconfig path component contactslistcomponent name contactslist path contacts component contactdetailcomponent name contactdetail export class contactsapp bootstrap contactsapp contactsservice routerproviders", "num": "7125", "d": "2/2016"}, {"title": "depend rather", "body": "typecheck typings rather exception use small number methods indicated ought remove let users build smaller application require polyfills use polyfill reminded igor comment", "num": "7124", "d": "2/2016"}, {"title": "failed provider reflector", "body": "attempting refactor tests utilize testcomponentbuilder comply breaking change made currently using angular end following instructions specified changelog javascript import xit expect describe injectasync testcomponentbuilder setbasetestproviders import testbrowserplatformproviders testbrowserapplicationproviders import component component selector nope template class simplecomponent sayhello return hello describe simple component gt setbasetestproviders testbrowserapplicationproviders testbrowserplatformproviders recognize simple component gt expect simplecomponent nottobenull expect simplecomponent nottobeundefined get response sayhello method gt const simplecomponent new simplecomponent expect simplecomponentsayhello toequal hello render simple component injectasync testcomponentbuilder tcb testcomponentbuilder gt return tcbcreateasync simplecomponent fix gt fixdetectchanges const compiled fixdebugelementnativeelement final test utilizes testcomponentbuilder fails following error stack trace point failure seems testcomponentbuilder makes call createasync simplecomponent judging stack trace strikes odd error referring able find provider reflector assume covered inclusion karmaconfjs javascript moduleexports function config configset makes think bug get impression di angular encapsulated nothing able influence deep level ecstatic find something wrong dig less believe case help would greatly appreciated", "num": "7123", "d": "2/2016"}, {"title": "router know current navigation", "body": "know current navigation use case want access protected component url protected canactivate perform redirect login page logged want return first page redirect login page must know requested url protected navigate login page navigate protected petebacondarwin brandonroberts idea", "num": "7122", "d": "2/2016"}, {"title": "extending service disregards parent provider creates new instance", "body": "sure bug might trying something supposed new anyway making site test project two navigational menus components menus identical except template code necessary logic happens globally provided service used menus working version two menus looks like top menu shown somewhat simplified typescript import component import naviservice naviservice component selector ssnavitop template export class navitopcomponent private navi private curnaviidx number constructor private naviservice naviservice setup component menu identical except name selector template repeating code components felt rather redundant necessary logic happens service thought clever works ok errors problem creates new instance ov naviservice thus nt update values sitewide instance naviservice specifically naviservice keeps information current navigation position correct order components use repository complete project use angular version", "num": "7121", "d": "2/2016"}, {"title": "router componentinstruction incomplete coming child route", "body": "using router lifecycle hooks second argument previous component instruction provides incomplete urlpath used child routes prevents urlpath used navigate back current route previous route current steps reproduce click first notice id location click second notice id location instead click go back", "num": "7120", "d": "2/2016"}, {"title": "ca nt build source", "body": "try build source cloned repository successfully execute command install required dependencies try build source using commands like probably missed something ca nt find output executing gulp root folder project something similar executing command thanks much help", "num": "7118", "d": "2/2016"}, {"title": "directives export class name cause conflict view", "body": "happen two directives export class name try apply view last one seems picked gets inappropriately applied selector ignored directive example pseudocode selector p export function myclass selector section export function myclass try apply view tags selector section applied applied p section tags happens use myclass constructor name worked fine beta breaks least early beta nt beta locally documented findings complete video walkthrough looks like may related issue opened new issue since symptoms different even though underlying cause may related", "num": "7117", "d": "2/2016"}, {"title": "extending components", "body": "hi need extend component best way first let say document component lot html used across components first thing comes mind document component would used viewchild inputs outputs however also need add common behaviour document component textboxes associated behaviour true textboxes behavioursmethods common every specific document obvious choice textboxes inside document component bind inputs outputs let say also button saves document save method common every specific document specific document example product document obvious choice put method inside document component want catch events sometimes prevent save method product document occurring seems lot work one using events behaviour right conclusion solution document component save export class document saveevent new eventemitter abstract document common behaviour export class abstractdocument save event something like saving product document component export class productdocument extends abstractdocument constructor super think also need inputs outputs textboxes update correctly thank tbragaf", "num": "7116", "d": "2/2016"}, {"title": "ngcomponentrouter angular minified using gulpuglify", "body": "testing angular concatenate minify js code using installed using attempt use following js file using fine works without error using causes error reported google chrome version error reported referencing file code changed actually use eliminating process required prevent error", "num": "7115", "d": "2/2016"}, {"title": "router hash links work pathlocationstrategy", "body": "followed first example router sample tried add code herolistcomponent template html link link click hyperlink entire page reloaded url navigation bar becomes understanding might base href tag indexhtml removed modified maints case url temporarily becomes automatically changes hashlocationstrategy support links within document appears like pathlocationstrategy also nt support missing something", "num": "7114", "d": "2/2016"}, {"title": "forms controls validation onlostfocus onblur rather onchange", "body": "hi looking code setting form controls sharedts appears detect control changes onchange registeronchange eg user types input control angular control keypress triggers validationcheck appears big change change onchange something like lostfocus control reason ask business really nt like validation messages appearing suddenly even user nt finished filling field eg filling password control user suddenly shown validation errors typing anyone got nice solution hiding validation messages showing tab control", "num": "7113", "d": "2/2016"}, {"title": "component router conflicts existing routes", "body": "hi two routes configured run phase app module follow inside home component also route configure follow export default class homecontroller static inject router constructor private router oninit run application gives following error configuration settingshomehome conflicts existing route settinghomehome home component instantiate called twice trigger router add routes config twices remove run phase everything working fine anything wrong way set routes cheers khoa", "num": "7112", "d": "2/2016"}, {"title": "router routerlink throws error named route redirect", "body": "least true redirects child router repro", "num": "7109", "d": "2/2016"}, {"title": "ability dynamically add styles need shimming", "body": "edit vicb issue scoping dynamically added styles edit problem developing component inline styles try write styles content generated later styles fail match due way angular alters styles using namespaces selectors based uniquely generated attribute components template elements following example dynamically generated element blue according defined styles however fails match due angular altered style definitions practical example illustrates issue component wraps generated chart component tries set styles generated svg content however styles fail match since angular compiler nt know elements compile time added later possible solution rather adding unique attribute template elements suffixing style selectors would better apply unique attribute root component element namespace selectors adding parent prefix selector believe change way style blocks altered would less destructive possibly resolve", "num": "7108", "d": "2/2016"}, {"title": "showing data route component", "body": "trying get head start angular reason trying create starter kit basic routing planning using kit projects running trouble displaying data create component used route try displaying data get nothing code component maincomponentts import component view main route component component selector main view directives templateurl appmainmaintemplatehtml export class maincomponent name string template html file maintemplatehtml mohhamed rafi name first thought using mainname route config set property main trying working full code repo", "num": "7107", "d": "2/2016"}, {"title": "unmet peer dependencies even packagejson", "body": "following packagejson get following unmet peer dependency errors unmet peer dependency reflectmetadata unmet peer dependency rxjs causes several errors typescript compile starting lite server need working example clone npm install repository", "num": "7105", "d": "2/2016"}, {"title": "duplicate identifier override input setter", "body": "something simple generates error duplicate identifier logtext seems bug ts transpiling like intercept call regards sean", "num": "7104", "d": "2/2016"}, {"title": "ca nt bind original since nt known native property", "body": "hi everyone want add jquerylazyload project dependencies jquerylazyload html code throw exception error template parse errors ca nt bind original since nt known native property height style margintop remove page imgdataoriginal code work well deal please help", "num": "7103", "d": "2/2016"}, {"title": "routernavigate selectedpipe error", "body": "hello using angular beta dart try navigate get error maybe routers defined rootcomponent routeconfig const const redirect path redirectto const subroute const route path subroute component subroutecomponent name subroute subroutecomponent routeconfig const const route path component homecomponent name home useasdefault true const route path id component alternatehomecomponent name alternatehome alternatehomecomponent override void routeronactivate componentinstruction nextinstruction componentinstruction previnstruction notvalidid routeparamsget id routernavigate home catcherror print gt type object subtype type selectedpipe selectedpipe think something like bool validid componentinstruction nextinstruction componentinstruction previnstruction nextinstructionparams id length gt return true final router router injectorget router routernavigate subroute home return false canactivate validid class alternatehomecomponent works", "num": "7102", "d": "2/2016"}, {"title": "actually selected using ngcontrol", "body": "version browser chrome reproduced bug plunk code selected option selected default remove outer form tag remove ngcontrol cat cat ngform selected option correctly selected default sure real bug making mistake update plunker angular", "num": "7101", "d": "2/2016"}, {"title": "typed tsx like templates angular", "body": "tsx typed jsx react templates big advantage compared angular templates many design time advantages angular use strictly typed approach typescript shame leave templates untyped see lot official angular examples like html fragments strictly typed including atom visual studio code ide benefits find symbol reference rename symbol syntax highlighting auto indent etc typescript fragments html like order title let compiler control somebody got used write react strictly typed tsx templates atom visual studio coding html fragments untyped string backward step use typescript beta custom jsx factories compile time generation", "num": "7100", "d": "2/2016"}, {"title": "template comments bug", "body": "hi problem comments templates using describe problem number pair template works expected number odd angular shows error know standard comment like angular kind comments working okey thanks", "num": "7099", "d": "2/2016"}, {"title": "component tree controller bindtoparent", "body": "hello thinking application tree components let say want reuse somewhere else depend usercrud also want reduce eliminate scope watch usage good practice miss better clean way communication parent child components crud list editor using events directive require function usercrudcontroller userservice var self selfedituser function user want tell editor edit user selfuser user usereditor needs watch scopebroadcast edituser user usercrudcontroller usereditcontrollers need use scope want command child selfusereditoredit user selfsaveuser function user save saving logic selfusereditorhide var updateduserlist selfuserlistupdate updateduserlist maybe self componentsusereditor self componentsuserlist believe approach absurd way used code using angular maybe could something bindtoparent property expose child controller parent crud controller crudlistuserlistcontroller crudusereditorusereditorcontroller modulecomponent userlist bindtoparent true bind component name bindtoparent list bindtoparent function attrs return attrsvar problem see approach could happen multiple userlist elements iteration inside element think", "num": "7098", "d": "2/2016"}, {"title": "quick start npm nt work behind proxy", "body": "latest quick start npm nt work behind corporate proxy even correct npm proxy setting set issue regarding new typings dependency error output typings err message unable read typings check path correct typings err caused unable connect typings err caused getaddrinfo enotfound rawgithubusercontentcom work around place typingsrc file root settings proxy rejectunauthorizedfalse info", "num": "7097", "d": "2/2016"}, {"title": "new datadriven forms flexible", "body": "use jsonschemaorg based data definition generate forms form definition uses keys defined data definition similar approach datadriven forms follows jsonschemaorg standard feature rich capability validations default behaviours like conditional display wonder much flexibility try emulate features reload either form description data definition actual data dynamically required order love logical structure found jsonschemaorg want know best continue using conjunction form tools really looking tips experience anyone best work angular forms validate using tool like ismyjsonvalid etc thank time suggestionssuggested reading", "num": "7096", "d": "2/2016"}, {"title": "unit tests beforeeachprovider nt inject service", "body": "trying test components problem component service within providers service instance initiated bootstrap file import component import servicename servicesservicename test import componentname import servicename error getting tried method well nt work also tried creating testcomponent inside test passing provider along componentname directive unfortunately gave error anyone idea possible services bootstraped bootstrap file use providers component using", "num": "7095", "d": "2/2016"}, {"title": "imported files used providers beforeeachproviders breaks whereas beforeeach injector fine", "body": "really weird behavior bug beforeeachproviders ca nt seem fix created plunkers first one see works fine tests pass log instance interceptorbackend ultimately would like test please note plunker class define file second one exact copy first one except interceptorbackend class file run like work misbehaving code commented please uncomment second describe receive error show end issue resume interceptorbackend defined file beforeeach injector works beforeeachproviders works interceptorbackend defined external file beforeeach injector works beforeeachproviders fails error help would greatly appreciated thanks", "num": "7094", "d": "2/2016"}, {"title": "specifying units width style binding required", "body": "cheatsheet claims binds style property width result expression mysize pixels units optional plunker nt work unless specified edit someone pointed string specified work true find unintuitive documentation still misleading nothing indicate string units specified also following example frameworks unitless number usually defaults px though understand nt want replicate functionality", "num": "7093", "d": "2/2016"}, {"title": "select twoway binding nt work firefox", "body": "change select option two way binding work firefox sample working fine chrome", "num": "7092", "d": "2/2016"}, {"title": "canactivate change component", "body": "currently possible switch component canactivate annotation resolve false nothing except halt execution nt wish change route want return forbidden page know done loader level router however cant routenavigate reponse redirect login would really like checks one location something like onreject callback", "num": "7091", "d": "2/2016"}, {"title": "documentation change typescript", "body": "even page shows selected option type language displayed documentation typescript starting got stuck", "num": "7090", "d": "2/2016"}, {"title": "angular faster", "body": "hi guys today made performance comparison test angular angular implemented app angular angular see framework faster result made surprise expect angular would faster found winner angular instead see app angular angular see side side comparison gif file", "num": "7088", "d": "2/2016"}, {"title": "beta issues", "body": "trying run basic basic displaying data example ca nt get beta even run following directly docs function displaycomponent thismyname joshua displaycomponentannotations new angularcomponentannotation selector display new angularviewannotation template name myname documentaddeventlistener domcontentloaded function angularbootstrap displaycomponent run latest alpha version runs fine beta getting following two errors uncaught typeerror read property observable undefinedwebpackuniversalmoduledefinition anonymous function uncaught referenceerror angular defined anonymous function uncaught referenceerror angular defined anonymous function issue build something wrong tried every file build directory added poly fills using newest chrome nothing error place searched could nt find anyone else referencing pretty sure something wrong", "num": "7087", "d": "2/2016"}, {"title": "ngif directive respecting expression value element using transclusion", "body": "hello everyone ran problem today created following example plunkr happens using inside selector tag nested component projecting dom transclusion condition clause respected affected element rendered whether result evaluating condition regards andr\u00e9", "num": "7085", "d": "2/2016"}, {"title": "mutual recursion among components entered multiple sides", "body": "issue previously submitted potentially related mutually recursive components found another issue much clearcut triggers due recursion plunker could include could include main component could include expected result brackets since rest never trigger actual result using karma test promise never resolves resulting jasmine timeout similarly plunker remains stuck loading main component without actually throwing error", "num": "7084", "d": "2/2016"}, {"title": "template nt refresh", "body": "template display values works fine page loaded value get changed template nt refresh function toggles boolvalue prints value console really get changed printed value initialized one", "num": "7083", "d": "2/2016"}, {"title": "ngmodel get error div contenteditable", "body": "trying use ngmodel two way bind div contenteditable input content follow work occur error", "num": "7082", "d": "2/2016"}, {"title": "broken import paths", "body": "tried use appspects ts import import import zonejs import reflectmetadata import rxjsrx import applicationref provide platform import testserverplatformproviders testserverapplicationproviders describe myapp gt let application applicationref beforeeach gt application platform testserverplatformproviders application testserverapplicationproviders however compilation failed import paths found places eg nt seem provide module think replaced btw pass tests", "num": "7081", "d": "2/2016"}, {"title": "changedetectionrefreattach restores cd mode checkalways instead original", "body": "playing little bit change detection investigate realized restores cd mode checkalways instead original changedetectionmode used detach design bug see plunker replicate click trigger buttons see onpush strategy working toggle cd internal component detach try trigger toggle play triggers internal component always checked", "num": "7078", "d": "2/2016"}, {"title": "example routeparams documentation work", "body": "work throwing error hard figure correct method routing", "num": "7077", "d": "2/2016"}, {"title": "proper way reload page angularjs typescript", "body": "previous version", "num": "7076", "d": "2/2016"}, {"title": "ngupgrade directives work", "body": "application component successfully downgrade using tried include child component using syntax anytime looks loose information contructor also appearance", "num": "7075", "d": "2/2016"}, {"title": "tour heroes tutorial working minimized amp router", "body": "using tutorial plunker bottom page works files works files work files", "num": "7074", "d": "2/2016"}, {"title": "aux route rewrites links", "body": "think something bug report request documentation aux routes experimenting aux routes gotten work partially tell activate aux routes using syntax long parent level route including however noticing activating aux route rewrite links page also contain aux parameter undesirable since inserting auxparam deep links breaks routing appears happen links except asyncroutes deep links seem break take following link activate aux content expected unexpectedly also rewrites demo link main nav inserting msg breaks deep linking issue nt see clean way break aux state meaning want navigate new section bring aux content along currently added button forcefully redirect auxfree route using windowlocation however seems like crude way solving problem routeconfig reference demo route deep link anymore activate aux route route sure using aux routes correctly would really appreciate clarification using beta", "num": "7073", "d": "2/2016"}, {"title": "setelementstyle beta vs beta", "body": "beta order set style directive called thisrenderersetelementstyle thiselement fontsize beta pass nativeelement instead elementref thisrenderersetelementstyle thiselementnativeelement fontsize seems original implementation better intuitive thanks", "num": "7072", "d": "2/2016"}, {"title": "problem manual dependency injection", "body": "sure bug something wrong prob latter trying manually instantiate component named todoservice everything great first steps var myprovider new provider todosservice usefactory todoaction todostatsmodel appstore gt return new todoaction todoaction todostatsmodel appstore deps todoaction http todostatsmodel appstore var injector injectorresolveandcreate myprovider blows try get use something wrong possible get tx sean", "num": "7070", "d": "2/2016"}, {"title": "pass params using eventemitter", "body": "simply put possible pass parameters using trying create simple directive third party javascript library case jqueryui sortable plugin register callback function specific event occurs like start drag stop drag etc like handle events page component instead directive since always holds custom logic jqueryui sortable event passes two parameters callback function one api ref able recieve param custom function putting dollar sign front property name see plnkr code details clue get param method well currently way achieve plnkr current situation", "num": "7069", "d": "2/2016"}, {"title": "number radiobuttonstates form equal number calls formvaluechangessubscribe", "body": "multiple radiobuttonstates form valuechanges observable form called many times radio buttons form radio buttons form means subscribe method formvaluechanges called times form inputs like text behaviour changes subscribe called even multiple input controls form added small project illustrate since could nt find cdn yet", "num": "7068", "d": "2/2016"}, {"title": "chore improve error message multiple components use selector", "body": "accidently ran due copy pasting forgot change selector copied component error got exception template parse errors one component componenteight componentnine componentfour actually already gives enough information think better message maybe make sth like cc vsavkin", "num": "7067", "d": "2/2016"}, {"title": "unable resolve typings dependencies", "body": "hi juste use config error typings run npm install idea sole config configjson name appfrontadmin version description app admin author project license private readme readmemd private true scripts postinstall npm run typings install tsc tsc tsc w tsc w lite liteserver start concurrent npm run tsc w npm run lite typings typings dependencies systemjs reflectmetadata rxjs zonejs devdependencies concurrently del latest gulp latest gulpautoprefixer latest gulpcssbeautify latest gulpcsscomb latest gulpcsso latest gulpless latest gulploadplugins latest gulprename latest gulpswagger latest gulpconnect latest gulptypescript latest liteserver typescript tsconfigjson compileroptions target module system moduleresolution node sourcemap true emitdecoratormetadata true experimentaldecorators true removecomments false noimplicitany true suppressimplicitanyindexerrors true exclude nodemodules error devprojectappappfrontadmin dev npm install npm warn deprecated lodash lodash lt longer maintained upgrade lodash appfrontadmin postinstall homemomodevprojectappappfrontadmin npm run typings install appfrontadmin typings homemomodevprojectappappfrontadmin typings install typings err message unable resolve typings dependencies typings err caused unable find typingsjson homemomodevprojectappappfrontadmin typings err cwd homemomodevprojectappappfrontadmin typings err system linux typings err command homemomodevprojectappappfrontadminnodenode homemomodevprojectappappfrontadminnodemodulestypingsdistbintypingsinstalljs typings err node v typings err typings v typings err need help may report error typings err npm err linux npm err argv homemomodevprojectappappfrontadminnodenode homemomodevprojectappappfrontadminnodenodemodulesnpmbinnpmclijs run typings install npm err node npm err npm npm err code elifecycle npm err appfrontadmin typings npm err exit status npm err npm err failed appfrontadmin typings script typings install npm err make sure latest version nodejs npm installed npm err likely problem appfrontadmin package npm err npm npm err tell author fails system npm err typings install npm err get information open issue project npm err npm bugs appfrontadmin npm err nt available get info via npm err npm owner ls appfrontadmin npm err likely additional logging output npm err please include following file support request npm err homemomodevprojectappappfrontadminnpmdebuglog npm warn optional skipping failed optional dependency chokidarfsevents npm warn notsup compatible operating system architecture fsevents npm err linux npm err argv homemomodevprojectappappfrontadminnodenode usrbinnpm install npm err node npm err npm npm err code elifecycle npm err appfrontadmin postinstall npm err exit status npm err npm err failed appfrontadmin postinstall script npm run typings install npm err make sure latest version nodejs npm installed npm err likely problem appfrontadmin package npm err npm npm err tell author fails system npm err npm run typings install npm err get information open issue project npm err npm bugs appfrontadmin npm err nt available get info via npm err npm owner ls appfrontadmin npm err likely additional logging output npm err please include following file support request npm err homemomodevprojectappappfrontadminnpmdebuglog", "num": "7066", "d": "2/2016"}, {"title": "browserify need load indexhtml instead one bundlejs", "body": "flow creating one bundle application browserify bundlejs load application html angular quickstart configuration dynamiccomponentloader work well describe following maints typescript import reflectmetadata import import reflectmetadata import rxjs import bootstrap import appcomponent appcomponent bootstrap appcomponent using dynamiccomponentloader directive c resolved ats typescript import component provider dynamiccomponentloader elementref import c c component selector aaa template title directive aaa export class private title david constructor dcl dynamiccomponentloader elementref elementref dclloadnexttolocation c elementref cts import component input component selector bbb template directive bbb title export class c private title abc constructor thistitle abc resulting tag empty load indexhtml polyfill works well html angular quickstart nt able use imports maints create one bundle", "num": "7065", "d": "2/2016"}, {"title": "multiple nested routes supported", "body": "hope gave correct naming want state edit employee id belonging company id scenario already supported", "num": "7063", "d": "2/2016"}, {"title": "documentation update http neccessary", "body": "described observables ship subscribe method operators imported definetely go documentation since http doc makes use map operator without mentioning necessary import frustrating developers get startet framework fact almost tutorials http component use map operator without mentioning neccessary import makes even worse maybe would smart document rxobservable object seperately link various points usage", "num": "7062", "d": "2/2016"}, {"title": "routeparams appcomponent", "body": "hello try inject routeparams appcomponent ts import component oninit import routeconfig routerdirectives routeparams import uimatrix matrix import configprovider providersconfigprovider import routerproviders component selector game template providers routerproviders directives routerdirectives routeconfig path play channel name play component uimatrix export class appcomponent get folowing error exception provider routeparams appcomponent routeparams try inject uimatrix component everything works fine limitation issue issue need put logic appcomponent class thanks", "num": "7061", "d": "2/2016"}, {"title": "grandchild component update parentsgrandparent model", "body": "following scenario grandparent component passes value parent component one changes value parent component values grandparent component also changes however add child component parent component changes child component reflected parentgrandparent following plunker extended example tutorial show mean plunker added powerselectcomponent child component herodetailcomponent application one chooses hero proceeds change hero power reflected model seen json string trying figure wrong hours ca nt seem know", "num": "7060", "d": "2/2016"}, {"title": "refuses method binding", "body": "latest beta looks like method bindings getting ignored anyone experiencing like example", "num": "7058", "d": "2/2016"}, {"title": "hostbinding happens ngafterviewinit lifecycle event fired", "body": "hi component javascript import component input contentchildren querylist hostbinding afterviewinit import layer layercomponent component selector citgroupasliderslide template directives layer export class slide implements afterviewinit problem doanimation method gets called set active active boolean method ngafterviewinit method", "num": "7057", "d": "2/2016"}, {"title": "asyncroute doc outofdate", "body": "hi think doc consistent typedef ca nt instantiate asyncroute without passing params data useasdefault aux supposedly optional marked typescript complain without really necessary", "num": "7056", "d": "2/2016"}, {"title": "fix changedetection ngafterviewchecked called component set onpush input properties changed", "body": "similar seems called component set input property changed event fired inside component plunk demonstrates issue see two components one gets bootstrapped second one set run change detection either one input properties changes event fired inside component expectation onpush child component turn green button clicked input properties changing event fired inside child component update similar called change detection performed see plunk subtree component checked trigger cd", "num": "7055", "d": "2/2016"}, {"title": "fix changedetection ngafterviewchecked called changedetector detached", "body": "detaching change detector change detector tree cause component call however seems called change detection performed plunk illustrates issue explain really quick single component bootstrapped detaches change detector change detector tree whenever called want add class component host element visualize change detection performed class removed seconds order make sure nt trigger infinite calls happens outside angular zone expectation bootstrapping app clicking trigger cd app component nt turn green although see cd performed binding component reflected dom update exact happens callback even though cd detached called punk demonstrates pretty much thing turns red", "num": "7054", "d": "2/2016"}, {"title": "refuses build", "body": "please goto uploaded project reproduce tsc output thanks taking look c tsc error find name map error find name map error find name map error find name map error find name map error find name map error find name map error find name map error find name map error find name mapconstructor error find name setconstructor error find name map error find name map error find name map error find name map error find name map error find name map error find name map error find name map error find name set error find name set error find name set error find name map error find name set error find name map error find name promise error find name promise error find name promise error find name promise error find name promise error find name promise error find name promise error find name promise error find name promise error find name promise error find name map error find name map error find name map error find name map nodemodulesrxjscoreoperatorsdts error find name promise nodemodulesrxjscoreoperatorsdts error find name promise nodemodulesrxjscoreoperatorsdts error find name promise nodemodulesrxjscoreoperatorsdts error find name promise nodemodulesrxjscoreoperatorsdts error find name promise nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservabledts error find name iterator nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservabledts error find name promise nodemodulesrxjsobservableforkjoinobservabledts error find name promise nodemodulesrxjsobservableforkjoinobservabledts error find name promise nodemodulesrxjsobservablefromobservabledts error find name promise nodemodulesrxjsobservablefromobservabledts error find name iterator nodemodulesrxjsobservablepromiseobservabledts error find name promise nodemodulesrxjsobservablepromiseobservabledts error find name promise", "num": "7052", "d": "2/2016"}, {"title": "select multiple radio buttons control group", "body": "multiple radio buttons control group soon one selected others control group get updated unchecked even though different name issue seems related line radiocontrolregistry nt check match name thanks", "num": "7051", "d": "2/2016"}, {"title": "brocollitypescript work ts", "body": "paths passed appear absolute resolve paths eg rxjs dts files sources", "num": "7050", "d": "2/2016"}, {"title": "qwhen value promise get resolved manually trigger digest cycle tests", "body": "using jasminekarma test angular app function testing looks something like test triggers rootscope apply right calling foo reason promise inside qwhen datasomeattribute get resolved value tried triggering two digest cycles right one promisethen another resolving promise inside still nt work using angular bug", "num": "7047", "d": "2/2016"}, {"title": "expose application tokens via chrome extensions", "body": "chrome extensions nt know module loader used application test get hold injector elements via ca nt access things like nt access types pass solution provide exports via property", "num": "7045", "d": "2/2016"}, {"title": "dynamiccomponentloader initializing properly circumstances", "body": "tooltip directive takes dynamiccomponentloader constructor loader comes constructor fully initialized directive found within existing components page however component containing tooltip directives dynamically loaded via dynamiccomponentloader directive still detected loader within constructor directive stripped loader functionality compiler viewmanager properties longer present none dynamic loader methods exist called", "num": "7044", "d": "2/2016"}, {"title": "beta safari issue", "body": "hey upgraded beta beta maybe missed something safari support nt working since beta example fails safari error error line message undefined constructor evaluating new tmap error loading sourceid sourceurl stack undefined proto error help would greatly appreciated", "num": "7043", "d": "2/2016"}, {"title": "error switching dependency hero form", "body": "getting code well easier show official hero form plunk official hero form dev dependency changed min error get switch back dev goes away", "num": "7041", "d": "2/2016"}, {"title": "pipe issue routed external template", "body": "trying get plunker together demo issue pipes routed template need first get plunker working show homehtm page thoughts plunker wo nt show homecomponent content routeroutlet update plunker show issue get past", "num": "7040", "d": "2/2016"}, {"title": "docs ngondestroy method description little bit confusing", "body": "lifecycle hooks chapter read ngaftercontentinit component content initialized ngaftercontentchecked every check component content ngafterviewinit component view initialized ngafterviewchecked every check component view ngondestroy directive destroyed thought first glace hooks work except works course tested test showed wrong maybe worth write ngondestroy component destroyed avoid misunderstanding thank advance looking post best regards radek", "num": "7039", "d": "2/2016"}, {"title": "adding direct reference browserdts", "body": "breaking change change log reads transitive typings longer included distribution use need add line somewhere application example top ts file call bootstrap apps target work fine even without adding reference could provide better explanation need add direct reference browserdts", "num": "7038", "d": "2/2016"}, {"title": "typeerror function", "body": "received certain conditions involving mutually recursive components plunker similar error triggered without recursion discussed although allegedly fixed still getting", "num": "7037", "d": "2/2016"}, {"title": "bount ngmodel added ngform", "body": "hi using ngmodel input control added ngform let assume following form html form invalid firstname invalid lastname invalid inputfields empty get following output enter value firstname inputfield get following output enter value firstnameinputfield form assumes valid knows nothing lastnameinputfield accordingly way round output entering value lastnameinputfield form nt affected way without using formbuilder lastnameinputfield behaves firstnameinputfield", "num": "7036", "d": "2/2016"}, {"title": "switch undefined invalid field type hardtodebugerror consolelog", "body": "kind code angular raises invalid field type error function stacktrace shows angular internals line took quite debug code stacktrace chrome consolelog function error raised function consolelog type var console windowconsole logfn console type consolelog noop hasapply false angular babel versions familiar angular internals problem actually inside reactjs code load ngreact angular project however nt understand angular raises error problem switch case statement maybe someone could enlighten", "num": "7035", "d": "2/2016"}, {"title": "renderer setelementstyle fails", "body": "directive import directive elementref renderer directive selector myhighlight export class highlight calling method throws errors exception error evaluation mouseenter exception error evaluation mouseenter browserdomadapterlogerror browserdomadapterloggroup exceptionhandlercall anonymous function ngzonenotifyonerror zonerun anonymous function ngzonerun outsidehandler zonerun zoneboundfn original exception typeerror set property backgroundcolor undefined browserdomadapterlogerror exceptionhandlercall anonymous function ngzonenotifyonerror zonerun anonymous function ngzonerun outsidehandler zonerun zoneboundfn original stacktrace browserdomadapterlogerror exceptionhandlercall anonymous function zonerun anonymous function ngzonerun outsidehandler zonerun zoneboundfn typeerror set property backgroundcolor undefined browserdomadaptersetstyle domrenderersetelementstyle debugdomrenderersetelementstyle highlighthighlight highlightonmouseenter abstractchangedetectorhandleevent appviewtriggereventhandlers eval browserdomadapterlogerror exceptionhandlercall anonymous function ngzonenotifyonerror zonerun anonymous function ngzonerun outsidehandler zonerun zoneboundfn error context browserdomadapterlogerror exceptionhandlercall anonymous function ngzonenotifyonerror zonerun anonymous function ngzonerun outsidehandler zonerun zoneboundfn eventevaluationerrorcontext element strong componentelement comment context app locals object injector injector componentelement comment context appelement strong injector injector locals object proto eventevaluationerrorcontext browserdomadapterlogerror exceptionhandlercall anonymous function ngzonenotifyonerror zonerun anonymous function ngzonerun outsidehandler zonerun zoneboundfn plunker", "num": "7034", "d": "2/2016"}, {"title": "latest breaks typings", "body": "added ref indicated change log yet latest get bunch missing types missing something feature broken regards sean", "num": "7033", "d": "2/2016"}, {"title": "get version runtime", "body": "get version runtime help debugging stack capture possible get ver runtime regards sean", "num": "7032", "d": "2/2016"}, {"title": "repeater doesnt work data coming parent component", "body": "repeater template works fine long array created current component soon add input array make come parent component stops working", "num": "7029", "d": "2/2016"}, {"title": "npm err postinstall typings install", "body": "third day trying install via npm install error tsd postinstall install error install error today npmdebug last part attached fix", "num": "7028", "d": "2/2016"}, {"title": "ngupgrade error expecting hostviewfactoryref navbarinfo", "body": "keep trying make first component app got error js var navbarinfo ngcorecomponent selector navbarinfo template hello navbar info class constructor function var adapter new ngupgradeupgradeadapter angularmodule plancomponentsnavbarinfo directive navbarinfo navbarinfo thanks", "num": "7027", "d": "2/2016"}, {"title": "ngupgrade selectors matching element names supported", "body": "start upgrade error js js var navbarinfo ngcorecomponent selector navbarinfo template hello navbar info class constructor function var adapter new ngupgradeupgradeadapter angularmodule plancomponentsnavbarinfo directive navbarinfo navbarinfo html html thanks", "num": "7026", "d": "2/2016"}, {"title": "angular promises without timeouts", "body": "like something similar nodejs promises angular like functions bit research found far using settimeout function wait function completed ex way thing without setting timeout like use", "num": "7025", "d": "2/2016"}, {"title": "pathlocationstrategy work cordova base element breaks app", "body": "following tutorial moment add cordova apps gets broken tried solution provided work workaround provided live example work", "num": "7023", "d": "2/2016"}, {"title": "querylist lt gt interface iterable typescript", "body": "generated contain member implement iterable interface would okay could use dart implementation missing declaration", "num": "7022", "d": "2/2016"}, {"title": "path new promise typings broken", "body": "see snippet npm install check path correct typings err caused regards sean", "num": "7020", "d": "2/2016"}, {"title": "references non existent rxjs file", "body": "looks like latest beta referencing file seem exist rxjs", "num": "7019", "d": "2/2016"}, {"title": "eventemitter typescript interface differs dart facade", "body": "using typescript compile successfully implementation dart facade lacks method", "num": "7018", "d": "2/2016"}, {"title": "issue query string used url without trailing slash", "body": "using angular aspnet mvc site base tag set site works perfectly use uirouter issues today hit one try browse kind url get error angular url undefined trimemptyhash navigate fr trailing slash error goes away context bug get query string work without trailing slash normal people typing url normally never put slash question mark", "num": "7017", "d": "2/2016"}, {"title": "typings installed together angular postinstall", "body": "see removed tsd started using typings see npm postinstall typings install unfortunately installs root also update blakeembrey already informed aware though plan use typings know lacks definitions get couple complaints ts compilation might consider switching back would nice know plan anyway", "num": "7016", "d": "2/2016"}, {"title": "find name zone", "body": "compile angular app typescript compiler message running typescript base typescript task error find name zone error find name browsernodeglobal compiler settings", "num": "7015", "d": "2/2016"}, {"title": "enable endtoend testing samples ddc", "body": "many samples running ddc keep regression tested existing tests async hashrouting helloworld http jsonp keyevents material modeldrivenforms ordermanagement personmanagement relativeassets routing sourcemap svg templatedrivenforms webworkers zippycomponent pr enables regression testing helloworld mhevery vsavkin ddc hot list", "num": "7010", "d": "2/2016"}, {"title": "reloading main component", "body": "reload main component way reset app also way refreshinitialize single component", "num": "7009", "d": "2/2016"}, {"title": "date pipe working well custom format", "body": "date pipe working well custom format used ie ddmmyyyy see example plunker", "num": "7008", "d": "2/2016"}, {"title": "throws deprecation warning since", "body": "loading getting error firefox browser console please get rid", "num": "7007", "d": "2/2016"}, {"title": "ngmodel bug textarea fields minified versions beta", "body": "hi see stackoverflow question specifically comments answer indeed confirm issue plunker note beta works fine change beta wo nt work however change nonminified versions works time matter version mean works expect mutating value twoway bound also update text field case", "num": "7006", "d": "2/2016"}, {"title": "updated latest npm install fails", "body": "c typings search showing results name source homepage description npm c typings install ambient save found typings definitelytyped continue yes installing definitelytyped dependencies c typings install ambient save found typings definitelytyped continue yes installing definitelytyped dependencies c typings install ambient save c c c c npm install npm warn deprecated objectpick deprecated version please use objectpick instead npm warn prefer global typings installed g postinstall c typings install ambient name github typings install ambient name github dependency name typings err message unable read typings check path correct typings err caused responded expected equal typings err cwd c typings err system windowsnt typings err command c program filesnodejsnodeexe c ambient name github typings install ambient name github typings err node v typings err typings v typings err need help may report error typings err npm warn optional skipping failed optional dependency chokidarfsevents npm warn notsup compatible operating system architecture fsevents npm err windowsnt npm err argv c program filesnodejsnodeexe c usersownerappdataroamingnpmnodemodulesnpmbinnpmclijs install npm err node npm err npm npm err code elifecycle npm err postinstall npm err exit status npm err npm err failed postinstall script typings install ambient name github typings install ambient name github npm err make sure latest version nodejs npm installed npm err likely problem package npm err npm npm err tell author fails system npm err typings install ambient name github typings install ambient name github npm err get information open issue project npm err npm bugs npm err nt available get info via npm err npm owner ls npm err likely additional logging output npm err please include following file support request npm err c c typings v c node v c", "num": "7004", "d": "2/2016"}, {"title": "angular work latest rxjs", "body": "used get around promise shims issues get", "num": "7001", "d": "2/2016"}, {"title": "error updating beta", "body": "upon running upgrade beta beta postinstall fails causes npm cancel entire update postinstall c typings install ambient name github definitelytypeddefinitely typ ings install ambient name github definitelytypeddefinitelyt dependency name typings err message unable read typings check path correct typings err caused responded expected equal manually reinstalling typings individually including problem package fixed", "num": "7000", "d": "2/2016"}, {"title": "question load file showing component", "body": "hi question loading file actually showing component sure doable angular component would wait promise finish actually showing content component tried using canactivate works fine use canactivate component loaded router", "num": "6997", "d": "2/2016"}, {"title": "internal directives like ngif work", "body": "simply removing put unminified version magically works even minify self uglify error persist", "num": "6996", "d": "2/2016"}, {"title": "gesture swipeleft event makes zone throw maximum call size exceeded", "body": "hi since seems gesture management using hammer cause zone throw maximum call size exceeded reproductible plunk thx", "num": "6993", "d": "2/2016"}, {"title": "use routercanreuse", "body": "using dart itrying understand logic behind routercanreuse method understood googling tests simple example routercanreuse called route active one invoked component called route invocation variable test incremented method call could see set true return value routercandeactivate variable resetted return false routercanreuse variable resetted even canactivate function called immediately tests canreuse called even route parameters confused seem canreuse candeactivate route component meaning obviously like missing something anyone explain methods work", "num": "6992", "d": "2/2016"}, {"title": "review transformers error message completeness", "body": "angular dart seeing lot issues around unhelpful error messages need spend time looking transformers improving error message handling provide complete info developers error", "num": "6991", "d": "2/2016"}, {"title": "question dynamically enable directive component", "body": "hello want share common behavior components eg kind isloading behavior puts loading mask component going use custom directive purpose enable dynamically adding host attribute class nt work bug maybe convenient ways mixin behaviors example code thanks", "num": "6990", "d": "2/2016"}, {"title": "router deactivate strange behaviour", "body": "tried reset programatically initial state used could go state using error also used seemed ignore argument passed plunker play", "num": "6989", "d": "2/2016"}, {"title": "provider controlcontainer ngcontrolname controlcontainer", "body": "packagejson want create form appcomponentts export class appcomponent first string throw exception provider controlcontainer ngcontrolname controlcontainer browserdomadapterlogerror stacktrace browserdomadapterlogerror error di exception noprovidererrorbaseexception constructor noprovidererrorabstractprovidererror constructor new noprovidererror injectorthrowornull injectorgetprivatedependency injectorgetbykeyhost injectorgetbykey injectorgetbydependency injectorinstantiate injectorinstantiateprovider async gap error getstacktracewithuncaughterror zonefork zonebind bindarguments lib promise promise promiseobj anonymous function dynamiccomponentloaderloadasroot injectorinstantiate injectorinstantiateprovider injectornew async gap error getstacktracewithuncaughterror zonefork ngzonecreateinnerzone new ngzone createngzone platformrefapplication objectbootstrap execute ensureevaluated objectexecute wrong code please help", "num": "6988", "d": "2/2016"}, {"title": "ngmodel error", "body": "ngmodel err use", "num": "6987", "d": "2/2016"}, {"title": "invalidprovidererror assigning return value test fixture generator", "body": "use test fixture object directly provide via exported function works providing object via class whether class instance function spec leads invalidprovidererror testfixturegenerator looks follows result", "num": "6986", "d": "2/2016"}, {"title": "able fetch parent route params", "body": "consider following url scheme playlists playlistidtracks trackid assume component route config mapping quite naturally may public api notion knowing whether render inside playlist may optional parameter use cases mandatory parameters needs find playlist id currently hard unless missed way need di injector injected walk parent chain optionally get routeparams turn look playlistid alternatively could create viewproviders special information providing internal api fetching playlistid solutions seem much overkill trivial normal scenario also touches discussion agree ewinslow would ideal track declare optional di parameter playlistid lack like propose simpler addon either current function walks route parameter hierarchy new method like jquery closest similar gets closest matching parameter router hierarchy", "num": "6985", "d": "2/2016"}, {"title": "emitting outputs ngondestroy ngbeforedestroy", "body": "let say object one property called property passed editor using changes present editor destroyed loses focus emits changesave output event parent component saves content problem editor focused simultaneously changes since editor focus changes saved yet case editor destroyed blur would get called emitting events ngondestroy work would nt bad idea implement angular something like ngbeforedestroy events emitted method would truly emitted", "num": "6984", "d": "2/2016"}, {"title": "dynamiccomponentloader working version", "body": "working example dynamiccomponentloader plunkr change js point version indexhtml example stops working changed following lines indexhtml reason difference behavior right way using dynamiccomponentloader", "num": "6983", "d": "2/2016"}, {"title": "routernavigate child tries apply route parent router", "body": "hi following structure parent router child router want call thisrouternavigate gives error defined parent router suggests calling navigate parent router rather child router something wrong", "num": "6982", "d": "2/2016"}, {"title": "output semantics confusing", "body": "relationship output specification used param annotation semantics totally haphazard see spreadsheet particular seems like syntax meant convey yet public effect cases totally ignored please make semantics easy understand report errors consistently", "num": "6980", "d": "2/2016"}, {"title": "internal testing simplify focused dart unit tests", "body": "part moving use dart package instead deprecated need find way dealing test package exclusive specs natively supported test files read one time means patch using guinness work within one file two ways around one mastertestfile calls tests ugly modify workflow slightly propose patch create test tag tag nothing introduce new gulp task expand change user workflow needing run task using", "num": "6979", "d": "2/2016"}, {"title": "twoway binding causes webdriver sendkeys drop characters", "body": "combining experience problem couple apparently related reports protractor angular think root cause conflict webdriver sendkeys method angular twoway binding relatively minimal hopefully reproducible testbed available rapropostwowaybindsendkeys also demonstrates potential workaround certain situations eschewing twoway binding using favor binding form control using fixes problem version information webdriver chromedriver chrome", "num": "6977", "d": "2/2016"}, {"title": "components draggable dart bind objects using ngfor", "body": "angular version dart environment windows osx browser dartium native run chrome built app created component draggable element dart component selector draggablecomponent styles const elementtodrag backgroundcolor yellow border solid blue height width template class draggablecomponent void ondragstart mouseevent e print ondragstart void ondragend mouseevent e print ondragend use single element fires drag start event could dragged drop zone create using ngfor primitives list numbers elements fire drag start event could dragged drop zone create using ngfor objects list elements fire drag start event could dragged drop zone dragged example dart component selector myapp directives const draggablecomponent ngfor styles const container border solid red height width template single primitives objects class appcomponent get objects gt name name name name get primitives gt case works fine typescript work dart", "num": "6975", "d": "2/2016"}, {"title": "fix changedetection docheck runs often expected", "body": "bootstrapping simple angular component basically nothing displaying hello world also child components involved change detection performed times particular component note nt make difference plunk reproduces bug talked robwormald maybe promises resolved cause zones perform change detection another interesting observation made bootstrap whenever event fired change detection performed times component instead plunk reproduces bug cc vsavkin talked bug", "num": "6974", "d": "2/2016"}, {"title": "templateurl error pathlocationstrategy", "body": "hi navigating away nested route app level route using template url target component resolved correctly see plunker embedded version order set correctly example clicking home error thrown angular tries load template url testsrchomehtml instead srchomehtml best regards udo ps original plunker", "num": "6973", "d": "2/2016"}, {"title": "inheritance messes constructor injection", "body": "using component inheritance eg meteor angular based right dependency injection tricky first seems like constructor injection bad choice use case easy derived components forget pass di parameters super class also dependencies propagate makes hard introduce new dependencies base classes first question right property injection somehow available maybe recommend manual approach ie something like second even running constructor injection sort fine typescript passes along requirements child components get typescript errors nt pass args declare constructor works long declare constructor silent screwed nt see easy fixes nt know way identify typescript autogenerated constructors look super class generate injection parameters thoughts best practices pattern current seems error prone", "num": "6972", "d": "2/2016"}, {"title": "routerlink support nullundefined", "body": "think would convenient allow support case binding resolves null empty array undefined case expect tag created without attribute empty useful cases something link nt current item link property set keeping two different html structures seems overcomplicated ie something like instead todays could make pr workings think", "num": "6971", "d": "2/2016"}, {"title": "dynamically loading directive", "body": "running angular trying figure dynamically load directive existing element use case different behaviors depending condition want load different directives looked seems able load components opposed pure directives onto id defined locations possible", "num": "6970", "d": "2/2016"}, {"title": "exception provider http somecomponent someservice http", "body": "trying inject service within component uses http component get error try inject http component within service code service somerservicets import injectable import http httpproviders headers injectable export class someservice somecomponentts component providers someservice missing thanks", "num": "6969", "d": "2/2016"}, {"title": "ngcontent throwing component elements slots provided", "body": "hi asked question came using within component throwing error component slider elements slots provided sliderts indexhtml bug system writing wrong code within index html disappears dom run time plnkr hopefully works", "num": "6968", "d": "2/2016"}, {"title": "typescript example working internet explorer safari windows", "body": "shows loading works chrome clicked live sample linked github typescript example working internet explorer safari windows put code visual studio tested sample problem like website please fix however use java script instead typescript version visual studio works browsers", "num": "6967", "d": "2/2016"}, {"title": "exception support expressions", "body": "hi ca nt find information online point direction solving issue appts apphtml use google chrome version like browser tested code many browser", "num": "6966", "d": "2/2016"}, {"title": "select attribute limited", "body": "trying make transclude bunch less buttons display display buttons dropdown button like something like html get ed add complex selectors silently fails traced cssselectorparse writing noticed eventually longer silently fail guessing selector parsing necessary serverside rendering maybe support prioritization selector specificity get option turn rely angular using instead ignoring selector specificity maybe better solution either way gotcha really limiting nt enough obviously add classes across entire app disappointed", "num": "6965", "d": "2/2016"}, {"title": "getting read property style null combining web workers ngif template dispose dcl", "body": "porting notification service disposes last notification period time new notification comes dispose one notification using dcl load another use ngif hide previous notification get error turn web workers project works normal error exception typeerror read property style null browserdomadapterlogerror anonymous function anonymous function anonymous function stacktrace browserdomadapterlogerror anonymous function anonymous function anonymous function typeerror read property style null browserdomadaptersetstyle domrenderersetelementstyle messagebasedrenderersetelementstyle functionwrapperapply servicemessagebrokerhandlemessage objectnext cb async gap error getstacktracewithuncaughterror zonefork arguments anonymous function async gap error getstacktracewithuncaughterror zonefork ngzonecreateinnerzone new ngzone createngzone platformrefapplication objectmain htmldocumentondomcontentloaded zonerun htmldocumentzoneboundfn", "num": "6964", "d": "2/2016"}, {"title": "parent scopes function arguments", "body": "plunker expect function called print foo foo nt get called change names functions consistent three directives works another oddity prints scope parent scope controller notice directives parent template child element thanks time", "num": "6963", "d": "2/2016"}, {"title": "required file input field changes shown", "body": "required input field even though ngcontrol specified input class list still contains nginvalid file upload spyclassname change use input type text form able validate enable submit button", "num": "6962", "d": "2/2016"}, {"title": "support adding functions annotation attribute", "body": "try dart heroservicefactory logger logger userservice userservice gt new heroservice logger userserviceuserisauthorized heroserviceprovider gt provide heroservice usefactory heroservicefactory deps logger userservice component selector myheroes template heroes providers const heroserviceprovider directives const herolistcomponent class heroescomponent application fails next error caused method check entered provider case call provided function", "num": "6961", "d": "2/2016"}, {"title": "proposal oninit promise", "body": "goal like use similar implementation already exists onactivate ts routeronactivate returns promise route change wait promise settles instantiate activate child components want component wait instantiation promise returned resolved example works well status export class app implements oninit ngoninit return thissomeasyncprocess someasyncprocess promise returns promise plunker problem currently return angulardynamicchangedetectorts angularangular angularchangedetectionjitgeneratorts angularangular please let opinion smile thanks", "num": "6960", "d": "2/2016"}, {"title": "issue uncaught reflectmetadata shim", "body": "hello project using using typescript directly without compiling js files moving project compiling ts files js files problems stuck systemjs config systemconfig packages appscripts defaultextension js bootstraping typescript file main component import component view bind import bootstrap import routerdirectives routeconfig routerbindings routeroutlet locationstrategy hashlocationstrategy router importing application components import businessnamelookup businessnamelookup import abn abn import lookupdetails lookupdetails import businessnames businessnames import businesswebaddress businesswebaddress import businesscategory businesscategory import contactinformations contactinformations import businesspurchaseaddress businesspurchaseaddress import businessimages businessimages import surveyquery surveyquery importing application components component selector view template directives routeroutlet routerdirectives routeconfig path businessnamelookup component businessnamelookup name businessnamelookup path abn component abn name abn path lookupdetails component lookupdetails name lookupdetails path businessnames component businessnames name businessnames path businesswebaddress component businesswebaddress name businesswebaddress path businesscategory component businesscategory name businesscategory path contactinformations component contactinformations name contactinformations path businesspurchaseaddress component businesspurchaseaddress name businesspurchaseaddress path businessimages component businessimages name businessimages path surveyquery component surveyquery name surveyquery export class appcomponent note project aspnet project", "num": "6959", "d": "2/2016"}, {"title": "ca nt find variable require", "body": "writing tests angular app uses http dependences test import describe expect beforeeach beforeeachproviders inject import provide import dashboardcomponent dashboardcomponent import router routerproviders locationstrategy hashlocationstrategy import http httpproviders xhrbackend response responseoptions import mockconnection mockbackend describe unit test gt beforeeachproviders gt return httpproviders provide xhrbackend useclass mockbackend dashboardcomponent true true inject xhrbackend dashboardcomponent mockbackend dashboard gt mockbackendconnectionssubscribe connection mockconnection gt connectionmockrespond new response new responseoptions body id contentrendered hi contentmarkdown hi dashboardcomponent jshint unused false import component injectable import routeconfig routerlink routeroutlet routerdirectives router import httpproviders http component selector dashboard templateurl staticapptscdashboarddashboardcomponenthtml viewproviders httpproviders injectable export class dashboardcomponent tipindex number tip string tips array http constructor http thishttp thistipindex thisgettips subscribe tips gt thistip tips thistipindex tipintro thistips tips consolelog tips gettips return map res gt resjson objects clicked event event thistipindex lt thistipslength thistipindex else thistipindex thistip thistips thistipindex tipintro part karmaconfigjs folder meterclientstaticjsvendorunderscorejs meterclientstaticnodemodulessystemjsdistsystempolyfillsjs meterclientstaticnodemodulessystemjsdistsystemsrcjs meterclientstaticnodemodulesrxjsbundlesrxjs think require error popping import dependences wrong order", "num": "6957", "d": "2/2016"}, {"title": "add platformdirectives platformpipes transformer docs", "body": "docs nt mention platformdirectives although using pubspecyaml files like able point people info transformer particular platformdirectives response matan comment kegluneq", "num": "6956", "d": "2/2016"}, {"title": "angular router nt support async compilation components via templateurl", "body": "see", "num": "6955", "d": "2/2016"}, {"title": "component attribute value host element attributes", "body": "top level components scanned html file nt initialize attributes host element attribute please refer plunker myapp component property called helloname decorated annotation input helloname per document property initialized helloname attribute however notice indexhtml specified element however ignored", "num": "6954", "d": "2/2016"}, {"title": "support input output hostbinding defined superclasses mixins", "body": "lifecycle interfaces implementations superclasses seem already supported would great also supported reusable implementations like behaviors polymer", "num": "6953", "d": "2/2016"}, {"title": "component templateurl fails trigger routeronactivate", "body": "hi bit stuck problem want use routeronactivate get route params make api call using routeronactivate seems work template templateurl please see example code used declare component works fine long use template switching templateurl content template router actions controller stop triggered canactivate works cases though html also loads cases javascript let home templateurl applayoutshomehomehtml template home controlleras home controller function routeronactivate function consolelog home activate return true routercanreuse gt consolelog home reuse return true routeronreuse gt consolelog home reuse return true canactivate nextinstruction previnstruction metadataservice gt nginject consolelog home activate nextinstruction previnstruction metadataservice return true export default name home options home", "num": "6952", "d": "2/2016"}, {"title": "website menu nt scroll", "body": "display height mobile devices higher website menu look like overflow hidden nt scroll touchable scroll", "num": "6951", "d": "2/2016"}, {"title": "dart error using async pipe streams", "body": "following code item eventstream get items gt searchtermstream debounce new duration milliseconds distinct flatmaplatest term gt wikipediaservicesearch term asstream get loop error", "num": "6950", "d": "2/2016"}, {"title": "onpush nested ngfor", "body": "data structure basically array arrays want structure immutable pass view end following structure component object array arrays onpush takes array input iterates onpush takes single group array interates onpush simply prints message like update one message make end container rerendered problem nt work way due first loop makes messages given group rerendered example note change line use ngfor works fine eg way force ngfor rerender whole element update inputs nt place improve performance", "num": "6948", "d": "2/2016"}, {"title": "using local variables ngfor", "body": "context local variables defined character element attribute nt apply use case rqw local variables loop fact define local variable html element corresponds component component element variable refers element specifying value local variable allows select specific directive associated current element example set instance directive associated current variable local variables nt allow set value created current element loop try something like localvariable following error actually looks directive matching provided name plunkr shows section local variables link also describes addition current element iteration provides set exported values aliased local variables question would interested way define custom local variables within loop way could define computed variable use several times loop block formattedtodoname formattedtodoname would interested feedbacks question follows one stackoverflow website thanks much", "num": "6947", "d": "2/2016"}, {"title": "equivalent autoscrolltrue automatic scroll top route changes", "body": "navigating within spa want scroll back top page whenever route changes users commented really odd clicking link foot page causes content change leaves still bottom sure best handle scenario would like avoid add code every top level component feels like kind thing part angular like autoscrolltrue angular", "num": "6946", "d": "2/2016"}, {"title": "reference github packagejson", "body": "given current changes sometimes breakings beta releases like consume directly github usually pointing github repository directly packagejson described getting strange errors indicates doesnt resolve correctly one point saw seems point another point could nt find angular folder inside possible resolve directly github repository", "num": "6945", "d": "2/2016"}, {"title": "reflectmetadata prevents shims concatenated", "body": "currently pinned reflectmetadata reflectjs outside iife prevents reflectmetadata shim concatenated shims angular get error appropriately places directive reflectmetadata fixed workaround obviously include reflectjs separate request would great could pull change", "num": "6940", "d": "2/2016"}, {"title": "typescript code bundle", "body": "hey typescript code bundled like write typescript code wan na quick fingers get used typescript jumping folder folder annoying thank", "num": "6938", "d": "2/2016"}, {"title": "error routing form submit webworkermode", "body": "hello error submitting form using key trying route using form input event happens okay cases event nt fire form submits works fine notworker mode error exception typeerror read property events null stacktrace typeerror read property events null webworkerrootrendererdispatchevent objectnext code sample typescript import component import ngform import router component selector testform directives ngform template export class listcomponent field string", "num": "6937", "d": "2/2016"}, {"title": "ngfortrackby blocks update first array change", "body": "make changes object displayed repeater something trigger intervention ngfortrackby indeed prevent unnecessary dom updates list refreshed new content satisfies trackby selection criteria however little rigorous trigger longer updates view changes databound object plunker repro change name repeater displays update click refresh heroes times click replaces heroes list new array hero clones note message first trackby display reports time dom elements changed note message appears second trackby display dom elements untouched although hero objects change trackby nt replace dom elements exactly want trackby change name sad face second trackby display frozen changes appear behavior makes essentially useless displayed list semiimmutability fits scenarios ca nt update displayed object way frozen good mutable entity scenarios good redux immutable scenarios either see last mutated state entities refreshed entities might requery server animated gif showing unexpected unwanted behavior notice last frames make changes freezing second trackby display", "num": "6936", "d": "2/2016"}, {"title": "changedetector error view changed checked", "body": "know common error seen many different cases scenarios running inside zone helped solved issue case different weird thing error happens value changed click event tried run inside zone outside zone nt make difference maybe way found make dumb component reused across different forms wrong tried many different things terms flexibility seems best option need make form calls dumb component able define control associated validations dumb component going particular form everything works fine user manually inputs data case date picker something user clicks get errors value changed form checking error inside controls plunker reproduce error click also works type instead clicking note needs restarted error happens since application stops working", "num": "6935", "d": "2/2016"}, {"title": "eventemitter subscribe return", "body": "according specifications subscribe method eventemitter return object unsubscribe method right return type would better add isubscription interface unsubscribe method instead make return type similar export interface isubscription unsubscribe", "num": "6934", "d": "2/2016"}, {"title": "router ca nt load child components complete binding first click", "body": "followed article example create router app example child component crisislistcomponent code bootstrap javascript import bootstrap import provide import appcomponent appcomponent import routerproviders locationstrategy hashlocationstrategy bootstrap appcomponent routerproviders provide locationstrategy useclass hashlocationstrategy appcomponent javascript import component import routeconfig routerdirectives import votingapplication componentsvotingvotingapp import votingresultscomponent componentsvotingresultsvotingresults component selector app templateurl appappcomponenthtml providers directives votingapplication votingresultscomponent routerdirectives routeconfig path vote component votingapplication name vote path results name results component votingresultscomponent export class appcomponent votingapplication javascript import component oninit import votingcomponent votingcomponent import voteforperson voteforperson component selector votingapp templateurl appcomponentsvotingvotingapphtml directives votingcomponent voteforperson footercomponent export class votingapplication implements oninit votingcomponent javascript import component input oninit component selector votingcomponent templateurl appcomponentsvotingvotingcomponenthtml export class votingcomponent implements oninit votingperson javascript import component input oninit component selector voteforperson templateurl appcomponentsvotingvoteforpersonhtml export class voteforperson implements oninit votingcomponenthtml html title votingapphtml click vote router link appcomponent votingapp loads children also binding title happen click vote link see binding title happens see title looked components loaded systemjs see components loaded somehow child component render first click router link happens second time similar problem described stack overflow", "num": "6933", "d": "2/2016"}, {"title": "required validator work number", "body": "required validator work input whose type number input empty error appear reason numbervalueaccessor selector match input set value control number entered string input match number value nan case empty string required validator return error control value blank null undefined empty string case two conditions numbervalueaccessor set value nan number required validator really verify nan value appear empty string also string number like aaa problem validator retrieve entered string control variable", "num": "6932", "d": "2/2016"}, {"title": "using observablefromarray throws exception", "body": "driving nuts code throws failed undefined constructor evaluating", "num": "6931", "d": "2/2016"}, {"title": "developers guide need update", "body": "fresh man dart angularjs follow develop guide learn exercise displaying data code nt work google solution lot time finaly find answer issue", "num": "6930", "d": "2/2016"}, {"title": "dartstyle defines globaldocument causes systemjs bundler failure", "body": "issue building angular locally console give bundlejsprod errored ms typeerror documentgetelementsbytagname function object modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require object builddart errored min error build sequence failed buildpackagesdart errored min error build sequence failed buildjsdev errored min error build sequence failed buildtreedart errored min error build sequence failed buildtreedart errored min error build sequence failed buildjsdev errored min error build sequence failed buildtreedart errored min error build sequence failed buildpackagesdart errored min error build sequence failed buildjsdev errored min error build sequence failed buildtreedart errored min error build sequence failed finished buildcssmaterial finished benchpressbundle seems issue updating local repo upstream using node required nvmrc", "num": "6929", "d": "2/2016"}, {"title": "hidden work properly element display style defined css", "body": "tried toggle display component without destroying using hidden binding work since gave display inlineblock style element intended", "num": "6927", "d": "2/2016"}, {"title": "testing component routeparams", "body": "component following constructor test need pass route parameter nt really want inject router use navigatebyurl need pass one value tried following var fixture componentfixture tcb overrideproviders mycomp provide routeparams usevalue id someid createasync mycomp root gt fixture root tick get weird error could done wrong please help docs testing part yet", "num": "6926", "d": "2/2016"}, {"title": "messagebus example seem work web workers", "body": "following example following part particular get tried substituting subscribe work arounds nt seem work example date current way able use message bus trying use make window scroll", "num": "6924", "d": "2/2016"}, {"title": "travis longer publishes snapshot builds", "body": "hoping install current snapshot discovered missing", "num": "6921", "d": "2/2016"}, {"title": "dynamiccomponentloader loading multiple components unexpected order", "body": "using functionality either add multiple components location generate race condition based cache resulting elements added order caching status differ seems index loaded component could defined prior compiler step make sure consistent order predictable results delivered related", "num": "6920", "d": "2/2016"}, {"title": "input support conversion string types", "body": "nt see issues verified code nt right thing currently would nice support something like right work attribute values strings blindly set member without regard typing using reflection metadata typescript know type property would allow us something simple would also allow us use dates even custom classes want make design doc andor attempt pr discuss potential implementations", "num": "6919", "d": "2/2016"}, {"title": "ngmodel typing quickly causes cursor position reset", "body": "tested osx chrome safari example plunker scenario inputtextarea preexisting text put cursor somewhere middle beginning text type quickly seems certain number input events trigger cursor position reset end input typing quickly typing quickly note cursor position letters started appearing text input without works correctly", "num": "6918", "d": "2/2016"}, {"title": "karma phantomjs fails importing modules spec files", "body": "thought systemjs related issue turns looks like one least combination systemjs phantomjs original issue opened systemjs long story short run tests fin karma chrome soon switch phantomjs fails spec files nt import anything related works fine instance fail error message get stack trace spec file import module application turns import something fails way importing example works fine see details configuration original issue lined thoughts", "num": "6917", "d": "2/2016"}, {"title": "ngmodelchange nt update input value correctly", "body": "plnkr example type characters name truncated model updates correctly input value nt change even ngmodel", "num": "6916", "d": "2/2016"}, {"title": "disregard", "body": "delete", "num": "6915", "d": "2/2016"}, {"title": "router router build file compatible browserify bundling", "body": "using browserify bundling causes errors using file due browserify trying import statements built router file workaround rename occurrences change file", "num": "6914", "d": "2/2016"}, {"title": "ngupgarde angular templatecache", "body": "hi started upgrading one angular apps angular stumbled upon following issue seem way use angular templatecache inside angular missing something kind regards jusef", "num": "6913", "d": "2/2016"}, {"title": "scetrustashtml working jquery", "body": "variable declaration scopeeventcontent scetrustashtml scopeeventdatadesc desc html directive directive compile compile function compile return function scope element attrs var ensurecompilerunsonce scope watch function scope return scope eval attrscompile function value elementhtml value compile elementcontents scope without jquery working fine jquery", "num": "6912", "d": "2/2016"}, {"title": "choose routeroutlet render", "body": "question stackoverflow explains bit basically problem facing navigation component ca nt choose rendered view rendered nt want navigation component template cause layout issues nt make sense render content navigation component either want navigation component handles route switching want new view rendered core component instead need navigation component seems bit weird required render routes component despite component defined routes core component handles parent routes would like rendered someone enlighten make happen", "num": "6911", "d": "2/2016"}, {"title": "router routeroutlet update routes component", "body": "reason multiple routes component routeroutlet updated page refresh defined see xhr request page first loaded clicking links view updated xhr request console error either use different component route works fine", "num": "6910", "d": "2/2016"}, {"title": "router failed execute pushstate history error pathlocationstrategy", "body": "getting error application though earlier versions creating routing components child routing basically setting main app component support different page layouts routes main app component main layout component child components use layout routeconfig path dashboard name dashboard component dashboardcomponent useasdefault true export class mainlayoutcomponent hashlocation strategy plunker works fine default pathlocation strategy ca nt get working plunker using locally get failed execute pushstate history change path main app component app works fine except nt url want created plunker example setup able repro plunker nt think use pathlocation strategy download plunker remove hashlocation strategy host locally may able reproduce exception snippet exception securityerror failed execute pushstate history history state object url created document origin stacktrace browserdomadapterlogerror error failed execute pushstate history history state object url created document origin error native browserplatformlocationpushstate pathlocationstrategypushstate locationgo erun erun x f", "num": "6909", "d": "2/2016"}, {"title": "router add getter list configured routes", "body": "right router provides ways dynamically configure routes either router routeregistry great one problem even use routeregistry add routes root component child component ideal world would always know routes configured time still searching ideal world would like router routeregistry api way list currently configured routes component moment way look internal field put together minimal example dynamic routing plunker please ignore bad ideas like using route names display supposed camelcase point example simple check see example easily maintain list routes anyone add routes root component anywhere way maintain would force devs project go middleware service add routes feasible would much better could simply use native router api could call something like get readonly list configured routes time call open suggestion better practices alternative solutions problem nt think use case specific correct wrong thanks", "num": "6908", "d": "2/2016"}, {"title": "ngfor trackby behaviour", "body": "something surprised giving try new feature following example array users generated every second two users always names random score one used display list user score useful track user name rather reference changes every second angular score never updated purpose afaik angularjs case score would updated even using username gt userscore class testcmp users constructor windowsetinterval gt thisusers name score mathrandom name score mathrandom userbyname index user return username cc kara mhevery", "num": "6907", "d": "2/2016"}, {"title": "normal able use absolute urls styleurls property", "body": "following question stackoverflow appears possible use absolute urls within styleurls property components check isstyleurlresolvable function wonder something normal thanks thierry", "num": "6905", "d": "2/2016"}, {"title": "dom initialized", "body": "works fine dart plunker initialized initialized using need additional step get initialized ts", "num": "6904", "d": "2/2016"}, {"title": "minification broken", "body": "indexhtml html mainjs js var home ngcore component selector home template home class constructor function var ngcore component selector template class constructor function var cmp ngcore component selector cmp template home join n directives ngrouterrouterdirectives class constructor ngrouterrouter function cmp router routerconfig path component home name home path component name documentaddeventlistener domcontentloaded function ngplatformbrowserbootstrap cmp ngrouterrouterproviders code working js working looks like minification issue", "num": "6903", "d": "2/2016"}, {"title": "router router content stored inside inside", "body": "router generates dom ideally content inside please correct", "num": "6902", "d": "2/2016"}, {"title": "dart nt class", "body": "use instead works misko says alias looks like alias broken dart example dart code class appcomponent string badcurly bad curly works classname bad curly special bad curly change stops working see whole sample based typescript template syntax page plunkr sample", "num": "6901", "d": "2/2016"}, {"title": "selector specified results component", "body": "specifying selector component render component prerendering step universal angular", "num": "6900", "d": "2/2016"}, {"title": "form controlvalueaccessor", "body": "feedback reflection form developments bit extensive use formbuilder control validator nice things overall feeling rather mixed making form angular remains incredibly complicated even validations management well designed problem lies mainly data typing level strings goes well cons everything else gets complicated seriously example case integer date operation controlvalueaccessor incomplete causes lot problems directives automatically activated without even knowing standard html attributes makes difficult impossible change behavior example directive numbervalueaccessor works real field accepts integers selector directives css style effects case numbervalueaccessor selector like type number cause spinners appear inside input field often desired data type style two diffrent things selector based type attribute directives automatically activated causes collisions example defaultvalueaccessor checkboxvalueaccessor activated input field selectors match avoid selector defaultvalueaccessor need explictly exclude selector checkboxvalueaccessor input typecheckbox ngcontrol however dependency numbervalueaccessor happens add custom controlvalueaccessor recovers third library people also aware problems caused operation controlvalueaccessor suspicious solutions envisaged overcome problems custom gettersetter finally would better explicitly specify type data want via specific directive selector attribute control class", "num": "6899", "d": "2/2016"}, {"title": "testing component broken", "body": "component uses routerlink template following test component contain proper value inject testcomponentbuilder dispatcher fakeasync tcb actions gt const agallery new mygallery friendlyurl friendlyurl title gal title isvisible true worked previously updating beta throws error failed undefined object evaluating linkparamsreduce changed mean thanks", "num": "6898", "d": "2/2016"}, {"title": "use observable operators like debouncetime switchmap asynchronous validations", "body": "find observables really powerful context http killer feature since use operators control sent requests cancel necessary using asynchronous validators seems nt access feature since call validator internally done ca nt configure way triggered would like implement something similar following within asynchronous validation something supported form validation level thanks much advance thierry", "num": "6895", "d": "2/2016"}, {"title": "http client dev guide handleerror arg nt response", "body": "private heroesurl appheroes change foo force error using liteserver amp inmem api server handleerror arg response exercise added error message appcomponent getheroes thisstartloading thisheroservicegetheroes subscribe heroes gt thisheroes heroes thisstoploading error gt thiserrmsg error thisstoploading heroservicehandleevent nt seem service catch thishandleerrorbind inmem api server default delay makes angular feel sluggish unfortunately set server rounds set maints bootstrap appcomponent httpproviders loggerservice inmemory web api providers provide xhrbackend useclass inmemorybackendservice inmem server provide inmemorybackendconfig usevalue delay zero rounded provide seeddata useclass herodata inmem server data", "num": "6894", "d": "2/2016"}, {"title": "testing angular pipe needs polyfills", "body": "without polyfills jasmine nt run pipe test", "num": "6893", "d": "2/2016"}, {"title": "defaultiterablediffer collectionchangerecord made public", "body": "exported returned use custom change detection ca nt cast without linter warnings actual types exported", "num": "6892", "d": "2/2016"}, {"title": "routeparams imported routeparams example", "body": "current example import looks like", "num": "6891", "d": "2/2016"}, {"title": "app slow", "body": "sorry english poor bult community website bootstrap found website run long time refresh slow css animation site ca nt show smoothly website built jquery bootstrap dose nt problem feel puzzled anyone help resolve problem thanks lot", "num": "6890", "d": "2/2016"}, {"title": "bindings template updated safari", "body": "safari text always black wrong browsers text changing color red set", "num": "6889", "d": "2/2016"}, {"title": "missing jasmine matchers", "body": "upgrading causes compilation error using jasmine matchers following code compile anymore matchers seem missing", "num": "6888", "d": "2/2016"}, {"title": "zonejs requires tsd postinstall step", "body": "since peer dependency order installed angular effectively requires globally installed nt desirable", "num": "6887", "d": "2/2016"}, {"title": "missing equivalent angular compile", "body": "hi trying move angular angular beta one things angular write wrapper around third party grid grid allowed specify templates columns able let grid output angular directivesbindings like example ngclick row bindings course worked ran compile dom element created grid trying something similar using example click try bind method component seems problem recognized added dom parsing dom markers already finished searching something like compile fix came answer equivalent suggestion use dynamiccomponentloader since one adds elements dom party library nt think help something missed plans add something similar compile thanks stefan", "num": "6886", "d": "2/2016"}, {"title": "question way replace default injector", "body": "hi guys working ioc container would like see well would work angular however found seems possible replace angular di ioc container found following documentation app developer invokes bootstrap root component myapp argument angular performs following tasks uses component selector property locate dom element needs upgraded angular component creates new child injector platform injector optionally also override injector configuration app invoking bootstrap componentinjectablebindings argument creates new zone connects angular application change detection domain instance creates emulated shadow dom selected component host element loads template instantiates specified component finally angular performs change detection apply initial data providers application solution seems create function ideal guys provide way replace angular di another ioc container ease something like idependencyresolver resolver asp net thanks", "num": "6885", "d": "2/2016"}, {"title": "zone defined global", "body": "hey since installed new beta error property zone exist type global coming zonepackage typescriptdependencies zonejslibrary fulfilled files zonejslibbrowser provide help nt found anything changelog regarding", "num": "6884", "d": "2/2016"}, {"title": "emit data outlet tag", "body": "requirement footer tag app component appts way let home emit data app component hope home run animation footer display use outputs home got exception component selector home directives backgroundlayer firstname lastname styles require homecss template require homehtml outputs showbasic export class home implements oninit afterviewinit exception", "num": "6883", "d": "2/2016"}, {"title": "comma separated list viewquery factory returning first match", "body": "viewquery elements querylist plnkr", "num": "6881", "d": "2/2016"}, {"title": "ngif function", "body": "try use ngif receive value function apphtml got outputs backgroundlayer app appts js export class app implements oninit console log result home displayed bug wrong usage use variable ngif everything ok js export class app implements oninit showhome boolean false constructor", "num": "6880", "d": "2/2016"}, {"title": "template parsed correctly using multiple ngcontent elements", "body": "started using beta fresh app based encountered interesting bug using component multiple ngcontent elements export class mfcard consuming component like never created html one gets changing fixes suspect happens text content actual tags inserted works fine", "num": "6876", "d": "2/2016"}, {"title": "angular typescript different folder structure", "body": "today angular works typescript systemjs specific folder structure see two questions made others problems proposed solutions nt work either", "num": "6874", "d": "2/2016"}, {"title": "ngfortrackby use case", "body": "see unit test seem get ngfortrackby work sample added element template added function way unit test shows getting error exception template parse errors ca nt bind ngfortrackby since nt known native property ngfortrackby trackby click gotodetail character gt dashboardcomponent seems wants declare component see exported module angular unit test referenced else needed cc kara wardbell", "num": "6872", "d": "2/2016"}, {"title": "update rxjs", "body": "going skip rxjs since release expected soon cascading test failure upgrading rxjs related test actually already failing exception swallowed exceptionswallowing behavior rxjs", "num": "6871", "d": "2/2016"}, {"title": "transformer generates invalid code removing di service component", "body": "steps reproduce create component component loaded somewhere app pub serve note works intended remove refresh app app throw since generated code still referring serviceb", "num": "6868", "d": "2/2016"}, {"title": "lifecycle hooks firing ie", "body": "first outlined issue question full page structure indexhtml loads nav component using bootstrap nav component contains top bar navigation routeroutlet switch views one views contains search bar search results search bar component view search bar angular inputs outputs also reads previous state localstorage one outputs emit state history ngoninit want emit history read localstorage constructor since inputs outputs nt populated time constructor runs wait emit ngoninit ie ngoninit well lifecycle hooks like ngafterviewinit ngaftercontentinit nt fire page load component loads inputs nt pass bound ui either user clicked searchbox component inbox page refreshed none code watching responding refresh ca nt explain refreshing works clicking seems component wo nt run lifecycle hooks change detection fires component behaves events pushed work fine happen happens chrome browser loads indexhtml bootstrap nav component view routing picks search component search component contains searchbox component searchbox component constructor reads localstorage searchbox component input values bound searchbox component ngoninit fires code emits history back search component stored bound happen ie browser loads indexhtml bootstrap nav component view routing picks search component search component contains searchbox component searchbox component constructor reads localstorage nothing else happens user refreshes page clicks search box point change detection pokes searchbox component things continue input bound reflected ui ngoninit lifecycle hooks go run code emitting history etc due bug able test bug definitely present angular", "num": "6867", "d": "2/2016"}, {"title": "custom exception handler", "body": "hi trying implement exceptionhandler followed docs however using ca nt implement interfaces could nt get call method trigger also docs say export class use interface implements exceptionhandler correct exceptionhandler js import exceptionhandler export class wtexceptionhandler extends exceptionhandler call error stacktrace null reason null consolelog hello transpiled code shows call method best regards tbragaf", "num": "6865", "d": "2/2016"}, {"title": "viewencapsulationnative", "body": "wonder design working quite different polymer polymer shadow dom well nt example code filets import component viewencapsulation component selector template styleurls stylecss encapsulation viewencapsulationnative export class something stylecss definition definition described comments classes applied css style wonder mistake want create native components second extending first one final app used second one use emulated encapsulation everything seems working fine native", "num": "6864", "d": "2/2016"}, {"title": "claim bower package beta", "body": "hi think create official bower package using aspnet thanks", "num": "6863", "d": "2/2016"}, {"title": "misleading link quickstart javascript version", "body": "end quickstart guide link tutorial named join us tour heroes tutorial links tutorial url shows docs home overall tutorial available javascript versions think misleading especially newcomers would helpful message explaining tutorial available typescript least remove link quickstart", "num": "6862", "d": "2/2016"}, {"title": "angular support import file annotations", "body": "angular support import file annotations instead import add injectable class add create array providers may negligible entire app trivial test depend bit overkill", "num": "6860", "d": "2/2016"}, {"title": "pass object references components downgraded", "body": "seems like pass string interpolations components downgraded using upgradeadapter passing object references seem work directive passing variable component displays name sorry using ecmascript application already got mix coffee want try remove coffee start adding typescript directive component function prints unexpected literal string value passed product attribute passed instead function really printing however change template directive use string interpolation value object passed correctly directive ie function component prints expected variable passed instead object reference", "num": "6856", "d": "2/2016"}, {"title": "accessing control object using ngformcontrol custom directive", "body": "created custom directive trying access object raises following exception document refer cause could find one", "num": "6855", "d": "2/2016"}, {"title": "router support dart webworker apps", "body": "commit adds support routers webworker apps typescript commit adds typescript files implement dart", "num": "6853", "d": "2/2016"}, {"title": "flaky js build travis", "body": "causing lot red failure merge presubmits failures webworkers kitchen sink change greeting message failed element found using locator bycssselector helloapp changebutton stack nosuchelementerror element found using locator bycssselector helloapp changebutton processtickcallback error object task run change greeting control flow attemptasync queuerunnerrun queuerunnerexecute specenvqueuerunnerfactory specexecute objectfn attemptasync queuerunnerrun asynchronous test error suite addspecstosuite envdescribe jasmineinterfacedescribe object ran specs", "num": "6851", "d": "2/2016"}, {"title": "add devmode check omitted lifecycle hook implements clauses", "body": "see context", "num": "6849", "d": "2/2016"}, {"title": "error large number elements", "body": "test form many elements get errors test ok chrome message forefox message", "num": "6848", "d": "2/2016"}, {"title": "run travis browser tests chrome gt stable", "body": "travis tests currently running dartium lags chrome stable current dartium based chrome blocking endtoend testing ddc requires chrome newer stable mhevery", "num": "6846", "d": "2/2016"}, {"title": "http headers copy constructor", "body": "case headers copy constructor creates shallow copy given headers typescript constructor headers headers key string headers instanceof headers thisheadersmap headers headersmap return deep copy version", "num": "6845", "d": "2/2016"}, {"title": "viewencapsulationnative bring polyfill shadow dom", "body": "hey team bring polyfill enabling browsers able render app due lack support imo package bring developers need pull another dependency get app working", "num": "6844", "d": "2/2016"}, {"title": "router impossible style created element", "body": "nt found solution style element inserted marker would expect following work attributesclass would copied generated tag example navigating would render", "num": "6843", "d": "2/2016"}, {"title": "ngformcontrol select changing steered", "body": "hey upgrading application protractortests wo nt trigger valuechanges selectcontrols seems related change got changeevent dropped seems vital protractor using application select control works expected protractor runs chrome ideas", "num": "6841", "d": "2/2016"}, {"title": "table list custom items", "body": "nt know issue use falsely objects trying make table table lists items would decouple item list code id col col col col col import component eventemitter output input onchanges simplechange import formdirectives import item modelmodelitem component selector itemlist templateurl appappitemlisthtml directives formdirectives item export class itemlist input items array new array public item item import component input eventemitter output onchanges simplechange import formdirectives ngfor component selector itemdetail templateurl appappitemhtml directives formdirectives ngfor export class item input item item items informations displayed format problem items raggrouped first column header id column want itemid id header list item decoupled ps single html ts file worked well", "num": "6840", "d": "2/2016"}, {"title": "expression bindings angular style planned", "body": "angular directives amp bindings allow us bind expression provide parameters expression planned angular recommended replacement would ideal callbacks tried works inside myfunc modifiy event check modification emit within directive work emit seems async work need flexibility something like would great within component", "num": "6836", "d": "2/2016"}, {"title": "httpjsonp better ergonomics setting urlsearchparams", "body": "takes set three query parameters tedious even slavishly follow standard class possible write following far natural statement every method accepts object also accept representation parameter value multivariate syntax allow array values instead strings every reasonable http api accepts syntax see example data property jquery ajax angular recall", "num": "6835", "d": "2/2016"}, {"title": "support attribute get attributes", "body": "discussed submitted pr team rewriting compiler pr rebased cc tbosch javascript class myclass constructor attributes atts map originally attribute foo returns mapget foo support attribute return map ps vs since decorators angular parentheses according developer guides always include parentheses always call injectable application fail mysteriously forget parentheses think use", "num": "6833", "d": "2/2016"}, {"title": "quickstart tutorial bug", "body": "appmaints", "num": "6832", "d": "2/2016"}, {"title": "importing eventemitter order", "body": "weird problem solved luck try import class importing eventemitter angularcore shows error change line import class eventemitter import app works perfectly fine gif missing something problem almost gave one", "num": "6831", "d": "2/2016"}, {"title": "update selectcontrolvalueaccessor selector", "body": "related support support implemented would like request updating selector mean time allow implementing custom controlvalueaccessor existing proposed obviously implementing multiple would ideal giving us opportunity mean time solve issue projects would helpful especially given small change otherwise would take wrapping component around nt ideal css frameworks would attempt prepared setup dev environment contributions quite yet", "num": "6830", "d": "2/2016"}, {"title": "feature request ngzone pass chain error handler instead list", "body": "ngzone pass stack traces error handler list consider using package stacetrace chain better supported higherfidelity", "num": "6829", "d": "2/2016"}, {"title": "typedef void errorhandlingfn error stacktrace missing parameter types documentation", "body": "libsrccorezonengzonedart defines errorhandlingfn part ngzone interface angular treats stacktrace list consumers assume stacktrace stacktrace least typedef needs docs ideally typed", "num": "6828", "d": "2/2016"}, {"title": "custom elements extends existing elements upgrade template chrome", "body": "try use custom elements angular template custom element extends existing elements would got upgraded please check plnkr detail problem chrome native support custom elements latest firefox safari problem customelements ployfills kicks investigation show related domrendererprototypecreateelement function want create custom elements extends existing element need call edit plunker based angular", "num": "6827", "d": "2/2016"}, {"title": "css component js", "body": "front end developer find problems css files outside js love css files nt want application waste time viewencapsulation styles component even include js would deal css styles executed component want teams write css js way exclude functionality angular mean different module excluded core something make loading application understanding mind", "num": "6826", "d": "2/2016"}, {"title": "add remove validators formcontrol", "body": "far tell possible modify validators form control created currently control destroyed recreated desired validators also requires copying old control state new control", "num": "6824", "d": "2/2016"}, {"title": "dartdev build times", "body": "currently blocking travis builds even dartdev allowed failure", "num": "6823", "d": "2/2016"}, {"title": "form add feature support form clearing", "body": "clean way reset form clear control class values particular trick described closed temporary workaround", "num": "6822", "d": "2/2016"}, {"title": "add hint templatecompiler propertybinding used directive", "body": "forget include component used template binding error message also include hint developer mean add component componentclass", "num": "6820", "d": "2/2016"}, {"title": "form page reloads ngform removedrestored via ngif", "body": "bizarre arose innocently tried implement missing form reset feature toggling previous form dom back ngif pinned flag controlled component method like form valid start clicking clear causes page reload form invalid eg name reload repro via plunker", "num": "6819", "d": "2/2016"}, {"title": "di impossible redefine providers", "body": "let say following code see plunk js import injector provider const const b const parent injectorresolveandcreate new provider usevalue new provider b deps usefactory gt const child parentresolveandcreatechild new provider usevalue consolelog childget b returns ie provider uses provider think use provider return impossible redefine application providers using method mean intended behavior feel free close issue", "num": "6818", "d": "2/2016"}, {"title": "jasmine constructs nt available beta anymore", "body": "upgrade beta suddenly see following errors error find name error find name expect error property tobenull exist type ngmatchers", "num": "6817", "d": "2/2016"}, {"title": "angular support expressions view", "body": "working angular ned build svg rect rect content expression angular show erreur tell handel expression", "num": "6816", "d": "2/2016"}, {"title": "canactivate order", "body": "canactivate hooks currently executed order child parent causes problems child route canactivate depends data set parent canactivate example might checking current user permissions child canactivate current user bootstrapped parent canactivate called design would seem logical perform way onactivate parent child", "num": "6815", "d": "2/2016"}, {"title": "simple dart pipe example throws class compilepipemetadata instance getter selector", "body": "example build error transform templatecompiler pipewithcountinglibappelementngmetajson threw error class compilepipemetadata instance getter selector nosuchmethoderror method found selector receiver instance compilepipemetadata arguments dart corepatchobjectpatchdart objectnosuchmethod dart corepatchobjectpatchdart objectnosuchmethod package templateparsevisitortemplateparsevisitor package listwrapperforeachwithindex package templateparsevisitortemplateparsevisitor package templateparserparse package templatecompilercompilecomponentcodegen package templatecompilercompiletemplatescodegen dart corepatcharraydart listforeach package templatecompilercompiletemplatescodegen package processtemplates package logelapsedsync package processtemplates dart asyncpatchasyncpatchdart asyncthenwrapperhelper dart asynczonedart rootrununary dart asynczonedart customzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecomplete dart asyncfutureimpldart synccompletercomplete package logelapsedasyncbuild completed errors web get served assets dart asyncpatchasyncpatchdart asyncthenwrapperhelper dart asynczonedart rootrununary dart asynczonedart customzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecomplete dart asyncfutureimpldart synccompletercomplete package compiledatacreatorcreatecompiledata dart asyncpatchasyncpatchdart asyncthenwrapperhelper dart asynczonedart rootrununary dart asynczonedart customzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecomplete dart asyncfutureimpldart synccompletercomplete package compiledatacreatorreadplatformtypes dart asyncpatchasyncpatchdart asyncthenwrapperhelper dart asynczonedart rootrununary dart asynczonedart customzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecomplete dart asyncfutureimpldart synccompletercomplete package compiledatacreatorreadplatformtypesfromuri dart asyncpatchasyncpatchdart asyncthenwrapperhelper dart asynczonedart rootrununary dart asynczonedart customzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecompletewithvalue dart asyncfutureimpldart futureasynccomplete dart asynczonedart rootrun dart asynczonedart customzonerun dart asynczonedart customzonebindcallback dart asyncschedulemicrotaskdart microtaskloop dart asyncschedulemicrotaskdart startmicrotaskloop dart isolatepatchisolatepatchdart runpendingimmediatecallback dart isolatepatchisolatepatchdart rawreceiveportimplhandlemessage dart core objectnosuchmethod package templateparsevisitortemplateparsevisitor package listwrapperforeachwithindex package templateparsevisitortemplateparsevisitor package templateparserparse package templatecompilercompilecomponentcodegen package templatecompilercompiletemplatescodegen dart core listforeach package templatecompilercompiletemplatescodegen package processtemplates package logelapsedsync package processtemplates dart async synccompletercomplete package logelapsedasync dart async synccompletercomplete package compiledatacreatorcreatecompiledata dart async synccompletercomplete package compiledatacreatorreadplatformtypes dart async synccompletercomplete package compiledatacreatorreadplatformtypesfromuri web get packagespipewithcountingappelementngdepsdart gt could find asset pipewithcountinglibappelementngdepsdart build error transform templatecompiler pipewithcountinglibappelementngmetajson threw error class compilepipemetadata instance getter selector nosuchmethoderror method found selector receiver instance compilepipemetadata arguments dart corepatchobjectpatchdart objectnosuchmethod dart corepatchobjectpatchdart objectnosuchmethod package templateparsevisitortemplateparsevisitor package listwrapperforeachwithindex package templateparsevisitortemplateparsevisitor package templateparserparse package templatecompilercompilecomponentcodegen package templatecompilercompiletemplatescodegen dart corepatcharraydart listforeach package templatecompilercompiletemplatescodegen package processtemplates package logelapsedsync package processtemplates dart asyncpatchasyncpatchdart asyncthenwrapperhelper dart asynczonedart rootrununary dart asynczonedart customzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecomplete dart asyncfutureimpldart synccompletercomplete package logelapsedasync dart asyncpatchasyncpatchdart asyncthenwrapperhelper dart asynczonedart rootrununary dart asynczonedart customzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecomplete dart asyncfutureimpldart synccompletercomplete package compiledatacreatorcreatecompiledata dart asyncpatchasyncpatchdart asyncthenwrapperhelper dart asynczonedart rootrununary dart asynczonedart customzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecomplete dart asyncfutureimpldart synccompletercomplete package compiledatacreatorreadplatformtypes dart asyncpatchasyncpatchdart asyncthenwrapperhelper dart asynczonedart rootrununary dart asynczonedart customzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecomplete dart asyncfutureimpldart synccompletercomplete package compiledatacreatorreadplatformtypesfromuri dart asyncpatchasyncpatchdart asyncthenwrapperhelper dart asynczonedart rootrununary dart asynczonedart customzonerununary dart asyncfutureimpldart futurepropagatetolistenershandlevaluecallback dart asyncfutureimpldart futurepropagatetolisteners dart asyncfutureimpldart futurecompletewithvalue dart asyncfutureimpldart futureasynccomplete dart asynczonedart rootrun dart asynczonedart customzonerun dart asynczonedart customzonebindcallback dart asyncschedulemicrotaskdart microtaskloop dart asyncschedulemicrotaskdart startmicrotaskloop dart isolatepatchisolatepatchdart runpendingimmediatecallback dart isolatepatchisolatepatchdart rawreceiveportimplhandlemessage dart core objectnosuchmethod package templateparsevisitortemplateparsevisitor package listwrapperforeachwithindex package templateparsevisitortemplateparsevisitor package templateparserparse package templatecompilercompilecomponentcodegen package templatecompilercompiletemplatescodegen dart core listforeach package templatecompilercompiletemplatescodegen package processtemplates package logelapsedsync package processtemplates dart async synccompletercomplete package logelapsedasync dart async synccompletercomplete package compiledatacreatorcreatecompiledata dart async synccompletercomplete package compiledatacreatorreadplatformtypes dart async synccompletercomplete package compiledatacreatorreadplatformtypesfromuri build completed errors dart vm version fri jan angular", "num": "6814", "d": "2/2016"}, {"title": "missing di providers beta", "body": "use testcomponentbuilder tests upgrade beta following providers wo nt provided anymore automatically angular testcomponentbuilder directiveresolver viewresolver documenttoken problem documenttoken nt codebase anymore used reside furthermore jasmine libraries wo nt exported automatically anymore either", "num": "6813", "d": "2/2016"}, {"title": "ngdocheck confusion", "body": "states implement interface override default change detection algorithm directive implement interface empty change detection still happens still updated reflecting changes made parent change also reflected view also gets updated periodic timer example project nt seem override default change detection information inform angular changes detected custom change detection nt know docs issue implementation issue misinterpreting docs", "num": "6810", "d": "2/2016"}, {"title": "routerlink overrides ctrlclick middle click opening new tab", "body": "routerlink circumstances disable middle button clicking ctrlleft clicking elements big ux point view capturing click events", "num": "6806", "d": "2/2016"}, {"body": "see probably dup", "d": "2/2016"}, {"body": "fact value accessor file type ca nt set values way vsavkin interface requires method want deal make optional would special simply return error zoechi related one", "d": "2/2016"}, {"body": "pascalprecht sorry dup wrong relation mentioned file input nt field", "d": "2/2016"}, {"body": "agree possible set default value field value files property example selectcontrolvalueaccesor stores value internal variable think could possible achieve similar behavior using filelist provided input", "d": "2/2016"}, {"body": "pascalprecht simply pass onchanges problem value accessors require property value files use custom file value accessor details consideration part issue think idea pretty simple implement", "d": "2/2016"}, {"body": "write gist implementation", "d": "2/2016"}, {"body": "tl dr future typescript extensible able type check html templates need jsxtsx angular", "d": "2/2016"}, {"body": "ok wrote malekpour value type template remain string needs parsed analysed runtime value templatejsx ready use object function words templatejsx help javascript typescript developers jsx nt forget great attraction react community members contribute migrate typescript mainstream react community could attract", "d": "2/2016"}, {"body": "duplicate point already made community welcome build setup something team interested supporting", "d": "2/2016"}, {"body": "ok sorry understand", "d": "2/2016"}, {"body": "longer import location typings discovered compiler looking directory using need make discovery work default using documented everywhere", "d": "2/2016"}, {"body": "working jspm manage packages folder set description docs tutorials", "d": "2/2016"}, {"body": "distribute typings via npm right fetch copy npm even nt plan use files distribution issue distributing standalone typescript typings moduleresolution typescript option see typically add file", "d": "2/2016"}, {"body": "could manage development time simply copied folders root web project visual studio automatically pick provides intellisense compiles typescript code correctly runtime duplication nt matter needed vs compilation typescript files managed jspm loaded systemjs", "d": "2/2016"}, {"body": "way requery view necessary intuitive think makes sense eg", "d": "2/2016"}, {"body": "looks like adding html nt result directives components template variables applied tried plunker instantiated therefore would nt find inputs anyway would interesting adding components added dcl found", "d": "2/2016"}, {"body": "name discussion naming joy point zoechi exactly want directivecomponent instantiatedrechecked call whatever", "d": "2/2016"}, {"body": "point components query add html way check directive component actually instantiated", "d": "2/2016"}, {"body": "see", "d": "2/2016"}, {"body": "see thanks quick reply code indeed works component selector childcomponent template child class childcomponent component selector myapp template parent class myapp implements oninit constructor private dcl dynamiccomponentloader private elementref elementref ngoninit thisdclloadintolocation childcomponent thiselementref child bootstrap myapp", "d": "2/2016"}, {"body": "looks like", "d": "2/2016"}, {"body": "config compileroptions target module commonjs sourcemap true emitdecoratormetadata true experimentaldecorators true suppressimplicitanyindexerrors false noimplicitany false listfiles true removecomments true preserveconstenums true declaration false exclude typingsmain typingsmaindts nodemodules dist files fileglobs appts compileonsave false buildonsave false", "d": "2/2016"}, {"body": "might worth try", "d": "2/2016"}, {"body": "export class tabscomponent implements aftercontentinit tab tabcomponent still receiving original error renamed tabcomponent mytabcomponent original contentchildren usage still receiving original error keep classes modules monogamous dont see need forwardref annotations functioning documented typedef interfaces", "d": "2/2016"}, {"body": "well references tabcomponent none found within forget include typedef user suppose provide wants know tabcomponent could import would somehow need communicate via decorators followed everythign blog", "d": "2/2016"}, {"body": "ups missed difference vs guess need create import sure expect come", "d": "2/2016"}, {"body": "create amp import compile error happening within angular tabcomponent code import component input output import uniqueid tabscomponent component selector tab templateurl appcomponentstabtabcomponenttmplhtml styleurls appcomponentstabtabcomponentcss export class tabcomponent id string uniqueid tab", "d": "2/2016"}, {"body": "parent import component input output eventemitter type import contentchildren query querylist aftercontentinit import coredirectives import tabcomponent tabcomponent import forwardref import contentchild component selector tabs directives coredirectives tabcomponent export class tabscomponent implements aftercontentinit id string uniqueid tabs contentchildren tabcomponent tabs querylist let id number export function uniqueid prefix string string return prefix id appreciate help friend metadatadts needs know tabcomponent somehow compilation annnotationsdecorators cutting", "d": "2/2016"}, {"body": "one bit wipeout today things flux comments docs plunks etc going brave say face value contentchildren seems broken result works backing literally modify follows added declare var promise promiseconstructor top module kept typescript compiler rev typescript pheewwww import component input output eventemitter type import contentchildren query querylist aftercontentinit import coredirectives import tabcomponent tabcomponent import forwardref import contentchild import view component selector ttabs directives coredirectives tabcomponent view templateurl appcomponentstabtabscomponenttmplhtml styleurls appcomponentstabtabscomponentcss export class tabscomponent implements aftercontentinit id string uniqueid tabs let id number export function uniqueid prefix string string return prefix id tab import component input output import uniqueid tabscomponent component selector ttab templateurl appcomponentstabtabcomponenttmplhtml styleurls appcomponentstabtabcomponentcss export class tabcomponent id string uniqueid tab sure want open closed call side note tsc compiler within going haywire within webstorm ide like corrupted runtime haywire telling compile errors werent also refactorings inplace edits corrupted garbled something gone arye releases", "d": "2/2016"}, {"body": "two files tsconfigjson nt need", "d": "2/2016"}, {"body": "problem every invocation function going return new promise written way around function must invoked check return value changed generally avoid calling functions view instead assign values properties", "d": "2/2016"}, {"body": "could take advantage fact undefined variables nt displayed promise assign resulting value variable undefined although might need declare nt assign value variable assigned value appear template variable defined", "d": "2/2016"}, {"body": "recently oidctokenmanager sanity check would helpful easy debug", "d": "2/2016"}, {"body": "still currently usable breaking change changing see", "d": "2/2016"}, {"body": "tried submit form acts like usual form reload page", "d": "2/2016"}, {"body": "eoz really use plunker", "d": "2/2016"}, {"body": "please try", "d": "2/2016"}, {"body": "eoz missing also see plnkr check docs ngform ngform bound component elements component upgraded use angular form system since nt add form angular form common one", "d": "2/2016"}, {"body": "think issue selector behavior selector think selector match simple behavior really need add use", "d": "2/2016"}, {"body": "ericmartinezr missing removed intentionally forms without working fine nt mind replace nt need add fngform ask add changelog spend around minutes find save somebody else time good see docs date rereading docs beta release option hehe", "d": "2/2016"}, {"body": "wrong undefined fixed plunker", "d": "2/2016"}, {"body": "lol nice finding", "d": "2/2016"}, {"body": "error occurs angular passes event normal form behavior reloading", "d": "2/2016"}, {"body": "hah really well undocumented feature think content issue helpful enough future readers thank much", "d": "2/2016"}, {"body": "funny wondering two days ago actual idea behind event binding nt introduce events looking code also difference emit event however make sense thanks everyone much", "d": "2/2016"}, {"body": "sounds like", "d": "2/2016"}, {"body": "problem model driven form", "d": "2/2016"}, {"body": "looks like would allow ask", "d": "2/2016"}, {"body": "great thanks", "d": "2/2016"}, {"body": "guardiannw nt think problem angular rather might rather better posted repo would keep one open visibility though someone picks", "d": "2/2016"}, {"body": "thanks pascalprecht could totally post zonejs even may might leave sure", "d": "2/2016"}, {"body": "btford take look", "d": "2/2016"}, {"body": "issue seem reside zonejs awaiting integration zonejs release", "d": "2/2016"}, {"body": "sorry found problem code closing issue", "d": "2/2016"}, {"body": "looks like expressions get evaluated buttons ngfor array button ngif", "d": "2/2016"}, {"body": "kukicadnan yeap assume throw instead", "d": "2/2016"}, {"body": "seriously possible ngif ngfor element iterating list nt empty", "d": "2/2016"}, {"body": "try looking angular seed", "d": "2/2016"}, {"body": "could load angular files plain javascript found angular build history put script files html compile typescript files javascript add html well nt know different way nt used visual studios using plain javascript know use without compiling note nt javascript files angular beta snapshot latest build currently previous builds simplicity usually load three files rxumdminjs three get functionality angular could use dev versions prefer usually use", "d": "2/2016"}, {"body": "excuse develop typescript without dts files without lose compiletime checking good things", "d": "2/2016"}, {"body": "problem typescript vs setup", "d": "2/2016"}, {"body": "following solves problem kind ugly javascript ngoninit thischangedetectordetach setinterval gt thischangedetectorreattach thischangedetectordetectchanges thischangedetectordetach", "d": "2/2016"}, {"body": "would interesting know supposed used afaik change detection returns changes found nt notify angular anything", "d": "2/2016"}, {"body": "zoechi according documentation supposed work also reattaching detectchanges works reattaching sufficent somehow seems work cd deteched", "d": "2/2016"}, {"body": "choeller change detector reattached cd performed subtree sample docs seems buggy performs change detection tree however change detector detached wo nt perform change detection subtree", "d": "2/2016"}, {"body": "pascalprecht ok thanks reply see elegant solution triggering redraws manually think example docs common real world scenario would cool api also idea seems effect thanks christoph", "d": "2/2016"}, {"body": "see elegant solution triggering redraws manually nt know would facade calling exactly three functions unless want conditionally check something first also idea changedetection changedetectionstrategydetached seems effect meant used change detection strategies use latter experimental works typescript land besides one interested fact need move new enum nt defined etc", "d": "2/2016"}, {"body": "pascalprecht onpushobserve dropped point one strategy wrong using exposed beginning nt see wrong using know", "d": "2/2016"}, {"body": "ericmartinezr two actual strategies something use consumer wrong using nothing wrong simply wo nt effect design strategies used internally via apis like etc exposed beginning simply grew historically say", "d": "2/2016"}, {"body": "planned move enum nt exposed api", "d": "2/2016"}, {"body": "pascalprecht thanks insights would cool comfort controlling rendering know totally fine close ticket", "d": "2/2016"}, {"body": "hey balamanigandan repo looking one recommend though ask gitter chatroom first", "d": "2/2016"}, {"body": "thnx ericmartinezr", "d": "2/2016"}, {"body": "worked nt tried yet", "d": "2/2016"}, {"body": "work issue comes key filtering implemented sorry nt clear initial post", "d": "2/2016"}, {"body": "yeah got day great implemented", "d": "2/2016"}, {"body": "solution see right catch every keyup filter youdz correct rather listen event check manually like", "d": "2/2016"}, {"body": "thanks pascal less slapped together meantime stick renamed issue feature request nt think one would appreciate seems like lowhanging fruit terms feature added per amount code since already key filtering nonglobal events nt time look implementation yet end little free time nt solved try submit pr", "d": "2/2016"}, {"body": "latter want override di also create patch necessary", "d": "2/2016"}, {"body": "jsdom", "d": "2/2016"}, {"body": "jsdom way heavyweight talking actually implementing functionality want see add mocks window object code nt break app would like", "d": "2/2016"}, {"body": "would probably appropriate platform rather core would code browser would server would implement localstorage server would use file system", "d": "2/2016"}, {"body": "need implementation local session storage", "d": "2/2016"}, {"body": "binvention yes may right platform far storage server implementation would typically either memory storage something like redis", "d": "2/2016"}, {"body": "would cookies implemented server", "d": "2/2016"}, {"body": "many ways one", "d": "2/2016"}, {"body": "okay actually using cookies server way send cookies browser", "d": "2/2016"}, {"body": "right referring example would implement cookies api", "d": "2/2016"}, {"body": "sure misinterpreting question binvention web server requests cookies accessible server point service universal ones posted critical things pretty much everyone going build universal angular app going need case would something like would exist within service universal app client side would behave like angular cookie server side would something would get initialized target web server framework ex hapi express koa etc something like case goal issue worry server side implementation handle angular universal repo rather discuss interface cookie service either core platform everyone using thing", "d": "2/2016"}, {"body": "talked jeffbcross friday well high level talking design services need figure even higher level want tokens interfacesabstract implementations types things live actual implementations head service live outside core easily overridable anyone think key ensuring common interface available everyone", "d": "2/2016"}, {"body": "related got already service handle title read write", "d": "2/2016"}, {"body": "good least title service obviously primary piece head matters client side ideally least expand interface include everything head even included core implementation title", "d": "2/2016"}, {"body": "great imperative approach think could easily expand current title service head service richer api required update would involve touching following files guess b declarative approach would need work guess need update core files viewresolverts metadataviewts least jeffwhelpley think", "d": "2/2016"}, {"body": "would good array particular meta tag handling og images", "d": "2/2016"}, {"body": "record request manipulating tags closed feasible would probably nice let people know feasible", "d": "2/2016"}, {"body": "would possible extend service tag well please two use cases follow using css framework requires different classes element different layouts angular router navigates different components different layouts need change classes root element see also service would probably like change attribute root element please let know rather file another issue", "d": "2/2016"}, {"body": "related check fiddle answer bootstrap thing", "d": "2/2016"}, {"body": "ericmartinezr thanks", "d": "2/2016"}, {"body": "cc tbosch mhevery", "d": "2/2016"}, {"body": "use case solved", "d": "2/2016"}, {"body": "although would possible using template native core solution would better perform better", "d": "2/2016"}, {"body": "see think need something marker like directive modify dom tree eg", "d": "2/2016"}, {"body": "may also run issues case sensitivity tried webpack minifier changed things like ngif ngif broke templates", "d": "2/2016"}, {"body": "captaincodeman upgrading latest version htmlloader found following webpack configuration worked configmoduleloaderspush test html loader htmlloader confightmlloader minimize true removeattributequotes false casesensitive true customattrsurround customattrassign works following html template string page yes opposite yes page output page yes opposite page", "d": "2/2016"}, {"body": "cool thanks uglow", "d": "2/2016"}, {"body": "see also", "d": "2/2016"}, {"body": "zoechi yet almost regular angular documentation tell try removing equal amp quotes would nt surprised fixes things", "d": "2/2016"}, {"body": "salemdar get behaviour set also use case trying build link without", "d": "2/2016"}, {"body": "nblasgen removing equal amp quotes nt make difference angular least anything notice pascalprecht get behavior without angular example comes handy want use link call function controller always thought well known frequently used feature reaction get people makes think might even desired feature angular note looking css js hacks use case example could interested box solution", "d": "2/2016"}, {"body": "might big friend semantic html say anchor without actual anchor words nt anchor tag might right element use case regardless angular", "d": "2/2016"}, {"body": "pascalprecht even page source search anchor tag class see link even accessible design purposes sometimes might want link act like button expert html standards think using simple anchor tag trigger navigation much convenient styling like link would insist things wrong really wrong way", "d": "2/2016"}, {"body": "sounds like", "d": "2/2016"}, {"body": "using gulptypescript compile include files source since config supported", "d": "2/2016"}, {"body": "xml deprecated chrome guess would require external library moved see also angular", "d": "2/2016"}, {"body": "plunker shows called devmode expected angular evaluates binding twice change detection cycle nt call functions like bindings better way assign value result call field bind field expression keys items app changed checked previous value shoe purse something current value shoe purse something keys items app thrown exactly tries make developers aware successive calls binding expression result different results new array even though content angular checks object reference differs value received previous call", "d": "2/2016"}, {"body": "ok see really make sense angular nt like anyways cache right hand side like common compilers like java c problem would solved", "d": "2/2016"}, {"body": "would angular know evict cached value fetch new one need cache instead return new one old outdated", "d": "2/2016"}, {"body": "mean permanently caching one ngfor run like var target righthandside var target magic", "d": "2/2016"}, {"body": "sure see plunker change detection always checking twice", "d": "2/2016"}, {"body": "wow quite unreadable mess please modify post wrap code triple backticks plunker would nice well get proper repo case", "d": "2/2016"}, {"body": "hey double check ca nt see bound element code include snippet really also could elaborate little bit error occours actions required description ca nt really see reproduce work around", "d": "2/2016"}, {"body": "sorry mess plunkr link", "d": "2/2016"}, {"body": "make sure reference angular typings app entry point see", "d": "2/2016"}, {"body": "errors well initial gulp build everything works fine make change one ts files even whitespace change gulp file throws bunch errors find name module find name promise saving several times starts building properly think failing actually outputting modified files stackoverflow question details", "d": "2/2016"}, {"body": "thanks ericmdantas solved problem", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "change note changed double quotes single quotes", "d": "2/2016"}, {"body": "thanks", "d": "2/2016"}, {"body": "see", "d": "2/2016"}, {"body": "problem adding inputs", "d": "2/2016"}, {"body": "problem existing views access since coming rest service since rewriting client want maintain frameworks jquery angular want reach unique code base without inconsistency nt get argument behind entire nt want support complex selectors thing actually logical consequence core concept", "d": "2/2016"}, {"body": "nt figured yet use html fetched using rest apply directives components even though often mentioned feature get part already working nt look like targets use case lot building delivering client case need control view anyway complex selectors nt add much value", "d": "2/2016"}, {"body": "yes course simple get request rest api via url templateurl would nt care much whether requested actual html file response counts view markup code", "d": "2/2016"}, {"body": "sure easy fetch html get angular directives components applied dynamically inserted html", "d": "2/2016"}, {"body": "admit nt go far yet getting html worked pleased atm test views separate sandbox project play around nt doubt would work oops", "d": "2/2016"}, {"body": "nt propagate default think explained", "d": "2/2016"}, {"body": "propagating click events return false event preventdefault mention stoppropagatebubbling change removed stopping bubbing", "d": "2/2016"}, {"body": "eesdil atm preventdefault every event gets dispatched webworker nt believe stopping propagation though kegluneq nt work webworker event propagation preventdefault", "d": "2/2016"}, {"body": "nt ring bell think must someone else", "d": "2/2016"}, {"body": "please provide plunker shows trying accomplish fails", "d": "2/2016"}, {"body": "created pr feature", "d": "2/2016"}, {"body": "subscribe get notified route actions github issues bug reports feature requests support questions please use channels like stackoverflow gitter google groups", "d": "2/2016"}, {"body": "thank keep mind", "d": "2/2016"}, {"body": "perhaps suggestion nt work child routers", "d": "2/2016"}, {"body": "malichishti afaik workaround global service inject service wherever need access", "d": "2/2016"}, {"body": "sure router error reproduce plunker", "d": "2/2016"}, {"body": "hard reproduce plunker based path based routes hard refresh route could probably get external site demonstrate mean", "d": "2/2016"}, {"body": "indexhtml file look like", "d": "2/2016"}, {"body": "created simple example click course route works fine hit ctrl r however want hard refresh route see mean see html source viewsource", "d": "2/2016"}, {"body": "also pushed code", "d": "2/2016"}, {"body": "ok nt router issue specifically server issue server needs setup redirect requests indexhtml using mode use hashlocationstrategy work fine refresh", "d": "2/2016"}, {"body": "setup redirect htaccess indexhtml show another route work gim set", "d": "2/2016"}, {"body": "actually look source file see html page", "d": "2/2016"}, {"body": "viewsource", "d": "2/2016"}, {"body": "trying avoid hashlocationstrategy want pretty urls", "d": "2/2016"}, {"body": "right anything nt exist server return indexhtml look network tab debugger scripts returning indexhtml source try moving scripts request looks like", "d": "2/2016"}, {"body": "ok looks like right needing top thanks read router docs carefully right opening head tag", "d": "2/2016"}, {"body": "also possible thing using bootstrap loader provide appbasehref usevalue central", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "yep either one", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "please edit initial post wrap code triplebacktick instead formatting quote really hard read way", "d": "2/2016"}, {"body": "plunker demonstrates issue would helpful well", "d": "2/2016"}, {"body": "hi zoechi thanks reply cleaned previous post asap link plunker code generic problem basic feature ioc inside services used components", "d": "2/2016"}, {"body": "usually works could nt see problem code", "d": "2/2016"}, {"body": "docs elementref created element template contains directive component databinding elementref backed renderspecific element browser usually dom element elementref trying inject populated nowhere elementref backed anything approach wrong instead trying inject elementref bootstrap inject componentdirective use setter service pass content class service elementref class app constructor svc service elementref elementref svcelementref elementref bootstrap app service", "d": "2/2016"}, {"body": "thanks ericmartinezr try solution general say ioc nt work dom manipulation services", "d": "2/2016"}, {"body": "yes end cam code works app import component view elementref enableprodmode import bootstrap import initobject servicesinjectorhelpers enableprodmode component selector listitem view templateurl itemhtml export class listitem bootstrap listitem initobject app gt err gt consoleerror err service import injectable injectable export class initobject value isnull boolean ok know elegant ways writing thanks", "d": "2/2016"}, {"body": "see", "d": "2/2016"}, {"body": "thanks ericmartinezr closing issue", "d": "2/2016"}, {"body": "currently possible comment nt provide enough information give detailed guidance github issues bug reports feature requests support questions please use channels like stackoverflow gitter google groups", "d": "2/2016"}, {"body": "possible take issue thanks", "d": "2/2016"}, {"body": "related systemjs configuration move question rep hunters happy similars", "d": "2/2016"}, {"body": "ericmartinezr may related config exhibit angulario tutorial", "d": "2/2016"}, {"body": "wooott god damn well since screwed try fix trying answer remove typescript compiler go look try compile files founds nt want want add marked add systemjs config code work way look tutorial could nt find line", "d": "2/2016"}, {"body": "ericmartinezr thanks alot makes perfectly sense quickstart guide configure typescript regards", "d": "2/2016"}, {"body": "znow thanks looking specific import found odd line like would appear tutorial talking config right sentence tutorial nt really tell exlude nodemodules import specific packages components use really sorry want ask clarification open issue repo website", "d": "2/2016"}, {"body": "generally speaking using import statement library nt work two meanings value side emit causes module loader load package type side typechecker instruction locate typings loader side probably works ts see symbol package nt include typings distro latter fails may want use native module loader syntax load dependency use instruct typechecker", "d": "2/2016"}, {"body": "documentation issues maintained repo", "d": "2/2016"}, {"body": "zoechi thanks didnt know sorry", "d": "2/2016"}, {"body": "prob thanks reporting please create issue close", "d": "2/2016"}, {"body": "zoechi hope right way instead creating issue forked formsjade made pull request", "d": "2/2016"}, {"body": "sure mean forked formsjs pull request sounds great", "d": "2/2016"}, {"body": "sorry edited post ment formsjade docu", "d": "2/2016"}, {"body": "see nt see pull request angulario repo anyway please close tis issue angular repo", "d": "2/2016"}, {"body": "update turns handle actual instance via however one nt help either control registered yet point accessing template control gets registered first time value control changes", "d": "2/2016"}, {"body": "update however one nt help either control registered yet point accessing template control gets registered first time value control changes realised use elvis operator make work use expressions evaluated asynchronously however still think strategies templatedriven modeldriven provide api template", "d": "2/2016"}, {"body": "nice api tells errors sth like could also done extending work without argument currently requires string error type", "d": "2/2016"}, {"body": "seems dup", "d": "2/2016"}, {"body": "zoechi post nt really hold answer global styles andor rendering style sheets variables uses ngstyle single element trying achieve let alone dry solution", "d": "2/2016"}, {"body": "nt say holds answer think reported issues quite similar suggestion use common kind feature request also nt think substitute", "d": "2/2016"}, {"body": "nt error", "d": "2/2016"}, {"body": "thats odd work without ngfor okay guess really bazaar coincidence", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "ah ok thanks close issue immediately", "d": "2/2016"}, {"body": "dupe", "d": "2/2016"}, {"body": "urgent one hotlists thanks", "d": "2/2016"}, {"body": "workarounds ugly may currently blocking anything least us seems like powerful useful feature angulardart iirc angularjs familiar hotlists criteria added one feature parity hotlist add", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "internal tracking issue", "d": "2/2016"}, {"body": "seen similar errors invalid html provide plnkr reproducing issue", "d": "2/2016"}, {"body": "helps dont get error", "d": "2/2016"}, {"body": "ran well change detection fires reorder items first detaches domelements order adds seems pretty brute force right hopefully something cleaner added minimize number dom detach calls need made reordering", "d": "2/2016"}, {"body": "pascalprecht think appropriate way use slightly shorter original comment", "d": "2/2016"}, {"body": "ericmartinezr ah nt know api exists indeed cleaner thank", "d": "2/2016"}, {"body": "closing someone even better idea please lem know also reopen", "d": "2/2016"}, {"body": "pascalprecht think need proposal", "d": "2/2016"}, {"body": "one thing could think also general solution things would allow local variable assignment template getting references la also allowing variable creation value assignment like one could", "d": "2/2016"}, {"body": "ericmartinezr neither defined instance know introduced", "d": "2/2016"}, {"body": "ericmartinezr little update reason nt apis nt modeldriven forms moment defined nt extend particular class missing think gon na open another issue", "d": "2/2016"}, {"body": "pascalprecht oh nice", "d": "2/2016"}, {"body": "pascalprecht ngcontrolname", "d": "2/2016"}, {"body": "right also call properties directly doesnt give api benefits wed feb pm todoubaba notifications githubcom wrote pascalprecht ngcontrolname get control control reply email directly view github", "d": "2/2016"}, {"body": "thank even better however nt also think least experience matter template driven model driven forms", "d": "2/2016"}, {"body": "tedious setup field template better using take care details see", "d": "2/2016"}, {"body": "agree nice reference control especially using templatedriven forms use case want support get straight article uses modeldriven forms still trying grok improve templatedriven forms", "d": "2/2016"}, {"body": "todoubaba found getter nt help either case templatedriven forms lt fyi", "d": "2/2016"}, {"body": "think fixed basvandenheuvel implements guessing something like", "d": "2/2016"}, {"body": "idea selectbox types components would update various events control always date nt think one keeping date could source lot bugs resetting form fields", "d": "2/2016"}, {"body": "nt would reference field via form first name first name required nt follow referencing form input control maybe missing something", "d": "2/2016"}, {"body": "thelgevold couple things using modeldriven forms currently exploring templatedriven forms nt use nt control group created imperatively component nt follow referencing form input control maybe missing something referencing form referencing happens exported like exactly trying point basically goal get reference particular control ca nt access via control group instance turned exports expected", "d": "2/2016"}, {"body": "pascalprecht ah see", "d": "2/2016"}, {"body": "hope made clear something need change issue description please let know", "d": "2/2016"}, {"body": "definitely agree exporting ngform nt intuitive nt make sense level input control level", "d": "2/2016"}, {"body": "btw wondering exported", "d": "2/2016"}, {"body": "yet another name use except prolly make sense build custom controls nt necessarily input still voting respectively", "d": "2/2016"}, {"body": "pascalprecht thanks agree", "d": "2/2016"}, {"body": "mean specify yet documented see official page assume gets element creates sub element bottom docs link source code abstract class implementation look domrenderer implementation get better idea", "d": "2/2016"}, {"body": "really know works", "d": "2/2016"}, {"body": "tell nt seem issue ngclass beta tried worked", "d": "2/2016"}, {"body": "set directives component ngclass work need set component", "d": "2/2016"}, {"body": "sabartius nt need add directives needs make plnkr reproduce issue", "d": "2/2016"}, {"body": "thelgevold sabartius thank chiming helping issues much appreciated codejason unfortunately enough detail bug report would allow us reproduce issue ca nt fix ca nt reproduce please go issue submitting guidelines see kind info require able help effectively importantly need live reproduce scenario using tool like plunker similar modify plunk reproduce issue going close one actionable asis happy reopen got reproduce scenario though", "d": "2/2016"}, {"body": "sorry late reply mean", "d": "2/2016"}, {"body": "made tweak code import component component selector myapp providers template styles directives export class app styles constructor thisname thisstyles thisgetmyclasses capture property instead getmyclasses let toreturn red true blue false return toreturn generally think better capture value property rather binding function directly guess original plunker nt work change detection gets confused since ngclass gets new object every time function binding fires every digest", "d": "2/2016"}, {"body": "thanks although nt look like see somehow change returned value runtime alter classes one plunkr back running could documentation changed accommodate method issue fixed like stated start followed documentation precisely template syntax section", "d": "2/2016"}, {"body": "updated plunkr able keep function binding given nt return new object two ways changing classes work", "d": "2/2016"}, {"body": "doc issues managed", "d": "2/2016"}, {"body": "brazenest migrated issue", "d": "2/2016"}, {"body": "using ts return tcbcreateasync logincomponent fixture gt getting elements let compiled fixturedebugelementnativeelement let username compiledqueryselector input type text username required control called form valid test passes also using method worked still though", "d": "2/2016"}, {"body": "binarious sadly nt fix would surprising pretty much thing hood worth try thanks answer issue first alphas last beta", "d": "2/2016"}, {"body": "test green looks like works normal", "d": "2/2016"}, {"body": "need either method provided far know", "d": "2/2016"}, {"body": "binarious directly accessible", "d": "2/2016"}, {"body": "help", "d": "2/2016"}, {"body": "thanks unfortunately nt really help read overview posted questions unclear chain steps amp tools used build different bundles order say usual tools like gulp grunt especially scripts become big becomes hard follow", "d": "2/2016"}, {"body": "yeah sure whole explanation gulp file probably try decode build task hard follow everything", "d": "2/2016"}, {"body": "using create bundles systemregister format webpack create umd ones bundles build entry points located respectively systemregister ones umd ones noticed bundling setup trivial nt think offer guidance without concrete questions end say need pretty familiar systemjs builder webpack make sense build config scripts going close one planning documenting build steps details point feel free ask concrete questions though", "d": "2/2016"}, {"body": "pkozlowskiopensource went gulp build script figured webpack config actually part well external webpackconfjs could please explain tsconfigjson time webpack config contains tsc config section time webpack config also contains webpack config one used work like tsc compiles ts webpack bundle everything", "d": "2/2016"}, {"body": "work like tsc compiles ts webpack bundle everything yes simplify like webpack used combine output point bundling typescript involved", "d": "2/2016"}, {"body": "could take look starter project uses systemjs builder gulp tasks split files easy learn", "d": "2/2016"}, {"body": "pkozlowskiopensource thanks exactly use webpack systemjs antonybudianto thanks getting page found correct url actually would webpack npm gulp interested", "d": "2/2016"}, {"body": "use please move questions stackoverflow gitter chatroom similars github report issues bugs thanks", "d": "2/2016"}, {"body": "hmm issue since one would expect use select either since simple label text gets inserted user never mind give try nt trick either nt work fact", "d": "2/2016"}, {"body": "working honest nt see complexity issue create plnkr showing case way rephrase something github report issues framework asking features different thing bugs", "d": "2/2016"}, {"body": "might work tried nt seem added dom used internally angular using wrapper element nt course probably makes work expect", "d": "2/2016"}, {"body": "zoechi unfortunately tried ericmartinezr select rule nt apply issue since content comes user component plain text attribute user selects print label left right alone nt work stop writing since actual buggish issue", "d": "2/2016"}, {"body": "ok continue conversation sorry sounded rude free open new issue asking feature since right bug sounds bindable something like came right", "d": "2/2016"}, {"body": "hmm quite even though would good feature made plunker example point intentions component blackbox user know anything internal selectors stuff simply controls position label text using labelpos attribute", "d": "2/2016"}, {"body": "see guess probably way", "d": "2/2016"}, {"body": "check console believe dev mode extra change detection operations warn things changed unexpectedly nt really valid use performance testing try adding see makes difference sure custom trackby helps case", "d": "2/2016"}, {"body": "captaincodeman tested cases change performance even trackby thanks", "d": "2/2016"}, {"body": "found solution updated newer version works", "d": "2/2016"}, {"body": "newer version angular browser", "d": "2/2016"}, {"body": "zoechi ups forgot say firefox old version", "d": "2/2016"}, {"body": "error example plunker nt remove link works intended", "d": "2/2016"}, {"body": "thank help work error example plunker could please explain reason needs removed wrong add bug current version angular wrong add provider could please explain", "d": "2/2016"}, {"body": "hi linvi opinion following happens declare routerproviders providers component happens instantiate new instances routerproviders component child components therefore routerlink directives use template use new instances routerproviders instances configuration routes etc instances added bootstrap hopefully providers attribute component selector used instantiate new singletons component children smart way ensure particular service available part component tree parts services instantiated bootstrap available singletons components services declared root component hence available children omit providers component routerlink use instances created bootstrap therefore work instance configured routes hope makes sense cheers", "d": "2/2016"}, {"body": "linvi explained introducing providers child injector want point want read dependency injection might want check article close issue", "d": "2/2016"}, {"body": "yes thank help bit clear still process learning angular hope make sense coming days", "d": "2/2016"}, {"body": "closed favor", "d": "2/2016"}, {"body": "looks like dup", "d": "2/2016"}, {"body": "spoke brandom bit gitter guess would plotly use call moving zonejs plotly presumably repatches counter advice including polyfills first right answer think encourage third parties import polyfills like directly even outside angularland enforce dependency might necessary suspect plotly likely using promise constructor normal cc mhevery ideas maybe pr polyfill twice", "d": "2/2016"}, {"body": "think solved latest zone rewrite sun feb pm rob wormald notifications githubcom wrote spoke brandom bit gitter guess would plotly use call moving zonejs plotly presumably repatches counter advice including polyfills first right answer think encourage third parties import polyfills like directly even outside angularland enforce dependency might necessary suspect plotly likely using promise constructor normal cc mhevery ideas maybe pr polyfill twice reply email directly view github", "d": "2/2016"}, {"body": "guess filed repo", "d": "2/2016"}, {"body": "sorry nt know distinct repo http module reopened right place", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "similar think really important without openid security implemented without reverting back javascript hack security beginning", "d": "2/2016"}, {"body": "work lowercase filename import", "d": "2/2016"}, {"body": "ericmartinezr tried result fact notice files already using instead renamed file herots herots deleted herojs herojsmap files generated updated import line reference lowercase file name interesting observation files herojs herojsmap generated capital h", "d": "2/2016"}, {"body": "nt use ts sure makes difference seems lowercase everywhere ts line endings template string seems quite weird well", "d": "2/2016"}, {"body": "zoechi works nt problem problem use actual type variable supposed hold hero understand mean n line ending added netbeans working fine", "d": "2/2016"}, {"body": "ca nt parse source fails nt expect therefore likely error", "d": "2/2016"}, {"body": "cheungtitus found error answer run similar situation", "d": "2/2016"}, {"body": "zoechi thanks tested changing works", "d": "2/2016"}, {"body": "hi haneepcr seems missing route definition", "d": "2/2016"}, {"body": "accepted answer guess closed", "d": "2/2016"}, {"body": "link might help", "d": "2/2016"}, {"body": "garethdn appreciate help much new checked link provided however still clear make modal dialog work use idea link modal dialog dynamic component want popup modal dialog add hero button clicked basic feature application surprised ca nt find documentation sample code available feels like nightmare possible make changes plunkers provided make work", "d": "2/2016"}, {"body": "surprised ca nt find documentation sample code available uhmmmmm", "d": "2/2016"}, {"body": "ericmartinezr search result comes back better mine angularjs modal try follow links provided", "d": "2/2016"}, {"body": "garethdn ericmartinezr thanks jumping xangular going close issue issue framework future please keep github issues reporting bugs problems find lots helpful people gitter channel kinds howto questions thanks", "d": "2/2016"}, {"body": "asked help gitter channel first body gave feedback went github help even though issue framework think feature badly needed apparently done better also great help documentation available developer guides course humble opinion beginner", "d": "2/2016"}, {"body": "played around little bit bootstrap modal dialog turns combine bootstrap modal dialog angular form achieve want without using libraries particularly developed modal angular need include jquery bootstrap libraries indexhtml updated plunders originally created asked help new plunkers case developers new angular like need", "d": "2/2016"}, {"body": "btford looks like code app could cause loop router change seems like case detected error reported", "d": "2/2016"}, {"body": "nt use ts use dart think valuable feedback documentation issues filed instead though", "d": "2/2016"}, {"body": "believe writers docs kind reading sequence mind completing minutes quick start head lengthy tutorial everything developer guides basically extends tutorial without tutorial lost", "d": "2/2016"}, {"body": "okay think see problem clicked tutorial clicked change javascript typescript nt particular document javascript next one displaying data think either tutorial available typescript bug web site prevents tutorial displaying javascript selected", "d": "2/2016"}, {"body": "switching tsjsdart nt show document matter exists", "d": "2/2016"}, {"body": "daniellangdon hi docs team ca nt see chapter certain language chapter likely nt exist language yet", "d": "2/2016"}, {"body": "yes problem need address effectively typescript language start explain things intention offer material js dart way behind effort energies concentrated first coverage angular features moment obliges js dart developers switch ts language track content wish could throw switch ts content instantly available dart unfortunately translation nt automatic open suggestions improvement short term ultimately language parity documentation", "d": "2/2016"}, {"body": "zoechi language switch top nt work way welcome suggestions improve content exist jsdart", "d": "2/2016"}, {"body": "wardbell would think simply message indicating selected document nt available selected language would plenty sufficient", "d": "2/2016"}, {"body": "also think message content available language would suffice navigation top left still available allows switch previous another language continue elsewhere", "d": "2/2016"}, {"body": "issue tried switch language content nt available saw incomprehensible mess like harry potter book missing pages indication pages missing", "d": "2/2016"}, {"body": "duplicate", "d": "2/2016"}, {"body": "per robwormald tried use asynctestcompleter still real requests hm", "d": "2/2016"}, {"body": "hello futourism set top main file app", "d": "2/2016"}, {"body": "hello ericmdantas thanks reply reference top contactmanagerts ts file project get error running tsc gulp typescripts typescripts task like gulptask typescripts function return tsprojectsrc pipe gulpdest publicjs web page run including resolved js file ts included systemjs jquery foundation polyfills main router order must said tsconfigjson file used commonjs module instead config much errors import errors", "d": "2/2016"}, {"body": "nt bundle app work", "d": "2/2016"}, {"body": "progress tried changing tsconfigjson module property back commonjs ran tsc using gulp tsproject actually would like use bundle everything errors showed contactmanagerjs compiled file folder ts copy compiled file link page inclusion try page get error uncaught referenceerror require defined anonymous function", "d": "2/2016"}, {"body": "hmm repo", "d": "2/2016"}, {"body": "upload project minutes post link uploaded thank lot ericmdantas", "d": "2/2016"}, {"body": "alright", "d": "2/2016"}, {"body": "also since nt seem bug framework could please close issue carry gitter chat", "d": "2/2016"}, {"body": "sure done upload repository", "d": "2/2016"}, {"body": "reported twice issue still persists yes nt bundlepackage put tag recommended still nt work unless disable option uglifying mangle works", "d": "2/2016"}, {"body": "antonybudianto thank however get exception reported issue wrong template wanted make sure one mixed issues related mangling hope plunkr easy possible reproduce think nothing bundeling polyfills really mangling components leads name collisions templatecompiler mentioned", "d": "2/2016"}, {"body": "point uglification broken since matter many kind issues caused let hope fixed soon", "d": "2/2016"}, {"body": "looks like get resolved", "d": "2/2016"}, {"body": "sorry think speculations increase probability marked duplicate remaining issues nt tell whole story far see different story", "d": "2/2016"}, {"body": "github issues bug reports feature requests please use channels like stackoverflow gitter google groups support questions", "d": "2/2016"}, {"body": "getting error adding stuff list removing works track nt track", "d": "2/2016"}, {"body": "ericmdantas small change make items adding removing different indexes problem goes away think underlaying issue view rerendered underlaying object changes key reported trackby function reported example add something value number like index delete one thing index index unique keys added removed works fine noticing hope helps", "d": "2/2016"}, {"body": "works thanks", "d": "2/2016"}, {"body": "ericmdantas also new version reverse button add one item click reverse everything locks tight chrome change sort order create new objects apparently failing well", "d": "2/2016"}, {"body": "vsavkin looking fixing tonight may head bit nt much experience core angular yet last person see touched code looking ran itterable change detector logic method seems core problem items evicted nextidentitychange value nt seem get removed brought back following hanging references second case reverse rebuild objects causes infinite loop change detector first case lose ref object sure happening yet insight give would great", "d": "2/2016"}, {"body": "vsavkin looked little deeper lack removal seems cause issue ngfor change detection change detection using index pulls removed instances existing non removed values set", "d": "2/2016"}, {"body": "look thanks detailed report preliminarily think right forgot clean props reset iterable differ pr come soon", "d": "2/2016"}, {"body": "kara thanks looking forward fixed", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "works usefactory throws error", "d": "2/2016"}, {"body": "load polyfill", "d": "2/2016"}, {"body": "thanks zoechi try", "d": "2/2016"}, {"body": "issue one decision", "d": "2/2016"}, {"body": "peerdependency rxjs also updated need download bundle", "d": "2/2016"}, {"body": "works fine thanks", "d": "2/2016"}, {"body": "cc igorminar", "d": "2/2016"}, {"body": "works thanks", "d": "2/2016"}, {"body": "hello big risk make translate cause big data think", "d": "2/2016"}, {"body": "take look", "d": "2/2016"}, {"body": "yeah usingn application works great", "d": "2/2016"}, {"body": "ok thanks try since seem alternative moment", "d": "2/2016"}, {"body": "plunker reproduce demonstrate tried accomplish", "d": "2/2016"}, {"body": "works fine though", "d": "2/2016"}, {"body": "facepalm javascript uses camelcase", "d": "2/2016"}, {"body": "looks like looking", "d": "2/2016"}, {"body": "thank telling", "d": "2/2016"}, {"body": "unfortunately seem able solve tbosch think", "d": "2/2016"}, {"body": "tbosch like hear thinking thanks", "d": "2/2016"}, {"body": "fyi another issue reporting", "d": "2/2016"}, {"body": "let keep two issues separate", "d": "2/2016"}, {"body": "jeffbcross expected work nt know much system bundler take look", "d": "2/2016"}, {"body": "alexeagle take look", "d": "2/2016"}, {"body": "alexeagle verify fix without fix", "d": "2/2016"}, {"body": "nm cherrypicked vsavkin fix", "d": "2/2016"}, {"body": "update theory file empty hold jeff experimented adding export statement system builder still blows working theory get error introduced thu feb pm jeff cross notifications githubcom wrote nm cherrypicked vsavkin fix reply email directly view github", "d": "2/2016"}, {"body": "lppl reproduce latest version plnkr using currently", "d": "2/2016"}, {"body": "locally problem angular zone dont time right show working example hours", "d": "2/2016"}, {"body": "plunker version", "d": "2/2016"}, {"body": "lppl whether bug reported zonejs repo", "d": "2/2016"}, {"body": "ericmartinezr thanks continuation", "d": "2/2016"}, {"body": "xangular report issue see missed url", "d": "2/2016"}, {"body": "thank much exactly right soon added json end url start returning heroes spotted", "d": "2/2016"}, {"body": "fix", "d": "2/2016"}, {"body": "consider viewchildviewchildren contentchildren use refs", "d": "2/2016"}, {"body": "makes sense", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "blocked", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "thank ericmartinezr thread link", "d": "2/2016"}, {"body": "look obaservables rxjs would allow easily wrap signalir events observables could easily consumed angular", "d": "2/2016"}, {"body": "read last feature", "d": "2/2016"}, {"body": "could look", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "see", "d": "2/2016"}, {"body": "get angular router working ngupgrade provide router root component typescript example example", "d": "2/2016"}, {"body": "yup exactly looking thanks lot quick helpful response", "d": "2/2016"}, {"body": "issue angular beta think issue within addcontrol method called ngcontrol directive initialized method call setupcontrol method accepts parameter actual control bound ngchanges triggered form model update control updated new one model sync cause valueaccessor inside setupcontrol calling updatevaluemarkasdirty method invalid control object old one suggestion setupcontrol called registered directive ngonchanges form update", "d": "2/2016"}, {"body": "dup see also", "d": "2/2016"}, {"body": "issue opened using hack solve problem resetting dirty states control way reset control regenerate assign ngformmodel created directive reregister ngcontrols directives known ngformmodel directive selector ngformmodel class implements onchanges", "d": "2/2016"}, {"body": "project added also code shimsforie enables interactions svg documents ie", "d": "2/2016"}, {"body": "duplicate need include angular apparently shim libraries nt cover ie problems workaround load ie shim scripts either npm package web following npmcdn tested resolved pushing doc samples nt using npmcdn get add", "d": "2/2016"}, {"body": "shims fixed lot issues beta ie", "d": "2/2016"}, {"body": "also considered fix shimsfoiejs bundled angular polyfills including testing file seems like hack thanks", "d": "2/2016"}, {"body": "please update latest write try using three ie related shims plunker report back still working yes testing shim temporary hope merge two angularsupplied shims beta coming soon", "d": "2/2016"}, {"body": "fixes issue shimsforiejs", "d": "2/2016"}, {"body": "maybe stupid question brief look nt gives wondering would work one template", "d": "2/2016"}, {"body": "proposal one templateref jelbourn mean instead would rather vote using different syntax defining variables used template something like regular syntax used reference template ie would following semantics placed regular element return dom element current semantics placed component element return component instance current semantics placed template element return templateref added semantics could good syntax defining variables used template", "d": "2/2016"}, {"body": "general short form one character favorite short form long form borrowed form c define reference another variable", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "chatted mhevery decided best way fix submit change zonejs track xhrs like macro events timeouts yet sure would work dart zones", "d": "2/2016"}, {"body": "hmm nt see way dart either think fire question dart team", "d": "2/2016"}, {"body": "record another option would use angular xhr wrappers see wip commit couple disadvantages wo nt work user application code uses xhr via method nt solve core problem zones", "d": "2/2016"}, {"body": "dart nt wrap xhr let developers use directly", "d": "2/2016"}, {"body": "chatting dart team view dart zones wo nt able without either unstable hacks wrapping xhr anyway", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "got problem", "d": "2/2016"}, {"body": "problem liteserver probably os issue try something similar either updated quickstart issue liteserver fixed", "d": "2/2016"}, {"body": "use older version liteserver meantime devdependencies work fine ubuntu angular", "d": "2/2016"}, {"body": "tried dependencies nt work properly ubuntu angular replaced liteserver nanoserver working right", "d": "2/2016"}, {"body": "nanoserver works fine thank vrael", "d": "2/2016"}, {"body": "problem angular", "d": "2/2016"}, {"body": "blocked touches code", "d": "2/2016"}, {"body": "first part", "d": "2/2016"}, {"body": "thanks tobias hack session today", "d": "2/2016"}, {"body": "thanks help workaround tobias", "d": "2/2016"}, {"body": "workaround found", "d": "2/2016"}, {"body": "tbosch plunkr saved correctly inside looks basic nt multiple instances app", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "missing", "d": "2/2016"}, {"body": "github issues bugs feature requests please use gitter google groups support questions", "d": "2/2016"}, {"body": "prob sorry closing", "d": "2/2016"}, {"body": "think comment give hints issue first sight seems related", "d": "2/2016"}, {"body": "remember software development seemed involve less prayer magic reliance planets aligned correctly things workthis making feel old", "d": "2/2016"}, {"body": "ericmartinezr well spotted importing double quotes fixed problem would nice issue record relate fix error produced error function assume systemjs issue", "d": "2/2016"}, {"body": "info fixed problem", "d": "2/2016"}, {"body": "know talking", "d": "2/2016"}, {"body": "turns mistake feared passing arguments wrong order looking would take make argument typing specific allow typescript catch error least pass array order nt matter", "d": "2/2016"}, {"body": "vguede canactivate inject property tell previous url came", "d": "2/2016"}, {"body": "thanks brandonroberts strictly injection method simply receives two parameters", "d": "2/2016"}, {"body": "yes brandonroberts use nested route example layoutprotected previnstruction contains protected want obtain layoutprotected property ou method router obtain", "d": "2/2016"}, {"body": "petebacondarwin right thanks thinking using di canactivate vguede filed issue little ago", "d": "2/2016"}, {"body": "thing say component know hierarchy placed since could moved around perhaps really need method perhaps property", "d": "2/2016"}, {"body": "petebacondarwin ideally property url path actual navigation url stored perform redirect later", "d": "2/2016"}, {"body": "petebacondarwin agree notion component hierarchy think something like needed go back previous route could inject window use vguede need know specific url", "d": "2/2016"}, {"body": "brandonroberts need know url want return page navigations workflow layoutprotected gt unauthorized http redirect backend layoutprotected params backend redirects front layoutselectprofile layoutprotected params navigate layoutprotected", "d": "2/2016"}, {"body": "brandonroberts use check component protected gt gt user authenticated gt redirect http backend true gt check acl", "d": "2/2016"}, {"body": "vguede understand canactivate functions done bottom approach instead top approach canactivate called protected component nt knowledge parent said unless tell unauthorized route come back start process nt see way get complete url information previous instruction", "d": "2/2016"}, {"body": "brandonroberts knows complete url begining navigation", "d": "2/2016"}, {"body": "router knows complete instruction stored navigation process child router gets instruction process url complete instruction generated end navigated navigatebyurl could get information navigation link instruction one way could get href link store somewhere clicked point reliably know url seems hacky though", "d": "2/2016"}, {"body": "ca nt strore href hundred links could store instruction il could use instead would fine", "d": "2/2016"}, {"body": "using class extended uses method check navigation allowed based route data public flag roles depending authentication status redirects signin route set passes used authentication redirect back intended route import directive input attribute elementref dynamiccomponentloader import router routedata routeroutlet instruction componentinstruction example implementation given route routeconfig path thing id component thingcomponent name thing data public false roles thinger authorize instruction componentinstruction boolean simplest case route public instructionroutedatadata public return true export abstract class iauthservice authenticated boolean authorize instruction componentinstruction params boolean authorized route allows public access user authenticated return thisauthenticated instructionroutedatadata public directive selector secureoutlet export class securerouteroutlet extends routeroutlet input signin string input unauthorized string input params publicroutes private parentrouter router private authservice iauthservice constructor elementref elementref loader dynamiccomponentloader parentrouter router attribute name nameattr string authservice iauthservice super elementref loader parentrouter nameattr thisparentrouter parentrouter thisauthservice authservice activate instruction componentinstruction thisauthserviceauthorize instruction thisparams return superactivate instruction within view used signin unauthorized attributes route names use hope makes sense", "d": "2/2016"}, {"body": "could also override get url js var navigate routernavigatebyinstruction example", "d": "2/2016"}, {"body": "oops may simplified much check property decide whether redirect signin home route authorized implemented handles role checks signin jwt tokens etc", "d": "2/2016"}, {"body": "brandonroberts solution perfect thank much", "d": "2/2016"}, {"body": "even simpler javascript var navigate routernavigatebyinstruction routernavigatebyinstruction function instruction set url thiscurrenturl instructiontorooturl call original routernavigatebyinstruction navigateapply arguments consolelog routercurrenturl", "d": "2/2016"}, {"body": "would nt call current url since instruction may get cancelled feb pm vincent gu\u00e9d\u00e9 notifications githubcom wrote even simpler var navigate routernavigatebyinstruction routernavigatebyinstruction function instruction set url thiscurrenturl instructiontorooturl call original routernavigatebyinstruction navigateapply arguments consolelog routercurrenturl reply email directly view github", "d": "2/2016"}, {"body": "right usual", "d": "2/2016"}, {"body": "component extend another component nt make much sense component extend service could something like typescript component export class navitopcomponent implements oninit private navi private curnaviidx number constructor private naviservice naviservice component export class navileftcomponent extends navitopcomponent constructor naviservice naviservice super naviservice", "d": "2/2016"}, {"body": "thanks prcoc yes thought might case feel like circumventing angular system bit actually thought like suggest nt feel completely satisfying one components would dependent maybe bad idea name components way makes fact one parent child clear think", "d": "2/2016"}, {"body": "finally found problem options nt seem work without build successful", "d": "2/2016"}, {"body": "looks fine far github issues bug reports feature pull requests support questions please use stackoverflow gitter google groups", "d": "2/2016"}, {"body": "zoechi sorry know since big explanation nt want people ignore thank", "d": "2/2016"}, {"body": "issues minification try setting gulpuglify see works correctly meantime", "d": "2/2016"}, {"body": "thank tested confirm using set works correctly specific setting fine using angular without", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "yes", "d": "2/2016"}, {"body": "interesting class validdirtyinvalid seems nice guess agree decorator say field yet compliant however agree messages cumbersome sometimes obvious enough like login screen problem display know user done example form disables submit button form invalid last field invalid user editing ca nt click button lost focus event might come depending user behaviour let throw couple ux ideas use form validation change react bit differently async display errorsdetails timer inactivity bit heavy display errorsdetails way disturb form layout side floating tooltip rather div appeardisappear input think", "d": "2/2016"}, {"body": "think issue able use event instead event calling validator validation done user done editing field display errorsdetails way disturb form layout side floating tooltip rather div appeardisappear input nt bee hard imho css problem angular problem display errorsdetails timer inactivity bit heavy nt hard implement create additional flag used showhide validation errors subscribe form changes delay toggle flag", "d": "2/2016"}, {"body": "thanks guys ill try recommendation zoechi interaction designers adamant ui changing whilst user entering data apparently hate form distraction user data entry interaction", "d": "2/2016"}, {"body": "reason nt setting routes run phase", "d": "2/2016"}, {"body": "hi brandonroberts routes dynamic based user rolespermissions also component responsible configuring child routes configure route run phase map root router single route maps url whatever component user permission run idea user navigates component child routes configured within component correct wrong way cheers khoa", "d": "2/2016"}, {"body": "nt see would nt work setup right ca nt setup routes dynamically way though since router expects child routes defined navigation want setup three routes run config child routes attached statically child component child routes ca nt independent parent run config home component export default class homecontroller static inject router static routeconfig path settingshomehome name settings component navigationpathsettingscontrollerid component constructor private router confusing put together plunker go", "d": "2/2016"}, {"body": "think router nt store redirect links renamed list recognise url nt match name fairly easy fix", "d": "2/2016"}, {"body": "could work write tests routerlink directive completely mocked router possible simulate problem tests", "d": "2/2016"}, {"body": "guess still role", "d": "2/2016"}, {"body": "digging thru source perhaps problem actually need make sure prefix style blocks hostcomponent selector output expected generated css matches expected proposed solution", "d": "2/2016"}, {"body": "wonder using namespacing context use second solution originally issue ember year ago wanted try applying jquery knowledge patterns think one core concept one promises manipulate dom ok hope mistaken think ember error try use like think ought write full template conditional control eg hidden class tells whether displayed andor whether ready content yet possibly find much logic component time consider splitting subcomponents sound", "d": "2/2016"}, {"body": "gbataille components dynamic depending user provided data example would get hand fast nt part view polymer api method notify reapply style shims would enough imho", "d": "2/2016"}, {"body": "gbataille would typically agree dom manipulation made example simple possible illustrate point indicated real world example like component wrap another framework manipulation render chart think perhaps non issue based second comment hostcontext selector used style block", "d": "2/2016"}, {"body": "need also missing zonejs usually included via script tag add top bootstrap", "d": "2/2016"}, {"body": "thank solved everything", "d": "2/2016"}, {"body": "errors npm install cause later problems like typechecker runtime errors however rxjs nt work yet try", "d": "2/2016"}, {"body": "pretty sure tried must tried still installs right work rxjs thanks time", "d": "2/2016"}, {"body": "typescript logtext string input set logtext value string thislogtext value", "d": "2/2016"}, {"body": "u man tx", "d": "2/2016"}, {"body": "see", "d": "2/2016"}, {"body": "thanks works well", "d": "2/2016"}, {"body": "need actually value angulars model works nothing present nothing selected", "d": "2/2016"}, {"body": "sorry please show working example", "d": "2/2016"}, {"body": "works selected option", "d": "2/2016"}, {"body": "thank fileformformvalid property true option selected false without ngmodel plunk updated added bootstrap make clearer make things clear like achieve selectoption form default value select label submit button disabled option selected", "d": "2/2016"}, {"body": "think interested microsofttypescript short typed templates horizon angular nt need support jsx achieve", "d": "2/2016"}, {"body": "thanks info exactly mean", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "discussion already happening let centralize", "d": "2/2016"}, {"body": "hi precise spec allow asking comments last rules said browser would accept although rely tracked bug backtracking issue lexer implementation impact currently limited comment parsing since low level function could reused think ought fixed propose pr", "d": "2/2016"}, {"body": "sorry respository", "d": "2/2016"}, {"body": "see also", "d": "2/2016"}, {"body": "solved systemjs configuration nt giving error many scenarios suspecting using packages inside config block caused reconfigured karma testmain files following thanks", "d": "2/2016"}, {"body": "nolazybits got mix single quotes double quotes imports keep consistent one way change line uncomment test runs successfully", "d": "2/2016"}, {"body": "brandonroberts man thank nt think imports mixing single quote double quote still considered bug though mixing single double quote using normal beforeeach injector work thanks", "d": "2/2016"}, {"body": "nolazybits worked quotation problem problem days fixed changing quotes really wierd thanks", "d": "2/2016"}, {"body": "nt see problem css dimensions units required except either define attribute name value hint warning might useful tough", "d": "2/2016"}, {"body": "reason bring gitter chat seen least two people problem meaning likely common point pain right though warning would suffice currently invisible failure", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "possible dup", "d": "2/2016"}, {"body": "running well also starting trying wade documentation proving challenging mainly seems changed much always sure looking something still applies", "d": "2/2016"}, {"body": "documentation nt finished yet angular example plunker", "d": "2/2016"}, {"body": "impossible say based two gifs provide examples people knowledge fworks take look", "d": "2/2016"}, {"body": "already provided links repos", "d": "2/2016"}, {"body": "must missing something ca nt see code examples access", "d": "2/2016"}, {"body": "let push code another repo see", "d": "2/2016"}, {"body": "source html files linked check chrome dev tools example", "d": "2/2016"}, {"body": "yes see code html file chrome dev", "d": "2/2016"}, {"body": "nt tested suspicion remove track clause angular ngrepeat performance example drop currently equivalent track ngfor far aware", "d": "2/2016"}, {"body": "yes trackby faster", "d": "2/2016"}, {"body": "confirm todoubaba right comparing plunker example first post seems even faster example", "d": "2/2016"}, {"body": "genius todoubaba clap", "d": "2/2016"}, {"body": "yea even trackby ngfor still painfully slow ie see updated added amp fix related projet mine perf analysis two simples imbricated ngfor rows x columns lines trackby hangs initial paint", "d": "2/2016"}, {"body": "ok found working example using beta boy look different changed javascript function app appdisplaycomponent ngcorecomponent selector display template name myname class constructor function thismyname joshua windowapp windowapp function app documentaddeventlistener domcontentloaded function ngplatformbrowserbootstrap appdisplaycomponent windowapp windowapp working would appear way define models components fundamentally changed alpha beta docs nt updated reflect change maybe case anyone point release notes detail changes experienced developer pretty new angular trying get feet wet angular feel free point stupidity part", "d": "2/2016"}, {"body": "check breaking changes also come gitter chatroom ask questions github filing bugs pull requests", "d": "2/2016"}, {"body": "awesome exactly looking thanks", "d": "2/2016"}, {"body": "close issue resolved", "d": "2/2016"}, {"body": "see", "d": "2/2016"}, {"body": "todoubaba thanks pointer", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "ca nt reproduce github issues bug reports feature requests support questions please use channels like stackoverflow gitter google groups", "d": "2/2016"}, {"body": "okay thank thought would angularside problem problem nde exampleapps", "d": "2/2016"}, {"body": "found problem ngupgrade post codeexample fix later", "d": "2/2016"}, {"body": "okay worked around tourned forgot include", "d": "2/2016"}, {"body": "cc igorminar", "d": "2/2016"}, {"body": "using old version", "d": "2/2016"}, {"body": "using version", "d": "2/2016"}, {"body": "breaking change follow semver semantic versioning looking issue downgrade version good", "d": "2/2016"}, {"body": "thank much smile close issue watch", "d": "2/2016"}, {"body": "fetch value webpl remove web fun add es proxi web fun de webpl add ow web fun web rtc adds smooth scroll", "d": "2/2016"}, {"body": "get figured details left example familiar components work first working snippet import component import bootstrap import router routerdirectives routerproviders routeconfig routeparams component selector user template user id class usercmp id string constructor params routeparams thisid paramsget id component selector app directives routerdirectives template routeconfig path redirectto usercmp id path user id component usercmp name usercmp class appcmp bootstrap appcmp routerproviders", "d": "2/2016"}, {"body": "think seen tried github issues bugs feature requests please use channels like stackoverflow gitter google groups support questions", "d": "2/2016"}, {"body": "locationreload work", "d": "2/2016"}, {"body": "made plunker downgraded angular component successfully using another angular component modify reproduce failure case", "d": "2/2016"}, {"body": "error got", "d": "2/2016"}, {"body": "yes issues minified bundles since", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "problem still", "d": "2/2016"}, {"body": "please close bug missing dependencies discussed", "d": "2/2016"}, {"body": "thank help stackoverflow closing issue posting code maybe help others constructor private appstore appstore super private factoryservice thisservice return var injector injectorresolveandcreate todosservice todoaction httpproviders todostatsmodel provide appstore usevalue thisappstore thisservice injectorget todosservice servicesayhello sean", "d": "2/2016"}, {"body": "keep mind manual injector creation sth nt unless good reason angular already calls particular code soon create injector manually detached actual injector tree nt reason part di tree nt", "d": "2/2016"}, {"body": "tx reply actually use different problem may raise diff solution nothing else make good idea next blog cyclic reference ran stack overflow comp needs b vice versa opted manual di avoid inside method rely constructor thus avoid cyclic ref better idea ears fyi ben nadel recoemmends using subclass still unsure would subclass even help abstraction layer would still need call super deps duplicated efforts sure enough ran cyclic dep regards sean", "d": "2/2016"}, {"body": "also still nt think using custom injector good idea even preventing cyclic references provide concrete example reproduce issue probably hard fix right way", "d": "2/2016"}, {"body": "added comment info", "d": "2/2016"}, {"body": "zoechi basically service requires action action requires service classes sure cam also use mediator pattern share instances well guess diff ways figured would rather use di tool", "d": "2/2016"}, {"body": "chinookproject plnkr actually plnkr p", "d": "2/2016"}, {"body": "ericmartinezr oops updated correct link", "d": "2/2016"}, {"body": "pass object holding values get usual stopsort data something dataevent something dataui plnkr working", "d": "2/2016"}, {"body": "awesome thanks lot", "d": "2/2016"}, {"body": "says create file project", "d": "2/2016"}, {"body": "thank", "d": "2/2016"}, {"body": "mariomatar please close issue done asking", "d": "2/2016"}, {"body": "looks like missing using browserify entrypoint ts use strict import import import zonejs import reflectmetadata import rxjsrx", "d": "2/2016"}, {"body": "exactly needed fixed number problems notably ngoninit firing components loaded router thanks listing", "d": "2/2016"}, {"body": "works thanks", "d": "2/2016"}, {"body": "think want", "d": "2/2016"}, {"body": "first read seems yes found cool router sample look userstats scenario might already looking sure", "d": "2/2016"}, {"body": "bastienjs yes multiple nested routes supported another example basically want add another level add three periods end route path add parent component component directives template", "d": "2/2016"}, {"body": "brandonroberts thx needed know migration plan ui router used new router", "d": "2/2016"}, {"body": "uirouter folks said would version uirouter coming possible upgrade strategy much know", "d": "2/2016"}, {"body": "already pr", "d": "2/2016"}, {"body": "thanks pointing one", "d": "2/2016"}, {"body": "think added otherwise get new instances providers listed every component shared ones contain data probably want access", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "want changes child component reflected back parent component need use declare output event event emitter need two way data binding input output easily adding emit changes power property inside child something like lines inside child component parent component listen changes power property", "d": "2/2016"}, {"body": "like already explained github issues bug reports feature requests support questions please use channels like stackoverflow gitter google groups understand might looked like bug great reported please consider ask reporting bug", "d": "2/2016"}, {"body": "sorry really first asked one channels said however guys said confuses bit posted question stackoverflow note thought nt need output eventemitter since changing model passed parent works pass object string", "d": "2/2016"}, {"body": "way described works object values since reference passed work primitive types ie string booleans int etc hence need ouput event", "d": "2/2016"}, {"body": "ah thank much really got confused forget immutability got", "d": "2/2016"}, {"body": "related think lol", "d": "2/2016"}, {"body": "nt pass params async route minimum need", "d": "2/2016"}, {"body": "doc said compiler threw error mistaken params defined mon feb pm brandon notifications githubcom wrote nt pass params async router minimum need component path loader reply email directly view github", "d": "2/2016"}, {"body": "marked share route", "d": "2/2016"}, {"body": "well playing around threw away code cause got stuck anyway something else asyncroute need systemjs load files async webpack bundling everything together one file could figure try sandbox let know reproduce issue mon feb pm brandon notifications githubcom wrote marked share route reply email directly view github", "d": "2/2016"}, {"body": "see asyncroute webpack looks something like", "d": "2/2016"}, {"body": "wow idea something like quite far give second try double check asyncroute definition let close issue reopen reproduce mon feb pm brandon notifications githubcom wrote see asyncrouter webpack looks something like new asyncroute path name home loader gt new promise resolve gt require ensure routeshome require gt resolve require routeshome home reply email directly view github", "d": "2/2016"}, {"body": "retried async route compile name path loader nt know close issue try webpack snippet gave thanks", "d": "2/2016"}, {"body": "brandonroberts oh man works thanks lot nothing could find web idea use requireensure create split point know make promisy return component promise", "d": "2/2016"}, {"body": "also played around quite bit assume callbacks getting fired also checks made plnkr components app contactlist contactentry like directives contactentry changedetection changedetectionstrategyonpush export class contactlist checkcount ngdocheck consolelog basically typical list entries thing typing form ngmodel model app changes activating onpush list docheck callbacks list called entries leads following logs typing form app interesting happens remove onpush list also checkcallbacks contactentry instances called neither binding list binding entries changed switching strategy list influences checks entries imho shows problem triggering callback error reasoning also keystroke triggers ngdocheckcallback component twice guess another problem", "d": "2/2016"}, {"body": "think issues opened problem called parent changedetector controlling onpush strategy detachment cd reference instead see behavior one expecting although code obviously correct guess changedetectorref get component content component also applies issue onpush strategy controls component content component container tag changedetector one triggering method whether alright tell sense", "d": "2/2016"}, {"body": "think issues opened problem ngafterviewchecked called parent changedetector controlling onpush strategy detachment cd reference assume called view component checked changedetector afaik also applies issue onpush strategy controls component content component container tag mean actually content whether alright tell well opened issue", "d": "2/2016"}, {"body": "trying give point view issue course trying answer thought actually getting notified viewcheck check done terms parent cd hey component cd something change component cd nope every immutable input equal prior check feature considering trivial check viewcheck thought actually called container cd view cd yes sorry totally meant say view see useful right case want detach change detector notified viewcheck delay cd check try reduce amount refreshes scenarios case changedetectorref get injected one invoking kind behavior would impossible least think implemented may better way using either way shut let people actually know work talk sorry disturb", "d": "2/2016"}, {"body": "alfonsopresa disturbing happy hear thoughts honest fact feeling misunderstand sense check subtree including expression view", "d": "2/2016"}, {"body": "pascalprecht make call actual call subtree makes muuuuch sense", "d": "2/2016"}, {"body": "think get wording would called parent come called root component seems confusing think official statement skips subtree would help lot", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "vsavkin confirmed bug nt called component either detached set", "d": "2/2016"}, {"body": "ok thanks guess using", "d": "2/2016"}, {"body": "think non called component set input property changed nt update neither view content", "d": "2/2016"}, {"body": "example trying achieve using along detached mode try solve somehow else possible file another issue requirement clear enough behave thanks", "d": "2/2016"}, {"body": "use target may need add following line bootstrap file stated changelog", "d": "2/2016"}, {"body": "wrong dont want solutionbesides typedefs need nowhere ot found unless developer goes way impact project make room whole typedef fiasco solution painfully forced follows add following lines tsconfigjson typings install save ambient oh forgot gulp script needs respecify twice individual file references typedef files forces whole source tree ts someone going mandate typedefs localized package pkg install time npm packages actually trashcan whole typings tsd wasnt enough say blockage libraries choose conform conform exile confirm instead creating unending pile heap endless useless diagnostics work remains accountability crooked code impactmandates forced upon receiver framework application developers know every release something new broken needs performed one knows order get build succeed therefore unending hours days spent trying troubleshoot outrageous effort remains control tell go onsite honor client angular typescript last frikkin thing want track every code module new buildcompile file anyone ever thought gee well consultant needs operate filesmodules would anyone want reiterate relist module another ocnfig file order get work see filesglopb files echanisma remain unfinished undecided half way half done hanging going nowhere two years whats going rewrites new additions efrastruture build compile languages libraries get behave like java going backl java enough impact already performed stuck long short term good someone going fix stuff good stop impacting public large life forsee designing building anything breaks wipes anyone else using get anything also see people publishing small snippets learning matewrial useless get names published wish ego would end somethign get produced thats commercial grade open source excuse mess", "d": "2/2016"}, {"body": "angular currently beta says next release breaking changes angular production ready", "d": "2/2016"}, {"body": "beta", "d": "2/2016"}, {"body": "breaking changes period needs broken effort carrying remodeled refuse accept beta open source explain rationalize effort seen endless issues page page long nature everyone pissed ongoing two years still gotten right needs change", "d": "2/2016"}, {"body": "gutter standards damn shame good developers high standards quality smothered junior egotistical control process big mouths even write compiler library sad globalist bs americans writes best software insulted bs", "d": "2/2016"}, {"body": "really get point beta say everything implemted use angular breaking changes production ready product angular beta breaking changes happen", "d": "2/2016"}, {"body": "someone needs stop spillover typedefs build infrastructure developers projects mandate needs instituted new package localize typedefs within package installation tired spending development time troubleshooting garbage speak may developers want focus pure businesses logic instead parade idiots even write damn line code hell driving ship angular take measures perform recommend", "d": "2/2016"}, {"body": "typings tough nut crack angular team trying settle solution best everyone developing angular public view get feedback quickly make best library possible software project perfect first release sometimes breaking changes happen free software angular team required let use required update angular version affected breaking changes vitriol insults needed", "d": "2/2016"}, {"body": "nhhockeyplayer curiosity related guy issue", "d": "2/2016"}, {"body": "curiosity choose angular instead angular framework community open source means anyone contribute feel wrong feel free involve community contribute", "d": "2/2016"}, {"body": "typings tough tell depend turn declaration switch compiler allow typedefs installed npm install time whatever takes get dts files deployed npm package domain wants drowning language issues type issues dont call fun typings java already day one packages types stuff shouldnt churning rewrites year year google responsible angular node remain unimpressed still isnt commercial grade look scope controller hell field put thru defunct close good enough standards anyone offended continue playing minor league folks need deal stuff field attempt obtain velocity far safe", "d": "2/2016"}, {"body": "offensive modify config files gulp scripts specify proper new files typedefs point even sure anyone realizes issue extent fact impacts configurations script build files raise eye brows", "d": "2/2016"}, {"body": "wrestle typescript compilation tsconfigjson gulpfilejs get duplicate id browser vs main branches flip coin pick one compile even documented google going step eliminate rifraf", "d": "2/2016"}, {"body": "chose closest thing normal get normal well jury still scurrying language pundits trying make javascript java thru typescript say time time boys step step aside let men take dont happen men need step whats right seen casualties field isnt pretty", "d": "2/2016"}, {"body": "wow trying maybe good idea use browser main folder hope find solution yes could replace four lines tsconfigjson add oh appcomponentts also load twice maybe first think give others blame stupidity", "d": "2/2016"}, {"body": "oh aggressivity want get started nt want worry much setup take look project generator updated beta typings exclude point explaining docs typings also discussion ongoing around fact excludes currently required imho fact angular nt include external typings anymore good thing encountered issue angular embed conflicted things wanted use concede whole typescript typings user experience pretty ugly moment", "d": "2/2016"}, {"body": "wow nhhockeyplayer much anger hockey makes angry well tv instead soccer nt give daaaaark side speaks empty bottle cheap darth vader voice effect beta means work progress means finished yet hard finish improve things allowed make changes anything lot tools libs angular built also state flux right adds challenges need adjustments along way excited eager see finished right way wrong way report issues ask help nt forget human beings end internet feelings good intentions well technical issues deal us rabble well sometimes things nt always work perfectly first time need fixed cutting slack going useful beating people software one died wait nasa nt using mars mission control nah would nt", "d": "2/2016"}, {"body": "adequate say wish ego would end somethign get produced thats commercial grade open source excuse mess understand anger acceptable anywayi believe angular team great job even current router useless project per let support instead yelling waste time need fix emotional stability go sport running best ask nice team project configuration use mostly date", "d": "2/2016"}, {"body": "nhhockeyplayer completely empathetic things could lot easier endure authoritative docs showed comprehensive way configure projects todo apps terrible ways show framework overly simplistic todo documentation probably worse code terse documentation frameworks build tooling mess require huge learning curve examples sparse places like stack overflow dole solutions akin going witch doctor try oh nt work trying angular team help us make framework success really like typescript really like taking framework major improvement serverside guy stayed clear clientside mess maintainability jquery javascript real business applications nightmare started turn believer angular team help us configure apps trivial quite complex noobs included might concerned angular downstream processes building modules duplicate identifiiers running afoul affecting customer user experience ca nt compile dang project use anyone angular team please give us configuration guide us works make entire experience work", "d": "2/2016"}, {"body": "nhhockeyplayer first warning read code conduct behavior issue completely unacceptable comments like simply remove ability open issues closing issue completely unproductive like open new one discuss issues rationally politely please", "d": "2/2016"}, {"body": "issue plunker example", "d": "2/2016"}, {"body": "fyi igorminar build disabled travis due issue nt time work right", "d": "2/2016"}, {"body": "actually seems problem also blocks angular moving current release typescript need broccolli maintainer", "d": "2/2016"}, {"body": "repo looking recommend though ask gitter channel opening issue", "d": "2/2016"}, {"body": "blocking batarangle", "d": "2/2016"}, {"body": "var ngrootel windowgetallangularrootelements var rootngprobe windowngprobe ngrootel var appref rootngprobeinject windowngprobecoretokensapplicationref appreftick var ngzone rootngprobeinject windowngprobecoretokensngzone ngzoneoneventdonesubscribe function consolelog angular work", "d": "2/2016"}, {"body": "observed problem working dynamiccomponentloader circumstances construct components execute life cycle created amp shown life cycle methods ngoninit ngaftercontentinit triggered find time try drill bit short created dynamiccontainercomponent input items input loadstrategy rendering controls dynamically passed configuration using dynamiccomponentloader", "d": "2/2016"}, {"body": "deploy issues nt want extra complexity plunker open chrome works open safari pc nothing", "d": "2/2016"}, {"body": "issues minified builds since see", "d": "2/2016"}, {"body": "brandonroberts thanks sorry nt seen one close duplicate ngdocheck function using minified bundles", "d": "2/2016"}, {"body": "mcgear missing things routing need indexhtml import add bootstrap array import add component array", "d": "2/2016"}, {"body": "thank new would easy end figured issue pipes using file switching devjs file pipe issue resolved something min file breaking way using", "d": "2/2016"}, {"body": "yep issues minified builds since see", "d": "2/2016"}, {"body": "components subclasses directives applies directives also applies components necessarily vice versa", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "depends configure typescript guess use exclude tsconfigjson exclude typingsmaindts amp typingsmain nt need reference use files tsconfigjson either need add reference add typingsbrowserdts list files etc example project generator use exclude", "d": "2/2016"}, {"body": "app uses tsconfig shown works fine without adding reference compileroptions experimentaldecorators true module commonjs target", "d": "2/2016"}, {"body": "yfain works nt specify option look many angular starters always exclude getting compiled must add reference since excluded reference", "d": "2/2016"}, {"body": "crash triggers statement dynamically created createandsetcomponentview thrown larger expression createviewfactory gets called createviewfactorycodegen appears upon execution little knowledge debug since dynamic code generation complicates things tried adding null check generated statement without viewfactory parts wo nt render seems needed anyway makes sense createviewfactorycodegen seeing pass check defining function see another pass test component containing contains call would crash apparently ends even though sure trace", "d": "2/2016"}, {"body": "get similar error beta trying nest two components inside trying build tree component nests tree items use tree component see plunker js import component input forwardref import ngfor ngif component selector tree directives ngfor forwardref gt treeitem template class tree input data component selector treeitem directives ngif tree template class treeitem input item", "d": "2/2016"}, {"body": "problem solution time", "d": "2/2016"}, {"body": "tried debug injecting statements nt declared figured wanted know examined context directly accessing viewfactories name help found pass given component viewfactories declared component question well parent components able log following call function null null null null null call function function null null null null call null function function function null null call null function function function null null call null null null function function null call null null null null function function call null null null null null function think problem clear view factories get initialized needed stay scope deemed still needed get ditched however judgement turns incorrect stumbles back upon previous component another route mutual recursion upon second pass component question corresponding view factory already gone scope potential fix would propose potentially keeping view factories around later could sure outlived use familiar works though particularly wrt howwhen view factories go scope think need expert feedback seems tbosch singlehandedly authored view compiler probably better equipped answer", "d": "2/2016"}, {"body": "checking tried see inout scope view factories related different caches part nt case slowly realizing hacky workarounds involving view compiler defined let reinsert definition nt really work since due recursion things end stackoverflow infinite loop nt know enough see real resolution finally find workaround however obvious retrospect disabling jit compilation compile views runtime fashion rather codegen way achieved following imports application tests open suggestions inject provider single test instead nt solve issue jit enabled would least make real fix less urgent", "d": "2/2016"}, {"body": "nt fully dig problem looks like copypaste bug probably", "d": "2/2016"}, {"body": "thanks hint indeed copypaste problem fixed initial post problem form consisting inputs twowaybound ngmodel connection inner controls formvalid property wrong value", "d": "2/2016"}, {"body": "plunker", "d": "2/2016"}, {"body": "miss ngcontrol second input specified one ngcontrol firstnameinput filled form valid course", "d": "2/2016"}, {"body": "elnygren angular repo angular issues reported", "d": "2/2016"}, {"body": "oh bad close immediately guys might want info repository description", "d": "2/2016"}, {"body": "need thiselementnativeelement", "d": "2/2016"}, {"body": "ulfryk change listed changelog notes breaking changes section issue closed", "d": "2/2016"}, {"body": "great thx somehow missed change also find somehow odd docs discourage use", "d": "2/2016"}, {"body": "also find somehow odd docs discourage use nativeelement yes agree think waring docs updated nt removed though believe use caution anyway believe tbosch clarify", "d": "2/2016"}, {"body": "discourage direct usage nativeelement wrong fine would like clarification matter well", "d": "2/2016"}, {"body": "ericmartinezr one reason use web workers first statement fail second one still work", "d": "2/2016"}, {"body": "qdouble absolutely right always forgot one thanks pointing", "d": "2/2016"}, {"body": "cleared similar batch errors", "d": "2/2016"}, {"body": "thx seems need create typings peer dependencies check btw could things apply via typings", "d": "2/2016"}, {"body": "case adding added lot duplicates cherry picked ones needed good case", "d": "2/2016"}, {"body": "check", "d": "2/2016"}, {"body": "related", "d": "2/2016"}, {"body": "put commands json component see data coming parent repeater nt work", "d": "2/2016"}, {"body": "please replicate plunker", "d": "2/2016"}, {"body": "replicated", "d": "2/2016"}, {"body": "rob lets answer extra brackets input brackets expression", "d": "2/2016"}, {"body": "thank new angular apologies silly question", "d": "2/2016"}, {"body": "idea brackets tell angular thing right side equals sign something class rather regular string also wrong typically javascript things declared camelcase commands somecommands things start capitals generally classes might also find useful", "d": "2/2016"}, {"body": "got coming c world public properties capitals thanks", "d": "2/2016"}, {"body": "sorry windows compatibility issue fixed released dupe", "d": "2/2016"}, {"body": "bootstrapping using upgrade adapter bootstrap method", "d": "2/2016"}, {"body": "yes js var adapter new ngupgradeupgradeadapter windowadapter adapter var appplan angularmodule plan adapterbootstrap documentbody plan", "d": "2/2016"}, {"body": "think downgrading component already bootstrapped working example", "d": "2/2016"}, {"body": "right thankyou much know make work inputs search two hours without solution works also clear idea import service amazing thanks lot", "d": "2/2016"}, {"body": "brandonroberts anyway around lazy loading proj w ocombe oclazyload components blowing see issue", "d": "2/2016"}, {"body": "amcdnl know understand upgradesdowngrades done bootstrapping ran issue oclazyload uirouter app broken separate modules lazy loaded uirouter could nt use ngupgrade issue think since lazy loading nt builtin considered edge case opinion maybe someone team clarify cc mhevery", "d": "2/2016"}, {"body": "brandonroberts yes using uirouter oclazy small case setup authored year ago angularsystemjsseed work around yes say def edge case probably anything like", "d": "2/2016"}, {"body": "amcdnl nt clear way around solution got work basically lose lazy loading bring entire app back one monolithic bundle nt viable option one thought would upgrade necessary components upfront use downgraded component bootstrap component everything else inside components could use lazy loading feature angular router load modules loading routes thought though sample plunker", "d": "2/2016"}, {"body": "brandonroberts ya uirouter gon na easy yankactually prob one last things honestly though talking ocombe think things getting loaded order gon na hack let u know come w", "d": "2/2016"}, {"body": "cool", "d": "2/2016"}, {"body": "getting error attribute directive js directive selector contextmenu export class contextmenudirective html error", "d": "2/2016"}, {"body": "could explain mean exactly promises work fine native browser node specific thing also", "d": "2/2016"}, {"body": "robwormald actually think like something like done call another function first function finished", "d": "2/2016"}, {"body": "promises", "d": "2/2016"}, {"body": "suggest read promises", "d": "2/2016"}, {"body": "please specific current behavior expected behavior exactly changed workaround", "d": "2/2016"}, {"body": "pr tried recently nt seem implemented dart even though called effect check later file issue", "d": "2/2016"}, {"body": "fixed", "d": "2/2016"}, {"body": "fixed released", "d": "2/2016"}, {"body": "going try update report issues find", "d": "2/2016"}, {"body": "fixed dependency rxjs changed back issue", "d": "2/2016"}, {"body": "fixed released", "d": "2/2016"}, {"body": "forwards darts sure right way go though code found looks like example", "d": "2/2016"}, {"body": "yes ended since angular implementing eventemitter facade provide interface ts dart", "d": "2/2016"}, {"body": "dart used everywhere subscribe nt think addingintroducing adds value", "d": "2/2016"}, {"body": "implementation facade faulty dart different api api different languages methods missing leads errors class implemented would expect interface consistent dart ts either add dart remove typescript since method expected", "d": "2/2016"}, {"body": "real public api eventemitter expectation framework subscription internally eg really though eventemitter reimplemented idiomatic js eventemitter unrelated streams observables causing lot confusion used whatever equivalent dart things framework currently expose eventemitter formcontrols etc really expose observables readonly reckon facade dart", "d": "2/2016"}, {"body": "clarify eventemitter anyway treated writeonly current implementation observables readonly want observabley behavior downstream ability push values use think message bus eventemitter currently extends see", "d": "2/2016"}, {"body": "cadilhac angular repo angular issues reported anyway believe looking", "d": "2/2016"}, {"body": "oh sorry report faq already tried strictmode false nt anything", "d": "2/2016"}, {"body": "updated breaking change description want give users api typings requires polyfill target runtime makes app bigger angular requires polyfill promise collections types expose want able typecheck apis polyfilling install typing ignore typings angular distro would cc wardbell", "d": "2/2016"}, {"body": "problem installed globally typings folder guess fixed right sent iphone feb alex eagle notifications githubcom wrote updated breaking change description want give users api typings requires polyfill target runtime makes app bigger angular requires polyfill promise collections types expose want able typecheck apis polyfilling install typing ignore typings angular distro would cc wardbell reply email directly view github", "d": "2/2016"}, {"body": "nt think true testing based understanding postinstall typings command run postinstall creates typings directory package owns postinstall meaning", "d": "2/2016"}, {"body": "sure happened install two packages along update completely removed issue longer", "d": "2/2016"}, {"body": "alexeagle really guess check believed run context current working directory would mean users folder anyway still curious", "d": "2/2016"}, {"body": "runs package directory actually prevented using somethingorother fri feb pm blake embrey notifications githubcom wrote alexeagle really guess check believed postinstall run context current working directory would mean users folder anyway still curious reply email directly view github", "d": "2/2016"}, {"body": "assume think moduleresolution classic causing problem nt see imports would resolve nodemodules suggest changing moduleresolution node", "d": "2/2016"}, {"body": "thanx help compiled successfully project downgrading angular version typescript version seems would nice angular platform like spring platform java contains versions libraries work together", "d": "2/2016"}, {"body": "yeah think igor wants send pr get right versions together sat feb pm kisdaniel notifications githubcom wrote thanx help compiled successfully project downgrading angular version typescript version seems would nice angular platform like spring platform java contains versions libraries work together reply email directly view github", "d": "2/2016"}, {"body": "would need github issues bug reports feature requests support questions please use channels like stackoverflow gitter google groups", "d": "2/2016"}, {"body": "rizwanhussainvteams reset app save componentref instance resolved promise bootstrap returns call method instance appref destroy component bootstrap anyway zoechi right better ask question", "d": "2/2016"}, {"body": "pipes broken general ie number currency date work chrome firefox try plunker safari wo nt even run", "d": "2/2016"}, {"body": "produces notice extra comma also nt ask pm", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "warning comes since", "d": "2/2016"}, {"body": "app wont load since switched error getting", "d": "2/2016"}, {"body": "error simply logged warning nt breaking effects", "d": "2/2016"}, {"body": "robwormald although warning messages harmless please get rid warnings", "d": "2/2016"}, {"body": "also request ultracurrent framework beta dependencies beta etc move away older deprecated apis warnings feasible prepping series angular classes nt look forward explaining console message every time", "d": "2/2016"}, {"body": "deprecation happens beta make breaking changes wherever possible mon feb pm kyle cordes notifications githubcom wrote also request ultracurrent framework beta dependencies beta etc move away older deprecated apis warnings feasible prepping series angular classes nt look forward explaining console message every time reply email directly view github", "d": "2/2016"}, {"body": "must misunderstood thought read thread mean reason since beta angular began using older apis thus generating item message thinking must case staring closely maybe instead means angular depends newer version zonejs newer zonejs deprecated older api angular needs updated use newest zonejs api immediately clear using polyfills file thus seeing message comes somewhere polyfills upon moment thought names though clearly imply zonejs sorry slow cognition part", "d": "2/2016"}, {"body": "please fix", "d": "2/2016"}, {"body": "would indeed good see fixed", "d": "2/2016"}, {"body": "belongs code resides bundles zones plus polyffils actual warning part zonejs code please direct issues prs appropriate repo", "d": "2/2016"}, {"body": "dup issues minification error way minifications issues since still alive see", "d": "2/2016"}, {"body": "feel free refer repo happened", "d": "2/2016"}, {"body": "npm install reproduces", "d": "2/2016"}, {"body": "npm update fails show stopper project would nice get movin", "d": "2/2016"}, {"body": "npm install save failed also", "d": "2/2016"}, {"body": "npm update save fails node version npm version", "d": "2/2016"}, {"body": "anchored c npm install save lps c unmet peer dependency reflectmetadata unmet peer dependency rxjs unmet peer dependency zonejs npm warn optional skipping failed optional dependency chokidarfsevents npm warn notsup compatible operating system architecture fsevents npm warn requires peer reflectmetadata none installed npm warn requires peer rxjs none installed npm warn requires peer zonejs none installed c npm save reflectmetadata npm warn optional skipping failed optional dependency chokidarfsevents npm warn notsup compatible operating system architecture fsevents npm warn requires peer reflectmetadata none installed npm warn requires peer rxjs none installed npm warn requires peer zonejs none installed c npm save rxjs npm warn optional skipping failed optional dependency chokidarfsevents npm warn notsup compatible operating system architecture fsevents npm warn requires peer reflectmetadata none installed npm warn requires peer rxjs none installed npm warn requires peer zonejs none installed c npm save zonejs npm warn optional skipping failed optional dependency chokidarfsevents npm warn notsup compatible operating system architecture fsevents npm warn requires peer reflectmetadata none installed npm warn requires peer rxjs none installed", "d": "2/2016"}, {"body": "message cancled npm process message displayed atleast get folder npmmodules compiler throws error messages find name promise kinda expected reproduce message even reinstall angular message nt show anymore errors stay edit beta seems broken fixes way", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "purpose releasing broken build create empty folder npm install error", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "dupe way shortly manual testing", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "operable last betas operable someone going start releasing something tangible step permit someone else drive better yet shut properly qa usable like normal software development ok meant say dont release anything works help", "d": "2/2016"}, {"body": "case nyone else interested rolled back get typings typescriupt compile", "d": "2/2016"}, {"body": "reviewed comments closing issue irresponsible mile long issues threads pathetic shut whole process shut", "d": "2/2016"}, {"body": "confirm installs fine windows machine nhhockeyplayer issue thread good deal shorter comments beta software provided free keep mind beta phase generally begins software feature complete likely contain number known unknown bugs software beta phase generally many bugs completed software well speedperformance issues may still cause crashes data loss wikipedia", "d": "2/2016"}, {"body": "also getting error loading application browser", "d": "2/2016"}, {"body": "line wrong path beta rxjs changed directory manually change work angular build need updated though bug", "d": "2/2016"}, {"body": "rodbzro mentioned using webpack sounds like issue thanks qdouble fixes things", "d": "2/2016"}, {"body": "quick fix see igorminar struggling get fix travis igorminar release following immediately change", "d": "2/2016"}, {"body": "proposed cut release first thing tomorrow morning land", "d": "2/2016"}, {"body": "awesome igorminar thanks responding truly reactive", "d": "2/2016"}, {"body": "fix qdouble nt enough ended replacing string files working", "d": "2/2016"}, {"body": "getting get found", "d": "2/2016"}, {"body": "fix testing cut shortly", "d": "2/2016"}, {"body": "danieleds temporary solution osx", "d": "2/2016"}, {"body": "released still uses rxjs keep issue open track upgrade rxjs", "d": "2/2016"}, {"body": "working rxjs", "d": "2/2016"}, {"body": "digitaldonkey still needs rxjs understand see alexeagle comment", "d": "2/2016"}, {"body": "right note warnings npm install version incompatible peer dependencies fri feb olga grabek notifications githubcom wrote digitaldonkey still needs rxjs understand see alexeagle comment reply email directly view github", "d": "2/2016"}, {"body": "im running systemjs added rxjs dependencies get errors console anynone know related issue", "d": "2/2016"}, {"body": "nxplus rxjs required dependency", "d": "2/2016"}, {"body": "cebor figured must case however rxjs dependencies needed libs seems looked root sure solve", "d": "2/2016"}, {"body": "looks like wrong version rxjs frompromise moved tue feb nxplus notifications githubcom wrote cebor figured must case however rxjs dependencies needed libs seems looked root sure solve get found anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function error xhr error found loading get found anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function get found anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function anonymous function get found reply email directly view github", "d": "2/2016"}, {"body": "really need move rxjs use websocket workaround", "d": "2/2016"}, {"body": "jeffbcross eta rxjs", "d": "2/2016"}, {"body": "issue beta well", "d": "2/2016"}, {"body": "emirhosseini checked packagesjson make sure definitely upgraded fixed", "d": "2/2016"}, {"body": "thank reply captaincodeman using project downloaded yeoman nt running initially started changing things one issue another come aspnet mvc background trying wrap head around new world web development new least kind rough dependencies packagejson file devdependencies del express gulp gulpautoprefixer gulpconcat gulpcssnano gulphtmlreplace gulphtmlmin gulpuglify livereload reflectmetadata rxjs systemjs tsloader typescript webpack webpackstream zonejs", "d": "2/2016"}, {"body": "errors right list dependencies previous comment throw er unhandled stream error pipe error c error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name mapc error find name mapc error find name mapc error find name mapc error find name mapc error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name mapconstructorc error find name setconstructorc error find name mapc error find name mapc error find name mapc error find name mapc error find name mapc error find name mapc error find name mapc error find name mapc error find name setc error find name setc error find name setc error find name promisec error find name promisec error find name promisec error find name iteratorc error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name iteratorc error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name promisec error find name mapc error find name mapc error find name mapc error find name mapc error find name mapc error find name mapc error find name mapc error find name setc error find name mapc error find name promise", "d": "2/2016"}, {"body": "ex aspnet mvc aspnet webforms oh shame heck even asp classic cobol go back far enough shhh nt tell anyone lot take lots things figure typescript angular right worth end dependencies different versions think relevant ones also typings installed typingsjson file tsconfigjson file hope helps", "d": "2/2016"}, {"body": "captaincodeman getting issue restored based versions", "d": "2/2016"}, {"body": "captaincodeman thank packagejson dependencies list help beta", "d": "2/2016"}, {"body": "windowsnt node npm typings update installation ok running commands directly also works typings install ambient name github dependencies typings install ambient name github dependencies", "d": "2/2016"}, {"body": "error manually running run still fail rollback error node npm typings", "d": "2/2016"}, {"body": "expert typings seems like installing things saving typingsjson file wrong nt able blow away typings folder add everything back", "d": "2/2016"}, {"body": "windows get github", "d": "2/2016"}, {"body": "mac nt notice mean npm", "d": "2/2016"}, {"body": "get message ubuntu wily node npm typings err message unable read typings jasmine check path correct typings err caused responded expected equal", "d": "2/2016"}, {"body": "op github spurious semicolon url suspect one problem give details failure see", "d": "2/2016"}, {"body": "nt think anything failed install new typings files added webpack build failed ton ts errors ca nt fine require promise etc ended adding things manually based help gitter running sorry probably concrete enough help", "d": "2/2016"}, {"body": "full output", "d": "2/2016"}, {"body": "move typings step build nt happen postinstall", "d": "2/2016"}, {"body": "windows yeah looks like getting op npm install npm warn deprecated objectpick deprecated version please use objectpick instead postinstall c user typings install ambient name github typings install ambient name github dependency name dependency name typings err message unable read typings check path correct typings err caused responded expected equal", "d": "2/2016"}, {"body": "exactly issue op including strange semicolon windows node npm tried gitbash cmd also tested windows machine exact issue", "d": "2/2016"}, {"body": "set flag mentioned rodbzro work inside specified breaking change", "d": "2/2016"}, {"body": "also getting extra semicolon windows npm node", "d": "2/2016"}, {"body": "even though solved another way simple solution problem postinstall script uses semicolon separate commands work windows use amp amp instead work fine platforms", "d": "2/2016"}, {"body": "yes test windows missed sorry fix coming morning", "d": "2/2016"}, {"body": "anyone issues got error using bootstrap import using mac", "d": "2/2016"}, {"body": "new version get published", "d": "2/2016"}, {"body": "release new beta within next hours hopefully work", "d": "2/2016"}, {"body": "testing prerelease careful try npm snapshot thu feb pm olivier combe notifications githubcom wrote release new beta within next hours hopefully work reply email directly view github", "d": "2/2016"}, {"body": "get windows", "d": "2/2016"}, {"body": "zonejs back version try install get tsd recognized internal external command error due angularzonejs", "d": "2/2016"}, {"body": "theodorejb good point nt test zonejs change fix postinstall step think bump btford ocombe dunno looks like git client problems fetching github repo maybe bad version git something", "d": "2/2016"}, {"body": "maybe related code anyway nt worry", "d": "2/2016"}, {"body": "put component maybe", "d": "2/2016"}, {"body": "captaincodeman like hack file loading process project might applied components using approach bit annoying", "d": "2/2016"}, {"body": "wrap template root component witn components added expressions becomes true", "d": "2/2016"}, {"body": "captaincodeman zoechi possible add another lifecycle hook runs everything else takes promise move next hook promise resolved", "d": "2/2016"}, {"body": "nt see benefit additional lifecycle hook problem member team official opinion might different though", "d": "2/2016"}, {"body": "zoechi problem ngif need repeat code html structure components canactivate annotation helpful used component", "d": "2/2016"}, {"body": "need load different file different component need load ok use ngif thu feb pm g\u00fcnter z\u00f6chbauer wrote need repeat code need ngif root component reply email directly view github", "d": "2/2016"}, {"body": "think may reason happening", "d": "2/2016"}, {"body": "dupe", "d": "2/2016"}, {"body": "ran using hostlistener tap custom directive well", "d": "2/2016"}, {"body": "updated plunk use beta issue still", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "typescript addeventlistener element htmlelement eventname string handler function function var zone thismanagergetzone eventname eventnametolowercase defined arguments infinite loop typescript addeventlistener element htmlelement eventname string handler function function var zone thismanagergetzone eventname eventnametolowercase fixed", "d": "2/2016"}, {"body": "ran issue", "d": "2/2016"}, {"body": "wrong repository close issue", "d": "2/2016"}, {"body": "afaik whether router readd component instance drop create new instance route activated", "d": "2/2016"}, {"body": "especially metadata missing", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "andreychernykh think make complex necessary want common code components would simply put base class honestly talking common behavior triggered css class attribute would rather use composition encapsulate reusable behavior move directive options course going close one imo better handled dedicated directive got already issue fully dynamic behavior", "d": "2/2016"}, {"body": "pkozlowskiopensource fully agree dedicated directive approach appears control directives outside compoent asked controlling inside component thought properties got point thank", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "thanks", "d": "2/2016"}, {"body": "wouls error", "d": "2/2016"}, {"body": "example nt code import component component selector myapp template styleurls srccssappcss export class appcomponent public appdata firstname uihui public isred false showred void thisisred thisisred", "d": "2/2016"}, {"body": "still ca nt find error message", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "related think", "d": "2/2016"}, {"body": "dupe", "d": "2/2016"}, {"body": "andrashatvani provide code using providing following code works", "d": "2/2016"}, {"body": "would useful", "d": "2/2016"}, {"body": "routeconfig path playlists playlistid name playlist component playlist class root routeconfig path tracks trackid name track component track class playlist", "d": "2/2016"}, {"body": "supported view currently use forwardref injection parent component obtain necessary parameters kind ugly", "d": "2/2016"}, {"body": "exported names changed check changelog breaking changes section also changes angular bundles separated dependencies check updated plunk details dynamiccomponentloader works issue closed", "d": "2/2016"}, {"body": "thanks answering romangotsiy", "d": "2/2016"}, {"body": "think try whithout parameter navigate name route path example official developer guides", "d": "2/2016"}, {"body": "brilliant thank", "d": "2/2016"}, {"body": "sounds fine fyi process moving dart transformer tests use exclusively", "d": "2/2016"}, {"body": "kegluneq excellent nt think remove guinness tests use agree dartonly tests use package test direct", "d": "2/2016"}, {"body": "might fix issue", "d": "2/2016"}, {"body": "zoechi thank suggestion effect even sure code referenced testbed app", "d": "2/2016"}, {"body": "related stackoverflow discussion", "d": "2/2016"}, {"body": "problem", "d": "2/2016"}, {"body": "nt issue ts compilerlinter nt warn nt call super constructor nt pass required arguments use dart nt issue would always get warnings errors opinion constructors cumbersome object creation cumbersome property injection would move problem somewhere else angular provide another definition timings initialized order seems redundant would make complex language requirements already constructor final fields additional framework requirements would nt see improvement", "d": "2/2016"}, {"body": "zoechi mention agree really think issue typescript compile edit maybe seems unfortunate hard impossible see auto generated constructor read parent data agree property injection flaws increasing complexity two modes di negative still easy way declare di dependencies nt spill child components leaves unsatisfied guess best cases would able something like maybe api already exists", "d": "2/2016"}, {"body": "set class routerlink active using could solve requirement using css see also", "d": "2/2016"}, {"body": "maybe nt clear enough problem active css class current route rather generate instruction dontt data", "d": "2/2016"}, {"body": "sorry nt pay enough attention still attempt would possible like use css would allow configure behavior outside would convenient though routerlink would set class hope helps anyway sorry noise", "d": "2/2016"}, {"body": "zoechi sure appreciate taking time", "d": "2/2016"}, {"body": "clear problem today getting exception", "d": "2/2016"}, {"body": "nt tried guess make class attribute selectors addremove classesattributes get directives applied need add possible list directives list annotation though", "d": "2/2016"}, {"body": "zoechi interesting gave try without success", "d": "2/2016"}, {"body": "also since directive name nt known template write time want parameter words want write wish directive working like html would essence equivalent html regarding directive reference guess potential problem long client directive declare seems fine still seems missing piece glue together something like", "d": "2/2016"}, {"body": "tried well without success seems support static classas attributes", "d": "2/2016"}, {"body": "component loaded dynamiccomponentloader ca nt either hello world using something like works", "d": "2/2016"}, {"body": "need add httpproviders bootstrap array nt already", "d": "2/2016"}, {"body": "well trying avoid something like work injectable providers httpproviders givers supplied parameters match signature call target compile error providers exception console", "d": "2/2016"}, {"body": "nt want need add component providers js component providers someservice httpproviders", "d": "2/2016"}, {"body": "ok thanks", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "reference duplicate", "d": "2/2016"}, {"body": "think issue angular expect internet visitor fix issue issue must fixed angular use internet explorer safari visit angular page content loaded", "d": "2/2016"}, {"body": "try temporary fix suggested", "d": "2/2016"}, {"body": "add following script according deadzedd internet explorer works content loaded however safari still working objecthasownproperty name objectdefineproperty functionprototype name get function var matches thistostring match sfunctions var name matches amp amp matcheslength gt matches objectdefineproperty name value name return name", "d": "2/2016"}, {"body": "replace expect follow route might better add classes items easier selection instead using complex selectors someone insight provides details", "d": "2/2016"}, {"body": "might better add classes items easier selection instead using complex selectors want encapsulate styling amp buttons get shown abstracted away consumers nt like idea remember add also means consumer wants swap order buttons might addremove classes needless verbosity leaky abstraction hence case disagree classes better get job done though either way check link thanks", "d": "2/2016"}, {"body": "aware issue might able manipulate classes within component imperatively requires direct dom access afaik also ideal", "d": "2/2016"}, {"body": "playing seems related ruler working properly messing notification position directive made proper way load ruler using web workers working properly universal web workers turned", "d": "2/2016"}, {"body": "repo plnkr looks like angular repo github repos bug reports feature requests support questions please use stackoverflow gitter google groups", "d": "2/2016"}, {"body": "thanks zoechi believe bug post right repo sorry trouble", "d": "2/2016"}, {"body": "validatorsrequired relies value field inputs type file value therefore considered undefined null invalid write validator case", "d": "2/2016"}, {"body": "ok", "d": "2/2016"}, {"body": "instead", "d": "2/2016"}, {"body": "know however providing value constant well example next case constant like follows means constructor constant time means implementation constant contructor know still work around using implemented value using factory however lose ide support good workaround would herosvcimplvalprovider gt provide heroservice usevalue new heroserviceimpl providers const herosvcimplvalprovider", "d": "2/2016"}, {"body": "agree behaviour initailly expected oninit", "d": "2/2016"}, {"body": "robwormald hi want hear impression thanks", "d": "2/2016"}, {"body": "igorminar want hear thinking thanks", "d": "2/2016"}, {"body": "need add script tags see", "d": "2/2016"}, {"body": "thanks brandonroberts helping know references could use know like tutorials", "d": "2/2016"}, {"body": "vsavkin background", "d": "2/2016"}, {"body": "also please document platformpipes anything else missed", "d": "2/2016"}, {"body": "discussion also", "d": "2/2016"}, {"body": "bad closing dup", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "support lifecycle interface implementations superclasses reverted", "d": "2/2016"}, {"body": "clarify dart support inheriting lifecycle hooks superclasses currently implemented dev mode transformed model leads inconsistent behavior dev transformed mode reasons explained transformer design doc want avoid global resolution transformer implement transformed code result revert support dev mode avoid inconsistent behavior introduces devmode check alert users missing clauses working way make inheriting hooks superclasses work agreedupon design right", "d": "2/2016"}, {"body": "ok sounds promising", "d": "2/2016"}, {"body": "dupe", "d": "2/2016"}, {"body": "sounds like issue", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "ok seems resolve issue", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "see also", "d": "2/2016"}, {"body": "think figured reference actual repository directly since derived masterdata main folder file locations however seems reference release happens built upon every commit master see reference specific commit go releases page github full list pick release want example copy url add file like currently releases think release exists every commit master closing", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "possible dupe", "d": "2/2016"}, {"body": "clarify distribution causes jump folder folder format want typescript sources clone repository please reopen give specific request want", "d": "2/2016"}, {"body": "related", "d": "2/2016"}, {"body": "yeah definitely bug already tracked pull request fix waiting merged master work around issue using rather local updated thanks reporting closing issue duplicate favor existing issue", "d": "2/2016"}, {"body": "kara oh well win award quality issue report updated plunker workaround thx", "d": "2/2016"}, {"body": "yes appreciated detailed report", "d": "2/2016"}, {"body": "danielfigueiredo probably updating control value like populates form parent component properly instead trying trying assign new value string", "d": "2/2016"}, {"body": "qdouble thanks make work way close issue suppose", "d": "2/2016"}, {"body": "generally using eventemitter anything component events outputs public api subclass rxjs subject import use want use standalone fashion", "d": "2/2016"}, {"body": "note also change newer version rxjs without generic type iirc", "d": "2/2016"}, {"body": "think needed right", "d": "2/2016"}, {"body": "petebacondarwin tried suggestion fix problem problem seeing link vote become active first time click link vote become active see difference looking routerlinkactive class clicked first time clicked second time", "d": "2/2016"}, {"body": "varghesep reproduce plunker browser issue", "d": "2/2016"}, {"body": "brandonroberts use chrome use compiled version components runtime version aspnet project plunker noticed components loading nt know fix plunker", "d": "2/2016"}, {"body": "varghesep working fork plunker added route loads default app finishes bootstrapping", "d": "2/2016"}, {"body": "thanks looking code locally computer work click vote button twice see votingapplication upload code onedrive want look app aspnet mvc application created visual studio", "d": "2/2016"}, {"body": "nt think need upload works plunker maybe another issue going app links thing one also come gitter chat see community help", "d": "2/2016"}, {"body": "happens routers case vote voting results second click see navlink routerlinkactive available anchor tag think first click component loaded anchor becoming active problem let know suggestion", "d": "2/2016"}, {"body": "seen issue dealt way systemjs scripts ordered usually means missing polyfill scripts post scripts section", "d": "2/2016"}, {"body": "html index file scripts loaded still luck", "d": "2/2016"}, {"body": "see polyfill scripts need particular order need move systempolyfills html", "d": "2/2016"}, {"body": "reference", "d": "2/2016"}, {"body": "works", "d": "2/2016"}, {"body": "hurray brandonroberts star", "d": "2/2016"}, {"body": "close varghesep", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "ran issue think numbervalueaccessor updated created branch angularangular fork fix", "d": "2/2016"}, {"body": "danielfigueiredo send pr fix", "d": "2/2016"}, {"body": "ericmartinezr sure best way", "d": "2/2016"}, {"body": "danielfigueiredo send reviewed team tell ok fix improve good way learn send", "d": "2/2016"}, {"body": "thinl numbervalueaccessor updated job convert text entered input field number text empty appears appropriate return nan tend think required validator check nan value", "d": "2/2016"}, {"body": "fredgate nt want contaminate pr going comment nt handled numbervalueaccessor point validatorsrequired needs value fulfill requirement nan valid value representing notanumber please correct wrong mean wantneed require nan would case like even exist nt know knows p think handled numbervalueaccessor would correct job handled things valid value number nan would really love team involvement issue clarify spec related stuff", "d": "2/2016"}, {"body": "came shut mouth p little fiddle shows input type number required trying assign nan value wo nt work still required still think correct handling numbervalueaccessor", "d": "2/2016"}, {"body": "either way simple fix", "d": "2/2016"}, {"body": "nan valid value question would say represents either arithmetic error parsing error see value entered user input field would need validate numbervalueaccessor controlvalueaccessor role controlvalueaccessor act bridge angular control native element write value input field notify changes numbervalueaccessor convert text entered user number text number special value nan returned also case empty string see numbervalueaccessor could validator ideas", "d": "2/2016"}, {"body": "agree nan valid value reason think numbervalueaccessor updated user nt typed anything wrong thus value incorrect input empty reason thought accessor deal nt look right empty input typenumber hold nan value bridge done properly since input empty nan empty mean nothing error value", "d": "2/2016"}, {"body": "thinking changing validator required method deal nan might remove flexibility deal scenarios example custom validator performs validation parses control value control value number control would nan value required validator call updating validator would result saying field empty deals nan empty value however field invalid value nan value ui checks validation errors would display two messages field required invalid think numbervalueaccessor smart enough understand empty input typenumber return empty string field empty thereafter throw invalid value since value seems bridge broken validator", "d": "2/2016"}, {"body": "nan valid value question agree nan valid value point nan value representing something valid cares validatorsrequired numbervalueaccessor validatorsrequired requires value require valid values invalid values fulfill requirement value well point agree lol wait official opinion p", "d": "2/2016"}, {"body": "officiel opinion could effectively advance discussion however must keep mind numbervalueaccessor accessor converts text entered user numeric value role ends numbervalueaccessor used value control always numeric string even empty think important cons maybe case empty string could return null undefined instead nan would reserved nonempty nonnumeric texts might right solution case numbervalueaccessor would need changed validatorsrequired already handles null values", "d": "2/2016"}, {"body": "fredgate ericmartinezr makes sense specially html input type number allow user type anything different numbers however sends empty string input value cleared", "d": "2/2016"}, {"body": "valueaccessor assures mapping text input field dom value angular control numbervalueaccessor used value angular control dom input always numeric never string", "d": "2/2016"}, {"body": "ask questions angular gitters chatroom rxjs gitter chatroom stackoverflow last resource rxjs github github reporting bugs", "d": "2/2016"}, {"body": "answered anyway", "d": "2/2016"}, {"body": "sorry issue research see results error used test method run project browser npm run server see emitted values console log something angular test code", "d": "2/2016"}, {"body": "see larger context like files failing hard debug single line", "d": "2/2016"}, {"body": "use great repo base project created separate spec file import inject import observable rxjsobservable describe test case using observableof gt full error looks like nt know helps typeerror undefined constructor evaluating documentssomecode specbundlejs line documentssomecode lt webpack enough could put whole project somewhere send link privately", "d": "2/2016"}, {"body": "need import operators make work alternately import observable rxjsrx", "d": "2/2016"}, {"body": "thanks added whole bunch operators started work damn come c includes compiler checked urgh", "d": "2/2016"}, {"body": "note ts released able rework rxjs lib make obvious operators explicitly imported throw errors compile time sun feb pm alex notifications githubcom wrote thanks added whole bunch operators started work damn come c includes compiler checked urgh reply email directly view github", "d": "2/2016"}, {"body": "looking forward era renaissance open vs code start working project code setting build process figuring stuff even bother", "d": "2/2016"}, {"body": "encountered problem trying use function proper way get working add file works done", "d": "2/2016"}, {"body": "moved angulario", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "seeing error message using node workaround taking couple lines latest systemjs line one typeof document undefined var head clearly passes crashes building changed see line ending passes throws another error file exists nt know going building process fails", "d": "2/2016"}, {"body": "made fix victor desk pr coming", "d": "2/2016"}, {"body": "blocking building angular", "d": "2/2016"}, {"body": "nt sound related angular please create plunker demonstrates issue happening desired result", "d": "2/2016"}, {"body": "quote mdn changing value css display property element hidden attribute overrides behavior instance element styled display flex displayed screen regardless hidden attribute present", "d": "2/2016"}, {"body": "bstrauss way hideshow element display style using ngclass case", "d": "2/2016"}, {"body": "could also use ngstyle", "d": "2/2016"}, {"body": "bstrauss thanks", "d": "2/2016"}, {"body": "ok brandonroberts made clear overrideproviders providers array component decorator order different value particular test use another inner description modified beforeeachproviders fn", "d": "2/2016"}, {"body": "hmm trying emit event web worker component ui get message however use subscribe observer docs updated also think example nt work message emitted worker initialized works use settimeout figured need guys update example nt work written", "d": "2/2016"}, {"body": "like said attributes strings feels quite strange cast something else automagically types ts purely compiletime construct would nt work either case need typescript like dsl languages right given using type input pass types appropriately seems like lot overhead limited usecase encourage vs hmm sort use cases thinking could probably done wrapper around input setter cases", "d": "2/2016"}, {"body": "problem comes unexpectedly propagating values strongish type system nt type validated goes typescript one naively would expect code first example assert sending servers making calculations could become problem operator strings concatenation", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "closing dupe", "d": "2/2016"}, {"body": "maybe connected", "d": "2/2016"}, {"body": "thanks pointer blacksonic trying load testing browser js files mentioned shim reasons get understand related config actual issue described maybe able provide insight going relevant bit karmashim file systempaths promiseall systemimport systemimport made sure karma serve karmaconf array files definitely exist location relevant output debug middleware sourcefiles requesting debug middleware sourcefiles fetching warn webserver debug middleware sourcefiles requesting debug middleware sourcefiles fetching warn webserver debug phantomjs windows disconnected run waiting reconnecting error phantomjslauncher fatal windows exception code phantomjs crashed please read bug reporting guide file bug report debug launcher process phantomjs exited code error launcher phantomjs crashed debug tempdir cleaning temp dir c ideas maybe", "d": "2/2016"}, {"body": "adding karmaconfjs fixes problem found", "d": "2/2016"}, {"body": "thanks papajuras think better understand issue tried aligning configuration mgechev still dice including traceurruntime get error logged arguments passed function undefined beside third one next", "d": "2/2016"}, {"body": "change seems work correctly", "d": "2/2016"}, {"body": "changing overrides causing truncating name anymore", "d": "2/2016"}, {"body": "trying limit text box characters could use template using demonstrate problem could put change function defersettimeout actually update model example", "d": "2/2016"}, {"body": "thanks trick definitely workaround problem docs uses example like mine ngmodelchange used uppercase ngmodel demonstrate utility ngmodelchange odd must use workaround", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "fwiw seen problem systemjs", "d": "2/2016"}, {"body": "yet implemented one use option component decorator one wants split template one import template string insert", "d": "2/2016"}, {"body": "thanks done", "d": "2/2016"}, {"body": "want", "d": "2/2016"}, {"body": "use navigate route component route component reused reinstantiated every time nt want component reused use lifecycle hook", "d": "2/2016"}, {"body": "brandonroberts performance impacts nt reuse", "d": "2/2016"}, {"body": "component disposed reloaded every time visit routes depends much work route component", "d": "2/2016"}, {"body": "ok thanks worked took little figuring imports curiosity still see one xhr request component template new xhr request subsequent requests understand correctly set request component made reusing anything templates data seems change new ajax request made templates remain little confused new ajax request", "d": "2/2016"}, {"body": "yes correct see example", "d": "2/2016"}, {"body": "dupe pr also", "d": "2/2016"}, {"body": "thanks brandonroberts good know radar already hopefully fixed soon happy close somebody else close", "d": "2/2016"}, {"body": "go ahead close", "d": "2/2016"}, {"body": "bug issue array report change see vsavkin thoughts fix", "d": "2/2016"}, {"body": "cexbrayat problem local updated view parent collection fine use good workaround would use instead work fix bug later today example plunker", "d": "2/2016"}, {"body": "fixed", "d": "2/2016"}, {"body": "tbosch idea happened", "d": "2/2016"}, {"body": "give relative url file resolve browser url give absolute path file fetch files valid url thanks isstyleurlresolvable function make work", "d": "2/2016"}, {"body": "would nice use absolute paths currently working around nt expect window around server rendering", "d": "2/2016"}, {"body": "pxwise actually nt work regex preventing load protocol present path", "d": "2/2016"}, {"body": "nt also nt think use directly trying plunk better done using host listener targets also deregisters event listener component destroyed", "d": "2/2016"}, {"body": "saw already ago thanks hint", "d": "2/2016"}, {"body": "pascalprecht method works listening window events need set scrolling looking web worker safe solution", "d": "2/2016"}, {"body": "qdouble use renderer listenglobal like rendererlistenglobal window scroll callback", "d": "2/2016"}, {"body": "ericmartinezr seems work listening scroll event performing function could nt adjust scrolling biggest issue right click link bottom page redirect without accessing windowscrollto preferable web worker safe method enter next page bottom unless way get different behavior", "d": "2/2016"}, {"body": "stepped browserdomadapter found try set dom browserdomadaptermakecurrent dom leaving undefined strange thing isblank method setrootdomadapter gets browserdomadapter parameter returned false meaning dom already set outside dom undefined nothing set maybe scope problem initialization", "d": "2/2016"}, {"body": "dup relatet", "d": "2/2016"}, {"body": "cc mhevery", "d": "2/2016"}, {"body": "seems properly mapped dart sth else must going suspect might interference used element kwalrath would mind changing see classes applied", "d": "2/2016"}, {"body": "related", "d": "2/2016"}, {"body": "ok got working following someone make big blog post things", "d": "2/2016"}, {"body": "wrapping code blocks makes much readable", "d": "2/2016"}, {"body": "dupe pr fix see", "d": "2/2016"}, {"body": "really hard help without context code consider creating plnkr core functionalities stuff think bottleneck", "d": "2/2016"}, {"body": "browser devtools also allow investigate ressources used", "d": "2/2016"}, {"body": "sorry nt known describe problem dose nt show error message", "d": "2/2016"}, {"body": "looks zone related interim probably generally using method works properly", "d": "2/2016"}, {"body": "yes solves issue thank think example debugged anyway might reveal hidden bugs", "d": "2/2016"}, {"body": "dup solved installing typings jasmine manually like know case moving forward bug", "d": "2/2016"}, {"body": "right searched better thank", "d": "2/2016"}, {"body": "ericmartinezr installing typings manually resolve issue missing", "d": "2/2016"}, {"body": "nt say anything joy", "d": "2/2016"}, {"body": "ericmartinezr get similar usernames laughing mithundaa time installed via brand new give try let know", "d": "2/2016"}, {"body": "mithundaa pushed modification basically run test files change", "d": "2/2016"}, {"body": "thanks ericmdantas check sorry username confusion", "d": "2/2016"}, {"body": "sweet fixed thanks ericmdantas", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "also seems state tsd deprecated trying install either way looks like trick work around improved", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "fixed release else nightmare continue", "d": "2/2016"}, {"body": "fixed zonejs peerdependency", "d": "2/2016"}, {"body": "would also like know anything equivalent angular app compile used extensively use case allow users author html content include directives defined content saved loaded database directives turn load html text contain directives use different templates based different conditions examples dynamiccomponentloader run across seems make cumbersome hacky something offer functionality compile thanks", "d": "2/2016"}, {"body": "pity nobody answered question examples show build component template situations already dom object would like use angular way instance use bindings defined", "d": "2/2016"}, {"body": "angular still beta hoping nears release addressed another example author aggrid talks compile use case user supplied templates actually wo nt use case prevalent plugin accepts user supplied templates like uibootstrap modal example", "d": "2/2016"}, {"body": "yes aggrid problem pretty similar mine nt write grid wrapper around existing grid really hope plan add something similar compile final release would nice get feedback plans need go looking different solution", "d": "2/2016"}, {"body": "hi fyi soon codegen injectors optimize initial application load time ie generate code calls new directly application code wo nt even use injector replacing angulars injectors infeasible sorry thu feb remo h jansen notifications githubcom wrote hi guys working ioc container would like see well would work angular however fond seems possible replace angular di ioc container found following documentation app developer invokes bootstrap root component myapp argument angular performs following tasks uses component selector property locate dom element needs upgraded angular component creates new child injector platform injector optionally also override injector configuration app invoking bootstrap componentinjectablebindings argument creates new zone connects angular applications change detection domain instance creates emulated shadow dom selected components host element loads template instantiates specified component finally angular performs change detection apply initial data providers application solutions seems create bootstrap function ideal guys provide way replace angular di another ioc container ease something like idependencyresolver resolver asp net thanks reply email directly view github", "d": "2/2016"}, {"body": "guess need inject constructor use way", "d": "2/2016"}, {"body": "zoechi thing inject exposed global scope greentoast talks greentoast interesting give information installed project super important loaded via tags soon possible", "d": "2/2016"}, {"body": "project originally copied form angulario builded webpack imported direct two parts zone bootts import zonejslibbrowserzonemicrotask import zonejslibbrowserlongstacktracezone typescript problem seem sourcefiles works switch include builded zonelib import zonejs loading dts js files", "d": "2/2016"}, {"body": "getting following using webpack trying figure though", "d": "2/2016"}, {"body": "greentoast thanks able get around issue using require pull compiled zonemicrotask", "d": "2/2016"}, {"body": "gonzofish mentioned solution import zonejs works zonejs throws errors install npm referenced contains build folder builded files allows use import syntax", "d": "2/2016"}, {"body": "always included tag via html loaded via module loader might affect monkeypatching", "d": "2/2016"}, {"body": "understood pascalprecht", "d": "2/2016"}, {"body": "github issues bug reports feature requests support questions please use channels like stackoverflow gitter google groups might looking something like nt know animation though", "d": "2/2016"}, {"body": "thank resolve requirement rxjs close", "d": "2/2016"}, {"body": "lgomez yes right spaces commas covered pr viewchild others docs pretty sure sent pr fix issue commas well ca nt find anymore", "d": "2/2016"}, {"body": "lgomez ericmartinezr patch dix local machine waiting merging pr docs may occur conflicting", "d": "2/2016"}, {"body": "correct usage seeing log calling finished function affect calls set variable bind", "d": "2/2016"}, {"body": "closing perhaps caching issue seeing anymore", "d": "2/2016"}, {"body": "problem arises recent version systemjs yesterday using systemjs angular bootstrapping works well bootstrapjs file found using appbundlejs file", "d": "2/2016"}, {"body": "expand pretty much total freedom organize application generally matter appropriately configuring systemjs configjs file note distinct difference typescript compilation step systemjs runtime configuration little see information", "d": "2/2016"}, {"body": "nt two questions describing exact situations", "d": "2/2016"}, {"body": "systemjs configuration scope nothing specific would preclude basically folder structure like closing github issues kept issues framework howto question please take", "d": "2/2016"}, {"body": "johnpapa looks like could typo syntax using using asterisk rather template element need put trackby inside quotes use template element try let know still getting error", "d": "2/2016"}, {"body": "using like seems work well function gets called least think unit test using template syntax instead", "d": "2/2016"}, {"body": "kara thank worked either use use occur use figured structural directive makes sense tied ngfor syntax semicolon never would guessed sen new", "d": "2/2016"}, {"body": "syntax semicolon never would guessed sen new docs think used part though nt think trackby makes sense", "d": "2/2016"}, {"body": "ah yes use index variables threw pipe experience thanks", "d": "2/2016"}, {"body": "yeah could probably add clarity much right", "d": "2/2016"}, {"body": "btw test starts failing cascades make many tests fail", "d": "2/2016"}, {"body": "jbdeboer ca nt repro setup amp zip app attached steps pub get amp amp pub serve open dartium delete maindart reload dartium pubspecyaml webmaindart dart import package import package import svcdart void main bootstrap app component selector app template hello app providers const servicea serviceb class app final servicea final serviceb b app thisa thisb websvcdart dart import package injectable class servicea injectable class serviceb webindexhtml appzip", "d": "2/2016"}, {"body": "cant reproduce", "d": "2/2016"}, {"body": "hitting issue able reproduce minimal code reason ca nt reproduce plunk put azure instead source code put logging ngoninit ngondestroy watch lifecycle events observe problem open site hit hit refresh observe ngoninit called homecomponent refreshed initially navigated page see ordered list rendered far good click route one two observe ngondestroy called homecomponent ngoninit called component looking click home observe component navigated away see ngoninit ngondestroy see ngoninit homecomponent navigated back home longer see ordered list one point thought reproduced edge seeing reproduce time however repro uses beta indexhtml contains workaround rip workaround put back beta still reproduces", "d": "2/2016"}, {"body": "hrmm actually think fixed adding polyfills corey confirm whether added two top scripts fixes behavior", "d": "2/2016"}, {"body": "already still experiencing issue snippet experience component selector searchbar directives formdirectives coredirectives templateurl viewssearchbarhtml export class searchbar private history searchhistoryentry personal interface private categories searchcategory output onhistory new eventemitter fields stuff constructor consolelog reading history thishistory jsonparse localstoragegetitem searchhistory ngoninit constructor nt outputs initialized yet emit life cycle hook instead sure received parent consolelog emitting history thisonhistoryemit thishistory immediately page load see reading history console searchbar component view nt reflecting categories history view much expected categories show statically defined class wo nt see emitting history console interact component way seems like evidence change detection nt triggered constructor see changes ngonchanges fires bet ngoninit go developer guide states ngoninit goes first ngonchanges due categories variable reflecting view nt believe localstorage anything bug fact ngoninit defined think ngonchanges going seeing aftermath", "d": "2/2016"}, {"body": "might also worth noting example nested couple levels deep indexhtml loads appcomponent view selects home controller view maybe nesting part bug", "d": "2/2016"}, {"body": "ok managed however predicted error would trigger error clause nt thank tbragaf", "d": "2/2016"}, {"body": "issue fix nt think http really exception typical use possibly normal code flow something want report user component message redirect notfound view really looking exception handling case logging want exception probably raise one maybe create custom http wrapper implementation raised nt think default behaviour though", "d": "2/2016"}, {"body": "captaincodeman http sent frm api found route path", "d": "2/2016"}, {"body": "update managed find problem simply put console logging errors exceptionhandler js import exceptionhandler class arraylogger res log void thisrespush logerror void thisrespush loggroup void thisrespush loggroupend export class customexceptionhandler extends exceptionhandler constructor super new arraylogger true call error stacktrace null reason null supercall error stacktrace reason supercall logging errors console inside source code original exceptionhandler throws error last line call method expecting caught console call simply go nt show errors working provide info", "d": "2/2016"}, {"body": "done simply kind obvious ild like create arraylogger finally behaviour like subscription show error user another option use try catch log error thank hope helps anyone", "d": "2/2016"}, {"body": "wo nt work dart ca nt pass object like requested", "d": "2/2016"}, {"body": "zoechi logger class still logger property type", "d": "2/2016"}, {"body": "right course sorry noise", "d": "2/2016"}, {"body": "tag", "d": "2/2016"}, {"body": "yes feb g\u00fcnter z\u00f6chbauer notifications githubcom wrote tag reply email directly view github", "d": "2/2016"}, {"body": "please try instead produces different result", "d": "2/2016"}, {"body": "looks like rewrite css match shadow boundaries light dom going projected", "d": "2/2016"}, {"body": "pascalprecht yes add css inside native everything working fine zoechi sorry lot plate recently works surprised different two except working p", "d": "2/2016"}, {"body": "assume difference angular feature browser feature also assume works browser native shadow dom support full webcomponents polyfills loaded works nt looks like angular bug plunker repo case would great", "d": "2/2016"}, {"body": "zoechi please see plunker created see background colour green change like advised starts working fine", "d": "2/2016"}, {"body": "actually looks like broken get styled css selector needs works fine nt neigher content ngcontent", "d": "2/2016"}, {"body": "even different issue problem getting css applied style file applied component logically work solved one working fine change style applied new added", "d": "2/2016"}, {"body": "also think work least supposed work like nt seen detailed docs", "d": "2/2016"}, {"body": "loaded webcomponents polyfill perhaps bug polyfill smoothed", "d": "2/2016"}, {"body": "tried recent chrome assumed polyfills required", "d": "2/2016"}, {"body": "yes perhaps bugs chrome implementation try polyfill see", "d": "2/2016"}, {"body": "nt notice difference adding polyfills script tags", "d": "2/2016"}, {"body": "see also difference", "d": "2/2016"}, {"body": "paolochiodi documentation coming javascript versions file issue", "d": "2/2016"}, {"body": "thanks", "d": "2/2016"}, {"body": "benchmarks demonstrate makes difference", "d": "2/2016"}, {"body": "guess need custom controlvalueaccessor", "d": "2/2016"}, {"body": "alexeagle always specific test webworker tests general", "d": "2/2016"}, {"body": "seen particular failure couple times sorry nt gather better data flaky failures currently comb logs see tue feb pm jason teplitz notifications githubcom wrote alexeagle always specific test webworker tests general reply email directly view github", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "mhevery labeled ddc nt permission tag issues", "d": "2/2016"}, {"body": "related already worked", "d": "2/2016"}, {"body": "new dartium based recent chromium worked announced postponed several times already hope included one next releases recently mentioned github issue finally officially added release", "d": "2/2016"}, {"body": "update need", "d": "2/2016"}, {"body": "chromium pr landed land verify satisfy issue thu feb mi\u0161ko hevery notifications githubcom wrote update need reply email directly view github", "d": "2/2016"}, {"body": "nt landed yet issue still blocking", "d": "2/2016"}, {"body": "dartium based chromium dev channel", "d": "2/2016"}, {"body": "zoechi thanks heads vsmenon chromium sufficient run ddc code", "d": "2/2016"}, {"body": "need least chromium stable anything least recent stable work", "d": "2/2016"}, {"body": "guess worth asking alanknigth planned progress lot work going make easier get dartium updated expect hope dartium based chromium released next step get updated recent chromium shortly afterwards worth depends much work task course much might still better use chromium instead dartium", "d": "2/2016"}, {"body": "perhaps misunderstanding use case headers definition basically shallow simple keyvalue pairs could expand case nt working", "d": "2/2016"}, {"body": "class one property look case shallow copy instead last line could write since underlying data would expect constructor create shallow copy write chrome developer tools uses fetch api headers class result last line underlying map would case shallow copy got result use case deep copy typescript injectable export class myservice private skeletonheaders headers every headers contain headers headerkey pairs constructor thisskeletonheaders new headers thisskeletonheadersappend xmycustomkey value", "d": "2/2016"}, {"body": "nt think want package either polymer webcomponentsjs polyfills default view encapsulation emulated majority apps use definitely mentiondocument native view encapsulation used people take care polyfilling needed", "d": "2/2016"}, {"body": "hmm depends point view mean kind bring polyfills required matter settings devs use components yes least mentioned within docs", "d": "2/2016"}, {"body": "kind bring polyfills required matter settings devs use components disagree ca nt build ship polyfills chance people try use angular browser neither ship polyfills default sth needed majority apps comes cost file size think soon people switch native view encapsulation know dong aware consequences including making sure polyfills available otoh specifically case shadow dom nt think devs needwant polyfills use native view encapsulation exactly polyfill many platforms target browser nt browser supports native shadow dom better use emulated view encapsulation anyways thing basically polyfill", "d": "2/2016"}, {"body": "ca nt build ship polyfills chance people try use angular browser neither ship polyfills default sth needed majority apps well argument true browser support matrix says compatible browser x z comes cost file size true size would disadvantage nt think devs needwant polyfills use native view encapsulation true happy path users wild using chrome plenty people using latest greatest firefox edge nt support okay firefox flag used turn public facing web apps plenty scenarios want get shadow dom working anyway imo ship smile docs mention", "d": "2/2016"}, {"body": "well argument true browser support matrix says compatible browser x z right need polyfills older ones true happy path users wild using chrome plenty people using latest greatest firefox edge nt support shadowdom okay firefox flag used turn public facing web apps plenty scenarios want get shadow dom working need polyfill broader platform anyways rather stick emulated view encapsulation already polyfill", "d": "2/2016"}, {"body": "already polyfill said internally fallback browser supports nt", "d": "2/2016"}, {"body": "generally polyfill usually fallback case native implementation supported however case shadow dom support disabled default comes performance penalty necessarily worth turn explicitly", "d": "2/2016"}, {"body": "hmkay performance may really point another ssl handshake might done shadowdom content", "d": "2/2016"}, {"body": "uhm sure ssl related", "d": "2/2016"}, {"body": "something look", "d": "2/2016"}, {"body": "shadowdom entirely clientside based actually nothing todo ssl however related original issue anyways", "d": "2/2016"}, {"body": "true let keep way docs least updated", "d": "2/2016"}, {"body": "ssl dependes course done inside component", "d": "2/2016"}, {"body": "use example work around really bad practice drawbacks like always class component", "d": "2/2016"}, {"body": "would need manual passing attributes look dom component created inside routeroutlet next", "d": "2/2016"}, {"body": "workaroud wrote small directive listens old changeevent updates ngformcontrol accordingly run tests successfully directive selector select multiple ngformcontrol host change onchange eventtargetvalue export class selectworkaround input ngformcontrol control onchange value gt thisngformcontrol thisngformcontrolupdatevalue value", "d": "2/2016"}, {"body": "looks like dup", "d": "2/2016"}, {"body": "nt close look example nt generate valid html allowed tag within probably want something like needs changed work github issues bug reports feature requests please use stackoverflow google groups gitter support questions", "d": "2/2016"}, {"body": "hi txs look forward stackoverflow google groups", "d": "2/2016"}, {"body": "could", "d": "2/2016"}, {"body": "yes solution tank todoubaba", "d": "2/2016"}, {"body": "also implement tojson", "d": "2/2016"}, {"body": "duplicate", "d": "2/2016"}, {"body": "nt see line add screenshot please", "d": "2/2016"}, {"body": "maybe saw app dot componentts typed appcomponentts sorry false alarm amp thx angular", "d": "2/2016"}, {"body": "provide repo plunker", "d": "2/2016"}, {"body": "combine css sass less files normally regardless whether keep snippets alongside components elsewhere nt define styles components none used besides global ones matching regular selectors", "d": "2/2016"}, {"body": "captaincodeman nt want angular include code styles components available every project use create provider injected used use probably tree shaking exclude module loading browser", "d": "2/2016"}, {"body": "set component import css files entry page", "d": "2/2016"}, {"body": "couple approaches may give depend build package app using webpack could require css component css snippets combined output single external stylesheet way styles components used app included another approach look something like uncss try remove styles used app help things like bootstrap well even already custom build unlikely use every class feature", "d": "2/2016"}, {"body": "zoechi know use asking angular include code default since never use project want angular include default want others want feature include including file adding provider bootstrap step", "d": "2/2016"}, {"body": "problem feature performance required use component encapsulared styles", "d": "2/2016"}, {"body": "problem feature css nerd like global css want functionality done framework know write best css one file serve application without complications angular load functionality browser know heavy functionality angular", "d": "2/2016"}, {"body": "negligible part compiler api anyway would nt ship production application offline compilation implemented", "d": "2/2016"}, {"body": "brief look dart seems work assign validators form built nt tested yet validation still works expected afterwards", "d": "2/2016"}, {"body": "thanks zoechi function called valuechanges hence ran issues due value updated weirdly calling function single control worked fine multiple controls caused memory leak looked code able call far seems trick think add remove functions revalidate would intuitive api problem solved", "d": "2/2016"}, {"body": "appears likely due take look issue cleared", "d": "2/2016"}, {"body": "copied alanknight update bug fixed snapping problem bot failures luck also fixes issue may need cherrypick dev", "d": "2/2016"}, {"body": "tried enabling dev mode today still failing looks like fix dart bleeding edge release made dev yet", "d": "2/2016"}, {"body": "freeze seems fixed issue looking", "d": "2/2016"}, {"body": "issue investigating found workaround try", "d": "2/2016"}, {"body": "still broken seems", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "zoechi agree dup", "d": "2/2016"}, {"body": "closing dupe", "d": "2/2016"}, {"body": "clear button type submit clicking causes form submit ngform supposed intercept submit event ngif removes form element dom interception happen fix setting button type button", "d": "2/2016"}, {"body": "thanks know without type attribute submit button cure problem seen revised plunker closing issue opening calls explicit feature replace hack illustrated plunker", "d": "2/2016"}, {"body": "sorry disturbing thought think current behavior absolutely correct", "d": "2/2016"}, {"body": "looks like typechecking issue inputs compiler", "d": "2/2016"}, {"body": "dupe", "d": "2/2016"}, {"body": "nt explicitly reference jasminedts problem beta starting beta ide complains constructs ca nt found issue still present beta", "d": "2/2016"}, {"body": "mean got work manually adding typings jasmine like know bug way", "d": "2/2016"}, {"body": "ditto seems unlisted breaking change typings tests added separately", "d": "2/2016"}, {"body": "filipesilva right undocumented breaking change cc vicb juliemr test sets directory look like app typechecks see missing testing example one would noticed breaking change working stuff right fold fix note fix angular longer pollutes compilation typings files might use different version library therefore use corresponding typing file indeed continue installing jasmine typing need add documentation sorry breaking", "d": "2/2016"}, {"body": "thanks", "d": "2/2016"}, {"body": "makes sense sensible change option would magically guess whatever typings included avoiding otherwise would error due duplicate typings", "d": "2/2016"}, {"body": "even magic versioning problem might want newer older jasminedts ships typings version match devdependency version whatever latest angular package using shipped clear fixing issue documenting breaking change reinstating jasmine typing thu feb pm filipe silva notifications githubcom wrote makes sense sensible change option would magically guess whatever typings included avoiding otherwise tsc would error due duplicate typings reply email directly view github", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "could please add code rect demonstrates try accomplish", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "might related inject service could get relevant information everywhere would help", "d": "2/2016"}, {"body": "well already using workaround inject dependencies canactivate using shared service persist data nt really problem consider two routes javascript parent route canactivate gt check current user activate exists return userservicebootstrapuser user gt user child route canactivate gt check current user permission return userserviceuserhaspermission permission child canactivate always return false user bootstrapped point due order canactivate executes child parent seems counterintuitive given child route belongs route requires user exist activated", "d": "2/2016"}, {"body": "pipe added instead", "d": "2/2016"}, {"body": "using like explained see also", "d": "2/2016"}, {"body": "missed change adding required setup see following error reported karma error xhr error found loading", "d": "2/2016"}, {"body": "problem typings", "d": "2/2016"}, {"body": "testbrowserxxxproviders nt make bundles see", "d": "2/2016"}, {"body": "brandonroberts impact referenced issue one", "d": "2/2016"}, {"body": "andrashatvani ca nt import testbrowserxxxproviders getting", "d": "2/2016"}, {"body": "brandonroberts providers", "d": "2/2016"}, {"body": "ok must updated built bundles", "d": "2/2016"}, {"body": "andrashatvani documenttoken provided document", "d": "2/2016"}, {"body": "source nt make bundles way fix least locally according changelog", "d": "2/2016"}, {"body": "updated bundles codeangularjsorg fix npm release come week wednesday", "d": "2/2016"}, {"body": "great really need fixed soon possible thanks", "d": "2/2016"}, {"body": "verified fixed", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "preview section click home dashboard component based route loaded dashboard component multiple components fyi side dashboard components loaded dynamically based entitlement particularly pipeline component loaded inside dashboard want create nested route refer pipelinejs uncommenting line placed line file look line one attached portfolioalerttxt run browser hang fyi nested ngoutlet included load component based nested route hope explains problem thanks support", "d": "2/2016"}, {"body": "way trying use compile causing infinite loop nested outlets work though see modified example", "d": "2/2016"}, {"body": "see also", "d": "2/2016"}, {"body": "brandonroberts seems deleted previous plunker suggested way around nested route could please provide", "d": "2/2016"}, {"body": "veenayp sure go", "d": "2/2016"}, {"body": "thanks helpful suggestion modal view child route could open route example user click profile link overlay window appear portfolio component user could click portfolio dashboard home route could homeportfolio dashboard portfolio dashboardmessageinboxportfolio append child route dynamically current navigated route feb brandon notifications githubcom wrote veenayp sure go reply email directly view github", "d": "2/2016"}, {"body": "think looking auxiliary routes navigated parallel regular routes type routes nt supported angular router build yet though", "d": "2/2016"}, {"body": "ohk means defined routeconfig ca nt append child route example provided rout config component routeconfig path component name path component name path component name later run time ca nt add child route path component name", "d": "2/2016"}, {"body": "yes dynamically add child routes inject router add way ca nt load multiple routes yet though", "d": "2/2016"}, {"body": "thanks brandon quick response referring plunker could please help adding dynamic child route plunker path component name rout info comes service homejs servicegetcommonrout path help component help name help path profile component profile name profile", "d": "2/2016"}, {"body": "working fork adding dynamic routes dynamic routes wo nt work direct navigation though wo nt defined navigation triggered may separate issue suggest define routes upfront dynamically load components instead", "d": "2/2016"}, {"body": "ok moreover uncommented line mentioned little changes works http needs line", "d": "2/2016"}, {"body": "lazarencjusz http module", "d": "2/2016"}, {"body": "ericmartinezr ok fail waste whole day thanks help", "d": "2/2016"}, {"body": "works way sad though nt supported yet", "d": "2/2016"}, {"body": "awerlang thanks help going try approach", "d": "2/2016"}, {"body": "thanks suggestion ran issue add support quotes something similar", "d": "2/2016"}, {"body": "side note found ended using ngfor also works elegant especially array always contain one element trick perhaps ngif would also work nt try", "d": "2/2016"}, {"body": "thanks ericmartinezr", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "issue angular speak import file relative path liking typescript compiler simplified relative path good", "d": "2/2016"}, {"body": "problem set target set target two compile errors shown error find name zone error find name browsernodeglobal", "d": "2/2016"}, {"body": "going along fine checked project new machine caused nodemodules update modules packages set get latest version one modules installed started getting problems tons compile errors changing target solved issue like compile compatibility get read publish", "d": "2/2016"}, {"body": "occures early import", "d": "2/2016"}, {"body": "maybe call method missing", "d": "2/2016"}, {"body": "blacksonic follow code called fix suggested changelog notes recommended way nt working maybe need run code earlier test process run loading executing tests", "d": "2/2016"}, {"body": "first line tests fails importing internals", "d": "2/2016"}, {"body": "ideas good luck getting issue resolved", "d": "2/2016"}, {"body": "sets providers provider getting executed", "d": "2/2016"}, {"body": "supposed use testinginternal importing testing fine seen error mixing dispatchevent injectasync others", "d": "2/2016"}, {"body": "yep right finally figured also working solution import browserdomadapter import testbrowserplatformproviders testbrowserapplicationproviders import setbasetestproviders setbasetestproviders testbrowserplatformproviders testbrowserapplicationproviders browserdomadaptermakecurrent import aftereach beforeeach beforeeachproviders describe expect inject injectasync", "d": "2/2016"}, {"body": "think used instead called initialized angular instead dart works ts currently nt seem see also", "d": "2/2016"}, {"body": "blacksonic since setbasetestproviders nt need anymore browser makecurrent", "d": "2/2016"}, {"body": "still nt working tried putting three imports calling getting anyone else issue", "d": "2/2016"}, {"body": "also seeing", "d": "2/2016"}, {"body": "think need context show component setup ideally plunk", "d": "2/2016"}, {"body": "component selector main templateurl homecomponenthtml export class homecomponent", "d": "2/2016"}, {"body": "stacktrace exception attempt use dehydrated detectorbrowserdomadapterlogerror anonymous function anonymous function anonymous function stacktrace browserdomadapterlogerror anonymous function anonymous function anonymous function error attempt use dehydrated detector dehydratedexceptionbaseexception constructor new dehydratedexception abstractchangedetectorthrowdehydratederror abstractchangedetectorhandleevent abstractchangedetectoreval cb arguments anonymous function rrun async gap error r rfork rbind rbindonce nzone anonymous function e anonymous function next async gap error r rfork rbind r anonymous function tdeactivate rrun rrun async gap error r rfork rbind r anonymous function etdeactivate etcommit ecommit rrun async gap error r rfork rbind r anonymous function rrun rrun async gap error r rfork rbind r anonymous function etnavigate rrun rrun async gap error r rfork rbind r anonymous function etnavigatebyinstruction tonclick abstractchangedetectorhandleevent appviewtriggereventhandlers async gap error r rfork ngzonecreateinnerzone new ngzone createngzone platformrefapplication objectbootstrap object systemjsloaderexec anonymous function anonymous function anonymous function uncaught attempt use dehydrated detectorexceptionhandlercall anonymous function anonymous function anonymous function exception attempt use dehydrated detector exception attempt use dehydrated detectorbrowserdomadapterlogerror anonymous function anonymous function anonymous function stacktrace browserdomadapterlogerror anonymous function anonymous function anonymous function error attempt use dehydrated detector dehydratedexceptionbaseexception constructor new dehydratedexception abstractchangedetectorthrowdehydratederror abstractchangedetectorhandleevent abstractchangedetectoreval cb arguments anonymous function rrun async gap error r rfork rbind rbindonce nzone anonymous function e anonymous function next async gap error r rfork rbind r anonymous function tdeactivate rrun rrun async gap error r rfork rbind r anonymous function etdeactivate etcommit ecommit rrun async gap error r rfork rbind r anonymous function rrun rrun async gap error r rfork rbind r anonymous function etnavigate rrun rrun async gap error r rfork rbind r anonymous function etnavigatebyinstruction tonclick abstractchangedetectorhandleevent appviewtriggereventhandlers async gap error r rfork ngzonecreateinnerzone new ngzone createngzone platformrefapplication objectbootstrap object systemjsloaderexec", "d": "2/2016"}, {"body": "guys info nothing done way hunt error reproductio reproduction plnkr repro", "d": "2/2016"}, {"body": "debugging solved case code imported import component view directive oninit ondestroy docheck eventemitter elementref templateref platformdirectives import ngclass import ngtransclude common todo add active event tab todo fix mixing static dynamic tabs position tabs order creation component selector tabset properties vertical justified type view templateurl appcomponentscoretabtabtemplatehtml directives ngclass ngtransclude export class tabset implements oninit ondestroy private vertical boolean private justified boolean private destroyed boolean private type string todo templateurl directive selector tab properties active disable disabled heading events select deselect host classtabpane true classactive active export class tab implements oninit ondestroy docheck public active boolean public disabled boolean public heading string directive selector tabheading export class tabheading constructor public templateref templateref tab tab tabheadingref templateref export const tabs array tab tabheading tabset tabset component added changed method adding fist statement error", "d": "2/2016"}, {"body": "beta abstractchangedetectorhandleevent starts code thishydrated thisthrowdehydratederror beta return true someone please explain little bit changed exception thoughts avoid something extra supposed prevent events received destroyed components", "d": "2/2016"}, {"body": "app component whose change detector throwing error see listening close event biomodal subcomponent biomodal closed also removed list modals ngfor removed guess timing two things causing issue component selector appmodals template changedetection changedetectionstrategyonpush export class appmodalscmp input modals simplemodalinfo screenshot debugger", "d": "2/2016"}, {"body": "fixed problem removing close passing close callback input component selector appmodals template changedetection changedetectionstrategyonpush export class appmodalscmp input modals simplemodalinfo", "d": "2/2016"}, {"body": "already posted homecomponent appcomponent router subscribe code component selector body templateurl appcomponenthtml host attrclass bodyclass directives routerdirectives headercomponent providers routerproviders routeconfig path name home component homecomponent useasdefault true path search name search component searchcomponent export class appcomponent bodyclass string windowlocationpathname home", "d": "2/2016"}, {"body": "fixed changing template started give traceback beta using form submission", "d": "2/2016"}, {"body": "karmux exception happened angular managed solve solution proposed ie replacing type tag button submit button resolve problem suspect event function called different phase component lifecycle anybody", "d": "2/2016"}, {"body": "ericmartinezr pascalprecht plunkr demonstrating one dehydrated exceptions getting suspect may dialog service using dcl managing lifetime mdbackdrop instance guidance appreciated", "d": "2/2016"}, {"body": "also encountering error nt isolated environment could share demonstrate problem traced code found think small bug context following details observed behavior component outputs hydrated connected using expected components destroyed reference associated changedetector nullified presumably avoid unwanted data hanging around longer necessary aka avoid memory leaks constructor creates asynchronous emitter default scenario produces error create component output default behavior ie commonly done emit event point lifecycle component destroy component immediately emitting event ie next process observed result scenario destruction component nullifies associated changedetector ie dehydrates changedetector still next process previously emitted event handled next process dehydrated ie previous process exception thrown qed possible solutions obvious solution create synchronous nt seem play well framework got dreaded exception implement functionality eventemitter enable cancelling emitted events appropriately cancel emitted events component outputs dehydrating component associated changedetector cents admittedly little familiarity core inner workings angular solution seems like appropriate solution ie solution maintains understand semantics abstractions relevant bug", "d": "2/2016"}, {"body": "another problem case using event emitters ngondestroy emit eventemitter execution method exception attempt use dehydrated detector thrown cases emitting may useful ngondestroy like want emit lastminute changes notworking plunkr solution least case would implement calling ngbeforedestroy method would called element would actually removed dom destroying action would performed execution method component would dehydrated events would successfully work", "d": "2/2016"}, {"body": "seemingly strange thing even though error thrown console nt seem affect app everything still seems work fine far tell", "d": "2/2016"}, {"body": "got issue toggle using based value problem fixed tried using instead", "d": "2/2016"}, {"body": "suggestion zeddever using synchronous emitter worked opinion cancelling nonconsumed events time destroy would nt great solution", "d": "2/2016"}, {"body": "issue dispose app goes well nice solved settimeout gt disposeinstancedispose", "d": "2/2016"}, {"body": "take back issue ceolter", "d": "2/2016"}, {"body": "simpler example demonstrate component toggles show edit states states also implemented components editing finishes emits event processed parent component turned changes state back view mode edit component disposed likely causes error synchronous eventemitter detection strategy onpush resolves elementary situation require workarounds", "d": "2/2016"}, {"body": "understand problem caused event listener causing element removed event raised turn tries call event listener element longer dom", "d": "2/2016"}, {"body": "tbosch know extremely busy could please spare moments comment issue introduced refactor clean memory leaks project bunch open issues related come consistent way work around users sorts crazy things perhaps time deal could consider reducing exception warning sort", "d": "2/2016"}, {"body": "issue giving advice zoechi chance", "d": "2/2016"}, {"body": "following combination works file basets import oninit export abstract class basecomponent implements oninit ngoninit consolelog base init file childts import component oninit input changedetectionstrategy import basecomponent base component selector templateurl appcomponentschildrenchildhtml export class extends basecomponent constructor super also remove keeps working removing also side effects", "d": "2/2016"}, {"body": "add b angular creates instance b yes call ngoninit nt bug problem b make declaration relies upon fact b extends implements oninit case b subtype oninit ie b instance b true behavior get dart differs get typescript plunker example typescript behavior correct dart behavior wrong search code ca nt find references would expect work correctly however see looks like somewhat buggy use see ignores case given class interface implements interface anyway nt yet fully explain bug hand ca nt follow code decides whether call ngoninit something protorecord docs", "d": "2/2016"}, {"body": "intended behavior dart compiled output must explicitly declare make sure surfaced documentation sorry unexpected undocumented behavior design decision keep build process fast supporting would mean changes arbitrary file could affect actions taken compile time class effectively need knowledge full application make work", "d": "2/2016"}, {"body": "got recommendation add devmodeonly check user added requried think great idea spun track", "d": "2/2016"}, {"body": "kegluneq seems tell opposite", "d": "2/2016"}, {"body": "correct reverted add better comments amp documentation explaining things work way one initial piece contact folks writing dart docs angulario ensure behavior well documented", "d": "2/2016"}, {"body": "kegluneq real sad makes inheritance mixins pretty much useless", "d": "2/2016"}, {"body": "agree sad disappointed disagree makes inheritance amp mixins useless require additional boilerplate function way expect violate encapsulation still used effectively", "d": "2/2016"}, {"body": "kegluneq add nt bad also depends turn", "d": "2/2016"}, {"body": "run one dart kegluneq please reconsider intended behavior dart compiled output must explicitly declare b implements oninit make sure surfaced documentation sorry unexpected undocumented behavior would say intended bahavior violates basic oop contracts extends b b oninit oninit real world example imagine backendadmin application global menu big area main content google cloud console example would create basecontentcomponent main screens would inherit messagescontentcomponent extends basecontentcomponent basecontentcompoment declares content headline submenu probably lifecycle callback let say basecontentcomponent implements oninit generic stuff declare messagescontentcomponent extends basecontentcomponent implements oninit nt like let say create content components like decide add new lifecycle callback basecontentcomponent example ondestroy want put visited screen historyshortcuts panel go content components add ondestroy noooooooooooo", "d": "2/2016"}, {"body": "tomucha agree working toward world nt case wrote doc explain state things right direction heading solve issue", "d": "2/2016"}, {"body": "kegluneq great thanks", "d": "2/2016"}, {"body": "seen issue results error upon production build angular application webpack setting minifier rename things went away sure suspect maybe two classes getting name point minification nt think warrants another separate issue yet open right hoping see problem go away one gets fixed", "d": "2/2016"}, {"body": "think happened across problem different symptoms", "d": "2/2016"}, {"body": "posted issue said put bundled using script tag used script tag even nt work disable option happening bundled", "d": "2/2016"}, {"body": "correct need disable mangling suspect make classes underlying constructor functions name problem fixed", "d": "2/2016"}, {"body": "stumbled similar issue running app production mode even without components name mangling names outputed javascript results angular generating recursive eventually throw exception isolated issue repository contains working non mangled js mangled js results angular throwing exceptions hope helps", "d": "2/2016"}, {"body": "sorry reproduce close issue", "d": "2/2016"}, {"body": "open issue submit pull request angulario repo", "d": "2/2016"}, {"body": "thank splintercode pull request submitted", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "saw similar problem safari browser third party api triggers callback navigate another route safari route would change components would properly rendered fix inject component use within callback reenter angular scope see", "d": "2/2016"}, {"body": "pcroc thank work around make code run expected", "d": "2/2016"}, {"body": "problems missing life cycle hooks well update using ng prefix hooks", "d": "2/2016"}, {"body": "prefix hooks ng ngoninit etc", "d": "2/2016"}, {"body": "otodockal confirm loadasroot nt fire ngoninit even properly implement dynamiccomponent methods work properly fire ngoninit", "d": "2/2016"}, {"body": "prepared wanted show bizarre use case distilled case seeing slightly different behaviour app work worked loadnexttolocation expected suspecting uniqueness upon dynamicinternal id dynamicinternal one dynamiccontainercomponent problem dunno one multiple loadasroot items written one another see constructors nt see hooks elements dom maybe im abusing api behave would imagine docs try boil another plunkr simpler usage pure api comparsion distilled pure api usage sample see like said loadasroot misbehaving even single time triggered", "d": "2/2016"}, {"body": "loadasroot issues", "d": "2/2016"}, {"body": "got component lifecycle hooks prefixed implemented correctly firing loaded using", "d": "2/2016"}, {"body": "source", "d": "2/2016"}, {"body": "still hurting caretaker", "d": "2/2016"}, {"body": "looks like duplicate probably select added title", "d": "2/2016"}, {"body": "even facing issue following link", "d": "2/2016"}, {"body": "thanx actually missed add ligns", "d": "2/2016"}, {"body": "migh help well", "d": "2/2016"}, {"body": "zackzulg", "d": "2/2016"}, {"body": "good morning guys add code appcomponentjs file windowapp windowapp", "d": "2/2016"}, {"body": "oh finally got case something else setup gulp concatenating separate js files style used example calling anonymous function immediately results undefined variables resulted file correct order watch modifying original example", "d": "2/2016"}, {"body": "retested closed syntax work fine thanks", "d": "2/2016"}, {"body": "attrs nt provider angular angular error nudging conclusion assuming directive attributes use nt mind creating isolated scope directive cherrypick certain attributes readonly use otherwise alternatively functions contain object element attributes dependency injection fanciness going deciding one use depends whether want access directive associated dom element angular little confused relevant seems though purely angular issue", "d": "2/2016"}, {"body": "hey wildhoney component attempting upgrade thirdparty component ca nt change syntax third party component references attr demonstrated plunker example particular loc component tried upgrade angular admittedly relatively new angular amp please let know incorrect however issue related existing thirdparty angular component used internally existing angular projects definitely works angular assume issue angular upgrade adapter also managed get particular component working wrapping proxy angular component nt like solutionhack much rather use angular component directly angular component cheers", "d": "2/2016"}, {"body": "running issue created plunkr showing issue notice component works outside angular portion app inside angular portion fails inject attrs intended behavior", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "must", "d": "2/2016"}, {"body": "jelbourn problem looks better give example show advantage custom element rather extending native directive", "d": "2/2016"}, {"body": "astec imagine button html inside like icons texto etc", "d": "2/2016"}, {"body": "tbragaf understand correctly much difference implementing inner icon using directive vs custom element", "d": "2/2016"}, {"body": "astec best example need buttons element tag icons span element text", "d": "2/2016"}, {"body": "astec simply concise", "d": "2/2016"}, {"body": "jelbourn sounds nicer english introduces set challenges css example still imagine cases custom elements rendered different tag make sense", "d": "2/2016"}, {"body": "scenario", "d": "2/2016"}, {"body": "bundle quickstart demos work nt bundled", "d": "2/2016"}, {"body": "danmarshall saying code ca nt changed allow two bundled together", "d": "2/2016"}, {"body": "uwouldllose saying changed saying current state affairssorry nt clear bug referencing two files conflict", "d": "2/2016"}, {"body": "nisstrom try changing version resolved issues", "d": "2/2016"}, {"body": "cnaut work confirm changing version demo project furthermore even newly released still referencing", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "well ie firefox check demoproject works fine firefox however ie issue still exists", "d": "2/2016"}, {"body": "seeing workaround mentioned deniskolodin worked", "d": "2/2016"}, {"body": "robwormald example given docs describes piping promise asyncpipe docs updated source docs angulario", "d": "2/2016"}, {"body": "already workaround compression", "d": "2/2016"}, {"body": "anyone knows issue addressed", "d": "2/2016"}, {"body": "changing throw instance creation transformer run transformer actually limiting number arguments runtime limit go away well", "d": "2/2016"}, {"body": "happening even api throw status code something", "d": "2/2016"}, {"body": "created plunker could reproduce gustavolira tbragaf feel free fork plunker create reproducible case open new issue reproduction please mention issue see notification", "d": "2/2016"}, {"body": "jeffbcross replace foo plunkr gives cors error however cors happening since app actually works close api still throws", "d": "2/2016"}, {"body": "jeffbcross also response http status code gt correctly thrown error see status code insecure response path resolved", "d": "2/2016"}, {"body": "dupe", "d": "2/2016"}, {"body": "still current try changing routerminjs routerdevjs find different error something like", "d": "2/2016"}, {"body": "dear ng team members could please comment issue understand busy ca nt update apps chance get long list breaking changes moment beta fixed minification finally released sizes apps grow every day incremental updates less painful could least add labels issue", "d": "2/2016"}, {"body": "right avoiding minification error avoiding minifying polyfills sure real reason minification errors compiler refactor use rather avoid polyfills able see links correctly attached elements unable pinpoint direct cause exactly needs fixed webpack uglifyjsplugin new compiler refactor router routerlink questions problem polyfills showing rather previous releases uglifyloader works uglifyjsplugin still problem yet another compiler refactor gets merged underlying problem implementation routerlink uglifyjsplugin webpack polyfills almost best wait new compiler refactor gets merged digging", "d": "2/2016"}, {"body": "minification uglifyjsplugin everything works fine", "d": "2/2016"}, {"body": "tried beta problem exists", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "explain use case little", "d": "2/2016"}, {"body": "use case contenteditable div need updating model everytime someone keypress clicks domsubtree changes trigger method separately three different event attributes thanks", "d": "2/2016"}, {"body": "nt seem common case could create reusable directive listens set events emits another one case receives one afair since supported event binding selector", "d": "2/2016"}, {"body": "zoechi think suggest thing need three times handleevent event correct actual template indicative methods use", "d": "2/2016"}, {"body": "nt see requested feature would help case run different things event anyway", "d": "2/2016"}, {"body": "zoechi thinking something like", "d": "2/2016"}, {"body": "form input meant run function change well blur writing works fine dry", "d": "2/2016"}, {"body": "dupe", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "really tough", "d": "2/2016"}, {"body": "could prevent rxjs think mhevery igorminar want think thing cc alexeagle", "d": "2/2016"}, {"body": "simply tracking changes needed angular us work latest rxjs related right structure ends project see decided make peers igorminar written elsewhere reasoning peerdependencies essentially apilevel dependencies upcoming ecmascript standards eg reflectmetadata already coming zonejs stage zero rxjs next could choose whatever implementation want angular wants bring implementation standards also use version peerdependency everywhere think right fix add npm option lets optin explicitly installing peerdependencies angular requests", "d": "2/2016"}, {"body": "alexeagle agree opinion shims think apply rxjs rxjs javascript library developing beta version unstable dependency users mistake easily install wrong version rxjs keeps peerdependency rxjs think install one way think idea", "d": "2/2016"}, {"body": "nt even know filed issue npm behavior want think something like postinstall script project looks installed deps installs requested peers closer correct tue feb pm suguru inatomi notifications githubcom wrote alexeagle agree opinion shims think apply rxjs rxjs javascript library developing beta version unstable dependency users mistake easily install wrong version rxjs keeps peerdependency rxjs think install postinstall one way think idea reply email directly view github", "d": "2/2016"}, {"body": "okay understand really correct worried friendly beginners still beta small problem future soon many people may questions issues like", "d": "2/2016"}, {"body": "rxjs stable worry unnecessary hope", "d": "2/2016"}, {"body": "decided use rather dependencies several reasons aimed giving developers control flexibility dependency graph peer dependencies required today expected provided runtime compiletime environment angular opposed angular loading dependencies boot time let take look discuss mean statement polyfill angular requires provided environment due hack zonesjs currently require polyfill even browsers provide native implementation promises hack go away angular upgraded next version zonejs afterwards expect need dependency go away promises implemented evergreen browsers support polyfill angular requires provided environment polyfill monkey patches global context window definitely nt want angular sideeffect loading angular also want people flexibility use polyfill implementation providing apis eg corejs expect dependency go away evergreen browsers support apis required angular available shared dependency angular typescript compiler since want users flexibility update new version typescript without upgrading angular important package dependency application dependency angular prolyfill observables specification standardized want developers able control version rxjs use within compatible version range wait angular releases receive bug fixes new features prolyfill zones specification standardized want developers able control version rxjs use within compatible version range wait angular releases receive bug fixes new features polyfill dependencies ideally suggestion hint developers know angular expects hard requirement today npm feature request optional peerdependencies would allow us model relationship better implemented angular switch using rathern polyfills", "d": "2/2016"}, {"body": "wardbell could please incorporate information comment docs suitable way thanks", "d": "2/2016"}, {"body": "igorminar thanks kind explanation finally understood decision purposes never worry documentation", "d": "2/2016"}, {"body": "see got thank", "d": "2/2016"}, {"body": "igorminar way see angulario pr", "d": "2/2016"}, {"body": "got similar question documentation ngcontent restrictions update noticed angular uses component parent context search listener instead component actually declared template ngcontent correct", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "fixed example question click app application content component template angular uses app component context instead content component", "d": "2/2016"}, {"body": "running issue well", "d": "2/2016"}, {"body": "waiting fix desperately could deal breaker upgrading app unless work around", "d": "2/2016"}, {"body": "beta error outer component handler fault seems getting caught abstractchangedetector handleevent looks like throws new eventevaluationerror nothing gets logged console output binding inner component seem stop working long step code break catch block see details actual error sure wherehow plug angular see errors otherwise", "d": "2/2016"}, {"body": "believe problem caused last line constructor changing seems prevent problem unfortunately nt able get angular repo installed locally ca nt run tests check nt break anything write new unit test tested fix patching generated js", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "anything new issue", "d": "2/2016"}, {"body": "gave ended", "d": "2/2016"}, {"body": "please provide way show current running version", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "ibufu ericmartinezr point working example would easier understand", "d": "2/2016"}, {"body": "probably added nganimate content host", "d": "2/2016"}, {"body": "alternative offline compilation templates tbosch estimates offline compilation ready corresponding issue closed month ago thanks", "d": "2/2016"}, {"body": "happen next month sure release angular thu feb roman hotsiy notifications githubcom wrote alternative offline compilation templates tbosch estimates offline compilation ready corresponding issue closed month ago thanks reply email directly view github", "d": "2/2016"}, {"body": "tx gold", "d": "2/2016"}, {"body": "pr fixed", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "nt even work chrome properly automate application protractor something fishy input events", "d": "2/2016"}, {"body": "sabartius could related wild guess", "d": "2/2016"}, {"body": "zoechi sure sure change causing trouble similar issue inputfields protractor angular got changed rely inputevent see somehow got feeling one really uses protractor", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "circling back around confirmed deniskolodin workaround works thanks", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "also working also edge", "d": "2/2016"}, {"body": "also problem", "d": "2/2016"}, {"body": "fix works current ff ie versions", "d": "2/2016"}, {"body": "also see problem live example available developer guides form", "d": "2/2016"}, {"body": "cmon guys one week without firefox automated testing fix trivial pr push", "d": "2/2016"}, {"body": "zarkosusnjar bug exists month week", "d": "2/2016"}, {"body": "still present beta firefox", "d": "2/2016"}, {"body": "fixed released longer pollute typechecker dependencies types", "d": "2/2016"}, {"body": "confirm works", "d": "2/2016"}, {"body": "works also", "d": "2/2016"}, {"body": "captaincodeman solution still run normal flow code would like exception handler want add behaviour previous one", "d": "2/2016"}, {"body": "also think reopened explained docs throws also think considered allow default implementation extended instead implemented", "d": "2/2016"}, {"body": "tbragaf created new one", "d": "2/2016"}, {"body": "issue trying rightclicknew tab routerlink anchor supposed query parameters ie unlike clicking link loads page supplied params new tabbing omits params generated href ought navigate place click would take", "d": "2/2016"}, {"body": "dup see comment", "d": "2/2016"}, {"body": "hey since created issue afaict still unresolved console message still says call enableprodmode function still nothing dart perhaps original issue resolved ie message printed prod mode dart message whenever might get printed misleading think", "d": "2/2016"}, {"body": "see would nice addition however im sure great problem part core code mean us use kind wrapper class around http service anyway convenient yes super necessary", "d": "2/2016"}, {"body": "agree nice addition also think critical core code http service almost useless thing pass string people may write workarounds like suggested done obvious downsides something used frequent imperative included", "d": "2/2016"}, {"body": "aoakeson convinced agree", "d": "2/2016"}, {"body": "random guy glad hop little direction big question mind serialization method used specified specific request", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "solve issue required valiator applied input type number entered text empty value nan see", "d": "2/2016"}, {"body": "fredgate sure resolved numbervalueaccessor tries parsefloat empty string resulting nan required validator also nt understand required validator throw invalid nan sent put reference commit fork issue looks problem solved numbervalueaccessor bridge dom element control thus know user deletes content value empty string input empty nan nt much knowledge wrong", "d": "2/2016"}, {"body": "hi guys know late party struggling find way current situation working get angular net mvc application specifically form mvc concept csrf tokens typically embed directly form since hoping submit form via ajax hoping able pull token page could still nicely ideally hoping something like server code generates page better approach", "d": "2/2016"}, {"body": "dup see comment", "d": "2/2016"}, {"body": "mhevery able get ruler work universal web workers give window undefined error trying use universal however work universal proper way load domadapter using web worker", "d": "2/2016"}, {"body": "yes thats qdouble suppose nt work web worker universal browserdomadapter implementation browser side expecting using ruler di would inject webworkeruniversal domadapter implementation instead since ca nt use di nt know problem thanks contributing", "d": "2/2016"}, {"body": "esugoi assumed dom adapter initialized appropriately platform", "d": "2/2016"}, {"body": "zoechi yeah dom nt seem properly implemented typescript right supposed part public api", "d": "2/2016"}, {"body": "qdouble would great know indeed", "d": "2/2016"}, {"body": "angular team calling bug supporting shim support affects routing decisions", "d": "2/2016"}, {"body": "updates issue using still nt work shim solve problem solution proposed deadzedd", "d": "2/2016"}, {"body": "getting needs fixed", "d": "2/2016"}, {"body": "still resolved fixed applying suggested shim sanbornc", "d": "2/2016"}, {"body": "thanks mlaval shim solved issue well using", "d": "2/2016"}, {"body": "many issues due shims needed old browsers android workaround add ones used unit testing framework maybe somehow published either means adding many browsers new file well documented something else discussed", "d": "2/2016"}, {"body": "looked bit today figured build failing others working ie shim mlaval points regular expression matches liberally instrument code istanbul function names get mangled regexp match debug output points regexp failure full ie name shim looks like build happy", "d": "2/2016"}, {"body": "shim ie made work", "d": "2/2016"}, {"body": "error still occurring beta official recommendation work around issue", "d": "2/2016"}, {"body": "theodorejb try modified shim justindujardin posted fixed error", "d": "2/2016"}, {"body": "modified custom shim also works angular team providing office fix", "d": "2/2016"}, {"body": "confirm worked getting use keyword identifier invalid since", "d": "2/2016"}, {"body": "captaincodeman shim also worked beta ideally angular would work ie outofthebox though shim included npm package clearly documented", "d": "2/2016"}, {"body": "theodorejb definitely sometimes need quick fix unblock us proper solution released available problem even original shim needed modified one fix one problems many variations build deploy maybe start labelling comments indicate using", "d": "2/2016"}, {"body": "issue facing use shim works", "d": "2/2016"}, {"body": "fyi everyone file justindujardin works case still getting error mlaval file nt think related shim much time investigating turns fix done justindujardin fixed maybe justindujardin send pull request least testing shim get fixed master mean time people make sure use right file", "d": "2/2016"}, {"body": "provide info helps someone else problem caused using uglifyjs setting beautify false would get ie would work fine beautify set true nt using istanbul never though change shim justindujardin versions looked deeper realized regexp caused problem well", "d": "2/2016"}, {"body": "issue shim nt work right away project minifying mangling js disabled gulpfile shim worked details issue anyone knows issue addressed", "d": "2/2016"}, {"body": "reread post nt clear shim justindujardin use uglifyjs compress minify mangling separate issue angular generated min file working like", "d": "2/2016"}, {"body": "fixed adding code", "d": "2/2016"}, {"body": "kevinjannis mentionned previously best fix one used imho one justindujardin regexp fixed one", "d": "2/2016"}, {"body": "thanks update one fix regexp", "d": "2/2016"}, {"body": "fyi linking pull request merged soon hopefully thanks justindujardin", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "ericmartinezr error ericmdantas try deep look later", "d": "2/2016"}, {"body": "see changed way providers loaded testing unfortunately something appears gone wrong necessary systemregister missing version npm present", "d": "2/2016"}, {"body": "tests running fine repo case someone needs help basically manually add typings jasmine add test files add imports ts import setbasetestproviders import testbrowserplatformproviders testbrowserapplicationproviders add component tests thanks quick fix guys", "d": "2/2016"}, {"body": "working thanks ericmdantas", "d": "2/2016"}, {"body": "smile", "d": "2/2016"}, {"body": "ericmdantas tried tests pass try fail one expect toequal still passes", "d": "2/2016"}, {"body": "johnvnguyen hello happens component test right updated repo use instead tests failing assertion falsy thanks pointing smile", "d": "2/2016"}, {"body": "ericmdantas yes thank nt checked tests yet happy see test templateurl working stuck days edit wondering injectasync makes work somebody please briefly explain", "d": "2/2016"}, {"body": "last time checked switching return promise works correctly favor would use verify changes suchs nt remember internal change supposed leak public api using using let known spec finished see maybe someone core team let us know better", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "thanks clarification wardbell current project nt built part ci pipeline nt thought agree need fixed soon hopefully", "d": "2/2016"}, {"body": "yes need typescript next build travis keep compileclean dupe", "d": "2/2016"}, {"body": "alexeagle awesome build find issues like thanks lot stuff actually angular team creating build typescript next would definitely help identify issues like current one still issue way investigate well chance taking issue request apply workaround mentioned seems pretty simple solve problem adding top promisedts", "d": "2/2016"}, {"body": "okay let keep open confirm fixed sure typings test prevents regressions", "d": "2/2016"}, {"body": "please fix", "d": "2/2016"}, {"body": "issue", "d": "2/2016"}, {"body": "working repro failure travis", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "fix waiting merge meantime", "d": "2/2016"}, {"body": "npm install alexeagleangular", "d": "2/2016"}, {"body": "movedevtool", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "master hopefully go release tomorrow", "d": "2/2016"}, {"body": "thanks work got rid last error build finally green wed feb alex eagle notifications githubcom wrote master npm install angularangular hopefully go release tomorrow reply email directly view github", "d": "2/2016"}, {"body": "thanks much release job", "d": "2/2016"}, {"body": "um got version npm seems issue used angularcli tool generate new app regardless unstable tool may got correct version go folder run get file mentioned error looks follows export promise export interface promisecompleter promise promise resolve value r promiselike gt void reject error stacktrace string gt void export declare class promisewrapper static resolve obj promise static reject obj promise static catcherror promise promise onerror error gt promiselike promise static promises promise static promise promise success value gt u promiselike rejection error stack gt u promiselike promise static wrap computation gt promise static schedulemicrotask computation gt void static ispromise obj boolean static completer promisecompleter original line breaking compiler guess", "d": "2/2016"}, {"body": "also still failure typescript next", "d": "2/2016"}, {"body": "typescript next travis failure known issue build system broken behavior change inside tsc related file containing export promise tue feb pm meligy gurustopnet lt notifications githubcom wrote also still failure typescript next reply email directly view github", "d": "2/2016"}, {"body": "still facing issue workaround", "d": "2/2016"}, {"body": "seems still issue", "d": "2/2016"}, {"body": "add following error goes away compilation navigate app browser shows went ahead added following call angular made application works least compiles still yells console main view works basic routing works services injected component working example simple service returns stringjsonwhatever tried consoling service constructor never reaches code assuming injectable service never instantiated anyone also making changes promisedts one crazy idea nt want ask team go make changes nodemodules fork npm install ps environment angular tsc", "d": "2/2016"}, {"body": "downgraded works great want distribute project packagejson make sure nt point typescript tsc works great angular dont dont", "d": "2/2016"}, {"body": "typescript support introduced earlier indeed requires ts thu feb anas raza firdousi notifications githubcom wrote downgraded works great want distribute project packagejson make sure nt point typescript tsc works great angular dont typescript dont typescript typescript reply email directly view github", "d": "2/2016"}, {"body": "getting error confused error appearing excluded appears typescript still looking nodemodules", "d": "2/2016"}, {"body": "alexeagle correct running thinking show local one showed verified better sorry noise similar issues could something completely different case angularcli actually bringing shawnnorthrop typescript follow", "d": "2/2016"}, {"body": "afirdousi", "d": "2/2016"}, {"body": "done", "d": "2/2016"}, {"body": "looks like dup", "d": "2/2016"}, {"body": "dup see comment", "d": "2/2016"}, {"body": "yes correct tue jan pm oliver janik notifications githubcom wrote confirm applicationrefcomponenttypes always contain root component maybe docs need updated exposed special extra poperty reply email directly view github", "d": "2/2016"}, {"body": "potential duplicate", "d": "2/2016"}, {"body": "also seeing behavior custom pipe navigation", "d": "2/2016"}, {"body": "unfortunately also first thought due route redirects apparently happens route redirects custom pipes one components known workarounds", "d": "2/2016"}, {"body": "workaround put routernavigate ngoninit instead router bug bug pipes", "d": "2/2016"}, {"body": "nt also guidance meaningful things constructor certainly true standpoint classical oo languages real work nt done constructor oninit lifecycle method place", "d": "2/2016"}, {"body": "brandonroberts joeeames ya sure always use initialization stuff thing actually nt instructions within component constructors create custom function redirecting route whenever user nt authenticated code inspired get idea feeling timing thenlike might fire similar stage lifecycle constructors executed basically early thus cause pipes bug", "d": "2/2016"}, {"body": "ugh nasty real problems comes piece huge struggles use canactivate brandonroberts workaround get di decorator normally nt possible", "d": "2/2016"}, {"body": "joeeames oh interesting browsed couple issues fact need brandonroberts", "d": "2/2016"}, {"body": "juristr good subclassing routeroutlet seems get real dicey real fast redirecting activate method preventing activation call also seen example nt may issue", "d": "2/2016"}, {"body": "juristr comment proposal mine nt exist outside plunker proof concept", "d": "2/2016"}, {"body": "brandonroberts sure seen proposal sounds good suggesting subclassing routeroutlet bad practices better go route instead", "d": "2/2016"}, {"body": "juristr seems less intrusive subclass routeroutlet use everywhere lose ability use routerdirectives also seems like maintenance keeping track public routes easy support nested routes workaround effectively goes away able use di canactivate", "d": "2/2016"}, {"body": "brandonroberts see workaround u mean one use explicitly fetch services etc sorry poke u really appreciate feedback blush", "d": "2/2016"}, {"body": "yeah brandonroberts expert", "d": "2/2016"}, {"body": "juristr problem yes talking injector workaround unless something changes canactivate gets hooked di wo nt need store injector pass way", "d": "2/2016"}, {"body": "brandonroberts awesome thx lot", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "brandonroberts proposal would satisfy problem well infinity", "d": "2/2016"}, {"body": "hi error pipe instantiated going deshydraded case consider route protected login ie homeprofile case user session expired user call directly route login redirect outlet redirect route login angular trying deshydrate profile component use pipe exception thrown stack browser chrome version os windows workaround add condition element using pipe display component oninit called profilecomponentts profilecomponenthtml", "d": "2/2016"}, {"body": "got error", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "npm install npm warn requires peer reflectmetadata none installed far see release reflectmetadata tagged possible", "d": "2/2016"}, {"body": "problem still persists even plunker reproduce", "d": "2/2016"}, {"body": "fix reverted", "d": "2/2016"}, {"body": "kasperpeulen pr allows", "d": "2/2016"}, {"body": "sorry probably uninformed comment new angular came error code official angular tutorial threw wonderful nt talking solving wrong level actual mycrosyntax made smart enough able iterate almost anything like smart enough handle etc automagically even cost maybe increasing rendering time even stmh developer actually need care heshe iterating writing template edit bad actually error code confusing error message indeed still think thing behave smarter try probably right thing regardless given", "d": "2/2016"}, {"body": "please update latest write try using three ie related shims plunker report back still working hope merge two angularsupplied shims beta coming soon", "d": "2/2016"}, {"body": "agree understand elvis operator something different know elvis operator ternary sugar groovy calls safe navigation operator note groovy also elvis", "d": "2/2016"}, {"body": "null conditional null coalescing would appropriate", "d": "2/2016"}, {"body": "marked lots users running", "d": "2/2016"}, {"body": "still present beta", "d": "2/2016"}, {"body": "mean fixed next beta", "d": "2/2016"}, {"body": "ffmathy means high priority fixed nt guarantee land next beta release", "d": "2/2016"}, {"body": "still low effort onehour task wih tag hoping best stuck project complete", "d": "2/2016"}, {"body": "still present beta well", "d": "2/2016"}, {"body": "ffmathy", "d": "2/2016"}, {"body": "also add likely also blocks browserify users picks minified versions npm nodemodules first", "d": "2/2016"}, {"body": "ran mangle disabled worked well also happening since problem reproduce repo set mangle true inspect element browser popup", "d": "2/2016"}, {"body": "still present beta well", "d": "2/2016"}, {"body": "updated plunker specific failed test check make sure backend provided injector instance one fetched injecting directly ie making singleton injector nt know possible good enhancement finding nasty testing mistake otherwise", "d": "2/2016"}, {"body": "got ngformcontrol working ngcontrol nt work", "d": "2/2016"}, {"body": "getting error exception provider controlcontainer ngcontrolname controlcontainer exception provider controlcontainer ngcontrolname controlcontainer browserdomadapterlogerror downgrade helped", "d": "2/2016"}, {"body": "comming back unto earlier comment upgrading adding braces around longer works still throw error longer changes value field eg browser field appears value events still seem trigger though like validation etc makes even weirder", "d": "2/2016"}, {"body": "error persists", "d": "2/2016"}, {"body": "debugging bit something causing dependency injection look dependencies contexts namely form even get function instance injection thing causing look parent parent fact controlcontainer looking contains function basically runtime edit code include check let roll parent works nt checked changes code injector ngcontrolname metadata since weekend actual core developer know might causing temporary fix looking temporarily fix bug fix synthetically adding another container boundary simplest way add element form", "d": "2/2016"}, {"body": "bug", "d": "2/2016"}, {"body": "also encounter issue also temporary fix additional ngif form enclosing element work around issue thanks lot jvanharn investigation", "d": "2/2016"}, {"body": "problem except im using ngcontrol instead error ngif contained within component remove ngif problem goes away matter put value ngif brings error since im using compiled non dev version exception provider e e e", "d": "2/2016"}, {"body": "updated getting error sample form", "d": "2/2016"}, {"body": "error persist", "d": "2/2016"}, {"body": "encountered issues found workaround docs finally wrapped input form control like allow getter setter", "d": "2/2016"}, {"body": "okay found really weird bug correct previous comment nt ngif contained within component nt work ngif component ngstyle even though element either one removed works odd reason nt work component time error recieved error many people displayed persists update im longer sure error error exists using exist", "d": "2/2016"}, {"body": "temporary fix use ngclass instead classsomething", "d": "2/2016"}, {"body": "also hitting issue guess downgrading", "d": "2/2016"}, {"body": "fixed probably", "d": "2/2016"}, {"body": "update working repro travis build", "d": "2/2016"}, {"body": "added complete guide repo", "d": "2/2016"}, {"body": "zonerun nt fix problem code ionic project export class picutrepage constructor app ionicapp nav navcontroller params navparams thisnav nav thisthumbnail imgplaceholderpng imagepick var options quality destinationtype cameradestinationtypefileurl sourcetype camerapicturesourcetypephotolibrary allowedit true encodingtype cameraencodingtypejpeg popoveroptions camerapopoveroptions savetophotoalbum false html tried cameradestinationtypefileurl sure image updated scroll page maybe cause refresh dom make image appeared", "d": "2/2016"}, {"body": "even try text update inside getpicture callback also updated could multithreading issue", "d": "2/2016"}, {"body": "zamrokk find solution already tried whatever could still vain", "d": "2/2016"}, {"body": "issue still remains use actually workaround waiting fix angular team le f\u00e9vr zhou hao notifications githubcom \u00e9crit zamrokk find solution already reply email directly view github", "d": "2/2016"}, {"body": "workaround zamrokk", "d": "2/2016"}, {"body": "get constructor component look like", "d": "2/2016"}, {"body": "ok wrap call inside zonerun like use zonerun without passing constructor", "d": "2/2016"}, {"body": "yes workaround works dataurl fileurl wo nt work maybe src nt recognise local device path thanks zamrokk", "d": "2/2016"}, {"body": "ok made worked full code export class smartscan", "d": "2/2016"}, {"body": "zamrokk sorry html attachment related html img element mine passed url using fileurl wo nt work works use dataurl", "d": "2/2016"}, {"body": "export class attachment constructor public id number public url string smartscan test attachment url assign new expense trip assign existing expense", "d": "2/2016"}, {"body": "basically like wrapped url object returned url file nt know shown", "d": "2/2016"}, {"body": "maybe try android see difference thanks", "d": "2/2016"}, {"body": "welcome", "d": "2/2016"}, {"body": "encountering error", "d": "2/2016"}, {"body": "small shim like gets around missing classlist classlist documentcreateelementns var descr objectgetownpropertydescriptor htmlelementprototype classlist objectdefineproperty svgelementprototype classlist descr suggestiing solution interesting thing shim place svg rendering works performance slow", "d": "2/2016"}, {"body": "setting enableprodmode makes huge difference", "d": "2/2016"}, {"body": "want modify angular sources include reproduction problem minimal application observable run version angular really easy right build system complicated ca nt reproduced simple command line", "d": "2/2016"}, {"body": "please reopen still looking guidance", "d": "2/2016"}, {"body": "solved", "d": "2/2016"}, {"body": "updated codepen example still broken", "d": "2/2016"}, {"body": "thanks reporting", "d": "2/2016"}, {"body": "updated codepen example still broken", "d": "2/2016"}, {"body": "use ngif odd even", "d": "2/2016"}, {"body": "tried ngif odd", "d": "2/2016"}, {"body": "zoechi thanks working", "d": "2/2016"}, {"body": "obsolete ensure semantics codegen interpretative mode", "d": "2/2016"}, {"body": "similar", "d": "2/2016"}, {"body": "numbervalueaccessor currently returning nan tries parse empty string", "d": "2/2016"}, {"body": "think normal numbervalueaccessor returns nan text entered input empty job convert string number nan value appears appropriate", "d": "2/2016"}, {"body": "vicb right css case sensitive html attributes css case insensitive matters control however things document markup language beyond control html case insensitive respects except comes certain attribute values like id class attributes see pen selector styles applied elements", "d": "2/2016"}, {"body": "cristinecula right mhevery think", "d": "2/2016"}, {"body": "vicb could reopen issue please", "d": "2/2016"}, {"body": "also valid use case please check", "d": "2/2016"}, {"body": "revisit post rc", "d": "2/2016"}, {"body": "think needed add nt dependency actually depends specific version", "d": "2/2016"}, {"body": "problem", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "okay child routes stuff multiple sections website want build app upon use pathlocationstrategy time angular could simply add state options like article id url would handle urls multiple segments article id could sectionsectionsectionarticle id sectionarticle id supposed create route configuration particular case dont care goes data segment original url need url", "d": "2/2016"}, {"body": "see issue closed question wondering someone answer situation follows want user logged verify going applications pages use decorator achieve checking logged sending another route problem would mean would reimplement logic since go deeper one level question something like possible angular using uirouter possible", "d": "2/2016"}, {"body": "schippie one approach could look", "d": "2/2016"}, {"body": "captaincodeman would answer one questions though answer second part tied almost applications build login forgottenpassword pages differentiate substantially pages pages generally sidebar header content area angular seem possible something like example basecomponent contains html plumbing code associated directives real way would transcluded component would insert turn renders content block within page though assuming would rerender entire html page every page change", "d": "2/2016"}, {"body": "schippie yeah sounds like describing named views uirouter initially thought named outlets component router never got work way actually ended routed toplevel components include sidebar pieces time probably matter features knowhow developed discovered", "d": "2/2016"}, {"body": "schippie canactivate decorator base component child routes protected canactivate also nt need put logic every child route want protect nothing stopping going deeper one level routeconfig difference terminate route somewhere ca nt end indicates child routes associated simple example example child route protected parent route", "d": "2/2016"}, {"body": "brandonroberts thank clearing one read first comment well think major derp moment hehe sorry astonished captaincodeman indeed named uiviews would also part want generally replace one uiview substate instead forced show content within sub routeroutlet going experiment tonight", "d": "2/2016"}, {"body": "typescript old nt include required typecheck angular least", "d": "2/2016"}, {"body": "running similar issues well looking angular adoption grows become problem large websites angular apps sort angular mixed server rendering form migration angular would difficult without support using angular universal great option already large application place looking examples pure angular spa another use case ran create spa behind login wall public facing views another server stack ca nt reuse components angular recreate components different js lib support running pre rendered views ideally would beneficial able bootstrap body tag without replacing pre rendered content similar angular", "d": "2/2016"}, {"body": "splintercode pretty much boat spa behind authentication authorization public walboard ish views really would beneficial conversion process us large applications", "d": "2/2016"}, {"body": "think point ewinslow trying make clear exactly display link documentation explaining necessary", "d": "2/2016"}, {"body": "even docs", "d": "2/2016"}, {"body": "latest beta able mute message production jasonslyvia prodmode makes sure change detection run per browser event wo nt cycles devmode default cd performed twice double check nt written code side effects", "d": "2/2016"}, {"body": "try", "d": "2/2016"}, {"body": "pascalprecht thanks explanation find info change detection", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "closing dupe", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "mistake", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "kasperpeulen add pubspecyaml get behavior right ts version right", "d": "2/2016"}, {"body": "yes closing", "d": "2/2016"}, {"body": "related guess", "d": "2/2016"}, {"body": "kylecordes think bug tools like webpack take wellformed html optionally minify according permissible html spec produces smaller js files example string perfectly valid html case webpack produced string html file attribute quotes indentation whitespace string perfectly usable browser angular components angular need enforce specification morestrict html spec", "d": "2/2016"}, {"body": "uglow think create new issue quotes around attribute values", "d": "2/2016"}, {"body": "found problem comes starting liteserver use centos nt solved issue decided use apache webserver instead liteserver corrected packagejson deleting npm run lite start local apache web server starts tsc watcher work simillar tuto prefer project dir instead packagejson name version scripts tsc tsc tsc w tsc w lite liteserver start concurrent npm run tsc w license isc dependencies systemjs reflectmetadata rxjs zonejs devdependencies concurrently liteserver typescript", "d": "2/2016"}, {"body": "solved centos reason gulpwatcher need memo add string restart os", "d": "2/2016"}, {"body": "thanks also fixes ubuntu lts", "d": "2/2016"}, {"body": "solution ubuntu", "d": "2/2016"}, {"body": "typescript changed introduced need specify code angular project nt stale", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "found advice split things smart components interact services http etc dumb components rendering amp ui interactions works well add routed components decoding parameters navigation distinct category router seem intrusive certain components developed helps limit slightly thinner layer hoping things improve guidance knowhow evolves agree setting parameters would nicer couple things less", "d": "2/2016"}, {"body": "attachviewafter node viewrootnodes", "d": "2/2016"}, {"body": "ciriarte patch solve bug described ribizli problem router compares outermost component child components returns every route root component current route", "d": "2/2016"}, {"body": "modified router example angular doc demonstrate problem click crisis center see crisis center crisis detail really active link displayed active even though latter", "d": "2/2016"}, {"body": "yes resolves issue", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "less risky useful alternative would alternative syntax name properties object eg sugar turns whatever think efficient unique outcome fine blows properties simple js values string number date need part trackby equation dev write custom function", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "tomwayson systemjs supposed use modulename instead moduleid since one commonjs problem modulename parsed modulecontextid modulecontext string modulename value modulecontextid sets undefined anyone solved yet", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "reproduced way tomwayson describes workaround temporarily changed typescriptoptionsmodule commonjs jspm config file project seems work negative impact would love see resolved cleaner manner", "d": "2/2016"}, {"body": "workaround trick anymore since module seems undefined relative paths really must", "d": "2/2016"}, {"body": "found way make compile need create dts file eg shimdts containing reference bootstrap file example still need typescript compilation tsconfigjson option set", "d": "2/2016"}, {"body": "igorminar docs says proposal wo nt implemented new doc take look new proposalthinking router", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "another example quite bit simpler set informed", "d": "2/2016"}, {"body": "issue", "d": "2/2016"}, {"body": "recommendations cleanly however still wrapping could nt get need looks like could end callback trigger cd missing something maybe help one guys", "d": "2/2016"}, {"body": "using media source extensions create audio context based video element use required based audio context trying display info like number channels however ran issue well right way bypass", "d": "2/2016"}, {"body": "elsewheregames hard tell without seeing actual code create plunker", "d": "2/2016"}, {"body": "zoechi nt actual bug report stating accessing dom directly desirable always something avoided response robwormald comment actualy api see docs createmediaelementsource", "d": "2/2016"}, {"body": "get error simply changing tsconfigjson changing module system commonjs make sense", "d": "2/2016"}, {"body": "successfully built tutorial would like offer points messed like matthewharwood also copy pasted wrong code appcomponentsts introduce could add complete code lines like end tutorial also tsd failed install separately say scary error messages red may appear install ignore install succeed see appendix information know trying cute install nt succeed ignored messages would nt succeeded important read throw google search landed beyond reasonable quick start exciting stuff", "d": "2/2016"}, {"body": "anyone please help getting error error namelist defined", "d": "2/2016"}, {"body": "hi problem setting based checkbox value see example", "d": "2/2016"}, {"body": "want attribute remove value needs", "d": "2/2016"}, {"body": "mh least chrome see removed value checkbox way around see plunker switched using formbuilder custom validator checkbox input model side", "d": "2/2016"}, {"body": "locals map soon go away new codegen", "d": "2/2016"}, {"body": "closing automatically solved via", "d": "2/2016"}, {"body": "answer question found ngmodel nt work properly async updates used inside components tag name without dash ie works fine vote change also", "d": "2/2016"}, {"body": "hi guys idea would fixed using issue still", "d": "2/2016"}, {"body": "need fix bug", "d": "2/2016"}, {"body": "figured fix bug figured would post case others might want know happened go scroll read unsafe eval basically need add one line manifestjson order run unsafe code eval", "d": "2/2016"}, {"body": "alextappin work chrome apps thought could relax extensions", "d": "2/2016"}, {"body": "ah sure think right issue chrome extension", "d": "2/2016"}, {"body": "alextappin alexpaluzzi yep possible chrome app", "d": "2/2016"}, {"body": "kleak yup angular needs stop using unsafe eval contribute chrome web store", "d": "2/2016"}, {"body": "right use get easier js interop revisit", "d": "2/2016"}, {"body": "perfect glad see work done", "d": "2/2016"}, {"body": "tbosch idea revisit", "d": "2/2016"}, {"body": "vsavkin guess lodash would seem suitable implement proposed pipe generalized handle objects nested structures well sure actually implement though proposal requires comparing previous value docs nt aware info available pipes miss something otherwise robianmcd pure pipe help well", "d": "2/2016"}, {"body": "problem slicepipe", "d": "2/2016"}, {"body": "please issue assessed prioritized although workaround redefining routerlink something badly impacts ux affect almost everyone", "d": "2/2016"}, {"body": "seems like something caretaker take since think impact would internal maybe caretaker label", "d": "2/2016"}, {"body": "lack support routing nice workaround lack support huge mistake whole framework looks like something randomly crafted really designed thanks things like components used pure ui composition differ components used routes quite lot implications consider problem one needs decide component build pure ui composition composition router totally agree nt much difference maybe except believe current router tries much rule component world creates components destroys navigate believe router navigate also vote addition something would allow configure component inputoutput params routeconfig annotation sounds like fixing got sure minimum btford read responsible router could refer topic somehow plans respect router", "d": "2/2016"}, {"body": "access child component created router subscribe child events use viewchild allproducts allproducts ngafterviewinit thissubscribetoevents thisrouterparentsubscribe gt thissubscribetoevents private subscribetoevents thisallproducts thisallproductsproductrowdoubleclickedsubscribe pid gt thisopenproducttab pid component", "d": "2/2016"}, {"body": "crossposted workaround given mentioned original issue error using perhaps others would know existing threads one already solved newer versions", "d": "2/2016"}, {"body": "let types extend generic class implement interface also really need creating form custom components like mytext myselect myswitch etc want get formgroups", "d": "2/2016"}, {"body": "could add template variable everywhere use instead type", "d": "2/2016"}, {"body": "also would find useful use case thus reusable library component default template want user able provide template desired component template looks like html user either use like like currently way find whether arbitrary html elements inside element since query angular components template variables currently rely user adding variable somewhere custom template query via clumsy seem optimal", "d": "2/2016"}, {"body": "michaelbromley alterative would allow default content added children user component nt passed content shadow dom tag works afaik checked since might changed since", "d": "2/2016"}, {"body": "update issue still problem import also able find quick fix would anyone mind tell fixes problem result compile compile", "d": "2/2016"}, {"body": "typings fix problem contributes additional types cant remove fix coming make yesterday partly need rxjs release thu feb jonathan serra notifications githubcom wrote update issue still problem duplicate identifier import also able find quick fix typings would anyone mind tell typings fixes problem typings init upgrade typings install result duplicate identifier compile compile grunt ts reply email directly view github", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "definitely biting project", "d": "2/2016"}, {"body": "internal", "d": "2/2016"}, {"body": "expose typings package users optionally reference get typings however able choose runtime polyfill like including corejs however still peerdependency also think right instead require applications bring shim runtime", "d": "2/2016"}, {"body": "removing dependency", "d": "2/2016"}, {"body": "updated npm using npm install npm g still getting error op current npm ver", "d": "2/2016"}, {"body": "closing one favor since removing remaining task applied labels milestone issue mhevery applied seems like good task caretaker rotation", "d": "2/2016"}, {"body": "looks like fixed", "d": "2/2016"}, {"body": "awesome pants", "d": "2/2016"}, {"body": "confirmed fix groovy stuff", "d": "2/2016"}, {"body": "updates", "d": "2/2016"}, {"body": "afaik robwormald news", "d": "2/2016"}, {"body": "dup dup", "d": "2/2016"}, {"body": "also problem currently seems happen using styleurls well", "d": "2/2016"}, {"body": "try use injectasync inject nt work test always pass mine works well spec file reference", "d": "2/2016"}, {"body": "templateurl nt work edit works used karma configs using full path templateurl", "d": "2/2016"}, {"body": "julie looks like issue fixed reports indicate still present think", "d": "2/2016"}, {"body": "think closed implemented", "d": "2/2016"}, {"body": "robwormald", "d": "2/2016"}, {"body": "posted question stacko ran situation service able provide providers sure manfully via injectorresolveandcreatechild would expect elegant solution via something like providerself something sort ps tx zoechi providing discussion link regards sean", "d": "2/2016"}, {"body": "service nt injector ca nt providers surely nt want service required injector property angular component knows injectors services instantiated anyways", "d": "2/2016"}, {"body": "pascalprecht seems nt see demand prevents lot di first place nt say easy quite limitation", "d": "2/2016"}, {"body": "pascalprecht service injected component could reuse component injector service able give provider component injector call piggybacking feature", "d": "2/2016"}, {"body": "service use components injector think ive written two services injected level component define providers token different values wins right nt know ca nt know tue feb pm yakov fain notifications githubcom wrote pascalprecht service injected component could reuse component injector service able give provider component injector id call piggybacking feature reply email directly view github", "d": "2/2016"}, {"body": "pascalprecht recently read blog post one respected angular developer case multiproviders last one wins read post", "d": "2/2016"}, {"body": "zoechi see demand feeling nt seem clear di system works prevents lot di first place di injecting dependencies constructor clearly question injects objects created angular di system comes play nt say easy quite limitation exactly limitation", "d": "2/2016"}, {"body": "read post yfain said demand people nt understand di system get wrong recently read blog post one respected angular developer case multiproviders last one wins would require define providers service also make always multi providers clearly requirement nt want introduce despite nt want make providers requirement simple classes anyways right b solve problem whenever use multiple services different dependencies get wrong dependency multi providers", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "cc vikerman", "d": "2/2016"}, {"body": "jasmine asynchronous handling already done seems unnecessary unless missing something", "d": "2/2016"}, {"body": "duplicate identifier problems fixed indicated fixed closing", "d": "2/2016"}, {"body": "even beta bug seems presist nt seem load resource correctly found adding empty regular htmltag works around issues specified id svg loads correctly instead code changed added empty", "d": "2/2016"}, {"body": "feedback suggested workarounds", "d": "2/2016"}, {"body": "enable shadow dom load full polyfills seems solve issues still run issues tried pass example seems different issue", "d": "2/2016"}, {"body": "hi problem setting based checkbox value see example", "d": "2/2016"}, {"body": "boolean properties removed", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "believe fixed note angularprotractordts jquerydts still conflict definition see", "d": "2/2016"}, {"body": "surprised could nt find equalivant angular adding feature", "d": "2/2016"}, {"body": "dart redefined zones", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "thanks answers stuck exactly current solution intuitive another solution tried quite confused worked failed", "d": "2/2016"}, {"body": "nt work well works currently", "d": "2/2016"}, {"body": "would work nt use", "d": "2/2016"}, {"body": "thank true valuable comment", "d": "2/2016"}, {"body": "case someone stumbles upon please refer following issue see use angular router together ngupgrade use angualr router component using ngupgrade", "d": "2/2016"}, {"body": "problem", "d": "2/2016"}, {"body": "blocked new zone implementation", "d": "2/2016"}, {"body": "wanted use dirty workaround access child component emitter related", "d": "2/2016"}, {"body": "experiencing issue couple different examples affecting app plunkr case guys want take look inspiration", "d": "2/2016"}, {"body": "behavior compatible shadow dom tag behavior guess intention shadow dom switching afaik behavior except selectors reduced slot name would interesting angular plans follow movement well", "d": "2/2016"}, {"body": "dup", "d": "2/2016"}, {"body": "reference polymerelementspaperinput", "d": "2/2016"}, {"body": "removed bundling dependencies typings try", "d": "2/2016"}, {"body": "cool thank", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "endre karlson feb pm skrev curlyfro notifications githubcom reply email directly view github", "d": "2/2016"}, {"body": "another suggestion many times sibling routes like cars cars id carsnew even though sibling definition logically id route new route children cars route like takes considerations note reason routes like design limitation router", "d": "2/2016"}, {"body": "choeller use case achievable right point router get injected component root level router childrouter calling router assume relative", "d": "2/2016"}, {"body": "oliverjanik explain mean design limitation router would imagine setting following components scenario ts class carslistcomponent class carsdetailcomponnet class carsnewcomponent routeconfig path component carslist path new component carsnew path id component carsdetail class carscomponent", "d": "2/2016"}, {"body": "petebacondarwin suggested setup require unnecessary routeroutlet carscomponent template turn makes carscomponent completely unnecessary except satisfy router correct", "d": "2/2016"}, {"body": "sure agree component completely unnecessary reusability point view see component feature contains bunch related views without wanted move feature elsewhere app another app would replicate detailed route configuration feature place appears would expect commonality child views di providers directives held feature component would replicated child components otherwise argue extra outlet overhead minimal terms performance verbosity", "d": "2/2016"}, {"body": "understand point angular suffers heavily second system syndrome yet another manifestation time need simple use case yet move feature component somewhere different location often think happens navigation visual hierarchy usually decided quite early project development nested routes eg effect compounds get extra outlets nt measured performance good sorry thread hijack", "d": "2/2016"}, {"body": "oliverjanik exactly want happen want use component hierarchy define breadcrumb hierarchy back using url current url available via subscription remember correctly able take url parse self identify breadcrumbs", "d": "2/2016"}, {"body": "core problem router designed worked quite well ui router using abstract routes", "d": "2/2016"}, {"body": "really saying would like abstract routes", "d": "2/2016"}, {"body": "brandonroberts close issue satisfied injecting injector traversing manually think sufficient solution router tree coexisting component tree solution require mix trees together think would much nicer object would parent property refers object next higher configured component way need reflect route configuration tree component tree", "d": "2/2016"}, {"body": "currently see following solutions inject parent component obtain route parameters stored parent component closely couple component parent component might best thing inject injector travers found injector might contain routeparams im looking solution closely coupled component tree structure might change also need make changes way find params approaches really ideal parent property route params object would nice second approach could come something like javascript getallrouteparams injector let params null injector const routeparams injectorgetoptional routeparams routeparams params null params else params objectcreate params would least decopule component injector tree provide hierarchy prototypes shadowing possible parameter name overlaps", "d": "2/2016"}, {"body": "gionkunz ultimately satisfied solution would like also think couples components together much route components nt explicit knowledge parent think logic router second approach would would work well also would run problems routes parameter names like parent route child route though maybe thing build params object traversing injector tree", "d": "2/2016"}, {"body": "well paramsprotoid running shadowing problems", "d": "2/2016"}, {"body": "another option nt want get injector involved subscribe root router get full instruction route traverse instruction children get params also think closer want far coupling injectorcomponent tree using router tree js singleton service storing router information injectable export class routerstate current instruction last instruction params new eventemitter constructor public router router subscribe router url updates routersubscribe gt get current instruction thisgetinstruction thisgetallparams getallparams let params let instruction thiscurrent private getinstruction store current route instruction thislast thiscurrent thiscurrent thisroutercurrentinstruction current return current instruction return thiscurrent last return last instruction return thislast", "d": "2/2016"}, {"body": "good stuff although still workaround", "d": "2/2016"}, {"body": "seeing well reason control pristine field nt become false second change", "d": "2/2016"}, {"body": "petebacondarwin coming router", "d": "2/2016"}, {"body": "let", "d": "2/2016"}, {"body": "nice store states capacibilities", "d": "2/2016"}, {"body": "hdeshev adhoc workaround currently option besides one issue opened", "d": "2/2016"}, {"body": "yup thanks tbragaf issue", "d": "2/2016"}, {"body": "tbragaf thanks helped", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "could reproduce issue also internal test case compiler quite bit issue old please reopen good reproduction case", "d": "2/2016"}, {"body": "hitting workaround", "d": "2/2016"}, {"body": "regression real plunkr forked landing pages added first first controllercomponent core chew second anything", "d": "2/2016"}, {"body": "sod example using compile step done browser easy get going playing around code production setup suggest thing compile project example use webpack typescript compiler webpack optimizations use service workers caching wait precompiled template stuff ready see improvements personally could nt care less startup times care use server side initial rendering anyway", "d": "2/2016"}, {"body": "removed compile step", "d": "2/2016"}, {"body": "sod use realworld example code making http requests even start bootstrap process also inbrowser transpiling use setup anything regarding performance measurements suggest try build step compilation bundling also put angular production mode default development mode", "d": "2/2016"}, {"body": "ok thx tipp tried prod mode load bootstrap takes yet able achive performance systemjs jspm bundle", "d": "2/2016"}, {"body": "sod great stuff angular core team gets build time compilation templates gon na see even much faster startup times great also production would recommend looking service workers way cache client code subsequent visits webapp start less instantly great times ahead", "d": "2/2016"}, {"body": "considering well following train thought correctly currently directive point could add button like still feel awkward well since imagine common usecase would say one blueprint baked add control clicking button feel inclined subclass noparam take blueprint constructor corresponding directive use template could perhaps allow specifying parameter well assuming would facilitate majority usecases people resorting though would nice see something like supported angular well optional constructor parameter higherlevel subclass could use feedback though bad angular team seems swamped number outstanding issues", "d": "2/2016"}, {"body": "simplified xesued reproduction custom pipe appears needed ensure ngfor keeps unused branch tries destroy pipe nt get initialized nt able reproduce ristaaf optional pipe though bit confused though since xesued example ngfor branches get used different entries common thread seems sorta clear crash occurs due ending think could patched follows debugging also tried add print statement parent stack level selectedpipe turned trouble locally running tests verify null check fixes issue without messing things though perhaps someone else would able try edit clarify nt verified suppressing error makes things work desired code still unrelated error already getting code well plunker sure alter code like nt actually seen result", "d": "2/2016"}, {"body": "found workaround issue able confirm check indeed appear address issue would nt know right module believe test fix could potentially look follows import component import ngswitch ngswitchwhen ngswitchdefault jsonpipe component selector directives ngswitch ngswitchwhen ngswitchdefault jsonpipe template export class switchpipecomp constructor thisval appreciate help though", "d": "2/2016"}, {"body": "hi pkozlowskiopensource understand point see would complicated di intercept chain constructors chain classes superclasses cajoy point far understand interceptors filters whatever call case canonical way address crosscutting concerns coming readily mind mention logger would leave trace component ngoninit hook authentication brick would redirect login page try access given protected component java would use aop ruby would put beforeaction filter http stack top parent controller things found like cajoy guess super class needs parameters like router means component extending handle super constructor bit cumbersome attribute directive add templates like share insights please missing something stuck mentioned solutions thanks", "d": "2/2016"}, {"body": "maybe", "d": "2/2016"}, {"body": "zoechi interesting would rely typescript compiler though framework guess works would recommended though discussion arguments subject community sure problem everyone gains speed community canonical answer", "d": "2/2016"}, {"body": "gbataille crosscutting concerns relevant everyone probably bit exagerated webdevelopment area interested topic priority nt high using dart ts therefore ts solutions wo nt work anyway currently want something global inject service call methods dart could build transformer probably would work similar like aspect tool linked nt involve angular nt seen discussions topic yet community started weeks ago", "d": "2/2016"}, {"body": "zoechi yes agree nt generally like magic got recently frustrated ruby dynamic method generation hard follow without filters aop like pattens good thing everything clean understand wiring explicit easy follow feels bit old something components like constructor argument passing really wondering simply missing something possibly clean way must say set wanted get feel people might think case stick constructor explicit pattern build app", "d": "2/2016"}, {"body": "constructing new class instances quite difficult lots pitfalls therefore constructors cumbersome parts application", "d": "2/2016"}, {"body": "came accross issue best solution probably go composition inheritance abstract class helper use let say build request send request something like js class requestmanager constructor http methods class service constructor requestmanager requestmanager methods make sense", "d": "2/2016"}, {"body": "yup authhttp angularjwt lib exactly needed redirect logged kind logic wednesday february tbragaf notifications githubcom wrote came accross issue best solution probably go composition inheritance abstract class helper use lets say build request send request something like class requestmanager constructor http methods class service constructor requestmanager requestmanager methods make sense reply email directly view github", "d": "2/2016"}, {"body": "templatejsx never liked idea xml javascript put xml javascript keep separate file however typed including atom visual studio ide benefits find symbol reference rename symbol syntax highlighting auto indent etc css designer accidentally corrupts javascript fragment html template typescript compiler notify etc", "d": "2/2016"}, {"body": "issue solving typescript project see comment", "d": "2/2016"}, {"body": "using typescript templates strongly typed tsx helps prevent errors provide better development experience tsx template support", "d": "2/2016"}, {"body": "smiley", "d": "2/2016"}, {"body": "unlike politicians afraid say changed mind jsx using typescript jsx tsx pleasure recent react project typed html really great", "d": "2/2016"}, {"body": "see typed html actually html coming soon angular near", "d": "2/2016"}, {"body": "great also possible linked html templates via templateurl nt understand closing issue typing thing jsx one", "d": "2/2016"}, {"body": "robwormald great jsx", "d": "2/2016"}, {"body": "tsx general jsx benefits limited editor intellisense syntax coloring personally like way jsx naturally eliminates runtime parse ast generation comparing current angular template parsing even future build time template compilation please forget invented react team think angular team support incentive react community migrate proposed jsx specification", "d": "2/2016"}, {"body": "like typescript extensibility going see day typescript drops jsx stuff move extension saw issue referenced better jsx actually jsx pitfalls like keyword conflict sure typescript team working going better nt really ask angular team support jsx", "d": "2/2016"}, {"body": "agree typescript extensibility cool nt really ask angular team support jsx", "d": "2/2016"}, {"body": "malekpour solved programming language level", "d": "2/2016"}, {"body": "right solved programming language level fact already solved tsx supported typescript regardless typescript extensibility help development time value type remain needs parsed analysed runtime value ready use object function", "d": "2/2016"}, {"body": "value type template remain string needs parsed analysed runtime true already pr open compile templates part build step instead runtime", "d": "2/2016"}, {"body": "true already pr simply true unless postcompile templates additional build step", "d": "2/2016"}, {"body": "nt exactly know typescript extensibility work angular hope going better tsx two issues tsx think new proposal fix instead allowing syntax within template currently tsx impossible something like", "d": "2/2016"}, {"body": "tsx use instead line jsbin shows easily tsx template works", "d": "2/2016"}, {"body": "yes aware thank gist though", "d": "2/2016"}, {"body": "maybe missed something case sorry point view angular runtime analyze templatestring templateurlfile order composite component tree analyze means convert string javascript representation object tree something similar tsx parsed javascript object tree typescript compile time could another representation angular template maybe wrong solving microsofttypescript issue must much difficult using javascript object tree another angular template representation besides microsofttypescript ideal solution solves issues refactoring intellisense etc solve another huge benefit jsxtsx approach functional nature template function opens templating possibilities bound typescript think template function bit different jsx like templates angular created new issue angular orientation typescript together angular one framework concept one main reasons left react angular thing missing strictly typed functional templates thanks malekpour many excellent arguments supporting tsxjsxfunctional templates idea believe angular team listen", "d": "2/2016"}, {"body": "mhevery reassigned milestone since already released", "d": "2/2016"}, {"body": "reported anyone know bug feature handle", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "make sense simply port encodeuriquery function angular use encode keys values", "d": "2/2016"}, {"body": "jmsegrev yes experience seems original problem fixed auxroute open reloading page leads", "d": "2/2016"}, {"body": "also seen typeerror read property child null seems happen try define aux route child route aux route root level seems work root message works rootchild message gives typeerror read property child null however noticed activate aux route rewrites links page also contain aux parameter might due configuration issue end way defeat aux route manually remove url redirect code", "d": "2/2016"}, {"body": "thelgevold choeller currently aux routes work either root level routes without root level route way aux routes working design intended remain active even visit router link nt specifically aux route array", "d": "2/2016"}, {"body": "brandonroberts ok thanks explanation one question though remain active routes activating route remove aux part want navigate section wanted", "d": "2/2016"}, {"body": "thelgevold good question nt know way outside defeating like said navigate code could use regular href aux route either way working around system think main issue want aux routes work like named uiviews uirouter intent understand suppose work independently normal routes instead addition", "d": "2/2016"}, {"body": "yeah open questions around well started new issue related", "d": "2/2016"}, {"body": "brandonroberts thanks info still sure error bad config side bug tried create auxroute routeconfig nested route get activated correctly causes error reload experience maincomponent taskcomponent route like", "d": "2/2016"}, {"body": "choeller yep seen thing think combination aux routes supported root level route configs need move work reload navigation also seen even aux route root level route config navigate nested route aux routes carried refresh aux routes dropped plunker aux routes", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "got stuck looking forward solution soon", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "already pr", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "outdated closing", "d": "2/2016"}, {"body": "issue", "d": "2/2016"}, {"body": "issue fixed still experiencing issues please post full error text also make sure importing anywhere code base paths problematic removed soon", "d": "2/2016"}, {"body": "issue", "d": "2/2016"}, {"body": "issue", "d": "2/2016"}, {"body": "got stuff working added typings filesglob inside tsconfigjson", "d": "2/2016"}, {"body": "diegoyungh workaround nt work explain intention fix", "d": "2/2016"}, {"body": "digitaldonkey typings issues seeing typescript ca nt find angular imports need include entry point array tsconfig file please post full error get ts compiler see related issue", "d": "2/2016"}, {"body": "ca nt promise right problem look gulp webpack using gulpfile starting clean finished clean ms starting webpack tsloader using typescript throw er unhandled stream error pipe error error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name error find name map packagejson name ethtweetui version description author thorsten krug main scripts start node server build gulp build dependencies devdependencies del express gulp gulpautoprefixer gulpconcat gulpcssnano gulphtmlreplace gulphtmlmin gulpuglify livereload reflectmetadata rxjs systemjs tsloader typescript webpack webpackstream zonejs tsconfigjson version compileroptions emitdecoratormetadata true experimentaldecorators true target module commonjs removecomments true sourcemap false exclude nodemodules using yo", "d": "2/2016"}, {"body": "digitaldonkey still importing path", "d": "2/2016"}, {"body": "also add files call bootstrap render bootstrap app bootstrap files array tsconfigjson file", "d": "2/2016"}, {"body": "found occurrence source angular actually clue happening l l", "d": "2/2016"}, {"body": "compiler error original question buf setting compiler target solves lot remain errors solve error find name zone error find name browsernodeglobal anybody tell zone interface", "d": "2/2016"}, {"body": "digitaldonkey import paths still nt use issues removed soon information writing webworker code check docs tl dr nt import instead import directly import worker specific symbols", "d": "2/2016"}, {"body": "occurrence project folder guess importing might different issue reproduce thank help guess problem lies somewhere else", "d": "2/2016"}, {"body": "possible issue connected reflectmetadata see comment", "d": "2/2016"}, {"body": "encountering errors importing webworker", "d": "2/2016"}, {"body": "niclasebs problem today fix able find setting dependency exact version", "d": "2/2016"}, {"body": "definately broken", "d": "2/2016"}, {"body": "adding beginning bootts call work check current changelog breaking changes", "d": "2/2016"}, {"body": "akimi", "d": "2/2016"}, {"body": "akimi", "d": "2/2016"}, {"body": "akimi", "d": "2/2016"}, {"body": "akimi", "d": "2/2016"}, {"body": "akimi", "d": "2/2016"}, {"body": "akimi", "d": "2/2016"}, {"body": "akimi", "d": "2/2016"}, {"body": "akimi thanks", "d": "2/2016"}, {"body": "looks like issue closed anyone still problems latest release related breaking changes beta please open new issue description reproduce", "d": "2/2016"}, {"body": "akimi", "d": "2/2016"}, {"body": "akimi add reference path every file file call bootstrap", "d": "2/2016"}, {"body": "akimi thanks", "d": "2/2016"}, {"body": "changelog", "d": "2/2016"}, {"body": "akimi thanks", "d": "2/2016"}, {"body": "looking tutorial came across bug playing sample code working chrome firefox edge", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "ca nt use select maybe use radio buttons oh wait broken", "d": "2/2016"}, {"body": "course use easy wanted expected use string property component way binding view additional change listener picks corresponding object list available objects snippets private repositories repository private selectedrepositoryname string private selectedrepository repository private onrepositoryselected thisselectedrepository thisrepositoriesfind repository gt repositoryname thisselectedrepositoryname", "d": "2/2016"}, {"body": "could get hack slintes work first interesting note order ngmodel ngmodelchange important reference using", "d": "2/2016"}, {"body": "confirm ngmodel ngmodelchange select working firefox edge plans fixing", "d": "2/2016"}, {"body": "oh right tested chrome", "d": "2/2016"}, {"body": "firefox ie select bug separate issue", "d": "2/2016"}, {"body": "update issue trouble called successfully primary component child component nt seem work routed parent component", "d": "2/2016"}, {"body": "might caused", "d": "2/2016"}, {"body": "issue click link first time template shows binding occur click link bindings working", "d": "2/2016"}, {"body": "important critical use cases application", "d": "2/2016"}, {"body": "see", "d": "2/2016"}, {"body": "duplicate recently fixed", "d": "2/2016"}, {"body": "solved via waiting land", "d": "2/2016"}, {"body": "fwiw disagree decision throw error many developer suffer easy mistakenly invert syntax order compromise ease development burden logging warning supporting syntaxes mentally interpret mean twoway data binding could valid interpretation apologies advance commenting closed issue", "d": "2/2016"}, {"body": "lol boxed bananas even thing documentation", "d": "2/2016"}, {"body": "particularly interested pathlocationstrategy especiall regarind question posed evanplaice hashed path includes anchor link handled anchor need encoded redirect right url rewrite working facing issue describe angular href goes back root idea multiple events generated described original issue sure decide keep pathlocationstrategy default document make work even url rewrite might common thing setup apachenginx little stump hash issue since resolution applicable anyone knows solve please let know thanks", "d": "2/2016"}, {"body": "describe might also bug case please let know open new issue", "d": "2/2016"}, {"body": "think server maintainers motivated support pushstate default google already deprecated support good ideas point new users right direction would great though easily reported issue new users run soon add routing first example", "d": "2/2016"}, {"body": "zoechi major argument comments functionality implementationspecific detail backend app run wholeheartedly agree comes production environment also think tool provided handle functionality development development environment would also useful provide tooling makes easy develop frontend development without backend suggest extending functionality question tool recommended documentation already added pr support functionality prior change enough demand feature consider submitting pr changes project redirecting indexhtml easy detaching path reattaching hash fragment also difficult problem set use nt know detect route path attached hash fragment code provided work actually use production site runs serverless bucket unfortunately requires copying following snippet constructor main application component javascript export class maincomponent constructor inject location location resolvehashurl location function resolvehashurl location let hash locationplatformstrategyplatformlocationhash hash let path hashsubstring consolelog redirectto path locationgo path would ideal implement new location provider could used override development either way broken redirect nature running without sufficient backend continue baffle new users specifically nt understand backend development", "d": "2/2016"}, {"body": "evanplaice apologize advanced lack backend development knowledge however ca nt seem see solution provides already working plain rewrite least problem issues going foobar since works fine pathlocationstrategy plain rewrite indexhtml apache problem described op issue foobar href foobar cause navigation event foobar nt take id foobar within page might bug andor configuration issue nothing hashlocation vs pathlocation maybe missing configuration solution nt address problem maybe nt address solution problem", "d": "2/2016"}, {"body": "problem occurs somebody navigates side using inbound link ex bookmark application loads server redirect indexhtml rest url lost instead rewrite reattaches rest path hash fragment application follow route bootstraps course would break inbound link contains hash anchor needs way escape escape load", "d": "2/2016"}, {"body": "evanplaice actually problem much concern plain href plain page like problem nt work currently using pathlocationstrategy", "d": "2/2016"}, {"body": "oh nt realize escaping anchor links would non issue nt work anyway suppose anchor links probably fall domspecific category wonder going provide feature replacement", "d": "2/2016"}, {"body": "people problem went back old school way make work function pointer class change cursor back href since cursor without href fixes since documentlocation right url example historypushstate nt lead back foobar instead foobar elegant job agree evanplaice something provided framework like scrollto would ideal", "d": "2/2016"}, {"body": "still issue formdirectives implicitly loaded least", "d": "2/2016"}, {"body": "issue downloaded worked fine", "d": "2/2016"}, {"body": "note sha commit buildonly run travis succeeded already eg recent snapshot", "d": "2/2016"}, {"body": "think releases separated stability need stable latest labels", "d": "2/2016"}, {"body": "piggy back top component method router could capture component wrap function also registers component router knows call could also remove need search dom controller", "d": "2/2016"}, {"body": "piggy back top component oninit method router could capture component oninit wrap function also registers component router knows call routeronactivate could also remove need search dom controller nope nt work still need told component instantiated", "d": "2/2016"}, {"body": "another possibility hook api protractor uses know xhr requests settled ie completed", "d": "2/2016"}, {"body": "one possibility somehow expose templateurl request promise link function returned hook work full async compilation completed", "d": "2/2016"}, {"body": "hi petebacondarwin fix issue angular router yet cheers khoa", "d": "2/2016"}, {"body": "yes landed get running", "d": "2/2016"}, {"body": "oops wrong yet landed npm", "d": "2/2016"}, {"body": "thought fix pushed npm time soon", "d": "2/2016"}, {"body": "rebased fixed formatting issue think btford merge wakes tomorrow hopefully publish straight disttag latest meantime able build router pr want try", "d": "2/2016"}, {"body": "thanks petebacondarwin", "d": "2/2016"}, {"body": "btford able push fix isuee npm", "d": "2/2016"}, {"body": "fix available npm yet timeline happen", "d": "2/2016"}, {"body": "yet released timeline next days believe", "d": "2/2016"}, {"body": "merged master", "d": "2/2016"}, {"body": "trying find registry information angularrouter nt understand syntax nothing find npm registry repository tags mentioning old anyone clarify explain find package information npm registry thanks lot", "d": "2/2016"}, {"body": "right versions npm useful latest prerelease working cut latest able get via npm npm repository website nt like scope modules eg starting get registry information running repository obselete ignore", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "true explanatory dom deficient perhaps angular make special case exception paper crack", "d": "2/2016"}, {"body": "find extensive explanation nt think angular something special error message could point right direction intended bind attribute use attrcolspan instead", "d": "2/2016"}, {"body": "related vs angular inconsistent surprised see mhavery defend glad resolved", "d": "2/2016"}, {"body": "news topic", "d": "2/2016"}, {"body": "longer view reuse", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "route outlet obviously used propagate bindings instantiated components routeconfig specifying", "d": "2/2016"}, {"body": "issue close kara merged pr", "d": "2/2016"}, {"body": "usage template element ngfor", "d": "2/2016"}, {"body": "hi mhevery kara would make sense change trackby syntax like angular even angular event handlers mean making function call instead function definition example kara put simplified simple property accessor simply index reference likely common usage scenario call nt create functions worked polymer create functions everything bit silly good suggestion think create new issue thanks lot awesome work angular update realise might change order evaluated identifiers loop item index etc defined already sure simple even feasible may sure hope deal breaker", "d": "2/2016"}, {"body": "fixed", "d": "2/2016"}, {"body": "fixed", "d": "2/2016"}, {"body": "would also love cors support", "d": "2/2016"}, {"body": "yes would nice flag", "d": "2/2016"}, {"body": "stumbled upon problem hope resolve soon", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "brandonroberts thanks plunker would prefer inject services bootstrap good work around", "d": "2/2016"}, {"body": "brandonroberts hi try use plunker always end resolve parameters function injector make sure parameters decorated inject valid type annotations function injector decorated injectable error read property getoptional undefined zonerun promise internal trycatch promise internal invokecallback promise internal publish promise internal publishrejection anonymous function promise asap flush ideas somebody facing issue", "d": "2/2016"}, {"body": "swunderlich tried plunker worked fine error means requested something nt provided dependency injection injector workaround uses providers bootstrap nt placed wo nt able get using injector make plunker error able diagnose better", "d": "2/2016"}, {"body": "brandonroberts", "d": "2/2016"}, {"body": "swunderlich nt need appinjector bootstrap array need add base href indexhtml section", "d": "2/2016"}, {"body": "brandonroberts got thanks much", "d": "2/2016"}, {"body": "btford think way provide class canactivate instead pure function pass class injector could used resolving providers also proposal js injectable class authenticated implements beforeactivate constructor public router router canactivate authenticated class protectedroute", "d": "2/2016"}, {"body": "brandonroberts nice idea must feature", "d": "2/2016"}, {"body": "rate scale important ca nt believe like months without resolved least discussed", "d": "2/2016"}, {"body": "brandonroberts going example able inject user service check logged ca nt seem redirect another page properly within canactivate currently trying redirect back homepage url changes correctly seems content never gets loaded page using encountered problem", "d": "2/2016"}, {"body": "keithotto nt seen routerproviders bootstrap array getting errors", "d": "2/2016"}, {"body": "really need proper way detect handle unauthorized access like brandonroberts proposal", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "brandonroberts looks like working nt believe routerproviders injected anywhere else must changed something fixed fact either way able di canactivate", "d": "2/2016"}, {"body": "keithotto cool", "d": "2/2016"}, {"body": "like brandonroberts proposal", "d": "2/2016"}, {"body": "call dummy purpose necessary need use instance injector", "d": "2/2016"}, {"body": "nikkwong topmost injector tree contains everything provided application bootstrapped provides access root router whatever global services provided want share throughout application", "d": "2/2016"}, {"body": "brandonroberts awesome thanks fro getting back guess stage something slightly advanced like getting route paramters would nt available correct seems unavailable", "d": "2/2016"}, {"body": "nikkwong get routeparams routeparams provided per component since injector used essentially main app component injector route component nt routeparams", "d": "2/2016"}, {"body": "sure syntax consistent angular syntaxes regular events eg click controlled template would new thing controlled controller saying bad overall deciding longer want handle events template consistent across board looking sugar honestly sure sugar needed already pretty short also prefer another new syntax let try keep event syntax", "d": "2/2016"}, {"body": "timkindberg brevity consistency selector proposal allow catch events nodes existing template initially could generated later", "d": "2/2016"}, {"body": "eoz yes stops regular events like click using similar syntax well would nt normal click events like saying bit odd sudden put onus controller behave way completely unlike anything api yet setting strong precedent go angular always declare properties events html", "d": "2/2016"}, {"body": "timkindberg happened already input output key things angular handy use simple read example first question different selector list elements click template point exact node without id specific class", "d": "2/2016"}, {"body": "eoz input output completely different agree awesome also keeping separation view controller different finding child css selector listening event way close jquery nt even see safe across various platforms said jeffbcross", "d": "2/2016"}, {"body": "timkindberg yes wrong example agree maybe right jqueryprogramming style proposed angular", "d": "2/2016"}, {"body": "timkindberg fact meaning raise concern forgot considering component template component would use declaratively template bind click event vs within component bind click observable matter want consume event observable click nt turn semantics completely side think note nt bother create class button used element selector actually may bad idea proposal something would normally care however another concern unrelated previous feeling well exposing public properties components either exposing leaks whole lot power outside world could called anywhere use protect reason expose read thing instead idea similar expose directly call instead sure best way address concerns thinking loud framework would add method component could call template like would also add method component could use subscribe within component like regarding privacy concerns would still leave possibility misuse could called outside world may little clearer though since one clear api marked component internal use exclusively instead exposing lots every component", "d": "2/2016"}, {"body": "also think adding api component would cause dissonance rest framework support timkindberg proposal simply documenting use case syntax sweet enough cburgdorf regarding concern exposing subjects right enforcing private access would best think level indirection top api best way go concern applicable stuff put make available template guess simple conventions go long way marking prefixed suffixed conscientious developer steer clear abusing private apis even limit enforced", "d": "2/2016"}, {"body": "agree cburgdorf working rx years far expert however always impression use antipattern encouraging use case perpetuate misuse especially newcomers rx imo ideally exposed attempted hacked together inspired mattpodwysocki work angular case works differently original suggestion event still handled template dynamically creates method returns clear find also far optimal also find using selectors code optimal promoting use also optimal imo would perfect possibly contentious addition angular template syntax allows exposing event instead calling method would bind hot component", "d": "2/2016"}, {"body": "problem purely declarative syntax nt allow bind dynamic children component think dynamic tabs stuff ngcontent etc decorator follows pattern", "d": "2/2016"}, {"body": "agree problem solve saying nt like saying different viewchild different pass class token stricter css selector string based event different could make argument done regular old events way eg nt want", "d": "2/2016"}, {"body": "yeah need able pass class token scenario well point way either follows convention", "d": "2/2016"}, {"body": "robwormald ok known version syntax helps bridge gap bit definitely driven point home enough", "d": "2/2016"}, {"body": "agree timkindberg cburgdorf ultimately wmaurer events handled either controller template think consistency important also much experience rx seems used sparingly possible far solution like best createobservablefunction method used angular clean easy understand however agree optimal wmaurer states better solution mind", "d": "2/2016"}, {"body": "alternative calling method would make decorator neatly performs thing could bind either eventemitter unamused preferably element calls observablefunction ngfor would bind metastream eg would nt cover robwormald requirement fo binding events dynamic unknown stuff imo special case maybe special solution could exist special case", "d": "2/2016"}, {"body": "wmaurer like decorator approach", "d": "2/2016"}, {"body": "updates", "d": "2/2016"}, {"body": "getting added back milestone ran issues around day", "d": "2/2016"}, {"body": "user issue output name renamed question initially matched event form", "d": "2/2016"}, {"body": "updates tests verifying use templateurl work tests definitely way preload templates karma speed completely synchronous tests", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "like cases would object array would achieve opaquetoken guess goleafs sure need pass resolves subroutes di provides shared services could access data", "d": "2/2016"}, {"body": "proposal resolvers", "d": "2/2016"}, {"body": "like brandonroberts suggestion currently seems mimic async resolve via canactivate di workaround brandonroberts came months ago movement curious", "d": "2/2016"}, {"body": "news", "d": "2/2016"}, {"body": "feel", "d": "2/2016"}, {"body": "update using macbook air mid ghz intel core mhz like painfully slow ca nt really test things making change cause slow build testing", "d": "2/2016"}, {"body": "danicomas could please post dialoghtml well really understand class dialogcontainer references sorry guess nt get entire host property thing matter", "d": "2/2016"}, {"body": "want keep tag make custom element use attribute selector xxx component selector mybutton", "d": "2/2016"}, {"body": "zoechi thanks answer nt exactly asking sorry aware approach proper solution user components could break behaviorappearance components using element intending use root element even choose selector like table mytable user would know needs use table kind obfuscates view code well since look component attribute within div table whatever secondly produces interface integrity problems imho since could change component selector table another super fancy component user would change view code well wrong example exactly port angular components views even would nt care another wrapping element user component would make sure uses display block style component make style work case divlike behavior appreciated interested host solution danicomas obviously solved problem", "d": "2/2016"}, {"body": "needed remove reflector completely", "d": "2/2016"}, {"body": "got error trying example understand guys already regardless decide current error message coupled tutorial misleading bad specially first trying new version", "d": "2/2016"}, {"body": "tbosch repo working upgrading nt seem exist anymore functionality get moved somewhere else", "d": "2/2016"}, {"body": "yes see replacement", "d": "2/2016"}, {"body": "still able figure make available browser console get listed", "d": "2/2016"}, {"body": "problem known half year tell approximate plans fix week month year never would fix new javascript", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "type removed sometime late alpha please reopen still reproducible", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "nt class codebase", "d": "2/2016"}, {"body": "deleted", "d": "2/2016"}, {"body": "blocked via", "d": "2/2016"}, {"body": "rather solved via", "d": "2/2016"}, {"body": "bug bertrandg dupe solved performance problems tracked closing issue", "d": "2/2016"}, {"body": "news thanks", "d": "2/2016"}, {"body": "still happing", "d": "2/2016"}, {"body": "still happing", "d": "2/2016"}, {"body": "helped date pipe put intl packagejson run added indexhtml helped", "d": "2/2016"}, {"body": "fixed commit", "d": "2/2016"}, {"body": "really old issue one related understand mhevery point ngswitch scenario list type list type list type well know ca nt use created ngfor ca nt put since need switch based item value option create one using ngclass change large list classes put ngswitchwhen template nt feel like right way think better way would list type list type list type instead list type list type list type list type list type list type", "d": "2/2016"}, {"body": "change detectors amp code generation general changed lot obsolete", "d": "2/2016"}, {"body": "longer using view pool view creation fails using view", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "really work working set radio buttons using radiovalueaccessorts adding component directives along formdirectives updated removed code radio buttons longer bound model controls fine missing something else part template", "d": "2/2016"}, {"body": "nt doubt works really appreciate plnkr showing use correctly straightforward update worked prior change nt appear work see presumably secret sauce somewhere missing", "d": "2/2016"}, {"body": "implemented see testcomponentbuilderoverrideproviders testcomponentbuilderoverrideviewproviders", "d": "2/2016"}, {"body": "mhevery feature lost beta transition looks like assigned milestone passed", "d": "2/2016"}, {"body": "good question pebezo interested", "d": "2/2016"}, {"body": "new party also looking implementation described janneromell user types url authenticated interpreted canactivate place check authenticated return false however would also like redirect user login page happens note using real security view filter data secured server", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "remove reflector solve issue well", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "since nt update months information feature going implemented want build serversided pushservice using constant would love much", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "largely done actual control see one remaining idea", "d": "2/2016"}, {"body": "think everything going implemented notes docs comparable custom approaches favor mhevery comment regarding however several cases useful breaking large html templates nt fit component paradigm", "d": "2/2016"}, {"body": "amcdnl", "d": "2/2016"}, {"body": "way dynamicaly including html make part current page components scope really show stopper us using way strict since need specify hard code templatescomponents want include really need true dynamic way like could angular well really need functionality", "d": "2/2016"}, {"body": "trying figure way using accomplish seems nonstarter nt seem way wiring inputs outputs template inject raw component configuration", "d": "2/2016"}, {"body": "jimitndiaye use shared service also shared injecting parent injected child also promise returned allows pass values listen ouputs declarative binding nt supported yet", "d": "2/2016"}, {"body": "need way letting master class select template bind model allows configurable application", "d": "2/2016"}, {"body": "struggled circular di wrapping http service following job use myhttpproviders bootstrap services components get wrapped http injected", "d": "2/2016"}, {"body": "rodrigouroz hi demand like try code work app like instantiationi", "d": "2/2016"}, {"body": "could someone provide basic app example nt implements class love interceptor one problem exactly stefanocke wrote getting http gt http circular dependencies httpinterceptor injects http appts import provide import http import httpinterceptor providers app templateurl buildapphtml prodmode true config providers provide http useclass httpinterceptor export class myapp constructor private http interceptor import injectable import http connection headers request requestoptions requestmethod requestoptionsargs injectable export class httpinterceptor constructor private http somehow nt know include apps providers part import http class pages components", "d": "2/2016"}, {"body": "lordgreg application ignore register classes always get request remove", "d": "2/2016"}, {"body": "lordgreg one take look using injected http extending prefer first compare", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "good reason nt want support complex selectors would great feature though lack feature forces still use jquery support already existing views complex selector based behavior pointed proposal appears bit senseless write behavior existing view components using jquery anything else anyways support complex selectors world would better place least parent gt child selectors", "d": "2/2016"}, {"body": "issue moved angular", "d": "2/2016"}, {"body": "trying implement dropdown component ngmodel ngcontrol getting component implementing plunk fair chance wrong looking code pretty sure twoway binding wo nt actually work expecting still render component", "d": "2/2016"}, {"body": "seems value accessors need registered di basically added got rid error message nt time check component works intented leave exercise", "d": "2/2016"}, {"body": "nt know plunker link taking bit different approach inject component set seems result different approach", "d": "2/2016"}, {"body": "certificate expiry according thawte buy codesigning certificate valid one two years sign code one two years certificate stops working however code sign stays valid ten years get choose long want remain valid signing however since jarsignerexe expiry option know would specify websites refusing update expired ssl certificates want see content override expiry defeating whole point expiry dates however bright side force cost renewed certificates cheaper certificate authority research blinking nuisance though link checking", "d": "2/2016"}, {"body": "pkozlowskiopensource ca nt make work anyone sample systemjs according modulename would work nt parsed modulecontextid undefined since modulecontext evaluates modulename thank", "d": "2/2016"}, {"body": "yea seems back beta", "d": "2/2016"}, {"body": "anyone interested wrote blog post following suggested pipe solution made mhevery", "d": "2/2016"}, {"body": "devguide chapter routing", "d": "2/2016"}, {"body": "guess huge deal long aware limitation guess one application would initialize root level component default data currently would define global variable refer enter angular world specific sample would using server side code indexhtml dynamically create javascript kick angular root component something like assuming using nodejs server side template render dynamic js indexhtml var articleid articleid server side rendering like mustache similar client side sure necessary implement think least valid use case", "d": "2/2016"}, {"body": "spent afternoons figuring nt working going documentation times comparing sample code searching tutorials sample code like thelgevold said huge deal long aware limitation perhaps highlight similar ones documentation knowing limitations may use case also similar example thelgevold provided server end setting number json variables need passed different components work around stack overflow jodytate mentioned interesting appears initially work passing hard coded fixed value new wrapper component component want use nt work case variables set server side via templates sample code thelgevold provided given spring supports entirely server side chances feature used likely", "d": "2/2016"}, {"body": "think pretty obsolete close", "d": "2/2016"}, {"body": "mhevery sorry dig old post known issue mentioned tracked link issue follow looking similar project like original poster", "d": "2/2016"}, {"body": "feature would love see map g attribute solution use case reusable components generate svg programatically using ported another project would like use regular html svg elements example html", "d": "2/2016"}, {"body": "viewpool dropped", "d": "2/2016"}, {"body": "pascalprecht nt know better practice around one solution found use put logic bootstrap component viable approach want keep bootstrap ts thin possible", "d": "2/2016"}, {"body": "rizwanhussainvteams difference running something app bootstrapped running something whenever component initialized multiple times depends use case think closest equivalent would use bootstrap", "d": "2/2016"}, {"body": "surprised see missing feature easy angular directives lot many use cases drive conditional templatesmultiple views might need component data config etc slightly different view something like would great another way deal achieve", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "interested inheritance lot forms common fields functionality could create base class view derive adding remaining fields", "d": "2/2016"}, {"body": "ihateglamour would nt expect happen least soon complex topic place content child insert added content one place different places extended templates polymer tried removed nt given idea difficult build also difficult use involved complexity rather stick composition instead inheritance", "d": "2/2016"}, {"body": "work lets say want validate username field validator function needs return promise inside promise need http call server see email exist cant get work working http call", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "agrees everything baloodevil said angular could ones set metadataformsschema standard", "d": "2/2016"}, {"body": "ilovett issue fixed reposted angular repo provide link issue post problem ca nt find working solution", "d": "2/2016"}, {"body": "got thank repost link", "d": "2/2016"}, {"body": "shipit gun", "d": "2/2016"}, {"title": "vueconfigprefix removed", "body": "hi reason vueconfigprefix removed performance issues order html compliant could set like vueconfigprefix datav nice way make work maybe using jquery selector would change datav v init event ideas thanks", "num": "2415", "d": "2/2016"}, {"title": "todomvc example nt work specified vue packagejson", "body": "specified version throws errors right version would vue however went unnoticed vue source referred indexhtml distvuejs instead nodemodulesvuedistvueminjs line", "num": "2414", "d": "2/2016"}, {"title": "vm dispatch stop propagation mixin", "body": "vuejs guide says default dispatch stop propagating caught first time trouble example html javascript var rtr data function return rt z created function var self settimeout function consolelog start dispatch self self dispatch chg mathrandom vuecomponent navc template test mixins rtr events chg function val consolelog val caught navc var app new vue el app mixins rtr events chg function val consolelog val caught main app see jsfiddle understand chg event fired twice navc main app see two console logs result also tried adding navc event capture difference someone explain nt right use dispatch actual bug", "num": "2412", "d": "2/2016"}, {"title": "allow passing null undefined typed none required prop", "body": "prop declared type validation validation fail passing either null undefined value think type validation occur none required props actual value null undefined passed believe similar issue jsbin demonstrating", "num": "2411", "d": "2/2016"}, {"title": "support collection data types vfor", "body": "situations plain object nt best choise tried render object seems support currently post created help thread forum hope provide syntax iterate data types like example render way html key val", "num": "2410", "d": "2/2016"}, {"title": "vueextend constructor chain", "body": "first thanks sharing really nice powerful tool tried make use typescript classes new components especially gain static testing ts played seems quite ok except one thing constructor chain javascript class testcomp extends vue n constructor consolelog never end n undefined data return test var testcompextend template test eyes vue decorator addition moves functions data around beside point defining new components order make work normal class need able call constructor classes done applied constructor call anymore constructor vue class let normal constructor chain handle looked vueextend seems like super class awareness far see end forcing single call vueinit function nothing happens trick make control constructor behavior extended class todo list", "num": "2409", "d": "2/2016"}, {"title": "proposal vshow add modifier", "body": "first thanks amazing work vue powerful elegant time pretty neat nice add visible modifier suitable name directive indeed default use css property hide element dom unlike element hidden still affecting layout eg html hello html hi", "num": "2408", "d": "2/2016"}, {"title": "boolean attributes draggable truefalseauto", "body": "vuejs version referring upgrading broke drag drop according true valid value attribute draggable steps reproduce using working fine changes rendered renders wrong working workaround renders close issue works designed wanted leave least workaround issues", "num": "2407", "d": "2/2016"}, {"title": "need outerhtml polyfill svgelements edge ie", "body": "fragmentfactory would break working svg elements tries cache element ie msedge due lack support code ms already stopped adding feature version ie possible solution might polyfill sample code borrowed", "num": "2406", "d": "2/2016"}, {"title": "acceptstatement true \u4e0e von directive \u7684 handler \u53c2\u6570", "body": "vuejs version \u95ee\u9898 \u6587\u6863\u91cc\u6709\u63d0\u5230\u8bbe\u7f6e\u4e86 \u53c2\u6570\u662f \u5728 von directive \u4e2d\u68c0\u67e5\u4e86 \u662f\u5426\u4e3a", "num": "2405", "d": "2/2016"}, {"title": "issue ie template vif table row leads fragment instance", "body": "vuejs version reproduction link steps reproduce add element table row check ie expected fragment instance correct behaviour actually happening internet explorer element present inside template table row vue gives warning fragment instance template vif nt work expected latest chrome firefox works fine time works fine placed inside tag example", "num": "2404", "d": "2/2016"}, {"title": "tag makes commponent fragment instance", "body": "child parent output child use every thing ok child parent output", "num": "2403", "d": "2/2016"}, {"title": "filterby", "body": "hi would like request key option filterby filter currently possible filter positive values negative would require custom filter ex list products prices free set list commercial free products could look like new option could add making code much easier read understand thanks considering", "num": "2402", "d": "2/2016"}, {"title": "problem vref vfor", "body": "vuejs version reproduction link steps reproduce expected actually happening use vref vfor ca nt find array object want refs parent feature url says vref used together vfor ref get array object containing gt child components mirroring data source use wrongly", "num": "2401", "d": "2/2016"}, {"title": "debounced model updated", "body": "vuejs version reproduction link steps reproduce focus input available within window type single letter immediately hit enter clear text output type single letter wait two seconds hit enter expected alert show contents reading na alert show contents reading actually happening model get set form submitted note duplicate issue commented closed nt get feedback nt know anyone notified comments following close issue", "num": "2400", "d": "2/2016"}, {"title": "feature request escape dot path", "body": "fiddle super simple situation set deep nested objects coming server object keys dots code became verbose first create key via assign value using would nice could escape dot object", "num": "2399", "d": "2/2016"}, {"title": "els nt available thisvm directives vfor", "body": "vuejs version reproduction link steps reproduce view console see works expected expected work actually happening returning undefined", "num": "2398", "d": "2/2016"}, {"title": "initial prop value child component", "body": "vuejs version reproduction link steps reproduce see console selfexplanatory logs expected parent component data property changed route hook new value expected child component passed actually happening child component old value initialization please let know anything clear thank", "num": "2397", "d": "2/2016"}, {"title": "svg element vshow transition chrome problem", "body": "seems happens using css transition svg elements chrome happens firefox everything working fine may affected chrome version os x vuejs version reproduction link steps reproduce use fade css transition svg element expected element fades actually happening element fades fade happens element hiding update firefox working periodically sometimes strange behavior also detected", "num": "2396", "d": "2/2016"}, {"title": "better watch structure", "body": "hi searched around nt find far hope duplicate playing around watcher vuejs found small ergonomic issue want watch property object way logically could work instead like something consider personally like way showed first example better thank", "num": "2395", "d": "2/2016"}, {"title": "vue tries observe enumerable nonconfigurable properties", "body": "vuejs version reproduction link check javascript console error steps reproduce add nonconfigurable enumerable property component dataprops expected vuejs redefining properties configurable virtue nonconfigurable change anyway observing pointless also throws error bug currently makes impossible add threejs objects vue components without causing error however current workaround set triggers checks ensure nonconfigurable properties redefined actually happening", "num": "2393", "d": "2/2016"}, {"title": "", "body": "", "num": "2392", "d": "2/2016"}, {"title": "build error new new syntax event", "body": "use webpack vue project use uglifyjsplugin webpack make build errorwhen debug new syntax event use tap make build faildi use webpack gulp update webpack latest", "num": "2391", "d": "2/2016"}, {"title": "click event firing slot child component", "body": "thought post first case encountering bug whether quick feature implement vuejs easily move forum needed trying add click handler child component using method nt seem firing target clicked see sure seen people use similar thing could wrong guidance whether issue would awesome thanks", "num": "2390", "d": "2/2016"}, {"title": "twoway filter updating fly", "body": "hello evan twoway filter works change possibility make work fly typing keypress sure way implement functionality via part plugins like use pure vue let say could property attribute enable updating twoway filter fly would convenient guess vue enough power docs code works fine input blur like attribute please pay time one thank", "num": "2388", "d": "2/2016"}, {"title": "output dynamic tag", "body": "like output dynamic scripttag google structured data output script tag works seems dynamic see source output also tried nt work either thanks", "num": "2387", "d": "2/2016"}, {"title": "number property disappears render", "body": "trying force input numbers think meant add property input disappears rendered replicated js fiddle using incorrectly", "num": "2386", "d": "2/2016"}, {"title": "custom directive deep nt work add key json object", "body": "want custom directive json object add new key json object directive nt work example props node attr directives updattr deep true update function something add key nt work nodeattr test clone new obj works var attr jqueryextend true nodeattr attr test nodeattr attr", "num": "2385", "d": "2/2016"}, {"title": "observerwalk\u4e2d\u662f\u5426\u9057\u6f0f\u4e86\u8fc7\u6ee4\u5173\u952e\u5b57", "body": "vuejs version reproduction link observerwalk steps reproduce expected \u6211\u8bb0\u5f97\u5728\u4ee5\u524d\u7684\u7248\u672c\u91cc\u8fd9\u91cc\u662f\u8fc7\u6ee4\u4e86\u4ee5 actually happening", "num": "2384", "d": "2/2016"}, {"title": "watch component triggered", "body": "vuejs version reproduction link steps reproduce run expected actually happening find dynamicbindvalue nt trigger watch component think acceptable", "num": "2383", "d": "2/2016"}, {"title": "feature vshow modifier toggling visibility", "body": "would nice able html toggle use case element transition element transitions prefer space took collapse", "num": "2382", "d": "2/2016"}, {"title": "broadcast nt trigger component event", "body": "huge issue maybe really good reason behaviour broadcast nt get handled component invokes dispatch means global events like top level app broadcasting event app needs act well children components invoke event manually well order get app act would nicer component would process broadcast like dispatch vuejs version reproduction link steps reproduce na expected component catch broadcast similar component catches dispatch actually happening component ignores broadcast needs triggered manually", "num": "2381", "d": "2/2016"}, {"title": "new event handler modifiers self amp capture nt work chrome", "body": "vuejs version reproduction link chrome windows results use von click everything find use modifier self capture event nt emit update test latest chrome ok difference chrome", "num": "2380", "d": "2/2016"}, {"title": "vuejs pjax", "body": "using vue instances multiple pages wanted start using pjax well pjax pretty awesome changed document readys document ready pjax end indeed instantiates vue instance modelbindings working event listeners set working buttons von click nt work keydownenter nt get triggered either html element bit higher dom html style height backgroundimage url filepublicurl gt filename private public javascript javascript document ready pjax end function uploadvue new vue el uploadtool duplicate could nt reopen", "num": "2379", "d": "2/2016"}, {"title": "interpolate content inside elementdirective", "body": "hello trying implement resolves classes based props values complicated logic result nt want use component heavy simple thing like inline directive nt look sexy imo either registered elementdirective works well unfortunately interpolated default made workaround using parse using watch parsed tokens interpolate template every time tokens changed way achieve goal chance became supported inside directive future maybe flag would nice feature elementdirective", "num": "2378", "d": "2/2016"}, {"title": "bind element css value outside control component data", "body": "course writing datagrid component vue semantic ui found wishing ability bind example jquery el parent css display dataparentvisible could watch parentvisible function new old stuff parent becomes visible clicking tab live clear talking css properties another entity semantic ui case controlling possible today feasible implement", "num": "2377", "d": "2/2016"}, {"title": "vuejs pjax", "body": "using vue instances multiple pages wanted start using pjax well pjax pretty awesome changed indeed instantiates vue instance modelbindings working event listeners set working buttons nt work nt get triggered either", "num": "2375", "d": "2/2016"}, {"title": "keepalive option routermap please", "body": "afaik experimental keepalive option routerview currently effectively allornothing attribute limited use us see example routes quite key routes manually saved loaded tofrom localstorage could specify keepalive options object route would really good thing happen imo", "num": "2374", "d": "2/2016"}, {"title": "bundles loader feature request", "body": "hi working vue loader inspired requirejs maybe could use idea link github repo try create vuebundle loader bundles partial html files goal bundle file contain css template routes viewmodel work progress production ready moment br rune", "num": "2373", "d": "2/2016"}, {"title": "use standard js classes instead custom syntax", "body": "hello first want thank providing great library creating projects vue came across idea could possible allow using classes place standard vue component syntax think already nice standard classes using would ideal code would become less frameworkdependent readable esp people never using vue believe also less errorprone versalite could look like way worked example knockoutjs werent making way declaring component properties methods js nested objects used standaard javascript class syntax instead managed make way using hacky module translates class structure readable vue great buildin functionality proposal tune component builder vue accepts js objects vue declarations like props methods etc backwards compatibility could work way object passed vuecomponent works using original behaviour b function passed vuecomponent treats class constructor uses new syntax could nice modular simplier love use import somecomponentclass componentssomecomponentjs vuecomponent somecomponent somecomponentclass return vue file via vuelodaervueify", "num": "2371", "d": "2/2016"}, {"title": "click event cleared another value changed", "body": "vue component looks like vue dropdownselect dropdownselecttermwrapper tagit vfor checked tagitlabel ilabel ifafaclose click delitem x inputdropdownselectterm blur isshowfalse focus isshowtrue uldropdownselectdatalist vshow isshow lidropdownselectdataitem vfor data click additem dlabel export default props value data data return checked isshow true methods additem item thischeckedindexof item return thischeckedpush item thisisshow false delitem item thischecked remove item dropdownselect border solid ccc amp termwrapper padding amp datalist position absolute li liststyletype none amp dataitem padding cursor pointer amp hover backgroundcolor efefef invoked like vue widgets test value value data cities import test componentstest const cities label \u5317\u4eac value label \u4e0a\u6d77 value export default components test data return value cities cities changed click event would cleared strange remove bound another loop would fixed tried upgrading vue version still got issue", "num": "2370", "d": "2/2016"}, {"title": "vue data binding work tbody binding dom id", "body": "vuejs version reproduction link jsfiddle steps reproduce works fine fails expected documented actually happening see jsfiddle figured way working around sure usage correct thx", "num": "2369", "d": "2/2016"}, {"title": "routerview used transition affect subassembly transtion animation execution microchannel mobile terminals", "body": "helloyoudada use routerview using transition animation transtion movie block subassembly executed animation caton able answer question code like child components", "num": "2368", "d": "2/2016"}, {"title": "component events", "body": "eg attach root dom internal component event system like disadvantages approach confusing opinion dom event may conflict component event called twice want avoid struggle naming event suggest providing way bind component events treat events component component events need dom events bind parent dom", "num": "2367", "d": "2/2016"}, {"title": "vbind data attribute", "body": "working bug", "num": "2365", "d": "2/2016"}, {"title": "template string", "body": "vuejs nt support template string example", "num": "2364", "d": "2/2016"}, {"title": "index vfor changed everytime filterby", "body": "need something vfor block onclick something need transfer real index data use data ajax post index changed filterby changed orderby \u6211\u9700\u8981\u5728vfor\u7684\u5185\u5bb9\u4e2d\u4f7f\u7528 index\u4f5c\u4e3a\u4e0b\u6807\u5728\u70b9\u51fb\u4e8b\u4ef6\u4e2d\u7684\u53c2\u6570 \u4ece\u800c\u76f4\u63a5\u5f15\u7528\u5230\u539f\u59cb\u6570\u636e\u4e2d\u7684\u503c\u7528\u4e8eajax post \u4f46\u662f\u7531\u4e8efilterby \u548corderby\u7684\u4f5c\u7528 \u6211\u5728vfor\u4e2d\u6ca1\u6709\u4efb\u4f55\u529e\u6cd5\u62ff\u5230\u8be5\u6761\u76ee\u7684\u539f\u59cb\u6570\u636e\u4e0b\u6807 \u76ee\u524d\u53ea\u80fd\u628a\u539f\u59cbid\u5b58\u5728\u5185\u5bb9\u5b57\u6bb5\u4e2d \u7136\u540e\u7528\u904d\u5386\u6570\u7ec4\u627e\u5230\u5bf9\u5e94id\u7684\u6570\u636e\u6765\u63d0\u4ea4\u7684\u65b9\u6cd5\u5b9e\u73b0\u9700\u6c42 \u8fd9\u6837\u65e0\u7591\u662f\u4f4e\u6548\u7684 \u5efa\u8bae\u589e\u52a0\u4e00\u4e2a originalindex\u4e4b\u7c7b\u7684\u53d8\u91cf \u7528\u4e8e\u6807\u8bb0\u6570\u636e\u7684\u539f\u59cb\u5728\u6570\u7ec4\u4e2d\u7684index", "num": "2363", "d": "2/2016"}, {"title": "collection api vuejs vfor", "body": "first vfor powerful feel string based api limiting runtime malleable extensible many additional data features paging stopstart lazy loading data events would ideally exposed listcollection api today example rather refining collections template would better create collection api within viewmodel template creates list returns chainable make viewmodel creation simpler track features filter features limit features order features template malleable runtime remove filters add filter results population gt clear limit set limit also done go given chainable api apis vue extensible add new filters collection api initially limited fully expose existing list api ability add extensions existing internal data api exposed would possible add features like stop start dom updating possible could build lazy loading many data manipulation layers vue without exhausting existing string vfor api feel gives vue foundation larger data manipulation api cross line framework territory respectfully ted", "num": "2362", "d": "2/2016"}, {"title": "transitionend recognize multiple transitions", "body": "hi sure purpose best wishes ben", "num": "2355", "d": "2/2016"}, {"title": "preventdefault called von handler", "body": "onjs specific reason case ca nt check handler prevented somewhere else already", "num": "2354", "d": "2/2016"}, {"title": "\u600e\u4e48\u6ca1\u6709\u7c7b\u4f3cvelseif\u7684\u6307\u4ee4", "body": "", "num": "2353", "d": "2/2016"}, {"title": "\u5982\u4f55\u901a\u8fc7vbind", "body": "style background url listcover \u65e0\u6cd5\u6b63\u786e\u4fbf\u5229\u51fa\u7ed3\u679c", "num": "2352", "d": "2/2016"}, {"title": "\u5c24\u5927 \u5f88\u559c\u6b22\u60a8\u7684vue \u4f46\u662fwebpack\u7528\u7684\u4e0d\u987a\u624b", "body": "\u7528\u6587\u4ef6\u5939\u5206\u5272\u7ec4\u4ef6\u7684\u5f62\u5f0f\u5982\u4e0b components app appcss apphtml appjs card", "num": "2351", "d": "2/2016"}, {"title": "vueify gulp", "body": "hey started learning vue loving far however stumbled upon issue might suitable forum type query excuse remove comment trying get vueify work browserify gulp ca nt life understand wrong works fine without vueify try require vue file script file source directory outputted completely empty comment require line works attach link code anyone got time look would super helpful also tried gulpbrowserify regular browserify gave result thanks advance great job vue truly great framework much easier get react angular guessing problem gulpfilejs since nt know wrong ca nt say sure", "num": "2350", "d": "2/2016"}, {"title": "allow loading vue conflict mode", "body": "similar jquery", "num": "2349", "d": "2/2016"}, {"title": "slot vif false click wrong bindings", "body": "came across strange bug today html js gives fiddle happy new year way", "num": "2348", "d": "2/2016"}, {"title": "error evaluating expression vif vfor", "body": "slotname wrestlerteam okay wrestlerteam throws warning error evaluating expression wrestlerteam initial wrestlerteam shown word okay second wrestlerteam throws warning expected behavior", "num": "2347", "d": "2/2016"}, {"title": "disableable unknown custom element warn", "body": "better components detecting webcomponents logs look really nasty", "num": "2345", "d": "2/2016"}, {"title": "passing function custom directive", "body": "hi nt know done way pass component function custom directive vuedirective custom params function something like defined oncompleted function component", "num": "2344", "d": "2/2016"}, {"title": "else statement vfor directive", "body": "first huge thanks evan vue great point developing app uses many lists list often filtered user input switching vue used plain django templates relied heavily empty tag unfortunately directive vue core opinion would incredibly awesome handy able write productid productname products matching query ever thought implementing opinion", "num": "2343", "d": "2/2016"}, {"title": "data adaptor support magicfalse", "body": "hi working multiple products using vuejs openlayers cesium knows else future application need share data vue map engines different libraries different observable models implementation written observablemodel abstarction synchronized vue openlayers cesium encountered performance issue related generate much", "num": "2342", "d": "2/2016"}, {"title": "twoway filter fly", "body": "first really love vuejs one twoway filter model updating fly mean input blur like keypress many thanks advance help", "num": "2341", "d": "2/2016"}, {"title": "props default method anything", "body": "found property case type object doesnt execute default method taken component html item width padding itembody width itemtitle import marked libsmarked export default props item type object default return title please select item left view details body hello filters marked marked please note already tried old way calling anonymous function rule babel bad day see called call parent template like filled though event component looks like html item margin padding backgroundcolor fff minheight item hover cursor pointer showing x items itemtitle itembody export default data return items title nice title body body indeed title nice title body body indeed methods fireselecteditem index dispatch detailitem thisitems index result expected would use function property initial load instead whole page stays blank although webpack says bundle valid vue devtools noticed says empty component piece puzzle missing could somebody kind enlighten way worked around used method component first object array version vue using hope makes sense tried jsfiddle got frustrated", "num": "2340", "d": "2/2016"}, {"title": "standalone components need reliable method get main vue object", "body": "currently using within component get using nt work would work nt really want obvious reasons smile maybe refering main vue object", "num": "2339", "d": "2/2016"}, {"title": "leave animation randomly makes leaving element flicker", "body": "keyword randomly transition code cleanup phase leaving transition p function thisleft true thiscancel thispendingjscb null thisop removeclass thisel thisleaveclass thiscallhook afterleave thiscb thiscb thisop null flicker randomly experiencing element returning normal state leave class removed element removed dom moving removeclass thisel next tick seems resolve flickering", "num": "2338", "d": "2/2016"}, {"title": "allow component prop type array accepted types", "body": "minute prop types customnative constructors would helpful type could array customnative constructors passed prop value matches functions would deemed valid example prop name accept either type", "num": "2337", "d": "2/2016"}, {"title": "named nested slot working", "body": "jade main div slot somename slot name somename wrongplace slot rightplace slot name somename wrongplace slot output", "num": "2312", "d": "2/2016"}, {"title": "prevent running watcher callback initializing vue", "body": "prevent running watcher callback initialzing vue nt trick", "num": "2311", "d": "2/2016"}, {"title": "vue turbolinks", "body": "hi always set one root new vue add components views use component needed time instance gulpjs build tooling javascript appjs javascript new vue el body data store data return store store ready thisstorerouter broadcast applicationready components specialtypebuilder require componentsspecialtypesspecialtypebuilder fieldgroupbuilder require componentsfieldgroupsfieldgroupbuilder html extends layoutsapp question view loaded turbolinks get working experiences point component nt initiated", "num": "2310", "d": "2/2016"}, {"title": "watch fired", "body": "following scenario following code problem alert occures first time input field modified far tell seems occur twoway binding target uses variable inspecting vue data see values keep updating even though watch function nt invoked using method proposed issue already vmodel form fieldname", "num": "2309", "d": "2/2016"}, {"title": "html case sensitivity workaround", "body": "problem know html case insensitive gets parsed led caveat vuejs use refer prop declared javascript bites beginners quite often addition also need apply mapping custom components eg define component js import mycomponent mycomponent export default components mycomponent shorhand must use template instead annoying part vuejs relies browser preparse templates time vuejs gets compile case information already lost idea adjust matching logic things would work example making possible addition eliminating camelcase vs kebabcase inconsistency code practical reasons would prefer pascalcasecamelcase components props props need referenced templates javascript properties hyphens makes awkward vs import another component variable name kebab case eg simply valid variable name object literal shorthand capitalized component names stand vs regular elements making clearer tags custom components tags technical details underlying implementation process props component options normalize lowercase way simply become internal matching process still use desired case app code fact users nt even need know internals potential concerns backwards compatibility lowercase conversion done alongside current kebabcase conversion syntax coexist nothing break treated thing template however nt make sense two props two components component differentiated case easily detect warn usage apply rule custom events well example basically means event names become caseinsensitive bigger implication props component names affects event system usage pure javascript make sense normalize event names lowercase seems rare two events differentiated case eg app different things want get feedback", "num": "2308", "d": "2/2016"}, {"title": "named slots lose classes", "body": "might intentional never mentioned docs use case repro component defines layout centering content defines width particular use case solved using instead think would better named slots followed rules normal instances vs fragment instances ie content named slot normal instance slot attributes including styles classes directives etc merged onto instance root open discussion", "num": "2306", "d": "2/2016"}, {"title": "activate\u94a9\u5b50\u5728mixin\u7684\u65f6\u5019\u4e0d\u4f1a\u6b63\u786e\u6267\u884c", "body": "document button var mixin activate function done consolelog hook activate done var vue new vue el body data currentview components mixins mixin template lt gt lt gt activate function done consolelog activate done mixins mixin template lt gt lt gt activate function done consolelog activate done methods togglecomp function thiscurrentview thiscurrentview vueissue", "num": "2305", "d": "2/2016"}, {"title": "update documentation compare knockout", "body": "seems like great library bringing lot reactive programmers different backgrounds together intro writings nt find mention knockoutjs seems similar think paragraph vue compares knockout would useful", "num": "2301", "d": "2/2016"}, {"title": "currency filter shows negative numbers incorrectly", "body": "hey thanks awesome work vuejs according answer currency filter shows negative numbers incorrectly reproduction", "num": "2300", "d": "2/2016"}, {"title": "transition loops never ends randomly", "body": "hello stumbled upon weird problem vuejs css transitions directly tied vshow directive toggle variable controls vshow sometimes play transition animation wont set display none end animation html template looks like buggy result stalls state permamently please note loadingscreen loadingbar vshow loading apparently one set display none animation finishes one stays leave state infinitely bug occurs randomly sometimes works correctly sometimes hangs sure whats problem something wrong", "num": "2299", "d": "2/2016"}, {"title": "\u5728\u7ec4\u4ef6\u5185\u4f7f\u7528checkbox\u7ed1\u5b9a\u591a\u4e2a\u52fe\u9009\u6846\u88ab\u5f53\u4f5c\u5355\u4e2a\u52fe\u9009\u6846\u5904\u7406", "body": "html \u7528\u6237\u7ec4 \u7cfb\u7edf\u7ba1\u7406\u5458\u7ec4 \u7ec4\u4ef6\u5916\u4f7f\u7528checkbox json \u7ec4\u4ef6\u5916\u4f7f\u7528input \u7528\u6237\u7ec4 \u7cfb\u7edf\u7ba1\u7406\u5458\u7ec4 \u7ec4\u4ef6\u5185\u4f7f\u7528checkbox json \u7ec4\u4ef6\u5185\u4f7f\u7528input var mainnew vue el row data components formedit template formedit data", "num": "2298", "d": "2/2016"}, {"title": "window child objects return undefined using nwjs", "body": "begun using nwjs alongside vuejs project attempting declare vue via node method found three issues relating objects guessing relates specifically nwjs perhaps also projects well object references vuecommonjs file need prefixed example failure result undefined error like teevio mentioned forum post would seem nwjs makes variables available explicitly via object could nwjs provides object wrapper dom object see", "num": "2297", "d": "2/2016"}, {"title": "von clickself event work", "body": "von clickself event work", "num": "2296", "d": "2/2016"}, {"title": "appendto \u662f\u5426\u53ef\u4ee5\u66f4\u65b0 vm\u7236\u5b50\u5173\u7cfb", "body": "parent children", "num": "2295", "d": "2/2016"}, {"title": "checkbox\u7ed1\u5b9a\u591a\u4e2a\u52fe\u9009\u6846\u65f6\u4f7f\u7528\u4e0d\u7075\u6d3b", "body": "jack john mike \u4f46\u662f\u5f88\u591abootstrap\u63d2\u4ef6\u548cjquery\u63d2\u4ef6\u4fee\u9970checkbox\u662f\u8fd9\u6837\u5199\u7684 \u540c\u6837\u95ee\u9898\u5bf9\u4e8eradio\u4e5f\u5b58\u5728", "num": "2294", "d": "2/2016"}, {"title": "vshow pass element", "body": "hello vuejs really great thanks came across problem maybe something wrong find information docs google simple html markup html keyword car mouse computer full name data json js try achieve make input field accept search query li innerhtml contain needed string make element invisible problem consolelog e return maybe something wrong thank", "num": "2293", "d": "2/2016"}, {"title": "dynamic scrolling grid", "body": "anyone aware dynamic scrolling grid ie load server x number results scrolled general full featured grid example website", "num": "2292", "d": "2/2016"}, {"title": "uncaught syntaxerror invalid regular expression", "body": "using chrome extension get following problem fixed using regular assuming poorly minified code uncaught syntaxerror invalid regular expression \u00eb \u0161\u00e0 \u00e0\u00aa \u00e0 \u00e0 \u0153\u00e0 \u00e1\u0153 \u0161\u00e2 \u00e2 \u00aa\u00e2 \u0153\u00ea \u00ea\u017e \u0192\u00ea \u0161\u00ea \u0153\u00ea \u00ea \u00aa\u00ea range order character class", "num": "2291", "d": "2/2016"}, {"title": "unwatch keypath specification", "body": "possible unwatch specific key words exclude property deep watch thank", "num": "2289", "d": "2/2016"}, {"title": "element generated slot update contents dynamically", "body": "read api nt see anything said work parent component following template child component following template available renders case may null resulting rendering navbar later set options render properly however set later updated change pass onto understand slot component based api yet mention content slot change generated make mistake somewhere", "num": "2288", "d": "2/2016"}, {"title": "transition hooks call context right", "body": "apply transition component nt fragment transition hooks resolved call contexts point component example following ca nt get props wanted animate pointing instance instance missed something nt know context bound really want access props access html export default name comp transitions tran enter el done want access props comp points inner instance", "num": "2287", "d": "2/2016"}, {"title": "", "body": "", "num": "2286", "d": "2/2016"}, {"title": "convert string css using vbind", "body": "string inline styles db column using vue would output value style tag server side like trying move vue moment use php play around string break apart properties values array json encode parse assign js object use vbind way pass string css vbind break apart string instead object think would nice feature already available cheers", "num": "2285", "d": "2/2016"}, {"title": "v", "body": "", "num": "2284", "d": "2/2016"}, {"title": "slot table tag colgroup tbody", "body": "want create table component distribute styling columns tags let use component override content rendered use vuejs dose work colgroup table body content slot seem replace user content simple code jsfiddle sure proper way better solution thanks", "num": "2283", "d": "2/2016"}, {"title": "invalid prop type check failed", "body": "html javascript var mycomponent vueextend template title number props title string number number vuecomponent mycomponent mycomponent new vue el example got title missing demo", "num": "2282", "d": "2/2016"}, {"title": "attribute complex expression", "body": "hello sorry maybe already answer somewhere nt know search version syntax possible write attribute value like way new syntax", "num": "2281", "d": "2/2016"}, {"title": "class\u6307\u4ee4\u9700\u8981\u4f18\u5316", "body": "srcdirectivesinternalclassjs javascript handleobject value thiscleanup value var keys thisprevkeys objectkeys value var l keyslength lt l var key keys value key addclass thisel key else removeclass thisel key handlearray value thiscleanup value var l valuelength lt l value addclass thisel value thisprevkeys valueslice \u53e6\u5916handleobject \u548c handlearray", "num": "2280", "d": "2/2016"}, {"title": "limit number checked checkboxes", "body": "trying limit number checkboxes selected one model giving really hard time run ideas tried create custom directive nt seem get triggered checkbox change could please advice best approach vuedirective five function value consolelog thisel new vue el app data providers selectedproviders computed limitreached function thisselectedproviderslength gt return true return false thanks", "num": "2279", "d": "2/2016"}, {"title": "array dynamic prop", "body": "trying pass array dynamic prop prop passed undefined instead actual array small fiddle showing issue", "num": "2278", "d": "2/2016"}, {"title": "", "body": "", "num": "2277", "d": "2/2016"}, {"title": "immediate flag watch breaks unwatching", "body": "repro", "num": "2276", "d": "2/2016"}, {"title": "\u83b7\u53d6\u5230 children\u6570\u7ec4\u4e71\u5e8f", "body": "\u7236\u7ec4\u4ef6\u901a\u8fc7 children\u83b7\u5f97\u7684\u5b50\u7ec4\u4ef6\u6570\u7ec4\u4e71\u5e8f", "num": "2275", "d": "2/2016"}, {"body": "could probably beforecompile event fired element goes vue compilation", "d": "2/2016"}, {"body": "figured mixins nt children component strictly speaking produce desired behaviour change dispatch emit everything works expected", "d": "2/2016"}, {"body": "referring yes seems usage wrong nt use property initializers work", "d": "2/2016"}, {"body": "first sorry possible misunderstandings part really trying understand core fantastic library walking edge regarding knowledge js yes referring main inspiration tight typescript classes really coupling understand using provide reactive data resolved el constructing class result extend instance understand saying means extended vue class ca nt hold data given initializing original given options parameter case point may subject change could somehow call original constructor chain would able initialize instance property chain would cause provide possible overwrite values given call class instance would behave almost normally possible vueextend instance really prototype extension real class extension classic sense hope make sense easy explain", "d": "2/2016"}, {"body": "never called actually using raw class treat something holds meta data passed creates actual sub class guess right classic class extension personally recommend trying bend fit classic class extension semantics vue components classes", "d": "2/2016"}, {"body": "ok thanks try bend brain fact thanks clearing", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "undefined null", "d": "2/2016"}, {"body": "ie support inside elements like may want read post", "d": "2/2016"}, {"body": "yes see silly question template located inside tag thought content parsed browser vue compile insert target element wrong thanks", "d": "2/2016"}, {"body": "vue renders template real html compiling html restrictions apply vue templates matter define", "d": "2/2016"}, {"body": "likely parent contains another component root try following template parent", "d": "2/2016"}, {"body": "expacted please read fragment instance docs carefully", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "think using specific use case probably wrong filterby primarily used string inclusion filtering item price like show free list case probably better use two custom filters case suggestion adding keyword really would like avoid making array filter syntax complex fact today encourage users use computed properties whenever possible instead using array filters computed properties give full power javascript whatever want gives cached variable easily get length filtered result case could two computed properties also makes template expressive", "d": "2/2016"}, {"body": "accepted thanks explanation", "d": "2/2016"}, {"body": "oh saw issue know problem proper implement sorry", "d": "2/2016"}, {"body": "actually", "d": "2/2016"}, {"body": "oh smile xie xie", "d": "2/2016"}, {"body": "problem return array nested return array arrays nt seem useful think better describe exact scenario led want feature trying achieve", "d": "2/2016"}, {"body": "actually raised question gitter later realized tackling problem wrong way idea create directive slidetoggle element would bounded element toggled could check visible basically fiddle directive would inside", "d": "2/2016"}, {"body": "messed around bit think understand situation lot better impression held elements component appears get root component helped understand", "d": "2/2016"}, {"body": "note used router yet looks correct indexcomponent initialised kicks sub component null route active kicks set message watcher kicks might wrong way vue batches updates nt believe order see console messages reflects way data batched processed", "d": "2/2016"}, {"body": "router hook fired first hook change subcomponent gets prop old value finally subcomponent updated newest value starting think related vuerouter expected router hooks process component lifecycle hooks", "d": "2/2016"}, {"body": "prop propagation also async using internal batcher queue child called synchronously parent prop nt propagated yet think probably mention doc", "d": "2/2016"}, {"body": "hmm one solution would use anything else could advice", "d": "2/2016"}, {"body": "similar waiting dom updates child hook", "d": "2/2016"}, {"body": "interesting works thanks", "d": "2/2016"}, {"body": "design pass key option thing applies method takes path first parameter", "d": "2/2016"}, {"body": "feels less verbose nest many objects", "d": "2/2016"}, {"body": "think using nested objects declare watch path abusing language syntax note keeping options consistent imperative api azamatsharapov mentioned also keypath handle cases nested objects ca nt eg", "d": "2/2016"}, {"body": "btw evan couple times problem setting paths containing key specifically using worked around maybe good solution thought maybe escaping dot possible path", "d": "2/2016"}, {"body": "alright thank explaining really helped", "d": "2/2016"}, {"body": "azamatsharapov open separate issue", "d": "2/2016"}, {"body": "sure try make repro open", "d": "2/2016"}, {"body": "fyi fiddle blank", "d": "2/2016"}, {"body": "thanks matmoo updated link", "d": "2/2016"}, {"body": "seems better skip observing entire object saw comment nonreactive object converted passed prop maybe need way explicitly declare nonreactive properties vm instance", "d": "2/2016"}, {"body": "agree would good feature think separate fix fixes objects want reactive nonconfigurable properties think way solve nonreactive object suggestion would never observe objects frozen eg tested", "d": "2/2016"}, {"body": "maybe need way explicitly declare nonreactive properties vm instance yes please", "d": "2/2016"}, {"body": "saul makes sense let work fix hand vue already skips observing objects extensible user may objects observed mutable maybe new option like basically simply attaches property instance without converting addition probably add private marker object extensible object passed prop nt get converted", "d": "2/2016"}, {"body": "clarity nonreactivedata becomes opposite data maybe could reactivedata pseudo name data", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "param \u505a\u6210", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "make sure use vuehtmlloader instead htmlloader also please open issues corresponding repos", "d": "2/2016"}, {"body": "thank use vuehtmlloader solvedps hope add tip vueorg website", "d": "2/2016"}, {"body": "related", "d": "2/2016"}, {"body": "closing favor", "d": "2/2016"}, {"body": "updating two way filters user typing results awkward ux trust bad idea also way worked old version vue hard get behavior right example reposition cursor text changed filter modify input arbitrarily typing experience would worse time make update fly want please use party library specifically designed", "d": "2/2016"}, {"body": "mentioned docs use triple braces data bindings ignored need add script tags template although convinced inline script execute seems really bad idea", "d": "2/2016"}, {"body": "thanks simplesmiler also works great", "d": "2/2016"}, {"body": "param converts user input numbers saving data object javascript nt restrict user input removed special attribute provided vuejs want physically restrict user input use native html attribute", "d": "2/2016"}, {"body": "apologies wasnt clear enough know doesnt restrict user actually input input wasnt converted numbers saving data vue instance would keep string characters value result errors trying math", "d": "2/2016"}, {"body": "well converts input number input parsed valid number saved asis", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "thank comment get error uncaught typeerror exptrim function parseexpression vue set", "d": "2/2016"}, {"body": "show used best make repro jsfiddle somewhere else", "d": "2/2016"}, {"body": "think way way thissomeobject objectassign thissomeobject b used way instead jqueryextend true nodeattr thanks", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "jsbin seems working intended", "d": "2/2016"}, {"body": "nt understand wrongly mean think situation acceptable dynamicbindprop trigger watch component", "d": "2/2016"}, {"body": "jsbin triggering watcher component", "d": "2/2016"}, {"body": "write vmarr", "d": "2/2016"}, {"body": "expecting watcher fire component initialization case expectation wrong watchers fire existing value changed working intended", "d": "2/2016"}, {"body": "value set propbind ok could tell good method handle situation want something related bindprop component updated", "d": "2/2016"}, {"body": "understanding props work bit need something prop component init components lifecycle hooks tue feb pm \u8ffd\u968f notifications githubcom wrote value set propbind ok could tell good method handle situation want something related bindprop component updated reply email directly view github", "d": "2/2016"}, {"body": "want related prop ca nt life cycle hook wed feb evan notifications githubcom wrote understanding props work bit need something prop component init components lifecycle hooks tue feb pm \u8ffd\u968f notifications githubcom wrote value set propbind ok could tell good method handle situation want something related bindprop component updated reply email directly view github reply email directly view github \u8ffd\u968f", "d": "2/2016"}, {"body": "prop set update wed feb yf z gmailcom wrote want related prop ca nt life cycle hook wed feb evan notifications githubcom wrote understanding props work bit need something prop component init components lifecycle hooks tue feb pm \u8ffd\u968f notifications githubcom wrote value set propbind ok could tell good method handle situation want something related bindprop component updated reply email directly view github reply email directly view github \u8ffd\u968f \u8ffd\u968f", "d": "2/2016"}, {"body": "ok realize another way ready hook handle prop value set watch handle set wed feb yf z gmailcom wrote prop set update wed feb yf z gmailcom wrote want related prop ca nt life cycle hook wed feb evan notifications githubcom wrote understanding props work bit need something prop component init components lifecycle hooks tue feb pm \u8ffd\u968f notifications githubcom wrote value set propbind ok could tell good method handle situation want something related bindprop component updated reply email directly view github reply email directly view github \u8ffd\u968f \u8ffd\u968f \u8ffd\u968f", "d": "2/2016"}, {"body": "could create custom directive use instance properties get thing really make right override directive edit override show directive html directive test", "d": "2/2016"}, {"body": "weotch different use case", "d": "2/2016"}, {"body": "probably better create custom directive like unfortunately internal transition api exposed moment next release able achieve want using function exposed", "d": "2/2016"}, {"body": "vuchl thanks input nt believe solution would trigger transitions like normal simplesmiler would equivalent use case nt think custom directive would work would nt able communicate transition system enter leave cool know new api thanks", "d": "2/2016"}, {"body": "weotch changing opacity want simple class toggle css transitions instead using", "d": "2/2016"}, {"body": "unfortunately internal transition api exposed moment ha got long ago solution edit case needed toggle like great evan decided expose transition api handy", "d": "2/2016"}, {"body": "trigger events self using emit dispatch event propagates upward along parent chain using dispatch broadcast event propagates downward descendants using broadcast strange behavior actually component getting event work around calling code inside self event", "d": "2/2016"}, {"body": "still believe broadcast behave like dispatch also trigger event might global events want fire caught component well child components sure emit manually point extra work nt need happen", "d": "2/2016"}, {"body": "yeah makes sense although introducing moment would breaking change maybe could considered fix", "d": "2/2016"}, {"body": "yeah understand would break lot code unfortunate sure recommend assuming would part major release implications probably nt want people upgrade minor version code break thanks looking though", "d": "2/2016"}, {"body": "yeah going close since simple workaround changing may cause breakage probably ship enough breaking changes queued major release", "d": "2/2016"}, {"body": "works thanks", "d": "2/2016"}, {"body": "clcik buttons firefox esr emits buttons", "d": "2/2016"}, {"body": "vuchl use chrome", "d": "2/2016"}, {"body": "tested chrome works chrome seems en par ff en en par chrome", "d": "2/2016"}, {"body": "using latest chrome closing since reproduce latest chrome stable", "d": "2/2016"}, {"body": "also meet problem new version vue solve question also event object nt attribute currenttarget relatedtarget", "d": "2/2016"}, {"body": "normal pjax replaces dom elements depends version use pjax pjaxstandalone amp even listeners vue bunch references dom objects way binding tried year ago amp made prototype basically best solution afaik using jquery detach biggest issue face next dealing memory leaks could use vue router alternative would use iframes insure dom refreshed amp object attached amp get dom ready", "d": "2/2016"}, {"body": "make minimal reproduction demonstrates issue ca nt really tell wrong looking code snippets", "d": "2/2016"}, {"body": "normal directives params", "d": "2/2016"}, {"body": "simplesmiler params work well either elementdirective trouble inner content interpolation", "d": "2/2016"}, {"body": "meant following", "d": "2/2016"}, {"body": "simplesmiler see think good enough us thank", "d": "2/2016"}, {"body": "also obvious question put click handler tab click handler fires contents tab actually toggled visible semantic ui functional workaround inelegant", "d": "2/2016"}, {"body": "tried vuejs broadcast mechanism parent class change broadcast custom event children child listen event act accordingly", "d": "2/2016"}, {"body": "parent nt controlling css cssjs ui framework", "d": "2/2016"}, {"body": "rely ui framework emit event execute callback case semantic ui tabs would modules gt tab gt setting section callbacks", "d": "2/2016"}, {"body": "know spent minutes searching online docs looking events came empty apparently blind settings tab hero", "d": "2/2016"}, {"body": "closing question", "d": "2/2016"}, {"body": "please reopen provide reproduction least code actually initiating vue pjax", "d": "2/2016"}, {"body": "html element bit higher dom html style height backgroundimage url filepublicurl gt filename private public javascript javascript document ready pjax end function uploadvue new vue el uploadtool reopen issue", "d": "2/2016"}, {"body": "nt think understand issue give better example", "d": "2/2016"}, {"body": "also please open issue vuerouter repo instead", "d": "2/2016"}, {"body": "thanks rune looks good amp interesting stuff first thought one component per vue file best method sure way multiple components one file neat see related components one file good opposite lead many extra small files loving simplicity added experienced js guy also done router amp theming look good btw pagehtml unused right interested know would perform large app", "d": "2/2016"}, {"body": "cool something mind great prototyping small applications ideally love see support standard files outlined excluding preprocessors way reuse files later want transition webpackbrowserify based setup going close since nt seem like issue feel free share forum show amp tell section", "d": "2/2016"}, {"body": "object literals easier clear classes applying black magic however webpack transform could great way handle", "d": "2/2016"}, {"body": "know fact vue would programmed suggests would win lot backend developer hearts including mine though love vue anyway lol scott", "d": "2/2016"}, {"body": "opinion classes offer practical advantages plain object definitions except syntax preferences really like classes use", "d": "2/2016"}, {"body": "bet beer classes become norm time goes wink scott", "d": "2/2016"}, {"body": "smolinari tools allow write components class nt think ever change vue default api use classes", "d": "2/2016"}, {"body": "extracted vue demo push github download run install requirements libsass may needed run open debug", "d": "2/2016"}, {"body": "believe issue", "d": "2/2016"}, {"body": "works thank", "d": "2/2016"}, {"body": "hi trying vuejs found issue read code jsfiddle works right include tags tr td inside tbody like also works fine including id inside table tag solve issue could please share workaround best regards", "d": "2/2016"}, {"body": "maybe look", "d": "2/2016"}, {"body": "markup invalid table elememts strict rules appear inside", "d": "2/2016"}, {"body": "angelnuernberg thx figured putting wrapping like think solution may also work try later thanks hanai thanks new vuejs today tried search tbody issues failed thanks yyx find strict rules vuejs manual maybe add manual p", "d": "2/2016"}, {"body": "liupangzi html works really vue", "d": "2/2016"}, {"body": "\u8bf7\u7528\u4e2d\u6587\u5728\u8bba\u575b\u63d0\u95ee\u5427", "d": "2/2016"}, {"body": "since breaking change go major release closing keeping breaking changes backlog", "d": "2/2016"}, {"body": "oh sorry stupid bug thank amazing library", "d": "2/2016"}, {"body": "nt know easily implemented vue support feature knowing nt yet supported mobile devices", "d": "2/2016"}, {"body": "note fix handles expression getter generation would still work browsers support template strings natively", "d": "2/2016"}, {"body": "chances use index retrieve item original array case might well pass item instead index still need index use", "d": "2/2016"}, {"body": "used visual display simplesmiler suggested need original item pass item directly instead", "d": "2/2016"}, {"body": "nt achievable computed property", "d": "2/2016"}, {"body": "could generate vfor string computed property would still limited string based api features would like see existing vfor internals exposed extensible collections api could provide extension mechanism string vfor api command arg arg maps vuecollection command function arg arg feels like value making vfor string format extensible min", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "mean js var filterby vuefilter filterby component definition computed filteredlocations return filterby thislocations thisfilter state city slice full power javascript also limited built filters write whatever filtering function want", "d": "2/2016"}, {"body": "ok well actually maybe wow better response paradigm error limiting computed use primitives really never thought using arrays objects mental model reactive parts vue spreadsheet data raw data values entered cell computed calculated values depend cells problem spreadsheet paradigm cells rarely contain complex data types vfor string expression delimited calls builtin filters extensible adding filters via vuefilter name function computed properties return complex types results cached dependent values change create new filters manipulate arraysobjects use full js needed see closed thanks evan elegant", "d": "2/2016"}, {"body": "transition considered finished first event fired vue predict many need transition multiple properties complex timing use css animations instead", "d": "2/2016"}, {"body": "wow fast thanks lot", "d": "2/2016"}, {"body": "filter applied directive uses modifier however could always check eventdefaultprevented", "d": "2/2016"}, {"body": "say elements overlapping click modifier ca nt sort one got click first true calls think makes sense switch would false first true second call", "d": "2/2016"}, {"body": "eventtarget tell dom node dispatched event", "d": "2/2016"}, {"body": "say elements overlapping click top without modifier ca nt sort got event second", "d": "2/2016"}, {"body": "paulpflug opposed change suggestion order handlers hypothetical third scenario nt matter would one care element prevented default event still propagate handlers guess mean say curious problem domain", "d": "2/2016"}, {"body": "read article belief good way event management obviously nt work way around issue nt important simply nt use modifier manually code instead", "d": "2/2016"}, {"body": "close since nt seem need fix", "d": "2/2016"}, {"body": "html", "d": "2/2016"}, {"body": "hanai", "d": "2/2016"}, {"body": "\u5c1d\u8bd5\u4f7f\u7528\u8c10\u97f3 google translate", "d": "2/2016"}, {"body": "matmoo", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "\u76f4\u63a5\u8fd9\u6837\u5c31\u597d\u4e86 computed", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "matmoo one best mentor ever found", "d": "2/2016"}, {"body": "\u5927\u81f4\u8fd9\u6837 vbind style background url listcover", "d": "2/2016"}, {"body": "hanai \u5982\u679c\u6211\u8fd9\u91cc\u7684\u80cc\u666f\u56fe\u662f\u7c7b\u4f3c\u4e8e", "d": "2/2016"}, {"body": "hanai \u4ee3\u7801\u5982\u4e0b", "d": "2/2016"}, {"body": "\u53ea\u6709 \u5f53\u7136\u62a5\u9519", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted forum stackoverflow thanks", "d": "2/2016"}, {"body": "hi posted forums well received answer sorry regards david feb evan notifications githubcom wrote hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted forum stackoverflow thanks reply email directly view github", "d": "2/2016"}, {"body": "curious library also uses global", "d": "2/2016"}, {"body": "lol", "d": "2/2016"}, {"body": "case version vue loading vue number websites although none ever used vue yet optimistic might become much popular future feature would minimize risk overwriting older newer extended version vue already used website", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "elaborate case use vue lightweight makes sense widget building run lot different sites sites probably nt use vue rather avoid potential version conflicts could", "d": "2/2016"}, {"body": "think using bundling mechanism like webpack browserify nt even issue vue nt add add", "d": "2/2016"}, {"body": "sirlancelot exactly wanted say smile", "d": "2/2016"}, {"body": "sirlancelot nt noticed place use browserify et al simply defining moduleexports inclusion trick", "d": "2/2016"}, {"body": "actually using changes stopped working somehow", "d": "2/2016"}, {"body": "well seems trying bind parent see fiddle", "d": "2/2016"}, {"body": "actually variable named ca nt see ending well", "d": "2/2016"}, {"body": "true true problem sure design passing within vfor tag cause error thrown simply changing vif tag non tag throw error", "d": "2/2016"}, {"body": "template incorrect html slotname outer div enclosed", "d": "2/2016"}, {"body": "forgot copy ending div tag edited op include ending div tag thanks", "d": "2/2016"}, {"body": "ca nt paragraph tags nested like could browser handling funny", "d": "2/2016"}, {"body": "really realize thanks crswll", "d": "2/2016"}, {"body": "would need pass like", "d": "2/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted forum stackoverflow thanks", "d": "2/2016"}, {"body": "use custom filter record length filtered result", "d": "2/2016"}, {"body": "thanks answer yeah sure already used couple times think good idea implement", "d": "2/2016"}, {"body": "getters setters avoid much generation getset need models painful api like modelset foo foovalue considered implement data adaptors magic false flag like ractivejs", "d": "2/2016"}, {"body": "much many properties reactive type data looking personally never seen gettersetters becoming perf bottleneck details would help", "d": "2/2016"}, {"body": "worse scenario around items presented map dom dom use paging show little possible item contains around properties nested objects gives us around objects perf bottleneck objects created perf tool points objectdefineproperty intensive function especially right properties reactive changing define properties nt wrapped getset", "d": "2/2016"}, {"body": "hmm maybe could property whitelistblacklist feature special scenarios like although another possible approach make data reactive upfront keep pristine initial load feed vue instances needed", "d": "2/2016"}, {"body": "could give us short explanation example data feeding could work smile scott", "d": "2/2016"}, {"body": "smolinari vue converts data reactive set vue instance js var vm new vue data items var items still nonreactive vmitems itemsfilter item gt itema gt second object becomes reactive idea initialize instance empty array keep full data array unobserved pagination change get filtered copy items display set instance causes vue convert way objects converted needed instead huge conversion cost upfront", "d": "2/2016"}, {"body": "thanks explanation evan makes perfect sense especially novice js programmer actually reread reactivity depth makes lot sense would consider another example add docs reactivity depth like give go scott", "d": "2/2016"}, {"body": "performance issue approach mvvm architecture please forgive wall text like describe situation story behind conversation company work fairly large highly customizable suite products share common code strive achieve consistency look feel promote code reuse define clear architecture allow multiple teams work effectively minimum side effects apps consist multiple modules written using interpretation patterns largescale javascript application architecture inside modules follow mvvm approach would like consistent would like developers able switch modules feel comfortable see much love vue would like benefit observable collections computed properties custom model events without relying vue presence extracting observable model separate layer independent vue enables us share paterns across modules modules nt use vue current solution folows classes support us benefits interactive models computed properties watching changes etc model enters vue realm call method returns proxy carrying synchronization logic change prop model vue model updated computed propery model changes vue equivalent updated obviously works way result vue instances nt computed properties watches etc simple methods emitting events handled outside works really well performance impact meaningful visualising large data sets method returns object later augmented vue observed us synchronize changes think would feasible define api required vue able plug existing implementations observable model default adapter provided vue would augment plain object exactly adapter augmentation would necessary vue could use observe update underlying model see value approach think complicated", "d": "2/2016"}, {"body": "would better forum turns nt possible bug post suggestion issue scott", "d": "2/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted forum stackoverflow thanks", "d": "2/2016"}, {"body": "hello evan mean one knows already asked even could seems like possibility twoway filter updating fly keypress vue sure way implement functionality via part plugins like use pure vue convenient guess vue enough power kinda stuff least wish code works fine input blur like attr please pay time one thank", "d": "2/2016"}, {"body": "default value used prop present template value passed even overwrite default use case use function instead", "d": "2/2016"}, {"body": "set mind straight use case method property defined missing use case method property defined value undefined falsy thanks time", "d": "2/2016"}, {"body": "coerce simply hook allows child component cast value set matter value falsy", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "thought might end different versions vue think go thank smile", "d": "2/2016"}, {"body": "use webpack refer version script instead creating new require", "d": "2/2016"}, {"body": "think one necessarily assume add component dependency another vue dependency think load instead", "d": "2/2016"}, {"body": "ok real problem vue statically linked example cdn ca nt get atop vue additionally installed dep wo nt even notice points another instance produce wired behavior eg nt working furthermore would allow component developers get rid", "d": "2/2016"}, {"body": "vue statically linked example cdn ca nt get require vue obviously already case", "d": "2/2016"}, {"body": "would reliable way would still add vue webpack bundle without necessity error vue installed", "d": "2/2016"}, {"body": "use different packaging strategies targeting different usage distributing npmbased bundler usage eg webpack browserify need precompile let user import file directly distributing use without build tools eg global vue cdn need wrap whole thing plugin vue passed via assume vue available globally", "d": "2/2016"}, {"body": "case would target statical linking component would distribute versions vue statically linked component statically linked vueuse windowvue vue statically linked component webpack controlled require windowvue vue webpack controlled component statically linked require vue use webpack controlled require", "d": "2/2016"}, {"body": "use really would appreciate cleaner solution", "d": "2/2016"}, {"body": "actually next version vuerouter probably use different api uses plain vue instance root together vuex look like", "d": "2/2016"}, {"body": "line actually removes element class removed element removed sure bug possible please provide repro", "d": "2/2016"}, {"body": "il try record video happens randomly provide simplified repro monday saw think bug ie removing class layout refreshed reason removing element dom", "d": "2/2016"}, {"body": "managed capture flicker video happening ie mobile update windows phone simplified repro really seem like ie bug delaying cleanup phase seems work around appropriate guards case elements removed", "d": "2/2016"}, {"body": "really seem like ie bug surprise scott", "d": "2/2016"}, {"body": "sztrzask moving removeclass thisel next tick seems resolve flickering using vue nexttick settimeout", "d": "2/2016"}, {"body": "vue nexttick guard checking element still exists next tick", "d": "2/2016"}, {"body": "sztrzask reason existence guard check necessary thinking whether adding nexttick leavedone would make work", "d": "2/2016"}, {"body": "moment consideration belive necessary", "d": "2/2016"}, {"body": "ok found simpler solution add transitioned element ensures animation ending state stays even class removed nt require vue change behavior cater ie bug", "d": "2/2016"}, {"body": "another take named slot wrapped another component content slot also gets inserted unnamed slot", "d": "2/2016"}, {"body": "looking", "d": "2/2016"}, {"body": "returns exactly", "d": "2/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted forum stackoverflow thanks", "d": "2/2016"}, {"body": "ok agreed", "d": "2/2016"}, {"body": "need deep watcher", "d": "2/2016"}, {"body": "often want write way see difference components tags", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "make sense normalize event names lowercase yes makes sense makes code readable always keep event names lowercase separate dash instead camelcase think adding warning camelcase event names would also good", "d": "2/2016"}, {"body": "means vuejs moving away html spec pursing similar approach like angular", "d": "2/2016"}, {"body": "performance concern", "d": "2/2016"}, {"body": "couple thoughts potential concerns long backwards compatibility exists cool whatever ultimately decided probably continuing using kebab case method lack distinction camelcase lower camelcase could confusing generally speaking would refer class would refer nonclass variable nt think would issue would nt want creating classes named components would agree creating two unique events distinguished case would poor programming biggest concern introducing weird inconsistencies people code example valid identical", "d": "2/2016"}, {"body": "keep kebabcase markup camel case code part html spec ignoring case greater learning curve coming frameworks already learned standard", "d": "2/2016"}, {"body": "agree teevio consistency lost html uses kebabcase amp accepted community standard ecmascript camelcase language keep separate instead hiding react way get react render custom attribute via data amp aria enforces consistency explaining say via mdn link even camelcase lt kebabcase beginner greatly help beginner html understanding", "d": "2/2016"}, {"body": "agree evan readability code consistency important", "d": "2/2016"}, {"body": "look really weird camelcase inside html html html js js", "d": "2/2016"}, {"body": "current version fine", "d": "2/2016"}, {"body": "using vue months still gets everytime big deal warning vue good know fully understand idea support", "d": "2/2016"}, {"body": "backwards compatibility", "d": "2/2016"}, {"body": "agreed need keep backwards compatibility make sense normalize event names lowercase agree azamatsharapov", "d": "2/2016"}, {"body": "teevio vue components roughly classes multiple valid syntax issue already exists work html simply throws away case information much different proposed feature like style arguments picking style stick moeszyslak jonagoldman others concerns moving away html standard totally valid write camelcase tagsattributes html tagattribute name matching performed caseinsensitive manner spec says documents html syntax tag names html elements may written mix lowercase uppercase letters caseinsensitive match names elements given html elements section document tag names caseinsensitive attribute names html elements may written mix lowercase uppercase letters caseinsensitive match names attributes given html elements section document attribute names caseinsensitive using pascalcasecamelcase improves code consistencyreadability totally speccompliant may everyone prefer kebabcase keep using particular different angular angular making templates casesensitive introducing customized html parser contrary vue actually follows spec making js counterparts caseinsensitive", "d": "2/2016"}, {"body": "prefer keeping kebab html like idea consistency like idea spec compliance found camelcase tag html caseinsensitive use instead vue automatically match components defined camelcase ids javascript warning already pretty concise component registration works said others mentioned think allowing camelcase html great long still option continue writing kebab", "d": "2/2016"}, {"body": "yah agreed trying think many arguments could honestly nt would stick like mentioned end day arguing stylistic choices personally think long stick already option use new stuff forced cool changes mentioned", "d": "2/2016"}, {"body": "kebabcase still works using camelcase pascalcase option nt break bc use ca nt addition nt change forces something different new option thing could say suggest make sure option well documented good work always evan scott", "d": "2/2016"}, {"body": "maybe make option warning ignoring say component refer html personally would prefer warning like props course think lateronreadabilty important thing working first try also stumbled upon kebabcasecamelcase problems real problem got warnings wrong default could warning works irrelevant also warnings visible debug mode think", "d": "2/2016"}, {"body": "things like vs vs imagine quite rare occurrences though", "d": "2/2016"}, {"body": "simplesmiler kebab case props would still matched casesensitivity using old rules", "d": "2/2016"}, {"body": "nt promote transparency web standards custom elements spec states names contain hypen simplesmiler said would execute code would especially nasty implementation events html case insensitive lets introduce idea casing library implementation would promote casing html opinion bad idea also use hypen separation file names remove well start adding casing lastly hypen amp casing system coexist promotes different coding styles new developers team prefer paulpflug approach proper warnings area would help lot", "d": "2/2016"}, {"body": "fan making html pascalcamel case breaks web standards know nice keep consistency trying make things tiniest bit consistent add another layer complexity may also enticing bad practices library promote staying standards mislead developers one day may work place using vue resulting understanding html parsed differently totally agree paulpflug adding warning means less work production code puts developers back track writing valid code", "d": "2/2016"}, {"body": "good argument case nt implemented commonly highlighted reason people dislike angular agree totally keeping libraries conforming standards drafted html case sensitive thrown many issues opening situations much flexibility", "d": "2/2016"}, {"body": "blakenewman regarding think already talk previous comment", "d": "2/2016"}, {"body": "comment sums pretty well evan proposing changing html spec proposing changing vue locates component names rather convert kebab camel finding matching component would probably strip dashes accommodate kebab search components case sensitivity html continue spec compliant also would allow us use whatever case want seems like evil bad choice", "d": "2/2016"}, {"body": "plan style promoted style ie docs examples written like option kebabcase style remain primary one", "d": "2/2016"}, {"body": "blakenewman read comment conform standard paulpflug guidobouman already warnings camelcase tags attributes using latest versions however camelcase checks must performed compile time runtime case information would already lost due html parser behavior using vue without wo nt ca nt warnings", "d": "2/2016"}, {"body": "spec blakenewman linked web components state custom element type identifies custom element interface sequence characters must match ncname production must contain hyphenminus character must contain uppercase ascii letters sure relates vue components docs say try loosely follow web components standard may noticed vuejs components similar custom elements part web components spec fact vuejs component syntax loosely modeled spec say spec needs change first order allow camelcase pascalcase scott", "d": "2/2016"}, {"body": "smolinari vue docs say loosely modeled strictly mind leaves room change", "d": "2/2016"}, {"body": "case information may lost could still warning wrote mycomponent template parsed expected vue debug mode look besides warn wrong usage lost case information nt matter could option suppress warning match directly instead equals suggested behavior", "d": "2/2016"}, {"body": "migrating camelcasepascalcase would somewhat jarring see jslike syntax html reason stand jsx paulpflug suggestion problem onboarding beginners issue warning informs user problem", "d": "2/2016"}, {"body": "paulpflug sound like valid idea", "d": "2/2016"}, {"body": "agree warning says feels better silent substitution", "d": "2/2016"}, {"body": "possible global option api eg default", "d": "2/2016"}, {"body": "wondering ideal striving rpkilby said looks weird essentially problem exists js html different technologies use different naming systems using case kebab camel technologies shift weirdness one place another underlying problem persist believe best draw line current line e kebab case html context camlecase pascalcase js context good imo support current conventions instead looking better one ofcourse use warning help beginners", "d": "2/2016"}, {"body": "prograjkamal yeah inclined implement warning", "d": "2/2016"}, {"body": "vote adding warning scott", "d": "2/2016"}, {"body": "adding warning", "d": "2/2016"}, {"body": "warning", "d": "2/2016"}, {"body": "closed via amp", "d": "2/2016"}, {"body": "related directives respected terminal directives like normal ones copied onto inserted elements mitigated programatic access slots wrap additional element except cases work like fixed width related pretty much except specificity", "d": "2/2016"}, {"body": "seems serves purpose hook styling inserted slot content particular use case merging directives would useful general want limit component inserted content compiled inserted parent child displays nt modify", "d": "2/2016"}, {"body": "potential use case stumbled upon recently detecting changes dimensions slotted element layout purposes general detecting element enters leaves slot worked around exposing method detecting changes side guess programmatic slot api would solve think issue closed reviewed api lands", "d": "2/2016"}, {"body": "thanks please move issue vuejsvuejsorg repo instead", "d": "2/2016"}, {"body": "thanks reporting issue filter places minus symbol first quote notation require custom filter corporatefinancespecific use case", "d": "2/2016"}, {"body": "please provide actual reproduction single template snippet far enough diagnose issue", "d": "2/2016"}, {"body": "got sort issue vif use transition dom element deconstructed end finding hard create repo see create jsbin", "d": "2/2016"}, {"body": "tried replicate issue nt fail also back version ov vue behaviour either html issue something else best show screen shot well remove transition slidedown works expected sorry unable provide reproduction", "d": "2/2016"}, {"body": "also problem seems affect safari", "d": "2/2016"}, {"body": "sorry cant paste code due legal reasons try make fiddle evening think sort race condition occurs randomly like time never really jumped vue source idea could cause site switched transitions temporary fix couldnt figure wrong sure even transitions work js event like transition dom element ended calculate transition length css use timeout hiding element try tinkering transition times check making nested one transition shorter outer fix problem using vue version npm issue occurs linux google chrome", "d": "2/2016"}, {"body": "wait event applying dom operation eg setting chances related toggling fast enough transition skipped case try using something like instead closing thread since one able provide repro determine actual cause issue", "d": "2/2016"}, {"body": "ooh might chrome toggle shadow checkbox toggle checkbox remove transition rangeblur works expected whoooo sorry happy able finally reproduce", "d": "2/2016"}, {"body": "matmoo issue actually caused css rule specificity higher specificity two class selectors may want make transition thing lesssass mixin mix add transition rules", "d": "2/2016"}, {"body": "good catch thanks hopefully issues others helpful", "d": "2/2016"}, {"body": "\u5e0c\u671b\u8fd9\u4e2a\u53ef\u4ee5\u5e2e\u52a9\u5230\u4f60", "d": "2/2016"}, {"body": "\u53ef\u4ee5\u53c2\u8003\u6587\u6863\u7684 \u8fd9\u4e2a\u90e8\u5206", "d": "2/2016"}, {"body": "\u5b50\u7ec4\u4ef6\u7684", "d": "2/2016"}, {"body": "thornfieldhe zhang jing vuejsvue thornfieldhe vue \u5728\u7ec4\u4ef6\u5185\u4f7f\u7528checkbox\u7ed1\u5b9a\u591a\u4e2a\u52fe\u9009\u6846\u88ab\u5f53\u4f5c\u5355\u4e2a\u52fe\u9009\u6846\u5904\u7406 \u5e0c\u671b\u8fd9\u4e2a\u53ef\u4ee5\u5e2e\u52a9\u5230\u4f60 reply email directly view github", "d": "2/2016"}, {"body": "nt think need use nwjs", "d": "2/2016"}, {"body": "provide reproduction", "d": "2/2016"}, {"body": "html \u9996\u9875", "d": "2/2016"}, {"body": "von clickself additem event", "d": "2/2016"}, {"body": "event", "d": "2/2016"}, {"body": "nt required", "d": "2/2016"}, {"body": "reproduce example working expected make sure using latest version vue supported reopen provide actual reproduction", "d": "2/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted forum stackoverflow thanks", "d": "2/2016"}, {"body": "admin\u6a21\u677f\u4e2d\u90e8\u5206\u5185\u5bb9\u4e0d\u517c\u5bb9", "d": "2/2016"}, {"body": "event listener obviously event passed generally considered bad practice retrieving values dom js", "d": "2/2016"}, {"body": "think outside dom harness power vue filters", "d": "2/2016"}, {"body": "thank understand must load items using vue strart workingfiltering", "d": "2/2016"}, {"body": "please use issues ask general questions use gitter room forum", "d": "2/2016"}, {"body": "done proper place let people know new articletutorial vue", "d": "2/2016"}, {"body": "tweet mention vuejs wed feb pm mtyson notifications githubcom wrote done proper place let people know new articletutorial vue reply email directly view github", "d": "2/2016"}, {"body": "reproduce please specify version using downloaded", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "fixed next release", "d": "2/2016"}, {"body": "nt think makes sense unwatch watcher one one relationship want watch subpath use separate watchers", "d": "2/2016"}, {"body": "well think would easier specifying eg watchers prop nt watched thank explantion", "d": "2/2016"}, {"body": "relying single deep watcher many properties exceptions seems like sign design problems consider using computed properties watching function instead use watch absolutely", "d": "2/2016"}, {"body": "case watching changes entity attributes excluding relationships anyway thank much advice", "d": "2/2016"}, {"body": "trying nt feel right", "d": "2/2016"}, {"body": "hiendv inside", "d": "2/2016"}, {"body": "dispatch event fires request update item whenever attribute changes item updated usecase", "d": "2/2016"}, {"body": "need exclude certain paths sounds odd object supposed persisted piece data persisted alternatively", "d": "2/2016"}, {"body": "actually would refactor instead duplicating lines problem properties watchers eg relationships changes would caught twice causing unneeded update request original item whose actual attributes nt change understand totally logic happen want avoid easiest way anyway thank patience happy lunar new year", "d": "2/2016"}, {"body": "hiendv pardon interruption seems trying reinvent computed properties", "d": "2/2016"}, {"body": "simplesmiler evan said thing guess read documentation carefully enough", "d": "2/2016"}, {"body": "please provide reproduction bug actually happening also make sure read section", "d": "2/2016"}, {"body": "ok actually created jsfiddle writing scratch saw concept works expected compared code jsfiddle saw somehow accidentally put right outside doh", "d": "2/2016"}, {"body": "please provide reproduction", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "haoziluo display \u7528\u6570\u636e\u9a71\u52a8\u89c6\u56fe", "d": "2/2016"}, {"body": "\u8865\u5145\u4e00\u4e0b haoziluo \u5728 \u90fd\u4e0d\u4f1a", "d": "2/2016"}, {"body": "orderlayer\u662f\u4e0d\u662f\u6839\u672c\u4e0d\u5b58\u5728", "d": "2/2016"}, {"body": "\u91cd\u73b0\u7684\u610f\u601d\u662f\u8981\u770b\u5230 bug js orderlayer", "d": "2/2016"}, {"body": "closing inactivity please reopen follow information", "d": "2/2016"}, {"body": "please use forum ask questions know already available use custom directive", "d": "2/2016"}, {"body": "directly give string", "d": "2/2016"}, {"body": "wow nt know", "d": "2/2016"}, {"body": "oevgeny sorry nt spotted forum go future awesome saves lot headache manipulating strings cheers guys", "d": "2/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted forum stackoverflow thanks", "d": "2/2016"}, {"body": "appear inside due html spec restrictions appear inside afaik also table elements like appear naked without surrounding limitation html works unfortunately work around", "d": "2/2016"}, {"body": "thanks use attribute working around", "d": "2/2016"}, {"body": "defined title data var new vue instance change title title quote title literal title", "d": "2/2016"}, {"body": "oh sob got thx", "d": "2/2016"}, {"body": "please ask questions forum depends context something like", "d": "2/2016"}, {"body": "matmoo sorry nt get case looks like description bit thanks forum link posted topic description detailed", "d": "2/2016"}, {"body": "updated original syntax still good", "d": "2/2016"}, {"body": "oh thanks thought syntax deprecated", "d": "2/2016"}, {"body": "pr", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "hi please make sure read issue reporting guidelines opening issue issue list accepts bug reports feature requests questions posted forum stackoverflow thanks", "d": "2/2016"}, {"body": "fiddle nothing described", "d": "2/2016"}, {"body": "sorry forgot update fiddle fiddle correct", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "technically bug callback called assignment complete usage also nt seem make sense basically equivalent watch", "d": "2/2016"}, {"body": "overlooked fact part see work also see example representative actual code calls conditionally nt want call defined currently following closing issue since bug probably something weird anyways", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "looks like problem laravel blade engine using template partials able get working thanks", "d": "2/2016"}, {"body": "paste new screenshot", "d": "2/2016"}, {"body": "looks like ios bug since still fixed today great job apple nothing vue fixed user code adding disabled option first one", "d": "2/2016"}, {"body": "vels suggestion list good idea", "d": "2/2016"}, {"body": "like modifier preference either suffice", "d": "2/2016"}, {"body": "requirement make window scroll nth row table rendered array supported wrote html must make tr component use get", "d": "2/2016"}, {"body": "thanks", "d": "2/2016"}, {"body": "nilssolanki requirement solve problem", "d": "2/2016"}, {"body": "read documentation nt accompanying text though nt see first last code example property called", "d": "2/2016"}, {"body": "wow great thanks btw figured way sure proper approach seems clean works", "d": "2/2016"}, {"body": "hi time please check thank much", "d": "2/2016"}, {"body": "problem think let developers decide name vref developer solve conflict vref name let see code situation use refsnested index name situation need add feature make accept variable", "d": "2/2016"}, {"body": "could nt see", "d": "2/2016"}, {"body": "seems like still fixed", "d": "2/2016"}, {"body": "plan make enterclass leaveclass dynamic example carousel slide may slide left right assign vue transition slide enter leave classes unchangeable slide either left right case need assign dynamic classes way thanks great work", "d": "2/2016"}, {"body": "create pr want focus complex stuff milestone", "d": "2/2016"}, {"body": "blakenewman would great development nt really started yet see branch created submit prs", "d": "2/2016"}, {"body": "late party simplesmiler get point think could better maintain familiarity libraries many us use every day underscore lodash etc actually lodash uses turn based alias", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "pavelpolyakov ever sort issue addchild generated component sharing data earlier created addchild trying add modal via addchild cause ca nt figure markup experiencing thing certainly appropriate way ca nt seem find frowning", "d": "2/2016"}, {"body": "ah looks like sort quite issue though seems keeps hunting telescope", "d": "2/2016"}, {"body": "found exclamation stuckouttonguewinkingeye seems passing construction options parameter vs etc magically works left posterity tophat", "d": "2/2016"}, {"body": "bigbluehat please paste rich code part nt understood solution comment would interesting check regards", "d": "2/2016"}, {"body": "pavelpolyakov think dealing different issues however basic difference js var componentdef template data function return name var app vue methods addcomponent function addchild componentdef seemed happening ever adding fully formed child component rather extended component based first parameter since nonfunctionbased component definition look identical vue nt know care mis using fixed smile", "d": "2/2016"}, {"body": "syntax seem work static elements form inputs proper way achieve still bind listeners body", "d": "2/2016"}, {"body": "fyi think still using old param", "d": "2/2016"}, {"body": "docs still mentions set", "d": "2/2016"}, {"body": "matthewcanty right depreciated", "d": "2/2016"}, {"body": "possible op wanted using see also codepen example", "d": "2/2016"}, {"body": "thank much another great feature developed vue team", "d": "2/2016"}, {"body": "change filter modifiers seems broken could exported possible add new codes like add things like function keys", "d": "2/2016"}, {"body": "whitelynx exposed next release", "d": "2/2016"}, {"body": "thanks", "d": "2/2016"}, {"body": "hello think adding typescript definition files repository current version contains definition file", "d": "2/2016"}, {"body": "possible distribute definition files separately ideally want keep separate vue written typescript available vsvsc users nice", "d": "2/2016"}, {"body": "needed separate going utilize definitelytyped copy paste files included nt download manually would like hear opinions people really wonder people hopes", "d": "2/2016"}, {"body": "definitelytyped sounds like better idea", "d": "2/2016"}, {"body": "worked typescript yrs vue yrs thoughts publish vuejs definitions definitely typed trust dts published unless wrote generate appdts specific app viewmodelapi vueify frustrating part vuejs typescript dynamic nature vuejs api viewmodel generates api runtime gettersetters alternate location methodsevents scoped viewmodel code structure typescript understand shift unless informed thus either needs remapping model api needs dts file denotes app api believe vueify generate dts file could help assert type conformance use viewmodel methodfilterstemplatesevents feels right path go vue need written typescript vue api change using typescript api babel enabling generation typescript definition file specific vue file would provide many benefits autocompletion model errors development method errors template errors see react jsxtsx thought allot hindsight contorting vue ts structures ideal today generating dts enhance vuejs use feels along path would like see ted thu feb pm evan notifications githubcom wrote definitelytyped sounds like better idea reply email directly view github", "d": "2/2016"}, {"body": "frustrating part vuejs typescript dynamic nature vuejs api thought allot hindsight contorting vue ts structures ideal today generating dts enhance vuejs use feels along path would like see insightful think pretty much nails feel missing various thirdparty dts files accompanying contortion code mixins etc whether trust libraries approach contorting vue match ts typical oo patterns may deed still fear making cornerstone big ts projects seen sort thing go wrong since started writing ts years ago using plain js large projects something get behind anymore", "d": "2/2016"}, {"body": "nt appear work still still fail trigger event", "d": "2/2016"}, {"body": "ryanmortier conflicts modifier syntax introduced use periods event names", "d": "2/2016"}, {"body": "need think reactive way shouldt need know property changed watching whole objectarray case need perform custom logic specific property change watch property", "d": "2/2016"}, {"body": "keepitreal think recommend way work around component wraps element array wrappercomponent would watch mutations something like html", "d": "2/2016"}, {"body": "dirty check using html string use vuerouter ca nt change hashurl", "d": "2/2016"}, {"body": "suppose calculate average link", "d": "2/2016"}, {"body": "request news", "d": "2/2016"}, {"body": "one let get source", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "realized source editor uses codemirror let see put sample together", "d": "2/2016"}, {"body": "done", "d": "2/2016"}, {"body": "great thanks robertleeplummerjr", "d": "2/2016"}, {"title": "listento function call triggering page load", "body": "hi html contains scripts following order following code snippets file mainappjs var app app appmainview backboneviewextend el mainapp initialize function thislistento backbone list thisshowlists showlists function function get executed backbone successfully triggering list event var lists new applists var listsview new applistsview collection lists routerjs var app app var listrouter backbonerouterextend routes showlists showlists function consolelog accessing home getting printed console backbonetrigger list applistrouter new listrouter backbonehistorystart homeappjs seems issue listento page loaded page loaded everything works expected", "num": "3972", "d": "2/2016"}, {"title": "properly contributing someone elses respository", "body": "hello using github first time school project impression figured realized nt case problem partner created group repository made fork repository started adding commits pushed github getting repository branch commits ahead mypartnersname master read tutorial thought said fork repository maybe tutorial something else want use repository check repository sure enough missing commits made appears fork pretty simple guess hope simple fix someone help", "num": "3971", "d": "2/2016"}, {"title": "brackets support backbonecollection", "body": "backbonecollection actually subset array however currently nt allow access value using brackets instead need use", "num": "3970", "d": "2/2016"}, {"title": "docs collectionadd model", "body": "project work recently involved following workflow hit web endpoint returns list stanzas comma separated string order displayed ui ex endpointstanzas gt split list hit endpoints stanzas get detail display ex endpointstanzasstanza gt data etc since getting asynchronously sent also wanted add collection order list step ordered ran map comma split list string stored index point insert ex collectionadd fetchedmodel storedindex however turns collection nt quite behave like javascript array insert nonexisting index since collection nt dynamically resize javascript thought backbone would intuitively lost lot time debugging error result suggestion would following add docs collectionadd backbonejsorg providing index option larger size collection dynamically resize collection happy implement branch create pull request actually provide functionality desired", "num": "3969", "d": "2/2016"}, {"title": "collections modelid method passed model second argument", "body": "right passed plainobject representation model attributes makes difficult application developers create ndegree polymorphic collection subclasses contrived example javascript collection mixed entity types maintains sort order based joindate property var entities collectionextend modelid attrs id attribute use determined runtime comparator joindate two entity types different idattributes assume may n different entity types different idattributes determined database backing example application var company modelextend idattribute companyid var customer modelextend idattribute customerid proceeding add remove customers companies etc entities collection mess cache entities collection aware different possibilities runtime method written satisfy needs app modelid callback took form second argument model question backbone retain backwards compatibility allow application developers something like id entitiesmodelid function modelid attrs model return attrs modelidattribute thismodelprototypeidattribute id may even make sense make function default implementation support polymorphic collections box still maintains backwards compatibility implementation already polymorphic collections still function normally models idattribute set added collection collection model constructor already polymorphic type nonstandard idattributes already modelid method overwritten happy throw pr think good idea", "num": "3965", "d": "2/2016"}, {"title": "collection set add events sends optionsindex correspond wrong index", "body": "pointed issue deprecated events however certain cases events generated call collection set passes stale assigned generation events collection removemodels since options argument event handlers well documented able rely anything passed including optionsindex intent would sent specified however unset unspecified set unset events get stale removemodels since object reused across events add remove needs cleanup events triggered bug preconditions optionsremove true optionsat null passed attrs elements add collection elements remove bug manifestation removemodels set optionsindex sending triggers optionsat null set method clear optionsindex set removemodels triggering add events case last optionsindex remove events reused add events var array map function val return property val", "num": "3961", "d": "2/2016"}, {"title": "backbonecollection set add events may send wrong optionsindex", "body": "bug preconditions optionsremove true optionsat null passed attrs elements add collection elements remove bug manifestation removemodels set optionsindex sending triggers optionsat null set method clear optionsindex set removemodels triggering add events case last optionsindex remove events reused add events var array map function val return property val", "num": "3960", "d": "2/2016"}, {"title": "xiaomi mi lolipop mobile supported show custom emoji keybaord", "body": "customd new customdialog softkeyboardthis androidrstylethemenotitlebar customdsetcontentview rlayoutyourcustomlayout customdgetwindow setflags windowmanagerlayoutparamsflagnottouchmodal windowmanagerlayoutparamsflagnottouchmodal customdgetwindow setflags windowmanagerlayoutparamsflagwatchoutsidetouch windowmanagerlayoutparamsflagwatchoutsidetouch customdgetwindow setflags windowmanagerlayoutparamsflagaltfocusableim windowmanagerlayoutparamsflagaltfocusableim customdgetwindow clearflags windowmanagerlayoutparamsflagdimbehind customdgetwindow settype windowmanagerlayoutparamstypesystemalert customdgetwindow setsoftinputmode windowmanagerlayoutparamssoftinputstatevisible windowmanagerlayoutparams lp customdgetwindow getattributes lpwidth windowmanagerlayoutparamsmatchparent lpgravity gravitybottom gravityleft lpdimamount", "num": "3959", "d": "2/2016"}, {"title": "collection forof support", "body": "would nice could write maybe would take adding browsers without symbols generators probably nt forof anyway transpile think", "num": "3954", "d": "2/2016"}, {"title": "optionsindex add event sometimes exceeds collection length", "body": "adding models collection index greater collection length models added end test case shows index provided corresponding events reflects requested indices actual insertion indices sure qualifies bug tracking exact changes collection would great provided event would reliably reflect actual insertion index background need back native collectionviews mobile framework backbone collections js describe collection function var collection events beforeeach function events collection new backbonecollection collectionadd name name b collectionon add function model collection options eventspush add modelget name optionsindex set provides correct indices add events function b collectionadd name c name b c expect names collection tobe b c function names collection return collectiontoarray map function model return modelget name join", "num": "3951", "d": "2/2016"}, {"title": "wrong optionsindex add event", "body": "changing collection using events contain wrong indices added models problem tracking changes collection add test demonstrate problem js describe collection function var collection events beforeeach function events collection new backbonecollection collectionadd name name b collectionon add function model collection options eventspush add modelget name optionsindex collectionon remove function model collection options eventspush remove modelget name optionsindex set provides correct indices add events function var collectionat b collectionset name c name c expect names collection tobe c function names collection return collectiontoarray map function model return modelget name join", "num": "3950", "d": "2/2016"}, {"body": "kedarmanure please use stackoverflow questions ps solution read try fiddle fires event sec singleton extended backboneevents thanks", "d": "2/2016"}, {"body": "someone close", "d": "2/2016"}, {"body": "yep stackoverflow gitter channel better places help debug app thanks looks like listener set route triggered one solution move call setting", "d": "2/2016"}, {"body": "sorry posting extensive research googleso right backbonehistorystart called setting fixed issue", "d": "2/2016"}, {"body": "repository backbone js lib question scope issue tracker anyway find good resources github git", "d": "2/2016"}, {"body": "aw jeez really sorry thanks redirecting", "d": "2/2016"}, {"body": "wait go found backbone issue tracker website pointed", "d": "2/2016"}, {"body": "hmm really sure exactly think combination googling github help well paying much attention exactly got", "d": "2/2016"}, {"body": "backtrack history would nt believe often happens love figure happens", "d": "2/2016"}, {"body": "got googled github questions second result without paying much attention seemed like found looking", "d": "2/2016"}, {"body": "jashkenas let know opinion ok send pr", "d": "2/2016"}, {"body": "sure would good idea first would approach defining property whenever user addsremoves item collection point easily mixed something like core inclusion js var indexedcollection backbonecollectionextend constructor function backbonecollectionapply arguments", "d": "2/2016"}, {"body": "pretty complicated nt like subclassing fiddle works pretty well difference currently see settings property nt update internal object array nt remove items inside another technic relies js var collection extend backbonecollectionprototype properly arrayprototype objectsetprototypeof collection bacbonecollectionprototype", "d": "2/2016"}, {"body": "rivetsjs library nt support iteration complex collections arrays bad thing using slower loop items though wo nt big deal implement actually subset", "d": "2/2016"}, {"body": "subclassing issues weird side effects different javascript environments nt see happening backbone core also lead quite confusing scenarios user tried would way backbone intercept without defined properties mixed bag issues stalniy would suggest make rivets use iteration use collection mixin defines properties posted something like might cool backbone plugin", "d": "2/2016"}, {"body": "make sense nt thought setting items reading", "d": "2/2016"}, {"body": "ashivkum pretty simple use want make clear make pr close please thanks", "d": "2/2016"}, {"body": "please keep mind tried without much success", "d": "2/2016"}, {"body": "pr", "d": "2/2016"}, {"body": "want make pull request adding unit test merge investigate", "d": "2/2016"}, {"body": "look change log improve performance add optionsindex longer set event callback collectionindexof model used retrieve index model necessary nt set unless passed index", "d": "2/2016"}, {"body": "nt set optionsindex unless passed index bug add event backbone actually sending stale optionsindex set removemodels end removemodels needs documentation explicit sent options parameter callback able rely case stale data leftover remove event", "d": "2/2016"}, {"body": "sure let fix", "d": "2/2016"}, {"body": "pull request related open issue", "d": "2/2016"}, {"body": "unfortunately unsupported browsers throw syntaxerror point requiring backbone transpiled would make great plugin projects", "d": "2/2016"}, {"body": "support doable without throwing syntaxerror example lodash works iterator iterable wo throwing need detect func assigned symbol property returns lastly add function wrapper returns following iterator protocol iterator support makes happy pretty fun things work newer apis adding method little function", "d": "2/2016"}, {"body": "fix move mathmin logic figure guard line jridgewell thoughts future open runnable jsfiddle codepen assist debugging minor code golf function could written", "d": "2/2016"}, {"body": "fix move mathmin logic figure guard line jridgewell thoughts yup", "d": "2/2016"}, {"body": "take look solve", "d": "2/2016"}, {"body": "reopening due", "d": "2/2016"}, {"body": "whooops", "d": "2/2016"}, {"body": "set index prop passed otherwise undefined hand always sets index definitely inconsistency alternative costly add", "d": "2/2016"}, {"body": "different etc recall correctly stopped passing along avoid shadowing model url collection nt remember stopped passing", "d": "2/2016"}, {"body": "also future please open one issue pull request per change need two places", "d": "2/2016"}, {"body": "hi different asking ability pass collection init seems added somewhere deprecated fix bug tickets mentioned convo resulted allowing pased options collection model constructors respectively allowing collection somewhat indirectly solves bug argument allowing merely consistent change collection far see essentially proposing absence specific instruction model class collection creates model instance set url rather urlroot nt care done implement originally made urlroot option constructor actually thats wrong model specifies urlroot take precedence pushed squashed amendment pr minor thing easy enough hack around like feel correct inutitive behavior also future please open one issue pull request per change need two places problem try think pr opening issue future simple", "d": "2/2016"}, {"body": "actually board passing model constructor since may mean ajax url model url nt confusion", "d": "2/2016"}, {"body": "consistency argument pretty compelling urlroot work url", "d": "2/2016"}, {"body": "ca nt differentiate jquery model maybe open object passed options model", "d": "2/2016"}, {"body": "right point going one one broken nt seems kind gross though use case setting either method", "d": "2/2016"}, {"body": "edit fatfingered writing real comment", "d": "2/2016"}, {"body": "samatgithub brought use case model created collection tied collection nt know use case passing option modelcollection", "d": "2/2016"}, {"body": "model created collection tied collection urlroot already absolutely set collection could nt logic live collection passed option something like", "d": "2/2016"}, {"body": "currently item model instance removed collection longer talk remote urlroot edge case would make sense model keeps collection passed option nt code would perfect spot", "d": "2/2016"}, {"body": "wait use case creating model collection removing model collection surprised model nt keep collection url nt like think behavior currently right one model collection nt url urlroot set check collection nt collection responsible setting model tied collection longer", "d": "2/2016"}, {"body": "wait use case creating model collection removing model collection surprised model nt keep collection url well yes unexpected behavior motivated pr note however user removing model backbone remove model collections certain situations leaving hanging around without way talk remote unless specifically aware behaviour set things accordingly think behavior currently right one model collection nt url urlroot set check collection agree still case nt collection responsible setting model tied collection longer still tied backbonecollection still tied item remote collection model proxy backbonecollection factory backbonemodels proxies nt work standalone maybe subtle difference view responsibilities backbonemodel backbonecollection semantics remove opposed destroying model nt think backbonecollection reflection entire remote collection nt think view removing model collection synonymous deleting remote collection hey model fell view pr driven newb scratching head model part ui referencing got removed collection sync longer worked thought wrong end day understand behavior easy enough hack around took think though way models collection urls membership related bit think", "d": "2/2016"}, {"body": "agree surprise feel like many edge cases would backbone determine url urlroot nt set opposite behavior would surprising best bet probably set urlroot model initialize method know could potentially reference models outside collection right collection may reference models resource argue removed model collection usually reasoning behind sync removing model surprising still tie removed model collection longer member", "d": "2/2016"}, {"body": "thank feedback get path api already encoded navigate using path without extra encoding think found broken code called correctly called event listener compare cached decoded fragment decoded backbone result another fragment cached one including configured handler executed think backbone fixed eg calling thisdecodefragment thisgetfragment", "d": "2/2016"}, {"body": "want open pull proposed solution tests fail master happy take look", "d": "2/2016"}, {"body": "proposal including test", "d": "2/2016"}, {"body": "circumstances would id sounds like bug code better places fix code bugs backbone proper", "d": "2/2016"}, {"body": "categories coming external api one undefined like keep cause need get models collection category often", "d": "2/2016"}, {"body": "pr allow examples contrived favor adding tests back ensure backbone unopinionated reasonable ensures case tested", "d": "2/2016"}, {"body": "also similar case id object object", "d": "2/2016"}, {"body": "update pr case given nature accepting wide range values think judicious measures nt think adam going agree though p", "d": "2/2016"}, {"body": "duskpoet really model ids supposed used best bet first case fix bug second", "d": "2/2016"}, {"body": "really wish see new class properties proposal sets prototype seems many involved proposal worried implications find incredibly inconsistent class methods get directly attached prototype jeffmo proposal puts constructor gone attaching properties directly prototype able migrate pretty much reactbackbone code classes", "d": "2/2016"}, {"body": "option wonder rational behind models exact behaviour present collection optional toplevel keys api highly possibility specially external api", "d": "2/2016"}, {"body": "given link posted find current master git ref link uptodate would code", "d": "2/2016"}, {"body": "worth putting documentation website nt see mentioned router anywhere happy write something", "d": "2/2016"}, {"body": "takes searching documented application served root url domain sure tell history root really option backbonehistorystart pushstate true root publicsearch really history option router one", "d": "2/2016"}, {"body": "ah thanks pointing", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"title": "willdestroyelement called component destroyed using component helper", "body": "component rendered component helper hook called element removed dom rather twiddle contains additional details ember twiddle", "num": "13028", "d": "2/2016"}, {"title": "assertion failed attempted register view id already use", "body": "problem render wrapping component twice two different places page component apparently ca nt used twice page component used templates error message mean tried completly commenting foundationmodal content exception still happens", "num": "13026", "d": "2/2016"}, {"title": "add waitfor selector test helper", "body": "helper would useful components wrap jquery plugins take generate html problem expanded could convert js let done assertasync click buttontoshowcomponent settimeout gt andthen function assertstrictequal find jquerystuff length done js click buttontoshowcomponent waitfor jquerystuff andthen function assertstrictequal find jquerystuff length would basic signature helper basic implementation action could submit pr approve nt know extreme enough addition warrant rfc defer experts", "num": "13025", "d": "2/2016"}, {"title": "input cursor jumps right decimal sets value zero using property query param", "body": "ember twiddle showing bug", "num": "13023", "d": "2/2016"}, {"title": "ember components without layouts working including linkto", "body": "bit behind trying update app currently ember running issue introduced getting error thats triggered htmlbars file get app render adding empty templates components currently template know actual solution worst part error getting thrown instance built ember component well looks like block code returning layout object even result lines later return tries dig layout object contains undefined properties errors layoutmeta undefined layout return var fragmentreason layoutmetafragmentreason feels like missing something really simple like feature flag something especially since months ca nt find issue close let know info might provide help clear thanks", "num": "13020", "d": "2/2016"}, {"title": "class getters broken ember", "body": "weird behavior upgrading ember narrowed getters class class like calling js code return everything works change class like using computed properties andor templates originally posed stackoverflow got response nt able reproduce outside application fine workaround least radar case someone else runs", "num": "13011", "d": "2/2016"}, {"title": "replace jshintjscs eslint", "body": "internally switched using jshintjscs eslint lately see considered unlikely jshint include asyncawait support time soon would like propose switching eslint similar reasons note talking forcing users use eslint project linting codebase", "num": "13006", "d": "2/2016"}, {"title": "custom template working component", "body": "hi trying something along lines working avail got wrapped content never gets rendered homemade markdown converter made reason need use instead using string want support databinding within markdown content course longer extending longer available instead embercomponent like could causing issue embercomponent derives emberview assume would work even get basic example like work indicates example outdated maybe even working maybe correctly working component previous code looked something like nt work content rendered template indeed statement case coffeescript import ember ember import layout template export default embercomponentextend layout layout yield context options morph blockarguments view optionsdataview markdown get text tostring content marked markdown content emberhandlebarscompile content know public api smile happy change whichever way ability support databinding within markdown critical part getting rendered displayed template trivial skip huge thanks advance", "num": "13005", "d": "2/2016"}, {"title": "container serializable", "body": "nt done enough work generate full rfc looking high level input people familiar internals ember ember good story handling application state wonder similarly good story handling app state serialization think would help debugging ember apps production error reports could include full description state", "num": "13002", "d": "2/2016"}, {"title": "emberobjectcreate reset nested objects", "body": "nested object ember calling create object reset nested objects within object see jsbin tested case version", "num": "13001", "d": "2/2016"}, {"title": "html anchor hash support linkto template", "body": "working singlepage app index route many sections user scrolls screen work want use html anchor hash property see closed issue last year ember supports default browser behavior linking anchor hash properties grateful also mentions possibility creating fragment feature linkto component try site em twiddle nt work nt see source code supported feature whether future notice put element handlebars template user click anchor hash ends triggering reload page another route rather mere route transition like use linkto instead mere element else might utilize anchor hash properties ember thanks bryan", "num": "12997", "d": "2/2016"}, {"title": "array yields boolean", "body": "beta canary value helper array yield rather array see twiddle example behavior occur", "num": "12995", "d": "2/2016"}, {"title": "find module broccolistew", "body": "getting following error trying run repo looks like missing cc stefanpenner", "num": "12993", "d": "2/2016"}, {"title": "getting assertion failed helper named eachin could found", "body": "developing app using embercli ember version use eachin helper getting error message dev console assertion failed helper named eachin could found per guide thanks advance adithyan", "num": "12992", "d": "2/2016"}, {"title": "close", "body": "sorry", "num": "12989", "d": "2/2016"}, {"title": "embercomputed chains compute", "body": "chains compute custom function used problem nt appear appindexcontroller embercontrollerextend modelcustom embercomputed model function return thisget model work correctly modelcustomalias embercomputedalias modelcustom modelcustomaliasreads embercomputedreads modelcustomalias modelcustomaliasreadonly embercomputedreadonly modelcustomaliasreads reproduce issue versions ember tested jsbin", "num": "12987", "d": "2/2016"}, {"title": "form submission working", "body": "hi trying submit form using enter key based documentation site nt seem working using ember handlebars first name input id firstname class formcontrol type text valuefirstname last name input id lastname class formcontrol type text valuelastname js approutesformjs import ember ember export default emberrouteextend actions submitform alert submitting", "num": "12986", "d": "2/2016"}, {"title": "error doco example position position", "body": "minor issue noticed scroll example provided awesome looking think typo though looks like position actually function call", "num": "12981", "d": "2/2016"}, {"title": "accessing array index variable template", "body": "template access array element works somehow ca nt use variable index eg ways solve specific problem sure whether bug missing feature ember twiddle", "num": "12980", "d": "2/2016"}, {"title": "glimmer performance integration checklist", "body": "list items nt strictly required semantic compatibility probably need happen ship hook observers second hit reference use pervasively throughout glimmer code eliminate cost attribute merging normal elements basic constreference optimization related related", "num": "12979", "d": "2/2016"}, {"title": "reopen initializer working immediatly", "body": "hi addon initializer like import subscription tinymodelssubscription import ds emberdata export function initialize applicationinstance subscriptionreopen customdata embercomputed function return consolelog value export default name modifymodels initialize route import ember ember export default emberrouteextend model params var record thisstorefindrecord subscription paramsid consolelog recordcustomdata consolelog recordget customdata return record actions submit function consolelog thiscontrollermodelcustomdata consolelog thiscontrollermodelget customdata initializer triggered method executed model function returns action correct something wrong", "num": "12977", "d": "2/2016"}, {"title": "master branch longer builds npm windows", "body": "started happening weeks ago repro many versions node npm including latest versions note build still works fine windows emberjs repro stes git clone master recursive cd master git checkout master npm install npm run build result", "num": "12973", "d": "2/2016"}, {"title": "setting target propoerty linkcomponent", "body": "hi adding target property linkto component seems stop link working together embertwiddle replicating issue", "num": "12972", "d": "2/2016"}, {"title": "unable pass model transitiontoroute last nested route dynamic segment", "body": "nesting three deep last route dynamic segment unable pass parent models transtion last route please see twiddle press button", "num": "12969", "d": "2/2016"}, {"title": "feature request whitelisting components render within block component", "body": "looks like framework nt support default way whitelisting components render within yield requirement able render firstchild secondchild components supplied parentcomponent render hello world componentdata matter workaround today possible parentcomponent following template hbs parentcomponent yield firstchild achieve required requirement think important framework offers composability able handle react requires define template within render hook able quite easily maybe way nt able find stackoverflow ember set documentation", "num": "12968", "d": "2/2016"}, {"title": "rendering default template instead given using", "body": "order render template given outlet hook implemented given render required template default routename template rendered instead given twiddle two routes want reuse template routes renders instead though given", "num": "12967", "d": "2/2016"}, {"title": "set textfield value nt work observer", "body": "see created textfield component need update value mindate changed mindate starttime nt work", "num": "12966", "d": "2/2016"}, {"title": "documentation routing preventing retrying transitions leafmost", "body": "documentation routing preventing retrying transitions says gives active route starting leafmost route leafmost left create pr change", "num": "12965", "d": "2/2016"}, {"title": "semantics required legacy view controller plugins", "body": "today legacy view controller plugins enable functionality implemented partly inside ember allowed us defer moving actual code ember runup means definition supported semantics currently implementationdefined would like try enumerate supported semantics views controllers need reimplement part semantics glimmer know need reimplement process updating test harness new implementation work noticed many legacy semantics tested implicitly easy make tweaks tests reduce coverage important know high level trying support started enumerate semantics please comment additions update checklist related property view becomes context templates", "num": "12963", "d": "2/2016"}, {"title": "connectoutlet onload call component emberbootstrapmodal", "body": "hi previously using render outlet modal thisrender name application outlet modal view commonmodal controller optionscontroller moving modal view component ember version view supported ember view deprecated moving emberbootstrapmodal view component call component onload connect outlet call like possible modal component code import ember ember export default embercomponentextend layoutname commonmodal didinsertelement var self thiswindowkeyup function e selfwindowkeyup e ember window keyup thiswindowkeyup modal slidedown willdestroyelement function ember window keyup thiswindowkeyup windowkeyup function e ekeycode esc thisget controller send closemodal", "num": "12957", "d": "2/2016"}, {"title": "input event throwing js error input", "body": "according docs able hook form field native input event following syntax however getting js error twiddle something stupid completely broken thanks", "num": "12956", "d": "2/2016"}, {"title": "get access controller component latest ember", "body": "previously using ember views access controller ex like latest ember version ember views concept deprecated despite supporting older ember components get controller like didinsertelement planning migrate views component access controller componen", "num": "12955", "d": "2/2016"}, {"title": "alway set new value oneway property", "body": "understanding oneway computed property represents one way binding upstream downstream set value property binding torn upstream affected starting ember time possible set value oneway computed binding stripped example javascript var filepath emobjectextend default null filename emcomputedoneway default path emcomputed filename function return path thisget filename file filepathcreate gt lt unknown mixin gt fileget path gt path null fileset default untitledtxt gt lt unknown mixin gt fileset filename imagejpeg gt path imagejpeg usage pattern would property default value note sample code simplified expose issue necessary make sense run code ember works expected however starting ember nt tested get following error trying set property problem wont occur nt get path first property torn expected setter property persist setter throw error made two jsfiddle demonstrate problem ember ember", "num": "12953", "d": "2/2016"}, {"title": "canary defeatureify problems", "body": "tried running defeatureify canary still getting asset size bigger last canary using dug deeper noticed couple things tell defeatureify works identifying calls source way embermetalfeatures setup would seem prevent defeatureify working canary emberprodjs contains glimmer tests nt see feature flagging going around tests either way seems weird tests production asset source", "num": "12952", "d": "2/2016"}, {"title": "call appinstancelookup instance initializer causing deprecation warning", "body": "updated instance initialiser pre instructions still getting deprecation warning js global window import config configenvironment export default initialize appinstance var service service emberdevtools var devtools appinstancelookup appinstancelookup service backwards compatibility lt appinstancecontainerlookup service var devtoolsconfig config emberdevtools devtoolsconfigglobal true devtoolsglobalize else devtoolsconfigglobal window devtoolsconfigglobal devtools", "num": "12949", "d": "2/2016"}, {"title": "install addon url fails error", "body": "trying install private addon github enterprise url fails error command executed error command seems work fine github public repos able access private repo directly", "num": "12946", "d": "2/2016"}, {"title": "error using glob route encountered upgrading ember", "body": "upgrading emberobservercom ember ember encountered couple errors around handling model found via action routes go page one relevant lines appropriately goes desired route errors changed notfound route name instead url hunch errors following enters parent route notfound route glob route workaround create another route use error action glob route works fine route name path form works fails error attempted recreate errors successful case case see pulling installing usual changing running also possible see error running app normally requires local setup", "num": "12945", "d": "2/2016"}, {"title": "adaptererror addon bubble error action application route", "body": "using ember emberdata experiencing issue generated component inside addon bubble handled error action application route created example addon project demonstrates issue application found errorcatcher addon found errorthrower", "num": "12944", "d": "2/2016"}, {"title": "adaptererror ajax status", "body": "hello using ember delete one models return status resulting invocation error callback receives instance adaptererror ignores ajax error status debugging found check field payload returns found else creates object status payload title forced string prepending destroys payload resulting issue preventing us accessing case case guidance would appreciated thanks", "num": "12943", "d": "2/2016"}, {"title": "getters emberobject ever return first computed value", "body": "compare extending emberobject ember", "num": "12940", "d": "2/2016"}, {"title": "components always wrapped divs even tagname defined", "body": "sure design ca nt find anything guides component property set anything div expect rendered tag specified tagname instead required form still wrapped div eg expected html html actual html html know huge issue seems inefficient make testing little complicated", "num": "12937", "d": "2/2016"}, {"title": "tags allowed htmlbars templates", "body": "tags allowed htmlbars templates upgrading get error running app understand script tags nt allowed point nt see anything deprecation guide done best fix code guidance would appreciated thanks", "num": "12935", "d": "2/2016"}, {"title": "object nt support property method save", "body": "ok loss happening since works something changed missed", "num": "12933", "d": "2/2016"}, {"title": "inline helper within sub expression nt respect array updates", "body": "twiddle correctly updates items array goes empty populated update items array goes empty populated producing failing test interestingly tests pass glimmer", "num": "12925", "d": "2/2016"}, {"title": "inline helper nt update used within another helper", "body": "twiddle also producing failing tests javsascript modulefor helpers test used another helper class extends sharedhelperconditionalstest templatefor cond truthy falsy return javascript modulefor helpers test used attribute position class extends sharedhelperconditionalstest templatefor cond truthy falsy return textvalue return jquery div thiselement toarray map function el return jquery el data foo join", "num": "12923", "d": "2/2016"}, {"title": "safari browser attempted schedule action queue undefined nt exist", "body": "using ember ds production seeing sporadic errors app safari mac osx mobile safari ios browsers clear originating seem happen randomly reproduce inserting run loop always via standard api etc custom hacks unclear queue could undefined helppointers better understand source error would appreciated", "num": "12915", "d": "2/2016"}, {"title": "code samples quickstart unreadable", "body": "following page documentation code samples unreadable greenred diff background highlights", "num": "12913", "d": "2/2016"}, {"title": "glimmer bigpicture integration checklist", "body": "try keep uptodate integration enumerates bigpicture integration items hit notyetcompleted item list trying help probably better wait initial integration work finish flip side initial integration work given feature finished probably fine smooth edge cases polish work x toplevel templates x basic pojos x using computed properties etc x handle resolves etc x align glimmer ember semantics attrs vs props x syntax x need help reviewingporting rest tests x need help reviewingporting rest tests x x x x helpers x simple shorthandfunction helpers x classbased stateful helpers x builtin helpers eg x x x x x x x user helpers lookup need help reviewingporting rest tests x components x curly components need help reviewingporting rest tests note lot features implemented yet see glimmer components x x view state transition x view hierarchy x teardown x old lifecycle hooks etc x new lifecycle hooks etc x x x x x ing block arguments x partials x x element helpers etc x legacy functionality using addons x x runloop integration auto rerender etc shimmed forcing rerender inside test cases nt immediate blocker x frameworklevel integration using render route templates injecting renderer componentsviews etc x make possible switch two engines apps toggling feature flag available work roughly ordered easiest difficult x add tests rending etc similar would fail glimmer atm needs x implement inline helpers see comments x port remaining builtin helpers similar helpers easier others x implement slightly difficult generally follows footsteps x review port remaining tests see comments requires carefully analysis tests git history digging", "num": "12907", "d": "2/2016"}, {"title": "weird regression", "body": "ran issue helper upgrading sure happening dom objects made reproducible twiddle selecting files filename appear element adding second one previous filenames magically disappear worked prior version ie", "num": "12906", "d": "2/2016"}, {"title": "ember ace editor conflicting app", "body": "hi using ace editor application previously using ember component export default embercomponentextend didinsertelement function var self var editorid selfeditorid get editor name unique id contentchange function var self editor selfget editor editorsetvalue selfget filecontent observes filecontent actions migrating ember setting acemode editorsessionsetmode acemodejava got error ember code error uncaught typeerror set property isdescriptor undefined embermetalproperties undefined objects type implement interface respond requests get set default implementation handles simple properties function descriptor thisisdescriptor true", "num": "12903", "d": "2/2016"}, {"title": "transitionto returns promise passed url", "body": "ember canary routetransitionto returns promise passed url according docs return transition object tell issue seems introduced commit reproduced issue example app cc minasmart rwjblue", "num": "12899", "d": "2/2016"}, {"title": "undefined defaultvalue model property causes dsdefaultvaluecomplexobject deprecation", "body": "declaring models properties without defining defaultvalue like causes dsdefaultvaluecomplexobject deprecation appear", "num": "12897", "d": "2/2016"}, {"title": "observer working changing emberselect times", "body": "using versions ember inspector ember jquery changing locale emberselect triggering localenamedidchange function times calling function please help resolve issue handler code translationsloginlocalefieldlabel view emselect class inputlocale placeholdertranslationsloginlocalefieldplaceholder id locale valuelocalename contentavailablelocales optionvaluepath contentname optionlabelpath contentlabel js localenamedidchange function var localename thisget localename init function thissuper var storedlocalename thisgetcookie localename english default var localenamefound enus try find stored cookies locale emisempty storedlocalename thisget availablelocales function item itemname storedlocalename localenamefound storedlocalename return true store something found default english version thisset localename localenamefound return", "num": "12893", "d": "2/2016"}, {"title": "issue new contextual components feature", "body": "hi trying use new great feature contextual components found issue trying nest multiple components together code indexhbs testbodyhbs testboxhbs testboxitemhbs get following error uncaught error assertion failed component helper used without valid component name used magmatabslistitem via component testboxitem something wrong thanks", "num": "12887", "d": "2/2016"}, {"title": "typeerror passing models route", "body": "click twiddle according doc able pass models parameters calling raises exception pass models works exception raised file line ps use ember", "num": "12886", "d": "2/2016"}, {"title": "uncaught typeerror read property getstate undefined", "body": "sure related since get matter click app think really componentyield related provide information", "num": "12885", "d": "2/2016"}, {"title": "unexpected behavior using routerjs", "body": "works confusing new users like intended know keyword nt get redefined using arrow functions happened using ember", "num": "12884", "d": "2/2016"}, {"title": "error caused relationship template wants load transition error route", "body": "lets say account model like api fails load account model call account eroute returns error etc error route transitioned expected however template account route template asks api addresses question one calls returns error code appears console window error route transitioned done done one solution use model hook load addresses ember managing better hit backend api note following stack overflow question wondering actually bug enhancement", "num": "12883", "d": "2/2016"}, {"body": "seems like teardown path different stepping debugger", "d": "2/2016"}, {"body": "tried running latest ember problem persists", "d": "2/2016"}, {"body": "error means trying use different components id see declaration declares dependency probably avoiding property recompute proper value would suggest component use custom id unless guarantee unique", "d": "2/2016"}, {"body": "comment elementid attributebindings appears work guess elementid bit keyword modal requires id modal data attribute button launches modal guess would better button modal component way get embergenerated id property modal id button value", "d": "2/2016"}, {"body": "kind keyword afaik problem code produce two modals id making app crash", "d": "2/2016"}, {"body": "way get embergenerated id reason thought elementid keyword commented attribute mappings problem persisted", "d": "2/2016"}, {"body": "sure official api twiddle approach seems work", "d": "2/2016"}, {"body": "answers nt clear enough problem ending illegal html syntax ca nt id problem setting although suggest passing id value multiple instances component yes generate unique id", "d": "2/2016"}, {"body": "guess biggest confusion id getting passed two rendered modals different ids situation see multiple components would use id something else rendering component", "d": "2/2016"}, {"body": "parent component needs know id child component seems like something nt really align ember best practices provide repo demoing issue could helpful", "d": "2/2016"}, {"body": "possibly information dealing html click modal awesome couch mine cool paragraph lives inside even cooler modal wins previously part component would outside currently trying see use serabe idea make use component generated id tacking modal end", "d": "2/2016"}, {"body": "ok sort working new foundationmodal component classbuttonclasses datarevealidmodalid buttontext divrevealmodalmedium datarevealreveal arialabeledbytitleid ariahiddenhidden rolerole idmodalid dataoptions rootelement body title p yield acloserevealmodal arialabel close however dom css issue actual modal part hidden containing element need modal like top level dom something recommended way modals ember seems like already solution", "d": "2/2016"}, {"body": "issue likely nesting modal positioned parent case need insert modal different place allow", "d": "2/2016"}, {"body": "thanks give go", "d": "2/2016"}, {"body": "btecu seems mostly exactly want appears wormhole content nt retain actionsbindings though", "d": "2/2016"}, {"body": "see", "d": "2/2016"}, {"body": "hey worked code case someone else finds js js import ember ember export default embercomponentextend initfoundation function document foundation reflow didinsertelement template emblem foundationmodalemblem template looks like classbuttonclasses datarevealidmodalid buttontext emberwormhole foundationmodals foundationfoundationreflow divrevealmodalmedium datarevealreveal arialabeledbytitleid ariahiddenhidden rolerole idmodalid title p yield acloserevealmodal arialabel close thanks", "d": "2/2016"}, {"body": "sounds like meta missing template compiled older version embertemplatecompiler please use compiler matches ember version let know fixes issue", "d": "2/2016"}, {"body": "please sure version htmlbars compiler correct version using embercli try project bug may cause new htmlbars compiler use stale compiled version template address", "d": "2/2016"}, {"body": "using embercli using switched ran still getting result also tried upgrading result", "d": "2/2016"}, {"body": "likely need demorepro dig many apps work properly versions almost certainly something application specific", "d": "2/2016"}, {"body": "stripping app skeleton found issue service named layout assume become internal service name ember changing name fixed everything", "d": "2/2016"}, {"body": "cdoornink ah seems like need assert collision somewhere usage seems totally reasonable burden collisions nt dev", "d": "2/2016"}, {"body": "using reason seems likely issue", "d": "2/2016"}, {"body": "made fixes likely allow issue still arise running production builds suspect something already addressed although unclear waswill released please provide information debug support raw classes improving trying squash blockers arrive", "d": "2/2016"}, {"body": "seeing something similar library use upgraded emberjs nt information time nt think issue nt upgraded ember update", "d": "2/2016"}, {"body": "nt suspect embercli babel since upgrade ember try reverting workaround next ember release lands see fixed", "d": "2/2016"}, {"body": "could also try using canary channel temporarily", "d": "2/2016"}, {"body": "please let us know production builds problem problem persists canary otherwise provide reproduction even trimmed embercli app demonstrates issue debug", "d": "2/2016"}, {"body": "mmun stefanpenner tried canary problem gone sure dwickern share good news", "d": "2/2016"}, {"body": "unless otherwise reported lets assume fixed", "d": "2/2016"}, {"body": "think way begin discussion potential change jshint eslint ember project would create rfc issue see", "d": "2/2016"}, {"body": "bring todays meeting pixelhandler think actually discussing tooling change ember codebase skip rfc unless ofcourse turns require moreindepth exploration change externally observed experience users", "d": "2/2016"}, {"body": "sure happened used able set override component method use specified layout rather component template file however template file defined overrides attempt within component set layout think backwards ie broken perhaps different way override component template file would great document use case use addon number deeplynested components reference component need customize within template files instead use component uses another component uses yet another component want reopen deeplynested component adjust template liking easily set layout layoutname calling correct layout placed within component object ignored code actually creates component merges magicnamed template", "d": "2/2016"}, {"body": "perlun link view docs layouttemplate deprecated right best guess change strategy needed abandon reliance view behavior instead see helper may better way use dynamic templates think use template component", "d": "2/2016"}, {"body": "nt see helper uh helps use case difficulty trying override deeplynested component developer using components author addon reopen component override template ie layout customize component without extend every parent component wrt referenced views documentation outofdate setting layout layoutname works template defined yes views public class deprecated since components continue use views layout layoutname supported way similar past override template supply layout absence template perhaps another way override template without adjusting parent component template let document", "d": "2/2016"}, {"body": "see get someone whos working recent view changes speak issue", "d": "2/2016"}, {"body": "started big thank core contributors thank much much enjoying developer experience", "d": "2/2016"}, {"body": "thank much much enjoying developer experience thank much appreciated", "d": "2/2016"}, {"body": "danchadwick generally easier override layout resolver reexport component new name export template name could clobber existing module template able dynamically update component layout series extending component layout overriden worked series nt think takes precedence resolver cc rwjblue wycats", "d": "2/2016"}, {"body": "kris thanks looking using resolver accomplish ember way let document guide googling gives lots obsolete information still wonder template component layout layoutname specify layout developer intend ca nt think scenario template answer fix would oneliner", "d": "2/2016"}, {"body": "related work addition reactfluxredux atom would cocoa controllers serialize guess would firm guidelines followed would likely result app would consider idiomatic possible question happy path enables default codified thought yes require research nt think something considered issue rather something requires thought exploration especially comes details may also go hand hand fast boot rehydration", "d": "2/2016"}, {"body": "appreciate input research submit proper rfc working idea accomplish", "d": "2/2016"}, {"body": "ibarrick look forward reading detailed exploration topic believe path worth exploring", "d": "2/2016"}, {"body": "well known gotcha see chapter nt think bug", "d": "2/2016"}, {"body": "hmm never knew kinda tricky though would expect thanks anyway", "d": "2/2016"}, {"body": "extend used short hand setup prototype property prototype shared instances decorators become thing move pure java script classes working make classes much ergonomic make scenario hopefully obvious first sight", "d": "2/2016"}, {"body": "thanks clarification", "d": "2/2016"}, {"body": "hashfragment support router sure nt working embertwiddle work fine jsbin", "d": "2/2016"}, {"body": "mmun seem like twiddle issue misread", "d": "2/2016"}, {"body": "yes specific issue reported seems embertwiddle would nice better hashfragment support router discussed rfcs repo", "d": "2/2016"}, {"body": "modify dependencies load without errors indeed bug", "d": "2/2016"}, {"body": "likely due", "d": "2/2016"}, {"body": "think example required order see issue", "d": "2/2016"}, {"body": "agreed demo would helpful general helper available since least ember", "d": "2/2016"}, {"body": "know able close issues", "d": "2/2016"}, {"body": "broken example reopen turns nt make silly mistake", "d": "2/2016"}, {"body": "works action", "d": "2/2016"}, {"body": "thanks", "d": "2/2016"}, {"body": "eddiesholl move issue guides repo", "d": "2/2016"}, {"body": "perhaps even pr", "d": "2/2016"}, {"body": "prefer keep issue tracker bugs framework use things like stackoverflow slack channels etc general questions nt really seem like bug goign close please link back question others find issue see final resolution", "d": "2/2016"}, {"body": "nt really question stated able work around issue nt sure behavior design actually bug nt find much docs either thanks clarifying", "d": "2/2016"}, {"body": "reopens something instantiated largely antipattern causes performance issues tricky solve without performance issues way works reopens lazy work something instantiated work applied deemed ok would actually love move static world first installation reopening disabled later still early stages anything happens may go rfc process another approach class syntax decorators mature able defer extra model stuff system allowing native support sorts features likely without downsides caveats sorry encountered strange quirk", "d": "2/2016"}, {"body": "thanks answer understand solution yet right", "d": "2/2016"}, {"body": "solution yet right correct likely supported current system", "d": "2/2016"}, {"body": "sorry wrong works obvious function promise thanks understand perfect solution works", "d": "2/2016"}, {"body": "edit fixed repro steps inline", "d": "2/2016"}, {"body": "tildeioglimmer integration using symlinks repo ensure share tests without duplicating believe windows need enable custom permissions enable symlinks embercli guide windows might help", "d": "2/2016"}, {"body": "also run administrator", "d": "2/2016"}, {"body": "looking error screenshot certain related symlinking whatnot seems like permission issues", "d": "2/2016"}, {"body": "zackhall confirmed able build master windows elevated command prompt", "d": "2/2016"}, {"body": "tildeioglimmer integration using symlinks repo ensure thought came via normal broccoli stuff maybe changed use symlink junction depending platform merely linking dirs may trick us", "d": "2/2016"}, {"body": "thought came via normal broccoli stuff maybe changed build issue using normal broccoli stuff mentioned migration moving test files packagesemberhtmlbars packagesemberglimmer move symlink file back original location tests ran htmlbars glimmer", "d": "2/2016"}, {"body": "believe related tried installing new vm failed using flag worked successful mitigation errors seem mirror errors described issue", "d": "2/2016"}, {"body": "getting past param saw errors building fails emberclibuildjs requires included packagejson installed nodemodules buildingcould require emberclibuildjs find module broccolistew error could require emberclibuildjs find module broccolistew functionmoduleresolvefilename functionmoduleload modulerequire require object c modulecompile objectmoduleextensionsjs moduleload functionmoduleload modulerequire require moduleexports c classmoduleexportstaskextendsetupbroccolibuilder c classmoduleexportstaskextendinit c new class c classmoduleexportstaskextendrun c npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs run build npm err node npm err npm npm err code elifecycle npm err ember build npm err exit status npm err npm err failed ember build script ember build environment production npm err likely problem ember package npm err npm npm err tell author fails system npm err ember build environment production npm err get info via npm err npm owner ls ember npm err likely additional logging output npm err please include following file support request npm err c devembernpmdebuglog", "d": "2/2016"}, {"body": "reason failing ci locally using npm deps top level path therefore present see using npm behavior catches bug zackhall would love pr adding", "d": "2/2016"}, {"body": "zackhall actually stefanpenner", "d": "2/2016"}, {"body": "awesome thanks follow rwjblue stefanpenner fix currently trying build clean vms using npm npm windows failing yet preventing us running tests newest builds edge ensure nt regress emberjs new checkins ensured enabled symlinks windows tried cmd powershell admin build unfortunately methods still getting issue pointing unexpected token symlink file emberhtmlbarshelpersconcatjs ember build environment production version build failed file emberhtmlbarshelpersconcatjs emberhtmlbarshelpersconcatjs unexpected token syntaxerror emberhtmlbarshelpersconcatjs unexpected token emberglimmerlibhelpersconcatjs parserppraise c parserppunexpected c parserppparseexpratom c parserppparseexprsubscripts c parserppparsemaybeunary c parserppparseexprops c parserppparsemaybeconditional c parserppparsemaybeassign c parserppparseexpression c parserppparsestatement c parserppparsetoplevel c parserparse c objectparse c objectexportsdefault c fileparse c fileparsecode c npm err windowsnt npm err argv c program filesnodejsnodeexe c program filesnodejsnodemodulesnpmbinnpmclijs run build npm err node npm err npm npm err code elifecycle npm err ember build npm err exit status npm err npm err failed ember build script ember build environment production npm err make sure latest version nodejs npm installed npm err likely problem ember package npm err npm npm err tell author fails system npm err ember build environment production npm err get information open issue project npm err npm bugs ember npm err nt available get info via npm err npm owner ls ember npm err likely additional logging output npm err please include following file support request npm err c devemberjsnpmdebuglog", "d": "2/2016"}, {"body": "found issue gotten ember build run test windows tada running following cloned repo directory enabled build run properly pass", "d": "2/2016"}, {"body": "nt seem working embertwiddle gotten work ordinary app could twiddle thing added template file also nt work", "d": "2/2016"}, {"body": "willrax aigyptios able reproduce broken link opens new tab added html anchor well htmlbars linkto helper app chrome safari firefox mac links work click links open new tab browser willrax something else app could changing behavior maybe action", "d": "2/2016"}, {"body": "yes believe twiddle sandboxing prevents popups whatnot", "d": "2/2016"}, {"body": "ok must local application reason close reopen something deeper thanks", "d": "2/2016"}, {"body": "implement serializers silly done updated twiddle", "d": "2/2016"}, {"body": "think way really sure would want either way nt see bug framework use issues repo track feature requests issues githubcomemberjsrfcs repo feature proposals pr repo would mind submitting", "d": "2/2016"}, {"body": "matrixz typically make form component use editing creating resources think would good workaround also considering routable components roadmap may good idea also method pass first arg call template name see", "d": "2/2016"}, {"body": "something seems fishy likely needs investigation", "d": "2/2016"}, {"body": "yangmingshan thanks opening issue reason code firing observer attribute observing never updated anything code recommend closing issue issue datepicker open issue cheers", "d": "2/2016"}, {"body": "kiwiupover mindate bounded starttime observer fire type character starttime input check console reasons endtime value updated think ember issue using emberdatepicker thanks", "d": "2/2016"}, {"body": "update property refer updated bin", "d": "2/2016"}, {"body": "matrixz one way avoid issue solution issue still exist", "d": "2/2016"}, {"body": "data actions paradigm works pure data actions version would soon user enters keystroke capture nt update field instead set new value underlying model let view rerender", "d": "2/2016"}, {"body": "agree new trend ember still twoway bindings code work", "d": "2/2016"}, {"body": "bin using latest emberjs change version make work", "d": "2/2016"}, {"body": "test nt work work two input always type character starttime input one one delete one one see difference work fine think intentional issue", "d": "2/2016"}, {"body": "according ember version gt issue update model update value view ddau", "d": "2/2016"}, {"body": "sure", "d": "2/2016"}, {"body": "yangmingshan hi took look jsbin code examples noticed expected act like computed property correct behavior property embertextfield see set string value controller property however computed property set text input events try changing endtime input see console bug", "d": "2/2016"}, {"body": "typo applications routes tree leaf route route without brancheschildren", "d": "2/2016"}, {"body": "thanks clarification", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "looks like question much bug report created question stack overflow asked embercommunityslackcom chat rooms eg needhelp help reason ask nt think get much quality feedback issues tracker", "d": "2/2016"}, {"body": "unfortunately github issues really poor venue questions pixelhandler venues much better bug turns causing grief reopen new issue provided", "d": "2/2016"}, {"body": "pixelhandler ember deprecate something give alternative something ember deprecated views concept ember framework give wherever views usage example mentioned connect outlet problem alternative component usage model quality client side framework lot people believe ember develop huge application easily migrate next version ember nt think question framework upgrading version deprecation problem", "d": "2/2016"}, {"body": "sure found example inputaction seen guides page also seen events list use actions note use event names requires dasherize", "d": "2/2016"}, {"body": "listed events single word dasherized correct syntax triggering event component", "d": "2/2016"}, {"body": "recommendation follows using regular tag one bind also connect listener example less following hood path native eventobject provided means easily grab updated value example fiddle form", "d": "2/2016"}, {"body": "stefanpenner solution works well higher prior versions cursor position issue see example need aware", "d": "2/2016"}, {"body": "maybe try targetobject embercomponent", "d": "2/2016"}, {"body": "wppurking proper way get controller", "d": "2/2016"}, {"body": "components completely isolated surrounding context consider passing required parameters components", "d": "2/2016"}, {"body": "pavkum discussed teammates posting issue also told pass parameter component proper way like slowness application happens passing whole controller object component", "d": "2/2016"}, {"body": "sure performance definitely advisable kills whole purpose writing component supposed reusable yes passing required parameters component proper way", "d": "2/2016"}, {"body": "question bugissue emberjs looks like feedback joined embercommunityslackcom chatrooms eg needhelp yet way controllers work together view components pass action way component access return value action parent context usually controller see", "d": "2/2016"}, {"body": "slowness application happens passing whole controller object component nah suspect real difference js recommendation would pass component needs rather whole controller prevent intimate coupling various units avoided help keep tech debt bugs nt directly seem like issue although maybe could become part im going close discussion like discussion upgrade guide likely guide repo", "d": "2/2016"}, {"body": "reproduced example embertwiddle turns working ember ember working since ember sure fixed bugged versions", "d": "2/2016"}, {"body": "reproduce ember jsfiddle reason idea change made fix problem", "d": "2/2016"}, {"body": "btw issue exist debug builds embers everything fine production builds", "d": "2/2016"}, {"body": "ducarroz fork twiddle assumption workaround issue reproducible versions working current release may get traction working workaround uncertain ability patch older versions least found workaround yet", "d": "2/2016"}, {"body": "workaround patch ember first delete potential left setter defining property updated method ember javascript function aliasedpropertyonewayset obj keyname value cleanup left settergetter cached value keyname obj var utilsmeta obj mvalues amp amp mvalues keyname delete mvalues keyname delete obj keyname kind brute force trick necessary debug version ember debugged issue found main difference ember oneway property actually descriptor older version rather actual value ember cause failed define property due setter throw assert", "d": "2/2016"}, {"body": "ducarroz question issue happen production builds ember edit appears work correctly without production builds someone confirm read output correctly means likely related issues debug assertions related mandatory setter case believe fixed pr several workarounds possible dk divergence nt actually wanted mostly people want change back dk changes alternative cp could created used inplace mandatory setter disabled also ideal embermetallibpropertiesjs could replace atruntime implementation right thing also crappy really ideal solutions backporting fix may possible many issues exist older version mandatory setter nervous backporting large change options alternative cp seems least invasive", "d": "2/2016"}, {"body": "stefanpenner problem occurs production build assert name value false production function mandatorysetterfunction name return function setterfunction value guess underlining problem apparent consequences", "d": "2/2016"}, {"body": "ducarroz yes addressed among things unlikely backported may backport earliest lts release affected sure maybe maybe wycats tomdale tell us", "d": "2/2016"}, {"body": "seeing similar issue regular computed property getting assert oneway properties trying set value test fake nt able yet identify exact circumstances wondering problem wide spread first thought many time one instance trigger issue", "d": "2/2016"}, {"body": "problem smashing cp cp without setter value interferes mandatory setter warnings", "d": "2/2016"}, {"body": "ember canary use defeatureify use custom babel transform strip debug statements feature flags ember canary larger continue working glimmer engine integration engines shipped definitely increases size canary rolls beta glimmer feature flag disabled glimmer engine removed emitted assets", "d": "2/2016"}, {"body": "canary emberprodjs contains glimmer tests nt see feature flagging going around tests absolutely bug looking", "d": "2/2016"}, {"body": "thanks understood stock canary build use defeatureify larger glimmer engines stuff going build however supposed able apply defeatureify canary get build without engines using custom babel transform goal able use canary without size penalty features using", "d": "2/2016"}, {"body": "asakusuma sorry making clear point version ember release beta canary use defeatureify library however supposed able apply defeatureify canary get build without engines feature build system goal able use canary without size penalty features using might able use babel transform since embercli apps build ember would manually run bower assets think better writing recast script striping modules calls starting", "d": "2/2016"}, {"body": "glimmer tests included builds fixed", "d": "2/2016"}, {"body": "looks generally correct demo repo look", "d": "2/2016"}, {"body": "thanks rwjblue actually coming elsewhere code", "d": "2/2016"}, {"body": "issue tracker ember open issue embercliembercli instead", "d": "2/2016"}, {"body": "sure thanks", "d": "2/2016"}, {"body": "test canary believe may related bug asakusuma recently fixed", "d": "2/2016"}, {"body": "canary fixes case however error still happens", "d": "2/2016"}, {"body": "different codepath url param vs route name param probably one fixed", "d": "2/2016"}, {"body": "however error thisreplacewith notfound still happens sounds like need addressed updating labels", "d": "2/2016"}, {"body": "errors occurs transition nested route glob route ie seeing recognizer recognizes router state blows routerjs", "d": "2/2016"}, {"body": "pavkum yes agree would great feature recommendation written article using error code property errors build apps interested use cases see open rfc issue see prolly nt need full featured rfc proposal rfc issue would ideal curious use ajaxerror method adapter set error code value error", "d": "2/2016"}, {"body": "pavkum hello ya sorry confusion adapter related stuff nt part package rather emberdata everything else pixelhandler said", "d": "2/2016"}, {"body": "pixelhandler went blog addon see exactly extended error object preparing new error object required params using return instance error way default wo nt invoked error callback gets invoked error instance willl open rfc regarding thank pixelhandler stefanpenner", "d": "2/2016"}, {"body": "oh case people curious using nt help would nt expect though looks like ember evaluation property mergemixins time anything resolves cached value", "d": "2/2016"}, {"body": "fixed objects mixins master", "d": "2/2016"}, {"body": "awesome chance commit pr link", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "believe also included", "d": "2/2016"}, {"body": "nt believe true suspect actually wrapping componentview", "d": "2/2016"}, {"body": "investigation seems happens integration tests eg somecomponent content somecomponent form ends wrapped div", "d": "2/2016"}, {"body": "yes testing harness component uses suppose could avoid extra tag though would mind opening issue better yet failing test case embertesthelpers library", "d": "2/2016"}, {"body": "going close issue determined testing library issue", "d": "2/2016"}, {"body": "rwjblue believe tables root would best suspect many rely behavior right maybe upcoming refresh take account", "d": "2/2016"}, {"body": "stefanpenner unsure thing change actually noticed extra tag since generally use assume folks either way taken account new system create", "d": "2/2016"}, {"body": "bug ever allowed something like even mean hbs consolelog message regardless explain using better idea help transition away pattern", "d": "2/2016"}, {"body": "one example something like actually nt end difficult move component use didinsertelement ember getscript couple cases things probably nt put template anyways moved controller code used emberrunscheduleonce afterrender guess rushed posting issue think add deprecation guide since confused looked guide blog posts changelog multiple times trying find documentation change thanks", "d": "2/2016"}, {"body": "actually nt end difficult move component use didinsertelement ember getscript yes likely would suggested guess rushed posting issue think add deprecation guide since confused looked guide blog posts changelog multiple times trying find documentation change correct file may obvious may changed thank letting us know incase unexpected im going close issue", "d": "2/2016"}, {"body": "danconnell sorry forgot reply earlier right added guides somewhere falls heading removal intimateprivate api really deprecation htmlbars never supported use case publicly fact html parsing library uses even states explicitly supported readme", "d": "2/2016"}, {"body": "oops never mind brain failed", "d": "2/2016"}, {"body": "failing test", "d": "2/2016"}, {"body": "planning work later today", "d": "2/2016"}, {"body": "may decide fix seems edge case may impossible fix htmlbars addresses", "d": "2/2016"}, {"body": "fix horizon current system nt seem support maybe introduce warning admittedly looked possible solution defer others familiar part system confirm", "d": "2/2016"}, {"body": "sorry mistaken working fine twiddle may glimmer thing", "d": "2/2016"}, {"body": "fwiw also see errors app close upgrading nt researched issue deeply", "d": "2/2016"}, {"body": "gavinjoyce thanks note please let know yields positive results", "d": "2/2016"}, {"body": "unfortunately nt really supported without information nt really seem actionable could suggest add conditional schedule function detect undefined bucket case spewing stack reporting bug tracking software similar although minification may make stack less helpful may get lucky especially source maps result uglification also worth checking see app one addons scheduling somehow calculating queue dynamically", "d": "2/2016"}, {"body": "closing happy help dig get info stef suggested", "d": "2/2016"}, {"body": "stefanpenner nt really supported released less year ago released days ago lts policy ember would help riskaverse users like stick lts versions without information nt really seem actionable despite lack clues root cause legitimate issue see around times day bug tracker randomly distributed across clients use safari since another user seeing bug suggest leave open least see upgrade pans add conditional schedule function detect undefined bucket case spewing stack already stack showing anything meaningful noted minification makes matters worse due year old lingering issue nt source maps", "d": "2/2016"}, {"body": "released days ago security patch fixing nonsecurity related bugs lts policy ember lts policy released official lts version yet policy created based feedback received process despite lack clues root cause legitimate issue one suggested legit issue said much provide reproduction try help figure going would gladly help mentioned comment", "d": "2/2016"}, {"body": "due year old lingering issue nt source maps embercliembercliuglify appears like providing broken source maps sure solve end", "d": "2/2016"}, {"body": "author noted issue many libs provide source maps emberuglify considers bad believe even bootstrap issue currently single bad source map causes overall compilation process fail instead ember uglify ignore bad source maps spit warning still allow compilation", "d": "2/2016"}, {"body": "johnnyshields awesome appreciate good understanding problem able take experience provide us pull request address issue would awesome suspect help many defunkt sourcemap inputs unfortunately something one apps encountered yet", "d": "2/2016"}, {"body": "despite lack clues root cause legitimate issue see around times day bug tracker randomly distributed across clients use safari since another user seeing bug suggest leave open least see upgrade pans ideas debug see schedule may undefined ember sh emberjs ag q schedule packagesemberapplicationlibsystemapplicationjs runschedule actions domready instance runschedule actions domready packagesemberhtmlbarstestsattrnodesdatatestjs runschedule render function runschedule render function packagesemberhtmlbarstestshelpersviewtestjs runschedule sync function runschedule sync function runschedule sync function runschedule sync function packagesembermetallibbindingjs runschedule sync thissync obj packagesembermetallibrunloopjs runschedule sync function runschedule actions function packagesembermetallibstreamsstreambindingjs runschedule sync thissync packagesembermetaltestsrunloopscheduletestjs runschedule actions function cnt runschedule actions function cnt runschedule actions function cnt runschedule actions function cnt runschedule sync function runschedule actions function runschedule actions function runschedule sync function runschedule destroy function runschedule actions function runschedule actions function packagesembermetaltestsrunloopsynctestjs runschedule sync syncfunc runschedule actions cntup packagesembermetaltestsrunloopunwindtestjs runschedule actions function throw new embererror boom packagesemberroutinglibsystemrouterjs emberrunschedule afterrender function packagesemberruntimelibextrsvpjs runbackburnerschedule actions function packagesemberruntimelibsystemcoreobjectjs schedule actions thiswilldestroy schedule destroy thisscheduleddestroy packagesemberviewslibattrnodesattrnodejs runschedule render thisrenderifdirty packagesemberviewstestssystemexttestjs runschedule afterrender function emberjs ag q scheduleonce packagesemberextensionsupportlibdataadapterjs runscheduleonce actions onchange packagesembermetallibrunloopjs runscheduleonce afterrender mycontext sayhi runscheduleonce afterrender mycontext sayhi runscheduleonce actions mycontext function runscheduleonce afterrender processchildelements packagesemberroutinglibsystemrouterjs thisslowtransitiontimer runscheduleonce routertransitions handleslowtransition transition originroute packagesemberroutingviewslibviewslinkjs runscheduleonce routertransitions thiseagerupdateurl transition url packagesemberviewslibmixinsvisibilitysupportjs runscheduleonce render thistogglevisibility packagesemberviewslibsystemrendererjs return runscheduleonce render ctx fn packagesemberviewslibviewsboundifviewjs runscheduleonce render self rerenderifneeded packagesemberviewslibviewsboundpartialviewjs runscheduleonce render self rerenderifneeded packagesemberviewslibviewscontainerviewjs runscheduleonce render view ensurechildrenareindom packagesemberviewslibviewssimpleboundviewjs thisupdateid runscheduleonce render update runscheduleonce render view rerender packagesemberviewslibviewsstateshaselementjs runscheduleonce render function packagesemberviewslibviewswithviewjs runscheduleonce render self rerenderifneeded packagesemberviewslibviewsviewjs runscheduleonce render statecheckedfn sh data git co head release data ag q schedule packagesemberdatalibadaptersfixtureadapterjs emberrunschedule actions null function packagesemberdatalibsystemmodelmodeljs emberrunschedule actions thisupdaterecordarrays emberrunschedule actions triggerdeferredtriggers packagesemberdatalibsystemrecordarraymanagerjs emberrunschedule actions thisupdaterecordarrays packagesemberdatalibsystemrelationshipsstaterelationshipjs selfstorebackburnerschedule syncrelationships self selfflushcanonical packagesemberdatalibsystemstorejs thisbackburnerschedule normalizerelationships setuprelationships record recordconstructor data storebackburnerschedule normalizerelationships store setuprelationships record type data data ag q scheduleonce packagesemberdatalibsystemstorejs emberrunscheduleonce afterrender thisflushallpendingfetches bb sha version uses js backburnerjs git master git co head merge pull request mmunjoin backburnerjs ag q schedule libbackburnerjs return thiscurrentinstanceschedule queuename target method args false stack return thiscurrentinstanceschedule queuename target method args true stack backburnerschedule backburneroptionsdefaultqueue null fns testsautoruntestjs bbschedule zomg null function testsbbhastimerstestjs bbschedule ohai null function testsjointestjs bbschedule one function bbschedule one function bbschedule one function testsqueuetestjs bbschedule two null function bbschedule one null function bbschedule two null function bbschedule one increment bbschedule one increment reveal one place issue may happening place dynamic input provided would great know source issue may may user codeaddon code schedules something dynamic queue name think able annotate source attach bit information linked codepath source issue would help us confirm issue ember maybe hints whats also providing stack although post uglification sanssourcemap may yield hint", "d": "2/2016"}, {"body": "stefanpenner thank looks like plausible lead appreciate time take look ember uglify take look", "d": "2/2016"}, {"body": "ember uglify take look solution seems legit sm looks bad log warning insert alternative map set drop sm concat already detect add appropriate padding", "d": "2/2016"}, {"body": "stefanpenner thank looks like plausible lead appreciate time take look share find related info seems seems strange defautlqueue would undefined", "d": "2/2016"}, {"body": "sure style added remove lines supposed look like seem used recently added quick start cut pr removes highlight style currently readable follow improved style necessary", "d": "2/2016"}, {"body": "uolot see bugs like future see notes faster repo thanks", "d": "2/2016"}, {"body": "updated reflect", "d": "2/2016"}, {"body": "replace works fine bit digging looks like mandatory setter work correctly object", "d": "2/2016"}, {"body": "thanks way least work around issue", "d": "2/2016"}, {"body": "may address believe still beta canary right", "d": "2/2016"}, {"body": "stefanpenner right embertwiddle works master bisected fix pr", "d": "2/2016"}, {"body": "demo working", "d": "2/2016"}, {"body": "provide demonstration bug embertwiddlecom might also want try using instead", "d": "2/2016"}, {"body": "uncaught typeerror set property isdescriptor undefined provide stack", "d": "2/2016"}, {"body": "guess change move descriptors properties causing one leak unexpectedly interacted mmun mentioned reproduction embertwiddlecom even small embercli app demonstrates would likely lead something quickly debuggable", "d": "2/2016"}, {"body": "thanks report asakusuma looks like gavinjoyce working fix", "d": "2/2016"}, {"body": "digging recent changes reshuffled router deals exceptions nt enough context yet productive sorry going close skeleton pr find something else work", "d": "2/2016"}, {"body": "gavinjoyce understood trying find good path forward realize fairly bad regression try quick", "d": "2/2016"}, {"body": "mobile phone mishap", "d": "2/2016"}, {"body": "scrolling somehow registered tap close button", "d": "2/2016"}, {"body": "mobile phone mishap rofl theweb", "d": "2/2016"}, {"body": "rwjblue amp gavinjoyce skeleton pr looks good nt think breaks exception handling tests pass change", "d": "2/2016"}, {"body": "minasmart breaks tests added original pr", "d": "2/2016"}, {"body": "aw cry", "d": "2/2016"}, {"body": "spend time see maybe come ideas feel little responsible wrote code caused regression", "d": "2/2016"}, {"body": "krisselden briefed issue going take stab pr afternoon give update later today", "d": "2/2016"}, {"body": "rwjblue krisselden minasmart objection making public public pretty much proxy edit formatting", "d": "2/2016"}, {"body": "believe something related emberdata appropriate repo believe sorry realize number repo confusing hopefully helps", "d": "2/2016"}, {"body": "longer included part ember due exactly types bugs would suggest using alternate implementation several nice addons", "d": "2/2016"}, {"body": "facing issue ember", "d": "2/2016"}, {"body": "saidikondawar yes understand quite bugs emberselect removed gladly accept pull requests fixes unlikely try dig fix", "d": "2/2016"}, {"body": "exception thrown intermediate transition loading route model believe loading route nt dynamic segment replicated exception twiddle works route nt route nt seem like bug although error message could better come need pass model loading route", "d": "2/2016"}, {"body": "makes sense tried passing model display custom message depending current route loading could used route myrouteloading forced create new template route wanted something generic use like javascript import ember ember export default emberrouteextend loadingmessage custom loading message", "d": "2/2016"}, {"body": "brendanrius great perhaps close issue", "d": "2/2016"}, {"body": "thanks gavinjoyce", "d": "2/2016"}, {"body": "provide isolated reproduction", "d": "2/2016"}, {"body": "ember inspector", "d": "2/2016"}, {"body": "likely open issuepr inspector repo", "d": "2/2016"}, {"body": "disabled inspector error gone check provide reproduction update completely removed inspector nt get error yet", "d": "2/2016"}, {"body": "confirmed inspector", "d": "2/2016"}, {"body": "router dsl depends able influence inside various callbacks use arrow functions inner callbacks invoked wrong context tldr arrow functions lots use cases definitely times work times", "d": "2/2016"}, {"body": "alright makes sense maybe report update guide warning label something unless possible implement work arrow functions ember community thinks something worthwhile want add guides guess correct thing would make pr guiderepo correct", "d": "2/2016"}, {"body": "fwiw always thought using router definitions little odd one future option would backwards compatible could pass dslrouter argument meh thought emberqunit started helpers recently", "d": "2/2016"}, {"body": "workmanw ya agree sticks bit nt often manipulate way feels unnatural like happy discuss new feature rfc issuepr", "d": "2/2016"}, {"body": "rwjblue cool toss something together afternoon", "d": "2/2016"}, {"body": "adamknights perhaps article help also seems question bug issue asked embercommunityslackcom needhelp chat room", "d": "2/2016"}, {"body": "also responded yes great question sorry lingered", "d": "2/2016"}, {"body": "thanks guys look like great answers take proper look monday always hard post goes bit whether something may need enhancement see get ops guys unblock slack tho", "d": "2/2016"}, {"body": "mozeryansky way create embertwiddle reproduces error tips debugger good answers link posted nt sound like ember issue bug sounds like difference browser vendors reporting error stack", "d": "2/2016"}, {"body": "think fix onerrordefault could print error message stack trace instead stack trace however chrome would appear twice could feature sniffing onerrordefault make right choice", "d": "2/2016"}, {"body": "yeah think adding something using flag straight forward", "d": "2/2016"}, {"body": "ya something like", "d": "2/2016"}, {"body": "honestly would nice error messages somewhat spec tricky business", "d": "2/2016"}, {"body": "override shouldreloadrecod return data always fetched prefer data refetched background return record immediately instead override also future reference would appropriate file ember data issue tracker stackoverflow davidpett pointed", "d": "2/2016"}, {"body": "please go section apply changes minifycss enabled false hope work", "d": "2/2016"}, {"body": "yes intended behavior attributes passed rerender want initial value may want change something like", "d": "2/2016"}, {"body": "thanks", "d": "2/2016"}, {"body": "use case motivating unless created", "d": "2/2016"}, {"body": "rwjblue pinged slack let know need anything else", "d": "2/2016"}, {"body": "tried regular build prod build thing happens version changed console could emberclishims using quite old embercli guess could start upgrading cli", "d": "2/2016"}, {"body": "upgrading cli nt help removing old way notifications using views collections still unsure close since recreate issue find good reason happening plus one else experienced seems", "d": "2/2016"}, {"body": "ok problem still persists", "d": "2/2016"}, {"body": "tried try apps use versions work fine maybe addon clobbering weird object exports except", "d": "2/2016"}, {"body": "two embers loaded strange things happened", "d": "2/2016"}, {"body": "looks like using old version emberuploader required emberjs folder touch project completely forgot case thanks stefanpenner help", "d": "2/2016"}, {"body": "np fun mystery debug", "d": "2/2016"}, {"body": "wonder detect actually print helpful errorwarning", "d": "2/2016"}, {"body": "rwjblue ya likely", "d": "2/2016"}, {"body": "basically code", "d": "2/2016"}, {"body": "behaviour ember twiddle twiddle", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "jakedetels come need unregister component replace runtime register use component helper switch runtime", "d": "2/2016"}, {"body": "jakedetels think suggestion gavinjoyce makes sense may elegant way swap components component helper", "d": "2/2016"}, {"body": "mixonic think bug", "d": "2/2016"}, {"body": "foxnewsnetwork want perhaps make pr seems like simple change sure performance considerations", "d": "2/2016"}, {"body": "pixelhandler actually fork tried way problem accessed lot places originally anticipated one overrides computed property unfortunately breaks lot stuff imo might worms good folks working actively ember wants open", "d": "2/2016"}, {"body": "vast majority folks using default template names really sure want add additional features make knowing template goes specific route harder may able use normal js getter function instead computed property work around specific case", "d": "2/2016"}, {"body": "stefanpenner project complex reproduce embertwiddlecom issue code aborted current route trying redirect updating current model", "d": "2/2016"}, {"body": "samtes complicated produce embertwiddle example sample repo github", "d": "2/2016"}, {"body": "mehulkar answers questions get attention reach directly community tried asking needhelp channel embercommunityslackcom chatroom", "d": "2/2016"}, {"body": "mohlek also work code may shared publicly run major bug app try reproduce example code repository github ember contributors reproduce error fix potential bugs framework know bit work workaround best course action", "d": "2/2016"}, {"body": "perhaps issues related", "d": "2/2016"}, {"body": "pixelhandler looks like right computed property gets overridden binding input setter computed property works using input thank however problem problem computed property gets updated update properties bound outside component noncomputed properties", "d": "2/2016"}, {"body": "reviewed twiddle appears statement true oneway computed properties mutable default setting replace nt want behavior two options make cp setter make readonly making see described cp default writable wish support bidirectionality one must implement setter set replace mentioned nt like default mark cp readonly hope move js decorators feature make transition believe sound default", "d": "2/2016"}, {"body": "believe earlier comment explains issue hopefully latest one helps explain missed something please let know", "d": "2/2016"}, {"body": "thank answer get explains fact inside component outside component synchronised although", "d": "2/2016"}, {"body": "raido nt think needs documented app may name good blog post solving issues ember like post tells story solving problematic use ember features", "d": "2/2016"}, {"body": "guides problems actually filed emberjsguides worth installation section updated current proper version", "d": "2/2016"}, {"body": "status update linked issue", "d": "2/2016"}, {"body": "fyi thing happens instead", "d": "2/2016"}, {"body": "thinking write tests inspecting first goal actually get reasonable tests figure solve smile", "d": "2/2016"}, {"body": "change bowerjson", "d": "2/2016"}, {"body": "came across similar situation today nt possible yield action nicely main block", "d": "2/2016"}, {"body": "also experienced problem gpluta trying inject service component syntax worked well likely nt working exactly intended", "d": "2/2016"}, {"body": "ran issue objects fully observed therefore nt always fire cry cry leaving twiddle reference", "d": "2/2016"}, {"body": "docs suggest currently use input component helper might worth updating fix", "d": "2/2016"}, {"body": "done", "d": "2/2016"}, {"body": "fix bug emberisarray useful used detect whereas", "d": "2/2016"}, {"body": "stefanpenner chance issue could reopened readdressed browser default behavior focus page load nt ember default behavior route transition understand accessibility concerns feel like could solution addresses concerns workaround seems dirty", "d": "2/2016"}, {"body": "progress experiencing ember well", "d": "2/2016"}, {"body": "issue background refresh behavior ember data findall resolves straight away background refresh happening changing routes resolves issue opened cover whether got deprecation warning using findall new behavior resolves immediately existing records", "d": "2/2016"}, {"body": "issue fixed ref", "d": "2/2016"}, {"body": "believe", "d": "2/2016"}, {"body": "thanks lot mmun really appreciated even though solution ideal", "d": "2/2016"}, {"body": "mmun thanks fixing one question though far see bugfix released however bug preventing us upgrading would like avoid upgrade straight would able bugfix release well code diverged much causing many conflicts", "d": "2/2016"}, {"body": "generally backport bugfixes affected versions compatible versions aware breaking changes amongst", "d": "2/2016"}, {"body": "code diverged much causing many conflicts time thing maybe someday skull", "d": "2/2016"}, {"body": "run issue older version ember dynamically creating template string compiling setting property component function use case workaround get splat params handlebars see basically need invoke dynamic components dynamic arguments eg given would want render template additionally need able render usecase supported fact nt anything considered bug documented work", "d": "2/2016"}, {"body": "example twiddle nt demonstrate issue longer seems like updated point template resolved given component layout always override whatever property define", "d": "2/2016"}, {"body": "bad updated twiddle shows work nt get documentation component folder would stop property working also default blueprints add unnecessary probably added confusion using pods case makes difference", "d": "2/2016"}, {"body": "default blueprint addons assign thing resolver find layout within dir addon", "d": "2/2016"}, {"body": "thanks clarification think ticket closed twiddle demonstrates original poster asked working", "d": "2/2016"}, {"body": "thanks vitch", "d": "2/2016"}, {"body": "luck pinning using different tech stack experiencing symptoms case also seems related manipulation equivalent offending code angularjsbrowserjs", "d": "2/2016"}, {"body": "think fact appears angularjs indicates event firefox issue like stefanpenner suggests zourtney easily reproduce could nt manage appeared sporadically sentry logs", "d": "2/2016"}, {"body": "yoranbrondsema reproduced continue try reports timestamped within seconds recorded hash change reports happening initial page load deep within app runtime different hashpage also dug little deeper found similar reports triggered safari one labeled android stack trace attached may unrelated", "d": "2/2016"}, {"body": "guess actually native extension like flash crashingcausing grief unfortunately nt believe something address side someone demonstrate information reinvestigate interim would recommend opening firefox issue", "d": "2/2016"}, {"body": "remains bug ember", "d": "2/2016"}, {"body": "fyi guides still missing api docs", "d": "2/2016"}, {"body": "add depreciation warning instead throwing would also help prevent users see warning", "d": "2/2016"}, {"body": "happens without directly calling transitionto embersimpleauth tries transition auth successful ember", "d": "2/2016"}, {"body": "verified bug continues exist", "d": "2/2016"}, {"body": "work", "d": "2/2016"}, {"body": "tried jsbin seems working also verified broken ilkkao perhaps could confirm longer issue", "d": "2/2016"}, {"body": "experiencing issue simple repro bug see works init keep controller component property synched workaround force bounded property init init function", "d": "2/2016"}, {"body": "would happy try fix someone confirm bug want fixed ie building map boolean attributes consult behavior persists", "d": "2/2016"}, {"body": "saw still open think best solution cases using various strategies observe dom mutation seem make sense", "d": "2/2016"}, {"body": "suppose removed api documentation well", "d": "2/2016"}, {"body": "also removed ember cli route blueprint option", "d": "2/2016"}, {"body": "happy make pull requests", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "status update ember team recommend use want best performance", "d": "2/2016"}, {"body": "status update ember team recommend use want best performance depends dimension performance matters app rerendering dramatically faster initial render still somewhat slower performance reason pick best choices initial render fast enough use case waiting around series fully optimized reasonable choice case may worth getting test suite running latest know compatible", "d": "2/2016"}, {"body": "writes exactly experience ember gt initial render perf especially deeply nested component structures subtle problem searched issue regarding could find one anyone know whether issue tracked somewhere", "d": "2/2016"}, {"body": "vanthome new incarnation glimmer expected improve initial rendering track progress source repo", "d": "2/2016"}, {"body": "worth found performance intercom nt upgrade due initial render performance regression going upgrade production next week also keenly awaiting helping shaping bring significant performance improvements", "d": "2/2016"}, {"body": "thanks color looking forward", "d": "2/2016"}, {"body": "one question vaguely recall seeing another issue blog post version improves performance levels really like underscore importance lts release get performance patches currently quite daunting prospect upgrade get better performance", "d": "2/2016"}, {"body": "many thanks info guys nt aware glimmer", "d": "2/2016"}, {"body": "johnnyshields bunch performance fixes already landed latest versions dramatically faster would nt expect see major work nt daunted upgrade work get running cleanly rest upgrades breeze breaking changes also first lts release", "d": "2/2016"}, {"body": "slated", "d": "2/2016"}, {"body": "wow got bitten one lost hour trying find done wrong apparently ember looking file named learningroom learningroom underscore fine path allowed route name", "d": "2/2016"}, {"body": "revisited yesterday date versions involved packages longer reproduce issues chrome firefox", "d": "2/2016"}, {"body": "check still issue", "d": "2/2016"}, {"body": "mmun tried still happens ember", "d": "2/2016"}, {"body": "hi jamiechong sorry ridiculously long response time confirm report problem lies javascript follow statements true however using gives delegates rather hard say behaviour desirable think people would expect sort unfortunately probably apps rely current behavior think stefanpenner rwjblue", "d": "2/2016"}, {"body": "unsure definitely seems like bug probably fix land fix canary let live full cycle see impacts folks", "d": "2/2016"}, {"body": "miguelmota still issue", "d": "2/2016"}, {"body": "pixelhandler nt retested close issue since nobody else reported", "d": "2/2016"}, {"body": "closed", "d": "2/2016"}, {"body": "really nt fixed become important lead style templates", "d": "2/2016"}, {"body": "aldhsu ever build twiddle embertwiddle reproduce issue mylen find workaround", "d": "2/2016"}, {"body": "pixelhandler ran nt run conditions slipped mind little help", "d": "2/2016"}, {"body": "vladuemilian find workaround still issue provide reproducible code example eg embertwiddle sample git repo", "d": "2/2016"}, {"body": "came across bug tried render controller queryparams inside rendertemplate hook solved way", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "kgish still issue find workaround", "d": "2/2016"}, {"body": "still issue since hardcoded unless someone better way deal ears open suggestions", "d": "2/2016"}, {"body": "alexmngn try inside followed love create new router tests edge cases like", "d": "2/2016"}, {"body": "confirm pretty annoying bug still ember bug still alive find easy clean way render things alternative layout applicationhbs", "d": "2/2016"}, {"body": "problem ember using pod structure app update okay made working bit workaround calling render mixin attached application route showing modal content tried render template custom route error fix attach mixin route action bubbling application route failing althought works still see error console", "d": "2/2016"}, {"body": "exactly bug", "d": "2/2016"}, {"body": "news", "d": "2/2016"}, {"body": "fpauser really think generally agree public api could make needs fleshed rfc nt think anyone time", "d": "2/2016"}, {"body": "also encountered something think related bug least fryie hunch correct queryparams declared observer watching one query param values change another use guiderecommended sticky query param resetting methodology param set observer gets squashed back defaults details implementing sortablefilterable paged list view serverside pagination sortfilterpage state represented queryparams planned using query params could really easily leverage ember loading substate magic pagefiltersort changes applying sticky query params methodology guides clear filterswhatnot subsequent controller activations worked fine right realized would nice punt user back first page filter criteria changed implemented functionality push user back first page using observer filter criteria got triggered every time page changed well turns hook called true every query param change due use", "d": "2/2016"}, {"body": "worked around issue intercepting action route manipulating query params param changed reset current page pagenumber query param removed arg added arg far ideal nt documented public api javascript actions queryparamsdidchange changed totalpresent removed const propertiesrequiringpagereset sortfield sortascending filtername filtervalue const propertydidchange function propname return changedhasownproperty propname removedhasownproperty propname", "d": "2/2016"}, {"body": "progress", "d": "2/2016"}, {"body": "hey brocfilte taking", "d": "2/2016"}, {"body": "closing old issue issue still occurring please leave comment reproduction embertwiddle reopen", "d": "2/2016"}, {"body": "rwjblue know closed another way adding ember object class extends comparable mixin implement method array already based method", "d": "2/2016"}, {"body": "well ancient bug appears", "d": "2/2016"}, {"body": "hmm getting thing remkoboschker ever figure looks like happens chrome", "d": "2/2016"}, {"body": "seawatts hi ca nt say noticed recently", "d": "2/2016"}, {"body": "usually less typing gets transpiled", "d": "2/2016"}, {"body": "seem problem first installation embernote example matthew white book example hangs firefox like something live reloader trying inject script ember serve version may older ember installed november livereload server serving firefox hangs content security policy page settings observed loading resource self scriptsrc unsafeeval csp report sent function installglobalhook window looks like someone supplied solution explanation changed build script precompile defaulttemplates mean words exactly change made build script something needs added emberclibuildjs file", "d": "2/2016"}, {"title": "deprecate jqueryisarray", "body": "seems fulfilled", "num": "2961", "d": "2/2016"}, {"title": "deprecate jqueryisnumeric", "body": "created internal use nt needed", "num": "2960", "d": "2/2016"}, {"title": "deprecate jquerynow", "body": "already reference", "num": "2959", "d": "2/2016"}, {"title": "deprecate jqueryproxy", "body": "seems use mostly fulfilled signatures limited use", "num": "2958", "d": "2/2016"}, {"title": "license tags", "body": "jquery javascript files users run tagged free software people want run free software web could jquery free software might free software since tagged either allow proprietary javascript well run jquery librejs project gnu make possible want run free software browsers allow files free software ps license file jqueryorg rest page matter completely unaccessible tor", "num": "2957", "d": "2/2016"}, {"title": "keyup keydown keypress event fire programmatically created dom elements", "body": "testing app seems jquery fire events jquery version try bind events dom elemets created handlebars code reproduce javascript document ready function tested emulator maybe affects emulator wonder jquery contain unit test scenario", "num": "2956", "d": "2/2016"}, {"title": "error compiled debian", "body": "info worked ends ok verbose cli usrbinnodejs usrbinnpm run build info using npm info using node verbose runscript prebuild build postbuild info prebuild jquery info build jquery verbose unsafeperm lifecycle true info jquery failed exec build script error jquery build error exit status error failed jquery build script error likely problem jquery package error npm error tell author fails system error npm install amp amp grunt error get info via error npm owner ls jquery error likely additional logging output error system linux error command usrbinnodejs usrbinnpm run build error cwd rootjquery error node v error npm v error code elifecycle verbose exit true", "num": "2955", "d": "2/2016"}, {"title": "delegated events nt work middle clicks", "body": "example leftclicking element triggers normal listener delegated listener middleclick delegated listener triggered tested google chrome jsfiddle", "num": "2954", "d": "2/2016"}, {"title": "jquerysrcintrojs file lacks end brackets", "body": "new jquery js global ide mentioned missing bracket close ever going jquerysrcintrojs nt know caused bug recent commit programmer code nt make sense", "num": "2953", "d": "2/2016"}, {"title": "read property createelement undefined", "body": "trying load module test using mocha chai sinon loading module get following error jquery really sure bug within jquery", "num": "2952", "d": "2/2016"}, {"title": "width outerwidth innerwidth sets incorrect value certain conditions webkit browsers", "body": "hi noticed tdth borderwidth gt child table bordercollapse collapse width x sets width equal x borderwidth webkit borwsers seems appear jquery versions jsfiddle code reproduce bug", "num": "2951", "d": "2/2016"}, {"title": "problem ssl handshake", "body": "hi using proxy mcafee web gateway enterprise external websites reference fetching jquery code get message proxy host codejquerycom reason ssl routines alert handshake failure site better switch tls", "num": "2950", "d": "2/2016"}, {"title": "mouseenter amp mouseleave events settimeout callbacks wrong", "body": "example page illustrates issue event", "num": "2947", "d": "2/2016"}, {"title": "stop modifying value provided boolean attributes", "body": "similarly stopped lowercasing attribute names workaround ie lt might want stop modifying value provided boolean attributes also afaik needed ie lt kept branch api compatibility", "num": "2946", "d": "2/2016"}, {"title": "jquery breaks webpack builds loading individual modules", "body": "hi change webpack builds broken loading individual modules think happening selectorsizzlejs trying load sizzle dependency externalsizzledistsizzle file exist unlike instance loads sizzle set simple example thank much advance", "num": "2945", "d": "2/2016"}, {"title": "initprototye nested loop", "body": "read source code one question whether stop cycle javascript var function test init initprototypeinit count test initprototypeinit return count test jqueryprototypeinit uncaught rangeerror maximum call stack size exceeded", "num": "2944", "d": "2/2016"}, {"title": "please demote dmethvin abusive maintainer behavior", "body": "mgol cc scottgonzalez arschmitz related foundation board members final reply abusive lock abridging dmethivin wrote welcome come html communities current solution bug professionally say dmethivin asked refrain interacting issue clearly proven abusive unprofessional fully documented unfortunate poor behavior tolerated establishing owners especially independent consultant md incorrectly claims language barrier thank moment time consideration", "num": "2943", "d": "2/2016"}, {"title": "jquery load ajax reported depreciated incorrectly", "body": "jquery load event depreciated version see jquery load ajax modal deprecated see try use ajax load command like jqmigrate incorrectly reports jqueryfnload deprecated believe bug jqmigrate", "num": "2942", "d": "2/2016"}, {"title": "parsehtml creates anchor elements empty href property chrome", "body": "parsehtml seems broken jquery later chrome code shows empty string chrome testhtml browsers jquery chrome ok html function test var html lt href testhtml gt lt gt var ref parsehtml html alert ref href edit mgol modified alert property anchor element originally test case alerting element meant relied stringification", "num": "2941", "d": "2/2016"}, {"title": "bug exists points nonlatest question", "body": "validating documentation seems latest version link version series eg specific like tia", "num": "2940", "d": "2/2016"}, {"title": "bugsjquerycom", "body": "trying view tickets related potential bugs seeing greeted bad gateway anyone working restoring service", "num": "2937", "d": "2/2016"}, {"title": "jquery popup issue", "body": "trying use basic pop jquery mobile use jquery version get following error bellow replace jquery version jquery version everything works fine error jquery version uncaught typeerror apreventdefault functionneventpreventdefault anonymous function anonymous function eventspecialnavigateselfpopstate anonymous function extendgo mobilenavigate widgetopen anonymous function anonymous function fn anonymous function mobilepopuphandlelink anonymous function anonymous function widgettriggerwithdeprecated anonymous function widgettriggerpagebeforechange anonymous function widgetchange anonymous function anonymous function fn anonymous function mobilechangepage anonymous function following page markup basic popup completely basic popup options set", "num": "2936", "d": "2/2016"}, {"title": "deep extend overwrites good objects null objects", "body": "added comments fiddle bottom end one array extend previous possible null value overwrite previous effort null would expect behavior suddenly encountered empty object place array feels like null behave like empty array array extended like empty object object extended erase previous effort", "num": "2935", "d": "2/2016"}, {"title": "throw internal jquery error first time", "body": "hi figure example change firefox combobox item throw error first time works next change function change c var cm c var ok cmparent typeerror null return neach parent function var baparentnode return b amp amp bnodetype", "num": "2934", "d": "2/2016"}, {"title": "ajax nt emit textstatus timeout error gateway timeout occurred", "body": "error occurred callback parameter prototype according description error though conflicts try comprehend jqueryajax gateway timeout jquery api documentation error type function jqxhr jqxhr string textstatus string errorthrown function called request fails function receives three arguments jqxhr object string describing type error occurred optional exception object one occurred possible values second argument besides http error occurs receives textual portion http status found internal server error jquery note handler called crossdomain error usually occurs use longtimepending request wait events proxy reverse proxy especially reverse proxy nginx vhost means proxy configuration gateway set smaller timeout limit browser ajax option never error get part hypertext transfer protocol reference gateway timeout server acting gateway proxy receive timely response upstream server specified uri eg http ftp ldap auxiliary server eg dns needed access attempting complete request", "num": "2932", "d": "2/2016"}, {"title": "show childnodes parent div", "body": "following divs want show childnodes hold div modalbody get error click anchor open modal", "num": "2931", "d": "2/2016"}, {"title": "figure fix possible use variable", "body": "master branch builded branches builded run use throw error right away see", "num": "2930", "d": "2/2016"}, {"title": "add issuetemplate pullrequesttemplate files", "body": "avoid cluttering root repo also support folder file take advantage sure form issue template take would good look examples like idea checklist think pr template really simple asking people reference ticket reminding sign cla", "num": "2929", "d": "2/2016"}, {"title": "ajax using context settings sets contenttype get requests", "body": "example ajaxsetup statuscode function var settings var auth link relauthenticate prop href var opts xhrfields withcredentials true causes statuscode handler trigger turn sends reauthentication request successful retries request retries request contenttype header get request set applicationxwwwformurlencoded due settings object undesirable side effects certain serverside frameworks get function partial getmodal find modaldialog html partial would like use handling across get post requests open workarounds anyone idea", "num": "2928", "d": "2/2016"}, {"title": "ajax calls", "body": "think agree day forward ajax calls renamed francis look like favor", "num": "2926", "d": "2/2016"}, {"title": "jquery working ui dialog plugin", "body": "earlier comfortably using jquery ui dialog plugin versions jquery prior soon upgraded jquery ui dialog plugin stopped working used work well jquery get error typeerror dialog function code changed way timeout dialog autoopen false modal true", "num": "2924", "d": "2/2016"}, {"title": "taglike attribute values modified html htmlstring", "body": "use taglike text attribute value via gets improperly modified example get instead expected produced according specification taglike values seem fine ambiguous ampersands escaped", "num": "2922", "d": "2/2016"}, {"title": "opera fails one css test", "body": "see failure one", "num": "2920", "d": "2/2016"}, {"title": "data getter creates data", "body": "sure intended calling without arguments creates data object given node hasdata div false div data object hasdata div true", "num": "2919", "d": "2/2016"}, {"title": "removing parent node event bubbling nt result pure javascript code", "body": "following code clicking button triggers form submission google chome html ok function form submit false button click function form remove however test case without using jquery trigger form submission html ok expected behavior examples functionally equivalent browsers affected google chrome jquery version tested jquery also tested firefox problem happen", "num": "2918", "d": "2/2016"}, {"title": "epreventdefault undefined", "body": "commit check ensure exists defined removed line believe though may seem redundant guards checks place ensure original event actually event conforms expectations event namely containing method rather json object contains bare minimum example bare minimum may look like pulled jquery mobile method however case jquery mobile used call jquerymobilenavigatorgo function creates contain method thus called check fails detect event infact function may issue needs addressed jquery mobile side traced back historically check existed causes issue popup newer versions jquery jquery mobile", "num": "2917", "d": "2/2016"}, {"title": "husky lint git hook vulnerable path changes", "body": "linter git hook added significant fault creates precommit file path hardcoded one end initial subsequent nt update poses problem tools like nvm removing older node version eg new patch release comes might want remove older one keep vulnerable amp outdated releases disk previous path stops valid hook stops working packages need reinstalled", "num": "2915", "d": "2/2016"}, {"title": "nt manually lowercase attribute name passed", "body": "changed lowercasing logic setter better conform spec lowercasing much lowercase ie lt nt need logic removing may even accidentally make api sortof work svgs see", "num": "2914", "d": "2/2016"}, {"title": "jqueryremoveprop disabled enable input disabling jqueryprop disabled true", "body": "recently upgraded noticed change behavior javascript var input consolelog inputis disabled false would expect inputprop disabled true consolelog inputis disabled true inputremoveprop disabled consolelog inputis disabled expected false actual true inputprop disabled false inputremoveattr disabled reenable input", "num": "2913", "d": "2/2016"}, {"title": "inarray void foo bar void returns real ie", "body": "return searching array contains mentioned title problem reproduced newer version ie using ie compatibility mode real ie code running page jquery ui", "num": "2912", "d": "2/2016"}, {"title": "iterator skip first element", "body": "sure messing something really strage code result reference second form jquery", "num": "2911", "d": "2/2016"}, {"title": "attr attributename value turns attribute name lowercase", "body": "seems using attr attributename value attributename turned lowercase causes issue trying set viewbox attribute using jquery attribute upper case b test cases setting attribute without jquery using works expected setting attribute using jquery nt work expected attribute set lowercase instead", "num": "2910", "d": "2/2016"}, {"title": "add tests certifying offset nt broken recent revert", "body": "basically need tests certifying amp work revert done land branches", "num": "2909", "d": "2/2016"}, {"title": "implement unhandledrejection event", "body": "implemented problem called irrespective whether error handled handler instead behave follows jquerydeferredexceptionhook called deferred resolve gt throw new error xx jquerydeferredexceptionhook called deferred resolve gt throw new error catch gt jquerydeferredexceptionhook called deferred resolve gt throw new error catch gt throw new error instead fixing behavior think best implement unhandledrejection eg bluebird currently", "num": "2908", "d": "2/2016"}, {"title": "siblings bug", "body": "", "num": "2907", "d": "2/2016"}, {"title": "node package jquery uses windowsettimeout", "body": "use jquery node hueapi called huepi combined domino xml see untill recently worked fine latest release npm gives error windowsettimeout defined window defined example settimeout function consolelog done works node windowsettimeout function consolelog done nt work window undefined could please use settimeout without window node release thx", "num": "2906", "d": "2/2016"}, {"title": "absolutely positioned inline elements become blocklevel using hide show", "body": "test case test case shows even inline element display inline explicitly stated css using hide show jquery sets display block happens elements position absolute reproduced bug following environments chrome x firefox x firefox x opera x firefox edge bug occur ie ie ie test internet explorer versions bug also occured using jquery core", "num": "2905", "d": "2/2016"}, {"title": "focus inoutblur test reliability", "body": "seeing following two test failures intermittently edge chrome tests also explicitly disabled firefox testuniteventjs unreliable recommendations improving reliability tests happy help pull request event check order focusinfocusout events ms assertions run ms source global code event focusblur order ms text focus ms source anonymous function oeventdispatch rhandle", "num": "2904", "d": "2/2016"}, {"title": "issue thank note", "body": "", "num": "2902", "d": "2/2016"}, {"title": "css support multiple url backgroundimage", "body": "following example var require jquery require jsdom jsdom defaultview var div divcss backgroundimage url data imagejpeg url data imagejpeg consolelog divget outerhtml run browser works code output try run serverside response", "num": "2900", "d": "2/2016"}, {"title": "jquery codejquerycom cdn points wrong sourcemap", "body": "originally filed viewsource observe expected actual see debugging site cdn suddenly debugger wrong context jquerydev chatting dmethvin sure change would nice could", "num": "2899", "d": "2/2016"}, {"title": "ignore sizzle working amd modules", "body": "hi everyone using jquery requirejs amd wan na use ajax module everything working fine obligated config sizzle anyway avoid ignore sizzle working directly amd modules lab configjs appjs tks", "num": "2898", "d": "2/2016"}, {"title": "offset adds scrolltop top coordinate ie jquery", "body": "context collaborator jquery ui month picker project recently setup demo page used latest compat version jquery plugin allows user click button uses jquey ui position method position menu input field demonstrated page everything worked fine except internet explorer seems positions menu far input scrolled important happens first time position element reproduce issue refreshing page tried first thought something jquery ui version using switching several different versions jquery ui nt solve issue tried use jquery version everything working fine even ie tried version run tests everything worked find also tried different version jquery ui jquery everything worked fine tried use jquery version one everyting working fine except ie going code user clicks button open method code called open method calls fadetoggle method using callback option start callback called right removed right animation begins mentioned jquery ui position docs required work start callback calls jquery ui position method eventually call elemoffset eventually jqueryoffsetsetoffset method calls get elements offset eventually method calls rect elemgetboundingclientrect seems add top property return tldr sure problem result us something wrong happens work every different configuration tested issue jquery needs resolved", "num": "2897", "d": "2/2016"}, {"title": "click return window obj", "body": "jq click returned click click return window object ca nt bug feature", "num": "2896", "d": "2/2016"}, {"title": "svgelementoffsetparent removed chrome around april", "body": "google chrome says svgelementoffsetparent deprecated removed around april see details may radar already may also implications", "num": "2895", "d": "2/2016"}, {"title": "upgrade jquery breaks bootstrap dropdowns", "body": "upgrade jquery breaks bootstrap dropdowns", "num": "2894", "d": "2/2016"}, {"title": "npm package nt documentation", "body": "referring page least example usage people know import library use least show people", "num": "2893", "d": "2/2016"}, {"title": "reduce jquery size", "body": "tl dr would love help reducing jquery size keeping performance compatibility creator umbrella js made lightweight jquery alternative modern browsers started javascript jquery many years ago love contribute back things learned try reduce jquery size reading jquery code realized many things made way name performance however modern browsers engines different take example loop vs traditionally considered performance improvement vs however methods speed within margin error jsperf shows jsperf test similar speed second one could really help addclass methods since function could put beginning similarly get reused slimming code said love try contribute back cleaning reducing reusing much source code possible jquery couple questions though wanted improvement last thing want waste jquery developers time time something one calling shots concerned test jquery performance currently performance tests willing try add need help setting manually testing every change jsperf viable reproducible setup umbrella js run circle ci ps discussion going issue", "num": "2892", "d": "2/2016"}, {"title": "try insight package get info custom builds", "body": "see", "num": "2890", "d": "2/2016"}, {"title": "chrome deprecating offsetwidth offsetheight", "body": "got warnings today working app svgelementoffsetwidth deprecated removed around april see details svgelementoffsetheight deprecated removed around april see details stem getwidthorheight function row", "num": "2889", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "api terribly intuitive expect people code sth like need", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "since requesting suggest mean specifically tagged needs changed note repo license file", "d": "2/2016"}, {"body": "dmethvin page info make librejs understand license scripts tried edit original post clarify editing function nt seem work currently really sensible browser browser plugin try find license javascript library would ungodly amount work get working instead us humans tag javascript easy parse automatically recognize license scripts", "d": "2/2016"}, {"body": "embedding entire license distribution file header even compressed file references license suggest way want without embedding full license submit pr", "d": "2/2016"}, {"body": "dmethvin misunderstood nt embed whole license would need top license magnet xturn btih amp dnexpattxt bottom licenseend wo nt many bytes current license notice lot functionality", "d": "2/2016"}, {"body": "understand make license available via bittorrent magnet link used different way also worry introducing code handle cases officially standardized could name popular javascript libraries include license comments", "d": "2/2016"}, {"body": "mgol librejs recognizes magnet link proper expat license user wants get license download via magnet link jquery nt make new magnet urls anything include one proper expat current license use order help users use free software people done realize everyone thought like world would proprietary software effort put kind standard place even ad hoc one currently way automatically parsing licensing information javascript files", "d": "2/2016"}, {"body": "tsutsukakushi nt think opposed necessarily good way specify license seems like good thing document rather preachy dogmatic rather approaching problem one automate issue license recognition perhaps would help separate two issues make page focused technical details", "d": "2/2016"}, {"body": "dmethvin agree page technical details would ask mailing list however nt think librejs couple guys working might get top priority maybe experienced javascript developers could help wink wink", "d": "2/2016"}, {"body": "totally messed first sentence let try agree page technical details would good ask mailing list", "d": "2/2016"}, {"body": "thanks report could create test case could reproduce", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "ca nt get jsbin run real browserstack get error see screenshot general jquery forward event browser generates browser nt fire event ca nt much keyupkeydown events pretty reliable platforms keypress also test real never various compatibility view modes", "d": "2/2016"}, {"body": "sorry noise guess confused morning browser flood confirm key events fire even thanks much efforts", "d": "2/2016"}, {"body": "try remove folder execute command", "d": "2/2016"}, {"body": "also nodejs instance really old please upgrade least stay upgrade node newer find wellmaintained repository various linux flavors including debian", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "yep duplicate", "d": "2/2016"}, {"body": "yeah intentional wrappers modules included jquery builded", "d": "2/2016"}, {"body": "jspm manages dependencies browser nt error means sounds like trying get executed node requires additional implementation like one provided jsdom even fail earlier situation looks weird jquery version also need full example perhaps strippeddown version project could reproduce bug hard anything looking error", "d": "2/2016"}, {"body": "code trying run basically test verifies module loaded module question used ejs page wanted test module isolation add details project also github nt pushed test recently import chai expect chai import sinon sinon import sinonchai sinonchai import system systemjs import publicconfigjs chaiuse sinonchai describe helpermodule gt let module", "d": "2/2016"}, {"body": "think jquery bug report nt even see jquery code snippet", "d": "2/2016"}, {"body": "happens chrome edge firefox seems related subpixel values borders", "d": "2/2016"}, {"body": "update gbcr result well includes borders result includes one since borders collapsed least interpretation", "d": "2/2016"}, {"body": "switched tls yet", "d": "2/2016"}, {"body": "yes already least proxy supports tls problems specific type admin told", "d": "2/2016"}, {"body": "could create ticket detail cdn repo resolve likely need network people talking cdn people much information configuration", "d": "2/2016"}, {"body": "ca nt use native due several browser bugs synthesized could fixed making new copy entire object delivered element bubbled would horrible performance penalty need properties copy used settimeout function", "d": "2/2016"}, {"body": "thanks solved saving event variable calling edit think better restore true event type like", "d": "2/2016"}, {"body": "agree dmethvin assessment nt think make change", "d": "2/2016"}, {"body": "btw problem persists jquery version well", "d": "2/2016"}, {"body": "thanks solved saving event variable calling settimeout nt deep extend extremely expensive need variables event type save variables", "d": "2/2016"}, {"body": "dmethvin yeah thought minute changed see updated comment", "d": "2/2016"}, {"body": "ca nt use native due several browser bugs precise none browsers supported jquery experience bug last one safari dropped still support ios think important reason synthesize make event delegation work see comment", "d": "2/2016"}, {"body": "yes true want delegated requires either deriving bubbling using capturing handler via special event hook could try latter via approach similar focusinout", "d": "2/2016"}, {"body": "would put wrong event order good idea", "d": "2/2016"}, {"body": "actually nt ie lt ie lt required setting property boolean like continue although browsers may treat value true like users see value set always truthy value regardless passed forcing values comply spec educating users fact even set string false still treated true another helpful sideeffect ability tell difference boolean enumerated attribute quickly already consulted spec users", "d": "2/2016"}, {"body": "wanted educate users difference boolean amp nonboolean attrs might set empty string instead attribute name nt work ie lt normally specify boolean attribute writing html hand providing value unless consider change much breaking change would break cases someone incorrectly retrieved attribute value checked truthiness doubt code would actually anything already broken though", "d": "2/2016"}, {"body": "empty string provide attribute name", "d": "2/2016"}, {"body": "visual clue developer tools well closer standards dev tools foo exactly attributes natively reflected property modifications behave eg setting results attribute set empty string represented like makes jquery behavior closer native one trying amp recently", "d": "2/2016"}, {"body": "spec says closer browser behaviour sometimes good idea since jquery tries fix exactly saying pro would cool see doc says", "d": "2/2016"}, {"body": "visual clue developer tools well closer standards get board first second standard", "d": "2/2016"}, {"body": "attribute present value must either empty string value caseinsensitive match attribute canonical name leading trailing whitespace", "d": "2/2016"}, {"body": "also possible using empty string issues xhtml", "d": "2/2016"}, {"body": "seems spec agrees behaviour even though dev tools shows absence value shows", "d": "2/2016"}, {"body": "also", "d": "2/2016"}, {"body": "ok forgot xhtml seems stay", "d": "2/2016"}, {"body": "forgot xhtml well seems xhtml dom behaves exactly html ie seems nt contradicts xhtml spec either sure want give easily", "d": "2/2016"}, {"body": "markelog violate xhtml spec tho dmethvin pointed even browser implementations nt care besides nt see much gain using empty string know works think leave", "d": "2/2016"}, {"body": "xhtml requires set value quotes could empty string native behaviour believe point initial request nope nt violate nt see much gain using empty string know works think leave like said oppose pro", "d": "2/2016"}, {"body": "xhtml requires set value quotes could empty string tried forget horror xhtml years ago seem recall code breaking expected nonfalsy attribute values empty string falsy probably would timeframe timmywil attributes refactor", "d": "2/2016"}, {"body": "years ago like five", "d": "2/2016"}, {"body": "xhtml requires set value quotes could empty string yea recall time setting empty string ended value specified html probably whole attroperties issue maybe looking devtools represents without value also unassigned value return empty string possible browser implementors differentiate means former could still issue nt think worth finding", "d": "2/2016"}, {"body": "indeed experiencing thing possible add alias config fix would indeed much better jquery loaded sizzle webpack fetch nodemodules folder wherever resolving", "d": "2/2016"}, {"body": "seems included published package could check starts working copy directory jquery repo", "d": "2/2016"}, {"body": "yup included could actually fix npm", "d": "2/2016"}, {"body": "include fix", "d": "2/2016"}, {"body": "fixed", "d": "2/2016"}, {"body": "thank", "d": "2/2016"}, {"body": "fix find version still available cdn", "d": "2/2016"}, {"body": "working", "d": "2/2016"}, {"body": "discuss monday might need fix things nt want release every days", "d": "2/2016"}, {"body": "thanks bertez worked used jquery sizzle", "d": "2/2016"}, {"body": "please look help stack overflow place report bugs jquery", "d": "2/2016"}, {"body": "damn think lucky deal dave matter language barrier selfentitled behaviour exhibited could sign complete lack professionalism dave nice guy kept giving benefit doubt quite franckly noone else would tolerated repeated unwarranted attacks solution problem getgo nt say description bug would saved dave ten thousands people following repository onesided conversation clearly makes look like internet troll suggest tone notch operatics contributor feels obligated report abuse", "d": "2/2016"}, {"body": "right venue issue", "d": "2/2016"}, {"body": "duplicate fixed next release jquerymigrate later week", "d": "2/2016"}, {"body": "thanks wasted couple hours trying figure reporting depreciated updating legacy code", "d": "2/2016"}, {"body": "result dom case element seems correct code depends stringifying dom elements example", "d": "2/2016"}, {"body": "closing worksforme please provide test case reopen", "d": "2/2016"}, {"body": "checked code firefox ie chrome firefox ie show chrome empty string use jquery browsers show", "d": "2/2016"}, {"body": "vmagik thanks update impression report stringifying dom elements seems href property indeed set empty string chrome need investigate", "d": "2/2016"}, {"body": "ok nailed issue commit nonjquery test case also posted test case fails chrome succeeds firefox safari edge ie support opera even android see reported upstream", "d": "2/2016"}, {"body": "vmagik using code real application calling something else calling trying determine impact", "d": "2/2016"}, {"body": "call parsehtml code gets string like tries get href nt invent code first message stringfication found example somewhere", "d": "2/2016"}, {"body": "result though trying determine seriousness bug based way things used real code", "d": "2/2016"}, {"body": "open window show resulting href also use ajax call", "d": "2/2016"}, {"body": "mean show user trying get sense work flow occurring type html parsed come href shown window", "d": "2/2016"}, {"body": "show user click link page first ajax request result either one link several links one link show new window dialog several links need show user choice", "d": "2/2016"}, {"body": "guess workaround need back master", "d": "2/2016"}, {"body": "start removal going wait removing", "d": "2/2016"}, {"body": "seems fixable something simple dirty first time spackle browser behavior", "d": "2/2016"}, {"body": "nice", "d": "2/2016"}, {"body": "since caller pass document work set base empty string way href propertyattribute would equal still would suggest back nt using consistently documented", "d": "2/2016"}, {"body": "like going like experiment point changes seem risky trying stop developed soon agree dmethvin back", "d": "2/2016"}, {"body": "links latest good practice one", "d": "2/2016"}, {"body": "links latest good practice one may good practice also good document etiquette favoritism specific version looks like jquery bug thank confirming", "d": "2/2016"}, {"body": "martii read blog post referenced see chaos caused snide comment wo nt change anything", "d": "2/2016"}, {"body": "snide comment perception skewed bug exists references usages based said please refrain snarky responses", "d": "2/2016"}, {"body": "dmethvin appease bad maintainer response cc mgol roughly documentation reading elsewhere neutral documentation sake latest version url used currently jquery core however jquery maintainers suggest latest version used meta link updated actual latest jquery core series possibly part due statistics gathering please follow link specifics additional specific isolated versions may found cdn including recent versions jquery core please let community know jquery going fix bug url rewriteroute andor remove altogether thank moment time realist industry three decades nt appreciate accused snide", "d": "2/2016"}, {"body": "martii think may language barrier apologies understand response request bug asking us please let community know jquery going fix bug url rewriteroute andor remove altogether bug", "d": "2/2016"}, {"body": "bug asking us bug latest version url used currently jquery core seems latest url nt returning actual latest either removed mod rewrite apache change redirect route node web server configuration point latest seems like latest url strongly discouraged response latest presumed link done best keep documentation neutral possible understand link referenced agree specific versions always used maximum compatibility minimal breakage documentation tricky code examples keep neutral nt maintain constantly version bumping added foot notes docs help alleviate confusion users communities time", "d": "2/2016"}, {"body": "seemed like blog post pretty clear nt use pretend file exist ignore suggestive name official word development team used part official documentation fact found file cdn made assumptions based name make supported ca nt update change file anymore break lots web sites internet misused remove without punishing users sites developers made unfortunate decisions past whose sites may longer maintained another nt break web decision make regular basis need latest version file want automate process could get npm since publish releases versions tagged", "d": "2/2016"}, {"body": "pretend file exist lol official word development team used hence transformation issue simple question bug report footnotes latest url remain communities documentation officially endoflifed removed jquerycom domain unfortunate development team nt accommodate neutrality code samples work around footnotes misused remove without punishing users sites developers made unfortunate decisions past whose sites may longer maintained deprecated end life using standard industry nomenclature jquery supporting fashion link still around bad nt see industry standard http status codes deprecation end life let servers know codes perhaps time interest get around writing rfc adoption ca nt update change file anymore break lots web sites internet misused remove without punishing users sites developers made unfortunate decisions past whose sites may longer maintained understandable minus blame pointed next jquery actively supporting exists active deprecated endoflife common terms presume assume difference english language replies blog post deprecation state servers usually wo nt know may cause unnecessary maintenance workflow made unfortunate decisions past unprofessional blame maintainers cc mgol fact found file cdn made assumptions based name make supported blame cc mgol nt find communities around predating blog post referenced fact defacto standard described blog post issues raised pertaining statistics gathering cdn usage want automate process could get npm since publish releases versions tagged thanks reiteration something know already use node projects wiki including gollum gh allura sometimes mediawiki nt automation hence external servers use mod rewrite node routing point files change http status headers adding another job task determine latest version documentation waste resources believe anyhow bug nt want get addressed nt reading least wontfix label would hope positive role javascript community would want achieved project something else latest url know discouraged initial tone dmethvin set somewhat rectified dissuade colleagues contributing", "d": "2/2016"}, {"body": "wiki including gollum gh allura sometimes mediawiki nt automation hence external servers use mod rewrite node routing point files change http status headers adding another job task determine latest version documentation waste resources believe saying want automatically update jquery sites release without testing please nt automatically update things like exactly jquerylatest deprecated every update even patch release opportunity incompatibilities creep see every release people depend undocumented functionality bugs code broken update", "d": "2/2016"}, {"body": "saying want automatically update jquery sites release without testing quite done best keep documentation neutral possible understand link referenced agree specific versions always used maximum compatibility minimal breakage documentation tricky code examples keep neutral nt maintain constantly version bumping added foot notes docs help alleviate confusion users communities time communities prefer remain neutral possible version used including pushing pointed abridged quote remove without punishing users sites developers whose sites may longer maintained wish automation process updating docs especially features nt exist newer wiki software due dumbing security reasons every update even patch release opportunity incompatibilities creep see every release people depend undocumented functionality bugs code broken update speaking choir aphorism goes actual usage production personally would discourage well latest url however favoritism specific version nt recommended communities documentation shieldsio helps great deal node projects ex quoting syntax working code snippet supposed neutral technically impossible gollum related markdown ed software example unwanted maintenance task showing html code snippet modern media type per rfc requires routine maintenance ca nt automated gh issue tracking also gollum gh wiki html", "d": "2/2016"}, {"body": "sounds like looking something beyond scope repository past tried simple solution failed horribly welcome come distribution mechanism beyond offer distribute publish npm tags available github possible automate", "d": "2/2016"}, {"body": "thanks notice look", "d": "2/2016"}, {"body": "since nt edit tickets google cached version complete", "d": "2/2016"}, {"body": "back thanks", "d": "2/2016"}, {"body": "thanks opening issue please provide test case help us assess problem", "d": "2/2016"}, {"body": "pretty sure dup close", "d": "2/2016"}, {"body": "fixed changing function", "d": "2/2016"}, {"body": "copying intentional see array weirdness compare past releases regardless outcome might satisfied customizable generalpurpose library like lodash use case", "d": "2/2016"}, {"body": "sure intentional nt see clearly documentation says properties inherited object prototype copied fine copy null undefined also says deep extend object array extended stands true already array extend null would expect try extend existing array null give original array happens null property copied case even intentional behavior ca nt see intended since end product fully extended array one would expect", "d": "2/2016"}, {"body": "also bring one argument seem like intentional order objects extended changes outcome extending extending sound like extend", "d": "2/2016"}, {"body": "final argument take look would ever expect result deep extend", "d": "2/2016"}, {"body": "sure intentional nt see clearly documentation says properties inherited object prototype copied fine copy null undefined line immediately preceded undefined properties copied implication properties also says deep extend object array extended stands true already array extend null would expect try extend existing array null give original array happens null property copied deepextend behavior applies data types match scalars overwrite nonscalars nonscalars overwrite scalars objects overwrite arrays arrays overwrite objects case even intentional behavior ca nt see intended since end product fully extended array one would expect final argument take look would ever expect result deep extend yes nt fit needs recommend customizeable lodash mergewith", "d": "2/2016"}, {"body": "array weirdness compare past releases deepextend preserves array element index behavior identical way back jquery given counterintuitive leave ticket open decide tomorrow whether address", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "change makes nervous agree creating api today might worthwhile ignore rather replace target array behavior present long time", "d": "2/2016"}, {"body": "turns behavior standard", "d": "2/2016"}, {"body": "code function see docs passing function executes passed function document ready instead creating new jquery object see docs trick expects executed method regular function throws invoked document ready loses context object way get function get error tried following even also note discouraged mix jquery inline event handlers use method instead", "d": "2/2016"}, {"body": "dilemma defined timeout period specified request elapsed would coopt also mean components network chain reporting timeout periods independent one specified caller call although change seems almost trivial could easily compatibility impacts help code reported", "d": "2/2016"}, {"body": "used condition cause ajax failed timeout code aoscdevwebsitesiteng realized need everywhere express condition ajax timeout least implementation event upstream server timeout may caused two condition mean another thing except upstream server timeout one said gateway said may contain later condition chain opposite says deployed proxies known return dns lookups time however fuzzy unclear tell eg timeout exactly happened clear enough", "d": "2/2016"}, {"body": "since clear happened would say coopting even less necessary checking status seems like right thing way separate timeout somewhere network case timeout locally waiting network case", "d": "2/2016"}, {"body": "discussed meeting nt want make timeout ambiguous", "d": "2/2016"}, {"body": "thanks suggest add tips docs eg tip ajax timeout may cause proxies middlewares http error network chain earlier ajax", "d": "2/2016"}, {"body": "trying access collection single element also problem nt anything jquery please look help stack overflow", "d": "2/2016"}, {"body": "maybe supportjquery global lying around", "d": "2/2016"}, {"body": "seeing master used amd think happening amd mode testinitjs still runs global code synchronously jquery loads async adds back", "d": "2/2016"}, {"body": "examples deargithubdeargithub railsrails googlecloudplatformgcloudcommon dotnetcorefx golanggo", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "zenorocha wow nice thank", "d": "2/2016"}, {"body": "workaround applied", "d": "2/2016"}, {"body": "seems like support request rather bug report feature request start stackoverflow see help", "d": "2/2016"}, {"body": "dmethvin support needed already found workaround issue post primary intent reporting issue secondary intent way thoughts temporary fix issue second time around request passing ajax settings used first request header sent", "d": "2/2016"}, {"body": "investigate need repro case version jquery used etc code snippet nt enough us help help us feel needs addressed inside jquery", "d": "2/2016"}, {"body": "provide thanks", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "nt think", "d": "2/2016"}, {"body": "please give plunk", "d": "2/2016"}, {"body": "create codepen well locally ca nt get issue please give detail code snippet", "d": "2/2016"}, {"body": "tomorrow send html pages shows issue left work place monday february yashdeep hinge notifications githubcom wrote please give plunk reply email directly view github thank regards dr sharad kelkar", "d": "2/2016"}, {"body": "thanks please file issue small test case", "d": "2/2016"}, {"body": "problem related incompatibility jquery migrate plugin resolved migrate plugin changed issue jquery simply required proper version migrate plugin mon feb pm timmy willison notifications githubcom wrote closed reply email directly view github", "d": "2/2016"}, {"body": "happning due return htmlreplace rxhtmltag nt know done method htmlprefilter function html return htmlreplace rxhtmltag", "d": "2/2016"}, {"body": "duplicate resolve escaping characters attribute values using documentation yet released", "d": "2/2016"}, {"body": "thank would never find fine job", "d": "2/2016"}, {"body": "posterity test screenshot", "d": "2/2016"}, {"body": "see fixed timmywil mentioned commit messages closing issue", "d": "2/2016"}, {"body": "yes intended way method give data object attached element make one let check one already", "d": "2/2016"}, {"body": "also docs mention", "d": "2/2016"}, {"body": "well docs also say data associated element data object data object empty method returns false test case provided returns empty object", "d": "2/2016"}, {"body": "agreed legitimate", "d": "2/2016"}, {"body": "code behaving way want though correct docs wrong", "d": "2/2016"}, {"body": "getter actually create data object reason", "d": "2/2016"}, {"body": "args defined return data object one nt creates one attaches element returns new empty object ten years ago api could defined return element data would needed set new data item explicitly way defined though lots code doubt depends behavior assumption trying get full data item actually wanted use current behavior makes simpler created way see data element without creating presumably less common case", "d": "2/2016"}, {"body": "ok dmethvin right note jquery event system uses jquery data api store event handlers therefore binding event element using one shorthand event methods also associates data object element case hasdataattrs private data makes essentially useless separate issue", "d": "2/2016"}, {"body": "goal give caller way avoid accidentally creating unneeded data object still useful nt matter whether private public data whether already object agree useless user making inferences put data object okay get object enumerate hey empty never happen", "d": "2/2016"}, {"body": "think need fix docs saying return empty data objects true", "d": "2/2016"}, {"body": "agreed created", "d": "2/2016"}, {"body": "jquery code standard ui events spec apply event objects dispatched event target beginning dispatch implementations must first determine event object propagation path dom implementations applies even element propagation path moved within dom removed dom attribute part ancient behavior covered standard nt know pull rug clarify case consider problem example jsbincom jsfiddlenet", "d": "2/2016"}, {"body": "inline event handlers nt follow specification attached addeventlistener nt know assumption codes functionally equivalent light said jqueryless version functionally equivalent would like html ok documentqueryselector form addeventlistener submit function return false documentqueryselector button addeventlistener click function evt evttargetformremove indeed behave way jquery version jquery bug", "d": "2/2016"}, {"body": "getfree thanks following closing ticket", "d": "2/2016"}, {"body": "would fine really sure mobile trying adding plainobject property arschmitz clarify", "d": "2/2016"}, {"body": "bug fixed side see current code", "d": "2/2016"}, {"body": "reference see", "d": "2/2016"}, {"body": "oh yeah remembered ticket vaguely thought old tracker thanks", "d": "2/2016"}, {"body": "would nt call significant fault since change node version always good idea reinstall modules like change without reinstall nt expect everything would work correctly", "d": "2/2016"}, {"body": "really change major node versions usually needed even want safe amp reinstall necessary update newer major node version upgrade lts", "d": "2/2016"}, {"body": "upgrade lts would use nvm switch back forth patch versions node would nt always use case say pretty unconventional even want safe say yeah would really want safe switch major versions cc typicode nt use nt issue ca nt relate ticket say problem really exist repo anyway", "d": "2/2016"}, {"body": "would use nvm switch back forth patch versions node would nt always use case say pretty unconventional course always use since moment released seems nt understand let describe scenario newest node use jquery directory node comes install via nvm amp remove want says run luck remove amp make work seems like issue indeed report", "d": "2/2016"}, {"body": "let describe scenario say hard consider raaare case significant fault nevertheless frustrating us could grounds removal commithook", "d": "2/2016"}, {"body": "affect anyone uses nvm manage nodejs installs removes older nodes installing patchminor updates nvm popular nt think qualifies edge case significant fault prevents committing even locally unless bypass hooks additional barrier new contributors", "d": "2/2016"}, {"body": "proposed solution see couple possibilities remove git hook suspect would also fix issue seems common suggestion fixing issues husky browsing issues list given inclined leave asis leave git hook open issue husky repo sure fix admittedly sure mean path hardcoded assumed husky copy hook runs specific npm scripts sure different node versions would affect", "d": "2/2016"}, {"body": "admittedly sure mean path hardcoded cat githooksprecommit binsh husky path usersmgoldocumentsprojectspublicjqueryjquerycorenodemoduleshuskynodemodulesbin usersmgoldocumentsprojectspublicjqueryjquerycorenodemodulesbin usersmgolbin usersmgolcabalbin usrlocalherokubin usrlocalbin usrlocalsbin applicationscrossoverappcontentssharedsupportcrossoverbin usrbin bin usrsbin sbin librarytextexbin nodemodulesbin usrlocaloptdartlibexecbin cd f packagejson amp amp cat packagejson grep q precommit ne amp amp exit npm run precommit ne echo echo husky precommit hook failed add noverify bypass echo exit fi assume provided hardcoded path derived current shell path moment invoking note inside string", "d": "2/2016"}, {"body": "nvm popular nt think qualifies edge case nt believe said edge case said switching node lts patch versions rare case edge though rare one affect anyone think behaviour affects clear issue nt reinstall node modules run command changing major node versions seems nvm also favours reinstall approach given flag exist", "d": "2/2016"}, {"body": "said switching node lts patch versions rare case think people upgrading local node instances new major versions nt think upgrading patch minor rare issue nt reinstall node modules first npm package ever encountered forces nonmajor nodejs upgrades seems nvm also favours reinstall approach given flag affects global packages relevant case", "d": "2/2016"}, {"body": "think people upgrading local node instances new major versions nt said trying precise would nt repeat ie see husky first npm package ever encountered forces nonmajor nodejs upgrades yeah one common things maintainers package ask thoroughly reviewing issue try advice solves lot cases suspect user switches node versions lot packages needs reinstalled change node versions seems easy solve issue find happened affects global packages relevant case install packages local viseversa nt really matter installed point nvm would reinstall packages rebuild saying global packages need reinstalled local modules rebuilded", "d": "2/2016"}, {"body": "assume provided hardcoded path derived current shell path moment invoking npm install note inside string yea interesting surprised nt work without setting path", "d": "2/2016"}, {"body": "mgol seems going particulars things suggest move focus want want remove precommit", "d": "2/2016"}, {"body": "hi markelog thanks heads time hard coded mainly sublime text users problem may appear tools nt checked using sublime text git package problem modifies terminal tools nt aware committing sublime text git hook failing could nt find sublime hardcoding path makes possible run hooks terminal yeah tradeoff think check warning message code like could enhancement verify issue still present sublime maybe need setting git hooks anymore removed", "d": "2/2016"}, {"body": "typicode know hooks discouraged seems perfect case always replaced hook would nt surprise much path issue general issue os x gui apps different path terminal ones even regular nondynamic path modifications done reflected gui apps guess securityrelated measure nt able make extended reflected popular sourcetree git client os x means currently ca nt commit sourcetree cc jzaefferer nt use hack commit hook choose poison", "d": "2/2016"}, {"body": "regarding commitplease open issue still looking steps reproduce", "d": "2/2016"}, {"body": "mgol updated nt hardcoded anymore also noticed current sublime text build inherits started using cli point storing anymore new version supports installed use node version future release guess could handled well nt installed simply check skip avoid blocking gui tools users tested os x ubuntu sublime text feedbacks welcome", "d": "2/2016"}, {"body": "also noticed current sublime text build inherits path started using subl cli point storing anymore start eg launchpad gui apps os x nt inherit terminal started terminal eg currently ca nt commit via sourcetree without bypassing commit hooks find binary used new version supports installed use node version future release guess could handled well done work gui apps default", "d": "2/2016"}, {"body": "start launchpad work new hook scripts loads way loaded terminal sh githooksprecommit export nvmdir userstypicode nvmdirnvmsh amp amp nvmdirnvmsh even though gui tool nt aware terminal start modified run become available moment works sublime text started spotlight thing need set default version make available gui apps started terminal", "d": "2/2016"}, {"body": "typicode great thanks guess treat ticket reminder update husky jzaefferer think supporting way know applying workaround one app considering popularity managing node installations", "d": "2/2016"}, {"body": "pr", "d": "2/2016"}, {"body": "note use method remove native properties checked disabled selected remove property completely removed added element use prop set properties false instead", "d": "2/2016"}, {"body": "got test machine", "d": "2/2016"}, {"body": "looks like page using jquery two years ago bug present like submit patch could consider otherwise wo nt fixed since longer supported microsoft last month jquery patches needed consist lowrisk regression fixes", "d": "2/2016"}, {"body": "dmethvin also problem version reason testing version make sure nt something new kidsysco try jquery version", "d": "2/2016"}, {"body": "thing", "d": "2/2016"}, {"body": "sparse array detection culprit values indistinguishable holes easy fix though nt skip holes technically divergence forcing hand sparse arrays obviously broken anywhere needing support anyway plus damage confined rare scenario", "d": "2/2016"}, {"body": "technically divergence fix nt think diverge especially way long time point apply critical fixes branches", "d": "2/2016"}, {"body": "fix nt support", "d": "2/2016"}, {"body": "ah lol nt read carefully enough would nt changing breaking change though imagine people use jquery even nt test ie treating undefined differently would break code nt seem safe patch release", "d": "2/2016"}, {"body": "mmm works browsers except looks bug reaaaly edgy since array", "d": "2/2016"}, {"body": "side note sure consider edgy function used succinct way check value equal one many values sometimes one instead could", "d": "2/2016"}, {"body": "side note sure consider edgy five years since culprit added seems first reported pretty confidant", "d": "2/2016"}, {"body": "going use wonderful opportunity rant ie lt think bug happens real ie number users searching array probably counted one hand place find real ie without download gb vm one companies old production servers one ever opens web browser besides even code searches array user likely able execute code javascript page throw famous people know including test using ie emulation page laid correctly browser slow user likely give browser finishes laying rendering page even fix issue nt change fact workaround plugin fact self sure good idea introduce breaking changes markelog perhaps mention somewhere api docs something", "d": "2/2016"}, {"body": "mgol current case nt return fix cost breaking since browsers use native purely question supporting either sparse arrays search elements browser request latter fulfilling wo nt even break unit test afaict", "d": "2/2016"}, {"body": "thanks explanation get still think risky obviously wo nt requests keep current behavior change people report something expect different behavior oth think nt received lots requests change logic ie considering fact stop development lines sounds risky tamper especially patch release", "d": "2/2016"}, {"body": "yeah comes single bug report several years reporter says worked around code fix side may break opposite case nt know one exists wild appears one longer even companies running old legacy code compat view wo nt encountering problem", "d": "2/2016"}, {"body": "let get one thing straight since seems us confused would fix without touching anything else decided release would need according semver release patch version bump minor major version would violate semver policy adhere think nt invent new policies releases otherwise perspective every change could considered breaking absurd", "d": "2/2016"}, {"body": "would fix without touching anything else decided release would need according semver release patch version disagree fix one bug introducing another one would breaking change", "d": "2/2016"}, {"body": "disagree fix one bug introducing another one would breaking change question agree agree semver pretty clear bugfix patch version", "d": "2/2016"}, {"body": "even still discussed years wild one bug report reporter even says fix wo nt help affected environment nt even supported anymore suggest close issue move", "d": "2/2016"}, {"body": "question agree agree semver pretty clear bugfix patch version bug fix breaks public api bug fix bug fix breaking change semver indeed clear means major version x xyz x gt must incremented backwards incompatible changes introduced public api may include minor patch level changes patch minor version must reset major version incremented agree scottgonzalez close issue wontfix", "d": "2/2016"}, {"body": "scottgonzalez agreed let leave one alone", "d": "2/2016"}, {"body": "major version x xyz x gt must incremented backwards incompatible said interpretation suggest every bugfix could interpreted backincompat since could code depends bug agree scottgonzalez close issue wontfix", "d": "2/2016"}, {"body": "works browser could create fiddle", "d": "2/2016"}, {"body": "note forms nested main form sorry forgot paste detail example", "d": "2/2016"}, {"body": "dom expect fiddle nested forms strange things second form first removed parsing browser end two toplevel forms two nested forms given actual dom structure jquery behaving correctly", "d": "2/2016"}, {"body": "sorry nt notice domok thanks", "d": "2/2016"}, {"body": "thanks report afaik always case since made conforming spec see detailed description comment spec explicitly requires lowercasing attribute name description applies html right thing algorithm nt apply svgs jquery nt support svg manipulation rare exceptions though nt think change anything determining current context applying different algorithm would messy however seems might well avoid lowercasing let browsers magic mostly problem old ie would make work automatically thoughts ps agcolom keep mind though use jquery svgs find amp cases going support svg library", "d": "2/2016"}, {"body": "mgol yes thanks info checked list html attributes appear lowercase wonder whether might worth adding note docs", "d": "2/2016"}, {"body": "might add note would nt want end situation explicit warnings svg every api page still want investigate whether may drop lowercasing jquery regardless lack official svg support", "d": "2/2016"}, {"body": "see trail tears", "d": "2/2016"}, {"body": "dmethvin yeah issue lowercasing much perhaps nt need", "d": "2/2016"}, {"body": "mgol think probably right lowercased old ie could nt remove consistency ca nt recall discussion seems like try remove altogether", "d": "2/2016"}, {"body": "think probably right lowercased old ie could nt remove consistency yes think exactly case prepare patch", "d": "2/2016"}, {"body": "issue pr api issue continue dicscuss howif want document nt seem actionable actions possible ticket going close thanks investigation agcolom amp dmethvin", "d": "2/2016"}, {"body": "land branches mm nt seem worth okay", "d": "2/2016"}, {"body": "thanks", "d": "2/2016"}, {"body": "markelog tests broken browsers could fix reopen", "d": "2/2016"}, {"body": "seems caused using instead surprised works test using correct jquery version", "d": "2/2016"}, {"body": "also noticed variable assign called better align tests previous nomenclature would called different usual either way", "d": "2/2016"}, {"body": "reason work amd reason missed called done stop think fine", "d": "2/2016"}, {"body": "think fine stopping anything notifies test runner finished called old api resuming test suite calling also almost universally called test runners code switched new api place whole suite called", "d": "2/2016"}, {"body": "notifies test runner finished whole process called stopping whereas stop synonym finish think free choice name variables long names sufficiently reflects purpose", "d": "2/2016"}, {"body": "discussed length team meetings decided would add much code reduce performance show otherwise via pull request could consider perhaps hook would allow implement unhandled rejections plugin without enlarging code code andor harming performance note example implement stack trace plugin cuts performance half record stack trace every deferred however let say promiselike implementation jquery five years given jquery popularity use think widely used implementation javascript years ever remember anyone asking unhandledrejection hook think common reason people need one developing things like misspell method name try parse invalid json jquery things throw immediate error console say oh silly fix promisea compliant swallow exceptions like everyone else would cruel give developers clue mistakes code examples explicitly throwing errors different implicitly thrown errors like undefined developers rarely expect misspell things anticipate json returned server may malformed thrown error part api contract lot easier developer understand need handle example rejects cases like nt received complaints", "d": "2/2016"}, {"body": "years ever remember anyone asking unhandledrejection hook promisea compliant swallow exceptions like everyone else yea nt need hook either exactly promisea compliant added began think given chance errors explicitly without yelling every time wtbs must agree common use case misspellings etc developer choose error would still guard eg determining callback error one expects something truly unexpected else would still swallowed still promise sees wider adoption used conjuction deferreds gets implemented browsers experienced devs might start want behavior even jquery meaning able disable explicitly errors needed event handle rest though said creating plugin might best way go least still able need access pool bound handlers nt look get jquery inside", "d": "2/2016"}, {"body": "yea nt need hook either exactly promisea compliant added catch began think given chance catch errors explicitly without jquerydeferredexceptionhook yelling every time remove hook entirely add filters differently meant minimal default way report errors prevent people tearing hair still promise sees wider adoption used conjuction deferreds unhandledrejection gets implemented browsers experienced devs might start want behavior even jquery meaning able disable jquerydeferredexceptionhook explicitly catch errors needed unhandledrejection event handle rest goal jquery basic promisea compatibility without bloating library loaded millions times day need different behavior example know platforms support native promise willing load minified bluebird library though said creating plugin might best way go least still able need access pool bound catchthen handlers nt look get jquery inside exceptionhook yes requires bunch extra bookkeeping nt perhaps done strategically placed hooks nt know definitely seemed like wanted incorporate jquery close ticket ways facilitate better implementation without big code performance impact let us know", "d": "2/2016"}, {"body": "clear without live test case demonstrating expected observed guess invalid html rather jquery fault elements allowed nest attempts result closest valid ancestor node adopting note elements allowed contain elements either although consequences violating content model less severe going close feel free follow jsfiddle live case believe mistake upon reconsider possibly reopen issue", "d": "2/2016"}, {"body": "found total windowsettimeout srcqueuedelayjs line srccorereadyjs line probably one causing code executed srcajaxxhrjs line thx", "d": "2/2016"}, {"body": "node release code posted npm runs supported environments exactly environment running using something like jsdom see discussion release search settimeout", "d": "2/2016"}, {"body": "thanks report see use domino module provide implementation nodejs side module nt define etc breaks jquery work outside browser requires implementation browser apis jquery uses switched use taking almost browser globals global inconsistent meant someone run jquery environment nt globals provide complete implementation methods would still work bug reports see eg fix issues considered using fall back global one provided pr would add size amp complexity decided consistent take provided two choices switch implementation provides amp friends eg jsdom submit pr domino adding support apis", "d": "2/2016"}, {"body": "thanks time feedback request domino made try update code less dependent switched jsdom happy coding", "d": "2/2016"}, {"body": "jquery hides something remembers computed display called would set previous display elements forces value case pretty much case computed property value", "d": "2/2016"}, {"body": "excellent bug report test cases clear description note changing logic jquery still changes planned may check current development version beta tried use versions checked behavior fine experience problem great", "d": "2/2016"}, {"body": "thanks tried versions absolutely positioned span gets know correct value first time shown well guess bug opposite thought", "d": "2/2016"}, {"body": "need browser window amp tab run tests focused duration test case nt noticed tests flakey ci nt fail randomly except firefox even giving window focus nt always help disabled observations", "d": "2/2016"}, {"body": "wish way make things reliable think crazy edge case browser nt expect focus bouncing around inside page browser window background seeing failures browser foreground messing window tests may something need investigate", "d": "2/2016"}, {"body": "introduction integration tests fix issues also roadmap btw feel free explore provide alternative solutions", "d": "2/2016"}, {"body": "please nt promote website submitting issues jquery", "d": "2/2016"}, {"body": "jsdom problem jquery problem think need investigate bit", "d": "2/2016"}, {"body": "works browser sounds like jsdom issue reopen test case reproduce", "d": "2/2016"}, {"body": "figured worth miketaylr open ticket discuss wow jquery released years ago today pretty easy edit source point correct map file cdn concerned may trigger sort alerts people nt expect old files ever change bits", "d": "2/2016"}, {"body": "nt known bug sure look bug tracker find ticket", "d": "2/2016"}, {"body": "oh see different bug one thinking", "d": "2/2016"}, {"body": "another thing could delete discouraging use plainnamed jqueryjs jqueryminjs anyway", "d": "2/2016"}, {"body": "since verge recommending people use subresource integrity seems like editing file less less appealing idea always bothered two files version different cdns could different hashes time put map comments file true way different cdns paths mind deleting map file seems like best solution need apply one", "d": "2/2016"}, {"body": "agree deleting map file", "d": "2/2016"}, {"body": "opened cdn issue", "d": "2/2016"}, {"body": "thanks help everyone", "d": "2/2016"}, {"body": "suppose could hard code path sizzle given sizzle separate module treating path could changed nt keep nodemodules", "d": "2/2016"}, {"body": "would hardcoding path sizzle prevent users resetting something else", "d": "2/2016"}, {"body": "believe solution could simple would remove leave guy wants use sizzle appjs sizzle else use jquery selector appjs without sizzle totally modular optional", "d": "2/2016"}, {"body": "unfortunately solution wo nt work alternative selector engine gets swapped sizzle removed custom build also still hardcode path sizzle selectorsizzle", "d": "2/2016"}, {"body": "mgol answer question path sizzle could changed think would look like check", "d": "2/2016"}, {"body": "looks like reason ajaxjs potentially needs constructor one rare call related according docs must dom object even calling sizzle supported case might possible avoid pulling selector engine refactoring", "d": "2/2016"}, {"body": "turned easier thought originally thinking sizzle position could change used bower node modules given sizzle position static repo external folder think safe use path", "d": "2/2016"}, {"body": "timmywil still forcing sizzle possible make follows doubt option amd standard possible requirejs", "d": "2/2016"}, {"body": "lagden different issue plan fix specify path sizzle done sizzle continue default selector engine module swapped build time want users explicit swapping module considered dangers qsa bug fixes still apply modern browsers selector extensions fix qsa scope issue etc said still possible specify like use selectornative instead sizzle amd mode", "d": "2/2016"}, {"body": "timmywil wow much better tks", "d": "2/2016"}, {"body": "looks like duplicate let follow", "d": "2/2016"}, {"body": "works simple examples please always provide test case site run like going assume duplicate may check works nt put development version production though nt please provide complete test case wait jquery", "d": "2/2016"}, {"body": "found problem nt exists jq returned return window obj", "d": "2/2016"}, {"body": "yeah definitely fixed jquery", "d": "2/2016"}, {"body": "thanks info related sure support scenario svg support limited basically interoperability html amp class manip", "d": "2/2016"}, {"body": "example getting position svg element using position left position top works great apparently stop working chrome removes svgelementoffsetparent", "d": "2/2016"}, {"body": "yeah seems good replacement bad removing api without providing replacement chrome status dashboard erroneously says replacement really like remove new api ready see nt time back maybe suggest sth cssom would fill role would best pursue kborchers know considering chrome team plans seems pretty urgent paulirish could chime", "d": "2/2016"}, {"body": "crbug blinkdev thread would suggest someone chime bug ask philip boris jquery usecases gbcr used", "d": "2/2016"}, {"body": "posted blinkdev thread", "d": "2/2016"}, {"body": "note nt exist svg elements firefox never worth doubt whatever agcolom actually works great unless different definitions great", "d": "2/2016"}, {"body": "agcolom post minimal test case", "d": "2/2016"}, {"body": "true replacement may ask see code using deployed web another code path firefox", "d": "2/2016"}, {"body": "general find offsetparent usages jquery ui jquery mousewheel plugin relies well general usage svgspecific though", "d": "2/2016"}, {"body": "tried knock something quickly chrome firefox give different results need look bit may well code nt work great pure fluke getting correct results may go hide cave try afternoon got get ready go work meetings", "d": "2/2016"}, {"body": "nt exist svg elements firefox also nt exist ie btw interesting though judging previous discussion seems consider changing logic module try using offset properties since seems properties road removal htmlelement", "d": "2/2016"}, {"body": "since seems properties road removal htmlelement nt think ever happen would basically break current jqueries use extremely high number one would thing", "d": "2/2016"}, {"body": "nt change fact worth stop using apis considered deprecated amp legacy though", "d": "2/2016"}, {"body": "right roughly zero chance browser attempt removing offset htmlelement measure usage things deprecationremoval blink certainly used far widely", "d": "2/2016"}, {"body": "maybe nt articulate right nt mean hurry something asap measure usage things deprecationremoval blink certainly used far widely aside vendors measuring usage constructions also integrated tests popular libs tests process behaviour spec sure one removed tomorrow seems removed eventually since properties already take account new features new specs basically deprecated", "d": "2/2016"}, {"body": "think would good idea consider changing api behaviour next major things mentioned", "d": "2/2016"}, {"body": "seems removed eventually optimist unless eventually means years agree switch implementation anyway", "d": "2/2016"}, {"body": "one planning remove offset said switching away good idea anyway lies fact returns integer css pixels means often gives incorrect answers world highdpi screens subpixel text layout browser developer hat would love understand exact use cases expose better apis accomplishing", "d": "2/2016"}, {"body": "bzbarsky foolip use case follows developing tool students help learn programming draw flow chart svg graphical representation code writing everything scratch javascript output part flowchart composed various svg elements ellipse text rectangles polygons polylines statement example order line polyline represent arrow rectangle text inside rectangle today drawing end ifelse statement would check whether already arrow draw using polyline end position longest branch one closed another ifelse statement longer longer need detect nt one always case hopefully drawn line going horizontally meet branch halfway branch one could use elementfrompoint guarantee element position view hidden part div ie need scroll get everything crashes instead checked polyline positions compare position draw absolutely correct svg element return different value pixels chrome firefox chrome gives would expect ie draw line left top positions values firefox pixels however get position value another element page reference difference position looking seems consistent browsers use reference point changed longer require detect svg element position let know get new case require however may make think use cases ps future would nice leave sarcasm github comments terribly useful tends drive people away contributing open source", "d": "2/2016"}, {"body": "agcolom ok specific use case find position element page general relative element ignoring transforms moment ok since offset nt handle anyway sane way would covered getboundingclientrect transforms involved things get bit complicated apis added handle apologies perceived sarcasm nt intention meant acknowledgement fact people fact different definitions works great means depending exact situations", "d": "2/2016"}, {"body": "bzbarsky thank yes trying find whether specific element position draw imagine could common use case", "d": "2/2016"}, {"body": "agcolom absolutely correct svg element return different value pixels chrome firefox chrome gives would expect ie draw line left top positions values firefox pixels hmm return something useful firefox edge well chrome html elements nt looked jquery implements perhaps answer lies within", "d": "2/2016"}, {"body": "jquery maintainers issues heard deprecation based volume feedback compared changes past clue painful actual removal would users jquery", "d": "2/2016"}, {"body": "ok wonder getting confused jquery jquery alpha give results upload simple test case", "d": "2/2016"}, {"body": "jquery jquery may want launch live preview also interesting note difference getboundingclientrect ff chrome using jquery left right", "d": "2/2016"}, {"body": "changes likely jquery mean btw version one", "d": "2/2016"}, {"body": "fixed via width height fixed via worked pro though", "d": "2/2016"}, {"body": "scottgonzalez arschmitz afaik ui uses could present couple use cases get new appropriate api specced considering considered legacy api", "d": "2/2016"}, {"body": "uses draggable sortable rewritten scratch nt think uses persist rewrites", "d": "2/2016"}, {"body": "seems one really needs equivalent nonlegacy apis close issue nt support svg nodes exceptions since never implemented every popular browser webfacing code depend", "d": "2/2016"}, {"body": "plans patch jquery calling visible wont crash chrome quickly slimmed comments seems determination dont support offsetparent svgs regardless many people want dont want support jquery still nt error encounters elements", "d": "2/2016"}, {"body": "idontusenumbers crash even exception wo nt happen attributes removed happen using jquery older selector match svg element match svg elements ie svg elements always considered hidden jquery fixed nt need anything", "d": "2/2016"}, {"body": "break please provide detailed explanation", "d": "2/2016"}, {"body": "likely fixed master close assumption something else please provide test case reopen", "d": "2/2016"}, {"body": "sorry guess nt testing quite right evedently simply typed link jquery wrong turns nonissue thanks", "d": "2/2016"}, {"body": "make good point distribution repo general information say least would link jquery documentation could also include information common ways include library imports environments support none yet babel require node require webpack require browserify amd script tag", "d": "2/2016"}, {"body": "would love contribute code would increase perf reduce size also want reach us irc freenode jquerydev channel test jquery performance mainly use jsperf sometimes manual profiling talking years create reliable benchmark suite graphs every commit would show us performance changed every commit like plato perf second way integrate benchs testsuite cap like project third create lodashlike bench comparing previous jquery versions like also sizzle also requires manual execution would much cooler execute saucelabs browserstack core something similar tests much outdated removed", "d": "2/2016"}, {"body": "also note comparing size gzipped minified file care smaller compression nt necessarily smaller compression generally favor size performance except particularly hot paths difference exceptionally stark", "d": "2/2016"}, {"body": "markelog trying reduce size increase performance asking performance tests decrease however realized test suite completely different knew need first understand works even dream adding anything like graphics time reliable benchmark would really good sometimes difficult opinionated optimize example nt know size important performance take account checking gzipped see know literal repetitions take almost space gzip unique character strings like error messages take lot times result smaller bigger gzipped file mistery tips really thankful", "d": "2/2016"}, {"body": "always good new people reviewing rethinking code nt comprehensive performance tests would love lot work create far optimize guess usage apis since nt reliable way gather actual usage would guess adding classes function probably rare case would unusual performance bottleneck real code one thing keep mind benchmarks jsperf manipulating dom structures time takes execute code may really small compared potential force layout rendering engine see results areas like showhide dom reading one batch followed dom changing finally keep mind support really broad set browsers support modern apis nt want android throwing error dying although may willing let less right cases long nt blow able test browsers browserstack saucelabs", "d": "2/2016"}, {"body": "however realized test suite completely different knew need first understand works even dream adding anything like graphics time graphics stuff would ideal result relatively hard time consuming task point necessary shoot stars would tool integrated ci build process either would compare numbers ones checking cap would already awesome start project integrate perf tests testsuite case whereas already automatically run tests supported browsers paradigm might fit nicely optimize addclass test addclass function return test example like dmethvin said cause reflow browsers process expensive performance wise comparing hottest path method perf tests would important like method like newest beta improved animation cases huge win echoing statement like show example pull heavily improve perf increase size expensive method always used event module makes sense accept pull since would reflect events change would indeed improve perf hand improve rps something increasing size probably would nt enough counter example remember time improved traversing methods nt landed added bytes something like traverse methods already fast enough following experience would provide pull would worsen perf traversing methods decreasing size consider time probably would nt accept pull would decrease perf event module improving size", "d": "2/2016"}, {"body": "thank willingness help us improve jquery new contributors always welcome would appreciate fresh eyes codebase please feel free look code submit many pull requests deem appropriate evaluate criteria always used based size performance readability closing ticket nt want reduce size use roadmap track issues definite end rewriting internal speed framework however wo nt adding one roadmap reducing size central everything nt think need bullet point remind us ps think markelog meant pull", "d": "2/2016"}, {"body": "ps think markelog meant pull oh right sorry fixed comment", "d": "2/2016"}, {"body": "evaluate criteria always used based size performance readability btw think would makes sense document", "d": "2/2016"}, {"body": "think would makes sense document sure needed pretty standard judge pull requests based things besides sometimes x factor vote", "d": "2/2016"}, {"body": "mm okay every project different like nowadays emberangular people example use transpilers friendly size whereas consider size priority comments like nt know size important performance turned couple times", "d": "2/2016"}, {"body": "nt know size important performance certainly statement would want document depends right case performance cost great size becomes less important performance performance cost great percentage maybe factors like much performance cost impact real use cases also subjective subject opinions", "d": "2/2016"}, {"body": "nt general position though think generally favor size performance impression", "d": "2/2016"}, {"body": "anyway guess fruitless discussion nt feel strongly", "d": "2/2016"}, {"body": "include dev dependency track build command usage remove causes problems", "d": "2/2016"}, {"body": "thanks report nt aware plans nt officially support svg apis recently switched see land jquery test beta mostly avoid rounding integers good know advantages", "d": "2/2016"}, {"body": "thank quick reply take look", "d": "2/2016"}, {"body": "also issue branch filter applied svg element", "d": "2/2016"}, {"body": "jeremywadsack harmless properties get removed method automatically start using check", "d": "2/2016"}, {"body": "ca nt repro fail nt including compat mode via browserstack thing saucelabs mgol could check correct browser spawned think someone verify absence failure real thing would need disable test", "d": "2/2016"}, {"body": "markelog nt fail browserstack ie version might related run iframe rather exclude test investigate real reason failure easy mask real bug way edit joined swarm manually browserstack fails nt run outside testswarm", "d": "2/2016"}, {"body": "good catch mgol check", "d": "2/2016"}, {"body": "definitely interested improvements although far enough away nt think say browsers environments support remember people use jquery places like chromefirefox plugins node jsdom well ideas might go roadmap", "d": "2/2016"}, {"body": "fine sufficiently dry nightmare one side spectre fine nightmare problem highly related tests without sufficient abstraction issue related bit different kind say problem highly related tests without sufficient abstraction guilty recently tests question defense nt yet upgraded version qunit encourages actually could long time new way convenientexplicit seems nt provide much existing functionality clear creating ticket pursuing idea blaming anyone anything tests one oldest js tests seems came time update ideals", "d": "2/2016"}, {"body": "seems general guidance ticket rather concrete task timmywil consistently moving things roadmap keep zombie tickets open long", "d": "2/2016"}, {"body": "seem like roadmap item since nonspecific", "d": "2/2016"}, {"body": "said like improve showhide tests approach would acceptable consider writing tests like would like provide example new tests could structurized discuss pull approach acceptable land new show hide tests maybe add note docs close ticket close ticket nevertheless think zombie ticket need find time ticket", "d": "2/2016"}, {"body": "waited adding roadmap like see example signing across tests", "d": "2/2016"}, {"body": "even though tests nt matter element taken work understand train thought commit lands master branch claiming correct selections would propose gradually since could lot work action one commit would preferable yeah hard example take module tonight agree closing indistinguishable wontfix point avoid reoccurrence looking objective characterization well always comment tests fix lot already even counting aforementioned commits think longer write fragile tests", "d": "2/2016"}, {"body": "hi decided hijack limiting test suit operations module markelog immediately hit bump mentions attributesjs one candidates explicit limiting necesserily first one look test see element used obvious element ie nt need explicitely filtered becomes obvious looking inside", "d": "2/2016"}, {"body": "ticket operation safety appropriate leave selections like problematic cases almost always start element selectors since likely inadvertently match content beyond control eg qunit", "d": "2/2016"}, {"body": "ok ignored selections use id onthefly created markup explicit wrap element like xml element context like left unlikely possible select outside inheritance used lines mentioned question want fixed inheritance context selection personally understand thingy defined", "d": "2/2016"}, {"body": "ok ignored selections use id onthefly created markup explicit wrap element like xml element context like explicit wraps necessarily good begins section code manipulates attributes rather content dynamically generated bad form purview issue selections would question want fixed inheritance context selection straightforward means would reserved exceptional cases selection broader required proper testing nt attributesjs personally understand thingy defined fixed copy would better named independent one test see testindexhtml testjqueryjs used whenever test needs rely jquery functionality tested eg manipulation tests could succeed even jquery flaws selection doubt ever get level separation honestly mostly academic issue core functionality jquery stable rarely see problems relying system test however distasteful practice", "d": "2/2016"}, {"body": "another offender child adjacent selector test running whole test suite chrome almost always fails p gt gt assertion", "d": "2/2016"}, {"body": "heh actually first identified offender", "d": "2/2016"}, {"body": "pr", "d": "2/2016"}, {"body": "concision decision removed tests completely unrelated note complete absence", "d": "2/2016"}, {"body": "completely unrelated note complete absence toggle tests done support show hide logic toggle logic showing hiding something equivalent show hide toggle basically choosing call show hide also incapsulated logic choice ps sorry verbosity", "d": "2/2016"}, {"body": "precisely point whether call different effects ideally would coincide always equivalent always equivalent", "d": "2/2016"}, {"body": "deciding whether call yes exactly logic deciding logic one reflect obvious relation think discrepancy ideally nt think ideally correct word seems logically point", "d": "2/2016"}, {"body": "nt think ideally correct word seems logically point agree case past", "d": "2/2016"}, {"body": "agree case past would count bug", "d": "2/2016"}, {"body": "seem like arguing fix", "d": "2/2016"}, {"body": "arguing keeping old logic whereas fix bug could additional old behaviour argument replacement position comes two statements use exact condition determining element hidden think given truth previous behaviour line first condition battle tested arguments change", "d": "2/2016"}, {"body": "use exact condition determining element hidden think given truth never need determine element hidden needs guess setting nonempty inline display necessary sufficient give element layout distinction significant determining element hidden matters methods might need show already know priori previous behaviour line first condition battle tested arguments change repeating claim nt make true arguments change principally eagerness permanently unnecessarily set inline display values derived circumstantial style cascades already demonstrated inconsistency", "d": "2/2016"}, {"body": "show hide never need determine element hidden simple true nt understand trying say way determining element hidden repeating claim nt make true repeated seems confused position summarized arguments change principally eagerness permanently unnecessarily set inline display values derived circumstantial style cascades already demonstrated inconsistency still sets inline display cases still wo nt go away preferred end result improve performance asked us one asked us change logic one found unexpected confusing yes case responsive stylesheets said still words principally eagerness permanently unnecessarily set inline display values derived circumstantial style cascades sufficient argument stand position leave perf part improvement hook new logic contradict change logic back would nt need fix ticket would need consider fixing inconsistency showed", "d": "2/2016"}, {"body": "show needs guess setting nonempty inline display necessary sufficient give element layout distinction significant determining element hidden matters methods might need show already know priori call significant say needs guess say nt matter whatever way determining stands anyhow", "d": "2/2016"}, {"body": "fadeto btw", "d": "2/2016"}, {"body": "summarize position completely ignore hiddenness elements except deciding try forcing layout specific goal ie desirable empty inline display computed possible nondisconnected etc need know elements hidden affects behavior use logic determine believe assume disconnected elements hidden ticket determine", "d": "2/2016"}, {"body": "hide completely ignore hiddenness elements logic determination nothing explore show toggle fadeto animate etc need believe assume disconnected elements hidden", "d": "2/2016"}, {"body": "come agreement reason ask blocker also ca nt even grasp warn shim old behavior migrate without list behavioral changes also need docs", "d": "2/2016"}, {"body": "yeah need submit pull request details bit swamp lately one week sorry dave", "d": "2/2016"}, {"body": "note also affects google chrome ubuntu way ie tag ceefour", "d": "2/2016"}, {"body": "antonnz problem bug fixed jquery please try amp report new issue still broken let clutter one", "d": "2/2016"}, {"body": "work fine see", "d": "2/2016"}, {"body": "pr let later ca nt move stuff excluded slim build", "d": "2/2016"}, {"body": "later ca nt move stuff excluded slim build nt believe true semver dictates deprecation minor version bump case might mean slim build volatile full build arguably makes sense since explicitly excluding functionality think would perfectly acceptable eg deprecate jqueryisnumeric jquery resulting immediate removal slim build alternatively could include deprecated functionality probably makes sense adhering semver said course fine deprecating", "d": "2/2016"}, {"body": "getting exact error jquery full stack last thing within code happens jquery kind like either browser b extension c piece code running something set textcontent thats bit causing see anything suggesting jquery think likely extension breaking dom seeing problem chrome windowsmac browser see", "d": "2/2016"}, {"body": "backported amp changed milestone used say", "d": "2/2016"}, {"body": "tried getting error version please help error object readystate responsetext undefined status statustext typeerror read property open undefined", "d": "2/2016"}, {"body": "awaiting sizzle update label fixed sizzle btw need keep ticket open considering nt know get", "d": "2/2016"}, {"body": "awaiting sizzle update nt mean fixed sizzle means requires fix sizzle however agree might well close see solution right rely sizzle address performance issues", "d": "2/2016"}, {"body": "fwiw fixed sizzle agree keeping closed anyway", "d": "2/2016"}, {"body": "oste sure create local html file contents provided works fine chrome tried multiple times", "d": "2/2016"}, {"body": "per meeting decided pseudos", "d": "2/2016"}, {"body": "reported chrome deprecating amp svg elements nt officially support good know buy fractional data switching", "d": "2/2016"}, {"body": "changes provoked new issues meeting decided revert offending commit three branches tackle issue", "d": "2/2016"}, {"body": "changing sounds like breaking change might need wait added needs review label nt forget doubt mine", "d": "2/2016"}, {"body": "changing sounds like breaking change might need wait", "d": "2/2016"}, {"body": "hmm ok maybe mean surely break code may considered bug fix due description api wait fixes edge cases may break code least minor release though set milestone nt forget reschedule later", "d": "2/2016"}, {"body": "clear exactly going whether original report even bug could definitely use better unit tests somebody knew right answers smilecat", "d": "2/2016"}, {"body": "guess jsbin output clear enought", "d": "2/2016"}, {"body": "run across old nonjquery bug simple", "d": "2/2016"}, {"body": "right already using inside tag", "d": "2/2016"}]