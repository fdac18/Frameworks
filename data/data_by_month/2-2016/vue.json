[{"title": "todomvc example nt work specified vue packagejson", "body": "specified version throws errors right version would vue however went unnoticed vue source referred indexhtml distvuejs instead nodemodulesvuedistvueminjs line", "num": "2414", "d": "2/2016"}, {"title": "vm dispatch stop propagation mixin", "body": "vuejs guide says default dispatch stop propagating caught first time trouble example html javascript var rtr data function return rt z created function var self settimeout function consolelog start dispatch self self dispatch chg mathrandom vuecomponent navc template test mixins rtr events chg function val consolelog val caught navc var app new vue el app mixins rtr events chg function val consolelog val caught main app see jsfiddle understand chg event fired twice navc main app see two console logs result also tried adding navc event capture difference someone explain nt right use dispatch actual bug", "num": "2412", "d": "2/2016"}, {"title": "allow passing null undefined typed none required prop", "body": "prop declared type validation validation fail passing either null undefined value think type validation occur none required props actual value null undefined passed believe similar issue jsbin demonstrating", "num": "2411", "d": "2/2016"}, {"title": "support collection data types vfor", "body": "situations plain object nt best choise tried render object seems support currently post created help thread forum hope provide syntax iterate data types like example render way html key val", "num": "2410", "d": "2/2016"}, {"title": "vueextend constructor chain", "body": "first thanks sharing really nice powerful tool tried make use typescript classes new components especially gain static testing ts played seems quite ok except one thing constructor chain javascript class testcomp extends vue n constructor consolelog never end n undefined data return test var testcompextend template test eyes vue decorator addition moves functions data around beside point defining new components order make work normal class need able call constructor classes done applied constructor call anymore constructor vue class let normal constructor chain handle looked vueextend seems like super class awareness far see end forcing single call vueinit function nothing happens trick make control constructor behavior extended class todo list", "num": "2409", "d": "2/2016"}, {"title": "proposal vshow add modifier", "body": "first thanks amazing work vue powerful elegant time pretty neat nice add visible modifier suitable name directive indeed default use css property hide element dom unlike element hidden still affecting layout eg html hello html hi", "num": "2408", "d": "2/2016"}, {"title": "boolean attributes draggable truefalseauto", "body": "vuejs version referring upgrading broke drag drop according true valid value attribute draggable steps reproduce using working fine changes rendered renders wrong working workaround renders close issue works designed wanted leave least workaround issues", "num": "2407", "d": "2/2016"}, {"title": "need outerhtml polyfill svgelements edge ie", "body": "fragmentfactory would break working svg elements tries cache element ie msedge due lack support code ms already stopped adding feature version ie possible solution might polyfill sample code borrowed", "num": "2406", "d": "2/2016"}, {"title": "acceptstatement true \u4e0e von directive \u7684 handler \u53c2\u6570", "body": "vuejs version \u95ee\u9898 \u6587\u6863\u91cc\u6709\u63d0\u5230\u8bbe\u7f6e\u4e86 \u53c2\u6570\u662f \u5728 von directive \u4e2d\u68c0\u67e5\u4e86 \u662f\u5426\u4e3a", "num": "2405", "d": "2/2016"}, {"title": "issue ie template vif table row leads fragment instance", "body": "vuejs version reproduction link steps reproduce add element table row check ie expected fragment instance correct behaviour actually happening internet explorer element present inside template table row vue gives warning fragment instance template vif nt work expected latest chrome firefox works fine time works fine placed inside tag example", "num": "2404", "d": "2/2016"}, {"title": "tag makes commponent fragment instance", "body": "child parent output child use every thing ok child parent output", "num": "2403", "d": "2/2016"}, {"title": "filterby", "body": "hi would like request key option filterby filter currently possible filter positive values negative would require custom filter ex list products prices free set list commercial free products could look like new option could add making code much easier read understand thanks considering", "num": "2402", "d": "2/2016"}, {"title": "problem vref vfor", "body": "vuejs version reproduction link steps reproduce expected actually happening use vref vfor ca nt find array object want refs parent feature url says vref used together vfor ref get array object containing gt child components mirroring data source use wrongly", "num": "2401", "d": "2/2016"}, {"title": "debounced model updated", "body": "vuejs version reproduction link steps reproduce focus input available within window type single letter immediately hit enter clear text output type single letter wait two seconds hit enter expected alert show contents reading na alert show contents reading actually happening model get set form submitted note duplicate issue commented closed nt get feedback nt know anyone notified comments following close issue", "num": "2400", "d": "2/2016"}, {"title": "feature request escape dot path", "body": "fiddle super simple situation set deep nested objects coming server object keys dots code became verbose first create key via assign value using would nice could escape dot object", "num": "2399", "d": "2/2016"}, {"title": "els nt available thisvm directives vfor", "body": "vuejs version reproduction link steps reproduce view console see works expected expected work actually happening returning undefined", "num": "2398", "d": "2/2016"}, {"title": "initial prop value child component", "body": "vuejs version reproduction link steps reproduce see console selfexplanatory logs expected parent component data property changed route hook new value expected child component passed actually happening child component old value initialization please let know anything clear thank", "num": "2397", "d": "2/2016"}, {"title": "svg element vshow transition chrome problem", "body": "seems happens using css transition svg elements chrome happens firefox everything working fine may affected chrome version os x vuejs version reproduction link steps reproduce use fade css transition svg element expected element fades actually happening element fades fade happens element hiding update firefox working periodically sometimes strange behavior also detected", "num": "2396", "d": "2/2016"}, {"title": "better watch structure", "body": "hi searched around nt find far hope duplicate playing around watcher vuejs found small ergonomic issue want watch property object way logically could work instead like something consider personally like way showed first example better thank", "num": "2395", "d": "2/2016"}, {"title": "vue tries observe enumerable nonconfigurable properties", "body": "vuejs version reproduction link check javascript console error steps reproduce add nonconfigurable enumerable property component dataprops expected vuejs redefining properties configurable virtue nonconfigurable change anyway observing pointless also throws error bug currently makes impossible add threejs objects vue components without causing error however current workaround set triggers checks ensure nonconfigurable properties redefined actually happening", "num": "2393", "d": "2/2016"}, {"title": "", "body": "", "num": "2392", "d": "2/2016"}, {"title": "build error new new syntax event", "body": "use webpack vue project use uglifyjsplugin webpack make build errorwhen debug new syntax event use tap make build faildi use webpack gulp update webpack latest", "num": "2391", "d": "2/2016"}, {"title": "click event firing slot child component", "body": "thought post first case encountering bug whether quick feature implement vuejs easily move forum needed trying add click handler child component using method nt seem firing target clicked see sure seen people use similar thing could wrong guidance whether issue would awesome thanks", "num": "2390", "d": "2/2016"}, {"title": "twoway filter updating fly", "body": "hello evan twoway filter works change possibility make work fly typing keypress sure way implement functionality via part plugins like use pure vue let say could property attribute enable updating twoway filter fly would convenient guess vue enough power docs code works fine input blur like attribute please pay time one thank", "num": "2388", "d": "2/2016"}, {"title": "output dynamic tag", "body": "like output dynamic scripttag google structured data output script tag works seems dynamic see source output also tried nt work either thanks", "num": "2387", "d": "2/2016"}, {"title": "number property disappears render", "body": "trying force input numbers think meant add property input disappears rendered replicated js fiddle using incorrectly", "num": "2386", "d": "2/2016"}, {"title": "custom directive deep nt work add key json object", "body": "want custom directive json object add new key json object directive nt work example props node attr directives updattr deep true update function something add key nt work nodeattr test clone new obj works var attr jqueryextend true nodeattr attr test nodeattr attr", "num": "2385", "d": "2/2016"}, {"title": "observerwalk\u4e2d\u662f\u5426\u9057\u6f0f\u4e86\u8fc7\u6ee4\u5173\u952e\u5b57", "body": "vuejs version reproduction link observerwalk steps reproduce expected \u6211\u8bb0\u5f97\u5728\u4ee5\u524d\u7684\u7248\u672c\u91cc\u8fd9\u91cc\u662f\u8fc7\u6ee4\u4e86\u4ee5 actually happening", "num": "2384", "d": "2/2016"}, {"title": "watch component triggered", "body": "vuejs version reproduction link steps reproduce run expected actually happening find dynamicbindvalue nt trigger watch component think acceptable", "num": "2383", "d": "2/2016"}, {"title": "feature vshow modifier toggling visibility", "body": "would nice able html toggle use case element transition element transitions prefer space took collapse", "num": "2382", "d": "2/2016"}, {"title": "broadcast nt trigger component event", "body": "huge issue maybe really good reason behaviour broadcast nt get handled component invokes dispatch means global events like top level app broadcasting event app needs act well children components invoke event manually well order get app act would nicer component would process broadcast like dispatch vuejs version reproduction link steps reproduce na expected component catch broadcast similar component catches dispatch actually happening component ignores broadcast needs triggered manually", "num": "2381", "d": "2/2016"}, {"title": "new event handler modifiers self amp capture nt work chrome", "body": "vuejs version reproduction link chrome windows results use von click everything find use modifier self capture event nt emit update test latest chrome ok difference chrome", "num": "2380", "d": "2/2016"}, {"title": "vuejs pjax", "body": "using vue instances multiple pages wanted start using pjax well pjax pretty awesome changed document readys document ready pjax end indeed instantiates vue instance modelbindings working event listeners set working buttons von click nt work keydownenter nt get triggered either html element bit higher dom html style height backgroundimage url filepublicurl gt filename private public javascript javascript document ready pjax end function uploadvue new vue el uploadtool duplicate could nt reopen", "num": "2379", "d": "2/2016"}, {"title": "interpolate content inside elementdirective", "body": "hello trying implement resolves classes based props values complicated logic result nt want use component heavy simple thing like inline directive nt look sexy imo either registered elementdirective works well unfortunately interpolated default made workaround using parse using watch parsed tokens interpolate template every time tokens changed way achieve goal chance became supported inside directive future maybe flag would nice feature elementdirective", "num": "2378", "d": "2/2016"}, {"title": "bind element css value outside control component data", "body": "course writing datagrid component vue semantic ui found wishing ability bind example jquery el parent css display dataparentvisible could watch parentvisible function new old stuff parent becomes visible clicking tab live clear talking css properties another entity semantic ui case controlling possible today feasible implement", "num": "2377", "d": "2/2016"}, {"title": "vuejs pjax", "body": "using vue instances multiple pages wanted start using pjax well pjax pretty awesome changed indeed instantiates vue instance modelbindings working event listeners set working buttons nt work nt get triggered either", "num": "2375", "d": "2/2016"}, {"title": "keepalive option routermap please", "body": "afaik experimental keepalive option routerview currently effectively allornothing attribute limited use us see example routes quite key routes manually saved loaded tofrom localstorage could specify keepalive options object route would really good thing happen imo", "num": "2374", "d": "2/2016"}, {"title": "bundles loader feature request", "body": "hi working vue loader inspired requirejs maybe could use idea link github repo try create vuebundle loader bundles partial html files goal bundle file contain css template routes viewmodel work progress production ready moment br rune", "num": "2373", "d": "2/2016"}, {"title": "use standard js classes instead custom syntax", "body": "hello first want thank providing great library creating projects vue came across idea could possible allow using classes place standard vue component syntax think already nice standard classes using would ideal code would become less frameworkdependent readable esp people never using vue believe also less errorprone versalite could look like way worked example knockoutjs werent making way declaring component properties methods js nested objects used standaard javascript class syntax instead managed make way using hacky module translates class structure readable vue great buildin functionality proposal tune component builder vue accepts js objects vue declarations like props methods etc backwards compatibility could work way object passed vuecomponent works using original behaviour b function passed vuecomponent treats class constructor uses new syntax could nice modular simplier love use import somecomponentclass componentssomecomponentjs vuecomponent somecomponent somecomponentclass return vue file via vuelodaervueify", "num": "2371", "d": "2/2016"}, {"title": "click event cleared another value changed", "body": "vue component looks like vue dropdownselect dropdownselecttermwrapper tagit vfor checked tagitlabel ilabel ifafaclose click delitem x inputdropdownselectterm blur isshowfalse focus isshowtrue uldropdownselectdatalist vshow isshow lidropdownselectdataitem vfor data click additem dlabel export default props value data data return checked isshow true methods additem item thischeckedindexof item return thischeckedpush item thisisshow false delitem item thischecked remove item dropdownselect border solid ccc amp termwrapper padding amp datalist position absolute li liststyletype none amp dataitem padding cursor pointer amp hover backgroundcolor efefef invoked like vue widgets test value value data cities import test componentstest const cities label \u5317\u4eac value label \u4e0a\u6d77 value export default components test data return value cities cities changed click event would cleared strange remove bound another loop would fixed tried upgrading vue version still got issue", "num": "2370", "d": "2/2016"}, {"title": "vue data binding work tbody binding dom id", "body": "vuejs version reproduction link jsfiddle steps reproduce works fine fails expected documented actually happening see jsfiddle figured way working around sure usage correct thx", "num": "2369", "d": "2/2016"}, {"title": "routerview used transition affect subassembly transtion animation execution microchannel mobile terminals", "body": "helloyoudada use routerview using transition animation transtion movie block subassembly executed animation caton able answer question code like child components", "num": "2368", "d": "2/2016"}, {"title": "component events", "body": "eg attach root dom internal component event system like disadvantages approach confusing opinion dom event may conflict component event called twice want avoid struggle naming event suggest providing way bind component events treat events component component events need dom events bind parent dom", "num": "2367", "d": "2/2016"}, {"title": "vbind data attribute", "body": "working bug", "num": "2365", "d": "2/2016"}, {"title": "template string", "body": "vuejs nt support template string example", "num": "2364", "d": "2/2016"}, {"title": "index vfor changed everytime filterby", "body": "need something vfor block onclick something need transfer real index data use data ajax post index changed filterby changed orderby \u6211\u9700\u8981\u5728vfor\u7684\u5185\u5bb9\u4e2d\u4f7f\u7528 index\u4f5c\u4e3a\u4e0b\u6807\u5728\u70b9\u51fb\u4e8b\u4ef6\u4e2d\u7684\u53c2\u6570 \u4ece\u800c\u76f4\u63a5\u5f15\u7528\u5230\u539f\u59cb\u6570\u636e\u4e2d\u7684\u503c\u7528\u4e8eajax post \u4f46\u662f\u7531\u4e8efilterby \u548corderby\u7684\u4f5c\u7528 \u6211\u5728vfor\u4e2d\u6ca1\u6709\u4efb\u4f55\u529e\u6cd5\u62ff\u5230\u8be5\u6761\u76ee\u7684\u539f\u59cb\u6570\u636e\u4e0b\u6807 \u76ee\u524d\u53ea\u80fd\u628a\u539f\u59cbid\u5b58\u5728\u5185\u5bb9\u5b57\u6bb5\u4e2d \u7136\u540e\u7528\u904d\u5386\u6570\u7ec4\u627e\u5230\u5bf9\u5e94id\u7684\u6570\u636e\u6765\u63d0\u4ea4\u7684\u65b9\u6cd5\u5b9e\u73b0\u9700\u6c42 \u8fd9\u6837\u65e0\u7591\u662f\u4f4e\u6548\u7684 \u5efa\u8bae\u589e\u52a0\u4e00\u4e2a originalindex\u4e4b\u7c7b\u7684\u53d8\u91cf \u7528\u4e8e\u6807\u8bb0\u6570\u636e\u7684\u539f\u59cb\u5728\u6570\u7ec4\u4e2d\u7684index", "num": "2363", "d": "2/2016"}, {"title": "collection api vuejs vfor", "body": "first vfor powerful feel string based api limiting runtime malleable extensible many additional data features paging stopstart lazy loading data events would ideally exposed listcollection api today example rather refining collections template would better create collection api within viewmodel template creates list returns chainable make viewmodel creation simpler track features filter features limit features order features template malleable runtime remove filters add filter results population gt clear limit set limit also done go given chainable api apis vue extensible add new filters collection api initially limited fully expose existing list api ability add extensions existing internal data api exposed would possible add features like stop start dom updating possible could build lazy loading many data manipulation layers vue without exhausting existing string vfor api feel gives vue foundation larger data manipulation api cross line framework territory respectfully ted", "num": "2362", "d": "2/2016"}, {"title": "transitionend recognize multiple transitions", "body": "hi sure purpose best wishes ben", "num": "2355", "d": "2/2016"}, {"title": "preventdefault called von handler", "body": "onjs specific reason case ca nt check handler prevented somewhere else already", "num": "2354", "d": "2/2016"}, {"title": "\u600e\u4e48\u6ca1\u6709\u7c7b\u4f3cvelseif\u7684\u6307\u4ee4", "body": "", "num": "2353", "d": "2/2016"}, {"title": "\u5982\u4f55\u901a\u8fc7vbind", "body": "style background url listcover \u65e0\u6cd5\u6b63\u786e\u4fbf\u5229\u51fa\u7ed3\u679c", "num": "2352", "d": "2/2016"}, {"title": "\u5c24\u5927 \u5f88\u559c\u6b22\u60a8\u7684vue \u4f46\u662fwebpack\u7528\u7684\u4e0d\u987a\u624b", "body": "\u7528\u6587\u4ef6\u5939\u5206\u5272\u7ec4\u4ef6\u7684\u5f62\u5f0f\u5982\u4e0b components app appcss apphtml appjs card", "num": "2351", "d": "2/2016"}, {"title": "vueify gulp", "body": "hey started learning vue loving far however stumbled upon issue might suitable forum type query excuse remove comment trying get vueify work browserify gulp ca nt life understand wrong works fine without vueify try require vue file script file source directory outputted completely empty comment require line works attach link code anyone got time look would super helpful also tried gulpbrowserify regular browserify gave result thanks advance great job vue truly great framework much easier get react angular guessing problem gulpfilejs since nt know wrong ca nt say sure", "num": "2350", "d": "2/2016"}, {"title": "allow loading vue conflict mode", "body": "similar jquery", "num": "2349", "d": "2/2016"}, {"title": "slot vif false click wrong bindings", "body": "came across strange bug today html js gives fiddle happy new year way", "num": "2348", "d": "2/2016"}, {"title": "error evaluating expression vif vfor", "body": "slotname wrestlerteam okay wrestlerteam throws warning error evaluating expression wrestlerteam initial wrestlerteam shown word okay second wrestlerteam throws warning expected behavior", "num": "2347", "d": "2/2016"}, {"title": "disableable unknown custom element warn", "body": "better components detecting webcomponents logs look really nasty", "num": "2345", "d": "2/2016"}, {"title": "passing function custom directive", "body": "hi nt know done way pass component function custom directive vuedirective custom params function something like defined oncompleted function component", "num": "2344", "d": "2/2016"}, {"title": "else statement vfor directive", "body": "first huge thanks evan vue great point developing app uses many lists list often filtered user input switching vue used plain django templates relied heavily empty tag unfortunately directive vue core opinion would incredibly awesome handy able write productid productname products matching query ever thought implementing opinion", "num": "2343", "d": "2/2016"}, {"title": "data adaptor support magicfalse", "body": "hi working multiple products using vuejs openlayers cesium knows else future application need share data vue map engines different libraries different observable models implementation written observablemodel abstarction synchronized vue openlayers cesium encountered performance issue related generate much", "num": "2342", "d": "2/2016"}, {"title": "twoway filter fly", "body": "first really love vuejs one twoway filter model updating fly mean input blur like keypress many thanks advance help", "num": "2341", "d": "2/2016"}, {"title": "props default method anything", "body": "found property case type object doesnt execute default method taken component html item width padding itembody width itemtitle import marked libsmarked export default props item type object default return title please select item left view details body hello filters marked marked please note already tried old way calling anonymous function rule babel bad day see called call parent template like filled though event component looks like html item margin padding backgroundcolor fff minheight item hover cursor pointer showing x items itemtitle itembody export default data return items title nice title body body indeed title nice title body body indeed methods fireselecteditem index dispatch detailitem thisitems index result expected would use function property initial load instead whole page stays blank although webpack says bundle valid vue devtools noticed says empty component piece puzzle missing could somebody kind enlighten way worked around used method component first object array version vue using hope makes sense tried jsfiddle got frustrated", "num": "2340", "d": "2/2016"}, {"title": "standalone components need reliable method get main vue object", "body": "currently using within component get using nt work would work nt really want obvious reasons smile maybe refering main vue object", "num": "2339", "d": "2/2016"}, {"title": "leave animation randomly makes leaving element flicker", "body": "keyword randomly transition code cleanup phase leaving transition p function thisleft true thiscancel thispendingjscb null thisop removeclass thisel thisleaveclass thiscallhook afterleave thiscb thiscb thisop null flicker randomly experiencing element returning normal state leave class removed element removed dom moving removeclass thisel next tick seems resolve flickering", "num": "2338", "d": "2/2016"}, {"title": "allow component prop type array accepted types", "body": "minute prop types customnative constructors would helpful type could array customnative constructors passed prop value matches functions would deemed valid example prop name accept either type", "num": "2337", "d": "2/2016"}, {"title": "named nested slot working", "body": "jade main div slot somename slot name somename wrongplace slot rightplace slot name somename wrongplace slot output", "num": "2312", "d": "2/2016"}, {"title": "prevent running watcher callback initializing vue", "body": "prevent running watcher callback initialzing vue nt trick", "num": "2311", "d": "2/2016"}, {"title": "vue turbolinks", "body": "hi always set one root new vue add components views use component needed time instance gulpjs build tooling javascript appjs javascript new vue el body data store data return store store ready thisstorerouter broadcast applicationready components specialtypebuilder require componentsspecialtypesspecialtypebuilder fieldgroupbuilder require componentsfieldgroupsfieldgroupbuilder html extends layoutsapp question view loaded turbolinks get working experiences point component nt initiated", "num": "2310", "d": "2/2016"}, {"title": "watch fired", "body": "following scenario following code problem alert occures first time input field modified far tell seems occur twoway binding target uses variable inspecting vue data see values keep updating even though watch function nt invoked using method proposed issue already vmodel form fieldname", "num": "2309", "d": "2/2016"}, {"title": "html case sensitivity workaround", "body": "problem know html case insensitive gets parsed led caveat vuejs use refer prop declared javascript bites beginners quite often addition also need apply mapping custom components eg define component js import mycomponent mycomponent export default components mycomponent shorhand must use template instead annoying part vuejs relies browser preparse templates time vuejs gets compile case information already lost idea adjust matching logic things would work example making possible addition eliminating camelcase vs kebabcase inconsistency code practical reasons would prefer pascalcasecamelcase components props props need referenced templates javascript properties hyphens makes awkward vs import another component variable name kebab case eg simply valid variable name object literal shorthand capitalized component names stand vs regular elements making clearer tags custom components tags technical details underlying implementation process props component options normalize lowercase way simply become internal matching process still use desired case app code fact users nt even need know internals potential concerns backwards compatibility lowercase conversion done alongside current kebabcase conversion syntax coexist nothing break treated thing template however nt make sense two props two components component differentiated case easily detect warn usage apply rule custom events well example basically means event names become caseinsensitive bigger implication props component names affects event system usage pure javascript make sense normalize event names lowercase seems rare two events differentiated case eg app different things want get feedback", "num": "2308", "d": "2/2016"}, {"title": "named slots lose classes", "body": "might intentional never mentioned docs use case repro component defines layout centering content defines width particular use case solved using instead think would better named slots followed rules normal instances vs fragment instances ie content named slot normal instance slot attributes including styles classes directives etc merged onto instance root open discussion", "num": "2306", "d": "2/2016"}, {"title": "activate\u94a9\u5b50\u5728mixin\u7684\u65f6\u5019\u4e0d\u4f1a\u6b63\u786e\u6267\u884c", "body": "document button var mixin activate function done consolelog hook activate done var vue new vue el body data currentview components mixins mixin template lt gt lt gt activate function done consolelog activate done mixins mixin template lt gt lt gt activate function done consolelog activate done methods togglecomp function thiscurrentview thiscurrentview vueissue", "num": "2305", "d": "2/2016"}, {"title": "update documentation compare knockout", "body": "seems like great library bringing lot reactive programmers different backgrounds together intro writings nt find mention knockoutjs seems similar think paragraph vue compares knockout would useful", "num": "2301", "d": "2/2016"}, {"title": "currency filter shows negative numbers incorrectly", "body": "hey thanks awesome work vuejs according answer currency filter shows negative numbers incorrectly reproduction", "num": "2300", "d": "2/2016"}, {"title": "transition loops never ends randomly", "body": "hello stumbled upon weird problem vuejs css transitions directly tied vshow directive toggle variable controls vshow sometimes play transition animation wont set display none end animation html template looks like buggy result stalls state permamently please note loadingscreen loadingbar vshow loading apparently one set display none animation finishes one stays leave state infinitely bug occurs randomly sometimes works correctly sometimes hangs sure whats problem something wrong", "num": "2299", "d": "2/2016"}, {"title": "\u5728\u7ec4\u4ef6\u5185\u4f7f\u7528checkbox\u7ed1\u5b9a\u591a\u4e2a\u52fe\u9009\u6846\u88ab\u5f53\u4f5c\u5355\u4e2a\u52fe\u9009\u6846\u5904\u7406", "body": "html \u7528\u6237\u7ec4 \u7cfb\u7edf\u7ba1\u7406\u5458\u7ec4 \u7ec4\u4ef6\u5916\u4f7f\u7528checkbox json \u7ec4\u4ef6\u5916\u4f7f\u7528input \u7528\u6237\u7ec4 \u7cfb\u7edf\u7ba1\u7406\u5458\u7ec4 \u7ec4\u4ef6\u5185\u4f7f\u7528checkbox json \u7ec4\u4ef6\u5185\u4f7f\u7528input var mainnew vue el row data components formedit template formedit data", "num": "2298", "d": "2/2016"}, {"title": "window child objects return undefined using nwjs", "body": "begun using nwjs alongside vuejs project attempting declare vue via node method found three issues relating objects guessing relates specifically nwjs perhaps also projects well object references vuecommonjs file need prefixed example failure result undefined error like teevio mentioned forum post would seem nwjs makes variables available explicitly via object could nwjs provides object wrapper dom object see", "num": "2297", "d": "2/2016"}, {"title": "von clickself event work", "body": "von clickself event work", "num": "2296", "d": "2/2016"}, {"title": "appendto \u662f\u5426\u53ef\u4ee5\u66f4\u65b0 vm\u7236\u5b50\u5173\u7cfb", "body": "parent children", "num": "2295", "d": "2/2016"}, {"title": "checkbox\u7ed1\u5b9a\u591a\u4e2a\u52fe\u9009\u6846\u65f6\u4f7f\u7528\u4e0d\u7075\u6d3b", "body": "jack john mike \u4f46\u662f\u5f88\u591abootstrap\u63d2\u4ef6\u548cjquery\u63d2\u4ef6\u4fee\u9970checkbox\u662f\u8fd9\u6837\u5199\u7684 \u540c\u6837\u95ee\u9898\u5bf9\u4e8eradio\u4e5f\u5b58\u5728", "num": "2294", "d": "2/2016"}, {"title": "vshow pass element", "body": "hello vuejs really great thanks came across problem maybe something wrong find information docs google simple html markup html keyword car mouse computer full name data json js try achieve make input field accept search query li innerhtml contain needed string make element invisible problem consolelog e return maybe something wrong thank", "num": "2293", "d": "2/2016"}, {"title": "dynamic scrolling grid", "body": "anyone aware dynamic scrolling grid ie load server x number results scrolled general full featured grid example website", "num": "2292", "d": "2/2016"}, {"title": "uncaught syntaxerror invalid regular expression", "body": "using chrome extension get following problem fixed using regular assuming poorly minified code uncaught syntaxerror invalid regular expression \u00eb \u0161\u00e0 \u00e0\u00aa \u00e0 \u00e0 \u0153\u00e0 \u00e1\u0153 \u0161\u00e2 \u00e2 \u00aa\u00e2 \u0153\u00ea \u00ea\u017e \u0192\u00ea \u0161\u00ea \u0153\u00ea \u00ea \u00aa\u00ea range order character class", "num": "2291", "d": "2/2016"}, {"title": "unwatch keypath specification", "body": "possible unwatch specific key words exclude property deep watch thank", "num": "2289", "d": "2/2016"}, {"title": "element generated slot update contents dynamically", "body": "read api nt see anything said work parent component following template child component following template available renders case may null resulting rendering navbar later set options render properly however set later updated change pass onto understand slot component based api yet mention content slot change generated make mistake somewhere", "num": "2288", "d": "2/2016"}, {"title": "transition hooks call context right", "body": "apply transition component nt fragment transition hooks resolved call contexts point component example following ca nt get props wanted animate pointing instance instance missed something nt know context bound really want access props access html export default name comp transitions tran enter el done want access props comp points inner instance", "num": "2287", "d": "2/2016"}, {"title": "", "body": "", "num": "2286", "d": "2/2016"}, {"title": "convert string css using vbind", "body": "string inline styles db column using vue would output value style tag server side like trying move vue moment use php play around string break apart properties values array json encode parse assign js object use vbind way pass string css vbind break apart string instead object think would nice feature already available cheers", "num": "2285", "d": "2/2016"}, {"title": "v", "body": "", "num": "2284", "d": "2/2016"}, {"title": "slot table tag colgroup tbody", "body": "want create table component distribute styling columns tags let use component override content rendered use vuejs dose work colgroup table body content slot seem replace user content simple code jsfiddle sure proper way better solution thanks", "num": "2283", "d": "2/2016"}, {"title": "invalid prop type check failed", "body": "html javascript var mycomponent vueextend template title number props title string number number vuecomponent mycomponent mycomponent new vue el example got title missing demo", "num": "2282", "d": "2/2016"}, {"title": "attribute complex expression", "body": "hello sorry maybe already answer somewhere nt know search version syntax possible write attribute value like way new syntax", "num": "2281", "d": "2/2016"}, {"title": "class\u6307\u4ee4\u9700\u8981\u4f18\u5316", "body": "srcdirectivesinternalclassjs javascript handleobject value thiscleanup value var keys thisprevkeys objectkeys value var l keyslength lt l var key keys value key addclass thisel key else removeclass thisel key handlearray value thiscleanup value var l valuelength lt l value addclass thisel value thisprevkeys valueslice \u53e6\u5916handleobject \u548c handlearray", "num": "2280", "d": "2/2016"}, {"title": "limit number checked checkboxes", "body": "trying limit number checkboxes selected one model giving really hard time run ideas tried create custom directive nt seem get triggered checkbox change could please advice best approach vuedirective five function value consolelog thisel new vue el app data providers selectedproviders computed limitreached function thisselectedproviderslength gt return true return false thanks", "num": "2279", "d": "2/2016"}, {"title": "array dynamic prop", "body": "trying pass array dynamic prop prop passed undefined instead actual array small fiddle showing issue", "num": "2278", "d": "2/2016"}, {"title": "", "body": "", "num": "2277", "d": "2/2016"}, {"title": "immediate flag watch breaks unwatching", "body": "repro", "num": "2276", "d": "2/2016"}, {"title": "\u83b7\u53d6\u5230 children\u6570\u7ec4\u4e71\u5e8f", "body": "\u7236\u7ec4\u4ef6\u901a\u8fc7 children\u83b7\u5f97\u7684\u5b50\u7ec4\u4ef6\u6570\u7ec4\u4e71\u5e8f", "num": "2275", "d": "2/2016"}, {"body": "could probably beforecompile event fired element goes vue compilation", "d": "2/2016"}, {"body": "figured mixins nt children component strictly speaking produce desired behaviour change dispatch emit everything works expected", "d": "2/2016"}, {"body": "referring yes seems usage wrong nt use property initializers work", "d": "2/2016"}, {"body": "first sorry possible misunderstandings part really trying understand core fantastic library walking edge regarding knowledge js yes referring main inspiration tight typescript classes really coupling understand using provide reactive data resolved el constructing class result extend instance understand saying means extended vue class ca nt hold data given initializing original given options parameter case point may subject change could somehow call original constructor chain would able initialize instance property chain would cause provide possible overwrite values given call class instance would behave almost normally possible vueextend instance really prototype extension real class extension classic sense hope make sense easy explain", "d": "2/2016"}, {"body": "never called actually using raw class treat something holds meta data passed creates actual sub class guess right classic class extension personally recommend trying bend fit classic class extension semantics vue components classes", "d": "2/2016"}, {"body": "ok thanks try bend brain fact thanks clearing", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "undefined null", "d": "2/2016"}, {"body": "ie support inside elements like may want read post", "d": "2/2016"}, {"body": "yes see silly question template located inside tag thought content parsed browser vue compile insert target element wrong thanks", "d": "2/2016"}, {"body": "vue renders template real html compiling html restrictions apply vue templates matter define", "d": "2/2016"}, {"body": "likely parent contains another component root try following template parent", "d": "2/2016"}, {"body": "expacted please read fragment instance docs carefully", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "think using specific use case probably wrong filterby primarily used string inclusion filtering item price like show free list case probably better use two custom filters case suggestion adding keyword really would like avoid making array filter syntax complex fact today encourage users use computed properties whenever possible instead using array filters computed properties give full power javascript whatever want gives cached variable easily get length filtered result case could two computed properties also makes template expressive", "d": "2/2016"}, {"body": "accepted thanks explanation", "d": "2/2016"}, {"body": "oh saw issue know problem proper implement sorry", "d": "2/2016"}, {"body": "actually", "d": "2/2016"}, {"body": "oh smile xie xie", "d": "2/2016"}, {"body": "problem return array nested return array arrays nt seem useful think better describe exact scenario led want feature trying achieve", "d": "2/2016"}, {"body": "actually raised question gitter later realized tackling problem wrong way idea create directive slidetoggle element would bounded element toggled could check visible basically fiddle directive would inside", "d": "2/2016"}, {"body": "messed around bit think understand situation lot better impression held elements component appears get root component helped understand", "d": "2/2016"}, {"body": "note used router yet looks correct indexcomponent initialised kicks sub component null route active kicks set message watcher kicks might wrong way vue batches updates nt believe order see console messages reflects way data batched processed", "d": "2/2016"}, {"body": "router hook fired first hook change subcomponent gets prop old value finally subcomponent updated newest value starting think related vuerouter expected router hooks process component lifecycle hooks", "d": "2/2016"}, {"body": "prop propagation also async using internal batcher queue child called synchronously parent prop nt propagated yet think probably mention doc", "d": "2/2016"}, {"body": "hmm one solution would use anything else could advice", "d": "2/2016"}, {"body": "similar waiting dom updates child hook", "d": "2/2016"}, {"body": "interesting works thanks", "d": "2/2016"}, {"body": "design pass key option thing applies method takes path first parameter", "d": "2/2016"}, {"body": "feels less verbose nest many objects", "d": "2/2016"}, {"body": "think using nested objects declare watch path abusing language syntax note keeping options consistent imperative api azamatsharapov mentioned also keypath handle cases nested objects ca nt eg", "d": "2/2016"}, {"body": "btw evan couple times problem setting paths containing key specifically using worked around maybe good solution thought maybe escaping dot possible path", "d": "2/2016"}, {"body": "alright thank explaining really helped", "d": "2/2016"}, {"body": "azamatsharapov open separate issue", "d": "2/2016"}, {"body": "sure try make repro open", "d": "2/2016"}, {"body": "fyi fiddle blank", "d": "2/2016"}, {"body": "thanks matmoo updated link", "d": "2/2016"}, {"body": "seems better skip observing entire object saw comment nonreactive object converted passed prop maybe need way explicitly declare nonreactive properties vm instance", "d": "2/2016"}, {"body": "agree would good feature think separate fix fixes objects want reactive nonconfigurable properties think way solve nonreactive object suggestion would never observe objects frozen eg tested", "d": "2/2016"}, {"body": "maybe need way explicitly declare nonreactive properties vm instance yes please", "d": "2/2016"}, {"body": "saul makes sense let work fix hand vue already skips observing objects extensible user may objects observed mutable maybe new option like basically simply attaches property instance without converting addition probably add private marker object extensible object passed prop nt get converted", "d": "2/2016"}, {"body": "clarity nonreactivedata becomes opposite data maybe could reactivedata pseudo name data", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "param \u505a\u6210", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "make sure use vuehtmlloader instead htmlloader also please open issues corresponding repos", "d": "2/2016"}, {"body": "thank use vuehtmlloader solvedps hope add tip vueorg website", "d": "2/2016"}, {"body": "related", "d": "2/2016"}, {"body": "closing favor", "d": "2/2016"}, {"body": "updating two way filters user typing results awkward ux trust bad idea also way worked old version vue hard get behavior right example reposition cursor text changed filter modify input arbitrarily typing experience would worse time make update fly want please use party library specifically designed", "d": "2/2016"}, {"body": "mentioned docs use triple braces data bindings ignored need add script tags template although convinced inline script execute seems really bad idea", "d": "2/2016"}, {"body": "thanks simplesmiler also works great", "d": "2/2016"}, {"body": "param converts user input numbers saving data object javascript nt restrict user input removed special attribute provided vuejs want physically restrict user input use native html attribute", "d": "2/2016"}, {"body": "apologies wasnt clear enough know doesnt restrict user actually input input wasnt converted numbers saving data vue instance would keep string characters value result errors trying math", "d": "2/2016"}, {"body": "well converts input number input parsed valid number saved asis", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "thank comment get error uncaught typeerror exptrim function parseexpression vue set", "d": "2/2016"}, {"body": "show used best make repro jsfiddle somewhere else", "d": "2/2016"}, {"body": "think way way thissomeobject objectassign thissomeobject b used way instead jqueryextend true nodeattr thanks", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "jsbin seems working intended", "d": "2/2016"}, {"body": "nt understand wrongly mean think situation acceptable dynamicbindprop trigger watch component", "d": "2/2016"}, {"body": "jsbin triggering watcher component", "d": "2/2016"}, {"body": "write vmarr", "d": "2/2016"}, {"body": "expecting watcher fire component initialization case expectation wrong watchers fire existing value changed working intended", "d": "2/2016"}, {"body": "value set propbind ok could tell good method handle situation want something related bindprop component updated", "d": "2/2016"}, {"body": "understanding props work bit need something prop component init components lifecycle hooks tue feb pm \u8ffd\u968f notifications githubcom wrote value set propbind ok could tell good method handle situation want something related bindprop component updated reply email directly view github", "d": "2/2016"}, {"body": "want related prop ca nt life cycle hook wed feb evan notifications githubcom wrote understanding props work bit need something prop component init components lifecycle hooks tue feb pm \u8ffd\u968f notifications githubcom wrote value set propbind ok could tell good method handle situation want something related bindprop component updated reply email directly view github reply email directly view github \u8ffd\u968f", "d": "2/2016"}, {"body": "prop set update wed feb yf z gmailcom wrote want related prop ca nt life cycle hook wed feb evan notifications githubcom wrote understanding props work bit need something prop component init components lifecycle hooks tue feb pm \u8ffd\u968f notifications githubcom wrote value set propbind ok could tell good method handle situation want something related bindprop component updated reply email directly view github reply email directly view github \u8ffd\u968f \u8ffd\u968f", "d": "2/2016"}, {"body": "ok realize another way ready hook handle prop value set watch handle set wed feb yf z gmailcom wrote prop set update wed feb yf z gmailcom wrote want related prop ca nt life cycle hook wed feb evan notifications githubcom wrote understanding props work bit need something prop component init components lifecycle hooks tue feb pm \u8ffd\u968f notifications githubcom wrote value set propbind ok could tell good method handle situation want something related bindprop component updated reply email directly view github reply email directly view github \u8ffd\u968f \u8ffd\u968f \u8ffd\u968f", "d": "2/2016"}, {"body": "could create custom directive use instance properties get thing really make right override directive edit override show directive html directive test", "d": "2/2016"}, {"body": "weotch different use case", "d": "2/2016"}, {"body": "probably better create custom directive like unfortunately internal transition api exposed moment next release able achieve want using function exposed", "d": "2/2016"}, {"body": "vuchl thanks input nt believe solution would trigger transitions like normal simplesmiler would equivalent use case nt think custom directive would work would nt able communicate transition system enter leave cool know new api thanks", "d": "2/2016"}, {"body": "weotch changing opacity want simple class toggle css transitions instead using", "d": "2/2016"}, {"body": "unfortunately internal transition api exposed moment ha got long ago solution edit case needed toggle like great evan decided expose transition api handy", "d": "2/2016"}, {"body": "trigger events self using emit dispatch event propagates upward along parent chain using dispatch broadcast event propagates downward descendants using broadcast strange behavior actually component getting event work around calling code inside self event", "d": "2/2016"}, {"body": "still believe broadcast behave like dispatch also trigger event might global events want fire caught component well child components sure emit manually point extra work nt need happen", "d": "2/2016"}, {"body": "yeah makes sense although introducing moment would breaking change maybe could considered fix", "d": "2/2016"}, {"body": "yeah understand would break lot code unfortunate sure recommend assuming would part major release implications probably nt want people upgrade minor version code break thanks looking though", "d": "2/2016"}, {"body": "yeah going close since simple workaround changing may cause breakage probably ship enough breaking changes queued major release", "d": "2/2016"}, {"body": "works thanks", "d": "2/2016"}, {"body": "clcik buttons firefox esr emits buttons", "d": "2/2016"}, {"body": "vuchl use chrome", "d": "2/2016"}, {"body": "tested chrome works chrome seems en par ff en en par chrome", "d": "2/2016"}, {"body": "using latest chrome closing since reproduce latest chrome stable", "d": "2/2016"}, {"body": "also meet problem new version vue solve question also event object nt attribute currenttarget relatedtarget", "d": "2/2016"}, {"body": "normal pjax replaces dom elements depends version use pjax pjaxstandalone amp even listeners vue bunch references dom objects way binding tried year ago amp made prototype basically best solution afaik using jquery detach biggest issue face next dealing memory leaks could use vue router alternative would use iframes insure dom refreshed amp object attached amp get dom ready", "d": "2/2016"}, {"body": "make minimal reproduction demonstrates issue ca nt really tell wrong looking code snippets", "d": "2/2016"}, {"body": "normal directives params", "d": "2/2016"}, {"body": "simplesmiler params work well either elementdirective trouble inner content interpolation", "d": "2/2016"}, {"body": "meant following", "d": "2/2016"}, {"body": "simplesmiler see think good enough us thank", "d": "2/2016"}, {"body": "also obvious question put click handler tab click handler fires contents tab actually toggled visible semantic ui functional workaround inelegant", "d": "2/2016"}, {"body": "tried vuejs broadcast mechanism parent class change broadcast custom event children child listen event act accordingly", "d": "2/2016"}, {"body": "parent nt controlling css cssjs ui framework", "d": "2/2016"}, {"body": "rely ui framework emit event execute callback case semantic ui tabs would modules gt tab gt setting section callbacks", "d": "2/2016"}, {"body": "know spent minutes searching online docs looking events came empty apparently blind settings tab hero", "d": "2/2016"}, {"body": "closing question", "d": "2/2016"}, {"body": "please reopen provide reproduction least code actually initiating vue pjax", "d": "2/2016"}, {"body": "html element bit higher dom html style height backgroundimage url filepublicurl gt filename private public javascript javascript document ready pjax end function uploadvue new vue el uploadtool reopen issue", "d": "2/2016"}, {"body": "nt think understand issue give better example", "d": "2/2016"}, {"body": "also please open issue vuerouter repo instead", "d": "2/2016"}, {"body": "thanks rune looks good amp interesting stuff first thought one component per vue file best method sure way multiple components one file neat see related components one file good opposite lead many extra small files loving simplicity added experienced js guy also done router amp theming look good btw pagehtml unused right interested know would perform large app", "d": "2/2016"}, {"body": "cool something mind great prototyping small applications ideally love see support standard files outlined excluding preprocessors way reuse files later want transition webpackbrowserify based setup going close since nt seem like issue feel free share forum show amp tell section", "d": "2/2016"}, {"body": "object literals easier clear classes applying black magic however webpack transform could great way handle", "d": "2/2016"}, {"body": "know fact vue would programmed suggests would win lot backend developer hearts including mine though love vue anyway lol scott", "d": "2/2016"}, {"body": "opinion classes offer practical advantages plain object definitions except syntax preferences really like classes use", "d": "2/2016"}, {"body": "bet beer classes become norm time goes wink scott", "d": "2/2016"}, {"body": "smolinari tools allow write components class nt think ever change vue default api use classes", "d": "2/2016"}, {"body": "extracted vue demo push github download run install requirements libsass may needed run open debug", "d": "2/2016"}, {"body": "believe issue", "d": "2/2016"}, {"body": "works thank", "d": "2/2016"}, {"body": "hi trying vuejs found issue read code jsfiddle works right include tags tr td inside tbody like also works fine including id inside table tag solve issue could please share workaround best regards", "d": "2/2016"}, {"body": "maybe look", "d": "2/2016"}, {"body": "markup invalid table elememts strict rules appear inside", "d": "2/2016"}, {"body": "angelnuernberg thx figured putting wrapping like think solution may also work try later thanks hanai thanks new vuejs today tried search tbody issues failed thanks yyx find strict rules vuejs manual maybe add manual p", "d": "2/2016"}, {"body": "liupangzi html works really vue", "d": "2/2016"}, {"body": "\u8bf7\u7528\u4e2d\u6587\u5728\u8bba\u575b\u63d0\u95ee\u5427", "d": "2/2016"}, {"body": "since breaking change go major release closing keeping breaking changes backlog", "d": "2/2016"}, {"body": "oh sorry stupid bug thank amazing library", "d": "2/2016"}, {"body": "nt know easily implemented vue support feature knowing nt yet supported mobile devices", "d": "2/2016"}, {"body": "note fix handles expression getter generation would still work browsers support template strings natively", "d": "2/2016"}, {"body": "chances use index retrieve item original array case might well pass item instead index still need index use", "d": "2/2016"}, {"body": "used visual display simplesmiler suggested need original item pass item directly instead", "d": "2/2016"}, {"body": "nt achievable computed property", "d": "2/2016"}, {"body": "could generate vfor string computed property would still limited string based api features would like see existing vfor internals exposed extensible collections api could provide extension mechanism string vfor api command arg arg maps vuecollection command function arg arg feels like value making vfor string format extensible min", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "mean js var filterby vuefilter filterby component definition computed filteredlocations return filterby thislocations thisfilter state city slice full power javascript also limited built filters write whatever filtering function want", "d": "2/2016"}, {"body": "ok well actually maybe wow better response paradigm error limiting computed use primitives really never thought using arrays objects mental model reactive parts vue spreadsheet data raw data values entered cell computed calculated values depend cells problem spreadsheet paradigm cells rarely contain complex data types vfor string expression delimited calls builtin filters extensible adding filters via vuefilter name function computed properties return complex types results cached dependent values change create new filters manipulate arraysobjects use full js needed see closed thanks evan elegant", "d": "2/2016"}, {"body": "transition considered finished first event fired vue predict many need transition multiple properties complex timing use css animations instead", "d": "2/2016"}, {"body": "wow fast thanks lot", "d": "2/2016"}, {"body": "filter applied directive uses modifier however could always check eventdefaultprevented", "d": "2/2016"}, {"body": "say elements overlapping click modifier ca nt sort one got click first true calls think makes sense switch would false first true second call", "d": "2/2016"}, {"body": "eventtarget tell dom node dispatched event", "d": "2/2016"}, {"body": "say elements overlapping click top without modifier ca nt sort got event second", "d": "2/2016"}, {"body": "paulpflug opposed change suggestion order handlers hypothetical third scenario nt matter would one care element prevented default event still propagate handlers guess mean say curious problem domain", "d": "2/2016"}, {"body": "read article belief good way event management obviously nt work way around issue nt important simply nt use modifier manually code instead", "d": "2/2016"}, {"body": "close since nt seem need fix", "d": "2/2016"}, {"body": "html", "d": "2/2016"}, {"body": "hanai", "d": "2/2016"}, {"body": "\u5c1d\u8bd5\u4f7f\u7528\u8c10\u97f3 google translate", "d": "2/2016"}, {"body": "matmoo", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "\u76f4\u63a5\u8fd9\u6837\u5c31\u597d\u4e86 computed", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "matmoo one best mentor ever found", "d": "2/2016"}, {"body": "\u5927\u81f4\u8fd9\u6837 vbind style background url listcover", "d": "2/2016"}, {"body": "hanai \u5982\u679c\u6211\u8fd9\u91cc\u7684\u80cc\u666f\u56fe\u662f\u7c7b\u4f3c\u4e8e", "d": "2/2016"}, {"body": "hanai \u4ee3\u7801\u5982\u4e0b", "d": "2/2016"}, {"body": "\u53ea\u6709 \u5f53\u7136\u62a5\u9519", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted forum stackoverflow thanks", "d": "2/2016"}, {"body": "hi posted forums well received answer sorry regards david feb evan notifications githubcom wrote hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted forum stackoverflow thanks reply email directly view github", "d": "2/2016"}, {"body": "curious library also uses global", "d": "2/2016"}, {"body": "lol", "d": "2/2016"}, {"body": "case version vue loading vue number websites although none ever used vue yet optimistic might become much popular future feature would minimize risk overwriting older newer extended version vue already used website", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "elaborate case use vue lightweight makes sense widget building run lot different sites sites probably nt use vue rather avoid potential version conflicts could", "d": "2/2016"}, {"body": "think using bundling mechanism like webpack browserify nt even issue vue nt add add", "d": "2/2016"}, {"body": "sirlancelot exactly wanted say smile", "d": "2/2016"}, {"body": "sirlancelot nt noticed place use browserify et al simply defining moduleexports inclusion trick", "d": "2/2016"}, {"body": "actually using changes stopped working somehow", "d": "2/2016"}, {"body": "well seems trying bind parent see fiddle", "d": "2/2016"}, {"body": "actually variable named ca nt see ending well", "d": "2/2016"}, {"body": "true true problem sure design passing within vfor tag cause error thrown simply changing vif tag non tag throw error", "d": "2/2016"}, {"body": "template incorrect html slotname outer div enclosed", "d": "2/2016"}, {"body": "forgot copy ending div tag edited op include ending div tag thanks", "d": "2/2016"}, {"body": "ca nt paragraph tags nested like could browser handling funny", "d": "2/2016"}, {"body": "really realize thanks crswll", "d": "2/2016"}, {"body": "would need pass like", "d": "2/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted forum stackoverflow thanks", "d": "2/2016"}, {"body": "use custom filter record length filtered result", "d": "2/2016"}, {"body": "thanks answer yeah sure already used couple times think good idea implement", "d": "2/2016"}, {"body": "getters setters avoid much generation getset need models painful api like modelset foo foovalue considered implement data adaptors magic false flag like ractivejs", "d": "2/2016"}, {"body": "much many properties reactive type data looking personally never seen gettersetters becoming perf bottleneck details would help", "d": "2/2016"}, {"body": "worse scenario around items presented map dom dom use paging show little possible item contains around properties nested objects gives us around objects perf bottleneck objects created perf tool points objectdefineproperty intensive function especially right properties reactive changing define properties nt wrapped getset", "d": "2/2016"}, {"body": "hmm maybe could property whitelistblacklist feature special scenarios like although another possible approach make data reactive upfront keep pristine initial load feed vue instances needed", "d": "2/2016"}, {"body": "could give us short explanation example data feeding could work smile scott", "d": "2/2016"}, {"body": "smolinari vue converts data reactive set vue instance js var vm new vue data items var items still nonreactive vmitems itemsfilter item gt itema gt second object becomes reactive idea initialize instance empty array keep full data array unobserved pagination change get filtered copy items display set instance causes vue convert way objects converted needed instead huge conversion cost upfront", "d": "2/2016"}, {"body": "thanks explanation evan makes perfect sense especially novice js programmer actually reread reactivity depth makes lot sense would consider another example add docs reactivity depth like give go scott", "d": "2/2016"}, {"body": "performance issue approach mvvm architecture please forgive wall text like describe situation story behind conversation company work fairly large highly customizable suite products share common code strive achieve consistency look feel promote code reuse define clear architecture allow multiple teams work effectively minimum side effects apps consist multiple modules written using interpretation patterns largescale javascript application architecture inside modules follow mvvm approach would like consistent would like developers able switch modules feel comfortable see much love vue would like benefit observable collections computed properties custom model events without relying vue presence extracting observable model separate layer independent vue enables us share paterns across modules modules nt use vue current solution folows classes support us benefits interactive models computed properties watching changes etc model enters vue realm call method returns proxy carrying synchronization logic change prop model vue model updated computed propery model changes vue equivalent updated obviously works way result vue instances nt computed properties watches etc simple methods emitting events handled outside works really well performance impact meaningful visualising large data sets method returns object later augmented vue observed us synchronize changes think would feasible define api required vue able plug existing implementations observable model default adapter provided vue would augment plain object exactly adapter augmentation would necessary vue could use observe update underlying model see value approach think complicated", "d": "2/2016"}, {"body": "would better forum turns nt possible bug post suggestion issue scott", "d": "2/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted forum stackoverflow thanks", "d": "2/2016"}, {"body": "hello evan mean one knows already asked even could seems like possibility twoway filter updating fly keypress vue sure way implement functionality via part plugins like use pure vue convenient guess vue enough power kinda stuff least wish code works fine input blur like attr please pay time one thank", "d": "2/2016"}, {"body": "default value used prop present template value passed even overwrite default use case use function instead", "d": "2/2016"}, {"body": "set mind straight use case method property defined missing use case method property defined value undefined falsy thanks time", "d": "2/2016"}, {"body": "coerce simply hook allows child component cast value set matter value falsy", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "thought might end different versions vue think go thank smile", "d": "2/2016"}, {"body": "use webpack refer version script instead creating new require", "d": "2/2016"}, {"body": "think one necessarily assume add component dependency another vue dependency think load instead", "d": "2/2016"}, {"body": "ok real problem vue statically linked example cdn ca nt get atop vue additionally installed dep wo nt even notice points another instance produce wired behavior eg nt working furthermore would allow component developers get rid", "d": "2/2016"}, {"body": "vue statically linked example cdn ca nt get require vue obviously already case", "d": "2/2016"}, {"body": "would reliable way would still add vue webpack bundle without necessity error vue installed", "d": "2/2016"}, {"body": "use different packaging strategies targeting different usage distributing npmbased bundler usage eg webpack browserify need precompile let user import file directly distributing use without build tools eg global vue cdn need wrap whole thing plugin vue passed via assume vue available globally", "d": "2/2016"}, {"body": "case would target statical linking component would distribute versions vue statically linked component statically linked vueuse windowvue vue statically linked component webpack controlled require windowvue vue webpack controlled component statically linked require vue use webpack controlled require", "d": "2/2016"}, {"body": "use really would appreciate cleaner solution", "d": "2/2016"}, {"body": "actually next version vuerouter probably use different api uses plain vue instance root together vuex look like", "d": "2/2016"}, {"body": "line actually removes element class removed element removed sure bug possible please provide repro", "d": "2/2016"}, {"body": "il try record video happens randomly provide simplified repro monday saw think bug ie removing class layout refreshed reason removing element dom", "d": "2/2016"}, {"body": "managed capture flicker video happening ie mobile update windows phone simplified repro really seem like ie bug delaying cleanup phase seems work around appropriate guards case elements removed", "d": "2/2016"}, {"body": "really seem like ie bug surprise scott", "d": "2/2016"}, {"body": "sztrzask moving removeclass thisel next tick seems resolve flickering using vue nexttick settimeout", "d": "2/2016"}, {"body": "vue nexttick guard checking element still exists next tick", "d": "2/2016"}, {"body": "sztrzask reason existence guard check necessary thinking whether adding nexttick leavedone would make work", "d": "2/2016"}, {"body": "moment consideration belive necessary", "d": "2/2016"}, {"body": "ok found simpler solution add transitioned element ensures animation ending state stays even class removed nt require vue change behavior cater ie bug", "d": "2/2016"}, {"body": "another take named slot wrapped another component content slot also gets inserted unnamed slot", "d": "2/2016"}, {"body": "looking", "d": "2/2016"}, {"body": "returns exactly", "d": "2/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted forum stackoverflow thanks", "d": "2/2016"}, {"body": "ok agreed", "d": "2/2016"}, {"body": "need deep watcher", "d": "2/2016"}, {"body": "often want write way see difference components tags", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "make sense normalize event names lowercase yes makes sense makes code readable always keep event names lowercase separate dash instead camelcase think adding warning camelcase event names would also good", "d": "2/2016"}, {"body": "means vuejs moving away html spec pursing similar approach like angular", "d": "2/2016"}, {"body": "performance concern", "d": "2/2016"}, {"body": "couple thoughts potential concerns long backwards compatibility exists cool whatever ultimately decided probably continuing using kebab case method lack distinction camelcase lower camelcase could confusing generally speaking would refer class would refer nonclass variable nt think would issue would nt want creating classes named components would agree creating two unique events distinguished case would poor programming biggest concern introducing weird inconsistencies people code example valid identical", "d": "2/2016"}, {"body": "keep kebabcase markup camel case code part html spec ignoring case greater learning curve coming frameworks already learned standard", "d": "2/2016"}, {"body": "agree teevio consistency lost html uses kebabcase amp accepted community standard ecmascript camelcase language keep separate instead hiding react way get react render custom attribute via data amp aria enforces consistency explaining say via mdn link even camelcase lt kebabcase beginner greatly help beginner html understanding", "d": "2/2016"}, {"body": "agree evan readability code consistency important", "d": "2/2016"}, {"body": "look really weird camelcase inside html html html js js", "d": "2/2016"}, {"body": "current version fine", "d": "2/2016"}, {"body": "using vue months still gets everytime big deal warning vue good know fully understand idea support", "d": "2/2016"}, {"body": "backwards compatibility", "d": "2/2016"}, {"body": "agreed need keep backwards compatibility make sense normalize event names lowercase agree azamatsharapov", "d": "2/2016"}, {"body": "teevio vue components roughly classes multiple valid syntax issue already exists work html simply throws away case information much different proposed feature like style arguments picking style stick moeszyslak jonagoldman others concerns moving away html standard totally valid write camelcase tagsattributes html tagattribute name matching performed caseinsensitive manner spec says documents html syntax tag names html elements may written mix lowercase uppercase letters caseinsensitive match names elements given html elements section document tag names caseinsensitive attribute names html elements may written mix lowercase uppercase letters caseinsensitive match names attributes given html elements section document attribute names caseinsensitive using pascalcasecamelcase improves code consistencyreadability totally speccompliant may everyone prefer kebabcase keep using particular different angular angular making templates casesensitive introducing customized html parser contrary vue actually follows spec making js counterparts caseinsensitive", "d": "2/2016"}, {"body": "prefer keeping kebab html like idea consistency like idea spec compliance found camelcase tag html caseinsensitive use instead vue automatically match components defined camelcase ids javascript warning already pretty concise component registration works said others mentioned think allowing camelcase html great long still option continue writing kebab", "d": "2/2016"}, {"body": "yah agreed trying think many arguments could honestly nt would stick like mentioned end day arguing stylistic choices personally think long stick already option use new stuff forced cool changes mentioned", "d": "2/2016"}, {"body": "kebabcase still works using camelcase pascalcase option nt break bc use ca nt addition nt change forces something different new option thing could say suggest make sure option well documented good work always evan scott", "d": "2/2016"}, {"body": "maybe make option warning ignoring say component refer html personally would prefer warning like props course think lateronreadabilty important thing working first try also stumbled upon kebabcasecamelcase problems real problem got warnings wrong default could warning works irrelevant also warnings visible debug mode think", "d": "2/2016"}, {"body": "things like vs vs imagine quite rare occurrences though", "d": "2/2016"}, {"body": "simplesmiler kebab case props would still matched casesensitivity using old rules", "d": "2/2016"}, {"body": "nt promote transparency web standards custom elements spec states names contain hypen simplesmiler said would execute code would especially nasty implementation events html case insensitive lets introduce idea casing library implementation would promote casing html opinion bad idea also use hypen separation file names remove well start adding casing lastly hypen amp casing system coexist promotes different coding styles new developers team prefer paulpflug approach proper warnings area would help lot", "d": "2/2016"}, {"body": "fan making html pascalcamel case breaks web standards know nice keep consistency trying make things tiniest bit consistent add another layer complexity may also enticing bad practices library promote staying standards mislead developers one day may work place using vue resulting understanding html parsed differently totally agree paulpflug adding warning means less work production code puts developers back track writing valid code", "d": "2/2016"}, {"body": "good argument case nt implemented commonly highlighted reason people dislike angular agree totally keeping libraries conforming standards drafted html case sensitive thrown many issues opening situations much flexibility", "d": "2/2016"}, {"body": "blakenewman regarding think already talk previous comment", "d": "2/2016"}, {"body": "comment sums pretty well evan proposing changing html spec proposing changing vue locates component names rather convert kebab camel finding matching component would probably strip dashes accommodate kebab search components case sensitivity html continue spec compliant also would allow us use whatever case want seems like evil bad choice", "d": "2/2016"}, {"body": "plan style promoted style ie docs examples written like option kebabcase style remain primary one", "d": "2/2016"}, {"body": "blakenewman read comment conform standard paulpflug guidobouman already warnings camelcase tags attributes using latest versions however camelcase checks must performed compile time runtime case information would already lost due html parser behavior using vue without wo nt ca nt warnings", "d": "2/2016"}, {"body": "spec blakenewman linked web components state custom element type identifies custom element interface sequence characters must match ncname production must contain hyphenminus character must contain uppercase ascii letters sure relates vue components docs say try loosely follow web components standard may noticed vuejs components similar custom elements part web components spec fact vuejs component syntax loosely modeled spec say spec needs change first order allow camelcase pascalcase scott", "d": "2/2016"}, {"body": "smolinari vue docs say loosely modeled strictly mind leaves room change", "d": "2/2016"}, {"body": "case information may lost could still warning wrote mycomponent template parsed expected vue debug mode look besides warn wrong usage lost case information nt matter could option suppress warning match directly instead equals suggested behavior", "d": "2/2016"}, {"body": "migrating camelcasepascalcase would somewhat jarring see jslike syntax html reason stand jsx paulpflug suggestion problem onboarding beginners issue warning informs user problem", "d": "2/2016"}, {"body": "paulpflug sound like valid idea", "d": "2/2016"}, {"body": "agree warning says feels better silent substitution", "d": "2/2016"}, {"body": "possible global option api eg default", "d": "2/2016"}, {"body": "wondering ideal striving rpkilby said looks weird essentially problem exists js html different technologies use different naming systems using case kebab camel technologies shift weirdness one place another underlying problem persist believe best draw line current line e kebab case html context camlecase pascalcase js context good imo support current conventions instead looking better one ofcourse use warning help beginners", "d": "2/2016"}, {"body": "prograjkamal yeah inclined implement warning", "d": "2/2016"}, {"body": "vote adding warning scott", "d": "2/2016"}, {"body": "adding warning", "d": "2/2016"}, {"body": "warning", "d": "2/2016"}, {"body": "closed via amp", "d": "2/2016"}, {"body": "related directives respected terminal directives like normal ones copied onto inserted elements mitigated programatic access slots wrap additional element except cases work like fixed width related pretty much except specificity", "d": "2/2016"}, {"body": "seems serves purpose hook styling inserted slot content particular use case merging directives would useful general want limit component inserted content compiled inserted parent child displays nt modify", "d": "2/2016"}, {"body": "potential use case stumbled upon recently detecting changes dimensions slotted element layout purposes general detecting element enters leaves slot worked around exposing method detecting changes side guess programmatic slot api would solve think issue closed reviewed api lands", "d": "2/2016"}, {"body": "thanks please move issue vuejsvuejsorg repo instead", "d": "2/2016"}, {"body": "thanks reporting issue filter places minus symbol first quote notation require custom filter corporatefinancespecific use case", "d": "2/2016"}, {"body": "please provide actual reproduction single template snippet far enough diagnose issue", "d": "2/2016"}, {"body": "got sort issue vif use transition dom element deconstructed end finding hard create repo see create jsbin", "d": "2/2016"}, {"body": "tried replicate issue nt fail also back version ov vue behaviour either html issue something else best show screen shot well remove transition slidedown works expected sorry unable provide reproduction", "d": "2/2016"}, {"body": "also problem seems affect safari", "d": "2/2016"}, {"body": "sorry cant paste code due legal reasons try make fiddle evening think sort race condition occurs randomly like time never really jumped vue source idea could cause site switched transitions temporary fix couldnt figure wrong sure even transitions work js event like transition dom element ended calculate transition length css use timeout hiding element try tinkering transition times check making nested one transition shorter outer fix problem using vue version npm issue occurs linux google chrome", "d": "2/2016"}, {"body": "wait event applying dom operation eg setting chances related toggling fast enough transition skipped case try using something like instead closing thread since one able provide repro determine actual cause issue", "d": "2/2016"}, {"body": "ooh might chrome toggle shadow checkbox toggle checkbox remove transition rangeblur works expected whoooo sorry happy able finally reproduce", "d": "2/2016"}, {"body": "matmoo issue actually caused css rule specificity higher specificity two class selectors may want make transition thing lesssass mixin mix add transition rules", "d": "2/2016"}, {"body": "good catch thanks hopefully issues others helpful", "d": "2/2016"}, {"body": "\u5e0c\u671b\u8fd9\u4e2a\u53ef\u4ee5\u5e2e\u52a9\u5230\u4f60", "d": "2/2016"}, {"body": "\u53ef\u4ee5\u53c2\u8003\u6587\u6863\u7684 \u8fd9\u4e2a\u90e8\u5206", "d": "2/2016"}, {"body": "\u5b50\u7ec4\u4ef6\u7684", "d": "2/2016"}, {"body": "thornfieldhe zhang jing vuejsvue thornfieldhe vue \u5728\u7ec4\u4ef6\u5185\u4f7f\u7528checkbox\u7ed1\u5b9a\u591a\u4e2a\u52fe\u9009\u6846\u88ab\u5f53\u4f5c\u5355\u4e2a\u52fe\u9009\u6846\u5904\u7406 \u5e0c\u671b\u8fd9\u4e2a\u53ef\u4ee5\u5e2e\u52a9\u5230\u4f60 reply email directly view github", "d": "2/2016"}, {"body": "nt think need use nwjs", "d": "2/2016"}, {"body": "provide reproduction", "d": "2/2016"}, {"body": "html \u9996\u9875", "d": "2/2016"}, {"body": "von clickself additem event", "d": "2/2016"}, {"body": "event", "d": "2/2016"}, {"body": "nt required", "d": "2/2016"}, {"body": "reproduce example working expected make sure using latest version vue supported reopen provide actual reproduction", "d": "2/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted forum stackoverflow thanks", "d": "2/2016"}, {"body": "admin\u6a21\u677f\u4e2d\u90e8\u5206\u5185\u5bb9\u4e0d\u517c\u5bb9", "d": "2/2016"}, {"body": "event listener obviously event passed generally considered bad practice retrieving values dom js", "d": "2/2016"}, {"body": "think outside dom harness power vue filters", "d": "2/2016"}, {"body": "thank understand must load items using vue strart workingfiltering", "d": "2/2016"}, {"body": "please use issues ask general questions use gitter room forum", "d": "2/2016"}, {"body": "done proper place let people know new articletutorial vue", "d": "2/2016"}, {"body": "tweet mention vuejs wed feb pm mtyson notifications githubcom wrote done proper place let people know new articletutorial vue reply email directly view github", "d": "2/2016"}, {"body": "reproduce please specify version using downloaded", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "fixed next release", "d": "2/2016"}, {"body": "nt think makes sense unwatch watcher one one relationship want watch subpath use separate watchers", "d": "2/2016"}, {"body": "well think would easier specifying eg watchers prop nt watched thank explantion", "d": "2/2016"}, {"body": "relying single deep watcher many properties exceptions seems like sign design problems consider using computed properties watching function instead use watch absolutely", "d": "2/2016"}, {"body": "case watching changes entity attributes excluding relationships anyway thank much advice", "d": "2/2016"}, {"body": "trying nt feel right", "d": "2/2016"}, {"body": "hiendv inside", "d": "2/2016"}, {"body": "dispatch event fires request update item whenever attribute changes item updated usecase", "d": "2/2016"}, {"body": "need exclude certain paths sounds odd object supposed persisted piece data persisted alternatively", "d": "2/2016"}, {"body": "actually would refactor instead duplicating lines problem properties watchers eg relationships changes would caught twice causing unneeded update request original item whose actual attributes nt change understand totally logic happen want avoid easiest way anyway thank patience happy lunar new year", "d": "2/2016"}, {"body": "hiendv pardon interruption seems trying reinvent computed properties", "d": "2/2016"}, {"body": "simplesmiler evan said thing guess read documentation carefully enough", "d": "2/2016"}, {"body": "please provide reproduction bug actually happening also make sure read section", "d": "2/2016"}, {"body": "ok actually created jsfiddle writing scratch saw concept works expected compared code jsfiddle saw somehow accidentally put right outside doh", "d": "2/2016"}, {"body": "please provide reproduction", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "haoziluo display \u7528\u6570\u636e\u9a71\u52a8\u89c6\u56fe", "d": "2/2016"}, {"body": "\u8865\u5145\u4e00\u4e0b haoziluo \u5728 \u90fd\u4e0d\u4f1a", "d": "2/2016"}, {"body": "orderlayer\u662f\u4e0d\u662f\u6839\u672c\u4e0d\u5b58\u5728", "d": "2/2016"}, {"body": "\u91cd\u73b0\u7684\u610f\u601d\u662f\u8981\u770b\u5230 bug js orderlayer", "d": "2/2016"}, {"body": "closing inactivity please reopen follow information", "d": "2/2016"}, {"body": "please use forum ask questions know already available use custom directive", "d": "2/2016"}, {"body": "directly give string", "d": "2/2016"}, {"body": "wow nt know", "d": "2/2016"}, {"body": "oevgeny sorry nt spotted forum go future awesome saves lot headache manipulating strings cheers guys", "d": "2/2016"}, {"body": "hi please make sure read issue reporting guidelines opening new issues issue list accepts bug reports feature requests questions posted forum stackoverflow thanks", "d": "2/2016"}, {"body": "appear inside due html spec restrictions appear inside afaik also table elements like appear naked without surrounding limitation html works unfortunately work around", "d": "2/2016"}, {"body": "thanks use attribute working around", "d": "2/2016"}, {"body": "defined title data var new vue instance change title title quote title literal title", "d": "2/2016"}, {"body": "oh sob got thx", "d": "2/2016"}, {"body": "please ask questions forum depends context something like", "d": "2/2016"}, {"body": "matmoo sorry nt get case looks like description bit thanks forum link posted topic description detailed", "d": "2/2016"}, {"body": "updated original syntax still good", "d": "2/2016"}, {"body": "oh thanks thought syntax deprecated", "d": "2/2016"}, {"body": "pr", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "hi please make sure read issue reporting guidelines opening issue issue list accepts bug reports feature requests questions posted forum stackoverflow thanks", "d": "2/2016"}, {"body": "fiddle nothing described", "d": "2/2016"}, {"body": "sorry forgot update fiddle fiddle correct", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "technically bug callback called assignment complete usage also nt seem make sense basically equivalent watch", "d": "2/2016"}, {"body": "overlooked fact part see work also see example representative actual code calls conditionally nt want call defined currently following closing issue since bug probably something weird anyways", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "looks like problem laravel blade engine using template partials able get working thanks", "d": "2/2016"}, {"body": "paste new screenshot", "d": "2/2016"}, {"body": "looks like ios bug since still fixed today great job apple nothing vue fixed user code adding disabled option first one", "d": "2/2016"}, {"body": "vels suggestion list good idea", "d": "2/2016"}, {"body": "like modifier preference either suffice", "d": "2/2016"}, {"body": "requirement make window scroll nth row table rendered array supported wrote html must make tr component use get", "d": "2/2016"}, {"body": "thanks", "d": "2/2016"}, {"body": "nilssolanki requirement solve problem", "d": "2/2016"}, {"body": "read documentation nt accompanying text though nt see first last code example property called", "d": "2/2016"}, {"body": "wow great thanks btw figured way sure proper approach seems clean works", "d": "2/2016"}, {"body": "hi time please check thank much", "d": "2/2016"}, {"body": "problem think let developers decide name vref developer solve conflict vref name let see code situation use refsnested index name situation need add feature make accept variable", "d": "2/2016"}, {"body": "could nt see", "d": "2/2016"}, {"body": "seems like still fixed", "d": "2/2016"}, {"body": "plan make enterclass leaveclass dynamic example carousel slide may slide left right assign vue transition slide enter leave classes unchangeable slide either left right case need assign dynamic classes way thanks great work", "d": "2/2016"}, {"body": "create pr want focus complex stuff milestone", "d": "2/2016"}, {"body": "blakenewman would great development nt really started yet see branch created submit prs", "d": "2/2016"}, {"body": "late party simplesmiler get point think could better maintain familiarity libraries many us use every day underscore lodash etc actually lodash uses turn based alias", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "pavelpolyakov ever sort issue addchild generated component sharing data earlier created addchild trying add modal via addchild cause ca nt figure markup experiencing thing certainly appropriate way ca nt seem find frowning", "d": "2/2016"}, {"body": "ah looks like sort quite issue though seems keeps hunting telescope", "d": "2/2016"}, {"body": "found exclamation stuckouttonguewinkingeye seems passing construction options parameter vs etc magically works left posterity tophat", "d": "2/2016"}, {"body": "bigbluehat please paste rich code part nt understood solution comment would interesting check regards", "d": "2/2016"}, {"body": "pavelpolyakov think dealing different issues however basic difference js var componentdef template data function return name var app vue methods addcomponent function addchild componentdef seemed happening ever adding fully formed child component rather extended component based first parameter since nonfunctionbased component definition look identical vue nt know care mis using fixed smile", "d": "2/2016"}, {"body": "syntax seem work static elements form inputs proper way achieve still bind listeners body", "d": "2/2016"}, {"body": "fyi think still using old param", "d": "2/2016"}, {"body": "docs still mentions set", "d": "2/2016"}, {"body": "matthewcanty right depreciated", "d": "2/2016"}, {"body": "possible op wanted using see also codepen example", "d": "2/2016"}, {"body": "thank much another great feature developed vue team", "d": "2/2016"}, {"body": "change filter modifiers seems broken could exported possible add new codes like add things like function keys", "d": "2/2016"}, {"body": "whitelynx exposed next release", "d": "2/2016"}, {"body": "thanks", "d": "2/2016"}, {"body": "hello think adding typescript definition files repository current version contains definition file", "d": "2/2016"}, {"body": "possible distribute definition files separately ideally want keep separate vue written typescript available vsvsc users nice", "d": "2/2016"}, {"body": "needed separate going utilize definitelytyped copy paste files included nt download manually would like hear opinions people really wonder people hopes", "d": "2/2016"}, {"body": "definitelytyped sounds like better idea", "d": "2/2016"}, {"body": "worked typescript yrs vue yrs thoughts publish vuejs definitions definitely typed trust dts published unless wrote generate appdts specific app viewmodelapi vueify frustrating part vuejs typescript dynamic nature vuejs api viewmodel generates api runtime gettersetters alternate location methodsevents scoped viewmodel code structure typescript understand shift unless informed thus either needs remapping model api needs dts file denotes app api believe vueify generate dts file could help assert type conformance use viewmodel methodfilterstemplatesevents feels right path go vue need written typescript vue api change using typescript api babel enabling generation typescript definition file specific vue file would provide many benefits autocompletion model errors development method errors template errors see react jsxtsx thought allot hindsight contorting vue ts structures ideal today generating dts enhance vuejs use feels along path would like see ted thu feb pm evan notifications githubcom wrote definitelytyped sounds like better idea reply email directly view github", "d": "2/2016"}, {"body": "frustrating part vuejs typescript dynamic nature vuejs api thought allot hindsight contorting vue ts structures ideal today generating dts enhance vuejs use feels along path would like see insightful think pretty much nails feel missing various thirdparty dts files accompanying contortion code mixins etc whether trust libraries approach contorting vue match ts typical oo patterns may deed still fear making cornerstone big ts projects seen sort thing go wrong since started writing ts years ago using plain js large projects something get behind anymore", "d": "2/2016"}, {"body": "nt appear work still still fail trigger event", "d": "2/2016"}, {"body": "ryanmortier conflicts modifier syntax introduced use periods event names", "d": "2/2016"}, {"body": "need think reactive way shouldt need know property changed watching whole objectarray case need perform custom logic specific property change watch property", "d": "2/2016"}, {"body": "keepitreal think recommend way work around component wraps element array wrappercomponent would watch mutations something like html", "d": "2/2016"}, {"body": "dirty check using html string use vuerouter ca nt change hashurl", "d": "2/2016"}, {"body": "suppose calculate average link", "d": "2/2016"}, {"body": "request news", "d": "2/2016"}, {"body": "one let get source", "d": "2/2016"}, {"body": "", "d": "2/2016"}, {"body": "realized source editor uses codemirror let see put sample together", "d": "2/2016"}, {"body": "done", "d": "2/2016"}, {"body": "great thanks robertleeplummerjr", "d": "2/2016"}]